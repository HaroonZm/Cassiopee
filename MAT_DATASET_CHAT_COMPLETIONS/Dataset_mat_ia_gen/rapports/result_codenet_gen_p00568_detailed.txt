================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:22:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def main():
    # Lecture des dimensions de la forêt
    H, W = map(int, sys.stdin.readline().split())
    # Lecture de la matrice A représentant le nombre d'arbres sur chaque case
    A = [list(map(int, sys.stdin.readline().split())) for _ in range(H)]
    
    # La case de l'usine (1,1) est à l'indice (0,0) en 0-based indexing
    # Elle ne contient aucun arbre par hypothèse

    # On va calculer la distance minimale en nombre de pas depuis l'usine vers chaque case
    # uniquement sur les cases où il n'y a pas d'arbre (arbres = 0), car on ne peut se déplacer
    # que sur les cases sans arbres.
    # Cependant, à partir de l'énoncé, nous pouvons uniquement marcher sur des cases sans arbres.
    # Mais on doit aller couper les arbres adjacents à ces cases sans arbres.
    #
    # En fait, on peut considérer la distance minimale de l'usine aux cases vides, mais aussi trouver
    # la distance minimale entre l'usine et TOUTES les cases (qu'elles aient des arbres ou non)
    # uniquement via cases vides pour s'y rendre. Or, si une case a des arbres, on ne peut marcher dessus,
    # donc le chemin est impossible.
    #
    # La stratégie est donc de faire un BFS depuis (0,0) sur les cases sans arbres,
    # pour obtenir la distance minimale pour VOIR toutes les cases accessibles sans arbres.
    # Puis, pour couper des arbres dans une case adjacente à une case vide, il faut
    # se rendre sur une case vide adjacente.
    #
    # Pour simplifier, on peut aussi calculer la distance depuis l'usine vers toutes les cases,
    # mais en posant une distance infinie si on ne peut s'y rendre (car arbres).
    #
    # Puis, on fait la même chose depuis la destination (H-1, W-1).
    # Si ce dernier n'est pas accessible (car arbres ou pas de chemin), la réponse est -1 (impossible).
    
    # Fonction pour faire un BFS à travers les cases sans arbre, retourne une matrice de distances
    def bfs(start_i, start_j):
        dist = [[-1]*W for _ in range(H)]
        dist[start_i][start_j] = 0
        queue = deque()
        queue.append((start_i, start_j))
        while queue:
            i, j = queue.popleft()
            for di,dj in [(-1,0),(1,0),(0,-1),(0,1)]:
                ni,nj = i+di, j+dj
                if 0 <= ni < H and 0 <= nj < W:
                    if A[ni][nj] == 0 and dist[ni][nj] == -1:
                        dist[ni][nj] = dist[i][j] + 1
                        queue.append((ni,nj))
        return dist

    dist_from_start = bfs(0,0)
    dist_from_goal = bfs(H-1, W-1)

    # Si la destination (H-1, W-1) n'est pas accessible sans arbres, alors impossible d'aller de
    # l'usine au point sud-est sans couper d'arbres. Or on doit couper des arbres pour établir un chemin.
    # Mais regardons les règles : on veut que nord-ouest et sud-est soient mutuellement accessibles
    # sans arbres. Cela signifie que l'on doit couper des arbres pour ouvrir un chemin.
    # Le problème revient à calculer le temps minimal pour couper les arbres permettant
    # la connexion.
    #
    # Analyse "coût" :
    # Pour chaque case (i,j) contenant des arbres (>0):
    # - Pour couper 1 arbre, on doit :
    #   * être sur une case adjacente sans arbre (pour pouvoir couper)
    #   * couper l'arbre (1 minute)
    #   * ramener l'arbre à la case usine (1,1) en se déplaçant (distance entre case usine et coupe*2, aller et retour).
    #
    # L'énoncé précise que la coupe s'effectue à partir d'une case adjacente sans arbre.
    # Donc on doit pouvoir atteindre une case vide voisine de (i,j).
    #
    # De plus, on doit couper tous les arbres qui bloquent le passage du chemin entre nord-ouest et sud-est.
    #
    # Pour cela, on va calculer, pour chaque case (i,j) avec des arbres, le nombre minimum de déplacements
    # aller-retour depuis l'usine vers une case vide adjacente à (i,j).
    #
    # On part de l'usine, puis on va couper les arbres une par une, et pour chaque arbre:
    # coût = (distance_aller_retour depuis usine à la case vide adjacente)*nombre d'arbres + (nombre d'arbres * 1 minute pour couper chaque arbre)
    #
    # Or 1 minute pour couper 1 arbre + (distance_aller_retour) minutes pour porter chaque arbre = (distance_aller_retour + 1) minutes
    # Selon l'exemple, le temps nécessaire pour couper un arbre et le rapporter est :
    # temps = 2*distance + 1 (l'exemple le montre ?)
    #
    # Exemple donné dans l'énoncé:
    # pour (1,3) avec 2 arbres:
    # distance from usine à (1,3) est 2
    # temps = 2 * distance + 1 = 2*2 + 1 = 5 pour 1 arbre, puis ça fois 2 arbres = 10 ?
    # Mais dans l'exemple il calcule differently:
    # Exemple explique que distance entre usine et arbre est 2 (cases)
    # Le trajet est: usine -> arbre (distance) + arbre -> usine (distance), pendant que l'arbre est porté (retour)
    # Le temps pour 1 arbre est: (aller + coupe + retour) = distance + 1 + distance = 2*distance +1
    #
    # Puis pour multipliquer par nombre d'arbres, car on ne peut couper qu'un arbre à la fois, pour chaque arbre on fait la même opération.
    #
    # Donc pour un arbre:
    # temps = (2 * distance + 1)
    #
    # Pour n arbres:
    # temps = n * (2 * distance + 1)
    #
    # Mais dans l'exemple du problème, ils calculent temps pour (1,3) avec 2 arbres = 6 minutes.
    # Pourquoi ? Ils ont le trajet comme distance aller-retour = 3 minutes pour couper 1 arbre.
    # Le nombre total: 2*3 = 6.
    # Donc ils prennent temps = n * (2*distance_arbre)
    # car le temps pour couper un arbre = 1 + temps de déplacement aller-retour
    # temps de déplacement aller-retour = 2 * distance depuis 1,1
    # Ici c'est 3, donc distance c'est 1,5 ? Non
    # Par exemple: Dist annoncer: "aller vers (1,3)" = 2 pas
    # Aller-retour = 4 pas + 1 min à couper = 5 ?
    # Mais dans l'exemple ça donne 6 pour 2 arbres, donc 3 par arbre => Sans compter le temps de coupe ?

    # Lisons précisément l'exemple d'entrée 1:
    # (1,2) arbres = 1, temps = 1
    # (1,3) arbres = 2,  
    # ils avancent de 1 case depuis usine (1,1) vers (1,2) puis vers (1,3)
    # distance aller-retour = 3 minutes (ils disent) et 2 arbres => 6 minutes.
    # Ils comptent 1 minute pour chaque arbre, puis aller-retour est 2 minutes (distance 1 case) *2 = 2
    # Mais ça ne colle pas avec l'analyse brute.
    #
    # Inspirons-nous directement de la méthode : pour chaque arbre coupé,
    # temps = (# d'arbres) * (distance aller-retour * 1 min +1 min couper)
    # or dans l'ensemble, le problème penche vers
    # pour un arbre en position (i,j):
    # t = nombre_arbre * (distance_aller-retour + temps_coupe) = n * (2 * distance + 1)
    #
    # Mais dans l'exemple, on lit plutôt :
    # le temps compte chaque déplacement sur case vide comme 1 minute
    # et couper 1 arbre comme 1 minute
    #
    # Plus simplement, on a :
    # temps = n * (2 * dist_from_start[i][j] + 1)
    #
    # On va donc prendre ceci comme coût.

    # Cependant, on ne peut couper un arbre que depuis une case sans arbre adjacente,
    # et il faut que cette case soit accessible depuis l'usine.
    #
    # Donc pour chaque cellule avec arbres, on doit trouver la distance minimale aller-retour depuis
    # l'usine vers UNE case vide adjacente à (i,j).
    #
    # Puis le coût total pour ces arbres est :
    # nombre_arbres * (2 * distance + 1)
    #
    # sum du tout pour chaque cellule avec arbres.

    INF = 10**9

    total_time = 0

    for i in range(H):
        for j in range(W):
            if A[i][j] > 0:
                # On cherche la distance minimale vers une case vide voisine
                min_dist_to_adjacent = INF
                for di,dj in [(-1,0),(1,0),(0,-1),(0,1)]:
                    ni,nj = i+di, j+dj
                    if 0 <= ni < H and 0 <= nj < W:
                        # Case adjacente doit être sans arbre et accessible depuis l'usine
                        if A[ni][nj] == 0 and dist_from_start[ni][nj] != -1:
                            # Pour couper l'arbre, le déplacement aller-retour est dist_from_start[ni][nj]*2
                            # Car il faut revenir à l'usine
                            if dist_from_start[ni][nj] < min_dist_to_adjacent:
                                min_dist_to_adjacent = dist_from_start[ni][nj]
                # Si pas d'accès, impossible de couper ces arbres. Selon l'énoncé, la solution doit être trouvée,
                # donc on peut ignorer ce cas.
                # Sinon on ajoute le temps nécessaire pour couper tous les arbres sur cette case
                # temps = nombre_arbres * (2*distance + 1)
                if min_dist_to_adjacent == INF:
                    # Impossible d'accéder à cette parcelle pour couper, mais problème dit que (H,W) ≠ (1,1),
                    # donc forçons passer
                    # On peut retourner -1 ou ignorer selon le problème, mais ici on ignore
                    # car la forêt est extérieure non accessible.
                    continue
                time_for_trees = A[i][j] * (2 * min_dist_to_adjacent + 1)
                total_time += time_for_trees
    
    # Enfin, on a accumulé le temps total minimal pour couper tous les arbres nécessaires
    # afin que le chemin puisse exister entre (1,1) et (H,W)
    # L'exemple semble indiquer qu'on ne doit couper que les arbres nécessaires pour ouvrir un chemin,
    # mais ici on somme pour tous les arbres.
    #
    # Cependant l'exemple ne coupe pas tous les arbres, certains laissant passer le chemin,
    # mais notre méthode consiste à ne couper que les arbres nécessaires en rapportant par
    # la distance minimale via cases sans arbres adjacentes
    
    # Or l'énoncé demande le temps minimal pour permettre la connexion.
    #
    # Comme dans l'exemple 2 et 3, on ne coupe pas tous les arbres, que ceux indispensables.
    #
    # Donc il faut trouver quels arbres sont sur "le chemin minimal", c'est un problème de "plus court chemin"
    # dans une grille où les cases avec arbres ont un coût à couper.
    #
    # Nous devons résoudre un problème de recherche de chemin du point NW à SE en minimisant le coût où
    # les cases vides coûtent 0 et les cases avec arbres coûtent (temps pour couper tous les arbres sur cette case).
    #
    # La méthode ci-dessus accumule le temps pour toutes les cases avec arbres, ce qui est incorrect.
    #
    # Donc il faut faire un Dijkstra sur la grille (H,W) en considérant :
    # - se déplacer sur case vide = coût 1 (1 minute), car c'est un déplacement
    # - se déplacer sur case avec arbres = interdit (car il faut couper les arbres d'abord)
    # - mais on peut couper les arbres avant : le coût pour couper et rapporter les arbres sur une case est
    #   A[i][j] * (2 * distance_to_nearest_adjacent_empty + 1)
    #
    # On peut modéliser le problème en rajoutant le poids de couper ces arbres sur le coût du chemin en allant vers SE.
    #
    # Alternativement :
    # l'énoncé dit que l'on commence à l'usine (1,1) sans arbres,
    # et chaque déplacement coute 1 minute,
    # pour couper les arbres sur une case voisine on dépense (nombre_arbres * 1) minute (de coupe),
    # pour rapporter chaque arbre on dépense (distance aller-retour) minutes en déplacement.
    #
    # Donc le coût pour couper les arbres d'une case = nombre_arbres * (1 + 2 * (distance_usine->case_adjacente)),
    # mais on peut se rendre à cette case seulement s'il y a un chemin de cases vides.
    #
    # Le problème revient à trouver un chemin en minimisant la somme des coûts de couper les arbres à côté,
    # c'est un problème de Dijkstra où on paye pour "couper" ou "marcher".
    #
    # On doit sortir un chemin du nord-ouest au sud-est : on peut marcher sur cases vides (coût 1),
    # on peut "couper" cases avec arbres adjacents (coût du coupe+rapporte),
    # puis continuer.
    #
    # Une solution est de transformer la grille en un graphe où :
    # - les cases vides ont un coût de déplacement 1,
    # - les cases avec arbres ont un coût de déplacement infinie,
    # - mais on peut "débloquer" une case avec arbres en "payant" le coût de couper les arbres,
    # ce qui revient à considérer ces cases comme une étape spéciale.
    #
    # Pour résoudre ce problème, on peut modéliser la grille en Dijkstra où à chaque case on a un
    # état : on peut soit passer normalement si case vide, soit si case avec arbres,
    # on doit payer le coût de couper.
    #
    # Ainsi, on définit un graphe pondéré où :
    # - pour les cases vides déplacement coût 1,
    # - pour chaque case à arbres coût de passer = couper tous les arbres et revenir à l'usine quand on coupe cette case,
    # on doit rendre le temps de coupe et transport.
    #
    # Mais cela complique le modèle.
    #
    # L'énoncé de l'exemple 1 explique simplement : on coupe les arbres à certains endroits, la somme des coûts est
    # la réponse.
    #
    # On peut penser :
    # - Toutes les cases non vides, on calcule le coût couper + rapporter.
    # - Puis on construit un graphe où on peut se déplacer sur cases vides uniquement.
    # - On sélectionne parmi les cases avec arbres celles qui justifient d'être coupées
    #   en les triant sur les chemins possibles.
    #
    # Une solution plus simple : 
    # on suppose que chaque case à arbres doit être coupée, et additionne leur coût.
    # Ce n'est pas optimal et ne respecte pas l'exemple 2-3.

    # Or les exemples 2 et 3 montrent que l'on ne doit pas couper tous les arbres mais uniquement ceux nécessaires pour assurer la connectivité.
    #
    # Le problème est en fait de trouver un chemin du nord-ouest vers sud-est dans une grille où chaque case a un coût (0 pour vide, temps pour couper arbres), et
    # on cherche le chemin minimal (somme des coûts plus déplacements).
    #
    # Solution adéquate:
    # Faire un Dijkstra où pour chaque case :
    # - si case vide: coût déplacement 1
    # - si case avec arbres: le coût = nombre_arbres * (2* minimal distance aller-retour vers usine depuis une case vide adjacente + 1), c'est-à-dire le temps de couper et ramener tous les arbres.
    #
    # Puis le chemin minimum en Dijkstra donne le temps minimal total.
    #
    # Le problème est que le coût de couper les arbres ne se réalise que si on arrive sur une case adjacente sans arbres, on coupe puis revient à l'usine.
    #
    # Cependant, l'énoncé ne dit pas qu'on peut avancer sur une case avec arbres.
    #
    # Par contre, lors de la coupe, on se trouve sur une case vide adjacente, puis on coupe les arbres dans une case voisine.
    #
    # Le découpage en coût pour déplacer semble inclure uniquement les cases vides.
    #
    # Donc un modèle clarifié:
    # - Les déplacements se font uniquement sur cases vides
    # - Pour couper les arbres sur une case (avec arbres), le joueur doit se rendre sur une case vide adjacente,
    #   y couper les arbres une par une (1min/arbre),
    #   puis ramener l'arbre à l'usine (temps déplacement aller-retour = 2 * distance du vide adjacente à l'usine).
    #
    # Le total du temps = somme sur toutes les cases avec arbres du nombre d'arbres * (1 + 2 * distance_from_usine_to_case_vide_adjacent)
    #
    # BUT on ne doit couper que les arbres qui empêchent la connectivité entre usine et destination.
    #
    # Pour trouver ces arbres, on peut simuler un graphe où les cases vides sont les noeuds,
    # et chaque arbre adjacent à un noeud vide nous devons "payer" le coût de couper ces arbres si on doit passer par ce noeud.
    #
    # Cela devient un problème complexe.
    
    # Simplification : la forêt est « démantelé » seulement sur les cases avec arbres bloquant le chemin.
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6406391859054565
    2. '.' → logprob: -0.8906391859054565
    3. 'import' → logprob: -4.015639305114746
    4. 'newline' → logprob: -4.265639305114746
    5. '\' → logprob: -4.765639305114746
    6. '<|end|>' → logprob: -5.015639305114746
    7. '```' → logprob: -5.390639305114746
    8. '
' → logprob: -5.765639305114746
    9. '<|end|>' → logprob: -6.515639305114746
    10. '' → logprob: -6.515639305114746

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.007344419602304697
    2. 'os' → logprob: -6.2573442459106445
    3. ' math' → logprob: -6.2573442459106445
    4. ' collections' → logprob: -6.8823442459106445
    5. ' ' → logprob: -7.1323442459106445
    6. ' typing' → logprob: -7.8823442459106445
    7. ' pathlib' → logprob: -8.007344245910645
    8. ' datetime' → logprob: -9.132344245910645
    9. 'collections' → logprob: -9.257344245910645
    10. ' Py' → logprob: -9.257344245910645

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.38848182559013367
    2. 'import' → logprob: -1.138481855392456
    3. '.' → logprob: -6.513481616973877
    4. ' ' → logprob: -10.263482093811035
    5. '```' → logprob: -10.263482093811035
    6. '.Counter' → logprob: -11.263482093811035
    7. '.import' → logprob: -11.388482093811035
    8. '	import' → logprob: -11.763482093811035
    9. ' defaultdict' → logprob: -12.263482093811035
    10. ' .' → logprob: -13.013482093811035

Token 6: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6127161383628845
    2. ' defaultdict' → logprob: -0.8627161383628845
    3. 'deque' → logprob: -3.3627161979675293
    4. ' abc' → logprob: -7.237716197967529
    5. ' named' → logprob: -7.862716197967529
    6. ' Counter' → logprob: -8.612715721130371
    7. 'abc' → logprob: -9.862715721130371
    8. 'default' → logprob: -9.862715721130371
    9. 'named' → logprob: -9.987715721130371
    10. ' Ordered' → logprob: -11.737715721130371

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.008002758026123
    2. '

' → logprob: -1.258002758026123
    3. '
' → logprob: -1.758002758026123
    4. 'import' → logprob: -2.258002758026123
    5. '```' → logprob: -3.133002758026123
    6. '\' → logprob: -3.758002758026123
    7. 'newline' → logprob: -6.508002758026123
    8. '<|end|>' → logprob: -6.508002758026123
    9. '<|end|>' → logprob: -7.383002758026123
    10. '' → logprob: -7.383002758026123

Token 8: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.2758928537368774
    2. 'def' → logprob: -1.6508928537368774
    3. '`' → logprob: -2.025892734527588
    4. 'import' → logprob: -2.150892734527588
    5. 'd' → logprob: -3.025892734527588
    6. 'b' → logprob: -3.275892734527588
    7. '
' → logprob: -3.275892734527588
    8. '\' → logprob: -3.400892734527588
    9. 'queue' → logprob: -4.025892734527588
    10. '

' → logprob: -4.525892734527588

Token 9: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001463692169636488
    2. ' bfs' → logprob: -6.876463890075684
    3. ' process' → logprob: -9.251463890075684
    4. ' space' → logprob: -9.876463890075684
    5. ' dfs' → logprob: -10.126463890075684
    6. ' main' → logprob: -10.376463890075684
    7. ' ```' → logprob: -10.376463890075684
    8. ' ' → logprob: -11.001463890075684
    9. ' )' → logprob: -11.126463890075684
    10. ' BFS' → logprob: -11.501463890075684

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034092976711690426
    2. ':' → logprob: -6.378409385681152
    3. '():' → logprob: -6.753409385681152
    4. '(:' → logprob: -8.253409385681152
    5. ' (' → logprob: -9.128409385681152
    6. '):' → logprob: -10.253409385681152
    7. '(
' → logprob: -10.628409385681152
    8. '```' → logprob: -10.628409385681152
    9. '(`' → logprob: -11.628409385681152
    10. '('' → logprob: -11.628409385681152

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4446544051170349
    2. '    ' → logprob: -1.9446544647216797
    3. '\' → logprob: -2.9446544647216797
    4. '(' → logprob: -3.1946544647216797
    5. '```' → logprob: -3.6946544647216797
    6. '    
' → logprob: -3.8196544647216797
    7. ' ' → logprob: -4.19465446472168
    8. '[' → logprob: -4.31965446472168
    9. ' 
' → logprob: -4.81965446472168
    10. '     
' → logprob: -5.19465446472168

Token 12: ' #' (ID: 1069)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.4998447299003601
    2. ' q' → logprob: -1.9998447895050049
    3. ' n' → logprob: -2.374844789505005
    4. 'queue' → logprob: -3.249844789505005
    5. 'n' → logprob: -3.249844789505005
    6. 'q' → logprob: -3.499844789505005
    7. ' input' → logprob: -3.999844789505005
    8. '   ' → logprob: -4.624844551086426
    9. ' max' → logprob: -5.749844551086426
    10. ' task' → logprob: -5.874844551086426

Token 13: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13417011499404907
    2. ' input' → logprob: -2.7591700553894043
    3. '   ' → logprob: -4.134170055389404
    4. 'input' → logprob: -4.634170055389404
    5. ' queue' → logprob: -5.634170055389404
    6. ' n' → logprob: -5.759170055389404
    7. ' import' → logprob: -5.884170055389404
    8. ' max' → logprob: -6.009170055389404
    9. '    ' → logprob: -6.009170055389404
    10. ' pass' → logprob: -6.009170055389404

Token 14: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3609994351863861
    2. '   ' → logprob: -1.8609994649887085
    3. '_' → logprob: -3.110999345779419
    4. ' notes' → logprob: -3.110999345779419
    5. 's' → logprob: -3.860999345779419
    6. ' =' → logprob: -4.360999584197998
    7. '_notes' → logprob: -5.360999584197998
    8. ':' → logprob: -5.860999584197998
    9. '  ' → logprob: -5.985999584197998
    10. ' des' → logprob: -5.985999584197998

Token 15: ' dimensions' (ID: 23995)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13353510200977325
    2. 'l' → logprob: -3.008535146713257
    3. ' l' → logprob: -3.383535146713257
    4. ' la' → logprob: -4.633534908294678
    5. '_' → logprob: -5.008534908294678
    6. ' lignes' → logprob: -5.008534908294678
    7. ' lines' → logprob: -5.383534908294678
    8. ' input' → logprob: -5.633534908294678
    9. ' données' → logprob: -5.758534908294678
    10. ' sys' → logprob: -6.383534908294678

Token 16: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15494279563426971
    2. '   ' → logprob: -2.904942750930786
    3. ' (' → logprob: -3.529942750930786
    4. '    ' → logprob: -3.654942750930786
    5. '  ' → logprob: -4.904942989349365
    6. ' ,' → logprob: -5.154942989349365
    7. '<|end|>' → logprob: -5.154942989349365
    8. '(' → logprob: -5.529942989349365
    9. ',' → logprob: -6.029942989349365
    10. 's' → logprob: -6.654942989349365

Token 17: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7784286141395569
    2. ' la' → logprob: -0.7784286141395569
    3. ' l' → logprob: -3.028428554534912
    4. ' ' → logprob: -3.903428554534912
    5. 's' → logprob: -5.278428554534912
    6. 'la' → logprob: -5.403428554534912
    7. ' grille' → logprob: -6.778428554534912
    8. ' ' → logprob: -7.903428554534912
    9. 'gr' → logprob: -7.903428554534912
    10. ' lab' → logprob: -8.71592903137207

Token 18: ' forêt' (ID: 117038)
  Prédit: ' grille'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.02829989418387413
    2. 'gr' → logprob: -4.528299808502197
    3. ' matr' → logprob: -4.903299808502197
    4. ' ' → logprob: -5.153299808502197
    5. '   ' → logprob: -7.403299808502197
    6. ' ' → logprob: -8.028300285339355
    7. ' fenêtre' → logprob: -8.028300285339355
    8. 'm' → logprob: -8.278300285339355
    9. 's' → logprob: -8.278300285339355
    10. 'mat' → logprob: -8.528300285339355

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5620968341827393
    2. ' ' → logprob: -1.1870968341827393
    3. '    ' → logprob: -3.5620968341827393
    4. '  ' → logprob: -4.18709659576416
    5. ' ,' → logprob: -4.43709659576416
    6. ',' → logprob: -4.43709659576416
    7. ' (' → logprob: -4.68709659576416
    8. '<|end|>' → logprob: -4.68709659576416
    9. 's' → logprob: -4.93709659576416
    10. ' ' → logprob: -5.06209659576416

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3488481342792511
    2. ' ' → logprob: -2.0988481044769287
    3. 'n' → logprob: -2.2238481044769287
    4. '    ' → logprob: -3.3488481044769287
    5. ' ,' → logprob: -4.973848342895508
    6. '  ' → logprob: -5.598848342895508
    7. ' n' → logprob: -5.598848342895508
    8. 's' → logprob: -5.973848342895508
    9. ',' → logprob: -6.223848342895508
    10. '<|end|>' → logprob: -6.598848342895508

Token 21: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2384063005447388
    2. ' n' → logprob: -1.4884063005447388
    3. ' ' → logprob: -1.6134063005447388
    4. 'n' → logprob: -2.113406181335449
    5. ' rows' → logprob: -2.863406181335449
    6. ' lines' → logprob: -3.238406181335449
    7. '    ' → logprob: -3.863406181335449
    8. ' h' → logprob: -4.238406181335449
    9. 'rows' → logprob: -5.238406181335449
    10. ' line' → logprob: -5.613406181335449

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0882294550538063
    2. ' =' → logprob: -2.8382294178009033
    3. ' ,' → logprob: -3.7132294178009033
    4. ' ' → logprob: -7.088229656219482
    5. '=' → logprob: -7.588229656219482
    6. '  ' → logprob: -9.088229179382324
    7. '   ' → logprob: -10.338229179382324
    8. ')' → logprob: -11.963229179382324
    9. '=int' → logprob: -12.088229179382324
    10. '    ' → logprob: -12.713229179382324

Token 23: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.01971808448433876
    2. ' ' → logprob: -4.519718170166016
    3. 'W' → logprob: -4.894718170166016
    4. '  ' → logprob: -8.019718170166016
    5. ' I' → logprob: -8.144718170166016
    6. ' ,' → logprob: -8.769718170166016
    7. '    ' → logprob: -9.269718170166016
    8. 'I' → logprob: -9.519718170166016
    9. '<|end|>' → logprob: -9.519718170166016
    10. ' L' → logprob: -9.644718170166016

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020549364387989044
    2. '=' → logprob: -3.8955492973327637
    3. ',' → logprob: -12.520549774169922
    4. ' ' → logprob: -13.020549774169922
    5. '=int' → logprob: -14.770549774169922
    6. ')' → logprob: -14.895549774169922
    7. ' =
' → logprob: -15.895549774169922
    8. '  ' → logprob: -16.020549774169922
    9. '<|end|>' → logprob: -16.020549774169922
    10. ' ,' → logprob: -16.395549774169922

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006075267679989338
    2. 'map' → logprob: -5.131075382232666
    3. ' ' → logprob: -9.631074905395508
    4. ' ' → logprob: -10.006074905395508
    5. ' sys' → logprob: -10.756074905395508
    6. ' [' → logprob: -11.756074905395508
    7. ' input' → logprob: -13.006074905395508
    8. '	map' → logprob: -13.881074905395508
    9. 'input' → logprob: -14.256074905395508
    10. ' list' → logprob: -14.381074905395508

Token 26: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7506881952285767
    2. '(int' → logprob: -0.7506881952285767
    3. '(str' → logprob: -3.250688076019287
    4. '(input' → logprob: -4.125688076019287
    5. '(lambda' → logprob: -7.250688076019287
    6. '(list' → logprob: -9.500688552856445
    7. '(eval' → logprob: -9.625688552856445
    8. '(sys' → logprob: -10.000688552856445
    9. '(
' → logprob: -10.375688552856445
    10. ' (' → logprob: -10.500688552856445

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4826339781284332
    2. '(input' → logprob: -1.3576339483261108
    3. '(sys' → logprob: -2.6076340675354004
    4. ')' → logprob: -3.7326340675354004
    5. '(' → logprob: -4.2326340675354
    6. ',input' → logprob: -4.8576340675354
    7. 'input' → logprob: -5.4826340675354
    8. ' ,' → logprob: -7.6076340675354
    9. ' input' → logprob: -7.9826340675354
    10. ' (' → logprob: -8.357633590698242

Token 28: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.46742013096809387
    2. ' input' → logprob: -1.0924201011657715
    3. 'input' → logprob: -3.9674201011657715
    4. 'sys' → logprob: -3.9674201011657715
    5. ')' → logprob: -9.34242057800293
    6. ' )' → logprob: -10.34242057800293
    7. ' ' → logprob: -12.21742057800293
    8. '=sys' → logprob: -12.21742057800293
    9. '	sys' → logprob: -13.21742057800293
    10. '(sys' → logprob: -13.71742057800293

Token 29: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16429367661476135
    2. '.' → logprob: -1.914293646812439
    3. '.argv' → logprob: -5.5392937660217285
    4. ' .' → logprob: -9.53929328918457
    5. '.readline' → logprob: -9.91429328918457
    6. '.stdout' → logprob: -12.53929328918457
    7. '.input' → logprob: -13.16429328918457
    8. '.)' → logprob: -14.16429328918457
    9. '(stdin' → logprob: -14.16429328918457
    10. '.std' → logprob: -14.28929328918457

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00022213248303160071
    2. '.' → logprob: -9.125222206115723
    3. '.read' → logprob: -9.125222206115723
    4. '.stdin' → logprob: -12.750222206115723
    5. '.readlines' → logprob: -14.125222206115723
    6. ').' → logprob: -15.375222206115723
    7. '.)' → logprob: -16.125221252441406
    8. ' .' → logprob: -16.875221252441406
    9. '.imread' → logprob: -17.250221252441406
    10. ')' → logprob: -17.875221252441406

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03014741837978363
    2. '())' → logprob: -3.9051473140716553
    3. '()' → logprob: -4.655147552490234
    4. ')' → logprob: -10.405147552490234
    5. '()))' → logprob: -12.030147552490234
    6. '(' → logprob: -12.905147552490234
    7. '.readline' → logprob: -14.030147552490234
    8. '()[' → logprob: -14.155147552490234
    9. ' ())' → logprob: -14.155147552490234
    10. '()]' → logprob: -14.155147552490234

Token 32: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.5761837959289551
    2. 'split' → logprob: -0.8261837959289551
    3. 'rstrip' → logprob: -8.326183319091797
    4. ' strip' → logprob: -14.076183319091797
    5. ' split' → logprob: -14.076183319091797
    6. 'read' → logprob: -14.326183319091797
    7. '(split' → logprob: -17.576183319091797
    8. ')' → logprob: -19.451183319091797
    9. '(strip' → logprob: -19.951183319091797
    10. 'plit' → logprob: -20.076183319091797

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07735776156187057
    2. '())' → logprob: -2.702357769012451
    3. '))' → logprob: -5.202357769012451
    4. '()' → logprob: -6.327357769012451
    5. '()))' → logprob: -9.452357292175293
    6. '(' → logprob: -12.077357292175293
    7. ')
' → logprob: -12.577357292175293
    8. ')`' → logprob: -12.577357292175293
    9. '())
' → logprob: -12.827357292175293
    10. '),' → logprob: -13.327357292175293

Token 34: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12976114451885223
    2. '\n' → logprob: -2.629761219024658
    3. '  
' → logprob: -4.379761219024658
    4. ' 
' → logprob: -4.504761219024658
    5. '    
' → logprob: -5.129761219024658
    6. ')' → logprob: -5.879761219024658
    7. '   ' → logprob: -5.879761219024658
    8. '' → logprob: -5.879761219024658
    9. '\' → logprob: -6.004761219024658
    10. '<|end|>' → logprob: -6.004761219024658

Token 35: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0167535543441772
    2. ' forest' → logprob: -1.3917535543441772
    3. ' 
' → logprob: -2.016753673553467
    4. ' ' → logprob: -2.891753673553467
    5. '\n' → logprob: -3.141753673553467
    6. '
' → logprob: -3.516753673553467
    7. '    
' → logprob: -3.516753673553467
    8. '\' → logprob: -3.641753673553467
    9. 'forest' → logprob: -4.391753673553467
    10. ')' → logprob: -5.016753673553467

Token 36: ' Lecture' (ID: 106534)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -1.0867249965667725
    2. ' forest' → logprob: -1.3367249965667725
    3. 'forest' → logprob: -2.5867249965667725
    4. ' data' → logprob: -2.8367249965667725
    5. ' f' → logprob: -3.0867249965667725
    6. 'grid' → logprob: -3.5867249965667725
    7. 'f' → logprob: -4.086725234985352
    8. ' #' → logprob: -4.086725234985352
    9. ' fire' → logprob: -4.274225234985352
    10. '   ' → logprob: -4.399225234985352

Token 37: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12120693922042847
    2. 'des' → logprob: -2.2462069988250732
    3. '   ' → logprob: -5.121206760406494
    4. ' de' → logprob: -6.871206760406494
    5. '()' → logprob: -7.121206760406494
    6. 's' → logprob: -8.871207237243652
    7. '_des' → logprob: -9.746207237243652
    8. 'de' → logprob: -9.871207237243652
    9. 'def' → logprob: -9.996207237243652
    10. 'd' → logprob: -10.121207237243652

Token 38: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.007284780964255333
    2. ' l' → logprob: -5.507284641265869
    3. ' the' → logprob: -6.507284641265869
    4. ' ' → logprob: -7.257284641265869
    5. 'l' → logprob: -8.132285118103027
    6. ' les' → logprob: -8.257285118103027
    7. 'la' → logprob: -8.507285118103027
    8. ' sys' → logprob: -9.382285118103027
    9. ' le' → logprob: -10.507285118103027
    10. 'the' → logprob: -10.507285118103027

Token 39: ' matr' (ID: 25095)
  Prédit: ' forêt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forêt' → logprob: -0.4218358099460602
    2. 'for' → logprob: -1.6718357801437378
    3. 'gr' → logprob: -3.4218358993530273
    4. ' for' → logprob: -3.5468358993530273
    5. 'f' → logprob: -3.6718358993530273
    6. ' f' → logprob: -4.296835899353027
    7. 'car' → logprob: -4.421835899353027
    8. 'fore' → logprob: -4.796835899353027
    9. ' carte' → logprob: -4.921835899353027
    10. ' grille' → logprob: -5.171835899353027

Token 40: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.003064580261707306
    2. 'rice' → logprob: -5.8780646324157715
    3. 'î' → logprob: -9.003064155578613
    4. '```' → logprob: -10.003064155578613
    5. 'ic' → logprob: -11.003064155578613
    6. ' ice' → logprob: -11.503064155578613
    7. 'ix' → logprob: -11.753064155578613
    8. 'i' → logprob: -11.753064155578613
    9. '   ' → logprob: -12.003064155578613
    10. 'ì' → logprob: -12.128064155578613

Token 41: ' A' (ID: 355)
  Prédit: ' forest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forest' → logprob: -0.11523810774087906
    2. 'forest' → logprob: -2.6152381896972656
    3. '   ' → logprob: -3.7402381896972656
    4. ' forêt' → logprob: -5.740238189697266
    5. 'for' → logprob: -6.115238189697266
    6. '<|end|>' → logprob: -6.740238189697266
    7. '<|end|>' → logprob: -6.990238189697266
    8. ' for' → logprob: -7.115238189697266
    9. 'Forest' → logprob: -7.740238189697266
    10. ' de' → logprob: -7.990238189697266

Token 42: ' représentant' (ID: 136122)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0651794821023941
    2. 'A' → logprob: -3.6901795864105225
    3. 'for' → logprob: -4.940179347991943
    4. ' A' → logprob: -4.940179347991943
    5. ' for' → logprob: -5.315179347991943
    6. '<|end|>' → logprob: -5.315179347991943
    7. '<|end|>' → logprob: -5.815179347991943
    8. '  ' → logprob: -6.190179347991943
    9. 'a' → logprob: -6.440179347991943
    10. ' ' → logprob: -6.690179347991943

Token 43: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.005093818064779043
    2. 'la' → logprob: -6.255094051361084
    3. ' l' → logprob: -6.630094051361084
    4. ' the' → logprob: -7.630094051361084
    5. ' ' → logprob: -7.880094051361084
    6. 'l' → logprob: -7.880094051361084
    7. ' ' → logprob: -8.130093574523926
    8. 'the' → logprob: -9.380093574523926
    9. ' a' → logprob: -10.130093574523926
    10. ' les' → logprob: -10.755093574523926

Token 44: ' nombre' (ID: 9733)
  Prédit: 'terrain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'terrain' → logprob: -1.6583795547485352
    2. 's' → logprob: -1.9083795547485352
    3. ' forest' → logprob: -2.408379554748535
    4. 'forest' → logprob: -2.658379554748535
    5. ' feu' → logprob: -2.658379554748535
    6. 'fe' → logprob: -2.658379554748535
    7. ' forêt' → logprob: -3.033379554748535
    8. ' terrain' → logprob: -3.033379554748535
    9. 'nombre' → logprob: -3.658379554748535
    10. ' paysage' → logprob: -3.658379554748535

Token 45: ' d' (ID: 272)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0707708597183228
    2. ' arbres' → logprob: -1.0707708597183228
    3. ' ' → logprob: -2.195770740509033
    4. 's' → logprob: -2.820770740509033
    5. '<|end|>' → logprob: -3.195770740509033
    6. ''' → logprob: -3.570770740509033
    7. ' espaces' → logprob: -3.820770740509033
    8. ' d' → logprob: -4.320770740509033
    9. ' s' → logprob: -5.320770740509033
    10. ' a' → logprob: -5.320770740509033

Token 47: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.009967265650629997
    2. ' arbres' → logprob: -5.00996732711792
    3. 'ar' → logprob: -6.38496732711792
    4. ''' → logprob: -6.88496732711792
    5. '```' → logprob: -9.634966850280762
    6. 'inc' → logprob: -9.884966850280762
    7. 'b' → logprob: -10.134966850280762
    8. 'a' → logprob: -10.384966850280762
    9. 'fe' → logprob: -10.509966850280762
    10. 'trees' → logprob: -10.634966850280762

Token 48: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.24742808938026428
    2. 'es' → logprob: -1.997428059577942
    3. 'és' → logprob: -3.4974281787872314
    4. 're' → logprob: -4.747427940368652
    5. 'e' → logprob: -4.997427940368652
    6. 'êtres' → logprob: -5.372427940368652
    7. '```' → logprob: -5.497427940368652
    8. 'ées' → logprob: -5.997427940368652
    9. 'rés' → logprob: -5.997427940368652
    10. 'é' → logprob: -6.122427940368652

Token 49: ' sur' (ID: 1512)
  Prédit: ' dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dans' → logprob: -1.0163218975067139
    2. 's' → logprob: -2.516321897506714
    3. '[' → logprob: -2.641321897506714
    4. '<|end|>' → logprob: -2.641321897506714
    5. ',' → logprob: -3.016321897506714
    6. '\n' → logprob: -3.391321897506714
    7. ' for' → logprob: -3.766321897506714
    8. ' forest' → logprob: -3.766321897506714
    9. '<|end|>' → logprob: -3.766321897506714
    10. ' de' → logprob: -3.766321897506714

Token 50: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.06398549675941467
    2. ' each' → logprob: -3.438985586166382
    3. 'each' → logprob: -3.813985586166382
    4. ' chacune' → logprob: -5.938985347747803
    5. ' la' → logprob: -6.188985347747803
    6. 's' → logprob: -7.313985347747803
    7. 'Each' → logprob: -7.313985347747803
    8. 'Chaque' → logprob: -7.813985347747803
    9. '<|end|>' → logprob: -8.313985824584961
    10. ' les' → logprob: -8.688985824584961

Token 51: ' case' (ID: 1890)
  Prédit: ' ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.15483681857585907
    2. 'ligne' → logprob: -2.029836893081665
    3. ' ' → logprob: -5.154836654663086
    4. ' line' → logprob: -5.529836654663086
    5. ' case' → logprob: -7.779836654663086
    6. 'l' → logprob: -7.779836654663086
    7. ' cellule' → logprob: -8.404836654663086
    8. '<|end|>' → logprob: -8.654836654663086
    9. 'line' → logprob: -8.779836654663086
    10. ' arbre' → logprob: -9.404836654663086

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024868345353752375
    2. 'A' → logprob: -7.377486705780029
    3. '\n' → logprob: -7.377486705780029
    4. 'for' → logprob: -8.377487182617188
    5. '  ' → logprob: -8.502487182617188
    6. ' for' → logprob: -8.627487182617188
    7. '    
' → logprob: -8.752487182617188
    8. 'a' → logprob: -9.502487182617188
    9. ' A' → logprob: -9.502487182617188
    10. '    ' → logprob: -9.752487182617188

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020497082732617855
    2. 'A' → logprob: -9.625205039978027
    3. '  ' → logprob: -10.125205039978027
    4. '    
' → logprob: -10.375205039978027
    5. 'a' → logprob: -11.250205039978027
    6. ' A' → logprob: -11.750205039978027
    7. '    ' → logprob: -11.875205039978027
    8. 'for' → logprob: -12.125205039978027
    9. '\n' → logprob: -12.250205039978027
    10. ' ' → logprob: -12.250205039978027

Token 54: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06308303028345108
    2. 'A' (adapté à ' A') → logprob: -3.1880829334259033
    3. ' A' → logprob: -3.9380829334259033
    4. '  ' → logprob: -9.813082695007324
    5. ' trees' → logprob: -9.813082695007324
    6. ' for' → logprob: -10.063082695007324
    7. 'for' → logprob: -10.063082695007324
    8. ' ' → logprob: -10.313082695007324
    9. ' lines' → logprob: -10.313082695007324
    10. '    ' → logprob: -10.563082695007324

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016117891296744347
    2. '=' → logprob: -4.141118049621582
    3. '[' → logprob: -10.141118049621582
    4. ' ' → logprob: -10.516118049621582
    5. ' =[' → logprob: -11.641118049621582
    6. '[i' → logprob: -13.516118049621582
    7. '[:]' → logprob: -13.766118049621582
    8. '[]' → logprob: -14.016118049621582
    9. '=[]' → logprob: -14.016118049621582
    10. ')' → logprob: -14.141118049621582

Token 56: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7663213014602661
    2. ' [' → logprob: -1.2663213014602661
    3. '[' → logprob: -1.5163213014602661
    4. '[]' → logprob: -3.3913211822509766
    5. '[int' → logprob: -9.516321182250977
    6. '[s' → logprob: -10.766321182250977
    7. '[list' → logprob: -10.891321182250977
    8. ' [[]' → logprob: -10.891321182250977
    9. ' ' → logprob: -11.391321182250977
    10. 'deque' → logprob: -11.641321182250977

Token 57: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3132631778717041
    2. ' list' → logprob: -1.313263177871704
    3. 'map' → logprob: -14.438262939453125
    4. '[list' → logprob: -15.313262939453125
    5. '(list' → logprob: -15.438262939453125
    6. '	list' → logprob: -16.438262939453125
    7. '=list' → logprob: -16.438262939453125
    8. 'sys' → logprob: -16.438262939453125
    9. ' sys' → logprob: -16.688262939453125
    10. '   ' → logprob: -16.938262939453125

Token 58: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00038682064041495323
    2. '(' → logprob: -7.875386714935303
    3. 'map' → logprob: -12.500387191772461
    4. '(int' → logprob: -13.500387191772461
    5. '()' → logprob: -13.750387191772461
    6. '()]' → logprob: -16.37538719177246
    7. ' map' → logprob: -16.50038719177246
    8. '	map' → logprob: -16.50038719177246
    9. '_map' → logprob: -16.62538719177246
    10. ',map' → logprob: -16.75038719177246

Token 59: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0017259917221963406
    2. '(' → logprob: -6.376726150512695
    3. '(lambda' → logprob: -11.251726150512695
    4. '(str' → logprob: -12.501726150512695
    5. '[int' → logprob: -13.251726150512695
    6. ']int' → logprob: -13.626726150512695
    7. ')' → logprob: -14.001726150512695
    8. '<int' → logprob: -14.251726150512695
    9. '=int' → logprob: -14.376726150512695
    10. '(
' → logprob: -14.376726150512695

Token 60: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.04063492640852928
    2. ',' → logprob: -3.540634870529175
    3. '(' → logprob: -4.665635108947754
    4. 'sys' → logprob: -7.540635108947754
    5. ')' → logprob: -8.415635108947754
    6. '(input' → logprob: -8.790635108947754
    7. '=sys' → logprob: -8.915635108947754
    8. '<|end|>' → logprob: -9.415635108947754
    9. ' sys' → logprob: -10.165635108947754
    10. '(system' → logprob: -10.290635108947754

Token 61: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06219981610774994
    2. ' sys' → logprob: -2.812199831008911
    3. 'input' → logprob: -8.562199592590332
    4. '(sys' → logprob: -10.687199592590332
    5. ' input' → logprob: -11.562199592590332
    6. ')' → logprob: -12.312199592590332
    7. '=sys' → logprob: -12.937199592590332
    8. '	sys' → logprob: -13.562199592590332
    9. '))' → logprob: -16.56220054626465
    10. ' )' → logprob: -16.68720054626465

Token 62: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013095269969198853
    2. 'stdin' → logprob: -9.000130653381348
    3. '.readline' → logprob: -12.000130653381348
    4. '(stdin' → logprob: -13.875130653381348
    5. '```' → logprob: -15.875130653381348
    6. '.stdout' → logprob: -16.000131607055664
    7. 'import' → logprob: -16.375131607055664
    8. '=sys' → logprob: -16.500131607055664
    9. 'sys' → logprob: -16.875131607055664
    10. '.std' → logprob: -17.125131607055664

Token 63: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00082309142453596
    2. '.stdin' → logprob: -7.125823020935059
    3. '.' → logprob: -11.000823020935059
    4. 'stdin' → logprob: -14.500823020935059
    5. '=sys' → logprob: -15.000823020935059
    6. '.readlines' → logprob: -15.125823020935059
    7. '```' → logprob: -15.250823020935059
    8. '.stdout' → logprob: -15.375823020935059
    9. '(stdin' → logprob: -15.625823020935059
    10. 'sys' → logprob: -16.625823974609375

Token 64: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7954958821064793e-05
    2. '()' → logprob: -11.000018119812012
    3. '.readline' → logprob: -14.625018119812012
    4. '(' → logprob: -15.000018119812012
    5. ' ().' → logprob: -15.500018119812012
    6. '()))' → logprob: -16.500017166137695
    7. '()-' → logprob: -17.625017166137695
    8. ')' → logprob: -17.750017166137695
    9. '()).' → logprob: -18.375017166137695
    10. ' ' → logprob: -18.750017166137695

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00047082986566238105
    2. 'strip' → logprob: -7.7504706382751465
    3. 'rstrip' → logprob: -10.250471115112305
    4. ' split' → logprob: -12.625471115112305
    5. 'read' → logprob: -13.750471115112305
    6. '(split' → logprob: -15.250471115112305
    7. ')' → logprob: -16.000471115112305
    8. 'spl' → logprob: -17.750471115112305
    9. ' strip' → logprob: -19.125471115112305
    10. ' ' → logprob: -19.250471115112305

Token 66: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11457882076501846
    2. '))' → logprob: -2.2395787239074707
    3. '()' → logprob: -6.864578723907471
    4. '())' → logprob: -7.739578723907471
    5. '(' → logprob: -8.739579200744629
    6. ')' → logprob: -10.114579200744629
    7. ')))' → logprob: -10.364579200744629
    8. '())))' → logprob: -10.364579200744629
    9. '()));' → logprob: -12.864579200744629
    10. '()))
' → logprob: -12.989579200744629

Token 67: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017975853756070137
    2. '())' → logprob: -4.392975807189941
    3. ')]' → logprob: -6.142975807189941
    4. '()' → logprob: -6.392975807189941
    5. 'for' → logprob: -7.267975807189941
    6. '(' → logprob: -7.892975807189941
    7. ' for' → logprob: -8.892975807189941
    8. ']' → logprob: -9.142975807189941
    9. '()]' → logprob: -9.267975807189941
    10. ' )' → logprob: -9.517975807189941

Token 68: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004717533942312002
    2. '(range' → logprob: -5.7547173500061035
    3. 'range' → logprob: -6.5047173500061035
    4. '	range' → logprob: -10.879717826843262
    5. ' xrange' → logprob: -11.379717826843262
    6. ' ' → logprob: -12.254717826843262
    7. '(' → logprob: -13.004717826843262
    8. '_' → logprob: -13.129717826843262
    9. ' _' → logprob: -13.629717826843262
    10. '_range' → logprob: -14.004717826843262

Token 69: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06093858927488327
    2. ' range' → logprob: -2.935938596725464
    3. ' in' → logprob: -5.435938358306885
    4. 'in' → logprob: -6.810938358306885
    5. '(range' → logprob: -7.685938358306885
    6. '	range' → logprob: -9.935938835144043
    7. 'ange' → logprob: -10.310938835144043
    8. '_' → logprob: -11.435938835144043
    9. '_range' → logprob: -11.685938835144043
    10. '   ' → logprob: -12.560938835144043

Token 70: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007110013975761831
    2. ' range' → logprob: -7.250710964202881
    3. '(range' → logprob: -14.125711441040039
    4. '	range' → logprob: -15.750711441040039
    5. ' ' → logprob: -16.37571144104004
    6. '   ' → logprob: -16.62571144104004
    7. '```' → logprob: -16.75071144104004
    8. '  ' → logprob: -17.50071144104004
    9. 'rang' → logprob: -18.12571144104004
    10. '    ' → logprob: -18.37571144104004

Token 71: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004115681163966656
    2. '(' → logprob: -5.504115581512451
    3. '(W' → logprob: -10.25411605834961
    4. ' (' → logprob: -13.50411605834961
    5. '(
' → logprob: -15.75411605834961
    6. '(A' → logprob: -16.50411605834961
    7. '(I' → logprob: -16.75411605834961
    8. 'H' → logprob: -16.87911605834961
    9. ')' → logprob: -17.00411605834961
    10. '((' → logprob: -17.25411605834961

Token 72: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1398757123970427e-05
    2. ')' → logprob: -12.000011444091797
    3. ' )' → logprob: -13.000011444091797
    4. ')])' → logprob: -14.125011444091797
    5. ']' → logprob: -14.375011444091797
    6. ')],' → logprob: -14.750011444091797
    7. '))' → logprob: -14.875011444091797
    8. '])]' → logprob: -15.125011444091797
    9. '   ' → logprob: -15.625011444091797
    10. '')]' → logprob: -16.000011444091797

Token 73: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19334200024604797
    2. '   ' → logprob: -2.0683419704437256
    3. '    
' → logprob: -3.1933419704437256
    4. '<|end|>' → logprob: -5.568342208862305
    5. '  
' → logprob: -7.068342208862305
    6. '\n' → logprob: -7.318342208862305
    7. '```' → logprob: -7.693342208862305
    8. ' 
' → logprob: -7.943342208862305
    9. 'newline' → logprob: -8.068342208862305
    10. '' → logprob: -8.318342208862305

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007765389513224363
    2. '#' → logprob: -5.632765293121338
    3. '    
' → logprob: -6.007765293121338
    4. 'queue' → logprob: -7.257765293121338
    5. 'def' → logprob: -8.882765769958496
    6. 'd' → logprob: -8.882765769958496
    7. 'visited' → logprob: -9.132765769958496
    8. '    ' → logprob: -9.382765769958496
    9. '
' → logprob: -9.507765769958496
    10. 'n' → logprob: -9.507765769958496

Token 75: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.35122963786125183
    2. 'visited' → logprob: -2.476229667663574
    3. ' #' → logprob: -2.726229667663574
    4. '   ' → logprob: -3.101229667663574
    5. 'distance' → logprob: -3.601229667663574
    6. 'd' → logprob: -4.351229667663574
    7. 'queue' → logprob: -4.351229667663574
    8. 'dist' → logprob: -4.601229667663574
    9. ' visited' → logprob: -4.726229667663574
    10. 'dire' → logprob: -4.726229667663574

Token 76: ' La' (ID: 3038)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6804465651512146
    2. '#' → logprob: -1.4304466247558594
    3. 'dist' → logprob: -2.3054466247558594
    4. 'queue' → logprob: -3.0554466247558594
    5. ' visited' → logprob: -3.8054466247558594
    6. 'distance' → logprob: -4.180446624755859
    7. 'fire' → logprob: -4.555446624755859
    8. 'vis' → logprob: -4.680446624755859
    9. 'max' → logprob: -4.930446624755859
    10. ' dist' → logprob: -5.055446624755859

Token 77: ' case' (ID: 1890)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.705159306526184
    2. ' distance' → logprob: -1.705159306526184
    3. ' suite' → logprob: -1.955159306526184
    4. ' file' → logprob: -2.3301591873168945
    5. '#' → logprob: -2.4551591873168945
    6. ' queue' → logprob: -2.7051591873168945
    7. 'fore' → logprob: -3.8301591873168945
    8. ' #' → logprob: -3.8301591873168945
    9. 'distance' → logprob: -3.8301591873168945
    10. ' forêt' → logprob: -4.2051591873168945

Token 78: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3130263686180115
    2. 'de' → logprob: -1.6880264282226562
    3. 's' → logprob: -3.1880264282226562
    4. ' visited' → logprob: -4.438026428222656
    5. 'visited' → logprob: -4.563026428222656
    6. ' d' → logprob: -6.188026428222656
    7. 'd' → logprob: -6.563026428222656
    8. '_de' → logprob: -6.813026428222656
    9. 'vis' → logprob: -7.063026428222656
    10. ' vis' → logprob: -7.063026428222656

Token 79: ' l' (ID: 305)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.49892836809158325
    2. ' départ' → logprob: -0.9989283680915833
    3. 'depart' → logprob: -4.498928546905518
    4. 'd' → logprob: -4.873928546905518
    5. 'la' → logprob: -7.248928546905518
    6. 's' → logprob: -7.248928546905518
    7. 'l' → logprob: -7.248928546905518
    8. ' ' → logprob: -7.373928546905518
    9. ' la' → logprob: -7.998928546905518
    10. '[' → logprob: -8.24892807006836

Token 80: ''us' (ID: 143210)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3029119372367859
    2. ''entrée' → logprob: -2.8029119968414307
    3. ''' → logprob: -4.052911758422852
    4. ''île' → logprob: -4.302911758422852
    5. ''utilisateur' → logprob: -4.552911758422852
    6. ''origine' → logprob: -4.552911758422852
    7. ''ar' → logprob: -4.802911758422852
    8. 'entrée' → logprob: -4.802911758422852
    9. ''ex' → logprob: -4.802911758422852
    10. 'o' → logprob: -4.927911758422852

Token 81: 'ine' (ID: 514)
  Prédit: 'ager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ager' → logprob: -0.11460284888744354
    2. 'er' → logprob: -2.61460280418396
    3. 'age' → logprob: -3.86460280418396
    4. 'ine' → logprob: -5.239603042602539
    5. 'e' → logprob: -5.864603042602539
    6. 'agé' → logprob: -6.114603042602539
    7. 'ag' → logprob: -7.489603042602539
    8. 'eur' → logprob: -7.739603042602539
    9. 'erie' → logprob: -7.739603042602539
    10. 'el' → logprob: -8.614603042602539

Token 82: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4439432621002197
    2. ',' → logprob: -1.6939432621002197
    3. 's' → logprob: -1.9439432621002197
    4. ' ' → logprob: -2.3189432621002197
    5. '<|end|>' → logprob: -2.5689432621002197
    6. ' ,' → logprob: -3.1939432621002197
    7. ' s' → logprob: -3.4439432621002197
    8. ' (' → logprob: -3.6939432621002197
    9. ' est' → logprob: -3.8189432621002197
    10. 'de' → logprob: -3.9439432621002197

Token 83: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5213773846626282
    2. ' ' → logprob: -1.1463773250579834
    3. ')' → logprob: -3.3963773250579834
    4. ' la' → logprob: -3.7713773250579834
    5. ' au' → logprob: -5.2713775634765625
    6. ' à' → logprob: -5.8963775634765625
    7. '1' → logprob: -6.2713775634765625
    8. ' )' → logprob: -6.3963775634765625
    9. ' située' → logprob: -6.7088775634765625
    10. ' H' → logprob: -6.7713775634765625

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14146986603736877
    2. '-based' → logprob: -2.891469955444336
    3. ')' → logprob: -3.141469955444336
    4. ' ,' → logprob: -4.141469955444336
    5. '-index' → logprob: -4.391469955444336
    6. '-' → logprob: -6.266469955444336
    7. 'based' → logprob: -7.141469955444336
    8. ')-' → logprob: -8.016469955444336
    9. ' -' → logprob: -8.016469955444336
    10. 'e' → logprob: -8.141469955444336

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8565221428871155
    2. ' ' → logprob: -0.9815221428871155
    3. '0' → logprob: -1.6065220832824707
    4. '    ' → logprob: -11.856522560119629
    5. '<|end|>' → logprob: -11.981522560119629
    6. ')' → logprob: -12.106522560119629
    7. '   ' → logprob: -12.106522560119629
    8. '2' → logprob: -12.231522560119629
    9. '  ' → logprob: -12.481522560119629
    10. '	' → logprob: -13.856522560119629

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012809180771000683
    2. ' )' → logprob: -9.375127792358398
    3. '),' → logprob: -10.625127792358398
    4. ',' → logprob: -11.750127792358398
    5. '')' → logprob: -13.500127792358398
    6. '):' → logprob: -13.500127792358398
    7. '))' → logprob: -13.625127792358398
    8. '   ' → logprob: -14.000127792358398
    9. ')))' → logprob: -14.500127792358398
    10. ')#' → logprob: -14.500127792358398

Token 87: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' à' (ID: 1221)
  Prédit: ' toujours'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toujours' → logprob: -1.0730173587799072
    2. ' la' → logprob: -1.5730173587799072
    3. ' située' → logprob: -1.6980173587799072
    4. '(' → logprob: -3.0730173587799072
    5. ' au' → logprob: -3.6980173587799072
    6. '0' → logprob: -3.8230173587799072
    7. ' (' → logprob: -4.073017120361328
    8. ' considér' → logprob: -4.323017120361328
    9. 'situ' → logprob: -4.323017120361328
    10. ' ' → logprob: -4.698017120361328

Token 89: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6486751437187195
    2. ' l' → logprob: -0.8986751437187195
    3. ' ' → logprob: -4.273674964904785
    4. '0' → logprob: -4.273674964904785
    5. 'index' → logprob: -4.898674964904785
    6. ' index' → logprob: -5.023674964904785
    7. '[' → logprob: -5.398674964904785
    8. 'indice' → logprob: -5.398674964904785
    9. ' indice' → logprob: -5.648674964904785
    10. 'la' → logprob: -5.898674964904785

Token 90: ''ind' (ID: 82245)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8323714733123779
    2. ''' → logprob: -1.457371473312378
    3. ''ind' → logprob: -2.207371473312378
    4. ''origine' → logprob: -2.457371473312378
    5. '0' → logprob: -3.457371473312378
    6. 'indice' → logprob: -4.082371711730957
    7. 'index' → logprob: -4.332371711730957
    8. 'indices' → logprob: -4.582371711730957
    9. ''end' → logprob: -4.582371711730957
    10. 'angle' → logprob: -4.707371711730957

Token 91: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.11195742338895798
    2. 'é' → logprob: -2.486957311630249
    3. 'e' → logprob: -4.236957550048828
    4. 'ice' → logprob: -5.111957550048828
    5. 'i' → logprob: -6.486957550048828
    6. 'í' → logprob: -8.611957550048828
    7. 'ic' → logprob: -9.111957550048828
    8. 'x' → logprob: -9.236957550048828
    9. 'ices' → logprob: -9.361957550048828
    10. 'ée' → logprob: -9.736957550048828

Token 92: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.232502818107605
    2. ' ' → logprob: -1.357502818107605
    3. '[' → logprob: -1.482502818107605
    4. ' (' → logprob: -1.982502818107605
    5. '0' → logprob: -2.4825029373168945
    6. '(' → logprob: -6.1075029373168945
    7. '  ' → logprob: -8.357502937316895
    8. ' ' → logprob: -9.357502937316895
    9. 's' → logprob: -9.982502937316895
    10. '[]' → logprob: -10.232502937316895

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038042180240154266
    2. ' ' → logprob: -3.2880420684814453
    3. '1' → logprob: -14.288042068481445
    4. ' ' → logprob: -16.163042068481445
    5. ')' → logprob: -17.538042068481445
    6. '[' → logprob: -17.788042068481445
    7. '   ' → logprob: -18.163042068481445
    8. '۰' → logprob: -18.288042068481445
    9. '  ' → logprob: -18.413042068481445
    10. '```' → logprob: -18.788042068481445

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03842827305197716
    2. ')' → logprob: -3.53842830657959
    3. ' ,' → logprob: -4.78842830657959
    4. ' )' → logprob: -9.16342830657959
    5. '][' → logprob: -9.16342830657959
    6. '),' → logprob: -10.16342830657959
    7. ' ' → logprob: -10.78842830657959
    8. ')[' → logprob: -11.41342830657959
    9. '),(' → logprob: -11.53842830657959
    10. ')][' → logprob: -12.16342830657959

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028057026211172342
    2. ' ' → logprob: -5.877805709838867
    3. '<|end|>' → logprob: -14.502805709838867
    4. '1' → logprob: -15.127805709838867
    5. ')' → logprob: -16.502805709838867
    6. '۰' → logprob: -17.877805709838867
    7. '<|end|>' → logprob: -18.877805709838867
    8. ',' → logprob: -19.127805709838867
    9. ' ' → logprob: -19.502805709838867
    10. ' 
' → logprob: -19.627805709838867

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -14.250001907348633
    3. ' )' → logprob: -14.375001907348633
    4. '),' → logprob: -15.250001907348633
    5. ').' → logprob: -15.750001907348633
    6. '))' → logprob: -16.250001907348633
    7. '):' → logprob: -16.500001907348633
    8. ')...' → logprob: -16.875001907348633
    9. ')#' → logprob: -17.375001907348633
    10. ']' → logprob: -18.125001907348633

Token 97: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22771862149238586
    2. '    
' → logprob: -2.4777185916900635
    3. ':' → logprob: -4.227718830108643
    4. '
' → logprob: -4.227718830108643
    5. '   
' → logprob: -4.352718830108643
    6. ',' → logprob: -4.477718830108643
    7. '  
' → logprob: -4.477718830108643
    8. '  ' → logprob: -4.602718830108643
    9. ' 
' → logprob: -4.602718830108643
    10. '<|end|>' → logprob: -4.852718830108643

Token 98: ' ' (ID: 220)
  Prédit: ' Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.24734701216220856
    2. 'Python' → logprob: -2.122347116470337
    3. 'python' → logprob: -2.872347116470337
    4. ' python' → logprob: -3.622347116470337
    5. ' ' → logprob: -5.247346878051758
    6. '0' → logprob: -5.372346878051758
    7. ' code' → logprob: -5.497346878051758
    8. '```' → logprob: -7.622346878051758
    9. ' zéro' → logprob: -8.372346878051758
    10. ' termes' → logprob: -8.372346878051758

Token 99: '0' (ID: 15)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.06335519254207611
    2. 'Python' → logprob: -2.8133552074432373
    3. ' Python' → logprob: -7.063354969024658
    4. '0' → logprob: -8.563355445861816
    5. ' python' → logprob: -9.063355445861816
    6. '```' → logprob: -9.313355445861816
    7. 'liste' → logprob: -10.188355445861816
    8. 'code' → logprob: -10.813355445861816
    9. 'py' → logprob: -11.063355445861816
    10. 'mat' → logprob: -11.688355445861816

Token 100: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.02835911139845848
    2. '-index' → logprob: -4.0283589363098145
    3. '-' → logprob: -4.7783589363098145
    4. ' -' → logprob: -7.1533589363098145
    5. '-base' → logprob: -7.5283589363098145
    6. 'based' → logprob: -8.028359413146973
    7. '_based' → logprob: -9.778359413146973
    8. ' based' → logprob: -11.278359413146973
    9. '-Based' → logprob: -12.153359413146973
    10. '#index' → logprob: -12.403359413146973

Token 101: ' indexing' (ID: 105989)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29423561692237854
    2. '
' → logprob: -2.2942357063293457
    3. '    
' → logprob: -2.6692357063293457
    4. ',' → logprob: -3.5442357063293457
    5. '<|end|>' → logprob: -4.544235706329346
    6. ':' → logprob: -4.669235706329346
    7. ')' → logprob: -5.044235706329346
    8. '  ' → logprob: -5.169235706329346
    9. '.' → logprob: -5.294235706329346
    10. '   
' → logprob: -5.544235706329346

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2971871495246887
    2. '
' → logprob: -1.922187089920044
    3. '    
' → logprob: -2.922187089920044
    4. ':' → logprob: -4.047187328338623
    5. '<|end|>' → logprob: -4.172187328338623
    6. '\' → logprob: -5.172187328338623
    7. 'newline' → logprob: -5.547187328338623
    8. '.' → logprob: -6.297187328338623
    9. ',' → logprob: -6.422187328338623
    10. '\n' → logprob: -6.422187328338623

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009890546090900898
    2. '
' → logprob: -5.259890556335449
    3. '    
' → logprob: -5.884890556335449
    4. '```' → logprob: -8.13489055633545
    5. ',' → logprob: -8.63489055633545
    6. '<|end|>' → logprob: -8.75989055633545
    7. 'n' → logprob: -9.13489055633545
    8. 'd' → logprob: -9.13489055633545
    9. '  
' → logprob: -9.25989055633545
    10. '  ' → logprob: -9.38489055633545

Token 104: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5255470275878906
    2. 'dist' → logprob: -2.5255470275878906
    3. 'visited' → logprob: -2.5255470275878906
    4. 'queue' → logprob: -2.6505470275878906
    5. 'distance' → logprob: -2.7755470275878906
    6. 'd' → logprob: -3.7755470275878906
    7. ' queue' → logprob: -4.150547027587891
    8. ' visited' → logprob: -4.275547027587891
    9. 'start' → logprob: -4.400547027587891
    10. '#' (adapté à ' #') → logprob: -4.775547027587891

Token 105: ' Elle' (ID: 21300)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.261353850364685
    2. 'start' → logprob: -1.386353850364685
    3. 'queue' → logprob: -2.0113539695739746
    4. '#' → logprob: -2.6363539695739746
    5. ' start' → logprob: -2.7613539695739746
    6. 'dist' → logprob: -3.0113539695739746
    7. ' visited' → logprob: -3.3863539695739746
    8. 'distance' → logprob: -3.5113539695739746
    9. ' queue' → logprob: -4.136353969573975
    10. 'q' → logprob: -4.386353969573975

Token 106: ' ne' (ID: 453)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7679382562637329
    2. ' =' → logprob: -2.0179381370544434
    3. ' semble' → logprob: -2.5179381370544434
    4. ' n' → logprob: -2.7679381370544434
    5. ' a' → logprob: -2.8929381370544434
    6. 's' → logprob: -3.2679381370544434
    7. ' faudra' → logprob: -3.8929381370544434
    8. ' reste' → logprob: -3.8929381370544434
    9. ' is' → logprob: -4.142938137054443
    10. ' faut' → logprob: -4.267938137054443

Token 107: ' contient' (ID: 89067)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2120369672775269
    2. 'f' → logprob: -1.9620369672775269
    3. 'pe' → logprob: -2.4620370864868164
    4. 'pas' → logprob: -2.5870370864868164
    5. 'cont' → logprob: -3.0870370864868164
    6. 'sert' → logprob: -3.4620370864868164
    7. ' peut' → logprob: -3.5870370864868164
    8. ' doit' → logprob: -3.7120370864868164
    9. 'fa' → logprob: -3.9620370864868164
    10. 'semble' → logprob: -3.9620370864868164

Token 108: ' aucun' (ID: 41678)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.25418201088905334
    2. ' aucun' → logprob: -2.0041821002960205
    3. ' plus' → logprob: -3.5041821002960205
    4. ' que' → logprob: -3.6291821002960205
    5. 'pas' → logprob: -3.8791821002960205
    6. ' aucune' → logprob: -5.254181861877441
    7. ' jamais' → logprob: -6.629181861877441
    8. 's' → logprob: -6.754181861877441
    9. 'plus' → logprob: -7.129181861877441
    10. '   ' → logprob: -7.129181861877441

Token 109: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.004618341568857431
    2. 'ar' → logprob: -5.754618167877197
    3. ' arbres' → logprob: -6.754618167877197
    4. 's' → logprob: -9.254618644714355
    5. 'arb' → logprob: -9.379618644714355
    6. ' espace' → logprob: -10.754618644714355
    7. 'es' → logprob: -10.879618644714355
    8. 'tree' → logprob: -11.129618644714355
    9. ' ' → logprob: -11.879618644714355
    10. ' tree' → logprob: -12.254618644714355

Token 110: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12577129900455475
    2. '    
' → logprob: -3.6257712841033936
    3. '.' → logprob: -3.7507712841033936
    4. 'A' → logprob: -3.7507712841033936
    5. '
' → logprob: -4.250771522521973
    6. '<|end|>' → logprob: -4.625771522521973
    7. ',' → logprob: -5.000771522521973
    8. '  ' → logprob: -5.750771522521973
    9. '    ' → logprob: -5.875771522521973
    10. '#' → logprob: -6.500771522521973

Token 111: ' hypoth' (ID: 37591)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.010010581463575363
    2. 'd' → logprob: -5.510010719299316
    3. 'def' → logprob: -6.260010719299316
    4. 'definition' → logprob: -7.135010719299316
    5. ' définition' → logprob: -7.260010719299316
    6. ' ' → logprob: -7.510010719299316
    7. 'construction' → logprob: -7.635010719299316
    8. 'ailleurs' → logprob: -8.010010719299316
    9. 'dés' → logprob: -8.510010719299316
    10. 'fois' → logprob: -8.635010719299316

Token 112: 'èse' (ID: 57778)
  Prédit: 'èse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'èse' → logprob: -0.0002467966405674815
    2. 'è' → logprob: -9.50024700164795
    3. 'ese' → logprob: -9.50024700164795
    4. 'ése' → logprob: -9.75024700164795
    5. 'èses' → logprob: -10.75024700164795
    6. 'ose' → logprob: -12.50024700164795
    7. 'é' → logprob: -12.87524700164795
    8. '`' → logprob: -13.12524700164795
    9. 'ès' → logprob: -13.25024700164795
    10. 'se' → logprob: -13.37524700164795

Token 113: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5908369421958923
    2. '    
' → logprob: -1.465837001800537
    3. '
' → logprob: -1.715837001800537
    4. '<|end|>' → logprob: -3.965837001800537
    5. '    ' → logprob: -5.965837001800537
    6. '\' → logprob: -6.090837001800537
    7. '\n' → logprob: -6.465837001800537
    8. '   
' → logprob: -6.590837001800537
    9. '```' → logprob: -6.590837001800537
    10. 'newline' → logprob: -6.715837001800537

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040368761867284775
    2. '
' → logprob: -3.7903687953948975
    3. '    
' → logprob: -4.665368556976318
    4. '<|end|>' → logprob: -5.165368556976318
    5. '  
' → logprob: -7.790368556976318
    6. ' 
' → logprob: -8.165369033813477
    7. 'n' → logprob: -8.665369033813477
    8. '   
' → logprob: -9.165369033813477
    9. '\n' → logprob: -9.165369033813477
    10. ' ' → logprob: -9.165369033813477

Token 115: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055649664252996445
    2. 'visited' → logprob: -4.180649757385254
    3. 'distance' → logprob: -4.555649757385254
    4. 'queue' → logprob: -4.805649757385254
    5. '    
' → logprob: -4.930649757385254
    6. '#' (adapté à ' #') → logprob: -5.805649757385254
    7. 'dist' → logprob: -6.305649757385254
    8. '
' → logprob: -6.805649757385254
    9. 'for' → logprob: -6.805649757385254
    10. ' visited' → logprob: -7.055649757385254

Token 116: ' On' (ID: 2160)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9863810539245605
    2. 'dist' → logprob: -1.4863810539245605
    3. 'queue' → logprob: -1.9863810539245605
    4. '#' → logprob: -2.2363810539245605
    5. 'q' → logprob: -3.1113810539245605
    6. 'dire' → logprob: -3.4863810539245605
    7. 'start' → logprob: -3.7363810539245605
    8. ' visited' → logprob: -4.6113810539245605
    9. 'Q' → logprob: -5.2363810539245605
    10. ' dist' → logprob: -5.3613810539245605

Token 117: ' va' (ID: 3423)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.42353031039237976
    2. ' queue' → logprob: -2.298530340194702
    3. 'visited' → logprob: -2.673530340194702
    4. ' distances' → logprob: -3.423530340194702
    5. 'queue' → logprob: -3.548530340194702
    6. ' dist' → logprob: -3.673530340194702
    7. ' distance' → logprob: -3.673530340194702
    8. ' #' → logprob: -4.173530101776123
    9. 'distance' → logprob: -4.548530101776123
    10. 'dist' → logprob: -4.923530101776123

Token 118: ' calcul' (ID: 7559)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.1085302084684372
    2. ' créer' → logprob: -2.733530282974243
    3. 'util' → logprob: -4.858530044555664
    4. 'initial' → logprob: -5.608530044555664
    5. ' use' → logprob: -5.733530044555664
    6. ' effectuer' → logprob: -5.858530044555664
    7. ' parcour' → logprob: -5.983530044555664
    8. ' explorer' → logprob: -6.358530044555664
    9. ' continuer' → logprob: -6.483530044555664
    10. ' chercher' → logprob: -6.858530044555664

Token 119: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0006065295310690999
    2. 'ate' → logprob: -7.500606536865234
    3. 'e' → logprob: -10.000606536865234
    4. 'r' → logprob: -13.000606536865234
    5. 'ateur' → logprob: -13.875606536865234
    6. 'ter' → logprob: -14.000606536865234
    7. 'ater' → logprob: -14.375606536865234
    8. 'ating' → logprob: -14.500606536865234
    9. '_' → logprob: -14.750606536865234
    10. 'uer' → logprob: -15.000606536865234

Token 120: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1040899753570557
    2. ' les' → logprob: -1.7290899753570557
    3. ' une' → logprob: -2.3540899753570557
    4. ' dist' → logprob: -2.4790899753570557
    5. ' un' → logprob: -2.8540899753570557
    6. 'dist' → logprob: -2.8540899753570557
    7. ' dp' → logprob: -2.9790899753570557
    8. ' le' → logprob: -3.4790899753570557
    9. ' distances' → logprob: -3.6040899753570557
    10. 'distance' → logprob: -3.7290899753570557

Token 121: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.5185489058494568
    2. 'distance' → logprob: -1.1435489654541016
    3. ' hauteur' → logprob: -3.7685489654541016
    4. ' plus' → logprob: -4.268548965454102
    5. ' distances' → logprob: -4.768548965454102
    6. 's' → logprob: -5.393548965454102
    7. ' liste' → logprob: -5.393548965454102
    8. ' queue' → logprob: -5.518548965454102
    9. ' quantité' → logprob: -5.643548965454102
    10. 'dist' → logprob: -5.643548965454102

Token 122: ' minimale' (ID: 143217)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5303156971931458
    2. '_' → logprob: -1.030315637588501
    3. '_matrix' → logprob: -3.905315637588501
    4. '[' → logprob: -4.53031587600708
    5. '(' → logprob: -5.40531587600708
    6. '_map' → logprob: -5.65531587600708
    7. '_to' → logprob: -6.03031587600708
    8. ' ' → logprob: -6.15531587600708
    9. '[]' → logprob: -6.78031587600708
    10. '_max' → logprob: -6.78031587600708

Token 123: ' en' (ID: 469)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27353793382644653
    2. '_' → logprob: -3.2735378742218018
    3. ' ' → logprob: -3.2735378742218018
    4. ' de' → logprob: -3.3985378742218018
    5. ' entre' → logprob: -3.5235378742218018
    6. ' à' → logprob: -4.398538112640381
    7. ' to' → logprob: -4.398538112640381
    8. ' jusqu' → logprob: -4.523538112640381
    9. 'de' → logprob: -4.773538112640381
    10. ',' → logprob: -5.023538112640381

Token 124: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.9541952610015869
    2. ' nombre' → logprob: -1.579195261001587
    3. 'jours' → logprob: -2.079195261001587
    4. ' jours' → logprob: -2.454195261001587
    5. ' termes' → logprob: -3.454195261001587
    6. 'b' → logprob: -3.579195261001587
    7. '```' → logprob: -3.829195261001587
    8. ' arbres' → logprob: -4.204195022583008
    9. 'arb' → logprob: -4.954195022583008
    10. 'ar' → logprob: -5.079195022583008

Token 125: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23392710089683533
    2. 'de' → logprob: -2.108927011489868
    3. '_de' → logprob: -3.233927011489868
    4. '_' → logprob: -3.608927011489868
    5. ' d' → logprob: -4.733927249908447
    6. 'd' → logprob: -5.108927249908447
    7. ' des' → logprob: -6.483927249908447
    8. ' ' → logprob: -6.733927249908447
    9. '_d' → logprob: -7.108927249908447
    10. ')' → logprob: -7.483927249908447

Token 126: ' pas' (ID: 2173)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9696649312973022
    2. 'pas' → logprob: -1.3446649312973022
    3. 'cases' → logprob: -1.4696649312973022
    4. 'steps' → logprob: -3.844665050506592
    5. 'dé' → logprob: -3.844665050506592
    6. 's' → logprob: -3.969665050506592
    7. 'moves' → logprob: -3.969665050506592
    8. ' déplacements' → logprob: -4.344665050506592
    9. 'cou' → logprob: -4.594665050506592
    10. ' mouvements' → logprob: -5.344665050506592

Token 127: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03484063223004341
    2. ',' → logprob: -4.7848405838012695
    3. ' entre' → logprob: -5.1598405838012695
    4. ' (' → logprob: -6.0348405838012695
    5. '.' → logprob: -6.1598405838012695
    6. ' pour' → logprob: -6.2848405838012695
    7. 's' → logprob: -6.5348405838012695
    8. ' jusqu' → logprob: -6.6598405838012695
    9. ' à' → logprob: -6.7848405838012695
    10. '  ' → logprob: -6.9098405838012695

Token 128: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05940680578351021
    2. ' (' → logprob: -3.3094067573547363
    3. ' la' → logprob: -4.434406757354736
    4. 'la' → logprob: -4.809406757354736
    5. 'l' → logprob: -7.309406757354736
    6. 'le' → logprob: -8.559407234191895
    7. ' l' → logprob: -9.184407234191895
    8. ' ' → logprob: -9.684407234191895
    9. ' le' → logprob: -10.559407234191895
    10. '0' → logprob: -11.309407234191895

Token 129: ''us' (ID: 143210)
  Prédit: ''us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''us' → logprob: -0.029314275830984116
    2. ''' → logprob: -3.7793142795562744
    3. '(' → logprob: -6.529314041137695
    4. 'us' → logprob: -6.654314041137695
    5. 'a' → logprob: -7.029314041137695
    6. '’us' → logprob: -7.154314041137695
    7. ''ensemble' → logprob: -8.029314041137695
    8. ''import' → logprob: -8.154314041137695
    9. ''(' → logprob: -9.154314041137695
    10. ''origine' → logprob: -9.279314041137695

Token 130: 'ine' (ID: 514)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4716799557209015
    2. 'e' → logprob: -1.846679925918579
    3. 'age' → logprob: -2.471679925918579
    4. 'ine' → logprob: -2.721679925918579
    5. 'i' → logprob: -4.346680164337158
    6. 'ager' → logprob: -5.221680164337158
    7. 'eur' → logprob: -5.221680164337158
    8. 'ere' → logprob: -5.346680164337158
    9. 'ère' → logprob: -5.346680164337158
    10. 'agé' → logprob: -5.721680164337158

Token 131: ' vers' (ID: 3640)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6427351832389832
    2. ',' → logprob: -1.642735242843628
    3. '   ' → logprob: -2.642735242843628
    4. ' à' → logprob: -2.767735242843628
    5. '.' → logprob: -3.267735242843628
    6. ' to' → logprob: -3.642735242843628
    7. ' vers' → logprob: -3.892735242843628
    8. ' jusqu' → logprob: -4.017735004425049
    9. '  ' → logprob: -4.392735004425049
    10. ' (' → logprob: -4.767735004425049

Token 132: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1752317249774933
    2. 't' → logprob: -2.550231695175171
    3. ' toutes' → logprob: -3.175231695175171
    4. ' chacune' → logprob: -4.80023193359375
    5. 'la' → logprob: -4.92523193359375
    6. ' la' → logprob: -5.30023193359375
    7. '(' → logprob: -5.80023193359375
    8. 'cha' → logprob: -5.80023193359375
    9. 'tout' → logprob: -6.05023193359375
    10. ' tous' → logprob: -6.67523193359375

Token 133: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.6327489614486694
    2. 'case' → logprob: -1.3827489614486694
    3. ' cellule' → logprob: -2.257749080657959
    4. 'cell' → logprob: -3.507749080657959
    5. ' cell' → logprob: -3.507749080657959
    6. ' point' → logprob: -4.257749080657959
    7. ' position' → logprob: -5.007749080657959
    8. 'point' → logprob: -5.132749080657959
    9. ' ' → logprob: -5.132749080657959
    10. 'position' → logprob: -5.257749080657959

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041504453867673874
    2. ',' → logprob: -3.791504383087158
    3. '
' → logprob: -4.416504383087158
    4. '    
' → logprob: -6.166504383087158
    5. '.' → logprob: -7.041504383087158
    6. '  ' → logprob: -7.791504383087158
    7. '\' → logprob: -7.916504383087158
    8. '\n' → logprob: -8.041504859924316
    9. 'def' → logprob: -8.416504859924316
    10. ':' → logprob: -8.541504859924316

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01205970998853445
    2. '    
' → logprob: -5.262059688568115
    3. ',' → logprob: -6.262059688568115
    4. '
' → logprob: -6.512059688568115
    5. ' ' → logprob: -6.637059688568115
    6. '    ' → logprob: -7.637059688568115
    7. '  ' → logprob: -8.012060165405273
    8. '\' → logprob: -8.762060165405273
    9. '.' → logprob: -8.887060165405273
    10. 'def' → logprob: -8.887060165405273

Token 136: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6907695531845093
    2. 'distance' → logprob: -1.0657695531845093
    3. '   ' → logprob: -2.690769672393799
    4. ' distances' → logprob: -3.190769672393799
    5. 'visited' → logprob: -4.440769672393799
    6. '
' → logprob: -4.565769672393799
    7. ' dist' → logprob: -5.815769672393799
    8. ' ' → logprob: -6.065769672393799
    9. ' distance' → logprob: -6.065769672393799
    10. ' visited' → logprob: -6.190769672393799

Token 137: ' uniquement' (ID: 65527)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.531207799911499
    2. 'dist' → logprob: -1.406207799911499
    3. ' distances' → logprob: -2.656207799911499
    4. 'distance' → logprob: -2.781207799911499
    5. ' dist' → logprob: -4.531208038330078
    6. 'visited' → logprob: -4.906208038330078
    7. ' visited' → logprob: -5.656208038330078
    8. ' distance' → logprob: -5.781208038330078
    9. '    
' → logprob: -6.156208038330078
    10. 'queue' → logprob: -6.281208038330078

Token 138: ' sur' (ID: 1512)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4877287447452545
    2. ' aux' → logprob: -1.3627287149429321
    3. ' vers' → logprob: -3.6127288341522217
    4. ' en' → logprob: -3.7377288341522217
    5. ' dans' → logprob: -3.7377288341522217
    6. 'aux' → logprob: -4.362728595733643
    7. 'des' → logprob: -4.987728595733643
    8. ' pour' → logprob: -5.237728595733643
    9. ' à' → logprob: -5.612728595733643
    10. 'dans' → logprob: -5.612728595733643

Token 139: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.3545258939266205
    2. ' des' → logprob: -1.6045259237289429
    3. ' celles' → logprob: -3.1045258045196533
    4. 'les' → logprob: -3.6045258045196533
    5. ' cells' → logprob: -4.854526042938232
    6. 'des' → logprob: -4.854526042938232
    7. 'cells' → logprob: -4.979526042938232
    8. ' la' → logprob: -7.479526042938232
    9. ' celle' → logprob: -7.604526042938232
    10. 'celle' → logprob: -7.604526042938232

Token 140: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.1611693948507309
    2. ' cases' → logprob: -1.911169409751892
    3. 'case' → logprob: -7.661169528961182
    4. 'cells' → logprob: -8.536169052124023
    5. ' cellules' → logprob: -8.911169052124023
    6. ' case' → logprob: -10.411169052124023
    7. ' cells' → logprob: -10.536169052124023
    8. 'positions' → logprob: -11.036169052124023
    9. ' ' → logprob: -11.411169052124023
    10. 'cas' → logprob: -11.536169052124023

Token 141: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.31257104873657227
    2. 'où' → logprob: -2.0625710487365723
    3. ' where' → logprob: -3.1875710487365723
    4. '<|end|>' → logprob: -3.3125710487365723
    5. ' avec' → logprob: -3.9375710487365723
    6. ' qui' → logprob: -3.9375710487365723
    7. ' de' → logprob: -5.062571048736572
    8. ' contenant' → logprob: -5.937571048736572
    9. ' ayant' → logprob: -6.062571048736572
    10. ' dont' → logprob: -6.187571048736572

Token 142: ' il' (ID: 1793)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4287227392196655
    2. ' A' → logprob: -1.0537227392196655
    3. ' ' → logprob: -11.303722381591797
    4. '   ' → logprob: -12.428722381591797
    5. '	A' → logprob: -13.553722381591797
    6. ' ' → logprob: -14.053722381591797
    7. '(A' → logprob: -14.178722381591797
    8. '0' → logprob: -14.428722381591797
    9. 'not' → logprob: -14.803722381591797
    10. ' not' → logprob: -14.928722381591797

Token 143: ' n' (ID: 297)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2762633264064789
    2. 'y' → logprob: -1.9012633562088013
    3. 'n' → logprob: -2.7762632369995117
    4. ' n' → logprob: -3.9012632369995117
    5. ' est' → logprob: -5.901263236999512
    6. 'est' → logprob: -6.276263236999512
    7. 'A' → logprob: -6.276263236999512
    8. ' A' → logprob: -7.151263236999512
    9. ' a' → logprob: -7.901263236999512
    10. 's' → logprob: -8.151263236999512

Token 144: ''y' (ID: 27913)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5109359622001648
    2. ''y' → logprob: -1.0109360218048096
    3. 'n' → logprob: -4.0109357833862305
    4. ' y' → logprob: -4.8859357833862305
    5. 'est' → logprob: -4.8859357833862305
    6. ''' → logprob: -7.3859357833862305
    7. '‘y' → logprob: -7.5109357833862305
    8. 'a' → logprob: -7.7609357833862305
    9. 'e' → logprob: -8.13593578338623
    10. ''est' → logprob: -8.13593578338623

Token 145: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20219488441944122
    2. ' a' → logprob: -1.7021949291229248
    3. ''a' → logprob: -7.702194690704346
    4. 'avait' → logprob: -9.827195167541504
    5. '	a' → logprob: -10.452195167541504
    6. '_a' → logprob: -10.577195167541504
    7. ' pas' → logprob: -10.827195167541504
    8. 'y' → logprob: -10.952195167541504
    9. '```' → logprob: -10.952195167541504
    10. '0' → logprob: -11.202195167541504

Token 146: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.11935055255889893
    2. 'pas' → logprob: -2.3693504333496094
    3. ' aucun' → logprob: -4.119350433349609
    4. 'auc' → logprob: -6.869350433349609
    5. '0' → logprob: -7.119350433349609
    6. ' ' → logprob: -7.994350433349609
    7. 's' → logprob: -9.49435043334961
    8. 'strict' → logprob: -9.74435043334961
    9. ' aucune' → logprob: -9.86935043334961
    10. '_pas' → logprob: -9.86935043334961

Token 147: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3147082030773163
    2. 'd' → logprob: -1.3147082328796387
    3. ' ' → logprob: -7.439708232879639
    4. ' arbres' → logprob: -8.31470775604248
    5. 's' → logprob: -8.43970775604248
    6. '   ' → logprob: -9.31470775604248
    7. ' de' → logprob: -9.68970775604248
    8. '  ' → logprob: -9.81470775604248
    9. ' pas' → logprob: -10.06470775604248
    10. ' aucun' → logprob: -10.31470775604248

Token 148: ''ar' (ID: 54307)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.5644145607948303
    2. ' arbres' → logprob: -1.4394145011901855
    3. 'ar' → logprob: -2.3144145011901855
    4. ' arbre' → logprob: -3.3144145011901855
    5. ''' → logprob: -3.5644145011901855
    6. ''ar' → logprob: -3.5644145011901855
    7. '   ' → logprob: -7.1894145011901855
    8. 's' → logprob: -8.439414978027344
    9. ' ar' → logprob: -8.689414978027344
    10. '```' → logprob: -9.064414978027344

Token 149: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.4321000576019287
    2. 'bres' → logprob: -1.0571000576019287
    3. 'b' → logprob: -5.932100296020508
    4. 'r' → logprob: -8.682100296020508
    5. 'e' → logprob: -8.807100296020508
    6. 'br' → logprob: -9.057100296020508
    7. 'es' → logprob: -9.432100296020508
    8. 't' → logprob: -9.932100296020508
    9. 'bes' → logprob: -10.432100296020508
    10. 'be' → logprob: -10.557100296020508

Token 150: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23798976838588715
    2. '   ' → logprob: -1.8629897832870483
    3. 'distance' → logprob: -3.737989664077759
    4. 'dist' → logprob: -4.487989902496338
    5. 'visited' → logprob: -5.612989902496338
    6. ' distances' → logprob: -5.862989902496338
    7. 'def' → logprob: -5.862989902496338
    8. ',' → logprob: -5.862989902496338
    9. '.' → logprob: -6.112989902496338
    10. 'dp' → logprob: -6.612989902496338

Token 151: 'arb' (ID: 36740)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7115287184715271
    2. ' A' → logprob: -1.3365287780761719
    3. ')' → logprob: -1.8365287780761719
    4. '0' → logprob: -3.211528778076172
    5. ' )' → logprob: -3.211528778076172
    6. ' or' → logprob: -6.211528778076172
    7. ' ' → logprob: -6.711528778076172
    8. ' and' → logprob: -6.961528778076172
    9. '   ' → logprob: -6.961528778076172
    10. ').' → logprob: -8.086528778076172

Token 152: 'res' (ID: 430)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3810519874095917
    2. 'res' → logprob: -1.506052017211914
    3. 're' → logprob: -2.631052017211914
    4. 's' → logprob: -4.506052017211914
    5. 'e' → logprob: -4.631052017211914
    6. 'r' → logprob: -7.756052017211914
    7. 'bres' → logprob: -7.881052017211914
    8. 'êtres' → logprob: -8.381052017211914
    9. 'rees' → logprob: -9.006052017211914
    10. 'és' → logprob: -9.131052017211914

Token 153: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6684848666191101
    2. '==' → logprob: -0.7934848666191101
    3. ')' → logprob: -3.668484926223755
    4. '>' → logprob: -5.418484687805176
    5. '=' → logprob: -6.543484687805176
    6. ' >' → logprob: -6.918484687805176
    7. '[' → logprob: -7.418484687805176
    8. 's' → logprob: -7.418484687805176
    9. ' ' → logprob: -7.918484687805176
    10. ' )' → logprob: -8.293484687805176

Token 154: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012513063848018646
    2. ' ' → logprob: -4.387513160705566
    3. ')' → logprob: -13.762513160705566
    4. '==' → logprob: -14.262513160705566
    5. '>' → logprob: -14.512513160705566
    6. '1' → logprob: -14.762513160705566
    7. '=' → logprob: -14.762513160705566
    8. ' ' → logprob: -16.01251220703125
    9. '```' → logprob: -16.32501220703125
    10. '   ' → logprob: -16.76251220703125

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.076218025758862e-05
    2. ' ' → logprob: -9.625070571899414
    3. '>' → logprob: -13.125070571899414
    4. ')' → logprob: -13.375070571899414
    5. '1' → logprob: -15.125070571899414
    6. '==' → logprob: -15.750070571899414
    7. '">' → logprob: -16.375070571899414
    8. '```' → logprob: -16.375070571899414
    9. '[' → logprob: -16.500070571899414
    10. 'A' → logprob: -16.625070571899414

Token 156: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020414141472429037
    2. ' )' → logprob: -6.502041339874268
    3. ')]' → logprob: -8.127041816711426
    4. ').' → logprob: -9.252041816711426
    5. ' or' → logprob: -9.502041816711426
    6. '),' → logprob: -11.127041816711426
    7. ')])' → logprob: -11.127041816711426
    8. '))' → logprob: -11.252041816711426
    9. ',' → logprob: -11.627041816711426
    10. ' and' → logprob: -12.752041816711426

Token 157: ' car' (ID: 1669)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.8421133756637573
    2. 'visited' → logprob: -0.8421133756637573
    3. '   ' → logprob: -2.342113494873047
    4. ' distances' → logprob: -4.217113494873047
    5. 'dist' → logprob: -4.717113494873047
    6. 'distance' → logprob: -5.342113494873047
    7. ' dist' → logprob: -5.467113494873047
    8. ' )' → logprob: -6.842113494873047
    9. ' valid' → logprob: -6.967113494873047
    10. 'vis' → logprob: -7.217113494873047

Token 158: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1484352946281433
    2. ' les' → logprob: -3.023435354232788
    3. 'on' → logprob: -4.023435115814209
    4. ' elles' → logprob: -4.148435115814209
    5. ' celles' → logprob: -4.523435115814209
    6. ' il' → logprob: -4.773435115814209
    7. ' la' → logprob: -5.523435115814209
    8. ' ces' → logprob: -5.648435115814209
    9. 'les' → logprob: -5.773435115814209
    10. ' le' → logprob: -5.773435115814209

Token 159: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.6598082780838013
    2. 'ne' → logprob: -1.1598082780838013
    3. 'pe' → logprob: -2.1598081588745117
    4. ' peut' → logprob: -3.2848081588745117
    5. ' doit' → logprob: -5.659808158874512
    6. 'n' → logprob: -5.659808158874512
    7. 'do' → logprob: -6.159808158874512
    8. ' peux' → logprob: -6.284808158874512
    9. ' veut' → logprob: -6.909808158874512
    10. 've' → logprob: -7.034808158874512

Token 160: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.05252829194068909
    2. 'pe' → logprob: -3.4275283813476562
    3. ' peux' → logprob: -4.052528381347656
    4. ' doit' → logprob: -7.927528381347656
    5. ' can' → logprob: -8.302528381347656
    6. ' veut' → logprob: -8.552528381347656
    7. ' pe' → logprob: -9.552528381347656
    8. 's' → logprob: -9.677528381347656
    9. ' pourra' → logprob: -9.802528381347656
    10. '<|end|>' → logprob: -9.802528381347656

Token 161: ' se' (ID: 458)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.0999298021197319
    2. 'pas' → logprob: -2.4749298095703125
    3. ' passer' → logprob: -5.7249298095703125
    4. ' que' → logprob: -6.4749298095703125
    5. ' ' → logprob: -6.5999298095703125
    6. ' pass' → logprob: -6.5999298095703125
    7. ' se' → logprob: -6.8499298095703125
    8. ' y' → logprob: -7.5999298095703125
    9. 'pass' → logprob: -7.5999298095703125
    10. ' travers' → logprob: -8.224929809570312

Token 162: ' déplacer' (ID: 142135)
  Prédit: ' déplacer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.2873375713825226
    2. 'dé' → logprob: -1.4123375415802002
    3. 'de' → logprob: -5.912337779998779
    4. '   ' → logprob: -7.037337779998779
    5. 'placer' → logprob: -7.162337779998779
    6. 'd' → logprob: -7.537337779998779
    7. 'poser' → logprob: -8.037337303161621
    8. '```' → logprob: -8.412337303161621
    9. ' dé' → logprob: -8.537337303161621
    10. ' ' → logprob: -9.162337303161621

Token 163: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '   ' (ID: 271)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.629361629486084
    2. '<|end|>' → logprob: -1.379361629486084
    3. ' uniquement' → logprob: -2.629361629486084
    4. ' ' → logprob: -3.004361629486084
    5. ' sur' → logprob: -3.879361629486084
    6. ' partout' → logprob: -4.504361629486084
    7. ',' → logprob: -4.754361629486084
    8. '.' → logprob: -5.004361629486084
    9. ')' → logprob: -5.129361629486084
    10. ' pas' → logprob: -5.629361629486084

Token 165: ' #' (ID: 1069)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.4616037607192993
    2. '<|end|>' → logprob: -1.8366037607192993
    3. ',' → logprob: -2.4616036415100098
    4. '.' → logprob: -3.8366036415100098
    5. ')' → logprob: -4.08660364151001
    6. ' )' → logprob: -4.33660364151001
    7. ' ' → logprob: -4.46160364151001
    8. ' pas' → logprob: -4.58660364151001
    9. ' sur' → logprob: -4.71160364151001
    10. ' qu' → logprob: -4.83660364151001

Token 166: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.10379668325185776
    2. 'sur' → logprob: -2.9787967205047607
    3. ' sur' → logprob: -3.8537967205047607
    4. 'que' → logprob: -4.228796482086182
    5. ' uniquement' → logprob: -5.603796482086182
    6. ' qu' → logprob: -6.103796482086182
    7. '.' → logprob: -6.603796482086182
    8. ',' → logprob: -6.603796482086182
    9. '<|end|>' → logprob: -7.103796482086182
    10. 'qu' → logprob: -7.728796482086182

Token 167: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.2588251829147339
    2. 'sur' → logprob: -1.5088251829147339
    3. ' que' → logprob: -5.258825302124023
    4. ' dans' → logprob: -8.008825302124023
    5. ' vers' → logprob: -8.133825302124023
    6. ' aux' → logprob: -8.383825302124023
    7. ' uniquement' → logprob: -8.383825302124023
    8. 'dans' → logprob: -8.883825302124023
    9. 'aux' → logprob: -9.508825302124023
    10. '_sur' → logprob: -9.633825302124023

Token 168: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.025297248736023903
    2. 'des' → logprob: -4.400297164916992
    3. ' les' → logprob: -4.650297164916992
    4. ' celles' → logprob: -7.150297164916992
    5. 'ces' → logprob: -7.400297164916992
    6. 'les' → logprob: -7.650297164916992
    7. ' ces' → logprob: -7.900297164916992
    8. ' une' → logprob: -8.525297164916992
    9. 'cases' → logprob: -8.525297164916992
    10. ' cases' → logprob: -9.025297164916992

Token 169: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.08158732950687408
    2. ' cases' → logprob: -2.581587314605713
    3. 'case' → logprob: -6.456587314605713
    4. 'cells' → logprob: -7.456587314605713
    5. ' case' → logprob: -9.456587791442871
    6. ' cellules' → logprob: -9.456587791442871
    7. ' ' → logprob: -9.706587791442871
    8. 'cas' → logprob: -9.956587791442871
    9. '0' → logprob: -10.081587791442871
    10. 'cell' → logprob: -10.206587791442871

Token 170: ' sans' (ID: 9828)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.3730791509151459
    2. ' sans' → logprob: -1.6230791807174683
    3. 'où' → logprob: -2.9980790615081787
    4. ' where' → logprob: -3.2480790615081787
    5. 'sans' → logprob: -4.248079299926758
    6. ' avec' → logprob: -5.373079299926758
    7. ' without' → logprob: -5.998079299926758
    8. ' with' → logprob: -7.248079299926758
    9. ' qui' → logprob: -7.373079299926758
    10. 'without' → logprob: -7.623079299926758

Token 171: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.0562283881008625
    2. ' arbre' → logprob: -3.3062283992767334
    3. 'arb' → logprob: -4.056228160858154
    4. 'ar' → logprob: -7.431228160858154
    5. ' arb' → logprob: -10.056228637695312
    6. ' forêt' → logprob: -10.931228637695312
    7. ' ' → logprob: -11.681228637695312
    8. 'for' → logprob: -12.056228637695312
    9. ' ' → logprob: -12.431228637695312
    10. ' for' → logprob: -12.431228637695312

Token 172: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03252240642905235
    2. '   ' → logprob: -3.907522439956665
    3. '    
' → logprob: -4.782522201538086
    4. ',' → logprob: -6.532522201538086
    5. ',
' → logprob: -8.157522201538086
    6. '  
' → logprob: -8.407522201538086
    7. '   
' → logprob: -8.657522201538086
    8. 'def' → logprob: -8.782522201538086
    9. 'distance' → logprob: -8.782522201538086
    10. ' 
' → logprob: -9.157522201538086

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0706799179315567
    2. 'visited' → logprob: -3.9456799030303955
    3. '    
' → logprob: -4.070680141448975
    4. 'dist' → logprob: -4.070680141448975
    5. '
' → logprob: -4.570680141448975
    6. 'distance' → logprob: -6.070680141448975
    7. ' visited' → logprob: -7.445680141448975
    8. ' distances' → logprob: -7.945680141448975
    9. '   
' → logprob: -8.445679664611816
    10. 'def' → logprob: -8.820679664611816

Token 174: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.388288676738739
    2. '
' → logprob: -1.5132887363433838
    3. '    
' → logprob: -2.513288736343384
    4. 'visited' → logprob: -4.888288497924805
    5. 'dist' → logprob: -5.138288497924805
    6. 'distance' → logprob: -5.388288497924805
    7. '   
' → logprob: -7.513288497924805
    8. ' visited' → logprob: -7.638288497924805
    9. 'queue' → logprob: -7.888288497924805
    10. ' distances' → logprob: -7.888288497924805

Token 175: ' Cependant' (ID: 74480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23198001086711884
    2. 'dist' → logprob: -2.731980085372925
    3. 'visited' → logprob: -2.731980085372925
    4. '    
' → logprob: -3.856980085372925
    5. 'distance' → logprob: -3.856980085372925
    6. '
' → logprob: -3.856980085372925
    7. ' visited' → logprob: -5.356979846954346
    8. 'queue' → logprob: -6.106979846954346
    9. ' distances' → logprob: -6.481979846954346
    10. ' 
' → logprob: -6.731979846954346

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0346904918551445
    2. ' ,' → logprob: -3.4096903800964355
    3. ' on' → logprob: -8.034690856933594
    4. '   ' → logprob: -8.659690856933594
    5. ' la' → logprob: -9.534690856933594
    6. ' il' → logprob: -9.659690856933594
    7. '#' → logprob: -10.034690856933594
    8. ' ' → logprob: -10.159690856933594
    9. ' nous' → logprob: -10.159690856933594
    10. ' les' → logprob: -10.284690856933594

Token 177: ' à' (ID: 1221)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2916536033153534
    2. ' il' → logprob: -2.166653633117676
    3. ' la' → logprob: -2.791653633117676
    4. ' les' → logprob: -3.416653633117676
    5. 'on' → logprob: -3.916653633117676
    6. ' le' → logprob: -5.166653633117676
    7. ' je' → logprob: -5.916653633117676
    8. ' comme' → logprob: -5.916653633117676
    9. ' nous' → logprob: -6.541653633117676
    10. 'distance' → logprob: -6.791653633117676

Token 178: ' partir' (ID: 12100)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.6495436429977417
    2. ' partir' → logprob: -1.7745436429977417
    3. 'l' → logprob: -2.1495437622070312
    4. ' l' → logprob: -2.7745437622070312
    5. '0' → logprob: -3.3995437622070312
    6. '#' → logprob: -3.3995437622070312
    7. 'distance' → logprob: -3.5245437622070312
    8. ' ce' → logprob: -3.5245437622070312
    9. 'H' → logprob: -3.7745437622070312
    10. 'A' → logprob: -3.7745437622070312

Token 179: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7840215563774109
    2. ' de' → logprob: -1.1590216159820557
    3. ' d' → logprob: -2.4090216159820557
    4. ' du' → logprob: -2.5340216159820557
    5. 'de' → logprob: -3.6590216159820557
    6. '   ' → logprob: -4.409021377563477
    7. 'd' → logprob: -4.909021377563477
    8. 'def' → logprob: -5.909021377563477
    9. ',' → logprob: -6.034021377563477
    10. 'du' → logprob: -6.034021377563477

Token 180: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12037795037031174
    2. ' (' → logprob: -2.495378017425537
    3. 'l' → logprob: -4.495378017425537
    4. ' la' → logprob: -4.495378017425537
    5. 'la' → logprob: -5.370378017425537
    6. ' l' → logprob: -6.245378017425537
    7. ' ' → logprob: -7.870378017425537
    8. '(l' → logprob: -8.245377540588379
    9. ' cette' → logprob: -8.745377540588379
    10. ' une' → logprob: -8.870377540588379

Token 181: ''' (ID: 6)
  Prédit: ''us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''us' → logprob: -0.022933637723326683
    2. ''end' → logprob: -5.147933483123779
    3. ''' → logprob: -5.522933483123779
    4. 'us' → logprob: -5.647933483123779
    5. ''instant' → logprob: -6.397933483123779
    6. ''espace' → logprob: -6.772933483123779
    7. '’us' → logprob: -6.897933483123779
    8. ''import' → logprob: -7.147933483123779
    9. ''intérieur' → logprob: -7.647933483123779
    10. ' usine' → logprob: -7.772933483123779

Token 182: 'én' (ID: 3289)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.5008155107498169
    2. ''us' → logprob: -1.500815510749817
    3. 'indice' → logprob: -2.5008153915405273
    4. ' usine' → logprob: -3.6258153915405273
    5. 'import' → logprob: -4.625815391540527
    6. '0' → logprob: -4.625815391540527
    7. ''end' → logprob: -5.000815391540527
    8. 'end' → logprob: -5.125815391540527
    9. 'origine' → logprob: -5.250815391540527
    10. '(' → logprob: -6.000815391540527

Token 183: 'oncé' (ID: 59071)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011083055287599564
    2. 't' → logprob: -7.751108169555664
    3. 'def' → logprob: -8.376108169555664
    4. 'oncé' → logprob: -9.501108169555664
    5. 'nd' → logprob: -10.001108169555664
    6. 'du' → logprob: -10.126108169555664
    7. 'dl' → logprob: -10.251108169555664
    8. 'once' → logprob: -10.251108169555664
    9. '```' → logprob: -10.251108169555664
    10. '#' → logprob: -10.376108169555664

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002379569225013256
    2. ' ,' → logprob: -6.377379417419434
    3. '<|end|>' → logprob: -8.502379417419434
    4. '#' → logprob: -9.127379417419434
    5. '.' → logprob: -9.502379417419434
    6. ' on' → logprob: -10.002379417419434
    7. ',
' → logprob: -10.127379417419434
    8. '...' → logprob: -10.377379417419434
    9. ' ' → logprob: -10.752379417419434
    10. ')' → logprob: -10.752379417419434

Token 185: ' nous' (ID: 6176)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.05203874409198761
    2. '<|end|>' → logprob: -3.4270386695861816
    3. ' we' → logprob: -5.302038669586182
    4. 'on' → logprob: -6.177038669586182
    5. ' ' → logprob: -6.302038669586182
    6. ' vous' → logprob: -6.927038669586182
    7. ' the' → logprob: -7.177038669586182
    8. ' il' → logprob: -7.177038669586182
    9. ' nous' → logprob: -7.177038669586182
    10. '<|end|>' → logprob: -7.427038669586182

Token 186: ' pouvons' (ID: 80223)
  Prédit: ' pouvons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pouvons' → logprob: -0.716134786605835
    2. ' devons' → logprob: -1.841134786605835
    3. ' n' → logprob: -2.341134786605835
    4. 'n' → logprob: -2.591134786605835
    5. ' ne' → logprob: -3.591134786605835
    6. ' allons' → logprob: -3.716134786605835
    7. '#' → logprob: -3.716134786605835
    8. ' can' → logprob: -3.841134786605835
    9. ' avons' → logprob: -4.216135025024414
    10. ' voulons' → logprob: -4.716135025024414

Token 187: ' uniquement' (ID: 65527)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.9781408905982971
    2. 'util' → logprob: -1.2281408309936523
    3. ' continuer' → logprob: -1.8531408309936523
    4. ' utiliser' → logprob: -2.8531408309936523
    5. 'dé' → logprob: -4.103140830993652
    6. 'faire' → logprob: -4.853140830993652
    7. ' supp' → logprob: -5.103140830993652
    8. 'cons' → logprob: -5.103140830993652
    9. 'supp' → logprob: -5.103140830993652
    10. 'expl' → logprob: -5.353140830993652

Token 188: ' marcher' (ID: 171848)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.6784321069717407
    2. 'contin' → logprob: -1.5534321069717407
    3. ' explorer' → logprob: -2.428431987762451
    4. ' utiliser' → logprob: -2.803431987762451
    5. 'util' → logprob: -3.678431987762451
    6. ' bou' → logprob: -4.303431987762451
    7. ' déplacer' → logprob: -4.553431987762451
    8. ' avancer' → logprob: -4.553431987762451
    9. 'expl' → logprob: -4.928431987762451
    10. ' travers' → logprob: -4.928431987762451

Token 189: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.43446052074432373
    2. 'sur' → logprob: -1.0594605207443237
    3. ' dans' → logprob: -6.434460639953613
    4. ' ' → logprob: -6.934460639953613
    5. ' uniquement' → logprob: -7.309460639953613
    6. 'dans' → logprob: -7.309460639953613
    7. ' vers' → logprob: -7.934460639953613
    8. ' en' → logprob: -8.184460639953613
    9. ' que' → logprob: -8.559460639953613
    10. ',' → logprob: -8.559460639953613

Token 190: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08847355842590332
    2. ' les' → logprob: -2.9634735584259033
    3. 'des' → logprob: -4.213473320007324
    4. ' une' → logprob: -5.213473320007324
    5. 'les' → logprob: -5.588473320007324
    6. 'cases' → logprob: -5.963473320007324
    7. ' cases' → logprob: -6.213473320007324
    8. ' cells' → logprob: -6.588473320007324
    9. ' la' → logprob: -6.713473320007324
    10. 'cells' → logprob: -7.838473320007324

Token 191: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.44730842113494873
    2. 'cases' → logprob: -1.0723084211349487
    3. '0' → logprob: -5.322308540344238
    4. ' cells' → logprob: -5.822308540344238
    5. ' cellules' → logprob: -5.822308540344238
    6. ' ' → logprob: -6.072308540344238
    7. 'cells' → logprob: -6.072308540344238
    8. 'case' → logprob: -7.322308540344238
    9. ' positions' → logprob: -7.572308540344238
    10. ' case' → logprob: -7.822308540344238

Token 192: ' sans' (ID: 9828)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.3233194649219513
    2. ' avec' → logprob: -2.698319435119629
    3. ' sans' → logprob: -2.698319435119629
    4. 'où' → logprob: -2.948319435119629
    5. 'sans' → logprob: -3.448319435119629
    6. 'adj' → logprob: -4.323319435119629
    7. ' where' → logprob: -4.448319435119629
    8. ' adj' → logprob: -4.698319435119629
    9. ' qui' → logprob: -5.323319435119629
    10. ' dont' → logprob: -5.698319435119629

Token 193: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.06004306674003601
    2. 'arb' → logprob: -3.3100430965423584
    3. ' arbre' → logprob: -3.9350430965423584
    4. 'ar' → logprob: -6.310042858123779
    5. ' arb' → logprob: -9.310043334960938
    6. '```' → logprob: -10.060043334960938
    7. '   ' → logprob: -10.060043334960938
    8. ' ' → logprob: -10.310043334960938
    9. '0' → logprob: -10.560043334960938
    10. 'trees' → logprob: -10.935043334960938

Token 194: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8815199136734009
    2. '   ' → logprob: -1.1315199136734009
    3. '.' → logprob: -1.3815199136734009
    4. ',
' → logprob: -5.131519794464111
    5. '.
' → logprob: -6.631519794464111
    6. '
' → logprob: -6.881519794464111
    7. ')' → logprob: -7.381519794464111
    8. '    
' → logprob: -7.506519794464111
    9. ' ,' → logprob: -8.00652027130127
    10. ':' → logprob: -8.25652027130127

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06402888149023056
    2. '
' → logprob: -3.5640289783477783
    3. '    
' → logprob: -3.5640289783477783
    4. 'def' → logprob: -7.064028739929199
    5. '   
' → logprob: -7.189028739929199
    6. ',' → logprob: -7.564028739929199
    7. '<|end|>' → logprob: -7.689028739929199
    8. ')' → logprob: -7.814028739929199
    9. '  
' → logprob: -7.939028739929199
    10. ' 
' → logprob: -8.0640287399292

Token 196: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6955798268318176
    2. '
' → logprob: -1.1955797672271729
    3. 'visited' → logprob: -2.320579767227173
    4. '    
' → logprob: -2.945579767227173
    5. 'dist' → logprob: -3.695579767227173
    6. 'distance' → logprob: -4.945580005645752
    7. ',' → logprob: -5.320580005645752
    8. ' visited' → logprob: -5.570580005645752
    9. '   
' → logprob: -6.070580005645752
    10. '  
' → logprob: -6.820580005645752

Token 197: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12954187393188477
    2. 'dist' → logprob: -2.8795418739318848
    3. 'visited' → logprob: -3.6295418739318848
    4. 'distance' → logprob: -4.254541873931885
    5. '    
' → logprob: -4.379541873931885
    6. '
' → logprob: -4.629541873931885
    7. 'queue' → logprob: -7.379541873931885
    8. ' visited' → logprob: -7.504541873931885
    9. ' distances' → logprob: -7.754541873931885
    10. ' dist' → logprob: -8.504541397094727

Token 198: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4285115599632263
    2. ' la' → logprob: -2.803511619567871
    3. ' les' → logprob: -3.428511619567871
    4. ' for' → logprob: -3.428511619567871
    5. ' il' → logprob: -3.553511619567871
    6. ',' → logprob: -3.928511619567871
    7. ' if' → logprob: -4.053511619567871
    8. ' ' → logprob: -4.178511619567871
    9. 'for' → logprob: -4.303511619567871
    10. ' le' → logprob: -4.303511619567871

Token 199: ' doit' (ID: 21822)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.042915940284729
    2. ' va' → logprob: -2.0429158210754395
    3. ' peux' → logprob: -2.1679158210754395
    4. ' n' → logprob: -2.4179158210754395
    5. ' continue' → logprob: -2.6679158210754395
    6. ' ne' → logprob: -3.0429158210754395
    7. ' doit' → logprob: -3.6679158210754395
    8. 'n' → logprob: -3.7929158210754395
    9. ' devra' → logprob: -4.0429158210754395
    10. 'def' → logprob: -4.2929158210754395

Token 200: ' aller' (ID: 18383)
  Prédit: ' aussi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aussi' → logprob: -0.8824819922447205
    2. ' pouvoir' → logprob: -1.5074820518493652
    3. ' continuer' → logprob: -1.7574820518493652
    4. ' également' → logprob: -2.7574820518493652
    5. 'égal' → logprob: -3.5074820518493652
    6. ' considérer' → logprob: -3.8824820518493652
    7. ' traiter' → logprob: -4.757482051849365
    8. ' also' → logprob: -5.257482051849365
    9. ' parcour' → logprob: -5.257482051849365
    10. ' vérifier' → logprob: -5.382482051849365

Token 201: ' couper' (ID: 135212)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.09735869616270065
    2. ' au' → logprob: -3.5973587036132812
    3. ' jusque' → logprob: -4.222358703613281
    4. ' chercher' → logprob: -4.472358703613281
    5. ' plus' → logprob: -4.847358703613281
    6. ' à' → logprob: -4.847358703613281
    7. ' sur' → logprob: -5.597358703613281
    8. ' de' → logprob: -5.847358703613281
    9. 'jus' → logprob: -6.097358703613281
    10. ' partout' → logprob: -6.097358703613281

Token 202: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.21591882407665253
    2. '<|end|>' → logprob: -1.840918779373169
    3. ' les' → logprob: -4.340919017791748
    4. 'des' → logprob: -4.965919017791748
    5. ' un' → logprob: -5.090919017791748
    6. ' ' → logprob: -5.465919017791748
    7. ' trees' → logprob: -6.965919017791748
    8. ' arbres' → logprob: -7.090919017791748
    9. 'les' → logprob: -7.215919017791748
    10. ' du' → logprob: -7.340919017791748

Token 203: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.00023083435371518135
    2. ' arbre' → logprob: -9.37523078918457
    3. 'arb' → logprob: -10.25023078918457
    4. ' espaces' → logprob: -10.37523078918457
    5. ' trees' → logprob: -10.87523078918457
    6. ' arb' → logprob: -11.50023078918457
    7. '<|end|>' → logprob: -12.00023078918457
    8. ' voisins' → logprob: -12.00023078918457
    9. ' bois' → logprob: -12.12523078918457
    10. 's' → logprob: -12.25023078918457

Token 204: ' adj' (ID: 20251)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5347909927368164
    2. '.' → logprob: -1.5347909927368164
    3. '<|end|>' → logprob: -2.0347909927368164
    4. '   ' → logprob: -3.5347909927368164
    5. ' ,' → logprob: -4.909790992736816
    6. ' ' → logprob: -5.409790992736816
    7. ',
' → logprob: -5.534790992736816
    8. ' 
' → logprob: -5.784790992736816
    9. '    
' → logprob: -5.909790992736816
    10. '#' → logprob: -5.909790992736816

Token 205: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.03658434376120567
    2. 'ac' → logprob: -3.4115843772888184
    3. 'oints' → logprob: -6.536584377288818
    4. 'a' → logprob: -6.786584377288818
    5. 'acency' → logprob: -9.78658390045166
    6. 'oint' → logprob: -9.91158390045166
    7. 'ents' → logprob: -10.03658390045166
    8. 'aces' → logprob: -10.16158390045166
    9. 'aux' → logprob: -10.78658390045166
    10. 'ic' → logprob: -10.91158390045166

Token 206: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.02333666943013668
    2. 'ent' → logprob: -3.89833664894104
    3. 'entes' → logprob: -5.898336887359619
    4. 'ente' → logprob: -11.273336410522461
    5. 'es' → logprob: -11.273336410522461
    6. 'nt' → logprob: -12.273336410522461
    7. 'nts' → logprob: -12.523336410522461
    8. 'en' → logprob: -13.023336410522461
    9. 'm' → logprob: -13.148336410522461
    10. 'd' → logprob: -13.273336410522461

Token 207: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4553676247596741
    2. ',' → logprob: -1.4553675651550293
    3. '.' → logprob: -2.9553675651550293
    4. '    
' → logprob: -3.2053675651550293
    5. '
' → logprob: -4.830367565155029
    6. ':' → logprob: -4.955367565155029
    7. ')' → logprob: -5.955367565155029
    8. '#' → logprob: -5.955367565155029
    9. 'def' → logprob: -5.955367565155029
    10. ' 
' → logprob: -5.955367565155029

Token 208: ' ces' (ID: 10532)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3234999477863312
    2. 'une' → logprob: -1.9484999179840088
    3. ' des' → logprob: -2.323499917984009
    4. ' la' → logprob: -4.573500156402588
    5. 'des' → logprob: -4.823500156402588
    6. ' au' → logprob: -5.198500156402588
    7. 'au' → logprob: -5.823500156402588
    8. 'la' → logprob: -6.073500156402588
    9. ' chaque' → logprob: -6.573500156402588
    10. ' ' → logprob: -7.323500156402588

Token 209: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.043468065559864044
    2. 'cases' → logprob: -3.4184679985046387
    3. ' espaces' → logprob: -5.543467998504639
    4. ' case' → logprob: -5.668467998504639
    5. ' ' → logprob: -6.668467998504639
    6. 'case' → logprob: -7.793467998504639
    7. ' zones' → logprob: -8.668468475341797
    8. ' cellules' → logprob: -9.668468475341797
    9. ' passages' → logprob: -9.793468475341797
    10. '0' → logprob: -9.793468475341797

Token 210: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437994837760925
    2. '
' → logprob: -1.0187995433807373
    3. '    
' → logprob: -2.5187995433807373
    4. ',' → logprob: -4.268799304962158
    5. 'def' → logprob: -5.018799304962158
    6. ',
' → logprob: -5.643799304962158
    7. '.' → logprob: -5.768799304962158
    8. '   
' → logprob: -6.768799304962158
    9. ':' → logprob: -7.143799304962158
    10. '  
' → logprob: -7.268799304962158

Token 211: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.4668339788913727
    2. 'arb' → logprob: -1.0918339490890503
    3. '_' → logprob: -4.21683406829834
    4. ' arbre' → logprob: -4.34183406829834
    5. 'ar' → logprob: -4.84183406829834
    6. '_ar' → logprob: -7.21683406829834
    7. 'for' → logprob: -8.71683406829834
    8. '   ' → logprob: -8.96683406829834
    9. 'trees' → logprob: -9.21683406829834
    10. '```' → logprob: -9.46683406829834

Token 212: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8659431338310242
    2. '   ' → logprob: -0.8659431338310242
    3. '    
' → logprob: -2.115943193435669
    4. ',' → logprob: -4.11594295501709
    5. 'def' → logprob: -5.11594295501709
    6. '.' → logprob: -5.61594295501709
    7. '   
' → logprob: -5.86594295501709
    8. ',
' → logprob: -5.99094295501709
    9. '  
' → logprob: -6.49094295501709
    10. ')' → logprob: -6.61594295501709

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10136798024177551
    2. '
' → logprob: -2.601367950439453
    3. '    
' → logprob: -4.351367950439453
    4. 'def' → logprob: -5.226367950439453
    5. '#' → logprob: -7.101367950439453
    6. ',' → logprob: -7.351367950439453
    7. ':' → logprob: -7.976367950439453
    8. '.' → logprob: -8.101367950439453
    9. 'visited' → logprob: -8.476367950439453
    10. '   
' → logprob: -8.601367950439453

Token 214: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14026550948619843
    2. '    
' → logprob: -2.140265464782715
    3. '
' → logprob: -5.140265464782715
    4. 'def' → logprob: -6.765265464782715
    5. '   
' → logprob: -7.015265464782715
    6. ',' → logprob: -7.265265464782715
    7. '\' → logprob: -7.390265464782715
    8. '\n' → logprob: -7.640265464782715
    9. 'dire' → logprob: -7.640265464782715
    10. '    
    
' → logprob: -7.765265464782715

Token 215: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03887682408094406
    2. '    
' → logprob: -4.413877010345459
    3. 'dire' → logprob: -4.413877010345459
    4. 'visited' → logprob: -5.413877010345459
    5. '#' → logprob: -5.538877010345459
    6. ' directions' → logprob: -5.788877010345459
    7. ' visited' → logprob: -7.163877010345459
    8. ' #' → logprob: -7.913877010345459
    9. 'def' → logprob: -8.0388765335083
    10. 'from' → logprob: -8.7888765335083

Token 216: ' #' (ID: 1069)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.36572200059890747
    2. '   ' → logprob: -2.1157219409942627
    3. ' directions' → logprob: -2.3657219409942627
    4. '#' (adapté à ' #') → logprob: -2.6157219409942627
    5. 'moves' → logprob: -5.240722179412842
    6. 'dx' → logprob: -5.740722179412842
    7. 'visited' → logprob: -5.990722179412842
    8. ' #' → logprob: -6.490722179412842
    9. 'dirs' → logprob: -6.490722179412842
    10. ' moves' → logprob: -7.615722179412842

Token 217: ' En' (ID: 2130)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.787290632724762
    2. '   ' → logprob: -1.6622905731201172
    3. 'visited' → logprob: -2.162290573120117
    4. 'dist' → logprob: -2.412290573120117
    5. ' directions' → logprob: -2.912290573120117
    6. ' visited' → logprob: -3.662290573120117
    7. '#' → logprob: -3.912290573120117
    8. ' dist' → logprob: -4.412290573120117
    9. 'distance' → logprob: -4.662290573120117
    10. 'queue' → logprob: -5.162290573120117

Token 218: ' fait' (ID: 7473)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.5517594218254089
    2. '#' → logprob: -1.9267594814300537
    3. ' continu' → logprob: -2.8017594814300537
    4. ' utilisant' → logprob: -3.1767594814300537
    5. 'queue' → logprob: -4.051759243011475
    6. ' #' → logprob: -4.551759243011475
    7. 'def' → logprob: -4.551759243011475
    8. ' suivant' → logprob: -4.676759243011475
    9. 'part' → logprob: -4.676759243011475
    10. 'from' → logprob: -4.801759243011475

Token 219: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007786785252392292
    2. ' ,' → logprob: -5.007786750793457
    3. '   ' → logprob: -7.507786750793457
    4. '  ' → logprob: -9.507786750793457
    5. '#' → logprob: -9.507786750793457
    6. ' ' → logprob: -9.632786750793457
    7. 'def' → logprob: -9.757786750793457
    8. '    ' → logprob: -10.507786750793457
    9. ' on' → logprob: -10.507786750793457
    10. ':' → logprob: -10.507786750793457

Token 220: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.030209193006157875
    2. ' nous' → logprob: -5.280209064483643
    3. ' ' → logprob: -5.280209064483643
    4. ' we' → logprob: -5.655209064483643
    5. '#' → logprob: -5.905209064483643
    6. ' for' → logprob: -6.530209064483643
    7. ' #' → logprob: -6.780209064483643
    8. '<|end|>' → logprob: -6.780209064483643
    9. ' la' → logprob: -6.905209064483643
    10. ' ' → logprob: -6.905209064483643

Token 221: ' peut' (ID: 9216)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.12363893538713455
    2. '_' → logprob: -3.123638868331909
    3. ' peut' → logprob: -3.123638868331909
    4. ' doit' → logprob: -4.498639106750488
    5. 'va' → logprob: -5.373639106750488
    6. ' veut' → logprob: -6.123639106750488
    7. ' continue' → logprob: -6.623639106750488
    8. ' part' → logprob: -6.748639106750488
    9. ' devra' → logprob: -6.873639106750488
    10. ' souhaite' → logprob: -6.998639106750488

Token 222: ' considérer' (ID: 172894)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.7326643466949463
    2. ' continuer' → logprob: -1.4826643466949463
    3. ' considérer' → logprob: -2.3576643466949463
    4. ' explorer' → logprob: -3.8576643466949463
    5. ' envis' → logprob: -4.232664108276367
    6. ' voir' → logprob: -4.232664108276367
    7. ' couper' → logprob: -4.232664108276367
    8. 'faire' → logprob: -4.357664108276367
    9. ' faire' → logprob: -4.357664108276367
    10. ' déplacer' → logprob: -4.357664108276367

Token 223: ' la' (ID: 557)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.1924048215150833
    2. ' un' → logprob: -2.6924047470092773
    3. ' une' → logprob: -2.9424047470092773
    4. 'que' → logprob: -4.192404747009277
    5. 'une' → logprob: -4.442404747009277
    6. ' la' → logprob: -4.692404747009277
    7. ' ' → logprob: -4.817404747009277
    8. ' les' → logprob: -6.317404747009277
    9. 'deque' → logprob: -6.442404747009277
    10. ' deque' → logprob: -6.567404747009277

Token 224: ' distance' (ID: 9324)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.8764765858650208
    2. 'queue' → logprob: -0.8764765858650208
    3. ' file' → logprob: -3.126476526260376
    4. 'distance' → logprob: -3.251476526260376
    5. 'for' → logprob: -3.501476526260376
    6. ' queue' → logprob: -3.626476526260376
    7. 'from' → logprob: -5.876476764678955
    8. 'def' → logprob: -5.876476764678955
    9. 'deque' → logprob: -6.126476764678955
    10. 'fore' → logprob: -6.251476764678955

Token 225: ' minimale' (ID: 143217)
  Prédit: ' minimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.2806958854198456
    2. ' des' → logprob: -3.530695915222168
    3. ' jusqu' → logprob: -4.155695915222168
    4. ' de' → logprob: -4.155695915222168
    5. ' minimum' → logprob: -4.280695915222168
    6. ' =' → logprob: -4.280695915222168
    7. ' ' → logprob: -4.280695915222168
    8. ' à' → logprob: -4.405695915222168
    9. ' minimal' → logprob: -4.405695915222168
    10. '_min' → logprob: -4.405695915222168

Token 226: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.8143904805183411
    2. ' à' → logprob: -1.3143904209136963
    3. ' entre' → logprob: -2.8143904209136963
    4. ' de' → logprob: -3.0643904209136963
    5. ' depuis' → logprob: -3.1893904209136963
    6. ' des' → logprob: -3.5643904209136963
    7. ' ' → logprob: -4.189390659332275
    8. ' from' → logprob: -4.439390659332275
    9. ' au' → logprob: -4.564390659332275
    10. ' pour' → logprob: -4.814390659332275

Token 227: ' l' (ID: 305)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.3114098012447357
    2. 't' → logprob: -2.4364097118377686
    3. ' toutes' → logprob: -2.8114097118377686
    4. ' la' → logprob: -3.5614097118377686
    5. 'cha' → logprob: -3.6864097118377686
    6. ' déplacement' → logprob: -4.061409950256348
    7. 'dé' → logprob: -4.311409950256348
    8. 'ch' → logprob: -5.061409950256348
    9. ' l' → logprob: -5.186409950256348
    10. ' tous' → logprob: -5.561409950256348

Token 228: ''us' (ID: 143210)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.5777220726013184
    2. ''us' → logprob: -1.8277220726013184
    3. ''' → logprob: -1.9527220726013184
    4. 'a' → logprob: -2.3277220726013184
    5. ''espace' → logprob: -4.827722072601318
    6. ''état' → logprob: -5.202722072601318
    7. ''ar' → logprob: -5.702722072601318
    8. ''ex' → logprob: -5.952722072601318
    9. ''import' → logprob: -6.077722072601318
    10. ''environnement' → logprob: -6.202722072601318

Token 229: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.008731930516660213
    2. 'e' → logprob: -5.508731842041016
    3. 'age' → logprob: -6.258731842041016
    4. 'er' → logprob: -6.508731842041016
    5. 'iné' → logprob: -7.633731842041016
    6. 'in' → logprob: -8.383731842041016
    7. 'eur' → logprob: -9.258731842041016
    8. 'ure' → logprob: -9.758731842041016
    9. 'agé' → logprob: -10.008731842041016
    10. '#' → logprob: -10.133731842041016

Token 230: ' aux' (ID: 5850)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.6939430832862854
    2. ' vers' → logprob: -1.8189430236816406
    3. ' à' → logprob: -1.9439430236816406
    4. ' aux' → logprob: -1.9439430236816406
    5. ' ' → logprob: -4.193943023681641
    6. ' au' → logprob: -4.568943023681641
    7. ' jusque' → logprob: -4.818943023681641
    8. 'aux' → logprob: -5.193943023681641
    9. 'au' → logprob: -5.443943023681641
    10. 'à' → logprob: -6.443943023681641

Token 231: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.5841206312179565
    2. ' cases' → logprob: -0.8341206312179565
    3. ' arbres' → logprob: -5.209120750427246
    4. ' zones' → logprob: -7.959120750427246
    5. 'case' → logprob: -8.084120750427246
    6. ' cellules' → logprob: -8.209120750427246
    7. ' positions' → logprob: -8.459120750427246
    8. ' voisins' → logprob: -8.584120750427246
    9. ' case' → logprob: -8.709120750427246
    10. 'arb' → logprob: -8.709120750427246

Token 232: ' v' (ID: 323)
  Prédit: ' sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sans' → logprob: -0.7968568801879883
    2. 'sans' → logprob: -1.4218568801879883
    3. ' vois' → logprob: -2.5468568801879883
    4. 'adj' → logprob: -2.5468568801879883
    5. ' adj' → logprob: -2.7968568801879883
    6. 'vo' → logprob: -2.7968568801879883
    7. 'où' → logprob: -5.171856880187988
    8. ' without' → logprob: -5.421856880187988
    9. ' où' → logprob: -5.421856880187988
    10. 'without' → logprob: -6.421856880187988

Token 233: 'ides' (ID: 4105)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6071149110794067
    2. 'u' → logprob: -1.8571149110794067
    3. 'al' → logprob: -2.482114791870117
    4. '   ' → logprob: -3.482114791870117
    5. 'o' → logprob: -3.607114791870117
    6. 'ec' → logprob: -4.357114791870117
    7. 'isit' → logprob: -4.357114791870117
    8. 'i' → logprob: -4.732114791870117
    9. '```' → logprob: -4.732114791870117
    10. 'isible' → logprob: -4.857114791870117

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6948713064193726
    2. 'adj' → logprob: -1.5698713064193726
    3. ' vois' → logprob: -2.694871425628662
    4. ' adj' → logprob: -2.944871425628662
    5. ' (' → logprob: -3.069871425628662
    6. '.' → logprob: -3.444871425628662
    7. 'vo' → logprob: -3.444871425628662
    8. ' voisins' → logprob: -4.569871425628662
    9. ' adjacent' → logprob: -4.819871425628662
    10. ' voisin' → logprob: -4.944871425628662

Token 235: ' mais' (ID: 2899)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' puis' → logprob: -1.111161231994629
    2. ' et' → logprob: -1.361161231994629
    3. ' en' → logprob: -1.736161231994629
    4. 'et' → logprob: -2.361161231994629
    5. 'en' → logprob: -3.736161231994629
    6. ',' → logprob: -3.986161231994629
    7. '#' → logprob: -3.986161231994629
    8. ' afin' → logprob: -4.236161231994629
    9. ' qui' → logprob: -4.861161231994629
    10. ' car' → logprob: -4.861161231994629

Token 236: ' aussi' (ID: 9894)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.2732305526733398
    2. ' les' → logprob: -1.3982305526733398
    3. ' pas' → logprob: -1.6482305526733398
    4. '#' → logprob: -2.52323055267334
    5. ' #' → logprob: -2.64823055267334
    6. ' que' → logprob: -3.77323055267334
    7. ' en' → logprob: -4.64823055267334
    8. ' ensuite' → logprob: -4.64823055267334
    9. ' celles' → logprob: -4.77323055267334
    10. ' non' → logprob: -5.27323055267334

Token 237: ' trouver' (ID: 23195)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.45291706919670105
    2. ' des' → logprob: -2.2029170989990234
    3. 'aux' → logprob: -2.7029170989990234
    4. ' celles' → logprob: -2.7029170989990234
    5. ' les' → logprob: -3.4529170989990234
    6. '#' → logprob: -3.9529170989990234
    7. ',' → logprob: -4.202917098999023
    8. ' vers' → logprob: -5.077917098999023
    9. ' ' → logprob: -5.077917098999023
    10. 'des' → logprob: -5.202917098999023

Token 238: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6945850253105164
    2. ' les' → logprob: -1.3195850849151611
    3. '<|end|>' → logprob: -1.8195850849151611
    4. ' ' → logprob: -3.944585084915161
    5. 's' → logprob: -4.569584846496582
    6. 'les' → logprob: -4.694584846496582
    7. 'des' → logprob: -4.944584846496582
    8. ',' → logprob: -5.569584846496582
    9. ' celles' → logprob: -6.069584846496582
    10. 'tokens' → logprob: -6.069584846496582

Token 239: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.896609365940094
    2. '   ' → logprob: -1.2716093063354492
    3. ' les' → logprob: -2.021609306335449
    4. ',' → logprob: -2.396609306335449
    5. ' ' → logprob: -3.771609306335449
    6. ' la' → logprob: -4.271609306335449
    7. '#' → logprob: -4.896609306335449
    8. '  ' → logprob: -5.396609306335449
    9. 'des' → logprob: -5.646609306335449
    10. ')' → logprob: -5.771609306335449

Token 240: ' #' (ID: 1069)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5849693417549133
    2. ' des' → logprob: -1.5849692821502686
    3. '#' (adapté à ' #') → logprob: -2.5849692821502686
    4. '   ' → logprob: -3.0849692821502686
    5. 'les' → logprob: -3.7099692821502686
    6. ' la' → logprob: -3.7099692821502686
    7. ',' → logprob: -3.9599692821502686
    8. 'des' → logprob: -4.709969520568848
    9. ' un' → logprob: -5.709969520568848
    10. ' #' → logprob: -5.709969520568848

Token 241: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14928078651428223
    2. ' des' → logprob: -2.3992807865142822
    3. 'les' → logprob: -4.149280548095703
    4. ' la' → logprob: -5.024280548095703
    5. ' ' → logprob: -5.774280548095703
    6. ' un' → logprob: -5.899280548095703
    7. ' celles' → logprob: -6.024280548095703
    8. ' l' → logprob: -6.149280548095703
    9. ' toutes' → logprob: -6.149280548095703
    10. ',' → logprob: -6.274280548095703

Token 242: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.6191834211349487
    2. ' liste' → logprob: -1.3691834211349487
    3. 'distance' → logprob: -2.7441835403442383
    4. ' queue' → logprob: -3.4941835403442383
    5. ' frontière' → logprob: -4.119183540344238
    6. ' case' → logprob: -4.244183540344238
    7. ' ' → logprob: -4.369183540344238
    8. ' prochaine' → logprob: -4.744183540344238
    9. ' forêt' → logprob: -5.119183540344238
    10. ' distances' → logprob: -5.369183540344238

Token 243: ' minimale' (ID: 143217)
  Prédit: ' minimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.034697286784648895
    2. '_min' → logprob: -4.53469705581665
    3. ' maximale' → logprob: -5.03469705581665
    4. ' des' → logprob: -5.03469705581665
    5. 's' → logprob: -5.78469705581665
    6. ' minimal' → logprob: -6.15969705581665
    7. ' minimum' → logprob: -7.03469705581665
    8. ' optimale' → logprob: -7.15969705581665
    9. ' ' → logprob: -7.40969705581665
    10. ' minim' → logprob: -8.159697532653809

Token 244: ' entre' (ID: 3853)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5171887874603271
    2. ' aux' → logprob: -1.3921887874603271
    3. ' jusqu' → logprob: -3.267188787460327
    4. ' ' → logprob: -3.767188787460327
    5. '<|end|>' → logprob: -4.142189025878906
    6. ' à' → logprob: -4.267189025878906
    7. ' minimale' → logprob: -4.642189025878906
    8. ' entre' → logprob: -4.892189025878906
    9. ' au' → logprob: -4.892189025878906
    10. ' de' → logprob: -4.892189025878906

Token 245: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4693893790245056
    2. 'l' → logprob: -1.8443894386291504
    3. ' les' → logprob: -2.4693894386291504
    4. ' toutes' → logprob: -3.5943894386291504
    5. 'les' → logprob: -3.8443894386291504
    6. ' la' → logprob: -4.21938943862915
    7. ' chaque' → logprob: -4.34438943862915
    8. ' une' → logprob: -4.59438943862915
    9. ' des' → logprob: -4.71938943862915
    10. ' celles' → logprob: -4.71938943862915

Token 246: ''us' (ID: 143210)
  Prédit: ''us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''us' → logprob: -0.03904307633638382
    2. ''' → logprob: -3.7890431880950928
    3. ''ensemble' → logprob: -4.914042949676514
    4. 'a' → logprob: -5.414042949676514
    5. ''import' → logprob: -6.164042949676514
    6. ''utilisateur' → logprob: -7.789042949676514
    7. ''a' → logprob: -8.289043426513672
    8. '’us' → logprob: -8.789043426513672
    9. 'e' → logprob: -8.914043426513672
    10. 'es' → logprob: -9.664043426513672

Token 247: 'ine' (ID: 514)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.35165682435035706
    2. 'e' → logprob: -1.7266567945480347
    3. 'eur' → logprob: -2.726656913757324
    4. 'ers' → logprob: -4.351656913757324
    5. 'es' → logprob: -4.601656913757324
    6. 'r' → logprob: -4.726656913757324
    7. 'ine' → logprob: -4.976656913757324
    8. 'ere' → logprob: -5.101656913757324
    9. 'ines' → logprob: -6.476656913757324
    10. 'ère' → logprob: -7.226656913757324

Token 248: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.10544136166572571
    2. 'et' → logprob: -3.4804413318634033
    3. ',' → logprob: -3.8554413318634033
    4. '   ' → logprob: -4.480441570281982
    5. ' aux' → logprob: -4.480441570281982
    6. ' ' → logprob: -4.855441570281982
    7. 'aux' → logprob: -5.980441570281982
    8. '    ' → logprob: -6.105441570281982
    9. ' and' → logprob: -6.230441570281982
    10. ' à' → logprob: -6.480441570281982

Token 249: ' T' (ID: 353)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.16784973442554474
    2. 'les' → logprob: -1.9178497791290283
    3. ' toutes' → logprob: -5.792849540710449
    4. ' chaque' → logprob: -7.167849540710449
    5. ' leurs' → logprob: -7.292849540710449
    6. ' des' → logprob: -7.292849540710449
    7. 'l' → logprob: -7.542849540710449
    8. 't' → logprob: -8.04284954071045
    9. ' celles' → logprob: -8.29284954071045
    10. 'cases' → logprob: -9.04284954071045

Token 250: 'OUT' (ID: 5858)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.5782007575035095
    2. '[]' → logprob: -2.5782008171081543
    3. 'out' → logprob: -2.5782008171081543
    4. 'outes' → logprob: -3.7032008171081543
    5. ' les' → logprob: -3.9532008171081543
    6. 'les' → logprob: -3.9532008171081543
    7. 'rees' → logprob: -3.9532008171081543
    8. 's' → logprob: -3.9532008171081543
    9. '[' → logprob: -4.203200817108154
    10. ' la' → logprob: -4.203200817108154

Token 251: 'ES' (ID: 1759)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.026055607944726944
    2. 'e' → logprob: -4.401055812835693
    3. ' les' → logprob: -4.401055812835693
    4. 's' → logprob: -7.776055812835693
    5. 'les' → logprob: -7.776055812835693
    6. ' es' → logprob: -9.026055335998535
    7. ' e' → logprob: -9.526055335998535
    8. ' le' → logprob: -9.651055335998535
    9. ' ' → logprob: -10.276055335998535
    10. 'ES' → logprob: -11.401055335998535

Token 252: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.07326555997133255
    2. 'les' → logprob: -2.698265552520752
    3. ' celles' → logprob: -6.198265552520752
    4. '<|end|>' → logprob: -6.948265552520752
    5. ' ' → logprob: -8.94826602935791
    6. 's' → logprob: -10.07326602935791
    7. ' cases' → logprob: -10.57326602935791
    8. ' cells' → logprob: -10.82326602935791
    9. ' des' → logprob: -10.94826602935791
    10. ' cellules' → logprob: -10.94826602935791

Token 253: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.47605812549591064
    2. 'cases' → logprob: -0.9760581254959106
    3. ' arbres' → logprob: -7.351058006286621
    4. ' cells' → logprob: -7.976058006286621
    5. ' cellules' → logprob: -7.976058006286621
    6. ' case' → logprob: -8.851058006286621
    7. 'case' → logprob: -9.101058006286621
    8. ' positions' → logprob: -9.226058006286621
    9. 'cells' → logprob: -9.226058006286621
    10. ' trees' → logprob: -10.601058006286621

Token 254: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6723731756210327
    2. '.' → logprob: -2.0473732948303223
    3. ' ,' → logprob: -2.0473732948303223
    4. '   ' → logprob: -2.2973732948303223
    5. ' ' → logprob: -3.0473732948303223
    6. '
' → logprob: -4.172373294830322
    7. ':' → logprob: -4.922373294830322
    8. ' en' → logprob: -5.047373294830322
    9. ' .' → logprob: -5.172373294830322
    10. '  ' → logprob: -5.672373294830322

Token 255: 'qu' (ID: 351)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.496134489774704
    2. ')' → logprob: -0.9961345195770264
    3. ',' → logprob: -5.121134281158447
    4. ' où' → logprob: -5.621134281158447
    5. ' ),' → logprob: -6.371134281158447
    6. '   ' → logprob: -6.371134281158447
    7. ' avec' → logprob: -6.996134281158447
    8. ' )
' → logprob: -6.996134281158447
    9. '),' → logprob: -6.996134281158447
    10. 'où' → logprob: -7.121134281158447

Token 256: ''elles' (ID: 118359)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3156794309616089
    2. '')' → logprob: -1.8156794309616089
    3. ''il' → logprob: -3.6906795501708984
    4. ''on' → logprob: -4.065679550170898
    5. ''elles' → logprob: -4.065679550170898
    6. ''' → logprob: -4.315679550170898
    7. 'i' → logprob: -4.565679550170898
    8. 'el' → logprob: -5.315679550170898
    9. 'elles' → logprob: -5.565679550170898
    10. 'and' → logprob: -5.690679550170898

Token 257: ' aient' (ID: 191751)
  Prédit: ' soient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soient' → logprob: -0.9888777732849121
    2. ' aient' → logprob: -0.9888777732849121
    3. ' cont' → logprob: -1.613877773284912
    4. 'cont' → logprob: -3.613877773284912
    5. 'so' → logprob: -4.613877773284912
    6. '_cont' → logprob: -5.238877773284912
    7. ')' → logprob: -5.613877773284912
    8. 's' → logprob: -6.363877773284912
    9. ' ne' → logprob: -6.613877773284912
    10. ' soit' → logprob: -6.613877773284912

Token 258: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.09067496657371521
    2. '_' → logprob: -2.965674877166748
    3. ' ou' → logprob: -4.590674877166748
    4. ')' → logprob: -4.840674877166748
    5. ' )' → logprob: -4.840674877166748
    6. ' ' → logprob: -5.965674877166748
    7. 'des' → logprob: -6.590674877166748
    8. ' _' → logprob: -6.840674877166748
    9. ' or' → logprob: -7.090674877166748
    10. 's' → logprob: -7.340674877166748

Token 259: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.5770366787910461
    2. ' arbres' → logprob: -0.8270366787910461
    3. '0' → logprob: -7.5770368576049805
    4. 'ar' → logprob: -8.45203685760498
    5. ' ' → logprob: -8.95203685760498
    6. ' arb' → logprob: -9.20203685760498
    7. ' espaces' → logprob: -9.82703685760498
    8. ' arbre' → logprob: -10.57703685760498
    9. '_' → logprob: -11.57703685760498
    10. ' trees' → logprob: -11.70203685760498

Token 260: ' ou' (ID: 2031)
  Prédit: ' ou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.08036350458860397
    2. 'ou' → logprob: -3.7053635120391846
    3. ' or' → logprob: -3.7053635120391846
    4. ')' → logprob: -3.8303635120391846
    5. ',' → logprob: -6.3303632736206055
    6. ' ' → logprob: -6.5803632736206055
    7. 'or' → logprob: -6.5803632736206055
    8. ' )' → logprob: -7.2053632736206055
    9. '),' → logprob: -7.9553632736206055
    10. '0' → logprob: -8.705363273620605

Token 261: ' non' (ID: 2893)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.20276373624801636
    2. 'pas' → logprob: -1.7027637958526611
    3. ' non' → logprob: -7.702763557434082
    4. ')' → logprob: -7.952763557434082
    5. 'non' → logprob: -8.452763557434082
    6. 'not' → logprob: -9.077763557434082
    7. ' not' → logprob: -9.577763557434082
    8. '   ' → logprob: -9.827763557434082
    9. '```' → logprob: -10.702763557434082
    10. '#' → logprob: -10.952763557434082

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048446886241436005
    2. '   ' → logprob: -3.5484468936920166
    3. ' )' → logprob: -4.5484466552734375
    4. ',' → logprob: -6.0484466552734375
    5. '.' → logprob: -6.5484466552734375
    6. '
' → logprob: -6.5484466552734375
    7. 'def' → logprob: -6.9234466552734375
    8. ')
' → logprob: -7.5484466552734375
    9. ').' → logprob: -7.9234466552734375
    10. '):' → logprob: -8.173446655273438

Token 263: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9216862916946411
    2. '   ' → logprob: -1.1716862916946411
    3. '
' → logprob: -1.9216862916946411
    4. ':
' → logprob: -2.5466861724853516
    5. '    
' → logprob: -4.296686172485352
    6. '  
' → logprob: -4.546686172485352
    7. '.' → logprob: -4.921686172485352
    8. 'def' → logprob: -5.046686172485352
    9. ',' → logprob: -5.171686172485352
    10. '):' → logprob: -5.796686172485352

Token 264: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35125109553337097
    2. '
' → logprob: -1.7262511253356934
    3. '    
' → logprob: -3.1012511253356934
    4. '.' → logprob: -3.6012511253356934
    5. ',' → logprob: -3.6012511253356934
    6. '  
' → logprob: -5.351251125335693
    7. ':' → logprob: -5.851251125335693
    8. ',
' → logprob: -6.101251125335693
    9. ' 
' → logprob: -6.351251125335693
    10. '   
' → logprob: -6.476251125335693

Token 265: ' uniquement' (ID: 65527)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.121156245470047
    2. '   ' → logprob: -3.3711562156677246
    3. ',' → logprob: -3.7461562156677246
    4. '.' → logprob: -4.246156215667725
    5. '    
' → logprob: -4.496156215667725
    6. ',
' → logprob: -4.996156215667725
    7. '  
' → logprob: -5.371156215667725
    8. ':' → logprob: -5.496156215667725
    9. ' 
' → logprob: -5.996156215667725
    10. '.
' → logprob: -6.371156215667725

Token 266: ' via' (ID: 4493)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.4767771065235138
    2. 'sur' → logprob: -1.1017770767211914
    3. ' par' → logprob: -5.351777076721191
    4. ' ' → logprob: -5.476777076721191
    5. ')' → logprob: -5.476777076721191
    6. ' si' → logprob: -5.601777076721191
    7. 'import' → logprob: -5.726777076721191
    8. '.' → logprob: -5.976777076721191
    9. ' à' → logprob: -6.101777076721191
    10. ' des' → logprob: -6.101777076721191

Token 267: ' cases' (ID: 7911)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.02408338524401188
    2. ' les' → logprob: -3.899083375930786
    3. 'des' → logprob: -6.024083614349365
    4. ' un' → logprob: -7.649083614349365
    5. 'les' → logprob: -8.149083137512207
    6. ' ' → logprob: -8.774083137512207
    7. ' une' → logprob: -10.149083137512207
    8. 'un' → logprob: -10.649083137512207
    9. ' espaces' → logprob: -10.774083137512207
    10. ' l' → logprob: -11.024083137512207

Token 268: ' v' (ID: 323)
  Prédit: ' sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sans' → logprob: -1.1077139377593994
    2. 'sans' → logprob: -1.1077139377593994
    3. '_' → logprob: -2.3577139377593994
    4. 's' → logprob: -2.9827139377593994
    5. 'vide' → logprob: -3.7327139377593994
    6. '_s' → logprob: -3.8577139377593994
    7. ' ' → logprob: -3.9827139377593994
    8. ' _' → logprob: -3.9827139377593994
    9. '_v' → logprob: -4.10771369934082
    10. ' v' → logprob: -4.10771369934082

Token 269: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.0015890118665993214
    2. 'ide' → logprob: -6.751588821411133
    3. 'id' → logprob: -8.876588821411133
    4. '   ' → logprob: -10.251588821411133
    5. 'i' → logprob: -10.376588821411133
    6. 'ïdes' → logprob: -11.251588821411133
    7. 'ues' → logprob: -11.376588821411133
    8. 'des' → logprob: -11.501588821411133
    9. '```' → logprob: -11.501588821411133
    10. 'ideos' → logprob: -11.876588821411133

Token 270: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5406776666641235
    2. '
' → logprob: -1.5406776666641235
    3. '    
' → logprob: -3.165677547454834
    4. ',' → logprob: -3.165677547454834
    5. '.' → logprob: -3.290677547454834
    6. ':' → logprob: -3.665677547454834
    7. 'def' → logprob: -4.415677547454834
    8. '\' → logprob: -4.790677547454834
    9. '\n' → logprob: -5.040677547454834
    10. '  
' → logprob: -5.040677547454834

Token 271: ' s' (ID: 265)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.0945171117782593
    2. ' se' → logprob: -1.4695171117782593
    3. ' pouvoir' → logprob: -2.719517230987549
    4. ' atteindre' → logprob: -2.719517230987549
    5. ' accéder' → logprob: -2.969517230987549
    6. 'le' → logprob: -3.219517230987549
    7. 'l' → logprob: -3.594517230987549
    8. ' le' → logprob: -3.719517230987549
    9. 'les' → logprob: -4.094517230987549
    10. ' y' → logprob: -4.094517230987549

Token 272: ''y' (ID: 27913)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008485502563416958
    2. 'u' → logprob: -5.258485317230225
    3. ''é' → logprob: -7.133485317230225
    4. ''effect' → logprob: -7.258485317230225
    5. 'ur' → logprob: -7.883485317230225
    6. ''e' → logprob: -8.508485794067383
    7. ''' → logprob: -8.633485794067383
    8. 'é' → logprob: -9.133485794067383
    9. ''ét' → logprob: -9.633485794067383
    10. 'p' → logprob: -9.633485794067383

Token 273: ' rendre' (ID: 44629)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.5872915387153625
    2. ' déplacer' → logprob: -0.8372915387153625
    3. 'de' → logprob: -5.462291717529297
    4. 'appro' → logprob: -6.462291717529297
    5. '   ' → logprob: -6.587291717529297
    6. ' rendre' → logprob: -7.462291717529297
    7. 'arr' → logprob: -7.587291717529297
    8. 'd' → logprob: -7.712291717529297
    9. 're' → logprob: -7.962291717529297
    10. ' dé' → logprob: -8.087291717529297

Token 274: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.339059442281723
    2. ',' → logprob: -2.339059352874756
    3. '.' → logprob: -2.464059352874756
    4. '
' → logprob: -3.089059352874756
    5. '    
' → logprob: -3.714059352874756
    6. ':' → logprob: -3.839059352874756
    7. ',
' → logprob: -5.714059352874756
    8. '\' → logprob: -6.214059352874756
    9. ')' → logprob: -6.464059352874756
    10. '\n' → logprob: -6.589059352874756

Token 275: ' Or' (ID: 2604)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43843400478363037
    2. '   ' → logprob: -1.3134340047836304
    3. '    
' → logprob: -2.68843412399292
    4. ',' → logprob: -5.56343412399292
    5. '  
' → logprob: -5.93843412399292
    6. '.' → logprob: -6.31343412399292
    7. '\' → logprob: -6.31343412399292
    8. '\n' → logprob: -6.68843412399292
    9. '   
' → logprob: -6.81343412399292
    10. ',
' → logprob: -6.93843412399292

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2184448093175888
    2. '   ' → logprob: -2.34344482421875
    3. ' ,' → logprob: -2.59344482421875
    4. '#' → logprob: -4.46844482421875
    5. '    ' → logprob: -5.96844482421875
    6. ' ' → logprob: -6.46844482421875
    7. '.' → logprob: -6.59344482421875
    8. '<|end|>' → logprob: -6.59344482421875
    9. ' que' → logprob: -7.09344482421875
    10. ')' → logprob: -7.09344482421875

Token 277: ' si' (ID: 1784)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6934999823570251
    2. ' ' → logprob: -2.06850004196167
    3. ' ' → logprob: -2.56850004196167
    4. '    ' → logprob: -2.81850004196167
    5. ' nous' → logprob: -3.31850004196167
    6. ' il' → logprob: -4.06850004196167
    7. ' for' → logprob: -4.06850004196167
    8. '   ' → logprob: -4.19350004196167
    9. ' we' → logprob: -4.31850004196167
    10. ' la' → logprob: -4.69350004196167

Token 278: ' une' (ID: 2463)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3634833097457886
    2. ' on' → logprob: -1.9884833097457886
    3. 'A' → logprob: -2.238483428955078
    4. ' les' → logprob: -4.363483428955078
    5. ' W' → logprob: -4.488483428955078
    6. ' la' → logprob: -4.863483428955078
    7. ' we' → logprob: -5.363483428955078
    8. ' nous' → logprob: -5.738483428955078
    9. ' ' → logprob: -6.113483428955078
    10. ' ' → logprob: -6.113483428955078

Token 279: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.24848005175590515
    2. ' arbre' → logprob: -2.2484800815582275
    3. ' ' → logprob: -3.6234800815582275
    4. 'case' → logprob: -3.9984800815582275
    5. ' espace' → logprob: -4.373479843139648
    6. ' voisin' → logprob: -4.623479843139648
    7. ' #' → logprob: -4.748479843139648
    8. ' space' → logprob: -5.123479843139648
    9. '#' → logprob: -5.373479843139648
    10. ' arbres' → logprob: -5.373479843139648

Token 280: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.057407259941101
    2. ' contient' → logprob: -2.0574073791503906
    3. ' est' → logprob: -2.1824073791503906
    4. 'adj' → logprob: -2.9324073791503906
    5. 'cont' → logprob: -3.0574073791503906
    6. ' avec' → logprob: -3.1824073791503906
    7. ' has' → logprob: -3.1824073791503906
    8. ' ' → logprob: -3.5574073791503906
    9. ' adj' → logprob: -3.6824073791503906
    10. 'vo' → logprob: -3.8074073791503906

Token 281: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.009227076545357704
    2. ' ' → logprob: -5.759227275848389
    3. 'des' → logprob: -6.384227275848389
    4. ' un' → logprob: -6.509227275848389
    5. ' au' → logprob: -6.759227275848389
    6. '0' → logprob: -8.00922679901123
    7. ' arbres' → logprob: -8.00922679901123
    8. ' une' → logprob: -8.13422679901123
    9. 's' → logprob: -8.75922679901123
    10. 'un' → logprob: -9.50922679901123

Token 282: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.056929536163806915
    2. 'arb' → logprob: -3.056929588317871
    3. '0' → logprob: -5.681929588317871
    4. ' espaces' → logprob: -6.431929588317871
    5. ' ' → logprob: -6.931929588317871
    6. ' voisins' → logprob: -7.306929588317871
    7. ' arb' → logprob: -8.181929588317871
    8. ' arbre' → logprob: -8.681929588317871
    9. 'ar' → logprob: -8.806929588317871
    10. ' zéro' → logprob: -8.931929588317871

Token 283: ',' (ID: 11)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8847757577896118
    2. '>' → logprob: -1.3847757577896118
    3. ',' → logprob: -1.5097757577896118
    4. ' ==' → logprob: -3.0097756385803223
    5. '==' → logprob: -3.3847756385803223
    6. '=' → logprob: -4.134775638580322
    7. ' =' → logprob: -5.009775638580322
    8. ' adj' → logprob: -6.009775638580322
    9. ' ,' → logprob: -6.009775638580322
    10. '   ' → logprob: -7.509775638580322

Token 284: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4239940643310547
    2. '   ' → logprob: -1.6739940643310547
    3. ' on' → logprob: -2.0489940643310547
    4. ',' → logprob: -2.2989940643310547
    5. ' il' → logprob: -2.7989940643310547
    6. ' ,' → logprob: -3.0489940643310547
    7. ' #' → logprob: -3.4239940643310547
    8. ' et' → logprob: -3.5489940643310547
    9. '    ' → logprob: -3.5489940643310547
    10. ' alors' → logprob: -3.6739940643310547

Token 285: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.1154533252120018
    2. ' space' → logprob: -3.3654532432556152
    3. ' continue' → logprob: -3.9904532432556152
    4. ' peut' → logprob: -4.115453243255615
    5. ' n' → logprob: -4.740453243255615
    6. 'space' → logprob: -5.365453243255615
    7. ' can' → logprob: -5.365453243255615
    8. '_space' → logprob: -5.740453243255615
    9. ' peux' → logprob: -5.865453243255615
    10. ' cannot' → logprob: -5.865453243255615

Token 286: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -0.9497391581535339
    2. ' peut' → logprob: -1.0747392177581787
    3. ' ne' → logprob: -2.1997392177581787
    4. ' can' → logprob: -3.0747392177581787
    5. '_' → logprob: -3.6997392177581787
    6. ' space' → logprob: -4.3247389793396
    7. ' ' → logprob: -4.3247389793396
    8. '.' → logprob: -4.6997389793396
    9. ')' → logprob: -4.9497389793396
    10. ' ' → logprob: -5.1997389793396

Token 287: ' marcher' (ID: 171848)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.022050222381949425
    2. ' ' → logprob: -4.522050380706787
    3. 'pas' → logprob: -5.397050380706787
    4. '_' → logprob: -5.647050380706787
    5. ' plus' → logprob: -6.897050380706787
    6. '_pas' → logprob: -8.647049903869629
    7. ' rien' → logprob: -8.772049903869629
    8. ',' → logprob: -8.772049903869629
    9. ' accéder' → logprob: -8.897049903869629
    10. ' y' → logprob: -9.022049903869629

Token 288: ' dessus' (ID: 67454)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6472476720809937
    2. ' dessus' → logprob: -1.7722476720809937
    3. ' sur' → logprob: -1.8972476720809937
    4. 'sur' → logprob: -2.522247791290283
    5. ' uniquement' → logprob: -3.022247791290283
    6. ' )' → logprob: -5.022247791290283
    7. ' pas' → logprob: -5.522247791290283
    8. ' jusqu' → logprob: -5.647247791290283
    9. ' seulement' → logprob: -5.647247791290283
    10. ' jusque' → logprob: -5.897247791290283

Token 289: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8065757155418396
    2. '   ' → logprob: -0.9315757155418396
    3. '.' → logprob: -1.9315757751464844
    4. ')' → logprob: -5.056575775146484
    5. ' ' → logprob: -6.556575775146484
    6. ',
' → logprob: -6.931575775146484
    7. ':' → logprob: -6.931575775146484
    8. '#' → logprob: -7.306575775146484
    9. ''' → logprob: -7.681575775146484
    10. 'def' → logprob: -7.806575775146484

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8795638084411621
    2. ',' → logprob: -1.129563808441162
    3. ' mais' → logprob: -2.004563808441162
    4. ')' → logprob: -2.879563808441162
    5. ' but' → logprob: -4.004563808441162
    6. ' )' → logprob: -4.504563808441162
    7. '.' → logprob: -4.504563808441162
    8. ' 
' → logprob: -5.004563808441162
    9. ' ,' → logprob: -5.504563808441162
    10. ''' → logprob: -5.629563808441162

Token 291: ' #' (ID: 1069)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.8776423335075378
    2. ')' → logprob: -1.0026423931121826
    3. ' but' → logprob: -2.2526423931121826
    4. '   ' → logprob: -3.3776423931121826
    5. ' )' → logprob: -3.6276423931121826
    6. ',' → logprob: -4.0026421546936035
    7. ''' → logprob: -5.0026421546936035
    8. ' 
' → logprob: -5.3776421546936035
    9. ' car' → logprob: -5.7526421546936035
    10. '#' (adapté à ' #') → logprob: -6.0026421546936035

Token 292: ' donc' (ID: 14206)
  Prédit: ' mais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mais' → logprob: -0.3370145857334137
    2. ' but' → logprob: -1.4620145559310913
    3. '#' → logprob: -3.087014675140381
    4. 'but' → logprob: -6.212014675140381
    5. ' #' → logprob: -6.587014675140381
    6. ' car' → logprob: -6.962014675140381
    7. ' donc' → logprob: -6.962014675140381
    8. 'mais' → logprob: -7.212014675140381
    9. ' seulement' → logprob: -7.462014675140381
    10. ' sauf' → logprob: -7.462014675140381

Token 293: ' le' (ID: 505)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8572165369987488
    2. ' continuer' → logprob: -1.1072165966033936
    3. ' il' → logprob: -1.8572165966033936
    4. 'contin' → logprob: -3.9822165966033936
    5. 'on' → logprob: -4.1072163581848145
    6. '#' → logprob: -4.2322163581848145
    7. ' nous' → logprob: -4.3572163581848145
    8. ' continue' → logprob: -5.4822163581848145
    9. 'il' → logprob: -5.9822163581848145
    10. ' la' → logprob: -6.1072163581848145

Token 294: ' chemin' (ID: 45035)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.3612974286079407
    2. ' next' → logprob: -1.861297369003296
    3. ' déplacement' → logprob: -3.111297369003296
    4. '#' → logprob: -4.736297607421875
    5. ' passage' → logprob: -4.986297607421875
    6. ' reste' → logprob: -4.986297607421875
    7. ' ' → logprob: -5.111297607421875
    8. 's' → logprob: -5.236297607421875
    9. ' only' → logprob: -5.361297607421875
    10. ' ' → logprob: -5.486297607421875

Token 295: ' est' (ID: 893)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -1.304863691329956
    2. 's' → logprob: -1.429863691329956
    3. ' ' → logprob: -2.304863691329956
    4. ' s' → logprob: -2.429863691329956
    5. '_' → logprob: -2.679863691329956
    6. ' est' → logprob: -2.804863691329956
    7. ' doit' → logprob: -3.179863691329956
    8. ' ne' → logprob: -3.679863691329956
    9. '<|end|>' → logprob: -4.804863929748535
    10. ' continue' → logprob: -4.804863929748535

Token 296: ' impossible' (ID: 19786)
  Prédit: ' impossible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impossible' → logprob: -0.09517425298690796
    2. ' blo' → logprob: -2.5951743125915527
    3. 'im' → logprob: -4.970174312591553
    4. ' interrom' → logprob: -5.595174312591553
    5. 'blo' → logprob: -6.720174312591553
    6. ' possible' → logprob: -7.470174312591553
    7. ' inf' → logprob: -7.595174312591553
    8. ' imposs' → logprob: -7.970174312591553
    9. ' interdit' → logprob: -7.970174312591553
    10. 'inf' → logprob: -7.970174312591553

Token 297: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5312538743019104
    2. '   ' → logprob: -1.1562538146972656
    3. '    
' → logprob: -2.5312538146972656
    4. '\n' → logprob: -5.531253814697266
    5. '.' → logprob: -6.406253814697266
    6. '  
' → logprob: -6.406253814697266
    7. 'def' → logprob: -6.531253814697266
    8. ',
' → logprob: -6.781253814697266
    9. '

' → logprob: -6.906253814697266
    10. ' 
' → logprob: -6.906253814697266

Token 298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15776501595973969
    2. '
' → logprob: -2.4077649116516113
    3. '    
' → logprob: -3.0327649116516113
    4. '.' → logprob: -6.657764911651611
    5. '  
' → logprob: -6.907764911651611
    6. '\n' → logprob: -7.032764911651611
    7. ',' → logprob: -7.157764911651611
    8. ' 
' → logprob: -7.157764911651611
    9. '\' → logprob: -7.407764911651611
    10. '   
' → logprob: -7.532764911651611

Token 299: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7804548144340515
    2. '   ' → logprob: -0.9054548144340515
    3. '    
' → logprob: -2.2804548740386963
    4. '\n' → logprob: -4.155454635620117
    5. 'def' → logprob: -5.655454635620117
    6. '  
' → logprob: -5.655454635620117
    7. ' 
' → logprob: -5.780454635620117
    8. '\' → logprob: -6.155454635620117
    9. '   
' → logprob: -6.405454635620117
    10. ',' → logprob: -6.780454635620117

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00932522863149643
    2. '    
' → logprob: -4.88432502746582
    3. 'def' → logprob: -7.00932502746582
    4. 'dire' → logprob: -8.38432502746582
    5. '    
    
' → logprob: -9.25932502746582
    6. '#' → logprob: -9.38432502746582
    7. '    ' → logprob: -9.38432502746582
    8. 'import' → logprob: -9.50932502746582
    9. 'from' → logprob: -9.63432502746582
    10. ' directions' → logprob: -10.13432502746582

Token 301: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16424259543418884
    2. 'dire' → logprob: -2.6642425060272217
    3. ' directions' → logprob: -3.9142425060272217
    4. 'visited' → logprob: -4.289242744445801
    5. '    
' → logprob: -4.539242744445801
    6. 'def' → logprob: -4.539242744445801
    7. '#' (adapté à ' #') → logprob: -4.664242744445801
    8. 'distance' → logprob: -5.414242744445801
    9. 'dist' → logprob: -6.164242744445801
    10. '
' → logprob: -6.539242744445801

Token 302: ' La' (ID: 3038)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.4114097356796265
    2. 'visited' → logprob: -1.4114097356796265
    3. '#' → logprob: -1.7864097356796265
    4. 'dist' → logprob: -2.036409854888916
    5. 'dire' → logprob: -2.536409854888916
    6. '   ' → logprob: -3.411409854888916
    7. 'distance' → logprob: -3.786409854888916
    8. ' visited' → logprob: -3.911409854888916
    9. ' queue' → logprob: -3.911409854888916
    10. 'from' → logprob: -4.411409854888916

Token 303: ' stratégie' (ID: 79899)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.2888152301311493
    2. 'queue' → logprob: -1.4138152599334717
    3. 'from' → logprob: -5.413815021514893
    4. '#' → logprob: -7.413815021514893
    5. ' #' → logprob: -7.913815021514893
    6. ' file' → logprob: -8.16381549835205
    7. 'deque' → logprob: -8.41381549835205
    8. 'import' → logprob: -8.53881549835205
    9. ' from' → logprob: -8.53881549835205
    10. 'visited' → logprob: -8.78881549835205

Token 304: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36625227332115173
    2. '=' → logprob: -1.9912523031234741
    3. ':' → logprob: -2.1162521839141846
    4. ' est' → logprob: -3.4912521839141846
    5. '#' → logprob: -5.491252422332764
    6. ' consiste' → logprob: -5.491252422332764
    7. ' :' → logprob: -5.616252422332764
    8. ' suivante' → logprob: -6.241252422332764
    9. ' #' → logprob: -6.491252422332764
    10. ' is' → logprob: -6.991252422332764

Token 305: ' donc' (ID: 14206)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1541173756122589
    2. ' d' → logprob: -2.4041173458099365
    3. '   ' → logprob: -3.4041173458099365
    4. '    ' → logprob: -5.279117584228516
    5. ' :' → logprob: -5.654117584228516
    6. ':' → logprob: -5.654117584228516
    7. 'de' → logprob: -5.904117584228516
    8. ' donc' → logprob: -6.404117584228516
    9. ' ' → logprob: -7.154117584228516
    10. 'd' → logprob: -7.529117584228516

Token 306: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.40981554985046387
    2. ' d' → logprob: -1.2848155498504639
    3. '   ' → logprob: -3.409815549850464
    4. ':' → logprob: -4.409815788269043
    5. '    ' → logprob: -5.284815788269043
    6. ' ' → logprob: -5.909815788269043
    7. ' :' → logprob: -6.284815788269043
    8. 'de' → logprob: -6.784815788269043
    9. ' to' → logprob: -6.784815788269043
    10. 'd' → logprob: -6.909815788269043

Token 307: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.7128156423568726
    2. ' continuer' → logprob: -1.9628156423568726
    3. ' utiliser' → logprob: -2.212815761566162
    4. ' effectuer' → logprob: -2.712815761566162
    5. 'contin' → logprob: -2.837815761566162
    6. ' faire' → logprob: -3.087815761566162
    7. 'expl' → logprob: -3.587815761566162
    8. ' parcour' → logprob: -4.212815761566162
    9. 'util' → logprob: -4.462815761566162
    10. ' explorer' → logprob: -4.587815761566162

Token 308: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5220714211463928
    2. ' un' → logprob: -1.147071361541748
    3. 'une' → logprob: -2.897071361541748
    4. 'un' → logprob: -3.397071361541748
    5. '   ' → logprob: -8.397071838378906
    6. ' ' → logprob: -9.147071838378906
    7. ' BFS' → logprob: -10.272071838378906
    8. 'b' → logprob: -10.397071838378906
    9. '#' → logprob: -11.397071838378906
    10. 'a' → logprob: -11.647071838378906

Token 309: ' BFS' (ID: 190016)
  Prédit: ' BFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' BFS' → logprob: -0.9258065819740295
    2. 'b' → logprob: -1.0508065223693848
    3. 'B' → logprob: -2.0508065223693848
    4. ' bfs' → logprob: -2.1758065223693848
    5. 'bread' → logprob: -5.175806522369385
    6. ' breadth' → logprob: -5.425806522369385
    7. 'deque' → logprob: -7.550806522369385
    8. 'par' → logprob: -7.800806522369385
    9. ' parcours' → logprob: -8.550806999206543
    10. 'queue' → logprob: -8.550806999206543

Token 310: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11245355010032654
    2. ' à' → logprob: -3.7374534606933594
    3. 'from' → logprob: -3.8624534606933594
    4. '(' → logprob: -3.9874534606933594
    5. ' depuis' → logprob: -3.9874534606933594
    6. ',' → logprob: -4.862453460693359
    7. ' starting' → logprob: -5.362453460693359
    8. ' from' → logprob: -5.862453460693359
    9. '    
' → logprob: -6.612453460693359
    10. 'de' → logprob: -6.612453460693359

Token 311: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41681304574012756
    2. ' (' → logprob: -1.2918130159378052
    3. ' l' → logprob: -3.6668131351470947
    4. 'l' → logprob: -3.9168131351470947
    5. ' la' → logprob: -4.041812896728516
    6. 'la' → logprob: -6.041812896728516
    7. 'le' → logprob: -8.041812896728516
    8. '(l' → logprob: -9.166812896728516
    9. 'the' → logprob: -9.541812896728516
    10. ' ' → logprob: -9.791812896728516

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014146463945508003
    2. ' ' → logprob: -4.514146327972412
    3. '(' → logprob: -6.264146327972412
    4. ' (' → logprob: -6.764146327972412
    5. '   ' → logprob: -10.76414680480957
    6. '1' → logprob: -11.38914680480957
    7. ')' → logprob: -13.51414680480957
    8. '  ' → logprob: -14.38914680480957
    9. ',' → logprob: -14.88914680480957
    10. ' ' → logprob: -15.20164680480957

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002205828350270167
    2. '0' → logprob: -8.62522029876709
    3. ' ,' → logprob: -10.12522029876709
    4. ')' → logprob: -15.37522029876709
    5. ' ' → logprob: -15.37522029876709
    6. ',
' → logprob: -16.000221252441406
    7. '   ' → logprob: -16.875221252441406
    8. '```' → logprob: -16.875221252441406
    9. '，' → logprob: -17.375221252441406
    10. '
' → logprob: -17.500221252441406

Token 314: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502598519437015
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. ',' → logprob: -16.376502990722656
    5. '	' → logprob: -17.626502990722656
    6. '  ' → logprob: -18.501502990722656
    7. ')' → logprob: -19.626502990722656
    8. '۰' → logprob: -19.751502990722656
    9. '<|end|>' → logprob: -20.251502990722656
    10. '    ' → logprob: -20.501502990722656

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002263046189909801
    2. ' )' → logprob: -8.500226020812988
    3. '),' → logprob: -11.625226020812988
    4. ')
' → logprob: -11.875226020812988
    5. '   ' → logprob: -12.375226020812988
    6. ',' → logprob: -13.750226020812988
    7. ' ' → logprob: -14.625226020812988
    8. '):' → logprob: -15.375226020812988
    9. ').' → logprob: -15.750226020812988
    10. ')...' → logprob: -15.875226020812988

Token 316: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18394622206687927
    2. ',' → logprob: -2.433946132659912
    3. ')' → logprob: -3.433946132659912
    4. '(' → logprob: -4.308946132659912
    5. '
' → logprob: -4.558946132659912
    6. '(queue' → logprob: -4.558946132659912
    7. '    
' → logprob: -6.058946132659912
    8. '()' → logprob: -6.433946132659912
    9. ' )' → logprob: -6.683946132659912
    10. ':' → logprob: -6.683946132659912

Token 317: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0784156322479248
    2. 'les' → logprob: -3.203415632247925
    3. ' des' → logprob: -3.453415632247925
    4. ' la' → logprob: -6.703415870666504
    5. 'des' → logprob: -6.828415870666504
    6. ' toutes' → logprob: -8.453415870666504
    7. ' ' → logprob: -8.828415870666504
    8. 'la' → logprob: -9.078415870666504
    9. ' celles' → logprob: -9.078415870666504
    10. ' le' → logprob: -9.953415870666504

Token 318: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.4102701246738434
    2. 'cases' → logprob: -1.160270094871521
    3. '0' → logprob: -4.9102702140808105
    4. ' ' → logprob: -4.9102702140808105
    5. ' case' → logprob: -6.2852702140808105
    6. ' cells' → logprob: -6.2852702140808105
    7. 'case' → logprob: -7.1602702140808105
    8. 'gr' → logprob: -7.1602702140808105
    9. 'cells' → logprob: -7.2852702140808105
    10. ' cellules' → logprob: -7.2852702140808105

Token 319: ' sans' (ID: 9828)
  Prédit: ' sans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sans' → logprob: -0.29505476355552673
    2. ' où' → logprob: -2.5450546741485596
    3. 'sans' → logprob: -2.6700546741485596
    4. '   ' → logprob: -3.7950546741485596
    5. 'où' → logprob: -3.9200546741485596
    6. ' qui' → logprob: -3.9200546741485596
    7. ' without' → logprob: -4.545054912567139
    8. 'vid' → logprob: -5.045054912567139
    9. ' v' → logprob: -5.170054912567139
    10. ' where' → logprob: -5.420054912567139

Token 320: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.11425124108791351
    2. 'arb' → logprob: -2.239251136779785
    3. ' arbre' → logprob: -6.739251136779785
    4. 'ar' → logprob: -8.989251136779785
    5. ' arb' → logprob: -9.739251136779785
    6. ' ' → logprob: -10.989251136779785
    7. 'trees' → logprob: -11.489251136779785
    8. ' trees' → logprob: -11.864251136779785
    9. '_' → logprob: -12.239251136779785
    10. ' espaces' → logprob: -12.614251136779785

Token 321: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23979361355304718
    2. ',' → logprob: -1.6147936582565308
    3. '.' → logprob: -4.73979377746582
    4. ':' → logprob: -6.36479377746582
    5. '    
' → logprob: -6.98979377746582
    6. ')' → logprob: -7.11479377746582
    7. '
' → logprob: -7.73979377746582
    8. '  ' → logprob: -7.73979377746582
    9. ' (' → logprob: -8.36479377746582
    10. '    ' → logprob: -8.48979377746582

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08566781133413315
    2. ' en' → logprob: -2.960667848587036
    3. ' et' → logprob: -4.585667610168457
    4. '    ' → logprob: -5.335667610168457
    5. ' puis' → logprob: -5.585667610168457
    6. ' jusqu' → logprob: -5.835667610168457
    7. '#' → logprob: -6.335667610168457
    8. ' afin' → logprob: -6.585667610168457
    9. ' pour' → logprob: -7.210667610168457
    10. ' #' → logprob: -7.335667610168457

Token 323: ' #' (ID: 1069)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.16200155019760132
    2. '   ' → logprob: -2.162001609802246
    3. ' et' → logprob: -4.787001609802246
    4. ' jusqu' → logprob: -5.037001609802246
    5. ' afin' → logprob: -5.162001609802246
    6. ' puis' → logprob: -5.787001609802246
    7. ' que' → logprob: -6.287001609802246
    8. ',' → logprob: -6.287001609802246
    9. ')' → logprob: -6.412001609802246
    10. ' pour' → logprob: -6.537001609802246

Token 324: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01069782953709364
    2. ' en' → logprob: -5.260697841644287
    3. '#' → logprob: -6.135697841644287
    4. ' et' → logprob: -7.135697841644287
    5. ' #' → logprob: -7.385697841644287
    6. '    ' → logprob: -7.760697841644287
    7. ' que' → logprob: -8.260697364807129
    8. 'en' → logprob: -8.885697364807129
    9. ' afin' → logprob: -9.010697364807129
    10. ',' → logprob: -9.260697364807129

Token 325: ' obtenir' (ID: 54423)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.19644305109977722
    2. ' visiter' → logprob: -2.6964430809020996
    3. ' déterminer' → logprob: -3.5714430809020996
    4. ' découvrir' → logprob: -4.0714430809021
    5. ' explorer' → logprob: -4.1964430809021
    6. ' identifier' → logprob: -5.0714430809021
    7. ' obtenir' → logprob: -5.1964430809021
    8. ' que' → logprob: -5.6964430809021
    9. 'visited' → logprob: -5.6964430809021
    10. 'voir' → logprob: -5.8214430809021

Token 326: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5456511378288269
    2. ' les' → logprob: -0.9206511378288269
    3. 'les' → logprob: -4.920650959014893
    4. ' distances' → logprob: -5.545650959014893
    5. 'la' → logprob: -6.045650959014893
    6. ' leurs' → logprob: -6.295650959014893
    7. ' le' → logprob: -6.420650959014893
    8. ' l' → logprob: -6.670650959014893
    9. ' ' → logprob: -7.170650959014893
    10. ' une' → logprob: -7.295650959014893

Token 327: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4048442542552948
    2. ' distance' → logprob: -1.1548442840576172
    3. ' distances' → logprob: -4.529844284057617
    4. 'dist' → logprob: -5.279844284057617
    5. 'plus' → logprob: -7.154844284057617
    6. ' plus' → logprob: -7.404844284057617
    7. ' dist' → logprob: -8.404844284057617
    8. 'd' → logprob: -9.904844284057617
    9. '_distance' → logprob: -9.904844284057617
    10. ' ' → logprob: -10.279844284057617

Token 328: ' minimale' (ID: 143217)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5914812684059143
    2. '   ' → logprob: -1.4664812088012695
    3. ' ' → logprob: -2.7164812088012695
    4. '_map' → logprob: -2.7164812088012695
    5. ' =' → logprob: -4.7164812088012695
    6. ',' → logprob: -4.7164812088012695
    7. '_matrix' → logprob: -4.7164812088012695
    8. '[' → logprob: -4.8414812088012695
    9. 'es' → logprob: -5.0914812088012695
    10. '=' → logprob: -5.2164812088012695

Token 329: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18483789265155792
    2. '.' → logprob: -2.934837818145752
    3. ',' → logprob: -3.184837818145752
    4. 's' → logprob: -3.559837818145752
    5. ' ' → logprob: -4.559837818145752
    6. ':' → logprob: -4.934837818145752
    7. 'dist' → logprob: -5.184837818145752
    8. ' jusqu' → logprob: -5.809837818145752
    9. ')' → logprob: -6.059837818145752
    10. '  ' → logprob: -6.184837818145752

Token 330: ' VO' (ID: 39292)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.035849906504154205
    2. ' toutes' → logprob: -4.5358500480651855
    3. ' atteindre' → logprob: -4.6608500480651855
    4. ' chacune' → logprob: -5.0358500480651855
    5. ' aller' → logprob: -6.1608500480651855
    6. ' each' → logprob: -6.2858500480651855
    7. ' ' → logprob: -7.1608500480651855
    8. 'atte' → logprob: -7.2858500480651855
    9. ' toucher' → logprob: -7.6608500480651855
    10. ' all' → logprob: -7.7858500480651855

Token 331: 'IR' (ID: 4368)
  Prédit: 'IR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.3549253046512604
    2. 'US' → logprob: -1.229925274848938
    3. 'us' → logprob: -5.854925155639648
    4. '
' → logprob: -7.354925155639648
    5. 'ir' → logprob: -7.729925155639648
    6. 'Y' → logprob: -7.979925155639648
    7. 'S' → logprob: -8.229925155639648
    8. 'T' → logprob: -8.479925155639648
    9. 'ULO' → logprob: -8.479925155639648
    10. 'I' → logprob: -8.604925155639648

Token 332: ' toutes' (ID: 17502)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.16656887531280518
    2. ' ' → logprob: -3.0415687561035156
    3. ' chacune' → logprob: -3.1665687561035156
    4. ' toutes' → logprob: -3.9165687561035156
    5. ' les' → logprob: -4.041568756103516
    6. ' la' → logprob: -4.291568756103516
    7. ' l' → logprob: -5.541568756103516
    8. ' each' → logprob: -6.541568756103516
    9. ' le' → logprob: -6.541568756103516
    10. ' un' → logprob: -7.166568756103516

Token 333: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.0046083685010671616
    2. 'les' → logprob: -6.629608154296875
    3. ' ' → logprob: -6.754608154296875
    4. ' des' → logprob: -7.754608154296875
    5. ' celles' → logprob: -8.379608154296875
    6. ' leurs' → logprob: -8.629608154296875
    7. '<|end|>' → logprob: -8.629608154296875
    8. ' ses' → logprob: -8.879608154296875
    9. ' la' → logprob: -9.004608154296875
    10. ' neighboring' → logprob: -9.254608154296875

Token 334: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.028973404318094254
    2. 'cases' → logprob: -3.653973340988159
    3. ' case' → logprob: -6.278973579406738
    4. ' positions' → logprob: -8.278973579406738
    5. 'case' → logprob: -9.278973579406738
    6. ' espaces' → logprob: -9.528973579406738
    7. ' ' → logprob: -9.528973579406738
    8. ' places' → logprob: -9.903973579406738
    9. ' spaces' → logprob: -10.153973579406738
    10. ' cells' → logprob: -10.903973579406738

Token 335: ' accessibles' (ID: 156723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026947667822241783
    2. ',' → logprob: -4.026947498321533
    3. '.' → logprob: -5.651947498321533
    4. ':' → logprob: -5.776947498321533
    5. 'def' → logprob: -6.901947498321533
    6. '    
' → logprob: -8.151947975158691
    7. '    ' → logprob: -9.026947975158691
    8. '
' → logprob: -9.026947975158691
    9. ')' → logprob: -9.276947975158691
    10. '#' → logprob: -9.401947975158691

Token 336: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06507503986358643
    2. ',' → logprob: -3.190074920654297
    3. '.' → logprob: -3.940074920654297
    4. ':' → logprob: -8.190074920654297
    5. ' (' → logprob: -8.190074920654297
    6. '  ' → logprob: -8.190074920654297
    7. '    
' → logprob: -8.315074920654297
    8. ' ,' → logprob: -8.940074920654297
    9. '    ' → logprob: -9.065074920654297
    10. 'from' → logprob: -9.190074920654297

Token 337: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.15161831676959991
    2. 'arb' → logprob: -2.276618242263794
    3. 'ar' → logprob: -4.151618480682373
    4. ' arbre' → logprob: -4.151618480682373
    5. '_' → logprob: -5.901618480682373
    6. ' arb' → logprob: -7.276618480682373
    7. ' espaces' → logprob: -7.401618480682373
    8. '_ar' → logprob: -7.526618480682373
    9. ' ' → logprob: -7.651618480682373
    10. 's' → logprob: -8.151618003845215

Token 338: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008809207938611507
    2. ',' → logprob: -5.2588090896606445
    3. '.' → logprob: -6.6338090896606445
    4. '    
' → logprob: -6.7588090896606445
    5. 'def' → logprob: -7.6338090896606445
    6. ')' → logprob: -8.508809089660645
    7. ':' → logprob: -9.008809089660645
    8. '
' → logprob: -9.133809089660645
    9. '    ' → logprob: -10.258809089660645
    10. ',
' → logprob: -10.883809089660645

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15263113379478455
    2. '
' → logprob: -2.2776310443878174
    3. '    
' → logprob: -3.4026310443878174
    4. 'def' → logprob: -6.6526312828063965
    5. ',' → logprob: -7.0276312828063965
    6. '  
' → logprob: -7.7776312828063965
    7. '\n' → logprob: -7.7776312828063965
    8. ')' → logprob: -7.9026312828063965
    9. '#' → logprob: -7.9026312828063965
    10. '   
' → logprob: -8.277630805969238

Token 340: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006881130393594503
    2. '    
' → logprob: -5.131881237030029
    3. '
' → logprob: -7.256881237030029
    4. 'queue' → logprob: -9.756880760192871
    5. 'distance' → logprob: -9.756880760192871
    6. ' distances' → logprob: -10.506880760192871
    7. ',' → logprob: -11.256880760192871
    8. '    ' → logprob: -11.256880760192871
    9. 'visited' → logprob: -11.256880760192871
    10. 'def' → logprob: -11.756880760192871

Token 341: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012595707550644875
    2. '    
' → logprob: -5.1375956535339355
    3. 'queue' → logprob: -5.5125956535339355
    4. '
' → logprob: -6.2625956535339355
    5. 'visited' → logprob: -8.762596130371094
    6. ',' → logprob: -9.137596130371094
    7. 'def' → logprob: -9.387596130371094
    8. '  
' → logprob: -9.512596130371094
    9. ' queue' → logprob: -9.887596130371094
    10. '   
' → logprob: -10.637596130371094

Token 342: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11896326392889023
    2. ' on' → logprob: -2.8689632415771484
    3. ' for' → logprob: -3.9939632415771484
    4. 'for' → logprob: -4.243963241577148
    5. ' de' → logprob: -5.368963241577148
    6. '#' → logprob: -5.368963241577148
    7. 'import' → logprob: -6.243963241577148
    8. ' #' → logprob: -6.493963241577148
    9. ' ensuite' → logprob: -6.493963241577148
    10. ' ' → logprob: -6.618963241577148

Token 343: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1426893025636673
    2. ' for' → logprob: -2.7676892280578613
    3. 'for' → logprob: -3.5176892280578613
    4. '    ' → logprob: -4.767689228057861
    5. ' on' → logprob: -4.767689228057861
    6. ' #' → logprob: -5.267689228057861
    7. ' ' → logprob: -5.392689228057861
    8. '#' → logprob: -5.392689228057861
    9. ' ' → logprob: -5.517689228057861
    10. '  ' → logprob: -6.392689228057861

Token 344: ' couper' (ID: 135212)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.014982117339968681
    2. ' chacune' → logprob: -5.514982223510742
    3. ' i' → logprob: -5.639982223510742
    4. 'each' → logprob: -5.764982223510742
    5. ' each' → logprob: -5.889982223510742
    6. ' ' → logprob: -8.389982223510742
    7. ' les' → logprob: -8.389982223510742
    8. ' toutes' → logprob: -9.264982223510742
    9. 'i' → logprob: -9.389982223510742
    10. 't' → logprob: -9.514982223510742

Token 345: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.017682861536741257
    2. 'les' → logprob: -4.892683029174805
    3. ' des' → logprob: -5.517683029174805
    4. '#' → logprob: -6.392683029174805
    5. ' un' → logprob: -7.017683029174805
    6. ' trees' → logprob: -7.142683029174805
    7. '<|end|>' → logprob: -7.517683029174805
    8. ' ' → logprob: -7.892683029174805
    9. ' toutes' → logprob: -7.892683029174805
    10. ' l' → logprob: -8.017683029174805

Token 346: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.00023226479243021458
    2. 'arb' → logprob: -9.500232696533203
    3. ' espaces' → logprob: -9.875232696533203
    4. ' trees' → logprob: -10.375232696533203
    5. ' arbre' → logprob: -10.375232696533203
    6. '_' → logprob: -11.750232696533203
    7. ' cases' → logprob: -12.250232696533203
    8. ' #' → logprob: -12.250232696533203
    9. ' ' → logprob: -12.750232696533203
    10. 'ar' → logprob: -12.750232696533203

Token 347: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6097958087921143
    2. ' adj' → logprob: -1.3597958087921143
    3. 'adj' → logprob: -1.8597958087921143
    4. ' adjacent' → logprob: -3.4847958087921143
    5. ' ,' → logprob: -5.109795570373535
    6. ' voisins' → logprob: -6.234795570373535
    7. '_adj' → logprob: -6.359795570373535
    8. ' on' → logprob: -6.609795570373535
    9. ' vois' → logprob: -7.484795570373535
    10. ' à' → logprob: -8.109795570373535

Token 348: ' une' (ID: 2463)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.138169527053833
    2. ' les' → logprob: -1.263169527053833
    3. ' des' → logprob: -1.513169527053833
    4. 'une' → logprob: -3.388169527053833
    5. ' une' → logprob: -3.388169527053833
    6. ' la' → logprob: -3.513169527053833
    7. 'l' → logprob: -3.888169527053833
    8. 'des' → logprob: -4.013169288635254
    9. 'la' → logprob: -4.263169288635254
    10. ' l' → logprob: -4.513169288635254

Token 349: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.04543904960155487
    2. 'case' → logprob: -3.1704390048980713
    3. ' zone' → logprob: -6.54543924331665
    4. ' ' → logprob: -8.795438766479492
    5. ' cases' → logprob: -8.795438766479492
    6. ' direction' → logprob: -8.920438766479492
    7. ' cellule' → logprob: -9.170438766479492
    8. ' ' → logprob: -9.545438766479492
    9. '   ' → logprob: -9.670438766479492
    10. ' adjacent' → logprob: -10.045438766479492

Token 350: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.3577668070793152
    2. 'adj' → logprob: -2.10776686668396
    3. ' vo' → logprob: -2.85776686668396
    4. 'vo' → logprob: -3.10776686668396
    5. ' vois' → logprob: -3.48276686668396
    6. '   ' → logprob: -4.107766628265381
    7. ',' → logprob: -4.107766628265381
    8. ' adjacent' → logprob: -5.607766628265381
    9. ' qui' → logprob: -6.232766628265381
    10. ' voisin' → logprob: -6.232766628265381

Token 351: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.11156629025936127
    2. 'acent' → logprob: -2.7365663051605225
    3. 'a' → logprob: -3.4865663051605225
    4. 'ace' → logprob: -5.611566066741943
    5. '   ' → logprob: -6.986566066741943
    6. 'acen' → logprob: -7.486566066741943
    7. 'acency' → logprob: -7.486566066741943
    8. 'cente' → logprob: -7.486566066741943
    9. '=' → logprob: -7.611566066741943
    10. '```' → logprob: -8.111566543579102

Token 352: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.07058738172054291
    2. 'ente' → logprob: -2.695587396621704
    3. 'entes' → logprob: -7.820587158203125
    4. 'ents' → logprob: -9.070587158203125
    5. '#' → logprob: -10.195587158203125
    6. '   ' → logprob: -10.570587158203125
    7. 'e' → logprob: -10.945587158203125
    8. ' ent' → logprob: -11.820587158203125
    9. '```' → logprob: -11.820587158203125
    10. '(' → logprob: -12.445587158203125

Token 353: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6854915618896484
    2. ' aux' → logprob: -1.0604915618896484
    3. 'e' → logprob: -2.9354915618896484
    4. ' à' → logprob: -3.1854915618896484
    5. 's' → logprob: -4.060491561889648
    6. '   ' → logprob: -4.185491561889648
    7. ' ,' → logprob: -4.310491561889648
    8. 'es' → logprob: -5.935491561889648
    9. 'aux' → logprob: -6.810491561889648
    10. ' ' → logprob: -7.185491561889648

Token 354: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4010171592235565
    2. 'une' → logprob: -1.151017189025879
    3. 'un' → logprob: -5.526017189025879
    4. ' un' → logprob: -5.651017189025879
    5. ' des' → logprob: -5.901017189025879
    6. ' ' → logprob: -7.151017189025879
    7. 'des' → logprob: -7.651017189025879
    8. 'ces' → logprob: -7.651017189025879
    9. ''une' → logprob: -7.651017189025879
    10. 'la' → logprob: -8.401017189025879

Token 355: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.07682535797357559
    2. 'case' → logprob: -2.7018253803253174
    3. ' space' → logprob: -6.576825141906738
    4. ' empty' → logprob: -6.826825141906738
    5. ' cases' → logprob: -6.951825141906738
    6. ' espace' → logprob: -7.326825141906738
    7. ' ' → logprob: -7.576825141906738
    8. ' cas' → logprob: -7.701825141906738
    9. ' cellule' → logprob: -8.701825141906738
    10. 'space' → logprob: -8.701825141906738

Token 356: ' vide' (ID: 21835)
  Prédit: ' sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sans' → logprob: -0.794384777545929
    2. 'sans' → logprob: -0.794384777545929
    3. 'vide' → logprob: -2.794384717941284
    4. ' vide' → logprob: -3.544384717941284
    5. ' without' → logprob: -5.669384956359863
    6. 'without' → logprob: -7.044384956359863
    7. 's' → logprob: -7.419384956359863
    8. ' ' → logprob: -8.294384956359863
    9. ' ' → logprob: -8.544384956359863
    10. '```' → logprob: -9.419384956359863

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021446814760565758
    2. 'e' → logprob: -4.896446704864502
    3. ' ,' → logprob: -4.896446704864502
    4. '   ' → logprob: -6.021446704864502
    5. 's' → logprob: -7.146446704864502
    6. '(' → logprob: -7.771446704864502
    7. ':' → logprob: -7.896446704864502
    8. ' (' → logprob: -8.02144718170166
    9. '.' → logprob: -8.02144718170166
    10. ',
' → logprob: -8.27144718170166

Token 358: ' il' (ID: 1793)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.328843355178833
    2. ' on' → logprob: -1.578843355178833
    3. '   ' → logprob: -1.703843355178833
    4. '#' → logprob: -1.953843355178833
    5. ' il' → logprob: -2.078843355178833
    6. ',' → logprob: -3.828843355178833
    7. ' we' → logprob: -4.203843116760254
    8. ' nous' → logprob: -4.703843116760254
    9. 'on' → logprob: -4.953843116760254
    10. ' ' → logprob: -4.953843116760254

Token 359: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.5981968641281128
    2. ' faudra' → logprob: -1.0981968641281128
    3. ' suffit' → logprob: -2.9731969833374023
    4. ' suff' → logprob: -3.4731969833374023
    5. '#' → logprob: -5.223196983337402
    6. 'f' → logprob: -5.223196983337402
    7. ' faudrait' → logprob: -5.348196983337402
    8. ' ' → logprob: -5.473196983337402
    9. ' #' → logprob: -5.598196983337402
    10. ''' → logprob: -6.223196983337402

Token 360: '
' (ID: 198)
  Prédit: ' regarder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' regarder' → logprob: -1.8041940927505493
    2. ' vérifier' → logprob: -1.8041940927505493
    3. 'faire' → logprob: -2.5541939735412598
    4. ' faire' → logprob: -2.6791939735412598
    5. ' continuer' → logprob: -2.8041939735412598
    6. ' pouvoir' → logprob: -2.8041939735412598
    7. ' couper' → logprob: -2.8041939735412598
    8. ' effectuer' → logprob: -3.3041939735412598
    9. ' calcul' → logprob: -3.4291939735412598
    10. '#' → logprob: -3.4291939735412598

Token 361: '   ' (ID: 271)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.44146499037742615
    2. ' ' → logprob: -2.566464900970459
    3. ' de' → logprob: -2.691464900970459
    4. ' d' → logprob: -2.941464900970459
    5. ' simplement' → logprob: -4.191464900970459
    6. '    ' → logprob: -4.191464900970459
    7. ' ajouter' → logprob: -4.441464900970459
    8. '   ' → logprob: -4.441464900970459
    9. ' juste' → logprob: -4.816464900970459
    10. '_' → logprob: -4.941464900970459

Token 362: ' #' (ID: 1069)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.3645162284374237
    2. '#' (adapté à ' #') → logprob: -2.739516258239746
    3. '   ' → logprob: -2.739516258239746
    4. ' ' → logprob: -3.614516258239746
    5. ' pouvoir' → logprob: -3.864516258239746
    6. '    ' → logprob: -4.114516258239746
    7. ' que' → logprob: -4.239516258239746
    8. 'contin' → logprob: -4.364516258239746
    9. ' #' → logprob: -4.739516258239746
    10. ' voir' → logprob: -5.114516258239746

Token 363: ' se' (ID: 458)
  Prédit: ' parcour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parcour' → logprob: -0.7222058773040771
    2. ' continuer' → logprob: -1.9722058773040771
    3. ' regarder' → logprob: -2.097205877304077
    4. ' vérifier' → logprob: -3.347205877304077
    5. ' considérer' → logprob: -3.597205877304077
    6. 'faire' → logprob: -3.597205877304077
    7. 'contin' → logprob: -4.222206115722656
    8. '#' → logprob: -4.472206115722656
    9. 'consider' → logprob: -4.597206115722656
    10. 'for' → logprob: -4.597206115722656

Token 364: ' rendre' (ID: 44629)
  Prédit: ' déplacer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.7946565747261047
    2. 'placer' → logprob: -1.04465651512146
    3. ' trouver' → logprob: -2.16965651512146
    4. 'tenir' → logprob: -3.29465651512146
    5. ' placer' → logprob: -4.669656753540039
    6. ' rendre' → logprob: -5.169656753540039
    7. 'poser' → logprob: -5.419656753540039
    8. ' tenir' → logprob: -5.544656753540039
    9. 're' → logprob: -6.044656753540039
    10. 'position' → logprob: -6.169656753540039

Token 365: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.7389557957649231
    2. ' à' → logprob: -0.8639557957649231
    3. ' au' → logprob: -3.3639557361602783
    4. ' ' → logprob: -3.8639557361602783
    5. ' dans' → logprob: -4.113955974578857
    6. ' aux' → logprob: -4.363955974578857
    7. 'sur' → logprob: -5.113955974578857
    8. ' a' → logprob: -5.863955974578857
    9. '_' → logprob: -6.238955974578857
    10. 'à' → logprob: -7.363955974578857

Token 366: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.006935355253517628
    2. 'une' → logprob: -5.756935119628906
    3. ' l' → logprob: -6.631935119628906
    4. ' au' → logprob: -6.756935119628906
    5. ' la' → logprob: -8.131935119628906
    6. 'l' → logprob: -8.631935119628906
    7. ' ' → logprob: -8.631935119628906
    8. ' ' → logprob: -8.756935119628906
    9. 'au' → logprob: -9.131935119628906
    10. ' celle' → logprob: -9.131935119628906

Token 367: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.07432696223258972
    2. 'case' → logprob: -2.699326992034912
    3. ' adjacent' → logprob: -6.324326992034912
    4. ' ' → logprob: -7.074326992034912
    5. ' cellule' → logprob: -7.574326992034912
    6. 'adj' → logprob: -7.699326992034912
    7. ' cell' → logprob: -9.199326515197754
    8. ' empty' → logprob: -9.324326515197754
    9. ' des' → logprob: -9.699326515197754
    10. 'vo' → logprob: -9.699326515197754

Token 368: ' vide' (ID: 21835)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.3605959117412567
    2. ' vo' → logprob: -2.110595941543579
    3. 'adj' → logprob: -2.360595941543579
    4. ' vide' → logprob: -3.235595941543579
    5. 'vo' → logprob: -3.985595941543579
    6. 'vide' → logprob: -4.235595703125
    7. ' vois' → logprob: -4.860595703125
    8. ' sans' → logprob: -5.735595703125
    9. ' adjacent' → logprob: -7.110595703125
    10. '   ' → logprob: -7.360595703125

Token 369: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19287678599357605
    2. ',' → logprob: -1.9428768157958984
    3. ')' → logprob: -4.692876815795898
    4. '    
' → logprob: -4.942876815795898
    5. ':' → logprob: -6.192876815795898
    6. '.' → logprob: -6.317876815795898
    7. 'def' → logprob: -6.317876815795898
    8. '
' → logprob: -6.317876815795898
    9. '    ' → logprob: -6.442876815795898
    10. '(' → logprob: -6.692876815795898

Token 370: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.01173011027276516
    2. 'acent' → logprob: -4.761730194091797
    3. '   ' → logprob: -6.511730194091797
    4. 'cente' → logprob: -7.886730194091797
    5. 'ace' → logprob: -8.386730194091797
    6. 'acency' → logprob: -8.511730194091797
    7. '	ac' → logprob: -8.886730194091797
    8. 'a' → logprob: -9.011730194091797
    9. '       ' → logprob: -9.761730194091797
    10. '	' → logprob: -10.136730194091797

Token 371: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.0059395828284323215
    2. 'ent' → logprob: -5.130939483642578
    3. 'ante' → logprob: -12.755939483642578
    4. '   ' → logprob: -13.255939483642578
    5. '#' → logprob: -13.630939483642578
    6. 'ENTE' → logprob: -13.630939483642578
    7. 'entes' → logprob: -13.755939483642578
    8. 'ents' → logprob: -14.380939483642578
    9. 'nte' → logprob: -14.505939483642578
    10. ' ente' → logprob: -14.630939483642578

Token 372: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019725218415260315
    2. '    
' → logprob: -4.519725322723389
    3. '
' → logprob: -4.894725322723389
    4. ',' → logprob: -7.644725322723389
    5. 'def' → logprob: -9.01972484588623
    6. ',
' → logprob: -9.01972484588623
    7. '.' → logprob: -9.14472484588623
    8. ':' → logprob: -9.51972484588623
    9. '#' → logprob: -10.26972484588623
    10. ')' → logprob: -10.76972484588623

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015832696110010147
    2. '    
' → logprob: -4.515832901000977
    3. '
' → logprob: -5.390832901000977
    4. ',' → logprob: -10.265832901000977
    5. ' 
' → logprob: -10.640832901000977
    6. '  
' → logprob: -11.015832901000977
    7. '\n' → logprob: -11.015832901000977
    8. '\' → logprob: -11.140832901000977
    9. 'def' → logprob: -11.140832901000977
    10. ')' → logprob: -11.640832901000977

Token 374: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011449898593127728
    2. '    
' → logprob: -4.511449813842773
    3. '
' → logprob: -8.886449813842773
    4. 'dire' → logprob: -9.636449813842773
    5. ' directions' → logprob: -9.886449813842773
    6. '    ' → logprob: -10.386449813842773
    7. '    
    
' → logprob: -10.636449813842773
    8. '     
' → logprob: -11.261449813842773
    9. '        
' → logprob: -11.511449813842773
    10. '#' → logprob: -11.636449813842773

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02346361055970192
    2. '    
' → logprob: -3.773463726043701
    3. '
' → logprob: -9.273463249206543
    4. '    ' → logprob: -9.898463249206543
    5. '    
    
' → logprob: -10.398463249206543
    6. '        
' → logprob: -11.273463249206543
    7. '     
' → logprob: -11.648463249206543
    8. 'import' → logprob: -12.273463249206543
    9. 'def' → logprob: -12.773463249206543
    10. '   
' → logprob: -13.023463249206543

Token 376: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08939752727746964
    2. 'dire' → logprob: -2.589397430419922
    3. ' directions' → logprob: -5.089397430419922
    4. '
' → logprob: -6.589397430419922
    5. '    
' → logprob: -7.089397430419922
    6. 'dx' → logprob: -7.339397430419922
    7. 'dirs' → logprob: -7.589397430419922
    8. '#' (adapté à ' #') → logprob: -7.964397430419922
    9. 'queue' → logprob: -9.339397430419922
    10. 'visited' → logprob: -9.464397430419922

Token 377: ' Pour' (ID: 13931)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.25655442476272583
    2. '   ' → logprob: -2.006554365158081
    3. 'visited' → logprob: -2.631554365158081
    4. '#' → logprob: -5.25655460357666
    5. 'dirs' → logprob: -5.50655460357666
    6. 'dx' → logprob: -5.88155460357666
    7. 'queue' → logprob: -6.00655460357666
    8. ' directions' → logprob: -6.75655460357666
    9. '    
' → logprob: -6.75655460357666
    10. 'moves' → logprob: -6.88155460357666

Token 378: ' simpl' (ID: 15693)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27570438385009766
    2. 'i' → logprob: -2.4007043838500977
    3. ' couper' → logprob: -2.7757043838500977
    4. ' chaque' → logprob: -4.025704383850098
    5. ' line' → logprob: -4.525704383850098
    6. 'cut' → logprob: -4.525704383850098
    7. ' _' → logprob: -4.900704383850098
    8. ' case' → logprob: -5.025704383850098
    9. ' continuer' → logprob: -5.275704383850098
    10. ' cutting' → logprob: -5.775704383850098

Token 379: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.5722689628601074
    2. 'ify' → logprob: -1.0722689628601074
    3. 'ité' → logprob: -2.6972689628601074
    4. 'e' → logprob: -5.072268962860107
    5. 'def' → logprob: -5.197268962860107
    6. 'er' → logprob: -6.072268962860107
    7. 'if' → logprob: -6.072268962860107
    8. 'ifie' → logprob: -6.072268962860107
    9. 'iter' → logprob: -6.447268962860107
    10. 'ity' → logprob: -6.447268962860107

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.052321162074804306
    2. '   ' → logprob: -3.552321195602417
    3. ' ,' → logprob: -4.052320957183838
    4. ':' → logprob: -6.052320957183838
    5. 'def' → logprob: -7.302320957183838
    6. ' ' → logprob: -8.052321434020996
    7. '    ' → logprob: -8.177321434020996
    8. ')' → logprob: -8.427321434020996
    9. ',
' → logprob: -8.802321434020996
    10. '    
' → logprob: -9.052321434020996

Token 381: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20896436274051666
    2. ' distances' → logprob: -2.7089643478393555
    3. 'distance' → logprob: -3.9589643478393555
    4. ' on' → logprob: -4.2089643478393555
    5. ' visited' → logprob: -4.4589643478393555
    6. ' distance' → logprob: -4.8339643478393555
    7. ' #' → logprob: -4.8339643478393555
    8. 'visited' → logprob: -5.0839643478393555
    9. 'dist' → logprob: -5.2089643478393555
    10. ' queue' → logprob: -5.2089643478393555

Token 382: ' peut' (ID: 9216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2767501175403595
    2. ' peux' → logprob: -3.151750087738037
    3. ' can' → logprob: -3.651750087738037
    4. ' peut' → logprob: -3.776750087738037
    5. '    ' → logprob: -4.276750087738037
    6. ' vais' → logprob: -4.401750087738037
    7. 'contin' → logprob: -4.651750087738037
    8. ' continue' → logprob: -4.776750087738037
    9. 'def' → logprob: -5.026750087738037
    10. ' pourra' → logprob: -5.026750087738037

Token 383: ' aussi' (ID: 9894)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.36515405774116516
    2. 'contin' → logprob: -1.3651540279388428
    3. ' continuer' → logprob: -4.240154266357422
    4. 'util' → logprob: -4.865154266357422
    5. 'effect' → logprob: -5.115154266357422
    6. 'cons' → logprob: -5.240154266357422
    7. ' faire' → logprob: -6.365154266357422
    8. 'part' → logprob: -6.365154266357422
    9. ' considérer' → logprob: -6.740154266357422
    10. 'aj' → logprob: -6.865154266357422

Token 384: ' calcul' (ID: 7559)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.7910516858100891
    2. 'faire' → logprob: -1.0410516262054443
    3. ' continuer' → logprob: -2.2910516262054443
    4. '   ' → logprob: -3.6660516262054443
    5. 'util' → logprob: -3.6660516262054443
    6. '#' → logprob: -5.041051864624023
    7. 'cons' → logprob: -5.166051864624023
    8. ' utiliser' → logprob: -5.416051864624023
    9. 'aj' → logprob: -5.666051864624023
    10. 'penser' → logprob: -6.041051864624023

Token 385: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.1455957144498825
    2. 'ate' → logprob: -2.0205957889556885
    3. 'late' → logprob: -6.520595550537109
    4. 'e' → logprob: -7.270595550537109
    5. 'ulate' → logprob: -8.39559555053711
    6. 'r' → logprob: -8.77059555053711
    7. 'l' → logprob: -9.52059555053711
    8. 'import' → logprob: -10.39559555053711
    9. '#' → logprob: -10.39559555053711
    10. '```' → logprob: -10.64559555053711

Token 386: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21753613650798798
    2. ' distances' → logprob: -2.467536211013794
    3. ' les' → logprob: -3.092536211013794
    4. '   ' → logprob: -4.092535972595215
    5. 'la' → logprob: -5.092535972595215
    6. ' le' → logprob: -5.217535972595215
    7. ' une' → logprob: -5.342535972595215
    8. ' ' → logprob: -5.467535972595215
    9. 'distance' → logprob: -5.467535972595215
    10. 'dist' → logprob: -5.842535972595215

Token 387: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.33076825737953186
    2. ' distance' → logprob: -2.080768346786499
    3. 'queue' → logprob: -2.705768346786499
    4. ' queue' → logprob: -3.205768346786499
    5. 'dist' → logprob: -3.330768346786499
    6. ' ' → logprob: -5.70576810836792
    7. 'deque' → logprob: -5.70576810836792
    8. ' dist' → logprob: -6.33076810836792
    9. ' distances' → logprob: -6.83076810836792
    10. '   ' → logprob: -6.83076810836792

Token 388: ' depuis' (ID: 16277)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35869452357292175
    2. '_matrix' → logprob: -2.733694553375244
    3. 's' → logprob: -3.108694553375244
    4. ' ' → logprob: -3.483694553375244
    5. '   ' → logprob: -3.608694553375244
    6. '_map' → logprob: -3.733694553375244
    7. ' minimale' → logprob: -3.858694553375244
    8. '_min' → logprob: -3.983694553375244
    9. '[' → logprob: -4.733694553375244
    10. ' =' → logprob: -4.983694553375244

Token 389: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9594752192497253
    2. 'l' → logprob: -1.3344752788543701
    3. ' (' → logprob: -1.3344752788543701
    4. ' l' → logprob: -2.58447527885437
    5. ' la' → logprob: -4.834475040435791
    6. 'la' → logprob: -5.584475040435791
    7. '   ' → logprob: -6.334475040435791
    8. '0' → logprob: -7.584475040435791
    9. ' ' → logprob: -7.959475040435791
    10. 'le' → logprob: -8.83447551727295

Token 390: ''us' (ID: 143210)
  Prédit: ''us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''us' → logprob: -0.04469448700547218
    2. ''' → logprob: -3.169694423675537
    3. 'us' → logprob: -7.794694423675537
    4. '’us' → logprob: -7.919694423675537
    5. ''import' → logprob: -8.669694900512695
    6. ' '' → logprob: -8.794694900512695
    7. 'e' → logprob: -8.919694900512695
    8. '(' → logprob: -9.044694900512695
    9. 'a' → logprob: -9.294694900512695
    10. ''espace' → logprob: -10.044694900512695

Token 391: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.18831847608089447
    2. 'age' → logprob: -2.5633184909820557
    3. 'e' → logprob: -3.1883184909820557
    4. '   ' → logprob: -3.8133184909820557
    5. 'er' → logprob: -4.313318252563477
    6. '(' → logprob: -5.813318252563477
    7. 'ite' → logprob: -6.438318252563477
    8. '#' → logprob: -6.438318252563477
    9. '=' → logprob: -6.688318252563477
    10. 'ager' → logprob: -6.688318252563477

Token 392: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44106167554855347
    2. ' jusqu' → logprob: -1.6910617351531982
    3. ' en' → logprob: -3.0660617351531982
    4. ' sur' → logprob: -3.9410617351531982
    5. '(' → logprob: -4.066061496734619
    6. ',' → logprob: -4.191061496734619
    7. ' (' → logprob: -4.316061496734619
    8. ' vers' → logprob: -4.566061496734619
    9. '()' → logprob: -5.066061496734619
    10. ' jusque' → logprob: -5.441061496734619

Token 393: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.24881742894649506
    2. ' chaque' → logprob: -1.9988174438476562
    3. ' les' → logprob: -2.8738174438476562
    4. 't' → logprob: -4.498817443847656
    5. 'les' → logprob: -4.748817443847656
    6. ' chacune' → logprob: -5.498817443847656
    7. 'Toutes' → logprob: -6.998817443847656
    8. ' toute' → logprob: -7.373817443847656
    9. ' tous' → logprob: -7.623817443847656
    10. 's' → logprob: -7.748817443847656

Token 394: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.041275590658187866
    2. 'les' → logprob: -3.9162755012512207
    3. ' celles' → logprob: -5.166275501251221
    4. ' cases' → logprob: -5.416275501251221
    5. ' ' → logprob: -5.416275501251221
    6. 'cases' → logprob: -5.916275501251221
    7. ' des' → logprob: -6.666275501251221
    8. '   ' → logprob: -7.791275501251221
    9. '_cases' → logprob: -8.041275978088379
    10. ' _' → logprob: -8.291275978088379

Token 395: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.3581746518611908
    2. 'cases' → logprob: -1.2331746816635132
    3. ' case' → logprob: -5.983174800872803
    4. '   ' → logprob: -6.233174800872803
    5. ' positions' → logprob: -6.483174800872803
    6. 'case' → logprob: -6.858174800872803
    7. '_cases' → logprob: -7.233174800872803
    8. 'positions' → logprob: -7.733174800872803
    9. ' ' → logprob: -7.858174800872803
    10. ' #' → logprob: -9.233174324035645

Token 396: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08682689070701599
    2. ',' → logprob: -2.586826801300049
    3. '  ' → logprob: -6.586826801300049
    4. ' en' → logprob: -6.836826801300049
    5. ' ,' → logprob: -6.836826801300049
    6. ':' → logprob: -7.211826801300049
    7. '.' → logprob: -7.461826801300049
    8. '    ' → logprob: -7.461826801300049
    9. ' ' → logprob: -7.586826801300049
    10. '
' → logprob: -8.461827278137207

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.074675053358078
    2. '#' → logprob: -3.4496750831604004
    3. ' en' → logprob: -4.1996750831604
    4. ' #' → logprob: -4.6996750831604
    5. ' mais' → logprob: -5.3246750831604
    6. '    ' → logprob: -6.0746750831604
    7. ' et' → logprob: -6.5746750831604
    8. ' ' → logprob: -7.0746750831604
    9. 'def' → logprob: -7.0746750831604
    10. 'not' → logprob: -7.4496750831604

Token 398: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05838947370648384
    2. '#' (adapté à ' #') → logprob: -3.68338942527771
    3. ' en' → logprob: -4.308389663696289
    4. ' mais' → logprob: -5.433389663696289
    5. ' #' → logprob: -5.433389663696289
    6. ' et' → logprob: -6.558389663696289
    7. '    ' → logprob: -6.558389663696289
    8. 'not' → logprob: -6.933389663696289
    9. 'def' → logprob: -7.183389663696289
    10. ',' → logprob: -7.683389663696289

Token 399: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7217023372650146
    2. ' en' → logprob: -1.8467023372650146
    3. '   ' → logprob: -1.9717023372650146
    4. ' #' → logprob: -2.3467023372650146
    5. 'en' → logprob: -3.5967023372650146
    6. ' mais' → logprob: -3.7217023372650146
    7. ' sur' → logprob: -4.221702575683594
    8. 'où' → logprob: -4.846702575683594
    9. 'mais' → logprob: -5.471702575683594
    10. 'def' → logprob: -5.596702575683594

Token 400: ' en' (ID: 469)
  Prédit: ' uniquement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -0.24950407445430756
    2. ' seulement' → logprob: -1.9995040893554688
    3. ' only' → logprob: -3.7495040893554688
    4. '   ' → logprob: -3.8745040893554688
    5. ' seules' → logprob: -4.624504089355469
    6. ' pas' → logprob: -4.874504089355469
    7. ' en' → logprob: -4.999504089355469
    8. ' sur' → logprob: -5.874504089355469
    9. ' on' → logprob: -5.999504089355469
    10. ' que' → logprob: -6.124504089355469

Token 401: ' pos' (ID: 1253)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -1.0940417051315308
    2. ' continu' → logprob: -1.8440417051315308
    3. 'util' → logprob: -2.7190418243408203
    4. 'continu' → logprob: -3.2190418243408203
    5. ' rest' → logprob: -3.4690418243408203
    6. 'f' → logprob: -3.4690418243408203
    7. ' ne' → logprob: -3.5940418243408203
    8. 'rest' → logprob: -3.7190418243408203
    9. ' n' → logprob: -3.8440418243408203
    10. 'n' → logprob: -3.8440418243408203

Token 402: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.006527434103190899
    2. 's' → logprob: -5.131527423858643
    3. 'sible' → logprob: -8.3815279006958
    4. 'tant' → logprob: -9.1315279006958
    5. ' ant' → logprob: -9.7565279006958
    6. 'nt' → logprob: -10.1315279006958
    7. 't' → logprob: -10.2565279006958
    8. 'nant' → logprob: -10.5065279006958
    9. 'Ant' → logprob: -10.6315279006958
    10. '-ant' → logprob: -11.6315279006958

Token 403: ' une' (ID: 2463)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.00810055062174797
    2. 'que' → logprob: -5.258100509643555
    3. ' ' → logprob: -6.883100509643555
    4. ' des' → logprob: -7.633100509643555
    5. '   ' → logprob: -7.883100509643555
    6. '```' → logprob: -8.508100509643555
    7. ' un' → logprob: -9.258100509643555
    8. ' une' → logprob: -9.258100509643555
    9. ' uniquement' → logprob: -9.758100509643555
    10. ' queue' → logprob: -9.883100509643555

Token 404: ' distance' (ID: 9324)
  Prédit: ' file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' file' → logprob: -1.7781859636306763
    2. ' condition' → logprob: -1.7781859636306763
    3. ' ' → logprob: -2.0281858444213867
    4. ' limite' → logprob: -2.0281858444213867
    5. ' restriction' → logprob: -2.0281858444213867
    6. ' queue' → logprob: -3.2781858444213867
    7. ' frontière' → logprob: -3.2781858444213867
    8. 'file' → logprob: -3.4031858444213867
    9. ' distance' → logprob: -3.9031858444213867
    10. ' case' → logprob: -4.028185844421387

Token 405: ' infin' (ID: 93237)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08344461768865585
    2. '=' → logprob: -2.833444595336914
    3. '   ' → logprob: -4.833444595336914
    4. ' ég' → logprob: -5.833444595336914
    5. ' ' → logprob: -6.208444595336914
    6. '_inf' → logprob: -6.333444595336914
    7. ' de' → logprob: -6.708444595336914
    8. '```' → logprob: -7.083444595336914
    9. ' infin' → logprob: -7.208444595336914
    10. 'inf' → logprob: -7.458444595336914

Token 406: 'ie' (ID: 396)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -1.0403410196304321
    2. 'ity' → logprob: -1.1653410196304321
    3. 'inite' → logprob: -1.2903410196304321
    4. 'ini' → logprob: -4.540340900421143
    5. 'inie' → logprob: -4.540340900421143
    6. '   ' → logprob: -4.915340900421143
    7. 'it' → logprob: -5.165340900421143
    8. 'inity' → logprob: -5.540340900421143
    9. 'itie' → logprob: -5.790340900421143
    10. 'ie' → logprob: -5.790340900421143

Token 407: ' si' (ID: 1784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2688047885894775
    2. ')' → logprob: -1.7688047885894775
    3. '   ' → logprob: -1.8938047885894775
    4. ' =' → logprob: -1.8938047885894775
    5. '=' → logprob: -2.1438047885894775
    6. 'inf' → logprob: -3.1438047885894775
    7. '_inf' → logprob: -3.7688047885894775
    8. 'f' → logprob: -4.018804550170898
    9. ' ' → logprob: -4.893804550170898
    10. '_' → logprob: -5.018804550170898

Token 408: ' on' (ID: 402)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.30127614736557007
    2. 'A' → logprob: -1.4262762069702148
    3. ' not' → logprob: -4.801276206970215
    4. ' la' → logprob: -4.926276206970215
    5. 'not' → logprob: -6.176276206970215
    6. ' ' → logprob: -6.926276206970215
    7. ' l' → logprob: -8.176276206970215
    8. 'la' → logprob: -8.176276206970215
    9. '   ' → logprob: -8.551276206970215
    10. ' le' → logprob: -9.051276206970215

Token 409: ' ne' (ID: 453)
  Prédit: ' ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ne' → logprob: -0.0406649187207222
    2. ' n' → logprob: -4.415665149688721
    3. 'n' → logprob: -4.540665149688721
    4. 'ne' → logprob: -4.790665149688721
    5. ' rencontre' → logprob: -5.165665149688721
    6. ' continue' → logprob: -7.540665149688721
    7. '_' → logprob: -7.915665149688721
    8. 'enc' → logprob: -8.040664672851562
    9. ' trouve' → logprob: -8.165664672851562
    10. '_ne' → logprob: -8.415664672851562

Token 410: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.08418010175228119
    2. ' peut' → logprob: -2.5841801166534424
    3. 'p' → logprob: -6.084179878234863
    4. ' peux' → logprob: -6.709179878234863
    5. 'pas' → logprob: -7.084179878234863
    6. ' pe' → logprob: -7.959179878234863
    7. ' ' → logprob: -9.334179878234863
    8. 'can' → logprob: -9.334179878234863
    9. '   ' → logprob: -9.584179878234863
    10. ' pas' → logprob: -9.709179878234863

Token 411: ' s' (ID: 265)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.05945915728807449
    2. '_' → logprob: -3.9344592094421387
    3. 'pas' → logprob: -4.059459209442139
    4. ' accéder' → logprob: -5.184459209442139
    5. ' y' → logprob: -5.559459209442139
    6. ' se' → logprob: -6.309459209442139
    7. ' la' → logprob: -6.559459209442139
    8. ' plus' → logprob: -6.809459209442139
    9. ' aller' → logprob: -7.059459209442139
    10. ' ' → logprob: -7.059459209442139

Token 412: ''y' (ID: 27913)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.026482244953513145
    2. ' déplacer' → logprob: -4.651482105255127
    3. 'dé' → logprob: -4.901482105255127
    4. 'é' → logprob: -5.776482105255127
    5. 'y' → logprob: -6.401482105255127
    6. 'er' → logprob: -6.651482105255127
    7. ''y' → logprob: -7.401482105255127
    8. ''é' → logprob: -8.151482582092285
    9. 'atte' → logprob: -8.651482582092285
    10. 'errer' → logprob: -8.651482582092285

Token 413: ' rendre' (ID: 44629)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.15728628635406494
    2. ' déplacer' → logprob: -2.1572861671447754
    3. ' rendre' → logprob: -4.782286167144775
    4. '   ' → logprob: -4.907286167144775
    5. 'r' → logprob: -5.282286167144775
    6. ' dé' → logprob: -5.907286167144775
    7. 'render' → logprob: -6.657286167144775
    8. 'e' → logprob: -6.782286167144775
    9. 'de' → logprob: -7.407286167144775
    10. 'atte' → logprob: -7.782286167144775

Token 414: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12827233970165253
    2. '
' → logprob: -2.253272294998169
    3. '    
' → logprob: -4.503272533416748
    4. ':' → logprob: -7.003272533416748
    5. 'distance' → logprob: -7.378272533416748
    6. 'def' → logprob: -7.753272533416748
    7. '\n' → logprob: -7.753272533416748
    8. '  
' → logprob: -7.878272533416748
    9. '   
' → logprob: -8.50327205657959
    10. 'dist' → logprob: -8.62827205657959

Token 415: 'car' (ID: 6830)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29526275396347046
    2. ').' → logprob: -1.4202628135681152
    3. '),' → logprob: -5.170262813568115
    4. ')
' → logprob: -5.170262813568115
    5. ').
' → logprob: -6.295262813568115
    6. ' )' → logprob: -7.920262813568115
    7. ' car' → logprob: -9.295262336730957
    8. 'car' → logprob: -10.045262336730957
    9. ' ).' → logprob: -10.545262336730957
    10. ' parce' → logprob: -10.545262336730957

Token 416: ' arbres' (ID: 127011)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1342694759368896
    2. ' il' → logprob: -1.3842694759368896
    3. ' A' → logprob: -1.5092694759368896
    4. ' la' → logprob: -2.8842694759368896
    5. ' on' → logprob: -3.2592694759368896
    6. ')' → logprob: -4.259269714355469
    7. ' not' → logprob: -4.384269714355469
    8. ' ' → logprob: -4.509269714355469
    9. ' )' → logprob: -4.634269714355469
    10. ' ce' → logprob: -4.634269714355469

Token 417: ').
' (ID: 6294)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46302106976509094
    2. ')' → logprob: -2.0880210399627686
    3. ' =' → logprob: -2.5880210399627686
    4. '==' → logprob: -3.0880210399627686
    5. ' ==' → logprob: -3.2130210399627686
    6. '>' → logprob: -3.4630210399627686
    7. ' présents' → logprob: -3.8380210399627686
    8. ' >' → logprob: -4.463021278381348
    9. ' !=' → logprob: -4.713021278381348
    10. '!=' → logprob: -5.463021278381348

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28680160641670227
    2. '
' → logprob: -1.5368015766143799
    3. '    
' → logprob: -3.53680157661438
    4. ':' → logprob: -6.661801815032959
    5. '  
' → logprob: -6.661801815032959
    6. '   
' → logprob: -7.661801815032959
    7. ':
' → logprob: -7.661801815032959
    8. '\n' → logprob: -7.786801815032959
    9. 'distance' → logprob: -8.1618013381958
    10. '```' → logprob: -8.7868013381958

Token 419: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45542097091674805
    2. '
' → logprob: -1.080420970916748
    3. '    
' → logprob: -3.830420970916748
    4. '\n' → logprob: -6.705420970916748
    5. 'distance' → logprob: -6.955420970916748
    6. 'dist' → logprob: -7.330420970916748
    7. '\' → logprob: -7.705420970916748
    8. ' distances' → logprob: -8.080421447753906
    9. '  
' → logprob: -8.205421447753906
    10. '   
' → logprob: -8.455421447753906

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015202167443931103
    2. '    
' → logprob: -4.515202045440674
    3. '
' → logprob: -5.515202045440674
    4. 'dist' → logprob: -10.515202522277832
    5. '    
    
' → logprob: -10.890202522277832
    6. 'distance' → logprob: -11.015202522277832
    7. '        
' → logprob: -11.640202522277832
    8. '    ' → logprob: -11.890202522277832
    9. '#' → logprob: -12.015202522277832
    10. 'import' → logprob: -12.265202522277832

Token 421: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007151156663894653
    2. 'dist' → logprob: -5.632151126861572
    3. '    
' → logprob: -6.382151126861572
    4. '
' → logprob: -7.632151126861572
    5. 'visited' → logprob: -7.632151126861572
    6. 'distance' → logprob: -8.25715160369873
    7. 'queue' → logprob: -8.75715160369873
    8. 'dire' → logprob: -9.13215160369873
    9. ' distances' → logprob: -9.25715160369873
    10. '#' (adapté à ' #') → logprob: -9.25715160369873

Token 422: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5453582406044006
    2. 'dist' → logprob: -1.0453581809997559
    3. 'distance' → logprob: -2.920358180999756
    4. 'visited' → logprob: -5.045358180999756
    5. ' dist' → logprob: -5.795358180999756
    6. ' distances' → logprob: -6.920358180999756
    7. 'INF' → logprob: -6.920358180999756
    8. 'queue' → logprob: -7.295358180999756
    9. '    
' → logprob: -7.670358180999756
    10. 'dire' → logprob: -7.795358180999756

Token 423: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08717656880617142
    2. '
' → logprob: -3.087176561355591
    3. '    
' → logprob: -4.58717679977417
    4. 'import' → logprob: -4.71217679977417
    5. 'def' → logprob: -5.58717679977417
    6. 'for' → logprob: -6.21217679977417
    7. '    ' → logprob: -6.58717679977417
    8. ' distances' → logprob: -6.71217679977417
    9. ' for' → logprob: -6.96217679977417
    10. '#' → logprob: -7.08717679977417

Token 424: ' on' (ID: 402)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7477330565452576
    2. '   ' → logprob: -1.2477331161499023
    3. 'dire' → logprob: -2.7477331161499023
    4. ' dist' → logprob: -3.1227331161499023
    5. ' distances' → logprob: -3.7477331161499023
    6. 'queue' → logprob: -3.8727331161499023
    7. 'distance' → logprob: -4.122733116149902
    8. ' directions' → logprob: -4.372733116149902
    9. 'd' → logprob: -4.497733116149902
    10. 'visited' → logprob: -4.622733116149902

Token 425: ' fait' (ID: 7473)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46442747116088867
    2. 'def' → logprob: -2.2144274711608887
    3. ' continue' → logprob: -2.7144274711608887
    4. 'continue' → logprob: -2.8394274711608887
    5. '#' → logprob: -3.4644274711608887
    6. 'for' → logprob: -4.089427471160889
    7. 'distance' → logprob: -4.214427471160889
    8. ' ' → logprob: -4.714427471160889
    9. ' #' → logprob: -4.839427471160889
    10. 'dist' → logprob: -4.964427471160889

Token 426: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3151276111602783
    2. 'une' → logprob: -1.3151276111602783
    3. 'un' → logprob: -1.8151276111602783
    4. ' une' → logprob: -2.3151276111602783
    5. 'from' → logprob: -2.6901276111602783
    6. ' un' → logprob: -2.8151276111602783
    7. 'queue' → logprob: -3.4401276111602783
    8. '```' → logprob: -4.440127372741699
    9. 'import' → logprob: -5.190127372741699
    10. '    ' → logprob: -5.315127372741699

Token 427: ' même' (ID: 9679)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.018482232466340065
    2. ' queue' → logprob: -4.643482208251953
    3. 'distance' → logprob: -6.268482208251953
    4. 'suite' → logprob: -6.518482208251953
    5. 'deque' → logprob: -6.643482208251953
    6. 'file' → logprob: -6.768482208251953
    7. 'b' → logprob: -7.018482208251953
    8. '   ' → logprob: -8.143482208251953
    9. 'for' → logprob: -8.143482208251953
    10. 'que' → logprob: -8.518482208251953

Token 428: ' chose' (ID: 15505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6088664531707764
    2. '
' → logprob: -1.9838664531707764
    3. '    
' → logprob: -2.8588664531707764
    4. '  
' → logprob: -3.4838664531707764
    5. ' 
' → logprob: -3.4838664531707764
    6. 'distance' → logprob: -3.4838664531707764
    7. 'def' → logprob: -3.6088664531707764
    8. '()' → logprob: -3.8588664531707764
    9. '   
' → logprob: -4.2338666915893555
    10. 'from' → logprob: -4.2338666915893555

Token 429: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4395045042037964
    2. '<|end|>' → logprob: -2.064504623413086
    3. '()' → logprob: -2.314504623413086
    4. ',' → logprob: -2.314504623413086
    5. 'for' → logprob: -2.439504623413086
    6. ' for' → logprob: -2.689504623413086
    7. '
' → logprob: -2.939504623413086
    8. 'import' → logprob: -3.564504623413086
    9. 'def' → logprob: -3.689504623413086
    10. '_' → logprob: -3.939504623413086

Token 430: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17843273282051086
    2. ' (' → logprob: -1.9284327030181885
    3. ' la' → logprob: -4.678432941436768
    4. 'la' → logprob: -6.178432941436768
    5. 'deque' → logprob: -6.428432941436768
    6. 'l' → logprob: -7.303432941436768
    7. ' deque' → logprob: -7.303432941436768
    8. 'le' → logprob: -7.428432941436768
    9. ' l' → logprob: -7.428432941436768
    10. ' sys' → logprob: -8.17843246459961

Token 431: ' destination' (ID: 13330)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5188517570495605
    2. 'us' → logprob: -2.3938517570495605
    3. 'queue' → logprob: -3.0188517570495605
    4. '(' → logprob: -3.0188517570495605
    5. 'deque' → logprob: -3.0188517570495605
    6. 'def' → logprob: -3.5188517570495605
    7. ' usine' → logprob: -4.3938517570495605
    8. ' (' → logprob: -4.5188517570495605
    9. ' forêt' → logprob: -4.6438517570495605
    10. 'from' → logprob: -4.7688517570495605

Token 432: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7229129076004028
    2. 'def' → logprob: -1.9729129076004028
    3. '   ' → logprob: -1.9729129076004028
    4. '
' → logprob: -2.5979127883911133
    5. '()' → logprob: -3.2229127883911133
    6. '():' → logprob: -3.2229127883911133
    7. '(' → logprob: -4.097912788391113
    8. ')' → logprob: -4.097912788391113
    9. '()
' → logprob: -4.722912788391113
    10. ',' → logprob: -4.972912788391113

Token 433: 'H' (ID: 39)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.39633631706237793
    2. '(' → logprob: -1.396336317062378
    3. '0' → logprob: -3.271336317062378
    4. ')' → logprob: -4.146336555480957
    5. ',' → logprob: -4.771336555480957
    6. ' ' → logprob: -5.021336555480957
    7. ' )' → logprob: -5.021336555480957
    8. ' ,' → logprob: -5.896336555480957
    9. '1' → logprob: -8.146336555480957
    10. ' ),' → logprob: -9.146336555480957

Token 434: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04526076838374138
    2. ' -' → logprob: -3.1702606678009033
    3. ',' → logprob: -6.545260906219482
    4. '   ' → logprob: -7.545260906219482
    5. ',W' → logprob: -8.420260429382324
    6. ')' → logprob: -10.420260429382324
    7. ' ' → logprob: -11.170260429382324
    8. '1' → logprob: -11.920260429382324
    9. ' ,' → logprob: -12.170260429382324
    10. '-W' → logprob: -12.795260429382324

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001294030516874045
    2. '   ' → logprob: -9.125129699707031
    3. ' ' → logprob: -11.625129699707031
    4. '2' → logprob: -11.750129699707031
    5. ')' → logprob: -14.250129699707031
    6. 'W' → logprob: -14.375129699707031
    7. ',' → logprob: -14.375129699707031
    8. '-' → logprob: -14.750129699707031
    9. '```' → logprob: -14.875129699707031
    10. '  ' → logprob: -15.500129699707031

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.042884428054094315
    2. '-' → logprob: -3.417884349822998
    3. ',W' → logprob: -5.167884349822998
    4. ' -' → logprob: -6.542884349822998
    5. '   ' → logprob: -6.917884349822998
    6. ' ,' → logprob: -7.292884349822998
    7. ')' → logprob: -8.792884826660156
    8. ',H' → logprob: -9.292884826660156
    9. ' ' → logprob: -9.917884826660156
    10. '1' → logprob: -10.417884826660156

Token 437: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.2537965178489685
    2. '0' → logprob: -1.7537965774536133
    3. ' W' → logprob: -3.1287965774536133
    4. ' ' → logprob: -5.003796577453613
    5. '   ' → logprob: -7.753796577453613
    6. '  ' → logprob: -9.878796577453613
    7. '    ' → logprob: -10.628796577453613
    8. ',' → logprob: -11.378796577453613
    9. '	W' → logprob: -11.878796577453613
    10. ',W' → logprob: -12.128796577453613

Token 438: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00018899753922596574
    2. ' -' → logprob: -8.625188827514648
    3. ')' → logprob: -11.875188827514648
    4. '   ' → logprob: -13.375188827514648
    5. ')-' → logprob: -15.125188827514648
    6. ' ' → logprob: -15.250188827514648
    7. '1' → logprob: -15.750188827514648
    8. '-)' → logprob: -16.25018882751465
    9. '),' → logprob: -17.12518882751465
    10. '  ' → logprob: -17.62518882751465

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.319370302458992e-06
    2. ')' → logprob: -12.875005722045898
    3. ' ' → logprob: -12.875005722045898
    4. '```' → logprob: -17.3750057220459
    5. '   ' → logprob: -17.5000057220459
    6. '１' → logprob: -17.5000057220459
    7. '2' → logprob: -18.2500057220459
    8. '-' → logprob: -18.2500057220459
    9. '
' → logprob: -18.9375057220459
    10. '۱' → logprob: -19.3125057220459

Token 440: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000888471957296133
    2. '):' → logprob: -8.25088882446289
    3. ')
' → logprob: -8.62588882446289
    4. '   ' → logprob: -8.87588882446289
    5. '),' → logprob: -9.00088882446289
    6. ' )' → logprob: -9.12588882446289
    7. ').' → logprob: -10.62588882446289
    8. '):
' → logprob: -11.00088882446289
    9. ')#' → logprob: -12.12588882446289
    10. ')+' → logprob: -12.37588882446289

Token 441: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21755069494247437
    2. '   ' → logprob: -2.092550754547119
    3. ':' → logprob: -3.717550754547119
    4. 'def' → logprob: -4.967550754547119
    5. '()' → logprob: -5.217550754547119
    6. '()
' → logprob: -5.217550754547119
    7. '  
' → logprob: -5.217550754547119
    8. '    
' → logprob: -5.592550754547119
    9. '\' → logprob: -5.592550754547119
    10. '

' → logprob: -5.967550754547119

Token 442: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24673478305339813
    2. '
' → logprob: -1.8717347383499146
    3. '    
' → logprob: -2.746734857559204
    4. '\n' → logprob: -9.121734619140625
    5. '  
' → logprob: -9.496734619140625
    6. '    
    
' → logprob: -9.621734619140625
    7. 'import' → logprob: -9.746734619140625
    8. '\' → logprob: -9.996734619140625
    9. '   
' → logprob: -10.121734619140625
    10. 'def' → logprob: -10.121734619140625

Token 443: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2698604166507721
    2. '    
' → logprob: -2.0198605060577393
    3. '
' → logprob: -2.2698605060577393
    4. '    
    
' → logprob: -9.26986026763916
    5. ' 
' → logprob: -9.39486026763916
    6. ',' → logprob: -9.76986026763916
    7. '        
' → logprob: -10.26986026763916
    8. '   
' → logprob: -10.39486026763916
    9. ',
' → logprob: -10.39486026763916
    10. '\' → logprob: -10.51986026763916

Token 444: ' ce' (ID: 2357)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2667491137981415
    2. 'A' → logprob: -2.266749143600464
    3. ' __' → logprob: -2.766749143600464
    4. ' not' → logprob: -4.016748905181885
    5. ' H' → logprob: -4.141748905181885
    6. ' True' → logprob: -5.766748905181885
    7. ' ' → logprob: -5.766748905181885
    8. ' (' → logprob: -5.891748905181885
    9. ' sys' → logprob: -5.891748905181885
    10. ' False' → logprob: -6.266748905181885

Token 445: ' dernier' (ID: 27982)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39033040404319763
    2. ' _' → logprob: -2.1403303146362305
    3. ' n' → logprob: -3.3903303146362305
    4. '[' → logprob: -3.3903303146362305
    5. ' is' → logprob: -3.7653303146362305
    6. ' ==' → logprob: -4.1403303146362305
    7. ')' → logprob: -4.1403303146362305
    8. ' )' → logprob: -4.7653303146362305
    9. ':' → logprob: -5.0153303146362305
    10. ' est' → logprob: -5.1403303146362305

Token 446: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1016860008239746
    2. ':' → logprob: -1.1016860008239746
    3. ' ==' → logprob: -2.6016860008239746
    4. '_' → logprob: -3.1016860008239746
    5. ' is' → logprob: -3.2266860008239746
    6. '):' → logprob: -3.6016860008239746
    7. 'def' → logprob: -3.9766860008239746
    8. ' est' → logprob: -4.101686000823975
    9. ' )' → logprob: -4.101686000823975
    10. ' :' → logprob: -4.601686000823975

Token 447: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.773384153842926
    2. ''' → logprob: -0.898384153842926
    3. ' ==' → logprob: -4.523384094238281
    4. '#' → logprob: -4.523384094238281
    5. ''a' → logprob: -4.648384094238281
    6. ')' → logprob: -4.898384094238281
    7. 'est' → logprob: -5.023384094238281
    8. '==' → logprob: -5.023384094238281
    9. ''ai' → logprob: -5.023384094238281
    10. 'a' → logprob: -5.148384094238281

Token 448: ' pas' (ID: 2173)
  Prédit: ' accessible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accessible' → logprob: -1.0318796634674072
    2. 'accessible' → logprob: -1.1568796634674072
    3. ' pas' → logprob: -1.6568796634674072
    4. 'pas' → logprob: -3.2818796634674072
    5. '0' → logprob: -3.5318796634674072
    6. 'une' → logprob: -4.156879425048828
    7. 'reachable' → logprob: -4.531879425048828
    8. ' reachable' → logprob: -4.781879425048828
    9. '_' → logprob: -5.406879425048828
    10. ' une' → logprob: -5.906879425048828

Token 449: ' accessible' (ID: 18240)
  Prédit: ' accessible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' accessible' → logprob: -0.8039413094520569
    2. 'accessible' → logprob: -0.9289413094520569
    3. '0' → logprob: -2.803941249847412
    4. 'une' → logprob: -3.303941249847412
    5. ' une' → logprob: -4.178941249847412
    6. 'vide' → logprob: -4.553941249847412
    7. 'un' → logprob: -5.303941249847412
    8. 'sans' → logprob: -5.803941249847412
    9. 'dans' → logprob: -5.928941249847412
    10. '_' → logprob: -6.178941249847412

Token 450: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03457510843873024
    2. ':' → logprob: -3.7845752239227295
    3. ')' → logprob: -5.90957498550415
    4. ':
' → logprob: -6.15957498550415
    5. ' ,' → logprob: -6.40957498550415
    6. ',
' → logprob: -6.65957498550415
    7. '   ' → logprob: -7.03457498550415
    8. '),' → logprob: -7.15957498550415
    9. '):
' → logprob: -7.28457498550415
    10. '):' → logprob: -7.90957498550415

Token 451: 'car' (ID: 6830)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.045537691563367844
    2. ' ),' → logprob: -3.7955377101898193
    3. ')' → logprob: -4.04553747177124
    4. ' or' → logprob: -6.42053747177124
    5. '):
' → logprob: -6.54553747177124
    6. ' )' → logprob: -7.67053747177124
    7. '):' → logprob: -7.92053747177124
    8. ':' → logprob: -8.545537948608398
    9. '
' → logprob: -9.170537948608398
    10. ' ' → logprob: -9.420537948608398

Token 452: ' arbres' (ID: 127011)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18963156640529633
    2. ' A' → logprob: -1.8146315813064575
    3. ' il' → logprob: -5.314631462097168
    4. ' arbres' → logprob: -6.314631462097168
    5. ' there' → logprob: -7.814631462097168
    6. ' ' → logprob: -7.939631462097168
    7. 'il' → logprob: -8.189631462097168
    8. '   ' → logprob: -8.564631462097168
    9. ' ' → logprob: -8.564631462097168
    10. 'trees' → logprob: -8.814631462097168

Token 453: ' ou' (ID: 2031)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.005752799566835165
    2. ')' → logprob: -6.3807525634765625
    3. ' ou' → logprob: -6.3807525634765625
    4. ' ),' → logprob: -6.8807525634765625
    5. '   ' → logprob: -7.7557525634765625
    6. ' or' → logprob: -7.8807525634765625
    7. ',' → logprob: -9.005752563476562
    8. '[' → logprob: -9.005752563476562
    9. ')),' → logprob: -10.005752563476562
    10. '),
' → logprob: -10.255752563476562

Token 454: ' pas' (ID: 2173)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.4328748881816864
    2. 'distance' → logprob: -1.3078749179840088
    3. ' dist' → logprob: -3.057874917984009
    4. 'dist' → logprob: -4.80787467956543
    5. ' distances' → logprob: -5.80787467956543
    6. ' la' → logprob: -5.93287467956543
    7. '#' → logprob: -6.43287467956543
    8. ' que' → logprob: -6.68287467956543
    9. ' #' → logprob: -6.93287467956543
    10. ' ' → logprob: -6.93287467956543

Token 455: ' de' (ID: 334)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6662589311599731
    2. ' ),' → logprob: -1.1662589311599731
    3. ' accessible' → logprob: -2.0412588119506836
    4. ' de' → logprob: -3.7912588119506836
    5. 'accessible' → logprob: -5.291258811950684
    6. ' d' → logprob: -5.416258811950684
    7. ')' → logprob: -5.666258811950684
    8. ' possible' → logprob: -6.041258811950684
    9. ' )' → logprob: -6.166258811950684
    10. 'possible' → logprob: -7.291258811950684

Token 456: ' chemin' (ID: 45035)
  Prédit: ' passage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' passage' → logprob: -1.2146729230880737
    2. ' chemin' → logprob: -1.8396729230880737
    3. ' )' → logprob: -2.3396730422973633
    4. ' accès' → logprob: -2.5896730422973633
    5. 'distance' → logprob: -2.7146730422973633
    6. ' ),' → logprob: -3.5896730422973633
    7. 'che' → logprob: -3.7146730422973633
    8. '
' → logprob: -3.8396730422973633
    9. ' distance' → logprob: -3.8396730422973633
    10. 'pass' → logprob: -4.214673042297363

Token 457: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00036679807817563415
    2. ')' → logprob: -8.500367164611816
    3. ' ),' → logprob: -9.750367164611816
    4. '   ' → logprob: -9.875367164611816
    5. ',' → logprob: -11.125367164611816
    6. '),
' → logprob: -11.250367164611816
    7. '"),' → logprob: -12.375367164611816
    8. '
' → logprob: -12.500367164611816
    9. '):
' → logprob: -12.625367164611816
    10. ' jusqu' → logprob: -13.375367164611816

Token 458: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.685928463935852
    2. ' return' → logprob: -1.185928463935852
    3. 'return' → logprob: -2.1859283447265625
    4. ':' → logprob: -3.3109283447265625
    5. '#' → logprob: -4.3109283447265625
    6. ')' → logprob: -4.8109283447265625
    7. ':return' → logprob: -5.3109283447265625
    8. ',' → logprob: -5.8109283447265625
    9. '    
' → logprob: -5.9359283447265625
    10. '    ' → logprob: -6.1859283447265625

Token 459: ' réponse' (ID: 50332)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.016255006194114685
    2. 'return' → logprob: -4.641254901885986
    3. '   ' → logprob: -5.641254901885986
    4. ' ' → logprob: -7.141254901885986
    5. '
' → logprob: -7.891254901885986
    6. ' pass' → logprob: -8.141255378723145
    7. ' distance' → logprob: -8.391255378723145
    8. '#' → logprob: -8.516255378723145
    9. ' #' → logprob: -9.141255378723145
    10. '    
' → logprob: -9.266255378723145

Token 460: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.10328807681798935
    2. ' =' → logprob: -2.853288173675537
    3. ' is' → logprob: -4.228288173675537
    4. '   ' → logprob: -5.603288173675537
    5. ' return' → logprob: -5.603288173675537
    6. ' continue' → logprob: -5.728288173675537
    7. ' s' → logprob: -5.853288173675537
    8. ' #' → logprob: -6.103288173675537
    9. ' sera' → logprob: -6.103288173675537
    10. '#' → logprob: -6.478288173675537

Token 461: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.27131029963493347
    2. '-' → logprob: -1.6463103294372559
    3. ' impossible' → logprob: -4.271310329437256
    4. ' "' → logprob: -4.396310329437256
    5. '   ' → logprob: -5.396310329437256
    6. ' float' → logprob: -5.896310329437256
    7. ' None' → logprob: -6.021310329437256
    8. '"' → logprob: -6.271310329437256
    9. ' sys' → logprob: -6.271310329437256
    10. ' inf' → logprob: -6.396310329437256

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017049367306753993
    2. ' ' → logprob: -6.376705169677734
    3. '   ' → logprob: -13.126705169677734
    4. '  ' → logprob: -15.001705169677734
    5. 'inf' → logprob: -15.126705169677734
    6. ' -' → logprob: -16.626705169677734
    7. '2' → logprob: -16.876705169677734
    8. '    ' → logprob: -17.501705169677734
    9. '```' → logprob: -18.126705169677734
    10. ' ' → logprob: -18.126705169677734

Token 463: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06179366260766983
    2. '    
' → logprob: -3.186793565750122
    3. '
' → logprob: -4.561793804168701
    4. ')' → logprob: -5.936793804168701
    5. ',' → logprob: -6.186793804168701
    6. 'def' → logprob: -6.436793804168701
    7. '.' → logprob: -7.186793804168701
    8. '<|end|>' → logprob: -7.936793804168701
    9. 'import' → logprob: -8.811793327331543
    10. ',
' → logprob: -9.561793327331543

Token 464: 'im' (ID: 321)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1822877824306488
    2. ')
' → logprob: -2.3072876930236816
    3. '\n' → logprob: -3.3072876930236816
    4. '   ' → logprob: -4.432287693023682
    5. '
' → logprob: -5.182287693023682
    6. '```' → logprob: -5.307287693023682
    7. 'return' → logprob: -6.057287693023682
    8. ')\' → logprob: -6.182287693023682
    9. 'def' → logprob: -7.182287693023682
    10. ')

' → logprob: -7.682287693023682

Token 465: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5887700319290161
    2. 'port' → logprob: -0.8387700319290161
    3. 'p' → logprob: -4.463769912719727
    4. 'poss' → logprob: -6.963769912719727
    5. 'pass' → logprob: -9.463769912719727
    6. '_possible' → logprob: -9.963769912719727
    7. 'pot' → logprob: -10.213769912719727
    8. 'ported' → logprob: -10.463769912719727
    9. 'plement' → logprob: -10.588769912719727
    10. 'pl' → logprob: -11.088769912719727

Token 466: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30026760697364807
    2. ')
' → logprob: -1.4252675771713257
    3. '   ' → logprob: -4.050267696380615
    4. 'def' → logprob: -7.175267696380615
    5. ').' → logprob: -8.300267219543457
    6. '
' → logprob: -8.675267219543457
    7. ')

' → logprob: -8.925267219543457
    8. ')
' → logprob: -10.050267219543457
    9. ').
' → logprob: -10.175267219543457
    10. 'import' → logprob: -11.050267219543457

Token 467: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28560641407966614
    2. '    
' → logprob: -2.0356063842773438
    3. '
' → logprob: -2.1606063842773438
    4. 'def' → logprob: -7.660606384277344
    5. '```' → logprob: -7.785606384277344
    6. '<|end|>' → logprob: -7.910606384277344
    7. '    
    
' → logprob: -8.660606384277344
    8. ' 
' → logprob: -8.785606384277344
    9. '\' → logprob: -9.035606384277344
    10. ')' → logprob: -9.035606384277344

Token 468: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1309901773929596
    2. '    
' → logprob: -2.3809902667999268
    3. '
' → logprob: -3.5059902667999268
    4. '    
    
' → logprob: -9.255990028381348
    5. '        
' → logprob: -10.130990028381348
    6. '\n' → logprob: -10.380990028381348
    7. 'import' → logprob: -10.880990028381348
    8. '   
' → logprob: -11.130990028381348
    9. 'def' → logprob: -11.380990028381348
    10. '  
' → logprob: -11.505990028381348

Token 469: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029141070321202278
    2. '    
' → logprob: -4.029140949249268
    3. '
' → logprob: -4.529140949249268
    4. 'visited' → logprob: -10.154141426086426
    5. 'dist' → logprob: -10.779141426086426
    6. 'distance' → logprob: -10.904141426086426
    7. '    
    
' → logprob: -11.154141426086426
    8. '        
' → logprob: -11.529141426086426
    9. ' 
' → logprob: -12.154141426086426
    10. '#' (adapté à ' #') → logprob: -12.279141426086426

Token 470: ' Fonction' (ID: 189149)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5239952206611633
    2. 'dist' → logprob: -1.6489951610565186
    3. '   ' → logprob: -2.7739951610565186
    4. ' visited' → logprob: -3.1489951610565186
    5. 'distance' → logprob: -3.2739951610565186
    6. 'queue' → logprob: -3.7739951610565186
    7. '#' → logprob: -4.148995399475098
    8. ' dist' → logprob: -4.648995399475098
    9. 'INF' → logprob: -5.023995399475098
    10. 'from' → logprob: -5.648995399475098

Token 471: ' pour' (ID: 1930)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.656013548374176
    2. 'def' → logprob: -0.781013548374176
    3. ' def' → logprob: -4.656013488769531
    4. 'b' → logprob: -5.281013488769531
    5. ' BFS' → logprob: -6.031013488769531
    6. ' de' → logprob: -6.031013488769531
    7. '   ' → logprob: -7.406013488769531
    8. ' get' → logprob: -7.781013488769531
    9. ' ' → logprob: -7.781013488769531
    10. 'neighbors' → logprob: -8.156013488769531

Token 472: ' faire' (ID: 8119)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03381005674600601
    2. ' bfs' → logprob: -3.4088101387023926
    3. 'is' → logprob: -9.783809661865234
    4. ' valid' → logprob: -10.408809661865234
    5. 'valid' → logprob: -10.533809661865234
    6. ' is' → logprob: -11.158809661865234
    7. 'neighbors' → logprob: -11.533809661865234
    8. ' neighbors' → logprob: -12.033809661865234
    9. '	b' → logprob: -12.408809661865234
    10. 'in' → logprob: -12.908809661865234

Token 473: ' un' (ID: 537)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14391477406024933
    2. ' bfs' → logprob: -2.0189146995544434
    3. ' un' → logprob: -8.018915176391602
    4. 'def' → logprob: -8.893915176391602
    5. ' la' → logprob: -9.018915176391602
    6. 'B' → logprob: -9.018915176391602
    7. '   ' → logprob: -9.143915176391602
    8. ' BFS' → logprob: -9.268915176391602
    9. 'le' → logprob: -9.643915176391602
    10. 'un' → logprob: -9.768915176391602

Token 474: ' BFS' (ID: 190016)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00022165567497722805
    2. 'B' → logprob: -9.125221252441406
    3. ' bfs' → logprob: -9.125221252441406
    4. ' BFS' → logprob: -13.375221252441406
    5. 'bread' → logprob: -13.500221252441406
    6. '_b' → logprob: -14.500221252441406
    7. 'deque' → logprob: -16.375221252441406
    8. 'def' → logprob: -17.000221252441406
    9. 'bou' → logprob: -18.250221252441406
    10. 'bf' → logprob: -18.250221252441406

Token 475: ' à' (ID: 1221)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1625194549560547
    2. '(queue' → logprob: -1.2875194549560547
    3. '(' → logprob: -1.9125194549560547
    4. '(start' → logprob: -2.7875194549560547
    5. '(graph' → logprob: -2.9125194549560547
    6. '(grid' → logprob: -3.4125194549560547
    7. '(s' → logprob: -3.6625194549560547
    8. '(x' → logprob: -4.162519454956055
    9. '   ' → logprob: -4.287519454956055
    10. ' (' → logprob: -4.662519454956055

Token 476: ' travers' (ID: 26957)
  Prédit: ' partir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.08929221332073212
    2. 'part' → logprob: -2.464292287826538
    3. ' partire' → logprob: -9.089292526245117
    4. 'from' → logprob: -9.214292526245117
    5. 'par' → logprob: -10.714292526245117
    6. 'u' → logprob: -11.089292526245117
    7. 'starting' → logprob: -11.214292526245117
    8. 'dep' → logprob: -11.339292526245117
    9. 'r' → logprob: -11.714292526245117
    10. 'p' → logprob: -11.964292526245117

Token 477: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.07252037525177
    2. ' un' → logprob: -1.57252037525177
    3. ' les' → logprob: -2.4475202560424805
    4. ' grid' → logprob: -2.8225202560424805
    5. 'un' → logprob: -3.0725202560424805
    6. 'la' → logprob: -3.1975202560424805
    7. ' le' → logprob: -3.3225202560424805
    8. ' une' → logprob: -3.4475202560424805
    9. 'les' → logprob: -3.5725202560424805
    10. 'graph' → logprob: -3.8225202560424805

Token 478: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.2288043349981308
    2. ' cases' → logprob: -1.603804349899292
    3. ' deque' → logprob: -6.978804111480713
    4. 'case' → logprob: -8.478804588317871
    5. '0' → logprob: -8.603804588317871
    6. ' espaces' → logprob: -8.603804588317871
    7. ' ' → logprob: -8.603804588317871
    8. 'cells' → logprob: -8.853804588317871
    9. 'spaces' → logprob: -8.853804588317871
    10. 'deque' → logprob: -9.103804588317871

Token 479: ' sans' (ID: 9828)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01109156385064125
    2. '(
' → logprob: -6.011091709136963
    3. '(' → logprob: -6.636091709136963
    4. ' (' → logprob: -6.636091709136963
    5. ' def' → logprob: -6.636091709136963
    6. '(graph' → logprob: -6.886091709136963
    7. '(grid' → logprob: -7.011091709136963
    8. 'from' → logprob: -7.386091709136963
    9. '(queue' → logprob: -7.386091709136963
    10. 'import' → logprob: -9.136091232299805

Token 480: ' arbre' (ID: 164180)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.25266462564468384
    2. ' arbres' → logprob: -1.502664566040039
    3. 'ar' → logprob: -7.877664566040039
    4. ' arbre' → logprob: -8.502664566040039
    5. '_' → logprob: -9.127664566040039
    6. ' arb' → logprob: -10.627664566040039
    7. '   ' → logprob: -12.002664566040039
    8. '_ar' → logprob: -12.377664566040039
    9. ' ' → logprob: -12.877664566040039
    10. 'trees' → logprob: -13.377664566040039

Token 481: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1089496910572052
    2. '
' → logprob: -3.108949661254883
    3. '   ' → logprob: -3.233949661254883
    4. '(queue' → logprob: -5.483949661254883
    5. '(' → logprob: -6.108949661254883
    6. '(
' → logprob: -6.358949661254883
    7. '(H' → logprob: -6.358949661254883
    8. '(s' → logprob: -6.483949661254883
    9. '(n' → logprob: -6.858949661254883
    10. ' def' → logprob: -7.233949661254883

Token 482: ' retourne' (ID: 178818)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.2733756303787231
    2. ' visited' → logprob: -1.6483756303787231
    3. ' que' → logprob: -2.0233755111694336
    4. 'visited' → logprob: -2.2733755111694336
    5. ' start' → logprob: -2.8983755111694336
    6. ' distances' → logprob: -3.1483755111694336
    7. ' def' → logprob: -3.2733755111694336
    8. 'def' → logprob: -3.5233755111694336
    9. 'queue' → logprob: -3.7733755111694336
    10. ' distance' → logprob: -4.023375511169434

Token 483: ' une' (ID: 2463)
  Prédit: ' distances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distances' → logprob: -0.6222593784332275
    2. 'dist' → logprob: -0.9972593784332275
    3. ' dist' → logprob: -2.8722593784332275
    4. ' la' → logprob: -3.9972593784332275
    5. 'distance' → logprob: -4.372259140014648
    6. '   ' → logprob: -5.747259140014648
    7. ' une' → logprob: -6.622259140014648
    8. ' distance' → logprob: -6.872259140014648
    9. ' ' → logprob: -7.747259140014648
    10. 'def' → logprob: -7.872259140014648

Token 484: ' matr' (ID: 25095)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7232455015182495
    2. 'deque' → logprob: -1.8482455015182495
    3. 'distance' → logprob: -2.223245620727539
    4. 'list' → logprob: -2.348245620727539
    5. 'dict' → logprob: -2.598245620727539
    6. 'def' → logprob: -2.723245620727539
    7. ' list' → logprob: -5.348245620727539
    8. ' ' → logprob: -5.723245620727539
    9. ' distances' → logprob: -6.473245620727539
    10. ' dict' → logprob: -6.973245620727539

Token 485: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.4835943579673767
    2. 'ix' → logprob: -0.9835943579673767
    3. 'ic' → logprob: -4.7335944175720215
    4. 'i' → logprob: -8.983593940734863
    5. 'ize' → logprob: -9.483593940734863
    6. '```' → logprob: -9.733593940734863
    7. '[' → logprob: -9.858593940734863
    8. 'x' → logprob: -9.858593940734863
    9. 'ices' → logprob: -9.983593940734863
    10. 'def' → logprob: -10.108593940734863

Token 486: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3464100360870361
    2. 'dist' → logprob: -1.5964100360870361
    3. ' de' → logprob: -1.8464100360870361
    4. 'def' → logprob: -2.221410036087036
    5. 'de' → logprob: -2.471410036087036
    6. '_dist' → logprob: -2.846410036087036
    7. '[' → logprob: -3.596410036087036
    8. '_distance' → logprob: -3.596410036087036
    9. '(dist' → logprob: -3.971410036087036
    10. '_de' → logprob: -4.096409797668457

Token 487: ' distances' (ID: 48294)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.015096963383257389
    2. 'distance' → logprob: -4.515097141265869
    3. ' distances' → logprob: -5.515097141265869
    4. 'int' → logprob: -12.140096664428711
    5. ' dist' → logprob: -12.390096664428711
    6. 'd' → logprob: -12.640096664428711
    7. ' distance' → logprob: -13.765096664428711
    8. 'dimensions' → logprob: -14.390096664428711
    9. '```' → logprob: -15.390096664428711
    10. 'Distances' → logprob: -15.765096664428711

Token 488: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0779077336192131
    2. '   ' → logprob: -2.8279078006744385
    3. '(H' → logprob: -4.327907562255859
    4. '
' → logprob: -7.077907562255859
    5. '(' → logprob: -8.20290756225586
    6. ' def' → logprob: -8.32790756225586
    7. '(n' → logprob: -8.70290756225586
    8. ' (' → logprob: -8.95290756225586
    9. '(
' → logprob: -8.95290756225586
    10. ':' → logprob: -9.07790756225586

Token 489: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19020338356494904
    2. '   ' → logprob: -1.8152034282684326
    3. '(H' → logprob: -5.6902031898498535
    4. '
' → logprob: -5.8152031898498535
    5. ' def' → logprob: -6.1902031898498535
    6. '(' → logprob: -7.5652031898498535
    7. ':' → logprob: -8.065203666687012
    8. '(n' → logprob: -8.315203666687012
    9. ' (' → logprob: -8.690203666687012
    10. '(def' → logprob: -9.190203666687012

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003494350239634514
    2. '   ' → logprob: -5.7534942626953125
    3. ' def' → logprob: -8.878494262695312
    4. '
' → logprob: -9.253494262695312
    5. 'dist' → logprob: -10.003494262695312
    6. 'distance' → logprob: -11.503494262695312
    7. '    
' → logprob: -11.878494262695312
    8. ' distances' → logprob: -12.628494262695312
    9. '(def' → logprob: -12.753494262695312
    10. ' ' → logprob: -12.878494262695312

Token 491: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018152866512537003
    2. ' bfs' → logprob: -4.018152713775635
    3. 'bread' → logprob: -13.268153190612793
    4. 'distance' → logprob: -14.643153190612793
    5. '_b' → logprob: -15.393153190612793
    6. 'dist' → logprob: -15.393153190612793
    7. '	b' → logprob: -16.018152236938477
    8. 'B' → logprob: -16.643152236938477
    9. ' BFS' → logprob: -16.768152236938477
    10. 'bf' → logprob: -17.643152236938477

Token 492: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.2060726284980774
    2. '(grid' → logprob: -2.0810725688934326
    3. '(' → logprob: -3.2060725688934326
    4. '(queue' → logprob: -4.706072807312012
    5. '(s' → logprob: -5.081072807312012
    6. '(graph' → logprob: -6.456072807312012
    7. '(r' → logprob: -6.831072807312012
    8. '(x' → logprob: -6.831072807312012
    9. '(q' → logprob: -8.081072807312012
    10. '(gr' → logprob: -8.456072807312012

Token 493: '_i' (ID: 10853)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00953283067792654
    2. '):
' → logprob: -4.759532928466797
    3. ')' → logprob: -7.259532928466797
    4. ',' → logprob: -10.134532928466797
    5. 's' → logprob: -10.134532928466797
    6. '):
' → logprob: -10.384532928466797
    7. '_pos' → logprob: -10.884532928466797
    8. '(' → logprob: -11.134532928466797
    9. ':' → logprob: -11.384532928466797
    10. '(start' → logprob: -11.509532928466797

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -10.750029563903809
    3. ',start' → logprob: -12.750029563903809
    4. ',
' → logprob: -13.500029563903809
    5. '   ' → logprob: -13.875029563903809
    6. '):' → logprob: -14.250029563903809
    7. ',n' → logprob: -14.875029563903809
    8. ',i' → logprob: -15.250029563903809
    9. ',int' → logprob: -15.500029563903809
    10. '_,' → logprob: -15.625029563903809

Token 495: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0019287518225610256
    2. ' start' → logprob: -6.251928806304932
    3. '
' → logprob: -17.376928329467773
    4. '	start' → logprob: -17.501928329467773
    5. '   ' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.501928329467773
    7. '```' → logprob: -18.626928329467773
    8. '[start' → logprob: -18.751928329467773
    9. '(start' → logprob: -18.751928329467773
    10. '  ' → logprob: -19.126928329467773

Token 496: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.52370685338974
    2. '_i' → logprob: -0.89870685338974
    3. '_x' → logprob: -8.648706436157227
    4. ')' → logprob: -8.773706436157227
    5. ',' → logprob: -9.273706436157227
    6. '_' → logprob: -9.523706436157227
    7. '_,' → logprob: -10.648706436157227
    8. '_)' → logprob: -11.398706436157227
    9. '   ' → logprob: -11.898706436157227
    10. '_t' → logprob: -11.898706436157227

Token 497: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021916929632425308
    2. '):
' → logprob: -4.02191686630249
    3. ',' → logprob: -5.64691686630249
    4. '   ' → logprob: -8.896917343139648
    5. '):
' → logprob: -9.521917343139648
    6. ')' → logprob: -11.396917343139648
    7. ' ):' → logprob: -12.146917343139648
    8. ':' → logprob: -13.021917343139648
    9. '):

' → logprob: -13.521917343139648
    10. ' ' → logprob: -15.521917343139648

Token 498: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2302560955286026
    2. '       ' → logprob: -1.6052560806274414
    3. ':' → logprob: -6.605256080627441
    4. ':
' → logprob: -7.355256080627441
    5. '    
' → logprob: -7.480256080627441
    6. '    ' → logprob: -7.855256080627441
    7. '
' → logprob: -7.855256080627441
    8. ' queue' → logprob: -8.105256080627441
    9. 'queue' → logprob: -8.105256080627441
    10. 'dist' → logprob: -8.355256080627441

Token 499: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.33012697100639343
    2. '   ' → logprob: -1.8301270008087158
    3. ' distances' → logprob: -2.830127000808716
    4. '       ' → logprob: -3.455127000808716
    5. ' dist' → logprob: -3.830127000808716
    6. 'distance' → logprob: -5.080126762390137
    7. ' distance' → logprob: -7.080126762390137
    8. ' queue' → logprob: -7.705126762390137
    9. 'queue' → logprob: -7.830126762390137
    10. '	dist' → logprob: -8.705126762390137

Token 500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023477911949158
    2. '=' → logprob: -1.910234808921814
    3. '   ' → logprob: -12.035234451293945
    4. '=[[' → logprob: -13.660234451293945
    5. '=[' → logprob: -13.785234451293945
    6. ' ' → logprob: -14.035234451293945
    7. ')' → logprob: -15.035234451293945
    8. '[' → logprob: -15.160234451293945
    9. '=[]' → logprob: -15.160234451293945
    10. ',' → logprob: -15.410234451293945

Token 501: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.002736401278525591
    2. ' [[' → logprob: -6.002736568450928
    3. '[' → logprob: -8.25273609161377
    4. '   ' → logprob: -16.752737045288086
    5. '[['' → logprob: -17.377737045288086
    6. '[-' → logprob: -17.627737045288086
    7. ' ' → logprob: -17.752737045288086
    8. ' [' → logprob: -19.002737045288086
    9. '  ' → logprob: -20.252737045288086
    10. '[
' → logprob: -21.377737045288086

Token 502: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804745525121689
    2. 'float' → logprob: -3.2880475521087646
    3. 'None' → logprob: -12.788047790527344
    4. 'sys' → logprob: -13.413047790527344
    5. ' -' → logprob: -13.788047790527344
    6. ' float' → logprob: -15.163047790527344
    7. 'int' → logprob: -15.288047790527344
    8. '-f' → logprob: -15.913047790527344
    9. '10' → logprob: -17.038047790527344
    10. '-inf' → logprob: -17.413047790527344

Token 503: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '2' → logprob: -18.625
    3. ' ' → logprob: -18.875
    4. '-' → logprob: -19.875
    5. 'sys' → logprob: -19.875
    6. '
' → logprob: -21.0
    7. '```' → logprob: -21.25
    8. '   ' → logprob: -21.25
    9. 'inf' → logprob: -21.625
    10. 'float' → logprob: -21.875

Token 504: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004987658932805061
    2. 'for' → logprob: -5.504987716674805
    3. ']*' → logprob: -7.379987716674805
    4. ']' → logprob: -8.254987716674805
    5. '	for' → logprob: -11.379987716674805
    6. ' if' → logprob: -12.504987716674805
    7. ']*(' → logprob: -13.379987716674805
    8. '       ' → logprob: -13.379987716674805
    9. '   ' → logprob: -13.629987716674805
    10. '           ' → logprob: -13.754987716674805

Token 505: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.688212614681106e-05
    2. ' W' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.375017166137695
    4. '(W' → logprob: -17.500017166137695
    5. '	W' → logprob: -18.375017166137695
    6. '       ' → logprob: -19.750017166137695
    7. ' ' → logprob: -21.125017166137695
    8. '           ' → logprob: -21.375017166137695
    9. '<W' → logprob: -21.500017166137695
    10. '    ' → logprob: -21.750017166137695

Token 506: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01105159055441618
    2. 'for' → logprob: -4.511051654815674
    3. '	for' → logprob: -13.261051177978516
    4. '       ' → logprob: -14.011051177978516
    5. '   ' → logprob: -14.136051177978516
    6. ']' → logprob: -15.761051177978516
    7. ' ' → logprob: -16.011051177978516
    8. '        ' → logprob: -16.761051177978516
    9. ')' → logprob: -17.011051177978516
    10. '    ' → logprob: -17.136051177978516

Token 507: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.15260277688503265
    2. '_' → logprob: -2.0276026725769043
    3. ' range' → logprob: -4.652602672576904
    4. 'range' → logprob: -8.152603149414062
    5. '_range' → logprob: -10.527603149414062
    6. ' in' → logprob: -11.027603149414062
    7. ' ' → logprob: -11.652603149414062
    8. ' ' → logprob: -14.402603149414062
    9. ' i' → logprob: -15.027603149414062
    10. '_in' → logprob: -15.402603149414062

Token 508: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08665166795253754
    2. 'in' → logprob: -2.586651563644409
    3. ' in' → logprob: -5.336651802062988
    4. ' range' → logprob: -5.836651802062988
    5. ' ' → logprob: -14.086651802062988
    6. '(range' → logprob: -15.711651802062988
    7. '   ' → logprob: -16.336650848388672
    8. '	range' → logprob: -16.461650848388672
    9. '_range' → logprob: -16.836650848388672
    10. '  ' → logprob: -16.961650848388672

Token 509: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '   ' → logprob: -20.375261306762695
    4. '(range' → logprob: -20.750261306762695
    5. '	range' → logprob: -21.500261306762695
    6. '_range' → logprob: -21.750261306762695
    7. ' ' → logprob: -22.125261306762695
    8. '
' → logprob: -23.000261306762695
    9. '  ' → logprob: -23.125261306762695
    10. '[' → logprob: -24.125261306762695

Token 510: '(H' (ID: 20904)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08635561168193817
    2. ' range' → logprob: -3.086355686187744
    3. '(H' → logprob: -3.336355686187744
    4. 'H' → logprob: -6.586355686187744
    5. '(range' → logprob: -9.336355209350586
    6. '   ' → logprob: -11.086355209350586
    7. ']' → logprob: -12.711355209350586
    8. '       ' → logprob: -13.086355209350586
    9. 'Range' → logprob: -13.086355209350586
    10. ' (' → logprob: -13.586355209350586

Token 511: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.538490950129926e-05
    2. '       ' → logprob: -10.125055313110352
    3. ')]
' → logprob: -11.875055313110352
    4. ')' → logprob: -12.625055313110352
    5. ']' → logprob: -12.750055313110352
    6. '   ' → logprob: -13.250055313110352
    7. ' )' → logprob: -16.00005531311035
    8. ']]' → logprob: -16.87505531311035
    9. ')]

' → logprob: -17.00005531311035
    10. ')])' → logprob: -17.37505531311035

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32790517807006836
    2. 'dist' → logprob: -1.3279051780700684
    3. ' dist' → logprob: -4.952905178070068
    4. '	dist' → logprob: -5.577905178070068
    5. '
' → logprob: -6.077905178070068
    6. '        
' → logprob: -7.202905178070068
    7. '   ' → logprob: -7.952905178070068
    8. '    
' → logprob: -9.952905654907227
    9. '<|end|>' → logprob: -10.202905654907227
    10. '        ' → logprob: -10.702905654907227

Token 513: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.1421976089477539
    2. 'queue' → logprob: -2.142197608947754
    3. '       ' → logprob: -4.642197608947754
    4. ' queue' → logprob: -6.017197608947754
    5. ' dist' → logprob: -6.392197608947754
    6. '   ' → logprob: -7.267197608947754
    7. 'q' → logprob: -8.017197608947754
    8. 'deque' → logprob: -8.267197608947754
    9. 'dq' → logprob: -10.017197608947754
    10. 'que' → logprob: -10.017197608947754

Token 514: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -4.320199877838604e-07
    2. 'start' → logprob: -15.5
    3. '[' → logprob: -16.0
    4. '[end' → logprob: -18.75
    5. ' [' → logprob: -18.875
    6. '][' → logprob: -19.25
    7. '```' → logprob: -19.25
    8. '[s' → logprob: -19.375
    9. '[source' → logprob: -19.875
    10. '[i' → logprob: -20.0

Token 515: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.749814019713085e-06
    2. 'i' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.750006675720215
    4. ')' → logprob: -16.12500762939453
    5. '       ' → logprob: -16.37500762939453
    6. '	i' → logprob: -16.37500762939453
    7. '_j' → logprob: -16.50000762939453
    8. ',' → logprob: -16.87500762939453
    9. '_' → logprob: -17.00000762939453
    10. ' ' → logprob: -17.00000762939453

Token 516: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.500108141452074e-05
    2. ' ][' → logprob: -10.625035285949707
    3. ',' → logprob: -12.000035285949707
    4. '[start' → logprob: -13.500035285949707
    5. '   ' → logprob: -14.125035285949707
    6. ',start' → logprob: -14.375035285949707
    7. '       ' → logprob: -14.625035285949707
    8. ')][' → logprob: -14.750035285949707
    9. '()][' → logprob: -14.875035285949707
    10. ']][' → logprob: -15.750035285949707

Token 517: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -9.372294698550832e-06
    2. ' start' → logprob: -11.625009536743164
    3. '[start' → logprob: -16.000009536743164
    4. '   ' → logprob: -16.625009536743164
    5. '(start' → logprob: -16.625009536743164
    6. '=start' → logprob: -17.250009536743164
    7. '0' → logprob: -18.000009536743164
    8. '	start' → logprob: -18.125009536743164
    9. '       ' → logprob: -18.375009536743164
    10. ':start' → logprob: -18.625009536743164

Token 518: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00023154958034865558
    2. ']' → logprob: -9.125231742858887
    3. 'j' → logprob: -9.125231742858887
    4. '_i' → logprob: -12.000231742858887
    5. ']=' → logprob: -12.625231742858887
    6. '   ' → logprob: -13.375231742858887
    7. 'J' → logprob: -14.875231742858887
    8. '[' → logprob: -15.000231742858887
    9. ' ' → logprob: -15.125231742858887
    10. ']==' → logprob: -15.125231742858887

Token 519: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.91732100979425e-05
    2. ']=' → logprob: -10.375039100646973
    3. ' ]' → logprob: -11.750039100646973
    4. '=' → logprob: -17.25004005432129
    5. ')' → logprob: -18.37504005432129
    6. '   ' → logprob: -19.25004005432129
    7. ']
' → logprob: -20.37504005432129
    8. ' =' → logprob: -20.37504005432129
    9. '']' → logprob: -20.62504005432129
    10. ']=-' → logprob: -21.12504005432129

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575951874256134
    2. ' =' → logprob: -0.825951874256134
    3. ']' → logprob: -11.70095157623291
    4. ']=' → logprob: -12.45095157623291
    5. ' ' → logprob: -16.450952529907227
    6. ',' → logprob: -17.200952529907227
    7. ')' → logprob: -17.325952529907227
    8. ' ]' → logprob: -17.575952529907227
    9. ' ' → logprob: -17.950952529907227
    10. ')=' → logprob: -18.075952529907227

Token 521: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -21.125
    4. '۰' → logprob: -21.375
    5. '０' → logprob: -23.0
    6. '00' → logprob: -23.0
    7. '=' → logprob: -23.625
    8. '٠' → logprob: -24.5
    9. '000' → logprob: -24.625
    10. '  ' → logprob: -24.625

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -21.875
    5. '00' → logprob: -23.125
    6. '０' → logprob: -23.25
    7. '  ' → logprob: -23.75
    8. '=' → logprob: -24.25
    9. '٠' → logprob: -24.5
    10. '	' → logprob: -24.9375

Token 523: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31022271513938904
    2. '
' → logprob: -2.310222625732422
    3. '	queue' → logprob: -2.310222625732422
    4. '   ' → logprob: -3.185222625732422
    5. 'queue' → logprob: -4.435222625732422
    6. ' queue' → logprob: -4.560222625732422
    7. '    
' → logprob: -7.060222625732422
    8. ',' → logprob: -7.685222625732422
    9. '        
' → logprob: -7.685222625732422
    10. '_queue' → logprob: -7.810222625732422

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06122387945652008
    2. '<|end|>' → logprob: -3.6862239837646484
    3. '	queue' → logprob: -4.311223983764648
    4. '   ' → logprob: -4.311223983764648
    5. 'queue' → logprob: -5.811223983764648
    6. '
' → logprob: -6.186223983764648
    7. ' queue' → logprob: -7.686223983764648
    8. '<|end|>' → logprob: -8.311223983764648
    9. '        
' → logprob: -8.686223983764648
    10. '    
' → logprob: -8.811223983764648

Token 525: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.01116088591516018
    2. 'q' → logprob: -4.511160850524902
    3. ' queue' → logprob: -9.511160850524902
    4. '   ' → logprob: -11.011160850524902
    5. 'dq' → logprob: -11.011160850524902
    6. 'que' → logprob: -12.261160850524902
    7. ' q' → logprob: -14.261160850524902
    8. '	queue' → logprob: -15.511160850524902
    9. 'Q' → logprob: -15.636160850524902
    10. '       ' → logprob: -16.01116180419922

Token 526: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859611392021179
    2. '=' → logprob: -3.048596143722534
    3. '.append' → logprob: -11.673596382141113
    4. ' ' → logprob: -16.423595428466797
    5. ')' → logprob: -16.923595428466797
    6. '.' → logprob: -17.048595428466797
    7. 'deque' → logprob: -17.548595428466797
    8. '.enqueue' → logprob: -17.673595428466797
    9. '＝' → logprob: -18.048595428466797
    10. '.extend' → logprob: -18.423595428466797

Token 527: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0019294669618830085
    2. ' deque' → logprob: -6.25192928314209
    3. 'Deque' → logprob: -14.25192928314209
    4. 'de' → logprob: -15.50192928314209
    5. 'queue' → logprob: -21.376930236816406
    6. '(de' → logprob: -21.626930236816406
    7. '	de' → logprob: -22.376930236816406
    8. '```' → logprob: -22.501930236816406
    9. 'dq' → logprob: -22.626930236816406
    10. 'd' → logprob: -22.876930236816406

Token 528: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.0011999934213235974
    2. '()' → logprob: -6.751200199127197
    3. '()
' → logprob: -10.876199722290039
    4. '[(' → logprob: -11.626199722290039
    5. '([' → logprob: -14.001199722290039
    6. '((' → logprob: -14.126199722290039
    7. '(' → logprob: -15.376199722290039
    8. '()\' → logprob: -17.12619972229004
    9. '([[' → logprob: -17.37619972229004
    10. '()

' → logprob: -17.75119972229004

Token 529: '       ' (ID: 309)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05466243252158165
    2. 'append' → logprob: -3.6796624660491943
    3. 'queue' → logprob: -4.304662227630615
    4. '(queue' → logprob: -5.179662227630615
    5. ' queue' → logprob: -5.554662227630615
    6. '       ' → logprob: -6.304662227630615
    7. '.enqueue' → logprob: -6.429662227630615
    8. '.queue' → logprob: -7.804662227630615
    9. ' append' → logprob: -7.804662227630615
    10. '	queue' → logprob: -8.429662704467773

Token 530: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.31358131766319275
    2. ' queue' → logprob: -1.3135813474655151
    3. '(queue' → logprob: -8.313581466674805
    4. 'start' → logprob: -10.313581466674805
    5. '   ' → logprob: -10.938581466674805
    6. '	queue' → logprob: -11.563581466674805
    7. '(' → logprob: -12.563581466674805
    8. ' (' → logprob: -12.688581466674805
    9. ' start' → logprob: -13.188581466674805
    10. '       ' → logprob: -13.813581466674805

Token 531: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.251091377227567e-05
    2. '.' → logprob: -10.500042915344238
    3. 'append' → logprob: -11.375042915344238
    4. '.extend' → logprob: -13.875042915344238
    5. '.enqueue' → logprob: -13.875042915344238
    6. '().' → logprob: -14.500042915344238
    7. '   ' → logprob: -15.000042915344238
    8. '_append' → logprob: -15.250042915344238
    9. ' .' → logprob: -15.750042915344238
    10. ').' → logprob: -16.250041961669922

Token 532: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00033546582562848926
    2. '(' → logprob: -8.000335693359375
    3. ' ((' → logprob: -19.000335693359375
    4. '(((' → logprob: -19.125335693359375
    5. '(
' → logprob: -19.250335693359375
    6. '[(' → logprob: -21.000335693359375
    7. '(start' → logprob: -21.250335693359375
    8. '(("' → logprob: -21.500335693359375
    9. '(('' → logprob: -22.000335693359375
    10. '([(' → logprob: -22.625335693359375

Token 533: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -15.0
    3. '0' → logprob: -18.0
    4. '(start' → logprob: -23.5
    5. '   ' → logprob: -23.75
    6. ' ' → logprob: -25.125
    7. '	start' → logprob: -25.5
    8. '
' → logprob: -25.625
    9. ')' → logprob: -26.0
    10. '[start' → logprob: -26.0

Token 534: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -4.584861744660884e-05
    2. 'i' → logprob: -10.125045776367188
    3. '_j' → logprob: -12.250045776367188
    4. ')' → logprob: -14.625045776367188
    5. 'I' → logprob: -15.750045776367188
    6. 's' → logprob: -16.500045776367188
    7. '(' → logprob: -16.875045776367188
    8. ',' → logprob: -17.250045776367188
    9. 'import' → logprob: -17.375045776367188
    10. '0' → logprob: -17.500045776367188

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -12.00001335144043
    3. ',j' → logprob: -13.12501335144043
    4. ',start' → logprob: -13.50001335144043
    5. ',
' → logprob: -14.12501335144043
    6. '<|end|>' → logprob: -14.12501335144043
    7. ',user' → logprob: -14.50001335144043
    8. ',next' → logprob: -14.62501335144043
    9. '‌,' → logprob: -14.87501335144043
    10. ',s' → logprob: -15.12501335144043

Token 536: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007099286303855479
    2. ' start' → logprob: -7.2507100105285645
    3. '   ' → logprob: -17.375709533691406
    4. ' ' → logprob: -18.000709533691406
    5. '	start' → logprob: -18.375709533691406
    6. '0' → logprob: -18.750709533691406
    7. '[start' → logprob: -18.750709533691406
    8. '(start' → logprob: -19.125709533691406
    9. '    ' → logprob: -19.375709533691406
    10. '
' → logprob: -19.500709533691406

Token 537: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -9.253090865968261e-06
    2. ',' → logprob: -12.250009536743164
    3. '_i' → logprob: -13.375009536743164
    4. 'j' → logprob: -13.500009536743164
    5. ',j' → logprob: -13.625009536743164
    6. ')' → logprob: -16.250009536743164
    7. '```' → logprob: -16.750009536743164
    8. '_,' → logprob: -17.625009536743164
    9. '),' → logprob: -18.125009536743164
    10. ',_' → logprob: -18.125009536743164

Token 538: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.661626634420827e-05
    2. ')' → logprob: -9.500086784362793
    3. '))
' → logprob: -11.875086784362793
    4. ' ))' → logprob: -12.875086784362793
    5. ')))' → logprob: -13.375086784362793
    6. '   ' → logprob: -15.375086784362793
    7. '),' → logprob: -16.125085830688477
    8. '       ' → logprob: -16.625085830688477
    9. '));' → logprob: -16.625085830688477
    10. ',' → logprob: -17.125085830688477

Token 539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2341775745153427
    2. '   ' → logprob: -1.609177589416504
    3. '<|end|>' → logprob: -5.484177589416504
    4. ')' → logprob: -6.609177589416504
    5. '    
' → logprob: -6.859177589416504
    6. '        
' → logprob: -7.609177589416504
    7. '
' → logprob: -7.859177589416504
    8. ' while' → logprob: -7.984177589416504
    9. '	while' → logprob: -8.109177589416504
    10. '    ' → logprob: -9.234177589416504

Token 540: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12507030367851257
    2. '       ' → logprob: -2.375070333480835
    3. ' while' → logprob: -3.875070333480835
    4. '   ' → logprob: -5.625070095062256
    5. '	while' → logprob: -8.625070571899414
    6. '        
' → logprob: -11.625070571899414
    7. 'dire' → logprob: -12.375070571899414
    8. '    
' → logprob: -13.250070571899414
    9. ' directions' → logprob: -14.250070571899414
    10. '```' → logprob: -14.375070571899414

Token 541: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.25193333625793457
    2. 'queue' → logprob: -1.5019333362579346
    3. '	queue' → logprob: -13.251933097839355
    4. '(queue' → logprob: -13.376933097839355
    5. 'len' → logprob: -14.751933097839355
    6. 'que' → logprob: -15.251933097839355
    7. ' ' → logprob: -15.626933097839355
    8. ' len' → logprob: -16.501934051513672
    9. '   ' → logprob: -17.251934051513672
    10. 'Queue' → logprob: -17.751934051513672

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020726511254906654
    2. ':
' → logprob: -3.895726442337036
    3. '.append' → logprob: -10.020726203918457
    4. '.p' → logprob: -10.395726203918457
    5. '.pop' → logprob: -10.520726203918457
    6. '():' → logprob: -10.770726203918457
    7. '):' → logprob: -10.895726203918457
    8. '():
' → logprob: -11.395726203918457
    9. 'opleft' → logprob: -11.645726203918457
    10. '):
' → logprob: -11.895726203918457

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002329978859052062
    2. ' i' → logprob: -6.7523298263549805
    3. '	       ' → logprob: -7.6273298263549805
    4. 'i' → logprob: -7.7523298263549805
    5. '(i' → logprob: -9.87732982635498
    6. ',' → logprob: -10.25232982635498
    7. '            
' → logprob: -10.25232982635498
    8. '
' → logprob: -11.00232982635498
    9. ',i' → logprob: -11.12732982635498
    10. '       ' → logprob: -11.37732982635498

Token 544: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0027139303274452686
    2. ' i' → logprob: -6.252714157104492
    3. 'x' → logprob: -7.502714157104492
    4. '   ' → logprob: -8.502714157104492
    5. 'ci' → logprob: -10.752714157104492
    6. '(i' → logprob: -12.377714157104492
    7. '	i' → logprob: -13.252714157104492
    8. 'cur' → logprob: -13.752714157104492
    9. ' x' → logprob: -14.502714157104492
    10. '_i' → logprob: -15.127714157104492

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. ',j' → logprob: -10.62503433227539
    3. ' ,' → logprob: -11.62503433227539
    4. ',i' → logprob: -14.50003433227539
    5. ',n' → logprob: -15.12503433227539
    6. '_,' → logprob: -15.37503433227539
    7. ',next' → logprob: -16.12503433227539
    8. ',
' → logprob: -16.37503433227539
    9. ',q' → logprob: -16.87503433227539
    10. ',current' → logprob: -16.87503433227539

Token 546: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03804149478673935
    2. ' j' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.788042068481445
    4. '	j' → logprob: -17.913042068481445
    5. ' ' → logprob: -21.038042068481445
    6. '    ' → logprob: -21.288042068481445
    7. '  ' → logprob: -21.413042068481445
    8. '
' → logprob: -22.663042068481445
    9. ',j' → logprob: -22.788042068481445
    10. '     ' → logprob: -23.038042068481445

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12754645943641663
    2. '=' → logprob: -2.127546548843384
    3. ')' → logprob: -7.502546310424805
    4. ',' → logprob: -10.127546310424805
    5. ')=' → logprob: -11.127546310424805
    6. '   ' → logprob: -12.627546310424805
    7. '           ' → logprob: -12.627546310424805
    8. '       ' → logprob: -13.252546310424805
    9. '    ' → logprob: -14.002546310424805
    10. ']' → logprob: -14.627546310424805

Token 548: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.31326213479042053
    2. 'queue' → logprob: -1.3132621049880981
    3. '	queue' → logprob: -15.688261985778809
    4. '(queue' → logprob: -16.563262939453125
    5. 'deque' → logprob: -16.813262939453125
    6. ' ' → logprob: -16.813262939453125
    7. 'que' → logprob: -17.438262939453125
    8. '.queue' → logprob: -18.688262939453125
    9. '   ' → logprob: -19.438262939453125
    10. ' deque' → logprob: -19.813262939453125

Token 549: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005582740413956344
    2. '.pop' → logprob: -7.625558376312256
    3. 'p' → logprob: -10.375557899475098
    4. '.' → logprob: -11.000557899475098
    5. '.append' → logprob: -12.250557899475098
    6. ' .' → logprob: -12.875557899475098
    7. ' p' → logprob: -12.875557899475098
    8. '.dequeue' → logprob: -12.875557899475098
    9. '   ' → logprob: -13.000557899475098
    10. 'opleft' → logprob: -13.250557899475098

Token 550: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.07895225286483765
    2. 'op' → logprob: -2.5789523124694824
    3. 'ople' → logprob: -9.953951835632324
    4. 'opl' → logprob: -11.203951835632324
    5. 'opup' → logprob: -14.453951835632324
    6. 'opt' → logprob: -14.953951835632324
    7. 'opf' → logprob: -16.07895278930664
    8. 'ope' → logprob: -16.57895278930664
    9. 'o' → logprob: -16.57895278930664
    10. 'oplevel' → logprob: -17.20395278930664

Token 551: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4911394715309143
    2. '           ' → logprob: -0.9911394715309143
    3. ')
' → logprob: -4.3661394119262695
    4. '       ' → logprob: -6.8661394119262695
    5. '            
' → logprob: -7.1161394119262695
    6. '               ' → logprob: -7.2411394119262695
    7. '
' → logprob: -7.3661394119262695
    8. '<|end|>' → logprob: -7.9911394119262695
    9. ',' → logprob: -8.61613941192627
    10. '          ' → logprob: -9.86613941192627

Token 552: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009505256894044578
    2. '            
' → logprob: -7.500950336456299
    3. '
' → logprob: -8.000950813293457
    4. '       ' → logprob: -10.250950813293457
    5. ' for' → logprob: -11.625950813293457
    6. ' 
' → logprob: -12.125950813293457
    7. '        
' → logprob: -12.875950813293457
    8. '    
' → logprob: -13.125950813293457
    9. 'for' → logprob: -13.625950813293457
    10. ',' → logprob: -13.750950813293457

Token 553: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39703279733657837
    2. ' for' → logprob: -1.1470327377319336
    3. '           ' → logprob: -4.647032737731934
    4. '       ' → logprob: -7.647032737731934
    5. '            
' → logprob: -11.022032737731934
    6. '	for' → logprob: -11.522032737731934
    7. 'dire' → logprob: -12.272032737731934
    8. '
' → logprob: -12.522032737731934
    9. 'd' → logprob: -12.772032737731934
    10. ' directions' → logprob: -13.272032737731934

Token 554: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.8427157402038574
    2. ' di' → logprob: -1.5927157402038574
    3. 'ni' → logprob: -1.5927157402038574
    4. ' ni' → logprob: -1.8427157402038574
    5. 'dx' → logprob: -5.842715740203857
    6. ' dx' → logprob: -7.717715740203857
    7. '(di' → logprob: -8.092716217041016
    8. ' (' → logprob: -8.342716217041016
    9. '   ' → logprob: -9.217716217041016
    10. '  ' → logprob: -9.217716217041016

Token 555: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02181674912571907
    2. ',d' → logprob: -3.8968167304992676
    3. ' ,' → logprob: -6.896816730499268
    4. ',j' → logprob: -9.021817207336426
    5. ',k' → logprob: -10.521817207336426
    6. ',i' → logprob: -10.646817207336426
    7. ',de' → logprob: -11.146817207336426
    8. ',n' → logprob: -11.396817207336426
    9. ',v' → logprob: -11.646817207336426
    10. ',D' → logprob: -11.771817207336426

Token 556: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00885777547955513
    2. 'dj' → logprob: -5.758857727050781
    3. ',' → logprob: -5.883857727050781
    4. ',j' → logprob: -7.633857727050781
    5. ',d' → logprob: -7.633857727050781
    6. 'd' → logprob: -7.883857727050781
    7. 'ij' → logprob: -7.883857727050781
    8. 'i' → logprob: -8.633857727050781
    9. 'elta' → logprob: -9.133857727050781
    10. 'x' → logprob: -9.133857727050781

Token 557: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03366079926490784
    2. 'in' → logprob: -3.408660888671875
    3. ' ' → logprob: -11.658660888671875
    4. '	in' → logprob: -12.908660888671875
    5. '    ' → logprob: -14.158660888671875
    6. ',' → logprob: -14.158660888671875
    7. '<|end|>' → logprob: -14.408660888671875
    8. ')' → logprob: -14.533660888671875
    9. ' ,' → logprob: -14.783660888671875
    10. '   ' → logprob: -15.033660888671875

Token 558: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3136337697505951
    2. '[' → logprob: -1.3136337995529175
    3. ' [' → logprob: -8.563633918762207
    4. ' [(' → logprob: -9.063633918762207
    5. '[((' → logprob: -10.438633918762207
    6. '((' → logprob: -10.438633918762207
    7. '[-' → logprob: -12.063633918762207
    8. ' ((' → logprob: -14.938633918762207
    9. '[[' → logprob: -15.563633918762207
    10. '[
' → logprob: -16.06363296508789

Token 559: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3132753074169159
    2. '(-' → logprob: -1.3132753372192383
    3. ' (' → logprob: -11.438275337219238
    4. '0' → logprob: -13.563275337219238
    5. '-' → logprob: -13.813275337219238
    6. ' (-' → logprob: -14.813275337219238
    7. '1' → logprob: -17.938274383544922
    8. '   ' → logprob: -18.063274383544922
    9. '(+' → logprob: -18.438274383544922
    10. ' ' → logprob: -19.688274383544922

Token 560: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '0' → logprob: -17.125
    4. ')' → logprob: -19.0
    5. ',' → logprob: -20.125
    6. '-' → logprob: -20.125
    7. '   ' → logprob: -20.625
    8. '```' → logprob: -21.25
    9. '১' → logprob: -21.3125
    10. '
' → logprob: -21.5

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001215475145727396
    2. ' ,' → logprob: -6.75121545791626
    3. '),(' → logprob: -10.501215934753418
    4. '),' → logprob: -11.001215934753418
    5. '0' → logprob: -14.251215934753418
    6. ',),' → logprob: -15.751215934753418
    7. '<|end|>' → logprob: -16.6262149810791
    8. ' ),' → logprob: -16.7512149810791
    9. ',j' → logprob: -17.0012149810791
    10. '‌,' → logprob: -17.0012149810791

Token 562: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '1' → logprob: -17.625024795532227
    4. ')' → logprob: -19.875024795532227
    5. '   ' → logprob: -21.125024795532227
    6. '  ' → logprob: -21.500024795532227
    7. ',' → logprob: -21.625024795532227
    8. '),' → logprob: -21.750024795532227
    9. '۰' → logprob: -22.125024795532227
    10. '
' → logprob: -22.500024795532227

Token 563: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.018245115876197815
    2. '),(' → logprob: -4.018245220184326
    3. ' ),' → logprob: -9.268244743347168
    4. '),
' → logprob: -14.518244743347168
    5. ')' → logprob: -15.518244743347168
    6. ',),' → logprob: -16.768245697021484
    7. '),

' → logprob: -18.018245697021484
    8. '],' → logprob: -19.018245697021484
    9. ''),' → logprob: -19.143245697021484
    10. ',' → logprob: -19.143245697021484

Token 564: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020389800192788243
    2. '0' → logprob: -8.500204086303711
    3. ' ' → logprob: -14.750204086303711
    4. '+' → logprob: -18.37520408630371
    5. '   ' → logprob: -21.87520408630371
    6. '2' → logprob: -21.87520408630371
    7. '```' → logprob: -21.87520408630371
    8. '01' → logprob: -22.00020408630371
    9. '3' → logprob: -22.87520408630371
    10. '
' → logprob: -23.12520408630371

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013360745506361127
    2. '0' → logprob: -6.626336097717285
    3. ' ,' → logprob: -11.501336097717285
    4. ' ' → logprob: -17.62633514404297
    5. '<|end|>' → logprob: -17.62633514404297
    6. ')' → logprob: -18.75133514404297
    7. '```' → logprob: -19.12633514404297
    8. 'import' → logprob: -19.37633514404297
    9. ',
' → logprob: -19.75133514404297
    10. '   ' → logprob: -19.81383514404297

Token 566: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.250001907348633
    5. ',' → logprob: -20.687501907348633
    6. '-' → logprob: -21.000001907348633
    7. '<|end|>' → logprob: -21.000001907348633
    8. ')' → logprob: -21.062501907348633
    9. '```' → logprob: -21.250001907348633
    10. '০' → logprob: -21.937501907348633

Token 567: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.00010950337309623137
    2. '),' → logprob: -9.125109672546387
    3. ',' → logprob: -15.750109672546387
    4. ' ),' → logprob: -16.37510871887207
    5. ',(' → logprob: -16.50010871887207
    6. '),
' → logprob: -16.75010871887207
    7. '(' → logprob: -18.00010871887207
    8. ')' → logprob: -18.62510871887207
    9. '],[' → logprob: -18.75010871887207
    10. ',),' → logprob: -19.62510871887207

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.000001907348633
    4. '۰' → logprob: -18.750001907348633
    5. '```' → logprob: -20.375001907348633
    6. '  ' → logprob: -20.750001907348633
    7. '    ' → logprob: -20.875001907348633
    8. '00' → logprob: -20.875001907348633
    9. ',' → logprob: -21.000001907348633
    10. ')' → logprob: -21.250001907348633

Token 569: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.03809381648898125
    2. ',' → logprob: -3.2880938053131104
    3. '-' → logprob: -10.038093566894531
    4. '1' → logprob: -12.413093566894531
    5. ' ,-' → logprob: -13.663093566894531
    6. ',+' → logprob: -14.163093566894531
    7. ',--' → logprob: -14.288093566894531
    8. ',-
' → logprob: -14.288093566894531
    9. ' ,' → logprob: -15.038093566894531
    10. ',
' → logprob: -15.288093566894531

Token 570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ',' → logprob: -18.875
    4. '+' → logprob: -19.125
    5. '```' → logprob: -19.625
    6. '-' → logprob: -20.375
    7. '   ' → logprob: -20.75
    8. '
' → logprob: -22.0
    9. ')' → logprob: -22.1875
    10. '১' → logprob: -22.8125

Token 571: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -6.749814019713085e-06
    2. '),' → logprob: -12.250006675720215
    3. ')]' → logprob: -14.000006675720215
    4. ',' → logprob: -14.625006675720215
    5. ',(' → logprob: -15.000006675720215
    6. ')' → logprob: -16.37500762939453
    7. '(' → logprob: -16.87500762939453
    8. ')(' → logprob: -17.00000762939453
    9. ')],' → logprob: -17.37500762939453
    10. ')])' → logprob: -17.62500762939453

Token 572: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '+' → logprob: -15.250000953674316
    4. '0' → logprob: -16.125
    5. ')' → logprob: -19.0
    6. '```' → logprob: -19.25
    7. '   ' → logprob: -19.5
    8. '۱' → logprob: -20.8125
    9. '
' → logprob: -21.0625
    10. '１' → logprob: -21.75

Token 573: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004386558721307665
    2. ',' → logprob: -7.750438690185547
    3. '+' → logprob: -12.000438690185547
    4. '0' → logprob: -14.500438690185547
    5. ' ' → logprob: -14.500438690185547
    6. ')' → logprob: -15.125438690185547
    7. '```' → logprob: -15.250438690185547
    8. ',+' → logprob: -16.125438690185547
    9. ')]' → logprob: -16.625438690185547
    10. '-' → logprob: -17.062938690185547

Token 574: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '+' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.750000953674316
    4. ')' → logprob: -18.250001907348633
    5. '```' → logprob: -18.625001907348633
    6. '-' → logprob: -20.750001907348633
    7. '   ' → logprob: -20.812501907348633
    8. '{' → logprob: -20.937501907348633
    9. '0' → logprob: -21.000001907348633
    10. '
' → logprob: -21.187501907348633

Token 575: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3873016834259033
    2. ')' → logprob: -1.1373016834259033
    3. '):' → logprob: -7.887301445007324
    4. ' )' → logprob: -10.762301445007324
    5. ']' → logprob: -11.762301445007324
    6. '):
' → logprob: -11.887301445007324
    7. '))' → logprob: -12.262301445007324
    8. ')])' → logprob: -12.887301445007324
    9. ']]:
' → logprob: -13.637301445007324
    10. ')].' → logprob: -13.637301445007324

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24249175190925598
    2. '               ' → logprob: -1.8674917221069336
    3. ':
' → logprob: -3.6174917221069336
    4. '           ' → logprob: -4.117491722106934
    5. '<|end|>' → logprob: -4.867491722106934
    6. ',' → logprob: -4.992491722106934
    7. '       ' → logprob: -6.867491722106934
    8. '):
' → logprob: -7.617491722106934
    9. '	           ' → logprob: -8.492491722106934
    10. '<|end|>' → logprob: -8.867491722106934

Token 577: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007326790131628513
    2. '            ' → logprob: -6.507326602935791
    3. ' new' → logprob: -6.632326602935791
    4. '           ' → logprob: -6.882326602935791
    5. '                ' → logprob: -6.882326602935791
    6. ' i' → logprob: -7.507326602935791
    7. ' ' → logprob: -8.13232707977295
    8. ' next' → logprob: -8.25732707977295
    9. ' ni' → logprob: -8.25732707977295
    10. ' 
' → logprob: -8.63232707977295

Token 578: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.062156569212675095
    2. 'ni' (adapté à ' ni') → logprob: -2.8121566772460938
    3. ' new' → logprob: -9.187156677246094
    4. 'i' → logprob: -10.687156677246094
    5. ' ii' → logprob: -10.812156677246094
    6. ' i' → logprob: -11.312156677246094
    7. '               ' → logprob: -11.812156677246094
    8. 'new' → logprob: -11.812156677246094
    9. '```' → logprob: -12.687156677246094
    10. 'x' → logprob: -13.437156677246094

Token 579: ',n' (ID: 18103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03950934112071991
    2. ' =' → logprob: -3.5395092964172363
    3. ',' → logprob: -4.789509296417236
    4. '=i' → logprob: -6.664509296417236
    5. '=n' → logprob: -9.539509773254395
    6. ',n' → logprob: -11.164509773254395
    7. ',i' → logprob: -11.539509773254395
    8. '=j' → logprob: -11.664509773254395
    9. ' ,' → logprob: -11.789509773254395
    10. ',j' → logprob: -12.664509773254395

Token 580: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018506382184568793
    2. '=' → logprob: -10.000185012817383
    3. '_i' → logprob: -10.125185012817383
    4. ',' → logprob: -10.500185012817383
    5. ' =' → logprob: -10.500185012817383
    6. ' i' → logprob: -11.000185012817383
    7. ',i' → logprob: -11.500185012817383
    8. '=i' → logprob: -11.750185012817383
    9. '+' → logprob: -12.625185012817383
    10. 'j' → logprob: -13.375185012817383

Token 581: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10055126994848251
    2. ' =' → logprob: -2.3505513668060303
    3. '=i' → logprob: -7.975551128387451
    4. '=n' → logprob: -14.35055160522461
    5. '=j' → logprob: -17.22555160522461
    6. '＝' → logprob: -17.47555160522461
    7. '=int' → logprob: -17.60055160522461
    8. ')' → logprob: -18.22555160522461
    9. '=
' → logprob: -18.47555160522461
    10. ' ' → logprob: -18.85055160522461

Token 582: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16022513806819916
    2. ' i' → logprob: -1.9102251529693604
    3. '(i' → logprob: -14.785224914550781
    4. ' ' → logprob: -15.660224914550781
    5. ' (' → logprob: -15.910224914550781
    6. '	i' → logprob: -16.03522491455078
    7. '   ' → logprob: -16.03522491455078
    8. ' ' → logprob: -18.03522491455078
    9. '_i' → logprob: -18.28522491455078
    10. '  ' → logprob: -18.53522491455078

Token 583: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06196858361363411
    2. ' +' → logprob: -2.8119685649871826
    3. '+d' → logprob: -14.186968803405762
    4. '+i' → logprob: -15.811968803405762
    5. '+j' → logprob: -17.686967849731445
    6. '+
' → logprob: -18.061967849731445
    7. '＋' → logprob: -18.186967849731445
    8. '+n' → logprob: -18.186967849731445
    9. '+k' → logprob: -19.561967849731445
    10. '+D' → logprob: -19.561967849731445

Token 584: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.7432603272027336e-06
    2. 'd' → logprob: -14.125001907348633
    3. ' di' → logprob: -14.250001907348633
    4. '(di' → logprob: -16.125001907348633
    5. '1' → logprob: -16.500001907348633
    6. ' ' → logprob: -18.750001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '
' → logprob: -19.125001907348633
    9. '0' → logprob: -19.375001907348633
    10. 'dj' → logprob: -19.625001907348633

Token 585: ',' (ID: 11)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.1723957657814026
    2. ',' → logprob: -1.9223957061767578
    3. ',j' → logprob: -4.422395706176758
    4. ' ,' → logprob: -10.172395706176758
    5. ',d' → logprob: -10.297395706176758
    6. ',v' → logprob: -12.672395706176758
    7. ',t' → logprob: -12.672395706176758
    8. ',c' → logprob: -12.922395706176758
    9. ',m' → logprob: -12.922395706176758
    10. ',w' → logprob: -13.172395706176758

Token 586: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015023599844425917
    2. ' j' → logprob: -6.501502513885498
    3. '	j' → logprob: -17.001502990722656
    4. '   ' → logprob: -18.376502990722656
    5. '$j' → logprob: -21.126502990722656
    6. '    ' → logprob: -21.376502990722656
    7. ' ' → logprob: -21.376502990722656
    8. '  ' → logprob: -21.376502990722656
    9. ' ' → logprob: -22.376502990722656
    10. '[j' → logprob: -22.751502990722656

Token 587: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005081364419311285
    2. '<|end|>' → logprob: -5.5050811767578125
    3. '+n' → logprob: -7.7550811767578125
    4. '+d' → logprob: -8.005081176757812
    5. ',n' → logprob: -9.755081176757812
    6. ' +' → logprob: -10.005081176757812
    7. '+j' → logprob: -10.380081176757812
    8. ',d' → logprob: -10.880081176757812
    9. '+i' → logprob: -11.130081176757812
    10. 'di' → logprob: -11.505081176757812

Token 588: 'dj' (ID: 115658)
  Prédit: 'dj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -1.3425219549390022e-05
    2. ' dj' → logprob: -11.25001335144043
    3. '0' → logprob: -16.37501335144043
    4. '1' → logprob: -16.37501335144043
    5. '.dj' → logprob: -16.62501335144043
    6. '
' → logprob: -17.62501335144043
    7. 'j' → logprob: -17.87501335144043
    8. 'Dj' → logprob: -19.12501335144043
    9. ' ' → logprob: -19.62501335144043
    10. 'd' → logprob: -19.87501335144043

Token 589: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 590: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19519786536693573
    2. '<|end|>' → logprob: -1.8201978206634521
    3. '       ' → logprob: -5.195198059082031
    4. '           ' → logprob: -5.320198059082031
    5. ' if' → logprob: -6.945198059082031
    6. '                ' → logprob: -7.320198059082031
    7. '<|end|>' → logprob: -7.320198059082031
    8. '	       ' → logprob: -7.570198059082031
    9. '                
' → logprob: -8.320198059082031
    10. ' ' → logprob: -8.695198059082031

Token 591: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011703364551067352
    2. 'if' (adapté à ' if') → logprob: -5.0117034912109375
    3. '               ' → logprob: -5.6367034912109375
    4. '                ' → logprob: -7.3867034912109375
    5. '<|end|>' → logprob: -7.6367034912109375
    6. ' 
' → logprob: -9.011703491210938
    7. ' ' → logprob: -9.636703491210938
    8. '                
' → logprob: -10.011703491210938
    9. '
' → logprob: -11.011703491210938
    10. ' valid' → logprob: -11.386703491210938

Token 592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. ' ' → logprob: -16.143150329589844
    4. '   ' → logprob: -16.393150329589844
    5. '(' → logprob: -16.893150329589844
    6. 'ni' → logprob: -17.143150329589844
    7. '  ' → logprob: -18.018150329589844
    8. ' (' → logprob: -18.643150329589844
    9. ' ni' → logprob: -18.768150329589844
    10. '۰' → logprob: -19.018150329589844

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '(' → logprob: -17.500017166137695
    4. 'ni' → logprob: -18.375017166137695
    5. '   ' → logprob: -19.125017166137695
    6. '
' → logprob: -20.250017166137695
    7. '۰' → logprob: -20.250017166137695
    8. '00' → logprob: -21.000017166137695
    9. ' ' → logprob: -21.125017166137695
    10. '         ' → logprob: -21.250017166137695

Token 594: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31334954500198364
    2. '<=' → logprob: -1.3133494853973389
    3. '>=' → logprob: -9.813349723815918
    4. ' >=' → logprob: -10.813349723815918
    5. '<' → logprob: -12.563349723815918
    6. ' <' → logprob: -12.563349723815918
    7. '<n' → logprob: -13.188349723815918
    8. ' ' → logprob: -13.688349723815918
    9. '0' → logprob: -13.938349723815918
    10. '<len' → logprob: -14.563349723815918

Token 595: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -8.061054359131958e-06
    2. ' ni' → logprob: -11.750007629394531
    3. 'n' → logprob: -17.00000762939453
    4. 'nii' → logprob: -17.75000762939453
    5. '   ' → logprob: -18.50000762939453
    6. 'ny' → logprob: -18.62500762939453
    7. '
' → logprob: -19.25000762939453
    8. 'niu' → logprob: -19.37500762939453
    9. '-ni' → logprob: -19.50000762939453
    10. 'nj' → logprob: -19.62500762939453

Token 596: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.006612937897443771
    2. '<H' → logprob: -5.256612777709961
    3. ' <' → logprob: -6.631612777709961
    4. '<n' → logprob: -10.506612777709961
    5. '<W' → logprob: -11.256612777709961
    6. '<N' → logprob: -11.631612777709961
    7. 'H' → logprob: -12.131612777709961
    8. '<size' → logprob: -13.506612777709961
    9. '<len' → logprob: -13.631612777709961
    10. '<num' → logprob: -14.756612777709961

Token 597: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.306760805164231e-05
    2. ' H' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.12501335144043
    4. '	H' → logprob: -19.37501335144043
    5. ' ' → logprob: -19.62501335144043
    6. '  ' → logprob: -20.87501335144043
    7. '
' → logprob: -21.37501335144043
    8. '(H' → logprob: -22.87501335144043
    9. ',H' → logprob: -23.12501335144043
    10. '       ' → logprob: -23.12501335144043

Token 598: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06196824833750725
    2. 'and' → logprob: -2.8119683265686035
    3. '               ' → logprob: -15.686967849731445
    4. '	and' → logprob: -15.936967849731445
    5. '           ' → logprob: -16.186967849731445
    6. ' ' → logprob: -16.186967849731445
    7. ' и' → logprob: -17.186967849731445
    8. '       ' → logprob: -17.436967849731445
    9. '   ' → logprob: -17.936967849731445
    10. '                   ' → logprob: -18.311967849731445

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324967086315155
    2. ' ' → logprob: -3.773249626159668
    3. ' W' → logprob: -12.898249626159668
    4. 'W' → logprob: -13.523249626159668
    5. '   ' → logprob: -15.898249626159668
    6. '  ' → logprob: -16.523250579833984
    7. ' nj' → logprob: -17.648250579833984
    8. '               ' → logprob: -17.773250579833984
    9. ' ' → logprob: -18.023250579833984
    10. '    ' → logprob: -18.273250579833984

Token 600: '0' (ID: 15)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0015068859793245792
    2. '0' → logprob: -6.751506805419922
    3. ' W' → logprob: -8.001506805419922
    4. ' ' → logprob: -13.751506805419922
    5. 'nj' → logprob: -14.876506805419922
    6. '   ' → logprob: -15.626506805419922
    7. '<W' → logprob: -17.251506805419922
    8. ' nj' → logprob: -17.501506805419922
    9. '	W' → logprob: -17.751506805419922
    10. '               ' → logprob: -18.376506805419922

Token 601: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2501376271247864
    2. '<' → logprob: -1.7501375675201416
    3. '<n' → logprob: -4.375137805938721
    4. 'nj' → logprob: -4.500137805938721
    5. '<W' → logprob: -4.750137805938721
    6. ' ' → logprob: -6.000137805938721
    7. '<=' → logprob: -6.125137805938721
    8. ' <=' → logprob: -6.250137805938721
    9. 'W' → logprob: -6.375137805938721
    10. ' nj' → logprob: -6.625137805938721

Token 602: ' nj' (ID: 8979)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.003514072159305215
    2. ' W' → logprob: -6.003514289855957
    3. 'nj' → logprob: -6.878514289855957
    4. ' nj' → logprob: -12.003514289855957
    5. 'wj' → logprob: -13.878514289855957
    6. '	W' → logprob: -14.128514289855957
    7. 'nw' → logprob: -16.12851333618164
    8. '
' → logprob: -16.37851333618164
    9. 'Nj' → logprob: -16.37851333618164
    10. '<W' → logprob: -16.62851333618164

Token 603: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.012519658543169498
    2. '<' → logprob: -4.512519836425781
    3. '<W' → logprob: -6.637519836425781
    4. 'W' → logprob: -8.762519836425781
    5. ' W' → logprob: -13.262519836425781
    6. ' ' → logprob: -13.762519836425781
    7. '<H' → logprob: -14.637519836425781
    8. '<size' → logprob: -16.51251983642578
    9. 'and' → logprob: -16.63751983642578
    10. ' <=' → logprob: -16.63751983642578

Token 604: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0024783893022686243
    2. ' W' → logprob: -6.00247859954834
    3. '   ' → logprob: -13.62747859954834
    4. ' ' → logprob: -14.25247859954834
    5. '  ' → logprob: -15.87747859954834
    6. '	W' → logprob: -16.002477645874023
    7. '       ' → logprob: -16.502477645874023
    8. '[' → logprob: -16.627477645874023
    9. '```' → logprob: -16.627477645874023
    10. '=W' → logprob: -17.002477645874023

Token 605: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012721064500510693
    2. 'and' → logprob: -4.387721061706543
    3. '               ' → logprob: -9.137721061706543
    4. '           ' → logprob: -10.637721061706543
    5. '                   ' → logprob: -10.637721061706543
    6. '                       ' → logprob: -11.387721061706543
    7. ':' → logprob: -11.887721061706543
    8. '	and' → logprob: -11.887721061706543
    9. ':
' → logprob: -12.012721061706543
    10. '                ' → logprob: -12.387721061706543

Token 606: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4012007415294647
    2. '                   ' → logprob: -1.151200771331787
    3. '               ' → logprob: -4.526200771331787
    4. 'and' → logprob: -6.276200771331787
    5. '                       ' → logprob: -7.526200771331787
    6. '           ' → logprob: -8.526200294494629
    7. ' if' → logprob: -8.526200294494629
    8. '                    
' → logprob: -8.901200294494629
    9. '<|end|>' → logprob: -9.026200294494629
    10. '                    ' → logprob: -9.526200294494629

Token 607: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1625521034002304
    2. ' if' → logprob: -1.9125521183013916
    3. '                       ' → logprob: -6.9125518798828125
    4. '                   ' → logprob: -7.1625518798828125
    5. 'and' → logprob: -7.7875518798828125
    6. ' and' → logprob: -9.037551879882812
    7. '                           ' → logprob: -11.912551879882812
    8. '       ' → logprob: -12.912551879882812
    9. '   ' → logprob: -12.912551879882812
    10. '               ' → logprob: -13.162551879882812

Token 608: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.038058701902627945
    2. ' A' → logprob: -3.2880587577819824
    3. '   ' → logprob: -11.163058280944824
    4. 'dist' → logprob: -13.788058280944824
    5. ' dist' → logprob: -14.788058280944824
    6. ' not' → logprob: -14.913058280944824
    7. '	A' → logprob: -14.913058280944824
    8. ' ' → logprob: -15.163058280944824
    9. '    ' → logprob: -15.663058280944824
    10. '                   ' → logprob: -15.788058280944824

Token 609: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.25
    3. '][' → logprob: -16.375
    4. ')[' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. '[
' → logprob: -18.25
    7. '   ' → logprob: -18.75
    8. ')' → logprob: -19.375
    9. '[][' → logprob: -19.625
    10. '==' → logprob: -19.625

Token 610: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -9.674858301877975e-05
    2. '[' → logprob: -9.500096321105957
    3. ' ni' → logprob: -10.750096321105957
    4. '-ni' → logprob: -16.000097274780273
    5. '][' → logprob: -16.375097274780273
    6. 'n' → logprob: -17.125097274780273
    7. '   ' → logprob: -17.625097274780273
    8. ']' → logprob: -17.750097274780273
    9. 'Ni' → logprob: -18.000097274780273
    10. 'nii' → logprob: -18.250097274780273

Token 611: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.012606188654899597
    2. '[' → logprob: -4.387606143951416
    3. ']' → logprob: -9.637606620788574
    4. ' ][' → logprob: -11.387606620788574
    5. ']==' → logprob: -11.762606620788574
    6. '"][' → logprob: -13.012606620788574
    7. '[n' → logprob: -13.137606620788574
    8. ''][' → logprob: -13.262606620788574
    9. '}[' → logprob: -13.637606620788574
    10. '   ' → logprob: -13.637606620788574

Token 612: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -8.65707261255011e-06
    2. ' nj' → logprob: -12.500008583068848
    3. '0' → logprob: -13.000008583068848
    4. 'j' → logprob: -14.250008583068848
    5. 'dj' → logprob: -14.875008583068848
    6. 'n' → logprob: -15.125008583068848
    7. '
' → logprob: -15.125008583068848
    8. '   ' → logprob: -15.250008583068848
    9. '```' → logprob: -15.625008583068848
    10. ']' → logprob: -15.875008583068848

Token 613: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20564258098602295
    2. ']==' → logprob: -1.705642580986023
    3. '==' → logprob: -5.8306427001953125
    4. ' ==' → logprob: -7.3306427001953125
    5. '[' → logprob: -8.080642700195312
    6. ' ]' → logprob: -8.830642700195312
    7. ')' → logprob: -9.455642700195312
    8. ')==' → logprob: -9.830642700195312
    9. '']==' → logprob: -10.455642700195312
    10. '']' → logprob: -12.705642700195312

Token 614: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4742753505706787
    2. '==' → logprob: -0.9742753505706787
    3. ']==' → logprob: -8.849275588989258
    4. '[' → logprob: -10.599275588989258
    5. ')==' → logprob: -10.599275588989258
    6. ')' → logprob: -13.349275588989258
    7. ' ' → logprob: -14.349275588989258
    8. ']' → logprob: -14.349275588989258
    9. '()==' → logprob: -14.474275588989258
    10. '=' → logprob: -15.099275588989258

Token 615: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -22.250001907348633
    4. '۰' → logprob: -22.250001907348633
    5. '```' → logprob: -24.000001907348633
    6. '<|end|>' → logprob: -24.125001907348633
    7. '00' → logprob: -24.625001907348633
    8. '  ' → logprob: -25.000001907348633
    9. '০' → logprob: -25.125001907348633
    10. '[' → logprob: -25.125001907348633

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -20.75
    4. '```' → logprob: -21.5
    5. '<|end|>' → logprob: -21.875
    6. '   ' → logprob: -22.0
    7. ' ' → logprob: -23.0
    8. '=' → logprob: -23.125
    9. '00' → logprob: -23.375
    10. '  ' → logprob: -23.5

Token 617: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005437234882265329
    2. 'and' → logprob: -5.25543737411499
    3. '                       ' → logprob: -8.755436897277832
    4. '                   ' → logprob: -10.505436897277832
    5. '                    ' → logprob: -11.255436897277832
    6. '                        ' → logprob: -13.255436897277832
    7. ' ' → logprob: -13.630436897277832
    8. '	and' → logprob: -14.755436897277832
    9. '                           ' → logprob: -15.005436897277832
    10. ')' → logprob: -15.255436897277832

Token 618: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10020947456359863
    2. ' dist' → logprob: -2.3502094745635986
    3. '                   ' → logprob: -13.47520923614502
    4. '	dist' → logprob: -14.97520923614502
    5. '(dist' → logprob: -14.97520923614502
    6. '                           ' → logprob: -15.35020923614502
    7. '                    ' → logprob: -15.47520923614502
    8. '                       ' → logprob: -16.725210189819336
    9. '                            ' → logprob: -16.975210189819336
    10. '   ' → logprob: -16.975210189819336

Token 619: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.0
    3. '```' → logprob: -20.0
    4. '][' → logprob: -20.25
    5. '   ' → logprob: -21.375
    6. '	' → logprob: -22.25
    7. ')[' → logprob: -22.25
    8. '\[' → logprob: -22.75
    9. '[[' → logprob: -22.875
    10. '
' → logprob: -22.875

Token 620: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.008618593215942383
    2. '[' → logprob: -4.758618354797363
    3. ' ni' → logprob: -12.633618354797363
    4. 'i' → logprob: -16.00861930847168
    5. '```' → logprob: -16.00861930847168
    6. 'n' → logprob: -16.13361930847168
    7. '-ni' → logprob: -16.25861930847168
    8. 'NI' → logprob: -16.38361930847168
    9. ']' → logprob: -16.38361930847168
    10. '(' → logprob: -16.75861930847168

Token 621: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25193899869918823
    2. '[' → logprob: -1.501939058303833
    3. ']' → logprob: -12.126938819885254
    4. ''][' → logprob: -13.876938819885254
    5. '"][' → logprob: -14.126938819885254
    6. '   ' → logprob: -14.626938819885254
    7. ' ][' → logprob: -14.626938819885254
    8. '}[' → logprob: -14.751938819885254
    9. '```' → logprob: -14.751938819885254
    10. 'ni' → logprob: -15.626938819885254

Token 622: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0005686411168426275
    2. 'j' → logprob: -7.500568866729736
    3. '[j' → logprob: -12.625568389892578
    4. '
' → logprob: -12.750568389892578
    5. ' nj' → logprob: -12.875568389892578
    6. '[n' → logprob: -13.250568389892578
    7. '   ' → logprob: -13.500568389892578
    8. '[' → logprob: -13.750568389892578
    9. '-' → logprob: -14.375568389892578
    10. 'ni' → logprob: -14.625568389892578

Token 623: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8366802930831909
    2. ']==' → logprob: -1.211680293083191
    3. '[' → logprob: -1.461680293083191
    4. '==' → logprob: -3.8366804122924805
    5. '==-' → logprob: -4.5866804122924805
    6. ' ==' → logprob: -5.3366804122924805
    7. '```' → logprob: -8.96168041229248
    8. '[j' → logprob: -8.96168041229248
    9. ' ]' → logprob: -9.21168041229248
    10. ')' → logprob: -9.46168041229248

Token 624: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.147990420460701
    2. ' ==' → logprob: -2.5229904651641846
    3. '==-' → logprob: -2.8979904651641846
    4. '[' → logprob: -6.8979902267456055
    5. ']==' → logprob: -7.2729902267456055
    6. '=' → logprob: -8.522990226745605
    7. '===' → logprob: -9.272990226745605
    8. ')==' → logprob: -9.522990226745605
    9. ')' → logprob: -9.772990226745605
    10. '<' → logprob: -10.772990226745605

Token 625: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.500036239624023
    4. ' ' → logprob: -21.250036239624023
    5. '−' → logprob: -22.125036239624023
    6. '  ' → logprob: -23.250036239624023
    7. '	' → logprob: -23.250036239624023
    8. '‌' → logprob: -23.500036239624023
    9. '```' → logprob: -23.875036239624023
    10. '-
' → logprob: -24.750036239624023

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.75000286102295
    3. '   ' → logprob: -14.00000286102295
    4. '                   ' → logprob: -15.31250286102295
    5. '       ' → logprob: -15.81250286102295
    6. '           ' → logprob: -15.81250286102295
    7. '```' → logprob: -15.87500286102295
    8. '               ' → logprob: -16.375003814697266
    9. '                       ' → logprob: -17.000003814697266
    10. '
' → logprob: -17.250003814697266

Token 627: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10371875762939453
    2. '                       ' → logprob: -2.9787187576293945
    3. ':
' → logprob: -3.1037187576293945
    4. '                   ' → logprob: -6.9787187576293945
    5. '):' → logprob: -7.6037187576293945
    6. ' :' → logprob: -7.8537187576293945
    7. '):
' → logprob: -7.9787187576293945
    8. ' and' → logprob: -8.853718757629395
    9. '                           ' → logprob: -9.478718757629395
    10. '<|end|>' → logprob: -9.478718757629395

Token 628: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0011285445652902126
    2. '                        
' → logprob: -8.251128196716309
    3. '                   ' → logprob: -8.376128196716309
    4. '                           ' → logprob: -8.501128196716309
    5. '                        ' → logprob: -8.626128196716309
    6. '                               ' → logprob: -9.501128196716309
    7. '                    ' → logprob: -10.251128196716309
    8. ':' → logprob: -10.376128196716309
    9. '               ' → logprob: -10.501128196716309
    10. '<|end|>' → logprob: -11.501128196716309

Token 629: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.3869022727012634
    2. ' dist' → logprob: -1.1369023323059082
    3. '                           ' → logprob: -10.76190185546875
    4. '                       ' → logprob: -11.76190185546875
    5. '	dist' → logprob: -13.63690185546875
    6. '                               ' → logprob: -14.26190185546875
    7. '_dist' → logprob: -15.51190185546875
    8. '                   ' → logprob: -16.63690185546875
    9. 'Dist' → logprob: -17.13690185546875
    10. '   ' → logprob: -17.38690185546875

Token 630: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.5
    3. '
' → logprob: -18.875
    4. '
' → logprob: -19.625
    5. '][' → logprob: -19.625
    6. ' [' → logprob: -19.75
    7. '   ' → logprob: -20.125
    8. '=' → logprob: -20.25
    9. '[
' → logprob: -20.625
    10. '[next' → logprob: -20.75

Token 631: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -7.896309739408025e-07
    2. ' ni' → logprob: -14.250000953674316
    3. '[' → logprob: -18.375
    4. 'n' → logprob: -18.5
    5. '-ni' → logprob: -19.75
    6. 'ни' → logprob: -19.875
    7. '```' → logprob: -20.0
    8. '   ' → logprob: -20.75
    9. ']' → logprob: -20.75
    10. '}' → logprob: -20.875

Token 632: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3133120536804199
    2. '][' → logprob: -1.31331205368042
    3. '                   ' → logprob: -11.688312530517578
    4. '       ' → logprob: -12.063312530517578
    5. ']' → logprob: -12.188312530517578
    6. '}[' → logprob: -12.563312530517578
    7. '                       ' → logprob: -12.688312530517578
    8. ''][' → logprob: -12.688312530517578
    9. ' ][' → logprob: -12.688312530517578
    10. '```' → logprob: -12.813312530517578

Token 633: 'nj' (ID: 30318)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.29762542247772217
    2. 'nj' → logprob: -1.4226254224777222
    3. 'i' → logprob: -4.172625541687012
    4. '(i' → logprob: -8.547625541687012
    5. '(' → logprob: -8.797625541687012
    6. ' ni' → logprob: -9.172625541687012
    7. 'ij' → logprob: -9.547625541687012
    8. 'n' → logprob: -9.922625541687012
    9. '(n' → logprob: -10.172625541687012
    10. '[' → logprob: -10.297625541687012

Token 634: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43028149008750916
    2. ' =' → logprob: -1.1802815198898315
    3. ']' → logprob: -3.305281400680542
    4. ']=' → logprob: -5.180281639099121
    5. ')' → logprob: -8.930281639099121
    6. ')=' → logprob: -10.680281639099121
    7. ' ]' → logprob: -12.055281639099121
    8. '[' → logprob: -13.055281639099121
    9. '                   ' → logprob: -14.680281639099121
    10. '```' → logprob: -14.680281639099121

Token 635: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -18.201414108276367
    4. ']=' → logprob: -18.451414108276367
    5. ' =
' → logprob: -18.576414108276367
    6. '=
' → logprob: -18.576414108276367
    7. ')=' → logprob: -19.326414108276367
    8. '```' → logprob: -19.451414108276367
    9. ',' → logprob: -19.576414108276367
    10. ')' → logprob: -19.701414108276367

Token 636: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008614808320999146
    2. ' dist' → logprob: -4.758615016937256
    3. '	dist' → logprob: -15.883614540100098
    4. '   ' → logprob: -17.258615493774414
    5. '               ' → logprob: -18.133615493774414
    6. '                   ' → logprob: -18.508615493774414
    7. '           ' → logprob: -18.758615493774414
    8. '                       ' → logprob: -18.758615493774414
    9. 'd' → logprob: -19.008615493774414
    10. '       ' → logprob: -19.258615493774414

Token 637: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1875571544806007e-05
    2. 'i' → logprob: -11.375011444091797
    3. '[' → logprob: -15.750011444091797
    4. '```' → logprob: -15.750011444091797
    5. '[I' → logprob: -17.125011444091797
    6. ' i' → logprob: -18.000011444091797
    7. ',i' → logprob: -18.500011444091797
    8. '   ' → logprob: -18.625011444091797
    9. ' [' → logprob: -18.875011444091797
    10. '(i' → logprob: -19.375011444091797

Token 638: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001098418957553804
    2. '[i' → logprob: -6.8760986328125
    3. 'i' → logprob: -10.3760986328125
    4. '[j' → logprob: -11.6260986328125
    5. ' ][' → logprob: -11.7510986328125
    6. '[' → logprob: -12.0010986328125
    7. ']' → logprob: -12.3760986328125
    8. '"][' → logprob: -13.2510986328125
    9. '```' → logprob: -13.5010986328125
    10. '   ' → logprob: -14.1260986328125

Token 639: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.625000953674316
    3. '	j' → logprob: -16.875
    4. '
' → logprob: -17.5
    5. '[j' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '```' → logprob: -19.5
    8. ' ' → logprob: -19.875
    9. ',j' → logprob: -20.125
    10. '$j' → logprob: -20.75

Token 640: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5803450345993042
    2. ']+' → logprob: -0.8303450345993042
    3. '+' → logprob: -5.455345153808594
    4. ' +' → logprob: -9.580345153808594
    5. ' ]' → logprob: -10.080345153808594
    6. '[' → logprob: -12.080345153808594
    7. ']+=' → logprob: -13.330345153808594
    8. '+]' → logprob: -13.830345153808594
    9. ')+' → logprob: -14.080345153808594
    10. '][' → logprob: -14.080345153808594

Token 641: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687121868133545
    2. ' +' → logprob: -1.1368712186813354
    3. ' plus' → logprob: -16.636871337890625
    4. '＋' → logprob: -16.761871337890625
    5. '+i' → logprob: -17.636871337890625
    6. '   ' → logprob: -17.761871337890625
    7. ']+' → logprob: -18.136871337890625
    8. ' ' → logprob: -18.261871337890625
    9. '+[' → logprob: -18.261871337890625
    10. '+
' → logprob: -18.511871337890625

Token 642: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.87501335144043
    4. '```' → logprob: -18.75001335144043
    5. '  ' → logprob: -21.50001335144043
    6. '<|end|>' → logprob: -22.37501335144043
    7. ' ' → logprob: -22.75001335144043
    8. '`' → logprob: -22.93751335144043
    9. '۱' → logprob: -23.00001335144043
    10. '
' → logprob: -23.12501335144043

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.125001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '۱' → logprob: -22.875001907348633
    6. '  ' → logprob: -23.000001907348633
    7. '<|end|>' → logprob: -23.000001907348633
    8. '
' → logprob: -23.125001907348633
    9. '১' → logprob: -23.312501907348633
    10. '１' → logprob: -23.312501907348633

Token 644: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000538497231900692
    2. '					' → logprob: -8.75053882598877
    3. '                        
' → logprob: -9.25053882598877
    4. 'queue' → logprob: -9.37553882598877
    5. '```' → logprob: -9.75053882598877
    6. '<|end|>' → logprob: -10.00053882598877
    7. '               ' → logprob: -10.12553882598877
    8. '                   ' → logprob: -11.25053882598877
    9. ' queue' → logprob: -11.87553882598877
    10. '(queue' → logprob: -12.25053882598877

Token 645: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008799002389423549
    2. '                        
' → logprob: -8.250880241394043
    3. 'queue' → logprob: -8.375880241394043
    4. '```' → logprob: -8.875880241394043
    5. '               ' → logprob: -9.500880241394043
    6. '					' → logprob: -9.875880241394043
    7. '                   ' → logprob: -10.125880241394043
    8. '<|end|>' → logprob: -10.375880241394043
    9. '                           ' → logprob: -11.750880241394043
    10. '           ' → logprob: -11.750880241394043

Token 646: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.005233763717114925
    2. ' queue' → logprob: -5.2552337646484375
    3. '	queue' → logprob: -19.255233764648438
    4. '                       ' → logprob: -19.630233764648438
    5. '                   ' → logprob: -20.130233764648438
    6. '```' → logprob: -20.380233764648438
    7. '.queue' → logprob: -21.505233764648438
    8. '       ' → logprob: -21.755233764648438
    9. '           ' → logprob: -21.880233764648438
    10. '(queue' → logprob: -22.005233764648438

Token 647: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.088346359931165e-07
    2. '.extend' → logprob: -14.375000953674316
    3. 'append' → logprob: -16.125
    4. '.' → logprob: -16.625
    5. '.app' → logprob: -16.75
    6. '.enqueue' → logprob: -16.75
    7. '.Append' → logprob: -17.375
    8. '.p' → logprob: -18.0
    9. ' .' → logprob: -19.5
    10. '.put' → logprob: -19.625

Token 648: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. ' ((' → logprob: -18.375017166137695
    4. '(((' → logprob: -19.875017166137695
    5. '[(' → logprob: -20.750017166137695
    6. '(
' → logprob: -20.875017166137695
    7. '```' → logprob: -21.125017166137695
    8. ' (' → logprob: -21.500017166137695
    9. '<|end|>' → logprob: -21.500017166137695
    10. '>((' → logprob: -21.625017166137695

Token 649: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.250000953674316
    3. ' ni' → logprob: -14.875000953674316
    4. '   ' → logprob: -19.125001907348633
    5. 'nii' → logprob: -20.000001907348633
    6. '-ni' → logprob: -20.125001907348633
    7. 'n' → logprob: -20.375001907348633
    8. '```' → logprob: -20.750001907348633
    9. '
' → logprob: -21.125001907348633
    10. '(n' → logprob: -21.500001907348633

Token 650: ',n' (ID: 18103)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.16151584684848785
    2. ',' → logprob: -1.9115158319473267
    3. ' ni' → logprob: -7.411515712738037
    4. ' ,' → logprob: -8.536516189575195
    5. '[' → logprob: -9.036516189575195
    6. '(' → logprob: -9.161516189575195
    7. ',n' → logprob: -9.411516189575195
    8. '
' → logprob: -10.161516189575195
    9. '_,' → logprob: -10.661516189575195
    10. 'n' → logprob: -10.661516189575195

Token 651: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0001317871210630983
    2. 'nj' → logprob: -9.625131607055664
    3. 'i' → logprob: -9.875131607055664
    4. '```' → logprob: -12.875131607055664
    5. ',j' → logprob: -13.375131607055664
    6. ')' → logprob: -13.500131607055664
    7. 'dj' → logprob: -13.750131607055664
    8. '
' → logprob: -13.875131607055664
    9. '``' → logprob: -14.125131607055664
    10. 'aj' → logprob: -14.125131607055664

Token 652: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.027225754223764e-05
    2. '))
' → logprob: -10.125060081481934
    3. ')' → logprob: -11.125060081481934
    4. '                       ' → logprob: -13.125060081481934
    5. ')))' → logprob: -13.500060081481934
    6. '                   ' → logprob: -13.750060081481934
    7. ' ))' → logprob: -15.000060081481934
    8. '           ' → logprob: -15.500060081481934
    9. '               ' → logprob: -15.625060081481934
    10. '       ' → logprob: -16.12506103515625

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00893681775778532
    2. '   ' → logprob: -5.508936882019043
    3. '<|end|>' → logprob: -6.383936882019043
    4. '	return' → logprob: -7.008936882019043
    5. '        
' → logprob: -7.133936882019043
    6. '	' → logprob: -8.133936882019043
    7. '    
' → logprob: -8.383936882019043
    8. ')' → logprob: -9.008936882019043
    9. '```' → logprob: -9.008936882019043
    10. '        ' → logprob: -9.133936882019043

Token 654: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15274809300899506
    2. 'return' (adapté à ' return') → logprob: -2.4027481079101562
    3. '   ' → logprob: -3.0277481079101562
    4. ' return' → logprob: -6.152748107910156
    5. '	return' → logprob: -7.527748107910156
    6. '```' → logprob: -9.902748107910156
    7. '<|end|>' → logprob: -11.277748107910156
    8. '	' → logprob: -11.902748107910156
    9. ':return' → logprob: -12.402748107910156
    10. ' ' → logprob: -12.652748107910156

Token 655: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -5.836499985889532e-05
    2. ' dist' → logprob: -9.7500581741333
    3. '(dist' → logprob: -20.375059127807617
    4. '	dist' → logprob: -21.625059127807617
    5. '_dist' → logprob: -23.750059127807617
    6. 'Dist' → logprob: -25.000059127807617
    7. '.dist' → logprob: -26.375059127807617
    8. 'd' → logprob: -26.500059127807617
    9. '   ' → logprob: -27.125059127807617
    10. 'dest' → logprob: -27.625059127807617

Token 656: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.274204283952713
    2. '   ' → logprob: -1.7742042541503906
    3. '    
' → logprob: -3.3992042541503906
    4. '<|end|>' → logprob: -3.3992042541503906
    5. 'dist' → logprob: -6.899204254150391
    6. '```' → logprob: -7.274204254150391
    7. '

' → logprob: -7.649204254150391
    8. '<|end|>' → logprob: -8.14920425415039
    9. 'def' → logprob: -8.27420425415039
    10. 'return' → logprob: -9.02420425415039

Token 657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7302980422973633
    2. '    
' → logprob: -1.1052980422973633
    3. 'dist' → logprob: -2.1052980422973633
    4. '
' → logprob: -2.9802980422973633
    5. 'start' → logprob: -4.605298042297363
    6. 'distance' → logprob: -5.980298042297363
    7. '```' → logprob: -6.730298042297363
    8. '    
    
' → logprob: -8.980298042297363
    9. ' dist' → logprob: -9.230298042297363
    10. '  
' → logprob: -9.230298042297363

Token 658: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.08645511418581009
    2. '   ' → logprob: -3.0864551067352295
    3. 'start' → logprob: -3.4614551067352295
    4. 'distance' → logprob: -5.961455345153809
    5. '    
' → logprob: -6.961455345153809
    6. '#' → logprob: -7.086455345153809
    7. 'from' → logprob: -7.336455345153809
    8. ' dist' → logprob: -7.836455345153809
    9. 'def' → logprob: -9.211455345153809
    10. 'd' → logprob: -9.961455345153809

Token 659: '_from' (ID: 12526)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.05469832941889763
    2. '_from' → logprob: -3.3046982288360596
    3. '_us' → logprob: -4.679698467254639
    4. ' =' → logprob: -5.429698467254639
    5. '_source' → logprob: -6.554698467254639
    6. '_src' → logprob: -7.554698467254639
    7. '=' → logprob: -8.30469799041748
    8. '_s' → logprob: -8.55469799041748
    9. '_' → logprob: -8.80469799041748
    10. 'from' → logprob: -9.30469799041748

Token 660: '_start' (ID: 10949)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03229689970612526
    2. '_start' → logprob: -3.532296895980835
    3. '_' → logprob: -6.407297134399414
    4. '_factory' → logprob: -8.407297134399414
    5. '_source' → logprob: -8.907297134399414
    6. 'start' → logprob: -9.157297134399414
    7. '((' → logprob: -9.282297134399414
    8. '[' → logprob: -9.782297134399414
    9. '_us' → logprob: -9.782297134399414
    10. '=' → logprob: -9.907297134399414

Token 661: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519330680370331
    2. '=' → logprob: -1.5019330978393555
    3. ',' → logprob: -12.751933097839355
    4. '[' → logprob: -14.876933097839355
    5. ')' → logprob: -15.126933097839355
    6. ' ' → logprob: -16.12693214416504
    7. '=b' → logprob: -16.62693214416504
    8. '＝' → logprob: -17.00193214416504
    9. 's' → logprob: -17.12693214416504
    10. '```' → logprob: -17.25193214416504

Token 662: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.15310683415737e-05
    2. ' bfs' → logprob: -10.750021934509277
    3. '```' → logprob: -19.62502098083496
    4. '[b' → logprob: -20.25002098083496
    5. '   ' → logprob: -20.25002098083496
    6. '	b' → logprob: -20.75002098083496
    7. 'dfs' → logprob: -21.00002098083496
    8. 'bs' → logprob: -21.25002098083496
    9. 'bfd' → logprob: -21.25002098083496
    10. ' b' → logprob: -21.50002098083496

Token 663: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.650518920039758e-06
    2. ' (' → logprob: -12.625003814697266
    3. '((' → logprob: -15.375003814697266
    4. '0' → logprob: -17.875003814697266
    5. '(
' → logprob: -20.000003814697266
    6. '```' → logprob: -21.375003814697266
    7. ')' → logprob: -21.500003814697266
    8. ')(' → logprob: -22.000003814697266
    9. '
' → logprob: -22.625003814697266
    10. ' ' → logprob: -22.750003814697266

Token 664: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '(' → logprob: -17.25
    4. '   ' → logprob: -20.0
    5. ')' → logprob: -20.25
    6. '```' → logprob: -21.75
    7. '۰' → logprob: -22.25
    8. '
' → logprob: -22.625
    9. '00' → logprob: -22.75
    10. '０' → logprob: -23.125

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.7689099018462e-05
    2. ' ,' → logprob: -9.75008773803711
    3. '0' → logprob: -10.50008773803711
    4. '```' → logprob: -14.75008773803711
    5. ' ' → logprob: -14.87508773803711
    6. ')' → logprob: -15.50008773803711
    7. '<|end|>' → logprob: -15.62508773803711
    8. '   ' → logprob: -15.62508773803711
    9. ',
' → logprob: -16.00008773803711
    10. '	' → logprob: -16.25008773803711

Token 666: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.25
    4. '۰' → logprob: -20.25
    5. ')' → logprob: -20.625
    6. '
' → logprob: -21.5
    7. '```' → logprob: -21.625
    8. '  ' → logprob: -21.75
    9. '０' → logprob: -21.875
    10. '       ' → logprob: -22.4375

Token 667: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '   ' → logprob: -19.375001907348633
    5. ')

' → logprob: -20.250001907348633
    6. '))' → logprob: -20.500001907348633
    7. '),' → logprob: -20.625001907348633
    8. ')#' → logprob: -20.750001907348633
    9. ')`' → logprob: -21.375001907348633
    10. ').' → logprob: -21.375001907348633

Token 668: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01367587223649025
    2. '   ' → logprob: -4.513675689697266
    3. 'if' → logprob: -6.263675689697266
    4. ' dist' → logprob: -7.513675689697266
    5. ' if' → logprob: -8.763675689697266
    6. '
' → logprob: -11.638675689697266
    7. '    
' → logprob: -12.388675689697266
    8. '	dist' → logprob: -12.763675689697266
    9. '```' → logprob: -13.638675689697266
    10. '#' → logprob: -14.388675689697266

Token 669: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.005598121788352728
    2. 'if' → logprob: -5.255598068237305
    3. ' dist' → logprob: -8.755598068237305
    4. '   ' → logprob: -8.755598068237305
    5. ' if' → logprob: -10.005598068237305
    6. '#' → logprob: -13.005598068237305
    7. 'distance' → logprob: -13.505598068237305
    8. '
' → logprob: -16.005598068237305
    9. '```' → logprob: -16.380598068237305
    10. '    
' → logprob: -16.505598068237305

Token 670: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00011808603449026123
    2. 'from' → logprob: -9.125118255615234
    3. '_to' → logprob: -12.250118255615234
    4. '_' → logprob: -12.750118255615234
    5. '_for' → logprob: -13.750118255615234
    6. '_end' → logprob: -16.875118255615234
    7. '[' → logprob: -16.875118255615234
    8. 'From' → logprob: -17.000118255615234
    9. '_FROM' → logprob: -17.000118255615234
    10. '_of' → logprob: -17.375118255615234

Token 671: '_goal' (ID: 101684)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0042929151095449924
    2. '_end' → logprob: -5.504292964935303
    3. 'goal' → logprob: -8.754292488098145
    4. '_goal' → logprob: -10.629292488098145
    5. '(H' → logprob: -11.129292488098145
    6. '(end' → logprob: -11.629292488098145
    7. 'destination' → logprob: -12.754292488098145
    8. 'H' → logprob: -13.129292488098145
    9. ' end' → logprob: -13.629292488098145
    10. 'dest' → logprob: -14.504292488098145

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407835721969604
    2. '=' → logprob: -0.974078357219696
    3. '[' → logprob: -14.349078178405762
    4. ' ' → logprob: -14.474078178405762
    5. '   ' → logprob: -16.599079132080078
    6. '(' → logprob: -16.599079132080078
    7. ' ' → logprob: -17.599079132080078
    8. '=(' → logprob: -17.724079132080078
    9. '＝' → logprob: -18.099079132080078
    10. '  ' → logprob: -18.224079132080078

Token 673: ' bfs' (ID: 147571)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005931758787482977
    2. ' bfs' → logprob: -5.130931854248047
    3. '(b' → logprob: -14.130931854248047
    4. '(' → logprob: -14.130931854248047
    5. '[b' → logprob: -14.505931854248047
    6. '   ' → logprob: -15.255931854248047
    7. 'bs' → logprob: -15.380931854248047
    8. 'bf' → logprob: -16.380931854248047
    9. 'bbs' → logprob: -16.380931854248047
    10. ' b' → logprob: -16.380931854248047

Token 674: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -1.5048530030981055e-06
    2. '((' → logprob: -14.125001907348633
    3. '(' → logprob: -14.250001907348633
    4. 'H' → logprob: -16.625001907348633
    5. ' (' → logprob: -16.750001907348633
    6. '(-' → logprob: -17.750001907348633
    7. '(
' → logprob: -19.000001907348633
    8. '(h' → logprob: -19.250001907348633
    9. '	H' → logprob: -21.125001907348633
    10. ' H' → logprob: -22.625001907348633

Token 675: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.623244553338736e-05
    2. ' -' → logprob: -9.625065803527832
    3. '1' → logprob: -16.25006675720215
    4. '−' → logprob: -19.62506675720215
    5. '()-' → logprob: -19.87506675720215
    6. ' ' → logprob: -20.25006675720215
    7. '-
' → logprob: -20.62506675720215
    8. '   ' → logprob: -21.00006675720215
    9. '–' → logprob: -21.37506675720215
    10. '```' → logprob: -21.87506675720215

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. ',' → logprob: -16.000001907348633
    4. '```' → logprob: -16.500001907348633
    5. '
' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.250001907348633
    7. '<|end|>' → logprob: -18.375001907348633
    8. ')' → logprob: -19.250001907348633
    9. '-' → logprob: -19.500001907348633
    10. '2' → logprob: -19.625001907348633

Token 677: ',' (ID: 11)
  Prédit: ',W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.0233866348862648
    2. ',' → logprob: -3.7733867168426514
    3. ',H' → logprob: -9.52338695526123
    4. '-' → logprob: -10.02338695526123
    5. ' ,' → logprob: -11.14838695526123
    6. ',w' → logprob: -13.02338695526123
    7. ',J' → logprob: -13.52338695526123
    8. ',Z' → logprob: -13.77338695526123
    9. ',K' → logprob: -14.27338695526123
    10. ',Q' → logprob: -14.27338695526123

Token 678: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -3.5716304410016164e-05
    2. ' W' → logprob: -10.250035285949707
    3. '0' → logprob: -15.625035285949707
    4. '   ' → logprob: -16.625036239624023
    5. '	W' → logprob: -17.000036239624023
    6. ',W' → logprob: -17.625036239624023
    7. '(W' → logprob: -18.000036239624023
    8. ' ' → logprob: -18.625036239624023
    9. '  ' → logprob: -19.750036239624023
    10. '<W' → logprob: -20.750036239624023

Token 679: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00034714414505288005
    2. '1' → logprob: -8.000347137451172
    3. ' -' → logprob: -11.375347137451172
    4. '−' → logprob: -16.250347137451172
    5. '```' → logprob: -16.500347137451172
    6. ')' → logprob: -17.000347137451172
    7. ')-' → logprob: -17.750347137451172
    8. '–' → logprob: -17.875347137451172
    9. '()-' → logprob: -18.750347137451172
    10. '[' → logprob: -18.875347137451172

Token 680: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -17.125
    4. '-' → logprob: -17.75
    5. ')' → logprob: -18.3125
    6. '   ' → logprob: -18.625
    7. '１' → logprob: -18.6875
    8. '۱' → logprob: -18.8125
    9. '
' → logprob: -20.0625
    10. '१' → logprob: -20.25

Token 681: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '   ' → logprob: -16.500001907348633
    5. '))' → logprob: -16.875001907348633
    6. '())' → logprob: -19.500001907348633
    7. '()' → logprob: -19.750001907348633
    8. ')}' → logprob: -19.875001907348633
    9. ')`' → logprob: -19.875001907348633
    10. ').' → logprob: -20.000001907348633

Token 682: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08814005553722382
    2. 'min' → logprob: -3.4631400108337402
    3. 'result' → logprob: -3.7131400108337402
    4. 'answer' → logprob: -4.46314001083374
    5. '
' → logprob: -4.96314001083374
    6. 'max' → logprob: -5.71314001083374
    7. 'if' → logprob: -6.83814001083374
    8. 'total' → logprob: -6.83814001083374
    9. '    
' → logprob: -7.21314001083374
    10. 'res' → logprob: -7.21314001083374

Token 683: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.025075212121009827
    2. '   ' → logprob: -3.7750751972198486
    3. ' if' → logprob: -6.525075435638428
    4. 'result' → logprob: -8.77507495880127
    5. 'answer' → logprob: -9.40007495880127
    6. '
' → logprob: -9.52507495880127
    7. '#' (adapté à ' #') → logprob: -10.77507495880127
    8. 'res' → logprob: -11.40007495880127
    9. '    
' → logprob: -12.15007495880127
    10. '```' → logprob: -12.52507495880127

Token 684: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7006006836891174
    2. 'answer' → logprob: -0.9506006836891174
    3. 'result' → logprob: -3.3256006240844727
    4. '#' → logprob: -3.3256006240844727
    5. 'ans' → logprob: -3.9506006240844727
    6. 'res' → logprob: -4.325600624084473
    7. 'min' → logprob: -4.700600624084473
    8. ' if' → logprob: -7.075600624084473
    9. 'best' → logprob: -7.200600624084473
    10. ' answer' → logprob: -7.200600624084473

Token 685: ' la' (ID: 557)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5759419798851013
    2. 'dist' → logprob: -0.8259419798851013
    3. '(dist' → logprob: -13.075942039489746
    4. '	dist' → logprob: -15.075942039489746
    5. ' ' → logprob: -16.82594108581543
    6. '   ' → logprob: -16.82594108581543
    7. 'Dist' → logprob: -17.82594108581543
    8. 'd' → logprob: -18.07594108581543
    9. '_dist' → logprob: -18.32594108581543
    10. '-dist' → logprob: -18.82594108581543

Token 686: ' destination' (ID: 13330)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007100477814674377
    2. ' dist' → logprob: -7.2507100105285645
    3. '(dist' → logprob: -16.750709533691406
    4. '	dist' → logprob: -17.875709533691406
    5. '.dist' → logprob: -18.250709533691406
    6. '   ' → logprob: -18.625709533691406
    7. 'distance' → logprob: -19.000709533691406
    8. ' ' → logprob: -19.250709533691406
    9. '#' → logprob: -20.000709533691406
    10. 'dest' → logprob: -20.000709533691406

Token 687: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.459835022687912
    2. ' ==' → logprob: -1.3348350524902344
    3. '==' → logprob: -3.5848350524902344
    4. 'n' → logprob: -3.7098350524902344
    5. ' n' → logprob: -3.8348350524902344
    6. ' dist' → logprob: -4.459835052490234
    7. '[' → logprob: -4.834835052490234
    8. ' est' → logprob: -5.459835052490234
    9. '==-' → logprob: -5.709835052490234
    10. 'est' → logprob: -6.459835052490234

Token 688: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -9.93710636976175e-05
    2. ' H' → logprob: -9.375099182128906
    3. ')' → logprob: -11.875099182128906
    4. 'dist' → logprob: -12.750099182128906
    5. '   ' → logprob: -13.500099182128906
    6. '0' → logprob: -13.750099182128906
    7. '(H' → logprob: -14.000099182128906
    8. '-' → logprob: -14.625099182128906
    9. ' ' → logprob: -15.500099182128906
    10. ' dist' → logprob: -15.625099182128906

Token 689: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.4855663721391466e-05
    2. ' -' → logprob: -11.125015258789062
    3. '1' → logprob: -16.750015258789062
    4. '   ' → logprob: -17.625015258789062
    5. '#' → logprob: -18.750015258789062
    6. '−' → logprob: -19.625015258789062
    7. ')' → logprob: -19.875015258789062
    8. '-
' → logprob: -20.250015258789062
    9. '<|end|>' → logprob: -20.250015258789062
    10. ' ' → logprob: -20.500015258789062

Token 690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -15.625001907348633
    4. '```' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.500001907348633
    6. '
' → logprob: -17.125001907348633
    7. ')' → logprob: -17.375001907348633
    8. '2' → logprob: -18.750001907348633
    9. '`' → logprob: -18.875001907348633
    10. '>' → logprob: -19.000001907348633

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012885673204436898
    2. ',W' → logprob: -7.001288414001465
    3. ' ,' → logprob: -8.501288414001465
    4. '-' → logprob: -9.501288414001465
    5. ',H' → logprob: -10.376288414001465
    6. '   ' → logprob: -10.376288414001465
    7. ')' → logprob: -11.501288414001465
    8. ',#' → logprob: -11.751288414001465
    9. ',j' → logprob: -12.501288414001465
    10. ',w' → logprob: -13.001288414001465

Token 692: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0380435548722744
    2. ' W' → logprob: -3.28804349899292
    3. '   ' → logprob: -13.788043975830078
    4. ' ' → logprob: -14.163043975830078
    5. '  ' → logprob: -15.913043975830078
    6. '0' → logprob: -16.163043975830078
    7. '	W' → logprob: -17.038043975830078
    8. ',W' → logprob: -17.413043975830078
    9. '    ' → logprob: -18.288043975830078
    10. '```' → logprob: -18.913043975830078

Token 693: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.625001907348633
    3. ' -' → logprob: -16.000001907348633
    4. ')' → logprob: -16.625001907348633
    5. '-)' → logprob: -17.375001907348633
    6. '-
' → logprob: -18.750001907348633
    7. '#' → logprob: -19.000001907348633
    8. ')-' → logprob: -19.875001907348633
    9. '−' → logprob: -19.875001907348633
    10. '```' → logprob: -20.375001907348633

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. '-' → logprob: -13.12500286102295
    3. ' ' → logprob: -13.87500286102295
    4. '```' → logprob: -17.000003814697266
    5. '   ' → logprob: -18.000003814697266
    6. ')' → logprob: -19.125003814697266
    7. '2' → logprob: -19.375003814697266
    8. 'W' → logprob: -19.625003814697266
    9. '``' → logprob: -21.125003814697266
    10. '  ' → logprob: -21.250003814697266

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.24310302757658e-05
    2. ')==' → logprob: -10.250072479248047
    3. ' )' → logprob: -10.625072479248047
    4. ')[' → logprob: -12.250072479248047
    5. ')
' → logprob: -12.750072479248047
    6. '   ' → logprob: -13.875072479248047
    7. '])' → logprob: -14.125072479248047
    8. ']' → logprob: -14.125072479248047
    9. '）' → logprob: -15.000072479248047
    10. '[' → logprob: -15.125072479248047

Token 696: ' n' (ID: 297)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5572974681854248
    2. ' ==' → logprob: -1.9322974681854248
    3. '==' → logprob: -2.057297468185425
    4. '[' → logprob: -3.307297468185425
    5. '==-' → logprob: -3.557297468185425
    6. '<' → logprob: -4.182297706604004
    7. ' is' → logprob: -4.432297706604004
    8. 'not' → logprob: -4.682297706604004
    9. 'dist' → logprob: -4.932297706604004
    10. ')==' → logprob: -4.932297706604004

Token 697: ''est' (ID: 6616)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11471647769212723
    2. ' ==' → logprob: -3.2397165298461914
    3. 'ot' → logprob: -4.239716529846191
    4. ']' → logprob: -4.489716529846191
    5. '==' → logprob: -4.989716529846191
    6. ''est' → logprob: -5.364716529846191
    7. '==-' → logprob: -5.489716529846191
    8. '[-' → logprob: -5.739716529846191
    9. '[ind' → logprob: -6.114716529846191
    10. '][' → logprob: -6.239716529846191

Token 698: ' pas' (ID: 2173)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0368262343108654
    2. ' -' → logprob: -3.5368261337280273
    3. 'dist' → logprob: -6.036826133728027
    4. '==-' → logprob: -6.536826133728027
    5. 'accessible' → logprob: -6.786826133728027
    6. ' ==' → logprob: -7.661826133728027
    7. '0' → logprob: -8.411826133728027
    8. 'reachable' → logprob: -8.536826133728027
    9. '```' → logprob: -8.661826133728027
    10. '==' → logprob: -9.161826133728027

Token 699: ' accessible' (ID: 18240)
  Prédit: 'accessible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accessible' → logprob: -0.007591602858155966
    2. 'reachable' → logprob: -5.132591724395752
    3. ' accessible' → logprob: -6.632591724395752
    4. 'access' → logprob: -8.257591247558594
    5. '0' → logprob: -10.382591247558594
    6. 'Accessible' → logprob: -11.257591247558594
    7. 'atte' → logprob: -11.257591247558594
    8. '```' → logprob: -11.882591247558594
    9. ' reachable' → logprob: -12.382591247558594
    10. '-' → logprob: -12.382591247558594

Token 700: ' sans' (ID: 9828)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44029250741004944
    2. ' or' → logprob: -1.315292477607727
    3. '   ' → logprob: -2.6902925968170166
    4. ' ==' → logprob: -4.1902923583984375
    5. '==' → logprob: -5.9402923583984375
    6. ':
' → logprob: -6.9402923583984375
    7. 'or' → logprob: -8.565292358398438
    8. '  ' → logprob: -8.815292358398438
    9. ' :' → logprob: -8.940292358398438
    10. '=' → logprob: -9.065292358398438

Token 701: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.04135257750749588
    2. 'ar' → logprob: -3.7913525104522705
    3. ' arbres' → logprob: -4.04135274887085
    4. 'ob' → logprob: -9.166352272033691
    5. ' arbre' → logprob: -9.291352272033691
    6. 'trees' → logprob: -9.791352272033691
    7. '```' → logprob: -9.916352272033691
    8. '#' → logprob: -11.041352272033691
    9. 'for' → logprob: -11.416352272033691
    10. '-' → logprob: -11.916352272033691

Token 702: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.39184412360191345
    2. ':' → logprob: -1.1418441534042358
    3. '   ' → logprob: -6.141844272613525
    4. ':
' → logprob: -6.641844272613525
    5. ' ==' → logprob: -7.766844272613525
    6. 'or' → logprob: -8.016843795776367
    7. 'if' → logprob: -8.016843795776367
    8. '==' → logprob: -8.141843795776367
    9. ' if' → logprob: -10.391843795776367
    10. ' and' → logprob: -10.891843795776367

Token 703: ' alors' (ID: 17971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33964163064956665
    2. ' if' → logprob: -1.3396415710449219
    3. '   ' → logprob: -3.839641571044922
    4. '       ' → logprob: -5.839641571044922
    5. 'print' → logprob: -6.589641571044922
    6. ' print' → logprob: -8.339641571044922
    7. 'return' → logprob: -12.214641571044922
    8. '	if' → logprob: -13.339641571044922
    9. ' return' → logprob: -13.589641571044922
    10. '```' → logprob: -13.714641571044922

Token 704: ' impossible' (ID: 19786)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006645413814112544
    2. '   ' → logprob: -7.500664710998535
    3. ' print' → logprob: -9.125664710998535
    4. 'return' → logprob: -13.125664710998535
    5. 'if' → logprob: -15.125664710998535
    6. '```' → logprob: -15.500664710998535
    7. '	print' → logprob: -16.12566375732422
    8. 'pr' → logprob: -16.25066375732422
    9. '       ' → logprob: -17.00066375732422
    10. '    
' → logprob: -17.12566375732422

Token 705: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002481078845448792
    2. ' if' → logprob: -9.125247955322266
    3. 'if' → logprob: -9.875247955322266
    4. '
' → logprob: -9.875247955322266
    5. '    
' → logprob: -11.250247955322266
    6. '```' → logprob: -11.750247955322266
    7. '<|end|>' → logprob: -12.625247955322266
    8. '  ' → logprob: -13.000247955322266
    9. ':' → logprob: -13.125247955322266
    10. ':
' → logprob: -13.500247955322266

Token 706: ''aller' (ID: 153207)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1126008853316307
    2. ''aller' → logprob: -2.737600803375244
    3. 'e' → logprob: -4.362600803375244
    4. ' print' → logprob: -5.237600803375244
    5. 'im' → logprob: -5.237600803375244
    6. '   ' → logprob: -5.612600803375244
    7. ''obtenir' → logprob: -5.612600803375244
    8. ''avoir' → logprob: -6.237600803375244
    9. 'é' → logprob: -6.362600803375244
    10. 'éc' → logprob: -6.487600803375244

Token 707: ' de' (ID: 334)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8076680898666382
    2. 'à' → logprob: -0.9326680898666382
    3. 'l' → logprob: -2.9326682090759277
    4. 'y' → logprob: -3.5576682090759277
    5. '```' → logprob: -3.9326682090759277
    6. 'jus' → logprob: -4.057668209075928
    7. 'la' → logprob: -4.182668209075928
    8. '   ' → logprob: -4.932668209075928
    9. 'le' → logprob: -5.182668209075928
    10. 'ailleurs' → logprob: -5.807668209075928

Token 708: '
' (ID: 198)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12045539915561676
    2. 'start' → logprob: -2.245455503463745
    3. 'ici' → logprob: -6.120455265045166
    4. '(' → logprob: -6.370455265045166
    5. '0' → logprob: -6.995455265045166
    6. 'us' → logprob: -7.370455265045166
    7. 'la' → logprob: -7.495455265045166
    8. '```' → logprob: -7.870455265045166
    9. 'main' → logprob: -8.120455741882324
    10. ' l' → logprob: -8.120455741882324

Token 709: '   ' (ID: 271)
  Prédit: ' là'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' là' → logprob: -0.6683065891265869
    2. 'l' → logprob: -1.418306589126587
    3. 'à' → logprob: -2.293306589126587
    4. '#' → logprob: -3.043306589126587
    5. 'H' → logprob: -3.293306589126587
    6. '   ' → logprob: -4.293306350708008
    7. 'there' → logprob: -4.293306350708008
    8. ' there' → logprob: -5.168306350708008
    9. '```' → logprob: -5.418306350708008
    10. 'y' → logprob: -5.668306350708008

Token 710: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43925005197525024
    2. 'H' → logprob: -1.9392499923706055
    3. 'l' → logprob: -2.6892499923706055
    4. 'start' → logprob: -3.3142499923706055
    5. '#' (adapté à ' #') → logprob: -3.4392499923706055
    6. '1' → logprob: -3.8142499923706055
    7. 'à' → logprob: -3.9392499923706055
    8. ' H' → logprob: -5.0642499923706055
    9. '```' → logprob: -5.0642499923706055
    10. 'to' → logprob: -5.6892499923706055

Token 711: ' l' (ID: 305)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.47805750370025635
    2. '0' → logprob: -1.2280575037002563
    3. 'l' → logprob: -2.853057384490967
    4. '#' → logprob: -4.103057384490967
    5. '(' → logprob: -5.728057384490967
    6. 'point' → logprob: -6.478057384490967
    7. 'main' → logprob: -6.478057384490967
    8. ' start' → logprob: -6.728057384490967
    9. 'us' → logprob: -7.228057384490967
    10. 'print' → logprob: -7.353057384490967

Token 712: ''us' (ID: 143210)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0799298286437988
    2. 'à' → logprob: -1.2049298286437988
    3. ''us' → logprob: -1.5799298286437988
    4. 'us' → logprob: -1.9549298286437988
    5. ''à' → logprob: -6.329929828643799
    6. ''objectif' → logprob: -6.454929828643799
    7. ''arrivée' → logprob: -6.454929828643799
    8. ''autre' → logprob: -6.704929828643799
    9. ''' → logprob: -6.954929828643799
    10. ''a' → logprob: -7.079929828643799

Token 713: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.003098927205428481
    2. 'iné' → logprob: -6.128098964691162
    3. 'age' → logprob: -8.253098487854004
    4. 'ité' → logprob: -9.003098487854004
    5. 'in' → logprob: -9.128098487854004
    6. 'agé' → logprob: -9.253098487854004
    7. 'îne' → logprob: -10.003098487854004
    8. 'ïne' → logprob: -10.128098487854004
    9. 'ère' → logprob: -10.253098487854004
    10. 'ière' → logprob: -10.753098487854004

Token 714: ' au' (ID: 2791)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4487755596637726
    2. ' or' → logprob: -1.4487755298614502
    3. 'print' → logprob: -2.82377552986145
    4. ':' → logprob: -4.198775768280029
    5. ' to' → logprob: -4.323775768280029
    6. ')' → logprob: -5.198775768280029
    7. ' print' → logprob: -5.198775768280029
    8. ' ou' → logprob: -5.448775768280029
    9. 'to' → logprob: -5.573775768280029
    10. ' à' → logprob: -5.698775768280029

Token 715: ' point' (ID: 2438)
  Prédit: 'but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'but' → logprob: -0.28166911005973816
    2. 'goal' → logprob: -2.2816691398620605
    3. ' but' → logprob: -3.5316691398620605
    4. 'for' → logprob: -3.6566691398620605
    5. 'coin' → logprob: -4.1566691398620605
    6. 'point' → logprob: -4.1566691398620605
    7. 'destination' → logprob: -4.2816691398620605
    8. '(' → logprob: -4.9066691398620605
    9. '(H' → logprob: -5.1566691398620605
    10. 'bout' → logprob: -5.4066691398620605

Token 716: ' sud' (ID: 10332)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.6483972668647766
    2. '(' → logprob: -1.6483972072601318
    3. ' (' → logprob: -1.6483972072601318
    4. 'final' → logprob: -2.773397207260132
    5. '   ' → logprob: -4.773397445678711
    6. 'd' → logprob: -4.898397445678711
    7. ')' → logprob: -5.773397445678711
    8. ' final' → logprob: -6.148397445678711
    9. 'destination' → logprob: -6.523397445678711
    10. '.' → logprob: -6.898397445678711

Token 717: '-est' (ID: 49572)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2520078420639038
    2. '   ' → logprob: -1.8770078420639038
    3. ' -' → logprob: -3.5020079612731934
    4. '-est' → logprob: -3.8770079612731934
    5. '-ou' → logprob: -4.502007961273193
    6. 'est' → logprob: -5.377007961273193
    7. ' est' → logprob: -7.002007961273193
    8. '#' → logprob: -7.377007961273193
    9. ' ' → logprob: -7.752007961273193
    10. ')' → logprob: -8.502007484436035

Token 718: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010589558631181717
    2. ' or' → logprob: -4.635589599609375
    3. ' if' → logprob: -7.635589599609375
    4. 'if' → logprob: -8.760589599609375
    5. 'or' → logprob: -9.260589599609375
    6. ':' → logprob: -10.385589599609375
    7. '.' → logprob: -11.135589599609375
    8. ':
' → logprob: -11.260589599609375
    9. '    
' → logprob: -11.760589599609375
    10. ')' → logprob: -12.010589599609375

Token 719: ' couper' (ID: 135212)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.39211124181747437
    2. 'ar' → logprob: -1.3921113014221191
    3. 'pass' → logprob: -4.017111301422119
    4. ' arbres' → logprob: -4.267111301422119
    5. 'ob' → logprob: -5.267111301422119
    6. ' passer' → logprob: -5.267111301422119
    7. 'tr' → logprob: -5.517111301422119
    8. 'aller' → logprob: -5.767111301422119
    9. 'cou' → logprob: -6.017111301422119
    10. 'arr' → logprob: -6.142111301422119

Token 720: ' d' (ID: 272)
  Prédit: ' arbres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.989454984664917
    2. 'trees' → logprob: -1.364454984664917
    3. '1' → logprob: -1.614454984664917
    4. '   ' → logprob: -2.614454984664917
    5. 'for' → logprob: -3.364454984664917
    6. 'des' → logprob: -4.239455223083496
    7. '-' → logprob: -4.989455223083496
    8. 'd' → logprob: -5.364455223083496
    9. 'les' → logprob: -5.739455223083496
    10. 'print' → logprob: -5.739455223083496

Token 721: ''' (ID: 6)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.7011176943778992
    2. ''' → logprob: -0.9511176943778992
    3. ''ar' → logprob: -2.576117753982544
    4. 'ar' → logprob: -3.451117753982544
    5. ' arbres' → logprob: -5.451117515563965
    6. '```' → logprob: -6.076117515563965
    7. '#' → logprob: -6.951117515563965
    8. 'e' → logprob: -7.576117515563965
    9. '`' → logprob: -9.451117515563965
    10. '')' → logprob: -9.701117515563965

Token 722: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.02436484768986702
    2. 'ar' → logprob: -3.774364948272705
    3. ''' → logprob: -8.149364471435547
    4. ' arbres' → logprob: -8.149364471435547
    5. ''ar' → logprob: -8.274364471435547
    6. '```' → logprob: -8.649364471435547
    7. ' arbre' → logprob: -11.149364471435547
    8. '   ' → logprob: -11.274364471435547
    9. '#' → logprob: -11.524364471435547
    10. ' ' → logprob: -11.649364471435547

Token 723: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00027897433028556406
    2. 'es' → logprob: -8.500279426574707
    3. 're' → logprob: -9.625279426574707
    4. 'r' → logprob: -12.250279426574707
    5. 's' → logprob: -13.875279426574707
    6. 'bres' → logprob: -14.250279426574707
    7. '```' → logprob: -14.500279426574707
    8. 'Res' → logprob: -15.125279426574707
    9. 'rés' → logprob: -15.250279426574707
    10. '#' → logprob: -15.375279426574707

Token 724: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005916350521147251
    2. 'if' → logprob: -5.630916118621826
    3. '
' → logprob: -6.380916118621826
    4. ' if' → logprob: -7.505916118621826
    5. '    
' → logprob: -9.630916595458984
    6. '```' → logprob: -13.255916595458984
    7. '	if' → logprob: -13.505916595458984
    8. ' 
' → logprob: -15.255916595458984
    9. '  
' → logprob: -15.380916595458984
    10. '   
' → logprob: -15.505916595458984

Token 725: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45606154203414917
    2. 'if' → logprob: -1.206061601638794
    3. ' if' → logprob: -2.706061601638794
    4. '
' → logprob: -10.581061363220215
    5. '    
' → logprob: -11.081061363220215
    6. '	if' → logprob: -12.456061363220215
    7. '```' → logprob: -12.456061363220215
    8. '       ' → logprob: -14.456061363220215
    9. '  ' → logprob: -14.456061363220215
    10. '\n' → logprob: -14.831061363220215

Token 726: ' on' (ID: 402)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0026842064689844847
    2. 'dist' → logprob: -6.627684116363525
    3. '   ' → logprob: -7.252684116363525
    4. ' if' → logprob: -7.627684116363525
    5. ' A' → logprob: -9.752684593200684
    6. ' len' → logprob: -10.377684593200684
    7. ' not' → logprob: -11.002684593200684
    8. 'A' → logprob: -11.252684593200684
    9. 'if' → logprob: -11.377684593200684
    10. ' W' → logprob: -11.502684593200684

Token 727: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3848130702972412
    2. 'continue' → logprob: -1.2598130702972412
    3. ' n' → logprob: -4.38481330871582
    4. ' ne' → logprob: -5.13481330871582
    5. 'if' → logprob: -5.63481330871582
    6. 'n' → logprob: -5.63481330871582
    7. '#' → logprob: -6.75981330871582
    8. 'do' → logprob: -6.75981330871582
    9. ' doit' → logprob: -6.75981330871582
    10. 'print' → logprob: -7.13481330871582

Token 728: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -1.088171124458313
    2. 'print' → logprob: -1.463171124458313
    3. ' continuer' → logprob: -2.2131710052490234
    4. 'cut' → logprob: -2.4631710052490234
    5. ' cut' → logprob: -2.5881710052490234
    6. 'contin' → logprob: -2.7131710052490234
    7. ' print' → logprob: -2.7131710052490234
    8. 'return' → logprob: -4.838171005249023
    9. 'cou' → logprob: -5.088171005249023
    10. ' return' → logprob: -5.713171005249023

Token 729: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.8629706501960754
    2. ' des' → logprob: -2.1129705905914307
    3. 'trees' → logprob: -2.1129705905914307
    4. '<|end|>' → logprob: -2.2379705905914307
    5. ' arbres' → logprob: -2.7379705905914307
    6. '-' → logprob: -2.9879705905914307
    7. 'd' → logprob: -4.23797082901001
    8. ' trees' → logprob: -4.36297082901001
    9. ')' → logprob: -4.86297082901001
    10. 'au' → logprob: -4.86297082901001

Token 730: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.2024136781692505
    2. ' arbres' → logprob: -1.7024136781692505
    3. '-' → logprob: -7.702413558959961
    4. 'ar' → logprob: -8.702413558959961
    5. 'trees' → logprob: -8.702413558959961
    6. 'l' → logprob: -9.827413558959961
    7. ' arb' → logprob: -10.327413558959961
    8. ' ' → logprob: -10.952413558959961
    9. 'for' → logprob: -11.202413558959961
    10. ' arbre' → logprob: -11.202413558959961

Token 731: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010664811357855797
    2. ' if' → logprob: -5.760664939880371
    3. '.' → logprob: -5.885664939880371
    4. ',' → logprob: -6.260664939880371
    5. 'print' → logprob: -6.885664939880371
    6. 'if' → logprob: -7.385664939880371
    7. ':' → logprob: -8.635664939880371
    8. ')' → logprob: -8.635664939880371
    9. '<|end|>' → logprob: -9.010664939880371
    10. '       ' → logprob: -9.135664939880371

Token 732: ' établir' (ID: 193045)
  Prédit: 'atte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atte' → logprob: -0.2620309591293335
    2. 'aller' → logprob: -2.887031078338623
    3. ' atteindre' → logprob: -2.887031078338623
    4. 'y' → logprob: -3.762031078338623
    5. ' y' → logprob: -4.012031078338623
    6. ' pouvoir' → logprob: -4.887031078338623
    7. ' avancer' → logprob: -5.012031078338623
    8. 'arr' → logprob: -5.012031078338623
    9. 'pass' → logprob: -5.137031078338623
    10. 're' → logprob: -5.262031078338623

Token 733: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.41359829902648926
    2. ' le' → logprob: -2.7885982990264893
    3. ' la' → logprob: -2.9135982990264893
    4. 'la' → logprob: -2.9135982990264893
    5. 'l' → logprob: -3.0385982990264893
    6. ' un' → logprob: -3.0385982990264893
    7. 'un' → logprob: -3.1635982990264893
    8. ' une' → logprob: -4.53859806060791
    9. 'une' → logprob: -4.66359806060791
    10. ' l' → logprob: -4.91359806060791

Token 734: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.510310173034668
    2. ' chemin' → logprob: -2.135310173034668
    3. 'pass' → logprob: -2.260310173034668
    4. 'pont' → logprob: -2.385310173034668
    5. 'sent' → logprob: -3.760310173034668
    6. 'acc' → logprob: -3.885310173034668
    7. ' passage' → logprob: -4.510310173034668
    8. 'itin' → logprob: -5.135310173034668
    9. 'camp' → logprob: -5.510310173034668
    10. ' pont' → logprob: -5.635310173034668

Token 735: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04819563403725624
    2. 'if' → logprob: -4.048195838928223
    3. '
' → logprob: -4.173195838928223
    4. '    
' → logprob: -5.423195838928223
    5. ' if' → logprob: -5.673195838928223
    6. 'print' → logprob: -5.798195838928223
    7. ',' → logprob: -6.798195838928223
    8. ',
' → logprob: -7.798195838928223
    9. '       ' → logprob: -8.048195838928223
    10. '.' → logprob: -8.048195838928223

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03622398152947426
    2. ' if' → logprob: -3.786223888397217
    3. 'if' → logprob: -4.536223888397217
    4. '    
' → logprob: -6.536223888397217
    5. '
' → logprob: -7.411223888397217
    6. ' 
' → logprob: -10.661224365234375
    7. '```' → logprob: -10.661224365234375
    8. '  
' → logprob: -11.161224365234375
    9. '\n' → logprob: -11.786224365234375
    10. ' for' → logprob: -11.786224365234375

Token 737: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6691663265228271
    2. 'if' → logprob: -0.9191663265228271
    3. ' if' → logprob: -2.419166326522827
    4. '    
' → logprob: -11.919166564941406
    5. '
' → logprob: -12.419166564941406
    6. '	if' → logprob: -13.294166564941406
    7. '```' → logprob: -13.294166564941406
    8. '  ' → logprob: -13.544166564941406
    9. '       ' → logprob: -14.419166564941406
    10. ' ' → logprob: -14.419166564941406

Token 738: ' Mais' (ID: 13880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3306761085987091
    2. '   ' → logprob: -1.5806760787963867
    3. ' if' → logprob: -2.5806760787963867
    4. '```' → logprob: -13.830676078796387
    5. '    
' → logprob: -14.330676078796387
    6. ' ' → logprob: -14.580676078796387
    7. '  ' → logprob: -14.830676078796387
    8. '	if' → logprob: -14.955676078796387
    9. 'result' → logprob: -15.455676078796387
    10. 'for' → logprob: -15.705676078796387

Token 739: ' regard' (ID: 6163)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.2029578685760498
    2. ' if' → logprob: -1.7029578685760498
    3. 'if' → logprob: -1.8279578685760498
    4. 'dist' → logprob: -1.9529578685760498
    5. 'print' → logprob: -2.07795786857605
    6. ' print' → logprob: -2.45295786857605
    7. '   ' → logprob: -5.702958106994629
    8. ' sys' → logprob: -9.702958106994629
    9. ' not' → logprob: -10.077958106994629
    10. '(dist' → logprob: -10.077958106994629

Token 740: 'ons' (ID: 1808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.35831761360168457
    2. 'ing' → logprob: -2.3583176136016846
    3. 'ant' → logprob: -2.3583176136016846
    4. 'er' → logprob: -3.2333176136016846
    5. 'es' → logprob: -3.6083176136016846
    6. 'if' → logprob: -4.2333173751831055
    7. 'ons' → logprob: -4.7333173751831055
    8. '   ' → logprob: -5.3583173751831055
    9. 'ez' → logprob: -5.3583173751831055
    10. 's' → logprob: -5.8583173751831055

Token 741: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24643900990486145
    2. ' la' → logprob: -2.371438980102539
    3. ' si' → logprob: -3.121438980102539
    4. 'if' → logprob: -3.371438980102539
    5. ' dist' → logprob: -4.246438980102539
    6. ' maintenant' → logprob: -5.621438980102539
    7. ' l' → logprob: -5.746438980102539
    8. '   ' → logprob: -5.746438980102539
    9. 'dist' → logprob: -5.746438980102539
    10. ' for' → logprob: -5.871438980102539

Token 742: ' règles' (ID: 67042)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.2148256301879883
    2. 'if' → logprob: -2.0898256301879883
    3. 'dist' → logprob: -2.0898256301879883
    4. ' cases' → logprob: -2.0898256301879883
    5. ' arbres' → logprob: -2.4648256301879883
    6. ' cas' → logprob: -2.9648256301879883
    7. ' dist' → logprob: -3.3398256301879883
    8. ' if' → logprob: -3.3398256301879883
    9. 'for' → logprob: -3.5898256301879883
    10. ' voisins' → logprob: -3.7148256301879883

Token 743: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24125270545482635
    2. ' if' → logprob: -1.6162526607513428
    3. 'if' → logprob: -4.741252899169922
    4. ':' → logprob: -5.741252899169922
    5. ' ' → logprob: -7.241252899169922
    6. '  ' → logprob: -7.491252899169922
    7. '#' → logprob: -7.741252899169922
    8. '    
' → logprob: -7.741252899169922
    9. '    ' → logprob: -7.991252899169922
    10. '.' → logprob: -8.741252899169922

Token 744: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7034369707107544
    2. 'if' → logprob: -0.9534369707107544
    3. '   ' → logprob: -2.328436851501465
    4. 'return' → logprob: -4.328436851501465
    5. ' return' → logprob: -5.453436851501465
    6. 'pass' → logprob: -6.453436851501465
    7. ' pass' → logprob: -6.703436851501465
    8. '#' → logprob: -6.828436851501465
    9. ' for' → logprob: -7.953436851501465
    10. 'for' → logprob: -8.703436851501465

Token 745: ' veut' (ID: 41653)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4415172040462494
    2. 'continue' → logprob: -1.5665172338485718
    3. ' doit' → logprob: -2.6915171146392822
    4. 'do' → logprob: -3.8165171146392822
    5. 'if' → logprob: -4.191517353057861
    6. ' ne' → logprob: -4.441517353057861
    7. ' peut' → logprob: -4.691517353057861
    8. ' n' → logprob: -5.066517353057861
    9. 'pe' → logprob: -5.691517353057861
    10. ' if' → logprob: -5.816517353057861

Token 746: ' que' (ID: 661)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0953044891357422
    2. ' trouver' → logprob: -1.5953044891357422
    3. ' couper' → logprob: -2.845304489135742
    4. 'print' → logprob: -3.095304489135742
    5. ' pouvoir' → logprob: -3.095304489135742
    6. 'tr' → logprob: -3.345304489135742
    7. 'calcul' → logprob: -3.720304489135742
    8. ' savoir' → logprob: -3.845304489135742
    9. 'cut' → logprob: -3.845304489135742
    10. ' déterminer' → logprob: -4.220304489135742

Token 747: ' nord' (ID: 35057)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5496572256088257
    2. 'dist' → logprob: -0.9246572256088257
    3. ' la' → logprob: -4.049657344818115
    4. 'la' → logprob: -5.799657344818115
    5. ' le' → logprob: -6.549657344818115
    6. 'le' → logprob: -6.549657344818115
    7. '(dist' → logprob: -8.174656867980957
    8. ' l' → logprob: -8.424656867980957
    9. 'l' → logprob: -8.424656867980957
    10. ' ' → logprob: -8.549656867980957

Token 748: '-ou' (ID: 192984)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.49787041544914246
    2. '-est' → logprob: -1.2478704452514648
    3. '-ou' → logprob: -3.372870445251465
    4. ' -' → logprob: -3.497870445251465
    5. '-east' → logprob: -4.497870445251465
    6. 'e' → logprob: -4.622870445251465
    7. 'est' → logprob: -5.372870445251465
    8. ' est' → logprob: -5.872870445251465
    9. ',' → logprob: -6.497870445251465
    10. ' ' → logprob: -6.747870445251465

Token 749: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0007908092229627073
    2. 'e' → logprob: -7.875790596008301
    3. 'et' → logprob: -9.7507905960083
    4. '```' → logprob: -9.8757905960083
    5. 'es' → logprob: -10.0007905960083
    6. 'rd' → logprob: -10.1257905960083
    7. 'ест' → logprob: -10.1257905960083
    8. '
' → logprob: -10.8757905960083
    9. 'east' → logprob: -11.0007905960083
    10. '

' → logprob: -11.3757905960083

Token 750: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4885188639163971
    2. ' (' → logprob: -2.6135189533233643
    3. ' ' → logprob: -2.7385189533233643
    4. ',' → logprob: -2.7385189533233643
    5. '(' → logprob: -3.6135189533233643
    6. ' et' → logprob: -3.6135189533233643
    7. ' )' → logprob: -3.7385189533233643
    8. ' corner' → logprob: -4.113518714904785
    9. '_' → logprob: -4.238518714904785
    10. ' to' → logprob: -4.738518714904785

Token 751: ' sud' (ID: 10332)
  Prédit: ' sud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sud' → logprob: -0.4742530584335327
    2. 's' → logprob: -0.9742530584335327
    3. 'south' → logprob: -8.849252700805664
    4. '#' → logprob: -11.974252700805664
    5. '```' → logprob: -11.974252700805664
    6. ' south' → logprob: -12.474252700805664
    7. 'sou' → logprob: -12.599252700805664
    8. 'Sud' → logprob: -12.974252700805664
    9. ' ' → logprob: -13.474252700805664
    10. 'sudo' → logprob: -13.474252700805664

Token 752: '-est' (ID: 49572)
  Prédit: '-est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-est' → logprob: -0.030533095821738243
    2. '-' → logprob: -4.530533313751221
    3. '-ou' → logprob: -4.530533313751221
    4. '-east' → logprob: -5.530533313751221
    5. 'est' → logprob: -5.530533313751221
    6. ' -' → logprob: -8.280532836914062
    7. ' est' → logprob: -9.280532836914062
    8. '```' → logprob: -9.780532836914062
    9. '_est' → logprob: -10.155532836914062
    10. '-west' → logprob: -10.405532836914062

Token 753: ' soient' (ID: 59497)
  Prédit: ' soient'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soient' → logprob: -0.07849124073982239
    2. ')' → logprob: -3.3284912109375
    3. ' ne' → logprob: -3.7034912109375
    4. ' soit' → logprob: -5.0784912109375
    5. ' aient' → logprob: -5.5784912109375
    6. ' restent' → logprob: -6.9534912109375
    7. 'so' → logprob: -7.3284912109375
    8. ' so' → logprob: -7.4534912109375
    9. ' puissent' → logprob: -7.5784912109375
    10. ' sont' → logprob: -7.5784912109375

Token 754: ' mut' (ID: 6505)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6988016963005066
    2. ' accessibles' → logprob: -1.5738017559051514
    3. 'sans' → logprob: -2.4488017559051514
    4. 'access' → logprob: -3.0738017559051514
    5. 'des' → logprob: -3.1988017559051514
    6. 'connect' → logprob: -3.5738017559051514
    7. ' des' → logprob: -4.573801517486572
    8. ' ' → logprob: -4.823801517486572
    9. 'vid' → logprob: -4.823801517486572
    10. 'd' → logprob: -4.823801517486572

Token 755: 'uellement' (ID: 36026)
  Prédit: 'uellement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uellement' → logprob: -0.0023203452583402395
    2. 'u' → logprob: -7.127320289611816
    3. 'uel' → logprob: -7.127320289611816
    4. 'el' → logprob: -8.502320289611816
    5. 'ually' → logprob: -9.002320289611816
    6. 'uelle' → logprob: -9.252320289611816
    7. 'ual' → logprob: -9.252320289611816
    8. 'uels' → logprob: -9.377320289611816
    9. 'uelles' → logprob: -10.002320289611816
    10. 'e' → logprob: -11.127320289611816

Token 756: ' accessibles' (ID: 156723)
  Prédit: 'accessible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accessible' → logprob: -0.6528903245925903
    2. ' accessibles' → logprob: -0.9028903245925903
    3. ' accessible' → logprob: -3.152890205383301
    4. 'access' → logprob: -3.652890205383301
    5. 'reachable' → logprob: -6.152890205383301
    6. '0' → logprob: -6.777890205383301
    7. 'connect' → logprob: -7.027890205383301
    8. 'adj' → logprob: -7.902890205383301
    9. 'jo' → logprob: -8.5278902053833
    10. 'atte' → logprob: -8.6528902053833

Token 757: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04098145663738251
    2. '
' → logprob: -3.6659815311431885
    3. '    
' → logprob: -4.415981292724609
    4. '<|end|>' → logprob: -7.040981292724609
    5. '.' → logprob: -7.415981292724609
    6. ')' → logprob: -8.29098129272461
    7. ' if' → logprob: -8.54098129272461
    8. ',' → logprob: -9.16598129272461
    9. ':' → logprob: -9.29098129272461
    10. '.
' → logprob: -10.04098129272461

Token 758: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012682695873081684
    2. '<|end|>' → logprob: -5.262682914733887
    3. '.' → logprob: -5.637682914733887
    4. ':' → logprob: -6.762682914733887
    5. '    
' → logprob: -6.762682914733887
    6. ')' → logprob: -7.137682914733887
    7. ',' → logprob: -8.387682914733887
    8. ' if' → logprob: -8.887682914733887
    9. '    ' → logprob: -9.512682914733887
    10. '<|end|>' → logprob: -10.012682914733887

Token 759: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026714053004980087
    2. '#' (adapté à ' #') → logprob: -4.776713848114014
    3. '.' → logprob: -4.901713848114014
    4. ',' → logprob: -5.401713848114014
    5. ' #' → logprob: -7.151713848114014
    6. ' (' → logprob: -7.401713848114014
    7. ' if' → logprob: -7.401713848114014
    8. ' ' → logprob: -7.401713848114014
    9. ' via' → logprob: -7.526713848114014
    10. '    
' → logprob: -7.776713848114014

Token 760: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017214637249708176
    2. ' if' → logprob: -4.267214775085449
    3. 'if' → logprob: -6.267214775085449
    4. '    
' → logprob: -8.01721477508545
    5. '.' → logprob: -8.64221477508545
    6. ' for' → logprob: -9.01721477508545
    7. ',' → logprob: -9.51721477508545
    8. '#' → logprob: -9.76721477508545
    9. ':' → logprob: -9.89221477508545
    10. 'for' → logprob: -10.26721477508545

Token 761: ' arbres' (ID: 127011)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.6652629375457764
    2. 'arb' → logprob: -1.5402629375457764
    3. ' couper' → logprob: -2.1652629375457764
    4. 'ar' → logprob: -2.4152629375457764
    5. ' arbres' → logprob: -3.4152629375457764
    6. '```' → logprob: -5.0402631759643555
    7. ' arbre' → logprob: -5.5402631759643555
    8. 'ob' → logprob: -5.6652631759643555
    9. 'pass' → logprob: -6.4152631759643555
    10. 'cut' → logprob: -6.5402631759643555

Token 762: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08334480971097946
    2. '
' → logprob: -3.2083446979522705
    3. '.' → logprob: -3.8333446979522705
    4. '    
' → logprob: -4.95834493637085
    5. ',' → logprob: -5.45834493637085
    6. '<|end|>' → logprob: -6.08334493637085
    7. ' if' → logprob: -6.58334493637085
    8. ')' → logprob: -7.20834493637085
    9. '.
' → logprob: -7.33334493637085
    10. 'if' → logprob: -7.33334493637085

Token 763: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22645415365695953
    2. 'if' → logprob: -2.476454257965088
    3. ' if' → logprob: -2.851454257965088
    4. '
' → logprob: -2.976454257965088
    5. '<|end|>' → logprob: -4.851454257965088
    6. '    
' → logprob: -6.976454257965088
    7. ')' → logprob: -8.35145378112793
    8. '#' → logprob: -8.47645378112793
    9. '  ' → logprob: -9.22645378112793
    10. '	if' → logprob: -9.35145378112793

Token 764: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14291293919086456
    2. '
' → logprob: -2.5179128646850586
    3. ' n' → logprob: -4.392912864685059
    4. 'if' → logprob: -4.517912864685059
    5. '    
' → logprob: -5.517912864685059
    6. ' est' → logprob: -5.642912864685059
    7. '#' → logprob: -5.767912864685059
    8. 'continue' → logprob: -5.767912864685059
    9. ' continue' → logprob: -6.017912864685059
    10. ' if' → logprob: -6.017912864685059

Token 765: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14473429322242737
    2. ' if' → logprob: -2.1447343826293945
    3. 'if' → logprob: -4.2697343826293945
    4. ' que' → logprob: -6.3947343826293945
    5. '    ' → logprob: -7.1447343826293945
    6. '\n' → logprob: -8.394734382629395
    7. '       ' → logprob: -8.519734382629395
    8. ' si' → logprob: -8.644734382629395
    9. '    
' → logprob: -8.894734382629395
    10. ' ' → logprob: -9.644734382629395

Token 766: ' l' (ID: 305)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.38697314262390137
    2. 'dist' → logprob: -1.1369731426239014
    3. ' False' → logprob: -10.13697338104248
    4. 'False' → logprob: -10.38697338104248
    5. ' if' → logprob: -11.38697338104248
    6. 'if' → logprob: -11.76197338104248
    7. '(dist' → logprob: -12.63697338104248
    8. ' True' → logprob: -13.13697338104248
    9. ' ' → logprob: -13.26197338104248
    10. ' not' → logprob: -13.88697338104248

Token 767: ''on' (ID: 25812)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.44111090898513794
    2. ' dist' → logprob: -1.0661108493804932
    3. 'ist' → logprob: -5.191111087799072
    4. '(dist' → logprob: -6.316111087799072
    5. 'e' → logprob: -7.191111087799072
    6. 'istance' → logprob: -7.816111087799072
    7. ''' → logprob: -8.441110610961914
    8. 'not' → logprob: -8.566110610961914
    9. 'n' → logprob: -8.566110610961914
    10. 'en' → logprob: -8.628610610961914

Token 768: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7306072115898132
    2. ' continue' → logprob: -1.105607271194458
    3. 'return' → logprob: -2.480607271194458
    4. ' return' → logprob: -2.605607271194458
    5. 'do' → logprob: -4.480607032775879
    6. ' doit' → logprob: -4.605607032775879
    7. 'contin' → logprob: -6.355607032775879
    8. ' n' → logprob: -6.480607032775879
    9. ' ne' → logprob: -6.480607032775879
    10. 'n' → logprob: -7.480607032775879

Token 769: ' couper' (ID: 135212)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.479027658700943
    2. 'contin' → logprob: -1.3540276288986206
    3. ' couper' → logprob: -3.47902774810791
    4. '   ' → logprob: -4.10402774810791
    5. 'return' → logprob: -4.22902774810791
    6. ' return' → logprob: -4.35402774810791
    7. ' cut' → logprob: -4.97902774810791
    8. ' retourner' → logprob: -5.22902774810791
    9. ' vérifier' → logprob: -5.47902774810791
    10. 'cut' → logprob: -5.47902774810791

Token 770: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1364084780216217
    2. 'des' → logprob: -2.636408567428589
    3. '<|end|>' → logprob: -4.01140832901001
    4. 'au' → logprob: -4.63640832901001
    5. ' un' → logprob: -4.88640832901001
    6. ' au' → logprob: -5.01140832901001
    7. ' arbres' → logprob: -6.01140832901001
    8. 'un' → logprob: -6.01140832901001
    9. ' les' → logprob: -6.38640832901001
    10. ' ' → logprob: -7.01140832901001

Token 771: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.4293974041938782
    2. 'arb' → logprob: -1.0543973445892334
    3. 'trees' → logprob: -8.679397583007812
    4. 'ar' → logprob: -9.054397583007812
    5. ' trees' → logprob: -9.429397583007812
    6. 'cases' → logprob: -10.054397583007812
    7. ' espaces' → logprob: -10.179397583007812
    8. ' chemins' → logprob: -10.429397583007812
    9. '```' → logprob: -10.429397583007812
    10. ' arbre' → logprob: -10.429397583007812

Token 772: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9136295318603516
    2. '   ' → logprob: -1.0386295318603516
    3. '<|end|>' → logprob: -1.6636295318603516
    4. ',' → logprob: -4.038629531860352
    5. ')' → logprob: -5.038629531860352
    6. '...' → logprob: -5.288629531860352
    7. '#' → logprob: -5.413629531860352
    8. ' ' → logprob: -5.538629531860352
    9. ' pour' → logprob: -5.913629531860352
    10. ' to' → logprob: -6.163629531860352

Token 773: ' ouvrir' (ID: 113571)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.31881123781204224
    2. ' créer' → logprob: -2.4438111782073975
    3. 'r' → logprob: -3.1938111782073975
    4. ' rendre' → logprob: -3.5688111782073975
    5. 'p' → logprob: -4.318811416625977
    6. 'ouvrir' → logprob: -4.443811416625977
    7. 'que' → logprob: -4.693811416625977
    8. 'transform' → logprob: -5.068811416625977
    9. ' cr' → logprob: -5.318811416625977
    10. 'd' → logprob: -5.318811416625977

Token 774: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.35540392994880676
    2. ' un' → logprob: -1.3554039001464844
    3. 'le' → logprob: -3.4804039001464844
    4. ' le' → logprob: -4.980403900146484
    5. 'une' → logprob: -6.730403900146484
    6. 'l' → logprob: -7.230403900146484
    7. ' une' → logprob: -8.105403900146484
    8. ' ' → logprob: -8.230403900146484
    9. 'la' → logprob: -8.355403900146484
    10. '```' → logprob: -8.855403900146484

Token 775: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.027588699012994766
    2. 'pass' → logprob: -4.027588844299316
    3. ' chemin' → logprob: -5.027588844299316
    4. 'sent' → logprob: -6.777588844299316
    5. '```' → logprob: -7.402588844299316
    6. ' passage' → logprob: -8.527588844299316
    7. 'path' → logprob: -8.652588844299316
    8. 's' → logprob: -9.152588844299316
    9. 'chem' → logprob: -9.402588844299316
    10. 'acc' → logprob: -9.527588844299316

Token 776: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16524161398410797
    2. '<|end|>' → logprob: -2.4152417182922363
    3. '.' → logprob: -3.5402417182922363
    4. ',' → logprob: -4.540241718292236
    5. '    
' → logprob: -4.790241718292236
    6. '
' → logprob: -5.040241718292236
    7. ')' → logprob: -5.915241718292236
    8. '...' → logprob: -6.915241718292236
    9. '#' → logprob: -7.165241718292236
    10. '.
' → logprob: -7.665241718292236

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028913414105772972
    2. '
' → logprob: -3.9039134979248047
    3. '    
' → logprob: -5.528913497924805
    4. ' if' → logprob: -6.653913497924805
    5. '<|end|>' → logprob: -6.903913497924805
    6. 'if' → logprob: -7.153913497924805
    7. ')' → logprob: -7.653913497924805
    8. '#' → logprob: -8.403913497924805
    9. ' 
' → logprob: -8.528913497924805
    10. '\n' → logprob: -9.528913497924805

Token 778: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.062963843345642
    2. 'if' → logprob: -1.062963843345642
    3. ' if' → logprob: -1.187963843345642
    4. '
' → logprob: -6.062963962554932
    5. '    
' → logprob: -7.437963962554932
    6. '#' (adapté à ' #') → logprob: -7.687963962554932
    7. 'for' → logprob: -8.687963485717773
    8. ' 
' → logprob: -8.812963485717773
    9. ' for' → logprob: -8.937963485717773
    10. '```' → logprob: -9.062963485717773

Token 779: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33372050523757935
    2. '   ' → logprob: -1.3337204456329346
    3. ' if' → logprob: -4.208720684051514
    4. '
' → logprob: -5.958720684051514
    5. 'result' → logprob: -7.083720684051514
    6. 'answer' → logprob: -7.583720684051514
    7. 'for' → logprob: -8.083720207214355
    8. '#' → logprob: -8.333720207214355
    9. '    
' → logprob: -8.458720207214355
    10. 'res' → logprob: -8.583720207214355

Token 780: ' problème' (ID: 35630)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16412362456321716
    2. ' if' → logprob: -2.28912353515625
    3. '#' → logprob: -3.78912353515625
    4. '
' → logprob: -4.53912353515625
    5. '   ' → logprob: -5.28912353515625
    6. ' #' → logprob: -5.78912353515625
    7. 'min' → logprob: -6.03912353515625
    8. 'for' → logprob: -6.53912353515625
    9. ' for' → logprob: -7.03912353515625
    10. ' min' → logprob: -7.41412353515625

Token 781: ' revient' (ID: 95900)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 782: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16107411682605743
    2. '   ' → logprob: -2.661074161529541
    3. 'à' → logprob: -3.411074161529541
    4. ')' → logprob: -4.661074161529541
    5. ' ' → logprob: -4.786074161529541
    6. ' to' → logprob: -4.911074161529541
    7. '    ' → logprob: -5.286074161529541
    8. ':' → logprob: -6.286074161529541
    9. ' )' → logprob: -6.286074161529541
    10. '```' → logprob: -6.286074161529541

Token 783: ' calcul' (ID: 7559)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8806442022323608
    2. ' trouver' → logprob: -1.1306442022323608
    3. 'min' → logprob: -2.8806443214416504
    4. 'chercher' → logprob: -3.0056443214416504
    5. 'contin' → logprob: -3.3806443214416504
    6. ' continuer' → logprob: -3.6306443214416504
    7. 'faire' → logprob: -4.00564432144165
    8. ' chercher' → logprob: -4.75564432144165
    9. '"' → logprob: -4.88064432144165
    10. '...' → logprob: -5.13064432144165

Token 784: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.046495672315359116
    2. 'ating' → logprob: -3.1714956760406494
    3. 'ate' → logprob: -6.29649543762207
    4. '#' → logprob: -6.92149543762207
    5. 'ateur' → logprob: -8.17149543762207
    6. '```' → logprob: -9.54649543762207
    7. 'e' → logprob: -9.92149543762207
    8. 'ing' → logprob: -10.42149543762207
    9. '   ' → logprob: -10.67149543762207
    10. '_er' → logprob: -10.92149543762207

Token 785: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.858086884021759
    2. 'le' → logprob: -1.3580868244171143
    3. ' le' → logprob: -1.4830868244171143
    4. 'la' → logprob: -2.4830868244171143
    5. 'une' → logprob: -6.108087062835693
    6. ' une' → logprob: -6.483087062835693
    7. 'min' → logprob: -6.608087062835693
    8. ' un' → logprob: -7.733087062835693
    9. ',' → logprob: -7.858087062835693
    10. 'minimum' → logprob: -7.983087062835693

Token 786: ' temps' (ID: 11160)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5196594595909119
    2. 'minimum' → logprob: -1.3946595191955566
    3. 'plus' → logprob: -2.0196595191955566
    4. ' nombre' → logprob: -4.894659519195557
    5. 'min' → logprob: -5.144659519195557
    6. 'co' → logprob: -5.894659519195557
    7. 'minimal' → logprob: -6.019659519195557
    8. 'che' → logprob: -6.394659519195557
    9. 'cout' → logprob: -6.644659519195557
    10. ' minimum' → logprob: -7.144659519195557

Token 787: ' minimal' (ID: 19957)
  Prédit: ' nécessaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.15729452669620514
    2. 'minimum' → logprob: -3.157294511795044
    3. '_' → logprob: -3.532294511795044
    4. '   ' → logprob: -4.282294750213623
    5. ' minimum' → logprob: -5.032294750213623
    6. ' de' → logprob: -5.407294750213623
    7. '=' → logprob: -5.407294750213623
    8. 'final' → logprob: -5.532294750213623
    9. 'total' → logprob: -5.532294750213623
    10. ' =' → logprob: -5.657294750213623

Token 788: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5757320523262024
    2. ' nécessaire' → logprob: -1.8257319927215576
    3. ' pour' → logprob: -2.7007319927215576
    4. ' ' → logprob: -3.0757319927215576
    5. '<|end|>' → logprob: -3.2007319927215576
    6. '  ' → logprob: -4.075732231140137
    7. ' =' → logprob: -4.200732231140137
    8. ',' → logprob: -4.325732231140137
    9. ' à' → logprob: -4.950732231140137
    10. ' needed' → logprob: -5.075732231140137

Token 789: ' couper' (ID: 135212)
  Prédit: 'ouvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouvrir' → logprob: -1.1149194240570068
    2. 'cou' → logprob: -1.8649194240570068
    3. 'tr' → logprob: -2.114919424057007
    4. 'aller' → logprob: -2.864919424057007
    5. 'r' → logprob: -3.114919424057007
    6. 'cr' → logprob: -3.489919424057007
    7. ' couper' → logprob: -3.489919424057007
    8. 'd' → logprob: -3.864919424057007
    9. ' aller' → logprob: -4.239919662475586
    10. 'se' → logprob: -4.239919662475586

Token 790: ' les' (ID: 1341)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.9598574638366699
    2. '<|end|>' → logprob: -1.95985746383667
    3. ' les' → logprob: -2.08485746383667
    4. ' un' → logprob: -2.45985746383667
    5. 'au' → logprob: -2.70985746383667
    6. ' ' → logprob: -2.83485746383667
    7. 'des' → logprob: -3.08485746383667
    8. ' au' → logprob: -3.45985746383667
    9. 'les' → logprob: -3.45985746383667
    10. 'un' → logprob: -3.95985746383667

Token 791: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.10085037350654602
    2. 'arb' → logprob: -2.3508503437042236
    3. ' bons' → logprob: -8.350850105285645
    4. 'trees' → logprob: -9.225850105285645
    5. ' plus' → logprob: -10.225850105285645
    6. 'ar' → logprob: -10.225850105285645
    7. ' derniers' → logprob: -10.475850105285645
    8. 'plus' → logprob: -10.475850105285645
    9. ' arbre' → logprob: -10.475850105285645
    10. ' trees' → logprob: -10.600850105285645

Token 792: ' permettant' (ID: 61092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2005564570426941
    2. '.' → logprob: -2.825556516647339
    3. '#' → logprob: -3.325556516647339
    4. '<|end|>' → logprob: -3.450556516647339
    5. ',' → logprob: -3.575556516647339
    6. '...' → logprob: -4.82555627822876
    7. ' #' → logprob: -5.45055627822876
    8. '    
' → logprob: -5.95055627822876
    9. ' et' → logprob: -6.57555627822876
    10. '
' → logprob: -6.57555627822876

Token 793: '
' (ID: 198)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1058931052684784
    2. ' de' → logprob: -2.980893135070801
    3. 'd' → logprob: -3.230893135070801
    4. 'de' → logprob: -4.855893135070801
    5. ' la' → logprob: -6.980893135070801
    6. 'le' → logprob: -7.980893135070801
    7. 'l' → logprob: -8.1058931350708
    8. ' l' → logprob: -8.2308931350708
    9. ' ' → logprob: -8.6058931350708
    10. '#' → logprob: -9.2308931350708

Token 794: '   ' (ID: 271)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24753578007221222
    2. ' d' → logprob: -1.6225358247756958
    3. '   ' → logprob: -4.247535705566406
    4. 'de' → logprob: -5.872535705566406
    5. 'd' → logprob: -6.872535705566406
    6. '    ' → logprob: -6.997535705566406
    7. '<|end|>' → logprob: -7.497535705566406
    8. '_' → logprob: -7.622535705566406
    9. ' à' → logprob: -7.622535705566406
    10. ' ' → logprob: -7.622535705566406

Token 795: ' #' (ID: 1069)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6688634753227234
    2. ' d' → logprob: -1.0438635349273682
    3. 'de' → logprob: -2.918863534927368
    4. '   ' → logprob: -3.418863534927368
    5. 'd' → logprob: -3.543863534927368
    6. ' à' → logprob: -5.043863296508789
    7. ' ' → logprob: -5.668863296508789
    8. 'à' → logprob: -6.168863296508789
    9. '    ' → logprob: -7.043863296508789
    10. '_' → logprob: -7.043863296508789

Token 796: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8940027356147766
    2. ' d' → logprob: -1.2690026760101318
    3. 'de' → logprob: -2.269002676010132
    4. 'le' → logprob: -2.394002676010132
    5. ' de' → logprob: -3.269002676010132
    6. 'l' → logprob: -3.519002676010132
    7. '#' → logprob: -4.019002914428711
    8. 'la' → logprob: -4.644002914428711
    9. ' la' → logprob: -5.144002914428711
    10. 'un' → logprob: -5.394002914428711

Token 797: ' connexion' (ID: 81575)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.19980451464653015
    2. ' passage' → logprob: -1.9498045444488525
    3. 'che' → logprob: -4.324804306030273
    4. ' chemin' → logprob: -4.574804306030273
    5. 'traj' → logprob: -5.949804306030273
    6. ' déplacement' → logprob: -6.074804306030273
    7. 'connexion' → logprob: -6.324804306030273
    8. ' trajet' → logprob: -6.449804306030273
    9. 'plus' → logprob: -6.699804306030273
    10. 'cré' → logprob: -6.949804306030273

Token 798: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03422335907816887
    2. '.' → logprob: -3.9092233180999756
    3. ',' → logprob: -5.534223556518555
    4. '    
' → logprob: -5.784223556518555
    5. ' entre' → logprob: -6.784223556518555
    6. '#' → logprob: -6.784223556518555
    7. ' des' → logprob: -7.534223556518555
    8. '<|end|>' → logprob: -7.784223556518555
    9. '    ' → logprob: -8.034223556518555
    10. '
' → logprob: -8.284223556518555

Token 799: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2566218376159668
    2. '#' → logprob: -1.8816218376159668
    3. '
' → logprob: -3.881621837615967
    4. ' #' → logprob: -4.256621837615967
    5. '    
' → logprob: -4.631621837615967
    6. ' 
' → logprob: -5.006621837615967
    7. '\' → logprob: -6.006621837615967
    8. '\n' → logprob: -6.256621837615967
    9. ' cut' → logprob: -6.506621837615967
    10. 'cut' → logprob: -6.506621837615967

Token 800: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0546256303787231
    2. 'min' → logprob: -1.4296256303787231
    3. '#' → logprob: -1.5546256303787231
    4. 'cut' → logprob: -2.4296255111694336
    5. 'max' → logprob: -3.8046255111694336
    6. 'inf' → logprob: -3.9296255111694336
    7. 'time' → logprob: -4.304625511169434
    8. ' min' → logprob: -4.804625511169434
    9. 'INF' → logprob: -4.804625511169434
    10. ' #' → logprob: -5.679625511169434

Token 801: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044183313846588135
    2. '#' → logprob: -3.4191832542419434
    3. '    
' → logprob: -5.044183254241943
    4. 'cut' → logprob: -6.669183254241943
    5. '
' → logprob: -6.919183254241943
    6. 'max' → logprob: -7.669183254241943
    7. 'time' → logprob: -7.919183254241943
    8. ' #' → logprob: -8.544183731079102
    9. 'min' → logprob: -8.919183731079102
    10. ' 
' → logprob: -9.919183731079102

Token 802: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.172621250152588
    2. 'if' → logprob: -1.297621250152588
    3. '   ' → logprob: -2.047621250152588
    4. 'min' → logprob: -2.297621250152588
    5. 'answer' → logprob: -2.297621250152588
    6. 'time' → logprob: -4.172621250152588
    7. 'result' → logprob: -4.422621250152588
    8. 'max' → logprob: -4.422621250152588
    9. 'ans' → logprob: -4.672621250152588
    10. 'res' → logprob: -4.922621250152588

Token 803: ' Analyse' (ID: 91441)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0045867725275456905
    2. ' if' → logprob: -6.129586696624756
    3. '   ' → logprob: -6.379586696624756
    4. '#' → logprob: -8.004587173461914
    5. 'for' → logprob: -9.004587173461914
    6. 'result' → logprob: -9.629587173461914
    7. 'import' → logprob: -10.004587173461914
    8. 'min' → logprob: -10.379587173461914
    9. 'answer' → logprob: -10.629587173461914
    10. 'distance' → logprob: -11.129587173461914

Token 804: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10865715146064758
    2. ' if' → logprob: -2.608657121658325
    3. 'if' → logprob: -3.608657121658325
    4. '
' → logprob: -6.858657360076904
    5. '    
' → logprob: -7.608657360076904
    6. ' =' → logprob: -8.608656883239746
    7. ':' → logprob: -8.733656883239746
    8. '#' → logprob: -9.733656883239746
    9. 'import' → logprob: -10.358656883239746
    10. '  ' → logprob: -10.358656883239746

Token 805: 'co' (ID: 1191)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9561424255371094
    2. '   ' → logprob: -1.0811424255371094
    3. ' des' → logprob: -2.7061424255371094
    4. ' #' → logprob: -3.3311424255371094
    5. ' if' → logprob: -3.5811424255371094
    6. ' de' → logprob: -3.9561424255371094
    7. ' du' → logprob: -4.081142425537109
    8. ':' → logprob: -4.206142425537109
    9. ' continue' → logprob: -4.581142425537109
    10. ' for' → logprob: -4.706142425537109

Token 806: 'ût' (ID: 24581)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -1.0604780912399292
    2. 'm' → logprob: -1.8104780912399292
    3. 'de' → logprob: -1.8104780912399292
    4. 'mp' → logprob: -1.8104780912399292
    5. 'nst' → logprob: -2.9354782104492188
    6. 'n' → logprob: -3.3104782104492188
    7. 'unt' → logprob: -4.810478210449219
    8. 'st' → logprob: -5.060478210449219
    9. '"' → logprob: -5.310478210449219
    10. 'mpl' → logprob: -5.560478210449219

Token 807: '"' (ID: 1)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11146041005849838
    2. ' minimal' → logprob: -2.9864604473114014
    3. '   ' → logprob: -4.236460208892822
    4. ')' → logprob: -4.611460208892822
    5. '=' → logprob: -4.986460208892822
    6. ' des' → logprob: -5.361460208892822
    7. '_min' → logprob: -5.486460208892822
    8. '):' → logprob: -5.986460208892822
    9. '"' → logprob: -6.486460208892822
    10. '")' → logprob: -6.486460208892822

Token 808: ' :
' (ID: 10039)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1836124658584595
    2. 'if' → logprob: -1.3086124658584595
    3. '   ' → logprob: -1.5586124658584595
    4. ' =' → logprob: -2.93361234664917
    5. ':' → logprob: -3.05861234664917
    6. '#' → logprob: -4.05861234664917
    7. '_' → logprob: -4.30861234664917
    8. 'def' → logprob: -4.43361234664917
    9. '
' → logprob: -4.68361234664917
    10. ')' → logprob: -4.93361234664917

Token 809: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1805346012115479
    2. '   ' → logprob: -1.5555346012115479
    3. ' max' → logprob: -2.180534601211548
    4. ' #' → logprob: -2.305534601211548
    5. ' time' → logprob: -2.805534601211548
    6. ' if' → logprob: -3.055534601211548
    7. ' cut' → logprob: -3.680534601211548
    8. 'cost' → logprob: -3.680534601211548
    9. 'time' → logprob: -3.930534601211548
    10. 'max' → logprob: -4.305534362792969

Token 810: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3948334455490112
    2. '#' (adapté à ' #') → logprob: -2.019833564758301
    3. 'time' → logprob: -2.394833564758301
    4. 'if' → logprob: -2.769833564758301
    5. ' time' → logprob: -2.894833564758301
    6. 'cut' → logprob: -3.019833564758301
    7. ' if' → logprob: -3.144833564758301
    8. 'max' → logprob: -3.269833564758301
    9. ' max' → logprob: -3.269833564758301
    10. 'cost' → logprob: -3.394833564758301

Token 811: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7759448289871216
    2. ' if' → logprob: -0.9009448289871216
    3. '#' → logprob: -2.900944709777832
    4. 'time' → logprob: -3.650944709777832
    5. ' time' → logprob: -4.775944709777832
    6. ')' → logprob: -5.275944709777832
    7. 'for' → logprob: -5.400944709777832
    8. 'cost' → logprob: -5.400944709777832
    9. 'cut' → logprob: -5.525944709777832
    10. 'max' → logprob: -5.525944709777832

Token 812: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19178791344165802
    2. 'i' → logprob: -2.0667879581451416
    3. ' chaque' → logprob: -3.8167879581451416
    4. ' couper' → logprob: -4.6917877197265625
    5. 'cut' → logprob: -5.0667877197265625
    6. 'co' → logprob: -6.3167877197265625
    7. ' (' → logprob: -6.8167877197265625
    8. ' ' → logprob: -6.9417877197265625
    9. '(i' → logprob: -7.3167877197265625
    10. ' ' → logprob: -7.3167877197265625

Token 813: ' case' (ID: 1890)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07076232880353928
    2. 'i' → logprob: -2.6957623958587646
    3. ' arbre' → logprob: -7.9457621574401855
    4. ' ' → logprob: -8.695762634277344
    5. ' case' → logprob: -10.195762634277344
    6. ' (' → logprob: -10.570762634277344
    7. 'ar' → logprob: -10.695762634277344
    8. ' ' → logprob: -10.695762634277344
    9. 'case' → logprob: -11.070762634277344
    10. '   ' → logprob: -11.195762634277344

Token 814: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4896413087844849
    2. ' avec' → logprob: -1.7396413087844849
    3. '   ' → logprob: -1.9896413087844849
    4. ' A' → logprob: -2.3646411895751953
    5. ' ,' → logprob: -2.6146411895751953
    6. ' dans' → logprob: -2.7396411895751953
    7. ' (' → logprob: -2.8646411895751953
    8. 'A' → logprob: -3.4896411895751953
    9. ' with' → logprob: -3.7396411895751953
    10. ' de' → logprob: -3.9896411895751953

Token 815: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3237435221672058
    2. 'i' → logprob: -1.4487435817718506
    3. ')' → logprob: -3.5737435817718506
    4. ' )' → logprob: -5.4487433433532715
    5. ',' → logprob: -6.4487433433532715
    6. '),' → logprob: -6.5737433433532715
    7. ' (' → logprob: -6.9487433433532715
    8. ' ,' → logprob: -7.0737433433532715
    9. ' ' → logprob: -7.1987433433532715
    10. '   ' → logprob: -7.5737433433532715

Token 816: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.16472995281219482
    2. ',' → logprob: -1.9147299528121948
    3. ',i' → logprob: -6.289730072021484
    4. ',n' → logprob: -7.164730072021484
    5. ' ,' → logprob: -7.414730072021484
    6. ',d' → logprob: -8.164730072021484
    7. '   ' → logprob: -8.539730072021484
    8. '),' → logprob: -9.039730072021484
    9. ',k' → logprob: -9.289730072021484
    10. ',v' → logprob: -9.539730072021484

Token 817: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1372205018997192
    2. '):' → logprob: -1.1372205018997192
    3. '):
' → logprob: -1.5122205018997192
    4. '),' → logprob: -2.0122203826904297
    5. ',' → logprob: -6.51222038269043
    6. '   ' → logprob: -7.13722038269043
    7. ' )' → logprob: -7.51222038269043
    8. ' ),' → logprob: -8.13722038269043
    9. ' ):
' → logprob: -8.13722038269043
    10. ' ):' → logprob: -8.26222038269043

Token 818: ' contenant' (ID: 131049)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31976911425590515
    2. ':
' → logprob: -1.4447691440582275
    3. '   ' → logprob: -3.9447691440582275
    4. ',' → logprob: -4.319768905639648
    5. ' :' → logprob: -6.694768905639648
    6. ' :
' → logprob: -7.069768905639648
    7. '       ' → logprob: -7.444768905639648
    8. ' if' → logprob: -7.444768905639648
    9. '
' → logprob: -7.694768905639648
    10. ' with' → logprob: -8.319768905639648

Token 819: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.21117934584617615
    2. ' un' → logprob: -2.586179256439209
    3. 'des' → logprob: -2.836179256439209
    4. '>' → logprob: -4.086179256439209
    5. 'un' → logprob: -4.211179256439209
    6. ' arbres' → logprob: -4.211179256439209
    7. ' >' → logprob: -5.836179256439209
    8. 'au' → logprob: -6.336179256439209
    9. 'trees' → logprob: -6.586179256439209
    10. '1' → logprob: -7.086179256439209

Token 820: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.2846786081790924
    2. 'arb' → logprob: -1.40967857837677
    3. '0' → logprob: -6.0346784591674805
    4. '1' → logprob: -7.6596784591674805
    5. 'ar' → logprob: -8.40967845916748
    6. ' ' → logprob: -8.53467845916748
    7. '>' → logprob: -9.65967845916748
    8. ' arb' → logprob: -9.65967845916748
    9. ' arbre' → logprob: -10.15967845916748
    10. 'trees' → logprob: -11.03467845916748

Token 821: ' (>' (ID: 147584)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28549399971961975
    2. ',' → logprob: -1.9104939699172974
    3. '   ' → logprob: -3.285494089126587
    4. ' :' → logprob: -4.035493850708008
    5. ':
' → logprob: -4.160493850708008
    6. ' if' → logprob: -4.285493850708008
    7. ' (' → logprob: -4.910493850708008
    8. ' ,' → logprob: -5.660493850708008
    9. ' :
' → logprob: -6.660493850708008
    10. 'if' → logprob: -6.910493850708008

Token 822: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011718906462192535
    2. ' ' → logprob: -6.751172065734863
    3. ')' → logprob: -14.251172065734863
    4. '   ' → logprob: -14.626172065734863
    5. '1' → logprob: -15.251172065734863
    6. '=' → logprob: -16.251171112060547
    7. '>' → logprob: -17.126171112060547
    8. '```' → logprob: -17.251171112060547
    9. '  ' → logprob: -17.376171112060547
    10. ',' → logprob: -17.751171112060547

Token 823: '):
' (ID: 1883)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8346512317657471
    2. '):
' → logprob: -1.209651231765747
    3. '):' → logprob: -1.959651231765747
    4. ')' → logprob: -2.084651231765747
    5. ' ),' → logprob: -7.084650993347168
    6. '   ' → logprob: -7.709650993347168
    7. ' )' → logprob: -8.459650993347168
    8. ' ):
' → logprob: -8.584650993347168
    9. '):

' → logprob: -8.709650993347168
    10. ':' → logprob: -9.209650993347168

Token 824: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07954692840576172
    2. '   ' → logprob: -3.4545469284057617
    3. '<|end|>' → logprob: -3.9545469284057617
    4. '    ' → logprob: -4.579546928405762
    5. ',' → logprob: -5.204546928405762
    6. ' ' → logprob: -6.579546928405762
    7. ' for' → logprob: -6.704546928405762
    8. '        
' → logprob: -6.829546928405762
    9. '        ' → logprob: -7.204546928405762
    10. ' if' → logprob: -7.329546928405762

Token 825: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7521365284919739
    2. '   ' → logprob: -0.8771365284919739
    3. ' if' → logprob: -3.127136468887329
    4. '    ' → logprob: -3.752136468887329
    5. ' for' → logprob: -4.377136707305908
    6. ' #' → logprob: -4.877136707305908
    7. '<|end|>' → logprob: -5.502136707305908
    8. '#' (adapté à ' #') → logprob: -5.627136707305908
    9. ')' → logprob: -5.877136707305908
    10. ' on' → logprob: -6.002136707305908

Token 826: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35400643944740295
    2. '       ' → logprob: -2.10400652885437
    3. ' on' → logprob: -2.35400652885437
    4. '    ' → logprob: -3.60400652885437
    5. ' for' → logprob: -3.72900652885437
    6. ' #' → logprob: -4.229006290435791
    7. '#' → logprob: -5.479006290435791
    8. 'for' → logprob: -6.354006290435791
    9. ' if' → logprob: -6.604006290435791
    10. ',' → logprob: -7.104006290435791

Token 827: ' Pour' (ID: 13931)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6208508610725403
    2. '#' → logprob: -2.6208508014678955
    3. ' for' → logprob: -2.8708508014678955
    4. 'On' → logprob: -3.2458508014678955
    5. ' On' → logprob: -3.2458508014678955
    6. 'for' → logprob: -3.3708508014678955
    7. ' time' → logprob: -3.4958508014678955
    8. ' #' → logprob: -3.4958508014678955
    9. ' cost' → logprob: -3.7458508014678955
    10. 'on' → logprob: -3.9958508014678955

Token 828: ' couper' (ID: 135212)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5652458667755127
    2. 'cut' → logprob: -1.9402458667755127
    3. 'i' → logprob: -2.0652458667755127
    4. ' chaque' → logprob: -2.6902458667755127
    5. ' cut' → logprob: -4.190245628356934
    6. ' each' → logprob: -4.440245628356934
    7. 'each' → logprob: -4.565245628356934
    8. ' couper' → logprob: -4.690245628356934
    9. 'ni' → logprob: -5.065245628356934
    10. '(i' → logprob: -5.315245628356934

Token 829: ' ' (ID: 220)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5165885090827942
    2. ' (' → logprob: -2.2665884494781494
    3. ' les' → logprob: -2.6415884494781494
    4. ' i' → logprob: -3.5165884494781494
    5. ' la' → logprob: -3.6415884494781494
    6. 'les' → logprob: -3.8915884494781494
    7. ' un' → logprob: -3.8915884494781494
    8. ' ces' → logprob: -4.0165886878967285
    9. 'i' → logprob: -4.1415886878967285
    10. '(' → logprob: -4.2665886878967285

Token 830: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5915479063987732
    2. ' k' → logprob: -2.216547966003418
    3. 'i' → logprob: -2.341547966003418
    4. ' i' → logprob: -3.466547966003418
    5. 'trees' → logprob: -3.591547966003418
    6. ' la' → logprob: -4.216547966003418
    7. ' le' → logprob: -4.216547966003418
    8. '0' → logprob: -4.341547966003418
    9. '(i' → logprob: -4.591547966003418
    10. ' les' → logprob: -4.591547966003418

Token 831: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.31177741289138794
    2. '<|end|>' → logprob: -2.061777353286743
    3. ' ' → logprob: -2.561777353286743
    4. ' arbres' → logprob: -3.686777353286743
    5. ' unité' → logprob: -4.311777591705322
    6. ' )' → logprob: -4.811777591705322
    7. ')' → logprob: -5.436777591705322
    8. ' espace' → logprob: -6.561777591705322
    9. ' ),' → logprob: -6.561777591705322
    10. ',' → logprob: -6.686777591705322

Token 832: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06236177682876587
    2. ' ,' → logprob: -3.062361717224121
    3. 's' → logprob: -4.812361717224121
    4. ' on' → logprob: -6.687361717224121
    5. ' dans' → logprob: -7.312361717224121
    6. '<|end|>' → logprob: -7.562361717224121
    7. ' ' → logprob: -7.937361717224121
    8. '(s' → logprob: -7.937361717224121
    9. ',
' → logprob: -8.062361717224121
    10. '),' → logprob: -8.312361717224121

Token 833: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.788931131362915
    2. ' il' → logprob: -1.163931131362915
    3. 'A' → logprob: -2.413931131362915
    4. 'on' → logprob: -3.038931131362915
    5. ' le' → logprob: -3.913931131362915
    6. '   ' → logprob: -4.038930892944336
    7. 'cost' → logprob: -4.663930892944336
    8. ' A' → logprob: -5.163930892944336
    9. ' ' → logprob: -5.288930892944336
    10. ' coût' → logprob: -5.413930892944336

Token 834: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.30718404054641724
    2. ' devra' → logprob: -2.0571839809417725
    3. ' must' → logprob: -3.4321839809417725
    4. 'for' → logprob: -3.8071839809417725
    5. 'do' → logprob: -4.182184219360352
    6. 'must' → logprob: -4.557184219360352
    7. ' peut' → logprob: -4.682184219360352
    8. ' )' → logprob: -4.807184219360352
    9. ')' → logprob: -4.932184219360352
    10. ' peux' → logprob: -5.807184219360352

Token 835: ' :
' (ID: 10039)
  Prédit: ' couper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.9725407958030701
    2. ' pouvoir' → logprob: -1.7225408554077148
    3. ' le' → logprob: -2.097540855407715
    4. ' se' → logprob: -2.222540855407715
    5. ' faire' → logprob: -3.597540855407715
    6. ' passer' → logprob: -3.722540855407715
    7. ' dé' → logprob: -3.972540855407715
    8. ' aller' → logprob: -4.097540855407715
    9. 'adj' → logprob: -4.472540855407715
    10. 's' → logprob: -4.597540855407715

Token 836: '   ' (ID: 271)
  Prédit: '                        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                        ' → logprob: -1.4470504522323608
    2. ' for' → logprob: -1.9470504522323608
    3. '                       ' → logprob: -1.9470504522323608
    4. '                ' → logprob: -2.5720505714416504
    5. '                    ' → logprob: -2.8220505714416504
    6. ' ' → logprob: -2.9470505714416504
    7. '    ' → logprob: -3.3220505714416504
    8. 'for' → logprob: -3.4470505714416504
    9. ' faire' → logprob: -3.5720505714416504
    10. ' #' → logprob: -3.8220505714416504

Token 837: ' #' (ID: 1069)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -1.284658432006836
    2. '#' (adapté à ' #') → logprob: -2.034658432006836
    3. '                        ' → logprob: -2.159658432006836
    4. ' for' → logprob: -2.284658432006836
    5. ' #' → logprob: -2.534658432006836
    6. '                    ' → logprob: -2.659658432006836
    7. '                ' → logprob: -2.659658432006836
    8. '                   ' → logprob: -3.659658432006836
    9. 'for' → logprob: -3.784658432006836
    10. ' ' → logprob: -3.784658432006836

Token 838: '  ' (ID: 256)
  Prédit: ' couper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couper' → logprob: -1.6520612239837646
    2. ' aller' → logprob: -1.9020612239837646
    3. ' pouvoir' → logprob: -2.4020612239837646
    4. ' se' → logprob: -2.5270612239837646
    5. '#' → logprob: -2.9020612239837646
    6. ' for' → logprob: -3.0270612239837646
    7. 'for' → logprob: -3.0270612239837646
    8. 'pass' → logprob: -3.5270612239837646
    9. 'faire' → logprob: -3.6520612239837646
    10. ' passer' → logprob: -4.027061462402344

Token 839: ' *' (ID: 425)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.9058653712272644
    2. ' passer' → logprob: -2.405865430831909
    3. 'pass' → logprob: -2.530865430831909
    4. ' aller' → logprob: -2.905865430831909
    5. 'aller' → logprob: -3.030865430831909
    6. ' être' → logprob: -3.405865430831909
    7. ' couper' → logprob: -3.655865430831909
    8. 'se' → logprob: -3.780865430831909
    9. ' mettre' → logprob: -4.28086519241333
    10. 'desc' → logprob: -4.28086519241333

Token 840: ' être' (ID: 9104)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3625984787940979
    2. ' se' → logprob: -2.237598419189453
    3. 'être' → logprob: -2.362598419189453
    4. 'p' → logprob: -4.237598419189453
    5. 's' → logprob: -4.237598419189453
    6. 'aller' → logprob: -4.237598419189453
    7. 'acc' → logprob: -4.737598419189453
    8. ' être' → logprob: -5.237598419189453
    9. 'atte' → logprob: -5.237598419189453
    10. 'arr' → logprob: -5.362598419189453

Token 841: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.0009419918060303
    2. 'sur' → logprob: -1.5009419918060303
    3. ' capable' → logprob: -1.8759419918060303
    4. 'adj' → logprob: -2.3759419918060303
    5. ' able' → logprob: -3.0009419918060303
    6. ' au' → logprob: -3.1259419918060303
    7. ' adjacent' → logprob: -3.2509419918060303
    8. ' à' → logprob: -5.250942230224609
    9. ' adj' → logprob: -5.375942230224609
    10. ' position' → logprob: -5.500942230224609

Token 842: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6342746019363403
    2. 'une' → logprob: -0.7592746019363403
    3. ''une' → logprob: -7.134274482727051
    4. 'a' → logprob: -8.38427448272705
    5. 'au' → logprob: -8.88427448272705
    6. ' ' → logprob: -9.13427448272705
    7. ' a' → logprob: -9.38427448272705
    8. '   ' → logprob: -9.88427448272705
    9. '```' → logprob: -9.88427448272705
    10. 'la' → logprob: -10.50927448272705

Token 843: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.525304913520813
    2. 'case' → logprob: -0.900304913520813
    3. 'adj' → logprob: -6.900304794311523
    4. ' adjacent' → logprob: -6.900304794311523
    5. ' ' → logprob: -10.150304794311523
    6. 'vo' → logprob: -10.400304794311523
    7. ' adj' → logprob: -11.025304794311523
    8. ' cases' → logprob: -11.150304794311523
    9. ' cellule' → logprob: -11.275304794311523
    10. 'cases' → logprob: -11.775304794311523

Token 844: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.88824862241745
    2. ' vo' → logprob: -1.8882486820220947
    3. 'adj' → logprob: -2.0132486820220947
    4. ' vide' → logprob: -2.2632486820220947
    5. 'vide' → logprob: -2.8882486820220947
    6. 'vo' → logprob: -2.8882486820220947
    7. ' sans' → logprob: -2.8882486820220947
    8. ' vois' → logprob: -4.013248443603516
    9. 'sans' → logprob: -5.638248443603516
    10. ' adjacent' → logprob: -5.888248443603516

Token 845: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.00358522217720747
    2. '   ' → logprob: -6.253585338592529
    3. 'ac' → logprob: -7.253585338592529
    4. 'oint' → logprob: -8.503584861755371
    5. '(' → logprob: -8.503584861755371
    6. '       ' → logprob: -9.003584861755371
    7. '               ' → logprob: -9.378584861755371
    8. ' (' → logprob: -10.378584861755371
    9. 'acé' → logprob: -10.503584861755371
    10. 'ent' → logprob: -10.503584861755371

Token 846: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.006559056229889393
    2. 'ente' → logprob: -5.131558895111084
    3. '(' → logprob: -8.131559371948242
    4. '   ' → logprob: -9.381559371948242
    5. '#' → logprob: -9.756559371948242
    6. ' (' → logprob: -10.506559371948242
    7. '(ent' → logprob: -10.756559371948242
    8. '[' → logprob: -10.881559371948242
    9. 'cent' → logprob: -11.256559371948242
    10. '((' → logprob: -11.381559371948242

Token 847: ' sans' (ID: 9828)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13089512288570404
    2. ',' → logprob: -2.7558951377868652
    3. '(' → logprob: -4.005895137786865
    4. '   ' → logprob: -4.380895137786865
    5. '(i' → logprob: -4.380895137786865
    6. '#' → logprob: -4.755895137786865
    7. ' à' → logprob: -6.755895137786865
    8. ' ,' → logprob: -7.380895137786865
    9. '                   ' → logprob: -7.505895137786865
    10. ',
' → logprob: -7.755895137786865

Token 848: ' arbre' (ID: 164180)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.021159039810299873
    2. 'ar' → logprob: -4.1461591720581055
    3. ' arbres' → logprob: -5.6461591720581055
    4. ' arbre' → logprob: -7.3961591720581055
    5. '_' → logprob: -7.8961591720581055
    6. '   ' → logprob: -8.771159172058105
    7. '_ar' → logprob: -9.021159172058105
    8. '#' → logprob: -9.146159172058105
    9. 'trees' → logprob: -10.271159172058105
    10. 'for' → logprob: -10.521159172058105

Token 849: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.41637706756591797
    2. ',' → logprob: -1.791377067565918
    3. '   ' → logprob: -2.791377067565918
    4. '                   ' → logprob: -3.166377067565918
    5. '#' → logprob: -3.666377067565918
    6. '(' → logprob: -4.416377067565918
    7. '.' → logprob: -4.791377067565918
    8. ')' → logprob: -5.041377067565918
    9. ',
' → logprob: -5.916377067565918
    10. '               ' → logprob: -6.291377067565918

Token 850: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44259384274482727
    2. ' )' → logprob: -1.8175938129425049
    3. ')
' → logprob: -2.442593812942505
    4. ' )
' → logprob: -2.567593812942505
    5. '),' → logprob: -4.067594051361084
    6. ' ),' → logprob: -4.942594051361084
    7. '#' → logprob: -6.442594051361084
    8. '),
' → logprob: -7.067594051361084
    9. ' ),
' → logprob: -7.442594051361084
    10. ' i' → logprob: -7.442594051361084

Token 851: ' pouvoir' (ID: 27197)
  Prédit: ' pouvoir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pouvoir' → logprob: -1.2206840515136719
    2. ' couper' → logprob: -1.3456840515136719
    3. ' accéder' → logprob: -1.9706840515136719
    4. 'cut' → logprob: -2.970684051513672
    5. ')' → logprob: -3.595684051513672
    6. ' se' → logprob: -3.720684051513672
    7. 'i' → logprob: -4.220684051513672
    8. 'appro' → logprob: -4.345684051513672
    9. 's' → logprob: -4.595684051513672
    10. ' déplacer' → logprob: -4.595684051513672

Token 852: ' couper' (ID: 135212)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9984229803085327
    2. ' couper' → logprob: -2.1234230995178223
    3. 'y' → logprob: -2.2484230995178223
    4. 'march' → logprob: -2.3734230995178223
    5. 'acc' → logprob: -2.4984230995178223
    6. 'cou' → logprob: -2.8734230995178223
    7. 'se' → logprob: -3.4984230995178223
    8. ' se' → logprob: -3.4984230995178223
    9. ' accéder' → logprob: -3.7484230995178223
    10. 's' → logprob: -4.123423099517822

Token 853: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5069878101348877
    2. '),' → logprob: -1.7569878101348877
    3. 'l' → logprob: -1.8819878101348877
    4. ' )' → logprob: -3.5069878101348877
    5. ' l' → logprob: -4.256987571716309
    6. ' ),' → logprob: -4.881987571716309
    7. ')
' → logprob: -5.131987571716309
    8. 'un' → logprob: -5.506987571716309
    9. 'les' → logprob: -5.881987571716309
    10. 'le' → logprob: -6.131987571716309

Token 854: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30540022253990173
    2. '   ' → logprob: -1.9304002523422241
    3. '                   ' → logprob: -2.4304001331329346
    4. ' #' → logprob: -4.930400371551514
    5. '           ' → logprob: -4.930400371551514
    6. '       ' → logprob: -5.180400371551514
    7. '               ' → logprob: -5.430400371551514
    8. ')' → logprob: -6.680400371551514
    9. ',' → logprob: -7.055400371551514
    10. '                       ' → logprob: -7.430400371551514

Token 855: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23017266392707825
    2. '#' (adapté à ' #') → logprob: -1.7301726341247559
    3. '       ' → logprob: -4.605172634124756
    4. '           ' → logprob: -5.105172634124756
    5. ' #' → logprob: -5.480172634124756
    6. '                   ' → logprob: -5.605172634124756
    7. '               ' → logprob: -6.355172634124756
    8. ' ' → logprob: -7.730172634124756
    9. ')' → logprob: -7.980172634124756
    10. ',' → logprob: -8.105173110961914

Token 856: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12003736197948456
    2. '   ' → logprob: -2.245037317276001
    3. ' #' → logprob: -5.12003755569458
    4. '       ' → logprob: -8.495037078857422
    5. '           ' → logprob: -8.620037078857422
    6. ' ' → logprob: -8.995037078857422
    7. '#
' → logprob: -9.120037078857422
    8. ')' → logprob: -9.120037078857422
    9. '               ' → logprob: -9.370037078857422
    10. '                   ' → logprob: -9.495037078857422

Token 857: ' *' (ID: 425)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4991793930530548
    2. ' ' → logprob: -1.8741793632507324
    3. '  ' → logprob: -2.2491793632507324
    4. '   ' → logprob: -2.3741793632507324
    5. ' #' → logprob: -3.9991793632507324
    6. '*' (adapté à ' *') → logprob: -4.499179363250732
    7. '
' → logprob: -6.124179363250732
    8. ' ' → logprob: -6.249179363250732
    9. '   
' → logprob: -7.124179363250732
    10. ' *' → logprob: -7.374179363250732

Token 858: ' couper' (ID: 135212)
  Prédit: ' multiplier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiplier' → logprob: -1.9517126083374023
    2. ' couper' → logprob: -1.9517126083374023
    3. '#' → logprob: -2.2017126083374023
    4. ' réduire' → logprob: -2.4517126083374023
    5. ' passer' → logprob: -2.7017126083374023
    6. 'cou' → logprob: -3.0767126083374023
    7. '   ' → logprob: -3.4517126083374023
    8. ' avoir' → logprob: -3.5767126083374023
    9. ' dimin' → logprob: -3.7017126083374023
    10. ' ' → logprob: -3.8267126083374023

Token 859: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7299284338951111
    2. '1' → logprob: -1.4799284934997559
    3. ' un' → logprob: -2.979928493499756
    4. ' une' → logprob: -2.979928493499756
    5. ' (' → logprob: -3.854928493499756
    6. ' =' → logprob: -3.979928493499756
    7. ' au' → logprob: -4.229928493499756
    8. '_' → logprob: -4.354928493499756
    9. ' les' → logprob: -4.354928493499756
    10. ' one' → logprob: -4.604928493499756

Token 860: ''ar' (ID: 54307)
  Prédit: ''ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ar' → logprob: -0.07921241223812103
    2. 'a' → logprob: -3.3292124271392822
    3. 'ar' → logprob: -3.7042124271392822
    4. ''ensemble' → logprob: -5.079212188720703
    5. 'e' → logprob: -5.829212188720703
    6. ' arbre' → logprob: -6.454212188720703
    7. ''' → logprob: -6.829212188720703
    8. '’ar' → logprob: -7.329212188720703
    9. '1' → logprob: -7.454212188720703
    10. 'es' → logprob: -7.579212188720703

Token 861: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.005487025715410709
    2. 'bres' → logprob: -5.255486965179443
    3. 'b' → logprob: -8.505487442016602
    4. 'br' → logprob: -11.255487442016602
    5. 'Bre' → logprob: -11.630487442016602
    6. ' bre' → logprob: -12.130487442016602
    7. 'r' → logprob: -12.380487442016602
    8. 'e' → logprob: -12.755487442016602
    9. 'be' → logprob: -12.880487442016602
    10. 'BRE' → logprob: -12.880487442016602

Token 862: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.82798832654953
    2. '   ' → logprob: -1.4529883861541748
    3. '(s' → logprob: -2.077988386154175
    4. '       ' → logprob: -2.702988386154175
    5. '           ' → logprob: -3.202988386154175
    6. '
' → logprob: -3.702988386154175
    7. '               ' → logprob: -4.202988147735596
    8. '#' → logprob: -4.327988147735596
    9. '                   ' → logprob: -4.452988147735596
    10. ' s' → logprob: -4.827988147735596

Token 863: '1' (ID: 16)
  Prédit: ' donc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.9081576466560364
    2. '1' → logprob: -1.6581575870513916
    3. ' )' → logprob: -2.1581575870513916
    4. ')' → logprob: -2.1581575870513916
    5. ' ce' → logprob: -3.6581575870513916
    6. ' )
' → logprob: -3.7831575870513916
    7. ' le' → logprob: -4.408157825469971
    8. ')
' → logprob: -4.658157825469971
    9. ' for' → logprob: -4.783157825469971
    10. ' ' → logprob: -5.033157825469971

Token 864: ' minute' (ID: 12434)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48000574111938477
    2. ' )' → logprob: -1.3550057411193848
    3. '
' → logprob: -2.4800057411193848
    4. ' +' → logprob: -5.105005741119385
    5. '\n' → logprob: -5.230005741119385
    6. ')
' → logprob: -5.230005741119385
    7. ' )
' → logprob: -5.355005741119385
    8. ' 
' → logprob: -5.355005741119385
    9. '+' → logprob: -5.730005741119385
    10. ' ),' → logprob: -6.230005741119385

Token 865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02418345771729946
    2. ')
' → logprob: -4.27418327331543
    3. '\n' → logprob: -4.77418327331543
    4. ' )' → logprob: -7.89918327331543
    5. ')\' → logprob: -7.89918327331543
    6. '+' → logprob: -8.52418327331543
    7. '*' → logprob: -9.39918327331543
    8. '```' → logprob: -9.64918327331543
    9. '),' → logprob: -9.89918327331543
    10. '")' → logprob: -10.14918327331543

Token 866: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11533531546592712
    2. '#' → logprob: -2.86533522605896
    3. '       ' → logprob: -3.61533522605896
    4. '                   ' → logprob: -4.615335464477539
    5. '    
' → logprob: -5.740335464477539
    6. '           ' → logprob: -6.240335464477539
    7. '               ' → logprob: -6.490335464477539
    8. 'for' → logprob: -6.865335464477539
    9. '
' → logprob: -6.990335464477539
    10. ' #' → logprob: -7.115335464477539

Token 867: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06629974395036697
    2. '       ' → logprob: -3.6912996768951416
    3. '#' (adapté à ' #') → logprob: -3.8162996768951416
    4. '                   ' → logprob: -5.816299915313721
    5. 'for' → logprob: -5.941299915313721
    6. ')' → logprob: -6.066299915313721
    7. '    
' → logprob: -6.441299915313721
    8. ' for' → logprob: -6.441299915313721
    9. '           ' → logprob: -6.566299915313721
    10. '               ' → logprob: -6.816299915313721

Token 868: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04977547377347946
    2. '#' → logprob: -3.4247753620147705
    3. ' #' → logprob: -5.17477560043335
    4. ' for' → logprob: -5.54977560043335
    5. 'for' → logprob: -6.17477560043335
    6. '       ' → logprob: -6.79977560043335
    7. '
' → logprob: -6.79977560043335
    8. '    
' → logprob: -7.04977560043335
    9. ' 
' → logprob: -8.799775123596191
    10. '  ' → logprob: -8.924775123596191

Token 869: ' *' (ID: 425)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1687699258327484
    2. ' ' → logprob: -2.2937698364257812
    3. '  ' → logprob: -3.9187698364257812
    4. ' #' → logprob: -4.168769836425781
    5. '   ' → logprob: -4.668769836425781
    6. '
' → logprob: -6.168769836425781
    7. '*' (adapté à ' *') → logprob: -6.668769836425781
    8. '   
' → logprob: -6.918769836425781
    9. '       ' → logprob: -7.043769836425781
    10. '  
' → logprob: -7.293769836425781

Token 870: ' ram' (ID: 20920)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.239871859550476
    2. '#' → logprob: -1.989871859550476
    3. 'for' → logprob: -2.6148719787597656
    4. ' A' → logprob: -2.7398719787597656
    5. 'cou' → logprob: -2.7398719787597656
    6. 'dé' → logprob: -3.1148719787597656
    7. 'desc' → logprob: -3.1148719787597656
    8. 'de' → logprob: -3.3648719787597656
    9. 'd' → logprob: -3.6148719787597656
    10. '   ' → logprob: -3.9898719787597656

Token 871: 'ener' (ID: 944)
  Prédit: 'asser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asser' → logprob: -0.04335552081465721
    2. 'ener' → logprob: -3.1683554649353027
    3. 'ass' → logprob: -8.043355941772461
    4. 'per' → logprob: -11.168355941772461
    5. 'aser' → logprob: -12.168355941772461
    6. 'asse' → logprob: -12.418355941772461
    7. 'assage' → logprob: -12.668355941772461
    8. 'm' → logprob: -13.293355941772461
    9. 'er' → logprob: -13.293355941772461
    10. 'assar' → logprob: -13.918355941772461

Token 872: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.3541454076766968
    2. ' le' → logprob: -1.3541454076766968
    3. ' l' → logprob: -1.6041454076766968
    4. ' la' → logprob: -2.4791455268859863
    5. ' ' → logprob: -3.2291455268859863
    6. ' un' → logprob: -3.3541455268859863
    7. ' les' → logprob: -3.9791455268859863
    8. 'l' → logprob: -4.104145526885986
    9. ' à' → logprob: -4.104145526885986
    10. 'ar' → logprob: -4.479145526885986

Token 873: ''ar' (ID: 54307)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6403214931488037
    2. 'e' → logprob: -1.6403214931488037
    3. 'es' → logprob: -1.7653214931488037
    4. ''ar' → logprob: -3.0153214931488037
    5. 'ar' → logprob: -3.1403214931488037
    6. 'er' → logprob: -5.515321731567383
    7. 'à' → logprob: -6.265321731567383
    8. 'A' → logprob: -6.515321731567383
    9. ' a' → logprob: -6.765321731567383
    10. 'ui' → logprob: -6.890321731567383

Token 874: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.09822331368923187
    2. 'bres' → logprob: -2.5982232093811035
    3. 'm' → logprob: -4.7232232093811035
    4. 'b' → logprob: -5.4732232093811035
    5. 'r' → logprob: -5.5982232093811035
    6. 'be' → logprob: -7.2232232093811035
    7. 'bor' → logprob: -8.223223686218262
    8. 't' → logprob: -8.348223686218262
    9. 'e' → logprob: -8.598223686218262
    10. 'br' → logprob: -9.098223686218262

Token 875: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.47356927394866943
    2. 'l' → logprob: -1.4735692739486694
    3. 'une' → logprob: -2.348569393157959
    4. 'un' → logprob: -3.348569393157959
    5. 'main' → logprob: -5.598569393157959
    6. ' une' → logprob: -5.598569393157959
    7. ' la' → logprob: -5.848569393157959
    8. '   ' → logprob: -7.223569393157959
    9. 'distance' → logprob: -7.348569393157959
    10. 'sa' → logprob: -7.598569393157959

Token 877: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.6410216093063354
    2. 'main' → logprob: -0.8910216093063354
    3. 'vo' → logprob: -4.266021728515625
    4. ' case' → logprob: -4.766021728515625
    5. 'position' → logprob: -4.766021728515625
    6. ' main' → logprob: -5.266021728515625
    7. 'for' → logprob: -6.266021728515625
    8. 'distance' → logprob: -6.391021728515625
    9. 'voie' → logprob: -6.516021728515625
    10. 'queue' → logprob: -6.766021728515625

Token 878: ' usine' (ID: 124673)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.8840162754058838
    2. 'vide' → logprob: -1.8840162754058838
    3. ' sans' → logprob: -2.009016275405884
    4. ' (' → logprob: -2.009016275405884
    5. 'adj' → logprob: -2.259016275405884
    6. ' adj' → logprob: -2.259016275405884
    7. '(' → logprob: -3.009016275405884
    8. '   ' → logprob: -3.634016275405884
    9. ' vide' → logprob: -3.759016275405884
    10. ' vo' → logprob: -3.759016275405884

Token 879: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10791409015655518
    2. '
' → logprob: -2.6079139709472656
    3. '    
' → logprob: -4.732913970947266
    4. '<|end|>' → logprob: -5.232913970947266
    5. ')' → logprob: -5.482913970947266
    6. ' 
' → logprob: -6.482913970947266
    7. ')
' → logprob: -6.482913970947266
    8. '       ' → logprob: -6.482913970947266
    9. '#' → logprob: -6.857913970947266
    10. ' (' → logprob: -6.982913970947266

Token 880: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12055210024118423
    2. '1' → logprob: -3.4955520629882812
    3. ' ' → logprob: -3.6205520629882812
    4. '#' → logprob: -3.8705520629882812
    5. ')' → logprob: -4.995552062988281
    6. '   ' → logprob: -5.120552062988281
    7. ' (' → logprob: -5.370552062988281
    8. 'i' → logprob: -5.620552062988281
    9. ' i' → logprob: -5.745552062988281
    10. ' #' → logprob: -5.870552062988281

Token 881: ',' (ID: 11)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.1579742133617401
    2. ')' → logprob: -2.2829742431640625
    3. ' minute' → logprob: -3.2829742431640625
    4. 'minute' → logprob: -5.6579742431640625
    5. ' +' → logprob: -6.9079742431640625
    6. ' ' → logprob: -7.5329742431640625
    7. ' )
' → logprob: -7.7829742431640625
    8. ' plus' → logprob: -8.532974243164062
    9. ' space' → logprob: -8.782974243164062
    10. ' 
' → logprob: -9.032974243164062

Token 882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02677893079817295
    2. '0' → logprob: -4.276778697967529
    3. ' ' → logprob: -4.401778697967529
    4. ')' → logprob: -8.401779174804688
    5. ' )' → logprob: -11.276779174804688
    6. '   ' → logprob: -11.401779174804688
    7. 'j' → logprob: -11.776779174804688
    8. ')
' → logprob: -12.151779174804688
    9. ',' → logprob: -12.776779174804688
    10. ' j' → logprob: -13.026779174804688

Token 883: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016251911874860525
    2. ')
' → logprob: -7.251625061035156
    3. ' )' → logprob: -8.501625061035156
    4. '   ' → logprob: -8.751625061035156
    5. '))' → logprob: -9.001625061035156
    6. '),' → logprob: -9.001625061035156
    7. '0' → logprob: -9.501625061035156
    8. ')\' → logprob: -10.251625061035156
    9. ')+' → logprob: -10.501625061035156
    10. ')`' → logprob: -10.501625061035156

Token 884: ' en' (ID: 469)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.880279004573822
    2. '   ' → logprob: -1.1302790641784668
    3. ')' → logprob: -1.7552790641784668
    4. ')
' → logprob: -3.130279064178467
    5. '    
' → logprob: -3.630279064178467
    6. '#' → logprob: -5.380279064178467
    7. '<|end|>' → logprob: -5.880279064178467
    8. '\' → logprob: -6.255279064178467
    9. ' 
' → logprob: -6.255279064178467
    10. '       ' → logprob: -6.380279064178467

Token 885: ' se' (ID: 458)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.4147199392318726
    2. 'pas' → logprob: -1.7897199392318726
    3. '1' → logprob: -2.164720058441162
    4. ' ' → logprob: -2.914720058441162
    5. 'march' → logprob: -3.164720058441162
    6. ' main' → logprob: -3.414720058441162
    7. 'distance' → logprob: -3.539720058441162
    8. ' distance' → logprob: -3.664720058441162
    9. 'au' → logprob: -3.789720058441162
    10. ' mains' → logprob: -4.039720058441162

Token 886: ' dé' (ID: 2393)
  Prédit: ' dé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dé' → logprob: -0.36330851912498474
    2. 'dé' → logprob: -1.2383085489273071
    3. 'd' → logprob: -4.738308429718018
    4. ' déplac' → logprob: -5.738308429718018
    5. 'de' → logprob: -6.738308429718018
    6. ' d' → logprob: -7.238308429718018
    7. '   ' → logprob: -8.363308906555176
    8. 'm' → logprob: -8.988308906555176
    9. ' ' → logprob: -9.113308906555176
    10. ' déplacer' → logprob: -9.238308906555176

Token 887: 'pla' (ID: 24939)
  Prédit: 'pla'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pla' → logprob: -0.10349210351705551
    2. 'plac' → logprob: -2.478492021560669
    3. 'placement' → logprob: -5.603492259979248
    4. '#' → logprob: -5.978492259979248
    5. '```' → logprob: -6.103492259979248
    6. 'pl' → logprob: -7.103492259979248
    7. 'place' → logprob: -7.228492259979248
    8. '__' → logprob: -7.228492259979248
    9. 'Pla' → logprob: -7.728492259979248
    10. '``' → logprob: -7.853492259979248

Token 888: 'çant' (ID: 78714)
  Prédit: 'çant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'çant' → logprob: -0.01229630596935749
    2. 'ç' → logprob: -4.512296199798584
    3. 'c' → logprob: -6.887296199798584
    4. 'cement' → logprob: -9.387296676635742
    5. 'cer' → logprob: -10.262296676635742
    6. '   ' → logprob: -11.137296676635742
    7. 'ça' → logprob: -11.137296676635742
    8. 'pla' → logprob: -11.387296676635742
    9. 'cant' → logprob: -11.387296676635742
    10. 'chant' → logprob: -11.762296676635742

Token 889: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39522436261177063
    2. ' )' → logprob: -1.3952243328094482
    3. ' (' → logprob: -3.7702243328094482
    4. ',' → logprob: -4.645224571228027
    5. '(' → logprob: -4.895224571228027
    6. ' ,' → logprob: -5.145224571228027
    7. 's' → logprob: -5.145224571228027
    8. ' sur' → logprob: -5.770224571228027
    9. '   ' → logprob: -6.020224571228027
    10. ' ' → logprob: -6.145224571228027

Token 890: 'distance' (ID: 40614)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.185067892074585
    2. ' dist' → logprob: -1.435067892074585
    3. 'dist' → logprob: -1.435067892074585
    4. ')' → logprob: -1.685067892074585
    5. '1' → logprob: -3.685067892074585
    6. '0' → logprob: -6.310068130493164
    7. ' ' → logprob: -6.435068130493164
    8. 'distance' → logprob: -7.810068130493164
    9. 's' → logprob: -7.935068130493164
    10. ' dans' → logprob: -8.560068130493164

Token 891: ' entre' (ID: 3853)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.9370626211166382
    2. '[i' → logprob: -1.3120626211166382
    3. ' +' → logprob: -1.8120626211166382
    4. '+' → logprob: -2.3120627403259277
    5. 'from' → logprob: -3.5620627403259277
    6. ')' → logprob: -3.5620627403259277
    7. '   ' → logprob: -5.187062740325928
    8. ' )' → logprob: -5.687062740325928
    9. '[' → logprob: -5.937062740325928
    10. '_' → logprob: -6.312062740325928

Token 892: ' case' (ID: 1890)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.521507740020752
    2. 'i' → logprob: -2.146507740020752
    3. '0' → logprob: -2.271507740020752
    4. ' (' → logprob: -3.146507740020752
    5. 'l' → logprob: -3.271507740020752
    6. '(i' → logprob: -3.396507740020752
    7. 'la' → logprob: -3.771507740020752
    8. ' i' → logprob: -4.521507740020752
    9. ' la' → logprob: -5.021507740020752
    10. 'ni' → logprob: -5.396507740020752

Token 893: ' usine' (ID: 124673)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5360187888145447
    2. 'i' → logprob: -1.4110188484191895
    3. '[i' → logprob: -3.0360188484191895
    4. ')' → logprob: -3.7860188484191895
    5. ' i' → logprob: -3.7860188484191895
    6. ',i' → logprob: -3.7860188484191895
    7. ',' → logprob: -3.9110188484191895
    8. ' (' → logprob: -4.5360188484191895
    9. ' ,' → logprob: -5.2860188484191895
    10. ' )' → logprob: -5.2860188484191895

Token 894: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6113724112510681
    2. 'et' → logprob: -1.611372470855713
    3. ' et' → logprob: -2.361372470855713
    4. ')' → logprob: -3.111372470855713
    5. '[i' → logprob: -3.736372470855713
    6. ' ,' → logprob: -4.236372470855713
    7. '(' → logprob: -4.361372470855713
    8. '+' → logprob: -4.361372470855713
    9. '   ' → logprob: -4.486372470855713
    10. ',i' → logprob: -4.611372470855713

Token 895: ' coupe' (ID: 71780)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4374736547470093
    2. ' (' → logprob: -2.312473773956299
    3. 'case' → logprob: -2.562473773956299
    4. '(' → logprob: -2.812473773956299
    5. 'la' → logprob: -3.062473773956299
    6. ' la' → logprob: -3.187473773956299
    7. 'i' → logprob: -4.937473773956299
    8. ' case' → logprob: -4.937473773956299
    9. 'l' → logprob: -5.437473773956299
    10. ' i' → logprob: -6.062473773956299

Token 896: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6616536378860474
    2. 'ment' → logprob: -1.6616536378860474
    3. 'ur' → logprob: -2.036653518676758
    4. 'r' → logprob: -2.036653518676758
    5. 'e' → logprob: -2.536653518676758
    6. 'd' → logprob: -2.786653518676758
    7. '_case' → logprob: -2.786653518676758
    8. '(i' → logprob: -3.786653518676758
    9. '   ' → logprob: -4.286653518676758
    10. 'i' → logprob: -4.286653518676758

Token 897: '2' (ID: 17)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6274246573448181
    2. 'r' → logprob: -2.127424716949463
    3. ')' → logprob: -2.502424716949463
    4. 'e' → logprob: -2.627424716949463
    5. 'ur' → logprob: -3.002424716949463
    6. 'ment' → logprob: -3.877424716949463
    7. 'case' → logprob: -4.002424716949463
    8. ',' → logprob: -4.502424716949463
    9. 'adj' → logprob: -4.502424716949463
    10. 'tte' → logprob: -5.002424716949463

Token 898: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010061689652502537
    2. ' )' → logprob: -5.885061740875244
    3. ')+' → logprob: -6.010061740875244
    4. ')*' → logprob: -6.510061740875244
    5. ')
' → logprob: -7.010061740875244
    6. '+' → logprob: -8.010061264038086
    7. ')**' → logprob: -8.260061264038086
    8. ')*(' → logprob: -8.885061264038086
    9. '*' → logprob: -8.885061264038086
    10. ')-' → logprob: -9.135061264038086

Token 899: ' aller' (ID: 18383)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08742454648017883
    2. ' )' → logprob: -2.5874245166778564
    3. ')\' → logprob: -6.2124247550964355
    4. '   ' → logprob: -6.4624247550964355
    5. ')
' → logprob: -6.5874247550964355
    6. ' )
' → logprob: -7.2124247550964355
    7. '#' → logprob: -7.2124247550964355
    8. ' 
' → logprob: -8.087424278259277
    9. '\n' → logprob: -8.337424278259277
    10. ' ' → logprob: -8.462424278259277

Token 900: ' et' (ID: 859)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5800085067749023
    2. ' +' → logprob: -0.8300085067749023
    3. ' plus' → logprob: -6.580008506774902
    4. 'plus' → logprob: -7.330008506774902
    5. ')' → logprob: -7.455008506774902
    6. ' et' → logprob: -7.955008506774902
    7. '-' → logprob: -8.330008506774902
    8. '   ' → logprob: -8.580008506774902
    9. ')+' → logprob: -9.205008506774902
    10. ' -' → logprob: -9.455008506774902

Token 901: ' retour' (ID: 30714)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.00465476093813777
    2. ' retour' → logprob: -5.379654884338379
    3. '
' → logprob: -10.754654884338379
    4. 're' → logprob: -12.004654884338379
    5. 'return' → logprob: -13.004654884338379
    6. '```' → logprob: -13.254654884338379
    7. 'Retour' → logprob: -14.254654884338379
    8. ' ' → logprob: -14.629654884338379
    9. '   ' → logprob: -15.004654884338379
    10. 'r' → logprob: -15.129654884338379

Token 902: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007686601020395756
    2. ')
' → logprob: -5.507686614990234
    3. '*' → logprob: -6.632686614990234
    4. '   ' → logprob: -7.257686614990234
    5. ')*' → logprob: -8.132686614990234
    6. '#' → logprob: -9.007686614990234
    7. '*)' → logprob: -9.257686614990234
    8. ',' → logprob: -9.257686614990234
    9. ' )' → logprob: -9.257686614990234
    10. ')
' → logprob: -9.382686614990234

Token 903: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02788483537733555
    2. '
' → logprob: -4.5278849601745605
    3. '    
' → logprob: -4.9028849601745605
    4. '#' → logprob: -5.9028849601745605
    5. ')' → logprob: -5.9028849601745605
    6. ')
' → logprob: -7.0278849601745605
    7. 'for' → logprob: -7.5278849601745605
    8. '       ' → logprob: -7.6528849601745605
    9. ' for' → logprob: -8.277884483337402
    10. 'import' → logprob: -8.527884483337402

Token 904: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.62058424949646
    2. ')
' → logprob: -1.87058424949646
    3. '\n' → logprob: -2.62058424949646
    4. ')' → logprob: -2.74558424949646
    5. ' 
' → logprob: -3.12058424949646
    6. '    
' → logprob: -3.37058424949646
    7. '\' → logprob: -3.49558424949646
    8. '
' → logprob: -3.74558424949646
    9. '#' → logprob: -4.870584487915039
    10. '       ' → logprob: -5.120584487915039

Token 905: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011328973807394505
    2. '#' → logprob: -5.386329174041748
    3. '    
' → logprob: -6.386329174041748
    4. ' 
' → logprob: -6.511329174041748
    5. '\' → logprob: -6.761329174041748
    6. 'for' → logprob: -7.886329174041748
    7. ' \' → logprob: -7.886329174041748
    8. ' for' → logprob: -8.38632869720459
    9. '  
' → logprob: -8.63632869720459
    10. '   
' → logprob: -8.63632869720459

Token 906: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042146965861320496
    2. '#' (adapté à ' #') → logprob: -4.292147159576416
    3. 'for' → logprob: -4.667147159576416
    4. ' for' → logprob: -4.792147159576416
    5. '
' → logprob: -6.292147159576416
    6. '    
' → logprob: -6.667147159576416
    7. 'cut' → logprob: -6.792147159576416
    8. ' cut' → logprob: -6.917147159576416
    9. ' #' → logprob: -7.042147159576416
    10. '       ' → logprob: -7.542147159576416

Token 907: ' L' (ID: 451)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.39238792657852173
    2. '   ' → logprob: -1.892387866973877
    3. 'for' → logprob: -2.517387866973877
    4. 'max' → logprob: -2.642387866973877
    5. 'cut' → logprob: -5.267387866973877
    6. 'total' → logprob: -5.392387866973877
    7. 'time' → logprob: -5.892387866973877
    8. 'min' → logprob: -6.017387866973877
    9. '
' → logprob: -6.392387866973877
    10. 'cost' → logprob: -6.517387866973877

Token 908: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9080542325973511
    2. 'dist' → logprob: -1.783054232597351
    3. 'e' → logprob: -2.5330543518066406
    4. 'a' → logprob: -2.5330543518066406
    5. ''espace' → logprob: -3.0330543518066406
    6. ''' → logprob: -3.4080543518066406
    7. ' dist' → logprob: -3.5330543518066406
    8. ' #' → logprob: -3.9080543518066406
    9. 'es' → logprob: -4.283054351806641
    10. 'i' → logprob: -4.408054351806641

Token 909: 'én' (ID: 3289)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1922351121902466
    2. 'for' → logprob: -1.1922351121902466
    3. 'import' → logprob: -2.442234992980957
    4. ' for' → logprob: -3.192234992980957
    5. 'distance' → logprob: -3.692234992980957
    6. ''idée' → logprob: -3.817234992980957
    7. ''ensemble' → logprob: -3.817234992980957
    8. 'cost' → logprob: -4.192234992980957
    9. 'A' → logprob: -4.317234992980957
    10. ''import' → logprob: -4.442234992980957

Token 910: 'oncé' (ID: 59071)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8096086382865906
    2. '#' → logprob: -1.4346086978912354
    3. 't' → logprob: -1.5596086978912354
    4. 'oncé' → logprob: -3.5596086978912354
    5. 'def' → logprob: -3.6846086978912354
    6. 'space' → logprob: -4.934608459472656
    7. '_' → logprob: -5.059608459472656
    8. '#
' → logprob: -5.684608459472656
    9. 'e' → logprob: -5.809608459472656
    10. 'n' → logprob: -5.809608459472656

Token 911: ' précise' (ID: 95250)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6517225503921509
    2. '#' → logprob: -1.9017225503921509
    3. '   ' → logprob: -2.2767224311828613
    4. ' est' → logprob: -2.7767224311828613
    5. '.' → logprob: -3.2767224311828613
    6. ' continue' → logprob: -3.7767224311828613
    7. ')' → logprob: -3.7767224311828613
    8. '
' → logprob: -4.401722431182861
    9. '...' → logprob: -5.151722431182861
    10. ' continues' → logprob: -5.151722431182861

Token 912: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.798443078994751
    2. ':' → logprob: -0.923443078994751
    3. ' :' → logprob: -2.298443078994751
    4. ' ' → logprob: -4.548442840576172
    5. ' that' → logprob: -4.923442840576172
    6. ',' → logprob: -5.048442840576172
    7. ' ' → logprob: -5.548442840576172
    8. '...' → logprob: -5.673442840576172
    9. ' qu' → logprob: -5.673442840576172
    10. '.' → logprob: -5.798442840576172

Token 913: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.799467921257019
    2. ' la' → logprob: -1.799467921257019
    3. ' le' → logprob: -1.799467921257019
    4. ' l' → logprob: -2.4244680404663086
    5. 'pour' → logprob: -2.7994680404663086
    6. 'l' → logprob: -2.9244680404663086
    7. ' pour' → logprob: -2.9244680404663086
    8. ' on' → logprob: -3.2994680404663086
    9. ' les' → logprob: -3.4244680404663086
    10. 'on' → logprob: -3.7994680404663086

Token 914: ' coupe' (ID: 71780)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' case' → logprob: -1.503113865852356
    2. ' distance' → logprob: -1.503113865852356
    3. ' forêt' → logprob: -2.2531137466430664
    4. ' for' → logprob: -2.8781137466430664
    5. 'distance' → logprob: -3.3781137466430664
    6. ' #' → logprob: -3.5031137466430664
    7. '#' → logprob: -3.7531137466430664
    8. ' ' → logprob: -3.7531137466430664
    9. ' déplacement' → logprob: -3.7531137466430664
    10. ' solution' → logprob: -3.8781137466430664

Token 915: ' s' (ID: 265)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7002207636833191
    2. ' de' → logprob: -1.9502208232879639
    3. 's' → logprob: -2.450220823287964
    4. ' est' → logprob: -3.075220823287964
    5. 'ment' → logprob: -3.200220823287964
    6. ' d' → logprob: -3.450220823287964
    7. '#' → logprob: -3.575220823287964
    8. 'urs' → logprob: -3.825220823287964
    9. 'ur' → logprob: -4.200220584869385
    10. ' s' → logprob: -4.450220584869385

Token 916: ''effect' (ID: 198544)
  Prédit: ''effect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''effect' → logprob: -0.1814679503440857
    2. ''' → logprob: -2.3064680099487305
    3. 'e' → logprob: -4.3064680099487305
    4. 't' → logprob: -4.5564680099487305
    5. ''agit' → logprob: -4.5564680099487305
    6. 'ur' → logprob: -5.4314680099487305
    7. 'er' → logprob: -5.4314680099487305
    8. '')' → logprob: -5.5564680099487305
    9. '’effect' → logprob: -5.9314680099487305
    10. '#' → logprob: -6.6814680099487305

Token 917: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.02007346600294113
    2. 'u' → logprob: -4.770073413848877
    3. 'uer' → logprob: -5.270073413848877
    4. ' sur' → logprob: -6.270073413848877
    5. 'uent' → logprob: -7.270073413848877
    6. 'e' → logprob: -7.645073413848877
    7. 'uera' → logprob: -7.895073413848877
    8. '```' → logprob: -8.020073890686035
    9. '=' → logprob: -8.145073890686035
    10. 'sur' → logprob: -8.395073890686035

Token 918: ' à' (ID: 1221)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.5103976726531982
    2. ' uniquement' → logprob: -1.6353976726531982
    3. 'sur' → logprob: -1.8853976726531982
    4. ' à' → logprob: -4.635397911071777
    5. ' par' → logprob: -4.760397911071777
    6. ' au' → logprob: -5.010397911071777
    7. ' ' → logprob: -5.010397911071777
    8. ' dans' → logprob: -5.260397911071777
    9. ' seulement' → logprob: -6.385397911071777
    10. ' toujours' → logprob: -6.385397911071777

Token 919: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.4527678489685059
    2. 'c' → logprob: -1.5777678489685059
    3. 'l' → logprob: -1.8277678489685059
    4. 'la' → logprob: -2.077767848968506
    5. 'distance' → logprob: -2.577767848968506
    6. 'près' → logprob: -3.327767848968506
    7. 'cha' → logprob: -3.577767848968506
    8. 'un' → logprob: -3.702767848968506
    9. 'une' → logprob: -3.952767848968506
    10. '1' → logprob: -4.827767848968506

Token 920: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7111150622367859
    2. 'd' → logprob: -0.8361150622367859
    3. ' des' → logprob: -2.9611151218414307
    4. 'des' → logprob: -4.461114883422852
    5. ' de' → logprob: -5.086114883422852
    6. 'de' → logprob: -5.336114883422852
    7. '#' → logprob: -7.961114883422852
    8. 'adj' → logprob: -8.961114883422852
    9. ' ' → logprob: -9.086114883422852
    10. 'du' → logprob: -9.086114883422852

Token 921: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.2731229066848755
    2. 'une' → logprob: -1.5231229066848755
    3. ''un' → logprob: -4.898122787475586
    4. 'a' → logprob: -5.273122787475586
    5. 'la' → logprob: -6.023122787475586
    6. '#' → logprob: -6.523122787475586
    7. '’une' → logprob: -6.648122787475586
    8. ')' → logprob: -7.398122787475586
    9. ''' → logprob: -7.398122787475586
    10. 'e' → logprob: -7.898122787475586

Token 922: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.25299200415611267
    2. 'case' → logprob: -1.502992033958435
    3. '#' → logprob: -8.002991676330566
    4. ' #' → logprob: -8.377991676330566
    5. ' position' → logprob: -8.627991676330566
    6. ' ' → logprob: -9.627991676330566
    7. 'position' → logprob: -10.377991676330566
    8. ' ' → logprob: -10.502991676330566
    9. 'vo' → logprob: -10.627991676330566
    10. ' place' → logprob: -10.877991676330566

Token 923: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4132479727268219
    2. ' adj' → logprob: -2.038248062133789
    3. 'vo' → logprob: -2.788248062133789
    4. 'vide' → logprob: -3.038248062133789
    5. ' sans' → logprob: -3.288248062133789
    6. ' vide' → logprob: -3.663248062133789
    7. 'sans' → logprob: -4.038248062133789
    8. ' vo' → logprob: -4.663248062133789
    9. '   ' → logprob: -7.163248062133789
    10. ' ' → logprob: -7.225748062133789

Token 924: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.01312398910522461
    2. 'acent' → logprob: -5.013123989105225
    3. '   ' → logprob: -6.263123989105225
    4. 'cente' → logprob: -7.263123989105225
    5. 'a' → logprob: -7.388123989105225
    6. 'acency' → logprob: -8.263124465942383
    7. '       ' → logprob: -8.388124465942383
    8. '#' → logprob: -8.638124465942383
    9. '```' → logprob: -8.763124465942383
    10. 'ace' → logprob: -8.888124465942383

Token 925: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.006353550590574741
    2. 'ent' → logprob: -5.131353378295898
    3. '   ' → logprob: -9.006353378295898
    4. 'e' → logprob: -9.506353378295898
    5. '#' → logprob: -9.756353378295898
    6. '
' → logprob: -10.256353378295898
    7. 'entes' → logprob: -11.256353378295898
    8. '(' → logprob: -11.506353378295898
    9. 'ENTE' → logprob: -11.881353378295898
    10. 'ante' → logprob: -11.881353378295898

Token 926: ' sans' (ID: 9828)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.110247254371643
    2. ' à' → logprob: -1.110247254371643
    3. ')' → logprob: -1.985247254371643
    4. '   ' → logprob: -2.3602471351623535
    5. ' (' → logprob: -3.9852471351623535
    6. ' aux' → logprob: -4.2352471351623535
    7. 'e' → logprob: -4.6102471351623535
    8. 'à' → logprob: -4.8602471351623535
    9. ' )' → logprob: -4.8602471351623535
    10. ' ,' → logprob: -4.9852471351623535

Token 927: ' arbre' (ID: 164180)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.40253332257270813
    2. 'arb' → logprob: -1.1525332927703857
    3. ' arbre' → logprob: -4.777533531188965
    4. ' arbres' → logprob: -5.777533531188965
    5. ''ar' → logprob: -6.652533531188965
    6. '#' → logprob: -7.402533531188965
    7. '   ' → logprob: -7.527533531188965
    8. '_' → logprob: -7.652533531188965
    9. '```' → logprob: -8.027533531188965
    10. '_ar' → logprob: -8.277533531188965

Token 928: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2535810470581055
    2. '   ' → logprob: -1.3785810470581055
    3. ')' → logprob: -1.8785810470581055
    4. '               ' → logprob: -2.7535810470581055
    5. '                   ' → logprob: -3.2535810470581055
    6. '.' → logprob: -3.5035810470581055
    7. '       ' → logprob: -3.6285810470581055
    8. ',
' → logprob: -3.8785810470581055
    9. 'adj' → logprob: -3.8785810470581055
    10. '           ' → logprob: -4.5035810470581055

Token 929: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0385928712785244
    2. '
' → logprob: -4.03859281539917
    3. '#' → logprob: -5.03859281539917
    4. 'for' → logprob: -5.03859281539917
    5. '    
' → logprob: -5.28859281539917
    6. '       ' → logprob: -7.41359281539917
    7. ' for' → logprob: -7.66359281539917
    8. 'import' → logprob: -8.913593292236328
    9. '#
' → logprob: -9.038593292236328
    10. ' 
' → logprob: -9.288593292236328

Token 930: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02682408317923546
    2. '    
' → logprob: -4.151823997497559
    3. ' 
' → logprob: -5.526823997497559
    4. '
' → logprob: -5.776823997497559
    5. '  
' → logprob: -6.526823997497559
    6. '#' (adapté à ' #') → logprob: -7.526823997497559
    7. 'for' → logprob: -7.901823997497559
    8. '   
' → logprob: -8.401823997497559
    9. ' for' → logprob: -8.651823997497559
    10. ' ' → logprob: -8.776823997497559

Token 931: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043436672538518906
    2. ' 
' → logprob: -4.543436527252197
    3. '                   ' → logprob: -4.543436527252197
    4. '       ' → logprob: -5.043436527252197
    5. '    
' → logprob: -5.918436527252197
    6. 'for' → logprob: -6.293436527252197
    7. ' ' → logprob: -6.293436527252197
    8. '               ' → logprob: -6.293436527252197
    9. ' for' → logprob: -6.668436527252197
    10. '           ' → logprob: -6.918436527252197

Token 932: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1288743019104004
    2. ' for' → logprob: -1.6288743019104004
    3. ' on' → logprob: -2.1288743019104004
    4. ' pour' → logprob: -2.1288743019104004
    5. ' il' → logprob: -2.3788743019104004
    6. 'pour' → logprob: -2.8788743019104004
    7. 'on' → logprob: -3.1288743019104004
    8. 'il' → logprob: -3.7538743019104004
    9. '   ' → logprob: -4.3788743019104
    10. '#' → logprob: -6.2538743019104

Token 933: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.41260355710983276
    2. ' doit' → logprob: -1.7876036167144775
    3. 'pe' → logprob: -2.2876036167144775
    4. ' peut' → logprob: -3.0376036167144775
    5. '#' → logprob: -4.412603378295898
    6. ' peux' → logprob: -6.287603378295898
    7. ' do' → logprob: -6.537603378295898
    8. ' devra' → logprob: -6.537603378295898
    9. ' #' → logprob: -7.037603378295898
    10. ' ' → logprob: -7.662603378295898

Token 934: ' pouvoir' (ID: 27197)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.9516130685806274
    2. 'tr' → logprob: -1.4516130685806274
    3. 'être' → logprob: -2.576612949371338
    4. ' vérifier' → logprob: -3.701612949371338
    5. 'p' → logprob: -3.826612949371338
    6. 'calcul' → logprob: -3.951612949371338
    7. 'faire' → logprob: -4.076612949371338
    8. ' continuer' → logprob: -4.076612949371338
    9. ' trouver' → logprob: -4.076612949371338
    10. ' être' → logprob: -4.201612949371338

Token 935: ' atteindre' (ID: 95734)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.8842018246650696
    2. 'être' → logprob: -1.7592017650604248
    3. 'atte' → logprob: -1.8842017650604248
    4. ' se' → logprob: -2.134201765060425
    5. 'tr' → logprob: -3.759201765060425
    6. ' être' → logprob: -3.759201765060425
    7. 'acc' → logprob: -4.009202003479004
    8. ' accéder' → logprob: -4.759202003479004
    9. 'aller' → logprob: -4.884202003479004
    10. ' atteindre' → logprob: -5.009202003479004

Token 936: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.49172133207321167
    2. 'une' → logprob: -1.4917213916778564
    3. ' cette' → logprob: -2.3667213916778564
    4. ' la' → logprob: -3.8667213916778564
    5. ' une' → logprob: -3.9917213916778564
    6. 'au' → logprob: -4.366721153259277
    7. 'c' → logprob: -4.866721153259277
    8. 'cet' → logprob: -5.991721153259277
    9. 'a' → logprob: -6.366721153259277
    10. ' au' → logprob: -6.491721153259277

Token 937: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.027480265125632286
    2. 'case' → logprob: -3.652480363845825
    3. 'adj' → logprob: -8.152480125427246
    4. ' adj' → logprob: -8.402480125427246
    5. ' ' → logprob: -9.152480125427246
    6. ' ' → logprob: -9.402480125427246
    7. ' position' → logprob: -9.402480125427246
    8. ' space' → logprob: -9.652480125427246
    9. ' adjacent' → logprob: -9.777480125427246
    10. ' cellule' → logprob: -10.152480125427246

Token 938: ' vide' (ID: 21835)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.7559912204742432
    2. 'adj' → logprob: -1.5059912204742432
    3. ' vide' → logprob: -1.6309912204742432
    4. 'vide' → logprob: -2.880991220474243
    5. ' sans' → logprob: -3.505991220474243
    6. 'vo' → logprob: -4.505990982055664
    7. 'sans' → logprob: -5.130990982055664
    8. ' vo' → logprob: -5.380990982055664
    9. ' ' → logprob: -6.880990982055664
    10. ' ' → logprob: -7.380990982055664

Token 939: ' vo' (ID: 778)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.01992226392030716
    2. ' adj' → logprob: -4.269922256469727
    3. ',' → logprob: -5.644922256469727
    4. 'vo' → logprob: -7.144922256469727
    5. ' adjacent' → logprob: -7.394922256469727
    6. '_adj' → logprob: -8.644922256469727
    7. '   ' → logprob: -9.519922256469727
    8. ')' → logprob: -9.769922256469727
    9. '```' → logprob: -9.894922256469727
    10. 'au' → logprob: -10.019922256469727

Token 940: 'isine' (ID: 24412)
  Prédit: 'isine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isine' → logprob: -0.012239903211593628
    2. 'is' → logprob: -4.887239933013916
    3. 'isin' → logprob: -5.387239933013916
    4. '
' → logprob: -11.137239456176758
    5. 'isins' → logprob: -11.637239456176758
    6. 'ine' → logprob: -12.262239456176758
    7. 'isie' → logprob: -12.637239456176758
    8. 's' → logprob: -13.012239456176758
    9. 'isi' → logprob: -13.387239456176758
    10. 't' → logprob: -13.637239456176758

Token 941: ' de' (ID: 334)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9682734608650208
    2. 'd' → logprob: -1.468273401260376
    3. ' d' → logprob: -1.968273401260376
    4. '(' → logprob: -2.968273401260376
    5. '   ' → logprob: -3.093273401260376
    6. 'à' → logprob: -3.593273401260376
    7. ',' → logprob: -3.593273401260376
    8. 's' → logprob: -3.718273401260376
    9. '```' → logprob: -3.718273401260376
    10. 'adj' → logprob: -4.843273639678955

Token 942: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4481984078884125
    2. 'l' → logprob: -1.8231984376907349
    3. 'la' → logprob: -2.1981983184814453
    4. 'c' → logprob: -2.8231983184814453
    5. '(' → logprob: -4.073198318481445
    6. 'cet' → logprob: -5.198198318481445
    7. 'i' → logprob: -5.948198318481445
    8. '(l' → logprob: -6.948198318481445
    9. 'ces' → logprob: -6.948198318481445
    10. 'celle' → logprob: -7.198198318481445

Token 943: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0003074566484428942
    2. ' i' → logprob: -8.125307083129883
    3. ')' → logprob: -12.625307083129883
    4. ')i' → logprob: -12.625307083129883
    5. '(i' → logprob: -13.125307083129883
    6. '   ' → logprob: -14.500307083129883
    7. ',i' → logprob: -14.500307083129883
    8. '
' → logprob: -14.750307083129883
    9. '           ' → logprob: -15.125307083129883
    10. '                   ' → logprob: -15.500307083129883

Token 944: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.007626626640558243
    2. ',' → logprob: -4.882626533508301
    3. ' ,' → logprob: -11.6326265335083
    4. ',i' → logprob: -11.7576265335083
    5. '-' → logprob: -14.5076265335083
    6. '+' → logprob: -14.7576265335083
    7. 's' → logprob: -14.8826265335083
    8. 'j' → logprob: -14.8826265335083
    9. '   ' → logprob: -15.0076265335083
    10. '
' → logprob: -15.1326265335083

Token 945: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0057021924294531345
    2. ')
' → logprob: -5.505702018737793
    3. ').' → logprob: -7.130702018737793
    4. ' )' → logprob: -7.630702018737793
    5. '),' → logprob: -8.380702018737793
    6. ' pour' → logprob: -10.755702018737793
    7. ',' → logprob: -11.005702018737793
    8. ').
' → logprob: -11.130702018737793
    9. ' )
' → logprob: -11.755702018737793
    10. '   ' → logprob: -11.755702018737793

Token 946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13081710040569305
    2. '
' → logprob: -2.630817174911499
    3. '    
' → logprob: -3.880817174911499
    4. 'for' → logprob: -4.38081693649292
    5. '#' → logprob: -5.13081693649292
    6. ' for' → logprob: -5.25581693649292
    7. ' 
' → logprob: -6.38081693649292
    8. '       ' → logprob: -7.00581693649292
    9. '\' → logprob: -7.13081693649292
    10. '\n' → logprob: -7.38081693649292

Token 947: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2636614739894867
    2. ' 
' → logprob: -1.888661503791809
    3. ' for' → logprob: -3.5136613845825195
    4. '    
' → logprob: -4.3886613845825195
    5. 'for' → logprob: -4.7636613845825195
    6. '\' → logprob: -4.7636613845825195
    7. '
' → logprob: -5.5136613845825195
    8. '\n' → logprob: -5.5136613845825195
    9. '#' → logprob: -6.1386613845825195
    10. '       ' → logprob: -6.3886613845825195

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008756973780691624
    2. 'for' → logprob: -5.1337571144104
    3. ' for' → logprob: -6.2587571144104
    4. '    
' → logprob: -7.3837571144104
    5. '
' → logprob: -9.383756637573242
    6. '#' → logprob: -10.008756637573242
    7. '```' → logprob: -10.133756637573242
    8. '       ' → logprob: -10.758756637573242
    9. 'import' → logprob: -11.133756637573242
    10. ' 
' → logprob: -11.258756637573242

Token 949: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09363460540771484
    2. 'for' → logprob: -2.718634605407715
    3. '
' → logprob: -4.843634605407715
    4. '    
' → logprob: -5.093634605407715
    5. ' for' → logprob: -5.343634605407715
    6. '#' (adapté à ' #') → logprob: -5.718634605407715
    7. 'total' → logprob: -7.843634605407715
    8. '  
' → logprob: -8.843634605407715
    9. 'cut' → logprob: -8.968634605407715
    10. 'time' → logprob: -9.468634605407715

Token 950: ' De' (ID: 1516)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1771990060806274
    2. '#' → logprob: -1.5521990060806274
    3. 'min' → logprob: -1.8021990060806274
    4. 'total' → logprob: -2.177198886871338
    5. 'best' → logprob: -2.802198886871338
    6. '   ' → logprob: -3.052198886871338
    7. 'max' → logprob: -3.427198886871338
    8. 'result' → logprob: -3.677198886871338
    9. 'cut' → logprob: -4.677198886871338
    10. 'time' → logprob: -5.177198886871338

Token 951: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.21940959990024567
    2. ' plus' → logprob: -2.719409704208374
    3. 'f' → logprob: -3.094409704208374
    4. 'for' → logprob: -3.219409704208374
    5. '#' → logprob: -3.594409704208374
    6. 'la' → logprob: -5.344409465789795
    7. 'fait' → logprob: -5.719409465789795
    8. 'l' → logprob: -6.844409465789795
    9. ' la' → logprob: -6.844409465789795
    10. 'but' → logprob: -6.969409465789795

Token 952: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3835650086402893
    2. ',' → logprob: -1.2585649490356445
    3. '#' → logprob: -4.1335649490356445
    4. ':' → logprob: -5.3835649490356445
    5. ' ,' → logprob: -5.3835649490356445
    6. 'for' → logprob: -6.1335649490356445
    7. ' for' → logprob: -7.0085649490356445
    8. '    
' → logprob: -7.3835649490356445
    9. 'import' → logprob: -7.5085649490356445
    10. ' if' → logprob: -7.5085649490356445

Token 953: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.0928339958190918
    2. 'on' → logprob: -1.3428339958190918
    3. ' il' → logprob: -2.342833995819092
    4. 'for' → logprob: -2.342833995819092
    5. '#' → logprob: -2.467833995819092
    6. 'pour' → logprob: -3.717833995819092
    7. 'il' → logprob: -3.967833995819092
    8. ' pour' → logprob: -3.967833995819092
    9. ' for' → logprob: -4.217833995819092
    10. ' la' → logprob: -4.342833995819092

Token 954: ' doit' (ID: 21822)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.28416168689727783
    2. 'continue' → logprob: -2.0341615676879883
    3. 'pe' → logprob: -2.7841615676879883
    4. '#' → logprob: -4.534161567687988
    5. 'dev' → logprob: -4.784161567687988
    6. 'for' → logprob: -4.784161567687988
    7. ' doit' → logprob: -4.784161567687988
    8. 'must' → logprob: -5.159161567687988
    9. 's' → logprob: -6.159161567687988
    10. 'va' → logprob: -6.534161567687988

Token 955: ' couper' (ID: 135212)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.14280299842357635
    2. 'v' → logprob: -2.7678029537200928
    3. 'contin' → logprob: -4.142803192138672
    4. 'pour' → logprob: -4.767803192138672
    5. 's' → logprob: -5.392803192138672
    6. 'a' → logprob: -5.517803192138672
    7. 'par' → logprob: -5.767803192138672
    8. 'penser' → logprob: -5.767803192138672
    9. 'calcul' → logprob: -5.892803192138672
    10. 'prendre' → logprob: -6.017803192138672

Token 956: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7829486727714539
    2. ' les' → logprob: -1.9079487323760986
    3. 'au' → logprob: -2.2829487323760986
    4. ' tous' → logprob: -2.2829487323760986
    5. ' au' → logprob: -2.6579487323760986
    6. 'le' → logprob: -3.5329487323760986
    7. 'l' → logprob: -4.0329484939575195
    8. 't' → logprob: -4.4079484939575195
    9. 's' → logprob: -4.6579484939575195
    10. ' le' → logprob: -4.7829484939575195

Token 957: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.22608453035354614
    2. ' les' → logprob: -1.6010844707489014
    3. 's' → logprob: -7.9760847091674805
    4. '#' → logprob: -9.47608470916748
    5. 'l' → logprob: -10.22608470916748
    6. ' arbres' → logprob: -10.47608470916748
    7. ' ceux' → logprob: -10.60108470916748
    8. 'es' → logprob: -10.85108470916748
    9. 'leurs' → logprob: -11.10108470916748
    10. ' ' → logprob: -11.35108470916748

Token 958: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.03507603704929352
    2. ' arbres' → logprob: -3.410076141357422
    3. 'ar' → logprob: -7.285076141357422
    4. 'cases' → logprob: -7.410076141357422
    5. '#' → logprob: -9.785076141357422
    6. 'trees' → logprob: -10.410076141357422
    7. 'for' → logprob: -12.160076141357422
    8. 'cas' → logprob: -12.535076141357422
    9. 'points' → logprob: -12.660076141357422
    10. 's' → logprob: -12.910076141357422

Token 959: ' qui' (ID: 2780)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.8951535224914551
    2. 'sur' → logprob: -1.770153522491455
    3. ' présents' → logprob: -2.270153522491455
    4. ',' → logprob: -3.020153522491455
    5. ' de' → logprob: -3.270153522491455
    6. 'dans' → logprob: -3.520153522491455
    7. ' adj' → logprob: -3.520153522491455
    8. ' dans' → logprob: -3.645153522491455
    9. ' voisins' → logprob: -3.770153522491455
    10. '.' → logprob: -3.895153522491455

Token 960: ' blo' (ID: 13098)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.7466599345207214
    2. 'ont' → logprob: -1.4966599941253662
    3. 'pe' → logprob: -2.246659994125366
    4. 'adj' → logprob: -2.996659994125366
    5. ' peuvent' → logprob: -3.746659994125366
    6. 'sur' → logprob: -3.996659994125366
    7. ' se' → logprob: -4.246659755706787
    8. 's' → logprob: -4.371659755706787
    9. 'se' → logprob: -4.371659755706787
    10. ' trouvent' → logprob: -4.996659755706787

Token 961: 'quent' (ID: 13238)
  Prédit: 'quent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quent' → logprob: -0.07327675074338913
    2. 'ent' → logprob: -2.8232767581939697
    3. 'uent' → logprob: -4.948276519775391
    4. 'aient' → logprob: -6.698276519775391
    5. 'nent' → logprob: -7.573276519775391
    6. '```' → logprob: -8.07327651977539
    7. 'lent' → logprob: -8.19827651977539
    8. '#' → logprob: -8.32327651977539
    9. 'tent' → logprob: -8.57327651977539
    10. 'dent' → logprob: -8.57327651977539

Token 962: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.32836538553237915
    2. 'l' → logprob: -1.5783653259277344
    3. ' le' → logprob: -3.3283653259277344
    4. ' l' → logprob: -3.9533653259277344
    5. 'la' → logprob: -4.328365325927734
    6. ' la' → logprob: -5.828365325927734
    7. 'un' → logprob: -6.703365325927734
    8. 'les' → logprob: -7.953365325927734
    9. ' un' → logprob: -8.828365325927734
    10. 'leur' → logprob: -8.953365325927734

Token 963: ' passage' (ID: 26368)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.2871897220611572
    2. 'pass' → logprob: -1.4121897220611572
    3. ' chemin' → logprob: -6.037189483642578
    4. ' passage' → logprob: -7.537189483642578
    5. 'possible' → logprob: -7.537189483642578
    6. 'plus' → logprob: -7.537189483642578
    7. 'acc' → logprob: -8.287189483642578
    8. 'p' → logprob: -8.787189483642578
    9. 'connexion' → logprob: -8.787189483642578
    10. 'pas' → logprob: -8.912189483642578

Token 964: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05687446892261505
    2. '.' → logprob: -3.4318745136260986
    3. ',' → logprob: -4.3068742752075195
    4. '    
' → logprob: -6.1818742752075195
    5. '#' → logprob: -6.8068742752075195
    6. '.
' → logprob: -6.9318742752075195
    7. ' afin' → logprob: -7.1818742752075195
    8. ',
' → logprob: -7.3068742752075195
    9. ':' → logprob: -7.8068742752075195
    10. ' et' → logprob: -7.8068742752075195

Token 965: ' chemin' (ID: 45035)
  Prédit: ' chemin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chemin' → logprob: -0.17630475759506226
    2. 'che' → logprob: -2.051304817199707
    3. 'pass' → logprob: -4.926304817199707
    4. ' passage' → logprob: -5.051304817199707
    5. 'sent' → logprob: -5.676304817199707
    6. 's' → logprob: -6.551304817199707
    7. 'path' → logprob: -6.801304817199707
    8. 'chef' → logprob: -7.301304817199707
    9. 'route' → logprob: -7.426304817199707
    10. 'for' → logprob: -7.426304817199707

Token 966: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03268774226307869
    2. '
' → logprob: -4.032687664031982
    3. '    
' → logprob: -5.282687664031982
    4. '.
' → logprob: -6.532687664031982
    5. '#' → logprob: -6.907687664031982
    6. '.' → logprob: -7.032687664031982
    7. 'for' → logprob: -7.157687664031982
    8. 'from' → logprob: -7.157687664031982
    9. 'def' → logprob: -7.282687664031982
    10. ',' → logprob: -7.782687664031982

Token 967: ' nord' (ID: 35057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8821284174919128
    2. 'l' → logprob: -1.0071284770965576
    3. 'les' → logprob: -2.3821284770965576
    4. 'le' → logprob: -2.6321284770965576
    5. 'la' → logprob: -3.3821284770965576
    6. '0' → logprob: -4.1321282386779785
    7. ' (' → logprob: -6.6321282386779785
    8. 'lac' → logprob: -7.0071282386779785
    9. 'us' → logprob: -7.2571282386779785
    10. 'start' → logprob: -7.5071282386779785

Token 968: '-ou' (ID: 192984)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6441589593887329
    2. '-ou' → logprob: -0.8941589593887329
    3. '-' → logprob: -3.0191588401794434
    4. '   ' → logprob: -4.894158840179443
    5. ',-' → logprob: -6.394158840179443
    6. ' -' → logprob: -6.769158840179443
    7. 'ou' → logprob: -6.769158840179443
    8. '```' → logprob: -6.894158840179443
    9. '-o' → logprob: -7.269158840179443
    10. ',
' → logprob: -7.769158840179443

Token 969: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0026508092414587736
    2. 'e' → logprob: -6.377650737762451
    3. 'et' → logprob: -9.00265121459961
    4. '```' → logprob: -9.00265121459961
    5. 'uest' → logprob: -9.00265121459961
    6. '
' → logprob: -9.37765121459961
    7. 'es' → logprob: -9.37765121459961
    8. '#' → logprob: -9.87765121459961
    9. '   ' → logprob: -10.50265121459961
    10. 'vest' → logprob: -10.75265121459961

Token 970: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.3326849341392517
    2. ' et' → logprob: -1.5826849937438965
    3. '   ' → logprob: -2.9576849937438965
    4. '(' → logprob: -4.3326849937438965
    5. ',' → logprob: -4.8326849937438965
    6. ' (' → logprob: -6.2076849937438965
    7. ' ' → logprob: -6.9576849937438965
    8. '#' → logprob: -7.9576849937438965
    9. ')' → logprob: -7.9576849937438965
    10. ' and' → logprob: -8.207684516906738

Token 971: ' sud' (ID: 10332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002013813704252243
    2. ' sud' → logprob: -6.252013683319092
    3. 'south' → logprob: -10.25201416015625
    4. '
' → logprob: -10.62701416015625
    5. '#' → logprob: -11.62701416015625
    6. 'le' → logprob: -12.00201416015625
    7. '```' → logprob: -12.75201416015625
    8. 'sudo' → logprob: -12.75201416015625
    9. '   ' → logprob: -14.00201416015625
    10. ' ' → logprob: -14.50201416015625

Token 972: '-est' (ID: 49572)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.503206193447113
    2. '-' → logprob: -1.0032062530517578
    3. '-est' → logprob: -4.878206253051758
    4. '#' → logprob: -5.003206253051758
    5. ',' → logprob: -5.253206253051758
    6. ')' → logprob: -5.753206253051758
    7. '0' → logprob: -5.878206253051758
    8. '-ou' → logprob: -7.253206253051758
    9. '       ' → logprob: -7.628206253051758
    10. '    ' → logprob: -7.753206253051758

Token 973: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030415616929531097
    2. '
' → logprob: -3.7804155349731445
    3. '    
' → logprob: -5.6554155349731445
    4. 'def' → logprob: -6.9054155349731445
    5. '#' → logprob: -7.5304155349731445
    6. 'import' → logprob: -8.155415534973145
    7. ' if' → logprob: -8.280415534973145
    8. 'if' → logprob: -8.405415534973145
    9. ':' → logprob: -8.905415534973145
    10. 'for' → logprob: -9.155415534973145

Token 974: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016995379701256752
    2. '#' → logprob: -4.766995429992676
    3. '
' → logprob: -5.766995429992676
    4. '    
' → logprob: -6.516995429992676
    5. 'for' → logprob: -6.766995429992676
    6. ' for' → logprob: -7.141995429992676
    7. 'def' → logprob: -8.016995429992676
    8. 'max' → logprob: -8.516995429992676
    9. 'import' → logprob: -8.641995429992676
    10. ' #' → logprob: -9.016995429992676

Token 975: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03922351449728012
    2. '
' → logprob: -3.6642234325408936
    3. 'for' → logprob: -5.539223670959473
    4. '    
' → logprob: -5.539223670959473
    5. '#' → logprob: -6.289223670959473
    6. ' for' → logprob: -6.914223670959473
    7. ' 
' → logprob: -7.914223670959473
    8. 'if' → logprob: -8.289223670959473
    9. ' if' → logprob: -8.289223670959473
    10. 'import' → logprob: -8.414223670959473

Token 976: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021614011377096176
    2. '#' → logprob: -4.396614074707031
    3. '    
' → logprob: -5.646614074707031
    4. 'if' → logprob: -6.646614074707031
    5. '
' → logprob: -6.646614074707031
    6. 'import' → logprob: -7.271614074707031
    7. 'for' → logprob: -7.521614074707031
    8. 'distance' → logprob: -7.896614074707031
    9. 'max' → logprob: -8.146614074707031
    10. 'total' → logprob: -8.646614074707031

Token 977: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22655120491981506
    2. '#' (adapté à ' #') → logprob: -1.7265511751174927
    3. 'for' → logprob: -4.976551055908203
    4. 'max' → logprob: -5.476551055908203
    5. 'total' → logprob: -5.476551055908203
    6. '    
' → logprob: -6.101551055908203
    7. 'import' → logprob: -6.726551055908203
    8. ' #' → logprob: -6.851551055908203
    9. '
' → logprob: -6.851551055908203
    10. ' for' → logprob: -7.226551055908203

Token 978: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9268275499343872
    2. '   ' → logprob: -1.0518275499343872
    3. 'min' → logprob: -2.0518274307250977
    4. 'total' → logprob: -3.0518274307250977
    5. 'max' → logprob: -4.051827430725098
    6. 'best' → logprob: -4.426827430725098
    7. 'answer' → logprob: -4.801827430725098
    8. 'result' → logprob: -5.051827430725098
    9. 'cut' → logprob: -5.301827430725098
    10. 'res' → logprob: -5.426827430725098

Token 979: ' cela' (ID: 17542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.822762668132782
    2. ' i' → logprob: -1.3227627277374268
    3. '#' → logprob: -2.5727627277374268
    4. ' continuer' → logprob: -2.5727627277374268
    5. 'cut' → logprob: -3.3227627277374268
    6. ' chaque' → logprob: -3.6977627277374268
    7. ' #' → logprob: -4.572762489318848
    8. ' terminer' → logprob: -4.572762489318848
    9. ' finir' → logprob: -4.947762489318848
    10. ' cela' → logprob: -5.447762489318848

Token 980: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6222767233848572
    2. ',' → logprob: -0.8722767233848572
    3. '#' → logprob: -3.497276782989502
    4. ':' → logprob: -4.747276782989502
    5. ' on' → logprob: -6.497276782989502
    6. 'import' → logprob: -6.622276782989502
    7. 'for' → logprob: -7.747276782989502
    8. 'on' → logprob: -7.872276782989502
    9. '    
' → logprob: -8.122276306152344
    10. ' ,' → logprob: -8.247276306152344

Token 981: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25125521421432495
    2. '   ' → logprob: -2.2512552738189697
    3. 'for' → logprob: -3.0012552738189697
    4. 'import' → logprob: -3.2512552738189697
    5. ' for' → logprob: -4.501255035400391
    6. ' #' → logprob: -4.501255035400391
    7. ' on' → logprob: -6.751255035400391
    8. 'reachable' → logprob: -7.001255035400391
    9. '    
' → logprob: -7.501255035400391
    10. 'from' → logprob: -7.751255035400391

Token 982: ' va' (ID: 3423)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8092948794364929
    2. 'for' → logprob: -1.4342949390411377
    3. '#' → logprob: -2.0592949390411377
    4. ' continue' → logprob: -2.9342949390411377
    5. 'import' → logprob: -3.6842949390411377
    6. ' #' → logprob: -4.059294700622559
    7. 'vais' → logprob: -4.059294700622559
    8. ' for' → logprob: -4.309294700622559
    9. '   ' → logprob: -4.434294700622559
    10. 'do' → logprob: -4.559294700622559

Token 983: ' calcul' (ID: 7559)
  Prédit: 'chercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chercher' → logprob: -0.8765214681625366
    2. 'contin' → logprob: -1.5015214681625366
    3. 'par' → logprob: -2.751521587371826
    4. 'import' → logprob: -2.751521587371826
    5. ' parcour' → logprob: -3.001521587371826
    6. 'tr' → logprob: -3.126521587371826
    7. 'an' → logprob: -3.876521587371826
    8. 'v' → logprob: -4.001521587371826
    9. 'identifier' → logprob: -4.626521587371826
    10. 'calcul' → logprob: -4.626521587371826

Token 984: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.080551378428936
    2. 'ate' → logprob: -2.5805513858795166
    3. 'ter' → logprob: -7.2055511474609375
    4. 'ater' → logprob: -7.3305511474609375
    5. 'late' → logprob: -8.830551147460938
    6. 'e' → logprob: -10.580551147460938
    7. 'def' → logprob: -10.955551147460938
    8. 'ateur' → logprob: -11.455551147460938
    9. 'culate' → logprob: -11.705551147460938
    10. 'ler' → logprob: -12.455551147460938

Token 985: ',' (ID: 11)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pour' → logprob: -1.5813653469085693
    2. 'les' → logprob: -1.7063653469085693
    3. 'for' → logprob: -1.9563653469085693
    4. ',' → logprob: -2.0813653469085693
    5. 'le' → logprob: -2.0813653469085693
    6. 'la' → logprob: -3.2063653469085693
    7. ' les' → logprob: -3.3313653469085693
    8. ' pour' → logprob: -3.4563653469085693
    9. ' la' → logprob: -3.5813653469085693
    10. 'une' → logprob: -3.7063653469085693

Token 986: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4854414761066437
    2. ' for' → logprob: -1.3604414463043213
    3. '<|end|>' → logprob: -3.1104414463043213
    4. 'import' → logprob: -4.3604416847229
    5. '   ' → logprob: -4.3604416847229
    6. ' pour' → logprob: -4.4854416847229
    7. 'pour' → logprob: -4.6104416847229
    8. '#' → logprob: -5.1104416847229
    9. '    ' → logprob: -5.2354416847229
    10. ' la' → logprob: -5.8604416847229

Token 987: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.005406642332673073
    2. 'i' → logprob: -5.880406856536865
    3. ' i' → logprob: -6.755406856536865
    4. 'cha' → logprob: -7.505406856536865
    5. ' ' → logprob: -8.255406379699707
    6. 'each' → logprob: -8.380406379699707
    7. ' each' → logprob: -9.505406379699707
    8. 't' → logprob: -9.630406379699707
    9. '   ' → logprob: -10.005406379699707
    10. 'every' → logprob: -10.630406379699707

Token 988: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.6771985292434692
    2. ' i' → logprob: -1.4271985292434692
    3. 'case' → logprob: -1.9271985292434692
    4. 'i' → logprob: -3.4271984100341797
    5. ' (' → logprob: -3.6771984100341797
    6. '(i' → logprob: -4.05219841003418
    7. ' arbre' → logprob: -4.05219841003418
    8. ' cellule' → logprob: -6.05219841003418
    9. ' position' → logprob: -6.30219841003418
    10. '(' → logprob: -6.42719841003418

Token 989: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13024933636188507
    2. '(i' → logprob: -2.380249261856079
    3. ',' → logprob: -4.880249500274658
    4. '(' → logprob: -5.380249500274658
    5. '   ' → logprob: -5.630249500274658
    6. 'cont' → logprob: -6.005249500274658
    7. ' contenant' → logprob: -6.005249500274658
    8. ' ' → logprob: -6.630249500274658
    9. '```' → logprob: -7.005249500274658
    10. ' ,' → logprob: -7.005249500274658

Token 990: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14087754487991333
    2. ' i' → logprob: -2.1408774852752686
    3. '(i' → logprob: -5.015877723693848
    4. ' (' → logprob: -6.140877723693848
    5. ')' → logprob: -6.640877723693848
    6. '   ' → logprob: -7.015877723693848
    7. ' ' → logprob: -7.265877723693848
    8. '0' → logprob: -8.140877723693848
    9. '(' → logprob: -8.765877723693848
    10. '[i' → logprob: -8.765877723693848

Token 991: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.12720559537410736
    2. ',' → logprob: -2.1272056102752686
    3. ' ,' → logprob: -9.002205848693848
    4. '   ' → logprob: -10.377205848693848
    5. ',n' → logprob: -10.627205848693848
    6. ',y' → logprob: -11.127205848693848
    7. '
' → logprob: -11.377205848693848
    8. ',en' → logprob: -11.377205848693848
    9. ',i' → logprob: -11.627205848693848
    10. '),' → logprob: -11.877205848693848

Token 992: ')' (ID: 8)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.17340026795864105
    2. ')' → logprob: -2.2984001636505127
    3. '):
' → logprob: -3.1734001636505127
    4. '):' → logprob: -5.173400402069092
    5. ',' → logprob: -5.423400402069092
    6. '   ' → logprob: -5.548400402069092
    7. ' ),' → logprob: -7.923400402069092
    8. ' où' → logprob: -7.923400402069092
    9. ' contenant' → logprob: -8.173399925231934
    10. '),
' → logprob: -8.423399925231934

Token 993: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0406697988510132
    2. ',' → logprob: -1.2906697988510132
    3. ' contenant' → logprob: -2.4156699180603027
    4. ' avec' → logprob: -2.6656699180603027
    5. ' où' → logprob: -2.9156699180603027
    6. ' qui' → logprob: -3.2906699180603027
    7. 'où' → logprob: -3.7906699180603027
    8. ' containing' → logprob: -3.9156699180603027
    9. ':' → logprob: -4.415669918060303
    10. 'cont' → logprob: -4.415669918060303

Token 994: ' des' (ID: 731)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.21952682733535767
    2. 'A' → logprob: -2.219526767730713
    3. ' arbres' → logprob: -2.719526767730713
    4. 'des' → logprob: -4.344526767730713
    5. 'ar' → logprob: -5.594526767730713
    6. ' des' → logprob: -6.094526767730713
    7. ' A' → logprob: -6.719526767730713
    8. '>' → logprob: -7.219526767730713
    9. 'trees' → logprob: -7.344526767730713
    10. '   ' → logprob: -7.469526767730713

Token 995: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.023347849026322365
    2. ' arbres' → logprob: -3.773347854614258
    3. 'ar' → logprob: -10.023347854614258
    4. '>' → logprob: -10.023347854614258
    5. 'trees' → logprob: -12.023347854614258
    6. '   ' → logprob: -13.023347854614258
    7. ' arb' → logprob: -13.273347854614258
    8. '0' → logprob: -13.898347854614258
    9. '#' → logprob: -14.023347854614258
    10. ' ' → logprob: -14.898347854614258

Token 996: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6366569995880127
    2. '>' → logprob: -2.0116569995880127
    3. '   ' → logprob: -2.1366569995880127
    4. ' >' → logprob: -2.8866569995880127
    5. ' (' → logprob: -3.2616569995880127
    6. ':' → logprob: -3.5116569995880127
    7. ':
' → logprob: -3.7616569995880127
    8. ' ,' → logprob: -4.886656761169434
    9. ' avec' → logprob: -5.136656761169434
    10. 'où' → logprob: -5.261656761169434

Token 997: ' le' (ID: 505)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -1.077488899230957
    2. ' if' → logprob: -1.452488899230957
    3. '#' → logprob: -2.452488899230957
    4. ' la' → logprob: -2.452488899230957
    5. ' #' → logprob: -3.202488899230957
    6. '   ' → logprob: -3.452488899230957
    7. ' les' → logprob: -3.452488899230957
    8. '    ' → logprob: -3.952488899230957
    9. ' ' → logprob: -4.202488899230957
    10. ' quelles' → logprob: -4.327488899230957

Token 998: ' nombre' (ID: 9733)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.9398951530456543
    2. ' minimum' → logprob: -1.5648951530456543
    3. 'min' → logprob: -1.6898951530456543
    4. ' minimal' → logprob: -2.9398951530456543
    5. ' min' → logprob: -3.6898951530456543
    6. 'possible' → logprob: -3.9398951530456543
    7. ' voisin' → logprob: -4.064895153045654
    8. 'plus' → logprob: -4.439895153045654
    9. ' coût' → logprob: -4.439895153045654
    10. 'c' → logprob: -4.814895153045654

Token 999: ' minimum' (ID: 11085)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8504981398582458
    2. ' d' → logprob: -1.4754981994628906
    3. '   ' → logprob: -2.6004981994628906
    4. '    ' → logprob: -3.1004981994628906
    5. 'd' → logprob: -3.3504981994628906
    6. '_' → logprob: -3.8504981994628906
    7. 'adj' → logprob: -3.8504981994628906
    8. 'de' → logprob: -4.100498199462891
    9. ' des' → logprob: -4.350498199462891
    10. '_de' → logprob: -4.975498199462891

Token 1000: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6574146151542664
    2. ' d' → logprob: -0.7824146151542664
    3. 'de' → logprob: -4.157414436340332
    4. 'd' → logprob: -6.157414436340332
    5. ' ' → logprob: -6.532414436340332
    6. '   ' → logprob: -6.657414436340332
    7. '    ' → logprob: -7.407414436340332
    8. ' des' → logprob: -7.532414436340332
    9. '       ' → logprob: -8.532414436340332
    10. ' possible' → logprob: -8.782414436340332

Token 1001: ' déplacements' (ID: 193957)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.14940398931503296
    2. 'steps' → logprob: -2.3994040489196777
    3. 'cou' → logprob: -3.6494040489196777
    4. ' pas' → logprob: -4.899404048919678
    5. 'cases' → logprob: -5.274404048919678
    6. 'minutes' → logprob: -5.524404048919678
    7. ' ' → logprob: -6.649404048919678
    8. 'm' → logprob: -7.524404048919678
    9. 'c' → logprob: -7.899404048919678
    10. 'vo' → logprob: -8.02440357208252

Token 1002: '
' (ID: 198)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.5297976732254028
    2. '    ' → logprob: -1.6547976732254028
    3. ' nécessaires' → logprob: -2.1547975540161133
    4. '   ' → logprob: -2.2797975540161133
    5. ' nécessaire' → logprob: -2.2797975540161133
    6. '+' → logprob: -3.6547975540161133
    7. ',' → logprob: -3.7797975540161133
    8. ' +' → logprob: -3.9047975540161133
    9. '                   ' → logprob: -3.9047975540161133
    10. 'sur' → logprob: -4.029797554016113

Token 1003: '   ' (ID: 271)
  Prédit: ' nécessaires'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaires' → logprob: -1.174222707748413
    2. '                   ' → logprob: -1.799222707748413
    3. '    ' → logprob: -2.299222707748413
    4. '+' → logprob: -2.549222707748413
    5. ',' → logprob: -2.924222707748413
    6. '   ' → logprob: -3.049222707748413
    7. ' nécessaire' → logprob: -3.049222707748413
    8. '                    ' → logprob: -3.424222707748413
    9. ' +' → logprob: -3.799222707748413
    10. 'pour' → logprob: -4.299222946166992

Token 1004: ' #' (ID: 1069)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.2681663036346436
    2. '   ' → logprob: -1.6431663036346436
    3. '                   ' → logprob: -2.2681663036346436
    4. ',' → logprob: -2.6431663036346436
    5. ' nécessaires' → logprob: -2.7681663036346436
    6. '+' → logprob: -2.8931663036346436
    7. ' +' → logprob: -3.3931663036346436
    8. ' nécessaire' → logprob: -3.6431663036346436
    9. ' à' → logprob: -3.7681663036346436
    10. '                    ' → logprob: -3.7681663036346436

Token 1005: ' aller' (ID: 18383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2101175785064697
    2. ' nécessaires' → logprob: -1.2101175785064697
    3. 'adj' → logprob: -2.7101175785064697
    4. ',' → logprob: -2.7101175785064697
    5. '+' → logprob: -2.8351175785064697
    6. ' et' → logprob: -3.3351175785064697
    7. ' nécessaire' → logprob: -3.5851175785064697
    8. 'et' → logprob: -3.5851175785064697
    9. 'sur' → logprob: -3.8351175785064697
    10. 'né' → logprob: -3.9601175785064697

Token 1006: '-ret' (ID: 104824)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.14161090552806854
    2. '-et' → logprob: -3.016610860824585
    3. ' et' → logprob: -3.266610860824585
    4. '-ret' → logprob: -3.266610860824585
    5. '-' → logprob: -6.016611099243164
    6. '   ' → logprob: -6.641611099243164
    7. 'ret' → logprob: -6.891611099243164
    8. '_et' → logprob: -7.891611099243164
    9. '+' → logprob: -7.891611099243164
    10. ',' → logprob: -8.266611099243164

Token 1007: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.053025852888822556
    2. 'out' → logprob: -3.178025960922241
    3. 'ourn' → logprob: -6.428025722503662
    4. 'urn' → logprob: -6.553025722503662
    5. 'ours' → logprob: -6.553025722503662
    6. 'o' → logprob: -7.178025722503662
    7. 'et' → logprob: -7.428025722503662
    8. 'ot' → logprob: -7.553025722503662
    9. '```' → logprob: -7.928025722503662
    10. 'ou' → logprob: -8.05302619934082

Token 1008: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2214716672897339
    2. ',' → logprob: -1.5964716672897339
    3. '   ' → logprob: -2.4714717864990234
    4. ' +' → logprob: -2.4714717864990234
    5. '+' → logprob: -2.8464717864990234
    6. ' )' → logprob: -3.2214717864990234
    7. ' et' → logprob: -3.2214717864990234
    8. ' (' → logprob: -3.7214717864990234
    9. ' plus' → logprob: -3.7214717864990234
    10. '*' → logprob: -3.9714717864990234

Token 1009: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6401851177215576
    2. 'dist' → logprob: -1.5151851177215576
    3. 'la' → logprob: -1.6401851177215576
    4. '0' → logprob: -3.6401851177215576
    5. '#' → logprob: -4.390185356140137
    6. '(' → logprob: -5.015185356140137
    7. ' la' → logprob: -5.515185356140137
    8. 'le' → logprob: -6.015185356140137
    9. ' dist' → logprob: -6.140185356140137
    10. ' l' → logprob: -6.265185356140137

Token 1010: ''us' (ID: 143210)
  Prédit: ''us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''us' → logprob: -0.10715796053409576
    2. 'us' → logprob: -3.2321579456329346
    3. '0' → logprob: -3.7321579456329346
    4. 'dist' → logprob: -4.732158184051514
    5. '(' → logprob: -4.857158184051514
    6. ''' → logprob: -4.982158184051514
    7. ''(' → logprob: -5.232158184051514
    8. 'a' → logprob: -5.732158184051514
    9. '[' → logprob: -6.232158184051514
    10. 'start' → logprob: -7.607158184051514

Token 1011: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.3406917154788971
    2. 'er' → logprob: -1.3406916856765747
    3. 'e' → logprob: -4.840691566467285
    4. 'ere' → logprob: -5.340691566467285
    5. 'age' → logprob: -5.590691566467285
    6. 'eur' → logprob: -6.590691566467285
    7. 'ère' → logprob: -6.715691566467285
    8. '#' → logprob: -6.840691566467285
    9. '(' → logprob: -7.090691566467285
    10. '```' → logprob: -7.215691566467285

Token 1012: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5966528654098511
    2. ',' → logprob: -0.9716528654098511
    3. ')' → logprob: -3.8466529846191406
    4. ' vers' → logprob: -4.721652984619141
    5. ' jusqu' → logprob: -5.346652984619141
    6. 'à' → logprob: -5.596652984619141
    7. ' et' → logprob: -5.846652984619141
    8. '#' → logprob: -5.971652984619141
    9. '+' → logprob: -6.221652984619141
    10. 'et' → logprob: -6.346652984619141

Token 1013: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6621891856193542
    2. 'la' → logprob: -1.287189245223999
    3. ' une' → logprob: -2.287189245223999
    4. ' la' → logprob: -2.412189245223999
    5. 'les' → logprob: -4.66218900680542
    6. 'l' → logprob: -5.53718900680542
    7. 'un' → logprob: -6.91218900680542
    8. 'le' → logprob: -6.91218900680542
    9. ' un' → logprob: -8.412189483642578
    10. ' les' → logprob: -8.537189483642578

Token 1014: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.5231742858886719
    2. 'case' → logprob: -0.8981742858886719
    3. 'vo' → logprob: -11.273174285888672
    4. '	case' → logprob: -11.648174285888672
    5. 'adj' → logprob: -11.773174285888672
    6. ' cellule' → logprob: -11.773174285888672
    7. '(case' → logprob: -12.773174285888672
    8. 'cases' → logprob: -12.898174285888672
    9. ' ' → logprob: -13.523174285888672
    10. ' cases' → logprob: -14.023174285888672

Token 1015: ' vide' (ID: 21835)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -1.3333344459533691
    2. 'vide' → logprob: -1.3333344459533691
    3. 'adj' → logprob: -1.4583344459533691
    4. ' vide' → logprob: -1.5833344459533691
    5. 'vo' → logprob: -3.958334445953369
    6. '_adj' → logprob: -5.833334445953369
    7. ' vo' → logprob: -6.083334445953369
    8. ' sans' → logprob: -6.708334445953369
    9. ' vois' → logprob: -6.708334445953369
    10. ',' → logprob: -7.083334445953369

Token 1016: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3235584497451782
    2. 'vo' → logprob: -2.0735583305358887
    3. ' adj' → logprob: -2.1985583305358887
    4. ' vo' → logprob: -4.323558330535889
    5. ',' → logprob: -4.948558330535889
    6. '_adj' → logprob: -5.073558330535889
    7. ')' → logprob: -6.073558330535889
    8. ' vois' → logprob: -6.573558330535889
    9. '(vo' → logprob: -6.823558330535889
    10. '_vo' → logprob: -6.948558330535889

Token 1017: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.00466093048453331
    2. 'cente' → logprob: -6.0046610832214355
    3. 'acent' → logprob: -6.2546610832214355
    4. '   ' → logprob: -9.754660606384277
    5. 'a' → logprob: -10.129660606384277
    6. 'acency' → logprob: -11.004660606384277
    7. '
' → logprob: -11.504660606384277
    8. 'aciente' → logprob: -11.504660606384277
    9. '##' → logprob: -11.629660606384277
    10. ')' → logprob: -11.754660606384277

Token 1018: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.00012308525037951767
    2. 'ent' → logprob: -9.250123023986816
    3. '   ' → logprob: -11.875123023986816
    4. 'cente' → logprob: -12.375123023986816
    5. 'entes' → logprob: -12.375123023986816
    6. 'ENTE' → logprob: -12.875123023986816
    7. '
' → logprob: -12.875123023986816
    8. '#' → logprob: -13.750123023986816
    9. 'ents' → logprob: -14.000123023986816
    10. 'ante' → logprob: -14.125123023986816

Token 1019: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35173752903938293
    2. ')' → logprob: -1.6017374992370605
    3. '(' → logprob: -3.6017374992370605
    4. '   ' → logprob: -3.9767374992370605
    5. ' à' → logprob: -5.1017374992370605
    6. 'adj' → logprob: -5.1017374992370605
    7. '#' → logprob: -5.2267374992370605
    8. '.' → logprob: -5.2267374992370605
    9. ' (' → logprob: -5.3517374992370605
    10. 'à' → logprob: -5.6017374992370605

Token 1020: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.33240437507629395
    2. 'i' → logprob: -1.707404375076294
    3. ' (' → logprob: -2.332404375076294
    4. '(' → logprob: -6.082404136657715
    5. ' i' → logprob: -6.207404136657715
    6. '[i' → logprob: -9.707404136657715
    7. 'la' → logprob: -11.207404136657715
    8. 'l' → logprob: -11.832404136657715
    9. ' ' → logprob: -11.957404136657715
    10. '   ' → logprob: -12.207404136657715

Token 1021: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019391077803447843
    2. ' i' → logprob: -6.251939296722412
    3. '   ' → logprob: -11.751938819885254
    4. '	i' → logprob: -13.376938819885254
    5. ')i' → logprob: -15.001938819885254
    6. ',' → logprob: -15.751938819885254
    7. ',i' → logprob: -15.876938819885254
    8. ')' → logprob: -15.876938819885254
    9. ' ' → logprob: -16.75193977355957
    10. '
' → logprob: -16.87693977355957

Token 1022: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.01604328490793705
    2. ',' → logprob: -4.141043186187744
    3. ' ,' → logprob: -12.016043663024902
    4. 'j' → logprob: -13.641043663024902
    5. '   ' → logprob: -14.266043663024902
    6. ',i' → logprob: -15.016043663024902
    7. '
' → logprob: -15.891043663024902
    8. ' ' → logprob: -16.391042709350586
    9. '```' → logprob: -16.516042709350586
    10. ',J' → logprob: -16.641042709350586

Token 1023: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05974094197154045
    2. ',' → logprob: -3.9347410202026367
    3. ')+' → logprob: -4.184741020202637
    4. '),' → logprob: -4.559741020202637
    5. '   ' → logprob: -4.809741020202637
    6. ')
' → logprob: -6.934741020202637
    7. '#' → logprob: -7.184741020202637
    8. ' )' → logprob: -7.434741020202637
    9. '):
' → logprob: -7.684741020202637
    10. '):' → logprob: -7.934741020202637

Token 1024: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031235644593834877
    2. 'for' → logprob: -4.906235694885254
    3. '
' → logprob: -5.031235694885254
    4. '    
' → logprob: -5.031235694885254
    5. ' for' → logprob: -5.781235694885254
    6. '#' → logprob: -6.531235694885254
    7. '                   ' → logprob: -6.531235694885254
    8. '       ' → logprob: -7.406235694885254
    9. ',' → logprob: -7.531235694885254
    10. ' 
' → logprob: -7.906235694885254

Token 1025: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036976058036088943
    2. 'for' → logprob: -4.036975860595703
    3. '
' → logprob: -4.661975860595703
    4. ' for' → logprob: -5.536975860595703
    5. '    
' → logprob: -5.786975860595703
    6. '#' → logprob: -7.286975860595703
    7. '       ' → logprob: -7.661975860595703
    8. '    ' → logprob: -8.536975860595703
    9. '                   ' → logprob: -8.911975860595703
    10. ',' → logprob: -9.286975860595703

Token 1026: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00209006923250854
    2. '
' → logprob: -7.252089977264404
    3. 'for' → logprob: -7.252089977264404
    4. '    
' → logprob: -7.377089977264404
    5. ' for' → logprob: -10.252090454101562
    6. '       ' → logprob: -12.752090454101562
    7. '	for' → logprob: -13.377090454101562
    8. '        
' → logprob: -13.877090454101562
    9. '   
' → logprob: -14.002090454101562
    10. ' 
' → logprob: -14.252090454101562

Token 1027: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.547325611114502
    2. 'for' → logprob: -0.922325611114502
    3. ' for' → logprob: -3.797325611114502
    4. '#' (adapté à ' #') → logprob: -6.922325611114502
    5. '
' → logprob: -8.297325134277344
    6. '    
' → logprob: -8.922325134277344
    7. '       ' → logprob: -10.422325134277344
    8. ' #' → logprob: -10.797325134277344
    9. '  ' → logprob: -11.672325134277344
    10. ' ' → logprob: -11.672325134277344

Token 1028: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03822142258286476
    2. '   ' → logprob: -3.5382213592529297
    3. '#' → logprob: -4.91322135925293
    4. ' for' → logprob: -7.41322135925293
    5. 'distance' → logprob: -8.53822135925293
    6. '    
' → logprob: -9.91322135925293
    7. 'cut' → logprob: -9.91322135925293
    8. 'cost' → logprob: -10.16322135925293
    9. 'min' → logprob: -10.41322135925293
    10. 'dist' → logprob: -10.53822135925293

Token 1029: ' part' (ID: 997)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.0257465839385986
    2. 'for' → logprob: -1.1507465839385986
    3. ' continue' → logprob: -1.7757465839385986
    4. 'continue' → logprob: -3.2757465839385986
    5. ' for' → logprob: -3.5257465839385986
    6. '   ' → logprob: -3.5257465839385986
    7. ' peut' → logprob: -4.6507463455200195
    8. '#' → logprob: -4.9007463455200195
    9. 'do' → logprob: -5.6507463455200195
    10. ' peux' → logprob: -5.6507463455200195

Token 1030: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12496572732925415
    2. '       ' → logprob: -2.4999656677246094
    3. ' des' → logprob: -4.999965667724609
    4. ' de' → logprob: -5.124965667724609
    5. 'from' → logprob: -5.124965667724609
    6. '```' → logprob: -5.874965667724609
    7. ' du' → logprob: -5.999965667724609
    8. 'du' → logprob: -6.249965667724609
    9. '    ' → logprob: -6.374965667724609
    10. 'de' → logprob: -6.749965667724609

Token 1031: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4086928963661194
    2. 'range' → logprob: -2.2836928367614746
    3. 'la' → logprob: -2.7836928367614746
    4. 'i' → logprob: -2.7836928367614746
    5. 'l' → logprob: -3.6586928367614746
    6. 'le' → logprob: -4.158692836761475
    7. 'dist' → logprob: -4.533692836761475
    8. 'import' → logprob: -4.783692836761475
    9. '(' → logprob: -4.908692836761475
    10. '#' → logprob: -4.908692836761475

Token 1032: ''us' (ID: 143210)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2029903084039688
    2. '0' → logprob: -2.0779902935028076
    3. ' dist' → logprob: -4.702990531921387
    4. 'for' → logprob: -4.702990531921387
    5. 'continue' → logprob: -5.202990531921387
    6. 'len' → logprob: -5.327990531921387
    7. '```' → logprob: -5.702990531921387
    8. 'main' → logprob: -5.952990531921387
    9. 'queue' → logprob: -5.952990531921387
    10. 'contin' → logprob: -6.202990531921387

Token 1033: 'ine' (ID: 514)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.673341691493988
    2. 'er' → logprob: -0.798341691493988
    3. 'ine' → logprob: -3.923341751098633
    4. 'age' → logprob: -4.298341751098633
    5. 'eur' → logprob: -6.298341751098633
    6. '(' → logprob: -7.173341751098633
    7. 'ere' → logprob: -7.298341751098633
    8. '```' → logprob: -7.548341751098633
    9. '   ' → logprob: -7.673341751098633
    10. '[' → logprob: -8.048341751098633

Token 1034: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1573951691389084
    2. ',' → logprob: -2.282395124435425
    3. ')' → logprob: -4.657395362854004
    4. 'for' → logprob: -5.157395362854004
    5. ' ' → logprob: -5.532395362854004
    6. 'dist' → logprob: -5.532395362854004
    7. '
' → logprob: -6.032395362854004
    8. '    
' → logprob: -6.282395362854004
    9. '.' → logprob: -6.532395362854004
    10. '    ' → logprob: -6.657395362854004

Token 1035: ' puis' (ID: 18766)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6359372138977051
    2. ' puis' → logprob: -1.510937213897705
    3. ' for' → logprob: -1.760937213897705
    4. '   ' → logprob: -3.760937213897705
    5. ' pour' → logprob: -4.135937213897705
    6. ' et' → logprob: -4.260937213897705
    7. '#' → logprob: -5.260937213897705
    8. ' on' → logprob: -5.760937213897705
    9. '    ' → logprob: -6.010937213897705
    10. 'pour' → logprob: -6.135937213897705

Token 1036: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.16738195717334747
    2. 'pour' → logprob: -2.667382001876831
    3. 'for' → logprob: -3.167382001876831
    4. '   ' → logprob: -3.917382001876831
    5. 'par' → logprob: -4.667381763458252
    6. ' on' → logprob: -5.667381763458252
    7. 'continue' → logprob: -6.042381763458252
    8. 'cherche' → logprob: -6.292381763458252
    9. 'expl' → logprob: -6.417381763458252
    10. '       ' → logprob: -6.667381763458252

Token 1037: ' va' (ID: 3423)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3361675441265106
    2. 'continue' → logprob: -1.961167573928833
    3. 'expl' → logprob: -2.211167573928833
    4. 'cherche' → logprob: -3.586167573928833
    5. 'for' → logprob: -6.711167335510254
    6. 're' → logprob: -7.086167335510254
    7. 'check' → logprob: -7.336167335510254
    8. 'v' → logprob: -7.461167335510254
    9. 'fait' → logprob: -7.586167335510254
    10. ' parc' → logprob: -7.711167335510254

Token 1038: ' couper' (ID: 135212)
  Prédit: 'chercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chercher' → logprob: -1.3804125785827637
    2. 'reg' → logprob: -1.7554125785827637
    3. 'calcul' → logprob: -1.7554125785827637
    4. 'par' → logprob: -2.5054125785827637
    5. 'expl' → logprob: -2.5054125785827637
    6. 'contin' → logprob: -2.5054125785827637
    7. 'tr' → logprob: -3.2554125785827637
    8. 'voir' → logprob: -3.3804125785827637
    9. 'à' → logprob: -4.005412578582764
    10. 'checker' → logprob: -4.630412578582764

Token 1039: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7975646257400513
    2. ' les' → logprob: -1.4225646257400513
    3. 'un' → logprob: -2.2975645065307617
    4. 'adj' → logprob: -3.0475645065307617
    5. 'sur' → logprob: -3.2975645065307617
    6. ' un' → logprob: -3.7975645065307617
    7. 'aux' → logprob: -4.172564506530762
    8. ' des' → logprob: -4.297564506530762
    9. 'des' → logprob: -4.297564506530762
    10. 'au' → logprob: -4.547564506530762

Token 1040: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.23017606139183044
    2. ' arbres' → logprob: -1.6051760911941528
    3. 'ar' → logprob: -5.480175971984863
    4. 'trees' → logprob: -7.980175971984863
    5. 'cases' → logprob: -9.480175971984863
    6. 'adj' → logprob: -10.480175971984863
    7. ' voisins' → logprob: -10.480175971984863
    8. ' arbre' → logprob: -10.730175971984863
    9. 'for' → logprob: -11.230175971984863
    10. 'vo' → logprob: -11.355175971984863

Token 1041: ' une' (ID: 2463)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.1068461537361145
    2. ' adj' → logprob: -2.9818460941314697
    3. ',' → logprob: -3.7318460941314697
    4. '   ' → logprob: -4.106846332550049
    5. '#' → logprob: -5.481846332550049
    6. ' voisins' → logprob: -6.481846332550049
    7. ' adjacent' → logprob: -6.856846332550049
    8. '_adj' → logprob: -7.606846332550049
    9. '       ' → logprob: -7.856846332550049
    10. 'dans' → logprob: -8.23184585571289

Token 1042: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.199756383895874
    2. 'd' → logprob: -2.074756383895874
    3. 'par' → logprob: -2.199756383895874
    4. 'près' → logprob: -2.699756383895874
    5. ' d' → logprob: -2.949756383895874
    6. ' case' → logprob: -3.449756383895874
    7. ' ' → logprob: -3.449756383895874
    8. 'à' → logprob: -3.574756383895874
    9. ' à' → logprob: -3.699756383895874
    10. 'r' → logprob: -3.949756383895874

Token 1043: ' une' (ID: 2463)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -1.0024278163909912
    2. 'fois' → logprob: -1.8774278163909912
    3. 'cours' → logprob: -2.627427816390991
    4. 'adj' → logprob: -2.877427816390991
    5. 'mi' → logprob: -3.252427816390991
    6. 'tour' → logprob: -3.377427816390991
    7. '```' → logprob: -3.377427816390991
    8. 'mis' → logprob: -3.627427816390991
    9. 'nombre' → logprob: -4.25242805480957
    10. 'un' → logprob: -4.62742805480957

Token 1044: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27408385276794434
    2. ',' → logprob: -1.5240838527679443
    3. '.' → logprob: -4.399084091186523
    4. '       ' → logprob: -5.399084091186523
    5. '#' → logprob: -6.899084091186523
    6. '           ' → logprob: -7.524084091186523
    7. '...' → logprob: -8.024084091186523
    8. ' (' → logprob: -8.024084091186523
    9. '    
' → logprob: -8.149084091186523
    10. ',
' → logprob: -8.524084091186523

Token 1045: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31967464089393616
    2. ' puis' → logprob: -2.3196747303009033
    3. '#' → logprob: -2.4446747303009033
    4. ' #' → logprob: -2.9446747303009033
    5. '       ' → logprob: -3.9446747303009033
    6. ' et' → logprob: -5.069674491882324
    7. '    ' → logprob: -5.944674491882324
    8. ' then' → logprob: -6.819674491882324
    9. '                   ' → logprob: -6.944674491882324
    10. 'et' → logprob: -7.069674491882324

Token 1046: ' pour' (ID: 1930)
  Prédit: ' revenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' revenir' → logprob: -0.4920838475227356
    2. 'return' → logprob: -2.367083787918091
    3. ' ensuite' → logprob: -2.367083787918091
    4. ' retourner' → logprob: -2.992083787918091
    5. ' return' → logprob: -3.117083787918091
    6. ' puis' → logprob: -3.617083787918091
    7. ' ram' → logprob: -4.49208402633667
    8. ' continuer' → logprob: -4.86708402633667
    9. 'ram' → logprob: -5.24208402633667
    10. 'contin' → logprob: -5.36708402633667

Token 1047: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.18130876123905182
    2. ' i' → logprob: -2.3063087463378906
    3. 'each' → logprob: -4.056308746337891
    4. ' j' → logprob: -4.306308746337891
    5. ' each' → logprob: -4.306308746337891
    6. 'i' → logprob: -5.056308746337891
    7. 'ch' → logprob: -5.431308746337891
    8. 'cut' → logprob: -5.806308746337891
    9. ' s' → logprob: -6.931308746337891
    10. ' ch' → logprob: -6.931308746337891

Token 1048: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.7330077886581421
    2. 'case' → logprob: -1.483007788658142
    3. ' case' → logprob: -1.858007788658142
    4. ')' → logprob: -3.7330079078674316
    5. 'ar' → logprob: -4.358007907867432
    6. ' )' → logprob: -4.608007907867432
    7. '
' → logprob: -4.608007907867432
    8. ',' → logprob: -4.733007907867432
    9. '_' → logprob: -4.858007907867432
    10. '```' → logprob: -4.983007907867432

Token 1049: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2110036611557007
    2. ' on' → logprob: -1.4610036611557007
    3. ':' → logprob: -1.8360036611557007
    4. '<|end|>' → logprob: -3.5860037803649902
    5. '   ' → logprob: -3.7110037803649902
    6. ' ' → logprob: -3.7110037803649902
    7. 'adj' → logprob: -3.7110037803649902
    8. ')' → logprob: -3.7110037803649902
    9. 's' → logprob: -3.9610037803649902
    10. ' adjacent' → logprob: -4.21100378036499

Token 1050: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2207400798797607
    2. '   ' → logprob: -1.7207400798797607
    3. '#' → logprob: -1.8457400798797607
    4. '           ' → logprob: -2.0957400798797607
    5. '                   ' → logprob: -2.5957400798797607
    6. ' #' → logprob: -2.7207400798797607
    7. '                       ' → logprob: -3.2207400798797607
    8. '               ' → logprob: -3.4707400798797607
    9. '<|end|>' → logprob: -4.47074031829834
    10. ')' → logprob: -5.59574031829834

Token 1051: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23415341973304749
    2. '#' (adapté à ' #') → logprob: -2.3591535091400146
    3. ' #' → logprob: -2.8591535091400146
    4. '       ' → logprob: -2.9841535091400146
    5. '    ' → logprob: -6.2341532707214355
    6. '           ' → logprob: -6.9841532707214355
    7. 'for' → logprob: -7.1091532707214355
    8. ' for' → logprob: -7.4841532707214355
    9. '  ' → logprob: -8.234153747558594
    10. ' ' → logprob: -8.359153747558594

Token 1052: ' coût' (ID: 73109)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38764652609825134
    2. '#' → logprob: -1.5126465559005737
    3. ' #' → logprob: -2.512646436691284
    4. '       ' → logprob: -4.887646675109863
    5. '    ' → logprob: -5.012646675109863
    6. ' on' → logprob: -6.637646675109863
    7. '           ' → logprob: -7.137646675109863
    8. ' ' → logprob: -7.262646675109863
    9. ' for' → logprob: -7.637646675109863
    10. '  ' → logprob: -7.887646675109863

Token 1053: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1651565134525299
    2. ' +=' → logprob: -2.040156602859497
    3. 's' → logprob: -5.040156364440918
    4. '=' → logprob: -5.165156364440918
    5. '_' → logprob: -6.165156364440918
    6. '_total' → logprob: -6.165156364440918
    7. '   ' → logprob: -6.540156364440918
    8. ' de' → logprob: -7.290156364440918
    9. ' s' → logprob: -7.540156364440918
    10. ':' → logprob: -8.040156364440918

Token 1054: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1848924160003662
    2. '2' → logprob: -2.434892416000366
    3. '(dist' → logprob: -3.434892416000366
    4. ' dist' → logprob: -3.434892416000366
    5. '1' → logprob: -4.559892654418945
    6. ' (' → logprob: -5.809892654418945
    7. '(' → logprob: -6.309892654418945
    8. ' ' → logprob: -6.934892654418945
    9. '   ' → logprob: -8.684892654418945
    10. '0' → logprob: -9.184892654418945

Token 1055: 'distance' (ID: 40614)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06290976703166962
    2. ' dist' → logprob: -3.0629098415374756
    3. '2' → logprob: -5.0629096031188965
    4. '(dist' → logprob: -5.3129096031188965
    5. '1' → logprob: -6.1879096031188965
    6. ' (' → logprob: -8.187910079956055
    7. 'distance' → logprob: -8.562910079956055
    8. '(' → logprob: -8.687910079956055
    9. '   ' → logprob: -9.187910079956055
    10. ' ' → logprob: -9.437910079956055

Token 1056: '_' (ID: 62)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.03060014918446541
    2. '_' → logprob: -4.655600070953369
    3. '   ' → logprob: -5.780600070953369
    4. '_de' → logprob: -5.905600070953369
    5. '[i' → logprob: -6.155600070953369
    6. '_to' → logprob: -6.155600070953369
    7. '_between' → logprob: -6.155600070953369
    8. '[' → logprob: -6.405600070953369
    9. '_dep' → logprob: -6.905600070953369
    10. ')' → logprob: -7.030600070953369

Token 1057: 'aller' (ID: 11605)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.014267523773014545
    2. 'from' → logprob: -5.014267444610596
    3. '[i' → logprob: -5.139267444610596
    4. '[' → logprob: -7.639267444610596
    5. '_to' → logprob: -8.264267921447754
    6. ' from' → logprob: -8.514267921447754
    7. '_' → logprob: -8.514267921447754
    8. '   ' → logprob: -9.139267921447754
    9. ')' → logprob: -9.639267921447754
    10. '*' → logprob: -9.889267921447754

Token 1058: '_ret' (ID: 56051)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.07920635491609573
    2. ' +' → logprob: -3.2042064666748047
    3. '+' → logprob: -4.204206466674805
    4. '_' → logprob: -4.954206466674805
    5. '[' → logprob: -5.579206466674805
    6. '*' → logprob: -5.579206466674805
    7. ' *' → logprob: -6.079206466674805
    8. '   ' → logprob: -6.954206466674805
    9. ')' → logprob: -7.329206466674805
    10. '[i' → logprob: -7.454206466674805

Token 1059: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.4509667456150055
    2. 'urn' → logprob: -1.200966715812683
    3. 'ourn' → logprob: -4.700966835021973
    4. 'eturn' → logprob: -5.075966835021973
    5. '_from' → logprob: -5.325966835021973
    6. '```' → logprob: -5.325966835021973
    7. '=' → logprob: -5.325966835021973
    8. 'un' → logprob: -5.450966835021973
    9. '[' → logprob: -5.575966835021973
    10. '``' → logprob: -5.700966835021973

Token 1060: ' depuis' (ID: 16277)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.0183613300323486
    2. '_from' → logprob: -1.3933613300323486
    3. '*' → logprob: -1.8933613300323486
    4. ')*' → logprob: -2.3933613300323486
    5. ')' → logprob: -2.5183613300323486
    6. '[i' → logprob: -3.5183613300323486
    7. '[' → logprob: -3.6433613300323486
    8. 'from' → logprob: -6.0183610916137695
    9. '   ' → logprob: -6.0183610916137695
    10. ')*(' → logprob: -6.3933610916137695

Token 1061: ' usine' (ID: 124673)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09458086639642715
    2. '(' → logprob: -2.969580888748169
    3. 'l' → logprob: -4.09458065032959
    4. 'la' → logprob: -4.96958065032959
    5. 'us' → logprob: -5.34458065032959
    6. 'start' → logprob: -5.46958065032959
    7. '0' → logprob: -6.46958065032959
    8. '(dist' → logprob: -6.59458065032959
    9. ' dist' → logprob: -6.84458065032959
    10. 'une' → logprob: -7.34458065032959

Token 1062: ' à' (ID: 1221)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*' → logprob: -1.072011113166809
    2. ' *' → logprob: -1.197011113166809
    3. ')' → logprob: -1.822011113166809
    4. '*' → logprob: -2.1970109939575195
    5. ')*(' → logprob: -3.3220109939575195
    6. ' +' → logprob: -3.9470109939575195
    7. ' )' → logprob: -4.9470109939575195
    8. '*(' → logprob: -5.3220109939575195
    9. ')+' → logprob: -5.4470109939575195
    10. '+' → logprob: -5.4470109939575195

Token 1063: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0455749034881592
    2. 'la' → logprob: -1.1705749034881592
    3. ' une' → logprob: -2.045574903488159
    4. ' la' → logprob: -2.420574903488159
    5. 'case' → logprob: -2.420574903488159
    6. ' case' → logprob: -3.670574903488159
    7. 'l' → logprob: -6.295575141906738
    8. 'adj' → logprob: -7.295575141906738
    9. 'un' → logprob: -7.420575141906738
    10. ' ' → logprob: -7.670575141906738

Token 1064: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.32066941261291504
    2. 'case' → logprob: -1.320669412612915
    3. 'adj' → logprob: -5.195669174194336
    4. ' voisin' → logprob: -7.320669174194336
    5. 'vo' → logprob: -7.820669174194336
    6. ' adj' → logprob: -8.820669174194336
    7. ')' → logprob: -9.195669174194336
    8. ' adjacent' → logprob: -9.320669174194336
    9. '(case' → logprob: -9.695669174194336
    10. '_case' → logprob: -9.945669174194336

Token 1065: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.6371616125106812
    2. ' vide' → logprob: -1.2621616125106812
    3. ' adj' → logprob: -2.3871617317199707
    4. '_adj' → logprob: -3.1371617317199707
    5. '_v' → logprob: -4.012161731719971
    6. '_ad' → logprob: -4.637161731719971
    7. ' _' → logprob: -5.012161731719971
    8. 'adj' → logprob: -5.387161731719971
    9. ')' → logprob: -5.637161731719971
    10. ' )' → logprob: -5.762161731719971

Token 1066: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.2862858474254608
    2. '_adj' → logprob: -1.7862858772277832
    3. 'adj' → logprob: -3.036285877227783
    4. '_ad' → logprob: -4.161285877227783
    5. ')' → logprob: -5.786285877227783
    6. ' adjacent' → logprob: -5.786285877227783
    7. '_' → logprob: -6.036285877227783
    8. ' )' → logprob: -6.161285877227783
    9. ' vo' → logprob: -6.286285877227783
    10. ' ' → logprob: -6.411285877227783

Token 1067: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0004870378761552274
    2. 'acent' → logprob: -9.375487327575684
    3. 'cente' → logprob: -9.375487327575684
    4. 'acency' → logprob: -10.000487327575684
    5. '   ' → logprob: -10.375487327575684
    6. '(' → logprob: -10.750487327575684
    7. 'a' → logprob: -10.750487327575684
    8. 'acé' → logprob: -10.875487327575684
    9. ')' → logprob: -11.000487327575684
    10. '```' → logprob: -11.000487327575684

Token 1068: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.003448610892519355
    2. 'ent' → logprob: -6.128448486328125
    3. 'ée' → logprob: -8.003448486328125
    4. '#' → logprob: -8.378448486328125
    5. 'ac' → logprob: -9.128448486328125
    6. '
' → logprob: -9.628448486328125
    7. 'ante' → logprob: -10.003448486328125
    8. 'cente' → logprob: -10.003448486328125
    9. 't' → logprob: -10.253448486328125
    10. 'e' → logprob: -10.378448486328125

Token 1069: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17896127700805664
    2. ')+' → logprob: -2.8039612770080566
    3. ' )' → logprob: -2.8039612770080566
    4. ')*' → logprob: -4.803961277008057
    5. '+' → logprob: -4.928961277008057
    6. '_adj' → logprob: -5.303961277008057
    7. ',' → logprob: -5.428961277008057
    8. 'adj' → logprob: -5.428961277008057
    9. ' +' → logprob: -6.303961277008057
    10. '```' → logprob: -6.553961277008057

Token 1070: 'nombre' (ID: 28576)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02054574340581894
    2. ' ' → logprob: -3.895545721054077
    3. '*' → logprob: -13.395545959472656
    4. '```' → logprob: -14.145545959472656
    5. ' *' → logprob: -15.270545959472656
    6. ')' → logprob: -15.520545959472656
    7. ' +' → logprob: -15.645545959472656
    8. ' ' → logprob: -15.645545959472656
    9. '1' → logprob: -16.270545959472656
    10. '+' → logprob: -16.270545959472656

Token 1071: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44084683060646057
    2. '_de' → logprob: -2.6908469200134277
    3. '_des' → logprob: -2.8158469200134277
    4. '_ar' → logprob: -3.0658469200134277
    5. '_of' → logprob: -3.8158469200134277
    6. ')' → logprob: -3.9408469200134277
    7. '_tokens' → logprob: -4.315846920013428
    8. ' de' → logprob: -4.440846920013428
    9. '_t' → logprob: -4.440846920013428
    10. '   ' → logprob: -4.690846920013428

Token 1072: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16200865805149078
    2. '_ar' → logprob: -3.037008762359619
    3. 's' → logprob: -3.287008762359619
    4. ' arbres' → logprob: -3.662008762359619
    5. 'arb' → logprob: -4.287008762359619
    6. ' ' → logprob: -5.037008762359619
    7. 'ar' → logprob: -6.037008762359619
    8. '_s' → logprob: -6.162008762359619
    9. '_t' → logprob: -6.287008762359619
    10. '_c' → logprob: -6.662008762359619

Token 1073: 'arb' (ID: 36740)
  Prédit: ' arbres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.4003567695617676
    2. 'arb' → logprob: -1.5253567695617676
    3. ' espaces' → logprob: -3.1503567695617676
    4. 's' → logprob: -3.6503567695617676
    5. 'ar' → logprob: -4.525356769561768
    6. 'spaces' → logprob: -4.900356769561768
    7. 'trees' → logprob: -5.275356769561768
    8. 'tokens' → logprob: -5.400356769561768
    9. ' ' → logprob: -5.650356769561768
    10. 'fois' → logprob: -6.525356769561768

Token 1074: 'res' (ID: 430)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8023936748504639
    2. 's' → logprob: -1.0523936748504639
    3. 'ées' → logprob: -3.302393674850464
    4. 'trees' → logprob: -3.302393674850464
    5. 'res' → logprob: -3.552393674850464
    6. 'és' → logprob: -3.677393674850464
    7. 'êts' → logprob: -4.177393913269043
    8. 'êtres' → logprob: -4.677393913269043
    9. ' trees' → logprob: -4.677393913269043
    10. '       ' → logprob: -5.427393913269043

Token 1075: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3614942729473114
    2. '
' → logprob: -1.2364943027496338
    3. 'for' → logprob: -5.361494064331055
    4. '    
' → logprob: -5.986494064331055
    5. '#' → logprob: -6.111494064331055
    6. ' for' → logprob: -7.861494064331055
    7. 'cost' → logprob: -7.986494064331055
    8. 'import' → logprob: -8.111494064331055
    9. '\' → logprob: -8.111494064331055
    10. '\n' → logprob: -8.236494064331055

Token 1076: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16988743841648102
    2. '\n' → logprob: -3.0448875427246094
    3. ' (' → logprob: -3.1698875427246094
    4. '(' → logprob: -3.6698875427246094
    5. ' ' → logprob: -3.7948875427246094
    6. '```' → logprob: -5.419887542724609
    7. ' +' → logprob: -6.294887542724609
    8. '"\' → logprob: -6.294887542724609
    9. ' \' → logprob: -6.544887542724609
    10. '(s' → logprob: -6.919887542724609

Token 1077: 'nombre' (ID: 28576)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019657421857118607
    2. ' ' → logprob: -4.894657611846924
    3. 'nombre' → logprob: -5.269657611846924
    4. 'dist' → logprob: -7.019657611846924
    5. '\n' → logprob: -7.019657611846924
    6. 'distance' → logprob: -7.144657611846924
    7. ' (' → logprob: -7.269657611846924
    8. ' nombre' → logprob: -7.519657611846924
    9. 'A' → logprob: -8.144657135009766
    10. 'nb' → logprob: -8.394657135009766

Token 1078: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.951911985874176
    2. ' de' → logprob: -1.2019119262695312
    3. '_de' → logprob: -1.9519119262695312
    4. ' d' → logprob: -2.8269119262695312
    5. '_d' → logprob: -3.3269119262695312
    6. 'd' → logprob: -3.8269119262695312
    7. '   ' → logprob: -4.951911926269531
    8. '_s' → logprob: -4.951911926269531
    9. ')' → logprob: -5.076911926269531
    10. '_des' → logprob: -5.326911926269531

Token 1079: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17282268404960632
    2. ' de' → logprob: -2.9228227138519287
    3. '_de' → logprob: -3.9228227138519287
    4. ' espaces' → logprob: -4.54782247543335
    5. ''espace' → logprob: -4.54782247543335
    6. '_ar' → logprob: -4.92282247543335
    7. '_s' → logprob: -5.17282247543335
    8. '_le' → logprob: -5.29782247543335
    9. ''' → logprob: -5.42282247543335
    10. ' d' → logprob: -5.54782247543335

Token 1080: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.6586889624595642
    2. ' arbres' → logprob: -1.033689022064209
    3. ' espaces' → logprob: -3.158689022064209
    4. ' ' → logprob: -3.533689022064209
    5. 'esp' → logprob: -4.533689022064209
    6. '1' → logprob: -4.658689022064209
    7. ''' → logprob: -5.158689022064209
    8. '_' → logprob: -5.158689022064209
    9. 'spaces' → logprob: -6.033689022064209
    10. ''esp' → logprob: -6.158689022064209

Token 1081: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.09135150909423828
    2. 'es' → logprob: -2.4663515090942383
    3. 'bres' → logprob: -6.966351509094238
    4. 'êtres' → logprob: -7.966351509094238
    5. 'ées' → logprob: -8.466351509094238
    6. 'rees' → logprob: -8.841351509094238
    7. 'ières' → logprob: -9.466351509094238
    8. 'és' → logprob: -9.466351509094238
    9. 'ères' → logprob: -9.466351509094238
    10. '#' → logprob: -9.716351509094238

Token 1082: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.593326985836029
    2. '*' → logprob: -1.0933270454406738
    3. ')' → logprob: -2.593327045440674
    4. ')*' → logprob: -3.593327045440674
    5. ' -' → logprob: -5.343327045440674
    6. '-' → logprob: -6.593327045440674
    7. ')*(' → logprob: -7.093327045440674
    8. ' )' → logprob: -7.093327045440674
    9. '   ' → logprob: -7.718327045440674
    10. '*(' → logprob: -7.843327045440674

Token 1083: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.47433868050575256
    2. ' ' → logprob: -0.9743386507034302
    3. ' )' → logprob: -9.47433853149414
    4. '```' → logprob: -9.72433853149414
    5. ')' → logprob: -10.47433853149414
    6. ' ' → logprob: -10.84933853149414
    7. '2' → logprob: -10.97433853149414
    8. ' (' → logprob: -11.72433853149414
    9. ' ```' → logprob: -11.97433853149414
    10. '
' → logprob: -12.34933853149414

Token 1084: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02654445916414261
    2. ' ' → logprob: -4.026544570922852
    3. '2' → logprob: -4.901544570922852
    4. '```' → logprob: -7.151544570922852
    5. ')' → logprob: -10.276544570922852
    6. ' )' → logprob: -11.151544570922852
    7. ' ```' → logprob: -11.276544570922852
    8. '`' → logprob: -11.401544570922852
    9. ' (' → logprob: -11.651544570922852
    10. 'cut' → logprob: -11.901544570922852

Token 1085: ' minute' (ID: 12434)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3884061276912689
    2. ' )' → logprob: -1.1384061574935913
    3. ' +' → logprob: -7.638406276702881
    4. '+' → logprob: -8.013405799865723
    5. ' )
' → logprob: -8.263405799865723
    6. ')+' → logprob: -8.638405799865723
    7. ')
' → logprob: -9.138405799865723
    8. ' ' → logprob: -10.263405799865723
    9. ' ' → logprob: -10.263405799865723
    10. '+)' → logprob: -11.763405799865723

Token 1086: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004004315007477999
    2. ' )' → logprob: -5.62900447845459
    3. ')
' → logprob: -8.62900447845459
    4. ')*' → logprob: -10.12900447845459
    5. '*' → logprob: -10.37900447845459
    6. ')+' → logprob: -10.50400447845459
    7. '+' → logprob: -10.50400447845459
    8. '*)' → logprob: -11.12900447845459
    9. ' +' → logprob: -11.25400447845459
    10. ' pour' → logprob: -11.50400447845459

Token 1087: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.5150936245918274
    2. ' couper' → logprob: -1.0150935649871826
    3. ' les' → logprob: -3.6400935649871826
    4. 'les' → logprob: -4.890093803405762
    5. ' cou' → logprob: -5.265093803405762
    6. ' la' → logprob: -7.890093803405762
    7. 'cut' → logprob: -7.890093803405762
    8. 'c' → logprob: -9.265093803405762
    9. ' coupe' → logprob: -9.640093803405762
    10. ' le' → logprob: -9.765093803405762

Token 1088: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006184860598295927
    2. ' )' → logprob: -5.131185054779053
    3. ')
' → logprob: -9.631184577941895
    4. ')+' → logprob: -10.256184577941895
    5. ')
' → logprob: -10.756184577941895
    6. ')")' → logprob: -11.006184577941895
    7. ')`' → logprob: -11.631184577941895
    8. 's' → logprob: -11.631184577941895
    9. 'pour' → logprob: -11.881184577941895
    10. '")' → logprob: -11.881184577941895

Token 1089: ' arbre' (ID: 164180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20267458260059357
    2. ' )' → logprob: -2.452674627304077
    3. ' arbre' → logprob: -2.452674627304077
    4. '_' → logprob: -5.077674388885498
    5. 'ar' → logprob: -6.577674388885498
    6. ')
' → logprob: -6.827674388885498
    7. '_ar' → logprob: -6.952674388885498
    8. '_)' → logprob: -7.827674388885498
    9. ' )
' → logprob: -7.827674388885498
    10. ' ' → logprob: -8.452674865722656

Token 1090: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036281042266637087
    2. ' )' → logprob: -6.253628253936768
    3. ')
' → logprob: -6.878628253936768
    4. '   ' → logprob: -8.37862777709961
    5. ')+' → logprob: -8.50362777709961
    6. ')
' → logprob: -9.62862777709961
    7. ')*' → logprob: -10.25362777709961
    8. ')\' → logprob: -11.00362777709961
    9. ' )
' → logprob: -11.37862777709961
    10. '))' → logprob: -11.37862777709961

Token 1091: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28094443678855896
    2. '
' → logprob: -1.5309444665908813
    3. '    
' → logprob: -4.530944347381592
    4. ')
' → logprob: -5.155944347381592
    5. '\n' → logprob: -6.155944347381592
    6. ')' → logprob: -6.280944347381592
    7. 'for' → logprob: -6.405944347381592
    8. '\' → logprob: -6.655944347381592
    9. '  
' → logprob: -7.530944347381592
    10. '       ' → logprob: -7.530944347381592

Token 1092: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039165280759334564
    2. '
' → logprob: -3.4141652584075928
    3. '    
' → logprob: -5.664165496826172
    4. 'for' → logprob: -6.539165496826172
    5. '#' → logprob: -8.914165496826172
    6. 'import' → logprob: -9.789165496826172
    7. '       ' → logprob: -9.789165496826172
    8. '\n' → logprob: -10.039165496826172
    9. 'def' → logprob: -10.164165496826172
    10. ' for' → logprob: -10.414165496826172

Token 1093: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032199472188949585
    2. '
' → logprob: -4.032199382781982
    3. '    
' → logprob: -4.282199382781982
    4. '#' → logprob: -11.03219985961914
    5. '        
' → logprob: -11.03219985961914
    6. 'import' → logprob: -11.03219985961914
    7. '  
' → logprob: -11.28219985961914
    8. 'for' → logprob: -11.40719985961914
    9. 'total' → logprob: -11.65719985961914
    10. '    
    
' → logprob: -11.65719985961914

Token 1094: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02469765394926071
    2. '
' → logprob: -3.8996975421905518
    3. 'for' → logprob: -6.149697780609131
    4. '    
' → logprob: -6.649697780609131
    5. '#' (adapté à ' #') → logprob: -7.649697780609131
    6. ' for' → logprob: -9.649697303771973
    7. '       ' → logprob: -10.274697303771973
    8. 'def' → logprob: -11.149697303771973
    9. 'import' → logprob: -11.274697303771973
    10. 'total' → logprob: -11.274697303771973

Token 1095: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09137054532766342
    2. '
' → logprob: -3.4663705825805664
    3. 'total' → logprob: -3.5913705825805664
    4. '#' → logprob: -4.466370582580566
    5. 'cost' → logprob: -5.216370582580566
    6. '    
' → logprob: -5.466370582580566
    7. 'for' → logprob: -5.716370582580566
    8. 'cut' → logprob: -6.966370582580566
    9. 'result' → logprob: -6.966370582580566
    10. 'co' → logprob: -7.591370582580566

Token 1096: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0215084552764893
    2. 'for' → logprob: -1.7715084552764893
    3. ' for' → logprob: -2.2715084552764893
    4. '    ' → logprob: -2.6465084552764893
    5. ' ' → logprob: -3.0215084552764893
    6. ',' → logprob: -4.02150821685791
    7. '
' → logprob: -4.14650821685791
    8. ' 
' → logprob: -4.14650821685791
    9. ' (' → logprob: -4.14650821685791
    10. '#' → logprob: -4.14650821685791

Token 1097: '1' (ID: 16)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3681247234344482
    2. '   ' → logprob: -1.6181247234344482
    3. 'for' → logprob: -1.8681247234344482
    4. ' ' → logprob: -1.9931247234344482
    5. ':' → logprob: -3.1181247234344482
    6. ' if' → logprob: -3.3681247234344482
    7. '    ' → logprob: -3.7431247234344482
    8. ' :' → logprob: -3.8681247234344482
    9. ',' → logprob: -4.118124961853027
    10. '#' → logprob: -4.368124961853027

Token 1098: ' minute' (ID: 12434)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5700693726539612
    2. ' ' → logprob: -1.8200693130493164
    3. '*' → logprob: -2.8200693130493164
    4. ' +' → logprob: -2.9450693130493164
    5. '0' → logprob: -3.0700693130493164
    6. '+' → logprob: -3.1950693130493164
    7. ')' → logprob: -4.070069313049316
    8. '#' → logprob: -4.945069313049316
    9. '    ' → logprob: -4.945069313049316
    10. '  ' → logprob: -5.195069313049316

Token 1099: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9287968277931213
    2. ')' → logprob: -1.1787967681884766
    3. '<|end|>' → logprob: -1.8037967681884766
    4. '<|end|>' → logprob: -3.6787967681884766
    5. '*' → logprob: -3.9287967681884766
    6. ' )' → logprob: -3.9287967681884766
    7. ' for' → logprob: -4.178796768188477
    8. '+' → logprob: -4.178796768188477
    9. 'for' → logprob: -4.553796768188477
    10. ' *' → logprob: -5.178796768188477

Token 1100: ' couper' (ID: 135212)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.35921695828437805
    2. ' couper' → logprob: -1.2342169284820557
    3. ' cou' → logprob: -5.734217166900635
    4. ' each' → logprob: -5.859217166900635
    5. 'cou' → logprob: -6.359217166900635
    6. ' for' → logprob: -7.234217166900635
    7. ' le' → logprob: -8.359216690063477
    8. 'each' → logprob: -8.484216690063477
    9. ' la' → logprob: -8.609216690063477
    10. ' cut' → logprob: -8.859216690063477

Token 1101: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1102: '1' (ID: 16)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.020890211686491966
    2. 'each' → logprob: -4.520890235900879
    3. '<|end|>' → logprob: -5.020890235900879
    4. ' each' → logprob: -6.520890235900879
    5. ' ' → logprob: -7.895890235900879
    6. 'Chaque' → logprob: -8.395890235900879
    7. ' un' → logprob: -9.270890235900879
    8. ' ' → logprob: -9.270890235900879
    9. ' )' → logprob: -9.395890235900879
    10. '*' → logprob: -9.520890235900879

Token 1103: ' arbre' (ID: 164180)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1104: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19108563661575317
    2. '
' → logprob: -1.8160855770111084
    3. '    
' → logprob: -4.8160858154296875
    4. 'for' → logprob: -7.0660858154296875
    5. ')
' → logprob: -8.316085815429688
    6. 'def' → logprob: -8.441085815429688
    7. '       ' → logprob: -8.691085815429688
    8. ',
' → logprob: -8.691085815429688
    9. '  
' → logprob: -8.691085815429688
    10. ' for' → logprob: -8.816085815429688

Token 1105: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.34474608302116394
    2. '1' → logprob: -2.3447461128234863
    3. '(' → logprob: -2.4697461128234863
    4. ' ' → logprob: -2.7197461128234863
    5. ' dist' → logprob: -4.094746112823486
    6. '(distance' → logprob: -5.219746112823486
    7. 'dist' → logprob: -5.594746112823486
    8. 'distance' → logprob: -5.969746112823486
    9. '((' → logprob: -6.094746112823486
    10. '(dist' → logprob: -6.219746112823486

Token 1106: 'distance' (ID: 40614)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1381551027297974
    2. 'distance' → logprob: -1.3881551027297974
    3. ' distance' → logprob: -2.263154983520508
    4. '1' → logprob: -2.763154983520508
    5. ' ' → logprob: -2.763154983520508
    6. ' dist' → logprob: -2.763154983520508
    7. '(distance' → logprob: -2.888154983520508
    8. 'dist' → logprob: -3.763154983520508
    9. '(' → logprob: -4.513154983520508
    10. ' distances' → logprob: -4.763154983520508

Token 1107: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.024013785645365715
    2. '_from' → logprob: -3.7740137577056885
    3. ')' → logprob: -8.64901351928711
    4. '   ' → logprob: -8.77401351928711
    5. '*' → logprob: -9.14901351928711
    6. '[' → logprob: -9.27401351928711
    7. '_for' → logprob: -9.89901351928711
    8. '_de' → logprob: -10.77401351928711
    9. '_to' → logprob: -10.77401351928711
    10. ' _' → logprob: -10.89901351928711

Token 1108: 'aller' (ID: 11605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04102402180433273
    2. '_from' → logprob: -3.2910239696502686
    3. '*' → logprob: -6.791024208068848
    4. '_all' → logprob: -7.416024208068848
    5. '_dep' → logprob: -8.041024208068848
    6. '_de' → logprob: -8.541024208068848
    7. 'from' → logprob: -8.916024208068848
    8. ' *' → logprob: -8.916024208068848
    9. 'dep' → logprob: -9.541024208068848
    10. ' _' → logprob: -9.541024208068848

Token 1109: '_ret' (ID: 56051)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025340717285871506
    2. '*' → logprob: -3.9003407955169678
    3. '_ret' → logprob: -5.650340557098389
    4. ' *' → logprob: -8.275341033935547
    5. ')' → logprob: -8.275341033935547
    6. ' _' → logprob: -8.775341033935547
    7. '_all' → logprob: -8.900341033935547
    8. ')*' → logprob: -9.400341033935547
    9. '+' → logprob: -9.775341033935547
    10. '_return' → logprob: -10.025341033935547

Token 1110: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.009357817471027374
    2. '_' → logprob: -5.509357929229736
    3. '__' → logprob: -6.134357929229736
    4. 'et' → logprob: -7.509357929229736
    5. 'ou' → logprob: -8.384357452392578
    6. '```' → logprob: -8.384357452392578
    7. '`' → logprob: -8.634357452392578
    8. '
' → logprob: -8.634357452392578
    9. 'tour' → logprob: -8.759357452392578
    10. 'o' → logprob: -8.884357452392578

Token 1111: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.21091513335704803
    2. '*' → logprob: -2.4609150886535645
    3. ')*' → logprob: -2.7109150886535645
    4. ')' → logprob: -3.5859150886535645
    5. ' )' → logprob: -5.9609150886535645
    6. '_from' → logprob: -6.4609150886535645
    7. ' +' → logprob: -6.5859150886535645
    8. '+' → logprob: -6.8359150886535645
    9. 'from' → logprob: -7.0859150886535645
    10. ')*(' → logprob: -7.4609150886535645

Token 1112: ' minutes' (ID: 5438)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2929996848106384
    2. ')' → logprob: -2.417999744415283
    3. '*' → logprob: -2.417999744415283
    4. ' +' → logprob: -3.792999744415283
    5. ' )' → logprob: -3.917999744415283
    6. ')*' → logprob: -4.792999744415283
    7. ' pour' → logprob: -5.292999744415283
    8. '+' → logprob: -6.167999744415283
    9. ' _' → logprob: -6.417999744415283
    10. '_' → logprob: -6.542999744415283

Token 1113: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.722644031047821
    2. ' +' → logprob: -2.097644090652466
    3. '+' → logprob: -2.472644090652466
    4. '*' → logprob: -2.722644090652466
    5. 'for' → logprob: -2.722644090652466
    6. ' *' → logprob: -2.847644090652466
    7. '   ' → logprob: -3.347644090652466
    8. ' for' → logprob: -3.972644090652466
    9. ' )' → logprob: -4.597643852233887
    10. ':' → logprob: -4.597643852233887

Token 1114: ' porter' (ID: 63049)
  Prédit: 'ram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ram' → logprob: -0.1647748500108719
    2. 'le' → logprob: -2.9147748947143555
    3. 'se' → logprob: -3.0397748947143555
    4. 'aller' → logprob: -4.1647748947143555
    5. ' ram' → logprob: -4.7897748947143555
    6. 'dé' → logprob: -5.2897748947143555
    7. 'porter' → logprob: -5.5397748947143555
    8. 'rap' → logprob: -5.6647748947143555
    9. 'trans' → logprob: -5.7897748947143555
    10. 'transport' → logprob: -6.6647748947143555

Token 1115: ' chaque' (ID: 21194)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6413458585739136
    2. ' les' → logprob: -1.6413458585739136
    3. ' chaque' → logprob: -1.6413458585739136
    4. 'les' → logprob: -3.391345977783203
    5. ' ' → logprob: -4.391345977783203
    6. ' le' → logprob: -4.516345977783203
    7. 'l' → logprob: -4.516345977783203
    8. 'er' → logprob: -5.766345977783203
    9. 'le' → logprob: -5.766345977783203
    10. ' ' → logprob: -6.391345977783203

Token 1116: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.013950757682323456
    2. 'ar' → logprob: -4.888950824737549
    3. '_' → logprob: -5.388950824737549
    4. ' ' → logprob: -6.888950824737549
    5. ' _' → logprob: -8.01395034790039
    6. ' arbres' → logprob: -8.88895034790039
    7. '```' → logprob: -9.38895034790039
    8. '_ar' → logprob: -9.51395034790039
    9. ' ' → logprob: -10.88895034790039
    10. ' déplacement' → logprob: -11.26395034790039

Token 1117: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09995514899492264
    2. '
' → logprob: -2.4749550819396973
    3. '    
' → logprob: -5.349955081939697
    4. ')' → logprob: -6.474955081939697
    5. ')
' → logprob: -6.974955081939697
    6. ',' → logprob: -8.099955558776855
    7. ',
' → logprob: -8.474955558776855
    8. '       ' → logprob: -8.474955558776855
    9. 'def' → logprob: -8.599955558776855
    10. '*' → logprob: -8.724955558776855

Token 1118: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9821263551712036
    2. ' (' → logprob: -1.6071263551712036
    3. ' dist' → logprob: -1.8571263551712036
    4. '1' → logprob: -2.107126235961914
    5. ' A' → logprob: -3.232126235961914
    6. '0' → logprob: -3.732126235961914
    7. '(distance' → logprob: -4.357126235961914
    8. ' distance' → logprob: -4.607126235961914
    9. 'distance' → logprob: -4.732126235961914
    10. ' cut' → logprob: -4.982126235961914

Token 1119: 'distance' (ID: 40614)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5305489301681519
    2. 'distance' → logprob: -2.0305490493774414
    3. ' distance' → logprob: -2.2805490493774414
    4. 'dist' → logprob: -2.7805490493774414
    5. '1' → logprob: -3.1555490493774414
    6. ' (' → logprob: -3.4055490493774414
    7. ' ' → logprob: -4.280549049377441
    8. ' A' → logprob: -5.280549049377441
    9. '(distance' → logprob: -5.655549049377441
    10. 'A' → logprob: -5.905549049377441

Token 1120: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020902375399600714
    2. '_from' → logprob: -9.125208854675293
    3. ')_' → logprob: -10.625208854675293
    4. ')' → logprob: -10.875208854675293
    5. '   ' → logprob: -11.375208854675293
    6. '*' → logprob: -11.875208854675293
    7. ' _' → logprob: -12.125208854675293
    8. '+' → logprob: -12.375208854675293
    9. '*_' → logprob: -12.750208854675293
    10. '_for' → logprob: -12.875208854675293

Token 1121: 'aller' (ID: 11605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002988776541315019
    2. ' _' → logprob: -9.125298500061035
    3. '_from' → logprob: -9.625298500061035
    4. '*' → logprob: -9.625298500061035
    5. '_all' → logprob: -11.625298500061035
    6. 'aller' → logprob: -11.625298500061035
    7. ' *' → logprob: -11.750298500061035
    8. 'from' → logprob: -12.125298500061035
    9. ')' → logprob: -12.375298500061035
    10. '   ' → logprob: -12.500298500061035

Token 1122: '_ret' (ID: 56051)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08521568775177002
    2. '_ret' → logprob: -2.5852155685424805
    3. '_return' → logprob: -5.8352155685424805
    4. '*_' → logprob: -7.2102155685424805
    5. '*' → logprob: -7.5852155685424805
    6. ')_' → logprob: -7.8352155685424805
    7. '_all' → logprob: -8.08521556854248
    8. '_to' → logprob: -8.33521556854248
    9. '_re' → logprob: -8.71021556854248
    10. '+' → logprob: -8.96021556854248

Token 1123: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.031192198395729065
    2. '```' → logprob: -4.656192302703857
    3. 'et' → logprob: -4.906192302703857
    4. 'urn' → logprob: -5.781192302703857
    5. '``' → logprob: -6.406192302703857
    6. 'un' → logprob: -6.531192302703857
    7. 'êt' → logprob: -7.031192302703857
    8. 'eturn' → logprob: -7.031192302703857
    9. 'out' → logprob: -7.281192302703857
    10. 'r' → logprob: -7.531192302703857

Token 1124: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5021642446517944
    2. ' *' → logprob: -1.6271642446517944
    3. '*' → logprob: -2.377164363861084
    4. '+' → logprob: -2.627164363861084
    5. ')*' → logprob: -3.752164363861084
    6. ')' → logprob: -4.752164363861084
    7. ' )' → logprob: -7.127164363861084
    8. ')+' → logprob: -8.502163887023926
    9. '   ' → logprob: -10.127163887023926
    10. ' ' → logprob: -11.502163887023926

Token 1125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01623447798192501
    2. ' ' → logprob: -4.141234397888184
    3. ')' → logprob: -8.766234397888184
    4. ' )' → logprob: -10.141234397888184
    5. '```' → logprob: -13.141234397888184
    6. '2' → logprob: -13.641234397888184
    7. ' ' → logprob: -14.891234397888184
    8. '0' → logprob: -15.266234397888184
    9. 'space' → logprob: -15.453734397888184
    10. '   ' → logprob: -15.516234397888184

Token 1126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035562426783144474
    2. ' ' → logprob: -5.878556251525879
    3. '2' → logprob: -7.253556251525879
    4. ')' → logprob: -11.003556251525879
    5. '```' → logprob: -11.878556251525879
    6. '0' → logprob: -12.003556251525879
    7. ' )' → logprob: -12.503556251525879
    8. '   ' → logprob: -12.628556251525879
    9. '
' → logprob: -13.628556251525879
    10. ' ' → logprob: -14.378556251525879

Token 1127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021280182991176844
    2. ')*' → logprob: -6.6271281242370605
    3. ' )' → logprob: -7.2521281242370605
    4. '+' → logprob: -10.002127647399902
    5. ')+' → logprob: -10.752127647399902
    6. ' +' → logprob: -11.502127647399902
    7. ')
' → logprob: -12.377127647399902
    8. '))' → logprob: -12.502127647399902
    9. '*' → logprob: -13.627127647399902
    10. '```' → logprob: -13.752127647399902

Token 1128: ' minutes' (ID: 5438)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2775421738624573
    2. '   ' → logprob: -1.5275421142578125
    3. 'for' → logprob: -4.2775421142578125
    4. '    
' → logprob: -5.9025421142578125
    5. '\n' → logprob: -6.2775421142578125
    6. ' for' → logprob: -6.6525421142578125
    7. ')
' → logprob: -7.0275421142578125
    8. 'def' → logprob: -7.1525421142578125
    9. ')' → logprob: -7.5275421142578125
    10. '

' → logprob: -7.6525421142578125

Token 1129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7108637094497681
    2. '   ' → logprob: -0.7108637094497681
    3. '    
' → logprob: -4.2108635902404785
    4. 'for' → logprob: -7.3358635902404785
    5. '\n' → logprob: -8.210864067077637
    6. 'def' → logprob: -8.585864067077637
    7. ' for' → logprob: -8.710864067077637
    8. ' 
' → logprob: -8.960864067077637
    9. '       ' → logprob: -9.085864067077637
    10. '
    
' → logprob: -9.085864067077637

Token 1130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13751401007175446
    2. '
' → logprob: -2.137514114379883
    3. '    
' → logprob: -5.512514114379883
    4. 'for' → logprob: -6.637514114379883
    5. ')
' → logprob: -6.887514114379883
    6. ')' → logprob: -7.137514114379883
    7. '\n' → logprob: -7.637514114379883
    8. '       ' → logprob: -7.762514114379883
    9. ' for' → logprob: -7.762514114379883
    10. '  
' → logprob: -8.137514114379883

Token 1131: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08883052319288254
    2. '
' → logprob: -2.9638304710388184
    3. 'for' → logprob: -3.8388304710388184
    4. '\n' → logprob: -5.588830471038818
    5. '    
' → logprob: -5.588830471038818
    6. ' for' → logprob: -6.588830471038818
    7. ')' → logprob: -7.588830471038818
    8. '       ' → logprob: -7.713830471038818
    9. ')
' → logprob: -7.713830471038818
    10. '\' → logprob: -8.088830947875977

Token 1132: ' Selon' (ID: 88731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18678583204746246
    2. 'for' → logprob: -2.436785936355591
    3. '
' → logprob: -2.561785936355591
    4. '    
' → logprob: -7.186785697937012
    5. '#' → logprob: -7.311785697937012
    6. ' for' → logprob: -7.311785697937012
    7. 'total' → logprob: -7.436785697937012
    8. '\n' → logprob: -7.436785697937012
    9. '       ' → logprob: -7.686785697937012
    10. 'def' → logprob: -8.061785697937012

Token 1133: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17881056666374207
    2. ' cette' → logprob: -2.4288105964660645
    3. 'la' → logprob: -4.0538105964660645
    4. 'len' → logprob: -4.3038105964660645
    5. ' le' → logprob: -4.4288105964660645
    6. ' len' → logprob: -4.6788105964660645
    7. 'le' → logprob: -4.8038105964660645
    8. '(' → logprob: -6.0538105964660645
    9. '(len' → logprob: -6.1788105964660645
    10. ' l' → logprob: -6.3038105964660645

Token 1134: ''ex' (ID: 23472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.278676986694336
    2. ' _' → logprob: -2.403676986694336
    3. ''' → logprob: -2.653676986694336
    4. ' logique' → logprob: -2.653676986694336
    5. ' ' → logprob: -2.778676986694336
    6. ' nombre' → logprob: -3.153676986694336
    7. ' code' → logprob: -3.153676986694336
    8. ' logic' → logprob: -3.278676986694336
    9. ' case' → logprob: -3.903676986694336
    10. ' i' → logprob: -4.028676986694336

Token 1135: 'emple' (ID: 55259)
  Prédit: 'planation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'planation' → logprob: -0.79988032579422
    2. 'pression' → logprob: -1.4248802661895752
    3. 'p' → logprob: -2.549880266189575
    4. 'act' → logprob: -2.924880266189575
    5. 'pr' → logprob: -3.924880266189575
    6. 'port' → logprob: -3.924880266189575
    7. 'cerpt' → logprob: -3.924880266189575
    8. 'pl' → logprob: -4.049880504608154
    9. 'tra' → logprob: -4.174880504608154
    10. '=' → logprob: -4.299880504608154

Token 1136: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1105194091796875
    2. ')
' → logprob: -1.1105194091796875
    3. '   ' → logprob: -2.6105194091796875
    4. ']' → logprob: -2.8605194091796875
    5. ':' → logprob: -3.2355194091796875
    6. '[' → logprob: -3.4855194091796875
    7. '):' → logprob: -3.7355194091796875
    8. '[i' → logprob: -4.1105194091796875
    9. '_' → logprob: -4.1105194091796875
    10. '_
' → logprob: -4.2355194091796875

Token 1137: ' le' (ID: 505)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9354778528213501
    2. '   ' → logprob: -1.31047785282135
    3. 'for' → logprob: -1.56047785282135
    4. ')' → logprob: -3.1854777336120605
    5. ' pour' → logprob: -3.9354777336120605
    6. '#' → logprob: -4.4354777336120605
    7. ' on' → logprob: -4.6854777336120605
    8. '       ' → logprob: -4.8104777336120605
    9. '    ' → logprob: -4.8104777336120605
    10. ':' → logprob: -5.8104777336120605

Token 1138: ' temps' (ID: 11160)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8721399903297424
    2. ' code' → logprob: -1.6221399307250977
    3. ' minimum' → logprob: -2.8721399307250977
    4. ' best' → logprob: -3.3721399307250977
    5. '_' → logprob: -3.8721399307250977
    6. ' plus' → logprob: -3.9971399307250977
    7. '#' → logprob: -4.122139930725098
    8. ')' → logprob: -4.247139930725098
    9. ' temps' → logprob: -4.247139930725098
    10. ' #' → logprob: -4.372139930725098

Token 1139: ' nécessaire' (ID: 43098)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7275747060775757
    2. '_' → logprob: -1.4775747060775757
    3. '+' → logprob: -1.9775747060775757
    4. ' +=' → logprob: -3.3525748252868652
    5. ' =' → logprob: -3.3525748252868652
    6. '+=' → logprob: -3.6025748252868652
    7. ')' → logprob: -3.7275748252868652
    8. ' ' → logprob: -5.352574825286865
    9. '_needed' → logprob: -5.852574825286865
    10. '[' → logprob: -6.227574825286865

Token 1140: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.162369728088379
    2. ')' → logprob: -1.287369728088379
    3. '=' → logprob: -1.912369728088379
    4. '   ' → logprob: -2.412369728088379
    5. ':' → logprob: -3.412369728088379
    6. ' =' → logprob: -3.412369728088379
    7. '+' → logprob: -3.537369728088379
    8. '#' → logprob: -4.287369728088379
    9. ',' → logprob: -4.662369728088379
    10. '<|end|>' → logprob: -4.662369728088379

Token 1141: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -1.689483404159546
    2. 'cou' → logprob: -1.814483404159546
    3. ' parcour' → logprob: -1.814483404159546
    4. 'tr' → logprob: -2.314483404159546
    5. 'porter' → logprob: -3.564483404159546
    6. 'par' → logprob: -3.564483404159546
    7. 'ouvrir' → logprob: -3.689483404159546
    8. 'contin' → logprob: -3.939483404159546
    9. ' aller' → logprob: -3.939483404159546
    10. ' trouver' → logprob: -4.064483642578125

Token 1142: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1143: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.05501102656126022
    2. ' ' → logprob: -3.430011034011841
    3. '_' → logprob: -5.305010795593262
    4. ' case' → logprob: -5.430010795593262
    5. ' espace' → logprob: -5.555010795593262
    6. ' arbres' → logprob: -6.430010795593262
    7. ')' → logprob: -7.055010795593262
    8. 'ar' → logprob: -7.305010795593262
    9. ' seul' → logprob: -7.430010795593262
    10. ' )' → logprob: -7.680010795593262

Token 1144: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21816380321979523
    2. '+' → logprob: -2.0931637287139893
    3. '<|end|>' → logprob: -3.8431637287139893
    4. ' +' → logprob: -4.718163967132568
    5. '[' → logprob: -4.843163967132568
    6. ' )' → logprob: -5.218163967132568
    7. '   ' → logprob: -5.593163967132568
    8. '#' → logprob: -5.593163967132568
    9. '_' → logprob: -5.843163967132568
    10. ',' → logprob: -5.968163967132568

Token 1145: ' le' (ID: 505)
  Prédit: 'porter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'porter' → logprob: -1.135561227798462
    2. 'ram' → logprob: -1.260561227798462
    3. ' ram' → logprob: -2.135561227798462
    4. ' le' → logprob: -2.385561227798462
    5. 'le' → logprob: -2.885561227798462
    6. ' porter' → logprob: -3.010561227798462
    7. ' transporter' → logprob: -3.135561227798462
    8. 'rap' → logprob: -5.010560989379883
    9. 'l' → logprob: -5.635560989379883
    10. 'ramer' → logprob: -5.760560989379883

Token 1146: ' rapport' (ID: 20847)
  Prédit: 'porter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'porter' → logprob: -0.30098938941955566
    2. 'ram' → logprob: -1.6759893894195557
    3. 'rap' → logprob: -3.4259893894195557
    4. 'trans' → logprob: -4.300989151000977
    5. 'poser' → logprob: -4.425989151000977
    6. ' ram' → logprob: -5.925989151000977
    7. 'port' → logprob: -6.175989151000977
    8. 'dé' → logprob: -6.300989151000977
    9. 'ramer' → logprob: -6.425989151000977
    10. 'transport' → logprob: -6.425989151000977

Token 1147: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.004749337211251259
    2. ' à' → logprob: -6.129749298095703
    3. 'ter' → logprob: -7.504749298095703
    4. 'é' → logprob: -7.629749298095703
    5. 'port' → logprob: -8.379749298095703
    6. '_' → logprob: -9.004749298095703
    7. 'r' → logprob: -9.129749298095703
    8. '=' → logprob: -9.129749298095703
    9. ' +' → logprob: -9.629749298095703
    10. '+' → logprob: -9.629749298095703

Token 1148: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7190489768981934
    2. ' à' → logprob: -1.4690489768981934
    3. ')' → logprob: -1.7190489768981934
    4. ' )' → logprob: -3.9690489768981934
    5. ' aux' → logprob: -4.094048976898193
    6. ' =' → logprob: -4.219048976898193
    7. '=' → logprob: -4.469048976898193
    8. ' jusqu' → logprob: -4.719048976898193
    9. 'à' → logprob: -4.969048976898193
    10. '```' → logprob: -4.969048976898193

Token 1149: ' :
' (ID: 10039)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7225775122642517
    2. '1' → logprob: -1.8475775718688965
    3. ' (' → logprob: -2.3475775718688965
    4. ' ' → logprob: -2.8475775718688965
    5. ' +' → logprob: -2.8475775718688965
    6. 'dist' → logprob: -3.0975775718688965
    7. '+' → logprob: -3.4725775718688965
    8. ' )' → logprob: -4.2225775718688965
    9. '(' → logprob: -4.5975775718688965
    10. ')' → logprob: -4.5975775718688965

Token 1150: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8535706400871277
    2. '1' → logprob: -1.4785706996917725
    3. ' dist' → logprob: -2.2285706996917725
    4. ' +' → logprob: -2.8535706996917725
    5. ' ' → logprob: -3.1035706996917725
    6. ' )' → logprob: -3.4785706996917725
    7. '+' → logprob: -3.9785706996917725
    8. '(dist' → logprob: -4.103570461273193
    9. 'dist' → logprob: -4.353570461273193
    10. ')' → logprob: -4.478570461273193

Token 1151: ' #' (ID: 1069)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7983608245849609
    2. ' (' → logprob: -1.548360824584961
    3. '1' → logprob: -2.548360824584961
    4. '(dist' → logprob: -2.798360824584961
    5. 'dist' → logprob: -2.923360824584961
    6. '(distance' → logprob: -3.298360824584961
    7. ' ' → logprob: -3.923360824584961
    8. ' "' → logprob: -4.173360824584961
    9. 'distance' → logprob: -4.298360824584961
    10. '"' → logprob: -4.423360824584961

Token 1152: ' temps' (ID: 11160)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7228031158447266
    2. ' (' → logprob: -1.9728031158447266
    3. '1' → logprob: -2.0978031158447266
    4. '(dist' → logprob: -2.4728031158447266
    5. 'dist' → logprob: -2.5978031158447266
    6. '(distance' → logprob: -2.9728031158447266
    7. 'distance' → logprob: -4.722803115844727
    8. ' +' → logprob: -5.222803115844727
    9. ' ' → logprob: -5.222803115844727
    10. '"' → logprob: -5.347803115844727

Token 1153: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6631147861480713
    2. ' +' → logprob: -1.6631147861480713
    3. ' =' → logprob: -1.9131147861480713
    4. '+' → logprob: -2.7881147861480713
    5. '=' → logprob: -3.4131147861480713
    6. '   ' → logprob: -4.288114547729492
    7. ' +=' → logprob: -4.538114547729492
    8. ')' → logprob: -5.163114547729492
    9. ' _' → logprob: -5.788114547729492
    10. '_to' → logprob: -6.288114547729492

Token 1154: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.29538875818252563
    2. ' dist' → logprob: -1.4203886985778809
    3. '(dist' → logprob: -4.545388698577881
    4. ' (' → logprob: -5.920388698577881
    5. 'distance' → logprob: -7.920388698577881
    6. '   ' → logprob: -9.170389175415039
    7. '1' → logprob: -9.420389175415039
    8. '(' → logprob: -9.420389175415039
    9. '(distance' → logprob: -10.295389175415039
    10. ' distance' → logprob: -10.420389175415039

Token 1155: '2' (ID: 17)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.025326073169708252
    2. '(dist' → logprob: -3.9003260135650635
    3. 'min' → logprob: -5.775326251983643
    4. ' dist' → logprob: -7.775326251983643
    5. '1' → logprob: -7.900326251983643
    6. 'A' → logprob: -9.025325775146484
    7. '(min' → logprob: -9.025325775146484
    8. 'sum' → logprob: -9.275325775146484
    9. '(' → logprob: -9.275325775146484
    10. ' (' → logprob: -9.650325775146484

Token 1156: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3367791771888733
    2. '**' → logprob: -3.0867791175842285
    3. '
' → logprob: -3.2117791175842285
    4. ':' → logprob: -3.4617791175842285
    5. ')
' → logprob: -3.7117791175842285
    6. '+' → logprob: -3.7117791175842285
    7. '):' → logprob: -3.9617791175842285
    8. '*' → logprob: -4.0867791175842285
    9. ' ' → logprob: -4.3367791175842285
    10. ' +' → logprob: -4.7117791175842285

Token 1157: 'distance' (ID: 40614)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14470666646957397
    2. ' dist' → logprob: -2.0197067260742188
    3. '(dist' → logprob: -6.269706726074219
    4. ' (' → logprob: -9.394706726074219
    5. 'distance' → logprob: -10.269706726074219
    6. '	dist' → logprob: -12.019706726074219
    7. '_dist' → logprob: -12.894706726074219
    8. ' distance' → logprob: -13.144706726074219
    9. '(' → logprob: -13.519706726074219
    10. '.dist' → logprob: -13.894706726074219

Token 1158: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8784741759300232
    2. '_' → logprob: -1.503474235534668
    3. '   ' → logprob: -2.878474235534668
    4. '[' → logprob: -2.878474235534668
    5. ')
' → logprob: -3.628474235534668
    6. '_
' → logprob: -3.753474235534668
    7. '[
' → logprob: -3.878474235534668
    8. ']' → logprob: -4.003474235534668
    9. ':' → logprob: -4.128474235534668
    10. '*' → logprob: -4.253474235534668

Token 1159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021923754829913378
    2. ' ' → logprob: -6.127192497253418
    3. '0' → logprob: -12.752192497253418
    4. '```' → logprob: -13.002192497253418
    5. '2' → logprob: -14.127192497253418
    6. ' +' → logprob: -15.252192497253418
    7. '   ' → logprob: -15.377192497253418
    8. '`' → logprob: -15.627192497253418
    9. '"' → logprob: -15.627192497253418
    10. 'import' → logprob: -16.0021915435791

Token 1160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012635723687708378
    2. ' ' → logprob: -4.387635707855225
    3. '0' → logprob: -9.637636184692383
    4. '```' → logprob: -10.637636184692383
    5. '2' → logprob: -11.137636184692383
    6. '"' → logprob: -11.887636184692383
    7. ' +' → logprob: -12.762636184692383
    8. '
' → logprob: -13.137636184692383
    9. '+' → logprob: -13.262636184692383
    10. '`' → logprob: -13.512636184692383

Token 1161: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48212239146232605
    2. ':' → logprob: -2.3571224212646484
    3. '
' → logprob: -2.7321224212646484
    4. '\n' → logprob: -2.9821224212646484
    5. ':
' → logprob: -3.4821224212646484
    6. ')' → logprob: -3.4821224212646484
    7. '       ' → logprob: -4.107122421264648
    8. '\' → logprob: -4.232122421264648
    9. ')
' → logprob: -4.482122421264648
    10. 'for' → logprob: -4.607122421264648

Token 1162: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31360098719596863
    2. ')
' → logprob: -1.813601016998291
    3. '   ' → logprob: -2.313601016998291
    4. '```' → logprob: -5.938601016998291
    5. '}' → logprob: -6.813601016998291
    6. ')
' → logprob: -7.063601016998291
    7. '       ' → logprob: -7.188601016998291
    8. '}
' → logprob: -8.063600540161133
    9. ')}' → logprob: -8.438600540161133
    10. '
' → logprob: -8.563600540161133

Token 1163: ''ex' (ID: 23472)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0497143380343914
    2. '*' → logprob: -4.5497145652771
    3. '+' → logprob: -4.7997145652771
    4. ')
' → logprob: -5.0497145652771
    5. ' )' → logprob: -5.2997145652771
    6. 'e' → logprob: -5.5497145652771
    7. '0' → logprob: -5.6747145652771
    8. '=' → logprob: -6.6747145652771
    9. '
' → logprob: -6.7997145652771
    10. '2' → logprob: -6.9247145652771

Token 1164: 'emple' (ID: 55259)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8953322172164917
    2. ')' → logprob: -1.6453322172164917
    3. '\n' → logprob: -1.6453322172164917
    4. '#' → logprob: -2.8953323364257812
    5. '_' → logprob: -3.8953323364257812
    6. 'space' → logprob: -4.145332336425781
    7. 'e' → logprob: -4.270332336425781
    8. '=' → logprob: -4.895332336425781
    9. '*' → logprob: -5.020332336425781
    10. 'pression' → logprob: -5.020332336425781

Token 1165: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004169221967458725
    2. ')*' → logprob: -6.75416898727417
    3. '):' → logprob: -7.50416898727417
    4. '+' → logprob: -8.004169464111328
    5. ')+' → logprob: -8.004169464111328
    6. ' )' → logprob: -8.004169464111328
    7. ')**' → logprob: -8.004169464111328
    8. '[' → logprob: -8.379169464111328
    9. ')
' → logprob: -8.879169464111328
    10. ':' → logprob: -9.129169464111328

Token 1166: ' montre' (ID: 56262)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01916765607893467
    2. '[' → logprob: -5.519167423248291
    3. '*' → logprob: -6.144167423248291
    4. '+' → logprob: -6.144167423248291
    5. ']' → logprob: -6.394167423248291
    6. '}' → logprob: -6.394167423248291
    7. ' )' → logprob: -6.894167423248291
    8. '=' → logprob: -7.394167423248291
    9. '#' → logprob: -7.394167423248291
    10. '==' → logprob: -7.394167423248291

Token 1167: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2886359989643097
    2. ')
' → logprob: -2.1636359691619873
    3. '   ' → logprob: -3.2886359691619873
    4. ':' → logprob: -3.2886359691619873
    5. '):' → logprob: -4.538636207580566
    6. '+' → logprob: -4.663636207580566
    7. '
' → logprob: -4.913636207580566
    8. '*' → logprob: -5.288636207580566
    9. ':
' → logprob: -5.538636207580566
    10. ',' → logprob: -5.913636207580566

Token 1168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21777136623859406
    2. ')
' → logprob: -1.8427714109420776
    3. '}' → logprob: -3.717771291732788
    4. '   ' → logprob: -5.592771530151367
    5. '}
' → logprob: -5.592771530151367
    6. ')
' → logprob: -6.217771530151367
    7. '2' → logprob: -7.342771530151367
    8. '```' → logprob: -7.342771530151367
    9. ')}' → logprob: -7.967771530151367
    10. '*' → logprob: -7.967771530151367

Token 1169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36780285835266113
    2. ')
' → logprob: -2.117802858352661
    3. '
' → logprob: -2.367802858352661
    4. ')' → logprob: -3.117802858352661
    5. ':' → logprob: -4.867802619934082
    6. ':
' → logprob: -4.992802619934082
    7. '       ' → logprob: -5.492802619934082
    8. '    
' → logprob: -5.617802619934082
    9. '\n' → logprob: -5.992802619934082
    10. '):' → logprob: -6.117802619934082

Token 1170: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08187592029571533
    2. '
' → logprob: -3.081875801086426
    3. ')
' → logprob: -4.456875801086426
    4. '    
' → logprob: -4.831875801086426
    5. ')' → logprob: -5.831875801086426
    6. '\n' → logprob: -6.456875801086426
    7. '       ' → logprob: -6.456875801086426
    8. ':' → logprob: -6.956875801086426
    9. ':
' → logprob: -7.331875801086426
    10. '```' → logprob: -7.331875801086426

Token 1171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02909325435757637
    2. ')' → logprob: -4.779093265533447
    3. '
' → logprob: -5.279093265533447
    4. 'for' → logprob: -5.279093265533447
    5. 'def' → logprob: -6.154093265533447
    6. ')
' → logprob: -6.654093265533447
    7. 'if' → logprob: -6.654093265533447
    8. '    
' → logprob: -6.779093265533447
    9. '       ' → logprob: -7.779093265533447
    10. '#' → logprob: -7.904093265533447

Token 1172: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019139237701892853
    2. ' for' → logprob: -5.019139289855957
    3. 'for' → logprob: -5.144139289855957
    4. '
' → logprob: -6.019139289855957
    5. '#' (adapté à ' #') → logprob: -7.019139289855957
    6. 'def' → logprob: -7.269139289855957
    7. '    
' → logprob: -7.644139289855957
    8. ')' → logprob: -7.894139289855957
    9. '       ' → logprob: -8.019139289855957
    10. 'distance' → logprob: -8.144139289855957

Token 1173: ' Exemple' (ID: 142783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5125726461410522
    2. '#' → logprob: -1.3875726461410522
    3. 'for' → logprob: -2.762572765350342
    4. 'total' → logprob: -3.137572765350342
    5. 'time' → logprob: -4.512572765350342
    6. 'temps' → logprob: -5.012572765350342
    7. 'min' → logprob: -5.137572765350342
    8. '
' → logprob: -5.262572765350342
    9. 'max' → logprob: -5.512572765350342
    10. 'cost' → logprob: -6.512572765350342

Token 1174: ' donné' (ID: 52079)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32434454560279846
    2. ')' → logprob: -2.1993446350097656
    3. '[' → logprob: -2.8243446350097656
    4. '   ' → logprob: -3.4493446350097656
    5. '(' → logprob: -4.324344635009766
    6. '):' → logprob: -4.449344635009766
    7. 'def' → logprob: -5.074344635009766
    8. '```' → logprob: -5.324344635009766
    9. '<|end|>' → logprob: -5.699344635009766
    10. ' =' → logprob: -5.699344635009766

Token 1175: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5689209699630737
    2. ':' → logprob: -1.4439209699630737
    3. '
' → logprob: -3.0689210891723633
    4. ')' → logprob: -3.3189210891723633
    5. '):' → logprob: -3.9439210891723633
    6. '[' → logprob: -4.068921089172363
    7. ')
' → logprob: -4.193921089172363
    8. ':
' → logprob: -4.318921089172363
    9. '```' → logprob: -4.443921089172363
    10. '\n' → logprob: -5.193921089172363

Token 1176: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7456957101821899
    2. 'A' → logprob: -1.74569571018219
    3. ')' → logprob: -2.6206955909729004
    4. ' A' → logprob: -3.3706955909729004
    5. 'dist' → logprob: -3.4956955909729004
    6. 'range' → logprob: -3.8706955909729004
    7. ':' → logprob: -3.9956955909729004
    8. '       ' → logprob: -4.2456955909729
    9. '
' → logprob: -4.2456955909729
    10. '#' → logprob: -4.3706955909729

Token 1177: ''' (ID: 6)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.300568699836731
    2. ')' → logprob: -1.425568699836731
    3. '_' → logprob: -1.800568699836731
    4. ''' → logprob: -2.6755685806274414
    5. ':' → logprob: -2.8005685806274414
    6. ']' → logprob: -3.4255685806274414
    7. '#' → logprob: -3.6755685806274414
    8. ' code' → logprob: -3.6755685806274414
    9. '[
' → logprob: -4.550568580627441
    10. '```' → logprob: -4.675568580627441

Token 1178: 'én' (ID: 3289)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -2.368773937225342
    2. ':' → logprob: -2.368773937225342
    3. 'code' → logprob: -2.368773937225342
    4. '#' → logprob: -2.493773937225342
    5. 'A' → logprob: -2.618773937225342
    6. '"' → logprob: -2.618773937225342
    7. ')' → logprob: -2.618773937225342
    8. ' code' → logprob: -2.743773937225342
    9. 'def' → logprob: -2.868773937225342
    10. '...' → logprob: -3.618773937225342

Token 1179: 'oncé' (ID: 59071)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6563402414321899
    2. ')
' → logprob: -1.78134024143219
    3. 'def' → logprob: -3.0313401222229004
    4. '       ' → logprob: -3.2813401222229004
    5. ']
' → logprob: -3.2813401222229004
    6. ':
' → logprob: -3.5313401222229004
    7. ']' → logprob: -3.9063401222229004
    8. '[' → logprob: -3.9063401222229004
    9. '[
' → logprob: -3.9063401222229004
    10. ':' → logprob: -4.0313401222229

Token 1180: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38990819454193115
    2. ':' → logprob: -1.3899081945419312
    3. '
' → logprob: -3.7649083137512207
    4. ':
' → logprob: -4.014908313751221
    5. ')' → logprob: -4.764908313751221
    6. '):' → logprob: -5.014908313751221
    7. ')
' → logprob: -5.639908313751221
    8. '       ' → logprob: -6.139908313751221
    9. '    
' → logprob: -6.389908313751221
    10. '[' → logprob: -6.764908313751221

Token 1181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9188075661659241
    2. ')' → logprob: -1.4188075065612793
    3. ':' → logprob: -2.2938075065612793
    4. ')
' → logprob: -3.2938075065612793
    5. '):' → logprob: -3.7938075065612793
    6. '
' → logprob: -3.9188075065612793
    7. ' 
' → logprob: -4.043807506561279
    8. 'def' → logprob: -4.043807506561279
    9. '[' → logprob: -4.043807506561279
    10. '(' → logprob: -4.168807506561279

Token 1182: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9199408292770386
    2. ')' → logprob: -1.6699408292770386
    3. '(' → logprob: -2.919940948486328
    4. ' 
' → logprob: -3.044940948486328
    5. ':' → logprob: -3.169940948486328
    6. ' ' → logprob: -3.294940948486328
    7. ' (' → logprob: -3.544940948486328
    8. '\n' → logprob: -3.669940948486328
    9. '+' → logprob: -4.169940948486328
    10. '[' → logprob: -4.294940948486328

Token 1183: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7133470773696899
    2. ')' → logprob: -2.2133469581604004
    3. '
' → logprob: -2.2133469581604004
    4. ':' → logprob: -2.9633469581604004
    5. '<|end|>' → logprob: -3.2133469581604004
    6. '<|end|>' → logprob: -3.4633469581604004
    7. '[' → logprob: -3.7133469581604004
    8. ' ' → logprob: -3.8383469581604004
    9. ' 
' → logprob: -3.8383469581604004
    10. '\n' → logprob: -4.2133469581604

Token 1184: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4678910970687866
    2. '(' → logprob: -2.217891216278076
    3. ' (' → logprob: -2.217891216278076
    4. 'i' → logprob: -2.717891216278076
    5. ' i' → logprob: -2.967891216278076
    6. ' chaque' → logprob: -4.467891216278076
    7. 'cut' → logprob: -5.467891216278076
    8. ' couper' → logprob: -5.717891216278076
    9. ' la' → logprob: -5.842891216278076
    10. ' ' → logprob: -6.342891216278076

Token 1185: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3655015826225281
    2. '0' → logprob: -1.9905016422271729
    3. ')' → logprob: -3.115501642227173
    4. ',' → logprob: -3.240501642227173
    5. ' i' → logprob: -3.490501642227173
    6. ' (' → logprob: -3.990501642227173
    7. '(' → logprob: -4.490501403808594
    8. '1' → logprob: -4.740501403808594
    9. ' ,' → logprob: -5.865501403808594
    10. ' ' → logprob: -5.865501403808594

Token 1186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06303109973669052
    2. ')' → logprob: -3.3130311965942383
    3. '0' → logprob: -4.813031196594238
    4. ' ,' → logprob: -4.938031196594238
    5. ',j' → logprob: -5.438031196594238
    6. '),' → logprob: -7.188031196594238
    7. '   ' → logprob: -7.438031196594238
    8. ',
' → logprob: -7.938031196594238
    9. '),
' → logprob: -7.938031196594238
    10. '1' → logprob: -8.063031196594238

Token 1187: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12309172749519348
    2. ',' → logprob: -2.748091697692871
    3. '1' → logprob: -3.248091697692871
    4. ')' → logprob: -4.873091697692871
    5. ',j' → logprob: -5.998091697692871
    6. '2' → logprob: -6.623091697692871
    7. '```' → logprob: -7.748091697692871
    8. ' ' → logprob: -7.873091697692871
    9. '   ' → logprob: -8.748091697692871
    10. ' ,' → logprob: -8.998091697692871

Token 1188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18232761323451996
    2. ',' → logprob: -1.9323276281356812
    3. ')
' → logprob: -4.307327747344971
    4. '):' → logprob: -5.932327747344971
    5. '),' → logprob: -6.807327747344971
    6. '   ' → logprob: -6.807327747344971
    7. '[' → logprob: -6.807327747344971
    8. '):
' → logprob: -7.557327747344971
    9. ',
' → logprob: -7.682327747344971
    10. '```' → logprob: -8.432327270507812

Token 1189: ' avec' (ID: 3937)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27638325095176697
    2. ')' → logprob: -2.7763831615448
    3. '[' → logprob: -2.7763831615448
    4. '   ' → logprob: -3.6513831615448
    5. ',' → logprob: -3.7763831615448
    6. '):' → logprob: -3.7763831615448
    7. ']' → logprob: -3.9013831615448
    8. ':
' → logprob: -5.151383399963379
    9. '       ' → logprob: -6.276383399963379
    10. '#' → logprob: -6.651383399963379

Token 1190: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3331577777862549
    2. 'A' → logprob: -1.5831577777862549
    3. '0' → logprob: -2.333157777786255
    4. 'trees' → logprob: -2.333157777786255
    5. ' A' → logprob: -2.708157777786255
    6. '1' → logprob: -2.708157777786255
    7. 'arb' → logprob: -2.958157777786255
    8. ' arbres' → logprob: -3.208157777786255
    9. '   ' → logprob: -3.583157777786255
    10. '3' → logprob: -3.708157777786255

Token 1191: '2' (ID: 17)
  Prédit: 'trees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trees' → logprob: -0.4319314658641815
    2. '0' → logprob: -2.431931495666504
    3. '1' → logprob: -2.431931495666504
    4. ')' → logprob: -2.931931495666504
    5. '2' → logprob: -3.556931495666504
    6. 'A' → logprob: -3.681931495666504
    7. '3' → logprob: -3.931931495666504
    8. ' arbres' → logprob: -4.306931495666504
    9. ',' → logprob: -5.681931495666504
    10. ' trees' → logprob: -5.681931495666504

Token 1192: ' arbres' (ID: 127011)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0794564485549927
    2. ':' → logprob: -1.5794564485549927
    3. '   ' → logprob: -1.7044564485549927
    4. ')' → logprob: -2.704456329345703
    5. ']' → logprob: -2.829456329345703
    6. '):' → logprob: -3.204456329345703
    7. ' ,' → logprob: -3.579456329345703
    8. ',
' → logprob: -4.204456329345703
    9. ':
' → logprob: -4.954456329345703
    10. ' ' → logprob: -5.079456329345703

Token 1193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7708083987236023
    2. '   ' → logprob: -0.8958083987236023
    3. ':
' → logprob: -2.895808458328247
    4. '):' → logprob: -3.645808458328247
    5. '       ' → logprob: -4.770808219909668
    6. '):
' → logprob: -5.520808219909668
    7. 'for' → logprob: -5.520808219909668
    8. ')' → logprob: -5.520808219909668
    9. ' for' → logprob: -6.020808219909668
    10. ' :' → logprob: -6.020808219909668

Token 1194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28085315227508545
    2. '       ' → logprob: -2.030853271484375
    3. ')' → logprob: -3.405853271484375
    4. '    ' → logprob: -3.780853271484375
    5. '#' → logprob: -4.280853271484375
    6. '                   ' → logprob: -5.030853271484375
    7. '                       ' → logprob: -5.655853271484375
    8. '           ' → logprob: -5.780853271484375
    9. ' )' → logprob: -5.905853271484375
    10. ' #' → logprob: -6.155853271484375

Token 1195: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22475500404834747
    2. ':' → logprob: -2.724755048751831
    3. '       ' → logprob: -3.099755048751831
    4. '    ' → logprob: -3.974755048751831
    5. ' :' → logprob: -4.099754810333252
    6. ',' → logprob: -4.599754810333252
    7. ')' → logprob: -5.224754810333252
    8. ' (' → logprob: -5.599754810333252
    9. '):' → logprob: -5.599754810333252
    10. ' *' → logprob: -5.849754810333252

Token 1196: ' distance' (ID: 9324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.721136212348938
    2. ' #' → logprob: -2.2211360931396484
    3. '#' → logprob: -2.4711360931396484
    4. ' *' → logprob: -2.5961360931396484
    5. ' +' → logprob: -2.8461360931396484
    6. '       ' → logprob: -2.8461360931396484
    7. ' (' → logprob: -4.221136093139648
    8. '+' → logprob: -4.221136093139648
    9. '                       ' → logprob: -4.471136093139648
    10. '    ' → logprob: -4.471136093139648

Token 1197: ' from' (ID: 591)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.5716696977615356
    2. '_' → logprob: -1.1966696977615356
    3. '[' → logprob: -3.196669578552246
    4. '_to' → logprob: -3.946669578552246
    5. '   ' → logprob: -4.196669578552246
    6. '(' → logprob: -4.321669578552246
    7. ',' → logprob: -4.446669578552246
    8. ')' → logprob: -4.821669578552246
    9. '=' → logprob: -5.196669578552246
    10. '_for' → logprob: -5.821669578552246

Token 1198: ' usine' (ID: 124673)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40881121158599854
    2. '(' → logprob: -1.6588112115859985
    3. 'start' → logprob: -2.658811092376709
    4. 'i' → logprob: -2.908811092376709
    5. '_start' → logprob: -5.158811092376709
    6. '1' → logprob: -5.783811092376709
    7. ',' → logprob: -5.908811092376709
    8. ' (' → logprob: -6.033811092376709
    9. ' ' → logprob: -6.658811092376709
    10. '   ' → logprob: -7.283811092376709

Token 1199: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.035304069519043
    2. '   ' → logprob: -1.535304069519043
    3. ')' → logprob: -2.035304069519043
    4. '_to' → logprob: -2.410304069519043
    5. '_from' → logprob: -3.160304069519043
    6. '+' → logprob: -3.535304069519043
    7. '```' → logprob: -3.660304069519043
    8. '[(' → logprob: -4.035304069519043
    9. ' +' → logprob: -4.660304069519043
    10. '_' → logprob: -4.660304069519043

Token 1200: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03877958655357361
    2. 'la' → logprob: -4.2887797355651855
    3. 'adj' → logprob: -4.5387797355651855
    4. ' (' → logprob: -5.0387797355651855
    5. '0' → logprob: -6.2887797355651855
    6. 'une' → logprob: -6.6637797355651855
    7. 'l' → logprob: -7.0387797355651855
    8. 'case' → logprob: -7.2887797355651855
    9. 'b' → logprob: -7.6637797355651855
    10. ' la' → logprob: -8.038779258728027

Token 1201: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5889847874641418
    2. '1' → logprob: -1.213984727859497
    3. ',' → logprob: -2.963984727859497
    4. ' ' → logprob: -3.213984727859497
    5. ')' → logprob: -3.588984727859497
    6. 'i' → logprob: -5.088984966278076
    7. ' (' → logprob: -5.213984966278076
    8. '2' → logprob: -5.338984966278076
    9. ' ,' → logprob: -5.713984966278076
    10. '(' → logprob: -6.213984966278076

Token 1202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025336870457977057
    2. ',j' → logprob: -6.627533912658691
    3. '3' → logprob: -7.627533912658691
    4. ')' → logprob: -8.252533912658691
    5. '   ' → logprob: -8.627533912658691
    6. '[' → logprob: -9.877533912658691
    7. '```' → logprob: -10.002533912658691
    8. ' ,' → logprob: -10.127533912658691
    9. ',n' → logprob: -10.502533912658691
    10. ',
' → logprob: -10.627533912658691

Token 1203: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5768833756446838
    2. '3' → logprob: -0.8268833756446838
    3. '0' → logprob: -7.826883316040039
    4. ' ' → logprob: -8.451883316040039
    5. 'adj' → logprob: -8.951883316040039
    6. '1' → logprob: -9.701883316040039
    7. '   ' → logprob: -10.326883316040039
    8. '4' → logprob: -10.326883316040039
    9. '
' → logprob: -10.701883316040039
    10. ')' → logprob: -11.201883316040039

Token 1204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0699889063835144
    2. ',' → logprob: -3.694988965988159
    3. ')+' → logprob: -3.694988965988159
    4. '+' → logprob: -5.44498872756958
    5. '),' → logprob: -5.69498872756958
    6. '[' → logprob: -6.19498872756958
    7. '   ' → logprob: -6.56998872756958
    8. ' )' → logprob: -6.69498872756958
    9. '-' → logprob: -7.31998872756958
    10. ']' → logprob: -7.56998872756958

Token 1205: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7631540298461914
    2. ' +' → logprob: -1.8881540298461914
    3. ' =' → logprob: -2.7631540298461914
    4. ' )' → logprob: -2.7631540298461914
    5. '+' → logprob: -2.8881540298461914
    6. ' is' → logprob: -3.8881540298461914
    7. ':' → logprob: -4.138154029846191
    8. ' *' → logprob: -4.263154029846191
    9. ')+' → logprob: -4.513154029846191
    10. ',' → logprob: -4.513154029846191

Token 1206: ' ' (ID: 220)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.2575602531433105
    2. ' ' → logprob: -1.3825602531433105
    3. ' dist' → logprob: -1.7575602531433105
    4. 'dist' → logprob: -2.2575602531433105
    5. ' +' → logprob: -3.1325602531433105
    6. '-' → logprob: -3.3825602531433105
    7. '+' → logprob: -3.6325602531433105
    8. '0' → logprob: -3.8825602531433105
    9. '1' → logprob: -4.1325602531433105
    10. '2' → logprob: -4.1325602531433105

Token 1207: '2' (ID: 17)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23986104130744934
    2. ' dist' → logprob: -2.114861011505127
    3. '-' → logprob: -2.739861011505127
    4. '0' → logprob: -4.864861011505127
    5. ' -' → logprob: -4.864861011505127
    6. '1' → logprob: -5.239861011505127
    7. '2' → logprob: -6.239861011505127
    8. 'inf' → logprob: -6.864861011505127
    9. ' ' → logprob: -6.989861011505127
    10. '```' → logprob: -7.239861011505127

Token 1208: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8569813966751099
    2. '   ' → logprob: -0.8569813966751099
    3. ')' → logprob: -2.7319812774658203
    4. '[' → logprob: -3.7319812774658203
    5. ']' → logprob: -4.60698127746582
    6. ',' → logprob: -4.98198127746582
    7. '):' → logprob: -4.98198127746582
    8. '
' → logprob: -5.10698127746582
    9. ' ' → logprob: -5.35698127746582
    10. '       ' → logprob: -5.73198127746582

Token 1209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0653314590454102
    2. ')' → logprob: -1.3153314590454102
    3. ')
' → logprob: -1.5653314590454102
    4. ',' → logprob: -3.19033145904541
    5. '
' → logprob: -3.56533145904541
    6. '                   ' → logprob: -3.69033145904541
    7. ',
' → logprob: -4.69033145904541
    8. '       ' → logprob: -4.81533145904541
    9. '),' → logprob: -4.94033145904541
    10. ':' → logprob: -5.06533145904541

Token 1210: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7679697871208191
    2. ')
' → logprob: -1.5179698467254639
    3. ')' → logprob: -2.142969846725464
    4. '                   ' → logprob: -2.892969846725464
    5. '       ' → logprob: -3.517969846725464
    6. ':
' → logprob: -3.892969846725464
    7. '               ' → logprob: -4.142969608306885
    8. ':' → logprob: -4.142969608306885
    9. '```' → logprob: -5.142969608306885
    10. ',' → logprob: -5.267969608306885

Token 1211: ' temps' (ID: 11160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1582310199737549
    2. ')' → logprob: -1.2832310199737549
    3. '+' → logprob: -1.4082310199737549
    4. ' +' → logprob: -2.783231019973755
    5. '+
' → logprob: -3.533231019973755
    6. ')
' → logprob: -4.658230781555176
    7. '*' → logprob: -4.783230781555176
    8. ' +
' → logprob: -5.158230781555176
    9. '       ' → logprob: -5.408230781555176
    10. '#' → logprob: -5.408230781555176

Token 1212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11316589266061783
    2. '=' → logprob: -2.238165855407715
    3. '   ' → logprob: -9.488165855407715
    4. '*' → logprob: -9.738165855407715
    5. ' +=' → logprob: -9.988165855407715
    6. '+' → logprob: -10.238165855407715
    7. ' *' → logprob: -10.613165855407715
    8. ')' → logprob: -10.863165855407715
    9. '_' → logprob: -11.238165855407715
    10. ' ' → logprob: -11.613165855407715

Token 1213: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06610415875911713
    2. '(' → logprob: -2.8161041736602783
    3. ' ' → logprob: -6.191103935241699
    4. 'dist' → logprob: -7.316103935241699
    5. ' (' → logprob: -7.566103935241699
    6. '3' → logprob: -8.0661039352417
    7. 'distance' → logprob: -8.8161039352417
    8. '1' → logprob: -9.1911039352417
    9. '5' → logprob: -9.3161039352417
    10. ' dist' → logprob: -9.9411039352417

Token 1214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.028331762179732323
    2. '(' → logprob: -3.653331756591797
    3. 'dist' → logprob: -6.528331756591797
    4. '3' → logprob: -8.153331756591797
    5. '(dist' → logprob: -9.653331756591797
    6. '1' → logprob: -9.778331756591797
    7. '5' → logprob: -10.403331756591797
    8. '4' → logprob: -10.528331756591797
    9. 'distance' → logprob: -10.653331756591797
    10. ' ' → logprob: -10.778331756591797

Token 1215: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20247608423233032
    2. ' *' → logprob: -1.7024760246276855
    3. '*(' → logprob: -7.2024760246276855
    4. '**' → logprob: -8.702476501464844
    5. ' +' → logprob: -10.452476501464844
    6. '+' → logprob: -10.702476501464844
    7. ' ' → logprob: -11.077476501464844
    8. ' ' → logprob: -11.202476501464844
    9. ')' → logprob: -11.452476501464844
    10. '#' → logprob: -11.577476501464844

Token 1216: ' distance' (ID: 9324)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2591816186904907
    2. 'distance' → logprob: -2.134181499481201
    3. '(' → logprob: -2.384181499481201
    4. '(distance' → logprob: -4.134181499481201
    5. 'dist' → logprob: -7.259181499481201
    6. ' (' → logprob: -7.259181499481201
    7. '(dist' → logprob: -9.25918197631836
    8. '(
' → logprob: -9.38418197631836
    9. ' distance' → logprob: -9.75918197631836
    10. ' ' → logprob: -9.75918197631836

Token 1217: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7533838748931885
    2. ' *' → logprob: -1.3783838748931885
    3. ' +' → logprob: -2.3783838748931885
    4. '*' → logprob: -2.8783838748931885
    5. '   ' → logprob: -3.2533838748931885
    6. '+' → logprob: -3.5033838748931885
    7. ' )' → logprob: -4.628383636474609
    8. 'from' → logprob: -4.753383636474609
    9. ' ' → logprob: -5.128383636474609
    10. ',' → logprob: -5.378383636474609

Token 1218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.102680633077398e-05
    2. ' ' → logprob: -9.375090599060059
    3. '2' → logprob: -12.250090599060059
    4. '0' → logprob: -15.125090599060059
    5. '3' → logprob: -15.125090599060059
    6. '```' → logprob: -15.312590599060059
    7. '(' → logprob: -15.937590599060059
    8. '   ' → logprob: -16.500091552734375
    9. '+' → logprob: -16.750091552734375
    10. '`' → logprob: -17.312591552734375

Token 1219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001354824344161898
    2. ' ' → logprob: -9.00013542175293
    3. '2' → logprob: -12.00013542175293
    4. '(' → logprob: -12.50013542175293
    5. '3' → logprob: -13.75013542175293
    6. '0' → logprob: -14.87513542175293
    7. ' (' → logprob: -15.93763542175293
    8. 'dist' → logprob: -16.31263542175293
    9. '   ' → logprob: -16.62513542175293
    10. '+' → logprob: -16.93763542175293

Token 1220: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7003999948501587
    2. ':' → logprob: -1.9503999948501587
    3. '   ' → logprob: -2.075399875640869
    4. ')
' → logprob: -2.075399875640869
    5. '):' → logprob: -3.825399875640869
    6. ']' → logprob: -4.075399875640869
    7. '[' → logprob: -4.075399875640869
    8. 'def' → logprob: -4.450399875640869
    9. ':
' → logprob: -4.825399875640869
    10. '*' → logprob: -5.700399875640869

Token 1221: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.7860127687454224
    2. ' ' → logprob: -0.9110127687454224
    3. '3' → logprob: -2.411012649536133
    4. '2' → logprob: -3.911012649536133
    5. '1' → logprob: -4.036012649536133
    6. ' (' → logprob: -4.536012649536133
    7. '(' → logprob: -6.036012649536133
    8. ')' → logprob: -8.036012649536133
    9. '4' → logprob: -8.286012649536133
    10. '```' → logprob: -8.786012649536133

Token 1222: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6106898784637451
    2. '2' → logprob: -1.3606898784637451
    3. ' ' → logprob: -2.360689878463745
    4. '(' → logprob: -3.235689878463745
    5. '1' → logprob: -3.485689878463745
    6. '3' → logprob: -3.860689878463745
    7. ' (' → logprob: -4.485690116882324
    8. 'dist' → logprob: -7.360690116882324
    9. '4' → logprob: -7.485690116882324
    10. '0' → logprob: -7.610690116882324

Token 1223: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12306274473667145
    2. '*' → logprob: -3.4980628490448
    3. '+' → logprob: -3.4980628490448
    4. ')
' → logprob: -4.498062610626221
    5. '0' → logprob: -4.748062610626221
    6. '<|end|>' → logprob: -4.873062610626221
    7. ':' → logprob: -5.748062610626221
    8. '2' → logprob: -5.998062610626221
    9. ' +' → logprob: -6.123062610626221
    10. ' ' → logprob: -6.248062610626221

Token 1224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0891059935092926
    2. ' ' → logprob: -2.7141060829162598
    3. 'distance' → logprob: -4.71410608291626
    4. '(' → logprob: -5.96410608291626
    5. ' (' → logprob: -6.21410608291626
    6. '1' → logprob: -6.46410608291626
    7. 'dist' → logprob: -6.58910608291626
    8. '*' → logprob: -7.21410608291626
    9. ' distance' → logprob: -7.58910608291626
    10. '(distance' → logprob: -7.96410608291626

Token 1225: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4347894787788391
    2. '*' → logprob: -2.1847894191741943
    3. ' +' → logprob: -2.8097894191741943
    4. ' *' → logprob: -3.0597894191741943
    5. '+' → logprob: -3.5597894191741943
    6. '
' → logprob: -3.6847894191741943
    7. ')
' → logprob: -3.9347894191741943
    8. ' )' → logprob: -4.559789657592773
    9. '2' → logprob: -5.184789657592773
    10. '#' → logprob: -5.184789657592773

Token 1226: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002912692492827773
    2. ' ' → logprob: -5.877912521362305
    3. '2' → logprob: -9.502912521362305
    4. '3' → logprob: -10.502912521362305
    5. '```' → logprob: -13.627912521362305
    6. '4' → logprob: -14.002912521362305
    7. '(' → logprob: -14.127912521362305
    8. ' (' → logprob: -14.377912521362305
    9. '5' → logprob: -14.377912521362305
    10. '`' → logprob: -15.065412521362305

Token 1227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023178798437584192
    2. '2' → logprob: -8.875231742858887
    3. '3' → logprob: -9.375231742858887
    4. '(' → logprob: -12.500231742858887
    5. ' ' → logprob: -13.750231742858887
    6. '0' → logprob: -13.875231742858887
    7. '
' → logprob: -15.312731742858887
    8. '```' → logprob: -15.312731742858887
    9. '4' → logprob: -15.437731742858887
    10. '5' → logprob: -15.750231742858887

Token 1228: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4761388301849365
    2. '   ' → logprob: -1.8511388301849365
    3. ':' → logprob: -3.1011388301849365
    4. '*' → logprob: -3.4761388301849365
    5. ')
' → logprob: -3.8511388301849365
    6. '+' → logprob: -3.8511388301849365
    7. '<|end|>' → logprob: -3.8511388301849365
    8. '}' → logprob: -4.226139068603516
    9. '       ' → logprob: -4.851139068603516
    10. '
' → logprob: -5.101139068603516

Token 1229: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00038467496051453054
    2. ' ' → logprob: -7.87538480758667
    3. '```' → logprob: -13.125384330749512
    4. '4' → logprob: -15.125384330749512
    5. '(' → logprob: -15.437884330749512
    6. 'import' → logprob: -15.562884330749512
    7. '<|end|>' → logprob: -15.750384330749512
    8. '' → logprob: -15.750384330749512
    9. '   ' → logprob: -15.812884330749512
    10. '    ' → logprob: -15.937884330749512

Token 1230: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0007160080131143332
    2. ' ' → logprob: -7.250716209411621
    3. '```' → logprob: -13.125716209411621
    4. '1' → logprob: -14.000716209411621
    5. '4' → logprob: -14.063216209411621
    6. '(' → logprob: -14.813216209411621
    7. '2' → logprob: -15.063216209411621
    8. '``' → logprob: -15.188216209411621
    9. '   ' → logprob: -15.750716209411621
    10. '0' → logprob: -15.875716209411621

Token 1231: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1336483657360077
    2. ')' → logprob: -2.75864839553833
    3. ')
' → logprob: -3.75864839553833
    4. ':' → logprob: -4.38364839553833
    5. '):' → logprob: -5.63364839553833
    6. '+' → logprob: -5.88364839553833
    7. '
' → logprob: -6.00864839553833
    8. '*' → logprob: -6.13364839553833
    9. ',' → logprob: -6.50864839553833
    10. 'def' → logprob: -6.88364839553833

Token 1232: ' ' (ID: 220)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.4952215552330017
    2. '1' → logprob: -2.8702216148376465
    3. 'les' → logprob: -3.1202216148376465
    4. 'un' → logprob: -3.1202216148376465
    5. ' couper' → logprob: -3.4952216148376465
    6. 'cut' → logprob: -3.4952216148376465
    7. 'l' → logprob: -3.6202216148376465
    8. 'une' → logprob: -3.6202216148376465
    9. '2' → logprob: -3.6202216148376465
    10. 'tout' → logprob: -4.1202216148376465

Token 1233: '1' (ID: 16)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.8087955713272095
    2. 'une' → logprob: -2.30879545211792
    3. 'un' → logprob: -2.43379545211792
    4. '2' → logprob: -2.68379545211792
    5. '1' → logprob: -2.68379545211792
    6. 'porter' → logprob: -3.30879545211792
    7. 'le' → logprob: -3.68379545211792
    8. 'cha' → logprob: -3.80879545211792
    9. 'cut' → logprob: -3.93379545211792
    10. 'les' → logprob: -4.05879545211792

Token 1234: ' arbre' (ID: 164180)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6826263070106506
    2. ')' → logprob: -1.5576262474060059
    3. '0' → logprob: -2.432626247406006
    4. ' *' → logprob: -2.807626247406006
    5. '*
' → logprob: -3.307626247406006
    6. '
' → logprob: -4.057626247406006
    7. ')
' → logprob: -4.182626247406006
    8. ' *
' → logprob: -4.682626247406006
    9. '+' → logprob: -4.932626247406006
    10. ' )' → logprob: -5.307626247406006

Token 1235: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032271504402160645
    2. ')' → logprob: -4.532271385192871
    3. '
' → logprob: -5.157271385192871
    4. ')
' → logprob: -5.532271385192871
    5. '*' → logprob: -5.657271385192871
    6. '       ' → logprob: -6.782271385192871
    7. '+' → logprob: -6.907271385192871
    8. 'def' → logprob: -6.907271385192871
    9. '#' → logprob: -7.282271385192871
    10. ' +' → logprob: -7.407271385192871

Token 1236: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5382421016693115
    2. '   ' → logprob: -1.4132421016693115
    3. '
' → logprob: -3.0382421016693115
    4. ' #' → logprob: -3.9132421016693115
    5. '*' → logprob: -4.163242340087891
    6. ')
' → logprob: -4.413242340087891
    7. ')' → logprob: -4.538242340087891
    8. '#
' → logprob: -4.663242340087891
    9. ' *' → logprob: -5.038242340087891
    10. 'for' → logprob: -5.163242340087891

Token 1237: ' ça' (ID: 13590)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temps' → logprob: -1.0999492406845093
    2. 'temps' → logprob: -1.4749492406845093
    3. ' *' → logprob: -2.599949359893799
    4. '*' → logprob: -2.599949359893799
    5. ' +' → logprob: -2.849949359893799
    6. ' times' → logprob: -3.099949359893799
    7. '+' → logprob: -3.349949359893799
    8. ' pour' → logprob: -3.474949359893799
    9. 'times' → logprob: -4.099949359893799
    10. '2' → logprob: -4.224949359893799

Token 1238: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4104729890823364
    2. ' *' → logprob: -1.4104729890823364
    3. ' s' → logprob: -2.910472869873047
    4. ' multipl' → logprob: -3.910472869873047
    5. 's' → logprob: -5.035472869873047
    6. '+' → logprob: -5.660472869873047
    7. '#' → logprob: -5.785472869873047
    8. ' doit' → logprob: -6.785472869873047
    9. '*s' → logprob: -7.285472869873047
    10. ' est' → logprob: -7.660472869873047

Token 1239: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.49505341053009033
    2. ' par' → logprob: -1.8700534105300903
    3. ' le' → logprob: -2.120053291320801
    4. 'le' → logprob: -3.120053291320801
    5. 'nombre' → logprob: -3.995053291320801
    6. ' ' → logprob: -4.120053291320801
    7. ' nombre' → logprob: -4.370053291320801
    8. 'par' → logprob: -4.745053291320801
    9. 'n' → logprob: -5.870053291320801
    10. ' les' → logprob: -6.370053291320801

Token 1240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06618348509073257
    2. 'A' → logprob: -3.066183567047119
    3. ' A' → logprob: -4.441183567047119
    4. ' ' → logprob: -5.316183567047119
    5. 'nombre' → logprob: -8.816183090209961
    6. ' le' → logprob: -9.066183090209961
    7. '   ' → logprob: -9.691183090209961
    8. 'le' → logprob: -9.691183090209961
    9. 'n' → logprob: -9.816183090209961
    10. ' nombre' → logprob: -9.941183090209961

Token 1241: ' arbres' (ID: 127011)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15055523812770844
    2. 'for' → logprob: -2.27555513381958
    3. '
' → logprob: -4.02555513381958
    4. ' for' → logprob: -4.27555513381958
    5. 'if' → logprob: -7.02555513381958
    6. '    
' → logprob: -7.27555513381958
    7. 'import' → logprob: -7.65055513381958
    8. 'def' → logprob: -7.65055513381958
    9. ' if' → logprob: -8.025555610656738
    10. ':
' → logprob: -8.025555610656738

Token 1242: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3318692743778229
    2. 'for' → logprob: -1.9568692445755005
    3. 'min' → logprob: -3.20686936378479
    4. ' for' → logprob: -3.58186936378479
    5. '
' → logprob: -4.081869125366211
    6. 'total' → logprob: -4.456869125366211
    7. 'minimum' → logprob: -4.706869125366211
    8. '#' → logprob: -4.956869125366211
    9. 'best' → logprob: -5.706869125366211
    10. 'max' → logprob: -5.831869125366211

Token 1243: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23700711131095886
    2. ' ' → logprob: -1.8620071411132812
    3. '5' → logprob: -3.8620071411132812
    4. '11' → logprob: -4.112007141113281
    5. ' (' → logprob: -5.362007141113281
    6. '(' → logprob: -5.487007141113281
    7. '2' → logprob: -6.362007141113281
    8. '9' → logprob: -6.612007141113281
    9. ' A' → logprob: -6.612007141113281
    10. '   ' → logprob: -6.862007141113281

Token 1244: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0012688051210716367
    2. ' ' → logprob: -7.2512688636779785
    3. '(' → logprob: -8.62626838684082
    4. '5' → logprob: -8.75126838684082
    5. '11' → logprob: -9.00126838684082
    6. '2' → logprob: -10.62626838684082
    7. '(A' → logprob: -10.87626838684082
    8. ' (' → logprob: -11.00126838684082
    9. '9' → logprob: -11.00126838684082
    10. 'A' → logprob: -11.87626838684082

Token 1245: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38462215662002563
    2. ')' → logprob: -2.634622097015381
    3. ':' → logprob: -3.009622097015381
    4. ')
' → logprob: -3.009622097015381
    5. '
' → logprob: -3.259622097015381
    6. ':
' → logprob: -4.009622097015381
    7. 'def' → logprob: -4.509622097015381
    8. 'for' → logprob: -4.509622097015381
    9. '):' → logprob: -5.009622097015381
    10. '+
' → logprob: -5.009622097015381

Token 1246: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5766298174858093
    2. '*' → logprob: -1.201629877090454
    3. ']' → logprob: -3.576629877090454
    4. '[' → logprob: -3.701629877090454
    5. ')
' → logprob: -4.076629638671875
    6. ':' → logprob: -4.076629638671875
    7. '   ' → logprob: -4.826629638671875
    8. '[
' → logprob: -4.826629638671875
    9. '*
' → logprob: -5.201629638671875
    10. '(' → logprob: -5.451629638671875

Token 1247: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030184894800186157
    2. '
' → logprob: -4.655184745788574
    3. '       ' → logprob: -4.905184745788574
    4. 'for' → logprob: -5.030184745788574
    5. ')' → logprob: -6.280184745788574
    6. ')
' → logprob: -7.155184745788574
    7. '           ' → logprob: -7.280184745788574
    8. 'def' → logprob: -7.530184745788574
    9. '                   ' → logprob: -7.655184745788574
    10. '```' → logprob: -7.655184745788574

Token 1248: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046096526086330414
    2. '
' → logprob: -4.421096324920654
    3. '       ' → logprob: -4.421096324920654
    4. 'for' → logprob: -4.921096324920654
    5. ')' → logprob: -5.421096324920654
    6. ')
' → logprob: -5.921096324920654
    7. '           ' → logprob: -6.671096324920654
    8. '                   ' → logprob: -6.921096324920654
    9. '               ' → logprob: -7.171096324920654
    10. 'def' → logprob: -7.421096324920654

Token 1249: ' dans' (ID: 2671)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1351079940795898
    2. '#' → logprob: -1.7601079940795898
    3. ' la' → logprob: -1.8851079940795898
    4. ' le' → logprob: -2.26010799407959
    5. ' on' → logprob: -3.26010799407959
    6. ' *' → logprob: -3.63510799407959
    7. '```' → logprob: -3.76010799407959
    8. ')' → logprob: -4.13510799407959
    9. ' il' → logprob: -4.13510799407959
    10. ' #' → logprob: -4.13510799407959

Token 1250: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.5870096683502197
    2. 'l' → logprob: -1.0870096683502197
    3. '#' → logprob: -3.3370096683502197
    4. 'la' → logprob: -3.3370096683502197
    5. 'fait' → logprob: -4.462009429931641
    6. 'comment' → logprob: -4.712009429931641
    7. 'code' → logprob: -5.462009429931641
    8. 'ce' → logprob: -6.087009429931641
    9. 'fact' → logprob: -6.087009429931641
    10. 'les' → logprob: -7.087009429931641

Token 1251: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.734591007232666
    2. ''' → logprob: -1.859591007232666
    3. ''ex' → logprob: -2.234591007232666
    4. ' code' → logprob: -2.359591007232666
    5. 'code' → logprob: -2.359591007232666
    6. 'é' → logprob: -2.609591007232666
    7. ' cas' → logprob: -3.109591007232666
    8. 'suite' → logprob: -3.109591007232666
    9. 'ex' → logprob: -3.359591007232666
    10. '`' → logprob: -4.109591007232666

Token 1252: 'emple' (ID: 55259)
  Prédit: 'emple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emple' → logprob: -0.030828624963760376
    2. 'ample' → logprob: -4.155828475952148
    3. 'p' → logprob: -4.655828475952148
    4. 'planation' → logprob: -6.530828475952148
    5. 'trait' → logprob: -6.905828475952148
    6. ')' → logprob: -7.405828475952148
    7. '#' → logprob: -8.030828475952148
    8. 'pression' → logprob: -8.405828475952148
    9. 'ple' → logprob: -8.530828475952148
    10. '_' → logprob: -8.655828475952148

Token 1253: ' il' (ID: 1793)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8267988562583923
    2. '   ' → logprob: -1.701798915863037
    3. ':' → logprob: -1.826798915863037
    4. ')
' → logprob: -3.326798915863037
    5. ']' → logprob: -3.451798915863037
    6. '):' → logprob: -3.451798915863037
    7. '[' → logprob: -3.576798915863037
    8. ':
' → logprob: -4.451798915863037
    9. '\n' → logprob: -4.576798915863037
    10. '(' → logprob: -4.701798915863037

Token 1254: ' calc' (ID: 25691)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13151027262210846
    2. '[
' → logprob: -3.7565102577209473
    3. ':' → logprob: -4.131510257720947
    4. '```' → logprob: -4.131510257720947
    5. '[n' → logprob: -4.506510257720947
    6. ']' → logprob: -4.506510257720947
    7. '#' → logprob: -4.631510257720947
    8. ')' → logprob: -4.881510257720947
    9. ' =' → logprob: -5.506510257720947
    10. '=' → logprob: -5.506510257720947

Token 1255: 'ule' (ID: 1601)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3013050854206085
    2. ' =' → logprob: -2.051305055618286
    3. ')' → logprob: -2.926305055618286
    4. 'cule' → logprob: -3.926305055618286
    5. 'ulate' → logprob: -4.301305294036865
    6. 'ul' → logprob: -4.926305294036865
    7. 'er' → logprob: -5.551305294036865
    8. 'ule' → logprob: -5.551305294036865
    9. 'culate' → logprob: -5.926305294036865
    10. 'ation' → logprob: -5.926305294036865

Token 1256: ' differently' (ID: 36490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0809526443481445
    2. '   ' → logprob: -1.7059526443481445
    3. ' *' → logprob: -2.4559526443481445
    4. '       ' → logprob: -2.5809526443481445
    5. '*' → logprob: -2.5809526443481445
    6. 'for' → logprob: -3.7059526443481445
    7. ' +' → logprob: -3.9559526443481445
    8. '+' → logprob: -3.9559526443481445
    9. '```' → logprob: -4.2059526443481445
    10. ')
' → logprob: -4.2059526443481445

Token 1257: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04621536657214165
    2. '       ' → logprob: -4.171215534210205
    3. '
' → logprob: -4.171215534210205
    4. ')
' → logprob: -5.671215534210205
    5. ')' → logprob: -6.421215534210205
    6. 'for' → logprob: -6.671215534210205
    7. '    
' → logprob: -6.796215534210205
    8. ':' → logprob: -7.171215534210205
    9. '\n' → logprob: -7.296215534210205
    10. ' for' → logprob: -7.671215534210205

Token 1258: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7102866768836975
    2. '   ' → logprob: -1.5852866172790527
    3. '<|end|>' → logprob: -2.4602866172790527
    4. '    ' → logprob: -3.0852866172790527
    5. ' 
' → logprob: -3.7102866172790527
    6. '#' → logprob: -3.7102866172790527
    7. ' ' → logprob: -3.9602866172790527
    8. ' )' → logprob: -4.460286617279053
    9. '\n' → logprob: -4.460286617279053
    10. '<|end|>' → logprob: -4.585286617279053

Token 1259: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0483369827270508
    2. ')' → logprob: -1.6733369827270508
    3. '   ' → logprob: -1.9233369827270508
    4. ' *' → logprob: -2.173336982727051
    5. '#' (adapté à ' #') → logprob: -2.548336982727051
    6. ' =' → logprob: -4.798336982727051
    7. '[' → logprob: -4.798336982727051
    8. '[
' → logprob: -4.798336982727051
    9. ' *
' → logprob: -4.798336982727051
    10. '=' → logprob: -4.923336982727051

Token 1260: ' Exemple' (ID: 142783)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5274059772491455
    2. '   ' → logprob: -1.9024059772491455
    3. '+' → logprob: -3.1524059772491455
    4. '*' → logprob: -3.4024059772491455
    5. '(' → logprob: -3.7774059772491455
    6. '#' → logprob: -3.7774059772491455
    7. '    ' → logprob: -4.152405738830566
    8. ':' → logprob: -4.277405738830566
    9. '):' → logprob: -4.527405738830566
    10. ']' → logprob: -4.652405738830566

Token 1261: ' explique' (ID: 71793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15652784705162048
    2. ':' → logprob: -3.5315277576446533
    3. '
' → logprob: -3.6565277576446533
    4. ')' → logprob: -4.156527996063232
    5. ')
' → logprob: -4.406527996063232
    6. '[
' → logprob: -4.531527996063232
    7. '):' → logprob: -4.906527996063232
    8. '       ' → logprob: -4.906527996063232
    9. '[' → logprob: -5.031527996063232
    10. ':
' → logprob: -5.406527996063232

Token 1262: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8618455529212952
    2. ':' → logprob: -1.4868454933166504
    3. ')' → logprob: -1.8618454933166504
    4. '):' → logprob: -3.2368454933166504
    5. ')
' → logprob: -3.7368454933166504
    6. ':
' → logprob: -3.7368454933166504
    7. '       ' → logprob: -4.23684549331665
    8. '(' → logprob: -4.48684549331665
    9. '\n' → logprob: -4.48684549331665
    10. '```' → logprob: -4.73684549331665

Token 1263: ' distance' (ID: 9324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3528386056423187
    2. ' le' → logprob: -2.6028385162353516
    3. ' on' → logprob: -2.8528385162353516
    4. 'le' → logprob: -3.1028385162353516
    5. ' #' → logprob: -3.4778385162353516
    6. 'temps' → logprob: -4.102838516235352
    7. ' la' → logprob: -4.477838516235352
    8. 'on' → logprob: -4.477838516235352
    9. ' chaque' → logprob: -4.852838516235352
    10. 'for' → logprob: -5.102838516235352

Token 1264: ' entre' (ID: 3853)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.5255444645881653
    2. '_to' → logprob: -2.0255444049835205
    3. ' =' → logprob: -2.5255444049835205
    4. '_' → logprob: -2.6505444049835205
    5. '_between' → logprob: -3.1505444049835205
    6. '=' → logprob: -4.0255446434021
    7. ')' → logprob: -4.4005446434021
    8. 'from' → logprob: -4.9005446434021
    9. ' est' → logprob: -5.2755446434021
    10. ' +=' → logprob: -5.4005446434021

Token 1265: ' usine' (ID: 124673)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3233526945114136
    2. ' (' → logprob: -2.573352813720703
    3. 'us' → logprob: -2.698352813720703
    4. 'case' → logprob: -3.323352813720703
    5. 'la' → logprob: -3.823352813720703
    6. 'l' → logprob: -4.323352813720703
    7. ' la' → logprob: -4.948352813720703
    8. '(i' → logprob: -5.073352813720703
    9. '0' → logprob: -5.448352813720703
    10. '1' → logprob: -5.573352813720703

Token 1266: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4704713523387909
    2. '_from' → logprob: -2.0954713821411133
    3. '_to' → logprob: -2.2204713821411133
    4. ')' → logprob: -3.5954713821411133
    5. '```' → logprob: -3.7204713821411133
    6. '=' → logprob: -3.9704713821411133
    7. ' =' → logprob: -4.220471382141113
    8. ' est' → logprob: -4.470471382141113
    9. '[' → logprob: -4.470471382141113
    10. '_est' → logprob: -5.470471382141113

Token 1267: ' arbre' (ID: 164180)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08731673657894135
    2. 'la' → logprob: -3.2123167514801025
    3. 'case' → logprob: -4.087316513061523
    4. ' (' → logprob: -4.587316513061523
    5. 'cou' → logprob: -5.587316513061523
    6. ' la' → logprob: -6.337316513061523
    7. 'for' → logprob: -6.337316513061523
    8. 'adj' → logprob: -6.462316513061523
    9. '(case' → logprob: -6.587316513061523
    10. 'l' → logprob: -6.712316513061523

Token 1268: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5186586380004883
    2. ')
' → logprob: -1.7686586380004883
    3. ')' → logprob: -2.6436586380004883
    4. '       ' → logprob: -3.3936586380004883
    5. ':
' → logprob: -3.7686586380004883
    6. ':' → logprob: -4.143658638000488
    7. '
' → logprob: -4.143658638000488
    8. ']' → logprob: -4.768658638000488
    9. '):' → logprob: -4.893658638000488
    10. 'for' → logprob: -5.018658638000488

Token 1269: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1070224046707153
    2. '2' → logprob: -1.6070224046707153
    3. '(' → logprob: -2.232022285461426
    4. ' (' → logprob: -2.357022285461426
    5. 'adj' → logprob: -2.482022285461426
    6. '   ' → logprob: -3.232022285461426
    7. ' ' → logprob: -3.732022285461426
    8. '0' → logprob: -4.357022285461426
    9. ')' → logprob: -4.357022285461426
    10. '+' → logprob: -4.482022285461426

Token 1270: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7276732921600342
    2. 'dist' → logprob: -1.4776732921600342
    3. '1' → logprob: -2.477673292160034
    4. '(' → logprob: -2.602673292160034
    5. '0' → logprob: -3.352673292160034
    6. 'adj' → logprob: -3.977673292160034
    7. 'distance' → logprob: -4.227673530578613
    8. '(dist' → logprob: -4.852673530578613
    9. '   ' → logprob: -4.977673530578613
    10. ' (' → logprob: -5.102673530578613

Token 1271: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09220012277364731
    2. '
' → logprob: -2.5922000408172607
    3. 'for' → logprob: -5.34220027923584
    4. '       ' → logprob: -6.71720027923584
    5. '    
' → logprob: -6.84220027923584
    6. ':
' → logprob: -6.96720027923584
    7. 'def' → logprob: -7.21720027923584
    8. 'if' → logprob: -7.71720027923584
    9. '+
' → logprob: -7.71720027923584
    10. ':' → logprob: -7.71720027923584

Token 1272: 'cases' (ID: 39373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02962331473827362
    2. ')
' → logprob: -4.279623508453369
    3. ',' → logprob: -5.404623508453369
    4. ' )' → logprob: -5.779623508453369
    5. '+' → logprob: -5.904623508453369
    6. '),' → logprob: -6.779623508453369
    7. '*' → logprob: -7.404623508453369
    8. '```' → logprob: -8.029623031616211
    9. ')*' → logprob: -8.154623031616211
    10. '   ' → logprob: -8.279623031616211

Token 1273: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8581269979476929
    2. ',' → logprob: -1.9831269979476929
    3. 's' → logprob: -2.1081271171569824
    4. '),' → logprob: -2.2331271171569824
    5. 'adj' → logprob: -3.1081271171569824
    6. '+' → logprob: -3.7331271171569824
    7. ' est' → logprob: -3.7331271171569824
    8. ' adjacent' → logprob: -4.483127117156982
    9. ')+' → logprob: -4.983127117156982
    10. '   ' → logprob: -5.108127117156982

Token 1274: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34247463941574097
    2. ':' → logprob: -3.2174746990203857
    3. '   ' → logprob: -3.2174746990203857
    4. '(' → logprob: -3.3424746990203857
    5. '<|end|>' → logprob: -3.4674746990203857
    6. ']' → logprob: -3.5924746990203857
    7. ')
' → logprob: -4.217474460601807
    8. ' ' → logprob: -4.467474460601807
    9. '[' → logprob: -4.592474460601807
    10. ',' → logprob: -4.717474460601807

Token 1275: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6651922464370728
    2. ')' → logprob: -1.9151922464370728
    3. ')
' → logprob: -2.165192127227783
    4. '
' → logprob: -2.790192127227783
    5. '*' → logprob: -3.415192127227783
    6. '#' (adapté à ' #') → logprob: -3.790192127227783
    7. '       ' → logprob: -4.540192127227783
    8. '```' → logprob: -4.540192127227783
    9. ' *' → logprob: -4.665192127227783
    10. ' +' → logprob: -4.915192127227783

Token 1276: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.744299590587616
    2. '*' → logprob: -1.8692996501922607
    3. '
' → logprob: -2.3692996501922607
    4. '   ' → logprob: -2.3692996501922607
    5. ')' → logprob: -3.1192996501922607
    6. ' #' → logprob: -3.3692996501922607
    7. ' *' → logprob: -3.7442996501922607
    8. ')
' → logprob: -3.7442996501922607
    9. '+' → logprob: -4.494299411773682
    10. '),' → logprob: -4.869299411773682

Token 1277: ' trajet' (ID: 110258)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.7462748885154724
    2. '*' → logprob: -1.1212749481201172
    3. ' *' → logprob: -2.121274948120117
    4. 'temps' → logprob: -3.996274948120117
    5. ' ' → logprob: -4.496274948120117
    6. ' code' → logprob: -4.996274948120117
    7. ' #' → logprob: -5.121274948120117
    8. 's' → logprob: -5.246274948120117
    9. '`' → logprob: -5.496274948120117
    10. '#' → logprob: -5.621274948120117

Token 1278: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3460429608821869
    2. ' =' → logprob: -1.7210429906845093
    3. ' est' → logprob: -2.9710428714752197
    4. 'est' → logprob: -3.4710428714752197
    5. 's' → logprob: -4.346043109893799
    6. ' entre' → logprob: -5.596043109893799
    7. 'aller' → logprob: -5.971043109893799
    8. '#' → logprob: -5.971043109893799
    9. 'pour' → logprob: -6.471043109893799
    10. ' s' → logprob: -6.971043109893799

Token 1279: ':' (ID: 25)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7192755937576294
    2. '(' → logprob: -1.8442755937576294
    3. 'aller' → logprob: -1.9692755937576294
    4. ' aller' → logprob: -1.9692755937576294
    5. ' (' → logprob: -1.9692755937576294
    6. 'distance' → logprob: -3.34427547454834
    7. ' ' → logprob: -3.46927547454834
    8. 'de' → logprob: -3.96927547454834
    9. 'dist' → logprob: -4.21927547454834
    10. '1' → logprob: -4.34427547454834

Token 1280: ' usine' (ID: 124673)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5548639893531799
    2. '(' → logprob: -1.0548639297485352
    3. ' aller' → logprob: -4.304863929748535
    4. ' us' → logprob: -4.679863929748535
    5. ' usine' → logprob: -4.804863929748535
    6. 'us' → logprob: -4.929863929748535
    7. '0' → logprob: -5.054863929748535
    8. ' #' → logprob: -5.179863929748535
    9. '#' → logprob: -5.429863929748535
    10. '   ' → logprob: -5.554863929748535

Token 1281: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.09599234908819199
    2. '->' → logprob: -2.59599232673645
    3. ',' → logprob: -5.095992565155029
    4. ' -->' → logprob: -5.595992565155029
    5. ' =>' → logprob: -6.845992565155029
    6. ')' → logprob: -7.095992565155029
    7. ' puis' → logprob: -7.220992565155029
    8. ' →' → logprob: -7.345992565155029
    9. ' jusqu' → logprob: -7.595992565155029
    10. '   ' → logprob: -7.720992565155029

Token 1282: ' arbre' (ID: 164180)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5254049301147461
    2. 'ar' → logprob: -1.775404930114746
    3. ' (' → logprob: -2.025404930114746
    4. ' arbre' → logprob: -2.525404930114746
    5. 'adj' → logprob: -4.525404930114746
    6. 'case' → logprob: -4.650404930114746
    7. ' case' → logprob: -5.775404930114746
    8. 'arb' → logprob: -7.900404930114746
    9. ' adjacent' → logprob: -8.025404930114746
    10. ' ar' → logprob: -8.025404930114746

Token 1283: ' (' (ID: 350)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.5354467034339905
    2. ')' → logprob: -2.4104466438293457
    3. '_' → logprob: -2.6604466438293457
    4. '```' → logprob: -2.7854466438293457
    5. ' _' → logprob: -3.4104466438293457
    6. ',' → logprob: -3.9104466438293457
    7. ' (' → logprob: -3.9104466438293457
    8. '[' → logprob: -4.035446643829346
    9. '`' → logprob: -4.285446643829346
    10. ' ' → logprob: -4.660446643829346

Token 1284: 'distance' (ID: 40614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23009537160396576
    2. ' ->' → logprob: -2.480095386505127
    3. 'adj' → logprob: -3.480095386505127
    4. '->' → logprob: -3.605095386505127
    5. ' )' → logprob: -4.105095386505127
    6. ')->' → logprob: -4.980095386505127
    7. ' adjacent' → logprob: -5.105095386505127
    8. 'case' → logprob: -5.230095386505127
    9. '),' → logprob: -5.230095386505127
    10. ',' → logprob: -5.355095386505127

Token 1285: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8419250249862671
    2. ' +' → logprob: -1.216925024986267
    3. '=' → logprob: -2.2169251441955566
    4. ')' → logprob: -2.3419251441955566
    5. ' ->' → logprob: -4.216925144195557
    6. '->' → logprob: -4.341925144195557
    7. ' =' → logprob: -4.591925144195557
    8. '*' → logprob: -4.966925144195557
    9. ')+' → logprob: -5.341925144195557
    10. ' *' → logprob: -6.091925144195557

Token 1286: ' +' (ID: 659)
  Prédit: ' ->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.11825168132781982
    2. '->' → logprob: -3.7432518005371094
    3. '   ' → logprob: -3.8682518005371094
    4. ')' → logprob: -3.8682518005371094
    5. ' +' → logprob: -4.868251800537109
    6. ' =' → logprob: -4.868251800537109
    7. ' #' → logprob: -5.368251800537109
    8. '#' → logprob: -5.618251800537109
    9. ',' → logprob: -5.868251800537109
    10. '=' → logprob: -5.868251800537109

Token 1287: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.487321138381958
    2. 'ar' → logprob: -0.987321138381958
    3. ' ar' → logprob: -6.112320899963379
    4. '"' → logprob: -6.612320899963379
    5. ''ar' → logprob: -6.612320899963379
    6. 'us' → logprob: -6.862320899963379
    7. ' retour' → logprob: -7.112320899963379
    8. ' usine' → logprob: -7.237320899963379
    9. ' ' → logprob: -7.362320899963379
    10. ' ' → logprob: -7.362320899963379

Token 1288: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3222256600856781
    2. ')' → logprob: -1.8222256898880005
    3. '->' → logprob: -2.822225570678711
    4. '_' → logprob: -4.322225570678711
    5. '```' → logprob: -4.822225570678711
    6. ' _' → logprob: -5.697225570678711
    7. ' ' → logprob: -6.072225570678711
    8. ' +' → logprob: -6.197225570678711
    9. '   ' → logprob: -6.197225570678711
    10. ')->' → logprob: -6.322225570678711

Token 1289: ' usine' (ID: 124673)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.05670958757400513
    2. ' usine' → logprob: -2.9317095279693604
    3. ''us' → logprob: -7.3067097663879395
    4. ' us' → logprob: -7.5567097663879395
    5. '   ' → logprob: -8.181709289550781
    6. 'usin' → logprob: -9.431709289550781
    7. ' ' → logprob: -10.181709289550781
    8. 'usi' → logprob: -10.181709289550781
    9. '```' → logprob: -10.556709289550781
    10. '’us' → logprob: -10.681709289550781

Token 1290: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0043530464172363
    2. '   ' → logprob: -1.6293530464172363
    3. ')
' → logprob: -1.8793530464172363
    4. '*' → logprob: -2.8793530464172363
    5. '```' → logprob: -3.2543530464172363
    6. '
' → logprob: -3.3793530464172363
    7. '+' → logprob: -3.6293530464172363
    8. ' +' → logprob: -4.004353046417236
    9. ' *' → logprob: -4.254353046417236
    10. '       ' → logprob: -4.504353046417236

Token 1291: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.04840315878391266
    2. ')' → logprob: -3.423403263092041
    3. ' distance' → logprob: -4.798403263092041
    4. '1' → logprob: -5.798403263092041
    5. '(distance' → logprob: -6.798403263092041
    6. ')*' → logprob: -8.048402786254883
    7. '+' → logprob: -8.423402786254883
    8. ' )' → logprob: -8.423402786254883
    9. '2' → logprob: -8.423402786254883
    10. '*' → logprob: -8.673402786254883

Token 1292: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09176279604434967
    2. ')+' → logprob: -3.7167627811431885
    3. ')
' → logprob: -3.9667627811431885
    4. '+' → logprob: -4.341763019561768
    5. ' +' → logprob: -4.966763019561768
    6. ' )' → logprob: -5.216763019561768
    7. ')*' → logprob: -5.216763019561768
    8. '   ' → logprob: -5.716763019561768
    9. '*' → logprob: -5.841763019561768
    10. '```' → logprob: -5.966763019561768

Token 1293: ' pendant' (ID: 22611)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0152803659439087
    2. '   ' → logprob: -1.7652803659439087
    3. ' +' → logprob: -2.015280246734619
    4. '*' → logprob: -2.890280246734619
    5. '#' → logprob: -3.140280246734619
    6. '+' → logprob: -3.265280246734619
    7. ')
' → logprob: -3.265280246734619
    8. ' *' → logprob: -4.015280246734619
    9. ' #' → logprob: -4.140280246734619
    10. '+
' → logprob: -4.265280246734619

Token 1294: ' que' (ID: 661)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -1.443764567375183
    2. 'le' → logprob: -1.818764567375183
    3. ' que' → logprob: -2.1937646865844727
    4. 'que' → logprob: -2.1937646865844727
    5. ' lequel' → logprob: -2.4437646865844727
    6. 'la' → logprob: -2.9437646865844727
    7. ' la' → logprob: -3.3187646865844727
    8. 'which' → logprob: -3.4437646865844727
    9. ' ' → logprob: -3.8187646865844727
    10. ' which' → logprob: -3.9437646865844727

Token 1295: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7126463055610657
    2. 'l' → logprob: -1.587646245956421
    3. 'on' → logprob: -2.462646245956421
    4. 'queue' → logprob: -2.712646245956421
    5. 'la' → logprob: -3.587646245956421
    6. ' le' → logprob: -3.962646245956421
    7. ' on' → logprob: -3.962646245956421
    8. 'les' → logprob: -4.212646484375
    9. 'que' → logprob: -4.462646484375
    10. ' l' → logprob: -4.712646484375

Token 1296: ''ar' (ID: 54307)
  Prédit: ''us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''us' → logprob: -1.8123525381088257
    2. ''' → logprob: -1.9373525381088257
    3. 'e' → logprob: -2.0623526573181152
    4. 'us' → logprob: -2.1873526573181152
    5. 'a' → logprob: -2.8123526573181152
    6. 'u' → logprob: -2.9373526573181152
    7. 's' → logprob: -3.3123526573181152
    8. ' est' → logprob: -3.4373526573181152
    9. ''on' → logprob: -3.9373526573181152
    10. ' distance' → logprob: -3.9373526573181152

Token 1297: 'bre' (ID: 9945)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04962688311934471
    2. 'rr' → logprob: -4.67462682723999
    3. 'rch' → logprob: -4.79962682723999
    4. 'rive' → logprob: -5.04962682723999
    5. 'rc' → logprob: -5.54962682723999
    6. '#' → logprob: -5.67462682723999
    7. 'bre' → logprob: -5.92462682723999
    8. 'chet' → logprob: -6.17462682723999
    9. 'bit' → logprob: -7.04962682723999
    10. 'rière' → logprob: -7.04962682723999

Token 1298: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5399755835533142
    2. ')' → logprob: -2.039975643157959
    3. 's' → logprob: -2.414975643157959
    4. ' ->' → logprob: -3.539975643157959
    5. '->' → logprob: -3.789975643157959
    6. ' va' → logprob: -4.289975643157959
    7. 'est' → logprob: -4.414975643157959
    8. '...' → logprob: -4.664975643157959
    9. '),' → logprob: -5.039975643157959
    10. 'n' → logprob: -5.289975643157959

Token 1299: ' porté' (ID: 134682)
  Prédit: 'transport'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transport' → logprob: -0.9438750147819519
    2. 'port' → logprob: -1.0688750743865967
    3. ' transport' → logprob: -1.8188750743865967
    4. ' porté' → logprob: -2.8188750743865967
    5. 'ram' → logprob: -4.443874835968018
    6. ' coup' → logprob: -5.068874835968018
    7. ' ramen' → logprob: -5.318874835968018
    8. ' port' → logprob: -5.443874835968018
    9. ' ram' → logprob: -5.943874835968018
    10. ' ' → logprob: -6.568874835968018

Token 1300: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0481303930282593
    2. '   ' → logprob: -1.0481303930282593
    3. ')
' → logprob: -1.5481303930282593
    4. ':' → logprob: -4.548130512237549
    5. '       ' → logprob: -4.548130512237549
    6. '):' → logprob: -4.673130512237549
    7. ':
' → logprob: -5.173130512237549
    8. '*' → logprob: -5.298130512237549
    9. '
' → logprob: -5.423130512237549
    10. '+' → logprob: -5.673130512237549

Token 1301: 'ret' (ID: 3431)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03740481659770012
    2. ' )' → logprob: -4.412405014038086
    3. ')*' → logprob: -4.662405014038086
    4. '*' → logprob: -4.787405014038086
    5. ')
' → logprob: -5.912405014038086
    6. '),' → logprob: -6.912405014038086
    7. '+' → logprob: -7.037405014038086
    8. ')+' → logprob: -8.162405014038086
    9. ' *' → logprob: -8.287405014038086
    10. ' +' → logprob: -8.537405014038086

Token 1302: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.00703989714384079
    2. ')' → logprob: -6.132040023803711
    3. 'o' → logprob: -6.132040023803711
    4. 'urn' → logprob: -8.132040023803711
    5. 'ourn' → logprob: -8.257040023803711
    6. 'ours' → logprob: -8.632040023803711
    7. '_' → logprob: -8.632040023803711
    8. 'ou' → logprob: -8.632040023803711
    9. '```' → logprob: -8.632040023803711
    10. 'out' → logprob: -8.882040023803711

Token 1303: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06341951340436935
    2. ')
' → logprob: -4.063419342041016
    3. '_' → logprob: -4.563419342041016
    4. ')_' → logprob: -5.063419342041016
    5. ' )' → logprob: -5.438419342041016
    6. 'e' → logprob: -5.438419342041016
    7. '),' → logprob: -5.563419342041016
    8. ' ->' → logprob: -5.938419342041016
    9. ' _' → logprob: -6.063419342041016
    10. '```' → logprob: -6.188419342041016

Token 1304: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14524537324905396
    2. ')
' → logprob: -3.020245313644409
    3. '   ' → logprob: -3.270245313644409
    4. '*' → logprob: -4.020245552062988
    5. '+' → logprob: -5.895245552062988
    6. '```' → logprob: -5.895245552062988
    7. ':' → logprob: -6.145245552062988
    8. '),' → logprob: -6.395245552062988
    9. '       ' → logprob: -6.520245552062988
    10. ',' → logprob: -6.520245552062988

Token 1305: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3259142637252808
    2. '   ' → logprob: -1.3259142637252808
    3. ' +' → logprob: -2.0759143829345703
    4. '#' (adapté à ' #') → logprob: -2.2009143829345703
    5. '+' → logprob: -2.2009143829345703
    6. ' +
' → logprob: -3.4509143829345703
    7. '+
' → logprob: -3.8259143829345703
    8. '*' → logprob: -3.8259143829345703
    9. '.' → logprob: -5.07591438293457
    10. ',' → logprob: -5.57591438293457

Token 1306: ' Le' (ID: 2018)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3458655774593353
    2. '#' → logprob: -2.470865488052368
    3. '*' → logprob: -2.595865488052368
    4. '+' → logprob: -3.470865488052368
    5. '   ' → logprob: -3.845865488052368
    6. ' +' → logprob: -4.220865726470947
    7. ' *' → logprob: -4.970865726470947
    8. '(' → logprob: -5.095865726470947
    9. ' )' → logprob: -5.095865726470947
    10. '(
' → logprob: -5.470865726470947

Token 1307: ' temps' (ID: 11160)
  Prédit: ' trajet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trajet' → logprob: -0.713530421257019
    2. 'temps' → logprob: -1.463530421257019
    3. 'traj' → logprob: -2.3385305404663086
    4. ' temps' → logprob: -2.4635305404663086
    5. '#' → logprob: -3.7135305404663086
    6. '+' → logprob: -4.588530540466309
    7. ')' → logprob: -4.713530540466309
    8. ' #' → logprob: -4.963530540466309
    9. '*' → logprob: -5.338530540466309
    10. 'distance' → logprob: -5.588530540466309

Token 1308: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5879435539245605
    2. ' =' → logprob: -0.8379435539245605
    3. '   ' → logprob: -5.5879435539245605
    4. '#' → logprob: -6.5879435539245605
    5. '_' → logprob: -6.7129435539245605
    6. ' est' → logprob: -6.8379435539245605
    7. ' +=' → logprob: -6.8379435539245605
    8. ')' → logprob: -7.3379435539245605
    9. ' ' → logprob: -7.7129435539245605
    10. 's' → logprob: -7.8379435539245605

Token 1309: ' ' (ID: 220)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.8855592012405396
    2. 'porter' → logprob: -1.2605592012405396
    3. 'ram' → logprob: -3.01055908203125
    4. ' chaque' → logprob: -3.51055908203125
    5. 'port' → logprob: -3.76055908203125
    6. ' transporter' → logprob: -3.76055908203125
    7. ' couper' → logprob: -4.13555908203125
    8. 'import' → logprob: -4.13555908203125
    9. 'faire' → logprob: -4.26055908203125
    10. 'ar' → logprob: -4.63555908203125

Token 1310: '1' (ID: 16)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.21931003034114838
    2. 'porter' → logprob: -2.5943100452423096
    3. 'port' → logprob: -4.3443098068237305
    4. ' chaque' → logprob: -4.3443098068237305
    5. 'faire' → logprob: -4.7193098068237305
    6. 'each' → logprob: -4.8443098068237305
    7. 'pour' → logprob: -4.9693098068237305
    8. 'ram' → logprob: -4.9693098068237305
    9. 'cut' → logprob: -5.0943098068237305
    10. 'for' → logprob: -5.2193098068237305

Token 1311: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.959142804145813
    2. ' *' → logprob: -1.209142804145813
    3. '*' → logprob: -1.334142804145813
    4. ' ' → logprob: -3.3341426849365234
    5. '_' → logprob: -5.209142684936523
    6. ')' → logprob: -6.084142684936523
    7. ' _' → logprob: -6.209142684936523
    8. ' +' → logprob: -6.584142684936523
    9. ' )' → logprob: -6.834142684936523
    10. ' for' → logprob: -6.834142684936523

Token 1312: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20925556123256683
    2. '=' → logprob: -1.834255576133728
    3. ')' → logprob: -4.334255695343018
    4. ' est' → logprob: -5.709255695343018
    5. '+' → logprob: -6.334255695343018
    6. '#' → logprob: -6.334255695343018
    7. '*' → logprob: -6.459255695343018
    8. ' *' → logprob: -6.709255695343018
    9. ' +' → logprob: -6.834255695343018
    10. ' ' → logprob: -6.959255695343018

Token 1313: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.362182080745697
    2. '2' → logprob: -1.8621821403503418
    3. ' dist' → logprob: -2.362182140350342
    4. ' (' → logprob: -3.112182140350342
    5. 'dist' → logprob: -5.862182140350342
    6. '(' → logprob: -6.612182140350342
    7. ' distance' → logprob: -6.737182140350342
    8. 'distance' → logprob: -6.737182140350342
    9. ' =' → logprob: -7.237182140350342
    10. ' `' → logprob: -7.987182140350342

Token 1314: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04889119043946266
    2. ' ' → logprob: -3.423891305923462
    3. '(' → logprob: -4.673891067504883
    4. ' (' → logprob: -5.798891067504883
    5. ' dist' → logprob: -6.798891067504883
    6. 'dist' → logprob: -7.048891067504883
    7. '1' → logprob: -7.673891067504883
    8. '`' → logprob: -9.423891067504883
    9. 'distance' → logprob: -9.423891067504883
    10. '"' → logprob: -10.173891067504883

Token 1315: 'aller' (ID: 11605)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07258699834346771
    2. 'distance' → logprob: -2.822587013244629
    3. 'dist' → logprob: -5.322587013244629
    4. '(' → logprob: -5.947587013244629
    5. '(distance' → logprob: -6.447587013244629
    6. ')' → logprob: -7.197587013244629
    7. ' ' → logprob: -8.697587013244629
    8. '   ' → logprob: -9.322587013244629
    9. '(dist' → logprob: -9.322587013244629
    10. 'temps' → logprob: -9.697587013244629

Token 1316: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16611211001873016
    2. '+' → logprob: -2.041112184524536
    3. '*' → logprob: -4.916111946105957
    4. ' -' → logprob: -5.041111946105957
    5. '-' → logprob: -5.666111946105957
    6. ' *' → logprob: -5.791111946105957
    7. ')' → logprob: -6.541111946105957
    8. ')+' → logprob: -7.416111946105957
    9. ')+(' → logprob: -9.041111946105957
    10. '```' → logprob: -9.166111946105957

Token 1317: ' coupe' (ID: 71780)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.0010045854141935706
    2. ' retour' → logprob: -7.251004695892334
    3. 'return' → logprob: -9.376004219055176
    4. '```' → logprob: -9.626004219055176
    5. ')' → logprob: -9.751004219055176
    6. 'aller' → logprob: -9.876004219055176
    7. '1' → logprob: -11.626004219055176
    8. '``' → logprob: -12.376004219055176
    9. ' ' → logprob: -12.626004219055176
    10. 're' → logprob: -12.751004219055176

Token 1318: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.00787502620369196
    2. '+' → logprob: -4.882874965667725
    3. ')' → logprob: -8.257875442504883
    4. ' )' → logprob: -12.757875442504883
    5. '*' → logprob: -13.257875442504883
    6. ')+' → logprob: -13.882875442504883
    7. ' ' → logprob: -14.132875442504883
    8. ' plus' → logprob: -14.132875442504883
    9. '_' → logprob: -14.257875442504883
    10. ' *' → logprob: -15.132875442504883

Token 1319: ' retour' (ID: 30714)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.011755209416151047
    2. ' retour' → logprob: -4.511754989624023
    3. '1' → logprob: -7.636754989624023
    4. ' ' → logprob: -10.011754989624023
    5. 'return' → logprob: -10.511754989624023
    6. 'aller' → logprob: -10.636754989624023
    7. 'port' → logprob: -10.636754989624023
    8. '2' → logprob: -10.761754989624023
    9. 'ram' → logprob: -10.761754989624023
    10. 're' → logprob: -11.886754989624023

Token 1320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007089718710631132
    2. '+' → logprob: -6.132089614868164
    3. ')
' → logprob: -6.507089614868164
    4. ' +' → logprob: -7.257089614868164
    5. ')+' → logprob: -7.257089614868164
    6. ' )' → logprob: -7.382089614868164
    7. ')*' → logprob: -7.507089614868164
    8. ')=' → logprob: -8.007089614868164
    9. '```' → logprob: -9.507089614868164
    10. '=' → logprob: -9.882089614868164

Token 1321: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06294367462396622
    2. ')
' → logprob: -3.937943696975708
    3. '
' → logprob: -4.062943458557129
    4. '       ' → logprob: -4.687943458557129
    5. ')' → logprob: -5.312943458557129
    6. ':
' → logprob: -6.312943458557129
    7. ':' → logprob: -6.437943458557129
    8. 'def' → logprob: -7.062943458557129
    9. '    
' → logprob: -7.062943458557129
    10. 'for' → logprob: -7.687943458557129

Token 1322: ' distance' (ID: 9324)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2353981733322144
    2. ' (' → logprob: -1.2353981733322144
    3. ' ' → logprob: -1.6103981733322144
    4. ' dist' → logprob: -2.235398292541504
    5. '(' → logprob: -2.735398292541504
    6. 'dist' → logprob: -3.985398292541504
    7. '1' → logprob: -4.110398292541504
    8. 'distance' → logprob: -5.610398292541504
    9. '(dist' → logprob: -6.110398292541504
    10. ' distance' → logprob: -6.235398292541504

Token 1323: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21873106062412262
    2. '+' → logprob: -2.718731164932251
    3. ' +' → logprob: -2.718731164932251
    4. '*' → logprob: -4.218730926513672
    5. ' )' → logprob: -4.718730926513672
    6. '   ' → logprob: -4.968730926513672
    7. '<|end|>' → logprob: -5.093730926513672
    8. ' *' → logprob: -5.218730926513672
    9. ',' → logprob: -5.843730926513672
    10. '```' → logprob: -6.093730926513672

Token 1324: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8287234902381897
    2. 'distance' → logprob: -0.9537234902381897
    3. ' distance' → logprob: -2.203723430633545
    4. ' ' → logprob: -2.703723430633545
    5. 'dist' → logprob: -7.828723430633545
    6. ' dist' → logprob: -9.328723907470703
    7. '```' → logprob: -9.703723907470703
    8. '0' → logprob: -9.953723907470703
    9. ' ' → logprob: -10.578723907470703
    10. '
' → logprob: -11.328723907470703

Token 1325: '1' (ID: 16)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.1729363054037094
    2. '1' → logprob: -1.9229363203048706
    3. 'dist' → logprob: -4.54793643951416
    4. ' distance' → logprob: -6.29793643951416
    5. ' ' → logprob: -9.17293643951416
    6. ' dist' → logprob: -11.04793643951416
    7. '0' → logprob: -11.04793643951416
    8. '
' → logprob: -11.29793643951416
    9. 'cou' → logprob: -11.29793643951416
    10. '```' → logprob: -11.42293643951416

Token 1326: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7260279059410095
    2. ')' → logprob: -1.4760279655456543
    3. ')
' → logprob: -1.8510279655456543
    4. '       ' → logprob: -3.8510279655456543
    5. ':' → logprob: -3.8510279655456543
    6. ':
' → logprob: -4.601027965545654
    7. 'for' → logprob: -4.851027965545654
    8. '+' → logprob: -4.976027965545654
    9. '
' → logprob: -5.226027965545654
    10. '):' → logprob: -5.351027965545654

Token 1327: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.16027885675430298
    2. ' distance' → logprob: -1.9102787971496582
    3. 'dist' → logprob: -9.910279273986816
    4. ' distancia' → logprob: -13.660279273986816
    5. ' dist' → logprob: -13.785279273986816
    6. '(distance' → logprob: -13.910279273986816
    7. ' distância' → logprob: -14.660279273986816
    8. '_distance' → logprob: -15.035279273986816
    9. ' ' → logprob: -15.160279273986816
    10. '1' → logprob: -15.285279273986816

Token 1328: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9266583919525146
    2. '   ' → logprob: -1.8016583919525146
    3. ')
' → logprob: -1.8016583919525146
    4. '+' → logprob: -2.1766583919525146
    5. '```' → logprob: -3.0516583919525146
    6. ' +' → logprob: -3.5516583919525146
    7. '*' → logprob: -4.176658630371094
    8. '       ' → logprob: -4.301658630371094
    9. '+
' → logprob: -4.426658630371094
    10. '               ' → logprob: -5.676658630371094

Token 1329: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8086163401603699
    2. ' ' → logprob: -0.8086163401603699
    3. ' dist' → logprob: -2.8086163997650146
    4. 'distance' → logprob: -4.0586161613464355
    5. ' distance' → logprob: -4.3086161613464355
    6. '1' → logprob: -5.3086161613464355
    7. 'dist' → logprob: -5.3086161613464355
    8. ' (' → logprob: -6.0586161613464355
    9. '"' → logprob: -6.4336161613464355
    10. '`' → logprob: -6.8086161613464355

Token 1330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004209109116345644
    2. '(' → logprob: -5.754209041595459
    3. ' ' → logprob: -7.129209041595459
    4. 'dist' → logprob: -9.379209518432617
    5. 'distance' → logprob: -9.754209518432617
    6. ' (' → logprob: -10.879209518432617
    7. '"' → logprob: -11.254209518432617
    8. '1' → logprob: -11.254209518432617
    9. '(dist' → logprob: -11.504209518432617
    10. ' dist' → logprob: -12.004209518432617

Token 1331: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5147975087165833
    2. '+' → logprob: -2.0147974491119385
    3. ':' → logprob: -2.2647974491119385
    4. '*' → logprob: -2.8897974491119385
    5. '   ' → logprob: -3.7647974491119385
    6. ')
' → logprob: -4.014797687530518
    7. '       ' → logprob: -4.514797687530518
    8. ' +' → logprob: -4.764797687530518
    9. '):' → logprob: -5.139797687530518
    10. '**' → logprob: -5.514797687530518

Token 1332: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.32120171189308167
    2. 'dist' → logprob: -1.3212016820907593
    3. '<|end|>' → logprob: -5.571201801300049
    4. '*' → logprob: -6.071201801300049
    5. ' distance' → logprob: -7.321201801300049
    6. ')' → logprob: -8.32120132446289
    7. '<|end|>' → logprob: -8.44620132446289
    8. '(distance' → logprob: -8.82120132446289
    9. '```' → logprob: -8.82120132446289
    10. ' ' → logprob: -9.94620132446289

Token 1333: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8859458565711975
    2. ' +' → logprob: -1.0109457969665527
    3. '+' → logprob: -2.0109457969665527
    4. '       ' → logprob: -3.6359457969665527
    5. ')' → logprob: -3.8859457969665527
    6. '+
' → logprob: -4.885945796966553
    7. ' +
' → logprob: -5.010945796966553
    8. ')+' → logprob: -5.135945796966553
    9. '                   ' → logprob: -5.260945796966553
    10. '
' → logprob: -5.760945796966553

Token 1334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -19.250030517578125
    4. '2' → logprob: -20.000030517578125
    5. ' ' → logprob: -21.625030517578125
    6. '
' → logprob: -22.125030517578125
    7. '   ' → logprob: -22.250030517578125
    8. '`' → logprob: -23.000030517578125
    9. '۱' → logprob: -23.000030517578125
    10. ')' → logprob: -23.875030517578125

Token 1335: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0927402600646019
    2. '
' → logprob: -2.592740297317505
    3. 'for' → logprob: -5.092740058898926
    4. '       ' → logprob: -6.342740058898926
    5. '    
' → logprob: -6.342740058898926
    6. ' for' → logprob: -6.967740058898926
    7. ':' → logprob: -7.592740058898926
    8. ':
' → logprob: -7.717740058898926
    9. '\n' → logprob: -8.217740058898926
    10. ')' → logprob: -8.342740058898926

Token 1336: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.318349838256836
    2. ')' → logprob: -1.568349838256836
    3. '
' → logprob: -2.068349838256836
    4. ')
' → logprob: -2.193349838256836
    5. '#' → logprob: -2.818349838256836
    6. '+
' → logprob: -2.943349838256836
    7. 'for' → logprob: -3.443349838256836
    8. '*' → logprob: -3.818349838256836
    9. '\n' → logprob: -4.193349838256836
    10. ' +
' → logprob: -4.318349838256836

Token 1337: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028552714735269547
    2. '       ' → logprob: -4.778552532196045
    3. '
' → logprob: -4.778552532196045
    4. ')' → logprob: -5.653552532196045
    5. '    
' → logprob: -5.778552532196045
    6. ')
' → logprob: -6.028552532196045
    7. '```' → logprob: -7.903552532196045
    8. '.' → logprob: -8.778553009033203
    9. '                   ' → logprob: -8.778553009033203
    10. '#' → logprob: -8.778553009033203

Token 1338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008870185352861881
    2. '       ' → logprob: -6.2588701248168945
    3. 'for' → logprob: -6.5088701248168945
    4. '#' → logprob: -6.7588701248168945
    5. ' for' → logprob: -7.0088701248168945
    6. ' if' → logprob: -7.1338701248168945
    7. ')' → logprob: -7.3838701248168945
    8. '    
' → logprob: -7.3838701248168945
    9. 'if' → logprob: -8.008870124816895
    10. '
' → logprob: -8.133870124816895

Token 1339: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02270781621336937
    2. '
' → logprob: -4.772707939147949
    3. 'for' → logprob: -4.897707939147949
    4. '#' (adapté à ' #') → logprob: -5.522707939147949
    5. '    
' → logprob: -6.397707939147949
    6. 'time' → logprob: -8.77270793914795
    7. 'total' → logprob: -9.02270793914795
    8. 'def' → logprob: -9.39770793914795
    9. ' for' → logprob: -9.52270793914795
    10. 'cost' → logprob: -9.89770793914795

Token 1340: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5537610650062561
    2. '#' → logprob: -1.0537610054016113
    3. 'for' → logprob: -2.8037610054016113
    4. 'total' → logprob: -5.428761005401611
    5. 'time' → logprob: -5.928761005401611
    6. 'max' → logprob: -6.553761005401611
    7. '
' → logprob: -6.553761005401611
    8. 'min' → logprob: -6.678761005401611
    9. 'result' → logprob: -6.928761005401611
    10. 'def' → logprob: -7.053761005401611

Token 1341: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18335643410682678
    2. '#' → logprob: -2.558356523513794
    3. 'for' → logprob: -2.558356523513794
    4. ' for' → logprob: -4.933356285095215
    5. ' on' → logprob: -6.433356285095215
    6. 'on' → logprob: -6.433356285095215
    7. 'pour' → logprob: -7.183356285095215
    8. ' pour' → logprob: -7.308356285095215
    9. ' #' → logprob: -8.308356285095215
    10. '       ' → logprob: -8.683356285095215

Token 1342: ' multip' (ID: 17524)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.061779655516147614
    2. 'each' → logprob: -3.561779737472534
    3. 'cut' → logprob: -4.811779499053955
    4. ' each' → logprob: -5.686779499053955
    5. 'ar' → logprob: -5.811779499053955
    6. 'i' → logprob: -6.061779499053955
    7. ' i' → logprob: -6.061779499053955
    8. '(i' → logprob: -6.311779499053955
    9. 'les' → logprob: -6.436779499053955
    10. 'for' → logprob: -6.561779499053955

Token 1343: 'li' (ID: 1307)
  Prédit: 'li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'li' → logprob: -0.39420872926712036
    2. 'lié' → logprob: -2.2692086696624756
    3. 'lication' → logprob: -2.3942086696624756
    4. 'le' → logprob: -3.5192086696624756
    5. 'les' → logprob: -3.6442086696624756
    6. 'lier' → logprob: -4.019208908081055
    7. 'ler' → logprob: -4.394208908081055
    8. 'lie' → logprob: -4.519208908081055
    9. 'licant' → logprob: -5.394208908081055
    10. 'lic' → logprob: -5.581708908081055

Token 1344: 'quer' (ID: 8054)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.15126585960388184
    2. 'e' → logprob: -2.526265859603882
    3. 'plier' → logprob: -3.901265859603882
    4. 'es' → logprob: -4.026266098022461
    5. 'ier' → logprob: -4.526266098022461
    6. 'é' → logprob: -6.151266098022461
    7. 'pl' → logprob: -6.526266098022461
    8. 'uer' → logprob: -7.151266098022461
    9. 'ple' → logprob: -7.276266098022461
    10. 'ples' → logprob: -7.401266098022461

Token 1345: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.409641146659851
    2. '(' → logprob: -1.534641146659851
    3. 'par' → logprob: -1.909641146659851
    4. ' le' → logprob: -2.2846412658691406
    5. 'le' → logprob: -2.4096412658691406
    6. ' (' → logprob: -2.6596412658691406
    7. '(par' → logprob: -3.6596412658691406
    8. ' =' → logprob: -3.7846412658691406
    9. '=' → logprob: -4.284641265869141
    10. 'les' → logprob: -4.909641265869141

Token 1346: ' nombre' (ID: 9733)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.23310936987400055
    2. 'nombre' → logprob: -1.7331093549728394
    3. ' le' → logprob: -3.858109474182129
    4. 'les' → logprob: -5.983109474182129
    5. ' nombre' → logprob: -6.233109474182129
    6. 'la' → logprob: -6.858109474182129
    7. 'arb' → logprob: -6.983109474182129
    8. 'number' → logprob: -7.108109474182129
    9. 'nb' → logprob: -7.358109474182129
    10. 'A' → logprob: -7.358109474182129

Token 1347: ' d' (ID: 272)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.28339847922325134
    2. '_' → logprob: -2.408398389816284
    3. ' d' → logprob: -2.533398389816284
    4. 'd' → logprob: -2.783398389816284
    5. '_des' → logprob: -5.033398628234863
    6. '*' → logprob: -6.033398628234863
    7. '_de' → logprob: -6.158398628234863
    8. '_ar' → logprob: -6.658398628234863
    9. '   ' → logprob: -7.533398628234863
    10. '_of' → logprob: -7.658398628234863

Token 1348: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009490559808909893
    2. 'arb' → logprob: -5.009490489959717
    3. ' arbres' → logprob: -6.009490489959717
    4. '_ar' → logprob: -8.259490966796875
    5. '>' → logprob: -11.259490966796875
    6. '\' → logprob: -12.259490966796875
    7. 'ar' → logprob: -12.384490966796875
    8. ''' → logprob: -12.384490966796875
    9. 's' → logprob: -12.634490966796875
    10. ' _' → logprob: -12.634490966796875

Token 1349: 'arb' (ID: 36740)
  Prédit: 'arb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.02342354692518711
    2. ' arbres' → logprob: -3.773423433303833
    3. 'ar' → logprob: -9.773423194885254
    4. '_' → logprob: -10.273423194885254
    5. ' ' → logprob: -10.398423194885254
    6. '   ' → logprob: -11.023423194885254
    7. '>' → logprob: -11.523423194885254
    8. 'trees' → logprob: -12.023423194885254
    9. ' ' → logprob: -12.773423194885254
    10. '	' → logprob: -12.898423194885254

Token 1350: 'res' (ID: 430)
  Prédit: 'bres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.43140894174575806
    2. 'res' → logprob: -1.3064088821411133
    3. 'és' → logprob: -4.056408882141113
    4. 'es' → logprob: -4.056408882141113
    5. 'ées' → logprob: -4.306408882141113
    6. 'êtres' → logprob: -4.431408882141113
    7. 'ières' → logprob: -4.931408882141113
    8. 'ès' → logprob: -5.806408882141113
    9. 'êtes' → logprob: -6.306408882141113
    10. 'bre' → logprob: -6.931408882141113

Token 1351: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11247337609529495
    2. '
' → logprob: -3.112473487854004
    3. ':' → logprob: -3.987473487854004
    4. '    
' → logprob: -4.237473487854004
    5. ':
' → logprob: -4.362473487854004
    6. ')
' → logprob: -5.487473487854004
    7. ')' → logprob: -5.737473487854004
    8. '       ' → logprob: -6.487473487854004
    9. '\n' → logprob: -6.737473487854004
    10. ' 
' → logprob: -7.112473487854004

Token 1352: ' car' (ID: 1669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5086745023727417
    2. '#' → logprob: -1.2586745023727417
    3. ' for' → logprob: -2.8836746215820312
    4. '   ' → logprob: -3.0086746215820312
    5. ' #' → logprob: -6.133674621582031
    6. 'pass' → logprob: -6.883674621582031
    7. '       ' → logprob: -7.133674621582031
    8. ' on' → logprob: -7.258674621582031
    9. 'pour' → logprob: -7.508674621582031
    10. ' pour' → logprob: -7.508674621582031

Token 1353: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.47878581285476685
    2. 'on' → logprob: -1.353785753250122
    3. 'ils' → logprob: -3.353785753250122
    4. 'il' → logprob: -3.728785753250122
    5. ' il' → logprob: -4.103785991668701
    6. ' ils' → logprob: -4.353785991668701
    7. 'l' → logprob: -5.228785991668701
    8. 'le' → logprob: -5.478785991668701
    9. 'les' → logprob: -5.478785991668701
    10. ' le' → logprob: -5.853785991668701

Token 1354: ' ne' (ID: 453)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -1.3689146041870117
    2. ' multipl' → logprob: -1.3689146041870117
    3. 'do' → logprob: -1.4939146041870117
    4. ' must' → logprob: -2.4939146041870117
    5. '#' → logprob: -3.2439146041870117
    6. 'must' → logprob: -3.4939146041870117
    7. ' devons' → logprob: -3.6189146041870117
    8. '*' → logprob: -3.7439146041870117
    9. ' devra' → logprob: -4.243914604187012
    10. ' *' → logprob: -4.993914604187012

Token 1355: ' peut' (ID: 9216)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.18370291590690613
    2. '*' → logprob: -2.6837029457092285
    3. ' multipl' → logprob: -3.1837029457092285
    4. 'must' → logprob: -4.8087029457092285
    5. ' *' → logprob: -4.9337029457092285
    6. 'pe' → logprob: -5.1837029457092285
    7. ' devons' → logprob: -5.1837029457092285
    8. 'multip' → logprob: -5.3087029457092285
    9. ' doit' → logprob: -5.6837029457092285
    10. '#' → logprob: -6.0587029457092285

Token 1356: ' couper' (ID: 135212)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.027145031839609146
    2. ' pas' → logprob: -3.7771451473236084
    3. 'que' → logprob: -6.902144908905029
    4. '#' → logprob: -7.152144908905029
    5. ' multiplier' → logprob: -7.277144908905029
    6. ' que' → logprob: -8.527145385742188
    7. ' ' → logprob: -8.652145385742188
    8. 'plus' → logprob: -8.652145385742188
    9. 'multip' → logprob: -9.402145385742188
    10. 'p' → logprob: -9.652145385742188

Token 1357: ' qu' (ID: 474)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.8511359691619873
    2. ')' → logprob: -2.3511359691619873
    3. ' pas' → logprob: -2.3511359691619873
    4. ' ' → logprob: -2.4761359691619873
    5. '*' → logprob: -2.4761359691619873
    6. ' (' → logprob: -3.1011359691619873
    7. ' )' → logprob: -3.2261359691619873
    8. ' un' → logprob: -3.2261359691619873
    9. ',' → logprob: -3.4761359691619873
    10. 'pas' → logprob: -3.7261359691619873

Token 1358: ''un' (ID: 9788)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5063920021057129
    2. ' pas' → logprob: -1.131392002105713
    3. ' que' → logprob: -3.256392002105713
    4. 'que' → logprob: -4.256392002105713
    5. ' qu' → logprob: -5.006392002105713
    6. 'sur' → logprob: -5.631392002105713
    7. '       ' → logprob: -6.131392002105713
    8. 'qu' → logprob: -6.381392002105713
    9. '   ' → logprob: -6.881392002105713
    10. 'multip' → logprob: -7.131392002105713

Token 1359: ' arbre' (ID: 164180)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4046500027179718
    2. ' arbre' → logprob: -2.0296499729156494
    3. ' seul' → logprob: -2.4046499729156494
    4. ' )' → logprob: -4.1546502113342285
    5. '=' → logprob: -4.2796502113342285
    6. ')' → logprob: -4.4046502113342285
    7. '```' → logprob: -4.7796502113342285
    8. ' espace' → logprob: -5.0296502113342285
    9. ' ```' → logprob: -5.0296502113342285
    10. ' token' → logprob: -5.5296502113342285

Token 1360: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1311126947402954
    2. ',' → logprob: -1.8811126947402954
    3. ')' → logprob: -2.006112575531006
    4. '):' → logprob: -2.756112575531006
    5. '   ' → logprob: -3.256112575531006
    6. '=' → logprob: -3.256112575531006
    7. ' =' → logprob: -4.006112575531006
    8. '[' → logprob: -4.006112575531006
    9. 's' → logprob: -4.006112575531006
    10. ' for' → logprob: -4.506112575531006

Token 1361: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.013982021249830723
    2. 'a' → logprob: -5.138981819152832
    3. 'fois' → logprob: -6.138981819152832
    4. 'une' → logprob: -6.513981819152832
    5. 'un' → logprob: -6.763981819152832
    6. ' la' → logprob: -7.013981819152832
    7. 'part' → logprob: -7.388981819152832
    8. 'temps' → logprob: -7.638981819152832
    9. 'l' → logprob: -8.138981819152832
    10. ' ' → logprob: -9.138981819152832

Token 1362: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.41001665592193604
    2. 'fois' → logprob: -1.160016655921936
    3. 'time' → logprob: -4.7850165367126465
    4. 'part' → logprob: -5.5350165367126465
    5. ' ' → logprob: -6.1600165367126465
    6. '```' → logprob: -6.6600165367126465
    7. ' time' → logprob: -6.6600165367126465
    8. 'temps' → logprob: -6.6600165367126465
    9. 'a' → logprob: -6.7850165367126465
    10. 'ligne' → logprob: -7.7850165367126465

Token 1363: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09350466728210449
    2. '
' → logprob: -3.0935046672821045
    3. ' for' → logprob: -3.9685046672821045
    4. 'for' → logprob: -4.218504905700684
    5. '    
' → logprob: -5.593504905700684
    6. ' if' → logprob: -6.843504905700684
    7. '       ' → logprob: -6.843504905700684
    8. 'if' → logprob: -7.593504905700684
    9. '\n' → logprob: -7.843504905700684
    10. 'def' → logprob: -8.093504905700684

Token 1364: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3240382671356201
    2. '<|end|>' → logprob: -1.4490382671356201
    3. '   ' → logprob: -2.07403826713562
    4. ')' → logprob: -2.44903826713562
    5. ':' → logprob: -2.94903826713562
    6. '.' → logprob: -2.94903826713562
    7. ',' → logprob: -3.19903826713562
    8. '       ' → logprob: -3.69903826713562
    9. ' #' → logprob: -4.199038505554199
    10. '
' → logprob: -4.449038505554199

Token 1365: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.034867916256189346
    2. 'each' → logprob: -3.784868001937866
    3. ' each' → logprob: -5.534867763519287
    4. ' i' → logprob: -6.784867763519287
    5. 'cut' → logprob: -7.034867763519287
    6. ' chacune' → logprob: -7.034867763519287
    7. ' le' → logprob: -7.159867763519287
    8. '_each' → logprob: -7.534867763519287
    9. 'i' → logprob: -8.034868240356445
    10. 'le' → logprob: -8.284868240356445

Token 1366: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.1114901527762413
    2. ')' → logprob: -3.111490249633789
    3. ' )' → logprob: -4.111490249633789
    4. ' arbres' → logprob: -4.361490249633789
    5. ' case' → logprob: -4.736490249633789
    6. ' token' → logprob: -5.486490249633789
    7. 'ar' → logprob: -5.611490249633789
    8. 'token' → logprob: -5.986490249633789
    9. ' ar' → logprob: -6.486490249633789
    10. ' ' → logprob: -6.861490249633789

Token 1367: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33583760261535645
    2. '   ' → logprob: -2.0858376026153564
    3. ',' → logprob: -2.8358376026153564
    4. ' :' → logprob: -3.5858376026153564
    5. '):' → logprob: -3.8358376026153564
    6. ':
' → logprob: -4.585837364196777
    7. ')' → logprob: -4.585837364196777
    8. '       ' → logprob: -5.960837364196777
    9. ' (' → logprob: -6.085837364196777
    10. '.' → logprob: -6.210837364196777

Token 1368: ' fait' (ID: 7473)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1369: ' la' (ID: 557)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.2219836711883545
    2. ' un' → logprob: -1.2219836711883545
    3. ' ' → logprob: -2.2219836711883545
    4. '<|end|>' → logprob: -2.2219836711883545
    5. '*' → logprob: -2.5969836711883545
    6. '```' → logprob: -4.096983909606934
    7. ')' → logprob: -4.221983909606934
    8. 'une' → logprob: -4.721983909606934
    9. 'es' → logprob: -4.971983909606934
    10. ' *' → logprob: -5.096983909606934

Token 1370: ' même' (ID: 9679)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.6253278255462646
    2. '*' → logprob: -2.0003278255462646
    3. ' +' → logprob: -2.5003278255462646
    4. '+' → logprob: -2.5003278255462646
    5. ' même' → logprob: -2.5003278255462646
    6. ' ' → logprob: -2.7503278255462646
    7. ' space' → logprob: -3.5003278255462646
    8. ' \' → logprob: -3.5003278255462646
    9. ' multiplication' → logprob: -3.7503278255462646
    10. ' ```' → logprob: -4.000328063964844

Token 1371: ' opération' (ID: 86023)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6730511784553528
    2. ' )' → logprob: -1.798051118850708
    3. ' 
' → logprob: -2.423051118850708
    4. ' token' → logprob: -2.798051118850708
    5. 'token' → logprob: -3.173051118850708
    6. '_token' → logprob: -3.298051118850708
    7. ')
' → logprob: -4.048051357269287
    8. '_' → logprob: -4.298051357269287
    9. '```' → logprob: -4.298051357269287
    10. ' )
' → logprob: -4.548051357269287

Token 1372: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08489861339330673
    2. '
' → logprob: -3.0848987102508545
    3. '    
' → logprob: -4.084898471832275
    4. ' 
' → logprob: -5.334898471832275
    5. ')' → logprob: -5.834898471832275
    6. ':' → logprob: -6.459898471832275
    7. ')
' → logprob: -6.584898471832275
    8. 'def' → logprob: -6.834898471832275
    9. 'for' → logprob: -6.959898471832275
    10. '  
' → logprob: -7.084898471832275

Token 1373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014942311681807041
    2. '    
' → logprob: -5.889942169189453
    3. 'for' → logprob: -5.889942169189453
    4. ' for' → logprob: -6.264942169189453
    5. '       ' → logprob: -6.389942169189453
    6. ')' → logprob: -6.389942169189453
    7. ':' → logprob: -6.764942169189453
    8. '
' → logprob: -6.889942169189453
    9. '\n' → logprob: -7.514942169189453
    10. ' 
' → logprob: -8.639942169189453

Token 1374: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061134956777095795
    2. 'for' → logprob: -3.4361350536346436
    3. 'total' → logprob: -4.3111348152160645
    4. '
' → logprob: -5.6861348152160645
    5. ' for' → logprob: -5.8111348152160645
    6. 'min' → logprob: -6.3111348152160645
    7. 'max' → logprob: -6.4361348152160645
    8. 'result' → logprob: -7.3111348152160645
    9. '    
' → logprob: -7.5611348152160645
    10. '#' → logprob: -7.6861348152160645

Token 1375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09293114393949509
    2. 'total' → logprob: -3.217931032180786
    3. 'for' → logprob: -3.842931032180786
    4. 'result' → logprob: -5.467931270599365
    5. 'min' → logprob: -5.592931270599365
    6. '#' → logprob: -5.717931270599365
    7. 'max' → logprob: -5.842931270599365
    8. ' for' → logprob: -5.967931270599365
    9. '
' → logprob: -6.092931270599365
    10. ' total' → logprob: -6.717931270599365

Token 1376: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8561058044433594
    2. 'for' → logprob: -1.1061058044433594
    3. 'min' → logprob: -2.3561058044433594
    4. 'total' → logprob: -2.3561058044433594
    5. 'result' → logprob: -3.7311058044433594
    6. 'best' → logprob: -5.481105804443359
    7. 'max' → logprob: -5.481105804443359
    8. 'res' → logprob: -5.606105804443359
    9. 'cost' → logprob: -5.606105804443359
    10. '#' (adapté à ' #') → logprob: -5.856105804443359

Token 1377: ' Donc' (ID: 88837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1216171979904175
    2. 'total' → logprob: -1.3716171979904175
    3. 'min' → logprob: -1.9966171979904175
    4. '   ' → logprob: -1.9966171979904175
    5. 'result' → logprob: -2.996617317199707
    6. 'max' → logprob: -3.121617317199707
    7. 'res' → logprob: -4.371617317199707
    8. 'best' → logprob: -4.371617317199707
    9. 'minimum' → logprob: -4.871617317199707
    10. 'cut' → logprob: -5.496617317199707

Token 1378: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4178006947040558
    2. ' for' → logprob: -1.2928006649017334
    3. '   ' → logprob: -2.9178006649017334
    4. '#' → logprob: -4.9178009033203125
    5. ' on' → logprob: -6.2928009033203125
    6. 'total' → logprob: -6.5428009033203125
    7. ' total' → logprob: -8.042800903320312
    8. 'min' → logprob: -8.042800903320312
    9. '
' → logprob: -8.292800903320312
    10. ' #' → logprob: -8.542800903320312

Token 1379: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0567103773355484
    2. ' i' → logprob: -3.6817104816436768
    3. '(i' → logprob: -4.306710243225098
    4. ' (' → logprob: -5.056710243225098
    5. ' chaque' → logprob: -5.431710243225098
    6. 'case' → logprob: -6.556710243225098
    7. 'each' → logprob: -6.681710243225098
    8. '(' → logprob: -6.806710243225098
    9. ' case' → logprob: -8.056710243225098
    10. 'cut' → logprob: -8.306710243225098

Token 1380: ' arbre' (ID: 164180)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.8785120844841003
    2. ' (' → logprob: -1.5035121440887451
    3. ' arbre' → logprob: -1.6285121440887451
    4. ')' → logprob: -2.628512144088745
    5. ' ' → logprob: -3.503512144088745
    6. 'n' → logprob: -4.753511905670166
    7. ' )' → logprob: -4.878511905670166
    8. '(i' → logprob: -5.128511905670166
    9. '_' → logprob: -5.253511905670166
    10. '(' → logprob: -5.378511905670166

Token 1381: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46084603667259216
    2. ':' → logprob: -1.7108460664749146
    3. ' ,' → logprob: -3.085845947265625
    4. ')' → logprob: -3.710845947265625
    5. 's' → logprob: -3.835845947265625
    6. ' :' → logprob: -4.085845947265625
    7. '<|end|>' → logprob: -4.210845947265625
    8. ' ' → logprob: -4.585845947265625
    9. '*' → logprob: -4.585845947265625
    10. ' *' → logprob: -4.710845947265625

Token 1382: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.23954878747463226
    2. '   ' → logprob: -2.364548683166504
    3. '(' → logprob: -2.989548683166504
    4. ' for' → logprob: -4.364548683166504
    5. '#' → logprob: -4.864548683166504
    6. ' =' → logprob: -5.239548683166504
    7. ' #' → logprob: -5.239548683166504
    8. 'for' → logprob: -5.239548683166504
    9. '       ' → logprob: -5.364548683166504
    10. '2' → logprob: -5.614548683166504

Token 1383: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.299644947052002
    2. ' for' → logprob: -1.799644947052002
    3. 'for' → logprob: -2.174644947052002
    4. '(' → logprob: -2.924644947052002
    5. '   ' → logprob: -2.924644947052002
    6. ' return' → logprob: -3.049644947052002
    7. 'return' → logprob: -3.049644947052002
    8. 'total' → logprob: -3.424644947052002
    9. 'cost' → logprob: -3.424644947052002
    10. ' total' → logprob: -3.549644947052002

Token 1384: ' temps' (ID: 11160)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4961722493171692
    2. '(' → logprob: -1.1211721897125244
    3. 'distance' → logprob: -4.9961724281311035
    4. ' "' → logprob: -5.1211724281311035
    5. '(distance' → logprob: -5.1211724281311035
    6. '#' → logprob: -5.4961724281311035
    7. ' #' → logprob: -5.4961724281311035
    8. ' ' → logprob: -5.8711724281311035
    9. ' time' → logprob: -5.8711724281311035
    10. '(
' → logprob: -5.8711724281311035

Token 1385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25199052691459656
    2. ' =' → logprob: -1.501990556716919
    3. '   ' → logprob: -10.37699031829834
    4. '*' → logprob: -12.37699031829834
    5. 's' → logprob: -12.37699031829834
    6. '_' → logprob: -12.87699031829834
    7. ' +=' → logprob: -13.25199031829834
    8. ' ' → logprob: -13.37699031829834
    9. '=
' → logprob: -13.37699031829834
    10. 'for' → logprob: -13.62699031829834

Token 1386: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0885668471455574
    2. '(' → logprob: -2.838566780090332
    3. ' ' → logprob: -4.088566780090332
    4. ' (' → logprob: -4.713566780090332
    5. '(lambda' → logprob: -8.713566780090332
    6. 'lambda' → logprob: -9.463566780090332
    7. 'dist' → logprob: -9.838566780090332
    8. ' lambda' → logprob: -9.963566780090332
    9. ' dist' → logprob: -10.088566780090332
    10. '   ' → logprob: -10.213566780090332

Token 1387: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008054602658376098
    2. '(' → logprob: -7.250805377960205
    3. ' ' → logprob: -9.500805854797363
    4. '   ' → logprob: -12.250805854797363
    5. 'dist' → logprob: -12.375805854797363
    6. 'distance' → logprob: -12.625805854797363
    7. ')' → logprob: -12.750805854797363
    8. ' (' → logprob: -13.375805854797363
    9. '1' → logprob: -14.500805854797363
    10. '((' → logprob: -14.750805854797363

Token 1388: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009762583300471306
    2. ' *' → logprob: -4.634762763977051
    3. '**' → logprob: -13.13476276397705
    4. '*object' → logprob: -13.50976276397705
    5. '*d' → logprob: -13.88476276397705
    6. '*(' → logprob: -14.38476276397705
    7. ' ' → logprob: -14.75976276397705
    8. '*time' → logprob: -14.75976276397705
    9. '*num' → logprob: -14.88476276397705
    10. '*out' → logprob: -15.50976276397705

Token 1389: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5251451134681702
    2. 'dist' → logprob: -0.9001451134681702
    3. ' distance' → logprob: -6.650145053863525
    4. ' dist' → logprob: -7.275145053863525
    5. '(distance' → logprob: -11.400145530700684
    6. '(dist' → logprob: -11.775145530700684
    7. ' (' → logprob: -12.525145530700684
    8. ' distancia' → logprob: -13.650145530700684
    9. 'd' → logprob: -13.775145530700684
    10. '```' → logprob: -13.900145530700684

Token 1390: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.037423763424158096
    2. '+' → logprob: -3.662423849105835
    3. ')' → logprob: -4.787423610687256
    4. ')+' → logprob: -6.037423610687256
    5. ' )' → logprob: -8.037424087524414
    6. ' ' → logprob: -12.287424087524414
    7. '   ' → logprob: -12.912424087524414
    8. ' ' → logprob: -13.287424087524414
    9. '+)' → logprob: -13.537424087524414
    10. ')+(' → logprob: -13.662424087524414

Token 1391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975187823176384
    2. ' ' → logprob: -3.529751777648926
    3. ')' → logprob: -13.654751777648926
    4. ' ' → logprob: -16.154752731323242
    5. '```' → logprob: -17.154752731323242
    6. '   ' → logprob: -17.154752731323242
    7. ' )' → logprob: -18.029752731323242
    8. '  ' → logprob: -18.154752731323242
    9. '0' → logprob: -19.404752731323242
    10. '    ' → logprob: -19.529752731323242

Token 1392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.750051498413086
    4. '
' → logprob: -17.750051498413086
    5. '```' → logprob: -18.750051498413086
    6. '0' → logprob: -19.250051498413086
    7. '   ' → logprob: -19.500051498413086
    8. ' )' → logprob: -20.500051498413086
    9. ',' → logprob: -20.750051498413086
    10. ' ' → logprob: -20.875051498413086

Token 1393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032390307751484215
    2. ')*' → logprob: -8.375324249267578
    3. ' )' → logprob: -9.375324249267578
    4. ')
' → logprob: -12.500324249267578
    5. '*' → logprob: -13.625324249267578
    6. '#' → logprob: -14.750324249267578
    7. '),' → logprob: -14.750324249267578
    8. ' *' → logprob: -14.875324249267578
    9. ')#' → logprob: -15.125324249267578
    10. ')*(' → logprob: -15.250324249267578

Token 1394: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1763506382703781
    2. '#' → logprob: -2.9263505935668945
    3. '
' → logprob: -2.9263505935668945
    4. 'for' → logprob: -4.0513505935668945
    5. ' for' → logprob: -4.8013505935668945
    6. ')' → logprob: -4.9263505935668945
    7. '       ' → logprob: -5.0513505935668945
    8. '#
' → logprob: -5.5513505935668945
    9. ')
' → logprob: -6.0513505935668945
    10. '    
' → logprob: -6.6763505935668945

Token 1395: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03530828654766083
    2. 'for' → logprob: -4.535308361053467
    3. ')' → logprob: -4.660308361053467
    4. '#' → logprob: -5.035308361053467
    5. ' for' → logprob: -5.910308361053467
    6. '
' → logprob: -6.285308361053467
    7. '       ' → logprob: -6.785308361053467
    8. 'def' → logprob: -7.160308361053467
    9. '.' → logprob: -7.660308361053467
    10. ',' → logprob: -9.035307884216309

Token 1396: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13574771583080292
    2. 'for' → logprob: -2.5107476711273193
    3. ' for' → logprob: -3.8857476711273193
    4. '#' → logprob: -4.260747909545898
    5. '       ' → logprob: -6.010747909545898
    6. '
' → logprob: -6.010747909545898
    7. ')' → logprob: -6.135747909545898
    8. '    
' → logprob: -6.385747909545898
    9. 'total' → logprob: -8.510747909545898
    10. '```' → logprob: -8.510747909545898

Token 1397: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5886823534965515
    2. '   ' → logprob: -0.9636823534965515
    3. '#' (adapté à ' #') → logprob: -2.9636824131011963
    4. ' for' → logprob: -5.463682174682617
    5. 'total' → logprob: -5.463682174682617
    6. '
' → logprob: -6.838682174682617
    7. 'def' → logprob: -7.963682174682617
    8. 'time' → logprob: -8.338682174682617
    9. 'max' → logprob: -8.463682174682617
    10. 'For' → logprob: -8.463682174682617

Token 1398: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7903717160224915
    2. '#' → logprob: -1.1653716564178467
    3. 'for' → logprob: -2.1653716564178467
    4. 'total' → logprob: -3.4153716564178467
    5. 'max' → logprob: -3.6653716564178467
    6. '
' → logprob: -3.9153716564178467
    7. 'best' → logprob: -4.290371894836426
    8. 'min' → logprob: -4.415371894836426
    9. 'result' → logprob: -5.290371894836426
    10. 'def' → logprob: -5.790371894836426

Token 1399: ' n' (ID: 297)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.12529002130031586
    2. ' n' → logprob: -4.0002899169921875
    3. 'all' → logprob: -4.3752899169921875
    4. 'n' → logprob: -4.3752899169921875
    5. ' tous' → logprob: -4.5002899169921875
    6. ' i' → logprob: -4.7502899169921875
    7. ' all' → logprob: -5.1252899169921875
    8. 't' → logprob: -5.3752899169921875
    9. 'each' → logprob: -5.3752899169921875
    10. 'nombre' → logprob: -5.3752899169921875

Token 1400: ' arbres' (ID: 127011)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4784303605556488
    2. '*' → logprob: -1.2284303903579712
    3. 'umber' → logprob: -3.9784302711486816
    4. ' ' → logprob: -4.228430271148682
    5. ' =' → logprob: -4.353430271148682
    6. '_' → logprob: -4.478430271148682
    7. '=' → logprob: -4.478430271148682
    8. 'um' → logprob: -4.728430271148682
    9. ')' → logprob: -5.978430271148682
    10. ' ' → logprob: -6.478430271148682

Token 1401: ':
' (ID: 734)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.37956705689430237
    2. ':' → logprob: -1.75456702709198
    3. '*' → logprob: -2.2545671463012695
    4. ' :' → logprob: -3.7545671463012695
    5. ' =' → logprob: -5.6295671463012695
    6. '=' → logprob: -5.8795671463012695
    7. '):' → logprob: -6.2545671463012695
    8. ')' → logprob: -6.5045671463012695
    9. '   ' → logprob: -6.7545671463012695
    10. ',' → logprob: -7.2545671463012695

Token 1402: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43626609444618225
    2. ' (' → logprob: -1.3112660646438599
    3. ' *' → logprob: -3.4362661838531494
    4. '(' → logprob: -3.9362661838531494
    5. ' times' → logprob: -4.43626594543457
    6. '    ' → logprob: -5.18626594543457
    7. ' =' → logprob: -6.31126594543457
    8. '*' → logprob: -6.31126594543457
    9. 'times' → logprob: -6.31126594543457
    10. ' temps' → logprob: -6.93626594543457

Token 1403: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8691706657409668
    2. '#' (adapté à ' #') → logprob: -0.9941706657409668
    3. 'temps' → logprob: -2.244170665740967
    4. 'times' → logprob: -3.369170665740967
    5. ' temps' → logprob: -3.994170665740967
    6. '*' → logprob: -4.369170665740967
    7. ' times' → logprob: -4.369170665740967
    8. ' #' → logprob: -4.869170665740967
    9. ' *' → logprob: -4.869170665740967
    10. 'time' → logprob: -5.744170665740967

Token 1404: ' temps' (ID: 11160)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1185559034347534
    2. ' (' → logprob: -1.1185559034347534
    3. 'temps' → logprob: -2.118556022644043
    4. ' temps' → logprob: -2.243556022644043
    5. '   ' → logprob: -3.243556022644043
    6. '(n' → logprob: -3.618556022644043
    7. ' A' → logprob: -4.243556022644043
    8. 'A' → logprob: -4.993556022644043
    9. ' *' → logprob: -5.118556022644043
    10. ' n' → logprob: -5.243556022644043

Token 1405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269458532333374
    2. '=' → logprob: -2.126945972442627
    3. '   ' → logprob: -11.501945495605469
    4. '*' → logprob: -12.751945495605469
    5. ' *' → logprob: -12.751945495605469
    6. ' ' → logprob: -14.501945495605469
    7. ' *=' → logprob: -15.251945495605469
    8. '*=' → logprob: -15.251945495605469
    9. '```' → logprob: -15.501945495605469
    10. ' ' → logprob: -15.501945495605469

Token 1406: ' n' (ID: 297)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14373865723609924
    2. ' (' → logprob: -2.2687387466430664
    3. 'n' → logprob: -3.6437387466430664
    4. ' n' → logprob: -6.018738746643066
    5. '(n' → logprob: -7.143738746643066
    6. 'A' → logprob: -7.643738746643066
    7. '   ' → logprob: -8.268738746643066
    8. '2' → logprob: -8.518738746643066
    9. ' A' → logprob: -9.643738746643066
    10. '(A' → logprob: -10.643738746643066

Token 1407: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09802523255348206
    2. '*' → logprob: -2.473025321960449
    3. '*(' → logprob: -5.973025321960449
    4. ')' → logprob: -6.098025321960449
    5. '[' → logprob: -7.223025321960449
    6. ' +' → logprob: -7.348025321960449
    7. ' ' → logprob: -8.09802532196045
    8. ' =' → logprob: -8.09802532196045
    9. ' *
' → logprob: -8.22302532196045
    10. '=' → logprob: -8.47302532196045

Token 1408: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01429020706564188
    2. ' (' → logprob: -4.2642903327941895
    3. '((' → logprob: -9.014289855957031
    4. ' ((' → logprob: -12.264289855957031
    5. '   ' → logprob: -15.639289855957031
    6. ' ' → logprob: -16.13928985595703
    7. '（' → logprob: -17.38928985595703
    8. '`' → logprob: -17.76428985595703
    9. '  ' → logprob: -17.88928985595703
    10. '```' → logprob: -18.26428985595703

Token 1409: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043781884014606476
    2. '2' → logprob: -3.1687819957733154
    3. ' (' → logprob: -7.168781757354736
    4. ' ' → logprob: -11.793782234191895
    5. '   ' → logprob: -13.043782234191895
    6. ')' → logprob: -14.168782234191895
    7. '((' → logprob: -14.668782234191895
    8. '`' → logprob: -14.918782234191895
    9. '
' → logprob: -15.168782234191895
    10. '  ' → logprob: -15.918782234191895

Token 1410: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.061968132853507996
    2. '*' → logprob: -2.8119680881500244
    3. ' ' → logprob: -15.061967849731445
    4. ')' → logprob: -16.561967849731445
    5. ' ' → logprob: -17.061967849731445
    6. '```' → logprob: -17.686967849731445
    7. '*object' → logprob: -17.936967849731445
    8. ' **' → logprob: -18.811967849731445
    9. '**' → logprob: -19.186967849731445
    10. ' #' → logprob: -19.686967849731445

Token 1411: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0030480583664029837
    2. ' distance' → logprob: -5.878047943115234
    3. 'dist' → logprob: -8.378047943115234
    4. '(distance' → logprob: -11.503047943115234
    5. '(' → logprob: -13.878047943115234
    6. ' (' → logprob: -14.128047943115234
    7. ' distancia' → logprob: -15.128047943115234
    8. ' dist' → logprob: -15.378047943115234
    9. '   ' → logprob: -15.878047943115234
    10. '2' → logprob: -16.003047943115234

Token 1412: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20144258439540863
    2. '+' → logprob: -1.7014425992965698
    3. ')' → logprob: -11.07644271850586
    4. ')+' → logprob: -11.45144271850586
    5. '   ' → logprob: -13.57644271850586
    6. ' ' → logprob: -14.45144271850586
    7. '[' → logprob: -15.20144271850586
    8. ' )' → logprob: -15.45144271850586
    9. '```' → logprob: -15.70144271850586
    10. '()+' → logprob: -15.95144271850586

Token 1413: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004079112783074379
    2. ' ' → logprob: -5.504079341888428
    3. ')' → logprob: -14.50407886505127
    4. ' ' → logprob: -16.129079818725586
    5. '```' → logprob: -16.629079818725586
    6. '`' → logprob: -18.504079818725586
    7. '2' → logprob: -19.129079818725586
    8. '   ' → logprob: -19.379079818725586
    9. ' )' → logprob: -19.629079818725586
    10. '_' → logprob: -19.879079818725586

Token 1414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.750009536743164
    4. ')' → logprob: -17.750009536743164
    5. '   ' → logprob: -17.875009536743164
    6. '`' → logprob: -19.375009536743164
    7. '
' → logprob: -19.875009536743164
    8. '  ' → logprob: -21.125009536743164
    9. ' ' → logprob: -21.125009536743164
    10. '2' → logprob: -21.375009536743164

Token 1415: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ' )' → logprob: -12.750011444091797
    3. ')
' → logprob: -12.875011444091797
    4. ')`' → logprob: -13.000011444091797
    5. '   ' → logprob: -13.625011444091797
    6. '+' → logprob: -14.750011444091797
    7. ')+' → logprob: -14.875011444091797
    8. ')
' → logprob: -15.000011444091797
    9. ')*' → logprob: -15.125011444091797
    10. '))' → logprob: -15.125011444091797

Token 1416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022857902571558952
    2. '
' → logprob: -4.022857666015625
    3. '    
' → logprob: -6.147857666015625
    4. 'for' → logprob: -6.897857666015625
    5. '       ' → logprob: -8.022857666015625
    6. 'def' → logprob: -8.147857666015625
    7. '#' → logprob: -8.397857666015625
    8. 'import' → logprob: -8.897857666015625
    9. 'if' → logprob: -9.022857666015625
    10. ')' → logprob: -10.022857666015625

Token 1417: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12459807842969894
    2. 'min' → logprob: -3.4995980262756348
    3. 'total' → logprob: -3.6245980262756348
    4. 'for' → logprob: -3.7495980262756348
    5. 'max' → logprob: -4.999598026275635
    6. 'result' → logprob: -5.124598026275635
    7. '#' → logprob: -5.249598026275635
    8. 'minimum' → logprob: -5.374598026275635
    9. 'best' → logprob: -5.374598026275635
    10. 'answer' → logprob: -6.249598026275635

Token 1418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029450519010424614
    2. '
' → logprob: -4.154450416564941
    3. '    
' → logprob: -5.154450416564941
    4. 'total' → logprob: -5.529450416564941
    5. '#' → logprob: -7.404450416564941
    6. 'for' → logprob: -7.404450416564941
    7. 'max' → logprob: -7.779450416564941
    8. 'result' → logprob: -8.029450416564941
    9. 'min' → logprob: -8.279450416564941
    10. 'def' → logprob: -8.404450416564941

Token 1419: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022800112143158913
    2. 'for' → logprob: -4.647799968719482
    3. '
' → logprob: -5.147799968719482
    4. ' for' → logprob: -5.897799968719482
    5. 'min' → logprob: -6.772799968719482
    6. '#' (adapté à ' #') → logprob: -7.147799968719482
    7. '    
' → logprob: -7.147799968719482
    8. 'total' → logprob: -7.647799968719482
    9. 'max' → logprob: -8.39780044555664
    10. 'minimum' → logprob: -8.52280044555664

Token 1420: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2615984380245209
    2. '#' → logprob: -2.5115983486175537
    3. 'min' → logprob: -2.8865983486175537
    4. 'total' → logprob: -3.1365983486175537
    5. 'best' → logprob: -4.136598587036133
    6. 'max' → logprob: -4.261598587036133
    7. 'answer' → logprob: -5.511598587036133
    8. 'result' → logprob: -5.511598587036133
    9. 'for' → logprob: -5.636598587036133
    10. 'minimum' → logprob: -6.386598587036133

Token 1421: ' dans' (ID: 2671)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7266438007354736
    2. ' il' → logprob: -2.2266438007354736
    3. 'on' → logprob: -2.6016438007354736
    4. ' pour' → logprob: -2.8516438007354736
    5. '#' → logprob: -2.9766438007354736
    6. 'for' → logprob: -2.9766438007354736
    7. ' for' → logprob: -3.6016438007354736
    8. 'if' → logprob: -3.7266438007354736
    9. ' si' → logprob: -3.9766438007354736
    10. ' if' → logprob: -4.3516435623168945

Token 1422: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4462089538574219
    2. ' le' → logprob: -1.5712089538574219
    3. 'le' → logprob: -1.8212089538574219
    4. 'la' → logprob: -2.071208953857422
    5. 'l' → logprob: -2.196208953857422
    6. 'les' → logprob: -3.321208953857422
    7. ' l' → logprob: -3.446208953857422
    8. ' ce' → logprob: -4.071208953857422
    9. 'n' → logprob: -4.946208953857422
    10. 'len' → logprob: -4.946208953857422

Token 1423: ''ex' (ID: 23472)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6299394965171814
    2. 'A' → logprob: -1.8799395561218262
    3. '#' → logprob: -2.379939556121826
    4. 'def' → logprob: -3.379939556121826
    5. 'final' → logprob: -3.504939556121826
    6. 'suite' → logprob: -4.004939556121826
    7. '[' → logprob: -4.129939556121826
    8. ''' → logprob: -4.379939556121826
    9. 'dist' → logprob: -4.379939556121826
    10. '_code' → logprob: -4.629939556121826

Token 1424: 'emple' (ID: 55259)
  Prédit: 'trait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trait' → logprob: -0.429189532995224
    2. 'pression' → logprob: -1.9291895627975464
    3. 'p' → logprob: -2.054189443588257
    4. 'cerpt' → logprob: -2.929189443588257
    5. 'emple' → logprob: -4.429189682006836
    6. '#' → logprob: -6.679189682006836
    7. 'planation' → logprob: -6.804189682006836
    8. 'pl' → logprob: -6.929189682006836
    9. 'ercice' → logprob: -6.929189682006836
    10. 'cé' → logprob: -7.054189682006836

Token 1425: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031903352588415146
    2. ':
' → logprob: -4.656903266906738
    3. '   ' → logprob: -4.906903266906738
    4. ')' → logprob: -5.406903266906738
    5. '):' → logprob: -5.781903266906738
    6. ']' → logprob: -6.406903266906738
    7. 'for' → logprob: -6.656903266906738
    8. ' for' → logprob: -7.031903266906738
    9. ',' → logprob: -7.406903266906738
    10. ']:' → logprob: -7.656903266906738

Token 1426: ' problème' (ID: 35630)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.5820562839508057
    2. 'b' → logprob: -1.8320562839508057
    3. 'code' → logprob: -1.9570562839508057
    4. 'for' → logprob: -2.2070562839508057
    5. 'def' → logprob: -2.4570562839508057
    6. 'W' → logprob: -2.8320562839508057
    7. '#' → logprob: -3.0820562839508057
    8. 'A' → logprob: -3.4570562839508057
    9. ' for' → logprob: -3.5820562839508057
    10. 'main' → logprob: -3.5820562839508057

Token 1427: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04652388393878937
    2. '):' → logprob: -4.2965240478515625
    3. '   ' → logprob: -4.4215240478515625
    4. ')' → logprob: -4.9215240478515625
    5. 'def' → logprob: -6.0465240478515625
    6. ':
' → logprob: -6.1715240478515625
    7. '[' → logprob: -6.1715240478515625
    8. ']' → logprob: -6.4215240478515625
    9. ']:' → logprob: -6.6715240478515625
    10. '():' → logprob: -7.6715240478515625

Token 1428: ' ils' (ID: 15387)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5165591835975647
    2. '   ' → logprob: -1.01655912399292
    3. 'for' → logprob: -4.64155912399292
    4. ' #' → logprob: -5.01655912399292
    5. ' for' → logprob: -5.26655912399292
    6. '    ' → logprob: -5.76655912399292
    7. ')' → logprob: -5.76655912399292
    8. 'import' → logprob: -5.76655912399292
    9. 'pass' → logprob: -6.01655912399292
    10. '       ' → logprob: -6.01655912399292

Token 1429: ' calcul' (ID: 7559)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5263932943344116
    2. '#' → logprob: -1.5263932943344116
    3. ' n' → logprob: -3.026393413543701
    4. 'continue' → logprob: -3.651393413543701
    5. ' continu' → logprob: -3.651393413543701
    6. ' continuer' → logprob: -4.526393413543701
    7. ' =' → logprob: -5.026393413543701
    8. '[' → logprob: -5.151393413543701
    9. ' #' → logprob: -5.151393413543701
    10. ' utilisent' → logprob: -5.401393413543701

Token 1430: 'ent' (ID: 299)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.6526427865028381
    2. 'ent' → logprob: -1.1526427268981934
    3. 'ate' → logprob: -2.7776427268981934
    4. 'aient' → logprob: -3.1526427268981934
    5. '```' → logprob: -4.152642726898193
    6. '=' → logprob: -4.652642726898193
    7. '#' → logprob: -5.027642726898193
    8. ' =' → logprob: -5.027642726898193
    9. '   ' → logprob: -5.527642726898193
    10. 'èrent' → logprob: -6.027642726898193

Token 1431: ' temps' (ID: 11160)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.153151035308838
    2. ')' → logprob: -1.653151035308838
    3. ' ' → logprob: -1.778151035308838
    4. '   ' → logprob: -2.278151035308838
    5. '[' → logprob: -3.403151035308838
    6. '(' → logprob: -3.778151035308838
    7. 'n' → logprob: -4.278151035308838
    8. '*' → logprob: -4.403151035308838
    9. ' n' → logprob: -4.403151035308838
    10. '#' → logprob: -4.528151035308838

Token 1432: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2206178903579712
    2. ')' → logprob: -1.8456178903579712
    3. ' =' → logprob: -1.9706178903579712
    4. '=' → logprob: -2.5956177711486816
    5. '_' → logprob: -2.9706177711486816
    6. 'for' → logprob: -3.0956177711486816
    7. '*' → logprob: -3.4706177711486816
    8. ' *' → logprob: -3.7206177711486816
    9. '_for' → logprob: -3.7206177711486816
    10. '<|end|>' → logprob: -3.7206177711486816

Token 1433: ' (' (ID: 350)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.874314546585083
    2. 'faire' → logprob: -2.499314546585083
    3. 'ouvrir' → logprob: -2.624314546585083
    4. 'la' → logprob: -2.749314546585083
    5. 'une' → logprob: -2.749314546585083
    6. 'le' → logprob: -2.874314546585083
    7. 'cut' → logprob: -2.999314546585083
    8. 'i' → logprob: -2.999314546585083
    9. 'l' → logprob: -3.124314546585083
    10. 'les' → logprob: -3.249314546585083

Token 1434: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0075117349624634
    2. 'i' → logprob: -1.0075117349624634
    3. '(' → logprob: -2.382511615753174
    4. '(i' → logprob: -2.382511615753174
    5. 'les' → logprob: -4.007511615753174
    6. ' chaque' → logprob: -4.632511615753174
    7. ')(' → logprob: -4.882511615753174
    8. ')i' → logprob: -5.007511615753174
    9. '0' → logprob: -5.132511615753174
    10. ' (' → logprob: -5.257511615753174

Token 1435: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016841089818626642
    2. ')' → logprob: -7.501684188842773
    3. '][' → logprob: -8.376684188842773
    4. '),(' → logprob: -8.376684188842773
    5. ')][' → logprob: -9.001684188842773
    6. ',j' → logprob: -9.126684188842773
    7. ' ,' → logprob: -9.751684188842773
    8. ',
' → logprob: -9.751684188842773
    9. '   ' → logprob: -9.751684188842773
    10. '[' → logprob: -10.251684188842773

Token 1436: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0007166040013544261
    2. '1' → logprob: -7.750716686248779
    3. '2' → logprob: -9.000716209411621
    4. '0' → logprob: -9.125716209411621
    5. ' ' → logprob: -10.625716209411621
    6. '4' → logprob: -11.125716209411621
    7. ')' → logprob: -12.375716209411621
    8. '   ' → logprob: -12.625716209411621
    9. 'W' → logprob: -13.250716209411621
    10. ',' → logprob: -13.750716209411621

Token 1437: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03645089641213417
    2. ',' → logprob: -5.1614508628845215
    3. ')*' → logprob: -5.1614508628845215
    4. ')+' → logprob: -5.5364508628845215
    5. '[' → logprob: -5.7864508628845215
    6. '):' → logprob: -5.9114508628845215
    7. '+' → logprob: -5.9114508628845215
    8. ')]' → logprob: -6.7864508628845215
    9. '),' → logprob: -6.7864508628845215
    10. ')
' → logprob: -6.9114508628845215

Token 1438: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7149304151535034
    2. ')' → logprob: -1.3399304151535034
    3. ':' → logprob: -2.589930534362793
    4. '[' → logprob: -2.714930534362793
    5. ']' → logprob: -2.964930534362793
    6. '):' → logprob: -4.089930534362793
    7. '       ' → logprob: -4.589930534362793
    8. ',' → logprob: -5.714930534362793
    9. '.' → logprob: -6.089930534362793
    10. '*' → logprob: -6.214930534362793

Token 1439: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.010392318479716778
    2. ' ' → logprob: -4.885392189025879
    3. 'trees' → logprob: -6.760392189025879
    4. ' arbres' → logprob: -7.635392189025879
    5. 'arb' → logprob: -8.135392189025879
    6. 'de' → logprob: -8.385392189025879
    7. '3' → logprob: -8.760392189025879
    8. 'A' → logprob: -8.760392189025879
    9. '1' → logprob: -9.760392189025879
    10. ' deux' → logprob: -10.135392189025879

Token 1440: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003823826089501381
    2. 'trees' → logprob: -6.503823757171631
    3. '3' → logprob: -7.503823757171631
    4. 'A' → logprob: -7.503823757171631
    5. '#' → logprob: -7.628823757171631
    6. '1' → logprob: -8.628824234008789
    7. ' ' → logprob: -9.003824234008789
    8. 'de' → logprob: -9.753824234008789
    9. '```' → logprob: -9.753824234008789
    10. '0' → logprob: -9.878824234008789

Token 1441: ' arbres' (ID: 127011)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7829381227493286
    2. '*' → logprob: -1.5329381227493286
    3. ')' → logprob: -2.532938003540039
    4. ' arbres' → logprob: -2.782938003540039
    5. ']' → logprob: -2.907938003540039
    6. '   ' → logprob: -3.407938003540039
    7. 'trees' → logprob: -3.657938003540039
    8. ' trees' → logprob: -3.907938003540039
    9. ',' → logprob: -4.657938003540039
    10. '```' → logprob: -4.907938003540039

Token 1442: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4400623142719269
    2. '   ' → logprob: -1.5650622844696045
    3. ' for' → logprob: -1.9400622844696045
    4. '
' → logprob: -6.690062522888184
    5. 'if' → logprob: -7.690062522888184
    6. ':' → logprob: -8.690062522888184
    7. '       ' → logprob: -8.815062522888184
    8. 'total' → logprob: -8.815062522888184
    9. '#' → logprob: -8.940062522888184
    10. 'time' → logprob: -9.065062522888184

Token 1443: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8615145683288574
    2. '2' → logprob: -1.2365145683288574
    3. '(' → logprob: -1.6115145683288574
    4. '20' → logprob: -3.2365145683288574
    5. '21' → logprob: -4.736514568328857
    6. '22' → logprob: -4.861514568328857
    7. '11' → logprob: -4.861514568328857
    8. '(n' → logprob: -4.986514568328857
    9. ' (' → logprob: -5.611514568328857
    10. '12' → logprob: -6.111514568328857

Token 1444: '6' (ID: 21)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9140772819519043
    2. '2' → logprob: -1.2890772819519043
    3. '10' → logprob: -1.5390772819519043
    4. '21' → logprob: -3.4140772819519043
    5. '20' → logprob: -3.6640772819519043
    6. '11' → logprob: -4.414077281951904
    7. '22' → logprob: -4.539077281951904
    8. '(n' → logprob: -5.039077281951904
    9. 'A' → logprob: -5.414077281951904
    10. '12' → logprob: -5.914077281951904

Token 1445: ' minutes' (ID: 5438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2605384290218353
    2. 'for' → logprob: -2.760538339614868
    3. ':' → logprob: -3.010538339614868
    4. '#' → logprob: -3.010538339614868
    5. ' for' → logprob: -4.010538578033447
    6. ')' → logprob: -4.510538578033447
    7. 'def' → logprob: -5.135538578033447
    8. ':
' → logprob: -5.135538578033447
    9. 'if' → logprob: -5.135538578033447
    10. ')
' → logprob: -5.635538578033447

Token 1446: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1718733012676239
    2. 'for' → logprob: -2.7968733310699463
    3. ' for' → logprob: -3.1718733310699463
    4. '
' → logprob: -4.046873092651367
    5. '#' → logprob: -4.546873092651367
    6. 'if' → logprob: -4.921873092651367
    7. 'def' → logprob: -5.421873092651367
    8. ':' → logprob: -5.421873092651367
    9. ' if' → logprob: -5.546873092651367
    10. ':
' → logprob: -6.421873092651367

Token 1447: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5317947268486023
    2. '   ' → logprob: -1.531794786453247
    3. ' for' → logprob: -1.906794786453247
    4. 'if' → logprob: -3.781794786453247
    5. 'def' → logprob: -5.406794548034668
    6. ' if' → logprob: -5.406794548034668
    7. '
' → logprob: -5.531794548034668
    8. '#' → logprob: -5.656794548034668
    9. 'import' → logprob: -6.656794548034668
    10. 'dist' → logprob: -6.781794548034668

Token 1448: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4130430221557617
    2. ')' → logprob: -1.5380430221557617
    3. ':' → logprob: -3.0380430221557617
    4. '       ' → logprob: -3.7880430221557617
    5. '#' (adapté à ' #') → logprob: -4.163043022155762
    6. ')
' → logprob: -4.913043022155762
    7. '*' → logprob: -5.163043022155762
    8. '.' → logprob: -5.288043022155762
    9. '
' → logprob: -6.038043022155762
    10. ',' → logprob: -6.163043022155762

Token 1449: ' Pourquoi' (ID: 94511)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33037734031677246
    2. '#' → logprob: -1.3303773403167725
    3. '#
' → logprob: -4.830377578735352
    4. '
' → logprob: -5.955377578735352
    5. 'for' → logprob: -6.330377578735352
    6. '       ' → logprob: -6.955377578735352
    7. ')' → logprob: -7.455377578735352
    8. 'if' → logprob: -7.580377578735352
    9. 'def' → logprob: -7.955377578735352
    10. '    
' → logprob: -7.955377578735352

Token 1450: ' ?' (ID: 1423)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1674150228500366
    2. '#' → logprob: -1.6674150228500366
    3. '
' → logprob: -2.417415142059326
    4. 'for' → logprob: -2.542415142059326
    5. 'def' → logprob: -3.042415142059326
    6. ':' → logprob: -3.042415142059326
    7. ':
' → logprob: -3.292415142059326
    8. '```' → logprob: -3.292415142059326
    9. ' for' → logprob: -3.917415142059326
    10. '       ' → logprob: -4.167415142059326

Token 1451: ' Ils' (ID: 31199)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0809815376996994
    2. ')' → logprob: -3.330981492996216
    3. '   ' → logprob: -4.705981731414795
    4. ':' → logprob: -5.080981731414795
    5. '#
' → logprob: -5.830981731414795
    6. '(' → logprob: -5.955981731414795
    7. ')
' → logprob: -6.205981731414795
    8. ' #' → logprob: -6.330981731414795
    9. '```' → logprob: -6.330981731414795
    10. '(
' → logprob: -6.455981731414795

Token 1452: ' ont' (ID: 4930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10203870385885239
    2. ' =' → logprob: -3.352038621902466
    3. ' #' → logprob: -3.477038621902466
    4. ' pensent' → logprob: -4.727038860321045
    5. ' expliqu' → logprob: -5.102038860321045
    6. ' continue' → logprob: -5.352038860321045
    7. '=' → logprob: -6.227038860321045
    8. ' semblent' → logprob: -6.602038860321045
    9. ' vont' → logprob: -6.602038860321045
    10. ' n' → logprob: -6.727038860321045

Token 1453: ' le' (ID: 505)
  Prédit: ' multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multip' → logprob: -1.429766297340393
    2. 'multip' → logprob: -1.679766297340393
    3. ' calcul' → logprob: -1.804766297340393
    4. 'cons' → logprob: -2.5547661781311035
    5. 'calcul' → logprob: -3.0547661781311035
    6. ' fait' → logprob: -3.0547661781311035
    7. ' considéré' → logprob: -3.3047661781311035
    8. ' pris' → logprob: -3.6797661781311035
    9. ' multipl' → logprob: -4.0547661781311035
    10. 'fait' → logprob: -4.0547661781311035

Token 1454: ' trajet' (ID: 110258)
  Prédit: ' reasoning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reasoning' → logprob: -0.8905138969421387
    2. 'raison' → logprob: -1.2655138969421387
    3. '```' → logprob: -3.3905138969421387
    4. 'temps' → logprob: -3.5155138969421387
    5. ' space' → logprob: -4.015513896942139
    6. '+' → logprob: -4.015513896942139
    7. '=' → logprob: -4.265513896942139
    8. ' code' → logprob: -4.390513896942139
    9. 'reason' → logprob: -4.390513896942139
    10. ' même' → logprob: -4.515513896942139

Token 1455: ' comme' (ID: 7971)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9560450911521912
    2. ')' → logprob: -2.081045150756836
    3. ':' → logprob: -2.206045150756836
    4. '=' → logprob: -2.456045150756836
    5. '(' → logprob: -2.456045150756836
    6. '<|end|>' → logprob: -2.956045150756836
    7. '[' → logprob: -3.331045150756836
    8. '   ' → logprob: -3.831045150756836
    9. ' (' → logprob: -4.331045150756836
    10. '<|end|>' → logprob: -4.831045150756836

Token 1456: ' distance' (ID: 9324)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0958657264709473
    2. '"' → logprob: -1.3458657264709473
    3. ' =' → logprob: -2.3458657264709473
    4. ' (' → logprob: -2.7208657264709473
    5. '`' → logprob: -3.3458657264709473
    6. ''' → logprob: -3.5958657264709473
    7. '```' → logprob: -3.5958657264709473
    8. ' "' → logprob: -3.7208657264709473
    9. ')' → logprob: -4.345865726470947
    10. ' dist' → logprob: -4.470865726470947

Token 1457: ' aller' (ID: 18383)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3967350721359253
    2. ' +' → logprob: -1.5217350721359253
    3. ':' → logprob: -2.396735191345215
    4. '+' → logprob: -2.646735191345215
    5. '   ' → logprob: -3.021735191345215
    6. ' *' → logprob: -3.146735191345215
    7. ' =' → logprob: -3.271735191345215
    8. '*' → logprob: -3.271735191345215
    9. '```' → logprob: -3.271735191345215
    10. '):' → logprob: -4.021735191345215

Token 1458: '-ret' (ID: 104824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3688708543777466
    2. '+' → logprob: -2.243870735168457
    3. '   ' → logprob: -2.243870735168457
    4. '```' → logprob: -2.243870735168457
    5. ':' → logprob: -2.493870735168457
    6. '.' → logprob: -2.743870735168457
    7. '*' → logprob: -2.993870735168457
    8. ',' → logprob: -3.243870735168457
    9. ' +' → logprob: -3.368870735168457
    10. '#' → logprob: -3.993870735168457

Token 1459: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.006920088082551956
    2. 'out' → logprob: -5.631919860839844
    3. 'ou' → logprob: -7.756919860839844
    4. '```' → logprob: -7.756919860839844
    5. 'o' → logprob: -8.131919860839844
    6. '_' → logprob: -8.506919860839844
    7. 'ourt' → logprob: -8.506919860839844
    8. 'urn' → logprob: -8.631919860839844
    9. 'ours' → logprob: -8.881919860839844
    10. 'et' → logprob: -9.006919860839844

Token 1460: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7077810764312744
    2. '   ' → logprob: -1.7077810764312744
    3. ')' → logprob: -1.8327810764312744
    4. ':
' → logprob: -3.0827810764312744
    5. ')
' → logprob: -3.2077810764312744
    6. '):' → logprob: -3.7077810764312744
    7. '.' → logprob: -4.582780838012695
    8. '       ' → logprob: -4.582780838012695
    9. '*' → logprob: -5.082780838012695
    10. '```' → logprob: -5.207780838012695

Token 1461: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2369725704193115
    2. '3' → logprob: -1.7369725704193115
    3. '6' → logprob: -1.9869725704193115
    4. ' dist' → logprob: -1.9869725704193115
    5. 'dist' → logprob: -2.3619725704193115
    6. '1' → logprob: -2.3619725704193115
    7. '2' → logprob: -3.9869725704193115
    8. '7' → logprob: -4.486972808837891
    9. '4' → logprob: -4.486972808837891
    10. ' W' → logprob: -4.986972808837891

Token 1462: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5305303335189819
    2. '1' → logprob: -1.530530333518982
    3. '6' → logprob: -2.1555304527282715
    4. '4' → logprob: -3.7805304527282715
    5. '7' → logprob: -4.2805304527282715
    6. '(' → logprob: -4.5305304527282715
    7. '5' → logprob: -4.5305304527282715
    8. ' ' → logprob: -5.2805304527282715
    9. '2' → logprob: -5.7805304527282715
    10. '9' → logprob: -6.4055304527282715

Token 1463: ' minutes' (ID: 5438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0240205526351929
    2. ':' → logprob: -2.0240206718444824
    3. ')' → logprob: -2.6490206718444824
    4. 'for' → logprob: -2.7740206718444824
    5. ')
' → logprob: -3.0240206718444824
    6. ':
' → logprob: -3.1490206718444824
    7. '#' → logprob: -3.2740206718444824
    8. 'def' → logprob: -3.2740206718444824
    9. 'dist' → logprob: -3.8990206718444824
    10. ']' → logprob: -4.024020671844482

Token 1464: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8244402408599854
    2. '   ' → logprob: -1.6994402408599854
    3. ':
' → logprob: -2.4494402408599854
    4. ')' → logprob: -2.5744402408599854
    5. ' if' → logprob: -3.1994402408599854
    6. 'if' → logprob: -3.6994402408599854
    7. 'for' → logprob: -3.6994402408599854
    8. ')
' → logprob: -3.9494402408599854
    9. '.' → logprob: -4.449440002441406
    10. '#' → logprob: -4.449440002441406

Token 1465: ' couper' (ID: 135212)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03650239109992981
    2. 'cut' → logprob: -4.161502361297607
    3. ' )' → logprob: -5.786502361297607
    4. ' couper' → logprob: -6.036502361297607
    5. ' continuer' → logprob: -6.286502361297607
    6. ' le' → logprob: -6.286502361297607
    7. ' cut' → logprob: -6.786502361297607
    8. 'le' → logprob: -7.036502361297607
    9. '```' → logprob: -7.536502361297607
    10. ' ' → logprob: -7.661502361297607

Token 1466: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0207774639129639
    2. ')' → logprob: -1.7707774639129639
    3. '       ' → logprob: -2.395777463912964
    4. ':' → logprob: -2.520777463912964
    5. ')
' → logprob: -2.895777463912964
    6. ':
' → logprob: -3.645777463912964
    7. '*' → logprob: -3.895777463912964
    8. '           ' → logprob: -4.145777702331543
    9. '               ' → logprob: -4.270777702331543
    10. ' for' → logprob: -4.395777702331543

Token 1467: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08103123307228088
    2. '(' → logprob: -3.831031322479248
    3. ',' → logprob: -3.956031322479248
    4. '*' → logprob: -4.706031322479248
    5. '```' → logprob: -4.956031322479248
    6. ':' → logprob: -5.581031322479248
    7. ')
' → logprob: -5.581031322479248
    8. '+' → logprob: -5.581031322479248
    9. '()' → logprob: -6.831031322479248
    10. '   ' → logprob: -6.956031322479248

Token 1468: ' arbre' (ID: 164180)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4976103603839874
    2. '
' → logprob: -2.622610330581665
    3. ':' → logprob: -2.997610330581665
    4. ')
' → logprob: -3.122610330581665
    5. '       ' → logprob: -3.247610330581665
    6. ')' → logprob: -3.372610330581665
    7. 'def' → logprob: -3.497610330581665
    8. 'for' → logprob: -3.622610330581665
    9. ':
' → logprob: -4.247610569000244
    10. '[' → logprob: -4.622610569000244

Token 1469: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7428032755851746
    2. '   ' → logprob: -1.9928033351898193
    3. ')
' → logprob: -2.2428033351898193
    4. ')' → logprob: -2.2428033351898193
    5. ':
' → logprob: -2.3678033351898193
    6. '#' → logprob: -4.24280309677124
    7. '):' → logprob: -4.74280309677124
    8. 'def' → logprob: -5.24280309677124
    9. '.' → logprob: -5.49280309677124
    10. 'if' → logprob: -5.61780309677124

Token 1470: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19234579801559448
    2. ')' → logprob: -2.4423458576202393
    3. '   ' → logprob: -3.9423458576202393
    4. ':
' → logprob: -4.19234561920166
    5. '):' → logprob: -4.69234561920166
    6. '(' → logprob: -4.81734561920166
    7. 'def' → logprob: -4.94234561920166
    8. ')
' → logprob: -4.94234561920166
    9. '(
' → logprob: -5.69234561920166
    10. 'if' → logprob: -5.81734561920166

Token 1471: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23507528007030487
    2. '   ' → logprob: -2.7350752353668213
    3. ')
' → logprob: -2.9850752353668213
    4. '
' → logprob: -3.3600752353668213
    5. '       ' → logprob: -4.4850754737854
    6. '*' → logprob: -4.7350754737854
    7. '+' → logprob: -5.4850754737854
    8. '```' → logprob: -5.8600754737854
    9. '           ' → logprob: -6.1100754737854
    10. ' +' → logprob: -6.1100754737854

Token 1472: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2288629561662674
    2. ')
' → logprob: -2.853863000869751
    3. ')' → logprob: -3.103863000869751
    4. ':' → logprob: -3.603863000869751
    5. 'def' → logprob: -4.228862762451172
    6. '):' → logprob: -4.728862762451172
    7. '       ' → logprob: -4.728862762451172
    8. ':
' → logprob: -5.103862762451172
    9. '#' → logprob: -5.353862762451172
    10. '```' → logprob: -5.353862762451172

Token 1473: ' nombre' (ID: 9733)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2928365468978882
    2. ' temps' → logprob: -2.2928366661071777
    3. ' distance' → logprob: -2.2928366661071777
    4. '*' → logprob: -2.5428366661071777
    5. 'distance' → logprob: -2.5428366661071777
    6. '#' → logprob: -2.6678366661071777
    7. '`' → logprob: -3.2928366661071777
    8. 'temps' → logprob: -3.4178366661071777
    9. '_' → logprob: -3.6678366661071777
    10. ' +' → logprob: -3.9178366661071777

Token 1474: ' total' (ID: 3609)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1774120330810547
    2. ')' → logprob: -1.3024120330810547
    3. '#' → logprob: -2.0524120330810547
    4. '_' → logprob: -2.1774120330810547
    5. ' =' → logprob: -2.5524120330810547
    6. '[' → logprob: -4.552412033081055
    7. ' of' → logprob: -4.552412033081055
    8. '   ' → logprob: -4.927412033081055
    9. ' *' → logprob: -4.927412033081055
    10. ' de' → logprob: -5.177412033081055

Token 1475: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7526811957359314
    2. '=' → logprob: -1.5026812553405762
    3. '_' → logprob: -2.752681255340576
    4. ' de' → logprob: -3.002681255340576
    5. ')' → logprob: -3.127681255340576
    6. '   ' → logprob: -3.377681255340576
    7. ' *' → logprob: -3.752681255340576
    8. '*' → logprob: -4.502681255340576
    9. 'for' → logprob: -4.502681255340576
    10. '  ' → logprob: -4.627681255340576

Token 1476: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5892068147659302
    2. ' *' → logprob: -1.8392068147659302
    3. ' =' → logprob: -1.9642068147659302
    4. ' (' → logprob: -2.0892066955566406
    5. ')' → logprob: -2.7142066955566406
    6. '*' → logprob: -2.7142066955566406
    7. '6' → logprob: -3.2142066955566406
    8. ' n' → logprob: -3.2142066955566406
    9. ' )' → logprob: -3.7142066955566406
    10. '=' → logprob: -3.9642066955566406

Token 1477: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5564161539077759
    2. ')' → logprob: -1.8064161539077759
    3. ' (' → logprob: -2.3064160346984863
    4. '6' → logprob: -3.9314160346984863
    5. ' n' → logprob: -3.9314160346984863
    6. '#' → logprob: -4.181416034698486
    7. '2' → logprob: -4.181416034698486
    8. ' ' → logprob: -4.431416034698486
    9. 'for' → logprob: -4.556416034698486
    10. '1' → logprob: -4.681416034698486

Token 1478: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6306297779083252
    2. '*' → logprob: -2.255629777908325
    3. ' *' → logprob: -2.380629777908325
    4. ':' → logprob: -2.505629777908325
    5. '   ' → logprob: -2.630629777908325
    6. ']' → logprob: -3.880629777908325
    7. ')
' → logprob: -4.255629539489746
    8. '):' → logprob: -4.255629539489746
    9. ',' → logprob: -4.880629539489746
    10. 'for' → logprob: -5.005629539489746

Token 1479: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09559394419193268
    2. ' (' → logprob: -2.9705939292907715
    3. '3' → logprob: -3.3455939292907715
    4. 'distance' → logprob: -5.7205939292907715
    5. 'dist' → logprob: -7.4705939292907715
    6. '(distance' → logprob: -8.59559440612793
    7. ' ' → logprob: -8.72059440612793
    8. 'temps' → logprob: -9.09559440612793
    9. '6' → logprob: -9.59559440612793
    10. '(dist' → logprob: -9.84559440612793

Token 1480: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21602623164653778
    2. '       ' → logprob: -2.2160263061523438
    3. ')' → logprob: -3.7160263061523438
    4. ':' → logprob: -4.091026306152344
    5. '           ' → logprob: -5.216026306152344
    6. '):' → logprob: -5.216026306152344
    7. '                   ' → logprob: -5.341026306152344
    8. '                       ' → logprob: -5.591026306152344
    9. '               ' → logprob: -5.591026306152344
    10. '                           ' → logprob: -5.716026306152344

Token 1481: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -16.87507438659668
    4. ' six' → logprob: -18.37507438659668
    5. '٦' → logprob: -19.25007438659668
    6. '06' → logprob: -19.56257438659668
    7. '۶' → logprob: -19.62507438659668
    8. '(' → logprob: -19.62507438659668
    9. 'six' → logprob: -19.87507438659668
    10. '' → logprob: -20.18757438659668

Token 1482: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.500017166137695
    3. ' ' → logprob: -12.125017166137695
    4. 'dist' → logprob: -15.000017166137695
    5. '3' → logprob: -15.125017166137695
    6. '```' → logprob: -15.125017166137695
    7. '2' → logprob: -15.750017166137695
    8. '(dist' → logprob: -16.250017166137695
    9. '((' → logprob: -16.375017166137695
    10. '(A' → logprob: -16.500017166137695

Token 1483: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30238422751426697
    2. '   ' → logprob: -1.8023842573165894
    3. 'if' → logprob: -2.9273841381073
    4. '#' → logprob: -4.052384376525879
    5. ' for' → logprob: -4.677384376525879
    6. 'max' → logprob: -5.302384376525879
    7. 'min' → logprob: -6.052384376525879
    8. 'def' → logprob: -6.177384376525879
    9. 'import' → logprob: -6.552384376525879
    10. ':' → logprob: -6.802384376525879

Token 1484: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014766731299459934
    2. '
' → logprob: -4.889766693115234
    3. 'for' → logprob: -6.014766693115234
    4. 'def' → logprob: -6.389766693115234
    5. '    
' → logprob: -6.639766693115234
    6. '       ' → logprob: -7.514766693115234
    7. ')' → logprob: -8.389766693115234
    8. '#' → logprob: -8.514766693115234
    9. ' for' → logprob: -8.514766693115234
    10. 'import' → logprob: -9.139766693115234

Token 1485: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22635702788829803
    2. '#' (adapté à ' #') → logprob: -2.2263569831848145
    3. 'for' → logprob: -2.4763569831848145
    4. 'if' → logprob: -5.6013569831848145
    5. ' for' → logprob: -5.8513569831848145
    6. 'def' → logprob: -6.8513569831848145
    7. '#
' → logprob: -7.3513569831848145
    8. '    
' → logprob: -7.9763569831848145
    9. ')' → logprob: -7.9763569831848145
    10. 'import' → logprob: -8.726357460021973

Token 1486: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06984038650989532
    2. 'for' → logprob: -3.569840431213379
    3. 'if' → logprob: -3.944840431213379
    4. '#' → logprob: -4.569840431213379
    5. ' if' → logprob: -5.944840431213379
    6. '
' → logprob: -6.444840431213379
    7. 'def' → logprob: -6.569840431213379
    8. ' for' → logprob: -6.819840431213379
    9. '    
' → logprob: -7.444840431213379
    10. 'import' → logprob: -7.569840431213379

Token 1487: ' ils' (ID: 15387)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.9443680644035339
    2. ' la' → logprob: -2.0693681240081787
    3. 'distance' → logprob: -2.0693681240081787
    4. 'le' → logprob: -2.8193681240081787
    5. ' on' → logprob: -2.9443681240081787
    6. ' il' → logprob: -3.0693681240081787
    7. 'dist' → logprob: -3.1943681240081787
    8. ' dist' → logprob: -3.5693681240081787
    9. '#' → logprob: -3.8193681240081787
    10. 'la' → logprob: -4.3193678855896

Token 1488: ' prennent' (ID: 121500)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.06258855015039444
    2. 'continue' → logprob: -4.812588691711426
    3. ' assume' → logprob: -5.062588691711426
    4. '#' → logprob: -5.187588691711426
    5. '*' → logprob: -5.312588691711426
    6. ' =' → logprob: -5.437588691711426
    7. ' consider' → logprob: -5.437588691711426
    8. ')' → logprob: -5.937588691711426
    9. ' seem' → logprob: -6.062588691711426
    10. ' conclude' → logprob: -6.312588691711426

Token 1489: ' temps' (ID: 11160)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8919664621353149
    2. ' dist' → logprob: -1.141966462135315
    3. ' (' → logprob: -2.1419663429260254
    4. 'distance' → logprob: -2.8919663429260254
    5. '(' → logprob: -3.2669663429260254
    6. '(dist' → logprob: -3.5169663429260254
    7. '2' → logprob: -4.766966342926025
    8. '(distance' → logprob: -5.016966342926025
    9. '1' → logprob: -5.391966342926025
    10. ' ' → logprob: -5.766966342926025

Token 1490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2903043031692505
    2. '=' → logprob: -1.4153043031692505
    3. ' +=' → logprob: -5.290304183959961
    4. ')' → logprob: -7.415304183959961
    5. '   ' → logprob: -7.665304183959961
    6. 's' → logprob: -7.915304183959961
    7. 'import' → logprob: -7.915304183959961
    8. ' ' → logprob: -8.165304183959961
    9. ' +' → logprob: -8.540304183959961
    10. '+' → logprob: -8.665304183959961

Token 1491: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.974431037902832
    2. '(' → logprob: -1.224431037902832
    3. '2' → logprob: -1.849431037902832
    4. 'dist' → logprob: -2.724431037902832
    5. '(n' → logprob: -2.974431037902832
    6. 'distance' → logprob: -3.724431037902832
    7. ' (' → logprob: -4.849431037902832
    8. '(distance' → logprob: -4.974431037902832
    9. '(dist' → logprob: -5.099431037902832
    10. ' n' → logprob: -5.224431037902832

Token 1492: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06774767488241196
    2. '*' → logprob: -3.0677475929260254
    3. '*(' → logprob: -4.817747592926025
    4. ')' → logprob: -5.067747592926025
    5. '[' → logprob: -6.567747592926025
    6. ' _' → logprob: -7.317747592926025
    7. '_' → logprob: -7.692747592926025
    8. ' =' → logprob: -8.067748069763184
    9. ' (' → logprob: -8.567748069763184
    10. ' )' → logprob: -8.567748069763184

Token 1493: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10074809938669205
    2. ' (' → logprob: -2.350748062133789
    3. '((' → logprob: -7.600748062133789
    4. ' ((' → logprob: -10.225748062133789
    5. '3' → logprob: -12.975748062133789
    6. '(distance' → logprob: -14.100748062133789
    7. '(dist' → logprob: -14.225748062133789
    8. ' ' → logprob: -15.475748062133789
    9. '```' → logprob: -15.475748062133789
    10. '（' → logprob: -15.600748062133789

Token 1494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23184433579444885
    2. '(' → logprob: -1.7318443059921265
    3. 'dist' → logprob: -3.856844425201416
    4. 'distance' → logprob: -5.606844425201416
    5. '(dist' → logprob: -5.981844425201416
    6. '(distance' → logprob: -6.606844425201416
    7. ' (' → logprob: -7.231844425201416
    8. ' ' → logprob: -8.356843948364258
    9. ' dist' → logprob: -9.106843948364258
    10. '((' → logprob: -9.481843948364258

Token 1495: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07889848947525024
    2. '*' → logprob: -2.5788984298706055
    3. ')' → logprob: -12.453898429870605
    4. ' ' → logprob: -13.328898429870605
    5. ' ' → logprob: -13.453898429870605
    6. ' )' → logprob: -14.828898429870605
    7. ' +' → logprob: -15.078898429870605
    8. '*)' → logprob: -15.328898429870605
    9. ' **' → logprob: -15.453898429870605
    10. '+' → logprob: -15.578898429870605

Token 1496: 'distance' (ID: 40614)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6996626853942871
    2. 'distance' → logprob: -0.6996626853942871
    3. ' distance' → logprob: -5.449662685394287
    4. ' dist' → logprob: -6.199662685394287
    5. '(dist' → logprob: -9.449663162231445
    6. '(distance' → logprob: -9.824663162231445
    7. 'd' → logprob: -11.324663162231445
    8. ' (' → logprob: -11.699663162231445
    9. '(' → logprob: -12.449663162231445
    10. ' distancia' → logprob: -13.199663162231445

Token 1497: '_ar' (ID: 54153)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07005703449249268
    2. '+' → logprob: -2.695056915283203
    3. ')' → logprob: -9.570056915283203
    4. ')+' → logprob: -10.570056915283203
    5. ' -' → logprob: -11.945056915283203
    6. ' )' → logprob: -12.070056915283203
    7. ' ' → logprob: -12.320056915283203
    8. ' ' → logprob: -13.320056915283203
    9. '```' → logprob: -13.820056915283203
    10. '_' → logprob: -14.195056915283203

Token 1498: 'bre' (ID: 9945)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004934602184221148
    2. 'riv' → logprob: -8.750493049621582
    3. 'e' → logprob: -8.875493049621582
    4. '_r' → logprob: -10.000493049621582
    5. 'ray' → logprob: -10.125493049621582
    6. 'rive' → logprob: -10.750493049621582
    7. 'range' → logprob: -11.000493049621582
    8. 'ound' → logprob: -11.500493049621582
    9. 'ret' → logprob: -11.875493049621582
    10. 'ea' → logprob: -11.875493049621582

Token 1499: ')
' (ID: 446)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2522244453430176
    2. '+' → logprob: -1.5022244453430176
    3. ')' → logprob: -8.75222396850586
    4. ')+' → logprob: -9.12722396850586
    5. ' )' → logprob: -11.62722396850586
    6. '_' → logprob: -12.50222396850586
    7. ' ' → logprob: -12.50222396850586
    8. '＋' → logprob: -13.50222396850586
    9. '```' → logprob: -13.62722396850586
    10. 's' → logprob: -13.62722396850586

Token 1500: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.341713547706604
    2. '   ' → logprob: -2.2167134284973145
    3. ':
' → logprob: -2.5917134284973145
    4. ')' → logprob: -3.3417134284973145
    5. ')
' → logprob: -4.2167134284973145
    6. '):' → logprob: -4.3417134284973145
    7. 'def' → logprob: -5.0917134284973145
    8. '(
' → logprob: -5.2167134284973145
    9. 'if' → logprob: -5.5917134284973145
    10. '(' → logprob: -5.7167134284973145

Token 1501: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4408579468727112
    2. '   ' → logprob: -1.5658578872680664
    3. '+' → logprob: -2.8158578872680664
    4. ']' → logprob: -3.6908578872680664
    5. ':' → logprob: -3.9408578872680664
    6. '<|end|>' → logprob: -3.9408578872680664
    7. '.' → logprob: -5.565857887268066
    8. '*' → logprob: -5.565857887268066
    9. '[' → logprob: -6.065857887268066
    10. '       ' → logprob: -6.440857887268066

Token 1502: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38903188705444336
    2. '   ' → logprob: -1.8890318870544434
    3. '+' → logprob: -2.5140318870544434
    4. '*' → logprob: -3.2640318870544434
    5. ' +' → logprob: -4.639031887054443
    6. '#' → logprob: -5.014031887054443
    7. ')
' → logprob: -5.264031887054443
    8. ':' → logprob: -5.389031887054443
    9. '       ' → logprob: -5.514031887054443
    10. ' *' → logprob: -5.889031887054443

Token 1503: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3478500843048096
    2. 'le' → logprob: -1.8478500843048096
    3. ' la' → logprob: -2.0978500843048096
    4. 'la' → logprob: -2.4728500843048096
    5. ' ils' → logprob: -2.5978500843048096
    6. ' couper' → logprob: -2.5978500843048096
    7. 'distance' → logprob: -3.0978500843048096
    8. 'cut' → logprob: -3.2228500843048096
    9. ' on' → logprob: -3.3478500843048096
    10. 'l' → logprob: -3.7228500843048096

Token 1504: ' temps' (ID: 11160)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.1805591583251953
    2. '+' → logprob: -1.9305591583251953
    3. 'temps' → logprob: -2.0555591583251953
    4. 'cut' → logprob: -2.3055591583251953
    5. ' distance' → logprob: -2.8055591583251953
    6. ' temps' → logprob: -2.9305591583251953
    7. ' cutting' → logprob: -3.3055591583251953
    8. '#' → logprob: -3.5555591583251953
    9. ' ' → logprob: -3.5555591583251953
    10. ' cut' → logprob: -4.305559158325195

Token 1505: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16124843060970306
    2. ' =' → logprob: -1.9112484455108643
    3. ' ' → logprob: -7.911248207092285
    4. '_' → logprob: -8.161248207092285
    5. ')' → logprob: -8.911248207092285
    6. ' +=' → logprob: -9.286248207092285
    7. '   ' → logprob: -10.536248207092285
    8. '+' → logprob: -10.661248207092285
    9. '+=' → logprob: -11.286248207092285
    10. 'for' → logprob: -11.411248207092285

Token 1506: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.28826603293418884
    2. ' porter' → logprob: -2.2882659435272217
    3. 'cut' → logprob: -3.4132659435272217
    4. 'porter' → logprob: -3.5382659435272217
    5. ' chaque' → logprob: -4.413266181945801
    6. ' aller' → logprob: -4.663266181945801
    7. ' ram' → logprob: -4.788266181945801
    8. ' cutter' → logprob: -4.788266181945801
    9. ' transporter' → logprob: -5.288266181945801
    10. ' déplacer' → logprob: -5.413266181945801

Token 1507: ' un' (ID: 537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2497347742319107
    2. '=' → logprob: -1.7497347593307495
    3. ')' → logprob: -3.499734878540039
    4. ' +' → logprob: -5.499734878540039
    5. ' )' → logprob: -5.624734878540039
    6. ' *' → logprob: -6.374734878540039
    7. ' ' → logprob: -6.999734878540039
    8. '+' → logprob: -6.999734878540039
    9. ' et' → logprob: -7.124734878540039
    10. '_' → logprob: -7.624734878540039

Token 1508: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.028507769107818604
    2. '_' → logprob: -4.653507709503174
    3. ' ' → logprob: -4.778507709503174
    4. 'ar' → logprob: -4.778507709503174
    5. ')' → logprob: -7.528507709503174
    6. ' arbres' → logprob: -8.153508186340332
    7. '=' → logprob: -9.153508186340332
    8. ' _' → logprob: -9.153508186340332
    9. ' )' → logprob: -9.278508186340332
    10. '```' → logprob: -9.528508186340332

Token 1509: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6078040599822998
    2. ' =' → logprob: -1.8578040599822998
    3. ' *' → logprob: -1.9828040599822998
    4. ' +' → logprob: -3.3578040599823
    5. '=' → logprob: -3.8578040599823
    6. '*' → logprob: -4.107804298400879
    7. ')
' → logprob: -4.482804298400879
    8. '   ' → logprob: -4.482804298400879
    9. '):' → logprob: -4.482804298400879
    10. ' )' → logprob: -4.732804298400879

Token 1510: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5123268961906433
    2. '2' → logprob: -1.137326955795288
    3. ' (' → logprob: -2.887326955795288
    4. '(' → logprob: -4.762326717376709
    5. ' dist' → logprob: -4.762326717376709
    6. ' distance' → logprob: -5.887326717376709
    7. 'distance' → logprob: -6.137326717376709
    8. '(distance' → logprob: -7.137326717376709
    9. '0' → logprob: -7.637326717376709
    10. '1' → logprob: -7.637326717376709

Token 1511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1258035898208618
    2. '2' → logprob: -1.1258035898208618
    3. '0' → logprob: -1.3758035898208618
    4. '(' → logprob: -3.2508034706115723
    5. ' (' → logprob: -3.8758034706115723
    6. ' ' → logprob: -4.125803470611572
    7. 'distance' → logprob: -5.000803470611572
    8. 'A' → logprob: -5.250803470611572
    9. '(distance' → logprob: -6.125803470611572
    10. 'dist' → logprob: -6.500803470611572

Token 1512: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29250672459602356
    2. 'for' → logprob: -2.167506694793701
    3. ' for' → logprob: -3.542506694793701
    4. ':' → logprob: -3.667506694793701
    5. '       ' → logprob: -4.042506694793701
    6. ':
' → logprob: -4.417506694793701
    7. '
' → logprob: -4.917506694793701
    8. 'def' → logprob: -4.917506694793701
    9. ' if' → logprob: -5.292506694793701
    10. 'if' → logprob: -5.417506694793701

Token 1513: ' temps' (ID: 11160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45233598351478577
    2. ' ' → logprob: -1.9523359537124634
    3. '2' → logprob: -2.452336072921753
    4. '0' → logprob: -2.577336072921753
    5. ' (' → logprob: -3.702336072921753
    6. 'distance' → logprob: -3.702336072921753
    7. '(' → logprob: -5.452335834503174
    8. ' distance' → logprob: -6.327335834503174
    9. '(distance' → logprob: -6.577335834503174
    10. 'dist' → logprob: -6.952335834503174

Token 1514: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19533945620059967
    2. '       ' → logprob: -2.5703394412994385
    3. '
' → logprob: -3.6953394412994385
    4. ')' → logprob: -4.445339679718018
    5. '           ' → logprob: -4.820339679718018
    6. '                   ' → logprob: -4.820339679718018
    7. '               ' → logprob: -4.945339679718018
    8. ')
' → logprob: -5.070339679718018
    9. 'def' → logprob: -5.195339679718018
    10. 'for' → logprob: -5.445339679718018

Token 1515: ' déplacement' (ID: 138449)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.838847815990448
    2. 'transport' → logprob: -1.0888478755950928
    3. ' déplacement' → logprob: -1.7138478755950928
    4. 'port' → logprob: -3.5888478755950928
    5. ' transport' → logprob: -4.838847637176514
    6. 'ret' → logprob: -5.213847637176514
    7. 'aller' → logprob: -6.338847637176514
    8. 'porter' → logprob: -6.838847637176514
    9. ' déplacements' → logprob: -7.088847637176514
    10. '```' → logprob: -7.213847637176514

Token 1516: ' aller' (ID: 18383)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33346012234687805
    2. 'for' → logprob: -1.7084600925445557
    3. ' for' → logprob: -3.0834600925445557
    4. 'if' → logprob: -3.7084600925445557
    5. ' if' → logprob: -4.458460330963135
    6. '
' → logprob: -5.708460330963135
    7. ':' → logprob: -5.958460330963135
    8. 'def' → logprob: -5.958460330963135
    9. 'import' → logprob: -6.083460330963135
    10. '       ' → logprob: -6.208460330963135

Token 1517: '-ret' (ID: 104824)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7783187627792358
    2. '   ' → logprob: -1.5283187627792358
    3. ':' → logprob: -2.1533188819885254
    4. ')
' → logprob: -2.2783188819885254
    5. ':
' → logprob: -4.028318881988525
    6. '+' → logprob: -4.278318881988525
    7. '):' → logprob: -4.278318881988525
    8. '       ' → logprob: -4.903318881988525
    9. '```' → logprob: -5.153318881988525
    10. '*' → logprob: -5.278318881988525

Token 1518: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.019531873986124992
    2. 'out' → logprob: -4.519531726837158
    3. 'et' → logprob: -5.019531726837158
    4. 'ou' → logprob: -7.394531726837158
    5. 'ot' → logprob: -7.394531726837158
    6. 'ourt' → logprob: -9.144532203674316
    7. 'tour' → logprob: -9.269532203674316
    8. 'o' → logprob: -9.769532203674316
    9. '_' → logprob: -9.894532203674316
    10. '
' → logprob: -10.394532203674316

Token 1519: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061571184545755386
    2. '
' → logprob: -3.5615711212158203
    3. ' if' → logprob: -4.56157112121582
    4. '    
' → logprob: -5.18657112121582
    5. 'if' → logprob: -5.81157112121582
    6. '       ' → logprob: -6.06157112121582
    7. ')
' → logprob: -6.43657112121582
    8. ')' → logprob: -6.68657112121582
    9. 'def' → logprob: -6.93657112121582
    10. ':
' → logprob: -7.06157112121582

Token 1520: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015572416596114635
    2. ':' → logprob: -5.390572547912598
    3. 'def' → logprob: -5.640572547912598
    4. '       ' → logprob: -6.515572547912598
    5. '
' → logprob: -6.890572547912598
    6. ')' → logprob: -7.265572547912598
    7. ')
' → logprob: -7.265572547912598
    8. ':
' → logprob: -7.390572547912598
    9. '    
' → logprob: -7.890572547912598
    10. '                   ' → logprob: -8.015572547912598

Token 1521: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.839702308177948
    2. '   ' → logprob: -0.839702308177948
    3. ')' → logprob: -2.5897023677825928
    4. ':
' → logprob: -4.589702129364014
    5. '+' → logprob: -4.714702129364014
    6. '):' → logprob: -5.089702129364014
    7. '       ' → logprob: -5.339702129364014
    8. '.' → logprob: -5.339702129364014
    9. '*' → logprob: -5.464702129364014
    10. '
' → logprob: -5.839702129364014

Token 1522: ' temps' (ID: 11160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11486782133579254
    2. ':' → logprob: -3.739867925643921
    3. 'if' → logprob: -4.239867687225342
    4. 'for' → logprob: -4.364867687225342
    5. '
' → logprob: -4.614867687225342
    6. 'def' → logprob: -4.864867687225342
    7. ':
' → logprob: -4.989867687225342
    8. ' if' → logprob: -5.489867687225342
    9. ')' → logprob: -5.614867687225342
    10. '#' → logprob: -5.864867687225342

Token 1523: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17977280914783478
    2. '=' → logprob: -1.9297728538513184
    3. ' +=' → logprob: -4.679772853851318
    4. 'for' → logprob: -5.679772853851318
    5. '   ' → logprob: -6.054772853851318
    6. '_for' → logprob: -6.679772853851318
    7. ')' → logprob: -7.054772853851318
    8. '_' → logprob: -7.929772853851318
    9. ' ' → logprob: -8.17977237701416
    10. 'def' → logprob: -8.30477237701416

Token 1524: ' déplacement' (ID: 138449)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.8671974539756775
    2. 'cou' → logprob: -1.6171975135803223
    3. 'c' → logprob: -1.9921975135803223
    4. 'cut' → logprob: -2.6171975135803223
    5. 'placement' → logprob: -2.8671975135803223
    6. ' déplacement' → logprob: -3.1171975135803223
    7. 'transport' → logprob: -3.6171975135803223
    8. 'port' → logprob: -3.9921975135803223
    9. 'd' → logprob: -5.617197513580322
    10. 'ret' → logprob: -6.492197513580322

Token 1525: ' aller' (ID: 18383)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9913086891174316
    2. ' =' → logprob: -1.1163086891174316
    3. '=' → logprob: -1.4913086891174316
    4. '+' → logprob: -2.7413086891174316
    5. ' aller' → logprob: -5.616308689117432
    6. ' ' → logprob: -6.116308689117432
    7. ' pour' → logprob: -6.866308689117432
    8. ' +=' → logprob: -6.991308689117432
    9. '   ' → logprob: -7.241308689117432
    10. ')' → logprob: -7.491308689117432

Token 1526: '-ret' (ID: 104824)
  Prédit: '-ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ret' → logprob: -0.008523324504494667
    2. '_ret' → logprob: -4.883523464202881
    3. '_' → logprob: -8.133522987365723
    4. ' -' → logprob: -9.133522987365723
    5. '-' → logprob: -9.133522987365723
    6. '-et' → logprob: -9.383522987365723
    7. 'ret' → logprob: -9.633522987365723
    8. '=' → logprob: -9.883522987365723
    9. '-return' → logprob: -9.883522987365723
    10. 'et' → logprob: -10.008522987365723

Token 1527: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -5.7053759519476444e-05
    2. 'et' → logprob: -10.750057220458984
    3. 'out' → logprob: -11.250057220458984
    4. 'tour' → logprob: -11.750057220458984
    5. 'Our' → logprob: -12.375057220458984
    6. 'ours' → logprob: -12.500057220458984
    7. 'ou' → logprob: -13.625057220458984
    8. 'o' → logprob: -13.875057220458984
    9. '```' → logprob: -14.375057220458984
    10. '
' → logprob: -14.500057220458984

Token 1528: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17760315537452698
    2. '=' → logprob: -2.427603244781494
    3. ' +' → logprob: -2.802603244781494
    4. '+' → logprob: -4.427603244781494
    5. ')' → logprob: -7.052603244781494
    6. '   ' → logprob: -8.052602767944336
    7. '#' → logprob: -8.427602767944336
    8. ' ' → logprob: -9.052602767944336
    9. '```' → logprob: -10.302602767944336
    10. '           ' → logprob: -10.427602767944336

Token 1529: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10111977159976959
    2. ' ' → logprob: -2.9761197566986084
    3. 'distance' → logprob: -3.9761197566986084
    4. 'dist' → logprob: -4.2261199951171875
    5. '(' → logprob: -5.6011199951171875
    6. ' dist' → logprob: -5.7261199951171875
    7. ' (' → logprob: -5.8511199951171875
    8. ' distance' → logprob: -6.8511199951171875
    9. '1' → logprob: -7.6011199951171875
    10. '(distance' → logprob: -8.601119995117188

Token 1530: '2' (ID: 17)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3235727548599243
    2. '2' → logprob: -1.6985727548599243
    3. 'distance' → logprob: -2.8235726356506348
    4. ' dist' → logprob: -3.5735726356506348
    5. '1' → logprob: -6.198572635650635
    6. ' ' → logprob: -6.573572635650635
    7. ' distance' → logprob: -7.323572635650635
    8. '(' → logprob: -7.323572635650635
    9. '(dist' → logprob: -7.448572635650635
    10. ' (' → logprob: -8.448573112487793

Token 1531: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14150887727737427
    2. '       ' → logprob: -3.0165088176727295
    3. ':' → logprob: -3.3915088176727295
    4. ')' → logprob: -4.766509056091309
    5. ':
' → logprob: -5.391509056091309
    6. '):' → logprob: -5.391509056091309
    7. '                   ' → logprob: -5.641509056091309
    8. '           ' → logprob: -5.641509056091309
    9. 'for' → logprob: -5.891509056091309
    10. '               ' → logprob: -5.891509056091309

Token 1532: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.2571726441383362
    2. ' distance' → logprob: -1.5071725845336914
    3. 'dist' → logprob: -5.507172584533691
    4. '(distance' → logprob: -7.507172584533691
    5. ' dist' → logprob: -7.757172584533691
    6. ' (' → logprob: -8.757172584533691
    7. '(' → logprob: -11.257172584533691
    8. '(dist' → logprob: -11.757172584533691
    9. ' distancia' → logprob: -12.007172584533691
    10. ' ' → logprob: -12.507172584533691

Token 1533: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45920395851135254
    2. ')' → logprob: -2.9592039585113525
    3. '
' → logprob: -3.2092039585113525
    4. ' +' → logprob: -3.3342039585113525
    5. ')
' → logprob: -3.8342039585113525
    6. 'for' → logprob: -3.8342039585113525
    7. ':' → logprob: -3.9592039585113525
    8. ' if' → logprob: -3.9592039585113525
    9. 'def' → logprob: -3.9592039585113525
    10. '+' → logprob: -3.9592039585113525

Token 1534: ' ' (ID: 220)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7890620231628418
    2. '(' → logprob: -1.6640620231628418
    3. 'us' → logprob: -1.9140620231628418
    4. 'la' → logprob: -2.164062023162842
    5. ' (' → logprob: -3.539062023162842
    6. ' la' → logprob: -4.164062023162842
    7. ' l' → logprob: -4.414062023162842
    8. 'A' → logprob: -4.664062023162842
    9. 'case' → logprob: -5.414062023162842
    10. 'start' → logprob: -5.539062023162842

Token 1535: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2739986777305603
    2. 'us' → logprob: -1.648998737335205
    3. 'la' → logprob: -3.273998737335205
    4. '(' → logprob: -5.148998737335205
    5. 'start' → logprob: -6.898998737335205
    6. 'A' → logprob: -7.648998737335205
    7. '(l' → logprob: -7.773998737335205
    8. '(us' → logprob: -8.523998260498047
    9. ''us' → logprob: -8.523998260498047
    10. ' l' → logprob: -8.648998260498047

Token 1536: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4831753671169281
    2. ']' → logprob: -2.233175277709961
    3. '   ' → logprob: -2.858175277709961
    4. '```' → logprob: -2.983175277709961
    5. ')
' → logprob: -3.608175277709961
    6. '_' → logprob: -3.608175277709961
    7. '[' → logprob: -3.983175277709961
    8. ',' → logprob: -4.358175277709961
    9. 'from' → logprob: -4.483175277709961
    10. '0' → logprob: -4.483175277709961

Token 1537: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009311164729297161
    2. ' ' → logprob: -5.759311199188232
    3. '1' → logprob: -5.884311199188232
    4. 'j' → logprob: -6.509311199188232
    5. ',' → logprob: -7.009311199188232
    6. ',j' → logprob: -7.134311199188232
    7. ' j' → logprob: -9.884310722351074
    8. ')' → logprob: -10.634310722351074
    9. '   ' → logprob: -11.259310722351074
    10. '-j' → logprob: -11.509310722351074

Token 1538: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04812975600361824
    2. 'for' → logprob: -3.9231297969818115
    3. '
' → logprob: -4.798129558563232
    4. ':' → logprob: -5.423129558563232
    5. '       ' → logprob: -5.548129558563232
    6. ' for' → logprob: -5.673129558563232
    7. ':
' → logprob: -5.798129558563232
    8. 'def' → logprob: -6.798129558563232
    9. '    
' → logprob: -7.298129558563232
    10. 'if' → logprob: -7.798129558563232

Token 1539: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0492526292800903
    2. ')' → logprob: -1.6742526292800903
    3. ' +' → logprob: -1.6742526292800903
    4. ')
' → logprob: -2.424252510070801
    5. ' *' → logprob: -3.299252510070801
    6. ' +
' → logprob: -4.049252510070801
    7. '*' → logprob: -4.424252510070801
    8. '#' → logprob: -4.424252510070801
    9. '+' → logprob: -4.549252510070801
    10. '
' → logprob: -4.799252510070801

Token 1540: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09920496493577957
    2. ')' → logprob: -3.9742050170898438
    3. ')
' → logprob: -4.099205017089844
    4. '
' → logprob: -4.849205017089844
    5. ' +' → logprob: -5.099205017089844
    6. '       ' → logprob: -5.099205017089844
    7. '                   ' → logprob: -5.224205017089844
    8. ':' → logprob: -6.099205017089844
    9. '.' → logprob: -6.224205017089844
    10. '    
' → logprob: -6.224205017089844

Token 1541: ' Ici' (ID: 145754)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1456114798784256
    2. ':' → logprob: -2.395611524581909
    3. ')' → logprob: -4.64561128616333
    4. '+' → logprob: -5.14561128616333
    5. ':
' → logprob: -5.14561128616333
    6. '*' → logprob: -5.77061128616333
    7. '       ' → logprob: -6.27061128616333
    8. '
' → logprob: -6.27061128616333
    9. '):' → logprob: -6.52061128616333
    10. ',' → logprob: -6.64561128616333

Token 1542: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8475304841995239
    2. ':' → logprob: -1.597530484199524
    3. ')' → logprob: -3.3475303649902344
    4. '                   ' → logprob: -3.4725303649902344
    5. 'for' → logprob: -3.5975303649902344
    6. '#' → logprob: -3.7225303649902344
    7. '):' → logprob: -3.8475303649902344
    8. ' for' → logprob: -3.8475303649902344
    9. ',' → logprob: -3.9725303649902344
    10. ' =' → logprob: -3.9725303649902344

Token 1543: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3962037563323975
    2. ' =' → logprob: -1.3962037563323975
    3. 'ont' → logprob: -2.3962037563323975
    4. ' continue' → logprob: -2.3962037563323975
    5. '=' → logprob: -2.7712037563323975
    6. ' est' → logprob: -2.8962037563323975
    7. ' n' → logprob: -3.2712037563323975
    8. '_' → logprob: -3.8962037563323975
    9. ''est' → logprob: -4.021203994750977
    10. ''' → logprob: -4.271203994750977

Token 1544: ' ' (ID: 220)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.9277905821800232
    2. '1' → logprob: -2.052790641784668
    3. '2' → logprob: -2.177790641784668
    4. '(' → logprob: -2.302790641784668
    5. '```' → logprob: -2.802790641784668
    6. '(distance' → logprob: -2.802790641784668
    7. 'dist' → logprob: -3.552790641784668
    8. '3' → logprob: -3.802790641784668
    9. ' (' → logprob: -4.052790641784668
    10. '+' → logprob: -4.302790641784668

Token 1545: '3' (ID: 18)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.33031249046325684
    2. 'dist' → logprob: -2.330312490463257
    3. '1' → logprob: -2.455312490463257
    4. '(distance' → logprob: -3.705312490463257
    5. '(' → logprob: -3.955312490463257
    6. '2' → logprob: -4.205312728881836
    7. '3' → logprob: -4.705312728881836
    8. '0' → logprob: -5.455312728881836
    9. '+' → logprob: -5.455312728881836
    10. 'W' → logprob: -5.705312728881836

Token 1546: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.021941065788269
    2. ':' → logprob: -1.271941065788269
    3. ':
' → logprob: -2.0219411849975586
    4. ')
' → logprob: -2.8969411849975586
    5. ')' → logprob: -3.0219411849975586
    6. '):' → logprob: -4.021941184997559
    7. 'def' → logprob: -4.771941184997559
    8. ',' → logprob: -5.021941184997559
    9. '
' → logprob: -5.146941184997559
    10. 'for' → logprob: -5.146941184997559

Token 1547: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5975784063339233
    2. ')
' → logprob: -2.222578525543213
    3. ':' → logprob: -2.472578525543213
    4. '):' → logprob: -2.597578525543213
    5. '   ' → logprob: -3.097578525543213
    6. '
' → logprob: -4.097578525543213
    7. '*' → logprob: -4.472578525543213
    8. ':
' → logprob: -4.597578525543213
    9. '):
' → logprob: -4.722578525543213
    10. '```' → logprob: -4.722578525543213

Token 1548: ' distance' (ID: 9324)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.6557638049125671
    2. ')' → logprob: -1.405763864517212
    3. ' temps' → logprob: -2.280763864517212
    4. 'distance' → logprob: -2.780763864517212
    5. '*' → logprob: -4.155763626098633
    6. '   ' → logprob: -5.155763626098633
    7. ' *' → logprob: -5.405763626098633
    8. '```' → logprob: -5.405763626098633
    9. ' )' → logprob: -5.530763626098633
    10. '2' → logprob: -5.655763626098633

Token 1549: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9518029093742371
    2. ')' → logprob: -1.9518029689788818
    3. '_from' → logprob: -1.9518029689788818
    4. '_ar' → logprob: -2.451802968978882
    5. '=' → logprob: -2.826802968978882
    6. '_to' → logprob: -3.201802968978882
    7. '[' → logprob: -4.076802730560303
    8. '+' → logprob: -4.076802730560303
    9. ' +' → logprob: -4.326802730560303
    10. '_' → logprob: -4.451802730560303

Token 1550: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14407333731651306
    2. '+' → logprob: -3.019073247909546
    3. ' =' → logprob: -3.519073247909546
    4. '*' → logprob: -4.269073486328125
    5. 'ont' → logprob: -4.519073486328125
    6. '==' → logprob: -5.269073486328125
    7. '+=' → logprob: -5.769073486328125
    8. '**' → logprob: -6.269073486328125
    9. '_' → logprob: -6.394073486328125
    10. ''est' → logprob: -6.519073486328125

Token 1551: ' ' (ID: 220)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.140976905822754
    2. ' ' → logprob: -1.390976905822754
    3. '3' → logprob: -1.890976905822754
    4. ' (' → logprob: -2.390976905822754
    5. ' dist' → logprob: -3.015976905822754
    6. ' distance' → logprob: -3.140976905822754
    7. '(distance' → logprob: -3.890976905822754
    8. 'dist' → logprob: -3.890976905822754
    9. '2' → logprob: -4.265976905822754
    10. '1' → logprob: -4.390976905822754

Token 1552: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9943980574607849
    2. 'distance' → logprob: -1.6193981170654297
    3. 'dist' → logprob: -1.9943981170654297
    4. '(distance' → logprob: -2.3693981170654297
    5. '1' → logprob: -2.9943981170654297
    6. '(dist' → logprob: -2.9943981170654297
    7. '2' → logprob: -3.2443981170654297
    8. '(' → logprob: -3.9943981170654297
    9. 'int' → logprob: -4.86939811706543
    10. ' ' → logprob: -5.24439811706543

Token 1553: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7191709280014038
    2. '   ' → logprob: -1.7191709280014038
    3. ':' → logprob: -2.2191710472106934
    4. ')
' → logprob: -2.4691710472106934
    5. '+' → logprob: -2.8441710472106934
    6. '
' → logprob: -2.9691710472106934
    7. ':
' → logprob: -3.3441710472106934
    8. ' ' → logprob: -3.5941710472106934
    9. ' +' → logprob: -3.7191710472106934
    10. '=' → logprob: -3.7191710472106934

Token 1554: '5' (ID: 20)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21558324992656708
    2. '0' → logprob: -2.965583324432373
    3. ')
' → logprob: -3.465583324432373
    4. ',' → logprob: -3.715583324432373
    5. '<|end|>' → logprob: -4.340583324432373
    6. ':' → logprob: -4.965583324432373
    7. '   ' → logprob: -4.965583324432373
    8. ',
' → logprob: -4.965583324432373
    9. '#' → logprob: -5.090583324432373
    10. '3' → logprob: -5.215583324432373

Token 1555: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7632855772972107
    2. ':' → logprob: -1.7632856369018555
    3. '   ' → logprob: -1.8882856369018555
    4. ')
' → logprob: -2.3882856369018555
    5. '```' → logprob: -4.2632856369018555
    6. '*' → logprob: -4.3882856369018555
    7. '):' → logprob: -4.5132856369018555
    8. '
' → logprob: -4.6382856369018555
    9. ':
' → logprob: -4.8882856369018555
    10. 'def' → logprob: -5.0132856369018555

Token 1556: ' Non' (ID: 13763)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9475740790367126
    2. ')' → logprob: -1.6975741386413574
    3. ')
' → logprob: -2.9475741386413574
    4. '```' → logprob: -3.0725741386413574
    5. '\n' → logprob: -3.1975741386413574
    6. ':
' → logprob: -3.1975741386413574
    7. '0' → logprob: -3.3225741386413574
    8. '*' → logprob: -3.4475741386413574
    9. ',' → logprob: -3.9475741386413574
    10. '   ' → logprob: -4.072574138641357

Token 1557: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4948869049549103
    2. ')
' → logprob: -2.494886875152588
    3. ':' → logprob: -2.869886875152588
    4. '*' → logprob: -3.494886875152588
    5. '```' → logprob: -3.744886875152588
    6. '#' → logprob: -3.869886875152588
    7. '   ' → logprob: -3.994886875152588
    8. '(' → logprob: -4.119886875152588
    9. 'def' → logprob: -4.244886875152588
    10. '=' → logprob: -4.494886875152588

Token 1558: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8143128752708435
    2. '.' → logprob: -2.0643129348754883
    3. ':' → logprob: -2.4393129348754883
    4. '#' → logprob: -2.6893129348754883
    5. ',' → logprob: -2.9393129348754883
    6. '*' → logprob: -2.9393129348754883
    7. '   ' → logprob: -3.8143129348754883
    8. '0' → logprob: -3.8143129348754883
    9. '(' → logprob: -4.189312934875488
    10. '=' → logprob: -4.689312934875488

Token 1559: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4076971709728241
    2. ')' → logprob: -2.4076972007751465
    3. ':' → logprob: -3.5326972007751465
    4. '0' → logprob: -3.6576972007751465
    5. '                   ' → logprob: -3.9076972007751465
    6. ' ' → logprob: -4.2826972007751465
    7. '1' → logprob: -4.5326972007751465
    8. '.' → logprob: -4.6576972007751465
    9. ' 
' → logprob: -4.6576972007751465
    10. '```' → logprob: -4.7826972007751465

Token 1560: ' Par' (ID: 3371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.218142032623291
    2. ')' → logprob: -1.843142032623291
    3. ':' → logprob: -2.093142032623291
    4. '*' → logprob: -2.968142032623291
    5. ':
' → logprob: -2.968142032623291
    6. '#' → logprob: -3.218142032623291
    7. ')
' → logprob: -3.343142032623291
    8. '+' → logprob: -3.843142032623291
    9. 'if' → logprob: -4.093142032623291
    10. ' if' → logprob: -4.218142032623291

Token 1561: ' exemple' (ID: 26320)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -0.33356037735939026
    2. '#' → logprob: -2.2085604667663574
    3. 'ce' → logprob: -3.2085604667663574
    4. 'don' → logprob: -3.5835604667663574
    5. 'def' → logprob: -3.8335604667663574
    6. 'contre' → logprob: -4.458560466766357
    7. ' conséquent' → logprob: -4.458560466766357
    8. '
' → logprob: -5.083560466766357
    9. 'd' → logprob: -5.083560466766357
    10. 'suite' → logprob: -5.708560466766357

Token 1562: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.565564751625061
    2. '   ' → logprob: -1.815564751625061
    3. ' ' → logprob: -2.3155646324157715
    4. '#' → logprob: -2.3155646324157715
    5. ' 
' → logprob: -2.4405646324157715
    6. ':' → logprob: -2.5655646324157715
    7. '
' → logprob: -3.6905646324157715
    8. 'distance' → logprob: -3.8155646324157715
    9. '.' → logprob: -4.1905646324157715
    10. ',' → logprob: -4.1905646324157715

Token 1563: ' Dist' (ID: 35375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3809890747070312
    2. '#' → logprob: -2.1309890747070312
    3. ' ' → logprob: -2.1309890747070312
    4. ' 
' → logprob: -2.5059890747070312
    5. '   ' → logprob: -2.6309890747070312
    6. '```' → logprob: -3.0059890747070312
    7. 'distance' → logprob: -3.0059890747070312
    8. ' )' → logprob: -3.3809890747070312
    9. '...' → logprob: -3.5059890747070312
    10. '(' → logprob: -3.6309890747070312

Token 1564: ' annoncer' (ID: 192955)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.09118524938821793
    2. '[' → logprob: -2.8411853313446045
    3. 'ance' → logprob: -3.8411853313446045
    4. 'from' → logprob: -5.466185092926025
    5. '[(' → logprob: -7.466185092926025
    6. '[
' → logprob: -7.841185092926025
    7. '(' → logprob: -7.841185092926025
    8. 'From' → logprob: -7.841185092926025
    9. '[i' → logprob: -8.091185569763184
    10. '=' → logprob: -8.466185569763184

Token 1565: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4246369004249573
    2. 'ance' → logprob: -1.7996368408203125
    3. 'ion' → logprob: -2.5496368408203125
    4. ' =' → logprob: -3.7996368408203125
    5. ')' → logprob: -3.7996368408203125
    6. '[' → logprob: -4.2996368408203125
    7. 'e' → logprob: -4.5496368408203125
    8. '(' → logprob: -4.7996368408203125
    9. 'é' → logprob: -6.0496368408203125
    10. ''' → logprob: -6.0496368408203125

Token 1566: ' "' (ID: 392)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5931857824325562
    2. '1' → logprob: -2.2181859016418457
    3. ' (' → logprob: -2.3431859016418457
    4. '0' → logprob: -2.4681859016418457
    5. ' dist' → logprob: -2.8431859016418457
    6. ' =' → logprob: -4.093185901641846
    7. 'dist' → logprob: -4.218185901641846
    8. '(' → logprob: -4.468185901641846
    9. '3' → logprob: -4.468185901641846
    10. '2' → logprob: -4.968185901641846

Token 1567: 'aller' (ID: 11605)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2261782884597778
    2. '3' → logprob: -1.6011782884597778
    3. '"' → logprob: -2.2261781692504883
    4. '0' → logprob: -2.2261781692504883
    5. 'distance' → logprob: -2.6011781692504883
    6. '2' → logprob: -2.7261781692504883
    7. ' "' → logprob: -3.4761781692504883
    8. ' ' → logprob: -3.7261781692504883
    9. '=' → logprob: -4.101178169250488
    10. ' distance' → logprob: -4.226178169250488

Token 1568: ' vers' (ID: 3640)
  Prédit: '_ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ret' → logprob: -1.512911319732666
    2. '_' → logprob: -1.637911319732666
    3. ' +' → logprob: -2.012911319732666
    4. '"' → logprob: -2.012911319732666
    5. ' _' → logprob: -2.262911319732666
    6. '+' → logprob: -2.762911319732666
    7. '_return' → logprob: -3.262911319732666
    8. '_from' → logprob: -3.762911319732666
    9. ' -' → logprob: -4.387911319732666
    10. '_re' → logprob: -4.512911319732666

Token 1569: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5852190256118774
    2. ' (' → logprob: -1.4602190256118774
    3. 'l' → logprob: -2.335218906402588
    4. 'ar' → logprob: -3.460218906402588
    5. '"' → logprob: -3.960218906402588
    6. 'la' → logprob: -4.210218906402588
    7. '1' → logprob: -4.210218906402588
    8. 'le' → logprob: -4.835218906402588
    9. ' l' → logprob: -5.585218906402588
    10. ')' → logprob: -5.960218906402588

Token 1570: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39980000257492065
    2. '0' → logprob: -1.5248000621795654
    3. ',' → logprob: -2.7748000621795654
    4. 'i' → logprob: -3.8998000621795654
    5. ')' → logprob: -4.024799823760986
    6. '(' → logprob: -5.024799823760986
    7. '),' → logprob: -6.024799823760986
    8. ' ' → logprob: -8.024800300598145
    9. ',i' → logprob: -8.024800300598145
    10. ' (' → logprob: -8.149800300598145

Token 1571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.220573363360018e-05
    2. '3' → logprob: -9.875082015991211
    3. ',
' → logprob: -11.375082015991211
    4. ' ,' → logprob: -11.375082015991211
    5. '   ' → logprob: -12.250082015991211
    6. ')' → logprob: -13.250082015991211
    7. '
' → logprob: -15.000082015991211
    8. ',j' → logprob: -15.125082015991211
    9. '  ' → logprob: -16.00008201599121
    10. ' ' → logprob: -16.12508201599121

Token 1572: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.455048449221067e-05
    2. ' ' → logprob: -10.500054359436035
    3. '2' → logprob: -10.750054359436035
    4. ',' → logprob: -13.375054359436035
    5. '   ' → logprob: -13.625054359436035
    6. '0' → logprob: -13.875054359436035
    7. '1' → logprob: -14.000054359436035
    8. ')' → logprob: -14.250054359436035
    9. 'j' → logprob: -16.12505531311035
    10. '  ' → logprob: -16.25005531311035

Token 1573: ')"' (ID: 22445)
  Prédit: ')"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.2587423622608185
    2. ')' → logprob: -1.508742332458496
    3. ')"
' → logprob: -6.258742332458496
    4. ')",' → logprob: -6.383742332458496
    5. '")' → logprob: -7.258742332458496
    6. '),' → logprob: -7.383742332458496
    7. ')")' → logprob: -7.883742332458496
    8. '"' → logprob: -8.508742332458496
    9. ')
' → logprob: -8.758742332458496
    10. '):' → logprob: -8.883742332458496

Token 1574: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4059184789657593
    2. ' =' → logprob: -2.405918598175049
    3. '=' → logprob: -3.030918598175049
    4. ':' → logprob: -3.405918598175049
    5. ',' → logprob: -3.530918598175049
    6. '```' → logprob: -3.780918598175049
    7. ')
' → logprob: -4.280918598175049
    8. '   ' → logprob: -4.530918598175049
    9. ' +' → logprob: -4.780918598175049
    10. '"' → logprob: -4.780918598175049

Token 1575: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6090646386146545
    2. ' ' → logprob: -1.4840645790100098
    3. '2' → logprob: -1.7340645790100098
    4. '1' → logprob: -2.9840645790100098
    5. '0' → logprob: -6.85906457901001
    6. '4' → logprob: -7.85906457901001
    7. ' (' → logprob: -8.359065055847168
    8. '(' → logprob: -8.484065055847168
    9. '```' → logprob: -9.796565055847168
    10. '6' → logprob: -9.859065055847168

Token 1576: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1550467312335968
    2. '2' → logprob: -2.1550467014312744
    3. '1' → logprob: -4.0300469398498535
    4. ' ' → logprob: -5.9050469398498535
    5. '0' → logprob: -6.0300469398498535
    6. '(' → logprob: -6.6550469398498535
    7. 'dist' → logprob: -6.9050469398498535
    8. '...' → logprob: -7.4050469398498535
    9. 'distance' → logprob: -7.7800469398498535
    10. '```' → logprob: -8.030046463012695

Token 1577: ' pas' (ID: 2173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.831653892993927
    2. ')
' → logprob: -1.5816538333892822
    3. ')' → logprob: -1.7066538333892822
    4. ':' → logprob: -2.7066538333892822
    5. ':
' → logprob: -3.5816538333892822
    6. ',' → logprob: -4.081654071807861
    7. '):' → logprob: -4.331654071807861
    8. '       ' → logprob: -4.831654071807861
    9. '
' → logprob: -5.456654071807861
    10. '.' → logprob: -5.581654071807861

Token 1578: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.903882622718811
    2. ':' → logprob: -1.528882622718811
    3. '   ' → logprob: -2.0288825035095215
    4. ')
' → logprob: -2.6538825035095215
    5. '+' → logprob: -3.2788825035095215
    6. '```' → logprob: -3.6538825035095215
    7. ',' → logprob: -3.7788825035095215
    8. '):' → logprob: -4.1538825035095215
    9. ':
' → logprob: -4.2788825035095215
    10. '*' → logprob: -4.5288825035095215

Token 1579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8573802709579468
    2. ')' → logprob: -1.1073802709579468
    3. '#' → logprob: -2.3573803901672363
    4. ')
' → logprob: -3.3573803901672363
    5. ',' → logprob: -3.4823803901672363
    6. '
' → logprob: -3.7323803901672363
    7. ' +' → logprob: -4.232380390167236
    8. ',
' → logprob: -5.232380390167236
    9. ' #' → logprob: -5.607380390167236
    10. '.' → logprob: -5.607380390167236

Token 1580: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9080269932746887
    2. ')' → logprob: -1.408026933670044
    3. '   ' → logprob: -1.783026933670044
    4. '
' → logprob: -3.533026933670044
    5. ',' → logprob: -3.658026933670044
    6. ')
' → logprob: -3.783026933670044
    7. '.' → logprob: -3.908026933670044
    8. '...' → logprob: -4.408027172088623
    9. ' #' → logprob: -5.158027172088623
    10. ',
' → logprob: -5.158027172088623

Token 1581: ' Aller' (ID: 179307)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1960190534591675
    2. ')' → logprob: -1.5710190534591675
    3. '#' → logprob: -2.446019172668457
    4. ' +' → logprob: -3.196019172668457
    5. 'for' → logprob: -3.196019172668457
    6. '+' → logprob: -3.321019172668457
    7. ',' → logprob: -3.696019172668457
    8. ' for' → logprob: -3.821019172668457
    9. '*' → logprob: -3.946019172668457
    10. '                   ' → logprob: -4.071019172668457

Token 1582: '-ret' (ID: 104824)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7875723838806152
    2. '+' → logprob: -1.2875723838806152
    3. ' vers' → logprob: -2.0375723838806152
    4. 'vers' → logprob: -2.0375723838806152
    5. '=' → logprob: -6.287572383880615
    6. '   ' → logprob: -6.537572383880615
    7. ' =' → logprob: -6.787572383880615
    8. ' plus' → logprob: -7.662572383880615
    9. ' ' → logprob: -7.787572383880615
    10. ',' → logprob: -7.787572383880615

Token 1583: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.00018983196059707552
    2. 'out' → logprob: -9.250189781188965
    3. 'ours' → logprob: -10.750189781188965
    4. 'ou' → logprob: -10.750189781188965
    5. 'ourt' → logprob: -10.875189781188965
    6. '```' → logprob: -11.750189781188965
    7. 'Our' → logprob: -11.875189781188965
    8. 'tour' → logprob: -12.500189781188965
    9. 'OUR' → logprob: -12.875189781188965
    10. 'o' → logprob: -13.375189781188965

Token 1584: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0768405944108963
    2. '=' → logprob: -2.82684063911438
    3. ')' → logprob: -5.326840400695801
    4. '+' → logprob: -5.826840400695801
    5. ' +' → logprob: -6.326840400695801
    6. ' vers' → logprob: -7.076840400695801
    7. '```' → logprob: -7.451840400695801
    8. '#' → logprob: -7.576840400695801
    9. '   ' → logprob: -7.701840400695801
    10. ' ' → logprob: -7.826840400695801

Token 1585: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5253021717071533
    2. '4' → logprob: -0.9003021717071533
    3. '5' → logprob: -6.650301933288574
    4. '2' → logprob: -7.525301933288574
    5. '3' → logprob: -8.525301933288574
    6. '(' → logprob: -9.900301933288574
    7. ' (' → logprob: -10.025301933288574
    8. '6' → logprob: -10.150301933288574
    9. '`' → logprob: -12.525301933288574
    10. '"' → logprob: -13.400301933288574

Token 1586: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.033486515283584595
    2. '2' → logprob: -4.158486366271973
    3. ' ' → logprob: -4.408486366271973
    4. '5' → logprob: -5.908486366271973
    5. '(' → logprob: -6.533486366271973
    6. '3' → logprob: -7.283486366271973
    7. ' (' → logprob: -8.533486366271973
    8. 'dist' → logprob: -10.658486366271973
    9. '(dist' → logprob: -11.283486366271973
    10. ' dist' → logprob: -11.533486366271973

Token 1587: ' pas' (ID: 2173)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.714555025100708
    2. ')
' → logprob: -1.339555025100708
    3. '   ' → logprob: -2.339555025100708
    4. ':' → logprob: -2.714555025100708
    5. ':
' → logprob: -4.589554786682129
    6. '.' → logprob: -4.714554786682129
    7. '```' → logprob: -4.714554786682129
    8. '):' → logprob: -4.839554786682129
    9. '*' → logprob: -4.964554786682129
    10. ',' → logprob: -5.089554786682129

Token 1588: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28344303369522095
    2. ':' → logprob: -1.9084429740905762
    3. ':
' → logprob: -2.908442974090576
    4. ')' → logprob: -4.908442974090576
    5. ')
' → logprob: -4.908442974090576
    6. '):' → logprob: -5.283442974090576
    7. '    
' → logprob: -5.283442974090576
    8. '
' → logprob: -5.783442974090576
    9. '       ' → logprob: -5.783442974090576
    10. '.' → logprob: -6.783442974090576

Token 1589: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04863744229078293
    2. ' ' → logprob: -3.0486373901367188
    3. '2' → logprob: -11.548637390136719
    4. '0' → logprob: -11.548637390136719
    5. '
' → logprob: -11.673637390136719
    6. ' (' → logprob: -12.548637390136719
    7. '   ' → logprob: -12.673637390136719
    8. '```' → logprob: -12.673637390136719
    9. ' +' → logprob: -13.048637390136719
    10. 'import' → logprob: -13.423637390136719

Token 1590: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016075820894911885
    2. ' ' → logprob: -6.626607418060303
    3. '0' → logprob: -8.751607894897461
    4. '2' → logprob: -9.501607894897461
    5. '```' → logprob: -11.376607894897461
    6. 'import' → logprob: -12.251607894897461
    7. 'dist' → logprob: -12.251607894897461
    8. '
' → logprob: -12.251607894897461
    9. 'distance' → logprob: -12.376607894897461
    10. '#' → logprob: -12.626607894897461

Token 1591: ' min' (ID: 1349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5936877727508545
    2. ')
' → logprob: -2.3436877727508545
    3. '   ' → logprob: -2.5936877727508545
    4. '*' → logprob: -2.9686877727508545
    5. ':' → logprob: -2.9686877727508545
    6. '+' → logprob: -3.3436877727508545
    7. '```' → logprob: -3.4686877727508545
    8. '0' → logprob: -4.218688011169434
    9. ']' → logprob: -5.093688011169434
    10. '1' → logprob: -5.218688011169434

Token 1592: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2771376371383667
    2. ')
' → logprob: -2.1521377563476562
    3. '+' → logprob: -3.5271377563476562
    4. '   ' → logprob: -3.7771377563476562
    5. '*' → logprob: -4.027137756347656
    6. '```' → logprob: -4.027137756347656
    7. ']' → logprob: -5.277137756347656
    8. ' +' → logprob: -5.402137756347656
    9. '+
' → logprob: -5.527137756347656
    10. ' *' → logprob: -5.902137756347656

Token 1593: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -3.2855416066013277e-05
    2. 'cut' → logprob: -11.625032424926758
    3. '```' → logprob: -12.125032424926758
    4. '
' → logprob: -12.375032424926758
    5. 'c' → logprob: -12.500032424926758
    6. ' couper' → logprob: -13.750032424926758
    7. 'co' → logprob: -14.000032424926758
    8. 'Cou' → logprob: -14.125032424926758
    9. 'l' → logprob: -14.125032424926758
    10. 'part' → logprob: -14.250032424926758

Token 1594: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8497161865234375
    2. ')
' → logprob: -1.5997161865234375
    3. '+' → logprob: -2.4747161865234375
    4. '*' → logprob: -2.7247161865234375
    5. '   ' → logprob: -3.2247161865234375
    6. '+
' → logprob: -3.4747161865234375
    7. '```' → logprob: -3.9747161865234375
    8. '#' → logprob: -3.9747161865234375
    9. ' +' → logprob: -4.0997161865234375
    10. ':' → logprob: -4.3497161865234375

Token 1595: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3934159278869629
    2. ' ' → logprob: -1.143415927886963
    3. '5' → logprob: -5.143415927886963
    4. '4' → logprob: -7.893415927886963
    5. '2' → logprob: -8.643415451049805
    6. '6' → logprob: -10.518415451049805
    7. ')' → logprob: -10.893415451049805
    8. '3' → logprob: -10.893415451049805
    9. '"' → logprob: -11.393415451049805
    10. ' ' → logprob: -11.893415451049805

Token 1596: '5' (ID: 20)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011493625119328499
    2. '5' → logprob: -4.761493682861328
    3. ' ' → logprob: -5.886493682861328
    4. '2' → logprob: -9.761493682861328
    5. '6' → logprob: -11.136493682861328
    6. '4' → logprob: -11.136493682861328
    7. '0' → logprob: -12.761493682861328
    8. '```' → logprob: -12.761493682861328
    9. '`' → logprob: -13.761493682861328
    10. '``' → logprob: -14.261493682861328

Token 1597: ' ?
' (ID: 19740)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7532424926757812
    2. ')' → logprob: -1.2532424926757812
    3. ':' → logprob: -2.7532424926757812
    4. ')
' → logprob: -3.2532424926757812
    5. '*' → logprob: -3.8782424926757812
    6. '+' → logprob: -3.8782424926757812
    7. ',' → logprob: -4.503242492675781
    8. ' +' → logprob: -4.753242492675781
    9. ' *' → logprob: -4.878242492675781
    10. '       ' → logprob: -4.878242492675781

Token 1598: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8248032331466675
    2. ')' → logprob: -1.5748032331466675
    3. ')
' → logprob: -1.9498032331466675
    4. '   ' → logprob: -3.449803352355957
    5. '*' → logprob: -3.574803352355957
    6. '+
' → logprob: -3.824803352355957
    7. '```' → logprob: -4.074803352355957
    8. ' +' → logprob: -4.449803352355957
    9. '#
' → logprob: -4.449803352355957
    10. '+' → logprob: -4.699803352355957

Token 1599: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1871546357870102
    2. ')' → logprob: -2.312154531478882
    3. '       ' → logprob: -3.937154531478882
    4. ')
' → logprob: -4.187154769897461
    5. '#' (adapté à ' #') → logprob: -4.312154769897461
    6. '+' → logprob: -6.187154769897461
    7. ' +' → logprob: -6.312154769897461
    8. '                   ' → logprob: -6.562154769897461
    9. '
' → logprob: -6.812154769897461
    10. ' )' → logprob: -7.062154769897461

Token 1600: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49749112129211426
    2. ')' → logprob: -1.6224911212921143
    3. ')
' → logprob: -3.3724911212921143
    4. ':' → logprob: -3.9974911212921143
    5. '       ' → logprob: -4.122490882873535
    6. '+' → logprob: -4.122490882873535
    7. 'for' → logprob: -4.497490882873535
    8. ' +' → logprob: -4.497490882873535
    9. ':
' → logprob: -4.622490882873535
    10. '*' → logprob: -4.622490882873535

Token 1601: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3328595161437988
    2. ':' → logprob: -1.8328595161437988
    3. '*' → logprob: -2.207859516143799
    4. ' ' → logprob: -2.207859516143799
    5. '\n' → logprob: -2.332859516143799
    6. '```' → logprob: -4.082859516143799
    7. '\' → logprob: -4.207859516143799
    8. '+' → logprob: -4.207859516143799
    9. ' *' → logprob: -4.207859516143799
    10. '#' → logprob: -4.207859516143799

Token 1602: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.26201000809669495
    2. 'le' → logprob: -2.762010097503662
    3. 'leur' → logprob: -2.887010097503662
    4. ' l' → logprob: -3.512010097503662
    5. 'la' → logprob: -3.637010097503662
    6. '#' → logprob: -4.262010097503662
    7. 'the' → logprob: -4.512010097503662
    8. '
' → logprob: -4.887010097503662
    9. ' la' → logprob: -5.137010097503662
    10. ' le' → logprob: -5.637010097503662

Token 1603: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0655714273452759
    2. ''' → logprob: -1.4405714273452759
    3. '...' → logprob: -1.9405714273452759
    4. '_' → logprob: -2.6905713081359863
    5. '
' → logprob: -4.065571308135986
    6. '`' → logprob: -4.065571308135986
    7. '[' → logprob: -4.065571308135986
    8. ' code' → logprob: -4.190571308135986
    9. '```' → logprob: -4.315571308135986
    10. '...
' → logprob: -4.690571308135986

Token 1604: 'emple' (ID: 55259)
  Prédit: 'cerpt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cerpt' → logprob: -0.5953063368797302
    2. 'planation' → logprob: -0.9703063368797302
    3. ')' → logprob: -4.095306396484375
    4. 'p' → logprob: -4.220306396484375
    5. '_' → logprob: -4.470306396484375
    6. '[' → logprob: -4.845306396484375
    7. ':' → logprob: -5.970306396484375
    8. 'ample' → logprob: -6.220306396484375
    9. '=' → logprob: -6.345306396484375
    10. '#' → logprob: -6.595306396484375

Token 1605: ' ça' (ID: 13590)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5363806486129761
    2. '   ' → logprob: -1.661380648612976
    3. ')' → logprob: -2.6613807678222656
    4. '):' → logprob: -3.0363807678222656
    5. '[' → logprob: -3.6613807678222656
    6. ':
' → logprob: -3.9113807678222656
    7. ')
' → logprob: -4.286380767822266
    8. ',' → logprob: -5.036380767822266
    9. '(' → logprob: -5.036380767822266
    10. '[
' → logprob: -5.161380767822266

Token 1606: ' donne' (ID: 30004)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.374447762966156
    2. ' =' → logprob: -1.7494478225708008
    3. ' ==' → logprob: -3.499447822570801
    4. ':' → logprob: -3.999447822570801
    5. '#' → logprob: -4.249447822570801
    6. ')' → logprob: -4.374447822570801
    7. '==' → logprob: -4.624447822570801
    8. '*' → logprob: -4.874447822570801
    9. '+' → logprob: -4.874447822570801
    10. ' continue' → logprob: -5.499447822570801

Token 1607: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6969913840293884
    2. '6' → logprob: -2.196991443634033
    3. '...' → logprob: -2.321991443634033
    4. ' ' → logprob: -2.571991443634033
    5. '2' → logprob: -3.321991443634033
    6. '5' → logprob: -3.446991443634033
    7. '1' → logprob: -3.696991443634033
    8. '*' → logprob: -4.571991443634033
    9. ' =' → logprob: -4.821991443634033
    10. ':' → logprob: -4.821991443634033

Token 1608: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.11368875950574875
    2. '4' → logprob: -2.9886887073516846
    3. '5' → logprob: -3.9886887073516846
    4. '7' → logprob: -3.9886887073516846
    5. '1' → logprob: -5.238688945770264
    6. '3' → logprob: -5.363688945770264
    7. '0' → logprob: -5.488688945770264
    8. '```' → logprob: -6.113688945770264
    9. '2' → logprob: -7.363688945770264
    10. '10' → logprob: -7.613688945770264

Token 1609: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.935493528842926
    2. ':' → logprob: -2.3104934692382812
    3. ':
' → logprob: -2.3104934692382812
    4. ')' → logprob: -2.5604934692382812
    5. ')
' → logprob: -2.5604934692382812
    6. 'def' → logprob: -2.9354934692382812
    7. '#' → logprob: -3.0604934692382812
    8. '
' → logprob: -3.3104934692382812
    9. 'for' → logprob: -4.310493469238281
    10. '```' → logprob: -4.685493469238281

Token 1610: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48337051272392273
    2. '(' → logprob: -2.108370542526245
    3. ' chaque' → logprob: -2.483370542526245
    4. ' (' → logprob: -2.733370542526245
    5. ' couper' → logprob: -3.483370542526245
    6. ' arbres' → logprob: -4.108370304107666
    7. '(n' → logprob: -4.358370304107666
    8. ' cutting' → logprob: -4.608370304107666
    9. ' )' → logprob: -5.108370304107666
    10. ' ' → logprob: -5.608370304107666

Token 1611: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017962975427508354
    2. '(i' → logprob: -5.51796293258667
    3. 'temps' → logprob: -6.14296293258667
    4. '(n' → logprob: -6.26796293258667
    5. 'distance' → logprob: -6.89296293258667
    6. 'cut' → logprob: -6.89296293258667
    7. 'l' → logprob: -7.01796293258667
    8. '1' → logprob: -7.01796293258667
    9. 'cou' → logprob: -7.01796293258667
    10. 'ar' → logprob: -7.39296293258667

Token 1612: ' arbres' (ID: 127011)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41825175285339355
    2. ':' → logprob: -2.1682517528533936
    3. ')
' → logprob: -2.5432517528533936
    4. ':
' → logprob: -2.6682517528533936
    5. ')' → logprob: -3.7932517528533936
    6. '
' → logprob: -4.293251991271973
    7. '):' → logprob: -4.793251991271973
    8. 'def' → logprob: -5.168251991271973
    9. '```' → logprob: -5.418251991271973
    10. '):
' → logprob: -5.793251991271973

Token 1613: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8090182542800903
    2. '   ' → logprob: -1.1840182542800903
    3. ':
' → logprob: -1.9340182542800903
    4. '\' → logprob: -4.184018135070801
    5. ')' → logprob: -4.184018135070801
    6. ')
' → logprob: -4.309018135070801
    7. '\n' → logprob: -4.309018135070801
    8. '):' → logprob: -4.434018135070801
    9. '
' → logprob: -5.059018135070801
    10. '):
' → logprob: -5.934018135070801

Token 1614: ' donc' (ID: 14206)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14688655734062195
    2. ':' → logprob: -2.3968865871429443
    3. '       ' → logprob: -4.521886348724365
    4. ':
' → logprob: -4.646886348724365
    5. ')' → logprob: -5.271886348724365
    6. '):' → logprob: -5.271886348724365
    7. ',' → logprob: -6.146886348724365
    8. '\n' → logprob: -6.271886348724365
    9. '
' → logprob: -6.396886348724365
    10. '.' → logprob: -7.021886348724365

Token 1615: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4128398895263672
    2. 'for' → logprob: -1.7878398895263672
    3. '   ' → logprob: -1.9128398895263672
    4. '#' → logprob: -2.162839889526367
    5. '(' → logprob: -3.037839889526367
    6. 'n' → logprob: -3.412839889526367
    7. 'dist' → logprob: -3.662839889526367
    8. '(
' → logprob: -3.787839889526367
    9. ' (' → logprob: -4.037839889526367
    10. ' for' → logprob: -4.037839889526367

Token 1616: '3' (ID: 18)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0496653318405151
    2. 'temps' → logprob: -1.2996653318405151
    3. ')' → logprob: -1.9246653318405151
    4. 'distance' → logprob: -2.1746654510498047
    5. '2' → logprob: -3.4246654510498047
    6. 'times' → logprob: -4.549665451049805
    7. '```' → logprob: -4.674665451049805
    8. ' (' → logprob: -4.799665451049805
    9. '(n' → logprob: -4.924665451049805
    10. '*' → logprob: -5.049665451049805

Token 1617: ' par' (ID: 686)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8773611783981323
    2. ':' → logprob: -1.0023611783981323
    3. '   ' → logprob: -2.627361297607422
    4. ')
' → logprob: -3.502361297607422
    5. '):' → logprob: -3.752361297607422
    6. '*' → logprob: -3.877361297607422
    7. '```' → logprob: -4.627361297607422
    8. ',' → logprob: -4.627361297607422
    9. '+' → logprob: -5.127361297607422
    10. ':
' → logprob: -5.252361297607422

Token 1618: ' arbre' (ID: 164180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5774064064025879
    2. 'ar' → logprob: -1.327406406402588
    3. '_' → logprob: -2.077406406402588
    4. ' arbre' → logprob: -4.577406406402588
    5. ' )' → logprob: -4.577406406402588
    6. '```' → logprob: -4.702406406402588
    7. ' ' → logprob: -6.077406406402588
    8. '_token' → logprob: -6.702406406402588
    9. 'er' → logprob: -6.702406406402588
    10. 'space' → logprob: -6.827406406402588

Token 1619: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.39722853899002075
    2. '   ' → logprob: -1.772228479385376
    3. ':
' → logprob: -2.147228479385376
    4. ')' → logprob: -4.272228717803955
    5. '):' → logprob: -5.022228717803955
    6. ')
' → logprob: -5.772228717803955
    7. ',' → logprob: -5.897228717803955
    8. '       ' → logprob: -6.397228717803955
    9. '\n' → logprob: -6.522228717803955
    10. '.' → logprob: -6.522228717803955

Token 1620: ' Sans' (ID: 27070)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.4736216068267822
    2. ')' → logprob: -1.5986216068267822
    3. '(' → logprob: -2.2236216068267822
    4. '"' → logprob: -2.9736216068267822
    5. ' (' → logprob: -3.0986216068267822
    6. '1' → logprob: -3.0986216068267822
    7. '```' → logprob: -3.2236216068267822
    8. ' ' → logprob: -3.3486216068267822
    9. ''' → logprob: -3.5986216068267822
    10. '\n' → logprob: -3.5986216068267822

Token 1621: ' compter' (ID: 81694)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7730743885040283
    2. 'arb' → logprob: -1.7730743885040283
    3. '_' → logprob: -2.0230743885040283
    4. 'ar' → logprob: -2.3980743885040283
    5. 'esp' → logprob: -3.7730743885040283
    6. 'space' → logprob: -4.523074150085449
    7. 's' → logprob: -4.523074150085449
    8. 'aller' → logprob: -5.148074150085449
    9. 'er' → logprob: -5.273074150085449
    10. 'distance' → logprob: -5.398074150085449

Token 1622: ' le' (ID: 505)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4483756422996521
    2. ')' → logprob: -2.448375701904297
    3. '\' → logprob: -3.198375701904297
    4. '```' → logprob: -3.198375701904297
    5. '\n' → logprob: -3.323375701904297
    6. '...' → logprob: -3.823375701904297
    7. 'def' → logprob: -4.198375701904297
    8. '_' → logprob: -4.198375701904297
    9. '   ' → logprob: -4.448375701904297
    10. ''' → logprob: -4.573375701904297

Token 1623: ' temps' (ID: 11160)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0775102376937866
    2. 'es' → logprob: -1.2025102376937866
    3. 'temps' → logprob: -1.8275102376937866
    4. '\n' → logprob: -3.327510356903076
    5. '_c' → logprob: -4.077510356903076
    6. ' \' → logprob: -4.577510356903076
    7. 'cut' → logprob: -4.577510356903076
    8. 'space' → logprob: -4.577510356903076
    9. '\' → logprob: -4.952510356903076
    10. '1' → logprob: -4.952510356903076

Token 1624: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2802684307098389
    2. '   ' → logprob: -1.4052684307098389
    3. 'def' → logprob: -2.405268430709839
    4. ':' → logprob: -2.405268430709839
    5. '*' → logprob: -2.530268430709839
    6. ',' → logprob: -3.405268430709839
    7. ' *' → logprob: -4.030268669128418
    8. ')
' → logprob: -4.405268669128418
    9. '=' → logprob: -4.530268669128418
    10. '+' → logprob: -4.780268669128418

Token 1625: ' coupe' (ID: 71780)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.5163289308547974
    2. 'cou' → logprob: -1.6413289308547974
    3. ' déplacement' → logprob: -3.141328811645508
    4. 'cut' → logprob: -3.266328811645508
    5. 'port' → logprob: -4.016328811645508
    6. 'm' → logprob: -4.016328811645508
    7. 'c' → logprob: -4.141328811645508
    8. 'transport' → logprob: -4.141328811645508
    9. 'de' → logprob: -4.641328811645508
    10. 'ret' → logprob: -4.891328811645508

Token 1626: ' ?

' (ID: 13570)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9990220665931702
    2. ')' → logprob: -1.4990220069885254
    3. '   ' → logprob: -1.8740220069885254
    4. ':
' → logprob: -2.6240220069885254
    5. ')
' → logprob: -2.6240220069885254
    6. '):' → logprob: -3.7490220069885254
    7. '.' → logprob: -4.749022006988525
    8. ',' → logprob: -4.999022006988525
    9. '*' → logprob: -4.999022006988525
    10. '
' → logprob: -5.124022006988525

Token 1627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.640846848487854
    2. ':' → logprob: -1.765846848487854
    3. ':
' → logprob: -2.6408467292785645
    4. 'for' → logprob: -2.7658467292785645
    5. ')' → logprob: -3.2658467292785645
    6. '#' → logprob: -3.8908467292785645
    7. '\n' → logprob: -4.0158467292785645
    8. 'def' → logprob: -4.2658467292785645
    9. '
' → logprob: -4.3908467292785645
    10. '(
' → logprob: -4.5158467292785645

Token 1628: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5913445949554443
    2. '#' (adapté à ' #') → logprob: -0.9663445949554443
    3. 'total' → logprob: -4.216344833374023
    4. 'for' → logprob: -4.341344833374023
    5. 'max' → logprob: -4.841344833374023
    6. 'def' → logprob: -4.966344833374023
    7. 'if' → logprob: -5.716344833374023
    8. 'min' → logprob: -5.841344833374023
    9. 'cut' → logprob: -6.341344833374023
    10. '    
' → logprob: -6.341344833374023

Token 1629: ' Lis' (ID: 29571)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6181727051734924
    2. 'best' → logprob: -1.6181726455688477
    3. '#' → logprob: -2.3681726455688477
    4. 'total' → logprob: -3.2431726455688477
    5. 'minimum' → logprob: -3.6181726455688477
    6. 'minimal' → logprob: -3.9931726455688477
    7. 'max' → logprob: -4.118172645568848
    8. 'cut' → logprob: -4.368172645568848
    9. 'result' → logprob: -4.368172645568848
    10. 'for' → logprob: -4.493172645568848

Token 1630: 'ons' (ID: 1808)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.2997451424598694
    2. 't' → logprob: -1.4247450828552246
    3. 'ter' → logprob: -4.424745082855225
    4. 'tez' → logprob: -5.674745082855225
    5. 'té' → logprob: -7.299745082855225
    6. 'ting' → logprob: -7.549745082855225
    7. 'e' → logprob: -7.549745082855225
    8. 'tant' → logprob: -8.799745559692383
    9. '#' → logprob: -9.299745559692383
    10. 'tage' → logprob: -9.424745559692383

Token 1631: ' précisément' (ID: 139179)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4947569370269775
    2. '#' → logprob: -1.8697569370269775
    3. ':' → logprob: -1.8697569370269775
    4. 'the' → logprob: -1.9947569370269775
    5. 'import' → logprob: -2.4947569370269775
    6. '(' → logprob: -2.4947569370269775
    7. '.' → logprob: -2.8697569370269775
    8. 'lines' → logprob: -3.4947569370269775
    9. '...' → logprob: -4.119756698608398
    10. 'def' → logprob: -4.619756698608398

Token 1632: ' l' (ID: 305)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6355534791946411
    2. '   ' → logprob: -1.1355534791946411
    3. '#' → logprob: -2.7605533599853516
    4. ':
' → logprob: -4.635553359985352
    5. 'def' → logprob: -4.760553359985352
    6. ',' → logprob: -5.010553359985352
    7. ' ' → logprob: -5.135553359985352
    8. '(' → logprob: -5.260553359985352
    9. 'import' → logprob: -5.260553359985352
    10. '
' → logprob: -5.510553359985352

Token 1633: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7110851407051086
    2. 'ine' → logprob: -1.7110850811004639
    3. ''' → logprob: -2.086085081100464
    4. 'a' → logprob: -3.211085081100464
    5. 'ignes' → logprob: -3.336085081100464
    6. 'ines' → logprob: -4.086085319519043
    7. 'i' → logprob: -4.086085319519043
    8. 'n' → logprob: -4.336085319519043
    9. 'igne' → logprob: -4.461085319519043
    10. '_' → logprob: -4.711085319519043

Token 1634: 'emple' (ID: 55259)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3128565549850464
    2. 'trait' → logprob: -2.187856674194336
    3. 'planation' → logprob: -2.312856674194336
    4. 'cerpt' → logprob: -3.562856674194336
    5. '#' → logprob: -4.687856674194336
    6. 'pression' → logprob: -5.187856674194336
    7. 'plic' → logprob: -5.812856674194336
    8. 'cept' → logprob: -5.812856674194336
    9. 'emple' → logprob: -6.062856674194336
    10. 'pl' → logprob: -6.312856674194336

Token 1635: ' d' (ID: 272)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5873586535453796
    2. ':' → logprob: -1.8373587131500244
    3. '<|end|>' → logprob: -2.4623587131500244
    4. '<|end|>' → logprob: -2.7123587131500244
    5. '   ' → logprob: -3.3373587131500244
    6. ')' → logprob: -3.8373587131500244
    7. 'def' → logprob: -4.337358474731445
    8. 'import' → logprob: -4.462358474731445
    9. 'pass' → logprob: -5.087358474731445
    10. '
' → logprob: -5.087358474731445

Token 1636: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7341254949569702
    2. 'a' → logprob: -0.9841254949569702
    3. ''' → logprob: -2.9841256141662598
    4. 'es' → logprob: -3.8591256141662598
    5. '#' → logprob: -3.9841256141662598
    6. ''entrée' → logprob: -5.23412561416626
    7. ''ex' → logprob: -5.48412561416626
    8. ''import' → logprob: -5.73412561416626
    9. ''arrivée' → logprob: -6.10912561416626
    10. 'ui' → logprob: -6.10912561416626

Token 1637: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.633776843547821
    2. '   ' → logprob: -1.0087769031524658
    3. '<|end|>' → logprob: -3.633776903152466
    4. '[' → logprob: -4.383776664733887
    5. '<|end|>' → logprob: -4.508776664733887
    6. '\' → logprob: -4.633776664733887
    7. '
' → logprob: -4.633776664733887
    8. ':' → logprob: -5.133776664733887
    9. 'import' → logprob: -5.758776664733887
    10. '(' → logprob: -5.758776664733887

Token 1638: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21895374357700348
    2. '#' → logprob: -2.343953847885132
    3. '[' → logprob: -3.468953847885132
    4. ',' → logprob: -4.218953609466553
    5. 'import' → logprob: -4.593953609466553
    6. '<|end|>' → logprob: -4.968953609466553
    7. '```' → logprob: -5.343953609466553
    8. '<|end|>' → logprob: -5.468953609466553
    9. ']' → logprob: -5.718953609466553
    10. ':
' → logprob: -5.718953609466553

Token 1639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4729126989841461
    2. '   ' → logprob: -1.3479126691818237
    3. '[' → logprob: -3.8479127883911133
    4. '<|end|>' → logprob: -4.097912788391113
    5. '#' → logprob: -4.222912788391113
    6. '<|end|>' → logprob: -4.472912788391113
    7. '\n' → logprob: -4.972912788391113
    8. '
' → logprob: -4.972912788391113
    9. ':
' → logprob: -5.097912788391113
    10. '[
' → logprob: -5.597912788391113

Token 1640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04414443299174309
    2. '#' → logprob: -3.54414439201355
    3. '
' → logprob: -5.169144630432129
    4. '    
' → logprob: -6.419144630432129
    5. '\n' → logprob: -7.044144630432129
    6. 'if' → logprob: -7.169144630432129
    7. ' if' → logprob: -7.294144630432129
    8. '\' → logprob: -7.544144630432129
    9. ' #' → logprob: -7.669144630432129
    10. 'def' → logprob: -7.919144630432129

Token 1641: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12680503726005554
    2. '#' (adapté à ' #') → logprob: -2.251805067062378
    3. ' #' → logprob: -5.876804828643799
    4. 'def' → logprob: -6.376804828643799
    5. 'for' → logprob: -6.501804828643799
    6. 'pass' → logprob: -7.001804828643799
    7. '
' → logprob: -7.251804828643799
    8. '    ' → logprob: -7.251804828643799
    9. '"' → logprob: -7.376804828643799
    10. '    
' → logprob: -7.501804828643799

Token 1642: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16613855957984924
    2. '#' → logprob: -2.0411386489868164
    3. '\' → logprob: -5.791138648986816
    4. '
' → logprob: -6.041138648986816
    5. '    
' → logprob: -6.166138648986816
    6. ' #' → logprob: -6.416138648986816
    7. 'def' → logprob: -6.416138648986816
    8. 'for' → logprob: -6.541138648986816
    9. ' 
' → logprob: -6.666138648986816
    10. '\n' → logprob: -6.916138648986816

Token 1643: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13072840869426727
    2. '0' → logprob: -2.6307284832000732
    3. '#' → logprob: -4.130728244781494
    4. '1' → logprob: -4.255728244781494
    5. ',' → logprob: -5.755728244781494
    6. '(' → logprob: -5.755728244781494
    7. '
' → logprob: -5.755728244781494
    8. '   ' → logprob: -6.255728244781494
    9. ')
' → logprob: -6.380728244781494
    10. '2' → logprob: -6.755728244781494

Token 1644: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015175960725173354
    2. ')' → logprob: -7.1265177726745605
    3. '3' → logprob: -8.501517295837402
    4. '   ' → logprob: -8.876517295837402
    5. '0' → logprob: -9.126517295837402
    6. ' ,' → logprob: -9.376517295837402
    7. ',
' → logprob: -9.626517295837402
    8. ',)' → logprob: -10.751517295837402
    9. ',:)' → logprob: -11.251517295837402
    10. ',#' → logprob: -11.501517295837402

Token 1645: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005488687660545111
    2. ',' → logprob: -5.630488872528076
    3. '2' → logprob: -7.130488872528076
    4. '0' → logprob: -7.880488872528076
    5. '1' → logprob: -8.005488395690918
    6. ')' → logprob: -8.755488395690918
    7. ' ' → logprob: -9.255488395690918
    8. '   ' → logprob: -9.380488395690918
    9. ',
' → logprob: -11.880488395690918
    10. '4' → logprob: -12.005488395690918

Token 1646: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6538940668106079
    2. ',' → logprob: -0.7788940668106079
    3. '),(' → logprob: -5.528893947601318
    4. ' ,' → logprob: -5.653893947601318
    5. '):' → logprob: -5.903893947601318
    6. '   ' → logprob: -5.903893947601318
    7. '),' → logprob: -6.028893947601318
    8. ')
' → logprob: -6.903893947601318
    9. ')+' → logprob: -7.653893947601318
    10. '[' → logprob: -7.778893947601318

Token 1647: ' arbres' (ID: 127011)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22772099077701569
    2. ']' → logprob: -2.6027209758758545
    3. '][' → logprob: -3.2277209758758545
    4. ')' → logprob: -4.102721214294434
    5. '   ' → logprob: -4.102721214294434
    6. ',
' → logprob: -4.352721214294434
    7. '<|end|>' → logprob: -4.477721214294434
    8. ' ,' → logprob: -4.852721214294434
    9. ':' → logprob: -5.102721214294434
    10. '[' → logprob: -5.727721214294434

Token 1648: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.548429548740387
    2. ']' → logprob: -1.4234294891357422
    3. ':' → logprob: -2.923429489135742
    4. '[' → logprob: -3.548429489135742
    5. '   ' → logprob: -3.923429489135742
    6. '][' → logprob: -3.923429489135742
    7. ',
' → logprob: -4.548429489135742
    8. ')' → logprob: -4.673429489135742
    9. ']:' → logprob: -5.173429489135742
    10. '],' → logprob: -5.423429489135742

Token 1649: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6181264519691467
    2. '2' → logprob: -1.118126392364502
    3. '0' → logprob: -2.993126392364502
    4. '3' → logprob: -2.993126392364502
    5. ' ' → logprob: -3.618126392364502
    6. '4' → logprob: -5.493126392364502
    7. '[' → logprob: -6.743126392364502
    8. '5' → logprob: -6.993126392364502
    9. ' [' → logprob: -8.74312686920166
    10. '```' → logprob: -8.74312686920166

Token 1650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44752874970436096
    2. '2' → logprob: -1.5725287199020386
    3. '0' → logprob: -2.447528839111328
    4. '3' → logprob: -2.822528839111328
    5. '4' → logprob: -5.322528839111328
    6. ' ' → logprob: -6.947528839111328
    7. '5' → logprob: -7.072528839111328
    8. '[' → logprob: -8.447528839111328
    9. '6' → logprob: -8.697528839111328
    10. '7' → logprob: -9.947528839111328

Token 1651: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6764042973518372
    2. ',' → logprob: -1.6764042377471924
    3. ':' → logprob: -1.9264042377471924
    4. '
' → logprob: -3.5514042377471924
    5. ')' → logprob: -3.6764042377471924
    6. ',
' → logprob: -3.8014042377471924
    7. ':
' → logprob: -3.9264042377471924
    8. ')
' → logprob: -4.1764044761657715
    9. '0' → logprob: -4.4264044761657715
    10. ']' → logprob: -4.6764044761657715

Token 1652: ' temps' (ID: 11160)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6615702509880066
    2. '(' → logprob: -1.4115703105926514
    3. '   ' → logprob: -2.4115703105926514
    4. '#' → logprob: -2.4115703105926514
    5. ' #' → logprob: -3.5365703105926514
    6. ')' → logprob: -4.786570072174072
    7. '
' → logprob: -5.286570072174072
    8. '0' → logprob: -5.411570072174072
    9. '<|end|>' → logprob: -6.411570072174072
    10. ',' → logprob: -6.536570072174072

Token 1653: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6268035769462585
    2. ')' → logprob: -2.0018036365509033
    3. ',' → logprob: -2.0018036365509033
    4. '=' → logprob: -2.8768036365509033
    5. '   ' → logprob: -3.1268036365509033
    6. ':' → logprob: -3.2518036365509033
    7. ']' → logprob: -4.626803398132324
    8. ' *' → logprob: -5.001803398132324
    9. '<|end|>' → logprob: -5.501803398132324
    10. '),' → logprob: -5.751803398132324

Token 1654: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7421757578849792
    2. '3' → logprob: -1.867175817489624
    3. '4' → logprob: -2.992175817489624
    4. '5' → logprob: -2.992175817489624
    5. '1' → logprob: -3.117175817489624
    6. '6' → logprob: -3.367175817489624
    7. 'A' → logprob: -3.492175817489624
    8. '7' → logprob: -3.617175817489624
    9. ' dist' → logprob: -3.617175817489624
    10. '2' → logprob: -3.742175817489624

Token 1655: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.40792766213417053
    2. '5' → logprob: -1.9079276323318481
    3. '4' → logprob: -2.6579277515411377
    4. '6' → logprob: -3.1579277515411377
    5. '2' → logprob: -3.5329277515411377
    6. '1' → logprob: -3.9079277515411377
    7. '7' → logprob: -4.782927513122559
    8. 'dist' → logprob: -4.907927513122559
    9. ' ' → logprob: -6.032927513122559
    10. 'A' → logprob: -6.282927513122559

Token 1656: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1617087423801422
    2. '   ' → logprob: -2.7867088317871094
    3. ')' → logprob: -3.5367088317871094
    4. '):' → logprob: -4.036708831787109
    5. ':
' → logprob: -4.911708831787109
    6. '0' → logprob: -5.161708831787109
    7. '
' → logprob: -5.536708831787109
    8. ',' → logprob: -5.661708831787109
    9. 'def' → logprob: -5.911708831787109
    10. ']' → logprob: -6.036708831787109

Token 1657: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08915136009454727
    2. ':' → logprob: -3.339151382446289
    3. ',' → logprob: -4.589151382446289
    4. '0' → logprob: -5.089151382446289
    5. ')
' → logprob: -5.464151382446289
    6. ')' → logprob: -5.464151382446289
    7. ',
' → logprob: -5.714151382446289
    8. ':
' → logprob: -5.839151382446289
    9. '
' → logprob: -5.839151382446289
    10. '#' → logprob: -6.089151382446289

Token 1658: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031245112419128418
    2. ',' → logprob: -4.656245231628418
    3. '#' (adapté à ' #') → logprob: -5.156245231628418
    4. ')' → logprob: -5.781245231628418
    5. ':' → logprob: -5.781245231628418
    6. '       ' → logprob: -6.531245231628418
    7. '
' → logprob: -6.906245231628418
    8. ')
' → logprob: -6.906245231628418
    9. ',
' → logprob: -6.906245231628418
    10. '0' → logprob: -7.281245231628418

Token 1659: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08771713078022003
    2. 'for' → logprob: -3.837717056274414
    3. '#' → logprob: -4.087717056274414
    4. '(' → logprob: -4.212717056274414
    5. ' for' → logprob: -5.087717056274414
    6. ' (' → logprob: -5.212717056274414
    7. 'if' → logprob: -5.837717056274414
    8. ' #' → logprob: -5.837717056274414
    9. '
' → logprob: -5.962717056274414
    10. ')' → logprob: -6.587717056274414

Token 1660: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06224338710308075
    2. '2' → logprob: -3.1872434616088867
    3. ',' → logprob: -4.062243461608887
    4. '0' → logprob: -7.062243461608887
    5. '3' → logprob: -7.187243461608887
    6. '   ' → logprob: -9.187243461608887
    7. ' ' → logprob: -9.812243461608887
    8. '
' → logprob: -10.687243461608887
    9. ' ,' → logprob: -11.062243461608887
    10. ')' → logprob: -11.437243461608887

Token 1661: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9027791495318525e-05
    2. ',
' → logprob: -11.875019073486328
    3. '   ' → logprob: -12.375019073486328
    4. ' ,' → logprob: -12.875019073486328
    5. ',#' → logprob: -13.125019073486328
    6. '3' → logprob: -13.750019073486328
    7. '2' → logprob: -14.500019073486328
    8. ',j' → logprob: -15.000019073486328
    9. ')' → logprob: -15.625019073486328
    10. '```' → logprob: -16.125019073486328

Token 1662: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008576866239309311
    2. '2' → logprob: -4.8835768699646
    3. '1' → logprob: -7.5085768699646
    4. '4' → logprob: -7.8835768699646
    5. '0' → logprob: -10.133576393127441
    6. ' ' → logprob: -12.508576393127441
    7. '   ' → logprob: -15.133576393127441
    8. '
' → logprob: -15.321076393127441
    9. '```' → logprob: -15.383576393127441
    10. ')' → logprob: -15.508576393127441

Token 1663: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009036177769303322
    2. ',' → logprob: -5.384036064147949
    3. ']' → logprob: -6.009036064147949
    4. ')
' → logprob: -7.884036064147949
    5. '   ' → logprob: -8.00903606414795
    6. ' )' → logprob: -8.38403606414795
    7. '):' → logprob: -8.50903606414795
    8. '),' → logprob: -8.63403606414795
    9. ')]' → logprob: -8.88403606414795
    10. '[' → logprob: -9.63403606414795

Token 1664: ' arbres' (ID: 127011)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.68133145570755
    2. ')' → logprob: -1.5563313961029053
    3. '[' → logprob: -1.9313313961029053
    4. ']' → logprob: -3.9313313961029053
    5. ' ,' → logprob: -4.181331634521484
    6. ' ar' → logprob: -4.306331634521484
    7. '```' → logprob: -4.431331634521484
    8. '_ar' → logprob: -4.556331634521484
    9. '_' → logprob: -4.931331634521484
    10. '   ' → logprob: -5.181331634521484

Token 1665: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14460226893424988
    2. '=' → logprob: -2.0196022987365723
    3. ')' → logprob: -6.769602298736572
    4. ']' → logprob: -7.894602298736572
    5. ',' → logprob: -8.644601821899414
    6. ']=' → logprob: -9.894601821899414
    7. '[' → logprob: -10.519601821899414
    8. ' ' → logprob: -10.644601821899414
    9. ')=' → logprob: -10.644601821899414
    10. '),' → logprob: -10.894601821899414

Token 1666: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5141457915306091
    2. '2' → logprob: -1.014145851135254
    3. ' ' → logprob: -3.264145851135254
    4. '3' → logprob: -7.014145851135254
    5. '0' → logprob: -9.389145851135254
    6. '4' → logprob: -10.764145851135254
    7. '   ' → logprob: -11.264145851135254
    8. '6' → logprob: -11.639145851135254
    9. '5' → logprob: -11.764145851135254
    10. '```' → logprob: -12.014145851135254

Token 1667: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14419294893741608
    2. '1' → logprob: -2.144192934036255
    3. '3' → logprob: -4.644193172454834
    4. '0' → logprob: -5.019193172454834
    5. '4' → logprob: -7.394193172454834
    6. ' ' → logprob: -9.144192695617676
    7. '5' → logprob: -9.519192695617676
    8. '```' → logprob: -10.644192695617676
    9. '6' → logprob: -10.894192695617676
    10. '...' → logprob: -11.394192695617676

Token 1668: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48732590675354004
    2. ':' → logprob: -2.11232590675354
    3. ')' → logprob: -2.86232590675354
    4. '
' → logprob: -2.86232590675354
    5. ':
' → logprob: -3.61232590675354
    6. '#' → logprob: -3.73732590675354
    7. ')
' → logprob: -3.73732590675354
    8. ',' → logprob: -4.237325668334961
    9. 'def' → logprob: -4.362325668334961
    10. '```' → logprob: -4.862325668334961

Token 1669: '  
' (ID: 4066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7698861360549927
    2. '0' → logprob: -1.7698861360549927
    3. '   ' → logprob: -1.8948861360549927
    4. '    ' → logprob: -2.144886016845703
    5. ' ' → logprob: -2.769886016845703
    6. ' #' → logprob: -2.894886016845703
    7. '#' → logprob: -3.644886016845703
    8. ' )' → logprob: -3.769886016845703
    9. '       ' → logprob: -3.894886016845703
    10. '1' → logprob: -4.019886016845703

Token 1670: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32852572202682495
    2. '#' → logprob: -1.5785257816314697
    3. ' #' → logprob: -3.9535257816314697
    4. ' (' → logprob: -4.203525543212891
    5. '(' → logprob: -4.203525543212891
    6. '
' → logprob: -4.953525543212891
    7. ')' → logprob: -5.703525543212891
    8. ',' → logprob: -6.328525543212891
    9. '#
' → logprob: -6.703525543212891
    10. ' ' → logprob: -6.703525543212891

Token 1671: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5819328427314758
    2. '   ' → logprob: -1.331932783126831
    3. '(' → logprob: -2.456932783126831
    4. ' #' → logprob: -3.331932783126831
    5. ' (' → logprob: -3.706932783126831
    6. ')' → logprob: -5.08193302154541
    7. '
' → logprob: -5.33193302154541
    8. ',' → logprob: -5.95693302154541
    9. '#
' → logprob: -5.95693302154541
    10. ':' → logprob: -6.33193302154541

Token 1672: ' ils' (ID: 15387)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3419824540615082
    2. '#' → logprob: -2.716982364654541
    3. ')' → logprob: -3.341982364654541
    4. 'for' → logprob: -3.716982364654541
    5. ' #' → logprob: -3.716982364654541
    6. ' (' → logprob: -3.841982364654541
    7. '(' → logprob: -3.966982364654541
    8. '
' → logprob: -4.341982364654541
    9. ' for' → logprob: -4.841982364654541
    10. '       ' → logprob: -4.841982364654541

Token 1673: ' avanc' (ID: 87985)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1741344928741455
    2. '#' → logprob: -2.0491344928741455
    3. ' prennent' → logprob: -2.1741344928741455
    4. '=' → logprob: -2.2991344928741455
    5. ' =' → logprob: -2.5491344928741455
    6. '_' → logprob: -3.0491344928741455
    7. 'calcul' → logprob: -3.6741344928741455
    8. ')' → logprob: -3.7991344928741455
    9. ' ont' → logprob: -3.9241344928741455
    10. 'ont' → logprob: -4.299134254455566

Token 1674: 'ent' (ID: 299)
  Prédit: 'ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.20377792418003082
    2. 'cent' → logprob: -1.9537779092788696
    3. 'nt' → logprob: -4.95377779006958
    4. 'n' → logprob: -5.57877779006958
    5. 'encent' → logprob: -5.82877779006958
    6. 'ce' → logprob: -5.95377779006958
    7. 'ment' → logprob: -6.07877779006958
    8. 'ç' → logprob: -6.20377779006958
    9. 'c' → logprob: -6.32877779006958
    10. 'anc' → logprob: -6.32877779006958

Token 1675: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2061954736709595
    2. '   ' → logprob: -1.3311954736709595
    3. ' =' → logprob: -2.33119535446167
    4. ' à' → logprob: -2.70619535446167
    5. '.' → logprob: -2.95619535446167
    6. 'à' → logprob: -3.20619535446167
    7. '       ' → logprob: -3.33119535446167
    8. '```' → logprob: -3.70619535446167
    9. '[' → logprob: -4.33119535446167
    10. '           ' → logprob: -4.33119535446167

Token 1676: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22042183578014374
    2. '3' → logprob: -2.09542179107666
    3. '2' → logprob: -3.22042179107666
    4. ' ' → logprob: -4.34542179107666
    5. '4' → logprob: -4.59542179107666
    6. '(' → logprob: -5.22042179107666
    7. '   ' → logprob: -6.72042179107666
    8. '0' → logprob: -6.84542179107666
    9. ' (' → logprob: -7.09542179107666
    10. '{
' → logprob: -7.97042179107666

Token 1677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15984980762004852
    2. '3' → logprob: -2.2848498821258545
    3. '2' → logprob: -3.4098498821258545
    4. ' ' → logprob: -5.409849643707275
    5. '4' → logprob: -5.909849643707275
    6. '(' → logprob: -5.909849643707275
    7. '```' → logprob: -7.784849643707275
    8. '6' → logprob: -8.034850120544434
    9. '5' → logprob: -8.034850120544434
    10. '0' → logprob: -8.284850120544434

Token 1678: ' case' (ID: 1890)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.149579644203186
    2. '*' → logprob: -1.274579644203186
    3. '+' → logprob: -1.399579644203186
    4. ' +' → logprob: -3.1495795249938965
    5. ')' → logprob: -3.6495795249938965
    6. '   ' → logprob: -4.0245795249938965
    7. '0' → logprob: -4.3995795249938965
    8. '    ' → logprob: -4.8995795249938965
    9. '.' → logprob: -5.0245795249938965
    10. '#' → logprob: -5.2745795249938965

Token 1679: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0127366781234741
    2. '
' → logprob: -1.6377366781234741
    3. ':
' → logprob: -2.6377367973327637
    4. ':' → logprob: -2.7627367973327637
    5. '       ' → logprob: -3.3877367973327637
    6. ')
' → logprob: -3.5127367973327637
    7. ')' → logprob: -3.6377367973327637
    8. '                   ' → logprob: -4.137736797332764
    9. 'for' → logprob: -4.137736797332764
    10. 'def' → logprob: -4.387736797332764

Token 1680: ' usine' (ID: 124673)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08301243185997009
    2. '0' → logprob: -3.458012342453003
    3. 'dist' → logprob: -3.958012342453003
    4. 'la' → logprob: -4.333012580871582
    5. ' (' → logprob: -5.458012580871582
    6. 'l' → logprob: -6.208012580871582
    7. 'le' → logprob: -6.208012580871582
    8. '1' → logprob: -6.708012580871582
    9. '[' → logprob: -6.833012580871582
    10. '#' → logprob: -7.208012580871582

Token 1681: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14566095173358917
    2. '
' → logprob: -3.770660877227783
    3. '       ' → logprob: -3.895660877227783
    4. 'def' → logprob: -4.270660877227783
    5. 'for' → logprob: -4.520660877227783
    6. ' for' → logprob: -4.645660877227783
    7. ':
' → logprob: -4.770660877227783
    8. ':' → logprob: -4.895660877227783
    9. '                   ' → logprob: -5.645660877227783
    10. '#' → logprob: -5.770660877227783

Token 1682: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14727121591567993
    2. ' )' → logprob: -3.147271156311035
    3. ',' → logprob: -3.272271156311035
    4. '0' → logprob: -3.897271156311035
    5. '),' → logprob: -4.647271156311035
    6. '1' → logprob: -4.897271156311035
    7. ' ,' → logprob: -5.397271156311035
    8. ')
' → logprob: -5.522271156311035
    9. '(' → logprob: -6.897271156311035
    10. '2' → logprob: -7.147271156311035

Token 1683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012341608526185155
    2. ')' → logprob: -7.00123405456543
    3. ' ,' → logprob: -9.87623405456543
    4. '   ' → logprob: -10.12623405456543
    5. ',
' → logprob: -10.12623405456543
    6. '3' → logprob: -10.37623405456543
    7. ',)' → logprob: -10.50123405456543
    8. '2' → logprob: -10.62623405456543
    9. ',:)' → logprob: -10.75123405456543
    10. ',j' → logprob: -11.62623405456543

Token 1684: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01686938852071762
    2. '2' → logprob: -4.39186954498291
    3. '0' → logprob: -6.39186954498291
    4. '1' → logprob: -6.39186954498291
    5. ')' → logprob: -7.26686954498291
    6. ' ' → logprob: -8.39186954498291
    7. 'j' → logprob: -10.39186954498291
    8. '4' → logprob: -10.39186954498291
    9. '   ' → logprob: -13.14186954498291
    10. '```' → logprob: -13.39186954498291

Token 1685: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09835977852344513
    2. ')
' → logprob: -3.2233598232269287
    3. ',' → logprob: -3.3483598232269287
    4. '   ' → logprob: -4.59835958480835
    5. '),' → logprob: -5.59835958480835
    6. '")' → logprob: -7.09835958480835
    7. ' )' → logprob: -7.34835958480835
    8. ')+' → logprob: -7.47335958480835
    9. '):
' → logprob: -7.84835958480835
    10. '):' → logprob: -7.97335958480835

Token 1686: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2549063265323639
    2. '
' → logprob: -2.879906415939331
    3. ':' → logprob: -3.754906415939331
    4. ')' → logprob: -3.879906415939331
    5. ')
' → logprob: -3.879906415939331
    6. ':
' → logprob: -4.004906177520752
    7. ' if' → logprob: -4.879906177520752
    8. 'def' → logprob: -4.879906177520752
    9. ',' → logprob: -5.004906177520752
    10. '#' → logprob: -5.379906177520752

Token 1687: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002118619391694665
    2. ' (' → logprob: -6.2521185874938965
    3. '1' → logprob: -9.877119064331055
    4. 'l' → logprob: -10.377119064331055
    5. 'us' → logprob: -10.502119064331055
    6. '0' → logprob: -10.502119064331055
    7. 'la' → logprob: -10.627119064331055
    8. 'le' → logprob: -12.252119064331055
    9. '```' → logprob: -12.627119064331055
    10. '
' → logprob: -12.752119064331055

Token 1688: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.272712379693985
    2. '2' → logprob: -1.6477123498916626
    3. '1' → logprob: -3.272712469100952
    4. ',' → logprob: -5.272712230682373
    5. ' ' → logprob: -6.397712230682373
    6. '4' → logprob: -7.772712230682373
    7. '   ' → logprob: -7.897712230682373
    8. '0' → logprob: -8.397712707519531
    9. ')' → logprob: -8.647712707519531
    10. '(' → logprob: -8.897712707519531

Token 1689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.943783253314905e-05
    2. ' ,' → logprob: -11.125059127807617
    3. '3' → logprob: -11.250059127807617
    4. '2' → logprob: -11.375059127807617
    5. ',
' → logprob: -12.125059127807617
    6. ',)' → logprob: -12.375059127807617
    7. ')' → logprob: -12.625059127807617
    8. '   ' → logprob: -12.750059127807617
    9. '```' → logprob: -13.500059127807617
    10. '4' → logprob: -13.750059127807617

Token 1690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20190179347991943
    2. '3' → logprob: -1.7019017934799194
    3. '4' → logprob: -8.20190143585205
    4. '1' → logprob: -9.20190143585205
    5. '0' → logprob: -9.70190143585205
    6. ' ' → logprob: -10.32690143585205
    7. ')' → logprob: -11.70190143585205
    8. '   ' → logprob: -13.01440143585205
    9. '
' → logprob: -13.07690143585205
    10. '```' → logprob: -13.51440143585205

Token 1691: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.025127993896603584
    2. ')
' → logprob: -4.27512788772583
    3. '),' → logprob: -5.27512788772583
    4. ',' → logprob: -5.65012788772583
    5. ' )' → logprob: -7.15012788772583
    6. '   ' → logprob: -7.90012788772583
    7. '):
' → logprob: -8.650128364562988
    8. '):' → logprob: -8.775128364562988
    9. ')#' → logprob: -9.275128364562988
    10. ')+' → logprob: -9.525128364562988

Token 1692: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1072632297873497
    2. '
' → logprob: -4.232263088226318
    3. ')
' → logprob: -4.732263088226318
    4. 'for' → logprob: -4.857263088226318
    5. ')' → logprob: -4.982263088226318
    6. '#' → logprob: -4.982263088226318
    7. 'def' → logprob: -5.232263088226318
    8. ':' → logprob: -5.232263088226318
    9. ':
' → logprob: -5.357263088226318
    10. ',' → logprob: -5.357263088226318

Token 1693: ' vers' (ID: 3640)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05825048312544823
    2. ' (' → logprob: -3.3082504272460938
    3. 'vers' → logprob: -4.933250427246094
    4. ' vers' → logprob: -5.183250427246094
    5. '1' → logprob: -6.808250427246094
    6. '```' → logprob: -7.058250427246094
    7. '
' → logprob: -7.183250427246094
    8. 'p' → logprob: -7.433250427246094
    9. '       ' → logprob: -7.558250427246094
    10. '#' → logprob: -7.933250427246094

Token 1694: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12692894041538239
    2. ' (' → logprob: -2.1269290447235107
    3. '	' → logprob: -15.37692928314209
    4. ' ' → logprob: -15.50192928314209
    5. ' ' → logprob: -15.87692928314209
    6. '```' → logprob: -16.376928329467773
    7. '
' → logprob: -16.501928329467773
    8. '1' → logprob: -16.751928329467773
    9. '   ' → logprob: -16.751928329467773
    10. '`' → logprob: -17.001928329467773

Token 1695: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1430559605360031
    2. '1' → logprob: -2.0180559158325195
    3. ' (' → logprob: -8.26805591583252
    4. '3' → logprob: -9.64305591583252
    5. '2' → logprob: -10.14305591583252
    6. '0' → logprob: -11.51805591583252
    7. '
' → logprob: -12.76805591583252
    8. '```' → logprob: -13.01805591583252
    9. ' ' → logprob: -13.26805591583252
    10. ')' → logprob: -14.39305591583252

Token 1696: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.906711546937004e-05
    2. '3' → logprob: -10.750048637390137
    3. ')' → logprob: -11.125048637390137
    4. ' ,' → logprob: -12.375048637390137
    5. '   ' → logprob: -12.375048637390137
    6. ',
' → logprob: -13.250048637390137
    7. '```' → logprob: -14.375048637390137
    8. '
' → logprob: -15.000048637390137
    9. '4' → logprob: -15.125048637390137
    10. ',)' → logprob: -15.750048637390137

Token 1697: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6166903151315637e-05
    2. '4' → logprob: -11.125016212463379
    3. '1' → logprob: -14.750016212463379
    4. '2' → logprob: -14.875016212463379
    5. ' ' → logprob: -15.375016212463379
    6. '0' → logprob: -16.125015258789062
    7. ')' → logprob: -16.125015258789062
    8. '
' → logprob: -16.687515258789062
    9. 'import' → logprob: -17.375015258789062
    10. '```' → logprob: -17.375015258789062

Token 1698: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02478487230837345
    2. ')
' → logprob: -4.024785041809082
    3. ',' → logprob: -5.524785041809082
    4. '   ' → logprob: -7.274785041809082
    5. '),' → logprob: -7.649785041809082
    6. '):' → logprob: -7.774785041809082
    7. '")' → logprob: -8.899785041809082
    8. '.' → logprob: -9.274785041809082
    9. ']' → logprob: -9.649785041809082
    10. '#' → logprob: -9.649785041809082

Token 1699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4356817901134491
    2. ':' → logprob: -2.1856818199157715
    3. ':
' → logprob: -2.5606818199157715
    4. ')
' → logprob: -3.0606818199157715
    5. ')' → logprob: -3.5606818199157715
    6. '):' → logprob: -4.1856818199157715
    7. '
' → logprob: -4.5606818199157715
    8. '):
' → logprob: -5.0606818199157715
    9. 'def' → logprob: -5.1856818199157715
    10. ',' → logprob: -5.5606818199157715

Token 1700: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.051352500915527344
    2. '       ' → logprob: -4.551352500915527
    3. '                   ' → logprob: -4.801352500915527
    4. ':' → logprob: -5.176352500915527
    5. ')' → logprob: -5.301352500915527
    6. ')
' → logprob: -5.551352500915527
    7. ':
' → logprob: -5.926352500915527
    8. ',' → logprob: -6.426352500915527
    9. '):' → logprob: -6.426352500915527
    10. '               ' → logprob: -6.551352500915527

Token 1701: ' distance' (ID: 9324)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08174838870763779
    2. ')
' → logprob: -4.2067484855651855
    3. '
' → logprob: -4.3317484855651855
    4. ')' → logprob: -4.3317484855651855
    5. '```' → logprob: -5.4567484855651855
    6. 'dist' → logprob: -5.5817484855651855
    7. '       ' → logprob: -5.7067484855651855
    8. '#' → logprob: -5.7067484855651855
    9. ':' → logprob: -5.9567484855651855
    10. 'for' → logprob: -6.0817484855651855

Token 1702: ' aller' (ID: 18383)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.5889294147491455
    2. ' =' → logprob: -1.3389294147491455
    3. '=' → logprob: -2.2139294147491455
    4. ',' → logprob: -4.088929176330566
    5. '   ' → logprob: -4.338929176330566
    6. 'from' → logprob: -4.338929176330566
    7. ')' → logprob: -5.088929176330566
    8. '+' → logprob: -5.463929176330566
    9. '[' → logprob: -5.838929176330566
    10. '_to' → logprob: -5.963929176330566

Token 1703: '-ret' (ID: 104824)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16423076391220093
    2. '_from' → logprob: -2.6642308235168457
    3. '=' → logprob: -2.7892308235168457
    4. '_' → logprob: -5.414230823516846
    5. '_to' → logprob: -5.664230823516846
    6. ',' → logprob: -5.664230823516846
    7. '+' → logprob: -5.914230823516846
    8. '   ' → logprob: -5.914230823516846
    9. ' +' → logprob: -6.789230823516846
    10. ')' → logprob: -7.539230823516846

Token 1704: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.3126773536205292
    2. 'out' → logprob: -1.8126773834228516
    3. 'tour' → logprob: -4.062677383422852
    4. 'ot' → logprob: -4.312677383422852
    5. 'roit' → logprob: -4.312677383422852
    6. 'o' → logprob: -4.562677383422852
    7. 'ro' → logprob: -4.937677383422852
    8. 'ret' → logprob: -5.062677383422852
    9. 'oi' → logprob: -5.187677383422852
    10. 'oir' → logprob: -5.312677383422852

Token 1705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.946378767490387
    2. ')' → logprob: -2.446378707885742
    3. ' +' → logprob: -2.446378707885742
    4. '=' → logprob: -2.571378707885742
    5. ',' → logprob: -2.696378707885742
    6. '   ' → logprob: -2.821378707885742
    7. ':' → logprob: -2.821378707885742
    8. '+' → logprob: -2.946378707885742
    9. '```' → logprob: -3.696378707885742
    10. ')
' → logprob: -4.571378707885742

Token 1706: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1290404349565506
    2. '2' → logprob: -2.504040479660034
    3. ' ' → logprob: -3.379040479660034
    4. '6' → logprob: -6.879040241241455
    5. 'dist' → logprob: -7.254040241241455
    6. '3' → logprob: -7.379040241241455
    7. '(' → logprob: -7.379040241241455
    8. '1' → logprob: -7.504040241241455
    9. ' dist' → logprob: -7.504040241241455
    10. '   ' → logprob: -7.879040241241455

Token 1707: '3' (ID: 18)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3477819561958313
    2. '2' → logprob: -1.3477818965911865
    3. '3' → logprob: -3.5977818965911865
    4. '1' → logprob: -6.222782135009766
    5. '(' → logprob: -6.472782135009766
    6. 'dist' → logprob: -6.972782135009766
    7. '0' → logprob: -7.347782135009766
    8. '6' → logprob: -7.347782135009766
    9. ' ' → logprob: -8.347782135009766
    10. '(dist' → logprob: -8.597782135009766

Token 1708: ' minutes' (ID: 5438)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1417726278305054
    2. '   ' → logprob: -1.7667726278305054
    3. ')' → logprob: -2.016772747039795
    4. '):' → logprob: -2.391772747039795
    5. ')
' → logprob: -2.766772747039795
    6. ':
' → logprob: -3.016772747039795
    7. ',' → logprob: -3.266772747039795
    8. ']' → logprob: -4.141772747039795
    9. 'def' → logprob: -4.516772747039795
    10. '[' → logprob: -4.516772747039795

Token 1709: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9939735531806946
    2. ':
' → logprob: -1.6189734935760498
    3. '   ' → logprob: -1.8689734935760498
    4. ')
' → logprob: -2.24397349357605
    5. ')' → logprob: -3.11897349357605
    6. '):' → logprob: -3.11897349357605
    7. '[' → logprob: -4.868973731994629
    8. '):
' → logprob: -4.868973731994629
    9. '(
' → logprob: -5.243973731994629
    10. 'def' → logprob: -5.368973731994629

Token 1710: 'ils' (ID: 5879)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049768779426813126
    2. ')
' → logprob: -3.4247686862945557
    3. ',' → logprob: -4.924768924713135
    4. '),' → logprob: -5.924768924713135
    5. '#' → logprob: -6.924768924713135
    6. '   ' → logprob: -7.049768924713135
    7. '+' → logprob: -7.049768924713135
    8. ' )' → logprob: -7.049768924713135
    9. '```' → logprob: -8.424768447875977
    10. ' (' → logprob: -8.549768447875977

Token 1711: ' disent' (ID: 108719)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3592517077922821
    2. ' vont' → logprob: -2.8592517375946045
    3. ')
' → logprob: -3.1092517375946045
    4. '#' → logprob: -3.3592517375946045
    5. ' continu' → logprob: -3.7342517375946045
    6. ' continue' → logprob: -3.8592517375946045
    7. '+' → logprob: -3.9842517375946045
    8. ' )' → logprob: -4.109251499176025
    9. '))' → logprob: -4.359251499176025
    10. '*' → logprob: -4.609251499176025

Token 1712: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051282849162817
    2. ' )' → logprob: -3.4262828826904297
    3. ' (' → logprob: -6.17628288269043
    4. ')
' → logprob: -6.30128288269043
    5. '),' → logprob: -6.42628288269043
    6. '3' → logprob: -6.67628288269043
    7. ' ' → logprob: -7.05128288269043
    8. '")' → logprob: -7.17628288269043
    9. ',' → logprob: -7.30128288269043
    10. ' =' → logprob: -7.30128288269043

Token 1713: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.036116600036621
    2. ':' → logprob: -1.411116600036621
    3. ':
' → logprob: -2.536116600036621
    4. ')' → logprob: -2.661116600036621
    5. 'def' → logprob: -3.036116600036621
    6. ')
' → logprob: -3.036116600036621
    7. '):' → logprob: -4.036116600036621
    8. '(' → logprob: -4.536116600036621
    9. '
' → logprob: -4.661116600036621
    10. '       ' → logprob: -4.786116600036621

Token 1714: ' ' (ID: 220)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.0032341480255127
    2. ')' → logprob: -1.7532341480255127
    3. '#' → logprob: -2.2532341480255127
    4. ')
' → logprob: -2.8782341480255127
    5. 'dist' → logprob: -3.3782341480255127
    6. '   ' → logprob: -3.5032341480255127
    7. 'temps' → logprob: -3.6282341480255127
    8. ' #' → logprob: -4.003233909606934
    9. ' dist' → logprob: -4.003233909606934
    10. ' distance' → logprob: -4.003233909606934

Token 1715: '2' (ID: 17)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3270483016967773
    2. 'distance' → logprob: -1.7020483016967773
    3. '1' → logprob: -2.4520483016967773
    4. ')' → logprob: -2.4520483016967773
    5. 'dist' → logprob: -2.5770483016967773
    6. 'temps' → logprob: -2.5770483016967773
    7. 'cou' → logprob: -3.4520483016967773
    8. 'queue' → logprob: -3.5770483016967773
    9. ')
' → logprob: -3.7020483016967773
    10. 'return' → logprob: -3.7020483016967773

Token 1716: ' arbres' (ID: 127011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7683961391448975
    2. '   ' → logprob: -2.1433961391448975
    3. ',' → logprob: -2.5183961391448975
    4. '):' → logprob: -2.7683961391448975
    5. ')' → logprob: -2.8933961391448975
    6. ':
' → logprob: -3.2683961391448975
    7. ')
' → logprob: -3.5183961391448975
    8. '3' → logprob: -4.143396377563477
    9. ']' → logprob: -4.143396377563477
    10. '*' → logprob: -4.143396377563477

Token 1717: ' =>' (ID: 871)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1411847323179245
    2. '
' → logprob: -2.8911848068237305
    3. ':' → logprob: -3.6411848068237305
    4. ':
' → logprob: -4.5161848068237305
    5. '    
' → logprob: -4.6411848068237305
    6. 'def' → logprob: -5.6411848068237305
    7. '#' → logprob: -5.6411848068237305
    8. '       ' → logprob: -5.7661848068237305
    9. ' 
' → logprob: -5.7661848068237305
    10. ')' → logprob: -6.2661848068237305

Token 1718: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2944540977478027
    2. '6' → logprob: -1.9194540977478027
    3. '#' → logprob: -2.5444540977478027
    4. ' (' → logprob: -2.6694540977478027
    5. ')' → logprob: -2.7944540977478027
    6. '(' → logprob: -2.7944540977478027
    7. 'temps' → logprob: -3.1694540977478027
    8. '```' → logprob: -3.1694540977478027
    9. ' temps' → logprob: -3.4194540977478027
    10. '1' → logprob: -3.5444540977478027

Token 1719: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.042607069015503
    2. '6' → logprob: -1.042607069015503
    3. 'temps' → logprob: -1.917607069015503
    4. '(' → logprob: -3.167607069015503
    5. 'distance' → logprob: -3.542607069015503
    6. ' ' → logprob: -4.042607307434082
    7. 'dist' → logprob: -4.042607307434082
    8. ' temps' → logprob: -4.667607307434082
    9. ' dist' → logprob: -4.792607307434082
    10. ' (' → logprob: -5.417607307434082

Token 1720: ' minutes' (ID: 5438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19851189851760864
    2. '
' → logprob: -3.073511838912964
    3. ':' → logprob: -3.198511838912964
    4. ':
' → logprob: -3.198511838912964
    5. 'def' → logprob: -4.323512077331543
    6. ')
' → logprob: -4.948512077331543
    7. 'if' → logprob: -5.698512077331543
    8. '    
' → logprob: -5.823512077331543
    9. ' if' → logprob: -5.948512077331543
    10. ')' → logprob: -5.948512077331543

Token 1721: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18900473415851593
    2. ':' → logprob: -2.43900465965271
    3. ':
' → logprob: -3.18900465965271
    4. '
' → logprob: -3.81400465965271
    5. '    
' → logprob: -5.064004898071289
    6. '       ' → logprob: -5.814004898071289
    7. ')' → logprob: -6.064004898071289
    8. '\n' → logprob: -6.189004898071289
    9. ')
' → logprob: -6.564004898071289
    10. '):' → logprob: -6.939004898071289

Token 1722: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059599995613098145
    2. 'for' → logprob: -3.6845998764038086
    3. '
' → logprob: -4.684599876403809
    4. '#' → logprob: -5.184599876403809
    5. ':' → logprob: -5.809599876403809
    6. 'def' → logprob: -6.184599876403809
    7. ' for' → logprob: -6.434599876403809
    8. '       ' → logprob: -6.559599876403809
    9. ':
' → logprob: -6.684599876403809
    10. ')' → logprob: -6.809599876403809

Token 1723: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12197025120258331
    2. 'for' → logprob: -2.7469701766967773
    3. '#' (adapté à ' #') → logprob: -3.6219701766967773
    4. ' for' → logprob: -5.121970176696777
    5. 'def' → logprob: -5.621970176696777
    6. 'if' → logprob: -5.746970176696777
    7. ':' → logprob: -6.746970176696777
    8. 'time' → logprob: -6.871970176696777
    9. 'distance' → logprob: -6.871970176696777
    10. ')' → logprob: -6.996970176696777

Token 1724: ' Ils' (ID: 31199)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4116322100162506
    2. 'for' → logprob: -1.5366321802139282
    3. '#' → logprob: -3.4116322994232178
    4. ':' → logprob: -4.161632061004639
    5. ' for' → logprob: -4.286632061004639
    6. 'if' → logprob: -4.536632061004639
    7. ':
' → logprob: -5.286632061004639
    8. ')' → logprob: -5.411632061004639
    9. 'dist' → logprob: -5.661632061004639
    10. '(
' → logprob: -5.786632061004639

Token 1725: ' compt' (ID: 39238)
  Prédit: ' vont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vont' → logprob: -1.6332441568374634
    2. ' prennent' → logprob: -1.8832441568374634
    3. ' continu' → logprob: -1.8832441568374634
    4. '#' → logprob: -2.258244037628174
    5. ')' → logprob: -2.633244037628174
    6. ' =' → logprob: -2.758244037628174
    7. ' continue' → logprob: -3.008244037628174
    8. '=' → logprob: -4.133244037628174
    9. ' pensent' → logprob: -4.258244037628174
    10. '.append' → logprob: -4.383244037628174

Token 1726: 'ent' (ID: 299)
  Prédit: 'ulent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulent' → logprob: -0.049628470093011856
    2. 'uent' → logprob: -3.424628496170044
    3. 'ent' → logprob: -4.424628257751465
    4. '#' → logprob: -6.549628257751465
    5. 'u' → logprob: -7.424628257751465
    6. 'nent' → logprob: -8.674628257751465
    7. 'ient' → logprob: -8.799628257751465
    8. 'ul' → logprob: -8.924628257751465
    9. 'luent' → logprob: -8.924628257751465
    10. 'lent' → logprob: -8.924628257751465

Token 1727: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.18131685256958
    2. ' ' → logprob: -1.43131685256958
    3. ')' → logprob: -2.55631685256958
    4. '(' → logprob: -2.80631685256958
    5. '   ' → logprob: -3.43131685256958
    6. 'def' → logprob: -3.55631685256958
    7. ' (' → logprob: -3.68131685256958
    8. ' =' → logprob: -3.80631685256958
    9. '=' → logprob: -3.93131685256958
    10. '[' → logprob: -4.05631685256958

Token 1728: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8430666327476501
    2. '(' → logprob: -1.218066692352295
    3. '*' → logprob: -2.593066692352295
    4. ')' → logprob: -2.843066692352295
    5. 'dist' → logprob: -3.718066692352295
    6. ' =' → logprob: -3.968066692352295
    7. '2' → logprob: -4.093066692352295
    8. ' (' → logprob: -4.343066692352295
    9. 'distance' → logprob: -4.593066692352295
    10. ' ' → logprob: -4.593066692352295

Token 1729: ' minute' (ID: 12434)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2061156928539276
    2. ':' → logprob: -3.20611572265625
    3. ']' → logprob: -3.70611572265625
    4. '<|end|>' → logprob: -3.95611572265625
    5. ' ' → logprob: -4.45611572265625
    6. ',' → logprob: -4.83111572265625
    7. '=' → logprob: -4.95611572265625
    8. '0' → logprob: -5.08111572265625
    9. ' =' → logprob: -5.20611572265625
    10. '*' → logprob: -5.33111572265625

Token 1730: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0991721153259277
    2. ':' → logprob: -1.5991721153259277
    3. '):' → logprob: -1.5991721153259277
    4. '   ' → logprob: -1.9741721153259277
    5. ')
' → logprob: -3.8491721153259277
    6. ',' → logprob: -3.9741721153259277
    7. '       ' → logprob: -4.849172115325928
    8. ']' → logprob: -4.974172115325928
    9. 'def' → logprob: -5.099172115325928
    10. '(' → logprob: -5.224172115325928

Token 1731: ' chaque' (ID: 21194)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.347832053899765
    2. 'le' → logprob: -1.5978320837020874
    3. 'se' → logprob: -3.222831964492798
    4. 'la' → logprob: -4.097832202911377
    5. 'aller' → logprob: -4.597832202911377
    6. 'cut' → logprob: -4.847832202911377
    7. 'l' → logprob: -5.472832202911377
    8. 'dé' → logprob: -5.847832202911377
    9. ' couper' → logprob: -5.972832202911377
    10. 'march' → logprob: -6.222832202911377

Token 1732: ' arbre' (ID: 164180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1499851942062378
    2. '   ' → logprob: -1.3999851942062378
    3. ' ' → logprob: -2.2749853134155273
    4. '
' → logprob: -2.3999853134155273
    5. ':' → logprob: -2.8999853134155273
    6. ' 
' → logprob: -3.5249853134155273
    7. '       ' → logprob: -4.149985313415527
    8. '):' → logprob: -4.274985313415527
    9. ')
' → logprob: -4.399985313415527
    10. '    ' → logprob: -4.524985313415527

Token 1733: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3204166889190674
    2. ':' → logprob: -2.4454166889190674
    3. ':
' → logprob: -2.6954166889190674
    4. '
' → logprob: -3.0704166889190674
    5. 'for' → logprob: -4.570416450500488
    6. ')
' → logprob: -5.070416450500488
    7. ')' → logprob: -5.070416450500488
    8. 'def' → logprob: -5.445416450500488
    9. '       ' → logprob: -5.570416450500488
    10. '#' → logprob: -5.695416450500488

Token 1734: ' puis' (ID: 18766)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23709505796432495
    2. ')' → logprob: -2.9870951175689697
    3. '   ' → logprob: -3.1120951175689697
    4. ':
' → logprob: -3.2370951175689697
    5. '):' → logprob: -3.6120951175689697
    6. ')
' → logprob: -4.612094879150391
    7. ',' → logprob: -5.362094879150391
    8. ' :' → logprob: -5.487094879150391
    9. 'def' → logprob: -5.737094879150391
    10. '
' → logprob: -5.862094879150391

Token 1735: ' aller' (ID: 18383)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3898391723632812
    2. 'une' → logprob: -1.8898391723632812
    3. ' un' → logprob: -2.0148391723632812
    4. '1' → logprob: -2.2648391723632812
    5. ' une' → logprob: -2.7648391723632812
    6. ' le' → logprob: -3.0148391723632812
    7. 'le' → logprob: -3.2648391723632812
    8. 'un' → logprob: -3.7648391723632812
    9. 'distance' → logprob: -3.7648391723632812
    10. ' #' → logprob: -3.8898391723632812

Token 1736: '-ret' (ID: 104824)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8728439807891846
    2. ')' → logprob: -0.9978439807891846
    3. ')
' → logprob: -2.7478439807891846
    4. '
' → logprob: -3.7478439807891846
    5. '       ' → logprob: -3.8728439807891846
    6. ',' → logprob: -3.9978439807891846
    7. ' ' → logprob: -4.8728437423706055
    8. ':' → logprob: -4.8728437423706055
    9. '):' → logprob: -4.9978437423706055
    10. '```' → logprob: -5.3728437423706055

Token 1737: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0008342855726368725
    2. 'out' → logprob: -7.5008344650268555
    3. 'tour' → logprob: -9.625834465026855
    4. '```' → logprob: -10.250834465026855
    5. 'o' → logprob: -10.750834465026855
    6. 'ou' → logprob: -10.750834465026855
    7. 'ours' → logprob: -10.875834465026855
    8. 'et' → logprob: -11.125834465026855
    9. ')' → logprob: -11.500834465026855
    10. '
' → logprob: -11.750834465026855

Token 1738: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0573588609695435
    2. '   ' → logprob: -1.0573588609695435
    3. ':
' → logprob: -2.182358741760254
    4. '):' → logprob: -2.932358741760254
    5. ')
' → logprob: -3.307358741760254
    6. ')' → logprob: -3.307358741760254
    7. '):
' → logprob: -4.682358741760254
    8. '(' → logprob: -4.932358741760254
    9. '(
' → logprob: -5.182358741760254
    10. '.' → logprob: -5.307358741760254

Token 1739: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.427141785621643
    2. ' ' → logprob: -2.1771416664123535
    3. ' égal' → logprob: -2.4271416664123535
    4. ' multip' → logprob: -2.5521416664123535
    5. '1' → logprob: -2.6771416664123535
    6. '=' → logprob: -2.8021416664123535
    7. 'égal' → logprob: -3.3021416664123535
    8. '2' → logprob: -3.4271416664123535
    9. ' aussi' → logprob: -3.4271416664123535
    10. ' calcul' → logprob: -3.8021416664123535

Token 1740: '2' (ID: 17)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8066643476486206
    2. '1' → logprob: -1.4316643476486206
    3. '2' → logprob: -2.05666446685791
    4. '3' → logprob: -2.93166446685791
    5. 'distance' → logprob: -3.18166446685791
    6. '(' → logprob: -4.30666446685791
    7. ' ' → logprob: -4.55666446685791
    8. 'calcul' → logprob: -4.93166446685791
    9. 'aj' → logprob: -5.30666446685791
    10. '0' → logprob: -5.30666446685791

Token 1741: ' minutes' (ID: 5438)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6817223429679871
    2. ')' → logprob: -2.681722402572632
    3. ')
' → logprob: -2.931722402572632
    4. '
' → logprob: -2.931722402572632
    5. ':' → logprob: -3.056722402572632
    6. '0' → logprob: -3.681722402572632
    7. 'def' → logprob: -3.681722402572632
    8. ':
' → logprob: -3.931722402572632
    9. '):
' → logprob: -4.056722164154053
    10. '):' → logprob: -4.056722164154053

Token 1742: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8754912614822388
    2. '   ' → logprob: -1.0004912614822388
    3. ':
' → logprob: -2.625491142272949
    4. ')' → logprob: -3.250491142272949
    5. '):' → logprob: -3.375491142272949
    6. '
' → logprob: -4.500491142272949
    7. ')
' → logprob: -4.500491142272949
    8. 'def' → logprob: -5.000491142272949
    9. '):
' → logprob: -5.500491142272949
    10. ',' → logprob: -5.625491142272949

Token 1743: 'distance' (ID: 40614)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049757786095142365
    2. ' )' → logprob: -3.424757719039917
    3. ')
' → logprob: -4.674757957458496
    4. '+' → logprob: -6.424757957458496
    5. '*' → logprob: -7.174757957458496
    6. ' )
' → logprob: -7.174757957458496
    7. ',' → logprob: -7.799757957458496
    8. '   ' → logprob: -8.049757957458496
    9. '),' → logprob: -8.299757957458496
    10. ' *' → logprob: -8.299757957458496

Token 1744: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37611138820648193
    2. ' )' → logprob: -2.1261115074157715
    3. ' +' → logprob: -2.1261115074157715
    4. '+' → logprob: -3.1261115074157715
    5. '   ' → logprob: -4.0011115074157715
    6. ')+' → logprob: -5.7511115074157715
    7. ' *' → logprob: -6.3761115074157715
    8. '*' → logprob: -6.6261115074157715
    9. ' ' → logprob: -7.1261115074157715
    10. ')*' → logprob: -7.3761115074157715

Token 1745: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.639175295829773
    2. ' +' → logprob: -1.514175295829773
    3. ')' → logprob: -1.764175295829773
    4. '   ' → logprob: -3.6391754150390625
    5. ',' → logprob: -4.1391754150390625
    6. ')+' → logprob: -4.3891754150390625
    7. '*' → logprob: -5.2641754150390625
    8. ' )' → logprob: -5.6391754150390625
    9. '),' → logprob: -5.7641754150390625
    10. ')*' → logprob: -6.1391754150390625

Token 1746: ' case' (ID: 1890)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01877896673977375
    2. ',' → logprob: -4.3937788009643555
    3. ')
' → logprob: -6.2687788009643555
    4. ' )' → logprob: -7.0187788009643555
    5. '<|end|>' → logprob: -7.2687788009643555
    6. '   ' → logprob: -7.5187788009643555
    7. '):' → logprob: -7.5187788009643555
    8. '0' → logprob: -8.518778800964355
    9. '.' → logprob: -8.643778800964355
    10. '):
' → logprob: -9.143778800964355

Token 1747: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5508106350898743
    2. '):' → logprob: -1.6758105754852295
    3. ':' → logprob: -2.5508105754852295
    4. '   ' → logprob: -3.3008105754852295
    5. ')
' → logprob: -3.3008105754852295
    6. '):
' → logprob: -3.3008105754852295
    7. '
' → logprob: -3.9258105754852295
    8. ',' → logprob: -4.800810813903809
    9. ':
' → logprob: -5.550810813903809
    10. ' ' → logprob: -6.175810813903809

Token 1748: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9782490134239197
    2. '   ' → logprob: -1.2282490730285645
    3. ':
' → logprob: -2.8532490730285645
    4. ')' → logprob: -3.2282490730285645
    5. ' 
' → logprob: -3.4782490730285645
    6. 'def' → logprob: -3.8532490730285645
    7. '(' → logprob: -3.8532490730285645
    8. '
' → logprob: -3.9782490730285645
    9. '(
' → logprob: -4.1032490730285645
    10. ' if' → logprob: -4.1032490730285645

Token 1749: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02947678603231907
    2. ' ' → logprob: -3.7794768810272217
    3. '<|end|>' → logprob: -5.904476642608643
    4. ')' → logprob: -6.654476642608643
    5. '3' → logprob: -7.029476642608643
    6. '1' → logprob: -7.154476642608643
    7. '<|end|>' → logprob: -8.9044771194458
    8. ' )' → logprob: -9.0294771194458
    9. 'distance' → logprob: -10.1544771194458
    10. '```' → logprob: -10.2794771194458

Token 1750: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36034902930259705
    2. ':' → logprob: -2.23534893989563
    3. '
' → logprob: -2.61034893989563
    4. ':
' → logprob: -3.36034893989563
    5. ')' → logprob: -4.235349178314209
    6. 'def' → logprob: -4.360349178314209
    7. '#' → logprob: -4.485349178314209
    8. ')
' → logprob: -4.860349178314209
    9. 'for' → logprob: -5.110349178314209
    10. '):' → logprob: -5.735349178314209

Token 1751: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29761284589767456
    2. ' ' → logprob: -2.1726129055023193
    3. '1' → logprob: -2.5476129055023193
    4. '3' → logprob: -2.7976129055023193
    5. ')' → logprob: -6.04761266708374
    6. '```' → logprob: -7.92261266708374
    7. '4' → logprob: -8.172613143920898
    8. '6' → logprob: -8.422613143920898
    9. ' )' → logprob: -8.735113143920898
    10. 'distance' → logprob: -9.360113143920898

Token 1752: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06927838921546936
    2. '1' → logprob: -3.5692784786224365
    3. '3' → logprob: -3.6942784786224365
    4. ' ' → logprob: -4.444278240203857
    5. '4' → logprob: -6.569278240203857
    6. ')' → logprob: -8.756778717041016
    7. '```' → logprob: -9.319278717041016
    8. 'distance' → logprob: -9.506778717041016
    9. '5' → logprob: -9.881778717041016
    10. '6' → logprob: -10.006778717041016

Token 1753: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5563933849334717
    2. ':' → logprob: -1.5563933849334717
    3. ':
' → logprob: -2.3063933849334717
    4. '
' → logprob: -3.0563933849334717
    5. ')
' → logprob: -4.681393623352051
    6. ')' → logprob: -4.931393623352051
    7. '):' → logprob: -4.931393623352051
    8. ' 
' → logprob: -4.931393623352051
    9. '    
' → logprob: -5.306393623352051
    10. '[' → logprob: -5.306393623352051

Token 1754: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16374582052230835
    2. ')' → logprob: -2.788745880126953
    3. ':' → logprob: -3.413745880126953
    4. '       ' → logprob: -4.788745880126953
    5. ')
' → logprob: -4.913745880126953
    6. '
' → logprob: -5.288745880126953
    7. ',' → logprob: -5.413745880126953
    8. '#' → logprob: -5.663745880126953
    9. '):' → logprob: -5.788745880126953
    10. '.' → logprob: -5.913745880126953

Token 1755: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08206142485141754
    2. ':' → logprob: -4.207061290740967
    3. 'for' → logprob: -4.832061290740967
    4. ')
' → logprob: -5.082061290740967
    5. ':
' → logprob: -5.207061290740967
    6. '       ' → logprob: -5.207061290740967
    7. ')' → logprob: -5.207061290740967
    8. '                   ' → logprob: -5.707061290740967
    9. ' for' → logprob: -5.832061290740967
    10. '
' → logprob: -5.832061290740967

Token 1756: ' Mais' (ID: 13880)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0632840245962143
    2. ')' → logprob: -4.063283920288086
    3. ':' → logprob: -4.563283920288086
    4. ')
' → logprob: -5.063283920288086
    5. '
' → logprob: -5.688283920288086
    6. '       ' → logprob: -5.938283920288086
    7. '):' → logprob: -5.938283920288086
    8. ':
' → logprob: -6.188283920288086
    9. ',' → logprob: -6.438283920288086
    10. ' =' → logprob: -7.063283920288086

Token 1757: ' ça' (ID: 13590)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.098780870437622
    2. 'distance' → logprob: -1.348780870437622
    3. ' dist' → logprob: -1.973780870437622
    4. '#' → logprob: -2.973780870437622
    5. ' (' → logprob: -3.348780870437622
    6. 'A' → logprob: -3.723780870437622
    7. '0' → logprob: -3.973780870437622
    8. ' ils' → logprob: -4.223780632019043
    9. '   ' → logprob: -4.348780632019043
    10. ')' → logprob: -4.348780632019043

Token 1758: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8699177503585815
    2. ')' → logprob: -1.7449177503585815
    3. '):' → logprob: -1.8699177503585815
    4. '[' → logprob: -3.244917869567871
    5. '*' → logprob: -3.619917869567871
    6. '+' → logprob: -3.994917869567871
    7. ' continue' → logprob: -3.994917869567871
    8. '=' → logprob: -3.994917869567871
    9. '#' → logprob: -4.494917869567871
    10. '   ' → logprob: -4.744917869567871

Token 1759: ' colle' (ID: 22001)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6563600301742554
    2. '=' → logprob: -1.6563600301742554
    3. ')' → logprob: -2.656360149383545
    4. ' =' → logprob: -3.156360149383545
    5. ' ==' → logprob: -3.406360149383545
    6. ' continue' → logprob: -3.656360149383545
    7. ' *' → logprob: -3.906360149383545
    8. '#' → logprob: -4.156360149383545
    9. '==' → logprob: -4.156360149383545
    10. '+' → logprob: -5.031360149383545

Token 1760: ' pas' (ID: 2173)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10941493511199951
    2. ':' → logprob: -2.734415054321289
    3. '):' → logprob: -4.109415054321289
    4. ':
' → logprob: -4.859415054321289
    5. ')' → logprob: -5.859415054321289
    6. '       ' → logprob: -6.109415054321289
    7. ')
' → logprob: -6.359415054321289
    8. '    
' → logprob: -6.609415054321289
    9. '):
' → logprob: -6.609415054321289
    10. '
' → logprob: -6.609415054321289

Token 1761: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.466624915599823
    2. ':' → logprob: -1.4666249752044678
    3. ':
' → logprob: -2.8416249752044678
    4. ')' → logprob: -3.7166249752044678
    5. ')
' → logprob: -4.216624736785889
    6. '):' → logprob: -4.216624736785889
    7. '       ' → logprob: -5.466624736785889
    8. ',' → logprob: -5.841624736785889
    9. '
' → logprob: -5.966624736785889
    10. '):
' → logprob: -6.091624736785889

Token 1762: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7403384447097778
    2. 'la' → logprob: -1.7403384447097778
    3. ')' → logprob: -2.4903383255004883
    4. ' la' → logprob: -2.9903383255004883
    5. 'def' → logprob: -3.2403383255004883
    6. 'distance' → logprob: -3.3653383255004883
    7. 'A' → logprob: -3.8653383255004883
    8. '```' → logprob: -3.9903383255004883
    9. '(' → logprob: -4.115338325500488
    10. 'the' → logprob: -4.240338325500488

Token 1763: ''analyse' (ID: 187692)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9173408150672913
    2. 'distance' → logprob: -1.7923407554626465
    3. 'dist' → logprob: -2.2923407554626465
    4. ''' → logprob: -2.2923407554626465
    5. '*' → logprob: -3.5423407554626465
    6. ' distance' → logprob: -3.6673407554626465
    7. '=' → logprob: -3.7923407554626465
    8. '`' → logprob: -4.2923407554626465
    9. ' dist' → logprob: -4.4173407554626465
    10. '_' → logprob: -4.6673407554626465

Token 1764: ' brute' (ID: 128602)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17889808118343353
    2. ':' → logprob: -2.3038980960845947
    3. ':
' → logprob: -3.5538980960845947
    4. ')' → logprob: -4.803897857666016
    5. ')
' → logprob: -5.053897857666016
    6. '
' → logprob: -5.678897857666016
    7. '):' → logprob: -5.803897857666016
    8. 'def' → logprob: -6.303897857666016
    9. ',' → logprob: -6.553897857666016
    10. '       ' → logprob: -6.678897857666016

Token 1765: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.289729505777359
    2. ':' → logprob: -2.289729595184326
    3. '
' → logprob: -3.414729595184326
    4. ')' → logprob: -3.664729595184326
    5. ':
' → logprob: -4.164729595184326
    6. '#' → logprob: -4.664729595184326
    7. 'def' → logprob: -4.789729595184326
    8. '\' → logprob: -4.914729595184326
    9. ',' → logprob: -5.039729595184326
    10. 'for' → logprob: -5.289729595184326

Token 1766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13823945820331573
    2. ')' → logprob: -3.0132393836975098
    3. ':' → logprob: -3.5132393836975098
    4. ',' → logprob: -4.76323938369751
    5. '.' → logprob: -5.13823938369751
    6. '#' → logprob: -5.38823938369751
    7. '       ' → logprob: -5.51323938369751
    8. '\' → logprob: -5.63823938369751
    9. '\n' → logprob: -5.63823938369751
    10. '
' → logprob: -6.38823938369751

Token 1767: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012490467168390751
    2. '       ' → logprob: -5.637490272521973
    3. 'for' → logprob: -6.262490272521973
    4. ')' → logprob: -6.637490272521973
    5. ' for' → logprob: -6.887490272521973
    6. '
' → logprob: -7.262490272521973
    7. ':' → logprob: -7.387490272521973
    8. ')
' → logprob: -7.637490272521973
    9. 'def' → logprob: -8.137490272521973
    10. '):' → logprob: -8.137490272521973

Token 1768: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07750669121742249
    2. '#' → logprob: -3.0775067806243896
    3. 'for' → logprob: -4.8275065422058105
    4. 'def' → logprob: -5.2025065422058105
    5. 'distance' → logprob: -5.7025065422058105
    6. ' for' → logprob: -6.0775065422058105
    7. '...' → logprob: -6.5775065422058105
    8. '    
' → logprob: -6.5775065422058105
    9. '       ' → logprob: -6.8275065422058105
    10. '
' → logprob: -7.2025065422058105

Token 1769: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07398650050163269
    2. 'for' → logprob: -3.573986530303955
    3. ' for' → logprob: -4.448986530303955
    4. '#' (adapté à ' #') → logprob: -4.698986530303955
    5. 'distance' → logprob: -5.198986530303955
    6. 'i' → logprob: -6.073986530303955
    7. 'dist' → logprob: -6.573986530303955
    8. ' #' → logprob: -6.698986530303955
    9. '
' → logprob: -6.823986530303955
    10. ')' → logprob: -6.823986530303955

Token 1770: ' Inspir' (ID: 78357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.270973801612854
    2. '#' → logprob: -2.5209736824035645
    3. 'total' → logprob: -2.7709736824035645
    4. 'min' → logprob: -3.5209736824035645
    5. 'cut' → logprob: -3.8959736824035645
    6. 'max' → logprob: -4.6459736824035645
    7. 'best' → logprob: -4.6459736824035645
    8. 'for' → logprob: -5.3959736824035645
    9. 'if' → logprob: -5.7709736824035645
    10. 'res' → logprob: -6.0209736824035645

Token 1771: 'ons' (ID: 1808)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.8722731471061707
    2. '   ' → logprob: -1.3722732067108154
    3. 'ation' → logprob: -1.4972732067108154
    4. 'tion' → logprob: -3.7472732067108154
    5. 'er' → logprob: -4.122272968292236
    6. 'ration' → logprob: -4.247272968292236
    7. '#' → logprob: -4.372272968292236
    8. ''' → logprob: -4.372272968292236
    9. '       ' → logprob: -4.747272968292236
    10. 'ed' → logprob: -5.372272968292236

Token 1772: '-nous' (ID: 71099)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0869649201631546
    2. 'def' → logprob: -3.8369648456573486
    3. ''' → logprob: -3.9619648456573486
    4. '\t' → logprob: -4.836965084075928
    5. '```' → logprob: -5.211965084075928
    6. '(' → logprob: -5.336965084075928
    7. '       ' → logprob: -5.586965084075928
    8. ':' → logprob: -5.711965084075928
    9. '(
' → logprob: -5.836965084075928
    10. 'ation' → logprob: -6.586965084075928

Token 1773: ' directement' (ID: 52317)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07173699140548706
    2. ':' → logprob: -3.571737051010132
    3. '       ' → logprob: -3.696737051010132
    4. '(' → logprob: -5.071736812591553
    5. ' (' → logprob: -6.571736812591553
    6. '    ' → logprob: -7.071736812591553
    7. '           ' → logprob: -7.196736812591553
    8. '                   ' → logprob: -7.321736812591553
    9. '(
' → logprob: -7.446736812591553
    10. ' :' → logprob: -7.571736812591553

Token 1774: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9454728364944458
    2. '   ' → logprob: -1.6954728364944458
    3. '(' → logprob: -2.1954727172851562
    4. 'def' → logprob: -2.3204727172851562
    5. 'for' → logprob: -2.6954727172851562
    6. '(
' → logprob: -3.8204727172851562
    7. '[' → logprob: -3.9454727172851562
    8. '```' → logprob: -4.445472717285156
    9. ' :' → logprob: -4.570472717285156
    10. ' (' → logprob: -4.695472717285156

Token 1775: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.09677016735076904
    2. '#' → logprob: -3.3467702865600586
    3. 'dist' → logprob: -3.4717702865600586
    4. 'l' → logprob: -4.721770286560059
    5. 'le' → logprob: -4.971770286560059
    6. 'len' → logprob: -6.096770286560059
    7. 'les' → logprob: -6.346770286560059
    8. 'A' → logprob: -6.721770286560059
    9. 'the' → logprob: -7.096770286560059
    10. 'b' → logprob: -7.096770286560059

Token 1776: ' méthode' (ID: 71490)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7428773641586304
    2. '#' → logprob: -1.3678773641586304
    3. 'b' → logprob: -1.8678773641586304
    4. 'def' → logprob: -3.11787748336792
    5. 'code' → logprob: -3.49287748336792
    6. 'for' → logprob: -5.24287748336792
    7. 'distance' → logprob: -5.36787748336792
    8. 'problem' → logprob: -5.49287748336792
    9. 'A' → logprob: -5.61787748336792
    10. 'from' → logprob: -6.36787748336792

Token 1777: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027014268562197685
    2. 'for' → logprob: -4.402014255523682
    3. ' for' → logprob: -5.027014255523682
    4. '       ' → logprob: -6.277014255523682
    5. ':' → logprob: -6.527014255523682
    6. '(' → logprob: -7.527014255523682
    7. 'import' → logprob: -7.527014255523682
    8. ':
' → logprob: -7.652014255523682
    9. 'def' → logprob: -7.902014255523682
    10. '#' → logprob: -8.02701473236084

Token 1778: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011402525007724762
    2. 'for' → logprob: -6.261402606964111
    3. ' for' → logprob: -6.636402606964111
    4. 'min' → logprob: -6.886402606964111
    5. '       ' → logprob: -7.261402606964111
    6. 'total' → logprob: -7.386402606964111
    7. '    
' → logprob: -7.511402606964111
    8. 'distance' → logprob: -7.511402606964111
    9. ' min' → logprob: -7.636402606964111
    10. '#' → logprob: -7.636402606964111

Token 1779: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01120779663324356
    2. ' i' → logprob: -5.386207580566406
    3. '(i' → logprob: -6.011207580566406
    4. 'cut' → logprob: -6.886207580566406
    5. ' chaque' → logprob: -7.261207580566406
    6. 'dist' → logprob: -7.886207580566406
    7. 'each' → logprob: -8.386207580566406
    8. 'ar' → logprob: -8.636207580566406
    9. ' (' → logprob: -8.636207580566406
    10. 'arb' → logprob: -8.761207580566406

Token 1780: ' arbre' (ID: 164180)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2354645729064941
    2. '(i' → logprob: -1.3604645729064941
    3. ' (' → logprob: -1.3604645729064941
    4. ' i' → logprob: -1.9854645729064941
    5. 'case' → logprob: -4.110464572906494
    6. ' arbre' → logprob: -4.360464572906494
    7. ' case' → logprob: -4.860464572906494
    8. '(' → logprob: -4.985464572906494
    9. '```' → logprob: -5.735464572906494
    10. '
' → logprob: -6.360464572906494

Token 1781: ' coup' (ID: 25465)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8547683358192444
    2. '<|end|>' → logprob: -1.9797682762145996
    3. ',' → logprob: -2.4797682762145996
    4. ')' → logprob: -2.4797682762145996
    5. '   ' → logprob: -2.4797682762145996
    6. '[' → logprob: -2.6047682762145996
    7. '[i' → logprob: -3.8547682762145996
    8. ' ' → logprob: -4.1047682762146
    9. '<|end|>' → logprob: -5.2297682762146
    10. 'for' → logprob: -5.2297682762146

Token 1782: 'é' (ID: 377)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4117245376110077
    2. 'é' → logprob: -1.78672456741333
    3. 'er' → logprob: -1.78672456741333
    4. '#' → logprob: -6.78672456741333
    5. ')' → logprob: -8.161724090576172
    6. '_' → logprob: -8.536724090576172
    7. '}' → logprob: -9.161724090576172
    8. 'ée' → logprob: -9.161724090576172
    9. '=' → logprob: -9.411724090576172
    10. 'r' → logprob: -9.536724090576172

Token 1783: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1849429607391357
    2. ':' → logprob: -1.8099429607391357
    3. '_' → logprob: -2.0599429607391357
    4. '   ' → logprob: -2.3099429607391357
    5. '_adj' → logprob: -2.8099429607391357
    6. 'adj' → logprob: -3.0599429607391357
    7. ' adjacent' → logprob: -3.3099429607391357
    8. ' :' → logprob: -3.4349429607391357
    9. ' ,' → logprob: -3.5599429607391357
    10. ' ' → logprob: -3.9349429607391357

Token 1784: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8765419125556946
    2. '   ' → logprob: -1.5015418529510498
    3. ' ' → logprob: -2.62654185295105
    4. ' #' → logprob: -3.12654185295105
    5. '<|end|>' → logprob: -3.12654185295105
    6. '    ' → logprob: -3.25154185295105
    7. '"' → logprob: -3.75154185295105
    8. 'for' → logprob: -3.87654185295105
    9. ' for' → logprob: -4.251542091369629
    10. '       ' → logprob: -4.251542091369629

Token 1785: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5435535907745361
    2. 'for' → logprob: -1.7935535907745361
    3. '   ' → logprob: -2.543553590774536
    4. ' on' → logprob: -3.418553590774536
    5. ' for' → logprob: -3.918553590774536
    6. ' #' → logprob: -4.043553352355957
    7. '*' → logprob: -4.043553352355957
    8. 'on' → logprob: -4.418553352355957
    9. 'dist' → logprob: -4.668553352355957
    10. ' ' → logprob: -4.793553352355957

Token 1786: ' temps' (ID: 11160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.390663743019104
    2. 'for' → logprob: -2.0156636238098145
    3. 'temps' → logprob: -3.1406636238098145
    4. 'distance' → logprob: -3.2656636238098145
    5. 'dist' → logprob: -3.8906636238098145
    6. ' on' → logprob: -3.8906636238098145
    7. ' #' → logprob: -4.0156636238098145
    8. ' for' → logprob: -4.2656636238098145
    9. 'on' → logprob: -5.0156636238098145
    10. '   ' → logprob: -5.1406636238098145

Token 1787: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5752850770950317
    2. ' =' → logprob: -0.9502850770950317
    3. ' +=' → logprob: -3.075284957885742
    4. '+=' → logprob: -6.075284957885742
    5. ' ' → logprob: -7.450284957885742
    6. '   ' → logprob: -7.575284957885742
    7. '+' → logprob: -7.825284957885742
    8. '_' → logprob: -8.200284957885742
    9. '    ' → logprob: -8.700284957885742
    10. ')' → logprob: -8.825284957885742

Token 1788: ' (#' (ID: 66375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5174518823623657
    2. ' (' → logprob: -1.7674518823623657
    3. 'dist' → logprob: -2.142451763153076
    4. ' dist' → logprob: -3.142451763153076
    5. '(n' → logprob: -3.267451763153076
    6. '(dist' → logprob: -3.767451763153076
    7. '2' → logprob: -4.892451763153076
    8. 'n' → logprob: -7.142451763153076
    9. '(A' → logprob: -7.517451763153076
    10. '((' → logprob: -8.017452239990234

Token 1789: ' d' (ID: 272)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9231666922569275
    2. 'steps' → logprob: -1.7981667518615723
    3. ')' → logprob: -2.6731667518615723
    4. 'ar' → logprob: -3.2981667518615723
    5. '*' → logprob: -3.4231667518615723
    6. ' steps' → logprob: -3.5481667518615723
    7. 'adj' → logprob: -3.6731667518615723
    8. 'de' → logprob: -3.7981667518615723
    9. ' de' → logprob: -3.7981667518615723
    10. 'distance' → logprob: -3.9231667518615723

Token 1790: ''' (ID: 6)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.531902015209198
    2. ')' → logprob: -2.0319020748138428
    3. ' _' → logprob: -2.5319020748138428
    4. '_' → logprob: -2.6569020748138428
    5. ' )' → logprob: -3.2819020748138428
    6. ' ' → logprob: -3.7819020748138428
    7. ' arbres' → logprob: -4.156901836395264
    8. ' ' → logprob: -4.406901836395264
    9. '*' → logprob: -4.531901836395264
    10. ' espaces' → logprob: -5.281901836395264

Token 1791: 'arb' (ID: 36740)
  Prédit: ' arbres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -1.6525973081588745
    2. 'arb' → logprob: -1.7775973081588745
    3. 'steps' → logprob: -1.9025973081588745
    4. ')' → logprob: -2.027597427368164
    5. 'pas' → logprob: -3.027597427368164
    6. 'adj' → logprob: -3.027597427368164
    7. 'cases' → logprob: -3.152597427368164
    8. ' steps' → logprob: -3.152597427368164
    9. ' ' → logprob: -3.527597427368164
    10. ' )' → logprob: -3.777597427368164

Token 1792: 'res' (ID: 430)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.6639968752861023
    2. 'es' → logprob: -2.163996934890747
    3. 'res' → logprob: -2.163996934890747
    4. 're' → logprob: -2.413996934890747
    5. 'r' → logprob: -3.288996934890747
    6. 'e' → logprob: -3.913996934890747
    7. 'v' → logprob: -4.413996696472168
    8. 'é' → logprob: -4.413996696472168
    9. 'ée' → logprob: -4.538996696472168
    10. 'rees' → logprob: -4.663996696472168

Token 1793: ')' (ID: 8)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11347626894712448
    2. ')' → logprob: -2.363476276397705
    3. ' )' → logprob: -4.988476276397705
    4. '*' → logprob: -5.363476276397705
    5. ' +' → logprob: -7.238476276397705
    6. ')*' → logprob: -8.363475799560547
    7. ' ' → logprob: -8.488475799560547
    8. ')*(' → logprob: -8.738475799560547
    9. '+' → logprob: -9.363475799560547
    10. '*(' → logprob: -9.863475799560547

Token 1794: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04219987988471985
    2. ')' → logprob: -3.5421998500823975
    3. '*' → logprob: -5.667200088500977
    4. ' +' → logprob: -5.917200088500977
    5. '   ' → logprob: -6.542200088500977
    6. ' )' → logprob: -6.792200088500977
    7. ' =' → logprob: -7.167200088500977
    8. ' ' → logprob: -7.292200088500977
    9. '<|end|>' → logprob: -8.167200088500977
    10. '  ' → logprob: -8.792200088500977

Token 1795: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.21710848808288574
    2. '(' → logprob: -1.7171084880828857
    3. ' ((' → logprob: -4.467108726501465
    4. '((' → logprob: -5.717108726501465
    5. '(dist' → logprob: -8.717108726501465
    6. 'dist' → logprob: -9.592108726501465
    7. '(sum' → logprob: -9.592108726501465
    8. '(min' → logprob: -9.842108726501465
    9. '1' → logprob: -9.842108726501465
    10. ' dist' → logprob: -9.842108726501465

Token 1796: 'distance' (ID: 40614)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6159190535545349
    2. ' ' → logprob: -1.2409191131591797
    3. 'dist' → logprob: -2.8659191131591797
    4. ' (' → logprob: -2.9909191131591797
    5. ' dist' → logprob: -3.7409191131591797
    6. '(' → logprob: -3.9909191131591797
    7. '1' → logprob: -4.61591911315918
    8. ')' → logprob: -5.24091911315918
    9. 'distance' → logprob: -6.11591911315918
    10. ' )' → logprob: -6.61591911315918

Token 1797: ' aller' (ID: 18383)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07343116402626038
    2. '_from' → logprob: -3.0734312534332275
    3. ')' → logprob: -4.073431015014648
    4. '*' → logprob: -6.073431015014648
    5. '   ' → logprob: -6.698431015014648
    6. 'from' → logprob: -7.573431015014648
    7. '_to' → logprob: -8.073431015014648
    8. ' _' → logprob: -8.073431015014648
    9. '```' → logprob: -8.073431015014648
    10. ' *' → logprob: -8.073431015014648

Token 1798: '-ret' (ID: 104824)
  Prédit: '_ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ret' → logprob: -0.8053274154663086
    2. '_' → logprob: -0.9303274154663086
    3. '-ret' → logprob: -2.0553274154663086
    4. '-' → logprob: -4.305327415466309
    5. '_return' → logprob: -4.930327415466309
    6. '-_' → logprob: -6.180327415466309
    7. '+' → logprob: -6.305327415466309
    8. '_-' → logprob: -6.555327415466309
    9. '_re' → logprob: -7.055327415466309
    10. ' -' → logprob: -7.055327415466309

Token 1799: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -1.1088440418243408
    2. 'o' → logprob: -1.2338440418243408
    3. 'et' → logprob: -1.2338440418243408
    4. 'out' → logprob: -3.358844041824341
    5. 'ot' → logprob: -3.858844041824341
    6. 'oi' → logprob: -4.983843803405762
    7. 'tour' → logprob: -5.983843803405762
    8. 'etur' → logprob: -6.233843803405762
    9. '_' → logprob: -6.358843803405762
    10. 'oir' → logprob: -6.358843803405762

Token 1800: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07560987770557404
    2. '+' → logprob: -2.9506099224090576
    3. ')' → logprob: -4.0756096839904785
    4. ' )' → logprob: -6.3256096839904785
    5. ')+' → logprob: -7.4506096839904785
    6. ' *' → logprob: -7.8256096839904785
    7. '*' → logprob: -8.200610160827637
    8. '))' → logprob: -8.450610160827637
    9. '   ' → logprob: -9.950610160827637
    10. ')*' → logprob: -10.200610160827637

Token 1801: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05540483817458153
    2. ' ' → logprob: -2.9304049015045166
    3. '3' → logprob: -7.6804046630859375
    4. '1' → logprob: -10.430404663085938
    5. ')' → logprob: -11.055404663085938
    6. '```' → logprob: -12.430404663085938
    7. '   ' → logprob: -12.555404663085938
    8. ' )' → logprob: -13.055404663085938
    9. '  ' → logprob: -14.367904663085938
    10. ' ' → logprob: -14.680404663085938

Token 1802: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -10.000052452087402
    3. '1' → logprob: -13.000052452087402
    4. '```' → logprob: -13.375052452087402
    5. '3' → logprob: -13.875052452087402
    6. 'distance' → logprob: -14.625052452087402
    7. 'import' → logprob: -15.625052452087402
    8. 'dist' → logprob: -15.750052452087402
    9. 'def' → logprob: -15.750052452087402
    10. '
' → logprob: -15.875052452087402

Token 1803: ' min' (ID: 1349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.150260090827942
    2. ' +' → logprob: -1.150260090827942
    3. '+' → logprob: -1.400260090827942
    4. ' )' → logprob: -2.4002599716186523
    5. ' ' → logprob: -4.400259971618652
    6. ')+' → logprob: -5.150259971618652
    7. ' *' → logprob: -5.650259971618652
    8. '*' → logprob: -6.150259971618652
    9. ' ' → logprob: -6.650259971618652
    10. '_' → logprob: -7.150259971618652

Token 1804: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04772181063890457
    2. ' )' → logprob: -3.6727218627929688
    3. '+' → logprob: -4.297721862792969
    4. ' +' → logprob: -5.422721862792969
    5. ')+' → logprob: -6.547721862792969
    6. '=' → logprob: -7.297721862792969
    7. '*' → logprob: -8.547721862792969
    8. ')*' → logprob: -9.172721862792969
    9. ' ' → logprob: -9.297721862792969
    10. ' =' → logprob: -9.422721862792969

Token 1805: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038805726915597916
    2. ' ' → logprob: -3.2888057231903076
    3. ')' → logprob: -8.163805961608887
    4. ' )' → logprob: -8.913805961608887
    5. '0' → logprob: -9.038805961608887
    6. '```' → logprob: -9.413805961608887
    7. '
' → logprob: -10.538805961608887
    8. 'cut' → logprob: -11.038805961608887
    9. ')
' → logprob: -11.663805961608887
    10. '\n' → logprob: -11.851305961608887

Token 1806: ' min' (ID: 1349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35112816095352173
    2. ' )' → logprob: -1.226128101348877
    3. '+' → logprob: -6.851128101348877
    4. ' +' → logprob: -7.226128101348877
    5. '*' → logprob: -9.101128578186035
    6. ')*' → logprob: -9.226128578186035
    7. '))' → logprob: -9.226128578186035
    8. ' *' → logprob: -9.476128578186035
    9. ')))' → logprob: -9.726128578186035
    10. '=' → logprob: -9.726128578186035

Token 1807: ' couper' (ID: 135212)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010139456950128078
    2. ' )' → logprob: -4.635139465332031
    3. ')*' → logprob: -9.385139465332031
    4. '*' → logprob: -10.135139465332031
    5. ')`' → logprob: -10.260139465332031
    6. '))' → logprob: -10.510139465332031
    7. '=' → logprob: -10.635139465332031
    8. ')
' → logprob: -10.760139465332031
    9. '+' → logprob: -10.885139465332031
    10. ' ' → logprob: -11.135139465332031

Token 1808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004630816401913762
    2. ')
' → logprob: -9.125463485717773
    3. ' )' → logprob: -9.375463485717773
    4. '*' → logprob: -9.625463485717773
    5. ')
' → logprob: -9.750463485717773
    6. ')*' → logprob: -10.750463485717773
    7. '+' → logprob: -10.750463485717773
    8. ')`' → logprob: -10.875463485717773
    9. '*)' → logprob: -11.000463485717773
    10. '))' → logprob: -11.250463485717773

Token 1809: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27738139033317566
    2. '   ' → logprob: -2.527381420135498
    3. ':' → logprob: -2.777381420135498
    4. 'def' → logprob: -4.277381420135498
    5. ' ' → logprob: -4.652381420135498
    6. ')
' → logprob: -5.027381420135498
    7. '*' → logprob: -5.027381420135498
    8. '(' → logprob: -5.027381420135498
    9. '+' → logprob: -5.152381420135498
    10. ']' → logprob: -5.402381420135498

Token 1810: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33010342717170715
    2. ':' → logprob: -2.4551033973693848
    3. '):' → logprob: -3.2051033973693848
    4. ')' → logprob: -3.3301033973693848
    5. 'def' → logprob: -3.3301033973693848
    6. ')
' → logprob: -4.080103397369385
    7. '       ' → logprob: -4.580103397369385
    8. '
' → logprob: -4.830103397369385
    9. ' =' → logprob: -5.080103397369385
    10. ' +' → logprob: -5.205103397369385

Token 1811: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1092556044459343
    2. '       ' → logprob: -4.109255790710449
    3. ')' → logprob: -4.234255790710449
    4. ' +' → logprob: -4.234255790710449
    5. ':' → logprob: -4.484255790710449
    6. '+' → logprob: -5.109255790710449
    7. '):' → logprob: -5.109255790710449
    8. '
' → logprob: -5.484255790710449
    9. 'def' → logprob: -5.984255790710449
    10. ')
' → logprob: -5.984255790710449

Token 1812: ' dans' (ID: 2671)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.9222536683082581
    2. 'dist' → logprob: -1.5472536087036133
    3. ' dist' → logprob: -1.9222536087036133
    4. '*' → logprob: -2.9222536087036133
    5. '1' → logprob: -3.6722536087036133
    6. '2' → logprob: -3.9222536087036133
    7. 'for' → logprob: -4.297253608703613
    8. '+' → logprob: -4.297253608703613
    9. '#' → logprob: -4.422253608703613
    10. ' distance' → logprob: -4.547253608703613

Token 1813: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.900402843952179
    2. 'distance' → logprob: -1.7754027843475342
    3. 'la' → logprob: -1.9004027843475342
    4. 'range' → logprob: -2.400402784347534
    5. '#' → logprob: -3.525402784347534
    6. 'le' → logprob: -3.650402784347534
    7. '(' → logprob: -3.900402784347534
    8. 'len' → logprob: -4.150403022766113
    9. ' la' → logprob: -4.150403022766113
    10. 'the' → logprob: -4.400403022766113

Token 1814: ''ensemble' (ID: 79341)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.459052324295044
    2. '#' → logprob: -1.834052324295044
    3. ' code' → logprob: -2.459052324295044
    4. '
' → logprob: -3.084052324295044
    5. 'continue' → logprob: -3.084052324295044
    6. 'range' → logprob: -3.459052324295044
    7. 'distance' → logprob: -3.459052324295044
    8. 'suite' → logprob: -3.584052324295044
    9. 'A' → logprob: -3.709052324295044
    10. ')' → logprob: -3.959052324295044

Token 1815: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.896289587020874
    2. '*' → logprob: -1.521289587020874
    3. '_' → logprob: -2.021289587020874
    4. ' *' → logprob: -3.021289587020874
    5. 'def' → logprob: -3.271289587020874
    6. '   ' → logprob: -3.271289587020874
    7. ':' → logprob: -3.646289587020874
    8. '):' → logprob: -4.646289825439453
    9. '+' → logprob: -4.771289825439453
    10. '#' → logprob: -5.021289825439453

Token 1816: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4948421716690063
    2. ')' → logprob: -1.4948421716690063
    3. '   ' → logprob: -1.7448421716690063
    4. 'for' → logprob: -2.119842052459717
    5. 'distance' → logprob: -2.619842052459717
    6. ' on' → logprob: -2.994842052459717
    7. ' for' → logprob: -3.244842052459717
    8. 'dist' → logprob: -4.494842052459717
    9. ' #' → logprob: -4.619842052459717
    10. ' la' → logprob: -4.744842052459717

Token 1817: ' problème' (ID: 35630)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4556970596313477
    2. '_' → logprob: -1.8306970596313477
    3. '*' → logprob: -2.3306970596313477
    4. 'temps' → logprob: -2.5806970596313477
    5. '(' → logprob: -2.9556970596313477
    6. ' temps' → logprob: -3.0806970596313477
    7. 'distance' → logprob: -3.3306970596313477
    8. '+' → logprob: -3.4556970596313477
    9. 'dist' → logprob: -3.5806970596313477
    10. '#' → logprob: -3.5806970596313477

Token 1818: ' pen' (ID: 6022)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7140690088272095
    2. '   ' → logprob: -1.9640690088272095
    3. ' continues' → logprob: -2.21406888961792
    4. ' =' → logprob: -2.33906888961792
    5. ':' → logprob: -2.33906888961792
    6. '
' → logprob: -2.71406888961792
    7. '=' → logprob: -2.83906888961792
    8. '_' → logprob: -3.21406888961792
    9. '#' → logprob: -3.71406888961792
    10. '[' → logprob: -3.71406888961792

Token 1819: 'che' (ID: 926)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1876601129770279
    2. '#' → logprob: -3.3126602172851562
    3. ')' → logprob: -3.5626602172851562
    4. ''' → logprob: -3.6876602172851562
    5. '```' → logprob: -3.6876602172851562
    6. 's' → logprob: -3.8126602172851562
    7. '+' → logprob: -5.562660217285156
    8. 'u' → logprob: -5.562660217285156
    9. '"' → logprob: -5.687660217285156
    10. ''s' → logprob: -6.062660217285156

Token 1820: ' vers' (ID: 3640)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06120391935110092
    2. ' =' → logprob: -2.936203956604004
    3. ')' → logprob: -5.686203956604004
    4. '```' → logprob: -6.936203956604004
    5. '   ' → logprob: -7.811203956604004
    6. ':' → logprob: -8.186203956604004
    7. '_' → logprob: -8.311203956604004
    8. ' ' → logprob: -8.936203956604004
    9. 's' → logprob: -9.061203956604004
    10. 'def' → logprob: -9.186203956604004

Token 1821: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9355922937393188
    2. '1' → logprob: -1.5605922937393188
    3. 'dist' → logprob: -2.3105921745300293
    4. '(' → logprob: -2.5605921745300293
    5. ' ' → logprob: -2.5605921745300293
    6. ' dist' → logprob: -3.6855921745300293
    7. '   ' → logprob: -3.9355921745300293
    8. ':' → logprob: -4.310592174530029
    9. 'def' → logprob: -4.435592174530029
    10. '0' → logprob: -4.435592174530029

Token 1822: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.36220121383667
    2. ' (' → logprob: -1.48720121383667
    3. '   ' → logprob: -1.73720121383667
    4. '*' → logprob: -2.61220121383667
    5. ' *' → logprob: -2.98720121383667
    6. ')' → logprob: -3.48720121383667
    7. '#' → logprob: -3.61220121383667
    8. ':' → logprob: -4.11220121383667
    9. '(
' → logprob: -4.11220121383667
    10. 'def' → logprob: -4.61220121383667

Token 1823: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5625300407409668
    2. '   ' → logprob: -2.187530040740967
    3. ' *' → logprob: -2.312530040740967
    4. '*' → logprob: -2.312530040740967
    5. ' (' → logprob: -2.312530040740967
    6. ':' → logprob: -2.562530040740967
    7. ')' → logprob: -2.937530040740967
    8. 'for' → logprob: -3.062530040740967
    9. 'def' → logprob: -3.687530040740967
    10. '+' → logprob: -3.937530040740967

Token 1824: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5658639669418335
    2. 'def' → logprob: -1.6908639669418335
    3. '(
' → logprob: -2.315864086151123
    4. 'for' → logprob: -2.440864086151123
    5. '   ' → logprob: -2.815864086151123
    6. ' (' → logprob: -2.815864086151123
    7. '(n' → logprob: -3.315864086151123
    8. '1' → logprob: -3.565864086151123
    9. '*' → logprob: -3.690864086151123
    10. '#' → logprob: -3.690864086151123

Token 1825: ' un' (ID: 537)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.36392325162887573
    2. ' i' → logprob: -1.4889233112335205
    3. 'i' → logprob: -3.1139233112335205
    4. '(i' → logprob: -3.9889233112335205
    5. 'each' → logprob: -5.488923072814941
    6. ' case' → logprob: -5.738923072814941
    7. ' (' → logprob: -5.988923072814941
    8. ' each' → logprob: -6.363923072814941
    9. 'case' → logprob: -6.863923072814941
    10. ' ' → logprob: -7.363923072814941

Token 1826: ' arbre' (ID: 164180)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7743328809738159
    2. ' ' → logprob: -1.524332880973816
    3. 'n' → logprob: -2.1493330001831055
    4. ')' → logprob: -2.6493330001831055
    5. ' arbre' → logprob: -3.1493330001831055
    6. ' case' → logprob: -4.2743330001831055
    7. '_' → logprob: -4.3993330001831055
    8. ' )' → logprob: -4.8993330001831055
    9. 'case' → logprob: -4.8993330001831055
    10. '*' → logprob: -5.1493330001831055

Token 1827: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5478609204292297
    2. ' =' → logprob: -1.922860860824585
    3. '):' → logprob: -2.547860860824585
    4. '=' → logprob: -2.797860860824585
    5. ' :' → logprob: -2.922860860824585
    6. ' *' → logprob: -3.922860860824585
    7. ')' → logprob: -4.172861099243164
    8. '   ' → logprob: -4.297861099243164
    9. '*' → logprob: -4.422861099243164
    10. ' ' → logprob: -5.422861099243164

Token 1828: ' position' (ID: 4010)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7453787326812744
    2. '*' → logprob: -1.7453787326812744
    3. '(n' → logprob: -2.7453787326812744
    4. 'temps' → logprob: -2.7453787326812744
    5. 'for' → logprob: -2.8703787326812744
    6. 's' → logprob: -3.1203787326812744
    7. ' ' → logprob: -3.4953787326812744
    8. 'case' → logprob: -3.6203787326812744
    9. 'distance' → logprob: -3.6203787326812744
    10. '*(' → logprob: -4.120378494262695

Token 1829: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8192362785339355
    2. ' ,' → logprob: -1.5692362785339355
    3. ',' → logprob: -2.4442362785339355
    4. '(i' → logprob: -2.5692362785339355
    5. ')' → logprob: -2.6942362785339355
    6. '(' → logprob: -4.0692362785339355
    7. '   ' → logprob: -4.3192362785339355
    8. ' ' → logprob: -4.4442362785339355
    9. ' )' → logprob: -4.4442362785339355
    10. '[' → logprob: -4.5692362785339355

Token 1830: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0796218067407608
    2. ',' → logprob: -2.7046217918395996
    3. ')' → logprob: -5.5796217918396
    4. ',i' → logprob: -5.5796217918396
    5. '),' → logprob: -7.3296217918396
    6. ' ,' → logprob: -7.4546217918396
    7. ' i' → logprob: -7.7046217918396
    8. ')i' → logprob: -9.204622268676758
    9. '(i' → logprob: -9.704622268676758
    10. '
' → logprob: -10.079622268676758

Token 1831: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.018158959224820137
    2. ',' → logprob: -4.018158912658691
    3. ' ,' → logprob: -12.643158912658691
    4. ',n' → logprob: -13.018158912658691
    5. ',i' → logprob: -13.393158912658691
    6. '   ' → logprob: -14.643158912658691
    7. ',d' → logprob: -15.393158912658691
    8. ',
' → logprob: -15.518158912658691
    9. ')' → logprob: -15.768158912658691
    10. '
' → logprob: -15.893158912658691

Token 1832: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8257789015769958
    2. '):' → logprob: -0.9507789015769958
    3. '):
' → logprob: -1.8257789611816406
    4. '),' → logprob: -5.200778961181641
    5. ',' → logprob: -6.075778961181641
    6. ')+' → logprob: -6.325778961181641
    7. ')
' → logprob: -6.450778961181641
    8. '+' → logprob: -7.075778961181641
    9. ')*' → logprob: -7.575778961181641
    10. '   ' → logprob: -7.575778961181641

Token 1833: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12273087352514267
    2. '       ' → logprob: -3.2477309703826904
    3. '#' → logprob: -3.4977309703826904
    4. ' (' → logprob: -4.497730731964111
    5. ' #' → logprob: -5.122730731964111
    6. ':' → logprob: -5.622730731964111
    7. ' *' → logprob: -5.872730731964111
    8. '                   ' → logprob: -6.372730731964111
    9. ' for' → logprob: -6.372730731964111
    10. '    ' → logprob: -6.372730731964111

Token 1834: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5691500902175903
    2. '#' (adapté à ' #') → logprob: -1.0691500902175903
    3. '       ' → logprob: -3.694149971008301
    4. ' #' → logprob: -4.069149971008301
    5. 'for' → logprob: -4.319149971008301
    6. '                   ' → logprob: -5.069149971008301
    7. ' for' → logprob: -5.319149971008301
    8. ':' → logprob: -5.444149971008301
    9. 'def' → logprob: -5.444149971008301
    10. '               ' → logprob: -6.319149971008301

Token 1835: ' t' (ID: 260)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0913350582122803
    2. '   ' → logprob: -1.3413350582122803
    3. 'distance' → logprob: -1.7163350582122803
    4. 'min' → logprob: -2.5913350582122803
    5. 'def' → logprob: -3.7163350582122803
    6. 'dist' → logprob: -3.9663350582122803
    7. 'temps' → logprob: -3.9663350582122803
    8. 'for' → logprob: -4.216335296630859
    9. 'adj' → logprob: -4.466335296630859
    10. 'possible' → logprob: -4.591335296630859

Token 1836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28084197640419006
    2. ' =' → logprob: -1.5308419466018677
    3. 'emps' → logprob: -4.155841827392578
    4. 'ime' → logprob: -4.530841827392578
    5. 'imes' → logprob: -7.155841827392578
    6. 'empo' → logprob: -7.530841827392578
    7. 'emp' → logprob: -7.655841827392578
    8. '   ' → logprob: -10.280841827392578
    9. 'i' → logprob: -10.280841827392578
    10. ' ' → logprob: -10.405841827392578

Token 1837: ' nombre' (ID: 9733)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1991193294525146
    2. '2' → logprob: -1.5741193294525146
    3. 'dist' → logprob: -1.5741193294525146
    4. 'min' → logprob: -2.6991193294525146
    5. ' dist' → logprob: -2.6991193294525146
    6. ' (' → logprob: -3.0741193294525146
    7. 'A' → logprob: -3.9491193294525146
    8. 'n' → logprob: -4.074119567871094
    9. '(n' → logprob: -4.199119567871094
    10. ' min' → logprob: -4.324119567871094

Token 1838: '_ar' (ID: 54153)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6450867056846619
    2. ' *' → logprob: -1.5200867652893066
    3. '*' → logprob: -1.7700867652893066
    4. ')' → logprob: -3.8950867652893066
    5. '   ' → logprob: -4.270086765289307
    6. ' ' → logprob: -4.645086765289307
    7. ' _' → logprob: -4.895086765289307
    8. ' de' → logprob: -5.020086765289307
    9. 's' → logprob: -5.645086765289307
    10. '  ' → logprob: -5.895086765289307

Token 1839: 'bre' (ID: 9945)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.187987208366394
    2. '_' → logprob: -1.687987208366394
    3. 's' → logprob: -1.937987208366394
    4. '*' → logprob: -2.3129873275756836
    5. 'rees' → logprob: -2.4379873275756836
    6. '_t' → logprob: -3.0629873275756836
    7. '\' → logprob: -3.6879873275756836
    8. 'e' → logprob: -4.187987327575684
    9. ' *' → logprob: -4.812987327575684
    10. '   ' → logprob: -5.062987327575684

Token 1840: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.27385061979293823
    2. 's' → logprob: -1.523850679397583
    3. '*' → logprob: -4.523850440979004
    4. ' =' → logprob: -5.148850440979004
    5. '=' → logprob: -6.398850440979004
    6. ')' → logprob: -6.523850440979004
    7. '*(' → logprob: -7.523850440979004
    8. '   ' → logprob: -8.648850440979004
    9. '(s' → logprob: -8.898850440979004
    10. '_' → logprob: -8.898850440979004

Token 1841: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28876033425331116
    2. ' (' → logprob: -1.4137603044509888
    3. '((' → logprob: -5.788760185241699
    4. '(dist' → logprob: -6.288760185241699
    5. ' ((' → logprob: -6.663760185241699
    6. '(min' → logprob: -7.163760185241699
    7. '(distance' → logprob: -8.4137601852417
    8. 'min' → logprob: -8.9137601852417
    9. 'dist' → logprob: -9.5387601852417
    10. ' min' → logprob: -10.0387601852417

Token 1842: 'distance' (ID: 40614)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1428704708814621
    2. ' ' → logprob: -3.0178704261779785
    3. '(' → logprob: -3.1428704261779785
    4. ' (' → logprob: -3.5178704261779785
    5. 'dist' → logprob: -5.0178704261779785
    6. ' dist' → logprob: -6.0178704261779785
    7. '1' → logprob: -7.5178704261779785
    8. '(dist' → logprob: -7.6428704261779785
    9. '   ' → logprob: -7.7678704261779785
    10. ')' → logprob: -8.767870903015137

Token 1843: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0356871522963047
    2. ' _' → logprob: -3.785687208175659
    3. ')' → logprob: -5.41068696975708
    4. '   ' → logprob: -5.66068696975708
    5. '_from' → logprob: -6.66068696975708
    6. ' ' → logprob: -7.53568696975708
    7. ' *' → logprob: -7.91068696975708
    8. '*' → logprob: -7.91068696975708
    9. '[' → logprob: -8.160687446594238
    10. ')_' → logprob: -8.785687446594238

Token 1844: 'aller' (ID: 11605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7074183225631714
    2. ')' → logprob: -1.9574183225631714
    3. ' *' → logprob: -2.832418441772461
    4. '*' → logprob: -2.957418441772461
    5. ' _' → logprob: -3.207418441772461
    6. 'aller' → logprob: -3.457418441772461
    7. '(i' → logprob: -3.582418441772461
    8. ' ' → logprob: -3.582418441772461
    9. '   ' → logprob: -3.832418441772461
    10. '_from' → logprob: -3.957418441772461

Token 1845: '-ret' (ID: 104824)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18563370406627655
    2. '_ret' → logprob: -2.435633659362793
    3. ' _' → logprob: -3.185633659362793
    4. '*' → logprob: -3.560633659362793
    5. ' *' → logprob: -5.185633659362793
    6. '*_' → logprob: -6.685633659362793
    7. ')' → logprob: -7.060633659362793
    8. '```' → logprob: -7.185633659362793
    9. '_re' → logprob: -7.560633659362793
    10. '   ' → logprob: -7.685633659362793

Token 1846: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0006764543941244483
    2. 'o' → logprob: -7.87567663192749
    3. 'tour' → logprob: -9.625676155090332
    4. '_' → logprob: -9.750676155090332
    5. 'ou' → logprob: -9.875676155090332
    6. 'ro' → logprob: -10.375676155090332
    7. 'et' → logprob: -10.875676155090332
    8. 'ot' → logprob: -11.875676155090332
    9. '0' → logprob: -12.000676155090332
    10. 'out' → logprob: -12.375676155090332

Token 1847: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8072499632835388
    2. ' +' → logprob: -1.0572500228881836
    3. '*' → logprob: -2.0572500228881836
    4. '+' → logprob: -2.8072500228881836
    5. ')' → logprob: -4.182250022888184
    6. ')*' → logprob: -6.557250022888184
    7. ' )' → logprob: -7.807250022888184
    8. '   ' → logprob: -7.932250022888184
    9. ')+' → logprob: -8.307250022888184
    10. ' ' → logprob: -8.807250022888184

Token 1848: ' temps' (ID: 11160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08046415448188782
    2. ' ' → logprob: -2.5804641246795654
    3. '2' → logprob: -6.7054643630981445
    4. '0' → logprob: -8.455464363098145
    5. ')' → logprob: -9.705464363098145
    6. 'distance' → logprob: -10.955464363098145
    7. ' )' → logprob: -11.580464363098145
    8. '   ' → logprob: -11.955464363098145
    9. '```' → logprob: -11.955464363098145
    10. ' distance' → logprob: -12.080464363098145

Token 1849: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.07391442358493805
    2. ')' → logprob: -3.4489145278930664
    3. ' de' → logprob: -4.073914527893066
    4. '_de' → logprob: -4.823914527893066
    5. ' _' → logprob: -5.448914527893066
    6. '_cut' → logprob: -5.948914527893066
    7. 'de' → logprob: -6.073914527893066
    8. 'cou' → logprob: -6.698914527893066
    9. ' couper' → logprob: -7.448914527893066
    10. ' )' → logprob: -7.573914527893066

Token 1850: 'oupe' (ID: 139976)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.0579969622194767
    2. 'oupe' → logprob: -3.807996988296509
    3. 'oup' → logprob: -4.43299674987793
    4. 'ut' → logprob: -4.68299674987793
    5. 'o' → logprob: -4.93299674987793
    6. 'uter' → logprob: -6.93299674987793
    7. 'utter' → logprob: -7.43299674987793
    8. 'out' → logprob: -7.93299674987793
    9. '
' → logprob: -8.05799674987793
    10. 'ouple' → logprob: -8.30799674987793

Token 1851: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00641360878944397
    2. ' )' → logprob: -6.381413459777832
    3. ')
' → logprob: -6.756413459777832
    4. '*' → logprob: -7.381413459777832
    5. '_' → logprob: -7.756413459777832
    6. ')*' → logprob: -8.006413459777832
    7. '+' → logprob: -8.131413459777832
    8. '   ' → logprob: -8.256413459777832
    9. ' *' → logprob: -8.756413459777832
    10. ')`' → logprob: -8.881413459777832

Token 1852: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6670809984207153
    2. '   ' → logprob: -1.6670809984207153
    3. ')' → logprob: -1.7920809984207153
    4. '):' → logprob: -3.042080879211426
    5. '[' → logprob: -4.417080879211426
    6. ')
' → logprob: -4.792080879211426
    7. ':
' → logprob: -5.292080879211426
    8. '[i' → logprob: -5.292080879211426
    9. ' =' → logprob: -5.417080879211426
    10. ' ' → logprob: -5.542080879211426

Token 1853: ' n' (ID: 297)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1130762100219727
    2. ' dist' → logprob: -1.3630762100219727
    3. '(' → logprob: -1.6130762100219727
    4. '2' → logprob: -2.3630762100219727
    5. 'dist' → logprob: -2.6130762100219727
    6. '(dist' → logprob: -4.363076210021973
    7. ' ' → logprob: -4.613076210021973
    8. '(n' → logprob: -5.238076210021973
    9. ' A' → logprob: -5.363076210021973
    10. 'A' → logprob: -5.363076210021973

Token 1854: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014274331741034985
    2. '*' → logprob: -4.2642741203308105
    3. ')' → logprob: -10.014274597167969
    4. ' ' → logprob: -11.264274597167969
    5. ' ' → logprob: -11.389274597167969
    6. '   ' → logprob: -11.639274597167969
    7. '=' → logprob: -11.764274597167969
    8. '*(' → logprob: -11.764274597167969
    9. ' =' → logprob: -12.514274597167969
    10. '_' → logprob: -13.139274597167969

Token 1855: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06598130613565445
    2. ' (' → logprob: -2.940981388092041
    3. '((' → logprob: -4.565981388092041
    4. ' ((' → logprob: -7.690981388092041
    5. '(dist' → logprob: -9.190980911254883
    6. '(distance' → logprob: -10.690980911254883
    7. '(int' → logprob: -11.440980911254883
    8. '   ' → logprob: -11.940980911254883
    9. '(n' → logprob: -12.190980911254883
    10. '2' → logprob: -12.190980911254883

Token 1856: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1997283399105072
    2. ' ' → logprob: -2.57472825050354
    3. ' dist' → logprob: -3.44972825050354
    4. 'dist' → logprob: -3.57472825050354
    5. '(' → logprob: -3.82472825050354
    6. ' (' → logprob: -3.82472825050354
    7. '(dist' → logprob: -7.324728488922119
    8. '1' → logprob: -7.699728488922119
    9. 'distance' → logprob: -9.824728012084961
    10. '   ' → logprob: -9.824728012084961

Token 1857: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10020990669727325
    2. '*' → logprob: -2.350209951400757
    3. ')' → logprob: -13.725210189819336
    4. ' ' → logprob: -13.725210189819336
    5. ' ' → logprob: -15.225210189819336
    6. ' **' → logprob: -15.725210189819336
    7. '**' → logprob: -15.975210189819336
    8. '*)' → logprob: -15.975210189819336
    9. '*object' → logprob: -15.975210189819336
    10. '*(' → logprob: -16.225210189819336

Token 1858: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2027716338634491
    2. ' dist' → logprob: -1.7027716636657715
    3. 'distance' → logprob: -7.2027716636657715
    4. '(dist' → logprob: -7.8277716636657715
    5. ' (' → logprob: -9.077771186828613
    6. ' distance' → logprob: -9.452771186828613
    7. 'min' → logprob: -12.077771186828613
    8. ' min' → logprob: -12.202771186828613
    9. ' ' → logprob: -13.327771186828613
    10. '	dist' → logprob: -13.452771186828613

Token 1859: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2676207423210144
    2. '+' → logprob: -2.142620801925659
    3. '_from' → logprob: -2.767620801925659
    4. ')' → logprob: -3.267620801925659
    5. ')+' → logprob: -5.26762056350708
    6. '_' → logprob: -5.51762056350708
    7. ' )' → logprob: -6.01762056350708
    8. 'from' → logprob: -6.26762056350708
    9. '_ar' → logprob: -7.39262056350708
    10. '   ' → logprob: -7.76762056350708

Token 1860: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0059836627915501595
    2. ' ' → logprob: -5.130983829498291
    3. '0' → logprob: -9.880983352661133
    4. ')' → logprob: -13.255983352661133
    5. '2' → logprob: -14.130983352661133
    6. '```' → logprob: -14.380983352661133
    7. '   ' → logprob: -15.505983352661133
    8. ' )' → logprob: -16.068483352661133
    9. ' ' → logprob: -16.068483352661133
    10. '`' → logprob: -16.380983352661133

Token 1861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036026788875460625
    2. ' ' → logprob: -5.628602504730225
    3. ')' → logprob: -13.253602981567383
    4. ' )' → logprob: -15.378602981567383
    5. '```' → logprob: -15.628602981567383
    6. '0' → logprob: -16.128602981567383
    7. ' ' → logprob: -16.628602981567383
    8. '`' → logprob: -16.753602981567383
    9. 'space' → logprob: -17.503602981567383
    10. '2' → logprob: -17.628602981567383

Token 1862: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018768629524856806
    2. ')
' → logprob: -9.625187873840332
    3. '+' → logprob: -10.375187873840332
    4. '   ' → logprob: -10.625187873840332
    5. ')
' → logprob: -11.375187873840332
    6. '```' → logprob: -11.375187873840332
    7. ' )' → logprob: -11.750187873840332
    8. ')`' → logprob: -12.000187873840332
    9. '*' → logprob: -12.500187873840332
    10. '**' → logprob: -12.625187873840332

Token 1863: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04440672695636749
    2. '
' → logprob: -4.169406890869141
    3. ')' → logprob: -4.669406890869141
    4. ':' → logprob: -5.169406890869141
    5. ')
' → logprob: -5.294406890869141
    6. '       ' → logprob: -6.169406890869141
    7. 'def' → logprob: -7.044406890869141
    8. '    
' → logprob: -7.169406890869141
    9. '):' → logprob: -7.294406890869141
    10. ':
' → logprob: -7.419406890869141

Token 1864: ' #
' (ID: 21888)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7135995626449585
    2. ')' → logprob: -1.3385995626449585
    3. '   ' → logprob: -1.8385995626449585
    4. '+' → logprob: -4.213599681854248
    5. '):' → logprob: -4.338599681854248
    6. '*' → logprob: -4.463599681854248
    7. ':
' → logprob: -4.838599681854248
    8. '(' → logprob: -4.838599681854248
    9. ')
' → logprob: -4.838599681854248
    10. ',' → logprob: -5.463599681854248

Token 1865: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009216328151524067
    2. 'def' → logprob: -5.88421630859375
    3. '
' → logprob: -6.13421630859375
    4. 'import' → logprob: -6.63421630859375
    5. ')' → logprob: -7.63421630859375
    6. '#' → logprob: -7.63421630859375
    7. '    
' → logprob: -7.63421630859375
    8. ':' → logprob: -7.88421630859375
    9. 'for' → logprob: -8.50921630859375
    10. '       ' → logprob: -9.38421630859375

Token 1866: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07482472062110901
    2. '#' (adapté à ' #') → logprob: -3.449824810028076
    3. 'total' → logprob: -4.199824810028076
    4. 'for' → logprob: -4.574824810028076
    5. '
' → logprob: -6.199824810028076
    6. 'def' → logprob: -6.324824810028076
    7. 'min' → logprob: -6.574824810028076
    8. '    
' → logprob: -6.699824810028076
    9. 'max' → logprob: -6.824824810028076
    10. 'result' → logprob: -6.824824810028076

Token 1867: ' Mais' (ID: 13880)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.9176819324493408
    2. '   ' → logprob: -1.5426819324493408
    3. '#' → logprob: -2.042681932449341
    4. 'total' → logprob: -2.292681932449341
    5. 'best' → logprob: -2.542681932449341
    6. 'for' → logprob: -3.792681932449341
    7. 'max' → logprob: -4.542681694030762
    8. 'cut' → logprob: -4.667681694030762
    9. 'result' → logprob: -5.042681694030762
    10. 'minimal' → logprob: -5.292681694030762

Token 1868: ' dans' (ID: 2671)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2826389074325562
    2. '   ' → logprob: -1.4076389074325562
    3. '(
' → logprob: -2.5326390266418457
    4. ':' → logprob: -2.9076390266418457
    5. '(' → logprob: -2.9076390266418457
    6. ')' → logprob: -3.0326390266418457
    7. 'for' → logprob: -3.2826390266418457
    8. ' (' → logprob: -3.4076390266418457
    9. 'distance' → logprob: -3.7826390266418457
    10. ' ' → logprob: -4.157639026641846

Token 1869: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8534354567527771
    2. 'dist' → logprob: -1.6034355163574219
    3. ' dist' → logprob: -2.603435516357422
    4. ' (' → logprob: -3.103435516357422
    5. 'the' → logprob: -3.478435516357422
    6. ')' → logprob: -3.603435516357422
    7. ' the' → logprob: -3.728435516357422
    8. 'la' → logprob: -3.978435516357422
    9. '   ' → logprob: -4.103435516357422
    10. '#' → logprob: -4.103435516357422

Token 1870: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32957881689071655
    2. ' code' → logprob: -2.5795788764953613
    3. '
' → logprob: -3.3295788764953613
    4. 'é' → logprob: -3.9545788764953613
    5. 'code' → logprob: -4.079578876495361
    6. ''' → logprob: -4.454578876495361
    7. ''ex' → logprob: -4.579578876495361
    8. 'def' → logprob: -4.704578876495361
    9. 'A' → logprob: -4.704578876495361
    10. '_code' → logprob: -4.954578876495361

Token 1871: 'emple' (ID: 55259)
  Prédit: 'cerpt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cerpt' → logprob: -0.11669403314590454
    2. '_' → logprob: -2.7416939735412598
    3. 'planation' → logprob: -3.8666939735412598
    4. ')' → logprob: -4.99169397354126
    5. 'ample' → logprob: -5.36669397354126
    6. 'cept' → logprob: -6.49169397354126
    7. 'pected' → logprob: -6.74169397354126
    8. 'p' → logprob: -6.86669397354126
    9. '_
' → logprob: -6.86669397354126
    10. '#' → logprob: -6.86669397354126

Token 1872: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7162647247314453
    2. '   ' → logprob: -0.9662647247314453
    3. '):' → logprob: -2.8412647247314453
    4. ' :' → logprob: -3.8412647247314453
    5. ':
' → logprob: -4.341264724731445
    6. ',' → logprob: -4.966264724731445
    7. ')' → logprob: -4.966264724731445
    8. ' :
' → logprob: -6.091264724731445
    9. '[' → logprob: -6.341264724731445
    10. 'for' → logprob: -6.466264724731445

Token 1873: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8343023061752319
    2. '   ' → logprob: -1.209302306175232
    3. ')' → logprob: -2.0843024253845215
    4. 'for' → logprob: -3.3343024253845215
    5. ':' → logprob: -3.4593024253845215
    6. ' for' → logprob: -3.7093024253845215
    7. ' #' → logprob: -4.7093024253845215
    8. '):' → logprob: -5.4593024253845215
    9. '...' → logprob: -5.7093024253845215
    10. '.' → logprob: -5.9593024253845215

Token 1874: ' lit' (ID: 11980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.346269816160202
    2. '#' → logprob: -2.4712698459625244
    3. ']' → logprob: -2.9712698459625244
    4. '[i' → logprob: -3.0962698459625244
    5. ')' → logprob: -3.4712698459625244
    6. 'def' → logprob: -4.221269607543945
    7. ':' → logprob: -4.721269607543945
    8. '_' → logprob: -4.971269607543945
    9. ' continue' → logprob: -5.471269607543945
    10. '=' → logprob: -5.471269607543945

Token 1875: ' plutôt' (ID: 40017)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3168151378631592
    2. '(' → logprob: -1.9418151378631592
    3. '   ' → logprob: -1.9418151378631592
    4. ' (' → logprob: -2.191815137863159
    5. ':' → logprob: -2.441815137863159
    6. ' ' → logprob: -3.441815137863159
    7. '=' → logprob: -3.941815137863159
    8. '(
' → logprob: -3.941815137863159
    9. ' )' → logprob: -4.441815376281738
    10. '*' → logprob: -4.441815376281738

Token 1876: ' :
' (ID: 10039)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.7043592929840088
    2. ' (' → logprob: -2.329359292984009
    3. 'dist' → logprob: -2.454359292984009
    4. ' que' → logprob: -2.829359292984009
    5. ' dist' → logprob: -3.204359292984009
    6. '2' → logprob: -3.704359292984009
    7. 'n' → logprob: -3.954359292984009
    8. '(' → logprob: -3.954359292984009
    9. '```' → logprob: -4.07935905456543
    10. ' ' → logprob: -4.20435905456543

Token 1877: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6202024221420288
    2. '#' → logprob: -1.4952024221420288
    3. 'for' → logprob: -2.6202025413513184
    4. ')' → logprob: -2.9952025413513184
    5. '(' → logprob: -3.3702025413513184
    6. '(
' → logprob: -4.245202541351318
    7. 'def' → logprob: -4.495202541351318
    8. ' for' → logprob: -4.870202541351318
    9. ' (' → logprob: -4.870202541351318
    10. ':' → logprob: -5.370202541351318

Token 1878: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.0851328372955322
    2. '(' → logprob: -1.3351328372955322
    3. '   ' → logprob: -1.5851328372955322
    4. ')' → logprob: -3.0851328372955322
    5. ' (' → logprob: -3.5851328372955322
    6. 'def' → logprob: -3.7101328372955322
    7. 'for' → logprob: -3.7101328372955322
    8. '(n' → logprob: -4.460132598876953
    9. '(
' → logprob: -4.585132598876953
    10. ':' → logprob: -5.210132598876953

Token 1879: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.665917158126831
    2. '   ' → logprob: -2.165917158126831
    3. 'for' → logprob: -2.165917158126831
    4. '(' → logprob: -2.540917158126831
    5. 'distance' → logprob: -3.040917158126831
    6. '(
' → logprob: -3.540917158126831
    7. ')' → logprob: -3.790917158126831
    8. 'def' → logprob: -4.41591739654541
    9. 'n' → logprob: -4.66591739654541
    10. '(n' → logprob: -4.79091739654541

Token 1880: ' temps' (ID: 11160)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.9608730673789978
    2. ' temps' → logprob: -2.2108731269836426
    3. 'distance' → logprob: -2.2108731269836426
    4. '=' → logprob: -2.5858731269836426
    5. ' =' → logprob: -2.7108731269836426
    6. '#' → logprob: -2.8358731269836426
    7. '_' → logprob: -3.3358731269836426
    8. 'time' → logprob: -3.9608731269836426
    9. '_distance' → logprob: -4.335873126983643
    10. ' ' → logprob: -4.335873126983643

Token 1881: ' compte' (ID: 19657)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3392263948917389
    2. ' =' → logprob: -1.3392263650894165
    3. ' +=' → logprob: -4.839226245880127
    4. '_' → logprob: -5.589226245880127
    5. '   ' → logprob: -5.714226245880127
    6. ')' → logprob: -5.964226245880127
    7. 'for' → logprob: -6.464226245880127
    8. '+=' → logprob: -6.714226245880127
    9. 'pour' → logprob: -6.964226245880127
    10. ' pour' → logprob: -7.089226245880127

Token 1882: ' chaque' (ID: 21194)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12977276742458344
    2. ' =' → logprob: -2.879772663116455
    3. ')' → logprob: -3.504772663116455
    4. 's' → logprob: -4.879772663116455
    5. '   ' → logprob: -5.254772663116455
    6. ':' → logprob: -5.379772663116455
    7. 'def' → logprob: -5.879772663116455
    8. 'for' → logprob: -6.004772663116455
    9. '<|end|>' → logprob: -6.254772663116455
    10. 'import' → logprob: -6.379772663116455

Token 1883: ' déplacement' (ID: 138449)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06302158534526825
    2. ' _' → logprob: -3.813021659851074
    3. ')' → logprob: -4.313021659851074
    4. '\' → logprob: -5.313021659851074
    5. ' \' → logprob: -5.813021659851074
    6. '\n' → logprob: -6.063021659851074
    7. ' ' → logprob: -6.063021659851074
    8. '_\' → logprob: -6.938021659851074
    9. '+' → logprob: -7.063021659851074
    10. ' =' → logprob: -7.438021659851074

Token 1884: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6288275122642517
    2. ':' → logprob: -1.2538275718688965
    3. ':
' → logprob: -3.6288275718688965
    4. '
' → logprob: -3.6288275718688965
    5. 'def' → logprob: -4.0038275718688965
    6. ')' → logprob: -4.1288275718688965
    7. ' =' → logprob: -4.1288275718688965
    8. ' :' → logprob: -5.1288275718688965
    9. 'for' → logprob: -5.1288275718688965
    10. '#' → logprob: -5.2538275718688965

Token 1885: ' case' (ID: 1890)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1117429733276367
    2. 'case' → logprob: -1.1117429733276367
    3. 'la' → logprob: -3.1117429733276367
    4. 'le' → logprob: -3.2367429733276367
    5. 'l' → logprob: -3.3617429733276367
    6. 'un' → logprob: -3.4867429733276367
    7. 'cases' → logprob: -3.4867429733276367
    8. ' une' → logprob: -3.6117429733276367
    9. '```' → logprob: -3.6117429733276367
    10. ' la' → logprob: -3.7367429733276367

Token 1886: ' vide' (ID: 21835)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15548327565193176
    2. ':' → logprob: -3.0304832458496094
    3. '       ' → logprob: -4.030483245849609
    4. ')' → logprob: -5.030483245849609
    5. ' :' → logprob: -5.155483245849609
    6. ':
' → logprob: -5.155483245849609
    7. '
' → logprob: -5.280483245849609
    8. '):' → logprob: -5.530483245849609
    9. 'def' → logprob: -5.655483245849609
    10. ' =' → logprob: -5.655483245849609

Token 1887: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3077467679977417
    2. ':' → logprob: -1.6827467679977417
    3. ':
' → logprob: -3.9327468872070312
    4. '):' → logprob: -4.557746887207031
    5. ')' → logprob: -4.682746887207031
    6. '       ' → logprob: -4.807746887207031
    7. '.' → logprob: -5.932746887207031
    8. 'def' → logprob: -6.057746887207031
    9. ' :' → logprob: -6.057746887207031
    10. '
' → logprob: -6.057746887207031

Token 1888: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0291714146733284
    2. ' ' → logprob: -3.9041714668273926
    3. 'une' → logprob: -5.779171466827393
    4. '```' → logprob: -6.654171466827393
    5. '+' → logprob: -6.779171466827393
    6. ' une' → logprob: -7.404171466827393
    7. '   ' → logprob: -7.904171466827393
    8. 'un' → logprob: -7.904171466827393
    9. ' +' → logprob: -8.154170989990234
    10. ' un' → logprob: -8.154170989990234

Token 1889: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0084972083568573
    2. '```' → logprob: -5.63349723815918
    3. 'une' → logprob: -6.75849723815918
    4. ' ' → logprob: -6.75849723815918
    5. '`' → logprob: -7.88349723815918
    6. 'un' → logprob: -8.25849723815918
    7. ')' → logprob: -8.38349723815918
    8. '.' → logprob: -8.63349723815918
    9. '   ' → logprob: -8.88349723815918
    10. ''' → logprob: -9.00849723815918

Token 1890: ' minute' (ID: 12434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06632239371538162
    2. ')' → logprob: -4.441322326660156
    3. '       ' → logprob: -4.441322326660156
    4. ':' → logprob: -4.691322326660156
    5. '    
' → logprob: -4.941322326660156
    6. '
' → logprob: -5.191322326660156
    7. '):' → logprob: -5.816322326660156
    8. ')
' → logprob: -6.191322326660156
    9. ':
' → logprob: -6.441322326660156
    10. ' 
' → logprob: -6.566322326660156

Token 1891: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2499484419822693
    2. ':' → logprob: -1.874948501586914
    3. 'def' → logprob: -3.874948501586914
    4. ':
' → logprob: -4.499948501586914
    5. '):' → logprob: -4.999948501586914
    6. '
' → logprob: -5.249948501586914
    7. ')' → logprob: -5.499948501586914
    8. '    
' → logprob: -6.124948501586914
    9. '       ' → logprob: -6.374948501586914
    10. ' if' → logprob: -6.499948501586914

Token 1892: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6888734102249146
    2. '   ' → logprob: -1.8138734102249146
    3. ')' → logprob: -2.063873291015625
    4. '[' → logprob: -2.438873291015625
    5. ':
' → logprob: -3.688873291015625
    6. ')
' → logprob: -3.688873291015625
    7. '[
' → logprob: -4.563873291015625
    8. '):' → logprob: -4.688873291015625
    9. '\n' → logprob: -4.938873291015625
    10. '\' → logprob: -5.438873291015625

Token 1893: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15269561111927032
    2. ')' → logprob: -2.527695655822754
    3. ':' → logprob: -3.777695655822754
    4. 'def' → logprob: -5.152695655822754
    5. '):' → logprob: -5.152695655822754
    6. ')
' → logprob: -5.777695655822754
    7. '
' → logprob: -5.902695655822754
    8. ',' → logprob: -6.152695655822754
    9. '       ' → logprob: -6.402695655822754
    10. ' =' → logprob: -6.527695655822754

Token 1894: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25157874822616577
    2. ')' → logprob: -3.0015788078308105
    3. ')
' → logprob: -3.3765788078308105
    4. '
' → logprob: -4.2515788078308105
    5. ' +' → logprob: -4.3765788078308105
    6. ':' → logprob: -4.7515788078308105
    7. 'for' → logprob: -4.7515788078308105
    8. '       ' → logprob: -5.0015788078308105
    9. '(
' → logprob: -5.0015788078308105
    10. '+' → logprob: -5.1265788078308105

Token 1895: ' couper' (ID: 135212)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.26246729493141174
    2. 'le' → logprob: -2.012467384338379
    3. '   ' → logprob: -3.512467384338379
    4. 'la' → logprob: -3.887467384338379
    5. 'les' → logprob: -4.512467384338379
    6. 'l' → logprob: -5.262467384338379
    7. 'for' → logprob: -5.387467384338379
    8. 'temps' → logprob: -5.512467384338379
    9. ' le' → logprob: -5.762467384338379
    10. 'on' → logprob: -5.887467384338379

Token 1896: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.000546932220459
    2. ' =' → logprob: -1.375546932220459
    3. '_tree' → logprob: -1.875546932220459
    4. '=' → logprob: -3.000546932220459
    5. '<|end|>' → logprob: -3.250546932220459
    6. ')' → logprob: -3.750546932220459
    7. ' arbres' → logprob: -4.250546932220459
    8. ' arbre' → logprob: -4.250546932220459
    9. ' ' → logprob: -4.875546932220459
    10. '_le' → logprob: -5.000546932220459

Token 1897: '1' (ID: 16)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5082573890686035
    2. 'un' → logprob: -1.7582573890686035
    3. '1' → logprob: -2.1332573890686035
    4. ' ' → logprob: -3.7582573890686035
    5. ' arbre' → logprob: -3.8832573890686035
    6. ' arbres' → logprob: -4.0082573890686035
    7. 'une' → logprob: -4.7582573890686035
    8. '_' → logprob: -5.1332573890686035
    9. ' des' → logprob: -5.2582573890686035
    10. ' une' → logprob: -5.3832573890686035

Token 1898: ' arbre' (ID: 164180)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.548367977142334
    2. '_' → logprob: -2.173367977142334
    3. '_min' → logprob: -2.548367977142334
    4. ' arbre' → logprob: -2.673367977142334
    5. '_tree' → logprob: -3.423367977142334
    6. '_ar' → logprob: -3.423367977142334
    7. 'minute' → logprob: -4.423367977142334
    8. ' ' → logprob: -4.548367977142334
    9. ':' → logprob: -4.548367977142334
    10. ' )' → logprob: -4.548367977142334

Token 1899: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.278156042098999
    2. ':' → logprob: -2.153156042098999
    3. ')' → logprob: -2.903156042098999
    4. '):' → logprob: -3.153156042098999
    5. '       ' → logprob: -4.778156280517578
    6. ')
' → logprob: -5.028156280517578
    7. ':
' → logprob: -5.528156280517578
    8. '.' → logprob: -7.028156280517578
    9. '
' → logprob: -7.028156280517578
    10. '):
' → logprob: -7.153156280517578

Token 1900: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10025757551193237
    2. ' ' → logprob: -2.350257635116577
    3. ' exactement' → logprob: -10.975257873535156
    4. 'une' → logprob: -11.975257873535156
    5. 'exact' → logprob: -12.225257873535156
    6. '```' → logprob: -12.350257873535156
    7. '+' → logprob: -12.475257873535156
    8. '0' → logprob: -12.725257873535156
    9. ' exactly' → logprob: -13.100257873535156
    10. 'au' → logprob: -13.475257873535156

Token 1901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.73052782076411e-05
    2. '0' → logprob: -10.500067710876465
    3. ' ' → logprob: -10.625067710876465
    4. '```' → logprob: -11.875067710876465
    5. '2' → logprob: -13.125067710876465
    6. '+' → logprob: -13.375067710876465
    7. 'une' → logprob: -13.875067710876465
    8. '#' → logprob: -14.125067710876465
    9. 'import' → logprob: -14.625067710876465
    10. '...' → logprob: -14.750067710876465

Token 1902: ' minute' (ID: 12434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14452365040779114
    2. '
' → logprob: -3.1445236206054688
    3. ')' → logprob: -3.8945236206054688
    4. ':' → logprob: -4.269523620605469
    5. 'def' → logprob: -4.519523620605469
    6. '       ' → logprob: -4.769523620605469
    7. '):' → logprob: -5.019523620605469
    8. ')
' → logprob: -5.394523620605469
    9. 'for' → logprob: -5.644523620605469
    10. 'import' → logprob: -5.894523620605469

Token 1903: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7337748408317566
    2. ':' → logprob: -1.3587749004364014
    3. 'def' → logprob: -2.6087749004364014
    4. '):' → logprob: -2.6087749004364014
    5. ')' → logprob: -2.8587749004364014
    6. ')
' → logprob: -3.9837749004364014
    7. ':
' → logprob: -4.358774662017822
    8. '(
' → logprob: -5.983774662017822
    9. '
' → logprob: -5.983774662017822
    10. '):
' → logprob: -6.108774662017822

Token 1904: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058671895414590836
    2. ')' → logprob: -3.3086719512939453
    3. ':' → logprob: -5.308671951293945
    4. ')
' → logprob: -5.683671951293945
    5. '):' → logprob: -6.433671951293945
    6. '.' → logprob: -6.558671951293945
    7. 'def' → logprob: -6.808671951293945
    8. '       ' → logprob: -7.308671951293945
    9. '#' → logprob: -7.308671951293945
    10. '
' → logprob: -7.433671951293945

Token 1905: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046480074524879456
    2. ')' → logprob: -4.046480178833008
    3. ':' → logprob: -4.546480178833008
    4. '#' → logprob: -5.171480178833008
    5. 'for' → logprob: -6.171480178833008
    6. '):' → logprob: -6.296480178833008
    7. 'def' → logprob: -6.796480178833008
    8. '       ' → logprob: -7.296480178833008
    9. '.' → logprob: -7.421480178833008
    10. 'if' → logprob: -7.421480178833008

Token 1906: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00899541936814785
    2. '#' → logprob: -6.383995532989502
    3. ')' → logprob: -7.008995532989502
    4. 'def' → logprob: -7.133995532989502
    5. 'if' → logprob: -7.133995532989502
    6. 'for' → logprob: -7.258995532989502
    7. '       ' → logprob: -7.508995532989502
    8. ' if' → logprob: -7.633995532989502
    9. '...' → logprob: -7.758995532989502
    10. '.' → logprob: -8.008995056152344

Token 1907: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006925181020051241
    2. 'for' → logprob: -5.506925106048584
    3. '       ' → logprob: -7.006925106048584
    4. ' for' → logprob: -7.506925106048584
    5. 'def' → logprob: -8.756925582885742
    6. 'import' → logprob: -8.756925582885742
    7. '#' (adapté à ' #') → logprob: -8.881925582885742
    8. ':' → logprob: -8.881925582885742
    9. ')' → logprob: -9.006925582885742
    10. '.' → logprob: -9.381925582885742

Token 1908: ' Plus' (ID: 11899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048059649765491486
    2. 'total' → logprob: -4.423059463500977
    3. '#' → logprob: -4.798059463500977
    4. 'for' → logprob: -5.173059463500977
    5. 'max' → logprob: -5.298059463500977
    6. 'min' → logprob: -5.548059463500977
    7. 'result' → logprob: -5.923059463500977
    8. 'import' → logprob: -6.298059463500977
    9. 'if' → logprob: -7.048059463500977
    10. 'def' → logprob: -7.173059463500977

Token 1909: ' simplement' (ID: 45065)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4421348571777344
    2. '   ' → logprob: -1.8171348571777344
    3. 'def' → logprob: -3.0671348571777344
    4. '#' → logprob: -3.5671348571777344
    5. 'import' → logprob: -3.5671348571777344
    6. ':' → logprob: -3.9421348571777344
    7. '```' → logprob: -3.9421348571777344
    8. '+' → logprob: -4.442134857177734
    9. ' for' → logprob: -4.817134857177734
    10. '=' → logprob: -4.817134857177734

Token 1910: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1820211112499237
    2. ':' → logprob: -1.932021141052246
    3. 'for' → logprob: -5.182021141052246
    4. '#' → logprob: -5.682021141052246
    5. 'def' → logprob: -6.307021141052246
    6. ' for' → logprob: -6.807021141052246
    7. ',' → logprob: -6.807021141052246
    8. ')' → logprob: -6.807021141052246
    9. '):' → logprob: -6.807021141052246
    10. ':
' → logprob: -7.182021141052246

Token 1911: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6326145529747009
    2. 'for' → logprob: -0.8826145529747009
    3. '   ' → logprob: -3.5076146125793457
    4. 'dist' → logprob: -4.882614612579346
    5. ' for' → logprob: -5.757614612579346
    6. 'distance' → logprob: -6.257614612579346
    7. 'time' → logprob: -6.382614612579346
    8. 'min' → logprob: -6.382614612579346
    9. 'def' → logprob: -6.382614612579346
    10. 'pass' → logprob: -6.507614612579346

Token 1912: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1568355560302734
    2. '   ' → logprob: -1.6568355560302734
    3. 'def' → logprob: -2.1568355560302734
    4. ' continue' → logprob: -2.1568355560302734
    5. 'for' → logprob: -2.7818355560302734
    6. 'continue' → logprob: -2.9068355560302734
    7. ' can' → logprob: -3.6568355560302734
    8. ' =' → logprob: -4.281835556030273
    9. ' #' → logprob: -4.406835556030273
    10. 'import' → logprob: -4.656835556030273

Token 1913: ' :
' (ID: 10039)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6507606506347656
    2. '   ' → logprob: -1.4007606506347656
    3. 'def' → logprob: -1.9007606506347656
    4. ' for' → logprob: -3.0257606506347656
    5. '#' → logprob: -4.400760650634766
    6. 'distance' → logprob: -5.400760650634766
    7. ':' → logprob: -5.775760650634766
    8. 'import' → logprob: -6.150760650634766
    9. 'dist' → logprob: -6.150760650634766
    10. '       ' → logprob: -6.525760650634766

Token 1914: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004636603407561779
    2. 'for' → logprob: -6.504636764526367
    3. 'def' → logprob: -6.504636764526367
    4. '    
' → logprob: -8.129636764526367
    5. '#' → logprob: -8.504636764526367
    6. 'total' → logprob: -8.629636764526367
    7. '
' → logprob: -8.754636764526367
    8. 'if' → logprob: -9.004636764526367
    9. 'time' → logprob: -9.004636764526367
    10. 'distance' → logprob: -9.004636764526367

Token 1915: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37449049949645996
    2. 'for' → logprob: -2.12449049949646
    3. '#' (adapté à ' #') → logprob: -2.37449049949646
    4. ' for' → logprob: -3.49949049949646
    5. 'def' → logprob: -4.124490737915039
    6. 'dist' → logprob: -4.249490737915039
    7. 'distance' → logprob: -4.624490737915039
    8. 'pass' → logprob: -4.749490737915039
    9. ' #' → logprob: -5.124490737915039
    10. 'time' → logprob: -6.124490737915039

Token 1916: ' temps' (ID: 11160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5753758549690247
    2. '#' → logprob: -1.2003757953643799
    3. '   ' → logprob: -2.70037579536438
    4. 'distance' → logprob: -3.70037579536438
    5. 'temps' → logprob: -4.075376033782959
    6. 'total' → logprob: -4.950376033782959
    7. 'time' → logprob: -5.075376033782959
    8. 'def' → logprob: -5.200376033782959
    9. 'dist' → logprob: -6.200376033782959
    10. 'max' → logprob: -6.950376033782959

Token 1917: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.431175172328949
    2. '=' → logprob: -1.0561752319335938
    3. '   ' → logprob: -6.556175231933594
    4. '_' → logprob: -8.431175231933594
    5. '_for' → logprob: -9.056175231933594
    6. 'import' → logprob: -9.056175231933594
    7. 'for' → logprob: -9.181175231933594
    8. ')' → logprob: -9.806175231933594
    9. '_total' → logprob: -10.056175231933594
    10. '    ' → logprob: -10.181175231933594

Token 1918: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1785987615585327
    2. 'min' → logprob: -1.4285987615585327
    3. 'sum' → logprob: -2.1785988807678223
    4. '2' → logprob: -2.9285988807678223
    5. 'float' → logprob: -3.0535988807678223
    6. 'dist' → logprob: -3.3035988807678223
    7. ' min' → logprob: -3.5535988807678223
    8. '(n' → logprob: -3.5535988807678223
    9. '0' → logprob: -3.6785988807678223
    10. ' n' → logprob: -3.8035988807678223

Token 1919: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0024837462697178125
    2. '*' → logprob: -6.12748384475708
    3. ')' → logprob: -8.627483367919922
    4. '   ' → logprob: -10.127483367919922
    5. '_' → logprob: -11.002483367919922
    6. ' _' → logprob: -11.127483367919922
    7. ' ' → logprob: -11.627483367919922
    8. '[' → logprob: -11.877483367919922
    9. '    ' → logprob: -12.002483367919922
    10. '  ' → logprob: -12.502483367919922

Token 1920: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1344449669122696
    2. ' (' → logprob: -2.3844449520111084
    3. '((' → logprob: -3.5094449520111084
    4. ' ((' → logprob: -5.6344451904296875
    5. '(dist' → logprob: -9.009445190429688
    6. '(distance' → logprob: -10.509445190429688
    7. '(d' → logprob: -12.259445190429688
    8. '(((' → logprob: -12.884445190429688
    9. '(s' → logprob: -13.009445190429688
    10. '(t' → logprob: -13.259445190429688

Token 1921: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.520034670829773
    2. '2' → logprob: -1.395034670829773
    3. ' (' → logprob: -2.1450347900390625
    4. 'dist' → logprob: -4.1450347900390625
    5. '(dist' → logprob: -4.2700347900390625
    6. ' dist' → logprob: -5.2700347900390625
    7. ' ' → logprob: -5.3950347900390625
    8. '(distance' → logprob: -7.8950347900390625
    9. '((' → logprob: -8.020034790039062
    10. 'distance' → logprob: -8.895034790039062

Token 1922: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.033656876534223557
    2. '*' → logprob: -3.4086568355560303
    3. ' ' → logprob: -11.78365707397461
    4. ')' → logprob: -13.53365707397461
    5. ' ' → logprob: -13.90865707397461
    6. ' **' → logprob: -15.03365707397461
    7. '**' → logprob: -15.53365707397461
    8. '*object' → logprob: -15.78365707397461
    9. '*(' → logprob: -16.03365707397461
    10. ' #' → logprob: -16.40865707397461

Token 1923: ' dist' (ID: 3601)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.45811936259269714
    2. 'distance' → logprob: -1.0831193923950195
    3. ' dist' → logprob: -4.2081193923950195
    4. 'dist' → logprob: -4.5831193923950195
    5. '(distance' → logprob: -6.2081193923950195
    6. ' (' → logprob: -6.4581193923950195
    7. '(dist' → logprob: -8.70811939239502
    8. ')' → logprob: -10.45811939239502
    9. ' distancia' → logprob: -10.45811939239502
    10. ' ' → logprob: -10.95811939239502

Token 1924: '_from' (ID: 12526)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8749134540557861
    2. '_from' → logprob: -1.1249134540557861
    3. ')' → logprob: -1.7499134540557861
    4. '+' → logprob: -2.624913454055786
    5. ' )' → logprob: -5.499913215637207
    6. '   ' → logprob: -5.874913215637207
    7. ')+' → logprob: -5.999913215637207
    8. '_' → logprob: -7.624913215637207
    9. 'from' → logprob: -7.624913215637207
    10. '[' → logprob: -8.374913215637207

Token 1925: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.1011013463139534
    2. 'start' → logprob: -2.3511013984680176
    3. '_' → logprob: -7.476101398468018
    4. '[i' → logprob: -8.97610092163086
    5. '_us' → logprob: -10.47610092163086
    6. '[start' → logprob: -10.60110092163086
    7. ' start' → logprob: -10.97610092163086
    8. '[' → logprob: -11.22610092163086
    9. 'i' → logprob: -11.22610092163086
    10. '_from' → logprob: -11.22610092163086

Token 1926: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4233837425708771
    2. '[(' → logprob: -2.1733837127685547
    3. '[' → logprob: -2.2983837127685547
    4. '+' → logprob: -2.4233837127685547
    5. ' +' → logprob: -3.2983837127685547
    6. '[u' → logprob: -6.298383712768555
    7. '[[' → logprob: -7.048383712768555
    8. '   ' → logprob: -7.548383712768555
    9. '[pos' → logprob: -7.673383712768555
    10. '[node' → logprob: -8.673383712768555

Token 1927: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005356143694370985
    2. '[i' → logprob: -5.505356311798096
    3. ']' → logprob: -6.880356311798096
    4. ',' → logprob: -9.755355834960938
    5. ',j' → logprob: -10.255355834960938
    6. ',i' → logprob: -10.380355834960938
    7. '[j' → logprob: -10.630355834960938
    8. '[' → logprob: -10.630355834960938
    9. '(i' → logprob: -10.630355834960938
    10. ' ][' → logprob: -10.880355834960938

Token 1928: 'j' (ID: 73)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1283193826675415
    2. 'j' → logprob: -1.2533193826675415
    3. '[i' → logprob: -1.6283193826675415
    4. '][' → logprob: -2.753319263458252
    5. '(i' → logprob: -3.503319263458252
    6. '[j' → logprob: -3.878319263458252
    7. ']' → logprob: -3.878319263458252
    8. 'adj' → logprob: -3.878319263458252
    9. 'nj' → logprob: -4.628319263458252
    10. '[' → logprob: -4.878319263458252

Token 1929: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02483685500919819
    2. '[i' → logprob: -4.399837017059326
    3. ' +' → logprob: -5.149837017059326
    4. '+' → logprob: -5.399837017059326
    5. ']+' → logprob: -6.399837017059326
    6. ')' → logprob: -9.274836540222168
    7. ' ]' → logprob: -10.024836540222168
    8. '   ' → logprob: -10.274836540222168
    9. '(i' → logprob: -10.649836540222168
    10. '])' → logprob: -10.774836540222168

Token 1930: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0742313489317894
    2. '+' → logprob: -2.6992313861846924
    3. ')' → logprob: -5.699231147766113
    4. '[i' → logprob: -7.324231147766113
    5. '   ' → logprob: -8.699231147766113
    6. ')+' → logprob: -9.949231147766113
    7. '+i' → logprob: -11.324231147766113
    8. '```' → logprob: -11.949231147766113
    9. '    ' → logprob: -12.199231147766113
    10. '           ' → logprob: -12.199231147766113

Token 1931: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004975094925612211
    2. ' ' → logprob: -7.625497341156006
    3. ')' → logprob: -11.875497817993164
    4. '0' → logprob: -13.375497817993164
    5. '   ' → logprob: -15.125497817993164
    6. '
' → logprob: -15.500497817993164
    7. ' )' → logprob: -15.875497817993164
    8. '```' → logprob: -16.375497817993164
    9. '2' → logprob: -16.625497817993164
    10. ')
' → logprob: -17.125497817993164

Token 1932: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008093867218121886
    2. ' ' → logprob: -7.125809192657471
    3. ')' → logprob: -12.625809669494629
    4. '0' → logprob: -14.125809669494629
    5. '   ' → logprob: -15.375809669494629
    6. ' )' → logprob: -16.000808715820312
    7. ' ' → logprob: -16.500808715820312
    8. '2' → logprob: -16.500808715820312
    9. '
' → logprob: -16.750808715820312
    10. '```' → logprob: -17.125808715820312

Token 1933: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043335105292499065
    2. '   ' → logprob: -5.50433349609375
    3. ')
' → logprob: -8.50433349609375
    4. ' )' → logprob: -11.25433349609375
    5. ')
' → logprob: -11.87933349609375
    6. '       ' → logprob: -12.12933349609375
    7. ')\' → logprob: -12.12933349609375
    8. ')`' → logprob: -12.37933349609375
    9. '[i' → logprob: -13.00433349609375
    10. ')*' → logprob: -13.25433349609375

Token 1934: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09025604277849197
    2. ')' → logprob: -3.0902559757232666
    3. ':' → logprob: -4.215256214141846
    4. '
' → logprob: -4.965256214141846
    5. ')
' → logprob: -5.590256214141846
    6. '.' → logprob: -6.090256214141846
    7. '    
' → logprob: -6.340256214141846
    8. 'def' → logprob: -6.590256214141846
    9. ':
' → logprob: -6.840256214141846
    10. '[i' → logprob: -6.965256214141846

Token 1935: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013304696418344975
    2. ')' → logprob: -5.138304710388184
    3. '
' → logprob: -5.888304710388184
    4. '    
' → logprob: -6.263304710388184
    5. ')
' → logprob: -7.763304710388184
    6. 'def' → logprob: -7.888304710388184
    7. 'import' → logprob: -7.888304710388184
    8. '.' → logprob: -8.138304710388184
    9. ':' → logprob: -8.388304710388184
    10. '#' → logprob: -8.888304710388184

Token 1936: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025858843699097633
    2. '<|end|>' → logprob: -4.0258588790893555
    3. ')' → logprob: -5.6508588790893555
    4. '<|end|>' → logprob: -6.6508588790893555
    5. '    
' → logprob: -7.0258588790893555
    6. 'import' → logprob: -8.025858879089355
    7. 'def' → logprob: -8.150858879089355
    8. '
' → logprob: -8.275858879089355
    9. '#' → logprob: -8.525858879089355
    10. '.' → logprob: -8.650858879089355

Token 1937: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03464915230870247
    2. ')' → logprob: -4.03464937210083
    3. 'for' → logprob: -4.40964937210083
    4. '#' (adapté à ' #') → logprob: -6.78464937210083
    5. ' for' → logprob: -7.03464937210083
    6. ':' → logprob: -7.40964937210083
    7. 'import' → logprob: -8.409648895263672
    8. '.' → logprob: -8.659648895263672
    9. 'def' → logprob: -8.659648895263672
    10. '...' → logprob: -8.784648895263672

Token 1938: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10878204554319382
    2. 'for' → logprob: -2.6087820529937744
    3. ' for' → logprob: -4.608781814575195
    4. '#' → logprob: -5.733781814575195
    5. ':' → logprob: -5.858781814575195
    6. 'total' → logprob: -5.858781814575195
    7. ')' → logprob: -6.483781814575195
    8. '.' → logprob: -6.733781814575195
    9. 'min' → logprob: -6.858781814575195
    10. 'import' → logprob: -6.858781814575195

Token 1939: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3840453624725342
    2. '[' → logprob: -1.6340453624725342
    3. '=' → logprob: -1.7590453624725342
    4. '[i' → logprob: -2.009045362472534
    5. '#' → logprob: -3.009045362472534
    6. 'for' → logprob: -3.009045362472534
    7. 'continue' → logprob: -3.384045362472534
    8. '   ' → logprob: -3.384045362472534
    9. ' continue' → logprob: -3.634045362472534
    10. 'def' → logprob: -4.134045600891113

Token 1940: ' donc' (ID: 14206)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.7050629258155823
    2. 'for' → logprob: -1.4550628662109375
    3. 'contin' → logprob: -2.2050628662109375
    4. 'chercher' → logprob: -3.3300628662109375
    5. 'min' → logprob: -3.4550628662109375
    6. '#' → logprob: -3.5800628662109375
    7. 'import' → logprob: -3.5800628662109375
    8. '   ' → logprob: -4.8300628662109375
    9. 'continue' → logprob: -4.8300628662109375
    10. 'faire' → logprob: -5.2050628662109375

Token 1941: ' prendre' (ID: 24257)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.4847567081451416
    2. 'contin' → logprob: -1.8597567081451416
    3. 'chercher' → logprob: -1.8597567081451416
    4. '#' → logprob: -4.3597564697265625
    5. 'for' → logprob: -4.4847564697265625
    6. ' continuer' → logprob: -4.7347564697265625
    7. ' calcul' → logprob: -4.8597564697265625
    8. 'import' → logprob: -4.9847564697265625
    9. '   ' → logprob: -5.2347564697265625
    10. 'min' → logprob: -5.7347564697265625

Token 1942: ' ceci' (ID: 98542)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0597386360168457
    2. ' for' → logprob: -1.9347386360168457
    3. 'min' → logprob: -2.0597386360168457
    4. ' min' → logprob: -2.5597386360168457
    5. ' dist' → logprob: -2.8097386360168457
    6. 'dist' → logprob: -2.8097386360168457
    7. ' n' → logprob: -3.4347386360168457
    8. 'import' → logprob: -4.059738636016846
    9. '```' → logprob: -4.309738636016846
    10. 'n' → logprob: -4.434738636016846

Token 1943: ' comme' (ID: 7971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35856735706329346
    2. ':' → logprob: -1.3585673570632935
    3. '):' → logprob: -3.983567237854004
    4. ')' → logprob: -4.983567237854004
    5. ':
' → logprob: -4.983567237854004
    6. '
' → logprob: -5.983567237854004
    7. '    
' → logprob: -6.858567237854004
    8. '       ' → logprob: -6.983567237854004
    9. 'def' → logprob: -6.983567237854004
    10. ')
' → logprob: -6.983567237854004

Token 1944: ' coût' (ID: 73109)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.24500465393066406
    2. 'la' → logprob: -2.120004653930664
    3. 'temps' → logprob: -3.370004653930664
    4. '#' → logprob: -3.745004653930664
    5. 'le' → logprob: -4.495004653930664
    6. '   ' → logprob: -4.620004653930664
    7. ' base' → logprob: -5.620004653930664
    8. 'continu' → logprob: -5.745004653930664
    9. 'ré' → logprob: -6.120004653930664
    10. ' la' → logprob: -6.620004653930664

Token 1945: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10229701548814774
    2. ':' → logprob: -3.227297067642212
    3. ')' → logprob: -4.352296829223633
    4. '
' → logprob: -4.477296829223633
    5. ':
' → logprob: -5.227296829223633
    6. 'for' → logprob: -5.352296829223633
    7. 'def' → logprob: -5.727296829223633
    8. ')
' → logprob: -5.727296829223633
    9. '    
' → logprob: -5.727296829223633
    10. '):' → logprob: -6.602296829223633

Token 1946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03446168079972267
    2. '
' → logprob: -3.659461736679077
    3. '    
' → logprob: -5.034461498260498
    4. '#' → logprob: -7.659461498260498
    5. 'def' → logprob: -8.284461975097656
    6. 'for' → logprob: -8.409461975097656
    7. ':' → logprob: -9.659461975097656
    8. '.' → logprob: -9.784461975097656
    9. 'import' → logprob: -9.784461975097656
    10. ')' → logprob: -10.159461975097656

Token 1947: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20647425949573517
    2. 'min' → logprob: -2.9564743041992188
    3. 'total' → logprob: -3.3314743041992188
    4. 'cut' → logprob: -3.8314743041992188
    5. 'best' → logprob: -3.9564743041992188
    6. 'result' → logprob: -4.081474304199219
    7. 'max' → logprob: -4.581474304199219
    8. '#' (adapté à ' #') → logprob: -4.831474304199219
    9. 'answer' → logprob: -5.331474304199219
    10. 'for' → logprob: -5.581474304199219

Token 1948: ' Cependant' (ID: 74480)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8283788561820984
    2. '   ' → logprob: -1.3283789157867432
    3. 'best' → logprob: -2.078378915786743
    4. 'result' → logprob: -3.453378915786743
    5. 'answer' → logprob: -3.453378915786743
    6. 'total' → logprob: -3.953378915786743
    7. '#' → logprob: -4.078378677368164
    8. 'cut' → logprob: -4.203378677368164
    9. 'res' → logprob: -4.453378677368164
    10. 'minimal' → logprob: -4.453378677368164

Token 1949: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020602382719516754
    2. '#' → logprob: -5.145602226257324
    3. '    
' → logprob: -5.895602226257324
    4. ' if' → logprob: -6.020602226257324
    5. '<|end|>' → logprob: -6.020602226257324
    6. '<|end|>' → logprob: -6.645602226257324
    7. '
' → logprob: -7.145602226257324
    8. ':' → logprob: -7.145602226257324
    9. ',' → logprob: -7.145602226257324
    10. 'if' → logprob: -7.270602226257324

Token 1950: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08186548948287964
    2. 'for' → logprob: -3.2068655490875244
    3. '   ' → logprob: -3.3318655490875244
    4. ' for' → logprob: -7.206865310668945
    5. ' #' → logprob: -7.331865310668945
    6. 'import' → logprob: -7.456865310668945
    7. 'if' → logprob: -8.956865310668945
    8. '...' → logprob: -9.956865310668945
    9. '    
' → logprob: -10.206865310668945
    10. '
' → logprob: -10.581865310668945

Token 1951: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1642605066299438
    2. '   ' → logprob: -1.7892605066299438
    3. '#' → logprob: -2.0392603874206543
    4. 'def' → logprob: -2.4142603874206543
    5. 'continue' → logprob: -2.7892603874206543
    6. ' #' → logprob: -2.9142603874206543
    7. '[' → logprob: -3.4142603874206543
    8. ' n' → logprob: -4.539260387420654
    9. '=' → logprob: -4.664260387420654
    10. ' continues' → logprob: -4.789260387420654

Token 1952: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2563722133636475
    2. ' #' → logprob: -1.7563722133636475
    3. ' peux' → logprob: -2.2563722133636475
    4. ' continue' → logprob: -2.6313722133636475
    5. 'def' → logprob: -2.6313722133636475
    6. '   ' → logprob: -3.0063722133636475
    7. ' 
' → logprob: -3.5063722133636475
    8. ' vais' → logprob: -3.6313722133636475
    9. 'continue' → logprob: -3.8813722133636475
    10. '=' → logprob: -4.131372451782227

Token 1953: ' couper' (ID: 135212)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.1594100147485733
    2. '#' → logprob: -2.659409999847412
    3. 'pas' → logprob: -3.034409999847412
    4. ' #' → logprob: -5.159409999847412
    5. ' continuer' → logprob: -5.284409999847412
    6. '   ' → logprob: -5.534409999847412
    7. ' peut' → logprob: -6.534409999847412
    8. ' garantir' → logprob: -6.784409999847412
    9. ' poursuivre' → logprob: -6.784409999847412
    10. 'contin' → logprob: -7.534409999847412

Token 1954: ' un' (ID: 537)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.18442770838737488
    2. 'pas' → logprob: -2.3094277381896973
    3. ' que' → logprob: -3.9344277381896973
    4. '#' → logprob: -4.684427738189697
    5. 'sur' → logprob: -4.809427738189697
    6. 'plus' → logprob: -5.309427738189697
    7. ' sur' → logprob: -5.559427738189697
    8. ' continuer' → logprob: -5.809427738189697
    9. ' plus' → logprob: -5.934427738189697
    10. ' les' → logprob: -5.934427738189697

Token 1955: ' arbre' (ID: 164180)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7114870548248291
    2. ' arbre' → logprob: -0.9614870548248291
    3. ' ' → logprob: -2.711487054824829
    4. ' case' → logprob: -4.08648681640625
    5. '#' → logprob: -4.83648681640625
    6. ' #' → logprob: -5.58648681640625
    7. 'n' → logprob: -5.71148681640625
    8. ' espace' → logprob: -6.08648681640625
    9. ' ' → logprob: -6.46148681640625
    10. 'case' → logprob: -6.46148681640625

Token 1956: ' que' (ID: 661)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.8790955543518066
    2. 'sur' → logprob: -1.6290955543518066
    3. ')' → logprob: -2.6290955543518066
    4. '_' → logprob: -2.8790955543518066
    5. ' ' → logprob: -3.1290955543518066
    6. ' possible' → logprob: -3.2540955543518066
    7. 's' → logprob: -3.5040955543518066
    8. '_sur' → logprob: -3.7540955543518066
    9. ',' → logprob: -4.129095554351807
    10. '.' → logprob: -4.629095554351807

Token 1957: ' depuis' (ID: 16277)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.9029432535171509
    2. ' sur' → logprob: -1.0279432535171509
    3. 'sur' → logprob: -2.4029431343078613
    4. 'adj' → logprob: -3.0279431343078613
    5. ' adjacent' → logprob: -3.5279431343078613
    6. ' à' → logprob: -4.402943134307861
    7. ' qu' → logprob: -4.527943134307861
    8. ' pas' → logprob: -4.652943134307861
    9. ' uniquement' → logprob: -4.902943134307861
    10. ' adj' → logprob: -5.027943134307861

Token 1958: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.10066229850053787
    2. 'une' → logprob: -2.3506622314453125
    3. ''une' → logprob: -8.350662231445312
    4. ' a' → logprob: -10.100662231445312
    5. 'a' → logprob: -10.225662231445312
    6. '```' → logprob: -10.475662231445312
    7. 'Une' → logprob: -10.975662231445312
    8. ' un' → logprob: -11.225662231445312
    9. 'case' → logprob: -11.225662231445312
    10. 'adj' → logprob: -11.350662231445312

Token 1959: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.014450479298830032
    2. 'case' → logprob: -4.514450550079346
    3. ' adjacent' → logprob: -6.264450550079346
    4. 'adj' → logprob: -7.639450550079346
    5. ' adj' → logprob: -7.889450550079346
    6. 'vo' → logprob: -8.264450073242188
    7. ' ' → logprob: -9.389450073242188
    8. ' position' → logprob: -9.514450073242188
    9. ' voisin' → logprob: -9.889450073242188
    10. ' ' → logprob: -11.139450073242188

Token 1960: ' sans' (ID: 9828)
  Prédit: ' vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -0.6957137584686279
    2. ' adj' → logprob: -1.195713758468628
    3. 'vide' → logprob: -2.320713758468628
    4. 'adj' → logprob: -2.820713758468628
    5. 'vo' → logprob: -4.070713996887207
    6. ' sans' → logprob: -4.445713996887207
    7. ' vo' → logprob: -4.820713996887207
    8. ' vois' → logprob: -6.195713996887207
    9. 'sans' → logprob: -7.070713996887207
    10. ' adjacent' → logprob: -8.320713996887207

Token 1961: ' arbre' (ID: 164180)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.5483477115631104
    2. 'ar' → logprob: -1.1733477115631104
    3. ' arbre' → logprob: -2.6733477115631104
    4. ' arbres' → logprob: -3.6733477115631104
    5. '_' → logprob: -4.173347473144531
    6. '_ar' → logprob: -6.423347473144531
    7. '-' → logprob: -7.798347473144531
    8. '   ' → logprob: -8.673347473144531
    9. '```' → logprob: -9.048347473144531
    10. 'for' → logprob: -9.173347473144531

Token 1962: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10570447146892548
    2. '
' → logprob: -3.4807045459747314
    3. '.
' → logprob: -4.230704307556152
    4. ',' → logprob: -4.355704307556152
    5. '.' → logprob: -4.980704307556152
    6. ' adjacent' → logprob: -4.980704307556152
    7. ',
' → logprob: -5.230704307556152
    8. '       ' → logprob: -5.605704307556152
    9. '    
' → logprob: -5.730704307556152
    10. 'adj' → logprob: -5.980704307556152

Token 1963: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.037735484540462494
    2. 'ace' → logprob: -3.7877354621887207
    3. '   ' → logprob: -5.162735462188721
    4. 'acent' → logprob: -5.787735462188721
    5. 'cente' → logprob: -6.662735462188721
    6. ' ' → logprob: -6.787735462188721
    7. 'ante' → logprob: -7.662735462188721
    8. '  ' → logprob: -7.912735462188721
    9. 'c' → logprob: -8.287735939025879
    10. 'ente' → logprob: -8.537735939025879

Token 1964: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.388034462928772
    2. 'ente' → logprob: -1.138034462928772
    3. 'e' → logprob: -7.763034343719482
    4. '#' → logprob: -8.13803482055664
    5. '   ' → logprob: -9.76303482055664
    6. 'entes' → logprob: -10.01303482055664
    7. 'ents' → logprob: -10.13803482055664
    8. 't' → logprob: -10.51303482055664
    9. 'acent' → logprob: -10.51303482055664
    10. 'cent' → logprob: -10.51303482055664

Token 1965: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10907378792762756
    2. 'for' → logprob: -3.4840738773345947
    3. '
' → logprob: -3.6090738773345947
    4. ' for' → logprob: -4.359073638916016
    5. '.' → logprob: -4.859073638916016
    6. ':' → logprob: -4.984073638916016
    7. '.
' → logprob: -5.484073638916016
    8. ':
' → logprob: -5.859073638916016
    9. ',' → logprob: -6.109073638916016
    10. 'def' → logprob: -6.484073638916016

Token 1966: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02330324426293373
    2. '                   ' → logprob: -4.773303031921387
    3. '#' → logprob: -5.148303031921387
    4. '       ' → logprob: -6.398303031921387
    5. ' et' → logprob: -6.648303031921387
    6. 'for' → logprob: -6.898303031921387
    7. '               ' → logprob: -7.148303031921387
    8. '    
' → logprob: -7.523303031921387
    9. ' for' → logprob: -7.898303031921387
    10. ' pour' → logprob: -8.023303031921387

Token 1967: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03049458935856819
    2. '#' (adapté à ' #') → logprob: -3.5304946899414062
    3. '       ' → logprob: -8.405494689941406
    4. 'for' → logprob: -9.155494689941406
    5. '
' → logprob: -9.530494689941406
    6. '#
' → logprob: -9.530494689941406
    7. ' #' → logprob: -9.655494689941406
    8. '                   ' → logprob: -10.155494689941406
    9. '    
' → logprob: -10.530494689941406
    10. '               ' → logprob: -11.030494689941406

Token 1968: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2952369451522827
    2. 'for' → logprob: -1.9202369451522827
    3. '   ' → logprob: -3.2952370643615723
    4. ' for' → logprob: -3.5452370643615723
    5. ' #' → logprob: -4.295237064361572
    6. ' donc' → logprob: -5.420237064361572
    7. 'et' → logprob: -5.545237064361572
    8. ' et' → logprob: -5.545237064361572
    9. 'and' → logprob: -6.420237064361572
    10. ' car' → logprob: -6.545237064361572

Token 1969: ' il' (ID: 1793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3973948657512665
    2. '#' → logprob: -1.6473948955535889
    3. 'for' → logprob: -3.147394895553589
    4. '                   ' → logprob: -4.39739465713501
    5. ' #' → logprob: -4.64739465713501
    6. '       ' → logprob: -4.89739465713501
    7. 'pour' → logprob: -5.02239465713501
    8. 'on' → logprob: -5.02239465713501
    9. 'import' → logprob: -5.52239465713501
    10. ' on' → logprob: -5.52239465713501

Token 1970: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.476950466632843
    2. 'f' → logprob: -1.2269504070281982
    3. ' faudra' → logprob: -3.1019504070281982
    4. '#' → logprob: -3.8519504070281982
    5. ' faudrait' → logprob: -5.101950645446777
    6. '   ' → logprob: -6.101950645446777
    7. ' est' → logprob: -6.226950645446777
    8. ' must' → logprob: -6.726950645446777
    9. 'n' → logprob: -6.976950645446777
    10. ' n' → logprob: -7.101950645446777

Token 1971: ' que' (ID: 661)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.3905697166919708
    2. 'que' → logprob: -2.1405696868896484
    3. 'égal' → logprob: -3.1405696868896484
    4. 'v' → logprob: -3.8905696868896484
    5. 'a' → logprob: -4.015569686889648
    6. ' continuer' → logprob: -4.015569686889648
    7. 's' → logprob: -4.640569686889648
    8. '   ' → logprob: -4.640569686889648
    9. '#' → logprob: -4.640569686889648
    10. 'continue' → logprob: -5.015569686889648

Token 1972: ' cette' (ID: 7696)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023083925247192383
    2. ' dist' → logprob: -4.273083686828613
    3. 'A' → logprob: -5.273083686828613
    4. 'la' → logprob: -6.773083686828613
    5. 'any' → logprob: -7.023083686828613
    6. 'all' → logprob: -8.398083686828613
    7. 'not' → logprob: -8.398083686828613
    8. '0' → logprob: -8.523083686828613
    9. 'une' → logprob: -8.648083686828613
    10. 'for' → logprob: -8.773083686828613

Token 1973: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.25356167554855347
    2. 'case' → logprob: -1.6285617351531982
    3. 'adj' → logprob: -3.6285617351531982
    4. ' adjacent' → logprob: -7.753561496734619
    5. ' adj' → logprob: -8.128561973571777
    6. ' adjacency' → logprob: -8.878561973571777
    7. '(case' → logprob: -10.253561973571777
    8. 'vo' → logprob: -10.378561973571777
    9. ' ' → logprob: -10.503561973571777
    10. '#' → logprob: -10.628561973571777

Token 1974: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.7334033250808716
    2. 'adj' → logprob: -1.4834033250808716
    3. 's' → logprob: -2.483403205871582
    4. '_' → logprob: -2.983403205871582
    5. 'so' → logprob: -3.608403205871582
    6. '_adj' → logprob: -3.733403205871582
    7. ' sans' → logprob: -4.233403205871582
    8. ' ' → logprob: -5.108403205871582
    9. ' so' → logprob: -5.358403205871582
    10. ',' → logprob: -5.358403205871582

Token 1975: ' accessible' (ID: 18240)
  Prédit: 'accessible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'accessible' → logprob: -0.014511936344206333
    2. ' accessible' → logprob: -4.639512062072754
    3. 'reachable' → logprob: -5.764512062072754
    4. 'access' → logprob: -6.764512062072754
    5. 'atte' → logprob: -8.639512062072754
    6. '0' → logprob: -8.889512062072754
    7. 'acc' → logprob: -10.514512062072754
    8. 'au' → logprob: -10.639512062072754
    9. 'égal' → logprob: -10.889512062072754
    10. 'Accessible' → logprob: -11.389512062072754

Token 1976: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4198997914791107
    2. '
' → logprob: -1.169899821281433
    3. '    
' → logprob: -4.044899940490723
    4. 'for' → logprob: -4.669899940490723
    5. ' for' → logprob: -5.669899940490723
    6. 'import' → logprob: -8.044899940490723
    7. 'def' → logprob: -8.044899940490723
    8. '#' → logprob: -8.294899940490723
    9. ' 
' → logprob: -8.294899940490723
    10. '

' → logprob: -9.044899940490723

Token 1977: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.664492666721344
    2. 'dist' → logprob: -1.1644926071166992
    3. 'la' → logprob: -2.789492607116699
    4. 'l' → logprob: -3.039492607116699
    5. 'start' → logprob: -3.539492607116699
    6. 'main' → logprob: -3.789492607116699
    7. '#' → logprob: -5.289492607116699
    8. '(' → logprob: -6.289492607116699
    9. '```' → logprob: -7.164492607116699
    10. 'def' → logprob: -7.289492607116699

Token 1978: ''us' (ID: 143210)
  Prédit: ''us'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''us' → logprob: -0.012323034927248955
    2. 'us' → logprob: -4.512322902679443
    3. ''' → logprob: -7.387322902679443
    4. 'a' → logprob: -8.637323379516602
    5. 'dist' → logprob: -8.762323379516602
    6. '0' → logprob: -9.762323379516602
    7. ''utilisateur' → logprob: -9.762323379516602
    8. '’us' → logprob: -10.262323379516602
    9. ''extérieur' → logprob: -10.262323379516602
    10. 'u' → logprob: -11.012323379516602

Token 1979: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.2624572813510895
    2. 'er' → logprob: -2.0124573707580566
    3. 'e' → logprob: -2.3874573707580566
    4. 'eur' → logprob: -6.512457370758057
    5. 'age' → logprob: -7.012457370758057
    6. 'r' → logprob: -7.637457370758057
    7. 'ère' → logprob: -7.887457370758057
    8. 'ere' → logprob: -8.387456893920898
    9. 'ines' → logprob: -8.512456893920898
    10. 'i' → logprob: -8.512456893920898

Token 1980: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07789373397827148
    2. '
' → logprob: -3.2028937339782715
    3. '    
' → logprob: -4.7028937339782715
    4. '#' → logprob: -4.8278937339782715
    5. 'for' → logprob: -4.8278937339782715
    6. 'min' → logprob: -5.8278937339782715
    7. 'minimum' → logprob: -7.2028937339782715
    8. 'result' → logprob: -7.3278937339782715
    9. 'cost' → logprob: -7.4528937339782715
    10. 'possible' → logprob: -7.7028937339782715

Token 1981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07279915362596512
    2. '    
' → logprob: -3.4477992057800293
    3. '
' → logprob: -3.6977992057800293
    4. '#' → logprob: -4.572799205780029
    5. 'import' → logprob: -6.697799205780029
    6. 'for' → logprob: -7.447799205780029
    7. 'def' → logprob: -8.197798728942871
    8. 'from' → logprob: -8.197798728942871
    9. '#
' → logprob: -8.697798728942871
    10. '        
' → logprob: -9.322798728942871

Token 1982: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040642477571964264
    2. '#' → logprob: -4.165642261505127
    3. 'for' → logprob: -4.665642261505127
    4. '    
' → logprob: -5.290642261505127
    5. '
' → logprob: -5.665642261505127
    6. 'cut' → logprob: -6.540642261505127
    7. 'cost' → logprob: -7.165642261505127
    8. 'def' → logprob: -7.290642261505127
    9. 'result' → logprob: -7.540642261505127
    10. 'import' → logprob: -7.540642261505127

Token 1983: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015047172084450722
    2. '    
' → logprob: -5.515047073364258
    3. 'for' → logprob: -5.640047073364258
    4. '#' → logprob: -5.765047073364258
    5. 'cut' → logprob: -6.515047073364258
    6. '
' → logprob: -7.015047073364258
    7. 'total' → logprob: -7.765047073364258
    8. 'cost' → logprob: -8.140047073364258
    9. 'min' → logprob: -8.640047073364258
    10. 'max' → logprob: -8.890047073364258

Token 1984: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6460027098655701
    2. '#' (adapté à ' #') → logprob: -1.2710027694702148
    3. 'min' → logprob: -2.646002769470215
    4. 'cut' → logprob: -2.896002769470215
    5. 'best' → logprob: -3.896002769470215
    6. 'for' → logprob: -3.896002769470215
    7. 'max' → logprob: -4.771002769470215
    8. 'cuts' → logprob: -5.646002769470215
    9. 'cost' → logprob: -5.646002769470215
    10. 'result' → logprob: -6.396002769470215

Token 1985: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22166657447814941
    2. 'min' → logprob: -2.4716665744781494
    3. 'best' → logprob: -3.3466665744781494
    4. '#' → logprob: -3.5966665744781494
    5. 'cut' → logprob: -4.09666633605957
    6. 'for' → logprob: -4.72166633605957
    7. 'cost' → logprob: -5.22166633605957
    8. 'total' → logprob: -5.59666633605957
    9. 'result' → logprob: -5.97166633605957
    10. 'c' → logprob: -6.09666633605957

Token 1986: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40261322259902954
    2. ' for' → logprob: -1.7776131629943848
    3. '   ' → logprob: -1.9026131629943848
    4. '#' → logprob: -4.527613162994385
    5. ' #' → logprob: -7.527613162994385
    6. ' on' → logprob: -8.152613639831543
    7. '
' → logprob: -8.527613639831543
    8. 'on' → logprob: -8.652613639831543
    9. '    
' → logprob: -8.777613639831543
    10. 'min' → logprob: -8.777613639831543

Token 1987: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22060494124889374
    2. ' chaque' → logprob: -1.9706048965454102
    3. 'each' → logprob: -3.34560489654541
    4. ' i' → logprob: -4.59560489654541
    5. 'cut' → logprob: -4.72060489654541
    6. ' each' → logprob: -6.97060489654541
    7. 'cou' → logprob: -6.97060489654541
    8. '(i' → logprob: -7.34560489654541
    9. 'cha' → logprob: -7.47060489654541
    10. 'ch' → logprob: -7.84560489654541

Token 1988: ' cellule' (ID: 169440)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5647014379501343
    2. ' case' → logprob: -1.9397014379501343
    3. '(i' → logprob: -2.314701557159424
    4. ' (' → logprob: -2.564701557159424
    5. ' arbre' → logprob: -3.064701557159424
    6. 'i' → logprob: -3.314701557159424
    7. 'case' → logprob: -4.314701557159424
    8. ' ' → logprob: -5.314701557159424
    9. ' tree' → logprob: -5.939701557159424
    10. ' for' → logprob: -7.189701557159424

Token 1989: ' avec' (ID: 3937)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7850061655044556
    2. ' (' → logprob: -1.0350061655044556
    3. 'cont' → logprob: -2.910006046295166
    4. 'sans' → logprob: -3.535006046295166
    5. ' sans' → logprob: -4.285006046295166
    6. ' contenant' → logprob: -4.410006046295166
    7. '(vo' → logprob: -4.410006046295166
    8. 'adj' → logprob: -4.660006046295166
    9. 'vo' → logprob: -4.785006046295166
    10. ',' → logprob: -5.035006046295166

Token 1990: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.037573497742414474
    2. 'des' → logprob: -3.4125735759735107
    3. ' arbres' → logprob: -6.287573337554932
    4. ' des' → logprob: -6.537573337554932
    5. 'ar' → logprob: -8.16257381439209
    6. '   ' → logprob: -9.03757381439209
    7. '>' → logprob: -9.78757381439209
    8. 'for' → logprob: -10.28757381439209
    9. ' ' → logprob: -10.91257381439209
    10. 'A' → logprob: -11.03757381439209

Token 1991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6075276136398315
    2. '   ' → logprob: -1.4825276136398315
    3. '(i' → logprob: -2.857527732849121
    4. ':' → logprob: -2.982527732849121
    5. ' (' → logprob: -3.107527732849121
    6. ':
' → logprob: -3.857527732849121
    7. '>' → logprob: -4.607527732849121
    8. ' >' → logprob: -4.982527732849121
    9. ' avec' → logprob: -5.107527732849121
    10. ' ,' → logprob: -5.232527732849121

Token 1992: ' on' (ID: 402)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.4492722749710083
    2. ' for' → logprob: -1.5742722749710083
    3. ' on' → logprob: -1.5742722749710083
    4. '#' → logprob: -2.0742721557617188
    5. 'adj' → logprob: -3.0742721557617188
    6. 'for' → logprob: -3.1992721557617188
    7. '   ' → logprob: -3.1992721557617188
    8. ' adj' → logprob: -3.3242721557617188
    9. ' adjacent' → logprob: -4.074272155761719
    10. ' min' → logprob: -4.574272155761719

Token 1993: ' doit' (ID: 21822)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8464555740356445
    2. 'continue' → logprob: -1.3464555740356445
    3. '   ' → logprob: -2.0964555740356445
    4. ':' → logprob: -2.9714555740356445
    5. ' continue' → logprob: -3.2214555740356445
    6. 'contin' → logprob: -3.5964555740356445
    7. ' for' → logprob: -3.9714555740356445
    8. ' devra' → logprob: -4.0964555740356445
    9. ' doit' → logprob: -5.0964555740356445
    10. '       ' → logprob: -5.3464555740356445

Token 1994: ' trouver' (ID: 23195)
  Prédit: 'chercher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chercher' → logprob: -0.8460627198219299
    2. 'v' → logprob: -1.5960626602172852
    3. 'tr' → logprob: -1.5960626602172852
    4. ' vérifier' → logprob: -2.596062660217285
    5. 'check' → logprob: -4.471062660217285
    6. ' chercher' → logprob: -4.596062660217285
    7. ' trouver' → logprob: -4.596062660217285
    8. 'expl' → logprob: -4.721062660217285
    9. 'checker' → logprob: -4.971062660217285
    10. 'for' → logprob: -5.096062660217285

Token 1995: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.232190489768982
    2. 'la' → logprob: -1.732190489768982
    3. 'au' → logprob: -2.3571906089782715
    4. ' au' → logprob: -2.6071906089782715
    5. 'une' → logprob: -2.9821906089782715
    6. 'le' → logprob: -2.9821906089782715
    7. 'les' → logprob: -3.1071906089782715
    8. 'l' → logprob: -3.4821906089782715
    9. ' une' → logprob: -3.4821906089782715
    10. ' les' → logprob: -3.6071906089782715

Token 1996: ' distance' (ID: 9324)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.6625490188598633
    2. 'minimum' → logprob: -1.4125490188598633
    3. ' minimum' → logprob: -2.4125490188598633
    4. 'min' → logprob: -2.7875490188598633
    5. 'minimal' → logprob: -2.9125490188598633
    6. 'adj' → logprob: -4.412549018859863
    7. ' min' → logprob: -5.037549018859863
    8. 'best' → logprob: -5.412549018859863
    9. ' minimale' → logprob: -6.162549018859863
    10. 'possible' → logprob: -6.162549018859863

Token 1997: ' minimale' (ID: 143217)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8932880759239197
    2. 's' → logprob: -1.5182881355285645
    3. '_from' → logprob: -2.0182881355285645
    4. '_to' → logprob: -2.6432881355285645
    5. 'aux' → logprob: -3.1432881355285645
    6. '_min' → logprob: -3.5182881355285645
    7. 'from' → logprob: -4.0182881355285645
    8. '```' → logprob: -4.0182881355285645
    9. '_aux' → logprob: -4.8932881355285645
    10. '_des' → logprob: -5.1432881355285645

Token 1998: ' aller' (ID: 18383)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.3215304613113403
    2. 'from' → logprob: -2.321530342102051
    3. ' aux' → logprob: -2.446530342102051
    4. 'aux' → logprob: -2.571530342102051
    5. '_to' → logprob: -2.696530342102051
    6. 'to' → logprob: -2.821530342102051
    7. '   ' → logprob: -3.071530342102051
    8. ' à' → logprob: -3.321530342102051
    9. 'à' → logprob: -3.446530342102051
    10. ' ' → logprob: -3.446530342102051

Token 1999: '-ret' (ID: 104824)
  Prédit: '-ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ret' → logprob: -0.0037194383330643177
    2. '-' → logprob: -5.753719329833984
    3. '_ret' → logprob: -9.253719329833984
    4. '-return' → logprob: -9.378719329833984
    5. '-sur' → logprob: -9.753719329833984
    6. 'ret' → logprob: -9.753719329833984
    7. '   ' → logprob: -10.253719329833984
    8. '-et' → logprob: -10.378719329833984
    9. '-r' → logprob: -10.503719329833984
    10. '+' → logprob: -10.503719329833984

Token 2000: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0005650650127790868
    2. 'out' → logprob: -8.250565528869629
    3. 'urn' → logprob: -9.750565528869629
    4. 'o' → logprob: -9.875565528869629
    5. 'ourn' → logprob: -10.250565528869629
    6. 'tour' → logprob: -10.375565528869629
    7. 'ourt' → logprob: -10.875565528869629
    8. 'ou' → logprob: -10.875565528869629
    9. 'et' → logprob: -11.125565528869629
    10. 'ot' → logprob: -11.375565528869629

Token 2001: ' depuis' (ID: 16277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6524832844734192
    2. ' vers' → logprob: -2.5274832248687744
    3. ' à' → logprob: -2.7774832248687744
    4. '       ' → logprob: -3.1524832248687744
    5. '_from' → logprob: -3.4024832248687744
    6. '_to' → logprob: -3.5274832248687744
    7. 'from' → logprob: -3.5274832248687744
    8. ' aux' → logprob: -3.7774832248687744
    9. ',' → logprob: -3.9024832248687744
    10. ')' → logprob: -4.0274834632873535

Token 2002: '
' (ID: 198)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.4408973753452301
    2. ' une' → logprob: -1.8158973455429077
    3. 'la' → logprob: -2.6908974647521973
    4. 'dist' → logprob: -3.1908974647521973
    5. 'l' → logprob: -3.6908974647521973
    6. ''une' → logprob: -4.190897464752197
    7. 'adj' → logprob: -4.565897464752197
    8. ' la' → logprob: -5.190897464752197
    9. '```' → logprob: -5.190897464752197
    10. ' ' → logprob: -5.565897464752197

Token 2003: '   ' (ID: 271)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.1284416764974594
    2. 'la' → logprob: -2.503441572189331
    3. '#' → logprob: -4.37844181060791
    4. '   ' → logprob: -4.62844181060791
    5. 'les' → logprob: -4.75344181060791
    6. 'l' → logprob: -5.37844181060791
    7. ' une' → logprob: -7.00344181060791
    8. 'ses' → logprob: -7.50344181060791
    9. 'sa' → logprob: -7.50344181060791
    10. ''une' → logprob: -8.12844181060791

Token 2004: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3674914836883545
    2. 'la' → logprob: -1.3674914836883545
    3. 'une' → logprob: -1.4924914836883545
    4. 'dist' → logprob: -2.1174914836883545
    5. 'l' → logprob: -3.1174914836883545
    6. 'i' → logprob: -3.1174914836883545
    7. 'les' → logprob: -3.9924914836883545
    8. 'ni' → logprob: -4.117491722106934
    9. 'adj' → logprob: -5.617491722106934
    10. 'le' → logprob: -5.867491722106934

Token 2005: ' l' (ID: 305)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6948496699333191
    2. 'l' → logprob: -1.4448497295379639
    3. 'dist' → logprob: -2.069849729537964
    4. 'la' → logprob: -2.694849729537964
    5. 'les' → logprob: -3.444849729537964
    6. ' une' → logprob: -4.194849491119385
    7. 'us' → logprob: -5.069849491119385
    8. '   ' → logprob: -5.444849491119385
    9. ' dist' → logprob: -6.444849491119385
    10. ' ' → logprob: -6.694849491119385

Token 2006: ''us' (ID: 143210)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.4915430545806885
    2. ''us' → logprob: -1.2415430545806885
    3. 'i' → logprob: -3.1165430545806885
    4. ''i' → logprob: -3.9915430545806885
    5. 'A' → logprob: -4.491542816162109
    6. 'dist' → logprob: -4.866542816162109
    7. ''-' → logprob: -5.991542816162109
    8. 'case' → logprob: -6.241542816162109
    9. 'u' → logprob: -6.616542816162109
    10. ''' → logprob: -6.991542816162109

Token 2007: 'ine' (ID: 514)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7315130233764648
    2. 'er' → logprob: -1.2315130233764648
    3. 't' → logprob: -2.231513023376465
    4. 'ère' → logprob: -3.606513023376465
    5. 'ine' → logprob: -3.606513023376465
    6. 'i' → logprob: -4.106513023376465
    7. '   ' → logprob: -4.481513023376465
    8. 'tile' → logprob: -4.856513023376465
    9. 'f' → logprob: -5.106513023376465
    10. 'r' → logprob: -5.356513023376465

Token 2008: ' vers' (ID: 3640)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6890507936477661
    2. ' vers' → logprob: -1.6890507936477661
    3. ',' → logprob: -1.8140507936477661
    4. ' aux' → logprob: -3.4390506744384766
    5. ' à' → logprob: -3.8140506744384766
    6. '       ' → logprob: -3.8140506744384766
    7. 'adj' → logprob: -4.439050674438477
    8. 'à' → logprob: -4.939050674438477
    9. ' (' → logprob: -5.064050674438477
    10. ')' → logprob: -5.439050674438477

Token 2009: ' UNE' (ID: 132768)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.21907056868076324
    2. 'une' → logprob: -1.844070553779602
    3. 'adj' → logprob: -4.7190704345703125
    4. 'les' → logprob: -4.8440704345703125
    5. 'l' → logprob: -5.4690704345703125
    6. 'au' → logprob: -5.8440704345703125
    7. ' les' → logprob: -6.0940704345703125
    8. 'un' → logprob: -6.0940704345703125
    9. ''une' → logprob: -6.4690704345703125
    10. ' un' → logprob: -6.7190704345703125

Token 2010: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.013073049485683441
    2. 'case' → logprob: -4.388072967529297
    3. ' ' → logprob: -8.638072967529297
    4. 'adj' → logprob: -9.388072967529297
    5. ' adjacent' → logprob: -9.638072967529297
    6. ' cellule' → logprob: -9.638072967529297
    7. ' adj' → logprob: -10.388072967529297
    8. '_case' → logprob: -10.513072967529297
    9. ' des' → logprob: -10.638072967529297
    10. ' cell' → logprob: -11.638072967529297

Token 2011: ' vide' (ID: 21835)
  Prédit: ' vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -0.3618472218513489
    2. 'vide' → logprob: -1.361847162246704
    3. ' sans' → logprob: -3.361847162246704
    4. 'sans' → logprob: -4.736847400665283
    5. ' adj' → logprob: -6.611847400665283
    6. '    ' → logprob: -7.611847400665283
    7. ' without' → logprob: -7.611847400665283
    8. 'adj' → logprob: -7.986847400665283
    9. 'vid' → logprob: -8.111846923828125
    10. ' ' → logprob: -8.986846923828125

Token 2012: ' adj' (ID: 20251)
  Prédit: ' adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.9268200993537903
    2. 'adj' → logprob: -1.1768200397491455
    3. '   ' → logprob: -1.4268200397491455
    4. ',' → logprob: -4.426820278167725
    5. 's' → logprob: -4.676820278167725
    6. '```' → logprob: -4.801820278167725
    7. '_adj' → logprob: -5.426820278167725
    8. ' adjacent' → logprob: -5.676820278167725
    9. '       ' → logprob: -5.801820278167725
    10. '               ' → logprob: -6.176820278167725

Token 2013: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.001135454629547894
    2. 'acent' → logprob: -7.501135349273682
    3. 'cente' → logprob: -7.876135349273682
    4. 'acency' → logprob: -9.75113582611084
    5. '   ' → logprob: -10.12613582611084
    6. '
' → logprob: -10.75113582611084
    7. 'a' → logprob: -10.75113582611084
    8. ')' → logprob: -11.50113582611084
    9. 'ente' → logprob: -12.50113582611084
    10. '#' → logprob: -12.50113582611084

Token 2014: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -1.9504606825648807e-05
    2. 'ent' → logprob: -11.125019073486328
    3. 'cente' → logprob: -13.625019073486328
    4. 'ante' → logprob: -13.750019073486328
    5. 'ENTE' → logprob: -13.750019073486328
    6. '
' → logprob: -14.750019073486328
    7. '   ' → logprob: -15.250019073486328
    8. 'ac' → logprob: -15.750019073486328
    9. '#' → logprob: -16.000019073486328
    10. 'entes' → logprob: -16.375019073486328

Token 2015: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023204592987895012
    2. 'for' → logprob: -4.648204803466797
    3. 'min' → logprob: -5.023204803466797
    4. '
' → logprob: -6.273204803466797
    5. 'import' → logprob: -7.148204803466797
    6. ' for' → logprob: -7.273204803466797
    7. '#' → logprob: -7.773204803466797
    8. 'best' → logprob: -7.898204803466797
    9. 'result' → logprob: -7.898204803466797
    10. 'minimum' → logprob: -8.023204803466797

Token 2016: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06495139002799988
    2. '(i' → logprob: -3.4399514198303223
    3. ' i' → logprob: -4.064951419830322
    4. ' (' → logprob: -4.439951419830322
    5. '   ' → logprob: -7.314951419830322
    6. '[i' → logprob: -8.064950942993164
    7. '
' → logprob: -8.814950942993164
    8. '(' → logprob: -9.064950942993164
    9. ',' → logprob: -9.064950942993164
    10. 'ni' → logprob: -9.314950942993164

Token 2017: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.8802491215174086e-05
    2. ' i' → logprob: -10.750028610229492
    3. '   ' → logprob: -12.250028610229492
    4. '                   ' → logprob: -13.625028610229492
    5. '           ' → logprob: -14.375028610229492
    6. '               ' → logprob: -15.375028610229492
    7. '	i' → logprob: -15.375028610229492
    8. '                           ' → logprob: -15.750028610229492
    9. '       ' → logprob: -16.000028610229492
    10. '                       ' → logprob: -17.250028610229492

Token 2018: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.009788908995687962
    2. ',' → logprob: -4.634788990020752
    3. '   ' → logprob: -10.884788513183594
    4. '-' → logprob: -11.884788513183594
    5. ' ,' → logprob: -12.509788513183594
    6. 'j' → logprob: -13.884788513183594
    7. ' ' → logprob: -13.884788513183594
    8. ',i' → logprob: -14.134788513183594
    9. '  ' → logprob: -15.634788513183594
    10. '
' → logprob: -15.759788513183594

Token 2019: ').
' (ID: 6294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2557283937931061
    2. '       ' → logprob: -2.2557284832000732
    3. '                   ' → logprob: -2.3807284832000732
    4. ',' → logprob: -5.005728244781494
    5. '           ' → logprob: -5.005728244781494
    6. '               ' → logprob: -5.630728244781494
    7. '.' → logprob: -5.755728244781494
    8. ')' → logprob: -6.630728244781494
    9. ':' → logprob: -6.880728244781494
    10. '                       ' → logprob: -7.005728244781494

Token 2020: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019414380192756653
    2. '
' → logprob: -4.01941442489624
    3. '    
' → logprob: -7.26941442489624
    4. 'for' → logprob: -7.76941442489624
    5. 'import' → logprob: -10.394413948059082
    6. 'def' → logprob: -11.269413948059082
    7. '```' → logprob: -11.269413948059082
    8. '       ' → logprob: -11.394413948059082
    9. '#' → logprob: -11.519413948059082
    10. ' for' → logprob: -11.519413948059082

Token 2021: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009892315603792667
    2. 'min' → logprob: -5.259892463684082
    3. '
' → logprob: -7.009892463684082
    4. 'total' → logprob: -7.134892463684082
    5. 'cut' → logprob: -7.509892463684082
    6. 'result' → logprob: -7.759892463684082
    7. 'cost' → logprob: -7.884892463684082
    8. 'minimum' → logprob: -7.884892463684082
    9. '    
' → logprob: -8.134892463684082
    10. 'for' → logprob: -8.509892463684082

Token 2022: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005515484604984522
    2. '
' → logprob: -5.8805155754089355
    3. '    
' → logprob: -6.2555155754089355
    4. 'for' → logprob: -8.630515098571777
    5. 'min' → logprob: -9.130515098571777
    6. '#' → logprob: -9.255515098571777
    7. 'cut' → logprob: -9.505515098571777
    8. 'cost' → logprob: -10.005515098571777
    9. 'import' → logprob: -10.130515098571777
    10. 'total' → logprob: -10.380515098571777

Token 2023: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23666498064994812
    2. 'min' → logprob: -1.8616650104522705
    3. '#' (adapté à ' #') → logprob: -4.236664772033691
    4. 'cost' → logprob: -4.611664772033691
    5. 'cut' → logprob: -4.861664772033691
    6. 'best' → logprob: -4.986664772033691
    7. 'for' → logprob: -5.361664772033691
    8. ' min' → logprob: -5.736664772033691
    9. 'minimal' → logprob: -5.986664772033691
    10. ' minimal' → logprob: -7.111664772033691

Token 2024: ' Puis' (ID: 87717)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3638983368873596
    2. 'for' → logprob: -2.363898277282715
    3. 'min' → logprob: -2.488898277282715
    4. 'cost' → logprob: -3.238898277282715
    5. 'cut' → logprob: -3.988898277282715
    6. 'res' → logprob: -3.988898277282715
    7. 'result' → logprob: -4.488898277282715
    8. '#' → logprob: -4.613898277282715
    9. 'total' → logprob: -4.613898277282715
    10. 'answer' → logprob: -5.113898277282715

Token 2025: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5705189108848572
    2. 'for' → logprob: -1.445518970489502
    3. '#' → logprob: -1.695518970489502
    4. ' for' → logprob: -4.570518970489502
    5. 'min' → logprob: -6.445518970489502
    6. 'import' → logprob: -6.945518970489502
    7. '
' → logprob: -7.320518970489502
    8. 'cost' → logprob: -7.820518970489502
    9. ' #' → logprob: -7.945518970489502
    10. 'on' → logprob: -8.070518493652344

Token 2026: ' coût' (ID: 73109)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13261616230010986
    2. '#' → logprob: -2.3826160430908203
    3. ' for' → logprob: -3.8826160430908203
    4. '   ' → logprob: -5.50761604309082
    5. 'min' → logprob: -6.50761604309082
    6. 'minimum' → logprob: -6.50761604309082
    7. 'continue' → logprob: -6.63261604309082
    8. '
' → logprob: -7.38261604309082
    9. 'cost' → logprob: -8.00761604309082
    10. 'possible' → logprob: -8.13261604309082

Token 2027: ' total' (ID: 3609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17262159287929535
    2. '=' → logprob: -2.297621488571167
    3. '   ' → logprob: -3.922621488571167
    4. 's' → logprob: -4.422621726989746
    5. 'for' → logprob: -4.422621726989746
    6. '#' → logprob: -5.797621726989746
    7. 'est' → logprob: -6.547621726989746
    8. 'total' → logprob: -6.672621726989746
    9. 'max' → logprob: -6.672621726989746
    10. 'pour' → logprob: -6.797621726989746

Token 2028: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7002811431884766
    2. ' =' → logprob: -0.7002811431884766
    3. 'total' → logprob: -5.825281143188477
    4. '   ' → logprob: -6.575281143188477
    5. '_total' → logprob: -6.825281143188477
    6. 'for' → logprob: -7.200281143188477
    7. 's' → logprob: -8.575281143188477
    8. '#' → logprob: -8.825281143188477
    9. ' total' → logprob: -9.075281143188477
    10. 'final' → logprob: -9.450281143188477

Token 2029: ' ces' (ID: 10532)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7607574462890625
    2. 'i' → logprob: -1.2607574462890625
    3. 'cou' → logprob: -1.8857574462890625
    4. 'cut' → logprob: -3.2607574462890625
    5. ' i' → logprob: -3.5107574462890625
    6. ' couper' → logprob: -4.2607574462890625
    7. ' chaque' → logprob: -5.2607574462890625
    8. ' (' → logprob: -6.5107574462890625
    9. 'c' → logprob: -6.8857574462890625
    10. '#' → logprob: -7.5107574462890625

Token 2030: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.1306833177804947
    2. 'i' → logprob: -3.755683422088623
    3. 'arb' → logprob: -3.880683422088623
    4. 'for' → logprob: -4.130683422088623
    5. ' for' → logprob: -4.255683422088623
    6. 'ar' → logprob: -4.505683422088623
    7. ' i' → logprob: -4.630683422088623
    8. '(i' → logprob: -4.755683422088623
    9. 'trees' → logprob: -5.505683422088623
    10. ' arbre' → logprob: -5.880683422088623

Token 2031: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2673201262950897
    2. ' =' → logprob: -2.267320156097412
    3. 'for' → logprob: -3.517320156097412
    4. '=' → logprob: -3.642320156097412
    5. 'total' → logprob: -3.642320156097412
    6. 'import' → logprob: -3.892320156097412
    7. '
' → logprob: -5.017320156097412
    8. ' est' → logprob: -5.517320156097412
    9. ' for' → logprob: -5.642320156097412
    10. ' total' → logprob: -5.892320156097412

Token 2032: ' :
' (ID: 10039)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34797239303588867
    2. '   ' → logprob: -1.9729723930358887
    3. ' n' → logprob: -3.0979723930358887
    4. 'n' → logprob: -3.8479723930358887
    5. ' float' → logprob: -3.8479723930358887
    6. 'float' → logprob: -4.472972393035889
    7. ' sum' → logprob: -4.722972393035889
    8. 'sum' → logprob: -4.972972393035889
    9. ' min' → logprob: -5.097972393035889
    10. ' ' → logprob: -5.222972393035889

Token 2033: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002173458691686392
    2. 'total' → logprob: -7.50217342376709
    3. '       ' → logprob: -7.75217342376709
    4. '#' → logprob: -8.00217342376709
    5. '```' → logprob: -8.00217342376709
    6. 'def' → logprob: -9.50217342376709
    7. '`' → logprob: -9.87717342376709
    8. ' =' → logprob: -10.12717342376709
    9. '
' → logprob: -10.12717342376709
    10. '0' → logprob: -10.25217342376709

Token 2034: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07799208164215088
    2. '0' → logprob: -3.2029919624328613
    3. '(' → logprob: -4.577991962432861
    4. 'n' → logprob: -5.702991962432861
    5. '(n' → logprob: -5.702991962432861
    6. ' (' → logprob: -6.077991962432861
    7. '#' (adapté à ' #') → logprob: -6.327991962432861
    8. ' n' → logprob: -6.452991962432861
    9. '=' → logprob: -6.577991962432861
    10. '`' → logprob: -6.577991962432861

Token 2035: ' nombre' (ID: 9733)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.9601219892501831
    2. '   ' → logprob: -2.0851221084594727
    3. '(' → logprob: -2.5851221084594727
    4. 'min' → logprob: -2.7101221084594727
    5. 'n' → logprob: -2.7101221084594727
    6. '#' → logprob: -2.8351221084594727
    7. 'total' → logprob: -3.0851221084594727
    8. 'dist' → logprob: -3.2101221084594727
    9. 'cost' → logprob: -3.7101221084594727
    10. '(n' → logprob: -3.8351221084594727

Token 2036: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.56845623254776
    2. '_ar' → logprob: -0.94345623254776
    3. '_de' → logprob: -4.443456172943115
    4. ' *' → logprob: -4.943456172943115
    5. '_d' → logprob: -5.318456172943115
    6. '   ' → logprob: -5.568456172943115
    7. '_des' → logprob: -5.818456172943115
    8. 'd' → logprob: -6.068456172943115
    9. ' =' → logprob: -6.193456172943115
    10. '_total' → logprob: -6.443456172943115

Token 2037: 'arb' (ID: 36740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.619588315486908
    2. '_ar' → logprob: -0.994588315486908
    3. 'ar' → logprob: -2.4945883750915527
    4. 'd' → logprob: -6.119588375091553
    5. 'arb' → logprob: -6.244588375091553
    6. '_cells' → logprob: -7.244588375091553
    7. 'de' → logprob: -7.369588375091553
    8. '_d' → logprob: -7.494588375091553
    9. '_tree' → logprob: -7.619588375091553
    10. 'trees' → logprob: -7.869588375091553

Token 2038: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03657020255923271
    2. 'es' → logprob: -3.5365703105926514
    3. 're' → logprob: -5.911570072174072
    4. 'bres' → logprob: -7.036570072174072
    5. 's' → logprob: -7.286570072174072
    6. '=' → logprob: -7.536570072174072
    7. 'rés' → logprob: -7.911570072174072
    8. 'és' → logprob: -8.41157054901123
    9. 'ées' → logprob: -8.41157054901123
    10. 'trees' → logprob: -8.41157054901123

Token 2039: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0013965456746518612
    2. '*' → logprob: -7.126396656036377
    3. ' =' → logprob: -7.876396656036377
    4. ')' → logprob: -9.376396179199219
    5. '[i' → logprob: -10.251396179199219
    6. '   ' → logprob: -11.001396179199219
    7. '=' → logprob: -11.376396179199219
    8. ',' → logprob: -11.751396179199219
    9. '*(' → logprob: -11.751396179199219
    10. ' ' → logprob: -12.001396179199219

Token 2040: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1429768055677414
    2. ' (' → logprob: -2.017976760864258
    3. '((' → logprob: -8.517976760864258
    4. ' ((' → logprob: -10.142976760864258
    5. '(dist' → logprob: -11.017976760864258
    6. '(min' → logprob: -11.642976760864258
    7. 'min' → logprob: -12.142976760864258
    8. '(
' → logprob: -12.642976760864258
    9. 'dist' → logprob: -12.767976760864258
    10. '`' → logprob: -12.892976760864258

Token 2041: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6479833722114563
    2. '(' → logprob: -0.7729833722114563
    3. 'min' → logprob: -4.772983551025391
    4. ' (' → logprob: -5.772983551025391
    5. '(min' → logprob: -6.397983551025391
    6. ' ' → logprob: -7.272983551025391
    7. '(lambda' → logprob: -8.39798355102539
    8. '1' → logprob: -8.64798355102539
    9. 'dist' → logprob: -9.14798355102539
    10. '((' → logprob: -9.14798355102539

Token 2042: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029751643538475037
    2. '*' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.154751777648926
    4. ' ' → logprob: -15.404751777648926
    5. '**' → logprob: -16.02975082397461
    6. ' **' → logprob: -16.52975082397461
    7. '*object' → logprob: -18.27975082397461
    8. '   ' → logprob: -18.77975082397461
    9. '```' → logprob: -19.15475082397461
    10. '*out' → logprob: -19.15475082397461

Token 2043: ' distance' (ID: 9324)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3766246438026428
    2. 'dist' → logprob: -1.251624584197998
    3. '(min' → logprob: -4.376624584197998
    4. '(dist' → logprob: -4.876624584197998
    5. '(
' → logprob: -5.376624584197998
    6. ' min' → logprob: -7.126624584197998
    7. '(' → logprob: -7.626624584197998
    8. '
' → logprob: -7.626624584197998
    9. '```' → logprob: -8.001625061035156
    10. ' dist' → logprob: -8.626625061035156

Token 2044: ' +' (ID: 659)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.8939692378044128
    2. '+' → logprob: -1.3939692974090576
    3. ' +' → logprob: -2.0189692974090576
    4. '   ' → logprob: -3.0189692974090576
    5. '[' → logprob: -3.2689692974090576
    6. '[i' → logprob: -3.2689692974090576
    7. ')' → logprob: -3.5189692974090576
    8. '_' → logprob: -4.0189690589904785
    9. 'from' → logprob: -4.5189690589904785
    10. '_adj' → logprob: -4.8939690589904785

Token 2045: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005240037105977535
    2. ' ' → logprob: -5.255239963531494
    3. '   ' → logprob: -13.255240440368652
    4. ')' → logprob: -13.255240440368652
    5. '```' → logprob: -13.255240440368652
    6. '0' → logprob: -14.880240440368652
    7. '
' → logprob: -15.380240440368652
    8. ' +' → logprob: -15.880240440368652
    9. '    ' → logprob: -16.630239486694336
    10. '+' → logprob: -16.755239486694336

Token 2046: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -14.750075340270996
    4. '```' → logprob: -15.500075340270996
    5. '   ' → logprob: -16.000076293945312
    6. '
' → logprob: -17.125076293945312
    7. '0' → logprob: -17.750076293945312
    8. ' ' → logprob: -18.750076293945312
    9. ' )' → logprob: -19.250076293945312
    10. '`' → logprob: -19.375076293945312

Token 2047: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023463957477360964
    2. ')
' → logprob: -6.377346515655518
    3. '   ' → logprob: -7.877346515655518
    4. ')
' → logprob: -8.75234603881836
    5. ')`' → logprob: -10.12734603881836
    6. ' )' → logprob: -10.75234603881836
    7. ')`
' → logprob: -11.12734603881836
    8. '))' → logprob: -11.37734603881836
    9. '       ' → logprob: -12.50234603881836
    10. ')\' → logprob: -12.62734603881836

Token 2048: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037629637867212296
    2. '
' → logprob: -3.4126296043395996
    3. '    
' → logprob: -5.6626296043396
    4. 'total' → logprob: -8.287630081176758
    5. 'import' → logprob: -9.662630081176758
    6. 'for' → logprob: -10.162630081176758
    7. 'def' → logprob: -10.287630081176758
    8. '#' → logprob: -10.412630081176758
    9. 'cost' → logprob: -10.662630081176758
    10. '    
    
' → logprob: -11.537630081176758

Token 2049: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017740249633789062
    2. 'total' → logprob: -4.767740249633789
    3. '
' → logprob: -4.892740249633789
    4. '    
' → logprob: -7.392740249633789
    5. 'cost' → logprob: -7.892740249633789
    6. '#' → logprob: -8.767740249633789
    7. 'for' → logprob: -9.142740249633789
    8. 'min' → logprob: -9.267740249633789
    9. 'result' → logprob: -9.642740249633789
    10. ' total' → logprob: -10.267740249633789

Token 2050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005705042742192745
    2. 'total' → logprob: -5.755704879760742
    3. '    
' → logprob: -6.880704879760742
    4. 'min' → logprob: -7.505704879760742
    5. '
' → logprob: -8.005704879760742
    6. 'best' → logprob: -9.005704879760742
    7. 'cost' → logprob: -9.005704879760742
    8. 'minimum' → logprob: -9.505704879760742
    9. 'result' → logprob: -9.880704879760742
    10. '#' → logprob: -10.130704879760742

Token 2051: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2346418797969818
    2. 'min' → logprob: -2.8596417903900146
    3. 'total' → logprob: -2.8596417903900146
    4. 'best' → logprob: -3.3596417903900146
    5. 'result' → logprob: -3.9846417903900146
    6. '#' (adapté à ' #') → logprob: -4.484642028808594
    7. 'cost' → logprob: -4.859642028808594
    8. 'res' → logprob: -4.859642028808594
    9. 'for' → logprob: -5.359642028808594
    10. 'cut' → logprob: -6.359642028808594

Token 2052: ' sum' (ID: 4215)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.42667731642723083
    2. '   ' → logprob: -2.1766772270202637
    3. 'best' → logprob: -2.3016772270202637
    4. 'cost' → logprob: -3.1766772270202637
    5. 'total' → logprob: -3.3016772270202637
    6. '#' → logprob: -4.051677227020264
    7. 'res' → logprob: -4.926677227020264
    8. 'minimal' → logprob: -4.926677227020264
    9. 'result' → logprob: -5.051677227020264
    10. 'cut' → logprob: -5.676677227020264

Token 2053: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.295032262802124
    2. ' =' → logprob: -1.295032262802124
    3. '_' → logprob: -1.420032262802124
    4. 'for' → logprob: -2.670032262802124
    5. '_total' → logprob: -3.170032262802124
    6. '=' → logprob: -3.670032262802124
    7. '_cost' → logprob: -4.295032501220703
    8. '_of' → logprob: -4.795032501220703
    9. '(
' → logprob: -5.045032501220703
    10. '_for' → logprob: -5.170032501220703

Token 2054: ' tout' (ID: 5501)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9502303004264832
    2. 'cost' → logprob: -1.200230360031128
    3. ' total' → logprob: -2.075230360031128
    4. 'i' → logprob: -2.950230360031128
    5. 'for' → logprob: -3.075230360031128
    6. 'c' → logprob: -3.950230360031128
    7. ' i' → logprob: -4.075230121612549
    8. ' cost' → logprob: -4.450230121612549
    9. ' for' → logprob: -4.450230121612549
    10. 'co' → logprob: -5.575230121612549

Token 2055: ' pour' (ID: 1930)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2531448304653168
    2. '   ' → logprob: -1.6281448602676392
    3. '
' → logprob: -4.12814474105835
    4. 'cost' → logprob: -4.87814474105835
    5. ' total' → logprob: -6.75314474105835
    6. ' =' → logprob: -7.87814474105835
    7. '```' → logprob: -7.87814474105835
    8. '    
' → logprob: -8.128145217895508
    9. '=' → logprob: -8.378145217895508
    10. 'result' → logprob: -8.503145217895508

Token 2056: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08203879743814468
    2. ' i' → logprob: -2.9570388793945312
    3. 'cut' → logprob: -4.582038879394531
    4. '(i' → logprob: -4.707038879394531
    5. ' chaque' → logprob: -6.332038879394531
    6. 'arb' → logprob: -7.332038879394531
    7. 'all' → logprob: -7.582038879394531
    8. 'case' → logprob: -7.582038879394531
    9. 'ar' → logprob: -7.707038879394531
    10. ' toutes' → logprob: -8.207038879394531

Token 2057: ' cellule' (ID: 169440)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.3694669306278229
    2. ' i' → logprob: -2.24446702003479
    3. ' (' → logprob: -3.24446702003479
    4. 'for' → logprob: -3.36946702003479
    5. 'i' → logprob: -3.49446702003479
    6. '   ' → logprob: -4.119466781616211
    7. ' arbre' → logprob: -4.119466781616211
    8. ' for' → logprob: -4.244466781616211
    9. '
' → logprob: -4.244466781616211
    10. 'case' → logprob: -4.744466781616211

Token 2058: ' avec' (ID: 3937)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2812034487724304
    2. '   ' → logprob: -1.6562035083770752
    3. 'cost' → logprob: -3.531203508377075
    4. '
' → logprob: -4.031203269958496
    5. 'result' → logprob: -6.781203269958496
    6. ' total' → logprob: -6.781203269958496
    7. '#' → logprob: -7.156203269958496
    8. 'min' → logprob: -7.156203269958496
    9. 'time' → logprob: -7.406203269958496
    10. '    
' → logprob: -7.531203269958496

Token 2059: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.20354308187961578
    2. ' arbres' → logprob: -1.7035430669784546
    3. 'ar' → logprob: -6.953543186187744
    4. ' des' → logprob: -7.453543186187744
    5. 'trees' → logprob: -8.453542709350586
    6. ' arb' → logprob: -9.578542709350586
    7. 'des' → logprob: -9.578542709350586
    8. '   ' → logprob: -9.828542709350586
    9. ' arbre' → logprob: -9.828542709350586
    10. '>' → logprob: -10.203542709350586

Token 2060: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39565926790237427
    2. 'total' → logprob: -1.1456592082977295
    3. 'cost' → logprob: -5.395659446716309
    4. '
' → logprob: -6.270659446716309
    5. '    
' → logprob: -7.395659446716309
    6. 'min' → logprob: -7.770659446716309
    7. 'result' → logprob: -8.145659446716309
    8. ' total' → logprob: -8.520659446716309
    9. 'ans' → logprob: -9.020659446716309
    10. 'best' → logprob: -9.395659446716309

Token 2061: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3987204134464264
    2. 'total' → logprob: -1.148720383644104
    3. 'cost' → logprob: -5.2737202644348145
    4. 'cut' → logprob: -6.1487202644348145
    5. '    
' → logprob: -6.5237202644348145
    6. '#' → logprob: -7.0237202644348145
    7. '
' → logprob: -7.1487202644348145
    8. 'result' → logprob: -7.7737202644348145
    9. 'def' → logprob: -8.148720741271973
    10. 'min' → logprob: -8.523720741271973

Token 2062: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.50904381275177
    2. 'total' → logprob: -1.13404381275177
    3. 'cost' → logprob: -3.3840436935424805
    4. '#' → logprob: -4.3840436935424805
    5. 'min' → logprob: -4.5090436935424805
    6. 'cut' → logprob: -4.5090436935424805
    7. 'result' → logprob: -6.6340436935424805
    8. 'INF' (adapté à ' INF') → logprob: -6.6340436935424805
    9. 'def' → logprob: -7.0090436935424805
    10. 'res' → logprob: -7.1340436935424805

Token 2063: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006272526225075126
    2. '=' → logprob: -7.375627040863037
    3. 'INF' → logprob: -14.875627517700195
    4. '   ' → logprob: -15.750627517700195
    5. '    ' → logprob: -16.875627517700195
    6. ',' → logprob: -17.125627517700195
    7. '=int' → logprob: -17.375627517700195
    8. ' INF' → logprob: -17.500627517700195
    9. ' =
' → logprob: -17.750627517700195
    10. ' ' → logprob: -17.875627517700195

Token 2064: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00046677692444063723
    2. 'float' → logprob: -7.750466823577881
    3. 'int' → logprob: -10.250466346740723
    4. '1' → logprob: -14.250466346740723
    5. ' ' → logprob: -16.37546730041504
    6. '100' → logprob: -17.37546730041504
    7. ' float' → logprob: -18.00046730041504
    8. 'sys' → logprob: -19.50046730041504
    9. '999' → logprob: -20.37546730041504
    10. '(' → logprob: -21.00046730041504

Token 2065: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003368926409166306
    2. 'float' → logprob: -8.250336647033691
    3. 'int' → logprob: -9.500336647033691
    4. '1' → logprob: -14.750336647033691
    5. '100' → logprob: -15.500336647033691
    6. ' ' → logprob: -16.250337600708008
    7. '999' → logprob: -18.000337600708008
    8. ' float' → logprob: -18.750337600708008
    9. 'sys' → logprob: -18.875337600708008
    10. '(' → logprob: -19.375337600708008

Token 2066: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002251125843031332
    2. '7' → logprob: -9.250225067138672
    3. '6' → logprob: -9.500225067138672
    4. '8' → logprob: -10.375225067138672
    5. '**' → logprob: -10.750225067138672
    6. '09' → logprob: -14.000225067138672
    7. '10' → logprob: -15.125225067138672
    8. '12' → logprob: -15.750225067138672
    9. '18' → logprob: -15.750225067138672
    10. '000' → logprob: -16.125225067138672

Token 2067: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00016682932619005442
    2. '15' → logprob: -8.750166893005371
    3. '18' → logprob: -12.625166893005371
    4. '12' → logprob: -12.750166893005371
    5. '6' → logprob: -13.750166893005371
    6. '7' → logprob: -14.125166893005371
    7. '10' → logprob: -15.625166893005371
    8. '8' → logprob: -16.000165939331055
    9. '14' → logprob: -16.625165939331055
    10. '13' → logprob: -16.750165939331055

Token 2068: '

' (ID: 279)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.247344508767128
    2. '   ' → logprob: -1.6223444938659668
    3. '
' → logprob: -4.122344493865967
    4. 'for' → logprob: -6.372344493865967
    5. 'result' → logprob: -6.747344493865967
    6. 'cost' → logprob: -7.122344493865967
    7. '    
' → logprob: -7.247344493865967
    8. ' total' → logprob: -7.747344493865967
    9. 'min' → logprob: -8.122344970703125
    10. 'answer' → logprob: -8.997344970703125

Token 2069: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.04179089888930321
    2. '   ' → logprob: -3.5417909622192383
    3. 'cost' → logprob: -4.916790962219238
    4. 'result' → logprob: -5.916790962219238
    5. 'co' → logprob: -7.916790962219238
    6. 'res' → logprob: -8.041790962219238
    7. 'min' → logprob: -8.166790962219238
    8. 'answer' → logprob: -8.291790962219238
    9. 'cut' → logprob: -8.791790962219238
    10. '    
' → logprob: -8.791790962219238

Token 2070: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.041760142892599106
    2. 'result' → logprob: -3.916760206222534
    3. 'res' → logprob: -4.791759967803955
    4. 'cost' → logprob: -5.041759967803955
    5. 'answer' → logprob: -5.916759967803955
    6. 'ans' → logprob: -6.416759967803955
    7. 'min' → logprob: -7.291759967803955
    8. 'def' → logprob: -7.416759967803955
    9. '   ' → logprob: -7.666759967803955
    10. '#' → logprob: -9.791760444641113

Token 2071: '_time' (ID: 6425)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0655776783823967
    2. '_time' → logprob: -3.440577745437622
    3. '_cost' → logprob: -3.565577745437622
    4. '_co' → logprob: -6.565577507019043
    5. '_t' → logprob: -6.940577507019043
    6. '_total' → logprob: -8.065577507019043
    7. ' _' → logprob: -8.440577507019043
    8. '_c' → logprob: -10.440577507019043
    9. '_space' → logprob: -10.440577507019043
    10. '_times' → logprob: -11.315577507019043

Token 2072: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894655108451843
    2. '=' → logprob: -2.463946580886841
    3. '   ' → logprob: -13.088946342468262
    4. ' +=' → logprob: -13.588946342468262
    5. '_' → logprob: -13.838946342468262
    6. ')' → logprob: -13.838946342468262
    7. ',' → logprob: -14.963946342468262
    8. ' ' → logprob: -15.088946342468262
    9. '    ' → logprob: -15.338946342468262
    10. '_total' → logprob: -15.463946342468262

Token 2073: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -18.125123977661133
    4. ' ' → logprob: -21.625123977661133
    5. '```' → logprob: -23.375123977661133
    6. '=' → logprob: -23.625123977661133
    7. '  ' → logprob: -23.875123977661133
    8. '000' → logprob: -23.875123977661133
    9. '۰' → logprob: -24.250123977661133
    10. '00' → logprob: -25.000123977661133

Token 2074: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.625
    3. 'INF' → logprob: -20.25
    4. '   ' → logprob: -22.25
    5. 'int' → logprob: -23.625
    6. '000' → logprob: -23.625
    7. '```' → logprob: -23.75
    8. '۰' → logprob: -23.75
    9. 'float' → logprob: -23.875
    10. 'sys' → logprob: -24.375

Token 2075: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00909253116697073
    2. 'for' → logprob: -4.759092330932617
    3. '
' → logprob: -8.134092330932617
    4. ' for' → logprob: -8.634092330932617
    5. '    
' → logprob: -12.259092330932617
    6. '	for' → logprob: -13.634092330932617
    7. '```' → logprob: -14.509092330932617
    8. '       ' → logprob: -16.259092330932617
    9. ',' → logprob: -17.509092330932617
    10. '  
' → logprob: -17.884092330932617

Token 2076: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018167849630117416
    2. 'for' → logprob: -4.018167972564697
    3. ' for' → logprob: -11.143167495727539
    4. '    
' → logprob: -13.643167495727539
    5. '
' → logprob: -13.893167495727539
    6. '	for' → logprob: -13.893167495727539
    7. '```' → logprob: -15.018167495727539
    8. '       ' → logprob: -17.76816749572754
    9. 'import' → logprob: -18.89316749572754
    10. '        
' → logprob: -19.14316749572754

Token 2077: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.88418151892256e-05
    2. '   ' → logprob: -9.750059127807617
    3. ' for' → logprob: -14.500059127807617
    4. '```' → logprob: -17.500059127807617
    5. '#' → logprob: -18.875059127807617
    6. '	for' → logprob: -19.125059127807617
    7. 'dire' → logprob: -19.625059127807617
    8. '
' → logprob: -19.625059127807617
    9. '    
' → logprob: -19.875059127807617
    10. '``' → logprob: -21.125059127807617

Token 2078: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '_i' → logprob: -19.250017166137695
    4. '	i' → logprob: -19.625017166137695
    5. '   ' → logprob: -21.625017166137695
    6. '```' → logprob: -22.625017166137695
    7. 'h' → logprob: -23.375017166137695
    8. ' ' → logprob: -23.500017166137695
    9. ' ' → logprob: -23.750017166137695
    10. '_' → logprob: -24.250017166137695

Token 2079: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07939378917217255
    2. 'in' → logprob: -2.5793938636779785
    3. '   ' → logprob: -8.32939338684082
    4. ',' → logprob: -8.45439338684082
    5. ' ' → logprob: -10.45439338684082
    6. ' ,' → logprob: -12.32939338684082
    7. '	in' → logprob: -12.32939338684082
    8. '  ' → logprob: -12.82939338684082
    9. '    ' → logprob: -12.95439338684082
    10. ')' → logprob: -13.57939338684082

Token 2080: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '   ' → logprob: -20.375059127807617
    4. '0' → logprob: -21.375059127807617
    5. '(range' → logprob: -21.500059127807617
    6. ' ' → logprob: -22.000059127807617
    7. '	range' → logprob: -22.000059127807617
    8. '```' → logprob: -22.875059127807617
    9. '
' → logprob: -23.500059127807617
    10. '  ' → logprob: -23.750059127807617

Token 2081: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0007199380779638886
    2. 'H' → logprob: -7.250720024108887
    3. '   ' → logprob: -12.125720024108887
    4. '(' → logprob: -12.375720024108887
    5. '0' → logprob: -15.625720024108887
    6. '(
' → logprob: -16.12571907043457
    7. '	H' → logprob: -17.62571907043457
    8. '1' → logprob: -17.75071907043457
    9. '       ' → logprob: -18.62571907043457
    10. ')' → logprob: -19.12571907043457

Token 2082: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2728603184223175
    2. '):' → logprob: -1.5228602886199951
    3. '   ' → logprob: -3.897860288619995
    4. ':' → logprob: -8.647860527038574
    5. '       ' → logprob: -9.272860527038574
    6. ':
' → logprob: -10.147860527038574
    7. ',' → logprob: -10.522860527038574
    8. '):
' → logprob: -11.022860527038574
    9. '<|end|>' → logprob: -11.397860527038574
    10. '+' → logprob: -11.522860527038574

Token 2083: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007193762343376875
    2. ' for' → logprob: -5.632193565368652
    3. '       ' → logprob: -5.882193565368652
    4. '	for' → logprob: -7.507193565368652
    5. 'for' → logprob: -8.507193565368652
    6. '    ' → logprob: -11.632193565368652
    7. '	   ' → logprob: -11.757193565368652
    8. '   ' → logprob: -11.757193565368652
    9. '<|end|>' → logprob: -12.382193565368652
    10. ' ' → logprob: -12.757193565368652

Token 2084: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31705722212791443
    2. ' for' → logprob: -1.5670572519302368
    3. '   ' → logprob: -2.8170571327209473
    4. 'j' → logprob: -6.067057132720947
    5. ' j' → logprob: -8.067057609558105
    6. '       ' → logprob: -8.192057609558105
    7. '```' → logprob: -8.567057609558105
    8. '	for' → logprob: -9.692057609558105
    9. ' ' → logprob: -9.692057609558105
    10. '    ' → logprob: -11.442057609558105

Token 2085: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06196768581867218
    2. ' j' → logprob: -2.811967611312866
    3. '   ' → logprob: -16.686967849731445
    4. '	j' → logprob: -19.936967849731445
    5. '    ' → logprob: -20.436967849731445
    6. '_j' → logprob: -20.561967849731445
    7. ' ' → logprob: -21.061967849731445
    8. '     ' → logprob: -22.686967849731445
    9. '       ' → logprob: -22.811967849731445
    10. ',j' → logprob: -23.061967849731445

Token 2086: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029836690053343773
    2. 'in' → logprob: -3.529836654663086
    3. '(' → logprob: -10.654836654663086
    4. '   ' → logprob: -10.779836654663086
    5. '       ' → logprob: -11.529836654663086
    6. '	in' → logprob: -11.529836654663086
    7. ' ' → logprob: -12.279836654663086
    8. ' (' → logprob: -12.654836654663086
    9. ')' → logprob: -12.654836654663086
    10. '_in' → logprob: -13.529836654663086

Token 2087: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005270041991025209
    2. ' range' → logprob: -5.255270004272461
    3. 'W' → logprob: -10.255270004272461
    4. '(range' → logprob: -14.630270004272461
    5. '(W' → logprob: -14.880270004272461
    6. '   ' → logprob: -16.13027000427246
    7. ' W' → logprob: -16.25527000427246
    8. ' ' → logprob: -18.00527000427246
    9. '       ' → logprob: -18.38027000427246
    10. '(' → logprob: -18.63027000427246

Token 2088: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.31337568163871765
    2. 'W' → logprob: -1.31337571144104
    3. '(' → logprob: -10.063375473022461
    4. '   ' → logprob: -10.188375473022461
    5. '       ' → logprob: -11.063375473022461
    6. ' W' → logprob: -11.688375473022461
    7. '           ' → logprob: -13.188375473022461
    8. ')' → logprob: -13.563375473022461
    9. '1' → logprob: -13.688375473022461
    10. '               ' → logprob: -13.938375473022461

Token 2089: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01623741164803505
    2. '):' → logprob: -4.141237258911133
    3. '           ' → logprob: -9.516237258911133
    4. '       ' → logprob: -9.766237258911133
    5. ':' → logprob: -10.641237258911133
    6. '):
' → logprob: -11.141237258911133
    7. '   ' → logprob: -11.641237258911133
    8. ':
' → logprob: -11.891237258911133
    9. '):

' → logprob: -12.141237258911133
    10. '+' → logprob: -13.266237258911133

Token 2090: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002038914244621992
    2. '       ' → logprob: -6.627038955688477
    3. 'if' → logprob: -7.877038955688477
    4. ' if' → logprob: -8.252038955688477
    5. '	       ' → logprob: -10.127038955688477
    6. '   ' → logprob: -11.502038955688477
    7. '```' → logprob: -11.752038955688477
    8. '               ' → logprob: -11.877038955688477
    9. '          ' → logprob: -13.377038955688477
    10. '		' → logprob: -13.377038955688477

Token 2091: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10590994358062744
    2. ' if' → logprob: -2.355909824371338
    3. '           ' → logprob: -5.355909824371338
    4. '               ' → logprob: -6.980909824371338
    5. '   ' → logprob: -10.980910301208496
    6. '       ' → logprob: -11.230910301208496
    7. '	if' → logprob: -12.730910301208496
    8. '```' → logprob: -12.730910301208496
    9. '	           ' → logprob: -14.855910301208496
    10. '                   ' → logprob: -15.605910301208496

Token 2092: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00026336227892898023
    2. ' A' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.125263214111328
    4. '           ' → logprob: -17.125263214111328
    5. '	A' → logprob: -18.125263214111328
    6. ' ' → logprob: -19.125263214111328
    7. '               ' → logprob: -19.500263214111328
    8. '                   ' → logprob: -19.625263214111328
    9. '>A' → logprob: -20.250263214111328
    10. '  ' → logprob: -20.375263214111328

Token 2093: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.500004768371582
    3. '[j' → logprob: -14.375004768371582
    4. ' [' → logprob: -15.250004768371582
    5. '```' → logprob: -16.500003814697266
    6. '[
' → logprob: -16.750003814697266
    7. '[I' → logprob: -18.000003814697266
    8. 'i' → logprob: -18.625003814697266
    9. '   ' → logprob: -19.125003814697266
    10. ')[' → logprob: -19.875003814697266

Token 2094: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14722634851932526
    2. '][' → logprob: -2.022226333618164
    3. '[j' → logprob: -5.522226333618164
    4. ']' → logprob: -9.272226333618164
    5. '```' → logprob: -9.272226333618164
    6. '[' → logprob: -9.522226333618164
    7. '>[' → logprob: -9.897226333618164
    8. ''][' → logprob: -9.897226333618164
    9. '           ' → logprob: -10.272226333618164
    10. '"][' → logprob: -10.522226333618164

Token 2095: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.008129963040119e-06
    2. '```' → logprob: -13.375003814697266
    3. ']' → logprob: -14.000003814697266
    4. ' j' → logprob: -14.750003814697266
    5. '0' → logprob: -15.125003814697266
    6. '   ' → logprob: -15.250003814697266
    7. '[j' → logprob: -15.625003814697266
    8. '>' → logprob: -15.750003814697266
    9. ']>' → logprob: -16.125003814697266
    10. ' ' → logprob: -16.750003814697266

Token 2096: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1966780126094818
    2. ' >' → logprob: -1.8216780424118042
    3. ']' → logprob: -4.321678161621094
    4. ']>' → logprob: -5.821678161621094
    5. ')' → logprob: -8.321678161621094
    6. ')>' → logprob: -8.821678161621094
    7. '[' → logprob: -9.821678161621094
    8. '">' → logprob: -10.321678161621094
    9. '           ' → logprob: -10.446678161621094
    10. '']' → logprob: -12.196678161621094

Token 2097: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22543498873710632
    2. ' >' → logprob: -1.6004350185394287
    3. ')>' → logprob: -12.225435256958008
    4. ')' → logprob: -12.725435256958008
    5. '   ' → logprob: -12.975435256958008
    6. '[' → logprob: -13.100435256958008
    7. '">' → logprob: -13.225435256958008
    8. '()>' → logprob: -13.725435256958008
    9. '&gt' → logprob: -13.850435256958008
    10. ' !=' → logprob: -13.975435256958008

Token 2098: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -18.125011444091797
    4. '<|end|>' → logprob: -18.125011444091797
    5. '=' → logprob: -19.125011444091797
    6. '۰' → logprob: -20.125011444091797
    7. '```' → logprob: -20.375011444091797
    8. '  ' → logprob: -21.000011444091797
    9. '>' → logprob: -21.125011444091797
    10. '  ' → logprob: -21.875011444091797

Token 2099: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.750001907348633
    4. '```' → logprob: -19.750001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '
' → logprob: -20.375001907348633
    7. '=' → logprob: -20.375001907348633
    8. '>' → logprob: -21.125001907348633
    9. '٠' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.250001907348633

Token 2100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5763817429542542
    2. ':
' → logprob: -0.8263817429542542
    3. '               ' → logprob: -8.70138168334961
    4. '           ' → logprob: -8.95138168334961
    5. '):
' → logprob: -10.07638168334961
    6. ' :
' → logprob: -10.32638168334961
    7. ' and' → logprob: -10.70138168334961
    8. ' :' → logprob: -11.45138168334961
    9. ':
' → logprob: -11.45138168334961
    10. ':

' → logprob: -11.82638168334961

Token 2101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006176444701850414
    2. '       ' → logprob: -5.381176471710205
    3. '           ' → logprob: -7.381176471710205
    4. '   ' → logprob: -7.881176471710205
    5. '```' → logprob: -8.006175994873047
    6. '                   ' → logprob: -9.631175994873047
    7. 'adj' → logprob: -9.881175994873047
    8. 'possible' → logprob: -10.131175994873047
    9. 'min' → logprob: -11.506175994873047
    10. '                       ' → logprob: -11.756175994873047

Token 2102: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04461457207798958
    2. 'adj' → logprob: -3.794614553451538
    3. '#' (adapté à ' #') → logprob: -4.544614791870117
    4. 'best' → logprob: -4.794614791870117
    5. '                   ' → logprob: -6.669614791870117
    6. 'possible' → logprob: -7.794614791870117
    7. 'dist' → logprob: -8.669614791870117
    8. '               ' → logprob: -8.794614791870117
    9. ' min' → logprob: -9.294614791870117
    10. '   ' → logprob: -9.669614791870117

Token 2103: ' On' (ID: 2160)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25157615542411804
    2. 'adj' → logprob: -1.7515761852264404
    3. 'best' → logprob: -3.2515761852264404
    4. '#' → logprob: -5.251575946807861
    5. 'possible' → logprob: -6.251575946807861
    6. 'dist' → logprob: -6.251575946807861
    7. '               ' → logprob: -7.626575946807861
    8. '                   ' → logprob: -8.12657642364502
    9. 'c' → logprob: -10.12657642364502
    10. 'ans' → logprob: -10.12657642364502

Token 2104: ' cherche' (ID: 52345)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6221469640731812
    2. '=' → logprob: -2.2471470832824707
    3. '               ' → logprob: -2.2471470832824707
    4. '                   ' → logprob: -2.2471470832824707
    5. '_adj' → logprob: -3.1221470832824707
    6. ' =' → logprob: -3.4971470832824707
    7. '```' → logprob: -4.747147083282471
    8. '#' → logprob: -4.872147083282471
    9. ':' → logprob: -5.122147083282471
    10. 'possible' → logprob: -5.247147083282471

Token 2105: ' la' (ID: 557)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.36233142018318176
    2. 'min' → logprob: -2.3623313903808594
    3. '                   ' → logprob: -2.8623313903808594
    4. 'les' → logprob: -3.2373313903808594
    5. '               ' → logprob: -3.4873313903808594
    6. 'distance' → logprob: -3.6123313903808594
    7. 'dist' → logprob: -4.112331390380859
    8. 'le' → logprob: -4.987331390380859
    9. 'une' → logprob: -5.362331390380859
    10. 'la' → logprob: -5.487331390380859

Token 2106: ' distance' (ID: 9324)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04900414124131203
    2. 'dist' → logprob: -3.424004077911377
    3. 'best' → logprob: -4.549004077911377
    4. 'adj' → logprob: -6.174004077911377
    5. 'distance' → logprob: -6.549004077911377
    6. 'possible' → logprob: -7.299004077911377
    7. 'minimum' → logprob: -8.174004554748535
    8. 'minimal' → logprob: -9.299004554748535
    9. ' min' → logprob: -10.424004554748535
    10. 'd' → logprob: -10.924004554748535

Token 2107: ' minimale' (ID: 143217)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8499397039413452
    2. 'adj' → logprob: -1.4749397039413452
    3. ' =' → logprob: -2.0999398231506348
    4. '_min' → logprob: -2.2249398231506348
    5. '               ' → logprob: -3.3499398231506348
    6. '=' → logprob: -3.9749398231506348
    7. '                   ' → logprob: -4.099939823150635
    8. 'minimum' → logprob: -4.349939823150635
    9. '_adj' → logprob: -4.599939823150635
    10. ' minimale' → logprob: -5.474939823150635

Token 2108: ' vers' (ID: 3640)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.42934033274650574
    2. '               ' → logprob: -1.8043403625488281
    3. 'min' → logprob: -1.9293403625488281
    4. ' adj' → logprob: -3.804340362548828
    5. ' min' → logprob: -4.929340362548828
    6. '                   ' → logprob: -6.304340362548828
    7. ' adjacent' → logprob: -6.429340362548828
    8. 'possible' → logprob: -6.929340362548828
    9. '   ' → logprob: -7.054340362548828
    10. '_min' → logprob: -7.304340362548828

Token 2109: ' une' (ID: 2463)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9153226613998413
    2. 'adj' → logprob: -0.9153226613998413
    3. 'une' → logprob: -2.290322780609131
    4. 'INF' → logprob: -2.790322780609131
    5. 'un' → logprob: -4.290322780609131
    6. 'min' → logprob: -5.290322780609131
    7. '   ' → logprob: -5.540322780609131
    8. 'inf' → logprob: -5.915322780609131
    9. 'les' → logprob: -6.165322780609131
    10. '1' → logprob: -6.540322780609131

Token 2110: ' case' (ID: 1890)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0890730619430542
    2. 'dist' → logprob: -2.9640731811523438
    3. 'distance' → logprob: -4.214073181152344
    4. ' adj' → logprob: -5.214073181152344
    5. 'min' → logprob: -5.339073181152344
    6. 'empty' → logprob: -6.714073181152344
    7. 'vo' → logprob: -6.839073181152344
    8. ' adjacent' → logprob: -6.839073181152344
    9. 'case' → logprob: -6.839073181152344
    10. ' distance' → logprob: -6.839073181152344

Token 2111: ' vide' (ID: 21835)
  Prédit: ' vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -0.6544060111045837
    2. 'vide' → logprob: -0.9044060111045837
    3. ' adj' → logprob: -3.4044060707092285
    4. 'adj' → logprob: -3.9044060707092285
    5. '               ' → logprob: -4.7794060707092285
    6. 'vo' → logprob: -5.4044060707092285
    7. ' sans' → logprob: -5.7794060707092285
    8. 'sans' → logprob: -6.1544060707092285
    9. '                   ' → logprob: -6.6544060707092285
    10. '                ' → logprob: -7.1544060707092285

Token 2112: ' vo' (ID: 778)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7138184309005737
    2. ' adj' → logprob: -0.9638184309005737
    3. '               ' → logprob: -2.3388185501098633
    4. '                   ' → logprob: -4.588818550109863
    5. 'min' → logprob: -4.713818550109863
    6. '_adj' → logprob: -4.838818550109863
    7. '   ' → logprob: -6.713818550109863
    8. ' min' → logprob: -7.088818550109863
    9. '_min' → logprob: -7.213818550109863
    10. ' adjacent' → logprob: -7.463818550109863

Token 2113: 'isine' (ID: 24412)
  Prédit: 'isine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isine' → logprob: -0.03339001163840294
    2. 'is' → logprob: -3.7833900451660156
    3. 'isin' → logprob: -4.783390045166016
    4. 'i' → logprob: -7.658390045166016
    5. '
' → logprob: -8.783390045166016
    6. 'y' → logprob: -9.033390045166016
    7. 'isins' → logprob: -9.033390045166016
    8. '#' → logprob: -9.283390045166016
    9. 'ir' → logprob: -9.283390045166016
    10. 'ie' → logprob: -9.283390045166016

Token 2114: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11861490458250046
    2. '                   ' → logprob: -3.368614912033081
    3. 'adj' → logprob: -3.368614912033081
    4. 'min' → logprob: -3.618614912033081
    5. ' =' → logprob: -5.993614673614502
    6. ',' → logprob: -5.993614673614502
    7. ' min' → logprob: -6.243614673614502
    8. ' adjacent' → logprob: -6.243614673614502
    9. ' adj' → logprob: -7.118614673614502
    10. '   ' → logprob: -7.243614673614502

Token 2115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004335291218012571
    2. 'adj' → logprob: -6.629335403442383
    3. ' =' → logprob: -7.004335403442383
    4. 'min' → logprob: -7.629335403442383
    5. ',' → logprob: -8.379335403442383
    6. ' min' → logprob: -8.504335403442383
    7. ':' → logprob: -8.504335403442383
    8. '                   ' → logprob: -8.754335403442383
    9. ' (' → logprob: -9.129335403442383
    10. ' for' → logprob: -9.379335403442383

Token 2116: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.11906380951404572
    2. 'adj' → logprob: -2.3690638542175293
    3. 'best' → logprob: -4.119063854217529
    4. 'dist' → logprob: -6.494063854217529
    5. '                   ' → logprob: -7.619063854217529
    6. 'possible' → logprob: -8.994063377380371
    7. 'ans' → logprob: -9.369063377380371
    8. ' min' → logprob: -9.494063377380371
    9. '               ' → logprob: -9.994063377380371
    10. 'neighbors' → logprob: -10.369063377380371

Token 2117: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.038201235234737396
    2. '_distance' → logprob: -3.288201332092285
    3. '_adj' → logprob: -9.413201332092285
    4. 'dist' → logprob: -9.913201332092285
    5. 'Dist' → logprob: -10.913201332092285
    6. '_' → logprob: -12.538201332092285
    7. '_d' → logprob: -12.538201332092285
    8. '_cost' → logprob: -13.788201332092285
    9. '_diff' → logprob: -14.663201332092285
    10. 'distance' → logprob: -15.163201332092285

Token 2118: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330424547195435
    2. '=' → logprob: -1.3133041858673096
    3. '=None' → logprob: -11.68830394744873
    4. '                   ' → logprob: -12.31330394744873
    5. '_' → logprob: -12.56330394744873
    6. '=_' → logprob: -12.81330394744873
    7. '_=' → logprob: -13.06330394744873
    8. '```' → logprob: -13.18830394744873
    9. '=min' → logprob: -13.18830394744873
    10. ')' → logprob: -13.31330394744873

Token 2119: '_adj' (ID: 117293)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7006635069847107
    2. '_cut' → logprob: -1.9506635665893555
    3. 'cut' → logprob: -2.2006635665893555
    4. '_adj' → logprob: -2.2006635665893555
    5. '=' → logprob: -2.9506635665893555
    6. ' =' → logprob: -3.2006635665893555
    7. 'i' → logprob: -4.3256635665893555
    8. 'empty' → logprob: -5.0756635665893555
    9. 'float' → logprob: -5.8256635665893555
    10. '_empty' → logprob: -6.2006635665893555

Token 2120: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.8352169990539551
    2. '=' → logprob: -1.210216999053955
    3. ' =' → logprob: -1.335216999053955
    4. '   ' → logprob: -5.710216999053955
    5. 'ac' → logprob: -7.210216999053955
    6. '[' → logprob: -8.335216522216797
    7. '=[' → logprob: -9.085216522216797
    8. 'ace' → logprob: -9.335216522216797
    9. 'acency' → logprob: -9.585216522216797
    10. '       ' → logprob: -9.960216522216797

Token 2121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328977942466736
    2. '=' → logprob: -0.7578977942466736
    3. 'case' → logprob: -9.00789737701416
    4. ' ' → logprob: -9.88289737701416
    5. '_' → logprob: -10.25789737701416
    6. '_case' → logprob: -10.50789737701416
    7. '   ' → logprob: -11.13289737701416
    8. '_=' → logprob: -11.75789737701416
    9. '```' → logprob: -12.00789737701416
    10. '_cell' → logprob: -12.13289737701416

Token 2122: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -4.320199877838604e-07
    2. ' INF' → logprob: -15.0
    3. '   ' → logprob: -17.5
    4. 'inf' → logprob: -19.5
    5. 'IN' → logprob: -19.5
    6. '_INF' → logprob: -20.125
    7. '       ' → logprob: -20.75
    8. '           ' → logprob: -22.5
    9. '-INF' → logprob: -23.0
    10. '                   ' → logprob: -23.5

Token 2123: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013369438238441944
    2. '	           ' → logprob: -10.375133514404297
    3. '			' → logprob: -10.875133514404297
    4. ' for' → logprob: -11.000133514404297
    5. '		       ' → logprob: -11.000133514404297
    6. 'for' → logprob: -11.375133514404297
    7. '
' → logprob: -11.625133514404297
    8. '                
' → logprob: -11.625133514404297
    9. '                   ' → logprob: -12.125133514404297
    10. '	       ' → logprob: -12.500133514404297

Token 2124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2948405128554441e-05
    2. '                   ' → logprob: -12.62501335144043
    3. ' for' → logprob: -12.87501335144043
    4. '	           ' → logprob: -12.87501335144043
    5. 'for' → logprob: -13.37501335144043
    6. '		       ' → logprob: -13.75001335144043
    7. '<|end|>' → logprob: -14.87501335144043
    8. '           ' → logprob: -15.12501335144043
    9. '                
' → logprob: -15.25001335144043
    10. '			' → logprob: -15.25001335144043

Token 2125: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003442832676228136
    2. ' for' → logprob: -8.750344276428223
    3. '                   ' → logprob: -9.125344276428223
    4. '               ' → logprob: -9.500344276428223
    5. '   ' → logprob: -13.625344276428223
    6. '	for' → logprob: -14.250344276428223
    7. '           ' → logprob: -15.750344276428223
    8. '
' → logprob: -17.62534523010254
    9. '```' → logprob: -18.87534523010254
    10. '                       ' → logprob: -19.12534523010254

Token 2126: ' di' (ID: 1320)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -9.901345038088039e-05
    2. '(di' → logprob: -9.250099182128906
    3. '(' → logprob: -13.000099182128906
    4. 'dx' → logprob: -15.625099182128906
    5. ' di' → logprob: -15.750099182128906
    6. 'ni' → logprob: -16.125099182128906
    7. '   ' → logprob: -17.500099182128906
    8. '(ii' → logprob: -17.500099182128906
    9. '_di' → logprob: -19.375099182128906
    10. ' (' → logprob: -20.000099182128906

Token 2127: ',d' (ID: 26159)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9359176158905029
    2. ',d' → logprob: -1.310917615890503
    3. ' in' → logprob: -1.435917615890503
    4. ',' → logprob: -2.310917615890503
    5. ',v' → logprob: -8.435917854309082
    6. ',-' → logprob: -8.685917854309082
    7. ',in' → logprob: -8.935917854309082
    8. ' ,' → logprob: -9.310917854309082
    9. ',j' → logprob: -9.310917854309082
    10. ',k' → logprob: -9.810917854309082

Token 2128: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.29202479124069214
    2. 'dj' → logprob: -1.417024850845337
    3. ',' → logprob: -5.042024612426758
    4. ',j' → logprob: -6.042024612426758
    5. 'd' → logprob: -7.042024612426758
    6. ',d' → logprob: -7.417024612426758
    7. '(' → logprob: -8.917024612426758
    8. '   ' → logprob: -9.292024612426758
    9. '```' → logprob: -9.792024612426758
    10. '_j' → logprob: -10.417024612426758

Token 2129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31326964497566223
    2. 'in' → logprob: -1.3132696151733398
    3. '                   ' → logprob: -13.18826961517334
    4. ' ' → logprob: -13.68826961517334
    5. ',' → logprob: -13.81326961517334
    6. '   ' → logprob: -13.93826961517334
    7. '	in' → logprob: -14.31326961517334
    8. '```' → logprob: -14.43826961517334
    9. '                       ' → logprob: -15.06326961517334
    10. '                        ' → logprob: -15.43826961517334

Token 2130: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00745210237801075
    2. ' [' → logprob: -5.507452011108398
    3. '[-' → logprob: -6.007452011108398
    4. '[(' → logprob: -7.007452011108398
    5. ' [(' → logprob: -14.257452011108398
    6. '[((' → logprob: -14.382452011108398
    7. '[
' → logprob: -14.507452011108398
    8. '(-' → logprob: -14.757452011108398
    9. ' [-' → logprob: -15.007452011108398
    10. '   ' → logprob: -16.1324520111084

Token 2131: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.00043984793592244387
    2. '(' → logprob: -7.750439643859863
    3. '-' → logprob: -11.625439643859863
    4. ' (-' → logprob: -16.62544059753418
    5. '   ' → logprob: -17.00044059753418
    6. '[-' → logprob: -17.50044059753418
    7. '0' → logprob: -17.62544059753418
    8. '       ' → logprob: -20.87544059753418
    9. '           ' → logprob: -21.37544059753418
    10. '1' → logprob: -21.75044059753418

Token 2132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '   ' → logprob: -18.0
    4. '0' → logprob: -20.5
    5. '
' → logprob: -21.0
    6. '```' → logprob: -21.0
    7. ',' → logprob: -21.25
    8. '-' → logprob: -22.0
    9. ')' → logprob: -22.125
    10. '１' → logprob: -22.1875

Token 2133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.209963900502771e-05
    2. '0' → logprob: -9.375092506408691
    3. ' ,' → logprob: -11.875092506408691
    4. ',
' → logprob: -16.000091552734375
    5. '(' → logprob: -17.000091552734375
    6. '1' → logprob: -17.125091552734375
    7. '```' → logprob: -17.250091552734375
    8. '   ' → logprob: -17.375091552734375
    9. '               ' → logprob: -18.250091552734375
    10. '                   ' → logprob: -18.500091552734375

Token 2134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.375
    4. '1' → logprob: -20.375
    5. '۰' → logprob: -20.75
    6. ',' → logprob: -22.0
    7. '```' → logprob: -22.0
    8. '
' → logprob: -22.375
    9. ')' → logprob: -22.375
    10. '{' → logprob: -22.875

Token 2135: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -5.872261317563243e-05
    2. '),' → logprob: -9.750059127807617
    3. ',(' → logprob: -15.000059127807617
    4. ' ),' → logprob: -17.750059127807617
    5. '),
' → logprob: -18.125059127807617
    6. '   ' → logprob: -18.250059127807617
    7. ',' → logprob: -18.625059127807617
    8. '(' → logprob: -18.750059127807617
    9. '],[' → logprob: -19.750059127807617
    10. '           ' → logprob: -20.000059127807617

Token 2136: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.693147599697113
    2. '1' → logprob: -0.693147599697113
    3. ' ' → logprob: -14.818147659301758
    4. '(' → logprob: -18.318147659301758
    5. '
' → logprob: -18.693147659301758
    6. '01' → logprob: -19.193147659301758
    7. '```' → logprob: -19.443147659301758
    8. '   ' → logprob: -19.443147659301758
    9. '-' → logprob: -19.568147659301758
    10. '+' → logprob: -20.068147659301758

Token 2137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016027313540689647
    2. '0' → logprob: -8.750160217285156
    3. ' ,' → logprob: -13.250160217285156
    4. '   ' → logprob: -17.500160217285156
    5. ' ' → logprob: -17.625160217285156
    6. '(' → logprob: -18.125160217285156
    7. '```' → logprob: -18.125160217285156
    8. ',
' → logprob: -18.250160217285156
    9. 'import' → logprob: -18.875160217285156
    10. '                   ' → logprob: -18.875160217285156

Token 2138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -19.25
    4. '(' → logprob: -20.625
    5. '۰' → logprob: -21.5
    6. '```' → logprob: -22.375
    7. '00' → logprob: -22.5
    8. '       ' → logprob: -22.5
    9. '
' → logprob: -22.625
    10. '               ' → logprob: -23.0

Token 2139: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -4.60414821645827e-06
    2. ',(' → logprob: -12.500004768371582
    3. '),' → logprob: -14.750004768371582
    4. ',' → logprob: -15.000004768371582
    5. '(' → logprob: -16.375003814697266
    6. '   ' → logprob: -18.125003814697266
    7. '),
' → logprob: -18.250003814697266
    8. '],[' → logprob: -19.250003814697266
    9. ' ' → logprob: -20.125003814697266
    10. '```' → logprob: -20.375003814697266

Token 2140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. '(' → logprob: -9.000123977661133
    3. ' ' → logprob: -16.250123977661133
    4. '   ' → logprob: -18.375123977661133
    5. '۰' → logprob: -19.250123977661133
    6. ' (' → logprob: -19.375123977661133
    7. '00' → logprob: -19.375123977661133
    8. '```' → logprob: -20.500123977661133
    9. '[' → logprob: -21.500123977661133
    10. '
' → logprob: -21.812623977661133

Token 2141: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029785210266709328
    2. ',-' → logprob: -3.52978515625
    3. '-' → logprob: -10.77978515625
    4. '0' → logprob: -11.40478515625
    5. ',(' → logprob: -14.15478515625
    6. ' ,' → logprob: -14.40478515625
    7. '-,' → logprob: -14.65478515625
    8. ',
' → logprob: -14.90478515625
    9. '   ' → logprob: -15.02978515625
    10. ' ' → logprob: -16.02978515625

Token 2142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. '-' → logprob: -8.250262260437012
    3. ' -' → logprob: -15.250262260437012
    4. '```' → logprob: -15.250262260437012
    5. 'j' → logprob: -16.125261306762695
    6. ' ' → logprob: -16.250261306762695
    7. '   ' → logprob: -16.250261306762695
    8. '(-' → logprob: -17.125261306762695
    9. '(' → logprob: -17.375261306762695
    10. ',-' → logprob: -17.437761306762695

Token 2143: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -2.5776860184123507e-06
    2. ',(' → logprob: -13.12500286102295
    3. '),' → logprob: -15.50000286102295
    4. ',' → logprob: -15.87500286102295
    5. '(' → logprob: -16.375001907348633
    6. '],[' → logprob: -19.250001907348633
    7. '   ' → logprob: -19.625001907348633
    8. '),
' → logprob: -19.875001907348633
    9. '```' → logprob: -20.375001907348633
    10. '',(' → logprob: -20.875001907348633

Token 2144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '1' → logprob: -18.125
    4. '۰' → logprob: -19.125
    5. '   ' → logprob: -19.125
    6. '(' → logprob: -19.25
    7. '```' → logprob: -19.25
    8. '０' → logprob: -20.875
    9. '``' → logprob: -20.9375
    10. ',' → logprob: -20.9375

Token 2145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023762896307744086
    2. '0' → logprob: -8.375237464904785
    3. ',(' → logprob: -12.125237464904785
    4. ' ,' → logprob: -14.000237464904785
    5. '(' → logprob: -14.625237464904785
    6. ',
' → logprob: -16.1252384185791
    7. '),(' → logprob: -16.8752384185791
    8. '```' → logprob: -17.1252384185791
    9. '
' → logprob: -18.0002384185791
    10. '   ' → logprob: -18.0002384185791

Token 2146: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014165159314870834
    2. '1' → logprob: -4.264164924621582
    3. ' ' → logprob: -13.764164924621582
    4. '```' → logprob: -14.764164924621582
    5. '+' → logprob: -15.764164924621582
    6. '
' → logprob: -17.0141658782959
    7. '-' → logprob: -17.2641658782959
    8. '(' → logprob: -17.5141658782959
    9. '``' → logprob: -17.6391658782959
    10. '{' → logprob: -17.6391658782959

Token 2147: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04398222267627716
    2. ')' → logprob: -3.4189822673797607
    3. '):
' → logprob: -4.918982028961182
    4. '               ' → logprob: -6.418982028961182
    5. '                   ' → logprob: -7.168982028961182
    6. ']]:
' → logprob: -8.66898250579834
    7. '):' → logprob: -8.91898250579834
    8. ']' → logprob: -9.16898250579834
    9. ']):
' → logprob: -10.04398250579834
    10. '                       ' → logprob: -10.41898250579834

Token 2148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16557088494300842
    2. '                   ' → logprob: -2.2905709743499756
    3. ':
' → logprob: -3.1655709743499756
    4. '<|end|>' → logprob: -5.7905707359313965
    5. '                       ' → logprob: -6.2905707359313965
    6. '               ' → logprob: -6.6655707359313965
    7. '<|end|>' → logprob: -7.1655707359313965
    8. '			       ' → logprob: -8.165571212768555
    9. '		           ' → logprob: -8.290571212768555
    10. ',' → logprob: -8.540571212768555

Token 2149: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005224509630352259
    2. '               ' → logprob: -6.130224704742432
    3. '                       ' → logprob: -6.630224704742432
    4. '	               ' → logprob: -7.380224704742432
    5. 'ni' → logprob: -8.380224227905273
    6. '				' → logprob: -8.755224227905273
    7. '                ' → logprob: -9.130224227905273
    8. '                  ' → logprob: -9.255224227905273
    9. '   ' → logprob: -9.505224227905273
    10. ' ni' → logprob: -9.755224227905273

Token 2150: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' (adapté à ' ni') → logprob: -5.288163083605468e-05
    2. ' ni' → logprob: -10.625052452087402
    3. '                   ' → logprob: -10.625052452087402
    4. '```' → logprob: -13.750052452087402
    5. '                       ' → logprob: -14.000052452087402
    6. 'ny' → logprob: -15.250052452087402
    7. '                    ' → logprob: -15.375052452087402
    8. '               ' → logprob: -15.375052452087402
    9. '                     ' → logprob: -15.500052452087402
    10. 'di' → logprob: -15.625052452087402

Token 2151: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6074425578117371
    2. ',n' → logprob: -0.8574425578117371
    3. ',j' → logprob: -3.482442617416382
    4. '=' → logprob: -8.857442855834961
    5. ',i' → logprob: -9.982442855834961
    6. ' ,' → logprob: -10.607442855834961
    7. '=n' → logprob: -10.732442855834961
    8. ' =' → logprob: -11.482442855834961
    9. ',
' → logprob: -12.232442855834961
    10. '=j' → logprob: -12.232442855834961

Token 2152: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.753642201423645
    2. 'i' → logprob: -1.003642201423645
    3. ',' → logprob: -2.3786420822143555
    4. ',j' → logprob: -2.8786420822143555
    5. '=' → logprob: -5.2536420822143555
    6. ',i' → logprob: -5.7536420822143555
    7. '   ' → logprob: -7.0036420822143555
    8. '                   ' → logprob: -7.1286420822143555
    9. 'nj' → logprob: -7.1286420822143555
    10. '=j' → logprob: -7.1286420822143555

Token 2153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520143389701843
    2. ' =' → logprob: -1.502014398574829
    3. '=i' → logprob: -9.50201416015625
    4. '                   ' → logprob: -12.50201416015625
    5. '=j' → logprob: -13.00201416015625
    6. ',' → logprob: -14.00201416015625
    7. '=int' → logprob: -14.37701416015625
    8. '                    ' → logprob: -14.37701416015625
    9. '=n' → logprob: -14.37701416015625
    10. '=
' → logprob: -15.75201416015625

Token 2154: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.416665640543215e-05
    2. '                   ' → logprob: -10.87503433227539
    3. ' i' → logprob: -11.12503433227539
    4. '   ' → logprob: -16.37503433227539
    5. '                       ' → logprob: -16.37503433227539
    6. '               ' → logprob: -16.50003433227539
    7. '	i' → logprob: -16.50003433227539
    8. '           ' → logprob: -18.12503433227539
    9. '                           ' → logprob: -18.62503433227539
    10. '(i' → logprob: -19.50003433227539

Token 2155: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0037816662807017565
    2. '+d' → logprob: -6.253781795501709
    3. ' +' → logprob: -6.628781795501709
    4. '+j' → logprob: -8.00378131866455
    5. '+i' → logprob: -10.37878131866455
    6. ',' → logprob: -10.62878131866455
    7. ',d' → logprob: -10.75378131866455
    8. '<|end|>' → logprob: -11.12878131866455
    9. ',j' → logprob: -11.25378131866455
    10. '-' → logprob: -11.25378131866455

Token 2156: 'di' (ID: 4091)
  Prédit: 'di'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -1.747814349073451e-05
    2. 'dj' → logprob: -11.000017166137695
    3. '(di' → logprob: -15.000017166137695
    4. ' di' → logprob: -15.625017166137695
    5. 'd' → logprob: -16.125017166137695
    6. '   ' → logprob: -16.250017166137695
    7. '0' → logprob: -16.500017166137695
    8. '1' → logprob: -17.875017166137695
    9. ' ' → logprob: -18.375017166137695
    10. '```' → logprob: -18.500017166137695

Token 2157: ',' (ID: 11)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.598414957523346
    2. ',' → logprob: -0.848414957523346
    3. ',d' → logprob: -3.973414897918701
    4. ',n' → logprob: -5.723414897918701
    5. ' ,' → logprob: -10.09841537475586
    6. ',v' → logprob: -10.59841537475586
    7. ',t' → logprob: -10.72341537475586
    8. ',k' → logprob: -11.22341537475586
    9. ',y' → logprob: -11.34841537475586
    10. ',w' → logprob: -11.84841537475586

Token 2158: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0015040287980809808
    2. ' j' → logprob: -6.501503944396973
    3. '   ' → logprob: -14.001503944396973
    4. '	j' → logprob: -14.501503944396973
    5. '                   ' → logprob: -15.876503944396973
    6. '$j' → logprob: -16.62650489807129
    7. '           ' → logprob: -17.50150489807129
    8. '    ' → logprob: -17.50150489807129
    9. ' ' → logprob: -17.62650489807129
    10. '       ' → logprob: -18.00150489807129

Token 2159: '+' (ID: 10)
  Prédit: 'dj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -0.3878103494644165
    2. ',d' → logprob: -1.1378103494644165
    3. '0' → logprob: -7.262810230255127
    4. ',' → logprob: -9.762810707092285
    5. 'd' → logprob: -9.887810707092285
    6. '.dj' → logprob: -10.512810707092285
    7. '   ' → logprob: -11.012810707092285
    8. '+' → logprob: -11.012810707092285
    9. ' dj' → logprob: -11.512810707092285
    10. '\d' → logprob: -11.512810707092285

Token 2160: 'dj' (ID: 115658)
  Prédit: 'dj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dj' → logprob: -7.896309739408025e-07
    2. ' dj' → logprob: -14.250000953674316
    3. '.dj' → logprob: -18.0
    4. '1' → logprob: -18.5
    5. ' ' → logprob: -18.875
    6. '   ' → logprob: -19.0
    7. '0' → logprob: -19.25
    8. '
' → logprob: -20.375
    9. 'dje' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 2161: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005883644800633192
    2. '               ' → logprob: -6.005883693695068
    3. '<|end|>' → logprob: -6.880883693695068
    4. ' if' → logprob: -7.380883693695068
    5. '           ' → logprob: -8.25588321685791
    6. '                       ' → logprob: -8.38088321685791
    7. '		           ' → logprob: -8.63088321685791
    8. 'if' → logprob: -9.00588321685791
    9. '       ' → logprob: -9.00588321685791
    10. '			       ' → logprob: -9.13088321685791

Token 2162: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00016754455282352865
    2. '		           ' → logprob: -10.250167846679688
    3. '               ' → logprob: -10.625167846679688
    4. '	               ' → logprob: -10.750167846679688
    5. '                       ' → logprob: -10.875167846679688
    6. '				' → logprob: -11.000167846679688
    7. '                    ' → logprob: -11.500167846679688
    8. '           ' → logprob: -11.875167846679688
    9. ' if' → logprob: -11.875167846679688
    10. '			       ' → logprob: -12.000167846679688

Token 2163: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.27497154474258423
    2. 'if' (adapté à ' if') → logprob: -1.7749714851379395
    3. ' if' → logprob: -2.6499714851379395
    4. '               ' → logprob: -8.899971961975098
    5. '                    ' → logprob: -10.024971961975098
    6. '                       ' → logprob: -10.149971961975098
    7. '                  ' → logprob: -11.274971961975098
    8. '           ' → logprob: -11.899971961975098
    9. '                     ' → logprob: -12.524971961975098
    10. '```' → logprob: -12.649971961975098

Token 2164: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016038239002227783
    2. ' ' → logprob: -4.141038417816162
    3. '                   ' → logprob: -13.266037940979004
    4. '(' → logprob: -14.516037940979004
    5. 'ni' → logprob: -14.766037940979004
    6. ' (' → logprob: -15.016037940979004
    7. '   ' → logprob: -15.016037940979004
    8. '               ' → logprob: -15.391037940979004
    9. '                 ' → logprob: -16.01603889465332
    10. '                ' → logprob: -16.39103889465332

Token 2165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'ni' → logprob: -15.87501049041748
    4. '                   ' → logprob: -16.250011444091797
    5. '               ' → logprob: -17.625011444091797
    6. '   ' → logprob: -18.375011444091797
    7. '                 ' → logprob: -18.625011444091797
    8. '(' → logprob: -18.625011444091797
    9. '
' → logprob: -18.875011444091797
    10. '                ' → logprob: -19.125011444091797

Token 2166: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.044480275362730026
    2. '<=' → logprob: -3.669480323791504
    3. ' <' → logprob: -4.044480323791504
    4. '<' → logprob: -7.794480323791504
    5. '                   ' → logprob: -10.544480323791504
    6. ' >=' → logprob: -10.919480323791504
    7. '                ' → logprob: -11.919480323791504
    8. '               ' → logprob: -12.169480323791504
    9. '                    ' → logprob: -12.419480323791504
    10. '            ' → logprob: -12.419480323791504

Token 2167: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.7610454708337784e-05
    2. ' ni' → logprob: -10.500027656555176
    3. '
' → logprob: -19.12502670288086
    4. '   ' → logprob: -19.37502670288086
    5. 'nii' → logprob: -19.50002670288086
    6. 'n' → logprob: -19.62502670288086
    7. 'Ni' → logprob: -19.75002670288086
    8. '-ni' → logprob: -20.00002670288086
    9. 'ny' → logprob: -20.12502670288086
    10. 'min' → logprob: -20.50002670288086

Token 2168: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.014310882426798344
    2. ' <' → logprob: -4.889310836791992
    3. '<H' → logprob: -5.264310836791992
    4. '<n' → logprob: -6.764310836791992
    5. '<N' → logprob: -8.139310836791992
    6. '<W' → logprob: -10.639310836791992
    7. 'ni' → logprob: -11.014310836791992
    8. '<i' → logprob: -11.639310836791992
    9. ' ni' → logprob: -13.014310836791992
    10. 'H' → logprob: -13.264310836791992

Token 2169: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -1.8624639324116288e-06
    2. ' H' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '	H' → logprob: -21.000001907348633
    5. '       ' → logprob: -22.875001907348633
    6. ' ' → logprob: -23.000001907348633
    7. '           ' → logprob: -23.125001907348633
    8. '
' → logprob: -23.250001907348633
    9. '(H' → logprob: -23.250001907348633
    10. '  ' → logprob: -23.750001907348633

Token 2170: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3487100303173065
    2. 'and' → logprob: -1.223710060119629
    3. '                   ' → logprob: -8.348710060119629
    4. '                       ' → logprob: -11.348710060119629
    5. '<|end|>' → logprob: -12.473710060119629
    6. '               ' → logprob: -13.098710060119629
    7. '                    ' → logprob: -13.348710060119629
    8. '	and' → logprob: -13.473710060119629
    9. '           ' → logprob: -13.848710060119629
    10. '                           ' → logprob: -13.973710060119629

Token 2171: ' ' (ID: 220)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.010657024569809437
    2. ' nj' → logprob: -4.885656833648682
    3. 'W' → logprob: -6.635656833648682
    4. '                   ' → logprob: -6.760656833648682
    5. '0' → logprob: -8.26065731048584
    6. ' W' → logprob: -9.01065731048584
    7. 'nw' → logprob: -10.13565731048584
    8. '               ' → logprob: -10.13565731048584
    9. '                           ' → logprob: -10.38565731048584
    10. '                    ' → logprob: -11.01065731048584

Token 2172: '0' (ID: 15)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.008817716501653194
    2. 'W' → logprob: -4.758817672729492
    3. '0' → logprob: -8.758817672729492
    4. ' nj' → logprob: -10.383817672729492
    5. '   ' → logprob: -12.508817672729492
    6. ' W' → logprob: -12.633817672729492
    7. 'nw' → logprob: -13.258817672729492
    8. 'Nj' → logprob: -13.633817672729492
    9. 'wj' → logprob: -14.008817672729492
    10. '
' → logprob: -14.258817672729492

Token 2173: ' <=' (ID: 5017)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.07427960634231567
    2. '<' → logprob: -3.074279546737671
    3. '<W' → logprob: -4.57427978515625
    4. '<n' → logprob: -4.94927978515625
    5. 'W' → logprob: -6.07427978515625
    6. ' nj' → logprob: -6.32427978515625
    7. '<=' → logprob: -6.82427978515625
    8. '                   ' → logprob: -6.94927978515625
    9. 'n' → logprob: -7.94927978515625
    10. 'j' → logprob: -7.94927978515625

Token 2174: ' nj' (ID: 8979)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0032038541976362467
    2. 'nj' → logprob: -5.753203868865967
    3. ' W' → logprob: -10.628203392028809
    4. ' nj' → logprob: -14.128203392028809
    5. 'wj' → logprob: -14.878203392028809
    6. '   ' → logprob: -15.003203392028809
    7. 'nw' → logprob: -15.628203392028809
    8. '	W' → logprob: -15.753203392028809
    9. 'Nj' → logprob: -17.003204345703125
    10. '
' → logprob: -17.253204345703125

Token 2175: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23184481263160706
    2. '<W' → logprob: -2.106844902038574
    3. '<' → logprob: -2.481844902038574
    4. 'W' → logprob: -7.356844902038574
    5. '<H' → logprob: -7.606844902038574
    6. '<N' → logprob: -8.356844902038574
    7. '<n' → logprob: -8.481844902038574
    8. '<size' → logprob: -9.606844902038574
    9. '<len' → logprob: -10.481844902038574
    10. '<w' → logprob: -11.731844902038574

Token 2176: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.1398757123970427e-05
    2. ' W' → logprob: -11.500011444091797
    3. '   ' → logprob: -14.125011444091797
    4. '       ' → logprob: -16.750011444091797
    5. '	W' → logprob: -17.000011444091797
    6. ' ' → logprob: -17.000011444091797
    7. '           ' → logprob: -17.125011444091797
    8. '[' → logprob: -17.250011444091797
    9. '                   ' → logprob: -17.375011444091797
    10. '<W' → logprob: -17.375011444091797

Token 2177: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.627436637878418
    2. ' and' → logprob: -0.877436637878418
    3. '                   ' → logprob: -3.127436637878418
    4. ':
' → logprob: -5.752436637878418
    5. 'and' → logprob: -6.502436637878418
    6. ':' → logprob: -6.752436637878418
    7. '               ' → logprob: -9.002436637878418
    8. '                        ' → logprob: -9.752436637878418
    9. '                           ' → logprob: -9.752436637878418
    10. '                      ' → logprob: -10.002436637878418

Token 2178: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0013005920918658376
    2. '                   ' → logprob: -8.001300811767578
    3. '                           ' → logprob: -8.251300811767578
    4. '                        ' → logprob: -8.751300811767578
    5. '                        
' → logprob: -9.001300811767578
    6. '	                   ' → logprob: -9.751300811767578
    7. '```' → logprob: -9.751300811767578
    8. '                    ' → logprob: -9.876300811767578
    9. ' if' → logprob: -10.001300811767578
    10. '                     ' → logprob: -10.376300811767578

Token 2179: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3760058879852295
    2. ' if' → logprob: -1.7510058879852295
    3. '                       ' → logprob: -2.2510058879852295
    4. '                           ' → logprob: -3.3760058879852295
    5. '   ' → logprob: -9.001006126403809
    6. '```' → logprob: -9.501006126403809
    7. '                   ' → logprob: -10.251006126403809
    8. '                        ' → logprob: -10.751006126403809
    9. '           ' → logprob: -11.126006126403809
    10. '                               ' → logprob: -11.251006126403809

Token 2180: ' Case' (ID: 18964)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003433296224102378
    2. 'dist' → logprob: -8.125343322753906
    3. ' if' → logprob: -10.125343322753906
    4. '                       ' → logprob: -12.375343322753906
    5. '                           ' → logprob: -13.125343322753906
    6. '```' → logprob: -14.750343322753906
    7. 'A' → logprob: -15.000343322753906
    8. 'min' → logprob: -16.000343322753906
    9. '                               ' → logprob: -16.750343322753906
    10. '#' → logprob: -17.000343322753906

Token 2181: ' adj' (ID: 20251)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.05370902642607689
    2. 'A' → logprob: -3.678709030151367
    3. ' ==' → logprob: -3.803709030151367
    4. '                       ' → logprob: -6.428709030151367
    5. '==' → logprob: -6.803709030151367
    6. ' sans' → logprob: -7.678709030151367
    7. ' without' → logprob: -8.178709030151367
    8. 's' → logprob: -8.303709030151367
    9. '                           ' → logprob: -8.678709030151367
    10. ' if' → logprob: -8.678709030151367

Token 2182: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.6237783432006836
    2. '                       ' → logprob: -0.9987783432006836
    3. 'acency' → logprob: -2.4987783432006836
    4. 'ac' → logprob: -4.998778343200684
    5. '                   ' → logprob: -5.873778343200684
    6. '                           ' → logprob: -6.498778343200684
    7. 'if' → logprob: -6.623778343200684
    8. 'acen' → logprob: -8.248778343200684
    9. 'A' → logprob: -8.748778343200684
    10. ':' → logprob: -9.248778343200684

Token 2183: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.006388610694557428
    2. 'ent' → logprob: -5.2563886642456055
    3. '   ' → logprob: -7.8813886642456055
    4. '       ' → logprob: -8.881388664245605
    5. '               ' → logprob: -9.506388664245605
    6. 'ac' → logprob: -9.756388664245605
    7. '#' → logprob: -9.881388664245605
    8. 'ante' → logprob: -9.881388664245605
    9. '           ' → logprob: -10.006388664245605
    10. 'ate' → logprob: -10.006388664245605

Token 2184: ' doit' (ID: 21822)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01256498508155346
    2. 'if' → logprob: -5.7625651359558105
    3. '                           ' → logprob: -6.1375651359558105
    4. ' if' → logprob: -6.1375651359558105
    5. ' and' → logprob: -6.3875651359558105
    6. '```' → logprob: -6.7625651359558105
    7. 'and' → logprob: -7.3875651359558105
    8. ',' → logprob: -8.262564659118652
    9. '                        ' → logprob: -8.262564659118652
    10. ':' → logprob: -9.012564659118652

Token 2185: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.4030811786651611
    2. 'A' → logprob: -1.9030811786651611
    3. ' être' → logprob: -2.028081178665161
    4. '==' → logprob: -2.153081178665161
    5. '                           ' → logprob: -2.278081178665161
    6. 'be' → logprob: -2.403081178665161
    7. '                       ' → logprob: -3.028081178665161
    8. ' ==' → logprob: -3.778081178665161
    9. 'être' → logprob: -3.778081178665161
    10. 'dist' → logprob: -4.153080940246582

Token 2186: ' sans' (ID: 9828)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05937108397483826
    2. '0' → logprob: -2.934370994567871
    3. ' A' → logprob: -5.434370994567871
    4. ' ' → logprob: -10.434370994567871
    5. '                       ' → logprob: -10.934370994567871
    6. '                   ' → logprob: -11.059370994567871
    7. 'dist' → logprob: -11.559370994567871
    8. '                           ' → logprob: -11.809370994567871
    9. 'zero' → logprob: -12.684370994567871
    10. 'sans' → logprob: -12.809370994567871

Token 2187: ' arbre' (ID: 164180)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.12732796370983124
    2. 'ar' → logprob: -2.1273279190063477
    3. ' arbre' → logprob: -8.752327919006348
    4. 'A' → logprob: -9.002327919006348
    5. ' arbres' → logprob: -9.502327919006348
    6. '   ' → logprob: -10.252327919006348
    7. '```' → logprob: -13.252327919006348
    8. ' ' → logprob: -14.002327919006348
    9. 'trees' → logprob: -14.252327919006348
    10. ''ar' → logprob: -14.627327919006348

Token 2188: ' et' (ID: 859)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06025262922048569
    2. ' and' → logprob: -2.9352526664733887
    3. 'and' → logprob: -5.560252666473389
    4. '                           ' → logprob: -6.560252666473389
    5. '                        ' → logprob: -10.18525218963623
    6. '                      ' → logprob: -11.31025218963623
    7. '                   ' → logprob: -11.43525218963623
    8. '           ' → logprob: -11.81025218963623
    9. ',' → logprob: -12.18525218963623
    10. ' if' → logprob: -12.68525218963623

Token 2189: ' accessible' (ID: 18240)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10022822767496109
    2. ' dist' → logprob: -2.3502283096313477
    3. '                           ' → logprob: -11.350228309631348
    4. '                       ' → logprob: -11.975228309631348
    5. ' accessible' → logprob: -14.225228309631348
    6. '(dist' → logprob: -14.600228309631348
    7. '                   ' → logprob: -15.100228309631348
    8. 'accessible' → logprob: -15.100228309631348
    9. '	dist' → logprob: -15.225228309631348
    10. '                        ' → logprob: -15.350228309631348

Token 2190: ' depuis' (ID: 16277)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.003666818141937256
    2. ' and' → logprob: -6.378666877746582
    3. '                           ' → logprob: -6.878666877746582
    4. ' if' → logprob: -7.878666877746582
    5. '                        ' → logprob: -8.128666877746582
    6. ',' → logprob: -9.753666877746582
    7. 'and' → logprob: -9.878666877746582
    8. ' (' → logprob: -10.753666877746582
    9. ':' → logprob: -10.878666877746582
    10. ' et' → logprob: -11.003666877746582

Token 2191: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11037351191043854
    2. 'dist' → logprob: -2.8603734970092773
    3. 'start' → logprob: -3.1103734970092773
    4. '#' → logprob: -6.235373497009277
    5. ' dist' → logprob: -8.610373497009277
    6. ' ' → logprob: -9.110373497009277
    7. ' start' → logprob: -9.485373497009277
    8. '                       ' → logprob: -10.235373497009277
    9. '               ' → logprob: -10.360373497009277
    10. '                   ' → logprob: -10.485373497009277

Token 2192: ''us' (ID: 143210)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.22760505974292755
    2. 'us' → logprob: -1.7276051044464111
    3. 'dist' → logprob: -3.852605104446411
    4. '0' → logprob: -5.727604866027832
    5. ''us' → logprob: -7.352604866027832
    6. 'i' → logprob: -8.227604866027832
    7. '_start' → logprob: -9.727604866027832
    8. ' start' → logprob: -9.727604866027832
    9. '`' → logprob: -10.727604866027832
    10. 's' → logprob: -10.727604866027832

Token 2193: 'ine' (ID: 514)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.585388720035553
    2. 'e' → logprob: -0.835388720035553
    3. 'ère' → logprob: -5.960388660430908
    4. 'ine' → logprob: -6.335388660430908
    5. 'age' → logprob: -6.960388660430908
    6. 'ere' → logprob: -6.960388660430908
    7. 'eur' → logprob: -6.960388660430908
    8. 'r' → logprob: -7.585388660430908
    9. 'dist' → logprob: -7.960388660430908
    10. 're' → logprob: -8.085389137268066

Token 2194: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0002533528604544699
    2. '                           ' → logprob: -8.500253677368164
    3. ' and' → logprob: -11.000253677368164
    4. ' if' → logprob: -11.500253677368164
    5. '                        ' → logprob: -11.750253677368164
    6. ',' → logprob: -12.750253677368164
    7. '                        
' → logprob: -13.125253677368164
    8. '                   ' → logprob: -13.250253677368164
    9. '           ' → logprob: -13.375253677368164
    10. '```' → logprob: -13.500253677368164

Token 2195: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20153312385082245
    2. '                           ' → logprob: -1.7015330791473389
    3. '                        ' → logprob: -9.951533317565918
    4. '                               ' → logprob: -10.826533317565918
    5. '           ' → logprob: -11.201533317565918
    6. '                   ' → logprob: -11.326533317565918
    7. '                         ' → logprob: -12.076533317565918
    8. '               ' → logprob: -12.451533317565918
    9. '                          ' → logprob: -12.576533317565918
    10. '                        
' → logprob: -12.826533317565918

Token 2196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022529615089297295
    2. '                       ' → logprob: -4.022529602050781
    3. ' if' → logprob: -5.522529602050781
    4. '                           ' → logprob: -7.897529602050781
    5. '                        ' → logprob: -14.397529602050781
    6. '                               ' → logprob: -14.647529602050781
    7. '           ' → logprob: -14.897529602050781
    8. 'elif' → logprob: -14.897529602050781
    9. '                   ' → logprob: -15.397529602050781
    10. '```' → logprob: -15.522529602050781

Token 2197: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.255494624376297
    2. ' A' → logprob: -1.5054945945739746
    3. 'dist' → logprob: -6.255494594573975
    4. ' dist' → logprob: -6.505494594573975
    5. '                   ' → logprob: -9.630495071411133
    6. '                       ' → logprob: -10.380495071411133
    7. '                           ' → logprob: -10.755495071411133
    8. '   ' → logprob: -12.005495071411133
    9. '               ' → logprob: -12.505495071411133
    10. '                               ' → logprob: -12.755495071411133

Token 2198: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.909333023941144e-05
    2. '[i' → logprob: -10.375068664550781
    3. '                   ' → logprob: -11.375068664550781
    4. 'ni' → logprob: -11.625068664550781
    5. ' [' → logprob: -12.250068664550781
    6. '```' → logprob: -12.250068664550781
    7. '[min' → logprob: -12.625068664550781
    8. '               ' → logprob: -13.875068664550781
    9. ' ni' → logprob: -14.375068664550781
    10. '                  ' → logprob: -15.125068664550781

Token 2199: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.00019984507525805384
    2. '[' → logprob: -9.250200271606445
    3. ' ni' → logprob: -9.250200271606445
    4. 'i' → logprob: -12.500200271606445
    5. '   ' → logprob: -14.125200271606445
    6. 'n' → logprob: -14.875200271606445
    7. '           ' → logprob: -15.000200271606445
    8. '               ' → logprob: -15.250200271606445
    9. '][' → logprob: -15.375200271606445
    10. '```' → logprob: -15.375200271606445

Token 2200: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.315936429426074e-05
    2. '][' → logprob: -9.500082969665527
    3. '[n' → logprob: -12.500082969665527
    4. '                   ' → logprob: -13.375082969665527
    5. '```' → logprob: -14.625082969665527
    6. ' [' → logprob: -15.000082969665527
    7. '               ' → logprob: -15.000082969665527
    8. '           ' → logprob: -15.125082969665527
    9. '       ' → logprob: -15.125082969665527
    10. '
' → logprob: -15.250082969665527

Token 2201: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.0014179765712469816
    2. 'ni' → logprob: -6.626418113708496
    3. '[n' → logprob: -9.751418113708496
    4. '0' → logprob: -10.876418113708496
    5. 'n' → logprob: -12.001418113708496
    6. ' nj' → logprob: -12.626418113708496
    7. '[' → logprob: -13.376418113708496
    8. '```' → logprob: -14.251418113708496
    9. 'nij' → logprob: -14.251418113708496
    10. 'nji' → logprob: -14.501418113708496

Token 2202: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.646668016910553
    2. '==' → logprob: -0.771668016910553
    3. ']==' → logprob: -4.396667957305908
    4. ']' → logprob: -7.021667957305908
    5. '[' → logprob: -7.646667957305908
    6. '```' → logprob: -9.271668434143066
    7. ')==' → logprob: -9.646668434143066
    8. '                           ' → logprob: -9.646668434143066
    9. '']==' → logprob: -11.771668434143066
    10. '                       ' → logprob: -11.896668434143066

Token 2203: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3133191168308258
    2. ' ==' → logprob: -1.3133190870285034
    3. '[' → logprob: -10.688319206237793
    4. ']==' → logprob: -11.313319206237793
    5. '```' → logprob: -11.938319206237793
    6. '                           ' → logprob: -12.188319206237793
    7. ')==' → logprob: -12.188319206237793
    8. '=' → logprob: -13.563319206237793
    9. '                       ' → logprob: -13.688319206237793
    10. '[j' → logprob: -13.813319206237793

Token 2204: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.625059127807617
    4. '```' → logprob: -19.375059127807617
    5. '=' → logprob: -20.125059127807617
    6. '۰' → logprob: -20.375059127807617
    7. ' ' → logprob: -20.875059127807617
    8. '  ' → logprob: -21.250059127807617
    9. '<|end|>' → logprob: -21.250059127807617
    10. '  ' → logprob: -21.250059127807617

Token 2205: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -19.625
    5. '                   ' → logprob: -20.625
    6. '                       ' → logprob: -20.875
    7. '۰' → logprob: -20.875
    8. '=' → logprob: -21.0
    9. '<|end|>' → logprob: -21.125
    10. '
' → logprob: -21.625

Token 2206: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02783672697842121
    2. 'and' → logprob: -3.777836799621582
    3. '                           ' → logprob: -5.402836799621582
    4. '                       ' → logprob: -10.277836799621582
    5. '                            ' → logprob: -11.152836799621582
    6. '                               ' → logprob: -11.652836799621582
    7. '                          ' → logprob: -12.652836799621582
    8. '                             ' → logprob: -12.777836799621582
    9. '	and' → logprob: -12.777836799621582
    10. '                        ' → logprob: -13.152836799621582

Token 2207: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00033546582562848926
    2. ' dist' → logprob: -8.000335693359375
    3. '(dist' → logprob: -19.750335693359375
    4. '                   ' → logprob: -20.125335693359375
    5. '                           ' → logprob: -20.375335693359375
    6. '	dist' → logprob: -20.875335693359375
    7. '                       ' → logprob: -21.625335693359375
    8. '               ' → logprob: -21.875335693359375
    9. '0' → logprob: -22.500335693359375
    10. '                               ' → logprob: -22.750335693359375

Token 2208: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.00011439072113716975
    2. 'from' → logprob: -9.250114440917969
    3. '[' → logprob: -11.125114440917969
    4. '_' → logprob: -13.375114440917969
    5. '_FROM' → logprob: -14.125114440917969
    6. '_for' → logprob: -15.250114440917969
    7. 'From' → logprob: -15.375114440917969
    8. '_to' → logprob: -15.500114440917969
    9. '```' → logprob: -15.500114440917969
    10. '   ' → logprob: -16.37511444091797

Token 2209: '_start' (ID: 10949)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.575942873954773
    2. '_start' → logprob: -0.825942873954773
    3. 'user' → logprob: -14.200942993164062
    4. '[start' → logprob: -14.450942993164062
    5. ' start' → logprob: -14.575942993164062
    6. '```' → logprob: -14.825942993164062
    7. 'i' → logprob: -14.950942993164062
    8. '_' → logprob: -15.450942993164062
    9. 'from' → logprob: -15.825942993164062
    10. 'Start' → logprob: -16.200942993164062

Token 2210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -15.250000953674316
    3. '][' → logprob: -15.375000953674316
    4. '```' → logprob: -15.750000953674316
    5. '}[' → logprob: -16.375001907348633
    6. '[min' → logprob: -16.625001907348633
    7. '
' → logprob: -16.625001907348633
    8. '[
' → logprob: -17.500001907348633
    9. ')[' → logprob: -18.000001907348633
    10. 'min' → logprob: -18.375001907348633

Token 2211: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.50000286102295
    3. ' ni' → logprob: -13.62500286102295
    4. '   ' → logprob: -17.000001907348633
    5. 'nii' → logprob: -18.500001907348633
    6. '```' → logprob: -18.500001907348633
    7. 'n' → logprob: -19.500001907348633
    8. '
' → logprob: -19.625001907348633
    9. '     ' → logprob: -19.875001907348633
    10. '-ni' → logprob: -19.875001907348633

Token 2212: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.2526882588863373
    2. '[' → logprob: -1.5026882886886597
    3. '[n' → logprob: -7.627688407897949
    4. '   ' → logprob: -9.00268840789795
    5. 'nj' → logprob: -9.75268840789795
    6. '       ' → logprob: -11.12768840789795
    7. ']' → logprob: -11.62768840789795
    8. ' ][' → logprob: -11.62768840789795
    9. '           ' → logprob: -11.87768840789795
    10. '
' → logprob: -11.87768840789795

Token 2213: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.0280383548888494e-06
    2. ' nj' → logprob: -14.750000953674316
    3. '
' → logprob: -15.750000953674316
    4. '   ' → logprob: -15.750000953674316
    5. '[n' → logprob: -16.500001907348633
    6. 'n' → logprob: -16.750001907348633
    7. '0' → logprob: -17.750001907348633
    8. '```' → logprob: -17.875001907348633
    9. 'nju' → logprob: -17.875001907348633
    10. 'nje' → logprob: -18.875001907348633

Token 2214: ']' (ID: 60)
  Prédit: '!=-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=-' → logprob: -1.0999735593795776
    2. ' !=' → logprob: -1.3499735593795776
    3. ']' → logprob: -1.8499735593795776
    4. ']!=' → logprob: -1.9749735593795776
    5. '!=' → logprob: -2.224973678588867
    6. ']>=' → logprob: -6.349973678588867
    7. '>=' → logprob: -7.099973678588867
    8. ')!=' → logprob: -7.474973678588867
    9. ' ]' → logprob: -8.099973678588867
    10. ')' → logprob: -9.974973678588867

Token 2215: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5412652492523193
    2. '!=' → logprob: -1.2912652492523193
    3. '==' → logprob: -2.4162652492523193
    4. ' ==' → logprob: -3.0412652492523193
    5. '!=-' → logprob: -5.791265487670898
    6. '<|end|>' → logprob: -7.041265487670898
    7. '                           ' → logprob: -7.916265487670898
    8. '```' → logprob: -8.291265487670898
    9. ')' → logprob: -8.541265487670898
    10. '[' → logprob: -8.541265487670898

Token 2216: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8624639324116288e-06
    2. ' -' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.625001907348633
    4. '−' → logprob: -22.000001907348633
    5. ' ' → logprob: -22.125001907348633
    6. '  ' → logprob: -23.125001907348633
    7. '```' → logprob: -23.125001907348633
    8. '0' → logprob: -24.250001907348633
    9. '‑' → logprob: -24.250001907348633
    10. '    ' → logprob: -24.750001907348633

Token 2217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.625000953674316
    3. '2' → logprob: -16.125
    4. '```' → logprob: -16.25
    5. '                   ' → logprob: -16.625
    6. '   ' → logprob: -16.75
    7. '
' → logprob: -17.8125
    8. '-' → logprob: -18.125
    9. '``' → logprob: -18.4375
    10. '                       ' → logprob: -18.5

Token 2218: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5447167158126831
    2. ' and' → logprob: -0.9197167158126831
    3. ':
' → logprob: -4.544716835021973
    4. '                       ' → logprob: -5.419716835021973
    5. ':' → logprob: -5.669716835021973
    6. 'and' → logprob: -6.419716835021973
    7. '                               ' → logprob: -7.544716835021973
    8. ',' → logprob: -8.919716835021973
    9. '                            ' → logprob: -8.919716835021973
    10. '                   ' → logprob: -9.044716835021973

Token 2219: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002929680049419403
    2. '                       ' → logprob: -6.3779296875
    3. '                               ' → logprob: -6.7529296875
    4. '```' → logprob: -10.8779296875
    5. '                            ' → logprob: -11.0029296875
    6. '                   ' → logprob: -12.2529296875
    7. '                          ' → logprob: -12.5029296875
    8. '                        ' → logprob: -13.0029296875
    9. '                         ' → logprob: -13.1279296875
    10. '                             ' → logprob: -13.3779296875

Token 2220: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06132635846734047
    2. 'if' → logprob: -3.061326265335083
    3. 'dist' → logprob: -4.686326503753662
    4. '                           ' → logprob: -6.311326503753662
    5. '                               ' → logprob: -6.686326503753662
    6. ' min' → logprob: -8.811326026916504
    7. ' if' → logprob: -9.436326026916504
    8. '```' → logprob: -10.561326026916504
    9. 'current' → logprob: -11.061326026916504
    10. '                                   ' → logprob: -11.061326026916504

Token 2221: ' Pour' (ID: 13931)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.023255029693245888
    2. 'if' → logprob: -4.398254871368408
    3. 'dist' → logprob: -4.648254871368408
    4. '                           ' → logprob: -7.023254871368408
    5. '                               ' → logprob: -8.898255348205566
    6. 'candidate' → logprob: -11.023255348205566
    7. ' min' → logprob: -11.273255348205566
    8. 'curr' → logprob: -12.148255348205566
    9. 'current' → logprob: -12.148255348205566
    10. 'nd' → logprob: -12.148255348205566

Token 2222: ' couper' (ID: 135212)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10178744792938232
    2. 'min' → logprob: -3.101787567138672
    3. 'distance' → logprob: -4.476787567138672
    4. 'candidate' → logprob: -4.476787567138672
    5. 'd' → logprob: -4.601787567138672
    6. 'adj' → logprob: -4.851787567138672
    7. ' dist' → logprob: -5.101787567138672
    8. 'k' → logprob: -6.726787567138672
    9. 'token' → logprob: -7.601787567138672
    10. 'current' → logprob: -7.726787567138672

Token 2223: ' l' (ID: 305)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.9682580828666687
    2. '                               ' → logprob: -1.7182581424713135
    3. 'la' → logprob: -2.3432581424713135
    4. 'dist' → logprob: -2.4682581424713135
    5. 'total' → logprob: -2.4682581424713135
    6. 'le' → logprob: -3.0932581424713135
    7. ' la' → logprob: -3.8432581424713135
    8. 'min' → logprob: -4.093257904052734
    9. ' le' → logprob: -4.468257904052734
    10. '                                   ' → logprob: -4.468257904052734

Token 2224: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.2792966067790985
    2. ''ar' → logprob: -2.154296636581421
    3. ' arbre' → logprob: -3.029296636581421
    4. ' arbres' → logprob: -3.654296636581421
    5. 'A' → logprob: -4.654296398162842
    6. '_ar' → logprob: -5.154296398162842
    7. '`' → logprob: -5.279296398162842
    8. '                   ' → logprob: -5.404296398162842
    9. 'arb' → logprob: -5.779296398162842
    10. 'trees' → logprob: -6.029296398162842

Token 2225: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.01208904106169939
    2. 'bres' → logprob: -5.012089252471924
    3. 'i' → logprob: -5.512089252471924
    4. 'b' → logprob: -8.262088775634766
    5. '[i' → logprob: -8.762088775634766
    6. 'br' → logprob: -9.012088775634766
    7. '```' → logprob: -9.262088775634766
    8. 'bor' → logprob: -9.387088775634766
    9. 'tree' → logprob: -9.637088775634766
    10. 'be' → logprob: -10.012088775634766

Token 2226: ',' (ID: 11)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.2111632078886032
    2. '                           ' → logprob: -1.9611631631851196
    3. ',' → logprob: -3.711163282394409
    4. ':
' → logprob: -4.58616304397583
    5. ':' → logprob: -4.96116304397583
    6. ' =' → logprob: -6.71116304397583
    7. '                                   ' → logprob: -6.83616304397583
    8. '                             ' → logprob: -6.96116304397583
    9. '                              ' → logprob: -7.58616304397583
    10. ' et' → logprob: -7.71116304397583

Token 2227: ' le' (ID: 505)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.13544458150863647
    2. 'min' → logprob: -2.8854446411132812
    3. 'dist' → logprob: -3.3854446411132812
    4. '                           ' → logprob: -3.8854446411132812
    5. ' min' → logprob: -5.010444641113281
    6. 'if' → logprob: -6.010444641113281
    7. 'token' → logprob: -6.135444641113281
    8. ' if' → logprob: -6.135444641113281
    9. 'distance' → logprob: -7.010444641113281
    10. ' dist' → logprob: -7.385444641113281

Token 2228: ' déplacement' (ID: 138449)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4133061170578003
    2. 'min' → logprob: -1.1633061170578003
    3. 'distance' → logprob: -3.78830623626709
    4. 'curr' → logprob: -7.16330623626709
    5. 'candidate' → logprob: -7.28830623626709
    6. 'current' → logprob: -7.66330623626709
    7. 'cost' → logprob: -8.03830623626709
    8. 'd' → logprob: -8.03830623626709
    9. 'token' → logprob: -8.28830623626709
    10. 'possible' → logprob: -8.66330623626709

Token 2229: ' aller' (ID: 18383)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8786242604255676
    2. '                           ' → logprob: -1.7536242008209229
    3. '=' → logprob: -2.378624200820923
    4. ' +=' → logprob: -2.503624200820923
    5. 's' → logprob: -3.003624200820923
    6. '+' → logprob: -3.253624200820923
    7. 'aller' → logprob: -3.503624200820923
    8. ' aller' → logprob: -3.878624200820923
    9. 'dist' → logprob: -4.003624439239502
    10. '_' → logprob: -4.628624439239502

Token 2230: '-ret' (ID: 104824)
  Prédit: '-ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ret' → logprob: -0.19678904116153717
    2. 'ret' → logprob: -2.196789026260376
    3. '_ret' → logprob: -2.696789026260376
    4. '+' → logprob: -11.321788787841797
    5. 'et' → logprob: -11.946788787841797
    6. '-return' → logprob: -12.196788787841797
    7. '-' → logprob: -12.321788787841797
    8. '                           ' → logprob: -12.446788787841797
    9. ' -' → logprob: -12.571788787841797
    10. '-re' → logprob: -12.821788787841797

Token 2231: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.01926822029054165
    2. 'out' → logprob: -4.894268035888672
    3. 'tour' → logprob: -5.394268035888672
    4. 'et' → logprob: -6.019268035888672
    5. 'ot' → logprob: -6.019268035888672
    6. 'ourt' → logprob: -6.644268035888672
    7. 'ours' → logprob: -7.519268035888672
    8. '```' → logprob: -10.394268035888672
    9. 'ou' → logprob: -10.644268035888672
    10. 'ret' → logprob: -10.769268035888672

Token 2232: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4549378752708435
    2. '                           ' → logprob: -1.5799379348754883
    3. '=' → logprob: -3.2049379348754883
    4. '+' → logprob: -3.8299379348754883
    5. 'cost' → logprob: -3.8299379348754883
    6. ' +=' → logprob: -3.9549379348754883
    7. '_time' → logprob: -4.204937934875488
    8. 'dist' → logprob: -4.579937934875488
    9. '_cost' → logprob: -4.704937934875488
    10. '                            ' → logprob: -5.954937934875488

Token 2233: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.3910338878631592
    2. 'dist' → logprob: -1.1410338878631592
    3. '                           ' → logprob: -6.266034126281738
    4. '2' → logprob: -6.516034126281738
    5. '                            ' → logprob: -8.141034126281738
    6. '                               ' → logprob: -8.266034126281738
    7. ' ' → logprob: -9.391034126281738
    8. '                                   ' → logprob: -10.391034126281738
    9. '	dist' → logprob: -11.266034126281738
    10. '   ' → logprob: -11.266034126281738

Token 2234: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -5.1928003813372925e-05
    2. '[' → logprob: -10.000051498413086
    3. '_FROM' → logprob: -13.250051498413086
    4. 'from' → logprob: -13.500051498413086
    5. '                           ' → logprob: -13.875051498413086
    6. '                   ' → logprob: -14.625051498413086
    7. '   ' → logprob: -14.750051498413086
    8. '                               ' → logprob: -15.125051498413086
    9. '                       ' → logprob: -15.250051498413086
    10. '```' → logprob: -15.250051498413086

Token 2235: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.008616461418569088
    2. 'start' → logprob: -4.7586164474487305
    3. '_' → logprob: -14.00861644744873
    4. 'ni' → logprob: -14.38361644744873
    5. '[start' → logprob: -15.25861644744873
    6. ' start' → logprob: -16.258617401123047
    7. '```' → logprob: -16.633617401123047
    8. '_START' → logprob: -16.633617401123047
    9. 'Start' → logprob: -17.508617401123047
    10. '[' → logprob: -18.008617401123047

Token 2236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001178916310891509
    2. '[i' → logprob: -6.751178741455078
    3. '                   ' → logprob: -12.626178741455078
    4. ' [' → logprob: -13.876178741455078
    5. '               ' → logprob: -14.001178741455078
    6. '][' → logprob: -14.501178741455078
    7. '   ' → logprob: -14.626178741455078
    8. 'i' → logprob: -14.626178741455078
    9. '```' → logprob: -14.876178741455078
    10. '           ' → logprob: -15.251178741455078

Token 2237: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0017427700804546475
    2. '[' → logprob: -6.376742839813232
    3. ' ni' → logprob: -10.376742362976074
    4. '
' → logprob: -12.001742362976074
    5. '   ' → logprob: -14.001742362976074
    6. '][' → logprob: -14.251742362976074
    7. '(' → logprob: -14.251742362976074
    8. '```' → logprob: -15.126742362976074
    9. '
' → logprob: -16.12674331665039
    10. ']' → logprob: -16.12674331665039

Token 2238: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.043353695422410965
    2. '][' → logprob: -3.168353796005249
    3. '[n' → logprob: -9.168354034423828
    4. '}[' → logprob: -9.543354034423828
    5. 'nj' → logprob: -9.793354034423828
    6. '[i' → logprob: -10.293354034423828
    7. ']' → logprob: -10.668354034423828
    8. '
' → logprob: -11.168354034423828
    9. '   ' → logprob: -11.293354034423828
    10. '```' → logprob: -11.543354034423828

Token 2239: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -2.7491250875755213e-05
    2. '[n' → logprob: -10.875027656555176
    3. '
' → logprob: -12.125027656555176
    4. 'ni' → logprob: -13.750027656555176
    5. ' nj' → logprob: -14.500027656555176
    6. '   ' → logprob: -14.625027656555176
    7. '(n' → logprob: -14.750027656555176
    8. 'n' → logprob: -15.500027656555176
    9. '```' → logprob: -15.875027656555176
    10. '[' → logprob: -16.50002670288086

Token 2240: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7113406658172607
    2. '*' → logprob: -1.2113406658172607
    3. ']*' → logprob: -2.0863406658172607
    4. ' *' → logprob: -2.5863406658172607
    5. ' +' → logprob: -5.58634090423584
    6. ']+' → logprob: -5.83634090423584
    7. '+' → logprob: -6.21134090423584
    8. ')' → logprob: -7.33634090423584
    9. '                           ' → logprob: -7.46134090423584
    10. ')*' → logprob: -7.46134090423584

Token 2241: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '```' → logprob: -15.750123977661133
    4. '                           ' → logprob: -17.125123977661133
    5. '                               ' → logprob: -17.625123977661133
    6. '<|end|>' → logprob: -17.750123977661133
    7. '   ' → logprob: -18.375123977661133
    8. '1' → logprob: -18.750123977661133
    9. '+' → logprob: -18.875123977661133
    10. '                                           ' → logprob: -18.875123977661133

Token 2242: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0038075498305261135
    2. ' +' → logprob: -6.253807544708252
    3. '+' → logprob: -7.378807544708252
    4. '*' → logprob: -8.12880802154541
    5. '                               ' → logprob: -8.37880802154541
    6. ':' → logprob: -8.75380802154541
    7. '                            ' → logprob: -8.87880802154541
    8. '                       ' → logprob: -9.25380802154541
    9. '```' → logprob: -9.62880802154541
    10. ' *' → logprob: -9.75380802154541

Token 2243: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00015288250870071352
    2. '                               ' → logprob: -9.000152587890625
    3. '                            ' → logprob: -11.125152587890625
    4. '                       ' → logprob: -12.125152587890625
    5. ',' → logprob: -13.000152587890625
    6. '                          ' → logprob: -13.500152587890625
    7. '           ' → logprob: -14.000152587890625
    8. '                   ' → logprob: -14.125152587890625
    9. '                                   ' → logprob: -14.125152587890625
    10. ' +' → logprob: -14.250152587890625

Token 2244: ' #' (ID: 1069)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.11804629862308502
    2. '                               ' → logprob: -2.868046283721924
    3. 'if' → logprob: -3.868046283721924
    4. 'min' → logprob: -4.118046283721924
    5. ' if' → logprob: -4.243046283721924
    6. ' min' → logprob: -6.243046283721924
    7. '                       ' → logprob: -8.118046760559082
    8. 'dist' → logprob: -8.618046760559082
    9. '                                   ' → logprob: -8.993046760559082
    10. 'temp' → logprob: -8.993046760559082

Token 2245: ' Car' (ID: 4004)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.06946111470460892
    2. 'if' → logprob: -3.0694611072540283
    3. 'min' → logprob: -3.9444611072540283
    4. '                               ' → logprob: -6.944461345672607
    5. 'dist' → logprob: -8.94446086883545
    6. 'temp' → logprob: -9.94446086883545
    7. '                       ' → logprob: -10.19446086883545
    8. ' if' → logprob: -10.44446086883545
    9. '                                   ' → logprob: -10.81946086883545
    10. 'current' → logprob: -11.19446086883545

Token 2246: ' il' (ID: 1793)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3290886878967285
    2. 'la' → logprob: -2.9540886878967285
    3. '                           ' → logprob: -2.9540886878967285
    4. ' dist' → logprob: -3.2040886878967285
    5. ' on' → logprob: -3.4540886878967285
    6. 'le' → logprob: -3.5790886878967285
    7. 'on' → logprob: -4.4540886878967285
    8. ' la' → logprob: -4.7040886878967285
    9. 'distance' → logprob: -4.7040886878967285
    10. '2' → logprob: -4.7040886878967285

Token 2247: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.8785257339477539
    2. 's' → logprob: -1.003525733947754
    3. '*' → logprob: -2.503525733947754
    4. 'f' → logprob: -2.753525733947754
    5. '=' → logprob: -4.378525733947754
    6. ' faudra' → logprob: -5.003525733947754
    7. 'est' → logprob: -5.128525733947754
    8. 'n' → logprob: -5.253525733947754
    9. '+=' → logprob: -5.628525733947754
    10. 'dist' → logprob: -5.628525733947754

Token 2248: ' revenir' (ID: 88322)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.5816052556037903
    2. 'ram' → logprob: -1.9566051959991455
    3. '                           ' → logprob: -2.4566051959991455
    4. 'contin' → logprob: -3.0816051959991455
    5. 'aller' → logprob: -3.5816051959991455
    6. 're' → logprob: -3.7066051959991455
    7. '                             ' → logprob: -3.9566051959991455
    8. '                               ' → logprob: -4.581605434417725
    9. '                            ' → logprob: -4.706605434417725
    10. 'ret' → logprob: -4.956605434417725

Token 2249: ' à' (ID: 1221)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.18532244861125946
    2. ' à' → logprob: -2.5603225231170654
    3. '                               ' → logprob: -3.4353225231170654
    4. '+' → logprob: -4.185322284698486
    5. '```' → logprob: -4.560322284698486
    6. '                                   ' → logprob: -4.810322284698486
    7. ' +' → logprob: -5.060322284698486
    8. 'dist' → logprob: -5.560322284698486
    9. 'à' → logprob: -5.810322284698486
    10. '                       ' → logprob: -6.310322284698486

Token 2250: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6217431426048279
    2. 'l' → logprob: -1.2467432022094727
    3. 'la' → logprob: -1.9967432022094727
    4. '0' → logprob: -4.121743202209473
    5. 'ni' → logprob: -4.371743202209473
    6. 'us' → logprob: -5.246743202209473
    7. ' dist' → logprob: -6.871743202209473
    8. ' la' → logprob: -7.246743202209473
    9. '   ' → logprob: -7.371743202209473
    10. 'start' → logprob: -7.496743202209473

Token 2251: ''us' (ID: 143210)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21594208478927612
    2. 'us' → logprob: -1.715942144393921
    3. '[' → logprob: -5.340941905975342
    4. 'ni' → logprob: -5.590941905975342
    5. 'start' → logprob: -5.840941905975342
    6. 'i' → logprob: -6.965941905975342
    7. '[i' → logprob: -7.715941905975342
    8. 'usi' → logprob: -8.5909423828125
    9. 'case' → logprob: -8.7159423828125
    10. ''us' → logprob: -8.7159423828125

Token 2252: 'ine' (ID: 514)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20923614501953125
    2. 'e' → logprob: -1.7092361450195312
    3. 'start' → logprob: -5.709236145019531
    4. 'ine' → logprob: -6.084236145019531
    5. 't' → logprob: -7.084236145019531
    6. 'i' → logprob: -8.834236145019531
    7. '_start' → logprob: -9.084236145019531
    8. '_dist' → logprob: -9.084236145019531
    9. '
' → logprob: -9.209236145019531
    10. ' dist' → logprob: -9.209236145019531

Token 2253: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -7.374227425316349e-05
    2. '                       ' → logprob: -11.000073432922363
    3. ',' → logprob: -11.250073432922363
    4. '                            ' → logprob: -11.250073432922363
    5. '           ' → logprob: -11.750073432922363
    6. '                   ' → logprob: -12.250073432922363
    7. '                               ' → logprob: -12.375073432922363
    8. '                          ' → logprob: -12.875073432922363
    9. '```' → logprob: -12.875073432922363
    10. '						' → logprob: -13.000073432922363

Token 2254: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00013905855303164572
    2. '                               ' → logprob: -9.375139236450195
    3. '                       ' → logprob: -11.000139236450195
    4. '                            ' → logprob: -11.625139236450195
    5. ',' → logprob: -11.750139236450195
    6. '           ' → logprob: -12.000139236450195
    7. '                   ' → logprob: -13.125139236450195
    8. '						' → logprob: -13.125139236450195
    9. '                            
' → logprob: -13.125139236450195
    10. '               ' → logprob: -13.500139236450195

Token 2255: ' if' (ID: 538)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.7665976881980896
    2. 'min' → logprob: -0.8915976881980896
    3. 'if' (adapté à ' if') → logprob: -2.1415977478027344
    4. '                               ' → logprob: -5.266597747802734
    5. 'dist' → logprob: -6.141597747802734
    6. 'temp' → logprob: -8.266597747802734
    7. ' if' → logprob: -9.266597747802734
    8. '                       ' → logprob: -9.516597747802734
    9. 'current' → logprob: -10.016597747802734
    10. '                                   ' → logprob: -10.391597747802734

Token 2256: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005626800935715437
    2. ' dist' → logprob: -5.255626678466797
    3. 'min' → logprob: -7.880626678466797
    4. ' min' → logprob: -11.505626678466797
    5. '   ' → logprob: -12.755626678466797
    6. '	dist' → logprob: -14.755626678466797
    7. '(dist' → logprob: -15.005626678466797
    8. '       ' → logprob: -15.130626678466797
    9. '                           ' → logprob: -15.255626678466797
    10. '           ' → logprob: -15.505626678466797

Token 2257: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -3.082895273109898e-05
    2. '[' → logprob: -10.625030517578125
    3. 'from' → logprob: -12.500030517578125
    4. '_FROM' → logprob: -13.375030517578125
    5. 'From' → logprob: -15.125030517578125
    6. '_for' → logprob: -15.375030517578125
    7. '                   ' → logprob: -15.500030517578125
    8. '_to' → logprob: -16.125030517578125
    9. '<|end|>' → logprob: -16.500030517578125
    10. '```' → logprob: -17.125030517578125

Token 2258: '_start' (ID: 10949)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07936614006757736
    2. '_start' → logprob: -2.5793662071228027
    3. 'ni' → logprob: -7.704366207122803
    4. 'Start' → logprob: -11.829365730285645
    5. '[' → logprob: -12.329365730285645
    6. 'min' → logprob: -13.079365730285645
    7. ' start' → logprob: -13.204365730285645
    8. '[start' → logprob: -13.329365730285645
    9. '	start' → logprob: -14.079365730285645
    10. '_START' → logprob: -14.329365730285645

Token 2259: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.107425062713446e-06
    2. '                   ' → logprob: -12.125006675720215
    3. '               ' → logprob: -14.750006675720215
    4. '                           ' → logprob: -15.000006675720215
    5. '```' → logprob: -15.875006675720215
    6. ' [' → logprob: -16.00000762939453
    7. '                       ' → logprob: -16.12500762939453
    8. '                  ' → logprob: -16.25000762939453
    9. '[min' → logprob: -16.75000762939453
    10. '                               ' → logprob: -16.75000762939453

Token 2260: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -9.088346359931165e-07
    2. ' ni' → logprob: -14.000000953674316
    3. '[' → logprob: -18.0
    4. 'ни' → logprob: -18.25
    5. '                   ' → logprob: -18.625
    6. '   ' → logprob: -19.0
    7. '           ' → logprob: -19.375
    8. '-ni' → logprob: -19.375
    9. 'i' → logprob: -19.75
    10. 'nii' → logprob: -19.875

Token 2261: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008093222044408321
    2. '][' → logprob: -4.883093357086182
    3. 'ni' → logprob: -8.133092880249023
    4. '                           ' → logprob: -9.508092880249023
    5. '                   ' → logprob: -9.883092880249023
    6. '                       ' → logprob: -11.133092880249023
    7. '               ' → logprob: -11.383092880249023
    8. '                               ' → logprob: -11.758092880249023
    9. ']' → logprob: -12.383092880249023
    10. '```' → logprob: -12.383092880249023

Token 2262: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.00282984203658998
    2. 'ni' → logprob: -5.8778300285339355
    3. '[n' → logprob: -11.127829551696777
    4. '```' → logprob: -12.877829551696777
    5. '
' → logprob: -13.002829551696777
    6. '[' → logprob: -13.502829551696777
    7. '   ' → logprob: -14.002829551696777
    8. 'n' → logprob: -14.252829551696777
    9. 'adj' → logprob: -14.877829551696777
    10. 'nji' → logprob: -15.127829551696777

Token 2263: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4287029802799225
    2. '<' → logprob: -1.6787029504776
    3. ']' → logprob: -2.4287030696868896
    4. '+' → logprob: -3.1787030696868896
    5. '                           ' → logprob: -4.4287028312683105
    6. ' +' → logprob: -4.9287028312683105
    7. '                               ' → logprob: -6.0537028312683105
    8. ']<' → logprob: -6.1787028312683105
    9. ')' → logprob: -6.3037028312683105
    10. '```' → logprob: -7.0537028312683105

Token 2264: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00594254769384861
    2. ' <' → logprob: -5.130942344665527
    3. '<int' → logprob: -12.880942344665527
    4. '<size' → logprob: -12.880942344665527
    5. '<
' → logprob: -12.880942344665527
    6. 'min' → logprob: -13.505942344665527
    7. '<=' → logprob: -13.880942344665527
    8. '!=' → logprob: -14.255942344665527
    9. '<std' → logprob: -15.255942344665527
    10. '<float' → logprob: -15.255942344665527

Token 2265: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0325924449716695e-05
    2. ' min' → logprob: -11.50001049041748
    3. '                           ' → logprob: -15.62501049041748
    4. '	min' → logprob: -18.125009536743164
    5. '                               ' → logprob: -18.375009536743164
    6. '   ' → logprob: -19.125009536743164
    7. '```' → logprob: -19.625009536743164
    8. '               ' → logprob: -20.750009536743164
    9. '
' → logprob: -20.750009536743164
    10. '_min' → logprob: -20.875009536743164

Token 2266: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.0013505916576832533
    2. 'dist' → logprob: -6.626350402832031
    3. 'min' → logprob: -11.501350402832031
    4. 'Dist' → logprob: -12.126350402832031
    5. '_distance' → logprob: -12.626350402832031
    6. '	dist' → logprob: -13.501350402832031
    7. '_min' → logprob: -14.376350402832031
    8. '_DIST' → logprob: -14.501350402832031
    9. '-dist' → logprob: -14.501350402832031
    10. '```' → logprob: -14.626350402832031

Token 2267: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0022492227144539356
    2. 'min' → logprob: -6.752249240875244
    3. '               ' → logprob: -8.127248764038086
    4. 'dist' → logprob: -8.502248764038086
    5. '                           ' → logprob: -8.752248764038086
    6. '                               ' → logprob: -8.752248764038086
    7. '_dist' → logprob: -9.752248764038086
    8. '```' → logprob: -9.752248764038086
    9. '(min' → logprob: -10.502248764038086
    10. '=min' → logprob: -11.127248764038086

Token 2268: '_adj' (ID: 117293)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.32321345806121826
    2. 'adj' → logprob: -1.3232134580612183
    3. '_adj' → logprob: -4.823213577270508
    4. '=' → logprob: -7.948213577270508
    5. 'inf' → logprob: -8.323213577270508
    6. ' min' → logprob: -8.323213577270508
    7. '0' → logprob: -8.948213577270508
    8. '=min' → logprob: -9.073213577270508
    9. 'INF' → logprob: -9.198213577270508
    10. 'Adjacent' → logprob: -9.198213577270508

Token 2269: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0019305398454889655
    2. 'ent' → logprob: -6.8769307136535645
    3. 'ant' → logprob: -7.5019307136535645
    4. 'cent' → logprob: -9.501930236816406
    5. 'adj' → logprob: -9.626930236816406
    6. '   ' → logprob: -10.126930236816406
    7. 'istant' → logprob: -10.251930236816406
    8. ' adjacent' → logprob: -10.251930236816406
    9. '_adj' → logprob: -11.001930236816406
    10. '>' → logprob: -11.876930236816406

Token 2270: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5917012095451355
    2. ':' → logprob: -0.9667012095451355
    3. '                               ' → logprob: -2.8417012691497803
    4. '                           ' → logprob: -4.966701030731201
    5. '():
' → logprob: -8.84170150756836
    6. '                       ' → logprob: -8.96670150756836
    7. '               ' → logprob: -9.09170150756836
    8. '=' → logprob: -9.09170150756836
    9. '):
' → logprob: -9.46670150756836
    10. '                              ' → logprob: -9.46670150756836

Token 2271: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.035111263394355774
    2. '                           ' → logprob: -3.41011118888855
    3. '                                   ' → logprob: -7.035111427307129
    4. '                       ' → logprob: -8.160111427307129
    5. '                                       ' → logprob: -9.035111427307129
    6. '                                           ' → logprob: -10.160111427307129
    7. '               ' → logprob: -10.410111427307129
    8. ' min' → logprob: -11.285111427307129
    9. '                            ' → logprob: -11.285111427307129
    10. '                   ' → logprob: -11.410111427307129

Token 2272: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.4910967946052551
    2. '                               ' → logprob: -0.9910967946052551
    3. '                           ' → logprob: -4.2410969734191895
    4. '                                   ' → logprob: -6.3660969734191895
    5. ' min' → logprob: -7.4910969734191895
    6. '                       ' → logprob: -9.491096496582031
    7. '                   ' → logprob: -9.991096496582031
    8. '                                       ' → logprob: -10.116096496582031
    9. '               ' → logprob: -11.241096496582031
    10. '   ' → logprob: -11.491096496582031

Token 2273: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -6.988221684878226e-06
    2. 'dist' → logprob: -12.500006675720215
    3. '_distance' → logprob: -12.750006675720215
    4. 'Dist' → logprob: -15.625006675720215
    5. '_d' → logprob: -17.25000762939453
    6. '	dist' → logprob: -17.25000762939453
    7. '_DIST' → logprob: -17.37500762939453
    8. '_' → logprob: -17.75000762939453
    9. '_dest' → logprob: -18.62500762939453
    10. '_diff' → logprob: -18.75000762939453

Token 2274: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.0802738870552275e-05
    2. '=' → logprob: -11.75001049041748
    3. '                               ' → logprob: -13.37501049041748
    4. '=_' → logprob: -15.00001049041748
    5. ' =' → logprob: -15.62501049041748
    6. '\' → logprob: -15.75001049041748
    7. 'To' → logprob: -16.000011444091797
    8. '=min' → logprob: -16.125011444091797
    9. '                           ' → logprob: -16.500011444091797
    10. '                                   ' → logprob: -16.750011444091797

Token 2275: '_adj' (ID: 117293)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6933103799819946
    2. '_adj' → logprob: -0.6933103799819946
    3. 'min' → logprob: -9.443310737609863
    4. '_ad' → logprob: -9.443310737609863
    5. ' adjacent' → logprob: -13.318310737609863
    6. 'Adjacent' → logprob: -13.818310737609863
    7. 'ad' → logprob: -14.318310737609863
    8. 'aj' → logprob: -15.193310737609863
    9. '(adj' → logprob: -15.318310737609863
    10. 'dist' → logprob: -16.068309783935547

Token 2276: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.00157437555026263
    2. 'j' → logprob: -7.251574516296387
    3. '_adj' → logprob: -7.376574516296387
    4. 'adj' → logprob: -9.126574516296387
    5. 'ac' → logprob: -9.376574516296387
    6. 'aced' → logprob: -11.001574516296387
    7. 'aj' → logprob: -12.001574516296387
    8. 'cent' → logprob: -12.501574516296387
    9. 'jac' → logprob: -13.001574516296387
    10. '_' → logprob: -13.126574516296387

Token 2277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150877207517624
    2. ' =' → logprob: -4.018150806427002
    3. '                               ' → logprob: -14.39315128326416
    4. '＝' → logprob: -16.143150329589844
    5. '                                ' → logprob: -16.268150329589844
    6. '=
' → logprob: -16.518150329589844
    7. '                                   ' → logprob: -16.643150329589844
    8. '=

' → logprob: -17.268150329589844
    9. '=int' → logprob: -17.643150329589844
    10. '							' → logprob: -18.018150329589844

Token 2278: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0002631238894537091
    2. ' dist' → logprob: -8.250263214111328
    3. '                           ' → logprob: -13.500263214111328
    4. '                               ' → logprob: -15.125263214111328
    5. '	dist' → logprob: -18.000263214111328
    6. '                            ' → logprob: -18.000263214111328
    7. '                                   ' → logprob: -18.250263214111328
    8. '                   ' → logprob: -18.500263214111328
    9. '                       ' → logprob: -18.625263214111328
    10. '   ' → logprob: -18.750263214111328

Token 2279: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -5.7888184528565034e-05
    2. '_to' → logprob: -10.6250581741333
    3. 'from' → logprob: -10.8750581741333
    4. '[' → logprob: -12.2500581741333
    5. '```' → logprob: -13.6250581741333
    6. '_dist' → logprob: -13.7500581741333
    7. '[_' → logprob: -13.7500581741333
    8. '   ' → logprob: -14.1250581741333
    9. '_for' → logprob: -14.2500581741333
    10. ' _' → logprob: -14.2500581741333

Token 2280: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0015047440538182855
    2. 'start' → logprob: -6.501504898071289
    3. 'ni' → logprob: -14.626504898071289
    4. 'adj' → logprob: -14.626504898071289
    5. 'Start' → logprob: -15.251504898071289
    6. 'dist' → logprob: -15.626504898071289
    7. '_' → logprob: -15.876504898071289
    8. '[' → logprob: -16.12650489807129
    9. '```' → logprob: -16.25150489807129
    10. '_START' → logprob: -16.37650489807129

Token 2281: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1279553291387856e-05
    2. '```' → logprob: -11.750011444091797
    3. '[min' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.375011444091797
    5. '       ' → logprob: -14.875011444091797
    6. '               ' → logprob: -15.000011444091797
    7. '_' → logprob: -15.125011444091797
    8. ' [' → logprob: -15.125011444091797
    9. '[
' → logprob: -16.375011444091797
    10. '           ' → logprob: -16.375011444091797

Token 2282: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -6.153795766294934e-06
    2. ' ni' → logprob: -12.375005722045898
    3. 'nj' → logprob: -14.250005722045898
    4. '
' → logprob: -14.875005722045898
    5. '   ' → logprob: -15.125005722045898
    6. '[' → logprob: -15.875005722045898
    7. '```' → logprob: -16.8750057220459
    8. '                   ' → logprob: -16.8750057220459
    9. 'n' → logprob: -17.0000057220459
    10. '           ' → logprob: -17.1250057220459

Token 2283: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004837957210838795
    2. '][' → logprob: -5.379837989807129
    3. '[n' → logprob: -9.629837989807129
    4. '   ' → logprob: -10.004837989807129
    5. '[j' → logprob: -10.879837989807129
    6. 'nj' → logprob: -11.129837989807129
    7. '       ' → logprob: -11.129837989807129
    8. '
' → logprob: -11.504837989807129
    9. '[i' → logprob: -12.504837989807129
    10. '{' → logprob: -12.629837989807129

Token 2284: 'nj' (ID: 30318)
  Prédit: 'nj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -1.7120533811976202e-05
    2. 'ni' → logprob: -11.500017166137695
    3. '
' → logprob: -12.875017166137695
    4. '   ' → logprob: -13.375017166137695
    5. '[n' → logprob: -13.375017166137695
    6. 'n' → logprob: -15.375017166137695
    7. ' nj' → logprob: -15.500017166137695
    8. '(n' → logprob: -16.000017166137695
    9. 'adj' → logprob: -16.250017166137695
    10. 'nju' → logprob: -16.375017166137695

Token 2285: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17447908222675323
    2. '<|end|>' → logprob: -2.5494790077209473
    3. '+' → logprob: -3.4244790077209473
    4. ' +' → logprob: -4.049479007720947
    5. '                               ' → logprob: -4.299479007720947
    6. ')' → logprob: -5.174479007720947
    7. ']+' → logprob: -5.299479007720947
    8. '                           ' → logprob: -5.549479007720947
    9. '<|end|>' → logprob: -6.924479007720947
    10. ' ]' → logprob: -7.299479007720947

Token 2286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01902088150382042
    2. '                               ' → logprob: -5.019021034240723
    3. '                           ' → logprob: -5.394021034240723
    4. ' 
' → logprob: -6.144021034240723
    5. '                ' → logprob: -6.894021034240723
    6. '                                
' → logprob: -7.019021034240723
    7. '                            
' → logprob: -7.644021034240723
    8. '                        
' → logprob: -7.644021034240723
    9. '           ' → logprob: -8.019021034240723
    10. '                
' → logprob: -8.144021034240723

Token 2287: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038724884390830994
    2. 'if' → logprob: -3.413724899291992
    3. ' if' → logprob: -5.913724899291992
    4. '```' → logprob: -6.163724899291992
    5. '                   ' → logprob: -9.663724899291992
    6. '           ' → logprob: -9.663724899291992
    7. '
' → logprob: -9.788724899291992
    8. 'total' → logprob: -10.413724899291992
    9. '   ' → logprob: -10.663724899291992
    10. '       ' → logprob: -11.663724899291992

Token 2288: ' Si' (ID: 7832)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07909632474184036
    2. 'if' → logprob: -2.5790963172912598
    3. ' if' → logprob: -9.079096794128418
    4. '   ' → logprob: -9.954096794128418
    5. '           ' → logprob: -10.329096794128418
    6. '```' → logprob: -11.954096794128418
    7. '       ' → logprob: -12.829096794128418
    8. '                   ' → logprob: -12.954096794128418
    9. 'If' → logprob: -15.454096794128418
    10. '#' → logprob: -15.454096794128418

Token 2289: ' pas' (ID: 2173)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004078401252627373
    2. ' min' → logprob: -5.504078388214111
    3. '(min' → logprob: -19.754077911376953
    4. '	min' → logprob: -20.004077911376953
    5. 'max' → logprob: -20.754077911376953
    6. '               ' → logprob: -21.254077911376953
    7. '                   ' → logprob: -21.879077911376953
    8. '_min' → logprob: -22.254077911376953
    9. '[min' → logprob: -22.379077911376953
    10. '           ' → logprob: -22.879077911376953

Token 2290: ' d' (ID: 272)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20452985167503357
    2. ' min' → logprob: -1.704529881477356
    3. '-' → logprob: -7.204529762268066
    4. '(min' → logprob: -7.329529762268066
    5. 'inf' → logprob: -8.079529762268066
    6. '                   ' → logprob: -8.204529762268066
    7. '               ' → logprob: -8.204529762268066
    8. ' -' → logprob: -8.704529762268066
    9. '=' → logprob: -9.329529762268066
    10. 'dist' → logprob: -9.454529762268066

Token 2291: ''accès' (ID: 116356)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.7586519718170166
    2. 'min' → logprob: -1.0086519718170166
    3. ' min' → logprob: -2.0086519718170166
    4. '_dist' → logprob: -3.6336519718170166
    5. 'istance' → logprob: -6.3836517333984375
    6. 'inf' → logprob: -6.8836517333984375
    7. '(min' → logprob: -7.1336517333984375
    8. 'if' → logprob: -7.2586517333984375
    9. '_min' → logprob: -7.8836517333984375
    10. 'dist' → logprob: -8.008651733398438

Token 2292: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18736974895000458
    2. '                   ' → logprob: -3.0623698234558105
    3. 'à' → logprob: -3.0623698234558105
    4. '_to' → logprob: -3.3123698234558105
    5. 'to' → logprob: -3.9373698234558105
    6. ' à' → logprob: -5.0623698234558105
    7. '_possible' → logprob: -5.5623698234558105
    8. ' ==' → logprob: -5.6873698234558105
    9. 'possible' → logprob: -6.4373698234558105
    10. ' to' → logprob: -6.4373698234558105

Token 2293: ' impossible' (ID: 19786)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05275776982307434
    2. ' continue' → logprob: -3.677757740020752
    3. 'continue' → logprob: -4.302757740020752
    4. '               ' → logprob: -4.552757740020752
    5. '   ' → logprob: -6.427757740020752
    6. '                       ' → logprob: -8.05275821685791
    7. '	continue' → logprob: -10.17775821685791
    8. ' if' → logprob: -10.80275821685791
    9. 'if' → logprob: -10.92775821685791
    10. '           ' → logprob: -11.80275821685791

Token 2294: ' de' (ID: 334)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14538268744945526
    2. '                   ' → logprob: -2.0203826427459717
    3. ':' → logprob: -6.395382881164551
    4. '                       ' → logprob: -7.645382881164551
    5. ':
' → logprob: -8.64538288116455
    6. ' or' → logprob: -9.39538288116455
    7. ' if' → logprob: -9.39538288116455
    8. 'if' → logprob: -9.89538288116455
    9. '           ' → logprob: -10.14538288116455
    10. '   ' → logprob: -10.39538288116455

Token 2295: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.017723271623253822
    2. 'cut' → logprob: -4.642723083496094
    3. 'calcul' → logprob: -5.392723083496094
    4. 'contin' → logprob: -6.892723083496094
    5. 'faire' → logprob: -7.267723083496094
    6. ' couper' → logprob: -7.267723083496094
    7. '#' → logprob: -8.392723083496094
    8. 'atte' → logprob: -8.892723083496094
    9. '   ' → logprob: -9.267723083496094
    10. 'cum' → logprob: -9.642723083496094

Token 2296: ' ces' (ID: 10532)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04185343161225319
    2. '                   ' → logprob: -3.291853427886963
    3. ':' → logprob: -6.666853427886963
    4. '           ' → logprob: -7.166853427886963
    5. ':
' → logprob: -8.041853904724121
    6. '   ' → logprob: -8.166853904724121
    7. '                       ' → logprob: -8.541853904724121
    8. ',' → logprob: -8.666853904724121
    9. 'continue' → logprob: -9.041853904724121
    10. 'to' → logprob: -9.541853904724121

Token 2297: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.055867716670036316
    2. 'arb' → logprob: -2.9308676719665527
    3. 'ar' → logprob: -7.805867671966553
    4. ' arbre' → logprob: -8.555868148803711
    5. '#' → logprob: -9.805868148803711
    6. 'trees' → logprob: -9.805868148803711
    7. '   ' → logprob: -9.930868148803711
    8. '```' → logprob: -10.055868148803711
    9. ' arb' → logprob: -10.305868148803711
    10. '               ' → logprob: -10.305868148803711

Token 2298: '.' (ID: 13)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.088182732462883
    2. '                   ' → logprob: -2.5881826877593994
    3. ':' → logprob: -5.2131829261779785
    4. '                       ' → logprob: -6.0881829261779785
    5. ':
' → logprob: -6.9631829261779785
    6. ' or' → logprob: -8.21318244934082
    7. '                           ' → logprob: -9.33818244934082
    8. ' if' → logprob: -10.08818244934082
    9. '                               ' → logprob: -10.33818244934082
    10. 'if' → logprob: -10.58818244934082

Token 2299: ' Selon' (ID: 88731)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016682932619005442
    2. '           ' → logprob: -9.500166893005371
    3. 'if' → logprob: -10.375166893005371
    4. '                   ' → logprob: -10.500166893005371
    5. ' if' → logprob: -10.875166893005371
    6. '   ' → logprob: -11.625166893005371
    7. '       ' → logprob: -13.000166893005371
    8. '```' → logprob: -13.000166893005371
    9. '                       ' → logprob: -14.750166893005371
    10. '              ' → logprob: -15.875166893005371

Token 2300: ' l' (ID: 305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.034911658614873886
    2. ' min' → logprob: -3.409911632537842
    3. '               ' → logprob: -8.284912109375
    4. '#' → logprob: -8.534912109375
    5. 'dist' → logprob: -8.534912109375
    6. 'not' → logprob: -9.159912109375
    7. '(min' → logprob: -9.159912109375
    8. '           ' → logprob: -9.284912109375
    9. 'INF' → logprob: -9.534912109375
    10. ' dist' → logprob: -9.909912109375

Token 2301: ''' (ID: 6)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09133801609277725
    2. ' if' → logprob: -2.5913379192352295
    3. '               ' → logprob: -5.341338157653809
    4. '                   ' → logprob: -5.716338157653809
    5. 'min' → logprob: -6.716338157653809
    6. 'i' → logprob: -7.591338157653809
    7. ' min' → logprob: -7.841338157653809
    8. '                ' → logprob: -8.216338157653809
    9. ' not' → logprob: -8.341338157653809
    10. 'not' → logprob: -8.466338157653809

Token 2302: 'én' (ID: 3289)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.466685026884079
    2. 'if' → logprob: -1.7166850566864014
    3. 'continue' → logprob: -2.4666850566864014
    4. '#' → logprob: -2.8416850566864014
    5. 'elif' → logprob: -4.716684818267822
    6. '```' → logprob: -4.966684818267822
    7. 'raise' → logprob: -5.216684818267822
    8. 'raison' → logprob: -5.591684818267822
    9. 'import' → logprob: -5.716684818267822
    10. 'return' → logprob: -5.966684818267822

Token 2303: 'oncé' (ID: 59071)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26543593406677246
    2. 'oncé' → logprob: -2.8904359340667725
    3. 'assert' → logprob: -3.5154359340667725
    4. 'continue' → logprob: -3.5154359340667725
    5. 'else' → logprob: -3.7654359340667725
    6. 'on' → logprob: -3.7654359340667725
    7. 'elif' → logprob: -4.265436172485352
    8. 'instruction' → logprob: -4.640436172485352
    9. 'comment' → logprob: -5.015436172485352
    10. 'def' → logprob: -5.265436172485352

Token 2304: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07507931441068649
    2. ':' → logprob: -3.2000792026519775
    3. '                   ' → logprob: -3.8250792026519775
    4. ':
' → logprob: -5.700079441070557
    5. ' if' → logprob: -6.200079441070557
    6. '                       ' → logprob: -6.325079441070557
    7. 'if' → logprob: -6.950079441070557
    8. ',' → logprob: -7.450079441070557
    9. '<|end|>' → logprob: -8.325078964233398
    10. '```' → logprob: -8.700078964233398

Token 2305: ' la' (ID: 557)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02265247143805027
    2. 'if' → logprob: -4.147652626037598
    3. '               ' → logprob: -5.397652626037598
    4. '   ' → logprob: -7.272652626037598
    5. ' if' → logprob: -7.772652626037598
    6. 'continue' → logprob: -7.772652626037598
    7. '                       ' → logprob: -8.022652626037598
    8. ' continue' → logprob: -9.897652626037598
    9. '           ' → logprob: -10.272652626037598
    10. '#' → logprob: -10.522652626037598

Token 2306: ' solution' (ID: 7578)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6904355883598328
    2. 'if' → logprob: -1.3154356479644775
    3. 'break' → logprob: -1.8154356479644775
    4. '#' → logprob: -4.190435409545898
    5. ' return' → logprob: -4.440435409545898
    6. ' if' → logprob: -4.565435409545898
    7. 'continue' → logprob: -4.690435409545898
    8. '               ' → logprob: -5.190435409545898
    9. 'print' → logprob: -5.315435409545898
    10. '                   ' → logprob: -5.315435409545898

Token 2307: ' doit' (ID: 21822)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1781474351882935
    2. '                   ' → logprob: -1.6781474351882935
    3. ' =' → logprob: -1.8031474351882935
    4. '=' → logprob: -1.9281474351882935
    5. 'if' → logprob: -2.803147315979004
    6. 'continue' → logprob: -3.303147315979004
    7. '           ' → logprob: -3.553147315979004
    8. '```' → logprob: -4.178147315979004
    9. '                       ' → logprob: -4.678147315979004
    10. '+=' → logprob: -5.053147315979004

Token 2308: ' être' (ID: 9104)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.15168035030365
    2. 'return' → logprob: -1.27668035030365
    3. '=' → logprob: -1.65168035030365
    4. 'continue' → logprob: -2.1516804695129395
    5. '```' → logprob: -3.9016804695129395
    6. '               ' → logprob: -4.0266804695129395
    7. '+=' → logprob: -4.2766804695129395
    8. '                   ' → logprob: -4.4016804695129395
    9. ' =' → logprob: -4.6516804695129395
    10. '#' → logprob: -5.0266804695129395

Token 2309: ' trouv' (ID: 40254)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0077075352892279625
    2. ' -' → logprob: -5.632707595825195
    3. 'print' → logprob: -6.507707595825195
    4. '                   ' → logprob: -7.132707595825195
    5. '```' → logprob: -7.257707595825195
    6. '               ' → logprob: -7.632707595825195
    7. '   ' → logprob: -8.257707595825195
    8. '-print' → logprob: -8.757707595825195
    9. '           ' → logprob: -9.132707595825195
    10. '                       ' → logprob: -10.882707595825195

Token 2310: 'ée' (ID: 2894)
  Prédit: 'ie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.14795443415641785
    2. 'ir' → logprob: -2.3979544639587402
    3. 'e' → logprob: -3.8979544639587402
    4. 'ue' → logprob: -4.52295446395874
    5. 'er' → logprob: -5.27295446395874
    6. 'ée' → logprob: -5.52295446395874
    7. '   ' → logprob: -6.52295446395874
    8. '               ' → logprob: -6.64795446395874
    9. '                   ' → logprob: -6.77295446395874
    10. '       ' → logprob: -6.89795446395874

Token 2311: ',
' (ID: 412)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006130360532552004
    2. '                   ' → logprob: -5.631130218505859
    3. '                       ' → logprob: -6.881130218505859
    4. ':' → logprob: -8.13113021850586
    5. ':
' → logprob: -8.25613021850586
    6. '                           ' → logprob: -8.50613021850586
    7. '                        
' → logprob: -8.75613021850586
    8. ' or' → logprob: -9.00613021850586
    9. '           ' → logprob: -9.13113021850586
    10. '                               ' → logprob: -9.38113021850586

Token 2312: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018883032025769353
    2. '                   ' → logprob: -7.001888275146484
    3. '```' → logprob: -7.876888275146484
    4. '           ' → logprob: -8.626888275146484
    5. '                       ' → logprob: -8.626888275146484
    6. '#' → logprob: -9.626888275146484
    7. '                           ' → logprob: -10.001888275146484
    8. '                               ' → logprob: -10.251888275146484
    9. 'continue' → logprob: -10.376888275146484
    10. ' continue' → logprob: -10.626888275146484

Token 2313: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1110367476940155
    2. '                               ' → logprob: -2.986036777496338
    3. 'else' → logprob: -4.111036777496338
    4. '                   ' → logprob: -4.236036777496338
    5. '                       ' → logprob: -5.111036777496338
    6. '                           ' → logprob: -5.361036777496338
    7. '```' → logprob: -5.361036777496338
    8. 'continue' → logprob: -6.236036777496338
    9. '#' (adapté à ' #') → logprob: -6.611036777496338
    10. '           ' → logprob: -6.861036777496338

Token 2314: ' donc' (ID: 14206)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34962064027786255
    2. '#' → logprob: -1.4746205806732178
    3. 'continue' → logprob: -3.2246205806732178
    4. ' continue' → logprob: -4.599620819091797
    5. '```' → logprob: -5.099620819091797
    6. '                   ' → logprob: -5.474620819091797
    7. ' #' → logprob: -6.099620819091797
    8. '           ' → logprob: -7.099620819091797
    9. '                       ' → logprob: -7.224620819091797
    10. '                               ' → logprob: -7.349620819091797

Token 2315: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.562985360622406
    2. '               ' → logprob: -1.5629854202270508
    3. '                   ' → logprob: -2.187985420227051
    4. '#' → logprob: -2.812985420227051
    5. '                               ' → logprob: -3.562985420227051
    6. '                           ' → logprob: -4.812985420227051
    7. ' continue' → logprob: -5.437985420227051
    8. 'if' → logprob: -5.812985420227051
    9. '                       ' → logprob: -6.062985420227051
    10. 'pass' → logprob: -7.312985420227051

Token 2316: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14754454791545868
    2. ' continue' → logprob: -2.5225446224212646
    3. 'if' → logprob: -3.6475446224212646
    4. '                   ' → logprob: -4.2725443840026855
    5. '               ' → logprob: -4.6475443840026855
    6. '                       ' → logprob: -5.7725443840026855
    7. 'raise' → logprob: -6.7725443840026855
    8. ' if' → logprob: -7.0225443840026855
    9. '```' → logprob: -7.8975443840026855
    10. '           ' → logprob: -8.022544860839844

Token 2317: ' ign' (ID: 8769)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.007594441529363394
    2. 'print' → logprob: -5.882594585418701
    3. '```' → logprob: -6.507594585418701
    4. '                   ' → logprob: -6.632594585418701
    5. '               ' → logprob: -7.382594585418701
    6. ' continue' → logprob: -8.007594108581543
    7. '   ' → logprob: -8.632594108581543
    8. 'raise' → logprob: -8.757594108581543
    9. 'import' → logprob: -9.132594108581543
    10. '                       ' → logprob: -9.132594108581543

Token 2318: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.0005757896578870714
    2. 'rer' → logprob: -7.500576019287109
    3. 'n' → logprob: -11.75057601928711
    4. 'ner' → logprob: -12.62557601928711
    5. 'ore' → logprob: -13.00057601928711
    6. 'lor' → logprob: -13.62557601928711
    7. 'or' → logprob: -13.62557601928711
    8. 'orrer' → logprob: -13.75057601928711
    9. 'erer' → logprob: -14.12557601928711
    10. 'orera' → logprob: -14.12557601928711

Token 2319: ' ce' (ID: 2357)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00340228620916605
    2. '                   ' → logprob: -6.628402233123779
    3. '                           ' → logprob: -7.503402233123779
    4. '                               ' → logprob: -7.753402233123779
    5. '                       ' → logprob: -8.003402709960938
    6. ':' → logprob: -8.878402709960938
    7. '                        
' → logprob: -8.878402709960938
    8. '                
' → logprob: -9.253402709960938
    9. '           ' → logprob: -10.128402709960938
    10. ':
' → logprob: -10.253402709960938

Token 2320: ' cas' (ID: 2108)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.538955569267273
    2. 'continue' → logprob: -1.913955569267273
    3. '                   ' → logprob: -2.0389556884765625
    4. '           ' → logprob: -3.1639556884765625
    5. '   ' → logprob: -3.4139556884765625
    6. ' continue' → logprob: -3.6639556884765625
    7. '       ' → logprob: -5.0389556884765625
    8. 'else' → logprob: -5.1639556884765625
    9. '```' → logprob: -5.4139556884765625
    10. ' case' → logprob: -5.6639556884765625

Token 2321: '.
' (ID: 558)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012889951467514038
    2. '                
' → logprob: -5.262889862060547
    3. '
' → logprob: -6.137889862060547
    4. '                        
' → logprob: -6.887889862060547
    5. '                   ' → logprob: -7.262889862060547
    6. ':' → logprob: -7.387889862060547
    7. '<|end|>' → logprob: -7.387889862060547
    8. ':
' → logprob: -7.762889862060547
    9. '           ' → logprob: -8.012889862060547
    10. '    
' → logprob: -8.762889862060547

Token 2322: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018006093159783632
    2. '                   ' → logprob: -9.6251802444458
    3. '           ' → logprob: -10.0001802444458
    4. '```' → logprob: -11.1251802444458
    5. '                
' → logprob: -11.2501802444458
    6. '                       ' → logprob: -11.6251802444458
    7. '                           ' → logprob: -11.6251802444458
    8. '
' → logprob: -11.8751802444458
    9. '                               ' → logprob: -12.1251802444458
    10. ' if' → logprob: -13.0001802444458

Token 2323: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016611411410849541
    2. 'if' → logprob: -10.000165939331055
    3. '
' → logprob: -10.250165939331055
    4. '                   ' → logprob: -10.250165939331055
    5. '```' → logprob: -10.750165939331055
    6. ' if' → logprob: -11.125165939331055
    7. 'total' → logprob: -12.125165939331055
    8. '           ' → logprob: -12.750165939331055
    9. '                
' → logprob: -13.125165939331055
    10. '   ' → logprob: -13.500165939331055

Token 2324: ' Sinon' (ID: 154924)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.908022285439074e-05
    2. 'if' → logprob: -10.750059127807617
    3. '                   ' → logprob: -11.125059127807617
    4. 'total' → logprob: -11.250059127807617
    5. '   ' → logprob: -12.500059127807617
    6. '
' → logprob: -13.250059127807617
    7. ' if' → logprob: -13.625059127807617
    8. '           ' → logprob: -14.125059127807617
    9. '                
' → logprob: -14.250059127807617
    10. '```' → logprob: -14.375059127807617

Token 2325: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5621333718299866
    2. '                   ' → logprob: -0.9371333718299866
    3. 'total' → logprob: -4.062133312225342
    4. ' total' → logprob: -4.437133312225342
    5. ' if' → logprob: -5.812133312225342
    6. '   ' → logprob: -6.187133312225342
    7. 'if' → logprob: -6.687133312225342
    8. '
' → logprob: -7.437133312225342
    9. '                       ' → logprob: -7.437133312225342
    10. '           ' → logprob: -7.937133312225342

Token 2326: ' ajoute' (ID: 91611)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4428204596042633
    2. '               ' → logprob: -1.692820429801941
    3. '                   ' → logprob: -2.3178205490112305
    4. ' total' → logprob: -2.9428205490112305
    5. '                       ' → logprob: -5.3178205490112305
    6. '                               ' → logprob: -5.5678205490112305
    7. '                           ' → logprob: -5.5678205490112305
    8. '           ' → logprob: -6.1928205490112305
    9. '```' → logprob: -6.1928205490112305
    10. ' +=' → logprob: -6.3178205490112305

Token 2327: ' le' (ID: 505)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6835603713989258
    2. 'total' → logprob: -0.9335603713989258
    3. '               ' → logprob: -3.308560371398926
    4. ' A' → logprob: -3.683560371398926
    5. ' (' → logprob: -4.433560371398926
    6. 'A' → logprob: -4.433560371398926
    7. '(total' → logprob: -4.933560371398926
    8. '                   ' → logprob: -5.183560371398926
    9. '   ' → logprob: -7.183560371398926
    10. '(A' → logprob: -7.183560371398926

Token 2328: ' temps' (ID: 11160)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0014223761390894651
    2. 'A' → logprob: -7.00142240524292
    3. ' total' → logprob: -8.001421928405762
    4. '               ' → logprob: -9.751421928405762
    5. 'time' → logprob: -10.126421928405762
    6. '   ' → logprob: -10.626421928405762
    7. '                   ' → logprob: -11.251421928405762
    8. 'number' → logprob: -11.376421928405762
    9. 'nombre' → logprob: -11.501421928405762
    10. ' A' → logprob: -12.626421928405762

Token 2329: ' nécessaire' (ID: 43098)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06517188251018524
    2. '                   ' → logprob: -3.065171957015991
    3. ' =' → logprob: -4.440171718597412
    4. ' +=' → logprob: -5.690171718597412
    5. '=' → logprob: -7.190171718597412
    6. '                       ' → logprob: -8.81517219543457
    7. '+=' → logprob: -9.31517219543457
    8. '           ' → logprob: -9.44017219543457
    9. 'total' → logprob: -9.94017219543457
    10. '   ' → logprob: -10.19017219543457

Token 2330: ' pour' (ID: 1930)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006870594806969166
    2. '                   ' → logprob: -5.381870746612549
    3. 'total' → logprob: -6.756870746612549
    4. ' =' → logprob: -7.756870746612549
    5. '(total' → logprob: -8.13187026977539
    6. ' total' → logprob: -8.25687026977539
    7. '                       ' → logprob: -10.00687026977539
    8. '                               ' → logprob: -11.38187026977539
    9. ' +=' → logprob: -11.88187026977539
    10. '                           ' → logprob: -12.00687026977539

Token 2331: ' couper' (ID: 135212)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7106587886810303
    2. 'cou' → logprob: -0.7106587886810303
    3. 'cut' → logprob: -4.960659027099609
    4. ' total' → logprob: -5.085659027099609
    5. ' couper' → logprob: -6.335659027099609
    6. '#' → logprob: -7.085659027099609
    7. '   ' → logprob: -8.08565902709961
    8. 'c' → logprob: -8.08565902709961
    9. '               ' → logprob: -8.58565902709961
    10. '           ' → logprob: -9.33565902709961

Token 2332: ' tous' (ID: 10688)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.38822996616363525
    2. ' A' → logprob: -1.6382299661636353
    3. '               ' → logprob: -2.5132298469543457
    4. 'total' → logprob: -3.8882298469543457
    5. '                   ' → logprob: -4.638229846954346
    6. '           ' → logprob: -5.138229846954346
    7. ' total' → logprob: -5.638229846954346
    8. '(A' → logprob: -6.013229846954346
    9. ' (' → logprob: -6.388229846954346
    10. '```' → logprob: -6.638229846954346

Token 2333: ' les' (ID: 1341)
  Prédit: ' ces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ces' → logprob: -0.9583779573440552
    2. ' les' → logprob: -1.2083779573440552
    3. 'les' → logprob: -1.4583779573440552
    4. '                   ' → logprob: -3.4583778381347656
    5. 'A' → logprob: -4.208377838134766
    6. 'ces' → logprob: -4.333377838134766
    7. '               ' → logprob: -4.333377838134766
    8. ' A' → logprob: -4.833377838134766
    9. '                       ' → logprob: -6.833377838134766
    10. '(A' → logprob: -7.083377838134766

Token 2334: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.006521033588796854
    2. ' arbres' → logprob: -5.506521224975586
    3. '               ' → logprob: -7.131521224975586
    4. 'ar' → logprob: -7.631521224975586
    5. '   ' → logprob: -8.006521224975586
    6. 'A' → logprob: -8.131521224975586
    7. '                   ' → logprob: -8.631521224975586
    8. 'trees' → logprob: -8.881521224975586
    9. '       ' → logprob: -9.756521224975586
    10. '           ' → logprob: -9.881521224975586

Token 2335: ' sur' (ID: 1512)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009626734536141157
    2. '                   ' → logprob: -7.000962734222412
    3. '   ' → logprob: -11.625962257385254
    4. '           ' → logprob: -11.750962257385254
    5. '                       ' → logprob: -11.875962257385254
    6. ' and' → logprob: -12.250962257385254
    7. '                           ' → logprob: -12.375962257385254
    8. 'total' → logprob: -12.625962257385254
    9. '              ' → logprob: -13.000962257385254
    10. '                               ' → logprob: -13.125962257385254

Token 2336: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5164859890937805
    2. ' cette' → logprob: -1.7664859294891357
    3. '                   ' → logprob: -2.3914859294891357
    4. 'i' → logprob: -2.7664859294891357
    5. ' la' → logprob: -3.2664859294891357
    6. '(i' → logprob: -4.266486167907715
    7. '               ' → logprob: -4.266486167907715
    8. '   ' → logprob: -6.016486167907715
    9. 'l' → logprob: -6.141486167907715
    10. '           ' → logprob: -6.266486167907715

Token 2337: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.2813173532485962
    2. 'i' → logprob: -2.2813172340393066
    3. ' case' → logprob: -2.6563172340393066
    4. '[i' → logprob: -3.6563172340393066
    5. 'cell' → logprob: -4.156317234039307
    6. '(i' → logprob: -4.656317234039307
    7. '               ' → logprob: -4.906317234039307
    8. '```' → logprob: -5.656317234039307
    9. '                   ' → logprob: -5.781317234039307
    10. '   ' → logprob: -6.406317234039307

Token 2338: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013778526335954666
    2. 'total' → logprob: -7.376378059387207
    3. ' total' → logprob: -7.626378059387207
    4. '                   ' → logprob: -8.626378059387207
    5. '(total' → logprob: -10.876378059387207
    6. '
' → logprob: -11.626378059387207
    7. '           ' → logprob: -12.001378059387207
    8. '                               ' → logprob: -12.126378059387207
    9. '                       ' → logprob: -12.126378059387207
    10. '                           ' → logprob: -12.126378059387207

Token 2339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00371160008944571
    2. ' total' → logprob: -6.003711700439453
    3. 'total' → logprob: -7.253711700439453
    4. '                   ' → logprob: -7.753711700439453
    5. '                               ' → logprob: -10.753711700439453
    6. '
' → logprob: -10.878711700439453
    7. '                       ' → logprob: -11.253711700439453
    8. '```' → logprob: -11.253711700439453
    9. '                           ' → logprob: -11.878711700439453
    10. '           ' → logprob: -12.128711700439453

Token 2340: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7461743950843811
    2. 'total' → logprob: -0.7461743950843811
    3. ' total' → logprob: -2.9961743354797363
    4. '                   ' → logprob: -6.496174335479736
    5. '   ' → logprob: -9.621174812316895
    6. 'if' → logprob: -9.746174812316895
    7. ' if' → logprob: -11.371174812316895
    8. '           ' → logprob: -12.121174812316895
    9. 'time' → logprob: -12.371174812316895
    10. '                       ' → logprob: -12.746174812316895

Token 2341: ' temps' (ID: 11160)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.414553701877594
    2. 'total' → logprob: -1.4145536422729492
    3. ' total' → logprob: -2.414553642272949
    4. '                   ' → logprob: -5.039553642272949
    5. '   ' → logprob: -8.16455364227295
    6. '           ' → logprob: -9.91455364227295
    7. '                       ' → logprob: -10.03955364227295
    8. '                               ' → logprob: -11.16455364227295
    9. '                           ' → logprob: -11.53955364227295
    10. 'if' → logprob: -11.66455364227295

Token 2342: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13608527183532715
    2. '+=' → logprob: -3.011085271835327
    3. ' =' → logprob: -3.136085271835327
    4. ' +=' → logprob: -3.386085271835327
    5. '                   ' → logprob: -8.136085510253906
    6. '               ' → logprob: -8.386085510253906
    7. '   ' → logprob: -9.136085510253906
    8. '           ' → logprob: -9.886085510253906
    9. '+=(' → logprob: -11.761085510253906
    10. '                       ' → logprob: -12.636085510253906

Token 2343: ' nombre' (ID: 9733)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0010086346883326769
    2. ' A' → logprob: -7.0010085105896
    3. '               ' → logprob: -9.626008987426758
    4. '                   ' → logprob: -11.251008987426758
    5. '   ' → logprob: -11.376008987426758
    6. '           ' → logprob: -12.001008987426758
    7. '                       ' → logprob: -16.126008987426758
    8. '       ' → logprob: -16.626008987426758
    9. '  ' → logprob: -16.751008987426758
    10. '              ' → logprob: -16.751008987426758

Token 2344: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0007980733062140644
    2. '_A' → logprob: -8.375798225402832
    3. 'A' → logprob: -8.500798225402832
    4. '_ar' → logprob: -9.250798225402832
    5. '[A' → logprob: -9.875798225402832
    6. '           ' → logprob: -9.875798225402832
    7. '               ' → logprob: -10.000798225402832
    8. '_t' → logprob: -10.125798225402832
    9. 'Ar' → logprob: -10.625798225402832
    10. '(A' → logprob: -12.250798225402832

Token 2345: 'arb' (ID: 36740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001819408847950399
    2. 'arb' → logprob: -6.376819610595703
    3. '_ar' → logprob: -10.126819610595703
    4. 'A' → logprob: -10.126819610595703
    5. 'ar' → logprob: -11.501819610595703
    6. 'Ar' → logprob: -11.501819610595703
    7. ' arbres' → logprob: -12.126819610595703
    8. 'trees' → logprob: -12.251819610595703
    9. '_time' → logprob: -14.251819610595703
    10. '   ' → logprob: -14.751819610595703

Token 2346: 'res' (ID: 430)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.36676087975502014
    2. 'res' → logprob: -1.4917608499526978
    3. '*' → logprob: -3.6167609691619873
    4. 's' → logprob: -3.7417609691619873
    5. '_' → logprob: -3.8667609691619873
    6. 'bres' → logprob: -5.866760730743408
    7. '_res' → logprob: -6.616760730743408
    8. 'e' → logprob: -6.866760730743408
    9. ' *' → logprob: -7.491760730743408
    10. '   ' → logprob: -7.491760730743408

Token 2347: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005406761541962624
    2. '*' → logprob: -5.255406856536865
    3. '*(' → logprob: -9.380406379699707
    4. '[i' → logprob: -9.505406379699707
    5. '               ' → logprob: -12.505406379699707
    6. '   ' → logprob: -12.755406379699707
    7. '```' → logprob: -13.380406379699707
    8. '           ' → logprob: -13.755406379699707
    9. '*i' → logprob: -14.005406379699707
    10. ')' → logprob: -14.130406379699707

Token 2348: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029985934495925903
    2. ' (' → logprob: -3.5299859046936035
    3. '((' → logprob: -8.404986381530762
    4. ' ((' → logprob: -11.529986381530762
    5. '(total' → logprob: -13.904986381530762
    6. '`' → logprob: -14.779986381530762
    7. '(min' → logprob: -15.279986381530762
    8. '```' → logprob: -15.654986381530762
    9. '   ' → logprob: -16.279985427856445
    10. ' ' → logprob: -16.904985427856445

Token 2349: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16071940958499908
    2. '(' → logprob: -1.910719394683838
    3. ' (' → logprob: -8.160719871520996
    4. ' ' → logprob: -8.535719871520996
    5. '   ' → logprob: -12.410719871520996
    6. '               ' → logprob: -12.910719871520996
    7. '                   ' → logprob: -13.660719871520996
    8. '           ' → logprob: -14.160719871520996
    9. ')' → logprob: -14.410719871520996
    10. '(min' → logprob: -14.410719871520996

Token 2350: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12692831456661224
    2. ' *' → logprob: -2.1269283294677734
    3. ' ' → logprob: -16.501928329467773
    4. '**' → logprob: -16.626928329467773
    5. '*
' → logprob: -17.876928329467773
    6. '*object' → logprob: -17.876928329467773
    7. '*(' → logprob: -18.501928329467773
    8. '   ' → logprob: -18.626928329467773
    9. '*out' → logprob: -18.626928329467773
    10. ' ' → logprob: -18.751928329467773

Token 2351: 'distance' (ID: 40614)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -4.5491004129871726e-05
    2. ' min' → logprob: -10.000045776367188
    3. '(min' → logprob: -16.875045776367188
    4. '```' → logprob: -18.125045776367188
    5. '
' → logprob: -19.500045776367188
    6. '_min' → logprob: -19.875045776367188
    7. '	min' → logprob: -20.250045776367188
    8. 'dist' → logprob: -20.375045776367188
    9. 'max' → logprob: -21.625045776367188
    10. '`' → logprob: -22.125045776367188

Token 2352: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.420743465423584
    2. ' +' → logprob: -1.170743465423584
    3. '_from' → logprob: -3.795743465423584
    4. '_to' → logprob: -5.795743465423584
    5. '               ' → logprob: -5.920743465423584
    6. '*' → logprob: -6.295743465423584
    7. '_' → logprob: -7.545743465423584
    8. '[min' → logprob: -7.795743465423584
    9. '```' → logprob: -8.045743942260742
    10. '   ' → logprob: -8.045743942260742

Token 2353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006272526225075126
    2. ' ' → logprob: -7.375627040863037
    3. ')' → logprob: -14.375627517700195
    4. '```' → logprob: -16.500627517700195
    5. '   ' → logprob: -17.125627517700195
    6. '`' → logprob: -18.375627517700195
    7. '+' → logprob: -18.750627517700195
    8. ' ' → logprob: -19.250627517700195
    9. ' )' → logprob: -19.250627517700195
    10. ' +' → logprob: -19.250627517700195

Token 2354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '                   ' → logprob: -18.750001907348633
    6. '                               ' → logprob: -19.125001907348633
    7. '
' → logprob: -19.375001907348633
    8. '               ' → logprob: -20.250001907348633
    9. '                           ' → logprob: -21.250001907348633
    10. '                       ' → logprob: -21.250001907348633

Token 2355: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10176505893468857
    2. ')
' → logprob: -2.4767651557922363
    3. '               ' → logprob: -4.476765155792236
    4. '                   ' → logprob: -8.601764678955078
    5. ' )' → logprob: -8.601764678955078
    6. ')
' → logprob: -8.601764678955078
    7. '           ' → logprob: -8.726764678955078
    8. '   ' → logprob: -9.101764678955078
    9. '+' → logprob: -9.351764678955078
    10. '))' → logprob: -9.476764678955078

Token 2356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013015457661822438
    2. ' total' → logprob: -6.8763017654418945
    3. 'total' → logprob: -9.001301765441895
    4. '                   ' → logprob: -9.376301765441895
    5. '           ' → logprob: -10.876301765441895
    6. '                       ' → logprob: -11.751301765441895
    7. '                
' → logprob: -12.001301765441895
    8. '(total' → logprob: -12.001301765441895
    9. '                           ' → logprob: -12.126301765441895
    10. '
' → logprob: -12.501301765441895

Token 2357: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6383651494979858
    2. '               ' → logprob: -1.1383651494979858
    3. ' total' → logprob: -1.8883651494979858
    4. '                   ' → logprob: -9.263364791870117
    5. '   ' → logprob: -9.763364791870117
    6. 'time' → logprob: -11.263364791870117
    7. '           ' → logprob: -11.888364791870117
    8. 'if' (adapté à ' if') → logprob: -13.013364791870117
    9. ' time' → logprob: -13.013364791870117
    10. '       ' → logprob: -13.763364791870117

Token 2358: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3871995508670807
    2. ' min' → logprob: -1.1371995210647583
    3. '               ' → logprob: -8.887199401855469
    4. 'A' → logprob: -9.387199401855469
    5. '                   ' → logprob: -10.137199401855469
    6. ' A' → logprob: -10.887199401855469
    7. '   ' → logprob: -11.512199401855469
    8. '           ' → logprob: -11.512199401855469
    9. 'dist' → logprob: -11.637199401855469
    10. ' dist' → logprob: -12.512199401855469

Token 2359: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.7994282795116305e-05
    2. 'dist' → logprob: -10.12504768371582
    3. '_distance' → logprob: -12.62504768371582
    4. '_to' → logprob: -13.37504768371582
    5. '               ' → logprob: -14.12504768371582
    6. 'Dist' → logprob: -14.25004768371582
    7. '_DIST' → logprob: -14.50004768371582
    8. '```' → logprob: -14.87504768371582
    9. '	dist' → logprob: -15.62504768371582
    10. '_' → logprob: -15.75004768371582

Token 2360: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -5.991464786347933e-05
    2. '               ' → logprob: -10.250060081481934
    3. '                   ' → logprob: -12.000060081481934
    4. '>' → logprob: -12.375060081481934
    5. '   ' → logprob: -13.000060081481934
    6. '```' → logprob: -13.250060081481934
    7. '[' → logprob: -13.500060081481934
    8. '_TO' → logprob: -13.750060081481934
    9. 'To' → logprob: -13.875060081481934
    10. '<' → logprob: -14.375060081481934

Token 2361: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.03811435401439667
    2. '_to' → logprob: -3.538114309310913
    3. 'adj' → logprob: -5.163114547729492
    4. '_ad' → logprob: -6.038114547729492
    5. 'to' → logprob: -9.663114547729492
    6. '>' → logprob: -9.788114547729492
    7. '_access' → logprob: -10.663114547729492
    8. 'min' → logprob: -10.788114547729492
    9. 'Adjacent' → logprob: -11.163114547729492
    10. '=' → logprob: -11.913114547729492

Token 2362: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.0012195244198665023
    2. 'ac' → logprob: -6.751219749450684
    3. '_to' → logprob: -10.251219749450684
    4. 'acency' → logprob: -13.001219749450684
    5. '   ' → logprob: -13.626219749450684
    6. 'cent' → logprob: -13.751219749450684
    7. '_ac' → logprob: -14.001219749450684
    8. '=' → logprob: -14.126219749450684
    9. 'aced' → logprob: -14.126219749450684
    10. 'acet' → logprob: -14.126219749450684

Token 2363: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.603881299495697
    2. '!=' → logprob: -0.978881299495697
    3. '<' → logprob: -2.853881359100342
    4. '!=-' → logprob: -4.603881359100342
    5. ' <' → logprob: -5.228881359100342
    6. '<int' → logprob: -6.103881359100342
    7. '<=' → logprob: -7.103881359100342
    8. '   ' → logprob: -7.478881359100342
    9. ' <=' → logprob: -9.103880882263184
    10. '<>' → logprob: -9.228880882263184

Token 2364: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.3902033970225602e-05
    2. ' INF' → logprob: -11.750014305114746
    3. '   ' → logprob: -12.625014305114746
    4. 'IN' → logprob: -14.125014305114746
    5. 'inf' → logprob: -14.500014305114746
    6. '_INF' → logprob: -14.500014305114746
    7. 'sys' → logprob: -14.625014305114746
    8. '-INF' → logprob: -15.500014305114746
    9. 'float' → logprob: -15.625014305114746
    10. '10' → logprob: -17.12501335144043

Token 2365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12782618403434753
    2. ':
' → logprob: -3.25282621383667
    3. '                   ' → logprob: -3.50282621383667
    4. '               ' → logprob: -3.62782621383667
    5. ' ==' → logprob: -4.87782621383667
    6. '                           ' → logprob: -5.25282621383667
    7. '                               ' → logprob: -5.37782621383667
    8. '                       ' → logprob: -5.50282621383667
    9. '==' → logprob: -6.50282621383667
    10. '           ' → logprob: -7.87782621383667

Token 2366: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03814959153532982
    2. '               ' → logprob: -4.038149356842041
    3. '                       ' → logprob: -4.663149356842041
    4. 'continue' → logprob: -4.663149356842041
    5. ' continue' → logprob: -7.163149356842041
    6. '                               ' → logprob: -9.5381498336792
    7. '                           ' → logprob: -10.9131498336792
    8. '   ' → logprob: -11.1631498336792
    9. '
' → logprob: -11.6631498336792
    10. '                        
' → logprob: -12.2881498336792

Token 2367: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1048862561583519
    2. '                   ' → logprob: -2.604886293411255
    3. 'return' → logprob: -4.104886054992676
    4. ' continue' → logprob: -5.104886054992676
    5. '                       ' → logprob: -6.354886054992676
    6. '               ' → logprob: -7.104886054992676
    7. '```' → logprob: -8.104886054992676
    8. '       ' → logprob: -8.979886054992676
    9. '   ' → logprob: -9.979886054992676
    10. ' return' → logprob: -10.104886054992676

Token 2368: ' Impossible' (ID: 136939)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12719057500362396
    2. 'print' → logprob: -2.377190589904785
    3. 'return' → logprob: -3.877190589904785
    4. '                   ' → logprob: -5.502190589904785
    5. 'total' → logprob: -7.127190589904785
    6. '   ' → logprob: -7.877190589904785
    7. '               ' → logprob: -8.127190589904785
    8. '       ' → logprob: -9.002190589904785
    9. '#' → logprob: -9.502190589904785
    10. '           ' → logprob: -9.502190589904785

Token 2369: ' d' (ID: 272)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.25289416313171387
    2. '                       ' → logprob: -2.752894163131714
    3. ':
' → logprob: -2.752894163131714
    4. ':' → logprob: -3.002894163131714
    5. '               ' → logprob: -3.127894163131714
    6. 'return' → logprob: -7.377894401550293
    7. ':return' → logprob: -7.627894401550293
    8. '):
' → logprob: -8.877894401550293
    9. 'continue' → logprob: -9.002894401550293
    10. 'to' → logprob: -9.127894401550293

Token 2370: ''acc' (ID: 46331)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1018612384796143
    2. 'cou' → logprob: -1.7268612384796143
    3. 'cut' → logprob: -1.7268612384796143
    4. 'print' → logprob: -1.9768612384796143
    5. ' couper' → logprob: -2.4768612384796143
    6. 'contin' → logprob: -3.2268612384796143
    7. ' continuer' → logprob: -4.976861000061035
    8. '   ' → logprob: -4.976861000061035
    9. ' continue' → logprob: -4.976861000061035
    10. '       ' → logprob: -5.351861000061035

Token 2371: 'éder' (ID: 56640)
  Prédit: 'éder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éder' → logprob: -0.0654376670718193
    2. 'eder' → logprob: -2.9404375553131104
    3. 'è' → logprob: -4.9404377937316895
    4. 'es' → logprob: -7.1904377937316895
    5. 'ès' → logprob: -7.5654377937316895
    6. '
' → logprob: -7.9404377937316895
    7. 'e' → logprob: -8.065437316894531
    8. '{' → logprob: -8.440437316894531
    9. '\' → logprob: -8.565437316894531
    10. '#' → logprob: -8.940437316894531

Token 2372: ' à' (ID: 1221)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07840736955404282
    2. '                       ' → logprob: -2.8284072875976562
    3. ' à' → logprob: -5.828407287597656
    4. '               ' → logprob: -5.828407287597656
    5. ':' → logprob: -6.328407287597656
    6. ' to' → logprob: -6.328407287597656
    7. ':
' → logprob: -6.328407287597656
    8. '                           ' → logprob: -6.328407287597656
    9. 'à' → logprob: -6.703407287597656
    10. 'to' → logprob: -7.953407287597656

Token 2373: ' cette' (ID: 7696)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.33403483033180237
    2. 'ces' → logprob: -1.95903480052948
    3. 'contin' → logprob: -2.3340349197387695
    4. 'c' → logprob: -3.4590349197387695
    5. 'continue' → logprob: -5.0840349197387695
    6. 'cet' → logprob: -5.9590349197387695
    7. 'cut' → logprob: -6.7090349197387695
    8. 'la' → logprob: -6.8340349197387695
    9. '#' → logprob: -7.3340349197387695
    10. '```' → logprob: -7.9590349197387695

Token 2374: ' parc' (ID: 22138)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.1422789990901947
    2. ' case' → logprob: -2.1422789096832275
    3. '               ' → logprob: -5.642279148101807
    4. '#' → logprob: -6.017279148101807
    5. 'cell' → logprob: -6.392279148101807
    6. '                   ' → logprob: -6.642279148101807
    7. '
' → logprob: -7.142279148101807
    8. 'ar' → logprob: -7.267279148101807
    9. 'position' → logprob: -7.392279148101807
    10. '           ' → logprob: -7.392279148101807

Token 2375: 'elle' (ID: 3486)
  Prédit: 'ès'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ès' → logprob: -0.0018009616760537028
    2. 'es' → logprob: -6.376801013946533
    3. 'è' → logprob: -9.876800537109375
    4. 'ess' → logprob: -11.251800537109375
    5. 'e' → logprob: -11.501800537109375
    6. 'és' → logprob: -12.001800537109375
    7. '   ' → logprob: -12.126800537109375
    8. 'èse' → logprob: -12.501800537109375
    9. '               ' → logprob: -12.626800537109375
    10. 'é' → logprob: -13.626800537109375

Token 2376: ' pour' (ID: 1930)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08275929093360901
    2. '                       ' → logprob: -3.707759380340576
    3. 'continue' → logprob: -3.957759380340576
    4. ' continue' → logprob: -3.957759380340576
    5. '               ' → logprob: -4.832759380340576
    6. ':
' → logprob: -5.332759380340576
    7. ':' → logprob: -5.582759380340576
    8. ' or' → logprob: -10.457758903503418
    9. '	continue' → logprob: -10.832758903503418
    10. '                           ' → logprob: -11.082758903503418

Token 2377: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.012913607060909271
    2. ' couper' → logprob: -4.512913703918457
    3. 'cut' → logprob: -6.512913703918457
    4. '   ' → logprob: -8.637913703918457
    5. ' cou' → logprob: -10.137913703918457
    6. 'c' → logprob: -10.637913703918457
    7. '#' → logprob: -10.762913703918457
    8. '       ' → logprob: -10.887913703918457
    9. '
' → logprob: -11.012913703918457
    10. '           ' → logprob: -11.262913703918457

Token 2378: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3833390474319458
    2. 'continue' → logprob: -1.2583390474319458
    3. 'return' → logprob: -4.258338928222656
    4. '               ' → logprob: -4.383338928222656
    5. '                       ' → logprob: -5.383338928222656
    6. '   ' → logprob: -7.508338928222656
    7. '       ' → logprob: -7.883338928222656
    8. '           ' → logprob: -8.133338928222656
    9. ' continue' → logprob: -8.133338928222656
    10. 'contin' → logprob: -8.133338928222656

Token 2379: ' mais' (ID: 2899)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.031585436314344406
    2. 'continue' → logprob: -3.781585454940796
    3. ' continue' → logprob: -5.281585216522217
    4. '                       ' → logprob: -5.781585216522217
    5. '               ' → logprob: -9.156585693359375
    6. '       ' → logprob: -11.781585693359375
    7. '   ' → logprob: -11.906585693359375
    8. 'return' → logprob: -12.031585693359375
    9. '           ' → logprob: -12.156585693359375
    10. '	continue' → logprob: -13.781585693359375

Token 2380: ' problème' (ID: 35630)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7443506121635437
    2. 'continue' → logprob: -0.7443506121635437
    3. ' continue' → logprob: -3.6193506717681885
    4. '                       ' → logprob: -4.244350433349609
    5. '```' → logprob: -5.869350433349609
    6. '#' → logprob: -5.994350433349609
    7. 'return' → logprob: -6.619350433349609
    8. '               ' → logprob: -7.244350433349609
    9. '   ' → logprob: -7.744350433349609
    10. '	continue' → logprob: -8.36935043334961

Token 2381: ' dit' (ID: 4758)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04543529078364372
    2. ' continue' → logprob: -3.9204351902008057
    3. '               ' → logprob: -4.920435428619385
    4. 'continue' → logprob: -4.920435428619385
    5. '                       ' → logprob: -5.295435428619385
    6. ':' → logprob: -5.545435428619385
    7. ':
' → logprob: -7.920435428619385
    8. ' continues' → logprob: -8.545434951782227
    9. 'raise' → logprob: -9.420434951782227
    10. '	continue' → logprob: -9.670434951782227

Token 2382: ' que' (ID: 661)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06844469159841537
    2. 'continue' → logprob: -3.6934447288513184
    3. 'pass' → logprob: -4.568444728851318
    4. '               ' → logprob: -5.193444728851318
    5. '                       ' → logprob: -5.193444728851318
    6. 'return' → logprob: -5.193444728851318
    7. '   ' → logprob: -5.443444728851318
    8. '#' → logprob: -5.568444728851318
    9. '```' → logprob: -6.568444728851318
    10. '
' → logprob: -6.943444728851318

Token 2383: ' (' (ID: 350)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09848164767026901
    2. '                   ' → logprob: -2.5984816551208496
    3. ' continue' → logprob: -4.72348165512085
    4. 'pass' → logprob: -6.09848165512085
    5. '                       ' → logprob: -6.34848165512085
    6. 'return' → logprob: -6.47348165512085
    7. '```' → logprob: -6.47348165512085
    8. '#' → logprob: -6.59848165512085
    9. '   ' → logprob: -6.84848165512085
    10. '               ' → logprob: -7.47348165512085

Token 2384: 'H' (ID: 39)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5408565402030945
    2. 'continue' → logprob: -1.1658565998077393
    3. 'min' → logprob: -3.2908565998077393
    4. '#' → logprob: -4.04085636138916
    5. ' continue' → logprob: -4.54085636138916
    6. ')' → logprob: -4.91585636138916
    7. '                       ' → logprob: -5.54085636138916
    8. 'False' → logprob: -5.54085636138916
    9. 'True' → logprob: -5.66585636138916
    10. '
' → logprob: -5.79085636138916

Token 2385: ',W' (ID: 117252)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3253050148487091
    2. ',' → logprob: -2.5753049850463867
    3. ')' → logprob: -2.7003049850463867
    4. ' -' → logprob: -3.5753049850463867
    5. '==' → logprob: -3.7003049850463867
    6. '   ' → logprob: -3.7003049850463867
    7. '>' → logprob: -4.450304985046387
    8. ' ==' → logprob: -4.575304985046387
    9. ' >' → logprob: -5.325304985046387
    10. '           ' → logprob: -5.700304985046387

Token 2386: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032592207193374634
    2. '-' → logprob: -4.282592296600342
    3. '):
' → logprob: -4.782592296600342
    4. ')==' → logprob: -5.657592296600342
    5. ')!=' → logprob: -6.532592296600342
    6. '```' → logprob: -6.532592296600342
    7. ')
' → logprob: -7.157592296600342
    8. '==' → logprob: -7.407592296600342
    9. ']' → logprob: -7.907592296600342
    10. ' -' → logprob: -8.657591819763184

Token 2387: ' �' (ID: 42308)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9230329394340515
    2. '                   ' → logprob: -1.6730329990386963
    3. ' !=' → logprob: -1.7980329990386963
    4. '               ' → logprob: -2.5480329990386963
    5. '==' → logprob: -2.7980329990386963
    6. '                       ' → logprob: -3.9230329990386963
    7. '!=' → logprob: -4.423032760620117
    8. '```' → logprob: -4.423032760620117
    9. '           ' → logprob: -4.548032760620117
    10. ' continue' → logprob: -4.548032760620117

Token 2388: '�' (ID: 254)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.27632781863212585
    2. '!=' → logprob: -1.9013278484344482
    3. ' ==' → logprob: -3.4013278484344482
    4. '==' → logprob: -4.276327610015869
    5. ')' → logprob: -4.401327610015869
    6. '                   ' → logprob: -4.526327610015869
    7. '=' → logprob: -5.026327610015869
    8. '```' → logprob: -5.776327610015869
    9. '               ' → logprob: -6.151327610015869
    10. ' continue' → logprob: -6.526327610015869

Token 2389: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2195616960525513
    2. ' !=' → logprob: -1.2195616960525513
    3. '>' → logprob: -2.2195615768432617
    4. '!=' → logprob: -2.5945615768432617
    5. '==' → logprob: -2.7195615768432617
    6. ' ==' → logprob: -2.8445615768432617
    7. ' not' → logprob: -4.594561576843262
    8. ' >' → logprob: -4.594561576843262
    9. '0' → logprob: -4.719561576843262
    10. '#' → logprob: -4.844561576843262

Token 2390: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9090275168418884
    2. '-' → logprob: -1.1590275764465332
    3. ')' → logprob: -1.4090275764465332
    4. '1' → logprob: -4.284027576446533
    5. ')
' → logprob: -5.159027576446533
    6. '=' → logprob: -5.409027576446533
    7. '
' → logprob: -6.284027576446533
    8. '-)' → logprob: -6.659027576446533
    9. '```' → logprob: -6.784027576446533
    10. ' ' → logprob: -7.159027576446533

Token 2391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6433119773864746
    2. '-' → logprob: -1.1433119773864746
    3. ')' → logprob: -2.1433119773864746
    4. '):
' → logprob: -4.518311977386475
    5. '                   ' → logprob: -5.768311977386475
    6. '               ' → logprob: -5.768311977386475
    7. '):' → logprob: -5.893311977386475
    8. '   ' → logprob: -6.268311977386475
    9. ' -' → logprob: -6.393311977386475
    10. ',j' → logprob: -6.393311977386475

Token 2392: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019370813388377428
    2. '1' → logprob: -6.626936912536621
    3. ' ' → logprob: -7.876936912536621
    4. ')' → logprob: -8.876936912536621
    5. 'W' → logprob: -10.001936912536621
    6. '```' → logprob: -11.001936912536621
    7. '   ' → logprob: -11.501936912536621
    8. ',' → logprob: -12.251936912536621
    9. '-' → logprob: -13.001936912536621
    10. '
' → logprob: -13.251936912536621

Token 2393: '),
' (ID: 2313)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6506393551826477
    2. '               ' → logprob: -1.650639295578003
    3. ':
' → logprob: -1.775639295578003
    4. ' continue' → logprob: -3.150639295578003
    5. 'continue' → logprob: -3.275639295578003
    6. ':' → logprob: -3.900639295578003
    7. '                       ' → logprob: -5.025639533996582
    8. '):
' → logprob: -5.525639533996582
    9. '           ' → logprob: -6.275639533996582
    10. ')' → logprob: -7.025639533996582

Token 2394: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02596896141767502
    2. '                       ' → logprob: -4.4009690284729
    3. '               ' → logprob: -5.0259690284729
    4. ' continue' → logprob: -5.5259690284729
    5. 'continue' → logprob: -6.1509690284729
    6. '                           ' → logprob: -8.525968551635742
    7. '           ' → logprob: -8.900968551635742
    8. '                               ' → logprob: -9.150968551635742
    9. ':' → logprob: -9.525968551635742
    10. '```' → logprob: -10.150968551635742

Token 2395: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10311809182167053
    2. '                       ' → logprob: -3.1031181812286377
    3. 'continue' → logprob: -3.6031181812286377
    4. ' continue' → logprob: -4.228117942810059
    5. '               ' → logprob: -5.478117942810059
    6. '#' (adapté à ' #') → logprob: -5.853117942810059
    7. '                           ' → logprob: -7.103117942810059
    8. '           ' → logprob: -7.228117942810059
    9. '```' → logprob: -7.228117942810059
    10. '       ' → logprob: -8.353117942810059

Token 2396: ' donc' (ID: 14206)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6574271321296692
    2. 'continue' → logprob: -0.9074271321296692
    3. '#' → logprob: -2.9074270725250244
    4. ' continue' → logprob: -4.7824273109436035
    5. '                       ' → logprob: -5.0324273109436035
    6. '```' → logprob: -5.5324273109436035
    7. 'return' → logprob: -6.2824273109436035
    8. '               ' → logprob: -6.9074273109436035
    9. '
' → logprob: -7.7824273109436035
    10. '       ' → logprob: -8.157426834106445

Token 2397: ' for' (ID: 395)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4605824649333954
    2. 'print' → logprob: -1.7105824947357178
    3. 'return' → logprob: -1.9605824947357178
    4. '                   ' → logprob: -3.2105824947357178
    5. '```' → logprob: -6.210582256317139
    6. ' continue' → logprob: -6.460582256317139
    7. '                       ' → logprob: -7.085582256317139
    8. '
' → logprob: -7.585582256317139
    9. ' return' → logprob: -7.585582256317139
    10. '   ' → logprob: -7.710582256317139

Token 2398: 'çons' (ID: 72302)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.977137565612793
    2. 'continue' → logprob: -1.477137565612793
    3. '               ' → logprob: -1.727137565612793
    4. ' continue' → logprob: -2.227137565612793
    5. '                       ' → logprob: -3.102137565612793
    6. '           ' → logprob: -3.227137565612793
    7. '                           ' → logprob: -5.102137565612793
    8. '   ' → logprob: -5.602137565612793
    9. '                               ' → logprob: -5.727137565612793
    10. '       ' → logprob: -6.352137565612793

Token 2399: ' passer' (ID: 27727)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03455241769552231
    2. '               ' → logprob: -4.034552574157715
    3. 'continue' → logprob: -4.909552574157715
    4. '                       ' → logprob: -5.784552574157715
    5. '           ' → logprob: -6.659552574157715
    6. ' continue' → logprob: -6.909552574157715
    7. 'total' → logprob: -7.534552574157715
    8. '                           ' → logprob: -7.659552574157715
    9. '```' → logprob: -7.909552574157715
    10. '   ' → logprob: -7.909552574157715

Token 2400: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3322352170944214
    2. '                   ' → logprob: -1.3322352170944214
    3. 'else' → logprob: -5.207235336303711
    4. 'continue' → logprob: -5.832235336303711
    5. '           ' → logprob: -5.957235336303711
    6. ':
' → logprob: -6.332235336303711
    7. '                       ' → logprob: -6.332235336303711
    8. ':' → logprob: -6.582235336303711
    9. ' continue' → logprob: -6.832235336303711
    10. ' else' → logprob: -8.082235336303711

Token 2401: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0016259063268080354
    2. '               ' → logprob: -6.876626014709473
    3. '                       ' → logprob: -8.001626014709473
    4. 'continue' → logprob: -8.626626014709473
    5. ' continue' → logprob: -10.126626014709473
    6. '           ' → logprob: -10.626626014709473
    7. '       ' → logprob: -11.751626014709473
    8. '   ' → logprob: -12.751626014709473
    9. '```' → logprob: -13.376626014709473
    10. '				' → logprob: -14.126626014709473

Token 2402: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5868020057678223
    2. '                   ' → logprob: -0.8368020057678223
    3. ' continue' → logprob: -4.961802005767822
    4. '               ' → logprob: -6.086802005767822
    5. '                       ' → logprob: -6.711802005767822
    6. '```' → logprob: -8.836801528930664
    7. '   ' → logprob: -9.586801528930664
    8. '       ' → logprob: -9.836801528930664
    9. '           ' → logprob: -10.711801528930664
    10. '	continue' → logprob: -11.586801528930664

Token 2403: ' On' (ID: 2160)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06037888675928116
    2. 'continue' → logprob: -2.9353787899017334
    3. '               ' → logprob: -5.6853790283203125
    4. '                       ' → logprob: -6.4353790283203125
    5. ' continue' → logprob: -8.185379028320312
    6. '           ' → logprob: -9.685379028320312
    7. '       ' → logprob: -10.060379028320312
    8. '```' → logprob: -10.060379028320312
    9. 'pass' → logprob: -10.935379028320312
    10. '   ' → logprob: -10.935379028320312

Token 2404: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.36742979288101196
    2. '                   ' → logprob: -1.7424297332763672
    3. ' continue' → logprob: -2.117429733276367
    4. '                       ' → logprob: -5.242429733276367
    5. '               ' → logprob: -5.867429733276367
    6. '   ' → logprob: -6.992429733276367
    7. '	continue' → logprob: -7.617429733276367
    8. '       ' → logprob: -7.867429733276367
    9. 'break' → logprob: -7.867429733276367
    10. '#' → logprob: -7.867429733276367

Token 2405: ' retourner' (ID: 116656)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.018683385103940964
    2. '```' → logprob: -4.893683433532715
    3. '                   ' → logprob: -5.268683433532715
    4. 'pass' → logprob: -6.143683433532715
    5. '                       ' → logprob: -6.268683433532715
    6. ' continue' → logprob: -6.643683433532715
    7. '   ' → logprob: -9.018683433532715
    8. '               ' → logprob: -9.143683433532715
    9. '	continue' → logprob: -9.143683433532715
    10. 'contin' → logprob: -10.518683433532715

Token 2406: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09989453107118607
    2. '                   ' → logprob: -2.9748945236206055
    3. 'print' → logprob: -3.7248945236206055
    4. ' -' → logprob: -4.7248945236206055
    5. 'return' → logprob: -4.9748945236206055
    6. '                       ' → logprob: -6.8498945236206055
    7. '
' → logprob: -7.2248945236206055
    8. '-print' → logprob: -7.2248945236206055
    9. '               ' → logprob: -7.7248945236206055
    10. '   ' → logprob: -8.349894523620605

Token 2407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'print' → logprob: -15.375000953674316
    3. '```' → logprob: -15.625000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '   ' → logprob: -17.5
    6. '           ' → logprob: -18.0
    7. '
' → logprob: -18.125
    8. '``' → logprob: -18.25
    9. '`' → logprob: -18.75
    10. 'return' → logprob: -18.875

Token 2408: ' ou' (ID: 2031)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027715791016817093
    2. '               ' → logprob: -3.9027156829833984
    3. '                       ' → logprob: -5.152715682983398
    4. '
' → logprob: -7.652715682983398
    5. 'return' → logprob: -8.277715682983398
    6. '           ' → logprob: -8.652715682983398
    7. '   ' → logprob: -8.902715682983398
    8. '       ' → logprob: -9.402715682983398
    9. 'if' → logprob: -9.652715682983398
    10. ' return' → logprob: -10.152715682983398

Token 2409: ' ign' (ID: 8769)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4304927885532379
    2. 'return' → logprob: -1.8054927587509155
    3. 'print' → logprob: -1.9304927587509155
    4. '                   ' → logprob: -3.555492877960205
    5. 'pass' → logprob: -4.805492877960205
    6. '```' → logprob: -6.805492877960205
    7. ' continue' → logprob: -7.055492877960205
    8. '   ' → logprob: -7.930492877960205
    9. ' return' → logprob: -8.555492401123047
    10. '               ' → logprob: -8.680492401123047

Token 2410: 'orer' (ID: 13634)
  Prédit: 'ore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ore' → logprob: -1.4324983358383179
    2. 'continue' → logprob: -1.4324983358383179
    3. 'def' → logprob: -1.9324983358383179
    4. '```' → logprob: -2.1824984550476074
    5. 'return' → logprob: -2.5574984550476074
    6. 'orm' → logprob: -2.8074984550476074
    7. 'ite' → logprob: -3.5574984550476074
    8. 'f' → logprob: -3.9324984550476074
    9. 'ores' → logprob: -4.057498455047607
    10. 'print' → logprob: -4.307498455047607

Token 2411: ' selon' (ID: 27571)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13400092720985413
    2. 'continue' → logprob: -2.6340010166168213
    3. '               ' → logprob: -3.6340010166168213
    4. ' continue' → logprob: -4.134000778198242
    5. 'return' → logprob: -5.134000778198242
    6. '                       ' → logprob: -5.509000778198242
    7. ' return' → logprob: -8.259000778198242
    8. 'else' → logprob: -8.509000778198242
    9. '           ' → logprob: -8.634000778198242
    10. '   ' → logprob: -8.884000778198242

Token 2412: ' le' (ID: 505)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.449672132730484
    2. ' continue' → logprob: -1.8246721029281616
    3. '                   ' → logprob: -1.9496721029281616
    4. '```' → logprob: -4.074672222137451
    5. '               ' → logprob: -4.574672222137451
    6. 'pass' → logprob: -5.074672222137451
    7. '                           ' → logprob: -5.199672222137451
    8. '                       ' → logprob: -5.449672222137451
    9. '                    ' → logprob: -5.824672222137451
    10. ' pass' → logprob: -6.199672222137451

Token 2413: ' problème' (ID: 35630)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39693668484687805
    2. 'return' → logprob: -2.0219366550445557
    3. 'problem' → logprob: -2.8969366550445557
    4. 'break' → logprob: -3.3969366550445557
    5. 'else' → logprob: -4.271936893463135
    6. 'logic' → logprob: -4.396936893463135
    7. 'pass' → logprob: -4.396936893463135
    8. '```' → logprob: -4.396936893463135
    9. '#' → logprob: -4.646936893463135
    10. 'if' → logprob: -4.771936893463135

Token 2414: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028819261118769646
    2. '               ' → logprob: -3.7788193225860596
    3. '                       ' → logprob: -6.1538190841674805
    4. 'continue' → logprob: -6.7788190841674805
    5. ':
' → logprob: -7.0288190841674805
    6. ' continue' → logprob: -7.4038190841674805
    7. ':' → logprob: -8.15381908416748
    8. 'return' → logprob: -8.77881908416748
    9. 'else' → logprob: -9.15381908416748
    10. '```' → logprob: -9.77881908416748

Token 2415: ' mais' (ID: 2899)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.060052718967199326
    2. '                       ' → logprob: -4.060052871704102
    3. 'return' → logprob: -4.060052871704102
    4. 'continue' → logprob: -4.810052871704102
    5. ' continue' → logprob: -5.060052871704102
    6. '               ' → logprob: -5.310052871704102
    7. ' return' → logprob: -5.810052871704102
    8. '           ' → logprob: -7.560052871704102
    9. '   ' → logprob: -8.185052871704102
    10. '
' → logprob: -8.435052871704102

Token 2416: ' ici' (ID: 27994)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1894756257534027
    2. '                   ' → logprob: -1.939475655555725
    3. 'return' → logprob: -4.4394755363464355
    4. '```' → logprob: -4.6894755363464355
    5. ' continue' → logprob: -5.4394755363464355
    6. '                       ' → logprob: -6.4394755363464355
    7. '   ' → logprob: -7.5644755363464355
    8. '               ' → logprob: -7.6894755363464355
    9. 'pass' → logprob: -7.9394755363464355
    10. '       ' → logprob: -8.939476013183594

Token 2417: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8440800309181213
    2. 'return' → logprob: -0.9690800309181213
    3. '                   ' → logprob: -1.8440799713134766
    4. ' continue' → logprob: -4.094079971313477
    5. ' return' → logprob: -4.719079971313477
    6. '                       ' → logprob: -6.344079971313477
    7. '```' → logprob: -6.469079971313477
    8. '               ' → logprob: -6.594079971313477
    9. '   ' → logprob: -7.094079971313477
    10. 'print' → logprob: -7.969079971313477

Token 2418: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.23191052675247192
    2. ' continue' → logprob: -2.106910467147827
    3. '                   ' → logprob: -2.606910467147827
    4. 'return' → logprob: -4.856910705566406
    5. '               ' → logprob: -6.856910705566406
    6. ' return' → logprob: -7.231910705566406
    7. '                       ' → logprob: -7.731910705566406
    8. '   ' → logprob: -7.981910705566406
    9. '           ' → logprob: -8.106910705566406
    10. '       ' → logprob: -8.606910705566406

Token 2419: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06688103824853897
    2. '               ' → logprob: -2.816880941390991
    3. '                       ' → logprob: -6.31688117980957
    4. 'continue' → logprob: -6.44188117980957
    5. ' continue' → logprob: -6.69188117980957
    6. '           ' → logprob: -9.19188117980957
    7. '                           ' → logprob: -10.19188117980957
    8. '   ' → logprob: -10.94188117980957
    9. '	continue' → logprob: -11.06688117980957
    10. '```' → logprob: -11.44188117980957

Token 2420: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007324059493839741
    2. '               ' → logprob: -5.13232421875
    3. '                       ' → logprob: -7.63232421875
    4. 'continue' → logprob: -7.75732421875
    5. ' continue' → logprob: -7.88232421875
    6. '```' → logprob: -9.75732421875
    7. '           ' → logprob: -10.75732421875
    8. '       ' → logprob: -12.00732421875
    9. '   ' → logprob: -12.00732421875
    10. '                           ' → logprob: -12.63232421875

Token 2421: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13803014159202576
    2. 'continue' → logprob: -2.1380300521850586
    3. '                       ' → logprob: -4.763030052185059
    4. ' continue' → logprob: -6.138030052185059
    5. '               ' → logprob: -8.388030052185059
    6. '```' → logprob: -9.763030052185059
    7. '       ' → logprob: -11.013030052185059
    8. '   ' → logprob: -11.013030052185059
    9. '
' → logprob: -11.888030052185059
    10. '	continue' → logprob: -12.013030052185059

Token 2422: ' car' (ID: 1669)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05250895023345947
    2. 'continue' → logprob: -3.67750883102417
    3. '                       ' → logprob: -3.92750883102417
    4. ' continue' → logprob: -5.67750883102417
    5. '               ' → logprob: -6.17750883102417
    6. '```' → logprob: -7.55250883102417
    7. '   ' → logprob: -10.427509307861328
    8. '                           ' → logprob: -10.427509307861328
    9. '
' → logprob: -10.802509307861328
    10. '           ' → logprob: -11.052509307861328

Token 2423: ' la' (ID: 557)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7957314848899841
    2. ' continue' → logprob: -1.045731544494629
    3. '                   ' → logprob: -1.920731544494629
    4. ' True' → logprob: -3.420731544494629
    5. 'True' → logprob: -4.920731544494629
    6. '               ' → logprob: -5.670731544494629
    7. '                       ' → logprob: -5.920731544494629
    8. ' pass' → logprob: -6.420731544494629
    9. 'pass' → logprob: -6.545731544494629
    10. '                           ' → logprob: -7.170731544494629

Token 2424: ' forêt' (ID: 117038)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.08843515813350677
    2. ' continue' → logprob: -2.963435173034668
    3. 'pass' → logprob: -3.838435173034668
    4. 'break' → logprob: -5.338435173034668
    5. '#' → logprob: -6.213435173034668
    6. 'return' → logprob: -6.838435173034668
    7. ' pass' → logprob: -7.088435173034668
    8. '               ' → logprob: -7.588435173034668
    9. '   ' → logprob: -7.838435173034668
    10. 'contin' → logprob: -7.963435173034668

Token 2425: ' est' (ID: 893)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9806559085845947
    2. '                   ' → logprob: -1.7306559085845947
    3. '[i' → logprob: -2.1056559085845947
    4. 'continue' → logprob: -2.6056559085845947
    5. '           ' → logprob: -2.8556559085845947
    6. '   ' → logprob: -3.3556559085845947
    7. '
' → logprob: -3.3556559085845947
    8. ' continue' → logprob: -3.7306559085845947
    9. '[' → logprob: -3.7306559085845947
    10. '[n' → logprob: -4.480655670166016

Token 2426: ' extérieure' (ID: 154110)
  Prédit: 'dense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dense' → logprob: -0.5948196649551392
    2. '   ' → logprob: -2.3448195457458496
    3. ' dense' → logprob: -3.0948195457458496
    4. 'accessible' → logprob: -3.4698195457458496
    5. 'possible' → logprob: -3.9698195457458496
    6. 'blo' → logprob: -4.34481954574585
    7. 'conn' → logprob: -4.34481954574585
    8. 'continue' → logprob: -4.46981954574585
    9. '```' → logprob: -4.46981954574585
    10. 't' → logprob: -4.46981954574585

Token 2427: ' non' (ID: 2893)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35461848974227905
    2. '                   ' → logprob: -1.2296185493469238
    3. '                       ' → logprob: -5.479618549346924
    4. '
' → logprob: -7.479618549346924
    5. '                           ' → logprob: -7.979618549346924
    6. '                    
' → logprob: -8.479618072509766
    7. '           ' → logprob: -8.854618072509766
    8. '                        
' → logprob: -8.979618072509766
    9. ':
' → logprob: -9.104618072509766
    10. '                
' → logprob: -9.604618072509766

Token 2428: ' accessible' (ID: 18240)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0930284783244133
    2. '                   ' → logprob: -3.4680285453796387
    3. 'continue' → logprob: -3.9680285453796387
    4. ' continue' → logprob: -4.093028545379639
    5. '           ' → logprob: -4.343028545379639
    6. '   ' → logprob: -5.468028545379639
    7. '       ' → logprob: -6.343028545379639
    8. '                       ' → logprob: -6.468028545379639
    9. '	continue' → logprob: -7.718028545379639
    10. ':
' → logprob: -8.34302806854248

Token 2429: '.
' (ID: 558)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19328796863555908
    2. '               ' → logprob: -1.818287968635559
    3. '                       ' → logprob: -4.8182878494262695
    4. 'continue' → logprob: -5.8182878494262695
    5. '                           ' → logprob: -6.8182878494262695
    6. ' continue' → logprob: -7.4432878494262695
    7. '           ' → logprob: -7.9432878494262695
    8. '                               ' → logprob: -8.94328784942627
    9. '   ' → logprob: -10.06828784942627
    10. '	continue' → logprob: -10.56828784942627

Token 2430: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02782141976058483
    2. '               ' → logprob: -3.9028213024139404
    3. '                       ' → logprob: -5.4028215408325195
    4. 'continue' → logprob: -6.6528215408325195
    5. ' continue' → logprob: -6.9028215408325195
    6. '```' → logprob: -7.9028215408325195
    7. '           ' → logprob: -10.27782154083252
    8. '                           ' → logprob: -10.77782154083252
    9. 'else' → logprob: -11.77782154083252
    10. '   ' → logprob: -12.40282154083252

Token 2431: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.48537370562553406
    2. 'continue' (adapté à ' continue') → logprob: -0.9853737354278564
    3. '                       ' → logprob: -5.110373497009277
    4. ' continue' → logprob: -5.610373497009277
    5. '               ' → logprob: -6.735373497009277
    6. '```' → logprob: -8.360373497009277
    7. '       ' → logprob: -10.110373497009277
    8. '   ' → logprob: -10.610373497009277
    9. '           ' → logprob: -10.735373497009277
    10. 'pass' → logprob: -11.610373497009277

Token 2432: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008959780680015683
    2. '                
' → logprob: -7.875895977020264
    3. '                   ' → logprob: -8.375896453857422
    4. '
' → logprob: -9.500896453857422
    5. '           ' → logprob: -9.875896453857422
    6. '<|end|>' → logprob: -10.500896453857422
    7. '                ' → logprob: -10.625896453857422
    8. '    
' → logprob: -10.875896453857422
    9. '                        
' → logprob: -11.375896453857422
    10. '              ' → logprob: -11.375896453857422

Token 2433: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014715301804244518
    2. '                   ' → logprob: -7.126471519470215
    3. '```' → logprob: -7.626471519470215
    4. '           ' → logprob: -10.126471519470215
    5. '
' → logprob: -10.376471519470215
    6. 'total' → logprob: -10.501471519470215
    7. '                
' → logprob: -10.626471519470215
    8. '                       ' → logprob: -11.251471519470215
    9. '   ' → logprob: -11.626471519470215
    10. '              ' → logprob: -12.001471519470215

Token 2434: ' time' (ID: 1058)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04069318249821663
    2. 'total' → logprob: -3.2906932830810547
    3. '                   ' → logprob: -6.415693283081055
    4. ' total' → logprob: -7.165693283081055
    5. '
' → logprob: -8.790693283081055
    6. '   ' → logprob: -10.040693283081055
    7. '           ' → logprob: -11.040693283081055
    8. '                       ' → logprob: -11.790693283081055
    9. '                
' → logprob: -12.165693283081055
    10. '```' → logprob: -12.665693283081055

Token 2435: '_for' (ID: 11903)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8449575304985046
    2. '=' → logprob: -1.2199575901031494
    3. '+=' → logprob: -1.7199575901031494
    4. ' =' → logprob: -2.3449575901031494
    5. '+' → logprob: -9.71995735168457
    6. ']+=' → logprob: -9.71995735168457
    7. '                   ' → logprob: -10.96995735168457
    8. '   ' → logprob: -11.46995735168457
    9. '=time' → logprob: -11.59495735168457
    10. '_=' → logprob: -11.59495735168457

Token 2436: '_t' (ID: 838)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3533783555030823
    2. 'i' → logprob: -2.1033782958984375
    3. ' A' → logprob: -2.4783782958984375
    4. ' i' → logprob: -3.3533782958984375
    5. '=' → logprob: -4.2283782958984375
    6. '(i' → logprob: -4.2283782958984375
    7. ' =' → logprob: -5.6033782958984375
    8. ' (' → logprob: -5.6033782958984375
    9. '_' → logprob: -5.7283782958984375
    10. '   ' → logprob: -5.8533782958984375

Token 2437: 'rees' (ID: 12339)
  Prédit: '_for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.015342340804636478
    2. '=' → logprob: -4.3903422355651855
    3. 'for' → logprob: -6.3903422355651855
    4. ' =' → logprob: -7.6403422355651855
    5. 'ree' → logprob: -7.8903422355651855
    6. 'ile' → logprob: -9.390342712402344
    7. 'ime' → logprob: -9.640342712402344
    8. 'rees' → logprob: -10.765342712402344
    9. '+=' → logprob: -10.890342712402344
    10. '_' → logprob: -11.140342712402344

Token 2438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18017131090164185
    2. '=' → logprob: -1.805171251296997
    3. ' +=' → logprob: -8.305171012878418
    4. '               ' → logprob: -9.680171012878418
    5. '                   ' → logprob: -9.930171012878418
    6. '+=' → logprob: -10.805171012878418
    7. '           ' → logprob: -11.430171012878418
    8. '                       ' → logprob: -12.430171012878418
    9. '```' → logprob: -12.555171012878418
    10. '   ' → logprob: -12.805171012878418

Token 2439: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011090032756328583
    2. ' A' → logprob: -4.51108980178833
    3. '               ' → logprob: -11.011090278625488
    4. '   ' → logprob: -11.136090278625488
    5. '                   ' → logprob: -11.511090278625488
    6. '           ' → logprob: -14.261090278625488
    7. ' ' → logprob: -15.886090278625488
    8. '                       ' → logprob: -16.011089324951172
    9. '  ' → logprob: -16.636089324951172
    10. '       ' → logprob: -16.636089324951172

Token 2440: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -14.000001907348633
    3. 'i' → logprob: -14.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. '               ' → logprob: -16.000001907348633
    6. '                   ' → logprob: -16.875001907348633
    7. '           ' → logprob: -17.875001907348633
    8. '   ' → logprob: -18.000001907348633
    9. '[I' → logprob: -18.000001907348633
    10. 'time' → logprob: -18.250001907348633

Token 2441: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.011057252995669842
    2. '][' → logprob: -4.511057376861572
    3. '               ' → logprob: -12.511056900024414
    4. ' [' → logprob: -13.511056900024414
    5. '           ' → logprob: -13.636056900024414
    6. '                   ' → logprob: -14.011056900024414
    7. '[' → logprob: -14.386056900024414
    8. 'i' → logprob: -14.511056900024414
    9. ']' → logprob: -15.261056900024414
    10. '[I' → logprob: -16.011056900024414

Token 2442: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.822646693966817e-06
    2. 'i' → logprob: -12.500007629394531
    3. '[j' → logprob: -12.875007629394531
    4. ' j' → logprob: -13.875007629394531
    5. '][' → logprob: -14.875007629394531
    6. ',j' → logprob: -15.875007629394531
    7. '```' → logprob: -17.25000762939453
    8. '	j' → logprob: -17.75000762939453
    9. '   ' → logprob: -17.87500762939453
    10. '[i' → logprob: -18.00000762939453

Token 2443: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6267321705818176
    2. '*' → logprob: -1.7517321109771729
    3. ' *' → logprob: -1.7517321109771729
    4. ']' → logprob: -2.376732110977173
    5. ']*' → logprob: -4.376732349395752
    6. '*(' → logprob: -5.126732349395752
    7. ')' → logprob: -6.001732349395752
    8. '[j' → logprob: -6.376732349395752
    9. '[' → logprob: -6.751732349395752
    10. ']*(' → logprob: -7.626732349395752

Token 2444: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3886006474494934
    2. ' *' → logprob: -1.1386005878448486
    3. '*(' → logprob: -6.388600826263428
    4. '```' → logprob: -10.88860034942627
    5. ')' → logprob: -11.76360034942627
    6. '               ' → logprob: -12.38860034942627
    7. '           ' → logprob: -12.38860034942627
    8. '   ' → logprob: -12.63860034942627
    9. '`' → logprob: -13.01360034942627
    10. '**' → logprob: -13.13860034942627

Token 2445: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001984146365430206
    2. ' (' → logprob: -9.000198364257812
    3. '((' → logprob: -9.500198364257812
    4. '   ' → logprob: -17.125198364257812
    5. ' ((' → logprob: -17.875198364257812
    6. ' ' → logprob: -19.000198364257812
    7. '```' → logprob: -19.750198364257812
    8. '(
' → logprob: -20.000198364257812
    9. '  ' → logprob: -20.375198364257812
    10. '`' → logprob: -21.250198364257812

Token 2446: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06996767222881317
    2. '(' → logprob: -2.694967746734619
    3. ' ' → logprob: -11.569967269897461
    4. ' (' → logprob: -12.194967269897461
    5. '               ' → logprob: -12.194967269897461
    6. '                   ' → logprob: -12.819967269897461
    7. '   ' → logprob: -12.944967269897461
    8. '                               ' → logprob: -12.944967269897461
    9. '           ' → logprob: -14.194967269897461
    10. '                                   ' → logprob: -14.819967269897461

Token 2447: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.048587825149297714
    2. ' *' → logprob: -3.0485877990722656
    3. '**' → logprob: -15.048587799072266
    4. '*object' → logprob: -16.673587799072266
    5. ' ' → logprob: -16.798587799072266
    6. '*out' → logprob: -17.673587799072266
    7. ' ' → logprob: -17.923587799072266
    8. '*(' → logprob: -18.048587799072266
    9. ')' → logprob: -18.548587799072266
    10. ' **' → logprob: -18.798587799072266

Token 2448: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.339278580620885e-06
    2. ' min' → logprob: -13.000001907348633
    3. '(min' → logprob: -17.250001907348633
    4. '	min' → logprob: -21.375001907348633
    5. '```' → logprob: -21.750001907348633
    6. 'max' → logprob: -22.000001907348633
    7. '_min' → logprob: -22.000001907348633
    8. '   ' → logprob: -22.250001907348633
    9. '[min' → logprob: -22.375001907348633
    10. '
' → logprob: -23.000001907348633

Token 2449: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -8.828512363834307e-05
    2. 'dist' → logprob: -9.375088691711426
    3. '_distance' → logprob: -13.250088691711426
    4. '_' → logprob: -14.500088691711426
    5. '```' → logprob: -14.500088691711426
    6. '*_' → logprob: -15.375088691711426
    7. 'Dist' → logprob: -15.875088691711426
    8. ' _' → logprob: -16.62508773803711
    9. '	dist' → logprob: -16.75008773803711
    10. '_DIST' → logprob: -17.37508773803711

Token 2450: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.292907877039397e-06
    2. '   ' → logprob: -14.00000286102295
    3. '```' → logprob: -14.37500286102295
    4. ' _' → logprob: -14.62500286102295
    5. '               ' → logprob: -15.12500286102295
    6. ')_' → logprob: -15.37500286102295
    7. '_' → logprob: -16.000003814697266
    8. '_from' → logprob: -16.000003814697266
    9. 'e' → logprob: -16.125003814697266
    10. '_for' → logprob: -16.625003814697266

Token 2451: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.0032797870226204395
    2. 'adj' → logprob: -5.878279685974121
    3. '_ad' → logprob: -7.753279685974121
    4. 'min' → logprob: -11.503279685974121
    5. 'a' → logprob: -12.003279685974121
    6. '
' → logprob: -12.378279685974121
    7. '\' → logprob: -12.878279685974121
    8. 'start' → logprob: -12.878279685974121
    9. '```' → logprob: -12.878279685974121
    10. '   ' → logprob: -13.378279685974121

Token 2452: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -1.8670179997570813e-05
    2. 'ac' → logprob: -11.000019073486328
    3. 'aced' → logprob: -14.875019073486328
    4. '```' → logprob: -15.125019073486328
    5. '_adj' → logprob: -15.375019073486328
    6. 'acen' → logprob: -15.750019073486328
    7. '
' → logprob: -15.875019073486328
    8. 'cent' → logprob: -16.125019073486328
    9. 'adj' → logprob: -16.250019073486328
    10. 'acency' → logprob: -16.375019073486328

Token 2453: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06197664886713028
    2. '+' → logprob: -2.811976671218872
    3. '   ' → logprob: -13.061976432800293
    4. ' ' → logprob: -13.436976432800293
    5. ')' → logprob: -13.561976432800293
    6. '```' → logprob: -14.186976432800293
    7. ')+' → logprob: -14.186976432800293
    8. '    ' → logprob: -14.436976432800293
    9. '       ' → logprob: -15.061976432800293
    10. ' ' → logprob: -15.311976432800293

Token 2454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. ')' → logprob: -18.000030517578125
    4. '```' → logprob: -18.375030517578125
    5. '`' → logprob: -21.375030517578125
    6. '   ' → logprob: -21.750030517578125
    7. '۱' → logprob: -22.750030517578125
    8. '１' → logprob: -23.000030517578125
    9. ' ' → logprob: -23.250030517578125
    10. '+' → logprob: -23.750030517578125

Token 2455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -20.125
    4. '   ' → logprob: -22.625
    5. '۱' → logprob: -23.25
    6. '１' → logprob: -23.5
    7. '
' → logprob: -23.5
    8. ')' → logprob: -24.375
    9. '`' → logprob: -24.5
    10. '+' → logprob: -24.625

Token 2456: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17128697037696838
    2. '               ' → logprob: -1.921286940574646
    3. ')
' → logprob: -4.5462870597839355
    4. '           ' → logprob: -8.046286582946777
    5. '                   ' → logprob: -10.796286582946777
    6. '<|end|>' → logprob: -10.921286582946777
    7. ')
' → logprob: -11.421286582946777
    8. '```' → logprob: -12.171286582946777
    9. '       ' → logprob: -12.671286582946777
    10. '              ' → logprob: -12.796286582946777

Token 2457: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04280116781592369
    2. 'total' → logprob: -3.2928011417388916
    3. ' total' → logprob: -5.417801380157471
    4. '```' → logprob: -9.167800903320312
    5. '                   ' → logprob: -9.292800903320312
    6. '           ' → logprob: -10.542800903320312
    7. '                       ' → logprob: -11.042800903320312
    8. ',total' → logprob: -11.292800903320312
    9. '(total' → logprob: -11.417800903320312
    10. '
' → logprob: -11.417800903320312

Token 2458: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.21051892638206482
    2. '               ' → logprob: -1.7105189561843872
    3. ' total' → logprob: -4.710518836975098
    4. '           ' → logprob: -10.085518836975098
    5. '   ' → logprob: -11.210518836975098
    6. '                   ' → logprob: -12.085518836975098
    7. '       ' → logprob: -12.960518836975098
    8. '	total' → logprob: -15.460518836975098
    9. '                       ' → logprob: -15.960518836975098
    10. '              ' → logprob: -16.085519790649414

Token 2459: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.392202976712724e-06
    2. '_for' → logprob: -12.125006675720215
    3. 'time' → logprob: -14.500006675720215
    4. 'for' → logprob: -15.750006675720215
    5. '+=' → logprob: -16.2500057220459
    6. ' +=' → logprob: -17.0000057220459
    7. '_' → logprob: -17.2500057220459
    8. ')_' → logprob: -17.3750057220459
    9. '_total' → logprob: -17.7500057220459
    10. '```' → logprob: -17.7500057220459

Token 2460: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.25229671597480774
    2. ' +=' → logprob: -1.5022966861724854
    3. '```' → logprob: -8.377296447753906
    4. ']+=' → logprob: -9.752296447753906
    5. '=' → logprob: -10.127296447753906
    6. '           ' → logprob: -12.002296447753906
    7. ')' → logprob: -12.127296447753906
    8. '+' → logprob: -12.627296447753906
    9. '               ' → logprob: -12.752296447753906
    10. '                   ' → logprob: -12.877296447753906

Token 2461: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0007099286303855479
    2. ' time' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.250709533691406
    4. '	time' → logprob: -19.500709533691406
    5. '               ' → logprob: -19.625709533691406
    6. '(time' → logprob: -20.625709533691406
    7. '_time' → logprob: -22.000709533691406
    8. '                   ' → logprob: -22.000709533691406
    9. '"time' → logprob: -22.125709533691406
    10. '           ' → logprob: -22.625709533691406

Token 2462: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.00030566859641112387
    2. 'for' → logprob: -8.125306129455566
    3. 'For' → logprob: -12.250306129455566
    4. '_time' → logprob: -12.750306129455566
    5. 's' → logprob: -15.000306129455566
    6. '   ' → logprob: -15.000306129455566
    7. '_' → logprob: -15.375306129455566
    8. '[i' → logprob: -15.750306129455566
    9. '_FOR' → logprob: -15.875306129455566
    10. 'time' → logprob: -16.00030517578125

Token 2463: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0013880894985049963
    2. 'trees' → logprob: -6.876388072967529
    3. 'for' → logprob: -9.376388549804688
    4. 'ar' → logprob: -9.501388549804688
    5. 'time' → logprob: -9.751388549804688
    6. 't' → logprob: -10.251388549804688
    7. 'tree' → logprob: -10.751388549804688
    8. 'Trees' → logprob: -10.876388549804688
    9. 'arb' → logprob: -11.626388549804688
    10. '_for' → logprob: -11.876388549804688

Token 2464: 'rees' (ID: 12339)
  Prédit: 'rees'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rees' → logprob: -0.5764877200126648
    2. 'ree' → logprob: -0.8264877200126648
    3. 'otal' → logprob: -8.57648754119873
    4. 'ime' → logprob: -8.57648754119873
    5. 're' → logprob: -9.45148754119873
    6. 'trees' → logprob: -10.32648754119873
    7. 'ee' → logprob: -11.07648754119873
    8. '_' → logprob: -11.45148754119873
    9. 'r' → logprob: -11.82648754119873
    10. 'ees' → logprob: -12.07648754119873

Token 2465: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4845414459705353
    2. '   ' → logprob: -0.9845414161682129
    3. '    
' → logprob: -4.859541416168213
    4. '<|end|>' → logprob: -6.234541416168213
    5. '```' → logprob: -7.984541416168213
    6. 'return' → logprob: -9.359541893005371
    7. '

' → logprob: -10.234541893005371
    8. '  
' → logprob: -10.234541893005371
    9. '\n' → logprob: -10.484541893005371
    10. '
' → logprob: -10.734541893005371

Token 2466: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04079996049404144
    2. '
' → logprob: -3.540799856185913
    3. '    
' → logprob: -4.790800094604492
    4. '```' → logprob: -6.290800094604492
    5. 'return' → logprob: -7.665800094604492
    6. 'print' → logprob: -8.665800094604492
    7. '<|end|>' → logprob: -9.540800094604492
    8. 'if' → logprob: -9.915800094604492
    9. '  
' → logprob: -11.040800094604492
    10. '        
' → logprob: -11.290800094604492

Token 2467: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03170301765203476
    2. 'print' → logprob: -3.531702995300293
    3. '
' → logprob: -6.531702995300293
    4. '```' → logprob: -7.781702995300293
    5. '    
' → logprob: -9.781702995300293
    6. 'if' → logprob: -11.281702995300293
    7. 'return' → logprob: -11.906702995300293
    8. ' print' → logprob: -15.031702995300293
    9. 'sys' → logprob: -15.406702995300293
    10. '``' → logprob: -15.656702995300293

Token 2468: ' Enfin' (ID: 85274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00862876046448946
    2. '   ' → logprob: -4.758628845214844
    3. 'if' → logprob: -11.508628845214844
    4. '```' → logprob: -12.758628845214844
    5. ' print' → logprob: -13.758628845214844
    6. 'return' → logprob: -16.008628845214844
    7. '    
' → logprob: -16.508628845214844
    8. 'sys' → logprob: -16.758628845214844
    9. '
' → logprob: -17.008628845214844
    10. '#print' → logprob: -18.133628845214844

Token 2469: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.386907160282135
    2. 'print' → logprob: -1.1369071006774902
    3. ' print' → logprob: -10.386907577514648
    4. '```' → logprob: -12.761907577514648
    5. 'if' → logprob: -13.886907577514648
    6. '
' → logprob: -14.511907577514648
    7. 'import' → logprob: -14.761907577514648
    8. '    
' → logprob: -15.011907577514648
    9. '	print' → logprob: -16.26190757751465
    10. '#' → logprob: -16.26190757751465

Token 2470: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5855289101600647
    2. 'print' → logprob: -0.8355289101600647
    3. 'if' → logprob: -4.71052885055542
    4. '```' → logprob: -8.210529327392578
    5. '#' → logprob: -8.835529327392578
    6. ' print' → logprob: -9.710529327392578
    7. ' if' → logprob: -10.210529327392578
    8. '
' → logprob: -11.710529327392578
    9. '    
' → logprob: -11.960529327392578
    10. 'import' → logprob: -12.210529327392578

Token 2471: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03857899457216263
    2. '   ' → logprob: -4.038578987121582
    3. 'if' → logprob: -4.038578987121582
    4. '#' → logprob: -6.663578987121582
    5. 'return' → logprob: -8.288578987121582
    6. '
' → logprob: -8.288578987121582
    7. ' print' → logprob: -8.538578987121582
    8. '#print' → logprob: -8.788578987121582
    9. ' if' → logprob: -8.913578987121582
    10. '```' → logprob: -9.163578987121582

Token 2472: ' accum' (ID: 23148)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16046418249607086
    2. '   ' → logprob: -1.9104641675949097
    3. '
' → logprob: -9.6604642868042
    4. '```' → logprob: -9.6604642868042
    5. '    
' → logprob: -10.5354642868042
    6. 'import' → logprob: -10.7854642868042
    7. '#' → logprob: -11.2854642868042
    8. 'im' → logprob: -11.2854642868042
    9. 'if' → logprob: -11.4104642868042
    10. '  ' → logprob: -11.5354642868042

Token 2473: 'ulé' (ID: 147268)
  Prédit: 'éré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éré' → logprob: -0.2643998861312866
    2. 'ulé' → logprob: -2.014400005340576
    3. '   ' → logprob: -2.639400005340576
    4. 'er' → logprob: -4.264400005340576
    5. 'érer' → logprob: -5.389400005340576
    6. 'ul' → logprob: -6.639400005340576
    7. 'ré' → logprob: -6.764400005340576
    8. 'total' → logprob: -7.139400005340576
    9. '       ' → logprob: -7.139400005340576
    10. '
' → logprob: -7.264400005340576

Token 2474: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.723103940486908
    2. 'total' → logprob: -0.723103940486908
    3. '   ' → logprob: -3.7231040000915527
    4. ' total' → logprob: -5.598104000091553
    5. ' print' → logprob: -7.473104000091553
    6. 'return' → logprob: -7.473104000091553
    7. 'le' → logprob: -8.723103523254395
    8. '(total' → logprob: -8.848103523254395
    9. '
' → logprob: -10.348103523254395
    10. 'la' → logprob: -10.473103523254395

Token 2475: ' temps' (ID: 11160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00416981428861618
    2. 'total' → logprob: -5.504169940948486
    3. 'return' → logprob: -10.129169464111328
    4. '#' → logprob: -10.754169464111328
    5. ' print' → logprob: -11.254169464111328
    6. '   ' → logprob: -11.629169464111328
    7. 'result' → logprob: -12.629169464111328
    8. 'temps' → logprob: -13.254169464111328
    9. '```' → logprob: -14.254169464111328
    10. ' total' → logprob: -14.504169464111328

Token 2476: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01124422438442707
    2. 'print' → logprob: -4.511244297027588
    3. 'return' → logprob: -8.63624382019043
    4. '```' → logprob: -11.63624382019043
    5. ' print' → logprob: -12.63624382019043
    6. '
' → logprob: -12.63624382019043
    7. '    
' → logprob: -13.51124382019043
    8. 'for' → logprob: -14.01124382019043
    9. '       ' → logprob: -15.13624382019043
    10. ' return' → logprob: -15.26124382019043

Token 2477: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012145215878263116
    2. 'print' → logprob: -6.751214504241943
    3. '
' → logprob: -10.126214981079102
    4. '    
' → logprob: -13.126214981079102
    5. ' print' → logprob: -13.751214981079102
    6. 'return' → logprob: -14.126214981079102
    7. '```' → logprob: -14.501214981079102
    8. '	print' → logprob: -17.7512149810791
    9. '       ' → logprob: -18.2512149810791
    10. '
' → logprob: -18.7512149810791

Token 2478: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007236333331093192
    2. 'print' → logprob: -7.750723838806152
    3. '
' → logprob: -8.250723838806152
    4. '    
' → logprob: -10.625723838806152
    5. 'return' → logprob: -12.500723838806152
    6. '```' → logprob: -12.500723838806152
    7. ' print' → logprob: -16.000722885131836
    8. '        
' → logprob: -16.750722885131836
    9. '  
' → logprob: -17.500722885131836
    10. '       ' → logprob: -17.500722885131836

Token 2479: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.006785232108086348
    2. 'cut' → logprob: -5.8817853927612305
    3. 'atte' → logprob: -7.1317853927612305
    4. 'aller' → logprob: -7.6317853927612305
    5. 'tout' → logprob: -7.6317853927612305
    6. '#' → logprob: -8.00678539276123
    7. 'faire' → logprob: -8.38178539276123
    8. '   ' → logprob: -8.50678539276123
    9. 'connect' → logprob: -8.50678539276123
    10. 'rel' → logprob: -9.25678539276123

Token 2480: ' tous' (ID: 10688)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.07270549237728119
    2. 't' → logprob: -4.197705268859863
    3. '```' → logprob: -4.447705268859863
    4. 'le' → logprob: -4.572705268859863
    5. 'tout' → logprob: -4.572705268859863
    6. '#' → logprob: -4.697705268859863
    7. '   ' → logprob: -5.447705268859863
    8. 'all' → logprob: -5.947705268859863
    9. 'print' → logprob: -6.447705268859863
    10. 'import' → logprob: -6.947705268859863

Token 2481: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.004090508911758661
    2. ' les' → logprob: -5.629090309143066
    3. '   ' → logprob: -8.379090309143066
    4. '#' → logprob: -8.629090309143066
    5. '```' → logprob: -10.754090309143066
    6. 'the' → logprob: -10.879090309143066
    7. '       ' → logprob: -11.754090309143066
    8. 'trees' → logprob: -12.004090309143066
    9. 'le' → logprob: -12.504090309143066
    10. 'l' → logprob: -12.504090309143066

Token 2482: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0007222028798423707
    2. ' arbres' → logprob: -7.500722408294678
    3. '#' → logprob: -9.12572193145752
    4. 'ar' → logprob: -10.25072193145752
    5. 'trees' → logprob: -11.12572193145752
    6. 'ob' → logprob: -12.37572193145752
    7. '
' → logprob: -13.25072193145752
    8. '```' → logprob: -13.50072193145752
    9. '   ' → logprob: -13.75072193145752
    10. 'her' → logprob: -14.62572193145752

Token 2483: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010491237044334412
    2. '
' → logprob: -7.001049041748047
    3. 'print' → logprob: -9.251049041748047
    4. '    
' → logprob: -10.126049041748047
    5. '```' → logprob: -13.876049041748047
    6. 'if' → logprob: -15.751049041748047
    7. '        
' → logprob: -15.751049041748047
    8. ' print' → logprob: -16.126049041748047
    9. ',' → logprob: -16.751049041748047
    10. '  
' → logprob: -17.376049041748047

Token 2484: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01454246323555708
    2. '
' → logprob: -4.264542579650879
    3. 'print' → logprob: -8.389542579650879
    4. '    
' → logprob: -8.889542579650879
    5. '```' → logprob: -11.639542579650879
    6. ',
' → logprob: -13.514542579650879
    7. 'return' → logprob: -13.639542579650879
    8. '
' → logprob: -14.514542579650879
    9. ' print' → logprob: -14.764542579650879
    10. '<|end|>' → logprob: -15.264542579650879

Token 2485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006752071436494589
    2. 'print' → logprob: -5.506752014160156
    3. '
' → logprob: -6.006752014160156
    4. '    
' → logprob: -9.131752014160156
    5. '```' → logprob: -9.631752014160156
    6. 'return' → logprob: -10.381752014160156
    7. 'if' → logprob: -13.006752014160156
    8. ' print' → logprob: -14.881752014160156
    9. '        
' → logprob: -16.131752014160156
    10. '  
' → logprob: -16.256752014160156

Token 2486: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.576170802116394
    2. 'print' → logprob: -0.826170802116394
    3. '```' → logprob: -8.826170921325684
    4. '
' → logprob: -9.576170921325684
    5. 'return' → logprob: -11.701170921325684
    6. '    
' → logprob: -12.076170921325684
    7. ' print' → logprob: -13.951170921325684
    8. '``' → logprob: -16.451169967651367
    9. '#print' → logprob: -16.451169967651367
    10. 'if' → logprob: -16.826169967651367

Token 2487: ' afin' (ID: 22217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3869330585002899
    2. 'print' → logprob: -1.1369330883026123
    3. '```' → logprob: -10.386933326721191
    4. 'return' → logprob: -10.511933326721191
    5. '
' → logprob: -13.261933326721191
    6. ' print' → logprob: -13.761933326721191
    7. '    
' → logprob: -13.886933326721191
    8. '	print' → logprob: -15.761933326721191
    9. '#print' → logprob: -16.386932373046875
    10. '       ' → logprob: -17.886932373046875

Token 2488: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8742794990539551
    2. 'd' → logprob: -1.124279499053955
    3. 'de' → logprob: -1.374279499053955
    4. '#' → logprob: -5.374279499053955
    5. 'que' → logprob: -9.124279022216797
    6. 'def' → logprob: -9.874279022216797
    7. ' de' → logprob: -9.999279022216797
    8. '    ' → logprob: -10.999279022216797
    9. '  ' → logprob: -11.124279022216797
    10. ' d' → logprob: -11.124279022216797

Token 2489: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7355665564537048
    2. 'print' → logprob: -1.3605666160583496
    3. 'la' → logprob: -1.4855666160583496
    4. 'l' → logprob: -4.11056661605835
    5. '   ' → logprob: -4.36056661605835
    6. '#' → logprob: -5.36056661605835
    7. 'les' → logprob: -6.61056661605835
    8. 'n' → logprob: -7.11056661605835
    9. 'sys' → logprob: -7.61056661605835
    10. 'que' → logprob: -7.73556661605835

Token 2490: ' chemin' (ID: 45035)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3940598666667938
    2. 'che' → logprob: -1.2690598964691162
    3. 'n' → logprob: -3.894059896469116
    4. '#' → logprob: -4.894059658050537
    5. 'path' → logprob: -5.519059658050537
    6. 'us' → logprob: -6.019059658050537
    7. 'point' → logprob: -6.269059658050537
    8. '   ' → logprob: -6.519059658050537
    9. ' chemin' → logprob: -7.019059658050537
    10. 'for' → logprob: -7.144059658050537

Token 2491: ' puisse' (ID: 77890)
  Prédit: 'so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'so' → logprob: -0.015090271830558777
    2. '   ' → logprob: -4.390090465545654
    3. '#' → logprob: -6.515090465545654
    4. '       ' → logprob: -7.765090465545654
    5. 'ex' → logprob: -8.890089988708496
    6. 'entre' → logprob: -9.015089988708496
    7. 'p' → logprob: -9.640089988708496
    8. ' soit' → logprob: -9.890089988708496
    9. ' puisse' → logprob: -10.015089988708496
    10. '_so' → logprob: -10.015089988708496

Token 2492: ' ex' (ID: 513)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.03257524222135544
    2. 'être' → logprob: -3.9075751304626465
    3. 'se' → logprob: -4.9075751304626465
    4. '#' → logprob: -6.5325751304626465
    5. 's' → logprob: -6.6575751304626465
    6. 'pass' → logprob: -7.5325751304626465
    7. 'exist' → logprob: -8.157575607299805
    8. 'contin' → logprob: -8.907575607299805
    9. 'rel' → logprob: -9.157575607299805
    10. '   ' → logprob: -9.657575607299805

Token 2493: 'ister' (ID: 1947)
  Prédit: 'tabl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tabl' → logprob: -0.06360188126564026
    2. 'x' → logprob: -3.5636019706726074
    3. 'ister' → logprob: -4.188601970672607
    4. 'tab' → logprob: -4.313601970672607
    5. 'st' → logprob: -6.188601970672607
    6. 'tre' → logprob: -7.063601970672607
    7. '
' → logprob: -7.438601970672607
    8. 't' → logprob: -8.06360149383545
    9. 'table' → logprob: -8.68860149383545
    10. 'stit' → logprob: -9.43860149383545

Token 2494: ' entre' (ID: 3853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004118649754673243
    2. 'print' → logprob: -6.1291184425354
    3. '
' → logprob: -6.3791184425354
    4. '    
' → logprob: -8.629118919372559
    5. '```' → logprob: -10.004118919372559
    6. 'if' → logprob: -11.879118919372559
    7. 'return' → logprob: -13.254118919372559
    8. 'import' → logprob: -14.254118919372559
    9. ' print' → logprob: -15.129118919372559
    10. '        
' → logprob: -15.129118919372559

Token 2495: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005784804932773113
    2. '0' → logprob: -5.63078498840332
    3. ' (' → logprob: -6.13078498840332
    4. ' ' → logprob: -12.88078498840332
    5. 'la' → logprob: -13.63078498840332
    6. '
' → logprob: -13.63078498840332
    7. '```' → logprob: -14.00578498840332
    8. 'le' → logprob: -14.13078498840332
    9. '   ' → logprob: -15.25578498840332
    10. '#' → logprob: -15.63078498840332

Token 2496: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010580566013231874
    2. ' ' → logprob: -7.001058101654053
    3. '(' → logprob: -9.626057624816895
    4. 'H' → logprob: -9.751057624816895
    5. ' (' → logprob: -11.876057624816895
    6. '#' → logprob: -12.751057624816895
    7. '```' → logprob: -12.751057624816895
    8. '
' → logprob: -12.876057624816895
    9. '(H' → logprob: -13.626057624816895
    10. '   ' → logprob: -13.876057624816895

Token 2497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006591808632947505
    2. '0' → logprob: -7.750658988952637
    3. ' ,' → logprob: -9.375658988952637
    4. '   ' → logprob: -10.000658988952637
    5. ',H' → logprob: -10.250658988952637
    6. 'H' → logprob: -10.875658988952637
    7. '-' → logprob: -10.875658988952637
    8. ',-' → logprob: -11.625658988952637
    9. ',
' → logprob: -11.875658988952637
    10. '```' → logprob: -13.125658988952637

Token 2498: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5236508250236511
    2. '0' → logprob: -0.8986508250236511
    3. 'H' → logprob: -7.648650646209717
    4. ' ' → logprob: -11.148651123046875
    5. '   ' → logprob: -11.648651123046875
    6. '
' → logprob: -11.773651123046875
    7. '```' → logprob: -11.898651123046875
    8. 'W' → logprob: -12.273651123046875
    9. '-' → logprob: -12.773651123046875
    10. ',' → logprob: -13.148651123046875

Token 2499: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03259451687335968
    2. ',' → logprob: -3.5325944423675537
    3. 'et' → logprob: -6.282594680786133
    4. ')
' → logprob: -7.907594680786133
    5. ' et' → logprob: -8.657594680786133
    6. ',)' → logprob: -8.657594680786133
    7. ' )' → logprob: -9.157594680786133
    8. '   ' → logprob: -9.282594680786133
    9. ' ,' → logprob: -10.532594680786133
    10. 'and' → logprob: -12.032594680786133

Token 2500: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19170808792114258
    2. ' and' → logprob: -2.5667080879211426
    3. 'and' → logprob: -3.0667080879211426
    4. ' et' → logprob: -3.4417080879211426
    5. 'et' → logprob: -4.316708087921143
    6. '
' → logprob: -6.191708087921143
    7. ',' → logprob: -6.566708087921143
    8. ')' → logprob: -7.441708087921143
    9. ' ' → logprob: -7.566708087921143
    10. '    
' → logprob: -8.316707611083984

Token 2501: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.22551338374614716
    2. ' (' → logprob: -1.6005133390426636
    3. '(' → logprob: -9.475513458251953
    4. '
' → logprob: -10.850513458251953
    5. '(h' → logprob: -13.600513458251953
    6. ' ' → logprob: -13.600513458251953
    7. '   ' → logprob: -14.100513458251953
    8. '（' → logprob: -15.975513458251953
    9. '```' → logprob: -15.975513458251953
    10. '  ' → logprob: -15.975513458251953

Token 2502: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.5275657773017883
    2. '(H' → logprob: -0.9025657773017883
    3. ' (' → logprob: -5.652565956115723
    4. ' H' → logprob: -7.027565956115723
    5. '	H' → logprob: -11.777565956115723
    6. '
' → logprob: -12.027565956115723
    7. '(' → logprob: -12.152565956115723
    8. ')' → logprob: -12.527565956115723
    9. '   ' → logprob: -12.652565956115723
    10. '(h' → logprob: -12.777565956115723

Token 2503: ',W' (ID: 117252)
  Prédit: ',W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',W' → logprob: -0.206875741481781
    2. '-' → logprob: -2.081875801086426
    3. ',' → logprob: -2.831875801086426
    4. ',H' → logprob: -5.831875801086426
    5. ',-' → logprob: -8.331875801086426
    6. ',
' → logprob: -10.956875801086426
    7. '#' → logprob: -11.081875801086426
    8. ' ,' → logprob: -11.581875801086426
    9. 'W' → logprob: -11.581875801086426
    10. ',N' → logprob: -11.831875801086426

Token 2504: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0449218712747097
    2. ')
' → logprob: -3.169921875
    3. '   ' → logprob: -6.794921875
    4. ').' → logprob: -8.044921875
    5. '))
' → logprob: -9.294921875
    6. ')
' → logprob: -9.669921875
    7. '))' → logprob: -9.919921875
    8. '#' → logprob: -10.169921875
    9. ')`' → logprob: -10.169921875
    10. ')

' → logprob: -10.294921875

Token 2505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02414819598197937
    2. 'print' → logprob: -3.7741482257843018
    3. '
' → logprob: -7.274147987365723
    4. '```' → logprob: -9.399147987365723
    5. '    
' → logprob: -9.649147987365723
    6. 'return' → logprob: -10.274147987365723
    7. 'if' → logprob: -10.649147987365723
    8. ' print' → logprob: -13.024147987365723
    9. '``' → logprob: -15.649147987365723
    10. '	print' → logprob: -15.774147987365723

Token 2506: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012982566840946674
    2. 'print' → logprob: -4.512982368469238
    3. '
' → logprob: -6.512982368469238
    4. '    
' → logprob: -8.137982368469238
    5. '```' → logprob: -9.637982368469238
    6. 'if' → logprob: -9.887982368469238
    7. 'return' → logprob: -10.262982368469238
    8. ' print' → logprob: -13.012982368469238
    9. '  
' → logprob: -14.262982368469238
    10. '   
' → logprob: -14.887982368469238

Token 2507: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10120100528001785
    2. 'print' → logprob: -2.351201057434082
    3. '
' → logprob: -7.851201057434082
    4. '```' → logprob: -8.601201057434082
    5. 'return' → logprob: -8.726201057434082
    6. 'if' → logprob: -8.726201057434082
    7. '    
' → logprob: -9.601201057434082
    8. ' print' → logprob: -10.726201057434082
    9. '#' → logprob: -13.601201057434082
    10. '#print' → logprob: -13.851201057434082

Token 2508: ''ex' (ID: 23472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.054089464247226715
    2. '   ' → logprob: -3.5540895462036133
    3. 'ine' → logprob: -4.429089546203613
    4. 'if' → logprob: -5.429089546203613
    5. '#' → logprob: -6.179089546203613
    6. 'return' → logprob: -6.554089546203613
    7. 'og' → logprob: -6.929089546203613
    8. 'import' → logprob: -7.179089546203613
    9. '```' → logprob: -7.804089546203613
    10. 'e' → logprob: -7.929089546203613

Token 2509: 'emple' (ID: 55259)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7440022826194763
    2. '   ' → logprob: -0.9940022826194763
    3. 'if' → logprob: -1.994002342224121
    4. 'port' → logprob: -4.494002342224121
    5. '#' → logprob: -6.244002342224121
    6. 'return' → logprob: -6.494002342224121
    7. 'pression' → logprob: -7.244002342224121
    8. '
' → logprob: -7.369002342224121
    9. 'import' → logprob: -7.494002342224121
    10. '```' → logprob: -7.744002342224121

Token 2510: ' semble' (ID: 42899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2297164797782898
    2. 'print' → logprob: -1.6047165393829346
    3. '#' → logprob: -6.4797163009643555
    4. ')' → logprob: -7.3547163009643555
    5. 'return' → logprob: -7.4797163009643555
    6. '.' → logprob: -7.7297163009643555
    7. '```' → logprob: -8.604716300964355
    8. '=' → logprob: -8.729716300964355
    9. ' print' → logprob: -8.979716300964355
    10. '#
' → logprob: -9.229716300964355

Token 2511: ' ind' (ID: 1383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002474943408742547
    2. '```' → logprob: -6.752474784851074
    3. '   ' → logprob: -7.377474784851074
    4. '#' → logprob: -8.002474784851074
    5. 'return' → logprob: -8.377474784851074
    6. ' print' → logprob: -9.502474784851074
    7. '#print' → logprob: -11.127474784851074
    8. '
' → logprob: -11.627474784851074
    9. '``' → logprob: -12.002474784851074
    10. ')' → logprob: -12.752474784851074

Token 2512: 'iquer' (ID: 63028)
  Prédit: 'iquer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iquer' → logprob: -0.10466489940881729
    2. 'iqué' → logprob: -2.8546648025512695
    3. 'ique' → logprob: -3.7296648025512695
    4. 'iqu' → logprob: -4.1046648025512695
    5. 'iquant' → logprob: -7.9796648025512695
    6. 'ic' → logprob: -8.60466480255127
    7. 'ex' → logprob: -8.97966480255127
    8. 'im' → logprob: -9.10466480255127
    9. 'enter' → logprob: -9.72966480255127
    10. 'icate' → logprob: -9.72966480255127

Token 2513: ' qu' (ID: 474)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00877127330750227
    2. '   ' → logprob: -4.7587714195251465
    3. 'total' → logprob: -9.258770942687988
    4. '#' → logprob: -10.883770942687988
    5. ' print' → logprob: -11.133770942687988
    6. '```' → logprob: -11.508770942687988
    7. '#print' → logprob: -11.758770942687988
    8. 'return' → logprob: -12.258770942687988
    9. 'que' → logprob: -12.883770942687988
    10. '(total' → logprob: -14.258770942687988

Token 2514: ''on' (ID: 25812)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02963198535144329
    2. ' print' → logprob: -4.029632091522217
    3. '   ' → logprob: -4.654632091522217
    4. '#' → logprob: -6.404632091522217
    5. ' on' → logprob: -9.779631614685059
    6. 'return' → logprob: -9.779631614685059
    7. ' #' → logprob: -10.779631614685059
    8. '```' → logprob: -10.904631614685059
    9. 'on' → logprob: -11.154631614685059
    10. 'total' → logprob: -11.279631614685059

Token 2515: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026041671633720398
    2. '#' → logprob: -4.401041507720947
    3. ' print' → logprob: -4.901041507720947
    4. '   ' → logprob: -5.401041507720947
    5. 'return' → logprob: -7.276041507720947
    6. '```' → logprob: -8.651041984558105
    7. '
' → logprob: -9.651041984558105
    8. ' #' → logprob: -9.651041984558105
    9. '_print' → logprob: -9.901041984558105
    10. ' return' → logprob: -9.901041984558105

Token 2516: ' doit' (ID: 21822)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026105321943759918
    2. '   ' → logprob: -4.0261054039001465
    3. '#' → logprob: -5.4011054039001465
    4. 'return' → logprob: -6.4011054039001465
    5. ' print' → logprob: -6.7761054039001465
    6. '
' → logprob: -8.526104927062988
    7. '       ' → logprob: -9.401104927062988
    8. 'continue' → logprob: -9.401104927062988
    9. '```' → logprob: -9.776104927062988
    10. '#print' → logprob: -10.401104927062988

Token 2517: ' couper' (ID: 135212)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5366390943527222
    2. 'pas' → logprob: -0.9116390943527222
    3. ' pas' → logprob: -5.286639213562012
    4. '#' → logprob: -6.036639213562012
    5. 'plus' → logprob: -6.036639213562012
    6. ' print' → logprob: -6.661639213562012
    7. '   ' → logprob: -7.286639213562012
    8. 'return' → logprob: -7.411639213562012
    9. 'im' → logprob: -8.536639213562012
    10. 'import' → logprob: -8.661639213562012

Token 2518: ' que' (ID: 661)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.08953268826007843
    2. 'auc' → logprob: -3.7145326137542725
    3. '#' → logprob: -4.089532852172852
    4. 'plus' → logprob: -4.214532852172852
    5. ' pas' → logprob: -4.589532852172852
    6. '   ' → logprob: -5.839532852172852
    7. 'les' → logprob: -5.839532852172852
    8. 'import' → logprob: -6.089532852172852
    9. '```' → logprob: -6.339532852172852
    10. 'que' → logprob: -6.464532852172852

Token 2519: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.06945734471082687
    2. 'le' → logprob: -3.5694572925567627
    3. 'un' → logprob: -5.194457530975342
    4. '#' → logprob: -5.194457530975342
    5. 'pas' → logprob: -5.319457530975342
    6. 'au' → logprob: -5.444457530975342
    7. 'ce' → logprob: -5.819457530975342
    8. '```' → logprob: -6.069457530975342
    9. ' les' → logprob: -6.194457530975342
    10. 'l' → logprob: -6.319457530975342

Token 2520: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.11382558941841125
    2. 'cases' → logprob: -2.863825559616089
    3. ' arbres' → logprob: -3.488825559616089
    4. '#' → logprob: -4.363825798034668
    5. 'ar' → logprob: -5.863825798034668
    6. 'trees' → logprob: -6.488825798034668
    7. 'print' → logprob: -6.488825798034668
    8. 'import' → logprob: -8.488825798034668
    9. 'che' → logprob: -8.988825798034668
    10. 'for' → logprob: -8.988825798034668

Token 2521: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014619188383221626
    2. '
' → logprob: -4.63961935043335
    3. 'if' → logprob: -6.26461935043335
    4. ')' → logprob: -7.38961935043335
    5. '    
' → logprob: -7.76461935043335
    6. ' if' → logprob: -7.88961935043335
    7. ')
' → logprob: -8.389618873596191
    8. '.' → logprob: -8.514618873596191
    9. '```' → logprob: -8.639618873596191
    10. '#' → logprob: -8.889618873596191

Token 2522: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006604056339710951
    2. '
' → logprob: -5.381604194641113
    3. 'print' → logprob: -6.881604194641113
    4. '    
' → logprob: -7.381604194641113
    5. 'if' → logprob: -8.381604194641113
    6. '<|end|>' → logprob: -10.006604194641113
    7. '```' → logprob: -10.881604194641113
    8. 'return' → logprob: -11.506604194641113
    9. ')' → logprob: -11.881604194641113
    10. '#' → logprob: -11.881604194641113

Token 2523: ' ouvrir' (ID: 113571)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4462761878967285
    2. 'r' → logprob: -1.8212761878967285
    3. 'connect' → logprob: -1.9462761878967285
    4. 'ouvrir' → logprob: -2.4462761878967285
    5. 'que' → logprob: -2.4462761878967285
    6. 'rel' → logprob: -2.8212761878967285
    7. 'cr' → logprob: -2.8212761878967285
    8. 'ét' → logprob: -3.0712761878967285
    9. 'l' → logprob: -3.8212761878967285
    10. 'la' → logprob: -4.1962761878967285

Token 2524: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.42347240447998047
    2. 'le' → logprob: -1.1734724044799805
    3. ' un' → logprob: -3.7984724044799805
    4. '#' → logprob: -4.7984724044799805
    5. ' le' → logprob: -6.5484724044799805
    6. 'l' → logprob: -6.6734724044799805
    7. '```' → logprob: -6.9234724044799805
    8. '   ' → logprob: -7.1734724044799805
    9. 'une' → logprob: -7.9234724044799805
    10. 'la' → logprob: -8.79847240447998

Token 2525: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.3066205084323883
    2. 'pass' → logprob: -1.431620478630066
    3. '#' → logprob: -4.8066205978393555
    4. '```' → logprob: -4.8066205978393555
    5. 'path' → logprob: -5.8066205978393555
    6. '
' → logprob: -6.1816205978393555
    7. ' chemin' → logprob: -6.9316205978393555
    8. ' passage' → logprob: -7.5566205978393555
    9. 'acc' → logprob: -7.6816205978393555
    10. 'sent' → logprob: -8.181620597839355

Token 2526: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08215981721878052
    2. '
' → logprob: -2.7071597576141357
    3. '<|end|>' → logprob: -4.957159996032715
    4. '    
' → logprob: -5.832159996032715
    5. ')' → logprob: -7.082159996032715
    6. 'if' → logprob: -7.582159996032715
    7. '<|end|>' → logprob: -8.707159996032715
    8. '#' → logprob: -8.957159996032715
    9. 'import' → logprob: -9.332159996032715
    10. '```' → logprob: -9.832159996032715

Token 2527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03884483128786087
    2. '#' → logprob: -4.038845062255859
    3. ')' → logprob: -4.163845062255859
    4. '<|end|>' → logprob: -5.913845062255859
    5. '
' → logprob: -6.663845062255859
    6. '    
' → logprob: -7.913845062255859
    7. '```' → logprob: -8.28884506225586
    8. '<|end|>' → logprob: -10.16384506225586
    9. ' but' → logprob: -10.28884506225586
    10. '}' → logprob: -10.28884506225586

Token 2528: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07633665204048157
    2. '#' (adapté à ' #') → logprob: -2.701336622238159
    3. ' but' → logprob: -6.076336860656738
    4. 'but' → logprob: -6.826336860656738
    5. '
' → logprob: -6.951336860656738
    6. 'not' → logprob: -7.451336860656738
    7. ')' → logprob: -7.701336860656738
    8. '```' → logprob: -7.826336860656738
    9. ' not' → logprob: -8.951336860656738
    10. '.' → logprob: -9.201336860656738

Token 2529: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06670039892196655
    2. 'print' → logprob: -2.8167004585266113
    3. '#' → logprob: -5.816700458526611
    4. '
' → logprob: -7.066700458526611
    5. '    
' → logprob: -8.191699981689453
    6. 'if' → logprob: -8.691699981689453
    7. '```' → logprob: -8.691699981689453
    8. '#print' → logprob: -8.941699981689453
    9. ' print' → logprob: -9.816699981689453
    10. 'import' → logprob: -10.441699981689453

Token 2530: ' ici' (ID: 27994)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005419923458248377
    2. '#' → logprob: -6.005419731140137
    3. 'print' → logprob: -6.505419731140137
    4. 'return' → logprob: -6.755419731140137
    5. ' return' → logprob: -9.130419731140137
    6. '
' → logprob: -9.755419731140137
    7. '```' → logprob: -10.130419731140137
    8. ' print' → logprob: -10.630419731140137
    9. '    
' → logprob: -10.880419731140137
    10. ' #' → logprob: -12.005419731140137

Token 2531: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17495284974575043
    2. '#' → logprob: -2.674952745437622
    3. 'print' → logprob: -2.674952745437622
    4. 'return' → logprob: -3.924952745437622
    5. ' return' → logprob: -6.549952983856201
    6. ' print' → logprob: -6.924952983856201
    7. '```' → logprob: -8.299952507019043
    8. ')' → logprob: -9.299952507019043
    9. ' #' → logprob: -10.299952507019043
    10. ' on' → logprob: -10.549952507019043

Token 2532: ' somme' (ID: 64484)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1746160387992859
    2. '   ' → logprob: -2.2996160984039307
    3. 'return' → logprob: -3.6746160984039307
    4. '#' → logprob: -3.7996160984039307
    5. ' print' → logprob: -4.799615859985352
    6. ' return' → logprob: -6.424615859985352
    7. 'continue' → logprob: -7.299615859985352
    8. '#print' → logprob: -7.799615859985352
    9. '```' → logprob: -8.174615859985352
    10. 'import' → logprob: -8.424615859985352

Token 2533: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2039291113615036
    2. '.' → logprob: -3.0789291858673096
    3. '(
' → logprob: -3.3289291858673096
    4. '()' → logprob: -3.5789291858673096
    5. '(total' → logprob: -3.7039291858673096
    6. '   ' → logprob: -4.3289289474487305
    7. 'tout' → logprob: -4.8289289474487305
    8. ')' → logprob: -4.9539289474487305
    9. 'total' → logprob: -5.0789289474487305
    10. 'all' → logprob: -5.7039289474487305

Token 2534: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5966916680335999
    2. 'tout' → logprob: -1.221691608428955
    3. 'all' → logprob: -2.096691608428955
    4. ' toutes' → logprob: -3.721691608428955
    5. '#' → logprob: -5.846691608428955
    6. 'Toutes' → logprob: -7.096691608428955
    7. '```' → logprob: -7.471691608428955
    8. ' all' → logprob: -7.596691608428955
    9. 'for' → logprob: -7.846691608428955
    10. ' toute' → logprob: -8.096692085266113

Token 2535: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.149669349193573
    2. '#' → logprob: -3.0246694087982178
    3. ')' → logprob: -3.1496694087982178
    4. '0' → logprob: -5.149669170379639
    5. 'for' → logprob: -5.274669170379639
    6. '```' → logprob: -5.524669170379639
    7. 'A' → logprob: -5.649669170379639
    8. '.' → logprob: -6.149669170379639
    9. '(i' → logprob: -6.149669170379639
    10. '               ' → logprob: -6.399669170379639

Token 2536: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.3471529483795166
    2. 'cases' → logprob: -1.7221529483795166
    3. ' arbres' → logprob: -2.5971529483795166
    4. 'ar' → logprob: -4.2221527099609375
    5. 'cells' → logprob: -4.3471527099609375
    6. 'trees' → logprob: -5.4721527099609375
    7. 'A' → logprob: -5.5971527099609375
    8. 'cell' → logprob: -6.5971527099609375
    9. 'case' → logprob: -6.7221527099609375
    10. 'i' → logprob: -7.5971527099609375

Token 2537: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04377811774611473
    2. '
' → logprob: -3.54377818107605
    3. '    
' → logprob: -4.293777942657471
    4. '<|end|>' → logprob: -9.543778419494629
    5. ',
' → logprob: -10.293778419494629
    6. ')
' → logprob: -10.668778419494629
    7. 'print' → logprob: -10.668778419494629
    8. ')' → logprob: -10.668778419494629
    9. '```' → logprob: -10.918778419494629
    10. '        
' → logprob: -11.043778419494629

Token 2538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006241364870220423
    2. '
' → logprob: -5.756241321563721
    3. 'print' → logprob: -6.256241321563721
    4. '    
' → logprob: -7.506241321563721
    5. 'if' → logprob: -8.256241798400879
    6. 'return' → logprob: -8.631241798400879
    7. '```' → logprob: -8.881241798400879
    8. '<|end|>' → logprob: -12.631241798400879
    9. '#' → logprob: -13.381241798400879
    10. ')' → logprob: -13.631241798400879

Token 2539: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03747119382023811
    2. 'print' → logprob: -3.412471294403076
    3. 'if' → logprob: -5.787471294403076
    4. '    
' → logprob: -8.162470817565918
    5. 'return' → logprob: -8.537470817565918
    6. '
' → logprob: -9.287470817565918
    7. '#' → logprob: -9.662470817565918
    8. '```' → logprob: -10.162470817565918
    9. ' if' → logprob: -10.412470817565918
    10. ' print' → logprob: -11.412470817565918

Token 2540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001051507773809135
    2. 'print' → logprob: -7.251051425933838
    3. '    
' → logprob: -8.251051902770996
    4. '
' → logprob: -10.501051902770996
    5. 'if' → logprob: -10.626051902770996
    6. 'return' → logprob: -10.626051902770996
    7. '#' → logprob: -13.626051902770996
    8. '```' → logprob: -14.251051902770996
    9. '    
    
' → logprob: -15.001051902770996
    10. '    ' → logprob: -15.001051902770996

Token 2541: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2322351187467575
    2. '   ' → logprob: -1.607235074043274
    3. 'if' → logprob: -5.357234954833984
    4. 'return' → logprob: -6.732234954833984
    5. '#' (adapté à ' #') → logprob: -7.857234954833984
    6. '```' → logprob: -8.607234954833984
    7. '
' → logprob: -8.732234954833984
    8. '    
' → logprob: -9.357234954833984
    9. ' print' → logprob: -10.482234954833984
    10. '#print' → logprob: -11.107234954833984

Token 2542: ' Cependant' (ID: 74480)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08025239408016205
    2. '   ' → logprob: -2.5802524089813232
    3. 'if' → logprob: -6.705252170562744
    4. 'return' → logprob: -9.330252647399902
    5. '```' → logprob: -10.455252647399902
    6. ' print' → logprob: -11.830252647399902
    7. '
' → logprob: -12.205252647399902
    8. '#' → logprob: -12.705252647399902
    9. '    
' → logprob: -12.955252647399902
    10. '#print' → logprob: -14.205252647399902

Token 2543: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004575615283101797
    2. '#' → logprob: -6.754575729370117
    3. 'if' → logprob: -7.129575729370117
    4. 'return' → logprob: -7.254575729370117
    5. 'print' → logprob: -7.504575729370117
    6. ' if' → logprob: -8.004575729370117
    7. '
' → logprob: -8.129575729370117
    8. '    
' → logprob: -8.379575729370117
    9. ')' → logprob: -8.879575729370117
    10. 'import' → logprob: -9.004575729370117

Token 2544: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07744965702295303
    2. 'if' → logprob: -4.327449798583984
    3. ' #' → logprob: -4.577449798583984
    4. 'print' → logprob: -4.702449798583984
    5. 'dist' → logprob: -4.702449798583984
    6. ' =' → logprob: -4.952449798583984
    7. '   ' → logprob: -5.452449798583984
    8. 'return' → logprob: -5.952449798583984
    9. '#
' → logprob: -6.077449798583984
    10. 'def' → logprob: -6.077449798583984

Token 2545: 'emple' (ID: 55259)
  Prédit: 'planation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'planation' → logprob: -0.4447386860847473
    2. '   ' → logprob: -1.4447386264801025
    3. 'cept' → logprob: -3.9447386264801025
    4. 'if' → logprob: -4.069738864898682
    5. 'plain' → logprob: -4.069738864898682
    6. 'print' → logprob: -4.194738864898682
    7. '#' → logprob: -4.444738864898682
    8. 'cerpt' → logprob: -4.569738864898682
    9. '```' → logprob: -5.069738864898682
    10. 'pected' → logprob: -5.819738864898682

Token 2546: ' ne' (ID: 453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025047551840543747
    2. ')' → logprob: -4.525047779083252
    3. '#' → logprob: -5.525047779083252
    4. 'print' → logprob: -5.775047779083252
    5. 'return' → logprob: -6.900047779083252
    6. ':' → logprob: -7.275047779083252
    7. 'if' → logprob: -7.275047779083252
    8. 'import' → logprob: -7.400047779083252
    9. '
' → logprob: -7.650047779083252
    10. '.' → logprob: -7.775047779083252

Token 2547: ' coupe' (ID: 71780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0670420303940773
    2. '#' → logprob: -4.442041873931885
    3. ' print' → logprob: -4.442041873931885
    4. '   ' → logprob: -4.442041873931885
    5. ')' → logprob: -4.817041873931885
    6. 'return' → logprob: -5.067041873931885
    7. 'import' → logprob: -6.067041873931885
    8. '```' → logprob: -6.317041873931885
    9. ' +=' → logprob: -6.442041873931885
    10. ' return' → logprob: -6.692041873931885

Token 2548: ' pas' (ID: 2173)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.259316086769104
    2. ' seulement' → logprob: -1.884316086769104
    3. ' pas' → logprob: -2.1343159675598145
    4. '   ' → logprob: -2.1343159675598145
    5. 'pas' → logprob: -2.2593159675598145
    6. '```' → logprob: -3.2593159675598145
    7. ' uniquement' → logprob: -3.5093159675598145
    8. '.' → logprob: -3.8843159675598145
    9. '()' → logprob: -4.1343159675598145
    10. ',' → logprob: -4.6343159675598145

Token 2549: ' tous' (ID: 10688)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4525355100631714
    2. 'print' → logprob: -1.7025355100631714
    3. 'pas' → logprob: -1.9525355100631714
    4. '   ' → logprob: -2.202535629272461
    5. ')' → logprob: -3.327535629272461
    6. ' pas' → logprob: -3.327535629272461
    7. '```' → logprob: -3.452535629272461
    8. 'all' → logprob: -3.577535629272461
    9. ':' → logprob: -3.827535629272461
    10. '()' → logprob: -4.202535629272461

Token 2550: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1568523645401001
    2. '#' → logprob: -2.5318522453308105
    3. '```' → logprob: -4.1568522453308105
    4. ')' → logprob: -4.4068522453308105
    5. '()
' → logprob: -5.0318522453308105
    6. '.' → logprob: -5.0318522453308105
    7. '()' → logprob: -5.5318522453308105
    8. '_' → logprob: -5.7818522453308105
    9. ':' → logprob: -6.0318522453308105
    10. '_possible' → logprob: -6.6568522453308105

Token 2551: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.011978328227996826
    2. ' arbres' → logprob: -4.6369781494140625
    3. '#' → logprob: -6.5119781494140625
    4. 'ar' → logprob: -7.8869781494140625
    5. 'trees' → logprob: -8.386978149414062
    6. '```' → logprob: -10.011978149414062
    7. 'for' → logprob: -10.136978149414062
    8. ' #' → logprob: -12.136978149414062
    9. 'import' → logprob: -12.261978149414062
    10. 'her' → logprob: -12.511978149414062

Token 2552: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0630732923746109
    2. '
' → logprob: -3.0630733966827393
    3. '    
' → logprob: -4.93807315826416
    4. 'print' → logprob: -5.68807315826416
    5. 'if' → logprob: -5.81307315826416
    6. 'return' → logprob: -8.18807315826416
    7. ')' → logprob: -9.18807315826416
    8. '#' → logprob: -9.18807315826416
    9. ' if' → logprob: -9.43807315826416
    10. '

' → logprob: -9.81307315826416

Token 2553: ' certains' (ID: 30681)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016489893198013306
    2. ')' → logprob: -4.8914899826049805
    3. '
' → logprob: -5.7664899826049805
    4. '    
' → logprob: -5.8914899826049805
    5. 'return' → logprob: -7.0164899826049805
    6. '#' → logprob: -7.3914899826049805
    7. 'if' → logprob: -8.14148998260498
    8. ')
' → logprob: -8.14148998260498
    9. 'print' → logprob: -8.26648998260498
    10. ' if' → logprob: -8.76648998260498

Token 2554: ' laissant' (ID: 156706)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24037185311317444
    2. '#' → logprob: -1.990371823310852
    3. '
' → logprob: -4.2403717041015625
    4. ' if' → logprob: -4.4903717041015625
    5. ' #' → logprob: -4.6153717041015625
    6. 'if' → logprob: -4.6153717041015625
    7. ')' → logprob: -4.9903717041015625
    8. 'import' → logprob: -5.3653717041015625
    9. '#
' → logprob: -5.6153717041015625
    10. '<|end|>' → logprob: -6.2403717041015625

Token 2555: ' passer' (ID: 27727)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.33468514680862427
    2. 'le' → logprob: -2.4596850872039795
    3. 'pass' → logprob: -3.4596850872039795
    4. '```' → logprob: -3.4596850872039795
    5. '#' → logprob: -3.7096850872039795
    6. 'l' → logprob: -3.7096850872039795
    7. 'place' → logprob: -4.209685325622559
    8. 'une' → logprob: -4.209685325622559
    9. 's' → logprob: -4.959685325622559
    10. 'int' → logprob: -5.084685325622559

Token 2556: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02900814265012741
    2. 'return' → logprob: -4.904007911682129
    3. '#' → logprob: -5.029007911682129
    4. 'print' → logprob: -5.404007911682129
    5. '.' → logprob: -6.529007911682129
    6. '...' → logprob: -6.529007911682129
    7. ')' → logprob: -6.529007911682129
    8. '```' → logprob: -6.529007911682129
    9. ' return' → logprob: -7.404007911682129
    10. '    
' → logprob: -7.404007911682129

Token 2557: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.9671733379364014
    2. 'pass' → logprob: -1.3421733379364014
    3. ' passage' → logprob: -2.0921733379364014
    4. '#' → logprob: -2.4671733379364014
    5. '```' → logprob: -2.8421733379364014
    6. 'possible' → logprob: -3.9671733379364014
    7. ' chemin' → logprob: -4.5921735763549805
    8. 'temps' → logprob: -4.8421735763549805
    9. 's' → logprob: -5.0921735763549805
    10. 'd' → logprob: -5.2171735763549805

Token 2558: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03891076147556305
    2. '
' → logprob: -3.5389108657836914
    3. '    
' → logprob: -4.913910865783691
    4. 'if' → logprob: -6.663910865783691
    5. '#' → logprob: -8.663910865783691
    6. '```' → logprob: -9.413910865783691
    7. ' if' → logprob: -10.038910865783691
    8. 'print' → logprob: -10.163910865783691
    9. 'import' → logprob: -10.288910865783691
    10. 'return' → logprob: -10.663910865783691

Token 2559: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5250003337860107
    2. '#' → logprob: -0.9000003337860107
    3. ' but' → logprob: -7.65000057220459
    4. 'but' → logprob: -7.65000057220459
    5. ' #' → logprob: -8.65000057220459
    6. ')' → logprob: -8.77500057220459
    7. '#
' → logprob: -8.90000057220459
    8. '
' → logprob: -9.15000057220459
    9. '```' → logprob: -9.52500057220459
    10. 'not' → logprob: -9.65000057220459

Token 2560: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5249565243721008
    2. '#' (adapté à ' #') → logprob: -0.8999565243721008
    3. ')' → logprob: -7.524956703186035
    4. '
' → logprob: -8.024956703186035
    5. 'but' → logprob: -8.774956703186035
    6. '    
' → logprob: -8.899956703186035
    7. ' #' → logprob: -9.149956703186035
    8. 'return' → logprob: -9.149956703186035
    9. '```' → logprob: -9.399956703186035
    10. ' but' → logprob: -9.524956703186035

Token 2561: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5396244525909424
    2. 'print' → logprob: -0.9146244525909424
    3. 'return' → logprob: -5.039624214172363
    4. '#' → logprob: -5.164624214172363
    5. ' print' → logprob: -6.289624214172363
    6. '
' → logprob: -7.039624214172363
    7. 'if' → logprob: -7.914624214172363
    8. ')' → logprob: -8.414624214172363
    9. ' return' → logprob: -8.539624214172363
    10. '```' → logprob: -8.539624214172363

Token 2562: ' notre' (ID: 12092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03171870857477188
    2. 'return' → logprob: -4.406718730926514
    3. 'print' → logprob: -4.781718730926514
    4. '#' → logprob: -4.906718730926514
    5. ')' → logprob: -6.281718730926514
    6. ' return' → logprob: -7.031718730926514
    7. ' print' → logprob: -8.906718254089355
    8. '
' → logprob: -8.906718254089355
    9. '```' → logprob: -9.906718254089355
    10. '    
' → logprob: -10.281718254089355

Token 2563: ' méthode' (ID: 71490)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.2415851354599
    2. ' code' → logprob: -1.6165851354599
    3. '#' → logprob: -1.8665851354599
    4. 'return' → logprob: -2.4915852546691895
    5. ' #' → logprob: -2.6165852546691895
    6. '   ' → logprob: -2.7415852546691895
    7. ' total' → logprob: -2.8665852546691895
    8. 'total' → logprob: -3.9915852546691895
    9. 'print' → logprob: -4.1165852546691895
    10. ' print' → logprob: -4.4915852546691895

Token 2564: ' consiste' (ID: 46504)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002438331488519907
    2. ')' → logprob: -6.877438545227051
    3. 'print' → logprob: -7.502438545227051
    4. '#' → logprob: -8.50243854522705
    5. 'return' → logprob: -8.50243854522705
    6. '<|end|>' → logprob: -8.87743854522705
    7. '.' → logprob: -9.50243854522705
    8. ' return' → logprob: -10.25243854522705
    9. 'import' → logprob: -10.50243854522705
    10. '    
' → logprob: -10.62743854522705

Token 2565: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.8560768365859985
    2. '   ' → logprob: -0.9810768365859985
    3. 'à' → logprob: -2.106076717376709
    4. ' to' → logprob: -4.106076717376709
    5. 'to' → logprob: -4.106076717376709
    6. '```' → logprob: -4.856076717376709
    7. ')' → logprob: -5.231076717376709
    8. '<|end|>' → logprob: -5.481076717376709
    9. 'import' → logprob: -5.606076717376709
    10. ' just' → logprob: -5.981076717376709

Token 2566: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010784220648929477
    2. '#' → logprob: -7.2510786056518555
    3. '```' → logprob: -8.626078605651855
    4. 'return' → logprob: -9.501078605651855
    5. 'cut' → logprob: -10.251078605651855
    6. 'im' → logprob: -10.501078605651855
    7. ' print' → logprob: -11.126078605651855
    8. 'prendre' → logprob: -12.001078605651855
    9. '#print' → logprob: -12.126078605651855
    10. 'import' → logprob: -12.376078605651855

Token 2567: ' couper' (ID: 135212)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.618846595287323
    2. 'pas' → logprob: -1.4938466548919678
    3. '#' → logprob: -1.6188466548919678
    4. 'import' → logprob: -4.868846416473389
    5. 'pass' → logprob: -4.993846416473389
    6. ' pas' → logprob: -4.993846416473389
    7. '```' → logprob: -5.368846416473389
    8. 'prendre' → logprob: -5.618846416473389
    9. ' print' → logprob: -5.743846416473389
    10. 'cut' → logprob: -6.868846416473389

Token 2568: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.4133416712284088
    2. 'pas' → logprob: -1.4133416414260864
    3. 'se' → logprob: -3.538341760635376
    4. '#' → logprob: -3.538341760635376
    5. ' que' → logprob: -3.913341760635376
    6. '       ' → logprob: -5.288341522216797
    7. '   ' → logprob: -5.538341522216797
    8. '```' → logprob: -5.788341522216797
    9. 'import' → logprob: -6.163341522216797
    10. 'qu' → logprob: -7.788341522216797

Token 2569: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.3663980960845947
    2. ' les' → logprob: -1.4913980960845947
    3. ' celles' → logprob: -1.7413980960845947
    4. 'import' → logprob: -1.8663980960845947
    5. 'print' → logprob: -2.7413980960845947
    6. '#' → logprob: -3.6163980960845947
    7. ' ceux' → logprob: -3.6163980960845947
    8. '```' → logprob: -4.741397857666016
    9. '<|end|>' → logprob: -4.741397857666016
    10. 'pas' → logprob: -4.991397857666016

Token 2570: ' arbres' (ID: 127011)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.766768217086792
    2. 'arb' → logprob: -1.641768217086792
    3. 'import' → logprob: -1.891768217086792
    4. 'print' → logprob: -2.266768217086792
    5. '```' → logprob: -3.641768217086792
    6. ' arbres' → logprob: -3.891768217086792
    7. 'trees' → logprob: -5.016768455505371
    8. ' cases' → logprob: -5.516768455505371
    9. '#' → logprob: -5.516768455505371
    10. 'ar' → logprob: -5.641768455505371

Token 2571: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004128030501306057
    2. '
' → logprob: -6.5041279792785645
    3. 'if' → logprob: -6.8791279792785645
    4. ')' → logprob: -7.3791279792785645
    5. 'import' → logprob: -7.7541279792785645
    6. '    
' → logprob: -8.879128456115723
    7. ' if' → logprob: -9.379128456115723
    8. '```' → logprob: -9.754128456115723
    9. 'def' → logprob: -10.004128456115723
    10. 'print' → logprob: -10.129128456115723

Token 2572: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012724950909614563
    2. '
' → logprob: -4.512724876403809
    3. '<|end|>' → logprob: -7.262724876403809
    4. '    
' → logprob: -7.387724876403809
    5. ')' → logprob: -9.012724876403809
    6. 'if' → logprob: -9.512724876403809
    7. '<|end|>' → logprob: -10.387724876403809
    8. '```' → logprob: -10.637724876403809
    9. ')
' → logprob: -10.887724876403809
    10. '.' → logprob: -11.262724876403809

Token 2573: ' rapport' (ID: 20847)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06239594146609306
    2. 'return' → logprob: -3.1873960494995117
    3. '```' → logprob: -4.437396049499512
    4. ' print' → logprob: -6.562396049499512
    5. 'continue' → logprob: -6.687396049499512
    6. '#' → logprob: -7.187396049499512
    7. '   ' → logprob: -7.312396049499512
    8. 'ret' → logprob: -7.562396049499512
    9. 'continu' → logprob: -7.937396049499512
    10. 'import' → logprob: -8.062396049499512

Token 2574: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12469574809074402
    2. ')' → logprob: -2.7496957778930664
    3. ')
' → logprob: -3.3746957778930664
    4. ' à' → logprob: -5.499695777893066
    5. ' with' → logprob: -5.624695777893066
    6. '```' → logprob: -5.749695777893066
    7. 'with' → logprob: -6.124695777893066
    8. ' avec' → logprob: -6.374695777893066
    9. ' =' → logprob: -7.374695777893066
    10. '=' → logprob: -7.749695777893066

Token 2575: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5580913424491882
    2. '```' → logprob: -2.183091402053833
    3. 'le' → logprob: -2.433091402053833
    4. ')' → logprob: -3.183091402053833
    5. ' la' → logprob: -3.808091402053833
    6. 'return' → logprob: -3.808091402053833
    7. 'la' → logprob: -4.058091163635254
    8. '()' → logprob: -4.183091163635254
    9. 'total' → logprob: -4.683091163635254
    10. 'au' → logprob: -4.683091163635254

Token 2576: '
' (ID: 198)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.6955251693725586
    2. 'return' → logprob: -1.9455251693725586
    3. '
' → logprob: -2.0705251693725586
    4. 'le' → logprob: -2.1955251693725586
    5. 'une' → logprob: -2.4455251693725586
    6. 'un' → logprob: -3.0705251693725586
    7. 'sys' → logprob: -3.4455251693725586
    8. '```' → logprob: -3.4455251693725586
    9. 'continue' → logprob: -3.5705251693725586
    10. 'import' → logprob: -3.5705251693725586

Token 2577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3044247329235077
    2. 'une' → logprob: -2.30442476272583
    3. 'import' → logprob: -3.42942476272583
    4. 'un' → logprob: -3.92942476272583
    5. 'la' → logprob: -3.92942476272583
    6. '
' → logprob: -4.42942476272583
    7. '```' → logprob: -4.42942476272583
    8. 'le' → logprob: -4.67942476272583
    9. '#' → logprob: -5.05442476272583
    10. ' ' → logprob: -5.55442476272583

Token 2578: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3226460218429565
    2. 'la' → logprob: -1.6976460218429565
    3. '#' (adapté à ' #') → logprob: -1.9476460218429565
    4. 'une' → logprob: -2.447646141052246
    5. 'le' → logprob: -3.697646141052246
    6. 'un' → logprob: -3.697646141052246
    7. '
' → logprob: -3.822646141052246
    8. 'def' → logprob: -3.822646141052246
    9. 'mis' → logprob: -3.822646141052246
    10. 'import' → logprob: -3.947646141052246

Token 2579: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2985514402389526
    2. 'le' → logprob: -2.298551559448242
    3. '#' → logprob: -2.423551559448242
    4. 'une' → logprob: -2.798551559448242
    5. 'import' → logprob: -2.923551559448242
    6. 'b' → logprob: -3.048551559448242
    7. 'un' → logprob: -3.048551559448242
    8. '```' → logprob: -3.298551559448242
    9. 'print' → logprob: -3.423551559448242
    10. '
' → logprob: -3.548551559448242

Token 2580: ' distance' (ID: 9324)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.593718409538269
    2. 'dist' → logprob: -1.593718409538269
    3. 'distance' → logprob: -2.0937185287475586
    4. 'B' → logprob: -3.7187185287475586
    5. 'che' → logprob: -4.343718528747559
    6. 'plus' → logprob: -4.718718528747559
    7. 'min' → logprob: -4.718718528747559
    8. '#' → logprob: -4.968718528747559
    9. '```' → logprob: -4.968718528747559
    10. 'suite' → logprob: -5.468718528747559

Token 2581: ' minimale' (ID: 143217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16314822435379028
    2. '
' → logprob: -1.9131481647491455
    3. 'print' → logprob: -6.288148403167725
    4. '    
' → logprob: -7.663148403167725
    5. 'if' → logprob: -7.788148403167725
    6. ')
' → logprob: -10.038147926330566
    7. ')' → logprob: -10.413147926330566
    8. ' if' → logprob: -10.663147926330566
    9. '```' → logprob: -10.663147926330566
    10. '<|end|>' → logprob: -11.413147926330566

Token 2582: ' via' (ID: 4493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09384897351264954
    2. '
' → logprob: -2.593848943710327
    3. 'print' → logprob: -4.343849182128906
    4. 'if' → logprob: -6.718849182128906
    5. '    
' → logprob: -7.593849182128906
    6. '```' → logprob: -9.218849182128906
    7. ' if' → logprob: -11.218849182128906
    8. ' print' → logprob: -12.093849182128906
    9. '<|end|>' → logprob: -12.093849182128906
    10. 'return' → logprob: -12.343849182128906

Token 2583: ' cases' (ID: 7911)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8176921010017395
    2. 'cases' → logprob: -1.3176920413970947
    3. 'une' → logprob: -2.0676920413970947
    4. 'des' → logprob: -3.1926920413970947
    5. 'dist' → logprob: -3.5676920413970947
    6. '#' → logprob: -3.6926920413970947
    7. 'la' → logprob: -3.8176920413970947
    8. 'un' → logprob: -3.8176920413970947
    9. '```' → logprob: -5.067692279815674
    10. 'l' → logprob: -5.317692279815674

Token 2584: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014965442940592766
    2. '
' → logprob: -4.389965534210205
    3. 'if' → logprob: -6.639965534210205
    4. 'print' → logprob: -7.639965534210205
    5. '    
' → logprob: -8.264965057373047
    6. ' if' → logprob: -8.889965057373047
    7. '```' → logprob: -9.014965057373047
    8. ')
' → logprob: -10.139965057373047
    9. ',
' → logprob: -10.764965057373047
    10. ')' → logprob: -11.014965057373047

Token 2585: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.014343898743391037
    2. 'ar' → logprob: -4.264343738555908
    3. ' arbres' → logprob: -8.764344215393066
    4. ' arbre' → logprob: -11.139344215393066
    5. '```' → logprob: -12.139344215393066
    6. '#' → logprob: -13.764344215393066
    7. '   ' → logprob: -14.764344215393066
    8. 'for' → logprob: -14.764344215393066
    9. '
' → logprob: -15.014344215393066
    10. 'trees' → logprob: -15.139344215393066

Token 2586: ' adj' (ID: 20251)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004996428731828928
    2. 'print' → logprob: -5.879996299743652
    3. 'if' → logprob: -6.879996299743652
    4. '
' → logprob: -7.129996299743652
    5. '    
' → logprob: -8.129996299743652
    6. '```' → logprob: -9.879996299743652
    7. ' if' → logprob: -12.379996299743652
    8. '#' → logprob: -12.879996299743652
    9. 'return' → logprob: -13.004996299743652
    10. 'import' → logprob: -14.004996299743652

Token 2587: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.006875448860228062
    2. 'acent' → logprob: -5.631875514984131
    3. 'centes' → logprob: -6.631875514984131
    4. '
' → logprob: -7.131875514984131
    5. 'acency' → logprob: -7.506875514984131
    6. 'c' → logprob: -8.631875038146973
    7. '```' → logprob: -9.381875038146973
    8. '   ' → logprob: -9.506875038146973
    9. 'cente' → logprob: -9.506875038146973
    10. 'jac' → logprob: -10.506875038146973

Token 2588: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.01279956940561533
    2. 'ent' → logprob: -5.1377997398376465
    3. 'ente' → logprob: -5.2627997398376465
    4. 'ents' → logprob: -6.5127997398376465
    5. 'centes' → logprob: -9.762799263000488
    6. '
' → logprob: -10.637799263000488
    7. '#' → logprob: -11.137799263000488
    8. 'antes' → logprob: -11.137799263000488
    9. 'cent' → logprob: -11.387799263000488
    10. 'es' → logprob: -11.887799263000488

Token 2589: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012562740594148636
    2. '
' → logprob: -4.6375627517700195
    3. 'print' → logprob: -7.2625627517700195
    4. '<|end|>' → logprob: -7.2625627517700195
    5. '    
' → logprob: -7.6375627517700195
    6. ')' → logprob: -7.6375627517700195
    7. 'if' → logprob: -8.38756275177002
    8. ')
' → logprob: -10.13756275177002
    9. 'return' → logprob: -10.26256275177002
    10. '#' → logprob: -10.76256275177002

Token 2590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036631335970014334
    2. '
' → logprob: -6.003663063049316
    3. '    
' → logprob: -7.253663063049316
    4. 'print' → logprob: -8.253663063049316
    5. 'if' → logprob: -9.128663063049316
    6. '```' → logprob: -9.503663063049316
    7. 'return' → logprob: -10.378663063049316
    8. ' if' → logprob: -14.128663063049316
    9. '<|end|>' → logprob: -14.253663063049316
    10. '    
    
' → logprob: -14.628663063049316

Token 2591: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07171634584665298
    2. 'print' → logprob: -2.82171630859375
    3. 'if' → logprob: -4.94671630859375
    4. '
' → logprob: -6.69671630859375
    5. 'return' → logprob: -7.19671630859375
    6. '    
' → logprob: -7.94671630859375
    7. '```' → logprob: -8.69671630859375
    8. '#' (adapté à ' #') → logprob: -9.82171630859375
    9. 'result' → logprob: -11.44671630859375
    10. 'import' → logprob: -12.44671630859375

Token 2592: ' Or' (ID: 2604)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.679796040058136
    2. '   ' → logprob: -0.804796040058136
    3. 'if' → logprob: -3.304795980453491
    4. 'return' → logprob: -5.17979621887207
    5. '#' → logprob: -6.55479621887207
    6. '```' → logprob: -7.42979621887207
    7. '
' → logprob: -7.55479621887207
    8. '    
' → logprob: -7.92979621887207
    9. 'import' → logprob: -8.05479621887207
    10. 'result' → logprob: -9.05479621887207

Token 2593: ' l' (ID: 305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9700581431388855
    2. 'print' → logprob: -1.2200582027435303
    3. 'if' → logprob: -1.8450582027435303
    4. '   ' → logprob: -2.5950582027435303
    5. 'import' → logprob: -2.7200582027435303
    6. '
' → logprob: -4.845057964324951
    7. 'dist' → logprob: -5.595057964324951
    8. 'min' → logprob: -5.845057964324951
    9. 'possible' → logprob: -6.095057964324951
    10. 'distance' → logprob: -6.470057964324951

Token 2594: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4378376007080078
    2. 'print' → logprob: -1.5628376007080078
    3. 'if' → logprob: -1.8128376007080078
    4. 'return' → logprob: -1.9378376007080078
    5. 'dist' → logprob: -2.437837600708008
    6. '   ' → logprob: -3.312837600708008
    7. '
' → logprob: -3.562837600708008
    8. 'import' → logprob: -3.937837600708008
    9. 'for' → logprob: -4.187837600708008
    10. ' return' → logprob: -4.937837600708008

Token 2595: 'én' (ID: 3289)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7161896228790283
    2. 'if' → logprob: -0.9661896228790283
    3. 'return' → logprob: -2.3411896228790283
    4. ' if' → logprob: -4.591189384460449
    5. 'import' → logprob: -5.091189384460449
    6. '   ' → logprob: -5.216189384460449
    7. 'result' → logprob: -5.841189384460449
    8. ' print' → logprob: -6.091189384460449
    9. '
' → logprob: -6.466189384460449
    10. ' return' → logprob: -6.466189384460449

Token 2596: 'oncé' (ID: 59071)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9220753312110901
    2. '   ' → logprob: -1.6720752716064453
    3. 'e' → logprob: -2.2970752716064453
    4. '_
' → logprob: -2.2970752716064453
    5. '#' → logprob: -2.9220752716064453
    6. '
' → logprob: -3.1720752716064453
    7. 'if' → logprob: -4.297075271606445
    8. 'é' → logprob: -4.547075271606445
    9. '```' → logprob: -4.797075271606445
    10. '#
' → logprob: -5.047075271606445

Token 2597: ' demande' (ID: 26737)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10800579935312271
    2. ':' → logprob: -3.3580057621002197
    3. ')' → logprob: -3.7330057621002197
    4. 'def' → logprob: -4.858006000518799
    5. ':
' → logprob: -5.108006000518799
    6. '
' → logprob: -5.108006000518799
    7. '#' → logprob: -5.233006000518799
    8. 'import' → logprob: -5.358006000518799
    9. 'if' → logprob: -6.108006000518799
    10. '):' → logprob: -6.733006000518799

Token 2598: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.321052223443985
    2. '   ' → logprob: -1.3210521936416626
    3. 'return' → logprob: -5.321052074432373
    4. ' print' → logprob: -5.946052074432373
    5. '```' → logprob: -9.321052551269531
    6. ' return' → logprob: -9.696052551269531
    7. '    
' → logprob: -10.946052551269531
    8. '
' → logprob: -11.071052551269531
    9. '	print' → logprob: -11.321052551269531
    10. 'import' → logprob: -11.446052551269531

Token 2599: ' temps' (ID: 11160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.362307223957032e-05
    2. '```' → logprob: -10.375073432922363
    3. ' print' → logprob: -11.125073432922363
    4. '   ' → logprob: -11.125073432922363
    5. 'total' → logprob: -12.250073432922363
    6. 'return' → logprob: -12.625073432922363
    7. '
' → logprob: -13.625073432922363
    8. '#' → logprob: -13.750073432922363
    9. 'temps' → logprob: -14.250073432922363
    10. 'minimum' → logprob: -14.750073432922363

Token 2600: ' minimal' (ID: 19957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046943919733166695
    2. '
' → logprob: -6.00469446182251
    3. 'print' → logprob: -6.25469446182251
    4. 'if' → logprob: -8.879693984985352
    5. '    
' → logprob: -8.879693984985352
    6. 'import' → logprob: -12.629693984985352
    7. '```' → logprob: -13.129693984985352
    8. 'return' → logprob: -13.254693984985352
    9. ' if' → logprob: -13.504693984985352
    10. 'def' → logprob: -13.629693984985352

Token 2601: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048903342336416245
    2. 'print' → logprob: -3.673903226852417
    3. '
' → logprob: -3.923903226852417
    4. 'if' → logprob: -6.423903465270996
    5. '    
' → logprob: -7.673903465270996
    6. 'return' → logprob: -8.798903465270996
    7. ')' → logprob: -9.423903465270996
    8. 'import' → logprob: -9.548903465270996
    9. ')
' → logprob: -10.298903465270996
    10. '#' → logprob: -10.423903465270996

Token 2602: ' permettre' (ID: 55483)
  Prédit: 'rel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rel' → logprob: -0.9364160895347595
    2. 'r' → logprob: -1.1864161491394043
    3. 'connect' → logprob: -1.6864161491394043
    4. 'ét' → logprob: -3.8114161491394043
    5. 'que' → logprob: -4.061416149139404
    6. 'cr' → logprob: -4.186416149139404
    7. 'ouvrir' → logprob: -4.186416149139404
    8. 'se' → logprob: -4.436416149139404
    9. 'qu' → logprob: -5.186416149139404
    10. 'd' → logprob: -5.561416149139404

Token 2603: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.122063398361206
    2. 'la' → logprob: -1.872063398361206
    3. 'l' → logprob: -1.997063398361206
    4. 'd' → logprob: -1.997063398361206
    5. 'de' → logprob: -2.122063398361206
    6. 'le' → logprob: -2.247063398361206
    7. '#' → logprob: -4.497063636779785
    8. 'une' → logprob: -5.247063636779785
    9. 'au' → logprob: -6.372063636779785
    10. '       ' → logprob: -6.372063636779785

Token 2604: ' connexion' (ID: 81575)
  Prédit: 'connexion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connexion' → logprob: -0.14200951159000397
    2. 'pass' → logprob: -2.1420094966888428
    3. 'conn' → logprob: -5.142009735107422
    4. 'connection' → logprob: -5.517009735107422
    5. 'cré' → logprob: -6.517009735107422
    6. 'navigation' → logprob: -7.267009735107422
    7. 'connect' → logprob: -7.517009735107422
    8. 'cir' → logprob: -7.892009735107422
    9. 'communication' → logprob: -8.142009735107422
    10. 'exist' → logprob: -8.267009735107422

Token 2605: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034872867166996
    2. '
' → logprob: -3.7848727703094482
    3. '    
' → logprob: -5.034873008728027
    4. 'if' → logprob: -6.159873008728027
    5. '#' → logprob: -6.284873008728027
    6. 'import' → logprob: -7.659873008728027
    7. 'print' → logprob: -8.909873008728027
    8. 'return' → logprob: -9.909873008728027
    9. 'def' → logprob: -10.034873008728027
    10. ')' → logprob: -10.159873008728027

Token 2606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00522474804893136
    2. '    
' → logprob: -5.880224704742432
    3. '
' → logprob: -7.130224704742432
    4. 'if' → logprob: -7.505224704742432
    5. 'import' → logprob: -7.505224704742432
    6. '#' → logprob: -8.38022518157959
    7. 'reachable' → logprob: -9.25522518157959
    8. 'print' → logprob: -9.75522518157959
    9. '```' → logprob: -10.38022518157959
    10. 'return' → logprob: -10.88022518157959

Token 2607: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029410814866423607
    2. 'if' → logprob: -4.2794108390808105
    3. '
' → logprob: -4.6544108390808105
    4. '    
' → logprob: -6.1544108390808105
    5. '#' → logprob: -6.9044108390808105
    6. '```' → logprob: -7.6544108390808105
    7. 'reachable' → logprob: -7.9044108390808105
    8. 'return' → logprob: -7.9044108390808105
    9. 'print' → logprob: -8.154410362243652
    10. 'possible' → logprob: -8.779410362243652

Token 2608: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01430137362331152
    2. 'if' → logprob: -4.889301300048828
    3. 'print' → logprob: -5.639301300048828
    4. 'return' → logprob: -6.764301300048828
    5. '```' → logprob: -7.264301300048828
    6. '
' → logprob: -7.639301300048828
    7. 'result' → logprob: -7.889301300048828
    8. '    
' → logprob: -8.014301300048828
    9. ' if' → logprob: -10.639301300048828
    10. '#' → logprob: -11.264301300048828

Token 2609: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034897157456725836
    2. 'if' → logprob: -6.5034894943237305
    3. '    
' → logprob: -7.0034894943237305
    4. '#' (adapté à ' #') → logprob: -8.12848949432373
    5. '
' → logprob: -8.50348949432373
    6. '```' → logprob: -8.75348949432373
    7. 'import' → logprob: -9.12848949432373
    8. 'return' → logprob: -9.25348949432373
    9. 'dist' → logprob: -9.87848949432373
    10. 'possible' → logprob: -10.12848949432373

Token 2610: ' Comme' (ID: 53252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438328862190247
    2. 'print' → logprob: -2.69938325881958
    3. 'if' → logprob: -5.82438325881958
    4. '```' → logprob: -7.19938325881958
    5. 'return' → logprob: -8.074383735656738
    6. '
' → logprob: -8.324383735656738
    7. '    
' → logprob: -8.824383735656738
    8. '#' → logprob: -11.324383735656738
    9. ' if' → logprob: -12.324383735656738
    10. ' print' → logprob: -12.699383735656738

Token 2611: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6257385015487671
    2. ' print' → logprob: -1.000738501548767
    3. 'dist' → logprob: -3.2507386207580566
    4. ' dist' → logprob: -3.3757386207580566
    5. '   ' → logprob: -3.8757386207580566
    6. ' sys' → logprob: -6.750738620758057
    7. ' total' → logprob: -6.750738620758057
    8. 'total' → logprob: -7.875738620758057
    9. ' not' → logprob: -8.375738143920898
    10. 'sys' → logprob: -8.500738143920898

Token 2612: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.5785856246948242
    2. 'sys' → logprob: -1.7035856246948242
    3. 'la' → logprob: -1.8285856246948242
    4. 'l' → logprob: -2.328585624694824
    5. '#' → logprob: -2.703585624694824
    6. '   ' → logprob: -2.703585624694824
    7. 'une' → logprob: -2.828585624694824
    8. 'len' → logprob: -2.953585624694824
    9. 'les' → logprob: -3.078585624694824
    10. 'print' → logprob: -4.203585624694824

Token 2613: ''ex' (ID: 23472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3113423585891724
    2. '#' → logprob: -1.8113423585891724
    3. 'main' → logprob: -2.061342239379883
    4. 'suite' → logprob: -2.311342239379883
    5. 'code' → logprob: -2.436342239379883
    6. '```' → logprob: -2.811342239379883
    7. 'def' → logprob: -2.936342239379883
    8. 'return' → logprob: -3.561342239379883
    9. '   ' → logprob: -3.811342239379883
    10. 'print' → logprob: -4.061342239379883

Token 2614: 'emple' (ID: 55259)
  Prédit: 'cerpt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cerpt' → logprob: -1.24845290184021
    2. 'planation' → logprob: -1.49845290184021
    3. 'print' → logprob: -1.87345290184021
    4. 'cept' → logprob: -2.12345290184021
    5. '   ' → logprob: -3.24845290184021
    6. 'it' → logprob: -3.37345290184021
    7. '```' → logprob: -3.49845290184021
    8. 'if' → logprob: -3.62345290184021
    9. '#' → logprob: -4.248453140258789
    10. 'continue' → logprob: -4.748453140258789

Token 2615: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004859546199440956
    2. '
' → logprob: -5.879859447479248
    3. '    
' → logprob: -7.254859447479248
    4. 'if' → logprob: -7.379859447479248
    5. 'print' → logprob: -8.129859924316406
    6. 'return' → logprob: -9.629859924316406
    7. '#' → logprob: -9.629859924316406
    8. ')' → logprob: -9.754859924316406
    9. ' if' → logprob: -9.754859924316406
    10. '```' → logprob: -10.004859924316406

Token 2616: '2' (ID: 17)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09797518700361252
    2. 'if' → logprob: -3.097975254058838
    3. 'print' → logprob: -3.347975254058838
    4. 'return' → logprob: -4.972975254058838
    5. '```' → logprob: -6.347975254058838
    6. ':' → logprob: -6.472975254058838
    7. ' if' → logprob: -6.847975254058838
    8. ':
' → logprob: -7.222975254058838
    9. '
' → logprob: -8.34797477722168
    10. '#' → logprob: -8.59797477722168

Token 2617: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.174724742770195
    2. ':' → logprob: -1.9247246980667114
    3. ':
' → logprob: -5.049724578857422
    4. ',' → logprob: -5.799724578857422
    5. '
' → logprob: -6.799724578857422
    6. 'if' → logprob: -7.299724578857422
    7. '():
' → logprob: -7.549724578857422
    8. '```' → logprob: -7.674724578857422
    9. '#' → logprob: -7.799724578857422
    10. '(' → logprob: -8.049724578857422

Token 2618: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17625808715820312
    2. '3' → logprob: -3.051258087158203
    3. 'W' → logprob: -3.176258087158203
    4. '#' → logprob: -3.426258087158203
    5. 'la' → logprob: -4.301258087158203
    6. ' la' → logprob: -5.176258087158203
    7. ' W' → logprob: -5.551258087158203
    8. ' #' → logprob: -5.801258087158203
    9. '```' → logprob: -5.926258087158203
    10. ' ' → logprob: -6.051258087158203

Token 2619: '3' (ID: 18)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6041184067726135
    2. '#' → logprob: -1.7291183471679688
    3. '   ' → logprob: -1.7291183471679688
    4. 'print' → logprob: -3.7291183471679688
    5. '3' → logprob: -4.229118347167969
    6. 'if' → logprob: -4.354118347167969
    7. 'len' → logprob: -4.854118347167969
    8. '0' → logprob: -5.354118347167969
    9. 'not' → logprob: -5.604118347167969
    10. '1' → logprob: -5.604118347167969

Token 2620: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017335088923573494
    2. ':' → logprob: -5.517334938049316
    3. '
' → logprob: -5.517334938049316
    4. 'if' → logprob: -5.892334938049316
    5. ':
' → logprob: -5.892334938049316
    6. '```' → logprob: -6.517334938049316
    7. '#' → logprob: -7.517334938049316
    8. ' if' → logprob: -7.892334938049316
    9. '    
' → logprob: -8.267334938049316
    10. ',' → logprob: -8.392334938049316

Token 2621: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005906161852180958
    2. 'print' → logprob: -5.755906105041504
    3. 'if' → logprob: -6.880906105041504
    4. '```' → logprob: -7.380906105041504
    5. '
' → logprob: -8.005906105041504
    6. ' if' → logprob: -8.130906105041504
    7. 'return' → logprob: -8.255906105041504
    8. '    
' → logprob: -9.380906105041504
    9. ' print' → logprob: -10.130906105041504
    10. ' return' → logprob: -10.755906105041504

Token 2622: ' ne' (ID: 453)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16947133839130402
    2. '   ' → logprob: -2.169471263885498
    3. '#' → logprob: -3.669471263885498
    4. 'return' → logprob: -5.294471263885498
    5. '
' → logprob: -5.794471263885498
    6. ' print' → logprob: -5.794471263885498
    7. 'if' → logprob: -6.294471263885498
    8. '```' → logprob: -6.544471263885498
    9. '    
' → logprob: -8.169471740722656
    10. 'continue' → logprob: -8.294471740722656

Token 2623: ' coupe' (ID: 71780)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005234356038272381
    2. '#' → logprob: -6.380234241485596
    3. 'return' → logprob: -6.630234241485596
    4. '   ' → logprob: -7.630234241485596
    5. 'pe' → logprob: -8.130234718322754
    6. '
' → logprob: -8.505234718322754
    7. '_print' → logprob: -8.505234718322754
    8. ' print' → logprob: -8.505234718322754
    9. 'do' → logprob: -8.505234718322754
    10. '```' → logprob: -8.505234718322754

Token 2624: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.8342798948287964
    2. ' que' → logprob: -0.9592798948287964
    3. ' pas' → logprob: -2.459280014038086
    4. '```' → logprob: -3.584280014038086
    5. 'que' → logprob: -4.209280014038086
    6. ' seulement' → logprob: -4.209280014038086
    7. '   ' → logprob: -4.709280014038086
    8. 'import' → logprob: -4.959280014038086
    9. ' uniquement' → logprob: -5.584280014038086
    10. '_pas' → logprob: -5.709280014038086

Token 2625: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4164179265499115
    2. 'if' → logprob: -2.2914178371429443
    3. '```' → logprob: -2.7914178371429443
    4. '#' → logprob: -2.9164178371429443
    5. 'print' → logprob: -2.9164178371429443
    6. 'return' → logprob: -4.041418075561523
    7. ' if' → logprob: -4.416418075561523
    8. 'def' → logprob: -5.416418075561523
    9. 'import' → logprob: -5.541418075561523
    10. '
' → logprob: -5.666418075561523

Token 2626: ' les' (ID: 1341)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6372925043106079
    2. ':' → logprob: -1.262292504310608
    3. '```' → logprob: -2.7622923851013184
    4. ':
' → logprob: -3.6372923851013184
    5. '_' → logprob: -3.8872923851013184
    6. '#' → logprob: -4.387292385101318
    7. '       ' → logprob: -4.762292385101318
    8. '\' → logprob: -5.012292385101318
    9. ')' → logprob: -5.262292385101318
    10. ',' → logprob: -5.387292385101318

Token 2627: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.07263310998678207
    2. ' arbres' → logprob: -3.0726330280303955
    3. '#' → logprob: -4.822633266448975
    4. 'ar' → logprob: -4.947633266448975
    5. '```' → logprob: -5.572633266448975
    6. 'l' → logprob: -6.947633266448975
    7. 'che' → logprob: -6.947633266448975
    8. '   ' → logprob: -7.072633266448975
    9. 'trees' → logprob: -7.447633266448975
    10. 'cases' → logprob: -7.822633266448975

Token 2628: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09304530918598175
    2. '
' → logprob: -2.593045234680176
    3. '    
' → logprob: -4.843045234680176
    4. 'if' → logprob: -6.218045234680176
    5. 'import' → logprob: -6.718045234680176
    6. '#' → logprob: -6.718045234680176
    7. '```' → logprob: -6.968045234680176
    8. 'def' → logprob: -8.593045234680176
    9. ' if' → logprob: -8.843045234680176
    10. '

' → logprob: -9.843045234680176

Token 2629: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3952353596687317
    2. '#' → logprob: -1.270235300064087
    3. '
' → logprob: -3.895235300064087
    4. 'return' → logprob: -4.895235538482666
    5. 'mais' → logprob: -5.145235538482666
    6. ' mais' → logprob: -6.020235538482666
    7. '```' → logprob: -6.020235538482666
    8. 'print' → logprob: -6.145235538482666
    9. 'but' → logprob: -6.895235538482666
    10. ' #' → logprob: -7.270235538482666

Token 2630: ' ceux' (ID: 26863)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.049944113940000534
    2. '   ' → logprob: -3.4249441623687744
    3. 'import' → logprob: -5.924943923950195
    4. ' #' → logprob: -5.924943923950195
    5. '```' → logprob: -6.049943923950195
    6. '       ' → logprob: -6.174943923950195
    7. 'print' → logprob: -7.174943923950195
    8. 'le' → logprob: -7.299943923950195
    9. 'la' → logprob: -7.424943923950195
    10. ' la' → logprob: -7.924943923950195

Token 2631: ' indispensables' (ID: 163237)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8423980474472046
    2. '```' → logprob: -1.5923980474472046
    3. '[i' → logprob: -2.592398166656494
    4. '#' → logprob: -2.967398166656494
    5. '_needed' → logprob: -2.967398166656494
    6. ' nécessaires' → logprob: -3.342398166656494
    7. '[' → logprob: -3.717398166656494
    8. '_' → logprob: -3.842398166656494
    9. '[
' → logprob: -4.717398166656494
    10. ' qui' → logprob: -4.717398166656494

Token 2632: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1984167844057083
    2. '
' → logprob: -2.1984167098999023
    3. 'import' → logprob: -3.4484167098999023
    4. 'from' → logprob: -3.8234167098999023
    5. '#' → logprob: -4.823416709899902
    6. '    
' → logprob: -5.698416709899902
    7. '```' → logprob: -6.448416709899902
    8. 'def' → logprob: -7.698416709899902
    9. 'if' → logprob: -8.073416709899902
    10. 'dist' → logprob: -8.323416709899902

Token 2633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04492460936307907
    2. '
' → logprob: -3.66992449760437
    3. 'import' → logprob: -5.169924736022949
    4. 'from' → logprob: -5.169924736022949
    5. '    
' → logprob: -5.919924736022949
    6. '#' → logprob: -6.044924736022949
    7. 'reachable' → logprob: -7.294924736022949
    8. '```' → logprob: -7.419924736022949
    9. 'if' → logprob: -8.66992473602295
    10. 'dist' → logprob: -9.16992473602295

Token 2634: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06325112283229828
    2. '
' → logprob: -3.06325101852417
    3. '    
' → logprob: -4.68825101852417
    4. '```' → logprob: -5.68825101852417
    5. 'import' → logprob: -7.18825101852417
    6. '#' → logprob: -7.18825101852417
    7. 'from' → logprob: -9.188251495361328
    8. '``' → logprob: -9.688251495361328
    9. 'reachable' → logprob: -10.063251495361328
    10. '        
' → logprob: -10.688251495361328

Token 2635: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029331985861063004
    2. '
' → logprob: -4.404332160949707
    3. '#' → logprob: -5.779332160949707
    4. '```' → logprob: -5.779332160949707
    5. 'import' → logprob: -5.904332160949707
    6. 'reachable' → logprob: -6.154332160949707
    7. '    
' → logprob: -6.654332160949707
    8. 'if' → logprob: -6.779332160949707
    9. 'from' → logprob: -7.029332160949707
    10. 'return' → logprob: -7.779332160949707

Token 2636: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05493847653269768
    2. '#' (adapté à ' #') → logprob: -3.554938554763794
    3. 'import' → logprob: -5.179938316345215
    4. 'reachable' → logprob: -5.429938316345215
    5. 'if' → logprob: -5.929938316345215
    6. '
' → logprob: -6.179938316345215
    7. 'from' → logprob: -6.179938316345215
    8. 'dist' → logprob: -6.554938316345215
    9. '```' → logprob: -6.679938316345215
    10. '    
' → logprob: -6.679938316345215

Token 2637: ' Donc' (ID: 88837)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4107187986373901
    2. '   ' → logprob: -1.4107187986373901
    3. 'import' → logprob: -1.5357187986373901
    4. 'from' → logprob: -1.7857187986373901
    5. 'reachable' → logprob: -3.0357189178466797
    6. 'visited' → logprob: -3.5357189178466797
    7. 'dist' → logprob: -4.41071891784668
    8. 'min' → logprob: -5.16071891784668
    9. 'return' → logprob: -5.16071891784668
    10. 'if' → logprob: -5.53571891784668

Token 2638: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22076547145843506
    2. '   ' → logprob: -2.2207655906677246
    3. 'import' → logprob: -2.5957655906677246
    4. 'from' → logprob: -4.970765590667725
    5. '
' → logprob: -6.220765590667725
    6. 'visited' → logprob: -6.345765590667725
    7. 'dist' → logprob: -6.345765590667725
    8. '```' → logprob: -7.720765590667725
    9. 'reachable' → logprob: -7.845765590667725
    10. 'distance' → logprob: -8.095765113830566

Token 2639: ' faut' (ID: 17821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2604152262210846
    2. '#' → logprob: -1.6354151964187622
    3. ' #' → logprob: -4.260415077209473
    4. ' n' → logprob: -5.260415077209473
    5. 'import' → logprob: -5.260415077209473
    6. ' reste' → logprob: -5.885415077209473
    7. 'est' → logprob: -7.260415077209473
    8. 'def' → logprob: -7.260415077209473
    9. '
' → logprob: -7.260415077209473
    10. ' =' → logprob: -7.385415077209473

Token 2640: ' trouver' (ID: 23195)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6170027852058411
    2. '   ' → logprob: -0.9920027852058411
    3. '#' → logprob: -2.8670027256011963
    4. 'from' → logprob: -3.8670027256011963
    5. '```' → logprob: -5.492002964019775
    6. 'faire' → logprob: -6.367002964019775
    7. 'contin' → logprob: -6.617002964019775
    8. 'return' → logprob: -6.992002964019775
    9. '
' → logprob: -7.617002964019775
    10. 'def' → logprob: -7.742002964019775

Token 2641: ' quels' (ID: 109092)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.2851345539093018
    2. 'import' → logprob: -1.5351345539093018
    3. ' un' → logprob: -1.9101345539093018
    4. '   ' → logprob: -2.2851345539093018
    5. '```' → logprob: -2.4101345539093018
    6. 'une' → logprob: -2.6601345539093018
    7. '#' → logprob: -3.0351345539093018
    8. 'le' → logprob: -4.035134315490723
    9. 'from' → logprob: -4.785134315490723
    10. 'les' → logprob: -5.285134315490723

Token 2642: ' arbres' (ID: 127011)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8618654012680054
    2. '#' → logprob: -1.8618654012680054
    3. '```' → logprob: -2.236865520477295
    4. ' arbres' → logprob: -2.361865520477295
    5. ' chemins' → logprob: -3.111865520477295
    6. ' voisins' → logprob: -4.111865520477295
    7. 'che' → logprob: -4.236865520477295
    8. 'i' → logprob: -4.486865520477295
    9. ' #' → logprob: -4.611865520477295
    10. 'cases' → logprob: -4.861865520477295

Token 2643: ' sont' (ID: 5242)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2644: ' sur' (ID: 1512)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9887367486953735
    2. 'import' → logprob: -1.7387367486953735
    3. 'à' → logprob: -1.9887367486953735
    4. ' à' → logprob: -2.738736629486084
    5. 'né' → logprob: -2.988736629486084
    6. ' nécessaires' → logprob: -2.988736629486084
    7. 'necess' → logprob: -3.613736629486084
    8. 'ess' → logprob: -3.738736629486084
    9. ' indispensables' → logprob: -4.113736629486084
    10. 'c' → logprob: -4.238736629486084

Token 2645: ' "' (ID: 392)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.45922207832336426
    2. ' le' → logprob: -1.2092220783233643
    3. ' un' → logprob: -3.5842220783233643
    4. 'un' → logprob: -3.9592220783233643
    5. ' la' → logprob: -4.959221839904785
    6. 'la' → logprob: -5.334221839904785
    7. 'les' → logprob: -5.834221839904785
    8. ' ' → logprob: -5.834221839904785
    9. '   ' → logprob: -6.709221839904785
    10. ' les' → logprob: -6.834221839904785

Token 2646: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.10458963364362717
    2. 'un' → logprob: -2.4795897006988525
    3. ' le' → logprob: -4.729589462280273
    4. 'les' → logprob: -6.104589462280273
    5. ' un' → logprob: -6.479589462280273
    6. '```' → logprob: -6.604589462280273
    7. 'la' → logprob: -6.729589462280273
    8. ''un' → logprob: -9.229589462280273
    9. 'l' → logprob: -9.979589462280273
    10. 'leur' → logprob: -10.354589462280273

Token 2647: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.05328923463821411
    2. ' chemin' → logprob: -3.6782891750335693
    3. 'plus' → logprob: -4.803289413452148
    4. '```' → logprob: -4.803289413452148
    5. ' plus' → logprob: -5.428289413452148
    6. '_che' → logprob: -6.178289413452148
    7. ' ' → logprob: -7.053289413452148
    8. 'chem' → logprob: -7.053289413452148
    9. 's' → logprob: -8.053289413452148
    10. 'traj' → logprob: -8.428289413452148

Token 2648: ' minimal' (ID: 19957)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0435535907745361
    2. '_possible' → logprob: -1.5435535907745361
    3. '```' → logprob: -1.6685535907745361
    4. '"' → logprob: -2.418553590774536
    5. '
' → logprob: -3.918553590774536
    6. ' _' → logprob: -4.418553352355957
    7. '   ' → logprob: -4.793553352355957
    8. 's' → logprob: -4.793553352355957
    9. '#' → logprob: -4.918553352355957
    10. ' vers' → logprob: -5.168553352355957

Token 2649: '",' (ID: 672)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04667726159095764
    2. '```' → logprob: -4.796677112579346
    3. '_possible' → logprob: -4.921677112579346
    4. '"' → logprob: -5.046677112579346
    5. '_between' → logprob: -5.296677112579346
    6. ' _' → logprob: -5.921677112579346
    7. '_
' → logprob: -6.046677112579346
    8. '_to' → logprob: -6.296677112579346
    9. '_path' → logprob: -6.421677112579346
    10. '_de' → logprob: -7.296677112579346

Token 2650: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02631736546754837
    2. '
' → logprob: -4.151317596435547
    3. '    
' → logprob: -4.776317596435547
    4. ' 
' → logprob: -7.526317596435547
    5. '#' → logprob: -7.651317596435547
    6. '```' → logprob: -8.901317596435547
    7. ' #' → logprob: -9.401317596435547
    8. '\' → logprob: -9.901317596435547
    9. '"' → logprob: -9.901317596435547
    10. 'import' → logprob: -10.026317596435547

Token 2651: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6271242499351501
    2. 'ar' → logprob: -2.252124309539795
    3. 'ont' → logprob: -2.252124309539795
    4. '   ' → logprob: -2.377124309539795
    5. '```' → logprob: -3.252124309539795
    6. 'e' → logprob: -3.752124309539795
    7. ''est' → logprob: -4.252124309539795
    8. '
' → logprob: -4.252124309539795
    9. '       ' → logprob: -5.002124309539795
    10. '#
' → logprob: -5.127124309539795

Token 2652: ' un' (ID: 537)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8481706380844116
    2. '-à' → logprob: -1.0981706380844116
    3. '   ' → logprob: -2.098170757293701
    4. ' à' → logprob: -2.598170757293701
    5. '#' → logprob: -3.848170757293701
    6. '```' → logprob: -4.723170757293701
    7. '       ' → logprob: -5.723170757293701
    8. '    ' → logprob: -6.348170757293701
    9. 'une' → logprob: -7.348170757293701
    10. 'possible' → logprob: -7.598170757293701

Token 2653: ' problème' (ID: 35630)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0498682260513306
    2. '```' → logprob: -1.7998682260513306
    3. ' problème' → logprob: -2.049868106842041
    4. 'graph' → logprob: -2.174868106842041
    5. ' graph' → logprob: -2.799868106842041
    6. ' #' → logprob: -3.549868106842041
    7. 'd' → logprob: -3.674868106842041
    8. '
' → logprob: -3.799868106842041
    9. 'à' → logprob: -4.049868106842041
    10. 's' → logprob: -5.049868106842041

Token 2654: ' de' (ID: 334)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1700228452682495
    2. '   ' → logprob: -1.6700228452682495
    3. '#' → logprob: -1.7950228452682495
    4. '<|end|>' → logprob: -2.295022964477539
    5. '_' → logprob: -2.795022964477539
    6. 'import' → logprob: -3.170022964477539
    7. '
' → logprob: -3.545022964477539
    8. '.' → logprob: -4.170022964477539
    9. ',' → logprob: -4.670022964477539
    10. '       ' → logprob: -4.670022964477539

Token 2655: ' "' (ID: 392)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5182968378067017
    2. '```' → logprob: -2.143296718597412
    3. 'plus' → logprob: -2.268296718597412
    4. 'gr' → logprob: -2.393296718597412
    5. '#' → logprob: -4.018296718597412
    6. 'che' → logprob: -4.393296718597412
    7. 'import' → logprob: -4.768296718597412
    8. 'd' → logprob: -4.893296718597412
    9. 'cou' → logprob: -4.893296718597412
    10. 'path' → logprob: -5.018296718597412

Token 2656: 'plus' (ID: 11601)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8338139653205872
    2. 'graph' → logprob: -1.0838139057159424
    3. 'che' → logprob: -3.0838139057159424
    4. 'path' → logprob: -3.7088139057159424
    5. 'paths' → logprob: -3.9588139057159424
    6. 'cut' → logprob: -4.0838141441345215
    7. 'plus' → logprob: -4.2088141441345215
    8. '#' → logprob: -4.4588141441345215
    9. 'import' → logprob: -4.4588141441345215
    10. 'd' → logprob: -4.4588141441345215

Token 2657: ' court' (ID: 10314)
  Prédit: 'court'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'court' → logprob: -0.1685982197523117
    2. ' court' → logprob: -1.9185981750488281
    3. '```' → logprob: -5.168598175048828
    4. 'short' → logprob: -7.293598175048828
    5. 'import' → logprob: -7.418598175048828
    6. 'cour' → logprob: -7.668598175048828
    7. '_short' → logprob: -8.418598175048828
    8. ' courts' → logprob: -8.543598175048828
    9. '_' → logprob: -8.793598175048828
    10. 'ieurs' → logprob: -10.418598175048828

Token 2658: ' chemin' (ID: 45035)
  Prédit: '_che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_che' → logprob: -0.06194627657532692
    2. '_' → logprob: -3.311946392059326
    3. '_path' → logprob: -4.061946392059326
    4. 'che' → logprob: -5.561946392059326
    5. '```' → logprob: -7.186946392059326
    6. ' chemin' → logprob: -7.561946392059326
    7. '_tr' → logprob: -8.061945915222168
    8. '_distance' → logprob: -8.436945915222168
    9. 'path' → logprob: -8.936945915222168
    10. ' _' → logprob: -9.061945915222168

Token 2659: '"
' (ID: 1092)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9599277973175049
    2. '_' → logprob: -2.084927797317505
    3. '```' → logprob: -2.084927797317505
    4. '_possible' → logprob: -2.209927797317505
    5. '_between' → logprob: -2.584927797317505
    6. '_path' → logprob: -2.709927797317505
    7. '
' → logprob: -3.084927797317505
    8. '_to' → logprob: -3.584927797317505
    9. '_from' → logprob: -3.834927797317505
    10. '_b' → logprob: -4.209927558898926

Token 2660: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0340140238404274
    2. '
' → logprob: -5.0340142250061035
    3. '```' → logprob: -5.4090142250061035
    4. ',' → logprob: -5.5340142250061035
    5. 'import' → logprob: -5.6590142250061035
    6. '#' → logprob: -5.9090142250061035
    7. 'from' → logprob: -6.2840142250061035
    8. ',
' → logprob: -6.6590142250061035
    9. ':' → logprob: -6.7840142250061035
    10. ')' → logprob: -6.9090142250061035

Token 2661: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21991115808486938
    2. ',' → logprob: -3.2199110984802246
    3. '_' → logprob: -3.7199110984802246
    4. ':' → logprob: -3.8449110984802246
    5. '#' (adapté à ' #') → logprob: -4.219911098480225
    6. '
' → logprob: -4.469911098480225
    7. ')' → logprob: -4.594911098480225
    8. ' ' → logprob: -4.969911098480225
    9. '```' → logprob: -5.094911098480225
    10. '.' → logprob: -5.469911098480225

Token 2662: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024850454181432724
    2. 'import' → logprob: -4.899850368499756
    3. '#' → logprob: -5.399850368499756
    4. '
' → logprob: -5.649850368499756
    5. ')' → logprob: -6.149850368499756
    6. '    
' → logprob: -6.649850368499756
    7. '"' → logprob: -7.399850368499756
    8. 'from' → logprob: -7.399850368499756
    9. ',' → logprob: -7.524850368499756
    10. '\' → logprob: -7.649850368499756

Token 2663: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2607583999633789
    2. 'le' → logprob: -1.885758399963379
    3. 'une' → logprob: -2.885758399963379
    4. 'graph' → logprob: -4.885758399963379
    5. 'l' → logprob: -5.385758399963379
    6. 'la' → logprob: -6.135758399963379
    7. ' un' → logprob: -6.635758399963379
    8. 'les' → logprob: -6.635758399963379
    9. 'gr' → logprob: -6.635758399963379
    10. '```' → logprob: -6.760758399963379

Token 2664: ' grille' (ID: 99153)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6390905380249023
    2. 'gr' → logprob: -1.5140905380249023
    3. 'weighted' → logprob: -2.6390905380249023
    4. ' graph' → logprob: -2.8890905380249023
    5. ' weighted' → logprob: -3.5140905380249023
    6. 'import' → logprob: -4.014090538024902
    7. '#' → logprob: -4.389090538024902
    8. ' grid' → logprob: -4.764090538024902
    9. 'grid' → logprob: -4.764090538024902
    10. '```' → logprob: -5.139090538024902

Token 2665: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05465318262577057
    2. 'import' → logprob: -3.5546531677246094
    3. '
' → logprob: -4.179653167724609
    4. 'from' → logprob: -5.179653167724609
    5. '    
' → logprob: -6.554653167724609
    6. '#' → logprob: -6.804653167724609
    7. '```' → logprob: -8.05465316772461
    8. 'def' → logprob: -9.05465316772461
    9. ',' → logprob: -9.05465316772461
    10. ',
' → logprob: -9.55465316772461

Token 2666: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.8196088671684265
    2. ' chaque' → logprob: -1.0696089267730713
    3. 'on' → logprob: -2.4446089267730713
    4. 'le' → logprob: -2.9446089267730713
    5. ' les' → logprob: -3.5696089267730713
    6. ' on' → logprob: -3.9446089267730713
    7. '#' → logprob: -4.069608688354492
    8. ' le' → logprob: -5.444608688354492
    9. 'l' → logprob: -5.819608688354492
    10. 'la' → logprob: -6.694608688354492

Token 2667: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.8207494020462036
    2. '#' → logprob: -2.070749282836914
    3. 'co' → logprob: -2.195749282836914
    4. 'cout' → logprob: -3.195749282836914
    5. 'arb' → logprob: -3.445749282836914
    6. ' cases' → logprob: -3.695749282836914
    7. 'dist' → logprob: -3.820749282836914
    8. ' distances' → logprob: -4.070749282836914
    9. ' arbres' → logprob: -4.070749282836914
    10. 'ar' → logprob: -4.195749282836914

Token 2668: ' avec' (ID: 3937)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avec' → logprob: -1.0470092296600342
    2. 'sans' → logprob: -1.0470092296600342
    3. 's' → logprob: -2.672009229660034
    4. 'à' → logprob: -2.672009229660034
    5. ' avec' → logprob: -3.297009229660034
    6. ' à' → logprob: -3.672009229660034
    7. ' sans' → logprob: -3.672009229660034
    8. '```' → logprob: -4.422009468078613
    9. 'ont' → logprob: -4.672009468078613
    10. '   ' → logprob: -4.672009468078613

Token 2669: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.35143131017684937
    2. ' arbres' → logprob: -1.3514313697814941
    3. ' des' → logprob: -3.851431369781494
    4. 'des' → logprob: -4.601431369781494
    5. 'ar' → logprob: -5.976431369781494
    6. '   ' → logprob: -6.976431369781494
    7. ' arbre' → logprob: -7.476431369781494
    8. 'for' → logprob: -7.476431369781494
    9. ' ' → logprob: -7.976431369781494
    10. '```' → logprob: -8.351430892944336

Token 2670: ' ont' (ID: 4930)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6653982400894165
    2. ' ou' → logprob: -1.7903982400894165
    3. ' avec' → logprob: -2.165398120880127
    4. '   ' → logprob: -2.915398120880127
    5. ' =' → logprob: -2.915398120880127
    6. ' et' → logprob: -2.915398120880127
    7. ' sont' → logprob: -3.165398120880127
    8. '```' → logprob: -3.165398120880127
    9. 's' → logprob: -3.540398120880127
    10. ' à' → logprob: -3.665398120880127

Token 2671: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.42949002981185913
    2. 'un' → logprob: -1.054490089416504
    3. ''un' → logprob: -7.804490089416504
    4. 'co' → logprob: -9.554490089416504
    5. '_un' → logprob: -9.929490089416504
    6. 'une' → logprob: -9.929490089416504
    7. ' des' → logprob: -10.804490089416504
    8. '```' → logprob: -10.804490089416504
    9. ' coût' → logprob: -10.804490089416504
    10. ')' → logprob: -11.054490089416504

Token 2672: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -1.0423574447631836
    2. 'cost' → logprob: -1.4173574447631836
    3. 'co' → logprob: -2.0423574447631836
    4. ' cost' → logprob: -2.9173574447631836
    5. 'cout' → logprob: -2.9173574447631836
    6. ' poids' → logprob: -2.9173574447631836
    7. 'weight' → logprob: -3.5423574447631836
    8. ' weight' → logprob: -3.7923574447631836
    9. ' cout' → logprob: -3.9173574447631836
    10. 'c' → logprob: -4.292357444763184

Token 2673: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.149908423423767
    2. 'import' → logprob: -1.399908423423767
    3. '
' → logprob: -2.0249085426330566
    4. ',' → logprob: -2.5249085426330566
    5. ',
' → logprob: -3.5249085426330566
    6. '```' → logprob: -3.7749085426330566
    7. '#' → logprob: -4.024908542633057
    8. ' =' → logprob: -4.399908542633057
    9. ')' → logprob: -4.524908542633057
    10. '+' → logprob: -4.524908542633057

Token 2674: ' couper' (ID: 135212)
  Prédit: 'payer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'payer' → logprob: -0.5431140065193176
    2. 'aj' → logprob: -1.1681139469146729
    3. 'prendre' → logprob: -3.543113946914673
    4. 'pass' → logprob: -3.918113946914673
    5. 'part' → logprob: -4.293114185333252
    6. '
' → logprob: -4.418114185333252
    7. 'p' → logprob: -5.168114185333252
    8. 'pay' → logprob: -5.168114185333252
    9. 'penser' → logprob: -5.793114185333252
    10. 'entr' → logprob: -5.793114185333252

Token 2675: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19074860215187073
    2. 'import' → logprob: -1.9407485723495483
    3. 'from' → logprob: -4.565748691558838
    4. '
' → logprob: -4.815748691558838
    5. '#' → logprob: -4.940748691558838
    6. ',' → logprob: -7.065748691558838
    7. '    
' → logprob: -7.815748691558838
    8. '```' → logprob: -7.815748691558838
    9. '+' → logprob: -8.06574821472168
    10. ',
' → logprob: -8.19074821472168

Token 2676: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009896212257444859
    2. 'import' → logprob: -5.009896278381348
    3. '
' → logprob: -6.384896278381348
    4. '    
' → logprob: -7.509896278381348
    5. '#' → logprob: -8.759896278381348
    6. '       ' → logprob: -8.759896278381348
    7. 'from' → logprob: -8.884896278381348
    8. 'weight' → logprob: -9.134896278381348
    9. '```' → logprob: -9.384896278381348
    10. ',' → logprob: -10.259896278381348

Token 2677: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07759207487106323
    2. 'import' → logprob: -2.827592134475708
    3. 'from' → logprob: -4.577591896057129
    4. '
' → logprob: -6.452591896057129
    5. '#' → logprob: -7.077591896057129
    6. '    
' → logprob: -7.827591896057129
    7. 'weight' → logprob: -8.202591896057129
    8. '```' → logprob: -8.202591896057129
    9. 'cost' → logprob: -8.577591896057129
    10. '+' → logprob: -8.702591896057129

Token 2678: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009649370796978474
    2. 'import' → logprob: -4.884649276733398
    3. '
' → logprob: -7.884649276733398
    4. '```' → logprob: -8.134649276733398
    5. '#' → logprob: -8.384649276733398
    6. '       ' → logprob: -9.009649276733398
    7. 'from' → logprob: -9.009649276733398
    8. '    
' → logprob: -9.009649276733398
    9. ',' → logprob: -9.009649276733398
    10. 'weight' → logprob: -9.509649276733398

Token 2679: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3675231337547302
    2. 'import' → logprob: -1.367523193359375
    3. 'from' → logprob: -3.367523193359375
    4. '#' (adapté à ' #') → logprob: -5.117523193359375
    5. ' from' → logprob: -5.867523193359375
    6. ' import' → logprob: -5.992523193359375
    7. 'cost' → logprob: -6.367523193359375
    8. 'dist' → logprob: -6.492523193359375
    9. '
' → logprob: -7.242523193359375
    10. '    
' → logprob: -7.742523193359375

Token 2680: ' Nous' (ID: 20193)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038713183254003525
    2. 'import' → logprob: -3.538713216781616
    3. 'from' → logprob: -5.413712978363037
    4. '#' → logprob: -6.163712978363037
    5. '
' → logprob: -7.288712978363037
    6. '    
' → logprob: -8.413713455200195
    7. '```' → logprob: -8.663713455200195
    8. ' from' → logprob: -8.788713455200195
    9. 'dist' → logprob: -8.788713455200195
    10. 'cost' → logprob: -9.288713455200195

Token 2681: ' devons' (ID: 140218)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1112552881240845
    2. 'import' → logprob: -1.2362552881240845
    3. '#' → logprob: -1.3612552881240845
    4. ' =' → logprob: -4.236255168914795
    5. ' #' → logprob: -4.361255168914795
    6. 'from' → logprob: -4.361255168914795
    7. 'def' → logprob: -4.486255168914795
    8. '
' → logprob: -4.861255168914795
    9. ' n' → logprob: -4.861255168914795
    10. ',' → logprob: -4.986255168914795

Token 2682: ' résoudre' (ID: 134006)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.060674190521240234
    2. '   ' → logprob: -4.18567419052124
    3. 'return' → logprob: -4.43567419052124
    4. 'contin' → logprob: -5.18567419052124
    5. 'from' → logprob: -5.18567419052124
    6. '#' → logprob: -5.43567419052124
    7. 'util' → logprob: -5.93567419052124
    8. 'def' → logprob: -6.06067419052124
    9. '```' → logprob: -6.06067419052124
    10. 'continue' → logprob: -6.81067419052124

Token 2683: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16566422581672668
    2. 'import' → logprob: -2.2906641960144043
    3. '```' → logprob: -3.7906641960144043
    4. 'dist' → logprob: -4.415664196014404
    5. 'from' → logprob: -5.665664196014404
    6. ' un' → logprob: -5.790664196014404
    7. 'graph' → logprob: -6.165664196014404
    8. ' dist' → logprob: -6.540664196014404
    9. 'un' → logprob: -6.790664196014404
    10. '
' → logprob: -6.790664196014404

Token 2684: ' problème' (ID: 35630)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.27195611596107483
    2. '
' → logprob: -2.646956205368042
    3. 'd' → logprob: -3.146956205368042
    4. 'D' → logprob: -3.646956205368042
    5. 'from' → logprob: -3.896956205368042
    6. '```' → logprob: -4.146955966949463
    7. ' D' → logprob: -4.271955966949463
    8. '#' → logprob: -4.771955966949463
    9. 'weighted' → logprob: -5.021955966949463
    10. ' weighted' → logprob: -5.271955966949463

Token 2685: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6157164573669434
    2. 'de' → logprob: -1.9907164573669434
    3. 'd' → logprob: -2.2407164573669434
    4. 'import' → logprob: -2.3657164573669434
    5. ' à' → logprob: -3.7407164573669434
    6. 'à' → logprob: -3.8657164573669434
    7. ' d' → logprob: -3.9907164573669434
    8. '   ' → logprob: -4.365716457366943
    9. ',' → logprob: -4.865716457366943
    10. ' supplémentaire' → logprob: -5.615716457366943

Token 2686: ' recherche' (ID: 24975)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.5469509363174438
    2. 'd' → logprob: -1.4219509363174438
    3. 'graph' → logprob: -3.6719508171081543
    4. 'import' → logprob: -3.6719508171081543
    5. ' plus' → logprob: -3.6719508171081543
    6. 'che' → logprob: -3.9219508171081543
    7. '```' → logprob: -4.171950817108154
    8. 'gr' → logprob: -4.296950817108154
    9. 'path' → logprob: -4.296950817108154
    10. 'weighted' → logprob: -4.796950817108154

Token 2687: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8620305061340332
    2. '_' → logprob: -1.8620305061340332
    3. ' d' → logprob: -2.487030506134033
    4. '<|end|>' → logprob: -2.737030506134033
    5. '```' → logprob: -2.737030506134033
    6. '_d' → logprob: -3.612030506134033
    7. 'de' → logprob: -3.862030506134033
    8. 'import' → logprob: -3.987030506134033
    9. 'es' → logprob: -4.362030506134033
    10. ' de' → logprob: -4.612030506134033

Token 2688: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.46604984998703003
    2. 'plus' → logprob: -1.0910499095916748
    3. '```' → logprob: -3.841049909591675
    4. ' chemin' → logprob: -5.091049671173096
    5. '
' → logprob: -6.341049671173096
    6. 'distance' → logprob: -6.841049671173096
    7. 'co' → logprob: -7.091049671173096
    8. 'le' → logprob: -7.466049671173096
    9. 'cout' → logprob: -7.591049671173096
    10. 'd' → logprob: -7.841049671173096

Token 2689: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3141549229621887
    2. '```' → logprob: -2.814154863357544
    3. ',' → logprob: -3.314154863357544
    4. 'import' → logprob: -4.064155101776123
    5. ' à' → logprob: -4.189155101776123
    6. '       ' → logprob: -4.314155101776123
    7. 'dans' → logprob: -4.564155101776123
    8. ' ' → logprob: -4.564155101776123
    9. ':' → logprob: -4.689155101776123
    10. '
' → logprob: -4.814155101776123

Token 2690: ' point' (ID: 2438)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.7144108414649963
    2. '(' → logprob: -1.4644107818603516
    3. 'point' → logprob: -2.9644107818603516
    4. 'dé' → logprob: -3.0894107818603516
    5. 'us' → logprob: -3.3394107818603516
    6. '0' → logprob: -3.7144107818603516
    7. '```' → logprob: -4.214410781860352
    8. 'co' → logprob: -4.214410781860352
    9. 'che' → logprob: -4.464410781860352
    10. 'start' → logprob: -4.714410781860352

Token 2691: ' NW' (ID: 58124)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0160858631134033
    2. ' (' → logprob: -1.2660858631134033
    3. ' à' → logprob: -2.3910858631134033
    4. '```' → logprob: -3.0160858631134033
    5. '(
' → logprob: -3.2660858631134033
    6. 'à' → logprob: -3.6410858631134033
    7. 'd' → logprob: -4.141085624694824
    8. '   ' → logprob: -4.266085624694824
    9. ' de' → logprob: -4.641085624694824
    10. '
' → logprob: -4.641085624694824

Token 2692: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4475458264350891
    2. '-' → logprob: -2.4475457668304443
    3. '_' → logprob: -2.6975457668304443
    4. '   ' → logprob: -2.9475457668304443
    5. '```' → logprob: -3.3225457668304443
    6. ' à' → logprob: -3.9475457668304443
    7. ' vers' → logprob: -4.072546005249023
    8. 'à' → logprob: -4.447546005249023
    9. '_,' → logprob: -4.572546005249023
    10. ' au' → logprob: -5.072546005249023

Token 2693: ' SE' (ID: 6542)
  Prédit: 'SE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SE' → logprob: -0.2756340801715851
    2. '(' → logprob: -1.9006340503692627
    3. 'S' → logprob: -3.0256340503692627
    4. 's' → logprob: -4.650634288787842
    5. ' (' → logprob: -4.650634288787842
    6. '```' → logprob: -5.150634288787842
    7. ' SE' → logprob: -5.275634288787842
    8. '(SE' → logprob: -5.775634288787842
    9. 'l' → logprob: -6.525634288787842
    10. '(s' → logprob: -7.150634288787842

Token 2694: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07179058343172073
    2. '
' → logprob: -3.8217906951904297
    3. ',' → logprob: -4.44679069519043
    4. '       ' → logprob: -4.57179069519043
    5. '#' → logprob: -5.57179069519043
    6. '```' → logprob: -5.94679069519043
    7. ' avec' → logprob: -6.44679069519043
    8. ',
' → logprob: -6.57179069519043
    9. ' en' → logprob: -6.69679069519043
    10. 'import' → logprob: -6.82179069519043

Token 2695: ' minim' (ID: 23874)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -1.471957802772522
    2. 'continu' → logprob: -1.971957802772522
    3. 'util' → logprob: -2.2219576835632324
    4. 'pass' → logprob: -2.4719576835632324
    5. '```' → logprob: -3.0969576835632324
    6. 'b' → logprob: -3.3469576835632324
    7. 'd' → logprob: -3.4719576835632324
    8. 'aj' → logprob: -3.7219576835632324
    9. ' passant' → logprob: -4.096957683563232
    10. 'pos' → logprob: -4.346957683563232

Token 2696: 'isant' (ID: 56111)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -1.0182547569274902
    2. 'e' → logprob: -2.1432547569274902
    3. 'ute' → logprob: -3.0182547569274902
    4. 'def' → logprob: -3.0182547569274902
    5. 'ize' → logprob: -3.0182547569274902
    6. 'ite' → logprob: -3.1432547569274902
    7. 'izing' → logprob: -3.1432547569274902
    8. 'a' → logprob: -3.2682547569274902
    9. 'ité' → logprob: -3.3932547569274902
    10. '#' → logprob: -3.6432547569274902

Token 2697: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.43537673354148865
    2. 'le' → logprob: -1.185376763343811
    3. '_le' → logprob: -3.3103766441345215
    4. ' un' → logprob: -6.0603766441345215
    5. 'l' → logprob: -6.4353766441345215
    6. ' la' → logprob: -6.5603766441345215
    7. ' les' → logprob: -6.8103766441345215
    8. '_' → logprob: -7.0603766441345215
    9. ' l' → logprob: -7.4353766441345215
    10. 'un' → logprob: -7.8103766441345215

Token 2698: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.2934434413909912
    2. 'cost' → logprob: -1.7934434413909912
    3. 'cout' → logprob: -2.668443441390991
    4. ' coût' → logprob: -5.54344367980957
    5. 'dist' → logprob: -5.66844367980957
    6. 'c' → logprob: -5.66844367980957
    7. ' cout' → logprob: -6.41844367980957
    8. 'distance' → logprob: -6.41844367980957
    9. 'temps' → logprob: -6.54344367980957
    10. ' cost' → logprob: -7.91844367980957

Token 2699: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6460695862770081
    2. 'import' → logprob: -2.0210695266723633
    3. ' =' → logprob: -3.3960695266723633
    4. '```' → logprob: -3.3960695266723633
    5. '       ' → logprob: -3.5210695266723633
    6. ',' → logprob: -3.5210695266723633
    7. '+' → logprob: -3.6460695266723633
    8. '_' → logprob: -3.7710695266723633
    9. '
' → logprob: -4.021069526672363
    10. '=' → logprob: -4.271069526672363

Token 2700: '
' (ID: 198)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.16753843426704407
    2. 'le' → logprob: -2.5425384044647217
    3. ' le' → logprob: -3.6675384044647217
    4. ' les' → logprob: -4.542538642883301
    5. 'les' → logprob: -4.667538642883301
    6. '   ' → logprob: -5.042538642883301
    7. 'for' → logprob: -5.542538642883301
    8. '#' → logprob: -5.667538642883301
    9. 'each' → logprob: -5.667538642883301
    10. 'la' → logprob: -6.167538642883301

Token 2701: '   ' (ID: 271)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.029873361811041832
    2. ' les' → logprob: -4.904873371124268
    3. 'une' → logprob: -5.654873371124268
    4. 'les' → logprob: -5.779873371124268
    5. 'le' → logprob: -5.904873371124268
    6. '   ' → logprob: -6.404873371124268
    7. ' la' → logprob: -6.529873371124268
    8. ' le' → logprob: -6.529873371124268
    9. '#' → logprob: -6.779873371124268
    10. 'l' → logprob: -7.154873371124268

Token 2702: ' #' (ID: 1069)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.1565673053264618
    2. '   ' → logprob: -2.656567335128784
    3. 'le' → logprob: -4.156567096710205
    4. '#' (adapté à ' #') → logprob: -4.281567096710205
    5. 'les' → logprob: -4.781567096710205
    6. 'la' → logprob: -5.281567096710205
    7. 'ch' → logprob: -5.281567096710205
    8. ' les' → logprob: -5.531567096710205
    9. 'for' → logprob: -5.656567096710205
    10. 'une' → logprob: -6.031567096710205

Token 2703: ' les' (ID: 1341)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.03994882106781
    2. 'le' → logprob: -2.4149489402770996
    3. 'ch' → logprob: -2.5399489402770996
    4. '#' → logprob: -2.5399489402770996
    5. 'les' → logprob: -2.5399489402770996
    6. 'for' → logprob: -2.6649489402770996
    7. 'la' → logprob: -2.9149489402770996
    8. '   ' → logprob: -3.6649489402770996
    9. 'j' → logprob: -3.6649489402770996
    10. 'A' → logprob: -3.9149489402770996

Token 2704: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.3118042051792145
    2. ' cases' → logprob: -2.5618042945861816
    3. 'case' → logprob: -3.3118042945861816
    4. 'co' → logprob: -3.3118042945861816
    5. 'cells' → logprob: -4.186804294586182
    6. 'dist' → logprob: -4.311804294586182
    7. 'cout' → logprob: -4.561804294586182
    8. ' voisins' → logprob: -4.811804294586182
    9. ' arbres' → logprob: -5.061804294586182
    10. ' case' → logprob: -5.186804294586182

Token 2705: ' v' (ID: 323)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.6323739886283875
    2. ' avec' → logprob: -1.2573740482330322
    3. 'with' → logprob: -2.6323740482330322
    4. 'sans' → logprob: -3.3823740482330322
    5. ' with' → logprob: -3.6323740482330322
    6. '```' → logprob: -4.507373809814453
    7. 'cont' → logprob: -4.757373809814453
    8. ' sans' → logprob: -4.882373809814453
    9. '   ' → logprob: -5.632373809814453
    10. ' =' → logprob: -5.632373809814453

Token 2706: 'ides' (ID: 4105)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.1958301067352295
    2. '=' → logprob: -2.0708301067352295
    3. 'ides' → logprob: -2.0708301067352295
    4. 'with' → logprob: -2.6958301067352295
    5. '   ' → logprob: -3.0708301067352295
    6. 'ale' → logprob: -3.1958301067352295
    7. 'ideo' → logprob: -3.4458301067352295
    8. 'al' → logprob: -3.5708301067352295
    9. 'ide' → logprob: -3.6958301067352295
    10. 'is' → logprob: -3.8208301067352295

Token 2707: ' coût' (ID: 73109)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.4678283631801605
    2. ' ==' → logprob: -2.3428282737731934
    3. 'ou' → logprob: -3.2178282737731934
    4. ' et' → logprob: -3.3428282737731934
    5. '```' → logprob: -3.3428282737731934
    6. ' or' → logprob: -3.3428282737731934
    7. '==' → logprob: -3.7178282737731934
    8. ',' → logprob: -4.467828273773193
    9. '   ' → logprob: -4.592828273773193
    10. ' !=' → logprob: -4.717828273773193

Token 2708: 'ent' (ID: 299)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08682448416948318
    2. ' =' → logprob: -2.711824417114258
    3. '   ' → logprob: -5.086824417114258
    4. 'ent' → logprob: -5.586824417114258
    5. ' ' → logprob: -6.961824417114258
    6. '
' → logprob: -7.211824417114258
    7. '==' → logprob: -7.461824417114258
    8. 'e' → logprob: -7.836824417114258
    9. '       ' → logprob: -8.086824417114258
    10. '```' → logprob: -8.086824417114258

Token 2709: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6032741665840149
    2. '0' → logprob: -1.1032741069793701
    3. ' ' → logprob: -2.35327410697937
    4. '```' → logprob: -3.72827410697937
    5. ' =' → logprob: -6.853274345397949
    6. '``' → logprob: -8.22827434539795
    7. '   ' → logprob: -8.35327434539795
    8. ' ```' → logprob: -8.85327434539795
    9. '`' → logprob: -9.10327434539795
    10. '=' → logprob: -9.10327434539795

Token 2710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06209719926118851
    2. '1' → logprob: -2.8120973110198975
    3. '```' → logprob: -9.562097549438477
    4. '   ' → logprob: -10.437097549438477
    5. ' ' → logprob: -11.312097549438477
    6. '
' → logprob: -11.437097549438477
    7. '``' → logprob: -12.937097549438477
    8. 'au' → logprob: -13.062097549438477
    9. 'à' → logprob: -14.562097549438477
    10. '       ' → logprob: -14.812097549438477

Token 2711: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4212203323841095
    2. ',' → logprob: -1.796220302581787
    3. ' et' → logprob: -3.171220302581787
    4. ',
' → logprob: -3.421220302581787
    5. '+' → logprob: -4.046220302581787
    6. '```' → logprob: -4.171220302581787
    7. '
' → logprob: -4.421220302581787
    8. ' +' → logprob: -4.796220302581787
    9. 'import' → logprob: -4.921220302581787
    10. ' =' → logprob: -5.171220302581787

Token 2712: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.17724618315696716
    2. ' les' → logprob: -2.80224609375
    3. 'arb' → logprob: -2.92724609375
    4. 'cases' → logprob: -3.67724609375
    5. '#' → logprob: -4.67724609375
    6. 'ar' → logprob: -5.55224609375
    7. 'des' → logprob: -6.17724609375
    8. 'for' → logprob: -6.30224609375
    9. ' arbres' → logprob: -6.55224609375
    10. 'case' → logprob: -7.05224609375

Token 2713: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.06281057000160217
    2. 'arb' → logprob: -3.1878106594085693
    3. ' cases' → logprob: -4.43781042098999
    4. ' arbres' → logprob: -5.56281042098999
    5. 'case' → logprob: -6.81281042098999
    6. '#' → logprob: -6.81281042098999
    7. 'ar' → logprob: -7.06281042098999
    8. '   ' → logprob: -8.562810897827148
    9. 'for' → logprob: -8.937810897827148
    10. 'cas' → logprob: -9.187810897827148

Token 2714: ' avec' (ID: 3937)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avec' → logprob: -0.07526033371686935
    2. 'with' → logprob: -3.4502604007720947
    3. ' avec' → logprob: -3.5752604007720947
    4. '>' → logprob: -5.825260162353516
    5. 'arb' → logprob: -6.075260162353516
    6. '```' → logprob: -6.325260162353516
    7. 'à' → logprob: -6.700260162353516
    8. ' with' → logprob: -7.075260162353516
    9. '   ' → logprob: -7.200260162353516
    10. 'cont' → logprob: -7.325260162353516

Token 2715: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.2228969931602478
    2. ' arbres' → logprob: -1.7228970527648926
    3. 'ar' → logprob: -3.9728970527648926
    4. 'des' → logprob: -6.847897052764893
    5. ' des' → logprob: -7.472897052764893
    6. '```' → logprob: -8.472896575927734
    7. ' arbre' → logprob: -8.597896575927734
    8. ' ' → logprob: -9.222896575927734
    9. '   ' → logprob: -9.347896575927734
    10. 'trees' → logprob: -9.472896575927734

Token 2716: ' coût' (ID: 73109)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4262350797653198
    2. ' +' → logprob: -2.3012351989746094
    3. ' ==' → logprob: -2.6762351989746094
    4. ' (' → logprob: -3.6762351989746094
    5. '=' → logprob: -3.8012351989746094
    6. ',' → logprob: -3.8012351989746094
    7. '               ' → logprob: -4.426235198974609
    8. ' *' → logprob: -4.426235198974609
    9. '```' → logprob: -4.551235198974609
    10. ' ou' → logprob: -4.926235198974609

Token 2717: 'ent' (ID: 299)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12823480367660522
    2. ' =' → logprob: -2.12823486328125
    3. 'e' → logprob: -7.37823486328125
    4. '   ' → logprob: -7.62823486328125
    5. ' ' → logprob: -10.25323486328125
    6. 'ent' → logprob: -10.50323486328125
    7. 's' → logprob: -10.75323486328125
    8. '==' → logprob: -11.00323486328125
    9. ')' → logprob: -11.25323486328125
    10. '  ' → logprob: -11.50323486328125

Token 2718: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3751838803291321
    2. '1' → logprob: -1.2501838207244873
    3. ' (' → logprob: -4.500184059143066
    4. ' +' → logprob: -5.375184059143066
    5. '0' → logprob: -6.000184059143066
    6. ' un' → logprob: -6.500184059143066
    7. '(' → logprob: -6.875184059143066
    8. ' au' → logprob: -7.000184059143066
    9. '```' → logprob: -7.125184059143066
    10. ' plus' → logprob: -7.500184059143066

Token 2719: 'temps' (ID: 42511)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.2525341510772705
    2. 'A' → logprob: -1.5025341510772705
    3. ' (' → logprob: -1.6275341510772705
    4. '2' → logprob: -2.2525341510772705
    5. ' ' → logprob: -2.5025341510772705
    6. '1' → logprob: -2.7525341510772705
    7. '(' → logprob: -3.7525341510772705
    8. '0' → logprob: -4.627533912658691
    9. '(A' → logprob: -4.627533912658691
    10. '   ' → logprob: -7.002533912658691

Token 2720: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6041263937950134
    2. ' =' → logprob: -1.3541264533996582
    3. '+' → logprob: -2.354126453399658
    4. ' +' → logprob: -2.854126453399658
    5. ')' → logprob: -3.604126453399658
    6. '   ' → logprob: -5.729126453399658
    7. ' à' → logprob: -5.979126453399658
    8. '_to' → logprob: -6.479126453399658
    9. ' ' → logprob: -6.604126453399658
    10. ' +=' → logprob: -7.479126453399658

Token 2721: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.026685265824198723
    2. 'les' → logprob: -4.2766852378845215
    3. ' couper' → logprob: -5.2766852378845215
    4. ' les' → logprob: -5.5266852378845215
    5. 'cut' → logprob: -6.1516852378845215
    6. '   ' → logprob: -8.27668571472168
    7. 'tr' → logprob: -8.77668571472168
    8. '```' → logprob: -8.90168571472168
    9. ' ' → logprob: -9.02668571472168
    10. ' cou' → logprob: -9.15168571472168

Token 2722: ' tous' (ID: 10688)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11871323734521866
    2. ')' → logprob: -2.618713140487671
    3. '+' → logprob: -3.618713140487671
    4. ' )' → logprob: -5.11871337890625
    5. ' *' → logprob: -6.24371337890625
    6. '*' → logprob: -6.49371337890625
    7. ' et' → logprob: -7.61871337890625
    8. '```' → logprob: -7.74371337890625
    9. ' ' → logprob: -8.49371337890625
    10. ' =' → logprob: -8.61871337890625

Token 2723: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.6032717823982239
    2. ' les' → logprob: -0.8532717823982239
    3. ' arbres' → logprob: -4.478271961212158
    4. ' ' → logprob: -5.478271961212158
    5. '   ' → logprob: -5.728271961212158
    6. ')' → logprob: -6.228271961212158
    7. ' ces' → logprob: -6.353271961212158
    8. 'ces' → logprob: -6.478271961212158
    9. '       ' → logprob: -7.228271961212158
    10. ' )' → logprob: -8.353271484375

Token 2724: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.47582823038101196
    2. ' arbres' → logprob: -0.975828230381012
    3. 'ar' → logprob: -7.100828170776367
    4. ' ' → logprob: -7.725828170776367
    5. 'trees' → logprob: -8.225828170776367
    6. ' arbre' → logprob: -9.975828170776367
    7. '   ' → logprob: -9.975828170776367
    8. ' arb' → logprob: -10.600828170776367
    9. '```' → logprob: -10.850828170776367
    10. '
' → logprob: -11.350828170776367

Token 2725: ' sur' (ID: 1512)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4300438463687897
    2. '+' → logprob: -1.1800438165664673
    3. ')' → logprob: -3.305043935775757
    4. ')+' → logprob: -5.930043697357178
    5. '[i' → logprob: -7.055043697357178
    6. '   ' → logprob: -7.430043697357178
    7. '```' → logprob: -7.555043697357178
    8. ')
' → logprob: -8.930044174194336
    9. ',' → logprob: -9.180044174194336
    10. ' )' → logprob: -9.180044174194336

Token 2726: ' cette' (ID: 7696)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6043745279312134
    2. 'la' → logprob: -0.8543745279312134
    3. 'celle' → logprob: -4.479374408721924
    4. '   ' → logprob: -5.354374408721924
    5. ' cette' → logprob: -6.104374408721924
    6. ' ' → logprob: -6.229374408721924
    7. 'ces' → logprob: -6.229374408721924
    8. ' la' → logprob: -6.354374408721924
    9. 'une' → logprob: -7.354374408721924
    10. 'l' → logprob: -7.479374408721924

Token 2727: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0013994028558954597
    2. ' case' → logprob: -6.751399517059326
    3. 'cell' → logprob: -9.251399040222168
    4. '   ' → logprob: -10.001399040222168
    5. '```' → logprob: -10.376399040222168
    6. 'cases' → logprob: -10.751399040222168
    7. '#' → logprob: -12.001399040222168
    8. ' ' → logprob: -12.251399040222168
    9. 'c' → logprob: -12.376399040222168
    10. 'car' → logprob: -12.501399040222168

Token 2728: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.284076988697052
    2. ' +' → logprob: -2.1590769290924072
    3. '+' → logprob: -2.6590769290924072
    4. ')+' → logprob: -3.4090769290924072
    5. '   ' → logprob: -4.284077167510986
    6. ')
' → logprob: -4.659077167510986
    7. ',' → logprob: -6.909077167510986
    8. '```' → logprob: -7.034077167510986
    9. ' )' → logprob: -7.534077167510986
    10. '           ' → logprob: -7.784077167510986

Token 2729: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17681342363357544
    2. 'import' → logprob: -1.9268133640289307
    3. 'from' → logprob: -4.55181360244751
    4. '#' → logprob: -6.17681360244751
    5. '
' → logprob: -6.55181360244751
    6. 'dist' → logprob: -7.42681360244751
    7. 'cost' → logprob: -7.80181360244751
    8. '    
' → logprob: -8.176813125610352
    9. '```' → logprob: -8.301813125610352
    10. ' from' → logprob: -8.926813125610352

Token 2730: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03161003440618515
    2. 'import' → logprob: -3.7816100120544434
    3. '
' → logprob: -5.281610012054443
    4. 'from' → logprob: -6.781610012054443
    5. '```' → logprob: -7.906610012054443
    6. 'dist' → logprob: -8.031610488891602
    7. ',' → logprob: -8.531610488891602
    8. 'cost' → logprob: -8.531610488891602
    9. '#' → logprob: -9.156610488891602
    10. '    
' → logprob: -9.281610488891602

Token 2731: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022530319169163704
    2. 'import' → logprob: -4.022530555725098
    3. '
' → logprob: -5.897530555725098
    4. 'from' → logprob: -7.397530555725098
    5. '```' → logprob: -8.022530555725098
    6. '    
' → logprob: -8.772530555725098
    7. 'cost' → logprob: -9.647530555725098
    8. 'dist' → logprob: -9.647530555725098
    9. '#' → logprob: -9.772530555725098
    10. ',' → logprob: -9.897530555725098

Token 2732: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017522867769002914
    2. 'import' → logprob: -4.142522811889648
    3. 'from' → logprob: -7.392522811889648
    4. '
' → logprob: -8.017522811889648
    5. '    
' → logprob: -8.642522811889648
    6. '#' (adapté à ' #') → logprob: -9.142522811889648
    7. 'dist' → logprob: -9.267522811889648
    8. 'cost' → logprob: -9.267522811889648
    9. '```' → logprob: -10.517522811889648
    10. 'distance' → logprob: -11.767522811889648

Token 2733: ' La' (ID: 3038)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3883771300315857
    2. 'import' → logprob: -1.2633771896362305
    3. 'from' → logprob: -3.3883771896362305
    4. '#' → logprob: -5.8883771896362305
    5. 'dist' → logprob: -6.6383771896362305
    6. '
' → logprob: -7.8883771896362305
    7. 'cost' → logprob: -8.01337718963623
    8. '    
' → logprob: -8.51337718963623
    9. '```' → logprob: -9.01337718963623
    10. 'def' → logprob: -9.88837718963623

Token 2734: ' méthode' (ID: 71490)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5721880197525024
    2. 'import' → logprob: -1.4471880197525024
    3. 'from' → logprob: -2.197187900543213
    4. '   ' → logprob: -2.697187900543213
    5. ' #' → logprob: -4.822187900543213
    6. 'def' → logprob: -5.072187900543213
    7. '
' → logprob: -6.197187900543213
    8. ' from' → logprob: -6.572187900543213
    9. 'visited' → logprob: -6.822187900543213
    10. 'dist' → logprob: -7.322187900543213

Token 2735: ' ci' (ID: 7405)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9148885607719421
    2. 'import' → logprob: -1.039888620376587
    3. 'from' → logprob: -2.414888620376587
    4. '#' → logprob: -2.664888620376587
    5. ' =' → logprob: -3.289888620376587
    6. ':' → logprob: -3.914888620376587
    7. '=' → logprob: -4.164888381958008
    8. ' from' → logprob: -6.164888381958008
    9. '       ' → logprob: -6.289888381958008
    10. ' #' → logprob: -6.414888381958008

Token 2736: '-dessus' (ID: 74812)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9184043407440186
    2. 'def' → logprob: -1.0434043407440186
    3. '   ' → logprob: -1.9184043407440186
    4. 'from' → logprob: -2.9184043407440186
    5. 's' → logprob: -4.668404579162598
    6. 'import' → logprob: -4.793404579162598
    7. ':' → logprob: -4.918404579162598
    8. '=' → logprob: -5.293404579162598
    9. '       ' → logprob: -5.793404579162598
    10. 'n' → logprob: -6.043404579162598

Token 2737: ' accum' (ID: 23148)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5989001393318176
    2. 'import' → logprob: -1.3489000797271729
    3. '#' → logprob: -1.9739000797271729
    4. ' est' → logprob: -3.723900079727173
    5. ' #' → logprob: -5.098900318145752
    6. ' n' → logprob: -5.723900318145752
    7. ' import' → logprob: -6.098900318145752
    8. 'est' → logprob: -6.348900318145752
    9. ':' → logprob: -6.598900318145752
    10. ' continue' → logprob: -6.598900318145752

Token 2738: 'ule' (ID: 1601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2373136729001999
    2. '=' → logprob: -2.987313747406006
    3. ' =' → logprob: -3.862313747406006
    4. 'u' → logprob: -4.237313747406006
    5. 'er' → logprob: -4.487313747406006
    6. '  ' → logprob: -4.612313747406006
    7. '+' → logprob: -4.862313747406006
    8. 'um' → logprob: -4.862313747406006
    9. '       ' → logprob: -4.987313747406006
    10. ']' → logprob: -4.987313747406006

Token 2739: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.3921857476234436
    2. 'un' → logprob: -2.517185688018799
    3. 'import' → logprob: -2.767185688018799
    4. ' le' → logprob: -2.892185688018799
    5. '   ' → logprob: -3.892185688018799
    6. ' seulement' → logprob: -4.142185688018799
    7. ' une' → logprob: -4.267185688018799
    8. ' les' → logprob: -4.392185688018799
    9. ' uniquement' → logprob: -4.517185688018799
    10. ' à' → logprob: -4.767185688018799

Token 2740: ' temps' (ID: 11160)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8676869869232178
    2. 'import' → logprob: -1.4926869869232178
    3. 'dist' → logprob: -2.7426869869232178
    4. 'co' → logprob: -2.7426869869232178
    5. ' cost' → logprob: -3.1176869869232178
    6. '#' → logprob: -3.3676869869232178
    7. ' coût' → logprob: -4.117687225341797
    8. 'minimum' → logprob: -4.117687225341797
    9. ' minimum' → logprob: -4.242687225341797
    10. ' minimal' → logprob: -4.242687225341797

Token 2741: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3670417070388794
    2. ' +=' → logprob: -1.4920417070388794
    3. 'import' → logprob: -1.7420417070388794
    4. '+' → logprob: -2.61704158782959
    5. ' =' → logprob: -2.61704158782959
    6. '=' → logprob: -3.49204158782959
    7. ' +' → logprob: -3.74204158782959
    8. '#' → logprob: -3.99204158782959
    9. '+=' → logprob: -3.99204158782959
    10. ' nécessaire' → logprob: -3.99204158782959

Token 2742: ' toutes' (ID: 17502)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -1.0407613515853882
    2. 'tr' → logprob: -2.4157614707946777
    3. 'contin' → logprob: -2.4157614707946777
    4. 'faire' → logprob: -3.0407614707946777
    5. ' parcour' → logprob: -3.1657614707946777
    6. ' continuer' → logprob: -3.4157614707946777
    7. ' trouver' → logprob: -3.5407614707946777
    8. 'ouvrir' → logprob: -3.6657614707946777
    9. 'import' → logprob: -3.7907614707946777
    10. 'tout' → logprob: -3.9157614707946777

Token 2743: ' les' (ID: 1341)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.1767921447753906
    2. ' cases' → logprob: -1.8017921447753906
    3. '<|end|>' → logprob: -2.3017921447753906
    4. '_' → logprob: -2.4267921447753906
    5. ' arbres' → logprob: -2.5517921447753906
    6. '_cases' → logprob: -2.8017921447753906
    7. ' ' → logprob: -3.3017921447753906
    8. '   ' → logprob: -3.3017921447753906
    9. ' les' → logprob: -3.8017921447753906
    10. 'import' → logprob: -4.551792144775391

Token 2744: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.7557698488235474
    2. 'arb' → logprob: -0.8807698488235474
    3. 'ar' → logprob: -3.505769729614258
    4. 'for' → logprob: -3.505769729614258
    5. 'import' → logprob: -3.630769729614258
    6. ' cases' → logprob: -5.130769729614258
    7. '#' → logprob: -5.880769729614258
    8. ' arbres' → logprob: -6.130769729614258
    9. 'cou' → logprob: -6.130769729614258
    10. 'c' → logprob: -6.630769729614258

Token 2745: ' avec' (ID: 3937)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3867169618606567
    2. '<|end|>' → logprob: -1.6367169618606567
    3. ',' → logprob: -1.8867169618606567
    4. '   ' → logprob: -2.261716842651367
    5. 'with' → logprob: -3.011716842651367
    6. '.' → logprob: -3.386716842651367
    7. '#' → logprob: -3.761716842651367
    8. ' avec' → logprob: -3.761716842651367
    9. ')' → logprob: -4.011716842651367
    10. '+' → logprob: -4.011716842651367

Token 2746: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.008362088352441788
    2. 'ar' → logprob: -5.008362293243408
    3. '0' → logprob: -7.258362293243408
    4. ' arbres' → logprob: -7.383362293243408
    5. '```' → logprob: -9.38336181640625
    6. 'des' → logprob: -9.50836181640625
    7. 'for' → logprob: -9.88336181640625
    8. 'co' → logprob: -10.50836181640625
    9. '#' → logprob: -10.88336181640625
    10. 'trees' → logprob: -11.38336181640625

Token 2747: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8630358576774597
    2. '
' → logprob: -1.6130359172821045
    3. '   ' → logprob: -1.6130359172821045
    4. '<|end|>' → logprob: -2.8630359172821045
    5. ',' → logprob: -3.4880359172821045
    6. 'from' → logprob: -4.238035678863525
    7. ')' → logprob: -4.363035678863525
    8. ',
' → logprob: -4.488035678863525
    9. ' +' → logprob: -4.613035678863525
    10. '```' → logprob: -5.113035678863525

Token 2748: ' ce' (ID: 2357)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6690724492073059
    2. '#' → logprob: -1.1690723896026611
    3. '   ' → logprob: -2.919072389602661
    4. ' #' → logprob: -3.169072389602661
    5. ' mais' → logprob: -3.794072389602661
    6. '       ' → logprob: -4.54407262802124
    7. ' but' → logprob: -4.91907262802124
    8. '
' → logprob: -5.04407262802124
    9. '```' → logprob: -5.16907262802124
    10. '...' → logprob: -5.79407262802124

Token 2749: ' qui' (ID: 2780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23124921321868896
    2. '+' → logprob: -3.4812493324279785
    3. '```' → logprob: -3.4812493324279785
    4. 'n' → logprob: -3.6062493324279785
    5. '   ' → logprob: -3.6062493324279785
    6. ' n' → logprob: -3.8562493324279785
    7. 'est' → logprob: -4.6062493324279785
    8. ')' → logprob: -4.7312493324279785
    9. 'import' → logprob: -5.4812493324279785
    10. 'def' → logprob: -5.4812493324279785

Token 2750: ' est' (ID: 893)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2109103202819824
    2. '#' → logprob: -1.4609103202819824
    3. 'import' → logprob: -2.4609103202819824
    4. ' continue' → logprob: -2.5859103202819824
    5. 'continue' → logprob: -2.7109103202819824
    6. '```' → logprob: -2.9609103202819824
    7. '
' → logprob: -3.4609103202819824
    8. ' #' → logprob: -3.7109103202819824
    9. '<|end|>' → logprob: -3.9609103202819824
    10. '+' → logprob: -3.9609103202819824

Token 2751: ' incorrect' (ID: 25570)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7400442361831665
    2. '```' → logprob: -1.3650442361831665
    3. 'à' → logprob: -2.865044116973877
    4. 'import' → logprob: -2.990044116973877
    5. '#' → logprob: -3.740044116973877
    6. '   ' → logprob: -4.115044116973877
    7. ' trop' → logprob: -4.115044116973877
    8. 'inut' → logprob: -4.490044116973877
    9. 'loin' → logprob: -4.615044116973877
    10. 'ins' → logprob: -4.615044116973877

Token 2752: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28337255120277405
    2. '
' → logprob: -1.9083725214004517
    3. 'import' → logprob: -2.533372640609741
    4. '    
' → logprob: -5.033372402191162
    5. ')' → logprob: -6.158372402191162
    6. 'from' → logprob: -6.283372402191162
    7. ',' → logprob: -6.283372402191162
    8. '<|end|>' → logprob: -6.533372402191162
    9. '```' → logprob: -6.533372402191162
    10. '.' → logprob: -7.283372402191162

Token 2753: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7427045106887817
    2. 'import' → logprob: -0.7427045106887817
    3. '
' → logprob: -3.742704391479492
    4. '    
' → logprob: -4.992704391479492
    5. 'from' → logprob: -5.492704391479492
    6. '```' → logprob: -5.742704391479492
    7. 'dist' → logprob: -5.992704391479492
    8. ' import' → logprob: -6.117704391479492
    9. ' from' → logprob: -6.492704391479492
    10. ' dist' → logprob: -7.242704391479492

Token 2754: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08689618110656738
    2. 'import' → logprob: -2.8368961811065674
    3. '
' → logprob: -3.8368961811065674
    4. 'from' → logprob: -6.461895942687988
    5. '    
' → logprob: -7.211895942687988
    6. '```' → logprob: -7.336895942687988
    7. '``' → logprob: -10.086895942687988
    8. '#' → logprob: -11.086895942687988
    9. 'dist' → logprob: -11.336895942687988
    10. '       ' → logprob: -11.336895942687988

Token 2755: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3004890978336334
    2. 'import' → logprob: -1.425489068031311
    3. 'from' → logprob: -5.0504889488220215
    4. '
' → logprob: -5.4254889488220215
    5. '```' → logprob: -5.4254889488220215
    6. '    
' → logprob: -6.5504889488220215
    7. ' import' → logprob: -7.0504889488220215
    8. '#' → logprob: -7.6754889488220215
    9. 'dist' → logprob: -8.05048942565918
    10. ' from' → logprob: -8.05048942565918

Token 2756: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5892786979675293
    2. 'import' → logprob: -0.8392786979675293
    3. 'from' → logprob: -4.964278697967529
    4. '
' → logprob: -5.714278697967529
    5. '#' (adapté à ' #') → logprob: -6.214278697967529
    6. '    
' → logprob: -7.339278697967529
    7. 'dist' → logprob: -8.839279174804688
    8. '```' → logprob: -9.339279174804688
    9. ' import' → logprob: -10.464279174804688
    10. 'cost' → logprob: -11.339279174804688

Token 2757: ' Donc' (ID: 88837)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10385077446699142
    2. '   ' → logprob: -2.603850841522217
    3. '#' → logprob: -4.478850841522217
    4. 'from' → logprob: -4.728850841522217
    5. 'dist' → logprob: -5.603850841522217
    6. '
' → logprob: -8.353850364685059
    7. '    
' → logprob: -8.728850364685059
    8. ' import' → logprob: -8.978850364685059
    9. 'cost' → logprob: -9.353850364685059
    10. '```' → logprob: -10.103850364685059

Token 2758: ' il' (ID: 1793)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.293428897857666
    2. '#' → logprob: -2.293428897857666
    3. '   ' → logprob: -3.043428897857666
    4. 'from' → logprob: -3.043428897857666
    5. '```' → logprob: -3.793428897857666
    6. 'dist' → logprob: -4.793428897857666
    7. ' from' → logprob: -4.918428897857666
    8. ' import' → logprob: -4.918428897857666
    9. ' #' → logprob: -5.418428897857666
    10. ' dist' → logprob: -5.793428897857666

Token 2759: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.670048177242279
    2. 'f' → logprob: -1.0450482368469238
    3. '#' → logprob: -2.170048236846924
    4. ' faudra' → logprob: -4.420048236846924
    5. ' faudrait' → logprob: -5.795048236846924
    6. ' #' → logprob: -5.920048236846924
    7. '   ' → logprob: -7.295048236846924
    8. 'est' → logprob: -7.295048236846924
    9. ' reste' → logprob: -7.420048236846924
    10. 'fa' → logprob: -7.420048236846924

Token 2760: ' faire' (ID: 8119)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.30035150051116943
    2. 'util' → logprob: -2.300351619720459
    3. 'contin' → logprob: -2.925351619720459
    4. '   ' → logprob: -3.425351619720459
    5. 'faire' → logprob: -4.050351619720459
    6. 'impl' → logprob: -4.300351619720459
    7. 'from' → logprob: -4.425351619720459
    8. '#' → logprob: -4.550351619720459
    9. '```' → logprob: -5.175351619720459
    10. ' utiliser' → logprob: -5.425351619720459

Token 2761: ' un' (ID: 537)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08005258440971375
    2. 'from' → logprob: -2.705052614212036
    3. 'un' → logprob: -5.330052375793457
    4. 'une' → logprob: -6.080052375793457
    5. '   ' → logprob: -6.330052375793457
    6. '```' → logprob: -7.205052375793457
    7. ' from' → logprob: -9.455052375793457
    8. 'dist' → logprob: -9.830052375793457
    9. 'a' → logprob: -9.955052375793457
    10. ' un' → logprob: -10.080052375793457

Token 2762: ' D' (ID: 415)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.34725114703178406
    2. 'from' → logprob: -1.5972511768341064
    3. 'd' → logprob: -3.0972511768341064
    4. 'D' → logprob: -3.4722511768341064
    5. 'def' → logprob: -5.097250938415527
    6. 'heap' → logprob: -5.722250938415527
    7. '#' → logprob: -5.847250938415527
    8. '
' → logprob: -7.222250938415527
    9. 'priority' → logprob: -7.722250938415527
    10. '```' → logprob: -7.722250938415527

Token 2763: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0002004410926019773
    2. 'ijk' → logprob: -8.875200271606445
    3. 'ij' → logprob: -10.250200271606445
    4. '   ' → logprob: -11.375200271606445
    5. 'jik' → logprob: -11.750200271606445
    6. '```' → logprob: -12.875200271606445
    7. '  ' → logprob: -13.875200271606445
    8. 'i' → logprob: -15.000200271606445
    9. 'import' → logprob: -15.000200271606445
    10. '
' → logprob: -15.125200271606445

Token 2764: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4637662172317505
    2. 'import' → logprob: -1.0887662172317505
    3. 'from' → logprob: -4.088766098022461
    4. '```' → logprob: -4.963766098022461
    5. ' import' → logprob: -5.963766098022461
    6. ' from' → logprob: -6.088766098022461
    7. 'dist' → logprob: -6.088766098022461
    8. '
' → logprob: -6.588766098022461
    9. '       ' → logprob: -6.838766098022461
    10. ' dist' → logprob: -8.463766098022461

Token 2765: ' la' (ID: 557)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.36482635140419006
    2. '   ' → logprob: -1.8648263216018677
    3. 'dist' → logprob: -3.2398264408111572
    4. '```' → logprob: -3.6148264408111572
    5. 'la' → logprob: -3.7398264408111572
    6. ' la' → logprob: -4.239826202392578
    7. '[(' → logprob: -4.614826202392578
    8. '(H' → logprob: -4.989826202392578
    9. 'le' → logprob: -5.239826202392578
    10. '
' → logprob: -5.739826202392578

Token 2766: ' grille' (ID: 99153)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.8372223377227783
    2. 'grid' → logprob: -1.7122223377227783
    3. ' (' → logprob: -1.8372223377227783
    4. ' W' → logprob: -2.8372223377227783
    5. '   ' → logprob: -3.3372223377227783
    6. 'W' → logprob: -3.5872223377227783
    7. 'import' → logprob: -3.5872223377227783
    8. 'graph' → logprob: -4.587222099304199
    9. 'heap' → logprob: -4.837222099304199
    10. ' ' → logprob: -4.962222099304199

Token 2767: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27842238545417786
    2. 'import' → logprob: -1.5284223556518555
    3. 'from' → logprob: -4.7784223556518555
    4. 'dist' → logprob: -5.1534223556518555
    5. '```' → logprob: -5.4034223556518555
    6. ' import' → logprob: -6.0284223556518555
    7. '
' → logprob: -6.2784223556518555
    8. ' from' → logprob: -6.5284223556518555
    9. ' dist' → logprob: -7.6534223556518555
    10. '       ' → logprob: -7.9034223556518555

Token 2768: 'H' (ID: 39)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7936933636665344
    2. '   ' → logprob: -1.5436933040618896
    3. ')' → logprob: -1.9186933040618896
    4. ' ,' → logprob: -2.6686933040618896
    5. ' (' → logprob: -2.9186933040618896
    6. '(H' → logprob: -4.043693542480469
    7. ' ' → logprob: -4.793693542480469
    8. 'graph' → logprob: -4.918693542480469
    9. ' )' → logprob: -5.293693542480469
    10. '  ' → logprob: -6.043693542480469

Token 2769: ',W' (ID: 117252)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31952282786369324
    2. '   ' → logprob: -1.6945228576660156
    3. ',W' → logprob: -2.5695228576660156
    4. '-' → logprob: -4.569522857666016
    5. ',
' → logprob: -7.444522857666016
    6. '
' → logprob: -7.444522857666016
    7. ')' → logprob: -7.569522857666016
    8. '       ' → logprob: -8.569522857666016
    9. ' ,' → logprob: -8.569522857666016
    10. '  ' → logprob: -8.694522857666016

Token 2770: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4245067536830902
    2. '-' → logprob: -1.2995067834854126
    3. ',' → logprob: -3.549506664276123
    4. '   ' → logprob: -3.674506664276123
    5. '[' → logprob: -5.174506664276123
    6. '[-' → logprob: -5.549506664276123
    7. ')-' → logprob: -5.799506664276123
    8. '```' → logprob: -6.424506664276123
    9. '
' → logprob: -7.174506664276123
    10. ',
' → logprob: -7.299506664276123

Token 2771: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4417707622051239
    2. 'import' → logprob: -1.8167707920074463
    3. '
' → logprob: -2.1917707920074463
    4. 'from' → logprob: -2.8167707920074463
    5. ' from' → logprob: -4.941770553588867
    6. '```' → logprob: -5.191770553588867
    7. ' import' → logprob: -6.691770553588867
    8. ',' → logprob: -6.816770553588867
    9. '    
' → logprob: -7.316770553588867
    10. ')' → logprob: -7.316770553588867

Token 2772: ' considér' (ID: 68502)
  Prédit: ' utilisant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisant' → logprob: -0.19178545475006104
    2. 'import' → logprob: -2.8167853355407715
    3. ' passant' → logprob: -3.4417853355407715
    4. ' continu' → logprob: -3.5667853355407715
    5. '   ' → logprob: -4.8167853355407715
    6. ' suivant' → logprob: -4.9417853355407715
    7. ' poids' → logprob: -6.1917853355407715
    8. 'consider' → logprob: -6.1917853355407715
    9. 'not' → logprob: -6.3167853355407715
    10. 'continu' → logprob: -6.3167853355407715

Token 2773: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.35717710852622986
    2. 'g' → logprob: -1.7321771383285522
    3. 'ation' → logprob: -2.3571770191192627
    4. 'ing' → logprob: -5.357177257537842
    5. 'ng' → logprob: -5.357177257537842
    6. 'érant' → logprob: -5.982177257537842
    7. 'def' → logprob: -6.107177257537842
    8. 'u' → logprob: -6.357177257537842
    9. 'ération' → logprob: -6.732177257537842
    10. 'import' → logprob: -6.982177257537842

Token 2774: ' :
' (ID: 10039)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1358394622802734
    2. ' que' → logprob: -1.2608394622802734
    3. '   ' → logprob: -2.1358394622802734
    4. ' ' → logprob: -2.3858394622802734
    5. ' les' → logprob: -3.1358394622802734
    6. ' un' → logprob: -3.2608394622802734
    7. ' la' → logprob: -3.5108394622802734
    8. ' le' → logprob: -3.7608394622802734
    9. '    ' → logprob: -4.385839462280273
    10. ' des' → logprob: -5.135839462280273

Token 2775: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.469827264547348
    2. '   ' → logprob: -1.7198272943496704
    3. '[' → logprob: -2.594827175140381
    4. ' ' → logprob: -3.469827175140381
    5. '(' → logprob: -4.219827175140381
    6. '```' → logprob: -4.844827175140381
    7. '[
' → logprob: -4.969827175140381
    8. '    ' → logprob: -5.094827175140381
    9. ' (
' → logprob: -5.219827175140381
    10. ' 
' → logprob: -5.344827175140381

Token 2776: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9738430380821228
    2. '   ' → logprob: -1.2238430976867676
    3. '    ' → logprob: -2.7238430976867676
    4. ' ' → logprob: -2.9738430976867676
    5. '```' → logprob: -3.0988430976867676
    6. '(' → logprob: -4.098843097686768
    7. ''' → logprob: -4.348843097686768
    8. '0' → logprob: -4.473843097686768
    9. 'for' → logprob: -4.473843097686768
    10. ' ```' → logprob: -4.723843097686768

Token 2777: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.553823709487915
    2. ' (' → logprob: -1.553823709487915
    3. '```' → logprob: -2.553823709487915
    4. ' #' → logprob: -2.803823709487915
    5. '0' → logprob: -3.303823709487915
    6. '#' → logprob: -3.303823709487915
    7. ' ' → logprob: -3.428823709487915
    8. 'for' → logprob: -3.678823709487915
    9. ' un' → logprob: -3.678823709487915
    10. ' la' → logprob: -3.678823709487915

Token 2778: ' se' (ID: 458)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0940817594528198
    2. '   ' → logprob: -1.3440817594528198
    3. 'co' → logprob: -2.9690818786621094
    4. 'cases' → logprob: -3.0940818786621094
    5. 'les' → logprob: -3.2190818786621094
    6. 'la' → logprob: -3.4690818786621094
    7. ' la' → logprob: -3.5940818786621094
    8. 'case' → logprob: -3.7190818786621094
    9. 'le' → logprob: -4.094081878662109
    10. ' (' → logprob: -4.094081878662109

Token 2779: ' déplacer' (ID: 142135)
  Prédit: ' déplacer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.26116666197776794
    2. '   ' → logprob: -2.261166572570801
    3. ' =' → logprob: -3.636166572570801
    4. 't' → logprob: -4.136166572570801
    5. 'r' → logprob: -4.761166572570801
    6. ' #' → logprob: -4.886166572570801
    7. ' -' → logprob: -5.011166572570801
    8. '#' → logprob: -5.386166572570801
    9. ' ' → logprob: -5.386166572570801
    10. '
' → logprob: -5.386166572570801

Token 2780: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.4103054106235504
    2. ' ' → logprob: -1.660305380821228
    3. 'sur' → logprob: -2.9103055000305176
    4. ' vers' → logprob: -3.0353055000305176
    5. ' =' → logprob: -4.410305500030518
    6. '_' → logprob: -4.535305500030518
    7. '_sur' → logprob: -5.160305500030518
    8. ' (' → logprob: -6.035305500030518
    9. ' à' → logprob: -6.285305500030518
    10. ' dans' → logprob: -6.285305500030518

Token 2781: ' case' (ID: 1890)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.815500795841217
    2. ' des' → logprob: -1.4405007362365723
    3. 'une' → logprob: -1.4405007362365723
    4. 'des' → logprob: -3.5655007362365723
    5. 'case' → logprob: -4.065500736236572
    6. 'les' → logprob: -4.815500736236572
    7. 'cases' → logprob: -4.815500736236572
    8. ' case' → logprob: -5.065500736236572
    9. ' les' → logprob: -5.565500736236572
    10. ' cases' → logprob: -5.940500736236572

Token 2782: ' vide' (ID: 21835)
  Prédit: ' vide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -0.2591976225376129
    2. ' sans' → logprob: -2.13419771194458
    3. 'vide' → logprob: -2.88419771194458
    4. ' avec' → logprob: -3.38419771194458
    5. ' empty' → logprob: -5.38419771194458
    6. 'sans' → logprob: -5.75919771194458
    7. ' with' → logprob: -6.13419771194458
    8. '   ' → logprob: -6.50919771194458
    9. 's' → logprob: -6.63419771194458
    10. ' ' → logprob: -6.63419771194458

Token 2783: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2784: ' coût' (ID: 73109)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024416623637080193
    2. ' ' → logprob: -3.77441668510437
    3. '1' → logprob: -6.774416446685791
    4. '   ' → logprob: -10.89941692352295
    5. ' ' → logprob: -13.77441692352295
    6. '  ' → logprob: -13.89941692352295
    7. '```' → logprob: -14.02441692352295
    8. ' (' → logprob: -14.02441692352295
    9. 'cost' → logprob: -14.14941692352295
    10. ' =' → logprob: -14.27441692352295

Token 2785: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1978389024734497
    2. '=' → logprob: -1.8228389024734497
    3. '0' → logprob: -4.07283878326416
    4. ' ' → logprob: -7.32283878326416
    5. ' +' → logprob: -8.94783878326416
    6. '```' → logprob: -10.44783878326416
    7. ' ==' → logprob: -11.32283878326416
    8. 's' → logprob: -11.32283878326416
    9. '+' → logprob: -11.69783878326416
    10. '   ' → logprob: -11.94783878326416

Token 2786: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5894683003425598
    2. '=' → logprob: -0.8394683003425598
    3. '0' → logprob: -4.339468479156494
    4. ' ' → logprob: -8.089468002319336
    5. '```' → logprob: -10.714468002319336
    6. ' ==' → logprob: -11.589468002319336
    7. 's' → logprob: -11.964468002319336
    8. ' +' → logprob: -12.214468002319336
    9. '   ' → logprob: -12.214468002319336
    10. ',' → logprob: -12.464468002319336

Token 2787: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2788: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18836626410484314
    2. '1' → logprob: -2.938366174697876
    3. ' =' → logprob: -2.938366174697876
    4. ' ' → logprob: -4.313366413116455
    5. '=' → logprob: -4.313366413116455
    6. ' (' → logprob: -5.188366413116455
    7. 'case' → logprob: -5.188366413116455
    8. ')' → logprob: -5.313366413116455
    9. ',' → logprob: -5.563366413116455
    10. ' -' → logprob: -5.938366413116455

Token 2789: ' minute' (ID: 12434)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5132871866226196
    2. ' )' → logprob: -1.6382871866226196
    3. '0' → logprob: -2.13828706741333
    4. ' +' → logprob: -3.76328706741333
    5. ',' → logprob: -4.26328706741333
    6. ' ,' → logprob: -4.63828706741333
    7. '+' → logprob: -4.76328706741333
    8. '
' → logprob: -4.88828706741333
    9. ' ' → logprob: -5.51328706741333
    10. ' *' → logprob: -5.76328706741333

Token 2790: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10088217258453369
    2. '<|end|>' → logprob: -2.600882053375244
    3. ' )' → logprob: -4.850882053375244
    4. ',' → logprob: -5.350882053375244
    5. '<|end|>' → logprob: -6.100882053375244
    6. '
' → logprob: -6.600882053375244
    7. '```' → logprob: -6.725882053375244
    8. '),' → logprob: -6.975882053375244
    9. ' 
' → logprob: -7.475882053375244
    10. '+' → logprob: -8.100882530212402

Token 2791: ' car' (ID: 1669)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8647192716598511
    2. '#' → logprob: -1.864719271659851
    3. ' -' → logprob: -2.2397193908691406
    4. ' 
' → logprob: -2.6147193908691406
    5. ' ' → logprob: -2.7397193908691406
    6. '   ' → logprob: -3.2397193908691406
    7. '
' → logprob: -3.4897193908691406
    8. ' #' → logprob: -4.239719390869141
    9. ' mais' → logprob: -4.614719390869141
    10. '0' → logprob: -4.864719390869141

Token 2792: ' c' (ID: 274)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.970542848110199
    2. 'on' → logprob: -1.5955429077148438
    3. 'A' → logprob: -1.8455429077148438
    4. '0' → logprob: -2.8455429077148438
    5. ' A' → logprob: -2.9705429077148438
    6. ' ' → logprob: -3.4705429077148438
    7. 'case' → logprob: -3.5955429077148438
    8. ' la' → logprob: -4.095542907714844
    9. ' case' → logprob: -4.095542907714844
    10. ' ' → logprob: -4.595542907714844

Token 2793: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4502958059310913
    2. 'o' → logprob: -1.5752958059310913
    3. 'ase' → logprob: -1.8252958059310913
    4. '_' → logprob: -2.075295925140381
    5. 'ost' → logprob: -3.075295925140381
    6. ' =' → logprob: -3.450295925140381
    7. 'ont' → logprob: -3.450295925140381
    8. ',' → logprob: -3.825295925140381
    9. ''' → logprob: -3.950295925140381
    10. '```' → logprob: -4.075295925140381

Token 2794: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0297784805297852
    2. ' une' → logprob: -2.029778480529785
    3. ' un' → logprob: -2.404778480529785
    4. 'une' → logprob: -2.779778480529785
    5. ' ' → logprob: -3.029778480529785
    6. 'égal' → logprob: -3.154778480529785
    7. 'vide' → logprob: -3.404778480529785
    8. '```' → logprob: -3.779778480529785
    9. '_' → logprob: -3.904778480529785
    10. ' possible' → logprob: -3.904778480529785

Token 2795: ' déplacement' (ID: 138449)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.21658949553966522
    2. 'case' → logprob: -1.7165894508361816
    3. 'space' → logprob: -5.716589450836182
    4. ' espace' → logprob: -5.716589450836182
    5. ' ' → logprob: -6.466589450836182
    6. ' space' → logprob: -6.591589450836182
    7. ' déplacement' → logprob: -6.966589450836182
    8. ' cas' → logprob: -7.591589450836182
    9. ' )' → logprob: -8.21658992767334
    10. ' step' → logprob: -8.34158992767334

Token 2796: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2797: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1837166547775269
    2. ' ' → logprob: -1.9337166547775269
    3. '   ' → logprob: -2.4337167739868164
    4. ' =' → logprob: -2.5587167739868164
    5. '```' → logprob: -2.6837167739868164
    6. ',' → logprob: -2.9337167739868164
    7. ')' → logprob: -3.3087167739868164
    8. ' +' → logprob: -3.5587167739868164
    9. '=' → logprob: -3.9337167739868164
    10. '+' → logprob: -4.058716773986816

Token 2798: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2776893377304077
    2. ' (' → logprob: -1.9026893377304077
    3. ' ' → logprob: -1.9026893377304077
    4. ''' → logprob: -2.6526894569396973
    5. ' +' → logprob: -3.0276894569396973
    6. '-' → logprob: -3.5276894569396973
    7. '(' → logprob: -3.5276894569396973
    8. ':' → logprob: -3.6526894569396973
    9. ',' → logprob: -3.6526894569396973
    10. ' =' → logprob: -3.9026894569396973

Token 2799: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1765484809875488
    2. '-' → logprob: -1.1765484809875488
    3. ' -' → logprob: -2.051548480987549
    4. '   ' → logprob: -2.176548480987549
    5. '+' → logprob: -3.551548480987549
    6. ' ' → logprob: -3.801548480987549
    7. ' +' → logprob: -3.801548480987549
    8. ' #' → logprob: -4.176548480987549
    9. '
' → logprob: -4.926548480987549
    10. '0' → logprob: -4.926548480987549

Token 2800: ' se' (ID: 458)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.5995035767555237
    2. '-' → logprob: -1.974503517150879
    3. ' case' → logprob: -2.349503517150879
    4. ' -' → logprob: -2.599503517150879
    5. 'se' → logprob: -3.349503517150879
    6. ' se' → logprob: -3.724503517150879
    7. '#' → logprob: -4.099503517150879
    8. ' couper' → logprob: -4.724503517150879
    9. 'sur' → logprob: -4.724503517150879
    10. 'cou' → logprob: -4.974503517150879

Token 2801: ' déplacer' (ID: 142135)
  Prédit: ' déplacer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' déplacer' → logprob: -0.1401582658290863
    2. 'dé' → logprob: -2.265158176422119
    3. ' dé' → logprob: -4.640158176422119
    4. 'cou' → logprob: -4.765158176422119
    5. ' couper' → logprob: -5.390158176422119
    6. ' ' → logprob: -7.140158176422119
    7. '_c' → logprob: -7.265158176422119
    8. '   ' → logprob: -7.640158176422119
    9. 'd' → logprob: -8.140158653259277
    10. '_' → logprob: -8.390158653259277

Token 2802: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.2704342007637024
    2. 'sur' → logprob: -1.8954341411590576
    3. ' =' → logprob: -3.1454341411590576
    4. '_sur' → logprob: -3.3954341411590576
    5. ' ' → logprob: -5.145434379577637
    6. '=' → logprob: -5.895434379577637
    7. ' +' → logprob: -7.895434379577637
    8. ' _' → logprob: -7.895434379577637
    9. ' on' → logprob: -8.770434379577637
    10. ' vers' → logprob: -8.895434379577637

Token 2803: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.5765922665596008
    2. 'case' → logprob: -0.8265922665596008
    3. ' une' → logprob: -7.951592445373535
    4. 'une' → logprob: -8.201592445373535
    5. ' ' → logprob: -11.951592445373535
    6. '(case' → logprob: -12.326592445373535
    7. 'un' → logprob: -13.201592445373535
    8. ' un' → logprob: -13.326592445373535
    9. '	case' → logprob: -13.451592445373535
    10. '   ' → logprob: -13.451592445373535

Token 2804: ' avec' (ID: 3937)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.3509323000907898
    2. ' vide' → logprob: -1.2259323596954346
    3. 'avec' → logprob: -6.8509321212768555
    4. ' avec' → logprob: -7.7259321212768555
    5. ' =' → logprob: -8.350932121276855
    6. 'vid' → logprob: -8.850932121276855
    7. ' ' → logprob: -8.975932121276855
    8. ' ' → logprob: -9.100932121276855
    9. '=' → logprob: -9.350932121276855
    10. 'Vide' → logprob: -9.600932121276855

Token 2805: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.2897673547267914
    2. 'ar' → logprob: -2.039767265319824
    3. ' arbres' → logprob: -2.664767265319824
    4. '0' → logprob: -3.289767265319824
    5. ' arbre' → logprob: -5.289767265319824
    6. 'co' → logprob: -5.914767265319824
    7. ' ' → logprob: -6.414767265319824
    8. ' un' → logprob: -6.789767265319824
    9. 'un' → logprob: -7.039767265319824
    10. ' des' → logprob: -7.289767265319824

Token 2806: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006033672951161861
    2. '=' → logprob: -5.381033897399902
    3. ' ' → logprob: -8.006033897399902
    4. ' _' → logprob: -8.256033897399902
    5. '_' → logprob: -8.631033897399902
    6. '```' → logprob: -8.881033897399902
    7. 's' → logprob: -9.381033897399902
    8. ' (' → logprob: -9.881033897399902
    9. '`' → logprob: -10.256033897399902
    10. ' ```' → logprob: -10.381033897399902

Token 2807: ' interdit' (ID: 129427)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.62871915102005
    2. '(' → logprob: -1.5037190914154053
    3. 'co' → logprob: -3.0037190914154053
    4. 'A' → logprob: -3.0037190914154053
    5. ' ' → logprob: -3.1287190914154053
    6. ' A' → logprob: -3.3787190914154053
    7. '2' → logprob: -3.7537190914154053
    8. '0' → logprob: -4.003719329833984
    9. ' coût' → logprob: -5.253719329833984
    10. 'cout' → logprob: -5.753719329833984

Token 2808: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08299202471971512
    2. 'import' → logprob: -3.7079920768737793
    3. '       ' → logprob: -4.582992076873779
    4. ',' → logprob: -4.957992076873779
    5. '
' → logprob: -5.082992076873779
    6. 'def' → logprob: -5.707992076873779
    7. '                   ' → logprob: -5.832992076873779
    8. '               ' → logprob: -6.082992076873779
    9. ')' → logprob: -6.332992076873779
    10. 'from' → logprob: -6.457992076873779

Token 2809: 'car' (ID: 6830)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8280050158500671
    2. ')' → logprob: -1.203005075454712
    3. ' =' → logprob: -2.078005075454712
    4. ' )' → logprob: -3.078005075454712
    5. '=' → logprob: -3.578005075454712
    6. ' ' → logprob: -3.703005075454712
    7. '1' → logprob: -5.078004837036133
    8. '),' → logprob: -5.703004837036133
    9. ')
' → logprob: -5.828004837036133
    10. ' )
' → logprob: -5.828004837036133

Token 2810: ' il' (ID: 1793)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5878351330757141
    2. ' on' → logprob: -2.5878350734710693
    3. '0' → logprob: -2.7128350734710693
    4. 'il' → logprob: -2.9628350734710693
    5. 'arb' → logprob: -2.9628350734710693
    6. 'co' → logprob: -3.0878350734710693
    7. 'ils' → logprob: -3.3378350734710693
    8. 'ar' → logprob: -4.087835311889648
    9. 'le' → logprob: -4.337835311889648
    10. 'auc' → logprob: -4.462835311889648

Token 2811: ' faut' (ID: 17821)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2841642200946808
    2. 'n' → logprob: -2.1591641902923584
    3. ' ==' → logprob: -3.4091641902923584
    4. ' est' → logprob: -3.6591641902923584
    5. 's' → logprob: -3.9091641902923584
    6. ' faut' → logprob: -4.0341644287109375
    7. ' ne' → logprob: -4.2841644287109375
    8. '=' → logprob: -5.2841644287109375
    9. ')' → logprob: -5.4091644287109375
    10. ' =' → logprob: -5.5341644287109375

Token 2812: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.18747423589229584
    2. ' couper' → logprob: -2.187474250793457
    3. 'd' → logprob: -4.062474250793457
    4. ' les' → logprob: -4.687474250793457
    5. 'les' → logprob: -5.062474250793457
    6. ' d' → logprob: -5.562474250793457
    7. ' le' → logprob: -5.687474250793457
    8. 'le' → logprob: -6.062474250793457
    9. 'faire' → logprob: -6.062474250793457
    10. ' cou' → logprob: -6.312474250793457

Token 2813: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6086019277572632
    2. ' _' → logprob: -2.2336020469665527
    3. ')' → logprob: -2.7336020469665527
    4. ' les' → logprob: -2.8586020469665527
    5. ' des' → logprob: -3.3586020469665527
    6. '```' → logprob: -3.3586020469665527
    7. ' un' → logprob: -3.7336020469665527
    8. ' ' → logprob: -3.7336020469665527
    9. 'les' → logprob: -4.108602046966553
    10. '_sur' → logprob: -4.233602046966553

Token 2814: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.08246941864490509
    2. 'arb' → logprob: -2.5824694633483887
    3. '_' → logprob: -6.082469463348389
    4. ' ' → logprob: -8.08246898651123
    5. ' espaces' → logprob: -8.08246898651123
    6. 'ar' → logprob: -8.08246898651123
    7. ' trees' → logprob: -9.45746898651123
    8. 'trees' → logprob: -9.70746898651123
    9. ' arbre' → logprob: -9.83246898651123
    10. 'esp' → logprob: -9.95746898651123

Token 2815: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1509486585855484
    2. ' )' → logprob: -3.2759487628936768
    3. '<|end|>' → logprob: -3.4009487628936768
    4. ',' → logprob: -4.150948524475098
    5. '
' → logprob: -4.775948524475098
    6. '),' → logprob: -5.400948524475098
    7. 's' → logprob: -5.525948524475098
    8. ' (' → logprob: -5.525948524475098
    9. '```' → logprob: -5.650948524475098
    10. '   ' → logprob: -5.900948524475098

Token 2816: ''abord' (ID: 89989)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8942243456840515
    2. ''abord' → logprob: -0.8942243456840515
    3. 'ans' → logprob: -3.0192244052886963
    4. 'onc' → logprob: -3.7692244052886963
    5. '```' → logprob: -3.8942244052886963
    6. '=' → logprob: -4.144224166870117
    7. 'eux' → logprob: -4.269224166870117
    8. ''une' → logprob: -4.519224166870117
    9. 'es' → logprob: -4.644224166870117
    10. '')' → logprob: -5.269224166870117

Token 2817: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.231941819190979
    2. ',' → logprob: -2.9819416999816895
    3. '   ' → logprob: -3.2319416999816895
    4. '```' → logprob: -3.6069416999816895
    5. '
' → logprob: -3.9819416999816895
    6. ' )' → logprob: -4.2319416999816895
    7. '<|end|>' → logprob: -4.8569416999816895
    8. 'import' → logprob: -5.1069416999816895
    9. ' (' → logprob: -5.2319416999816895
    10. '#' → logprob: -5.4819416999816895

Token 2818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03479722514748573
    2. '#' → logprob: -4.159797191619873
    3. '                   ' → logprob: -5.784797191619873
    4. '
' → logprob: -6.159797191619873
    5. ',' → logprob: -6.159797191619873
    6. '       ' → logprob: -6.284797191619873
    7. '```' → logprob: -6.284797191619873
    8. '               ' → logprob: -6.909797191619873
    9. '                       ' → logprob: -7.159797191619873
    10. ')' → logprob: -7.409797191619873

Token 2819: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009783596731722355
    2. '
' → logprob: -5.759783744812012
    3. '                   ' → logprob: -6.384783744812012
    4. '       ' → logprob: -6.759783744812012
    5. '#' (adapté à ' #') → logprob: -7.009783744812012
    6. '```' → logprob: -7.759783744812012
    7. '               ' → logprob: -7.884783744812012
    8. '                       ' → logprob: -8.009783744812012
    9. '    
' → logprob: -8.134783744812012
    10. ',' → logprob: -8.134783744812012

Token 2820: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16706649959087372
    2. '
' → logprob: -2.0420665740966797
    3. '#' → logprob: -5.16706657409668
    4. 'import' → logprob: -5.66706657409668
    5. '    
' → logprob: -5.91706657409668
    6. ')' → logprob: -6.16706657409668
    7. '       ' → logprob: -6.79206657409668
    8. '```' → logprob: -6.79206657409668
    9. ' 
' → logprob: -7.66706657409668
    10. '                   ' → logprob: -7.79206657409668

Token 2821: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08203506469726562
    2. '   ' → logprob: -2.7070350646972656
    3. 'import' → logprob: -5.457035064697266
    4. '
' → logprob: -6.582035064697266
    5. ' #' → logprob: -6.582035064697266
    6. 'distance' → logprob: -7.082035064697266
    7. '                   ' → logprob: -7.207035064697266
    8. '       ' → logprob: -7.457035064697266
    9. 'cost' → logprob: -7.582035064697266
    10. 'dist' → logprob: -7.832035064697266

Token 2822: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5738487243652344
    2. '#' → logprob: -1.9488487243652344
    3. ' pour' → logprob: -2.9488487243652344
    4. 'on' → logprob: -3.1988487243652344
    5. ' ' → logprob: -3.3238487243652344
    6. ' #' → logprob: -3.6988487243652344
    7. ' se' → logprob: -3.8238487243652344
    8. ' continuer' → logprob: -4.448848724365234
    9. ' ' → logprob: -4.823848724365234
    10. ' possible' → logprob: -4.948848724365234

Token 2823: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40023598074913025
    2. ' peux' → logprob: -2.150235891342163
    3. 'do' → logprob: -3.025235891342163
    4. ' #' → logprob: -3.275235891342163
    5. 'pe' → logprob: -3.525235891342163
    6. ' peut' → logprob: -4.275236129760742
    7. ' doit' → logprob: -4.525236129760742
    8. 'continue' → logprob: -4.775236129760742
    9. 'vais' → logprob: -4.900236129760742
    10. ' pouvons' → logprob: -5.025236129760742

Token 2824: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.7570164799690247
    2. 'contin' → logprob: -1.8820164203643799
    3. ' continuer' → logprob: -2.13201642036438
    4. 'cou' → logprob: -2.50701642036438
    5. 'faire' → logprob: -3.38201642036438
    6. ' rester' → logprob: -3.50701642036438
    7. '       ' → logprob: -4.257016658782959
    8. 'se' → logprob: -4.382016658782959
    9. ' se' → logprob: -4.632016658782959
    10. ' déplacer' → logprob: -5.257016658782959

Token 2825: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7544053792953491
    2. ' ' → logprob: -1.7544053792953491
    3. ' (' → logprob: -3.1294054985046387
    4. 's' → logprob: -3.2544054985046387
    5. '   ' → logprob: -3.7544054985046387
    6. ')' → logprob: -3.8794054985046387
    7. ''' → logprob: -4.004405498504639
    8. '#' → logprob: -4.004405498504639
    9. ' un' → logprob: -4.129405498504639
    10. '(' → logprob: -4.254405498504639

Token 2826: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.5248778462409973
    2. ' arbres' → logprob: -0.8998778462409973
    3. 'trees' → logprob: -7.899878025054932
    4. 'ar' → logprob: -8.024877548217773
    5. 'adj' → logprob: -8.024877548217773
    6. '   ' → logprob: -8.774877548217773
    7. 'cases' → logprob: -9.024877548217773
    8. ' ' → logprob: -9.149877548217773
    9. ' arb' → logprob: -9.649877548217773
    10. ' trees' → logprob: -9.899877548217773

Token 2827: ' avant' (ID: 13339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4961141347885132
    2. ' +' → logprob: -2.3711142539978027
    3. ')' → logprob: -2.9961142539978027
    4. ',' → logprob: -3.2461142539978027
    5. '       ' → logprob: -3.8711142539978027
    6. '               ' → logprob: -4.121114253997803
    7. '+' → logprob: -4.246114253997803
    8. ' *' → logprob: -4.371114253997803
    9. 'import' → logprob: -4.621114253997803
    10. ' =' → logprob: -4.746114253997803

Token 2828: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08114247769117355
    2. 'import' → logprob: -3.8311424255371094
    3. '
' → logprob: -4.956142425537109
    4. ')' → logprob: -4.956142425537109
    5. '       ' → logprob: -5.331142425537109
    6. ',' → logprob: -5.331142425537109
    7. '               ' → logprob: -5.331142425537109
    8. ' +' → logprob: -5.706142425537109
    9. '           ' → logprob: -6.206142425537109
    10. '                   ' → logprob: -6.331142425537109

Token 2829: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7430967092514038
    2. '   ' → logprob: -2.1180968284606934
    3. 'import' → logprob: -2.4930968284606934
    4. ' for' → logprob: -2.9930968284606934
    5. 'for' → logprob: -2.9930968284606934
    6. '               ' → logprob: -2.9930968284606934
    7. ' #' → logprob: -3.3680968284606934
    8. '                   ' → logprob: -3.6180968284606934
    9. '           ' → logprob: -3.9930968284606934
    10. '...' → logprob: -4.368096828460693

Token 2830: ' coût' (ID: 73109)
  Prédit: ' coût'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coût' → logprob: -1.2362293004989624
    2. ' code' → logprob: -1.6112293004989624
    3. 'co' → logprob: -1.9862293004989624
    4. ' plus' → logprob: -2.361229419708252
    5. ' déplacement' → logprob: -3.111229419708252
    6. '#' → logprob: -3.361229419708252
    7. ' +' → logprob: -3.736229419708252
    8. '+' → logprob: -3.986229419708252
    9. ' temps' → logprob: -4.236229419708252
    10. 'cost' → logprob: -4.861229419708252

Token 2831: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4630104899406433
    2. '=' → logprob: -1.463010549545288
    3. ' de' → logprob: -2.838010549545288
    4. ' pour' → logprob: -3.088010549545288
    5. ' d' → logprob: -4.213010311126709
    6. ' ' → logprob: -5.463010311126709
    7. ' est' → logprob: -5.713010311126709
    8. 'pour' → logprob: -6.088010311126709
    9. ' à' → logprob: -6.338010311126709
    10. ' +=' → logprob: -6.463010311126709

Token 2832: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.915611743927002
    2. 'les' → logprob: -1.165611743927002
    3. 'se' → logprob: -2.665611743927002
    4. 'le' → logprob: -2.665611743927002
    5. 'pass' → logprob: -3.040611743927002
    6. 'p' → logprob: -3.665611743927002
    7. 'cut' → logprob: -3.915611743927002
    8. 'dé' → logprob: -5.165611743927002
    9. 'contin' → logprob: -5.415611743927002
    10. 'aller' → logprob: -5.415611743927002

Token 2833: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1347153186798096
    2. ' les' → logprob: -1.3847153186798096
    3. ' =' → logprob: -1.6347153186798096
    4. 'les' → logprob: -2.7597153186798096
    5. ' _' → logprob: -3.2597153186798096
    6. '=' → logprob: -3.7597153186798096
    7. '```' → logprob: -3.8847153186798096
    8. ' ' → logprob: -4.1347150802612305
    9. ' et' → logprob: -4.2597150802612305
    10. ' (' → logprob: -4.7597150802612305

Token 2834: ' rapport' (ID: 20847)
  Prédit: 'ram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ram' → logprob: -0.3974427878856659
    2. 'rap' → logprob: -2.2724428176879883
    3. 'se' → logprob: -2.5224428176879883
    4. 'porter' → logprob: -3.0224428176879883
    5. ' ram' → logprob: -3.7724428176879883
    6. ' se' → logprob: -4.397442817687988
    7. ' rapport' → logprob: -4.647442817687988
    8. 'ramer' → logprob: -4.772442817687988
    9. 'dé' → logprob: -4.897442817687988
    10. ' déplacer' → logprob: -5.397442817687988

Token 2835: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -4.320199877838604e-07
    2. 'ter' → logprob: -15.0
    3. '   ' → logprob: -16.875
    4. '               ' → logprob: -17.5
    5. '           ' → logprob: -17.75
    6. 'rer' → logprob: -17.875
    7. '```' → logprob: -18.0
    8. '...' → logprob: -18.625
    9. '                   ' → logprob: -18.75
    10. '#' → logprob: -18.75

Token 2836: ' les' (ID: 1341)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6812173128128052
    2. '_' → logprob: -1.8062173128128052
    3. '   ' → logprob: -1.9312173128128052
    4. ' ' → logprob: -2.3062171936035156
    5. '       ' → logprob: -2.6812171936035156
    6. ',' → logprob: -2.9312171936035156
    7. '<|end|>' → logprob: -2.9312171936035156
    8. ' +' → logprob: -3.6812171936035156
    9. ' =' → logprob: -4.056217193603516
    10. ' (' → logprob: -4.306217193603516

Token 2837: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.47444942593574524
    2. 'arb' → logprob: -0.9744493961334229
    3. 'ar' → logprob: -8.599449157714844
    4. 'trees' → logprob: -9.349449157714844
    5. ' ' → logprob: -9.724449157714844
    6. '   ' → logprob: -11.599449157714844
    7. ' trees' → logprob: -11.724449157714844
    8. ' arbre' → logprob: -11.974449157714844
    9. ' arb' → logprob: -12.599449157714844
    10. '```' → logprob: -12.849449157714844

Token 2838: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40327978134155273
    2. '       ' → logprob: -2.1532797813415527
    3. 'import' → logprob: -2.6532797813415527
    4. '
' → logprob: -3.4032797813415527
    5. ' +' → logprob: -3.6532797813415527
    6. ',' → logprob: -4.278279781341553
    7. ')' → logprob: -4.778279781341553
    8. '           ' → logprob: -5.153279781341553
    9. 'from' → logprob: -5.278279781341553
    10. '               ' → logprob: -5.278279781341553

Token 2839: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4236094355583191
    2. ' la' → logprob: -1.5486094951629639
    3. ' cette' → logprob: -2.298609495162964
    4. 'une' → logprob: -4.548609256744385
    5. 'c' → logprob: -5.298609256744385
    6. '   ' → logprob: -5.423609256744385
    7. 'l' → logprob: -6.048609256744385
    8. ' une' → logprob: -6.298609256744385
    9. ' ' → logprob: -6.548609256744385
    10. ' chaque' → logprob: -6.548609256744385

Token 2840: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.5767000317573547
    2. 'case' → logprob: -0.8267000317573547
    3. ' ' → logprob: -7.701700210571289
    4. '_case' → logprob: -9.826700210571289
    5. ' ' → logprob: -10.451700210571289
    6. '   ' → logprob: -10.576700210571289
    7. '(case' → logprob: -10.826700210571289
    8. 'cell' → logprob: -10.951700210571289
    9. ' cellule' → logprob: -10.951700210571289
    10. 'ligne' → logprob: -11.201700210571289

Token 2841: ' est' (ID: 893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0521886348724365
    2. ')' → logprob: -2.3021886348724365
    3. '   ' → logprob: -2.3021886348724365
    4. ',' → logprob: -2.5521886348724365
    5. ' ' → logprob: -2.8021886348724365
    6. ' _' → logprob: -3.5521886348724365
    7. '       ' → logprob: -3.8021886348724365
    8. ' =' → logprob: -3.8021886348724365
    9. ' (' → logprob: -4.052188873291016
    10. '<|end|>' → logprob: -4.052188873291016

Token 2842: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03376522287726402
    2. '(' → logprob: -3.6587653160095215
    3. ' ' → logprob: -5.9087653160095215
    4. '2' → logprob: -6.0337653160095215
    5. ' A' → logprob: -6.7837653160095215
    6. '                   ' → logprob: -8.783764839172363
    7. 'A' → logprob: -8.783764839172363
    8. '               ' → logprob: -9.033764839172363
    9. ' min' → logprob: -9.158764839172363
    10. '   ' → logprob: -9.408764839172363

Token 2843: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.45103979110717773
    2. '1' → logprob: -1.9510397911071777
    3. ' ' → logprob: -2.0760397911071777
    4. '(' → logprob: -3.3260397911071777
    5. ' A' → logprob: -3.7010397911071777
    6. ')' → logprob: -5.076039791107178
    7. 'A' → logprob: -5.451039791107178
    8. '0' → logprob: -5.576039791107178
    9. '```' → logprob: -5.576039791107178
    10. '2' → logprob: -6.076039791107178

Token 2844: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2987605929374695
    2. ' (' → logprob: -2.9237606525421143
    3. '(' → logprob: -3.5487606525421143
    4. '=' → logprob: -3.5487606525421143
    5. ' =' → logprob: -3.6737606525421143
    6. '    ' → logprob: -4.173760414123535
    7. '1' → logprob: -4.173760414123535
    8. ' *' → logprob: -4.423760414123535
    9. ' #' → logprob: -4.548760414123535
    10. '               ' → logprob: -4.673760414123535

Token 2845: '  ' (ID: 256)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.24084916710853577
    2. '(' → logprob: -2.615849256515503
    3. ' *' → logprob: -3.115849256515503
    4. ' ' → logprob: -4.115849018096924
    5. '*' → logprob: -4.365849018096924
    6. ' =' → logprob: -4.490849018096924
    7. '   ' → logprob: -4.490849018096924
    8. '1' → logprob: -5.115849018096924
    9. '=' → logprob: -5.740849018096924
    10. ' #' → logprob: -5.865849018096924

Token 2846: ' A' (ID: 355)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5797916054725647
    2. ' (' → logprob: -1.07979154586792
    3. '2' → logprob: -3.32979154586792
    4. '1' → logprob: -4.32979154586792
    5. '   ' → logprob: -4.95479154586792
    6. ' ' → logprob: -5.20479154586792
    7. 'le' → logprob: -5.45479154586792
    8. 'calcul' → logprob: -5.95479154586792
    9. 'A' (adapté à ' A') → logprob: -6.07979154586792
    10. '`' → logprob: -6.20479154586792

Token 2847: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020866614067927003
    2. '[' → logprob: -9.125208854675293
    3. 'i' → logprob: -10.375208854675293
    4. '\[' → logprob: -11.500208854675293
    5. '`' → logprob: -11.625208854675293
    6. '[[' → logprob: -12.000208854675293
    7. 'A' → logprob: -12.125208854675293
    8. '*' → logprob: -12.375208854675293
    9. ' [' → logprob: -12.375208854675293
    10. '
' → logprob: -12.625208854675293

Token 2848: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18342162668704987
    2. '][' → logprob: -1.8084216117858887
    3. ']' → logprob: -5.683421611785889
    4. '[' → logprob: -9.683422088623047
    5. '
' → logprob: -9.683422088623047
    6. ']
' → logprob: -10.308422088623047
    7. ' [' → logprob: -10.683422088623047
    8. '   ' → logprob: -10.683422088623047
    9. ' ][' → logprob: -10.683422088623047
    10. '```' → logprob: -11.683422088623047

Token 2849: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01837983913719654
    2. 'i' → logprob: -4.1433796882629395
    3. '][' → logprob: -6.3933796882629395
    4. ']' → logprob: -7.3933796882629395
    5. '   ' → logprob: -10.643380165100098
    6. '[j' → logprob: -11.518380165100098
    7. ' j' → logprob: -12.018380165100098
    8. '[i' → logprob: -12.768380165100098
    9. '
' → logprob: -12.893380165100098
    10. ']
' → logprob: -13.643380165100098

Token 2850: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3691391050815582
    2. '[i' → logprob: -1.2441390752792358
    3. ')' → logprob: -4.369139194488525
    4. '[j' → logprob: -5.994139194488525
    5. ']*' → logprob: -6.494139194488525
    6. '[' → logprob: -7.244139194488525
    7. 'if' → logprob: -7.369139194488525
    8. '```' → logprob: -7.494139194488525
    9. ' if' → logprob: -8.119138717651367
    10. ' ==' → logprob: -8.619138717651367

Token 2851: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0785958766937256
    2. '[i' → logprob: -1.5785958766937256
    3. '   ' → logprob: -1.7035958766937256
    4. '_' → logprob: -3.0785958766937256
    5. ',' → logprob: -3.4535958766937256
    6. ' +' → logprob: -3.5785958766937256
    7. '```' → logprob: -3.8285958766937256
    8. '[' → logprob: -4.203596115112305
    9. ' *' → logprob: -4.203596115112305
    10. '+' → logprob: -4.203596115112305

Token 2852: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.054888833314180374
    2. ' (' → logprob: -2.9298887252807617
    3. '   ' → logprob: -13.054888725280762
    4. ' ' → logprob: -13.679888725280762
    5. '((' → logprob: -13.929888725280762
    6. '`' → logprob: -13.929888725280762
    7. '```' → logprob: -15.304888725280762
    8. '1' → logprob: -15.554888725280762
    9. '（' → logprob: -15.804888725280762
    10. ' ((' → logprob: -15.929888725280762

Token 2853: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08719655871391296
    2. '2' → logprob: -2.8371965885162354
    3. ' (' → logprob: -3.7121965885162354
    4. ')' → logprob: -9.087196350097656
    5. ' ' → logprob: -9.087196350097656
    6. '1' → logprob: -9.337196350097656
    7. '   ' → logprob: -9.462196350097656
    8. '`' → logprob: -10.712196350097656
    9. '0' → logprob: -11.212196350097656
    10. '```' → logprob: -11.337196350097656

Token 2854: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04860939458012581
    2. '*' → logprob: -3.048609495162964
    3. ')' → logprob: -11.298609733581543
    4. '```' → logprob: -12.673609733581543
    5. ' ' → logprob: -12.923609733581543
    6. ' ' → logprob: -13.798609733581543
    7. '#' → logprob: -14.548609733581543
    8. '`' → logprob: -14.798609733581543
    9. ')*' → logprob: -14.798609733581543
    10. ' #' → logprob: -15.173609733581543

Token 2855: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04689101129770279
    2. 'min' → logprob: -3.1718909740448
    3. '(dist' → logprob: -5.921891212463379
    4. ' dist' → logprob: -7.546891212463379
    5. '(min' → logprob: -7.671891212463379
    6. '(' → logprob: -9.171891212463379
    7. ' (' → logprob: -10.046891212463379
    8. ' min' → logprob: -10.296891212463379
    9. '```' → logprob: -12.546891212463379
    10. 'inf' → logprob: -12.546891212463379

Token 2856: '_to' (ID: 5089)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.02311316318809986
    2. '+' → logprob: -4.523113250732422
    3. 'from' → logprob: -4.648113250732422
    4. '   ' → logprob: -7.273113250732422
    5. ' +' → logprob: -7.273113250732422
    6. ')' → logprob: -7.773113250732422
    7. ')+' → logprob: -9.648113250732422
    8. ' ' → logprob: -10.023113250732422
    9. '```' → logprob: -10.023113250732422
    10. '[' → logprob: -10.023113250732422

Token 2857: '_ne' (ID: 35498)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.47725710272789
    2. 'adj' → logprob: -1.1022571325302124
    3. 'i' → logprob: -3.352257013320923
    4. '(i' → logprob: -5.602257251739502
    5. '[i' → logprob: -6.227257251739502
    6. 'ni' → logprob: -6.352257251739502
    7. '_start' → logprob: -6.977257251739502
    8. 'from' → logprob: -7.477257251739502
    9. '(' → logprob: -7.602257251739502
    10. 'us' → logprob: -7.852257251739502

Token 2858: 'arest' (ID: 21325)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6658090353012085
    2. 'ighbor' → logprob: -1.7908090353012085
    3. 'start' → logprob: -2.915809154510498
    4. 'w' → logprob: -2.915809154510498
    5. '_start' → logprob: -3.165809154510498
    6. 'igh' → logprob: -3.290809154510498
    7. '(' → logprob: -3.790809154510498
    8. 'ighbour' → logprob: -3.915809154510498
    9. '
' → logprob: -4.415809154510498
    10. 'arest' → logprob: -4.540809154510498

Token 2859: '_adj' (ID: 117293)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5313829779624939
    2. '_adj' → logprob: -1.7813830375671387
    3. 'empty' → logprob: -1.9063830375671387
    4. '_empty' → logprob: -2.9063830375671387
    5. 'vide' → logprob: -4.656383037567139
    6. 'i' → logprob: -4.781383037567139
    7. '_' → logprob: -5.781383037567139
    8. '0' → logprob: -5.781383037567139
    9. '```' → logprob: -6.031383037567139
    10. ' ' → logprob: -6.156383037567139

Token 2860: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.011708548292517662
    2. 'ac' → logprob: -4.886708736419678
    3. 'cent' → logprob: -6.511708736419678
    4. 'acency' → logprob: -6.886708736419678
    5. '   ' → logprob: -7.636708736419678
    6. '
' → logprob: -8.51170825958252
    7. ')' → logprob: -8.88670825958252
    8. '```' → logprob: -9.01170825958252
    9. '(i' → logprob: -9.38670825958252
    10. 'ace' → logprob: -10.01170825958252

Token 2861: '_empty' (ID: 35051)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3761724531650543
    2. '_' → logprob: -2.2511725425720215
    3. '_case' → logprob: -3.0011725425720215
    4. ' )' → logprob: -3.1261725425720215
    5. '[' → logprob: -3.2511725425720215
    6. ')_' → logprob: -3.6261725425720215
    7. '```' → logprob: -4.6261725425720215
    8. 'case' → logprob: -4.7511725425720215
    9. '`' → logprob: -5.7511725425720215
    10. '_v' → logprob: -5.8761725425720215

Token 2862: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06260747462511063
    2. ']' → logprob: -4.312607288360596
    3. ')]' → logprob: -5.187607288360596
    4. '```' → logprob: -5.312607288360596
    5. '])' → logprob: -5.437607288360596
    6. 'cell' → logprob: -5.687607288360596
    7. '[' → logprob: -5.687607288360596
    8. ' )' → logprob: -5.687607288360596
    9. '_' → logprob: -5.687607288360596
    10. 'space' → logprob: -5.937607288360596

Token 2863: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010397175792604685
    2. ' ' → logprob: -7.001039505004883
    3. '0' → logprob: -9.001039505004883
    4. ')' → logprob: -12.376039505004883
    5. '   ' → logprob: -14.751039505004883
    6. '```' → logprob: -16.626039505004883
    7. '  ' → logprob: -16.751039505004883
    8. ' ' → logprob: -17.001039505004883
    9. '`' → logprob: -17.001039505004883
    10. '#' → logprob: -17.501039505004883

Token 2864: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05672905966639519
    2. '0' → logprob: -2.9317290782928467
    3. ' ' → logprob: -6.931728839874268
    4. ')' → logprob: -7.431728839874268
    5. '
' → logprob: -8.806729316711426
    6. 'j' → logprob: -9.931729316711426
    7. '```' → logprob: -10.431729316711426
    8. 'dist' → logprob: -11.806729316711426
    9. '#' → logprob: -11.806729316711426
    10. '   ' → logprob: -12.431729316711426

Token 2865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026958007365465164
    2. '[i' → logprob: -4.901957988739014
    3. ' )' → logprob: -5.526957988739014
    4. '   ' → logprob: -5.776957988739014
    5. '```' → logprob: -5.776957988739014
    6. ')
' → logprob: -6.026957988739014
    7. ']' → logprob: -7.276957988739014
    8. '+' → logprob: -7.276957988739014
    9. '*' → logprob: -7.526957988739014
    10. '[' → logprob: -7.651957988739014

Token 2866: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6080659031867981
    2. '   ' → logprob: -1.6080658435821533
    3. ')' → logprob: -2.9830658435821533
    4. ')
' → logprob: -3.2330658435821533
    5. ',' → logprob: -4.108066082000732
    6. '               ' → logprob: -4.358066082000732
    7. '       ' → logprob: -4.483066082000732
    8. '```' → logprob: -4.483066082000732
    9. '           ' → logprob: -4.733066082000732
    10. ',
' → logprob: -4.733066082000732

Token 2867: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0806935727596283
    2. 'import' → logprob: -3.455693483352661
    3. '
' → logprob: -3.705693483352661
    4. 'from' → logprob: -5.70569372177124
    5. '                   ' → logprob: -5.83069372177124
    6. '               ' → logprob: -5.95569372177124
    7. '```' → logprob: -5.95569372177124
    8. '       ' → logprob: -6.58069372177124
    9. ',' → logprob: -6.70569372177124
    10. '#' → logprob: -6.70569372177124

Token 2868: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014962868764996529
    2. 'import' → logprob: -4.514962673187256
    3. '       ' → logprob: -6.889962673187256
    4. '```' → logprob: -7.014962673187256
    5. '    
' → logprob: -7.139962673187256
    6. '
' → logprob: -8.014963150024414
    7. 'from' → logprob: -8.639963150024414
    8. ' import' → logprob: -9.389963150024414
    9. ',' → logprob: -9.514963150024414
    10. '#' → logprob: -9.889963150024414

Token 2869: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12429986894130707
    2. 'import' → logprob: -2.3742997646331787
    3. '
' → logprob: -5.374300003051758
    4. 'from' → logprob: -5.624300003051758
    5. '       ' → logprob: -6.124300003051758
    6. '```' → logprob: -6.124300003051758
    7. '#' (adapté à ' #') → logprob: -6.249300003051758
    8. ')' → logprob: -6.624300003051758
    9. 'dist' → logprob: -6.624300003051758
    10. ' import' → logprob: -6.874300003051758

Token 2870: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3943362534046173
    2. '   ' → logprob: -1.519336223602295
    3. '#' → logprob: -2.644336223602295
    4. 'from' → logprob: -3.519336223602295
    5. 'dist' → logprob: -5.394336223602295
    6. 'cost' → logprob: -7.769336223602295
    7. '
' → logprob: -7.769336223602295
    8. 'distance' → logprob: -8.144336700439453
    9. '```' → logprob: -8.769336700439453
    10. 'def' → logprob: -8.769336700439453

Token 2871: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.29624494910240173
    2. 'continue' → logprob: -2.7962448596954346
    3. ' va' → logprob: -3.0462448596954346
    4. 'import' → logprob: -3.5462448596954346
    5. ' #' → logprob: -4.171245098114014
    6. 'va' → logprob: -4.296245098114014
    7. 'do' → logprob: -4.546245098114014
    8. 'vais' → logprob: -4.796245098114014
    9. ' continue' → logprob: -4.921245098114014
    10. 'contin' → logprob: -5.171245098114014

Token 2872: ' mod' (ID: 1812)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.31955817341804504
    2. 'contin' → logprob: -2.3195581436157227
    3. 'from' → logprob: -2.6945581436157227
    4. 'util' → logprob: -3.1945581436157227
    5. 'faire' → logprob: -3.3195581436157227
    6. 'penser' → logprob: -4.944558143615723
    7. 'impl' → logprob: -5.569558143615723
    8. '```' → logprob: -5.569558143615723
    9. '#' → logprob: -5.694558143615723
    10. 'expl' → logprob: -6.569558143615723

Token 2873: 'él' (ID: 6778)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2929617166519165
    2. 'iter' → logprob: -1.4179617166519165
    3. 'placer' → logprob: -2.417961597442627
    4. 'et' → logprob: -2.792961597442627
    5. 'import' → logprob: -2.917961597442627
    6. 'érer' → logprob: -3.167961597442627
    7. 'éter' → logprob: -3.542961597442627
    8. 'urer' → logprob: -3.667961597442627
    9. 'coder' → logprob: -3.917961597442627
    10. 'ment' → logprob: -4.042961597442627

Token 2874: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.019955098628997803
    2. 'é' → logprob: -4.894955158233643
    3. 'érer' → logprob: -5.519955158233643
    4. 'e' → logprob: -6.019955158233643
    5. 'ifier' → logprob: -6.644955158233643
    6. 'ation' → logprob: -7.144955158233643
    7. 'ify' → logprob: -7.519955158233643
    8. ')' → logprob: -7.894955158233643
    9. 'è' → logprob: -7.894955158233643
    10. '=' → logprob: -8.019954681396484

Token 2875: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.318485140800476
    2. 'import' → logprob: -1.818485140800476
    3. ' a' → logprob: -2.0684852600097656
    4. ' un' → logprob: -2.4434852600097656
    5. ' ' → logprob: -2.5684852600097656
    6. '    ' → logprob: -3.3184852600097656
    7. '<|end|>' → logprob: -3.8184852600097656
    8. ' the' → logprob: -3.9434852600097656
    9. ')' → logprob: -3.9434852600097656
    10. '[
' → logprob: -4.068485260009766

Token 2876: ' problème' (ID: 35630)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.571247398853302
    2. 'import' → logprob: -1.9462473392486572
    3. 'd' → logprob: -2.4462473392486572
    4. 'gr' → logprob: -3.4462473392486572
    5. ' graph' → logprob: -3.4462473392486572
    6. 'cost' → logprob: -4.071247577667236
    7. 'distance' → logprob: -4.196247577667236
    8. 'problem' → logprob: -4.321247577667236
    9. 'from' → logprob: -4.696247577667236
    10. 'co' → logprob: -5.071247577667236

Token 2877: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.996432363986969
    2. ' as' → logprob: -1.9964323043823242
    3. ' comme' → logprob: -1.9964323043823242
    4. '=' → logprob: -2.246432304382324
    5. ' en' → logprob: -2.746432304382324
    6. ' par' → logprob: -3.371432304382324
    7. ':' → logprob: -3.871432304382324
    8. '<|end|>' → logprob: -3.996432304382324
    9. 'as' → logprob: -4.246432304382324
    10. '   ' → logprob: -4.371432304382324

Token 2878: ' raj' (ID: 46358)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2967841625213623
    2. 'continu' → logprob: -1.5467841625213623
    3. 'util' → logprob: -2.0467841625213623
    4. 'consider' → logprob: -2.5467841625213623
    5. ' utilisant' → logprob: -3.0467841625213623
    6. 'import' → logprob: -3.1717841625213623
    7. 'mod' → logprob: -3.7967841625213623
    8. '```' → logprob: -4.046784400939941
    9. 'aj' → logprob: -4.171784400939941
    10. 'cons' → logprob: -4.296784400939941

Token 2879: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.04868444800376892
    2. 'outer' → logprob: -3.0486843585968018
    3. 'outez' → logprob: -10.548684120178223
    4. 'oute' → logprob: -10.673684120178223
    5. 'ou' → logprob: -11.173684120178223
    6. '   ' → logprob: -11.173684120178223
    7. '```' → logprob: -12.048684120178223
    8. 'o' → logprob: -12.798684120178223
    9. 'OUT' → logprob: -13.673684120178223
    10. '       ' → logprob: -13.798684120178223

Token 2880: 'ant' (ID: 493)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1871929168701172
    2. 'outer' → logprob: -2.187192916870117
    3. 'ant' → logprob: -3.062192916870117
    4. 'er' → logprob: -5.312192916870117
    5. '   ' → logprob: -5.437192916870117
    6. 'ust' → logprob: -8.687192916870117
    7. 'outez' → logprob: -8.812192916870117
    8. '       ' → logprob: -8.812192916870117
    9. 'e' → logprob: -8.937192916870117
    10. 'ent' → logprob: -8.937192916870117

Token 2881: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.12127800285816193
    2. ' une' → logprob: -2.4962780475616455
    3. 'un' → logprob: -3.8712780475616455
    4. ' des' → logprob: -5.121277809143066
    5. 'une' → logprob: -6.496277809143066
    6. '```' → logprob: -6.746277809143066
    7. ' a' → logprob: -7.371277809143066
    8. '   ' → logprob: -8.371277809143066
    9. 'des' → logprob: -8.746277809143066
    10. ' à' → logprob: -8.746277809143066

Token 2882: ' poids' (ID: 56058)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -1.1149678230285645
    2. ' coût' → logprob: -1.9899678230285645
    3. ' poids' → logprob: -2.4899678230285645
    4. '```' → logprob: -2.4899678230285645
    5. ' code' → logprob: -3.1149678230285645
    6. '#' → logprob: -3.1149678230285645
    7. 'cost' → logprob: -3.1149678230285645
    8. ' #' → logprob: -3.3649678230285645
    9. 'import' → logprob: -3.7399678230285645
    10. ' temps' → logprob: -3.8649678230285645

Token 2883: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.722441554069519
    2. ' =' → logprob: -1.847441554069519
    3. '_' → logprob: -1.972441554069519
    4. '=' → logprob: -1.972441554069519
    5. 'es' → logprob: -2.4724416732788086
    6. ' ' → logprob: -2.7224416732788086
    7. '[' → logprob: -2.9724416732788086
    8. 's' → logprob: -3.3474416732788086
    9. '<|end|>' → logprob: -3.5974416732788086
    10. ' )' → logprob: -4.222441673278809

Token 2884: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.19501915574073792
    2. 'la' → logprob: -2.445019245147705
    3. 'd' → logprob: -3.570019245147705
    4. 'c' → logprob: -4.195019245147705
    5. 'l' → logprob: -4.445019245147705
    6. 'cha' → logprob: -4.570019245147705
    7. 'dé' → logprob: -5.320019245147705
    8. '```' → logprob: -5.320019245147705
    9. 'pass' → logprob: -6.445019245147705
    10. 'cut' → logprob: -6.570019245147705

Token 2885: ' ces' (ID: 10532)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021918563172221184
    2. ')' → logprob: -4.646918773651123
    3. ' _' → logprob: -5.271918773651123
    4. '```' → logprob: -7.021918773651123
    5. '<|end|>' → logprob: -7.521918773651123
    6. ']' → logprob: -7.771918773651123
    7. 'es' → logprob: -7.896918773651123
    8. ' ,' → logprob: -8.271918296813965
    9. ' )' → logprob: -8.396918296813965
    10. '_
' → logprob: -8.396918296813965

Token 2886: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.15576915442943573
    2. '_' → logprob: -2.030769109725952
    3. ' _' → logprob: -5.030769348144531
    4. ' cases' → logprob: -6.030769348144531
    5. '_cases' → logprob: -6.405769348144531
    6. 'arb' → logprob: -7.905769348144531
    7. ' ' → logprob: -8.280769348144531
    8. '_case' → logprob: -8.280769348144531
    9. 'cases' → logprob: -8.405769348144531
    10. ' arbre' → logprob: -8.405769348144531

Token 2887: ' sur' (ID: 1512)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.039171814918518
    2. 'import' → logprob: -1.539171814918518
    3. '
' → logprob: -1.664171814918518
    4. ')' → logprob: -2.7891716957092285
    5. ',' → logprob: -3.0391716957092285
    6. 'def' → logprob: -4.0391716957092285
    7. ':' → logprob: -4.2891716957092285
    8. 'from' → logprob: -4.4141716957092285
    9. 'dist' → logprob: -4.4141716957092285
    10. '```' → logprob: -4.9141716957092285

Token 2888: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.0084792375564575
    2. ' la' → logprob: -1.2584792375564575
    3. ' chaque' → logprob: -2.008479118347168
    4. 'le' → logprob: -2.133479118347168
    5. ' le' → logprob: -2.633479118347168
    6. 'l' → logprob: -4.758479118347168
    7. 'une' → logprob: -5.633479118347168
    8. 'les' → logprob: -6.133479118347168
    9. ' cette' → logprob: -6.258479118347168
    10. 'ces' → logprob: -6.633479118347168

Token 2889: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.9037846326828003
    2. 'case' → logprob: -1.6537846326828003
    3. 'che' → logprob: -2.27878475189209
    4. 'c' → logprob: -2.40378475189209
    5. 'cases' → logprob: -3.65378475189209
    6. 'temps' → logprob: -3.90378475189209
    7. 'm' → logprob: -4.02878475189209
    8. 'plus' → logprob: -4.15378475189209
    9. 'vo' → logprob: -4.27878475189209
    10. ' voisin' → logprob: -4.65378475189209

Token 2890: ' du' (ID: 1462)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.6097337007522583
    2. '   ' → logprob: -1.9847337007522583
    3. '
' → logprob: -2.3597335815429688
    4. ')' → logprob: -2.8597335815429688
    5. '```' → logprob: -2.8597335815429688
    6. 'def' → logprob: -2.9847335815429688
    7. '<|end|>' → logprob: -2.9847335815429688
    8. ' =' → logprob: -3.3597335815429688
    9. ':' → logprob: -3.3597335815429688
    10. '_' → logprob: -3.4847335815429688

Token 2891: ' chemin' (ID: 45035)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.0049535036087036
    2. 'che' → logprob: -1.1299535036087036
    3. 'case' → logprob: -2.129953384399414
    4. 'dé' → logprob: -2.504953384399414
    5. 'm' → logprob: -3.379953384399414
    6. ' déplacement' → logprob: -4.004953384399414
    7. 'vo' → logprob: -4.254953384399414
    8. '```' → logprob: -4.879953384399414
    9. 'pas' → logprob: -5.129953384399414
    10. ' passage' → logprob: -5.379953384399414

Token 2892: ' en' (ID: 469)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6510556936264038
    2. '   ' → logprob: -1.6510556936264038
    3. 'import' → logprob: -2.0260558128356934
    4. 'dist' → logprob: -3.5260558128356934
    5. '```' → logprob: -3.6510558128356934
    6. 'def' → logprob: -3.7760558128356934
    7. ':' → logprob: -4.401055812835693
    8. ')' → logprob: -4.651055812835693
    9. ',' → logprob: -5.276055812835693
    10. ':
' → logprob: -5.276055812835693

Token 2893: ' allant' (ID: 122150)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -1.5012719631195068
    2. '_' → logprob: -2.251271963119507
    3. ' passant' → logprob: -2.626271963119507
    4. ' ' → logprob: -3.251271963119507
    5. 'aj' → logprob: -3.501271963119507
    6. 'case' → logprob: -3.501271963119507
    7. 'temps' → logprob: -3.501271963119507
    8. '+' → logprob: -3.501271963119507
    9. ' continu' → logprob: -3.501271963119507
    10. 'dé' → logprob: -3.626271963119507

Token 2894: ' vers' (ID: 3640)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.8985944986343384
    2. 'à' → logprob: -2.023594379425049
    3. ' à' → logprob: -2.273594379425049
    4. '   ' → logprob: -2.273594379425049
    5. '```' → logprob: -2.648594379425049
    6. '       ' → logprob: -2.898594379425049
    7. 'au' → logprob: -2.898594379425049
    8. '(i' → logprob: -3.023594379425049
    9. '_' → logprob: -3.148594379425049
    10. '[i' → logprob: -3.148594379425049

Token 2895: ' SE' (ID: 6542)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3475724458694458
    2. '(i' → logprob: -1.3475724458694458
    3. 'ni' → logprob: -2.0975723266601562
    4. '```' → logprob: -2.5975723266601562
    5. ' ni' → logprob: -3.0975723266601562
    6. '   ' → logprob: -3.2225723266601562
    7. 'i' → logprob: -3.2225723266601562
    8. ' la' → logprob: -3.4725723266601562
    9. '               ' → logprob: -3.8475723266601562
    10. '                   ' → logprob: -4.222572326660156

Token 2896: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.72854083776474
    2. '
' → logprob: -0.97854083776474
    3. 'import' → logprob: -2.7285408973693848
    4. '```' → logprob: -3.9785408973693848
    5. 'dist' → logprob: -4.103540897369385
    6. 'def' → logprob: -5.228540897369385
    7. ')' → logprob: -5.478540897369385
    8. ',' → logprob: -5.603540897369385
    9. ' dist' → logprob: -5.978540897369385
    10. ')
' → logprob: -5.978540897369385

Token 2897: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23652657866477966
    2. '
' → logprob: -3.1115264892578125
    3. 'import' → logprob: -3.3615264892578125
    4. ',' → logprob: -3.6115264892578125
    5. ')' → logprob: -3.7365264892578125
    6. '       ' → logprob: -4.4865264892578125
    7. ':' → logprob: -4.4865264892578125
    8. 'def' → logprob: -5.4865264892578125
    9. '    ' → logprob: -5.6115264892578125
    10. '\' → logprob: -5.9240264892578125

Token 2898: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018530678004026413
    2. 'import' → logprob: -4.26853084564209
    3. 'from' → logprob: -6.51853084564209
    4. '
' → logprob: -6.76853084564209
    5. '```' → logprob: -7.14353084564209
    6. '    
' → logprob: -8.01853084564209
    7. 'dist' → logprob: -8.51853084564209
    8. '       ' → logprob: -9.26853084564209
    9. '#' → logprob: -9.39353084564209
    10. ' import' → logprob: -9.76853084564209

Token 2899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011494802311062813
    2. 'import' → logprob: -4.7614946365356445
    3. ' import' → logprob: -6.8864946365356445
    4. '```' → logprob: -8.011494636535645
    5. '
' → logprob: -8.136494636535645
    6. '    
' → logprob: -8.511494636535645
    7. 'from' → logprob: -8.636494636535645
    8. 'dist' → logprob: -8.761494636535645
    9. '#' → logprob: -9.011494636535645
    10. 'cost' → logprob: -9.136494636535645

Token 2900: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26590198278427124
    2. 'import' → logprob: -1.515902042388916
    3. '
' → logprob: -5.515902042388916
    4. 'dist' → logprob: -5.890902042388916
    5. 'from' → logprob: -5.890902042388916
    6. 'cost' → logprob: -7.140902042388916
    7. ' import' → logprob: -7.265902042388916
    8. '#' (adapté à ' #') → logprob: -7.515902042388916
    9. '```' → logprob: -7.640902042388916
    10. '    
' → logprob: -8.015901565551758

Token 2901: ' Altern' (ID: 22006)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15190726518630981
    2. 'dist' → logprob: -2.651907205581665
    3. '   ' → logprob: -2.901907205581665
    4. 'from' → logprob: -4.526907444000244
    5. '#' → logprob: -6.276907444000244
    6. 'cost' → logprob: -7.026907444000244
    7. 'distance' → logprob: -7.276907444000244
    8. 'heap' → logprob: -7.651907444000244
    9. '
' → logprob: -8.151906967163086
    10. '```' → logprob: -8.651906967163086

Token 2902: 'ativement' (ID: 159073)
  Prédit: 'ative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.02863265946507454
    2. '   ' → logprob: -4.903632640838623
    3. 'import' → logprob: -5.653632640838623
    4. 'ance' → logprob: -5.653632640838623
    5. 'atively' → logprob: -6.153632640838623
    6. '#' → logprob: -6.278632640838623
    7. 'ate' → logprob: -6.528632640838623
    8. 'atives' → logprob: -6.528632640838623
    9. 'aire' → logprob: -6.653632640838623
    10. 'ive' → logprob: -7.153632640838623

Token 2903: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6037613749504089
    2. ':' → logprob: -1.4787614345550537
    3. 'import' → logprob: -2.2287614345550537
    4. 'def' → logprob: -3.1037614345550537
    5. ',' → logprob: -4.353761196136475
    6. 'dist' → logprob: -5.103761196136475
    7. '#' → logprob: -5.353761196136475
    8. '
' → logprob: -5.353761196136475
    9. ' :' → logprob: -5.728761196136475
    10. '    ' → logprob: -5.853761196136475

Token 2904: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2175394892692566
    2. 'import' → logprob: -1.8425395488739014
    3. '#' → logprob: -4.092539310455322
    4. 'from' → logprob: -4.467539310455322
    5. '```' → logprob: -6.092539310455322
    6. '
' → logprob: -6.467539310455322
    7. ' #' → logprob: -6.592539310455322
    8. ' from' → logprob: -6.717539310455322
    9. ' import' → logprob: -6.967539310455322
    10. '       ' → logprob: -8.09253978729248

Token 2905: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.278348833322525
    2. 'import' → logprob: -1.6533488035202026
    3. 'dist' → logprob: -4.278348922729492
    4. 'from' → logprob: -4.653348922729492
    5. '
' → logprob: -5.653348922729492
    6. ' dist' → logprob: -5.903348922729492
    7. '       ' → logprob: -6.153348922729492
    8. ' from' → logprob: -6.153348922729492
    9. '#' (adapté à ' #') → logprob: -6.278348922729492
    10. '```' → logprob: -6.403348922729492

Token 2906: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4399641156196594
    2. 'import' → logprob: -1.9399640560150146
    3. 'from' → logprob: -2.3149640560150146
    4. '#' → logprob: -2.6899640560150146
    5. 'dist' → logprob: -4.314964294433594
    6. '
' → logprob: -4.814964294433594
    7. 'D' → logprob: -5.064964294433594
    8. 'def' → logprob: -5.314964294433594
    9. ' #' → logprob: -6.564964294433594
    10. 'd' → logprob: -6.564964294433594

Token 2907: ''' (ID: 6)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.604838490486145
    2. 'ambda' → logprob: -2.1048383712768555
    3. 'from' → logprob: -2.3548383712768555
    4. '#' → logprob: -2.6048383712768555
    5. 'ine' → logprob: -3.2298383712768555
    6. 'l' → logprob: -3.9798383712768555
    7. 'e' → logprob: -4.6048383712768555
    8. '   ' → logprob: -4.7298383712768555
    9. '```' → logprob: -4.9798383712768555
    10. 'ast' → logprob: -5.3548383712768555

Token 2908: 'én' (ID: 3289)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7069764733314514
    2. 'from' → logprob: -2.0819764137268066
    3. 'ambda' → logprob: -2.3319764137268066
    4. 'dist' → logprob: -3.2069764137268066
    5. 'def' → logprob: -3.7069764137268066
    6. 'd' → logprob: -3.7069764137268066
    7. '#' → logprob: -3.7069764137268066
    8. 'e' → logprob: -3.9569764137268066
    9. '[
' → logprob: -3.9569764137268066
    10. '   ' → logprob: -4.331976413726807

Token 2909: 'oncé' (ID: 59071)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.21520966291427612
    2. 'e' → logprob: -2.465209722518921
    3. '   ' → logprob: -4.215209484100342
    4. 'iné' → logprob: -4.340209484100342
    5. '
' → logprob: -4.715209484100342
    6. '```' → logprob: -4.840209484100342
    7. '``' → logprob: -5.215209484100342
    8. 'n' → logprob: -5.465209484100342
    9. 'y' → logprob: -5.715209484100342
    10. 'é' → logprob: -5.715209484100342

Token 2910: ' dit' (ID: 4758)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8004698753356934
    2. ' =' → logprob: -1.8004698753356934
    3. '   ' → logprob: -2.0504698753356934
    4. ':' → logprob: -2.3004698753356934
    5. '[' → logprob: -2.6754698753356934
    6. '_' → logprob: -2.8004698753356934
    7. '[i' → logprob: -3.0504698753356934
    8. '=' → logprob: -3.4254698753356934
    9. '[
' → logprob: -3.4254698753356934
    10. '
' → logprob: -3.5504698753356934

Token 2911: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5407025218009949
    2. ':' → logprob: -1.5407025814056396
    3. '       ' → logprob: -3.2907025814056396
    4. 'import' → logprob: -3.2907025814056396
    5. '```' → logprob: -3.6657025814056396
    6. ' :' → logprob: -3.7907025814056396
    7. '    ' → logprob: -4.6657023429870605
    8. ' import' → logprob: -5.1657023429870605
    9. 'def' → logprob: -5.2907023429870605
    10. '
' → logprob: -5.4157023429870605

Token 2912: ' l' (ID: 305)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1591365486383438
    2. 'import' → logprob: -3.2841365337371826
    3. ' la' → logprob: -3.9091365337371826
    4. '#' → logprob: -4.034136772155762
    5. 'on' → logprob: -4.534136772155762
    6. ' dist' → logprob: -4.659136772155762
    7. 'from' → logprob: -5.284136772155762
    8. ' le' → logprob: -5.534136772155762
    9. ' #' → logprob: -5.534136772155762
    10. 'dist' → logprob: -5.659136772155762

Token 2913: ''on' (ID: 25812)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7338049411773682
    2. '#' → logprob: -2.108804941177368
    3. 'import' → logprob: -2.108804941177368
    4. 'from' → logprob: -2.483804941177368
    5. 'é' → logprob: -2.483804941177368
    6. 'b' → logprob: -2.608804941177368
    7. '
' → logprob: -2.733804941177368
    8. ' ' → logprob: -3.733804941177368
    9. '   ' → logprob: -4.108804702758789
    10. '`' → logprob: -4.108804702758789

Token 2914: ' commence' (ID: 44755)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1695853471755981
    2. '#' → logprob: -1.5445853471755981
    3. 'continue' → logprob: -2.9195852279663086
    4. 'from' → logprob: -3.2945852279663086
    5. ' va' → logprob: -3.2945852279663086
    6. 'est' → logprob: -3.4195852279663086
    7. 'def' → logprob: -3.5445852279663086
    8. ' peut' → logprob: -3.6695852279663086
    9. 'do' → logprob: -3.6695852279663086
    10. 'va' → logprob: -3.7945852279663086

Token 2915: ' à' (ID: 1221)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.44200947880744934
    2. ' à' → logprob: -2.317009449005127
    3. '```' → logprob: -2.817009449005127
    4. '   ' → logprob: -3.317009449005127
    5. ' de' → logprob: -3.817009449005127
    6. 'from' → logprob: -3.942009449005127
    7. ' d' → logprob: -4.192009449005127
    8. 'def' → logprob: -4.192009449005127
    9. '_' → logprob: -4.442009449005127
    10. '
' → logprob: -4.567009449005127

Token 2916: ' l' (ID: 305)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.3559141159057617
    2. 'faire' → logprob: -1.7309141159057617
    3. ' continuer' → logprob: -2.9809141159057617
    4. '   ' → logprob: -3.3559141159057617
    5. ' parcour' → logprob: -3.3559141159057617
    6. ' utiliser' → logprob: -3.4809141159057617
    7. 'util' → logprob: -3.6059141159057617
    8. 'la' → logprob: -3.7309141159057617
    9. '```' → logprob: -3.7309141159057617
    10. '(' → logprob: -3.8559141159057617

Token 2917: ''us' (ID: 143210)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.5057002305984497
    2. 'a' → logprob: -1.6307002305984497
    3. 'é' → logprob: -1.6307002305984497
    4. ''' → logprob: -2.88070011138916
    5. 'o' → logprob: -3.00570011138916
    6. 'i' → logprob: -3.75570011138916
    7. '[
' → logprob: -4.00570011138916
    8. ''é' → logprob: -4.00570011138916
    9. 'end' → logprob: -4.13070011138916
    10. '```' → logprob: -4.75570011138916

Token 2918: 'ine' (ID: 514)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0068457345478236675
    2. 'er' → logprob: -5.631845951080322
    3. '   ' → logprob: -6.881845951080322
    4. 'r' → logprob: -7.131845951080322
    5. '=' → logprob: -8.256845474243164
    6. 'é' → logprob: -8.256845474243164
    7. 'ine' → logprob: -8.881845474243164
    8. '
' → logprob: -8.881845474243164
    9. 'i' → logprob: -9.256845474243164
    10. ')' → logprob: -9.631845474243164

Token 2919: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8715764284133911
    2. ',' → logprob: -1.4965764284133911
    3. ')' → logprob: -1.7465764284133911
    4. '_' → logprob: -2.8715763092041016
    5. ':' → logprob: -3.4965763092041016
    6. '
' → logprob: -4.121576309204102
    7. '```' → logprob: -4.121576309204102
    8. '[' → logprob: -4.246576309204102
    9. '       ' → logprob: -4.871576309204102
    10. '):' → logprob: -5.121576309204102

Token 2920: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6614907383918762
    2. '0' → logprob: -2.0364906787872314
    3. ' (' → logprob: -2.4114906787872314
    4. ' )' → logprob: -2.9114906787872314
    5. '   ' → logprob: -3.2864906787872314
    6. '_' → logprob: -3.7864906787872314
    7. ',' → logprob: -3.9114906787872314
    8. '(' → logprob: -3.9114906787872314
    9. ' ' → logprob: -4.0364909172058105
    10. ''' → logprob: -4.6614909172058105

Token 2921: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19788925349712372
    2. '0' → logprob: -2.3228893280029297
    3. ')' → logprob: -3.1978893280029297
    4. ',
' → logprob: -4.57288932800293
    5. '   ' → logprob: -4.57288932800293
    6. '
' → logprob: -5.19788932800293
    7. ' ,' → logprob: -5.32288932800293
    8. ')
' → logprob: -5.94788932800293
    9. '1' → logprob: -6.19788932800293
    10. '):' → logprob: -7.32288932800293

Token 2922: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009751364588737488
    2. '1' → logprob: -5.009751319885254
    3. ',' → logprob: -6.134751319885254
    4. ' ' → logprob: -7.509751319885254
    5. '   ' → logprob: -8.884751319885254
    6. ')' → logprob: -10.134751319885254
    7. '
' → logprob: -10.259751319885254
    8. '    ' → logprob: -11.009751319885254
    9. 'W' → logprob: -11.134751319885254
    10. ',
' → logprob: -11.259751319885254

Token 2923: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08334766328334808
    2. ',' → logprob: -2.9583475589752197
    3. '   ' → logprob: -4.333347797393799
    4. ')
' → logprob: -5.708347797393799
    5. '):' → logprob: -5.708347797393799
    6. '
' → logprob: -6.083347797393799
    7. '[' → logprob: -6.208347797393799
    8. ' )' → logprob: -7.208347797393799
    9. '```' → logprob: -7.708347797393799
    10. ',
' → logprob: -7.708347797393799

Token 2924: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26591649651527405
    2. ')' → logprob: -2.265916585922241
    3. ',' → logprob: -3.015916585922241
    4. ':' → logprob: -4.015916347503662
    5. '
' → logprob: -4.015916347503662
    6. '       ' → logprob: -4.265916347503662
    7. '):' → logprob: -4.265916347503662
    8. 'import' → logprob: -5.890916347503662
    9. ',
' → logprob: -6.890916347503662
    10. ' =' → logprob: -6.890916347503662

Token 2925: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.9234455823898315
    2. 'ar' → logprob: -1.7984455823898315
    3. '#' → logprob: -2.923445701599121
    4. '_' → logprob: -3.048445701599121
    5. ' arbre' → logprob: -3.048445701599121
    6. 'arb' → logprob: -3.298445701599121
    7. '```' → logprob: -3.298445701599121
    8. '   ' → logprob: -3.673445701599121
    9. '_ar' → logprob: -4.048445701599121
    10. '
' → logprob: -4.298445701599121

Token 2926: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6562870740890503
    2. '   ' → logprob: -1.6562870740890503
    3. 'import' → logprob: -1.7812870740890503
    4. ',' → logprob: -3.15628719329834
    5. ',
' → logprob: -4.03128719329834
    6. '```' → logprob: -4.28128719329834
    7. ')' → logprob: -4.40628719329834
    8. ' import' → logprob: -5.40628719329834
    9. ')
' → logprob: -5.53128719329834
    10. '    
' → logprob: -5.90628719329834

Token 2927: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5804020762443542
    2. ' et' → logprob: -2.205402135848999
    3. ')' → logprob: -2.580402135848999
    4. '
' → logprob: -2.705402135848999
    5. ' 
' → logprob: -3.580402135848999
    6. '```' → logprob: -3.580402135848999
    7. '       ' → logprob: -4.20540189743042
    8. ',' → logprob: -4.33040189743042
    9. ' puis' → logprob: -4.33040189743042
    10. '    
' → logprob: -4.58040189743042

Token 2928: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2642175853252411
    2. '
' → logprob: -2.3892176151275635
    3. ',' → logprob: -3.8892176151275635
    4. ')' → logprob: -4.014217376708984
    5. '    ' → logprob: -4.139217376708984
    6. '    
' → logprob: -4.389217376708984
    7. '       ' → logprob: -4.514217376708984
    8. ' 
' → logprob: -4.639217376708984
    9. ':' → logprob: -5.389217376708984
    10. '"' → logprob: -5.389217376708984

Token 2929: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3069514334201813
    2. ')' → logprob: -3.0569515228271484
    3. ':' → logprob: -3.0569515228271484
    4. ',' → logprob: -3.3069515228271484
    5. '
' → logprob: -3.9319515228271484
    6. ' :' → logprob: -4.556951522827148
    7. ' ,' → logprob: -4.681951522827148
    8. '    ' → logprob: -4.681951522827148
    9. '       ' → logprob: -4.806951522827148
    10. '):' → logprob: -4.931951522827148

Token 2930: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.892436683177948
    2. '#' → logprob: -1.5174367427825928
    3. ' on' → logprob: -2.0174367427825928
    4. 'on' → logprob: -2.1424367427825928
    5. ' #' → logprob: -3.0174367427825928
    6. ' que' → logprob: -3.6424367427825928
    7. 'que' → logprob: -4.392436504364014
    8. 'def' → logprob: -4.892436504364014
    9. ' ' → logprob: -5.017436504364014
    10. 'qu' → logprob: -5.392436504364014

Token 2931: ' déplacement' (ID: 138449)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -1.1740036010742188
    2. ' déplacement' → logprob: -1.2990036010742188
    3. ' step' → logprob: -2.9240036010742188
    4. '   ' → logprob: -2.9240036010742188
    5. ' ' → logprob: -3.1740036010742188
    6. 'case' → logprob: -3.2990036010742188
    7. ' pas' → logprob: -3.4240036010742188
    8. '_' → logprob: -3.5490036010742188
    9. ' move' → logprob: -3.6740036010742188
    10. '
' → logprob: -3.6740036010742188

Token 2932: ' coute' (ID: 145861)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.183336853981018
    2. '_' → logprob: -1.308336853981018
    3. ')' → logprob: -3.0583367347717285
    4. '=' → logprob: -3.0583367347717285
    5. ' =' → logprob: -3.0583367347717285
    6. '   ' → logprob: -3.3083367347717285
    7. ' _' → logprob: -3.4333367347717285
    8. ',' → logprob: -3.9333367347717285
    9. ' (' → logprob: -3.9333367347717285
    10. '       ' → logprob: -4.0583367347717285

Token 2933: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28583547472953796
    2. ' ' → logprob: -1.4108355045318604
    3. '```' → logprob: -5.660835266113281
    4. ' =' → logprob: -7.660835266113281
    5. 's' → logprob: -8.160835266113281
    6. ' ```' → logprob: -8.910835266113281
    7. '`' → logprob: -9.160835266113281
    8. ' ' → logprob: -10.160835266113281
    9. ' `' → logprob: -10.160835266113281
    10. '=' → logprob: -11.035835266113281

Token 2934: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009903526864945889
    2. ' ' → logprob: -4.634903430938721
    3. '```' → logprob: -8.884903907775879
    4. '`' → logprob: -12.509903907775879
    5. '   ' → logprob: -13.134903907775879
    6. '``' → logprob: -13.759903907775879
    7. ' =' → logprob: -14.759903907775879
    8. '=' → logprob: -14.759903907775879
    9. 'une' → logprob: -15.634903907775879
    10. ' ' → logprob: -15.759903907775879

Token 2935: ' minute' (ID: 12434)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2070224285125732
    2. '_' → logprob: -1.3320224285125732
    3. ')' → logprob: -1.5820224285125732
    4. ',' → logprob: -2.9570224285125732
    5. ' )' → logprob: -3.5820224285125732
    6. '
' → logprob: -3.7070224285125732
    7. ' ,' → logprob: -3.9570224285125732
    8. ':' → logprob: -4.207022666931152
    9. '```' → logprob: -4.332022666931152
    10. '0' → logprob: -4.582022666931152

Token 2936: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4199385344982147
    2. '
' → logprob: -1.169938564300537
    3. ',' → logprob: -4.169938564300537
    4. ',
' → logprob: -6.044938564300537
    5. 'import' → logprob: -6.294938564300537
    6. '       ' → logprob: -6.294938564300537
    7. '    
' → logprob: -6.294938564300537
    8. ')' → logprob: -6.419938564300537
    9. '```' → logprob: -6.794938564300537
    10. ')
' → logprob: -7.294938564300537

Token 2937: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2892679274082184
    2. '#' → logprob: -1.414267897605896
    3. ' #' → logprob: -5.9142680168151855
    4. ' et' → logprob: -6.2892680168151855
    5. 'et' → logprob: -6.7892680168151855
    6. '
' → logprob: -7.4142680168151855
    7. '       ' → logprob: -8.164267539978027
    8. ',' → logprob: -8.289267539978027
    9. '           ' → logprob: -8.539267539978027
    10. '"' → logprob: -8.914267539978027

Token 2938: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2082531601190567
    2. '#' (adapté à ' #') → logprob: -1.7082531452178955
    3. '
' → logprob: -6.458253383636475
    4. 'et' → logprob: -6.708253383636475
    5. ' #' → logprob: -6.958253383636475
    6. '"' → logprob: -7.083253383636475
    7. ' et' → logprob: -7.208253383636475
    8. ''' → logprob: -8.208252906799316
    9. '       ' → logprob: -8.333252906799316
    10. ',' → logprob: -8.958252906799316

Token 2939: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05019935593008995
    2. '
' → logprob: -4.050199508666992
    3. '#' → logprob: -5.050199508666992
    4. '       ' → logprob: -5.675199508666992
    5. ',' → logprob: -5.925199508666992
    6. 'cost' → logprob: -6.425199508666992
    7. 'distance' → logprob: -6.550199508666992
    8. '+' → logprob: -6.800199508666992
    9. 'for' → logprob: -6.925199508666992
    10. ')' → logprob: -7.050199508666992

Token 2940: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.08955132961273193
    2. 'atte' → logprob: -4.0895514488220215
    3. 'aller' → logprob: -4.3395514488220215
    4. ' couper' → logprob: -4.4645514488220215
    5. 'cut' → logprob: -4.8395514488220215
    6. 'c' → logprob: -5.4645514488220215
    7. ' aller' → logprob: -5.7145514488220215
    8. 'contin' → logprob: -5.8395514488220215
    9. ' chaque' → logprob: -5.9645514488220215
    10. 'se' → logprob: -6.0895514488220215

Token 2941: ' les' (ID: 1341)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.055314838886260986
    2. ' les' → logprob: -4.305315017700195
    3. 'un' → logprob: -4.430315017700195
    4. ' des' → logprob: -4.805315017700195
    5. ' ' → logprob: -5.180315017700195
    6. '<|end|>' → logprob: -5.180315017700195
    7. ' une' → logprob: -5.305315017700195
    8. 'des' → logprob: -7.430315017700195
    9. ' chaque' → logprob: -7.555315017700195
    10. ' ' → logprob: -7.680315017700195

Token 2942: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.42939987778663635
    2. 'arb' → logprob: -1.054399847984314
    3. 'ar' → logprob: -7.8043999671936035
    4. ' arbre' → logprob: -9.429399490356445
    5. 'trees' → logprob: -9.554399490356445
    6. ' arb' → logprob: -10.804399490356445
    7. ' trees' → logprob: -10.929399490356445
    8. '#' → logprob: -11.179399490356445
    9. '```' → logprob: -11.179399490356445
    10. ' ' → logprob: -11.429399490356445

Token 2943: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7274757623672485
    2. ' =' → logprob: -1.9774757623672485
    3. '<|end|>' → logprob: -2.227475643157959
    4. ' (' → logprob: -2.477475643157959
    5. ' on' → logprob: -2.977475643157959
    6. ' et' → logprob: -3.102475643157959
    7. 'adj' → logprob: -3.227475643157959
    8. 'sur' → logprob: -3.352475643157959
    9. 'import' → logprob: -3.352475643157959
    10. ' ' → logprob: -3.977475643157959

Token 2944: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.0027501583099365
    2. 'une' → logprob: -1.3777501583099365
    3. 'la' → logprob: -1.6277501583099365
    4. ' la' → logprob: -1.8777501583099365
    5. ' chaque' → logprob: -5.127750396728516
    6. 'case' → logprob: -5.252750396728516
    7. 'adj' → logprob: -5.502750396728516
    8. 'les' → logprob: -5.752750396728516
    9. '```' → logprob: -6.252750396728516
    10. ' case' → logprob: -6.502750396728516

Token 2945: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.02731742337346077
    2. ' case' → logprob: -3.652317523956299
    3. 'vo' → logprob: -7.277317523956299
    4. '```' → logprob: -9.27731704711914
    5. 'cell' → logprob: -9.40231704711914
    6. 'adj' → logprob: -9.52731704711914
    7. '   ' → logprob: -10.90231704711914
    8. 'cases' → logprob: -11.27731704711914
    9. ' ' → logprob: -11.40231704711914
    10. 'voie' → logprob: -12.02731704711914

Token 2946: ' vo' (ID: 778)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -1.2912975549697876
    2. ' vide' → logprob: -1.5412975549697876
    3. ' avec' → logprob: -1.6662975549697876
    4. ',' → logprob: -2.666297435760498
    5. ' sans' → logprob: -3.541297435760498
    6. '```' → logprob: -3.666297435760498
    7. '
' → logprob: -3.791297435760498
    8. '   ' → logprob: -4.041297435760498
    9. 'avec' → logprob: -4.166297435760498
    10. 'sans' → logprob: -4.166297435760498

Token 2947: 'isine' (ID: 24412)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9365013241767883
    2. 'us' → logprob: -1.5615012645721436
    3. 'y' → logprob: -1.8115012645721436
    4. 'i' → logprob: -2.9365012645721436
    5. 'ide' → logprob: -2.9365012645721436
    6. '   ' → logprob: -3.0615012645721436
    7. 'id' → logprob: -3.5615012645721436
    8. 'ut' → logprob: -5.436501502990723
    9. 'idé' → logprob: -5.436501502990723
    10. '  ' → logprob: -5.436501502990723

Token 2948: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6877266764640808
    2. ',' → logprob: -1.9377267360687256
    3. '               ' → logprob: -2.5627267360687256
    4. '                   ' → logprob: -3.0627267360687256
    5. ' (' → logprob: -3.5627267360687256
    6. ':' → logprob: -3.6877267360687256
    7. ' et' → logprob: -3.8127267360687256
    8. '                       ' → logprob: -3.9377267360687256
    9. '           ' → logprob: -4.0627264976501465
    10. '                           ' → logprob: -4.1877264976501465

Token 2949: ' dép' (ID: 34015)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.4516141712665558
    2. ' doit' → logprob: -1.9516141414642334
    3. ' do' → logprob: -2.3266141414642334
    4. ' continue' → logprob: -3.4516141414642334
    5. ' peux' → logprob: -3.7016141414642334
    6. '_do' → logprob: -4.0766143798828125
    7. ' ' → logprob: -5.3266143798828125
    8. ' devra' → logprob: -5.3266143798828125
    9. ' must' → logprob: -5.5766143798828125
    10. 'continue' → logprob: -5.7016143798828125

Token 2950: 'ense' (ID: 1603)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.002990655368193984
    2. 'aut' → logprob: -6.50299072265625
    3. 'ute' → logprob: -7.50299072265625
    4. 'ose' → logprob: -8.75299072265625
    5. 'out' → logprob: -9.00299072265625
    6. 'ort' → logprob: -9.12799072265625
    7. 'ût' → logprob: -9.12799072265625
    8. 't' → logprob: -9.37799072265625
    9. 'uts' → logprob: -9.87799072265625
    10. '   ' → logprob: -10.75299072265625

Token 2951: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5880988836288452
    2. ' ' → logprob: -1.3380988836288452
    3. ' une' → logprob: -1.8380988836288452
    4. ' un' → logprob: -4.838099002838135
    5. 'une' → logprob: -4.963099002838135
    6. 'un' → logprob: -5.588099002838135
    7. ' =' → logprob: -6.713099002838135
    8. ' du' → logprob: -6.963099002838135
    9. ' (' → logprob: -7.838099002838135
    10. '```' → logprob: -7.963099002838135

Token 2952: 'nombre' (ID: 28576)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43216973543167114
    2. ' ' → logprob: -1.0571696758270264
    3. ' une' → logprob: -7.0571699142456055
    4. ' un' → logprob: -7.1821699142456055
    5. 'un' → logprob: -7.6821699142456055
    6. ' (' → logprob: -8.182169914245605
    7. 'une' → logprob: -8.432169914245605
    8. ' le' → logprob: -9.057169914245605
    9. 'le' → logprob: -9.432169914245605
    10. '2' → logprob: -9.557169914245605

Token 2953: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0037221689708530903
    2. ')' → logprob: -7.253722190856934
    3. '_de' → logprob: -7.253722190856934
    4. '*' → logprob: -7.378722190856934
    5. ' de' → logprob: -8.128722190856934
    6. ' _' → logprob: -8.253722190856934
    7. '_of' → logprob: -8.628722190856934
    8. ' *' → logprob: -8.878722190856934
    9. '_des' → logprob: -9.253722190856934
    10. '+' → logprob: -9.378722190856934

Token 2954: 'arb' (ID: 36740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0025776787661015987
    2. ' _' → logprob: -7.127577781677246
    3. '_ar' → logprob: -7.752577781677246
    4. ')' → logprob: -8.002577781677246
    5. '_t' → logprob: -8.252577781677246
    6. 's' → logprob: -8.502577781677246
    7. 'arb' → logprob: -8.877577781677246
    8. ' arbres' → logprob: -9.377577781677246
    9. '_s' → logprob: -9.502577781677246
    10. '_)' → logprob: -10.377577781677246

Token 2955: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.316723108291626
    2. 'rees' → logprob: -2.191723108291626
    3. 'trees' → logprob: -3.316723108291626
    4. 'r' → logprob: -3.816723108291626
    5. 'ées' → logprob: -3.941723108291626
    6. 's' → logprob: -4.191722869873047
    7. 'es' → logprob: -4.441722869873047
    8. 'jets' → logprob: -4.566722869873047
    9. 'és' → logprob: -5.441722869873047
    10. 'êtes' → logprob: -5.566722869873047

Token 2956: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6663446426391602
    2. ' +' → logprob: -0.9163446426391602
    3. '+' → logprob: -3.16634464263916
    4. ')' → logprob: -3.29134464263916
    5. '*' → logprob: -5.29134464263916
    6. ' )' → logprob: -6.91634464263916
    7. ')*' → logprob: -7.91634464263916
    8. '```' → logprob: -8.04134464263916
    9. ' ' → logprob: -9.41634464263916
    10. ')+' → logprob: -10.16634464263916

Token 2957: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15576496720314026
    2. '(' → logprob: -2.0307650566101074
    3. '1' → logprob: -4.405765056610107
    4. ' ' → logprob: -8.28076457977295
    5. '```' → logprob: -8.90576457977295
    6. ')' → logprob: -9.03076457977295
    7. '(space' → logprob: -9.15576457977295
    8. ' ```' → logprob: -9.78076457977295
    9. '`' → logprob: -10.40576457977295
    10. ''' → logprob: -10.90576457977295

Token 2958: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03287463262677193
    2. '1' → logprob: -3.907874584197998
    3. ' (' → logprob: -4.407874584197998
    4. ' ' → logprob: -10.907875061035156
    5. '2' → logprob: -11.032875061035156
    6. '```' → logprob: -11.157875061035156
    7. '0' → logprob: -11.532875061035156
    8. '(
' → logprob: -12.782875061035156
    9. '
' → logprob: -13.282875061035156
    10. '((' → logprob: -13.407875061035156

Token 2959: ')' (ID: 8)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.31425151228904724
    2. ')' → logprob: -1.3142515420913696
    3. ' +' → logprob: -8.064251899719238
    4. ' minute' → logprob: -8.439251899719238
    5. ' ),' → logprob: -9.314251899719238
    6. 'minute' → logprob: -9.314251899719238
    7. ' ' → logprob: -9.689251899719238
    8. '+' → logprob: -9.814251899719238
    9. ')+' → logprob: -9.939251899719238
    10. ' )
' → logprob: -10.314251899719238

Token 2960: ' minute' (ID: 12434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4397984445095062
    2. '
' → logprob: -1.8147984743118286
    3. ' +' → logprob: -2.939798355102539
    4. ')' → logprob: -3.689798355102539
    5. 'import' → logprob: -3.939798355102539
    6. ' *' → logprob: -4.314798355102539
    7. '       ' → logprob: -4.564798355102539
    8. ')
' → logprob: -4.689798355102539
    9. '+' → logprob: -4.814798355102539
    10. '*' → logprob: -4.939798355102539

Token 2961: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5665059685707092
    2. '
' → logprob: -1.4415059089660645
    3. ')' → logprob: -2.8165059089660645
    4. ')
' → logprob: -3.4415059089660645
    5. 'def' → logprob: -3.5665059089660645
    6. 'import' → logprob: -4.4415059089660645
    7. '       ' → logprob: -4.6915059089660645
    8. '):' → logprob: -4.6915059089660645
    9. '```' → logprob: -4.9415059089660645
    10. ':' → logprob: -5.3165059089660645

Token 2962: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014678034000098705
    2. ' )' → logprob: -4.389678001403809
    3. ')
' → logprob: -7.389678001403809
    4. '),' → logprob: -7.889678001403809
    5. ' +' → logprob: -8.389678001403809
    6. '+' → logprob: -8.389678001403809
    7. ' plus' → logprob: -9.264678001403809
    8. ')+' → logprob: -9.639678001403809
    9. '<|end|>' → logprob: -9.764678001403809
    10. 'pour' → logprob: -9.889678001403809

Token 2963: ' coupe' (ID: 71780)
  Prédit: 'placement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.30369892716407776
    2. 'place' → logprob: -1.6786988973617554
    3. 'cou' → logprob: -4.303699016571045
    4. '```' → logprob: -4.553699016571045
    5. ' déplacement' → logprob: -4.678699016571045
    6. 'placer' → logprob: -4.803699016571045
    7. ')' → logprob: -4.803699016571045
    8. 'plus' → logprob: -5.428699016571045
    9. 'dé' → logprob: -5.428699016571045
    10. 'c' → logprob: -6.053699016571045

Token 2964: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021297212690114975
    2. 's' → logprob: -4.521296977996826
    3. ' )' → logprob: -5.146296977996826
    4. ')
' → logprob: -6.271296977996826
    5. '(s' → logprob: -7.396296977996826
    6. ')s' → logprob: -8.521297454833984
    7. ')n' → logprob: -8.521297454833984
    8. '),' → logprob: -8.771297454833984
    9. ')#' → logprob: -9.271297454833984
    10. ' ' → logprob: -9.271297454833984

Token 2965: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2820073366165161
    2. '   ' → logprob: -1.4070073366165161
    3. ''' → logprob: -2.2820072174072266
    4. ' +' → logprob: -2.6570072174072266
    5. '"' → logprob: -2.9070072174072266
    6. '#' → logprob: -3.6570072174072266
    7. '       ' → logprob: -3.7820072174072266
    8. ' 
' → logprob: -4.032007217407227
    9. '
' → logprob: -4.282007217407227
    10. '    
' → logprob: -4.407007217407227

Token 2966: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2904110550880432
    2. ''' → logprob: -3.2904109954833984
    3. ' +' → logprob: -3.2904109954833984
    4. '#' (adapté à ' #') → logprob: -3.4154109954833984
    5. '       ' → logprob: -3.4154109954833984
    6. '"' → logprob: -3.4154109954833984
    7. '           ' → logprob: -3.7904109954833984
    8. '+' → logprob: -4.415410995483398
    9. '                   ' → logprob: -4.415410995483398
    10. '               ' → logprob: -4.790410995483398

Token 2967: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4331575930118561
    2. '   ' → logprob: -2.1831576824188232
    3. ' +' → logprob: -2.6831576824188232
    4. ')' → logprob: -3.6831576824188232
    5. ' #' → logprob: -3.6831576824188232
    6. ''' → logprob: -3.8081576824188232
    7. '"' → logprob: -3.9331576824188232
    8. '+' → logprob: -4.058157444000244
    9. '           ' → logprob: -4.558157444000244
    10. '       ' → logprob: -4.933157444000244

Token 2968: ' rapport' (ID: 20847)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.11038502305746078
    2. ' se' → logprob: -3.235384941101074
    3. ' each' → logprob: -4.735384941101074
    4. 'each' → logprob: -5.110384941101074
    5. 'se' → logprob: -5.235384941101074
    6. 'dé' → logprob: -5.360384941101074
    7. ' ' → logprob: -5.610384941101074
    8. '   ' → logprob: -5.860384941101074
    9. ' ram' → logprob: -5.860384941101074
    10. 'ch' → logprob: -5.985384941101074

Token 2969: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.5213274309644476e-05
    2. '   ' → logprob: -11.875015258789062
    3. ' ' → logprob: -12.500015258789062
    4. '               ' → logprob: -13.250015258789062
    5. '           ' → logprob: -14.500015258789062
    6. '       ' → logprob: -14.500015258789062
    7. 'ter' → logprob: -15.125015258789062
    8. '             ' → logprob: -15.500015258789062
    9. '#' → logprob: -15.750015258789062
    10. '                   ' → logprob: -15.875015258789062

Token 2970: ' chaque' (ID: 21194)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6016808748245239
    2. ' ' → logprob: -1.351680874824524
    3. 'les' → logprob: -2.2266807556152344
    4. ' (' → logprob: -3.7266807556152344
    5. '   ' → logprob: -3.8516807556152344
    6. 'er' → logprob: -4.851680755615234
    7. ' le' → logprob: -5.351680755615234
    8. ' des' → logprob: -5.851680755615234
    9. ' chaque' → logprob: -5.851680755615234
    10. 'le' → logprob: -6.226680755615234

Token 2971: ' arbre' (ID: 164180)
  Prédit: ' arbre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbre' → logprob: -0.11560530215501785
    2. 'ar' → logprob: -2.365605354309082
    3. '   ' → logprob: -4.740605354309082
    4. ' ' → logprob: -5.990605354309082
    5. ' ' → logprob: -6.865605354309082
    6. '```' → logprob: -7.490605354309082
    7. '_' → logprob: -7.865605354309082
    8. ' arbres' → logprob: -8.240605354309082
    9. '     ' → logprob: -8.490605354309082
    10. '  ' → logprob: -8.490605354309082

Token 2972: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8573179244995117
    2. '_' → logprob: -1.8573179244995117
    3. '_to' → logprob: -2.4823179244995117
    4. ',' → logprob: -2.6073179244995117
    5. ' =' → logprob: -4.107317924499512
    6. '       ' → logprob: -4.107317924499512
    7. ' à' → logprob: -4.107317924499512
    8. ')' → logprob: -4.107317924499512
    9. '```' → logprob: -4.107317924499512
    10. ' *' → logprob: -4.107317924499512

Token 2973: ' dép' (ID: 34015)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.5856449604034424
    2. 'do' → logprob: -1.7106449604034424
    3. 'd' → logprob: -3.3356449604034424
    4. 'fait' → logprob: -3.3356449604034424
    5. ' dép' → logprob: -3.3356449604034424
    6. ' continue' → logprob: -3.9606449604034424
    7. 'dé' → logprob: -4.085644721984863
    8. 'continue' → logprob: -4.085644721984863
    9. ' faut' → logprob: -4.585644721984863
    10. ' ' → logprob: -4.710644721984863

Token 2974: 'ense' (ID: 1603)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.034806087613105774
    2. 'orter' → logprob: -3.5348060131073
    3. 'orts' → logprob: -7.409806251525879
    4. ')' → logprob: -7.659806251525879
    5. 'ortar' → logprob: -7.659806251525879
    6. 'u' → logprob: -8.284806251525879
    7. 'or' → logprob: -8.284806251525879
    8. 'porter' → logprob: -8.409806251525879
    9. '   ' → logprob: -8.534806251525879
    10. 'o' → logprob: -8.784806251525879

Token 2975: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44053351879119873
    2. '1' → logprob: -1.1905335187911987
    3. ' (' → logprob: -3.0655336380004883
    4. '(' → logprob: -6.065533638000488
    5. ' une' → logprob: -7.440533638000488
    6. '```' → logprob: -7.690533638000488
    7. ' un' → logprob: -7.815533638000488
    8. ' ' → logprob: -8.190533638000488
    9. ' =' → logprob: -8.440533638000488
    10. '`' → logprob: -8.815533638000488

Token 2976: 'distance' (ID: 40614)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07639285922050476
    2. ' ' → logprob: -2.951392889022827
    3. 'nombre' → logprob: -4.201392650604248
    4. 'distance' → logprob: -5.826392650604248
    5. ' nombre' → logprob: -6.576392650604248
    6. 'dist' → logprob: -7.201392650604248
    7. ' distance' → logprob: -8.576393127441406
    8. ' (' → logprob: -9.076393127441406
    9. '   ' → logprob: -9.326393127441406
    10. '```' → logprob: -9.451393127441406

Token 2977: ' aller' (ID: 18383)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04293638467788696
    2. '_from' → logprob: -4.167936325073242
    3. ')' → logprob: -4.542936325073242
    4. '_to' → logprob: -4.917936325073242
    5. '+' → logprob: -5.542936325073242
    6. '   ' → logprob: -7.542936325073242
    7. '_de' → logprob: -7.792936325073242
    8. '_between' → logprob: -7.792936325073242
    9. ' _' → logprob: -7.917936325073242
    10. ')_' → logprob: -7.917936325073242

Token 2978: '-ret' (ID: 104824)
  Prédit: '_ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ret' → logprob: -0.45024195313453674
    2. '-ret' → logprob: -1.2002419233322144
    3. '_' → logprob: -3.325242042541504
    4. '_re' → logprob: -4.450242042541504
    5. '_return' → logprob: -5.200242042541504
    6. '_sur' → logprob: -6.200242042541504
    7. '_-' → logprob: -6.450242042541504
    8. '```' → logprob: -7.075242042541504
    9. '-re' → logprob: -7.700242042541504
    10. '_to' → logprob: -7.825242042541504

Token 2979: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -6.360996485454962e-05
    2. 'out' → logprob: -10.8750638961792
    3. '```' → logprob: -11.8750638961792
    4. 'ours' → logprob: -12.2500638961792
    5. 'Our' → logprob: -12.2500638961792
    6. 'ou' → logprob: -12.3750638961792
    7. '
' → logprob: -12.5000638961792
    8. 'r' → logprob: -12.5000638961792
    9. 'tour' → logprob: -12.5000638961792
    10. 'OUR' → logprob: -13.1250638961792

Token 2980: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8181720972061157
    2. '+' → logprob: -1.3181720972061157
    3. ' +' → logprob: -1.6931720972061157
    4. ' )' → logprob: -3.443171977996826
    5. '*' → logprob: -3.943171977996826
    6. '```' → logprob: -4.318171977996826
    7. ' *' → logprob: -4.568171977996826
    8. '_to' → logprob: -5.943171977996826
    9. ' =' → logprob: -5.943171977996826
    10. '=' → logprob: -6.068171977996826

Token 2981: ' minutes' (ID: 5438)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3746763467788696
    2. '   ' → logprob: -1.3746763467788696
    3. 'import' → logprob: -1.8746763467788696
    4. '
' → logprob: -2.62467622756958
    5. ']' → logprob: -3.49967622756958
    6. ',' → logprob: -3.49967622756958
    7. ')
' → logprob: -3.62467622756958
    8. ':' → logprob: -3.74967622756958
    9. 'dist' → logprob: -3.87467622756958
    10. 'def' → logprob: -4.24967622756958

Token 2982: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24233563244342804
    2. ':' → logprob: -2.992335557937622
    3. '
' → logprob: -3.117335557937622
    4. ',' → logprob: -3.742335557937622
    5. ':
' → logprob: -4.117335796356201
    6. 'import' → logprob: -4.242335796356201
    7. ')' → logprob: -4.367335796356201
    8. '):' → logprob: -4.617335796356201
    9. ')
' → logprob: -5.242335796356201
    10. ',
' → logprob: -5.367335796356201

Token 2983: ' déplacement' (ID: 138449)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.6531715393066406
    2. 'march' → logprob: -1.6531715393066406
    3. 'se' → logprob: -1.9031715393066406
    4. 'plus' → logprob: -2.6531715393066406
    5. 'port' → logprob: -3.5281715393066406
    6. 'temps' → logprob: -4.403171539306641
    7. 'transport' → logprob: -4.778171539306641
    8. 'm' → logprob: -5.778171539306641
    9. ' déplacement' → logprob: -6.153171539306641
    10. 'de' → logprob: -6.278171539306641

Token 2984: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2996535301208496
    2. '
' → logprob: -2.1746535301208496
    3. ')' → logprob: -2.2996535301208496
    4. 'import' → logprob: -4.54965353012085
    5. 'def' → logprob: -4.92465353012085
    6. '       ' → logprob: -5.29965353012085
    7. ',' → logprob: -5.79965353012085
    8. '```' → logprob: -5.79965353012085
    9. ')
' → logprob: -5.92465353012085
    10. '):' → logprob: -6.17465353012085

Token 2985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4908500909805298
    2. '
' → logprob: -1.9908500909805298
    3. ')' → logprob: -2.1158499717712402
    4. ')
' → logprob: -3.4908499717712402
    5. 'def' → logprob: -3.6158499717712402
    6. 'import' → logprob: -3.9908499717712402
    7. '```' → logprob: -4.86584997177124
    8. ',' → logprob: -4.99084997177124
    9. '    
' → logprob: -5.61584997177124
    10. ' 
' → logprob: -5.86584997177124

Token 2986: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00869623851031065
    2. '
' → logprob: -6.13369607925415
    3. ')' → logprob: -6.25869607925415
    4. '       ' → logprob: -6.75869607925415
    5. 'import' → logprob: -7.50869607925415
    6. '#' → logprob: -7.75869607925415
    7. '    
' → logprob: -8.008696556091309
    8. 'def' → logprob: -8.133696556091309
    9. 'dist' → logprob: -8.383696556091309
    10. ',' → logprob: -8.758696556091309

Token 2987: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03143758326768875
    2. '
' → logprob: -3.906437635421753
    3. 'import' → logprob: -5.031437397003174
    4. '    
' → logprob: -6.656437397003174
    5. 'from' → logprob: -6.781437397003174
    6. 'def' → logprob: -7.406437397003174
    7. '#' → logprob: -7.906437397003174
    8. ')' → logprob: -7.906437397003174
    9. '```' → logprob: -9.531437873840332
    10. '<|end|>' → logprob: -9.531437873840332

Token 2988: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07746697962284088
    2. 'import' → logprob: -3.0774669647216797
    3. '
' → logprob: -4.32746696472168
    4. ')' → logprob: -5.32746696472168
    5. '#' (adapté à ' #') → logprob: -6.07746696472168
    6. 'from' → logprob: -6.32746696472168
    7. '    
' → logprob: -6.45246696472168
    8. '```' → logprob: -7.32746696472168
    9. 'dist' → logprob: -7.57746696472168
    10. 'def' → logprob: -7.82746696472168

Token 2989: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5073999166488647
    2. 'import' → logprob: -1.0073999166488647
    3. 'from' → logprob: -3.8824000358581543
    4. '
' → logprob: -5.382400035858154
    5. 'def' → logprob: -6.882400035858154
    6. '#' → logprob: -7.007400035858154
    7. ')' → logprob: -7.007400035858154
    8. '```' → logprob: -7.257400035858154
    9. 'distance' → logprob: -7.632400035858154
    10. 'dist' → logprob: -7.757400035858154

Token 2990: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0171412229537964
    2. 'import' → logprob: -1.2671412229537964
    3. '   ' → logprob: -1.7671412229537964
    4. 'for' → logprob: -3.017141342163086
    5. 'distance' → logprob: -3.142141342163086
    6. 'from' → logprob: -3.267141342163086
    7. 'dist' → logprob: -3.642141342163086
    8. ' for' → logprob: -5.017141342163086
    9. ' #' → logprob: -5.267141342163086
    10. 'def' → logprob: -5.392141342163086

Token 2991: ' coût' (ID: 73109)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5586560964584351
    2. 'distance' → logprob: -2.4336562156677246
    3. 'for' → logprob: -2.6836562156677246
    4. 'def' → logprob: -3.1836562156677246
    5. 'import' → logprob: -3.1836562156677246
    6. 'cost' → logprob: -3.3086562156677246
    7. ' #' → logprob: -3.8086562156677246
    8. 'dist' → logprob: -3.9336562156677246
    9. 'from' → logprob: -4.058656215667725
    10. '   ' → logprob: -4.058656215667725

Token 2992: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.161804661154747
    2. '=' → logprob: -2.411804676055908
    3. '_' → logprob: -3.411804676055908
    4. ' +=' → logprob: -4.411804676055908
    5. ' ' → logprob: -5.161804676055908
    6. ')' → logprob: -6.536804676055908
    7. '   ' → logprob: -6.911804676055908
    8. '[' → logprob: -6.911804676055908
    9. ' de' → logprob: -6.911804676055908
    10. '_for' → logprob: -7.036804676055908

Token 2993: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.2774788439273834
    2. 'se' → logprob: -1.652478814125061
    3. 'aller' → logprob: -4.5274786949157715
    4. 'dé' → logprob: -4.6524786949157715
    5. 'atte' → logprob: -5.0274786949157715
    6. 'cut' → logprob: -5.4024786949157715
    7. 'pass' → logprob: -5.5274786949157715
    8. 'contin' → logprob: -5.7774786949157715
    9. 'd' → logprob: -6.9024786949157715
    10. 'c' → logprob: -6.9024786949157715

Token 2994: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7758145928382874
    2. ' les' → logprob: -1.4008145332336426
    3. 'et' → logprob: -2.2758145332336426
    4. ' et' → logprob: -2.5258145332336426
    5. ' chaque' → logprob: -3.2758145332336426
    6. 'un' → logprob: -4.275814533233643
    7. 'ces' → logprob: -4.400814533233643
    8. ' ces' → logprob: -4.400814533233643
    9. ' un' → logprob: -5.025814533233643
    10. ' ' → logprob: -5.025814533233643

Token 2995: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.43186840415000916
    2. 'arb' → logprob: -1.0568684339523315
    3. 'ar' → logprob: -6.806868553161621
    4. ' ' → logprob: -7.556868553161621
    5. ' for' → logprob: -8.306868553161621
    6. 'cases' → logprob: -8.681868553161621
    7. '   ' → logprob: -8.806868553161621
    8. 'for' → logprob: -8.931868553161621
    9. 'cou' → logprob: -9.306868553161621
    10. ' arbre' → logprob: -9.556868553161621

Token 2996: ' d' (ID: 272)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.3623063862323761
    2. ' sur' → logprob: -2.1123063564300537
    3. '_sur' → logprob: -2.8623063564300537
    4. ' =' → logprob: -3.2373063564300537
    5. ' est' → logprob: -3.3623063564300537
    6. ' et' → logprob: -3.8623063564300537
    7. '#' → logprob: -4.987306594848633
    8. 'et' → logprob: -5.112306594848633
    9. ')' → logprob: -5.487306594848633
    10. '=' → logprob: -6.112306594848633

Token 2997: ''une' (ID: 13337)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.911922812461853
    2. 'e' → logprob: -1.286922812461853
    3. ''une' → logprob: -1.411922812461853
    4. ''un' → logprob: -4.536922931671143
    5. '
' → logprob: -4.661922931671143
    6. '```' → logprob: -4.786922931671143
    7. '[i' → logprob: -5.411922931671143
    8. 'onc' → logprob: -5.411922931671143
    9. ''abord' → logprob: -5.536922931671143
    10. 'es' → logprob: -5.536922931671143

Token 2998: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.47531557083129883
    2. 'case' → logprob: -0.9753155708312988
    3. 'vo' → logprob: -7.975315570831299
    4. '#' → logprob: -8.72531509399414
    5. ' ' → logprob: -8.85031509399414
    6. '   ' → logprob: -8.97531509399414
    7. 'adj' → logprob: -9.22531509399414
    8. ' #' → logprob: -9.85031509399414
    9. '_case' → logprob: -10.22531509399414
    10. ' ' → logprob: -10.60031509399414

Token 2999: ' =' (ID: 314)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.9918441772460938
    2. ' =' → logprob: -1.1168441772460938
    3. 'adj' → logprob: -2.2418441772460938
    4. '=' → logprob: -2.7418441772460938
    5. ' est' → logprob: -3.4918441772460938
    6. 'su' → logprob: -4.616844177246094
    7. '(vo' → logprob: -4.616844177246094
    8. ')' → logprob: -4.616844177246094
    9. ' adj' → logprob: -4.741844177246094
    10. 'sur' → logprob: -4.991844177246094

Token 3000: ' nombre' (ID: 9733)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.13809971511363983
    2. ' A' → logprob: -2.1380996704101562
    3. 'nombre' → logprob: -5.888099670410156
    4. ' (' → logprob: -6.388099670410156
    5. 'n' → logprob: -6.888099670410156
    6. ' nombre' → logprob: -7.138099670410156
    7. '(' → logprob: -7.263099670410156
    8. '0' → logprob: -7.388099670410156
    9. 'total' → logprob: -7.513099670410156
    10. ' n' → logprob: -7.513099670410156

Token 3001: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009398083784617484
    2. '*' → logprob: -7.625939846038818
    3. '<|end|>' → logprob: -8.62593936920166
    4. ')' → logprob: -9.25093936920166
    5. '_ar' → logprob: -9.75093936920166
    6. '_*' → logprob: -10.50093936920166
    7. '_
' → logprob: -10.62593936920166
    8. ' *' → logprob: -10.87593936920166
    9. '_)' → logprob: -12.37593936920166
    10. '
' → logprob: -12.87593936920166

Token 3002: 'arb' (ID: 36740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011590481735765934
    2. 'arb' → logprob: -4.511590480804443
    3. ' arbres' → logprob: -8.636590957641602
    4. '_ar' → logprob: -8.636590957641602
    5. ' _' → logprob: -9.636590957641602
    6. ' ' → logprob: -10.886590957641602
    7. 'trees' → logprob: -11.011590957641602
    8. '```' → logprob: -11.386590957641602
    9. 'ar' → logprob: -11.511590957641602
    10. '_t' → logprob: -11.886590957641602

Token 3003: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0030234642326831818
    2. '_res' → logprob: -7.003023624420166
    3. '\' → logprob: -7.253023624420166
    4. 'es' → logprob: -7.378023624420166
    5. '_' → logprob: -8.503023147583008
    6. '_t' → logprob: -8.628023147583008
    7. '```' → logprob: -9.003023147583008
    8. 're' → logprob: -9.128023147583008
    9. '``' → logprob: -10.253023147583008
    10. 'rees' → logprob: -10.753023147583008

Token 3004: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014392309822142124
    2. ')' → logprob: -4.639392375946045
    3. '*' → logprob: -5.639392375946045
    4. '<|end|>' → logprob: -7.889392375946045
    5. '   ' → logprob: -9.264391899108887
    6. ',' → logprob: -9.514391899108887
    7. '),' → logprob: -9.764391899108887
    8. ' +' → logprob: -10.139391899108887
    9. ' )' → logprob: -10.389391899108887
    10. '[' → logprob: -10.514391899108887

Token 3005: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.20385143160820007
    2. '(' → logprob: -1.7038514614105225
    3. '"' → logprob: -6.578851222991943
    4. '1' → logprob: -7.578851222991943
    5. ''' → logprob: -8.703851699829102
    6. '`' → logprob: -9.203851699829102
    7. ' "' → logprob: -9.328851699829102
    8. '```' → logprob: -10.078851699829102
    9. ' ' → logprob: -10.453851699829102
    10. '(space' → logprob: -10.703851699829102

Token 3006: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09223534166812897
    2. ' (' → logprob: -2.7172353267669678
    3. '1' → logprob: -3.9672353267669678
    4. '2' → logprob: -6.217235565185547
    5. ' ' → logprob: -6.967235565185547
    6. '   ' → logprob: -9.467235565185547
    7. '(distance' → logprob: -10.342235565185547
    8. '  ' → logprob: -11.592235565185547
    9. '```' → logprob: -11.967235565185547
    10. '0' → logprob: -12.092235565185547

Token 3007: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07958679646253586
    2. '+' → logprob: -2.5795867443084717
    3. ')' → logprob: -7.329586982727051
    4. ' )' → logprob: -10.57958698272705
    5. ' plus' → logprob: -12.82958698272705
    6. ' +
' → logprob: -12.95458698272705
    7. ' ' → logprob: -13.20458698272705
    8. ')+' → logprob: -13.57958698272705
    9. '+)' → logprob: -13.70458698272705
    10. ' minute' → logprob: -14.07958698272705

Token 3008: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1119045615196228
    2. '(' → logprob: -2.3619046211242676
    3. '0' → logprob: -5.111904621124268
    4. '1' → logprob: -6.111904621124268
    5. 'dist' → logprob: -6.611904621124268
    6. ' ' → logprob: -7.111904621124268
    7. ' (' → logprob: -7.361904621124268
    8. '(dist' → logprob: -8.11190414428711
    9. 'distance' → logprob: -8.98690414428711
    10. '((' → logprob: -10.23690414428711

Token 3009: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08174960315227509
    2. '(' → logprob: -2.706749677658081
    3. 'dist' → logprob: -4.831749439239502
    4. '0' → logprob: -6.331749439239502
    5. '(dist' → logprob: -6.706749439239502
    6. ' (' → logprob: -8.20674991607666
    7. ' ' → logprob: -8.45674991607666
    8. '1' → logprob: -9.20674991607666
    9. ' dist' → logprob: -10.45674991607666
    10. 'distance' → logprob: -10.45674991607666

Token 3010: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08727281540632248
    2. '*' → logprob: -2.587272882461548
    3. ')' → logprob: -4.837272644042969
    4. ' )' → logprob: -7.837272644042969
    5. '*object' → logprob: -12.337272644042969
    6. ' ' → logprob: -12.587272644042969
    7. '*d' → logprob: -12.712272644042969
    8. '*)' → logprob: -12.962272644042969
    9. ')*' → logprob: -13.337272644042969
    10. '```' → logprob: -13.462272644042969

Token 3011: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2871561646461487
    2. 'dist' → logprob: -1.412156105041504
    3. '(min' → logprob: -5.537156105041504
    4. '(dist' → logprob: -6.787156105041504
    5. ' min' → logprob: -8.037156105041504
    6. '(' → logprob: -8.412156105041504
    7. ' dist' → logprob: -8.662156105041504
    8. '```' → logprob: -10.162156105041504
    9. 'distance' → logprob: -10.537156105041504
    10. ' (' → logprob: -10.912156105041504

Token 3012: 'distance' (ID: 40614)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03130808100104332
    2. 'dist' → logprob: -3.531308174133301
    3. ' min' → logprob: -6.531308174133301
    4. ' dist' → logprob: -9.5313081741333
    5. '(min' → logprob: -10.7813081741333
    6. '(dist' → logprob: -13.6563081741333
    7. '```' → logprob: -14.0313081741333
    8. '[min' → logprob: -14.2813081741333
    9. 'distance' → logprob: -15.0313081741333
    10. '
' → logprob: -15.0313081741333

Token 3013: '_us' (ID: 43779)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.12665948271751404
    2. '_to' → logprob: -2.251659393310547
    3. '_' → logprob: -4.751659393310547
    4. '   ' → logprob: -6.001659393310547
    5. 'from' → logprob: -7.126659393310547
    6. ')' → logprob: -7.251659393310547
    7. '[i' → logprob: -8.001659393310547
    8. '```' → logprob: -8.626659393310547
    9. '	' → logprob: -9.626659393310547
    10. '[' → logprob: -9.626659393310547

Token 3014: 'ine' (ID: 514)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06393630057573318
    2. '_from' → logprob: -3.813936233520508
    3. 't' → logprob: -3.938936233520508
    4. 'e' → logprob: -4.813936233520508
    5. '   ' → logprob: -5.438936233520508
    6. 'start' → logprob: -5.938936233520508
    7. ' dist' → logprob: -6.188936233520508
    8. '_dist' → logprob: -7.063936233520508
    9. '[i' → logprob: -7.688936233520508
    10. 'from' → logprob: -7.813936233520508

Token 3015: '->' (ID: 609)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7811993360519409
    2. '_to' → logprob: -1.406199336051941
    3. '_from' → logprob: -1.531199336051941
    4. '[i' → logprob: -3.2811994552612305
    5. '))' → logprob: -4.4061994552612305
    6. '   ' → logprob: -4.7811994552612305
    7. ')' → logprob: -4.7811994552612305
    8. ')))' → logprob: -5.2811994552612305
    9. '_' → logprob: -6.2811994552612305
    10. 'from' → logprob: -6.2811994552612305

Token 3016: 'case' (ID: 9994)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.2573779821395874
    2. 'dist' → logprob: -3.132378101348877
    3. '
' → logprob: -3.382378101348877
    4. 'i' → logprob: -3.382378101348877
    5. 'adj' → logprob: -4.007378101348877
    6. '[]' → logprob: -4.007378101348877
    7. '[' → logprob: -4.507378101348877
    8. 'nj' → logprob: -4.507378101348877
    9. 'start' → logprob: -4.757378101348877
    10. ')' → logprob: -5.007378101348877

Token 3017: '_ad' (ID: 23782)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.0323421955108643
    2. '_adj' → logprob: -1.1573421955108643
    3. '[' → logprob: -2.5323421955108643
    4. ')' → logprob: -2.9073421955108643
    5. '_' → logprob: -3.0323421955108643
    6. ')))' → logprob: -3.1573421955108643
    7. 'adj' → logprob: -3.7823421955108643
    8. 'vide' → logprob: -4.407341957092285
    9. '[i' → logprob: -4.907341957092285
    10. '_v' → logprob: -5.282341957092285

Token 3018: 'jac' (ID: 77250)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00030900631099939346
    2. 'jac' → logprob: -8.375308990478516
    3. '
' → logprob: -9.750308990478516
    4. '```' → logprob: -12.750308990478516
    5. '[j' → logprob: -12.875308990478516
    6. 'ja' → logprob: -13.000308990478516
    7. ')' → logprob: -13.125308990478516
    8. '}' → logprob: -13.750308990478516
    9. ']' → logprob: -14.000308990478516
    10. '`' → logprob: -14.000308990478516

Token 3019: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.03999956324696541
    2. ')' → logprob: -3.664999485015869
    3. 'ente' → logprob: -5.039999485015869
    4. '   ' → logprob: -5.414999485015869
    5. '```' → logprob: -7.539999485015869
    6. 'acent' → logprob: -7.789999485015869
    7. ' ' → logprob: -8.164999961853027
    8. '       ' → logprob: -9.039999961853027
    9. 'e' → logprob: -9.164999961853027
    10. ' )' → logprob: -9.289999961853027

Token 3020: ')),
' (ID: 13846)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1328873485326767
    2. ')' → logprob: -2.382887363433838
    3. '))
' → logprob: -4.007887363433838
    4. ')))' → logprob: -5.257887363433838
    5. ')+' → logprob: -5.507887363433838
    6. '+' → logprob: -6.632887363433838
    7. ' ' → logprob: -7.507887363433838
    8. '   ' → logprob: -7.632887363433838
    9. '```' → logprob: -8.38288688659668
    10. ' ))' → logprob: -8.50788688659668

Token 3021: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24186240136623383
    2. '   ' → logprob: -2.7418622970581055
    3. '\n' → logprob: -3.6168622970581055
    4. '"' → logprob: -3.8668622970581055
    5. '               ' → logprob: -4.4918622970581055
    6. ' 
' → logprob: -4.7418622970581055
    7. ''' → logprob: -4.8668622970581055
    8. ' )' → logprob: -4.8668622970581055
    9. '
' → logprob: -4.9918622970581055
    10. '                               ' → logprob: -5.3668622970581055

Token 3022: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41272732615470886
    2. ')' → logprob: -2.0377273559570312
    3. '
' → logprob: -3.2877273559570312
    4. '"' → logprob: -3.6627273559570312
    5. '               ' → logprob: -3.7877273559570312
    6. '                   ' → logprob: -3.7877273559570312
    7. '    
' → logprob: -3.9127273559570312
    8. '#' (adapté à ' #') → logprob: -4.537727355957031
    9. '       ' → logprob: -4.537727355957031
    10. '           ' → logprob: -4.912727355957031

Token 3023: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23502099514007568
    2. '   ' → logprob: -2.1100211143493652
    3. '#' → logprob: -4.110021114349365
    4. '\n' → logprob: -4.360021114349365
    5. '
' → logprob: -4.610021114349365
    6. '               ' → logprob: -4.735021114349365
    7. '                   ' → logprob: -5.110021114349365
    8. ' )' → logprob: -5.735021114349365
    9. '"' → logprob: -5.985021114349365
    10. '+' → logprob: -6.110021114349365

Token 3024: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.34410983324050903
    2. ' le' → logprob: -2.8441097736358643
    3. ' pour' → logprob: -3.4691097736358643
    4. ' la' → logprob: -3.5941097736358643
    5. ' pas' → logprob: -3.7191097736358643
    6. ' il' → logprob: -3.9691097736358643
    7. '#' → logprob: -4.344110012054443
    8. ' #' → logprob: -4.469110012054443
    9. 'on' → logprob: -4.594110012054443
    10. ' ' → logprob: -4.719110012054443

Token 3025: ' peut' (ID: 9216)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.6011675000190735
    2. ' doit' → logprob: -1.9761674404144287
    3. 'pe' → logprob: -2.1011674404144287
    4. '#' → logprob: -3.1011674404144287
    5. 'continue' → logprob: -3.1011674404144287
    6. ' peut' → logprob: -3.1011674404144287
    7. 'n' → logprob: -4.976167678833008
    8. ' continue' → logprob: -4.976167678833008
    9. 'pour' → logprob: -5.101167678833008
    10. 'va' → logprob: -6.101167678833008

Token 3026: ' se' (ID: 458)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6410648226737976
    2. 'cou' → logprob: -2.0160648822784424
    3. 'faire' → logprob: -2.8910648822784424
    4. 'a' → logprob: -2.8910648822784424
    5. ' couper' → logprob: -3.0160648822784424
    6. 'égal' → logprob: -3.7660648822784424
    7. ' continuer' → logprob: -3.8910648822784424
    8. 'dé' → logprob: -3.8910648822784424
    9. ' aussi' → logprob: -4.516064643859863
    10. 'se' → logprob: -4.891064643859863

Token 3027: ' rendre' (ID: 44629)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.07190839946269989
    2. ' déplacer' → logprob: -3.321908473968506
    3. 'placer' → logprob: -3.821908473968506
    4. 'd' → logprob: -5.946908473968506
    5. 'poser' → logprob: -6.446908473968506
    6. 're' → logprob: -7.321908473968506
    7. '   ' → logprob: -7.446908473968506
    8. '#' → logprob: -7.446908473968506
    9. 'lever' → logprob: -7.571908473968506
    10. ' dé' → logprob: -7.821908473968506

Token 3028: ' à' (ID: 1221)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.01807349920272827
    2. 'direct' → logprob: -5.393073558807373
    3. 'à' → logprob: -5.768073558807373
    4. 'uni' → logprob: -5.768073558807373
    5. 'jus' → logprob: -6.018073558807373
    6. 'dans' → logprob: -6.643073558807373
    7. 'au' → logprob: -7.643073558807373
    8. 'aux' → logprob: -8.018073081970215
    9. '```' → logprob: -8.018073081970215
    10. ' sur' → logprob: -8.268073081970215

Token 3029: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8394017219543457
    2. 'c' → logprob: -1.2144017219543457
    3. 'une' → logprob: -1.4644017219543457
    4. 'n' → logprob: -4.214401721954346
    5. 'celle' → logprob: -4.714401721954346
    6. 'l' → logprob: -5.589401721954346
    7. 'plus' → logprob: -6.339401721954346
    8. ' cette' → logprob: -6.464401721954346
    9. 'case' → logprob: -6.464401721954346
    10. '   ' → logprob: -6.714401721954346

Token 3030: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.17696096003055573
    2. 'case' → logprob: -2.0519609451293945
    3. '_adj' → logprob: -4.5519609451293945
    4. 'adj' → logprob: -4.6769609451293945
    5. '_case' → logprob: -5.1769609451293945
    6. ' adjacent' → logprob: -5.9269609451293945
    7. '_ad' → logprob: -6.1769609451293945
    8. '```' → logprob: -7.8019609451293945
    9. ' adj' → logprob: -7.9269609451293945
    10. ' ' → logprob: -7.9269609451293945

Token 3031: ' seulement' (ID: 32072)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.4363596439361572
    2. ' vide' → logprob: -2.0613596439361572
    3. ')' → logprob: -3.1863596439361572
    4. '[' → logprob: -3.4363596439361572
    5. '```' → logprob: -3.4363596439361572
    6. 'adj' → logprob: -3.5613596439361572
    7. '_' → logprob: -3.8113596439361572
    8. '_adj' → logprob: -4.936359405517578
    9. '                       ' → logprob: -5.561359405517578
    10. '_v' → logprob: -5.561359405517578

Token 3032: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5736966133117676
    2. ')' → logprob: -2.0736966133117676
    3. '*' → logprob: -2.4486966133117676
    4. '       ' → logprob: -2.5736966133117676
    5. '[i' → logprob: -2.8236966133117676
    6. ':' → logprob: -3.1986966133117676
    7. ' *' → logprob: -3.4486966133117676
    8. ' ' → logprob: -3.5736966133117676
    9. '           ' → logprob: -3.5736966133117676
    10. '               ' → logprob: -3.5736966133117676

Token 3033: ''il' (ID: 14683)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9285875558853149
    2. ''il' → logprob: -1.678587555885315
    3. 'ur' → logprob: -2.8035874366760254
    4. '                   ' → logprob: -2.8035874366760254
    5. 'e' → logprob: -2.9285874366760254
    6. ''elle' → logprob: -3.0535874366760254
    7. ''est' → logprob: -3.5535874366760254
    8. '   ' → logprob: -3.8035874366760254
    9. 'ont' → logprob: -4.178587436676025
    10. 'a' → logprob: -4.428587436676025

Token 3034: ' y' (ID: 342)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3919793665409088
    2. 'dist' → logprob: -1.7669793367385864
    3. 'n' → logprob: -2.641979455947876
    4. 'y' → logprob: -3.516979455947876
    5. ' est' → logprob: -4.016979217529297
    6. 'a' → logprob: -4.266979217529297
    7. 's' → logprob: -5.266979217529297
    8. ' y' → logprob: -5.766979217529297
    9. 'A' → logprob: -6.141979217529297
    10. ' dist' → logprob: -6.516979217529297

Token 3035: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005912677384912968
    2. 'est' → logprob: -5.630912780761719
    3. ' a' → logprob: -6.255912780761719
    4. ''a' → logprob: -8.505912780761719
    5. 'ex' → logprob: -10.130912780761719
    6. ' ' → logprob: -10.630912780761719
    7. 'avait' → logprob: -10.880912780761719
    8. 'A' → logprob: -11.255912780761719
    9. ''est' → logprob: -11.255912780761719
    10. '   ' → logprob: -11.380912780761719

Token 3036: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2210637629032135
    2. 'un' → logprob: -1.8460637331008911
    3. 'au' → logprob: -3.3460638523101807
    4. 'dist' → logprob: -6.596063613891602
    5. ' une' → logprob: -6.721063613891602
    6. '```' → logprob: -7.471063613891602
    7. '
' → logprob: -8.221063613891602
    8. '   ' → logprob: -8.471063613891602
    9. 'a' → logprob: -8.596063613891602
    10. 'case' → logprob: -8.846063613891602

Token 3037: ' chemin' (ID: 45035)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.3574337065219879
    2. 'che' → logprob: -1.3574336767196655
    3. 'adj' → logprob: -4.607433795928955
    4. 'es' → logprob: -4.857433795928955
    5. 'vo' → logprob: -5.107433795928955
    6. ' chemin' → logprob: -5.607433795928955
    7. ' case' → logprob: -5.982433795928955
    8. '```' → logprob: -5.982433795928955
    9. '
' → logprob: -6.482433795928955
    10. ' ' → logprob: -6.982433795928955

Token 3038: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12647892534732819
    2. '
' → logprob: -2.751478910446167
    3. 'import' → logprob: -4.001479148864746
    4. ')' → logprob: -4.376479148864746
    5. '       ' → logprob: -5.376479148864746
    6. '    
' → logprob: -5.626479148864746
    7. ',' → logprob: -6.251479148864746
    8. ')
' → logprob: -6.251479148864746
    9. 'def' → logprob: -7.001479148864746
    10. ',
' → logprob: -7.001479148864746

Token 3039: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.017121830955147743
    2. 'case' → logprob: -4.2671217918396
    3. 'distance' → logprob: -7.7671217918396
    4. 'A' → logprob: -8.017122268676758
    5. 'vide' → logprob: -8.142122268676758
    6. 'dé' → logprob: -8.517122268676758
    7. '```' → logprob: -8.517122268676758
    8. 'l' → logprob: -8.642122268676758
    9. 'dist' → logprob: -8.767122268676758
    10. '0' → logprob: -8.892122268676758

Token 3040: ' v' (ID: 323)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.6886701583862305
    2. ')' → logprob: -2.1886701583862305
    3. '```' → logprob: -2.8136701583862305
    4. ' vide' → logprob: -3.0636701583862305
    5. '   ' → logprob: -3.4386701583862305
    6. '_' → logprob: -3.4386701583862305
    7. ' )' → logprob: -3.9386701583862305
    8. '[i' → logprob: -4.3136701583862305
    9. '
' → logprob: -4.5636701583862305
    10. ',' → logprob: -4.6886701583862305

Token 3041: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.009483473375439644
    2. 'ide' → logprob: -4.884483337402344
    3. 'id' → logprob: -7.509483337402344
    4. 'i' → logprob: -8.259483337402344
    5. 'u' → logprob: -8.509483337402344
    6. '
' → logprob: -8.759483337402344
    7. 'uid' → logprob: -8.884483337402344
    8. 'ues' → logprob: -9.259483337402344
    9. '```' → logprob: -9.509483337402344
    10. '   ' → logprob: -10.259483337402344

Token 3042: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19934117794036865
    2. 'import' → logprob: -2.074341297149658
    3. '
' → logprob: -4.074341297149658
    4. ')' → logprob: -4.824341297149658
    5. 'dist' → logprob: -5.199341297149658
    6. '```' → logprob: -5.324341297149658
    7. ',' → logprob: -5.574341297149658
    8. '       ' → logprob: -5.699341297149658
    9. ')
' → logprob: -6.074341297149658
    10. 'from' → logprob: -6.199341297149658

Token 3043: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1819717288017273
    2. '
' → logprob: -2.681971788406372
    3. 'import' → logprob: -2.931971788406372
    4. ')' → logprob: -3.806971788406372
    5. 'def' → logprob: -5.056971549987793
    6. '    
' → logprob: -5.806971549987793
    7. 'from' → logprob: -5.806971549987793
    8. ')
' → logprob: -6.431971549987793
    9. '```' → logprob: -6.681971549987793
    10. '#' → logprob: -6.931971549987793

Token 3044: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04145710915327072
    2. 'import' → logprob: -3.916457176208496
    3. '
' → logprob: -4.041457176208496
    4. '    
' → logprob: -6.666457176208496
    5. 'from' → logprob: -6.916457176208496
    6. '```' → logprob: -8.041457176208496
    7. ')' → logprob: -8.791457176208496
    8. '#' → logprob: -9.416457176208496
    9. '       ' → logprob: -9.666457176208496
    10. ',' → logprob: -10.041457176208496

Token 3045: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4918537139892578
    2. '   ' → logprob: -0.9918537139892578
    3. 'from' → logprob: -4.741853713989258
    4. '
' → logprob: -5.366853713989258
    5. '```' → logprob: -6.241853713989258
    6. '    
' → logprob: -6.991853713989258
    7. ' import' → logprob: -7.866853713989258
    8. 'heap' → logprob: -8.491853713989258
    9. 'dist' → logprob: -8.866853713989258
    10. '       ' → logprob: -9.241853713989258

Token 3046: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06992631405591965
    2. 'import' → logprob: -3.3199262619018555
    3. '
' → logprob: -3.6949262619018555
    4. ')' → logprob: -6.1949262619018555
    5. '    
' → logprob: -6.5699262619018555
    6. 'from' → logprob: -6.8199262619018555
    7. '```' → logprob: -7.5699262619018555
    8. ',' → logprob: -8.694926261901855
    9. '       ' → logprob: -8.694926261901855
    10. '#' (adapté à ' #') → logprob: -8.819926261901855

Token 3047: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02503778599202633
    2. 'import' → logprob: -4.02503776550293
    3. '
' → logprob: -6.02503776550293
    4. ')' → logprob: -6.40003776550293
    5. 'from' → logprob: -7.15003776550293
    6. '       ' → logprob: -7.77503776550293
    7. '    
' → logprob: -8.15003776550293
    8. '               ' → logprob: -8.40003776550293
    9. '```' → logprob: -8.40003776550293
    10. '           ' → logprob: -9.27503776550293

Token 3048: ' problème' (ID: 35630)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0962927341461182
    2. '#' → logprob: -1.7212927341461182
    3. '
' → logprob: -2.221292734146118
    4. 'cost' → logprob: -2.721292734146118
    5. ' #' → logprob: -2.971292734146118
    6. 'distance' → logprob: -3.096292734146118
    7. 'def' → logprob: -3.346292734146118
    8. 'for' → logprob: -3.346292734146118
    9. 'b' → logprob: -3.596292734146118
    10. 'import' → logprob: -3.971292734146118

Token 3049: ' revient' (ID: 95900)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1749598979949951
    2. '   ' → logprob: -1.2999598979949951
    3. ' =' → logprob: -2.674959897994995
    4. '=' → logprob: -2.674959897994995
    5. '<|end|>' → logprob: -2.924959897994995
    6. ')' → logprob: -3.174959897994995
    7. '<|end|>' → logprob: -3.674959897994995
    8. 'import' → logprob: -3.674959897994995
    9. '#' → logprob: -3.799959897994995
    10. '_' → logprob: -4.299960136413574

Token 3050: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -1.3760204315185547
    2. '=' → logprob: -1.7510204315185547
    3. ' =' → logprob: -2.0010204315185547
    4. '   ' → logprob: -2.1260204315185547
    5. ' to' → logprob: -2.1260204315185547
    6. 'to' → logprob: -2.5010204315185547
    7. ':' → logprob: -3.0010204315185547
    8. 'à' → logprob: -3.3760204315185547
    9. ')' → logprob: -4.876020431518555
    10. '_to' → logprob: -5.376020431518555

Token 3051: ' trouver' (ID: 23195)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06410256028175354
    2. '   ' → logprob: -3.5641026496887207
    3. 'faire' → logprob: -4.314102649688721
    4. 'from' → logprob: -4.689102649688721
    5. '#' → logprob: -5.189102649688721
    6. 'b' → logprob: -6.814102649688721
    7. '```' → logprob: -6.939102649688721
    8. 'dist' → logprob: -6.939102649688721
    9. 'contin' → logprob: -7.564102649688721
    10. 'd' → logprob: -7.939102649688721

Token 3052: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.069307565689087
    2. ' un' → logprob: -1.069307565689087
    3. ' le' → logprob: -1.694307565689087
    4. 'un' → logprob: -2.319307565689087
    5. 'une' → logprob: -4.694307327270508
    6. ' la' → logprob: -4.819307327270508
    7. 'la' → logprob: -5.069307327270508
    8. 'import' → logprob: -6.194307327270508
    9. '```' → logprob: -6.444307327270508
    10. ' une' → logprob: -6.819307327270508

Token 3053: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -1.8434555530548096
    2. ' chemin' → logprob: -1.8434555530548096
    3. '
' → logprob: -1.9684555530548096
    4. '   ' → logprob: -2.5934555530548096
    5. ' ' → logprob: -3.0934555530548096
    6. '```' → logprob: -3.4684555530548096
    7. 'plus' → logprob: -3.5934555530548096
    8. 's' → logprob: -3.7184555530548096
    9. ' ' → logprob: -3.8434555530548096
    10. '_che' → logprob: -3.9684555530548096

Token 3054: ' en' (ID: 469)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.996770441532135
    2. '   ' → logprob: -1.9967703819274902
    3. ' =' → logprob: -2.2467703819274902
    4. ' vers' → logprob: -2.9967703819274902
    5. '
' → logprob: -3.2467703819274902
    6. ',' → logprob: -3.2467703819274902
    7. '=' → logprob: -3.6217703819274902
    8. '_' → logprob: -3.6217703819274902
    9. ')' → logprob: -3.6217703819274902
    10. '```' → logprob: -3.9967703819274902

Token 3055: ' minim' (ID: 23874)
  Prédit: 'cons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cons' → logprob: -1.5403152704238892
    2. 'co' → logprob: -1.6653152704238892
    3. 'cout' → logprob: -2.0403151512145996
    4. 'util' → logprob: -2.2903151512145996
    5. 'consider' → logprob: -3.1653151512145996
    6. 'cou' → logprob: -3.1653151512145996
    7. 'pass' → logprob: -3.4153151512145996
    8. 'd' → logprob: -3.7903151512145996
    9. 'c' → logprob: -4.0403151512146
    10. 'po' → logprob: -4.1653151512146

Token 3056: 'isant' (ID: 56111)
  Prédit: 'itant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itant' → logprob: -0.5655596852302551
    2. 'isant' → logprob: -1.5655596256256104
    3. 'in' → logprob: -1.9405596256256104
    4. 'ité' → logprob: -3.3155596256256104
    5. 'iter' → logprob: -4.1905598640441895
    6. 'ite' → logprob: -4.4405598640441895
    7. 'ites' → logprob: -6.1905598640441895
    8. 'it' → logprob: -6.6905598640441895
    9. 'im' → logprob: -7.1905598640441895
    10. '
' → logprob: -7.3155598640441895

Token 3057: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3582838177680969
    2. ' le' → logprob: -1.2332837581634521
    3. 'co' → logprob: -6.233283996582031
    4. 'les' → logprob: -6.358283996582031
    5. 'l' → logprob: -6.483283996582031
    6. ' les' → logprob: -6.608283996582031
    7. '_le' → logprob: -6.858283996582031
    8. 'la' → logprob: -7.733283996582031
    9. '```' → logprob: -7.733283996582031
    10. 'son' → logprob: -8.358283996582031

Token 3058: ' somme' (ID: 64484)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.04600977897644043
    2. 'cout' → logprob: -3.5460097789764404
    3. ' coût' → logprob: -5.9210100173950195
    4. 'temps' → logprob: -6.0460100173950195
    5. ' co' → logprob: -6.4210100173950195
    6. ' ' → logprob: -6.5460100173950195
    7. ' cout' → logprob: -6.5460100173950195
    8. '_co' → logprob: -6.6710100173950195
    9. 'c' → logprob: -6.9210100173950195
    10. 'distance' → logprob: -7.2960100173950195

Token 3059: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7822952270507812
    2. ' de' → logprob: -1.6572952270507812
    3. ')' → logprob: -2.1572952270507812
    4. ' +' → logprob: -2.9072952270507812
    5. '_' → logprob: -3.0322952270507812
    6. ' _' → logprob: -3.5322952270507812
    7. ' )' → logprob: -3.9072952270507812
    8. '   ' → logprob: -4.657295227050781
    9. ' =' → logprob: -4.782295227050781
    10. ' +=' → logprob: -4.907295227050781

Token 3060: ' coûts' (ID: 116912)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.3833172023296356
    2. ' coûts' → logprob: -2.133317232131958
    3. 'cout' → logprob: -3.133317232131958
    4. 'cou' → logprob: -3.258317232131958
    5. 'arb' → logprob: -3.758317232131958
    6. 'c' → logprob: -4.008316993713379
    7. ' arbres' → logprob: -4.258316993713379
    8. 'cost' → logprob: -4.633316993713379
    9. 'temps' → logprob: -4.758316993713379
    10. ' coup' → logprob: -4.883316993713379

Token 3061: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7294098138809204
    2. 'import' → logprob: -1.3544098138809204
    3. ':' → logprob: -2.729409694671631
    4. ')' → logprob: -2.729409694671631
    5. ',' → logprob: -3.479409694671631
    6. '
' → logprob: -4.354409694671631
    7. '```' → logprob: -4.854409694671631
    8. '):' → logprob: -4.979409694671631
    9. ' import' → logprob: -5.229409694671631
    10. 'def' → logprob: -5.354409694671631

Token 3062: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.09148847311735153
    2. 'dé' → logprob: -2.8414883613586426
    3. 'c' → logprob: -4.216488361358643
    4. 'd' → logprob: -4.966488361358643
    5. ' déplacement' → logprob: -6.341488361358643
    6. 'pass' → logprob: -7.091488361358643
    7. ' déplacements' → logprob: -7.341488361358643
    8. ' ' → logprob: -7.591488361358643
    9. '```' → logprob: -7.591488361358643
    10. 'la' → logprob: -8.0914888381958

Token 3063: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38151833415031433
    2. 'les' → logprob: -2.2565183639526367
    3. ')' → logprob: -3.2565183639526367
    4. ',' → logprob: -4.006518363952637
    5. 'des' → logprob: -4.131518363952637
    6. ' _' → logprob: -4.381518363952637
    7. ' arbres' → logprob: -4.381518363952637
    8. 'es' → logprob: -4.756518363952637
    9. ' des' → logprob: -4.756518363952637
    10. ' ' → logprob: -4.881518363952637

Token 3064: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.181385338306427
    2. 'arb' → logprob: -1.8063852787017822
    3. ' espaces' → logprob: -7.056385517120361
    4. ' ' → logprob: -8.681385040283203
    5. 'trees' → logprob: -9.056385040283203
    6. 'esp' → logprob: -9.181385040283203
    7. 'ar' → logprob: -9.431385040283203
    8. ' arbre' → logprob: -9.681385040283203
    9. '_' → logprob: -10.056385040283203
    10. ' arb' → logprob: -10.181385040283203

Token 3065: ' à' (ID: 1221)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3842490911483765
    2. ',' → logprob: -1.5092490911483765
    3. ')' → logprob: -1.8842490911483765
    4. '   ' → logprob: -2.134249210357666
    5. '<|end|>' → logprob: -2.134249210357666
    6. '
' → logprob: -3.509249210357666
    7. '<|end|>' → logprob: -4.134249210357666
    8. '[
' → logprob: -4.634249210357666
    9. ',
' → logprob: -4.759249210357666
    10. ' ,' → logprob: -5.134249210357666

Token 3066: ' côté' (ID: 33533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2543800473213196
    2. 'cou' → logprob: -2.629379987716675
    3. 'adj' → logprob: -2.754379987716675
    4. 'pass' → logprob: -4.629380226135254
    5. 'cha' → logprob: -4.754380226135254
    6. '```' → logprob: -4.879380226135254
    7. 'part' → logprob: -5.004380226135254
    8. '
' → logprob: -5.004380226135254
    9. 'contin' → logprob: -5.129380226135254
    10. 'tr' → logprob: -5.629380226135254

Token 3067: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23243562877178192
    2. ',' → logprob: -2.857435703277588
    3. ']' → logprob: -2.857435703277588
    4. '+' → logprob: -3.732435703277588
    5. '
' → logprob: -4.857435703277588
    6. ' )' → logprob: -4.857435703277588
    7. '_' → logprob: -5.482435703277588
    8. 'import' → logprob: -5.607435703277588
    9. '```' → logprob: -5.607435703277588
    10. '[i' → logprob: -5.732435703277588

Token 3068: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7679263949394226
    2. ')' → logprob: -2.0179264545440674
    3. ' et' → logprob: -2.1429264545440674
    4. 'et' → logprob: -3.1429264545440674
    5. '#' → logprob: -3.2679264545440674
    6. '                   ' → logprob: -3.8929264545440674
    7. '               ' → logprob: -4.267926216125488
    8. '           ' → logprob: -4.267926216125488
    9. '"' → logprob: -4.267926216125488
    10. ' +' → logprob: -4.392926216125488

Token 3069: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12669424712657928
    2. ')' → logprob: -3.8766942024230957
    3. '       ' → logprob: -4.001694202423096
    4. '#' (adapté à ' #') → logprob: -4.501694202423096
    5. '0' → logprob: -4.751694202423096
    6. '           ' → logprob: -4.876694202423096
    7. 'et' → logprob: -4.876694202423096
    8. '    ' → logprob: -5.126694202423096
    9. 'and' → logprob: -5.251694202423096
    10. '.' → logprob: -5.626694202423096

Token 3070: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0778206586837769
    2. ' et' → logprob: -1.5778206586837769
    3. 'et' → logprob: -1.8278206586837769
    4. '#' → logprob: -2.8278207778930664
    5. '"' → logprob: -3.3278207778930664
    6. ')' → logprob: -3.9528207778930664
    7. ' #' → logprob: -4.202820777893066
    8. ' "' → logprob: -4.327820777893066
    9. '       ' → logprob: -4.327820777893066
    10. ',' → logprob: -4.452820777893066

Token 3071: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1144063472747803
    2. 'o' → logprob: -1.3644063472747803
    3. '   ' → logprob: -1.4894063472747803
    4. '
' → logprob: -3.1144063472747803
    5. 'ost' → logprob: -3.7394063472747803
    6. '{
' → logprob: -3.9894063472747803
    7. '       ' → logprob: -3.9894063472747803
    8. '#
' → logprob: -4.489406585693359
    9. 'i' → logprob: -5.114406585693359
    10. '  ' → logprob: -5.489406585693359

Token 3072: ' un' (ID: 537)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.3738354444503784
    2. '   ' → logprob: -2.498835563659668
    3. '-à' → logprob: -2.498835563659668
    4. 'une' → logprob: -2.623835563659668
    5. ' un' → logprob: -3.123835563659668
    6. ' à' → logprob: -3.123835563659668
    7. ' =' → logprob: -3.123835563659668
    8. ')' → logprob: -3.248835563659668
    9. '```' → logprob: -3.373835563659668
    10. ' plutôt' → logprob: -4.123835563659668

Token 3073: ' problème' (ID: 35630)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3230715990066528
    2. ' graph' → logprob: -1.6980715990066528
    3. ' problème' → logprob: -2.4480714797973633
    4. ' weighted' → logprob: -2.9480714797973633
    5. ' d' → logprob: -3.0730714797973633
    6. 'graph' → logprob: -3.1980714797973633
    7. '
' → logprob: -3.5730714797973633
    8. ' D' → logprob: -3.6980714797973633
    9. 'weighted' → logprob: -3.6980714797973633
    10. ' poids' → logprob: -3.8230714797973633

Token 3074: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1408185362815857
    2. 'de' → logprob: -3.1408185958862305
    3. ' d' → logprob: -3.3908185958862305
    4. 'import' → logprob: -3.6408185958862305
    5. 'd' → logprob: -5.0158185958862305
    6. ' of' → logprob: -5.5158185958862305
    7. '_' → logprob: -5.5158185958862305
    8. ' à' → logprob: -6.1408185958862305
    9. 'à' → logprob: -6.3908185958862305
    10. ',' → logprob: -6.6408185958862305

Token 3075: ' D' (ID: 415)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6844349503517151
    2. 'd' → logprob: -1.8094348907470703
    3. 'gr' → logprob: -2.4344348907470703
    4. 'weighted' → logprob: -3.0594348907470703
    5. 'plus' → logprob: -3.1844348907470703
    6. 'che' → logprob: -3.1844348907470703
    7. 'po' → logprob: -3.5594348907470703
    8. '```' → logprob: -3.8094348907470703
    9. 'D' → logprob: -4.68443489074707
    10. 'cout' → logprob: -5.05943489074707

Token 3076: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.003086686134338379
    2. 'ijk' → logprob: -5.878086566925049
    3. 'jik' → logprob: -8.878087043762207
    4. 'ij' → logprob: -9.003087043762207
    5. '```' → logprob: -12.253087043762207
    6. 'ijks' → logprob: -12.628087043762207
    7. 'j' → logprob: -12.753087043762207
    8. 'import' → logprob: -13.128087043762207
    9. 'jk' → logprob: -13.128087043762207
    10. 'ijs' → logprob: -14.253087043762207

Token 3077: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07981112599372864
    2. ')' → logprob: -4.079811096191406
    3. ':' → logprob: -4.079811096191406
    4. 'import' → logprob: -4.204811096191406
    5. '
' → logprob: -4.704811096191406
    6. ',' → logprob: -5.954811096191406
    7. 'def' → logprob: -5.954811096191406
    8. '):' → logprob: -6.079811096191406
    9. '       ' → logprob: -6.579811096191406
    10. 'from' → logprob: -6.704811096191406

Token 3078: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4433233439922333
    2. ' ' → logprob: -1.9433233737945557
    3. ' le' → logprob: -2.8183233737945557
    4. ' la' → logprob: -3.8183233737945557
    5. ' (' → logprob: -4.193323135375977
    6. ' chaque' → logprob: -4.193323135375977
    7. ' les' → logprob: -4.568323135375977
    8. 'on' → logprob: -4.568323135375977
    9. ')' → logprob: -4.693323135375977
    10. '   ' → logprob: -5.193323135375977

Token 3079: ' pay' (ID: 2777)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1352994441986084
    2. 'continue' → logprob: -2.2602994441986084
    3. ' doit' → logprob: -2.3852994441986084
    4. 'contin' → logprob: -2.8852994441986084
    5. '_continue' → logprob: -3.1352994441986084
    6. ' ajoute' → logprob: -3.2602994441986084
    7. 'aj' → logprob: -3.5102994441986084
    8. '[' → logprob: -3.5102994441986084
    9. ' ' → logprob: -3.6352994441986084
    10. ' va' → logprob: -3.6352994441986084

Token 3080: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.124264195561409
    2. 'e' → logprob: -2.2492642402648926
    3. '   ' → logprob: -5.874264240264893
    4. '_' → logprob: -5.999264240264893
    5. '=' → logprob: -6.749264240264893
    6. ' ' → logprob: -7.124264240264893
    7. '  ' → logprob: -7.749264240264893
    8. 'ert' → logprob: -8.374263763427734
    9. '-' → logprob: -8.499263763427734
    10. '*' → logprob: -8.499263763427734

Token 3081: ' pour' (ID: 1930)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.5628736019134521
    2. 'le' → logprob: -1.8128736019134521
    3. ' un' → logprob: -2.062873601913452
    4. ' (' → logprob: -2.312873601913452
    5. ' ' → logprob: -2.312873601913452
    6. ' pour' → logprob: -2.687873601913452
    7. 'un' → logprob: -2.687873601913452
    8. '(' → logprob: -3.437873601913452
    9. '
' → logprob: -3.437873601913452
    10. 'pour' → logprob: -3.687873601913452

Token 3082: ' "' (ID: 392)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.15568497776985168
    2. 'se' → logprob: -2.5306849479675293
    3. 'dé' → logprob: -4.280684947967529
    4. 'aller' → logprob: -4.405684947967529
    5. 'entr' → logprob: -5.155684947967529
    6. 'pass' → logprob: -5.280684947967529
    7. ' couper' → logprob: -5.530684947967529
    8. 'le' → logprob: -5.780684947967529
    9. 'les' → logprob: -6.155684947967529
    10. ' se' → logprob: -6.280684947967529

Token 3083: 'cou' (ID: 79019)
  Prédit: 'cou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.621154248714447
    2. 'se' → logprob: -1.2461543083190918
    3. 'aller' → logprob: -2.746154308319092
    4. 'entr' → logprob: -3.371154308319092
    5. 'dé' → logprob: -3.871154308319092
    6. ' se' → logprob: -3.996154308319092
    7. 'pass' → logprob: -4.996154308319092
    8. 'le' → logprob: -5.621154308319092
    9. ' couper' → logprob: -5.746154308319092
    10. 'd' → logprob: -5.746154308319092

Token 3084: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.6740289330482483
    2. 'ter' → logprob: -0.7990289330482483
    3. 't' → logprob: -3.5490288734436035
    4. 'p' → logprob: -5.7990288734436035
    5. 'ts' → logprob: -5.7990288734436035
    6. '
' → logprob: -6.7990288734436035
    7. 'up' → logprob: -7.7990288734436035
    8. 'pper' → logprob: -7.7990288734436035
    9. '#' → logprob: -8.174029350280762
    10. 'r' → logprob: -8.174029350280762

Token 3085: '"' (ID: 1)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5919502377510071
    2. 'les' → logprob: -1.9669501781463623
    3. ' un' → logprob: -2.2169501781463623
    4. ' des' → logprob: -2.5919501781463623
    5. 'des' → logprob: -3.2169501781463623
    6. ')' → logprob: -3.4669501781463623
    7. 'un' → logprob: -4.091950416564941
    8. '_' → logprob: -4.841950416564941
    9. '"' → logprob: -5.216950416564941
    10. 'le' → logprob: -6.091950416564941

Token 3086: ' ou' (ID: 2031)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30966290831565857
    2. ' un' → logprob: -1.684662938117981
    3. 'un' → logprob: -3.5596628189086914
    4. ')' → logprob: -4.184662818908691
    5. ' _' → logprob: -4.184662818908691
    6. ' ' → logprob: -5.684662818908691
    7. '_un' → logprob: -5.934662818908691
    8. '<|end|>' → logprob: -6.934662818908691
    9. ''un' → logprob: -7.059662818908691
    10. ' ' → logprob: -7.059662818908691

Token 3087: ' "' (ID: 392)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.7193362712860107
    2. 'pass' → logprob: -1.9693362712860107
    3. 'contin' → logprob: -2.2193362712860107
    4. ' travers' → logprob: -2.7193362712860107
    5. 'aller' → logprob: -2.7193362712860107
    6. 're' → logprob: -3.9693362712860107
    7. 'r' → logprob: -4.21933650970459
    8. 'dé' → logprob: -4.21933650970459
    9. 'ne' → logprob: -4.34433650970459
    10. ' se' → logprob: -4.46933650970459

Token 3088: 'march' (ID: 134218)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.25470229983329773
    2. 'dé' → logprob: -2.25470232963562
    3. 'march' → logprob: -2.87970232963562
    4. 'tr' → logprob: -3.50470232963562
    5. 'pass' → logprob: -3.87970232963562
    6. 'contin' → logprob: -5.504702091217041
    7. 'de' → logprob: -6.379702091217041
    8. 'aller' → logprob: -6.629702091217041
    9. 'ne' → logprob: -6.629702091217041
    10. 'pas' → logprob: -7.379702091217041

Token 3089: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0005066845333203673
    2. 'ée' → logprob: -7.75050687789917
    3. 'é' → logprob: -10.250506401062012
    4. 'éer' → logprob: -10.625506401062012
    5. '   ' → logprob: -12.500506401062012
    6. 'ées' → logprob: -12.625506401062012
    7. 'e' → logprob: -13.375506401062012
    8. 'ner' → logprob: -13.375506401062012
    9. '               ' → logprob: -13.875506401062012
    10. 'érer' → logprob: -14.375506401062012

Token 3090: '".
' (ID: 26880)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.6081625819206238
    2. ' sur' → logprob: -1.3581626415252686
    3. '_sur' → logprob: -2.6081626415252686
    4. ' "' → logprob: -2.8581626415252686
    5. '"' → logprob: -3.7331626415252686
    6. ')' → logprob: -4.4831624031066895
    7. ' ' → logprob: -4.7331624031066895
    8. '```' → logprob: -5.3581624031066895
    9. ' =' → logprob: -5.7331624031066895
    10. ' )' → logprob: -6.1081624031066895

Token 3091: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04690409451723099
    2. 'import' → logprob: -3.2969040870666504
    3. '
' → logprob: -5.54690408706665
    4. ')' → logprob: -7.04690408706665
    5. 'def' → logprob: -7.17190408706665
    6. ',' → logprob: -7.67190408706665
    7. '```' → logprob: -7.67190408706665
    8. ' import' → logprob: -7.79690408706665
    9. 'from' → logprob: -8.046904563903809
    10. ':' → logprob: -8.046904563903809

Token 3092: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00783989392220974
    2. 'import' → logprob: -5.382839679718018
    3. '```' → logprob: -6.132839679718018
    4. '       ' → logprob: -8.007840156555176
    5. '
' → logprob: -8.757840156555176
    6. ')' → logprob: -8.882840156555176
    7. 'from' → logprob: -9.132840156555176
    8. '    
' → logprob: -9.757840156555176
    9. ':' → logprob: -10.132840156555176
    10. '#' → logprob: -10.757840156555176

Token 3093: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070886570028960705
    2. 'import' → logprob: -5.507088661193848
    3. '
' → logprob: -6.132088661193848
    4. '    
' → logprob: -8.507088661193848
    5. '```' → logprob: -8.882088661193848
    6. ')' → logprob: -9.007088661193848
    7. 'from' → logprob: -9.257088661193848
    8. '       ' → logprob: -9.382088661193848
    9. ' import' → logprob: -9.882088661193848
    10. '    ' → logprob: -10.257088661193848

Token 3094: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06333829462528229
    2. 'import' → logprob: -2.938338279724121
    3. '
' → logprob: -5.188338279724121
    4. 'from' → logprob: -7.063338279724121
    5. '    
' → logprob: -7.188338279724121
    6. '```' → logprob: -8.063338279724121
    7. 'dist' → logprob: -8.563338279724121
    8. '       ' → logprob: -8.813338279724121
    9. 'heap' → logprob: -9.188338279724121
    10. '#' (adapté à ' #') → logprob: -9.688338279724121

Token 3095: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1875908374786377
    2. 'import' → logprob: -1.9375908374786377
    3. 'dist' → logprob: -3.8125908374786377
    4. ' import' → logprob: -6.812590599060059
    5. 'from' → logprob: -7.062590599060059
    6. '#' → logprob: -7.187590599060059
    7. '
' → logprob: -7.437590599060059
    8. 'cost' → logprob: -7.562590599060059
    9. '    
' → logprob: -8.437590599060059
    10. 'distance' → logprob: -8.562590599060059

Token 3096: ' doit' (ID: 21822)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5741328597068787
    2. 'import' → logprob: -1.9491329193115234
    3. '#' → logprob: -2.1991329193115234
    4. 'continue' → logprob: -2.6991329193115234
    5. ' continue' → logprob: -3.1991329193115234
    6. 'def' → logprob: -3.6991329193115234
    7. ' #' → logprob: -4.324132919311523
    8. '       ' → logprob: -4.949132919311523
    9. '
' → logprob: -5.574132919311523
    10. 'from' → logprob: -5.574132919311523

Token 3097: ' sortir' (ID: 55515)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.3111562132835388
    2. 'faire' → logprob: -2.6861562728881836
    3. ' continuer' → logprob: -2.9361562728881836
    4. '   ' → logprob: -3.0611562728881836
    5. 'impl' → logprob: -3.4361562728881836
    6. 'util' → logprob: -3.5611562728881836
    7. ' utiliser' → logprob: -4.811156272888184
    8. 'import' → logprob: -4.936156272888184
    9. 'expl' → logprob: -5.686156272888184
    10. '       ' → logprob: -6.061156272888184

Token 3098: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5708858966827393
    2. 'def' → logprob: -1.9458858966827393
    3. 'import' → logprob: -1.9458858966827393
    4. '```' → logprob: -2.8208858966827393
    5. 'from' → logprob: -3.0708858966827393
    6. 'return' → logprob: -4.82088565826416
    7. ')' → logprob: -4.94588565826416
    8. 'dist' → logprob: -5.07088565826416
    9. 'total' → logprob: -5.57088565826416
    10. '#' → logprob: -5.94588565826416

Token 3099: ' chemin' (ID: 45035)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7155486345291138
    2. '
' → logprob: -1.8405486345291138
    3. 'import' → logprob: -2.090548515319824
    4. '   ' → logprob: -2.465548515319824
    5. 'result' → logprob: -2.465548515319824
    6. 'co' → logprob: -2.715548515319824
    7. ' coût' → logprob: -2.840548515319824
    8. '```' → logprob: -3.340548515319824
    9. '#' → logprob: -3.590548515319824
    10. ' result' → logprob: -4.215548515319824

Token 3100: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6521207094192505
    2. 'import' → logprob: -1.1521207094192505
    3. '
' → logprob: -2.902120590209961
    4. ':' → logprob: -3.652120590209961
    5. ':
' → logprob: -4.277120590209961
    6. ' =' → logprob: -4.527120590209961
    7. 'def' → logprob: -4.777120590209961
    8. '```' → logprob: -4.902120590209961
    9. ' import' → logprob: -5.402120590209961
    10. ',' → logprob: -5.402120590209961

Token 3101: ' nord' (ID: 35057)
  Prédit: 'coin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'coin' → logprob: -1.517163872718811
    2. 'us' → logprob: -2.2671637535095215
    3. 'point' → logprob: -2.3921637535095215
    4. 'gr' → logprob: -2.6421637535095215
    5. 'n' → logprob: -2.7671637535095215
    6. '```' → logprob: -2.7671637535095215
    7. 's' → logprob: -2.8921637535095215
    8. 'Nord' → logprob: -3.2671637535095215
    9. 'code' → logprob: -3.3921637535095215
    10. 'dé' → logprob: -3.3921637535095215

Token 3102: '-ou' (ID: 192984)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.641293466091156
    2. '-ou' → logprob: -1.3912935256958008
    3. '-west' → logprob: -2.891293525695801
    4. 'west' → logprob: -2.891293525695801
    5. ',' → logprob: -3.266293525695801
    6. '-' → logprob: -4.016293525695801
    7. '
' → logprob: -4.516293525695801
    8. '-
' → logprob: -4.891293525695801
    9. '```' → logprob: -5.141293525695801
    10. 'o' → logprob: -5.641293525695801

Token 3103: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.2582329511642456
    2. 'uest' → logprob: -1.5082329511642456
    3. 'vest' → logprob: -7.008233070373535
    4. 'u' → logprob: -7.008233070373535
    5. '
' → logprob: -7.008233070373535
    6. 'ou' → logprob: -7.133233070373535
    7. '```' → logprob: -7.258233070373535
    8. 'ord' → logprob: -7.883233070373535
    9. 'ud' → logprob: -8.008233070373535
    10. 'west' → logprob: -8.258233070373535

Token 3104: ' au' (ID: 2791)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7300424575805664
    2. ',' → logprob: -1.3550424575805664
    3. '   ' → logprob: -1.6050424575805664
    4. ')' → logprob: -4.480042457580566
    5. '_,' → logprob: -4.605042457580566
    6. '```' → logprob: -4.730042457580566
    7. ',
' → logprob: -4.980042457580566
    8. '_
' → logprob: -4.980042457580566
    9. '
' → logprob: -5.855042457580566
    10. '       ' → logprob: -6.480042457580566

Token 3105: ' sud' (ID: 10332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001095926738344133
    2. ' sud' → logprob: -7.001095771789551
    3. '```' → logprob: -9.25109577178955
    4. 'south' → logprob: -10.37609577178955
    5. '
' → logprob: -10.62609577178955
    6. 'est' → logprob: -11.62609577178955
    7. ' ' → logprob: -11.87609577178955
    8. 'Sud' → logprob: -12.50109577178955
    9. ' ' → logprob: -13.37609577178955
    10. '(s' → logprob: -13.37609577178955

Token 3106: '-est' (ID: 49572)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45425572991371155
    2. ',' → logprob: -1.0792557001113892
    3. '-east' → logprob: -4.7042555809021
    4. '-est' → logprob: -5.0792555809021
    5. ',
' → logprob: -5.5792555809021
    6. '-' → logprob: -6.0792555809021
    7. '```' → logprob: -6.9542555809021
    8. ')' → logprob: -8.079256057739258
    9. '       ' → logprob: -8.079256057739258
    10. ':' → logprob: -8.204256057739258

Token 3107: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046369582414627075
    2. 'import' → logprob: -3.2963695526123047
    3. '
' → logprob: -5.546369552612305
    4. '```' → logprob: -6.046369552612305
    5. '    
' → logprob: -7.296369552612305
    6. 'from' → logprob: -7.921369552612305
    7. '#' → logprob: -8.671369552612305
    8. ',' → logprob: -8.921369552612305
    9. '       ' → logprob: -9.046369552612305
    10. 'def' → logprob: -9.421369552612305

Token 3108: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005352109204977751
    2. '```' → logprob: -6.130352020263672
    3. '
' → logprob: -6.880352020263672
    4. 'import' → logprob: -7.005352020263672
    5. '       ' → logprob: -7.380352020263672
    6. '    
' → logprob: -8.255352020263672
    7. 'dist' → logprob: -9.880352020263672
    8. '``' → logprob: -10.130352020263672
    9. ',' → logprob: -10.255352020263672
    10. '#' → logprob: -10.505352020263672

Token 3109: ' peut' (ID: 9216)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.9476449489593506
    2. '   ' → logprob: -1.0726449489593506
    3. ' continue' → logprob: -3.0726449489593506
    4. ' ' → logprob: -3.3226449489593506
    5. 'def' → logprob: -3.5726449489593506
    6. ' =' → logprob: -3.6976449489593506
    7. '#' → logprob: -4.32264518737793
    8. ')' → logprob: -4.44764518737793
    9. '       ' → logprob: -4.57264518737793
    10. '_' → logprob: -4.82264518737793

Token 3110: ' marcher' (ID: 171848)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.4990801215171814
    2. 'contin' → logprob: -1.8740801811218262
    3. ' déplacer' → logprob: -2.374080181121826
    4. '```' → logprob: -3.374080181121826
    5. ' se' → logprob: -4.124080181121826
    6. ' travers' → logprob: -4.374080181121826
    7. '   ' → logprob: -4.749080181121826
    8. ' bou' → logprob: -4.749080181121826
    9. ' avancer' → logprob: -4.999080181121826
    10. ' aller' → logprob: -5.124080181121826

Token 3111: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.03907070308923721
    2. ' sur' → logprob: -3.9140706062316895
    3. '```' → logprob: -4.9140706062316895
    4. ',' → logprob: -6.6640706062316895
    5. ' ' → logprob: -6.9140706062316895
    6. 'se' → logprob: -7.0390706062316895
    7. '   ' → logprob: -7.1640706062316895
    8. '=' → logprob: -7.4140706062316895
    9. '_sur' → logprob: -7.4140706062316895
    10. ' =' → logprob: -8.039071083068848

Token 3112: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.6067428588867188
    2. ' des' → logprob: -1.4817428588867188
    3. ' cases' → logprob: -2.6067428588867188
    4. 'des' → logprob: -2.7317428588867188
    5. 'les' → logprob: -3.6067428588867188
    6. 'case' → logprob: -3.8567428588867188
    7. ' les' → logprob: -4.356742858886719
    8. 'une' → logprob: -4.481742858886719
    9. ' une' → logprob: -4.981742858886719
    10. ' case' → logprob: -5.106742858886719

Token 3113: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.1191399097442627
    2. 'vide' → logprob: -1.3691399097442627
    3. ' sans' → logprob: -2.2441399097442627
    4. ' vide' → logprob: -2.6191399097442627
    5. 'sans' → logprob: -2.7441399097442627
    6. '_v' → logprob: -2.8691399097442627
    7. '```' → logprob: -3.4941399097442627
    8. '_' → logprob: -3.9941399097442627
    9. 'vid' → logprob: -3.9941399097442627
    10. 'v' → logprob: -4.119139671325684

Token 3114: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.007775325793772936
    2. 'ide' → logprob: -5.75777530670166
    3. 'u' → logprob: -6.38277530670166
    4. 'id' → logprob: -7.38277530670166
    5. 'uid' → logprob: -7.50777530670166
    6. 'i' → logprob: -7.50777530670166
    7. '
' → logprob: -7.75777530670166
    8. '   ' → logprob: -8.88277530670166
    9. 'v' → logprob: -9.63277530670166
    10. '```' → logprob: -9.63277530670166

Token 3115: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15985022485256195
    2. ',' → logprob: -2.4098501205444336
    3. ')' → logprob: -3.7848501205444336
    4. '```' → logprob: -5.159850120544434
    5. '
' → logprob: -5.409850120544434
    6. '[' → logprob: -5.534850120544434
    7. ' et' → logprob: -6.034850120544434
    8. ':' → logprob: -6.159850120544434
    9. '       ' → logprob: -6.409850120544434
    10. ' +' → logprob: -6.659850120544434

Token 3116: 'co' (ID: 1191)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41607940196990967
    2. '   ' → logprob: -2.791079521179199
    3. ' sans' → logprob: -3.041079521179199
    4. ' )' → logprob: -3.291079521179199
    5. 'sans' → logprob: -3.416079521179199
    6. ',' → logprob: -3.791079521179199
    7. ')
' → logprob: -3.791079521179199
    8. '0' → logprob: -3.916079521179199
    9. '```' → logprob: -4.416079521179199
    10. ' (' → logprob: -4.416079521179199

Token 3117: 'ût' (ID: 24581)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.8382388353347778
    2. 's' → logprob: -2.2132387161254883
    3. 'n' → logprob: -2.5882387161254883
    4. ')' → logprob: -2.8382387161254883
    5. 'nt' → logprob: -2.9632387161254883
    6. 'u' → logprob: -2.9632387161254883
    7. 'de' → logprob: -3.0882387161254883
    8. 'm' → logprob: -3.5882387161254883
    9. 'mp' → logprob: -3.7132387161254883
    10. 'sts' → logprob: -3.7132387161254883

Token 3118: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6683753132820129
    2. ' =' → logprob: -0.7933753132820129
    3. ')' → logprob: -3.793375253677368
    4. ' )' → logprob: -4.918375492095947
    5. '1' → logprob: -6.668375492095947
    6. ' ' → logprob: -7.543375492095947
    7. '```' → logprob: -7.543375492095947
    8. '0' → logprob: -7.543375492095947
    9. ' de' → logprob: -7.918375492095947
    10. ' +=' → logprob: -8.293375015258789

Token 3119: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6103578209877014
    2. '0' → logprob: -1.3603577613830566
    3. '1' → logprob: -2.2353577613830566
    4. ' =' → logprob: -2.6103577613830566
    5. ' ' → logprob: -4.860357761383057
    6. ')' → logprob: -5.360357761383057
    7. '   ' → logprob: -5.610357761383057
    8. 'de' → logprob: -7.110357761383057
    9. '```' → logprob: -7.485357761383057
    10. '+' → logprob: -8.110358238220215

Token 3120: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058826908469200134
    2. ',' → logprob: -3.1838269233703613
    3. ')
' → logprob: -5.308826923370361
    4. '),' → logprob: -5.433826923370361
    5. '   ' → logprob: -6.058826923370361
    6. ' )' → logprob: -7.058826923370361
    7. '):
' → logprob: -7.183826923370361
    8. ',
' → logprob: -7.433826923370361
    9. '):' → logprob: -7.558826923370361
    10. ')+' → logprob: -8.433826446533203

Token 3121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3599104881286621
    2. '#' → logprob: -1.234910488128662
    3. '           ' → logprob: -5.609910488128662
    4. '       ' → logprob: -5.734910488128662
    5. '               ' → logprob: -6.109910488128662
    6. '                   ' → logprob: -6.734910488128662
    7. ' #' → logprob: -8.48491096496582
    8. 'et' → logprob: -8.85991096496582
    9. '```' → logprob: -8.98491096496582
    10. 'and' → logprob: -9.60991096496582

Token 3122: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5226033329963684
    2. '   ' → logprob: -1.2726032733917236
    3. '           ' → logprob: -3.0226032733917236
    4. '               ' → logprob: -3.3976032733917236
    5. '                   ' → logprob: -4.022603511810303
    6. '       ' → logprob: -4.147603511810303
    7. 'et' → logprob: -5.897603511810303
    8. '```' → logprob: -6.397603511810303
    9. ' #' → logprob: -6.772603511810303
    10. ' ' → logprob: -7.272603511810303

Token 3123: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.058234963566064835
    2. '   ' → logprob: -3.308234930038452
    3. 'et' → logprob: -4.558235168457031
    4. '       ' → logprob: -6.183235168457031
    5. '           ' → logprob: -6.433235168457031
    6. '               ' → logprob: -6.433235168457031
    7. ' #' → logprob: -6.933235168457031
    8. '                   ' → logprob: -7.558235168457031
    9. 'ou' → logprob: -7.683235168457031
    10. 'mais' → logprob: -7.683235168457031

Token 3124: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.7631610631942749
    2. 'pe' → logprob: -1.763161063194275
    3. ' doit' → logprob: -2.6381611824035645
    4. '_pe' → logprob: -2.8881611824035645
    5. ' continue' → logprob: -3.0131611824035645
    6. ' peux' → logprob: -3.5131611824035645
    7. 'do' → logprob: -3.6381611824035645
    8. 'continue' → logprob: -3.7631611824035645
    9. ' va' → logprob: -3.8881611824035645
    10. '#' → logprob: -4.0131611824035645

Token 3125: ' "' (ID: 392)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.6038814783096313
    2. 'cou' → logprob: -1.4788814783096313
    3. ' continuer' → logprob: -2.228881359100342
    4. ' couper' → logprob: -2.853881359100342
    5. 'march' → logprob: -4.853881359100342
    6. 'faire' → logprob: -5.478881359100342
    7. ' se' → logprob: -5.603881359100342
    8. 'cut' → logprob: -5.603881359100342
    9. 'cour' → logprob: -5.853881359100342
    10. ' ' → logprob: -5.853881359100342

Token 3126: 'cou' (ID: 79019)
  Prédit: 'cou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.18364635109901428
    2. 'contin' → logprob: -2.0586464405059814
    3. 'cut' → logprob: -4.308646202087402
    4. ' couper' → logprob: -4.808646202087402
    5. 'pass' → logprob: -5.308646202087402
    6. 'prendre' → logprob: -5.933646202087402
    7. 'march' → logprob: -6.433646202087402
    8. '
' → logprob: -7.058646202087402
    9. 'cour' → logprob: -7.183646202087402
    10. 'c' → logprob: -7.183646202087402

Token 3127: 'per' (ID: 543)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.36067354679107666
    2. 'per' → logprob: -1.3606735467910767
    3. '   ' → logprob: -4.235673427581787
    4. 't' → logprob: -4.735673427581787
    5. 'p' → logprob: -5.110673427581787
    6. '#' → logprob: -5.610673427581787
    7. 'pper' → logprob: -5.610673427581787
    8. 'up' → logprob: -7.110673427581787
    9. '  ' → logprob: -7.110673427581787
    10. '```' → logprob: -7.235673427581787

Token 3128: '"' (ID: 1)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.090047001838684
    2. '"' → logprob: -1.340047001838684
    3. ' les' → logprob: -1.715047001838684
    4. 'sur' → logprob: -2.7150468826293945
    5. ' sur' → logprob: -3.2150468826293945
    6. 'des' → logprob: -3.5900468826293945
    7. 'les' → logprob: -3.8400468826293945
    8. ' ' → logprob: -4.3400468826293945
    9. '_sur' → logprob: -4.4650468826293945
    10. ' un' → logprob: -4.4650468826293945

Token 3129: ' cases' (ID: 7911)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.3446009159088135
    2. 'sur' → logprob: -1.5946009159088135
    3. ' les' → logprob: -1.7196009159088135
    4. ' sur' → logprob: -2.0946009159088135
    5. ' ' → logprob: -2.2196009159088135
    6. '_sur' → logprob: -3.5946009159088135
    7. ' un' → logprob: -3.9696009159088135
    8. ' arbres' → logprob: -4.219600677490234
    9. 'les' → logprob: -4.469600677490234
    10. ' (' → logprob: -4.844600677490234

Token 3130: ' avec' (ID: 3937)
  Prédit: ' vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vide' → logprob: -1.4385149478912354
    2. 'vide' → logprob: -1.5635149478912354
    3. ' avec' → logprob: -1.6885149478912354
    4. 'with' → logprob: -2.4385149478912354
    5. ' with' → logprob: -3.1885149478912354
    6. '_with' → logprob: -3.3135149478912354
    7. ' sans' → logprob: -3.4385149478912354
    8. '_' → logprob: -3.4385149478912354
    9. ' ' → logprob: -3.9385149478912354
    10. '_v' → logprob: -4.063514709472656

Token 3131: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0201377235352993
    2. 'ar' → logprob: -4.270137786865234
    3. ' arbres' → logprob: -5.520137786865234
    4. 'des' → logprob: -7.270137786865234
    5. '   ' → logprob: -7.520137786865234
    6. '```' → logprob: -8.645137786865234
    7. '0' → logprob: -9.020137786865234
    8. 'for' → logprob: -9.645137786865234
    9. ' des' → logprob: -9.645137786865234
    10. '#' → logprob: -9.645137786865234

Token 3132: ' adj' (ID: 20251)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.8084990978240967
    2. ',' → logprob: -2.0584990978240967
    3. 'sur' → logprob: -2.1834990978240967
    4. ' (' → logprob: -2.3084990978240967
    5. '_sur' → logprob: -2.4334990978240967
    6. ')' → logprob: -2.9334990978240967
    7. ' et' → logprob: -3.1834990978240967
    8. ' ,' → logprob: -3.1834990978240967
    9. ' ' → logprob: -3.4334990978240967
    10. '```' → logprob: -3.4334990978240967

Token 3133: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.34713733196258545
    2. 'acent' → logprob: -1.3471373319625854
    3. '```' → logprob: -4.847137451171875
    4. ')' → logprob: -4.972137451171875
    5. ']' → logprob: -6.097137451171875
    6. 'acency' → logprob: -6.222137451171875
    7. ')
' → logprob: -6.347137451171875
    8. '   ' → logprob: -6.722137451171875
    9. '{
' → logprob: -6.847137451171875
    10. '
' → logprob: -6.972137451171875

Token 3134: 'ents' (ID: 1094)
  Prédit: 'entes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.07913718372583389
    2. 'ent' → logprob: -3.079137086868286
    3. 'ents' → logprob: -4.079137325286865
    4. 'ente' → logprob: -4.704137325286865
    5. 'ac' → logprob: -6.454137325286865
    6. 'acent' → logprob: -6.954137325286865
    7. '```' → logprob: -8.204136848449707
    8. 'es' → logprob: -8.579136848449707
    9. 'centes' → logprob: -8.579136848449707
    10. '
' → logprob: -8.954136848449707

Token 3135: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29438120126724243
    2. ':' → logprob: -2.4193811416625977
    3. ',' → logprob: -3.1693811416625977
    4. 'def' → logprob: -3.2943811416625977
    5. '```' → logprob: -4.419381141662598
    6. ':
' → logprob: -4.544381141662598
    7. ')' → logprob: -4.669381141662598
    8. '.' → logprob: -4.794381141662598
    9. '
' → logprob: -5.294381141662598
    10. ',
' → logprob: -5.669381141662598

Token 3136: 'co' (ID: 1191)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8918570280075073
    2. ')' → logprob: -1.1418570280075073
    3. '   ' → logprob: -3.391857147216797
    4. ',' → logprob: -3.641857147216797
    5. ' (' → logprob: -3.641857147216797
    6. '),' → logprob: -4.266857147216797
    7. 'sans' → logprob: -4.266857147216797
    8. '):
' → logprob: -4.391857147216797
    9. ' ' → logprob: -4.641857147216797
    10. ' )' → logprob: -4.641857147216797

Token 3137: 'ût' (ID: 24581)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.6742458343505859
    2. ')' → logprob: -0.9242458343505859
    3. 'u' → logprob: -3.549245834350586
    4. '0' → logprob: -4.049245834350586
    5. '=' → logprob: -4.424245834350586
    6. '#' → logprob: -5.174245834350586
    7. '+' → logprob: -5.799245834350586
    8. 'ost' → logprob: -6.674245834350586
    9. '}' → logprob: -6.674245834350586
    10. 'nt' → logprob: -6.674245834350586

Token 3138: ' du' (ID: 1462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3426085412502289
    2. ' =' → logprob: -2.4676084518432617
    3. '1' → logprob: -2.7176084518432617
    4. '0' → logprob: -3.2176084518432617
    5. '=' → logprob: -3.3426084518432617
    6. ')' → logprob: -3.5926084518432617
    7. ' à' → logprob: -4.467608451843262
    8. ' +' → logprob: -5.717608451843262
    9. ' de' → logprob: -5.842608451843262
    10. ' supplémentaire' → logprob: -5.967608451843262

Token 3139: ' coupe' (ID: 71780)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.0121990442276
    2. ')' → logprob: -1.1371990442276
    3. 'c' → logprob: -2.7621989250183105
    4. '```' → logprob: -2.8871989250183105
    5. 'dé' → logprob: -3.6371989250183105
    6. ' déplacement' → logprob: -4.0121989250183105
    7. '   ' → logprob: -4.1371989250183105
    8. 'd' → logprob: -4.5121989250183105
    9. 'pass' → logprob: -4.6371989250183105
    10. '
' → logprob: -4.8871989250183105

Token 3140: '+' (ID: 10)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6153433918952942
    2. ')' → logprob: -1.3653433322906494
    3. '_' → logprob: -2.7403433322906494
    4. 's' → logprob: -3.6153433322906494
    5. 't' → logprob: -3.9903433322906494
    6. 'd' → logprob: -4.3653435707092285
    7. '-' → logprob: -4.4903435707092285
    8. 'tion' → logprob: -4.6153435707092285
    9. 'e' → logprob: -4.7403435707092285
    10. 'ment' → logprob: -5.1153435707092285

Token 3141: 'rap' (ID: 1807)
  Prédit: 'transport'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transport' → logprob: -0.49360090494155884
    2. 'rapport' → logprob: -2.243600845336914
    3. 'rap' → logprob: -2.368600845336914
    4. 'port' → logprob: -2.493600845336914
    5. 'report' → logprob: -3.243600845336914
    6. 'ret' → logprob: -3.493600845336914
    7. 'dé' → logprob: -4.368600845336914
    8. 'trans' → logprob: -5.243600845336914
    9. 'ram' → logprob: -5.618600845336914
    10. 'porte' → logprob: -5.868600845336914

Token 3142: 'porte' (ID: 17761)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.35902753472328186
    2. 'port' → logprob: -1.4840275049209595
    3. 'porter' → logprob: -4.35902738571167
    4. 'orter' → logprob: -4.60902738571167
    5. '```' → logprob: -4.73402738571167
    6. 'ot' → logprob: -5.23402738571167
    7. '   ' → logprob: -5.60902738571167
    8. 'h' → logprob: -5.85902738571167
    9. '
' → logprob: -5.98402738571167
    10. ')
' → logprob: -5.98402738571167

Token 3143: '),
' (ID: 2313)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40224725008010864
    2. 'ment' → logprob: -1.5272471904754639
    3. ')' → logprob: -2.652247190475464
    4. 'ur' → logprob: -4.152247428894043
    5. 'e' → logprob: -4.777247428894043
    6. 's' → logprob: -5.277247428894043
    7. 'es' → logprob: -5.277247428894043
    8. '}' → logprob: -5.902247428894043
    9. 'm' → logprob: -6.402247428894043
    10. 'nt' → logprob: -6.777247428894043

Token 3144: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7031997442245483
    2. '   ' → logprob: -1.3281997442245483
    3. '               ' → logprob: -2.703199863433838
    4. '                   ' → logprob: -3.203199863433838
    5. ' (' → logprob: -3.953199863433838
    6. '       ' → logprob: -4.078199863433838
    7. '(' → logprob: -4.078199863433838
    8. '           ' → logprob: -4.328199863433838
    9. 'et' → logprob: -4.703199863433838
    10. ' et' → logprob: -4.828199863433838

Token 3145: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5407982468605042
    2. '#' (adapté à ' #') → logprob: -0.9157982468605042
    3. '       ' → logprob: -5.790798187255859
    4. ' #' → logprob: -5.915798187255859
    5. '           ' → logprob: -6.165798187255859
    6. '                   ' → logprob: -6.290798187255859
    7. '               ' → logprob: -6.415798187255859
    8. '
' → logprob: -7.040798187255859
    9. ')' → logprob: -7.165798187255859
    10. '#
' → logprob: -7.165798187255859

Token 3146: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02496616169810295
    2. '#' → logprob: -4.024966239929199
    3. 'import' → logprob: -6.024966239929199
    4. '       ' → logprob: -7.149966239929199
    5. '
' → logprob: -7.399966239929199
    6. ')' → logprob: -7.399966239929199
    7. '"' → logprob: -8.0249662399292
    8. '           ' → logprob: -8.1499662399292
    9. '                   ' → logprob: -8.2749662399292
    10. '               ' → logprob: -8.2749662399292

Token 3147: ' continuer' (ID: 75597)
  Prédit: ' continuer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.3578961491584778
    2. ' on' → logprob: -2.107896089553833
    3. '   ' → logprob: -3.107896089553833
    4. ' se' → logprob: -3.607896089553833
    5. 'contin' → logprob: -3.732896089553833
    6. 'on' → logprob: -3.982896089553833
    7. ' poursuivre' → logprob: -4.857896327972412
    8. ' déplacer' → logprob: -5.107896327972412
    9. '           ' → logprob: -5.607896327972412
    10. '               ' → logprob: -5.607896327972412

Token 3148: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05331624299287796
    2. ':' → logprob: -4.553316116333008
    3. '```' → logprob: -4.678316116333008
    4. '       ' → logprob: -5.553316116333008
    5. '.' → logprob: -5.803316116333008
    6. ')' → logprob: -5.803316116333008
    7. ',' → logprob: -6.178316116333008
    8. 'def' → logprob: -6.178316116333008
    9. 'import' → logprob: -6.553316116333008
    10. '#' → logprob: -6.553316116333008

Token 3149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11431823670864105
    2. 'import' → logprob: -2.2393181324005127
    3. '
' → logprob: -7.364318370819092
    4. 'from' → logprob: -7.489318370819092
    5. '```' → logprob: -8.489317893981934
    6. '    
' → logprob: -10.114317893981934
    7. '#' → logprob: -10.989317893981934
    8. ' import' → logprob: -11.364317893981934
    9. 'dist' → logprob: -11.364317893981934
    10. 'cost' → logprob: -11.989317893981934

Token 3150: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029333263635635376
    2. 'import' → logprob: -3.6543333530426025
    3. 'dist' → logprob: -7.154333114624023
    4. '
' → logprob: -7.404333114624023
    5. 'from' → logprob: -7.779333114624023
    6. '    
' → logprob: -7.904333114624023
    7. '```' → logprob: -8.404333114624023
    8. ')' → logprob: -8.654333114624023
    9. ' import' → logprob: -9.654333114624023
    10. 'def' → logprob: -9.654333114624023

Token 3151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016771860420703888
    2. 'import' → logprob: -4.3917717933654785
    3. '
' → logprob: -6.3917717933654785
    4. '```' → logprob: -6.7667717933654785
    5. '       ' → logprob: -8.141772270202637
    6. '    
' → logprob: -8.266772270202637
    7. ':' → logprob: -8.641772270202637
    8. ' import' → logprob: -8.641772270202637
    9. 'from' → logprob: -8.766772270202637
    10. 'def' → logprob: -9.266772270202637

Token 3152: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034588005393743515
    2. 'import' → logprob: -3.909588098526001
    3. 'dist' → logprob: -4.659587860107422
    4. '
' → logprob: -6.659587860107422
    5. 'cost' → logprob: -7.534587860107422
    6. '    
' → logprob: -7.659587860107422
    7. ' import' → logprob: -7.784587860107422
    8. '#' (adapté à ' #') → logprob: -8.409587860107422
    9. '       ' → logprob: -8.409587860107422
    10. '```' → logprob: -8.534587860107422

Token 3153: ' Une' (ID: 19758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08642450720071793
    2. 'import' → logprob: -2.7114245891571045
    3. 'dist' → logprob: -5.086424350738525
    4. 'from' → logprob: -5.586424350738525
    5. '
' → logprob: -5.711424350738525
    6. '#' → logprob: -7.086424350738525
    7. '```' → logprob: -7.461424350738525
    8. ')' → logprob: -8.086424827575684
    9. '    
' → logprob: -8.461424827575684
    10. 'def' → logprob: -8.461424827575684

Token 3154: ' solution' (ID: 7578)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35660362243652344
    2. '*' → logprob: -2.8566036224365234
    3. 'import' → logprob: -2.9816036224365234
    4. '#' → logprob: -3.7316036224365234
    5. 'dj' → logprob: -3.7316036224365234
    6. '   ' → logprob: -3.8566036224365234
    7. 'from' → logprob: -3.9816036224365234
    8. 'b' → logprob: -4.106603622436523
    9. 'd' → logprob: -4.481603622436523
    10. '
' → logprob: -5.106603622436523

Token 3155: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6266478300094604
    2. 'import' → logprob: -1.6266478300094604
    3. ' =' → logprob: -2.00164794921875
    4. '```' → logprob: -3.37664794921875
    5. ':' → logprob: -3.50164794921875
    6. '#' → logprob: -3.87664794921875
    7. '=' → logprob: -4.25164794921875
    8. ':
' → logprob: -4.75164794921875
    9. 'from' → logprob: -5.00164794921875
    10. ' est' → logprob: -5.37664794921875

Token 3156: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19042906165122986
    2. 'import' → logprob: -2.3154289722442627
    3. 'd' → logprob: -3.1904289722442627
    4. '```' → logprob: -4.565429210662842
    5. ' de' → logprob: -4.815429210662842
    6. ' d' → logprob: -5.065429210662842
    7. 'de' → logprob: -5.565429210662842
    8. 'def' → logprob: -6.940429210662842
    9. '       ' → logprob: -6.940429210662842
    10. '    ' → logprob: -6.940429210662842

Token 3157: ' transformer' (ID: 59595)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03847219794988632
    2. 'from' → logprob: -3.4134721755981445
    3. '```' → logprob: -5.6634721755981445
    4. '   ' → logprob: -6.9134721755981445
    5. '
' → logprob: -8.913472175598145
    6. 'continue' → logprob: -9.788472175598145
    7. 'contin' → logprob: -10.288472175598145
    8. 'heap' → logprob: -10.663472175598145
    9. '#' → logprob: -10.788472175598145
    10. ' import' → logprob: -10.913472175598145

Token 3158: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.3995973765850067
    2. 'le' → logprob: -1.524597406387329
    3. ' la' → logprob: -3.024597406387329
    4. ' le' → logprob: -4.14959716796875
    5. '```' → logprob: -4.14959716796875
    6. 'l' → logprob: -4.39959716796875
    7. '   ' → logprob: -4.64959716796875
    8. 'une' → logprob: -5.64959716796875
    9. 'les' → logprob: -6.14959716796875
    10. '``' → logprob: -7.39959716796875

Token 3159: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.8276432156562805
    2. 'graph' → logprob: -1.0776431560516357
    3. 'grid' → logprob: -2.2026431560516357
    4. ' grid' → logprob: -3.2026431560516357
    5. ' graph' → logprob: -3.4526431560516357
    6. 'problem' → logprob: -4.952643394470215
    7. ' grille' → logprob: -5.327643394470215
    8. ' grap' → logprob: -5.702643394470215
    9. 'pro' → logprob: -5.702643394470215
    10. ' problème' → logprob: -5.827643394470215

Token 3160: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2450793832540512
    2. 'en' → logprob: -2.995079278945923
    3. '   ' → logprob: -3.370079278945923
    4. '```' → logprob: -3.495079278945923
    5. ' into' → logprob: -3.620079278945923
    6. '_' → logprob: -3.995079278945923
    7. ',' → logprob: -4.120079517364502
    8. ')' → logprob: -5.245079517364502
    9. '[i' → logprob: -5.620079517364502
    10. ' =' → logprob: -5.620079517364502

Token 3161: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.05174434930086136
    2. 'graph' → logprob: -3.8017444610595703
    3. 'gr' → logprob: -3.8017444610595703
    4. ' un' → logprob: -5.55174446105957
    5. '   ' → logprob: -7.55174446105957
    6. 'une' → logprob: -7.92674446105957
    7. '```' → logprob: -8.05174446105957
    8. '       ' → logprob: -9.30174446105957
    9. ' grap' → logprob: -9.30174446105957
    10. ' ' → logprob: -9.67674446105957

Token 3162: ' grap' (ID: 60955)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.2822667956352234
    2. 'graph' → logprob: -1.4072668552398682
    3. '
' → logprob: -7.907266616821289
    4. ' grap' → logprob: -8.032266616821289
    5. '```' → logprob: -8.407266616821289
    6. '   ' → logprob: -9.782266616821289
    7. 'g' → logprob: -9.907266616821289
    8. 'weighted' → logprob: -10.782266616821289
    9. '``' → logprob: -11.407266616821289
    10. ' graph' → logprob: -11.657266616821289

Token 3163: 'he' (ID: 273)
  Prédit: 'aphe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aphe' → logprob: -1.0958774089813232
    2. 'h' → logprob: -1.2208774089813232
    3. '
' → logprob: -2.4708774089813232
    4. 'ph' → logprob: -2.5958774089813232
    5. 'aph' → logprob: -3.4708774089813232
    6. '   ' → logprob: -3.7208774089813232
    7. ' ' → logprob: -3.8458774089813232
    8. ' 
' → logprob: -3.9708774089813232
    9. '[' → logprob: -4.095877647399902
    10. '#' → logprob: -4.095877647399902

Token 3164: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.6445770263671875
    2. ',' → logprob: -1.2695770263671875
    3. 'où' → logprob: -2.7695770263671875
    4. ' en' → logprob: -3.5195770263671875
    5. ' avec' → logprob: -3.6445770263671875
    6. 'en' → logprob: -3.6445770263671875
    7. '```' → logprob: -4.8945770263671875
    8. ' et' → logprob: -5.1445770263671875
    9. ':' → logprob: -5.1445770263671875
    10. '   ' → logprob: -5.2695770263671875

Token 3165: ' :
' (ID: 10039)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.07177726924419403
    2. ' on' → logprob: -3.57177734375
    3. ' les' → logprob: -4.07177734375
    4. 'on' → logprob: -5.07177734375
    5. 'les' → logprob: -5.44677734375
    6. ' each' → logprob: -6.07177734375
    7. 'each' → logprob: -6.19677734375
    8. '   ' → logprob: -6.32177734375
    9. 'le' → logprob: -6.94677734375
    10. ' (' → logprob: -7.32177734375

Token 3166: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5054892301559448
    2. '   ' → logprob: -1.3804892301559448
    3. ' (' → logprob: -3.6304893493652344
    4. '       ' → logprob: -4.130489349365234
    5. ' chaque' → logprob: -4.130489349365234
    6. ' #' → logprob: -4.380489349365234
    7. ' ' → logprob: -4.505489349365234
    8. ')' → logprob: -4.505489349365234
    9. '(' → logprob: -5.130489349365234
    10. ',' → logprob: -5.630489349365234

Token 3167: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.30908891558647156
    2. '   ' → logprob: -2.059088945388794
    3. ' (' → logprob: -3.059088945388794
    4. ' #' → logprob: -3.684088945388794
    5. '       ' → logprob: -4.559088706970215
    6. ')' → logprob: -4.684088706970215
    7. '(' → logprob: -5.059088706970215
    8. ' chaque' → logprob: -5.559088706970215
    9. '(i' → logprob: -5.809088706970215
    10. ' ' → logprob: -5.809088706970215

Token 3168: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1522981822490692
    2. 'nodes' → logprob: -3.6522982120513916
    3. '   ' → logprob: -3.7772982120513916
    4. 'for' → logprob: -3.9022982120513916
    5. ' chaque' → logprob: -4.0272979736328125
    6. 'on' → logprob: -4.7772979736328125
    7. 'les' → logprob: -4.9022979736328125
    8. 'i' → logprob: -5.6522979736328125
    9. '```' → logprob: -6.0272979736328125
    10. 'case' → logprob: -6.0272979736328125

Token 3169: ' les' (ID: 1341)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1300626993179321
    2. 'on' → logprob: -1.2550626993179321
    3. 'les' → logprob: -1.2550626993179321
    4. '#' → logprob: -3.1300625801086426
    5. 'Chaque' → logprob: -3.7550625801086426
    6. 'cha' → logprob: -4.255062580108643
    7. ' on' → logprob: -5.130062580108643
    8. 'pour' → logprob: -5.380062580108643
    9. '   ' → logprob: -5.630062580108643
    10. 'for' → logprob: -6.255062580108643

Token 3170: ' cases' (ID: 7911)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0843298435211182
    2. 'nodes' → logprob: -1.7093298435211182
    3. 'neighbors' → logprob: -2.334329843521118
    4. 'cases' → logprob: -2.584329843521118
    5. '   ' → logprob: -2.959329843521118
    6. 'cost' → logprob: -3.334329843521118
    7. 'i' → logprob: -3.334329843521118
    8. '#' → logprob: -4.084329605102539
    9. ' nodes' → logprob: -4.334329605102539
    10. 'cells' → logprob: -4.584329605102539

Token 3171: ' v' (ID: 323)
  Prédit: 'sans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sans' → logprob: -1.782792091369629
    2. ' =' → logprob: -2.032792091369629
    3. 's' → logprob: -2.157792091369629
    4. ' sans' → logprob: -2.532792091369629
    5. 'vide' → logprob: -2.657792091369629
    6. '_' → logprob: -3.032792091369629
    7. 'v' → logprob: -3.282792091369629
    8. ' sont' → logprob: -3.282792091369629
    9. ' v' → logprob: -3.407792091369629
    10. ' avec' → logprob: -3.407792091369629

Token 3172: 'ides' (ID: 4105)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6910566687583923
    2. 'ides' → logprob: -1.816056728363037
    3. 'i' → logprob: -2.691056728363037
    4. 'u' → logprob: -3.441056728363037
    5. '   ' → logprob: -3.941056728363037
    6. '[' → logprob: -4.066056728363037
    7. ']' → logprob: -4.191056728363037
    8. 'ide' → logprob: -4.191056728363037
    9. ':' → logprob: -4.316056728363037
    10. '_' → logprob: -4.441056728363037

Token 3173: ' ont' (ID: 4930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48951858282089233
    2. '=' → logprob: -1.989518642425537
    3. ':' → logprob: -2.989518642425537
    4. '```' → logprob: -3.364518642425537
    5. ' (' → logprob: -3.864518642425537
    6. ')' → logprob: -3.989518642425537
    7. ' sont' → logprob: -4.114518642425537
    8. ',' → logprob: -4.364518642425537
    9. ' ==' → logprob: -4.614518642425537
    10. ' ou' → logprob: -4.614518642425537

Token 3174: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.47844254970550537
    2. 'un' → logprob: -1.1034425497055054
    3. 'co' → logprob: -3.228442668914795
    4. 'une' → logprob: -5.728442668914795
    5. ' ' → logprob: -5.978442668914795
    6. ' une' → logprob: -7.228442668914795
    7. ' coût' → logprob: -7.478442668914795
    8. 'c' → logprob: -7.728442668914795
    9. 'le' → logprob: -8.603442192077637
    10. '0' → logprob: -8.728442192077637

Token 3175: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.07970050722360611
    2. 'cout' → logprob: -3.329700469970703
    3. 'cost' → logprob: -3.954700469970703
    4. ' coût' → logprob: -4.954700469970703
    5. 'po' → logprob: -5.204700469970703
    6. 'weight' → logprob: -6.079700469970703
    7. 'c' → logprob: -6.079700469970703
    8. ' poids' → logprob: -6.204700469970703
    9. ' cout' → logprob: -7.454700469970703
    10. '```' → logprob: -7.954700469970703

Token 3176: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0727638006210327
    2. '=' → logprob: -1.3227638006210327
    3. '0' → logprob: -1.4477638006210327
    4. ' de' → logprob: -2.6977639198303223
    5. ' ' → logprob: -3.0727639198303223
    6. '1' → logprob: -3.3227639198303223
    7. '```' → logprob: -6.197763919830322
    8. '   ' → logprob: -6.447763919830322
    9. 'de' → logprob: -7.197763919830322
    10. '`' → logprob: -7.572763919830322

Token 3177: ' déplacement' (ID: 138449)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04403948783874512
    2. ' ' → logprob: -3.669039487838745
    3. ' déplacement' → logprob: -4.419039726257324
    4. 'dé' → logprob: -5.794039726257324
    5. '0' → logprob: -6.794039726257324
    6. '   ' → logprob: -7.044039726257324
    7. ' mouvement' → logprob: -9.419039726257324
    8. 'de' → logprob: -9.419039726257324
    9. 'movement' → logprob: -9.544039726257324
    10. ' déplacements' → logprob: -9.919039726257324

Token 3178: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9852569103240967
    2. ' =' → logprob: -0.9852569103240967
    3. '_' → logprob: -2.6102569103240967
    4. ' ' → logprob: -3.4852569103240967
    5. '```' → logprob: -3.6102569103240967
    6. ',' → logprob: -3.8602569103240967
    7. '   ' → logprob: -3.8602569103240967
    8. ' (' → logprob: -4.110257148742676
    9. ')' → logprob: -4.235257148742676
    10. ' ,' → logprob: -4.735257148742676

Token 3179: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34346604347229004
    2. ' =' → logprob: -1.59346604347229
    3. '1' → logprob: -2.96846604347229
    4. '0' → logprob: -3.84346604347229
    5. ' ' → logprob: -5.718465805053711
    6. ',' → logprob: -5.718465805053711
    7. '   ' → logprob: -5.843465805053711
    8. '_' → logprob: -6.968465805053711
    9. '```' → logprob: -6.968465805053711
    10. ',
' → logprob: -7.593465805053711

Token 3180: ',
' (ID: 412)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6935253739356995
    2. ',' → logprob: -1.6935253143310547
    3. '   ' → logprob: -1.9435253143310547
    4. ')' → logprob: -3.0685253143310547
    5. ',
' → logprob: -3.1935253143310547
    6. '<|end|>' → logprob: -4.193525314331055
    7. '\n' → logprob: -4.443525314331055
    8. ':' → logprob: -5.068525314331055
    9. '#' → logprob: -5.318525314331055
    10. ':
' → logprob: -5.318525314331055

Token 3181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5307770371437073
    2. '#' → logprob: -0.9057770371437073
    3. '                   ' → logprob: -6.0307769775390625
    4. '               ' → logprob: -6.2807769775390625
    5. '           ' → logprob: -6.4057769775390625
    6. '       ' → logprob: -7.0307769775390625
    7. ' #' → logprob: -7.5307769775390625
    8. '                       ' → logprob: -9.655776977539062
    9. ' ' → logprob: -10.405776977539062
    10. '```' → logprob: -10.530776977539062

Token 3182: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.01945612020790577
    2. '   ' → logprob: -4.019455909729004
    3. ' #' → logprob: -7.769455909729004
    4. '                   ' → logprob: -7.894455909729004
    5. '           ' → logprob: -8.269455909729004
    6. '               ' → logprob: -9.019455909729004
    7. '       ' → logprob: -9.644455909729004
    8. ' ' → logprob: -10.769455909729004
    9. '                       ' → logprob: -11.769455909729004
    10. '-' → logprob: -12.019455909729004

Token 3183: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0022012863773852587
    2. '   ' → logprob: -6.752201080322266
    3. ' #' → logprob: -7.252201080322266
    4. '                   ' → logprob: -8.877201080322266
    5. '               ' → logprob: -9.502201080322266
    6. '-' → logprob: -10.002201080322266
    7. ' ' → logprob: -10.877201080322266
    8. '           ' → logprob: -10.877201080322266
    9. '       ' → logprob: -12.127201080322266
    10. ' -' → logprob: -12.252201080322266

Token 3184: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.3955646753311157
    2. '#' → logprob: -1.1455646753311157
    3. 'cases' → logprob: -5.020564556121826
    4. ' les' → logprob: -7.395564556121826
    5. '   ' → logprob: -7.645564556121826
    6. '               ' → logprob: -8.270565032958984
    7. '           ' → logprob: -9.145565032958984
    8. '-' → logprob: -9.145565032958984
    9. '
' → logprob: -9.270565032958984
    10. '       ' → logprob: -9.270565032958984

Token 3185: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.2840735912322998
    2. ' cases' → logprob: -2.6590735912323
    3. 'case' → logprob: -2.7840735912323
    4. ' case' → logprob: -3.6590735912323
    5. ' arbres' → logprob: -3.6590735912323
    6. 'ar' → logprob: -4.159073829650879
    7. 'arb' → logprob: -4.659073829650879
    8. '#' → logprob: -4.659073829650879
    9. 'for' → logprob: -5.159073829650879
    10. '   ' → logprob: -5.284073829650879

Token 3186: ' avec' (ID: 3937)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.6967900991439819
    2. ' v' → logprob: -1.696790099143982
    3. 'with' → logprob: -2.5717902183532715
    4. 'v' → logprob: -2.5717902183532715
    5. ' vide' → logprob: -2.8217902183532715
    6. ' avec' → logprob: -3.4467902183532715
    7. ' with' → logprob: -3.6967902183532715
    8. 'avec' → logprob: -4.6967902183532715
    9. '_v' → logprob: -4.6967902183532715
    10. 'vid' → logprob: -4.8217902183532715

Token 3187: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.03449956700205803
    2. 'trees' → logprob: -4.284499645233154
    3. ' arbres' → logprob: -4.909499645233154
    4. 'ar' → logprob: -5.409499645233154
    5. '   ' → logprob: -5.909499645233154
    6. '0' → logprob: -6.034499645233154
    7. ' ' → logprob: -6.159499645233154
    8. '#' → logprob: -7.409499645233154
    9. '       ' → logprob: -9.784499168395996
    10. ' arbre' → logprob: -10.159499168395996

Token 3188: ' ont' (ID: 4930)
  Prédit: ' ont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ont' → logprob: -0.34936952590942383
    2. ' =' → logprob: -2.224369525909424
    3. ' ' → logprob: -2.724369525909424
    4. ' have' → logprob: -3.474369525909424
    5. '=' → logprob: -4.099369525909424
    6. 'ont' → logprob: -4.224369525909424
    7. ' avec' → logprob: -4.724369525909424
    8. 's' → logprob: -4.849369525909424
    9. ''ont' → logprob: -5.224369525909424
    10. ',' → logprob: -5.724369525909424

Token 3189: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5401360988616943
    2. ' un' → logprob: -1.1651360988616943
    3. '   ' → logprob: -3.4151360988616943
    4. '0' → logprob: -3.9151360988616943
    5. ' ' → logprob: -4.165136337280273
    6. 'co' → logprob: -4.540136337280273
    7. 'une' → logprob: -5.290136337280273
    8. 'cost' → logprob: -5.290136337280273
    9. 'inf' → logprob: -5.915136337280273
    10. '1' → logprob: -6.415136337280273

Token 3190: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.03538285195827484
    2. 'c' → logprob: -3.6603827476501465
    3. 'es' → logprob: -5.6603827476501465
    4. 'cout' → logprob: -6.2853827476501465
    5. ' coût' → logprob: -6.4103827476501465
    6. 'cost' → logprob: -7.9103827476501465
    7. '   ' → logprob: -8.035383224487305
    8. ' ' → logprob: -8.285383224487305
    9. '
' → logprob: -8.785383224487305
    10. '     ' → logprob: -9.285383224487305

Token 3191: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17646446824073792
    2. '=' → logprob: -2.926464557647705
    3. 'de' → logprob: -3.051464557647705
    4. ' =' → logprob: -3.051464557647705
    5. ' ' → logprob: -5.051464557647705
    6. '1' → logprob: -6.051464557647705
    7. '   ' → logprob: -6.426464557647705
    8. '0' → logprob: -6.801464557647705
    9. ' d' → logprob: -7.551464557647705
    10. ' of' → logprob: -8.176464080810547

Token 3192: ' déplacement' (ID: 138449)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.9803158044815063
    2. 'cou' → logprob: -1.1053158044815063
    3. '0' → logprob: -1.8553158044815063
    4. '1' → logprob: -2.480315685272217
    5. 'c' → logprob: -4.105315685272217
    6. 'cut' → logprob: -4.980315685272217
    7. 'pass' → logprob: -5.230315685272217
    8. ' déplacement' → logprob: -5.480315685272217
    9. 'de' → logprob: -5.730315685272217
    10. '```' → logprob: -5.730315685272217

Token 3193: ' infin' (ID: 93237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5605062246322632
    2. '1' → logprob: -1.3105062246322632
    3. ' =' → logprob: -2.6855063438415527
    4. '=' → logprob: -3.5605063438415527
    5. ' de' → logprob: -3.5605063438415527
    6. '0' → logprob: -3.5605063438415527
    7. ' +' → logprob: -6.185506343841553
    8. '+' → logprob: -7.310506343841553
    9. 'de' → logprob: -7.310506343841553
    10. ' of' → logprob: -7.435506343841553

Token 3194: 'ie' (ID: 396)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.9576921463012695
    2. 'ity' → logprob: -1.0826921463012695
    3. 't' → logprob: -2.2076921463012695
    4. '
' → logprob: -2.9576921463012695
    5. 'te' → logprob: -3.4576921463012695
    6. 'n' → logprob: -3.4576921463012695
    7. 'ité' → logprob: -4.0826921463012695
    8. 'it' → logprob: -5.0826921463012695
    9. 'nite' → logprob: -5.2076921463012695
    10. 'inity' → logprob: -5.5826921463012695

Token 3195: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4201432168483734
    2. '_' → logprob: -1.2951432466506958
    3. '
' → logprob: -4.045143127441406
    4. '```' → logprob: -4.670143127441406
    5. ',' → logprob: -5.295143127441406
    6. '_)' → logprob: -5.420143127441406
    7. ']' → logprob: -5.545143127441406
    8. '_
' → logprob: -5.670143127441406
    9. '   ' → logprob: -6.045143127441406
    10. 'import' → logprob: -6.045143127441406

Token 3196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5590702891349792
    2. '#' → logprob: -0.9340702891349792
    3. '                   ' → logprob: -4.684070110321045
    4. '               ' → logprob: -5.059070110321045
    5. ' but' → logprob: -5.309070110321045
    6. '           ' → logprob: -5.559070110321045
    7. 'but' → logprob: -5.684070110321045
    8. '       ' → logprob: -6.559070110321045
    9. '```' → logprob: -6.559070110321045
    10. ' #' → logprob: -7.059070110321045

Token 3197: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31901904940605164
    2. '#' (adapté à ' #') → logprob: -1.319019079208374
    3. '                   ' → logprob: -6.444018840789795
    4. '       ' → logprob: -7.319018840789795
    5. '           ' → logprob: -7.694018840789795
    6. '               ' → logprob: -7.694018840789795
    7. '```' → logprob: -8.069019317626953
    8. '
' → logprob: -8.194019317626953
    9. ' #' → logprob: -8.444019317626953
    10. 'but' → logprob: -8.694019317626953

Token 3198: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0123099684715271
    2. ' #' → logprob: -5.262310028076172
    3. '   ' → logprob: -5.637310028076172
    4. '                   ' → logprob: -6.262310028076172
    5. 'except' → logprob: -8.012310028076172
    6. '```' → logprob: -9.012310028076172
    7. '               ' → logprob: -9.262310028076172
    8. '                           ' → logprob: -9.387310028076172
    9. ' but' → logprob: -9.512310028076172
    10. '#
' → logprob: -9.762310028076172

Token 3199: ' mais' (ID: 2899)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9912968873977661
    2. 'import' → logprob: -1.6162968873977661
    3. '   ' → logprob: -1.7412968873977661
    4. ' puis' → logprob: -3.4912967681884766
    5. ' mais' → logprob: -3.6162967681884766
    6. '       ' → logprob: -3.7412967681884766
    7. 'et' → logprob: -4.116296768188477
    8. 'mais' → logprob: -4.366296768188477
    9. ' on' → logprob: -4.491296768188477
    10. 'from' → logprob: -4.491296768188477

Token 3200: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49477049708366394
    2. ' on' → logprob: -1.3697705268859863
    3. 'on' → logprob: -2.7447705268859863
    4. ' les' → logprob: -4.119770526885986
    5. ' #' → logprob: -4.119770526885986
    6. '   ' → logprob: -4.244770526885986
    7. '       ' → logprob: -5.994770526885986
    8. '           ' → logprob: -6.244770526885986
    9. '               ' → logprob: -6.494770526885986
    10. 'for' → logprob: -6.619770526885986

Token 3201: ' peut' (ID: 9216)
  Prédit: ' peux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peux' → logprob: -1.1422423124313354
    2. 'pe' → logprob: -1.2672423124313354
    3. ' peut' → logprob: -2.517242431640625
    4. 'continue' → logprob: -2.892242431640625
    5. 'do' → logprob: -3.017242431640625
    6. ' continue' → logprob: -3.142242431640625
    7. 'pour' → logprob: -3.892242431640625
    8. '#' → logprob: -4.142242431640625
    9. ' pouvons' → logprob: -4.142242431640625
    10. ' pe' → logprob: -4.267242431640625

Token 3202: ' "' (ID: 392)
  Prédit: ' couper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couper' → logprob: -0.8329887986183167
    2. ' continuer' → logprob: -1.7079887390136719
    3. 'cou' → logprob: -1.7079887390136719
    4. 'contin' → logprob: -2.082988739013672
    5. 'faire' → logprob: -4.832988739013672
    6. '"' → logprob: -5.457988739013672
    7. '       ' → logprob: -5.457988739013672
    8. 'cut' → logprob: -5.582988739013672
    9. ' utiliser' → logprob: -5.707988739013672
    10. ' cou' → logprob: -5.707988739013672

Token 3203: 'dé' (ID: 98340)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.2757134437561035
    2. 'contin' → logprob: -1.9007134437561035
    3. '"' → logprob: -4.0257134437561035
    4. ' couper' → logprob: -4.1507134437561035
    5. 'pass' → logprob: -4.9007134437561035
    6. 'cut' → logprob: -5.0257134437561035
    7. 'prendre' → logprob: -5.6507134437561035
    8. 'faire' → logprob: -5.7757134437561035
    9. ' continuer' → logprob: -6.0257134437561035
    10. 'se' → logprob: -6.1507134437561035

Token 3204: 'blo' (ID: 82456)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.001621622359380126
    2. 'f' → logprob: -7.751621723175049
    3. 'pl' → logprob: -7.751621723175049
    4. 'place' → logprob: -8.37662124633789
    5. 'placement' → logprob: -8.75162124633789
    6. 'fin' → logprob: -9.37662124633789
    7. 'pass' → logprob: -9.62662124633789
    8. 'plac' → logprob: -10.00162124633789
    9. 'pla' → logprob: -10.50162124633789
    10. 'caler' → logprob: -10.75162124633789

Token 3205: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.8886681795120239
    2. 'c' → logprob: -1.013668179512024
    3. '   ' → logprob: -3.0136680603027344
    4. '```' → logprob: -3.3886680603027344
    5. '       ' → logprob: -3.5136680603027344
    6. '
' → logprob: -4.138668060302734
    7. '#' → logprob: -4.263668060302734
    8. '``' → logprob: -4.263668060302734
    9. 'q' → logprob: -4.513668060302734
    10. '	' → logprob: -4.763668060302734

Token 3206: '"' (ID: 1)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37876972556114197
    2. '_' → logprob: -2.128769636154175
    3. ' les' → logprob: -2.128769636154175
    4. '"' → logprob: -4.628769874572754
    5. ' la' → logprob: -4.628769874572754
    6. ' le' → logprob: -4.753769874572754
    7. ' l' → logprob: -5.378769874572754
    8. ' (' → logprob: -5.628769874572754
    9. 'r' → logprob: -5.628769874572754
    10. ' _' → logprob: -5.753769874572754

Token 3207: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0341341495513916
    2. ' les' → logprob: -1.0341341495513916
    3. ' la' → logprob: -2.4091341495513916
    4. ' (' → logprob: -2.7841341495513916
    5. '_' → logprob: -3.5341341495513916
    6. 'les' → logprob: -3.7841341495513916
    7. ' l' → logprob: -4.1591339111328125
    8. ' une' → logprob: -4.9091339111328125
    9. ' le' → logprob: -5.0341339111328125
    10. ' leur' → logprob: -5.1591339111328125

Token 3208: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.6502916216850281
    2. ' case' → logprob: -0.7752916216850281
    3. 'ar' → logprob: -5.525291442871094
    4. ' ' → logprob: -6.275291442871094
    5. 'vo' → logprob: -6.400291442871094
    6. 'voie' → logprob: -6.525291442871094
    7. 'che' → logprob: -6.650291442871094
    8. ' arbre' → logprob: -7.150291442871094
    9. ' ' → logprob: -7.775291442871094
    10. '_' → logprob: -7.775291442871094

Token 3209: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.732284426689148
    2. ' avec' → logprob: -1.732284426689148
    3. '```' → logprob: -2.3572845458984375
    4. ' vide' → logprob: -2.9822845458984375
    5. ' _' → logprob: -3.1072845458984375
    6. 'avec' → logprob: -3.8572845458984375
    7. ' ' → logprob: -3.9822845458984375
    8. ' en' → logprob: -4.2322845458984375
    9. 'vide' → logprob: -4.3572845458984375
    10. '
' → logprob: -4.7322845458984375

Token 3210: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.03891821578145027
    2. '   ' → logprob: -4.2889180183410645
    3. 'ar' → logprob: -4.2889180183410645
    4. 'des' → logprob: -5.6639180183410645
    5. ' arbres' → logprob: -5.7889180183410645
    6. '#' → logprob: -6.0389180183410645
    7. '```' → logprob: -7.5389180183410645
    8. '       ' → logprob: -7.9139180183410645
    9. ' ' → logprob: -8.413918495178223
    10. ' des' → logprob: -9.038918495178223

Token 3211: ' en' (ID: 469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5979455709457397
    2. ' en' → logprob: -2.0979456901550293
    3. ' ' → logprob: -2.8479456901550293
    4. ',' → logprob: -2.8479456901550293
    5. '```' → logprob: -3.0979456901550293
    6. ')' → logprob: -3.9729456901550293
    7. '   ' → logprob: -4.347945690155029
    8. 's' → logprob: -4.472945690155029
    9. ']' → logprob: -4.722945690155029
    10. '.' → logprob: -4.722945690155029

Token 3212: ' "' (ID: 392)
  Prédit: ' coup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coup' → logprob: -1.019422173500061
    2. ' couper' → logprob: -1.019422173500061
    3. 'cou' → logprob: -3.0194220542907715
    4. 'pay' → logprob: -3.0194220542907715
    5. ' le' → logprob: -3.3944220542907715
    6. 'c' → logprob: -3.5194220542907715
    7. 'cut' → logprob: -3.7694220542907715
    8. ' paying' → logprob: -4.1444220542907715
    9. ' cou' → logprob: -4.6444220542907715
    10. ' les' → logprob: -4.8944220542907715

Token 3213: 'pay' (ID: 20615)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.4615743160247803
    2. 'c' → logprob: -2.3365743160247803
    3. 'pay' → logprob: -2.5865743160247803
    4. 'cons' → logprob: -2.9615743160247803
    5. 'cut' → logprob: -3.8365743160247803
    6. ' coup' → logprob: -4.336574554443359
    7. 'aj' → logprob: -4.586574554443359
    8. 'continu' → logprob: -4.711574554443359
    9. 'co' → logprob: -4.961574554443359
    10. 'd' → logprob: -4.961574554443359

Token 3214: 'ant' (ID: 493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1785938739776611
    2. 'ing' → logprob: -1.4285938739776611
    3. ']' → logprob: -1.6785938739776611
    4. 'load' → logprob: -2.303593873977661
    5. 'er' → logprob: -2.678593873977661
    6. '}' → logprob: -4.053593635559082
    7. 'ement' → logprob: -4.553593635559082
    8. 'a' → logprob: -4.803593635559082
    9. 'own' → logprob: -5.053593635559082
    10. '   ' → logprob: -5.553593635559082

Token 3215: '"' (ID: 1)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4319304823875427
    2. 'le' → logprob: -1.6819305419921875
    3. ' (' → logprob: -2.9319305419921875
    4. ' un' → logprob: -3.5569305419921875
    5. '
' → logprob: -4.3069305419921875
    6. ' ' → logprob: -4.8069305419921875
    7. '```' → logprob: -4.9319305419921875
    8. ' la' → logprob: -5.0569305419921875
    9. ' son' → logprob: -5.0569305419921875
    10. ' pour' → logprob: -5.0569305419921875

Token 3216: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24576814472675323
    2. '
' → logprob: -2.7457680702209473
    3. ' ' → logprob: -2.9957680702209473
    4. ')' → logprob: -3.6207680702209473
    5. ' _' → logprob: -4.245768070220947
    6. ' (' → logprob: -4.370768070220947
    7. '(' → logprob: -5.370768070220947
    8. ' )' → logprob: -5.495768070220947
    9. 'for' → logprob: -5.495768070220947
    10. '<|end|>' → logprob: -5.870768070220947

Token 3217: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.07556864619255066
    2. 'cost' → logprob: -3.950568675994873
    3. ' coût' → logprob: -4.200568675994873
    4. 'c' → logprob: -4.325568675994873
    5. 'temps' → logprob: -5.450568675994873
    6. ' coup' → logprob: -5.575568675994873
    7. 'cou' → logprob: -5.700568675994873
    8. 'cout' → logprob: -5.700568675994873
    9. '```' → logprob: -5.700568675994873
    10. '   ' → logprob: -6.950568675994873

Token 3218: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29498526453971863
    2. ' de' → logprob: -2.169985294342041
    3. ')' → logprob: -3.419985294342041
    4. '=' → logprob: -3.669985294342041
    5. ' _' → logprob: -3.919985294342041
    6. '   ' → logprob: -4.169985294342041
    7. ' =' → logprob: -4.544985294342041
    8. '_to' → logprob: -5.419985294342041
    9. '_de' → logprob: -5.794985294342041
    10. ' ' → logprob: -5.919985294342041

Token 3219: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.0370231568813324
    2. 'cut' → logprob: -4.287023067474365
    3. 'la' → logprob: -4.662023067474365
    4. 'c' → logprob: -5.912023067474365
    5. 'A' → logprob: -6.037023067474365
    6. 'l' → logprob: -6.287023067474365
    7. 'dé' → logprob: -6.537023067474365
    8. 'd' → logprob: -6.912023067474365
    9. 'le' → logprob: -7.037023067474365
    10. '   ' → logprob: -7.912023067474365

Token 3220: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018555959686636925
    2. ' _' → logprob: -4.643556118011475
    3. ')' → logprob: -5.768556118011475
    4. '```' → logprob: -6.393556118011475
    5. '   ' → logprob: -6.643556118011475
    6. ' ' → logprob: -7.893556118011475
    7. ')_' → logprob: -8.018555641174316
    8. '_
' → logprob: -8.643555641174316
    9. '+' → logprob: -8.768555641174316
    10. ']' → logprob: -8.893555641174316

Token 3221: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0008326167589984834
    2. ' arbres' → logprob: -7.250832557678223
    3. 'ar' → logprob: -10.000832557678223
    4. '   ' → logprob: -10.500832557678223
    5. 'trees' → logprob: -10.625832557678223
    6. '
' → logprob: -12.125832557678223
    7. '       ' → logprob: -12.375832557678223
    8. '```' → logprob: -12.875832557678223
    9. 'adj' → logprob: -13.000832557678223
    10. ' ' → logprob: -13.000832557678223

Token 3222: ',
' (ID: 412)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9406991600990295
    2. '   ' → logprob: -1.5656991004943848
    3. ':' → logprob: -1.6906991004943848
    4. ',' → logprob: -2.5656991004943848
    5. ')' → logprob: -3.8156991004943848
    6. '```' → logprob: -4.065699100494385
    7. 'from' → logprob: -4.440699100494385
    8. '       ' → logprob: -4.815699100494385
    9. '[' → logprob: -4.940699100494385
    10. ':
' → logprob: -5.065699100494385

Token 3223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6515370011329651
    2. ' et' → logprob: -1.9015369415283203
    3. ')' → logprob: -2.9015369415283203
    4. ' puis' → logprob: -3.7765369415283203
    5. ' en' → logprob: -4.02653694152832
    6. '"' → logprob: -4.02653694152832
    7. '#' → logprob: -4.15153694152832
    8. '                   ' → logprob: -4.15153694152832
    9. ' #' → logprob: -4.27653694152832
    10. '               ' → logprob: -4.27653694152832

Token 3224: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48166540265083313
    2. ')' → logprob: -2.9816653728485107
    3. '                   ' → logprob: -2.9816653728485107
    4. '#' (adapté à ' #') → logprob: -3.4816653728485107
    5. '               ' → logprob: -3.6066653728485107
    6. '
' → logprob: -4.23166561126709
    7. ' ' → logprob: -4.23166561126709
    8. ' #' → logprob: -4.23166561126709
    9. '.' → logprob: -4.35666561126709
    10. '                           ' → logprob: -4.48166561126709

Token 3225: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1657932996749878
    2. ')' → logprob: -1.9157932996749878
    3. ' et' → logprob: -2.6657934188842773
    4. '#' → logprob: -3.0407934188842773
    5. '"' → logprob: -3.2907934188842773
    6. ' +' → logprob: -3.2907934188842773
    7. '                   ' → logprob: -3.4157934188842773
    8. ' #' → logprob: -3.4157934188842773
    9. '               ' → logprob: -3.6657934188842773
    10. '+' → logprob: -3.6657934188842773

Token 3226: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3495794534683228
    2. '_' → logprob: -1.4745794534683228
    3. '#' → logprob: -1.7245794534683228
    4. '
' → logprob: -2.099579334259033
    5. '=' → logprob: -2.974579334259033
    6. ')' → logprob: -3.474579334259033
    7. ' #' → logprob: -3.474579334259033
    8. '```' → logprob: -3.599579334259033
    9. ' ' → logprob: -4.849579334259033
    10. ' _' → logprob: -4.974579334259033

Token 3227: ' revient' (ID: 95900)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.6618633270263672
    2. ' signifie' → logprob: -2.786863327026367
    3. 'pe' → logprob: -2.911863327026367
    4. ' =' → logprob: -3.161863327026367
    5. '#' → logprob: -3.161863327026367
    6. ' peut' → logprob: -3.536863327026367
    7. 'per' → logprob: -3.786863327026367
    8. '```' → logprob: -3.911863327026367
    9. ' revient' → logprob: -4.161863327026367
    10. 'pour' → logprob: -4.411863327026367

Token 3228: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.697186291217804
    2. ' à' → logprob: -0.697186291217804
    3. '   ' → logprob: -6.072186470031738
    4. '```' → logprob: -7.322186470031738
    5. ''à' → logprob: -7.947186470031738
    6. '       ' → logprob: -8.697186470031738
    7. '           ' → logprob: -9.197186470031738
    8. 'au' → logprob: -9.572186470031738
    9. '    ' → logprob: -9.822186470031738
    10. '               ' → logprob: -10.322186470031738

Token 3229: ' considérer' (ID: 172894)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -1.1530938148498535
    2. 'aj' → logprob: -1.7780938148498535
    3. 'faire' → logprob: -1.9030938148498535
    4. 'cons' → logprob: -1.9030938148498535
    5. 'transform' → logprob: -2.6530938148498535
    6. 'augment' → logprob: -3.7780938148498535
    7. 'mettre' → logprob: -4.4030938148498535
    8. 'consider' → logprob: -4.6530938148498535
    9. 'co' → logprob: -4.7780938148498535
    10. 'import' → logprob: -4.9030938148498535

Token 3230: ' ces' (ID: 10532)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.36032769083976746
    2. ' que' → logprob: -2.61032772064209
    3. ' le' → logprob: -2.98532772064209
    4. 'un' → logprob: -3.48532772064209
    5. ' une' → logprob: -3.73532772064209
    6. ' ' → logprob: -3.98532772064209
    7. ' la' → logprob: -4.23532772064209
    8. '```' → logprob: -4.36032772064209
    9. 'le' → logprob: -4.48532772064209
    10. 'une' → logprob: -4.73532772064209

Token 3231: ' cases' (ID: 7911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5612608194351196
    2. ' arbres' → logprob: -2.56126070022583
    3. ' _' → logprob: -2.68626070022583
    4. ' cases' → logprob: -2.81126070022583
    5. 'cases' → logprob: -2.81126070022583
    6. '_cases' → logprob: -3.56126070022583
    7. '[i' → logprob: -3.68626070022583
    8. ')' → logprob: -4.06126070022583
    9. ' case' → logprob: -4.31126070022583
    10. '_case' → logprob: -5.06126070022583

Token 3232: ' comme' (ID: 7971)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7342604398727417
    2. '```' → logprob: -2.1092605590820312
    3. ' _' → logprob: -2.7342605590820312
    4. '_with' → logprob: -3.1092605590820312
    5. ' avec' → logprob: -3.1092605590820312
    6. 'with' → logprob: -3.2342605590820312
    7. '<|end|>' → logprob: -3.2342605590820312
    8. ')' → logprob: -3.2342605590820312
    9. ' with' → logprob: -4.109260559082031
    10. '[' → logprob: -4.234260559082031

Token 3233: ' une' (ID: 2463)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.629463791847229
    2. 'un' → logprob: -1.879463791847229
    3. 'des' → logprob: -2.0044636726379395
    4. 'dé' → logprob: -2.0044636726379395
    5. 'une' → logprob: -2.7544636726379395
    6. 'accessible' → logprob: -2.8794636726379395
    7. '0' → logprob: -3.1294636726379395
    8. 'access' → logprob: -3.5044636726379395
    9. 'adj' → logprob: -3.8794636726379395
    10. 'pass' → logprob: -4.1294636726379395

Token 3234: ' étape' (ID: 83661)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.23363347351551056
    2. ' case' → logprob: -1.8586335182189941
    3. 'pass' → logprob: -5.108633518218994
    4. 'node' → logprob: -5.233633518218994
    5. '#' → logprob: -5.358633518218994
    6. '
' → logprob: -5.483633518218994
    7. 'part' → logprob: -5.733633518218994
    8. 'po' → logprob: -5.733633518218994
    9. 'vo' → logprob: -6.108633518218994
    10. '   ' → logprob: -6.358633518218994

Token 3235: ' spéciale' (ID: 142408)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.6337751150131226
    2. '```' → logprob: -2.008775234222412
    3. ')' → logprob: -2.758775234222412
    4. '_' → logprob: -2.883775234222412
    5. '=' → logprob: -3.008775234222412
    6. ',' → logprob: -3.008775234222412
    7. ' suivante' → logprob: -3.258775234222412
    8. '   ' → logprob: -3.383775234222412
    9. '[' → logprob: -3.633775234222412
    10. ' =' → logprob: -3.758775234222412

Token 3236: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7616824507713318
    2. ':' → logprob: -1.3866825103759766
    3. '```' → logprob: -2.7616825103759766
    4. ')' → logprob: -3.2616825103759766
    5. ',' → logprob: -3.5116825103759766
    6. 'def' → logprob: -3.7616825103759766
    7. '[' → logprob: -4.011682510375977
    8. ' =' → logprob: -4.136682510375977
    9. 'import' → logprob: -4.261682510375977
    10. '       ' → logprob: -4.636682510375977

Token 3237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08748286962509155
    2. ':' → logprob: -3.4624829292297363
    3. 'import' → logprob: -3.8374829292297363
    4. ')' → logprob: -5.087482929229736
    5. '```' → logprob: -5.587482929229736
    6. '       ' → logprob: -5.837482929229736
    7. 'from' → logprob: -6.087482929229736
    8. ':
' → logprob: -6.462482929229736
    9. ',' → logprob: -6.462482929229736
    10. '
' → logprob: -6.587482929229736

Token 3238: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1116737648844719
    2. '
' → logprob: -3.1116738319396973
    3. 'import' → logprob: -3.2366738319396973
    4. '       ' → logprob: -5.361673831939697
    5. '    
' → logprob: -5.861673831939697
    6. '```' → logprob: -5.861673831939697
    7. 'from' → logprob: -5.986673831939697
    8. ')' → logprob: -6.361673831939697
    9. 'def' → logprob: -6.861673831939697
    10. ':' → logprob: -6.986673831939697

Token 3239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06084616854786873
    2. '
' → logprob: -3.6858460903167725
    3. 'import' → logprob: -4.685846328735352
    4. ':' → logprob: -4.810846328735352
    5. ')' → logprob: -5.560846328735352
    6. 'from' → logprob: -5.810846328735352
    7. '```' → logprob: -5.935846328735352
    8. '       ' → logprob: -6.560846328735352
    9. 'def' → logprob: -7.060846328735352
    10. ',' → logprob: -7.060846328735352

Token 3240: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6378889083862305
    2. '   ' → logprob: -0.7628889083862305
    3. 'from' → logprob: -5.5128889083862305
    4. ' import' → logprob: -7.2628889083862305
    5. '
' → logprob: -8.88788890838623
    6. '```' → logprob: -9.01288890838623
    7. ' from' → logprob: -9.88788890838623
    8. '#' (adapté à ' #') → logprob: -10.01288890838623
    9. '    
' → logprob: -10.01288890838623
    10. '       ' → logprob: -10.13788890838623

Token 3241: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3245702385902405
    2. 'import' → logprob: -1.3245701789855957
    3. 'from' → logprob: -4.699570178985596
    4. '
' → logprob: -6.699570178985596
    5. '```' → logprob: -8.449570655822754
    6. ' import' → logprob: -8.699570655822754
    7. '    
' → logprob: -8.949570655822754
    8. ' from' → logprob: -9.074570655822754
    9. '#' → logprob: -9.324570655822754
    10. '       ' → logprob: -9.699570655822754

Token 3242: ' résoudre' (ID: 134006)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17459701001644135
    2. 'd' → logprob: -3.1745970249176025
    3. ' line' → logprob: -3.9245970249176025
    4. ' i' → logprob: -4.549596786499023
    5. 'j' → logprob: -4.799596786499023
    6. 'ch' → logprob: -4.924596786499023
    7. 'dj' → logprob: -4.924596786499023
    8. ' continuer' → logprob: -5.174596786499023
    9. 'cell' → logprob: -5.299596786499023
    10. 'row' → logprob: -5.299596786499023

Token 3243: ' ce' (ID: 2357)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.2251099348068237
    2. 'i' → logprob: -1.4751099348068237
    3. 'd' → logprob: -2.1001100540161133
    4. '   ' → logprob: -2.6001100540161133
    5. ' la' → logprob: -2.6001100540161133
    6. 'l' → logprob: -2.8501100540161133
    7. ' i' → logprob: -3.4751100540161133
    8. 'le' → logprob: -4.225110054016113
    9. '_,' → logprob: -4.225110054016113
    10. '```' → logprob: -4.225110054016113

Token 3244: ' problème' (ID: 35630)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.4600844383239746
    2. ':' → logprob: -1.8350844383239746
    3. '_' → logprob: -1.9600844383239746
    4. '
' → logprob: -2.2100844383239746
    5. ' line' → logprob: -3.0850844383239746
    6. ')' → logprob: -3.4600844383239746
    7. 'd' → logprob: -3.5850844383239746
    8. ' code' → logprob: -3.5850844383239746
    9. 'n' → logprob: -3.7100844383239746
    10. ':
' → logprob: -3.9600844383239746

Token 3245: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9578191637992859
    2. 'import' → logprob: -1.3328192234039307
    3. ':' → logprob: -1.5828192234039307
    4. ',' → logprob: -2.2078192234039307
    5. ':
' → logprob: -3.9578192234039307
    6. ',
' → logprob: -5.457818984985352
    7. 'from' → logprob: -5.582818984985352
    8. '):' → logprob: -5.957818984985352
    9. '
' → logprob: -6.707818984985352
    10. '#' → logprob: -7.082818984985352

Token 3246: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6502310037612915
    2. '   ' → logprob: -0.7752310037612915
    3. ' import' → logprob: -4.775230884552002
    4. '       ' → logprob: -6.025230884552002
    5. ' on' → logprob: -6.400230884552002
    6. '```' → logprob: -6.400230884552002
    7. 'from' → logprob: -7.025230884552002
    8. '
' → logprob: -7.650230884552002
    9. '#' → logprob: -7.775230884552002
    10. ' #' → logprob: -8.65023136138916

Token 3247: ' peut' (ID: 9216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02992219664156437
    2. '   ' → logprob: -4.904922008514404
    3. ' import' → logprob: -5.154922008514404
    4. 'from' → logprob: -5.904922008514404
    5. 'def' → logprob: -6.279922008514404
    6. ' can' → logprob: -6.529922008514404
    7. ' peux' → logprob: -7.029922008514404
    8. ' devra' → logprob: -7.029922008514404
    9. ' peut' → logprob: -7.154922008514404
    10. '#' → logprob: -7.154922008514404

Token 3248: ' mod' (ID: 1812)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.023650135844945908
    2. 'util' → logprob: -3.8986501693725586
    3. 'contin' → logprob: -6.398650169372559
    4. '   ' → logprob: -7.898650169372559
    5. 'from' → logprob: -8.148650169372559
    6. 'faire' → logprob: -8.398650169372559
    7. '```' → logprob: -8.398650169372559
    8. ' utiliser' → logprob: -9.273650169372559
    9. 'impl' → logprob: -9.398650169372559
    10. 'use' → logprob: -10.023650169372559

Token 3249: 'él' (ID: 6778)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ify' → logprob: -1.1587457656860352
    2. 'def' → logprob: -1.7837457656860352
    3. 'import' → logprob: -2.158745765686035
    4. 'if' → logprob: -2.408745765686035
    5. 'ifier' → logprob: -2.408745765686035
    6. '```' → logprob: -2.408745765686035
    7. 'od' → logprob: -3.158745765686035
    8. 'ifie' → logprob: -3.908745765686035
    9. 'er' → logprob: -4.658745765686035
    10. 'ified' → logprob: -4.783745765686035

Token 3250: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.01135666761547327
    2. 'é' → logprob: -5.636356830596924
    3. 'él' → logprob: -6.261356830596924
    4. 'ifier' → logprob: -6.511356830596924
    5. '   ' → logprob: -6.761356830596924
    6. 'e' → logprob: -6.761356830596924
    7. 'ér' → logprob: -7.636356830596924
    8. 'érer' → logprob: -7.636356830596924
    9. 'izer' → logprob: -8.511356353759766
    10. '```' → logprob: -8.636356353759766

Token 3251: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0973470211029053
    2. ' le' → logprob: -1.4723470211029053
    3. 'un' → logprob: -2.3473470211029053
    4. '```' → logprob: -2.5973470211029053
    5. ' la' → logprob: -2.8473470211029053
    6. 'le' → logprob: -2.9723470211029053
    7. 'd' → logprob: -3.5973470211029053
    8. ' une' → logprob: -3.9723470211029053
    9. 'une' → logprob: -3.9723470211029053
    10. '   ' → logprob: -4.222347259521484

Token 3252: ' grille' (ID: 99153)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6061503291130066
    2. 'import' → logprob: -2.1061503887176514
    3. ' graph' → logprob: -2.1061503887176514
    4. 'gr' → logprob: -2.4811503887176514
    5. ' grid' → logprob: -3.4811503887176514
    6. 'grid' → logprob: -3.6061503887176514
    7. 'd' → logprob: -5.106150150299072
    8. ' problem' → logprob: -5.231150150299072
    9. 'from' → logprob: -5.356150150299072
    10. ' code' → logprob: -5.481150150299072

Token 3253: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.22820048034191132
    2. 'en' → logprob: -2.3532004356384277
    3. ' =' → logprob: -3.4782004356384277
    4. '```' → logprob: -3.8532004356384277
    5. ',' → logprob: -4.353200435638428
    6. ' avec' → logprob: -4.728200435638428
    7. '   ' → logprob: -5.353200435638428
    8. 'import' → logprob: -5.353200435638428
    9. ' comme' → logprob: -5.603200435638428
    10. '=' → logprob: -5.978200435638428

Token 3254: ' D' (ID: 415)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.9526098370552063
    2. 'import' → logprob: -1.5776097774505615
    3. 'une' → logprob: -1.7026097774505615
    4. 'graph' → logprob: -2.7026097774505615
    5. '```' → logprob: -3.0776097774505615
    6. ' un' → logprob: -3.7026097774505615
    7. 'util' → logprob: -3.9526097774505615
    8. 'heap' → logprob: -4.452610015869141
    9. ' utilisant' → logprob: -4.577610015869141
    10. 'aj' → logprob: -4.952610015869141

Token 3255: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0023906370624899864
    2. 'ijk' → logprob: -6.1273908615112305
    3. 'jik' → logprob: -9.37739086151123
    4. 'ij' → logprob: -9.87739086151123
    5. 'graph' → logprob: -10.62739086151123
    6. '   ' → logprob: -11.50239086151123
    7. '```' → logprob: -11.62739086151123
    8. 'i' → logprob: -11.75239086151123
    9. 'j' → logprob: -12.75239086151123
    10. 'jk' → logprob: -12.75239086151123

Token 3256: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3814181685447693
    2. '       ' → logprob: -2.006418228149414
    3. ':' → logprob: -2.756418228149414
    4. '```' → logprob: -3.381418228149414
    5. ')' → logprob: -4.256418228149414
    6. 'import' → logprob: -4.506418228149414
    7. '(' → logprob: -5.131418228149414
    8. ' (' → logprob: -5.256418228149414
    9. ' =' → logprob: -5.381418228149414
    10. ',' → logprob: -5.631418228149414

Token 3257: ' à' (ID: 1221)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7939436435699463
    2. ' chaque' → logprob: -1.2939436435699463
    3. ' on' → logprob: -2.1689436435699463
    4. 'le' → logprob: -2.9189436435699463
    5. ' les' → logprob: -3.0439436435699463
    6. 'on' → logprob: -4.543943405151367
    7. ' la' → logprob: -4.668943405151367
    8. 'cost' → logprob: -4.918943405151367
    9. 'each' → logprob: -5.668943405151367
    10. ' each' → logprob: -5.668943405151367

Token 3258: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.054839517921209335
    2. 'cha' → logprob: -3.429839611053467
    3. 'une' → logprob: -5.679839611053467
    4. 'ch' → logprob: -5.804839611053467
    5. 'part' → logprob: -6.429839611053467
    6. 'un' → logprob: -6.554839611053467
    7. '   ' → logprob: -6.554839611053467
    8. 'co' → logprob: -6.679839611053467
    9. 'import' → logprob: -6.929839611053467
    10. 'distance' → logprob: -6.929839611053467

Token 3259: ' case' (ID: 1890)
  Prédit: ' étape'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étape' → logprob: -1.3050346374511719
    2. ' pas' → logprob: -1.4300346374511719
    3. 'pas' → logprob: -2.305034637451172
    4. ' step' → logprob: -2.430034637451172
    5. ' case' → logprob: -2.555034637451172
    6. 'case' → logprob: -3.055034637451172
    7. '   ' → logprob: -3.180034637451172
    8. 'step' → logprob: -3.805034637451172
    9. ' ' → logprob: -3.805034637451172
    10. 'ét' → logprob: -4.305034637451172

Token 3260: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5133491158485413
    2. ',' → logprob: -2.0133490562438965
    3. ' vide' → logprob: -2.7633490562438965
    4. 'vide' → logprob: -3.2633490562438965
    5. 'on' → logprob: -3.5133490562438965
    6. ' ,' → logprob: -4.0133490562438965
    7. ' (' → logprob: -4.1383490562438965
    8. ' ' → logprob: -4.1383490562438965
    9. '```' → logprob: -4.1383490562438965
    10. '_' → logprob: -4.6383490562438965

Token 3261: ' a' (ID: 261)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.5770592093467712
    2. 'continue' → logprob: -2.827059268951416
    3. 'pe' → logprob: -2.952059268951416
    4. '   ' → logprob: -2.952059268951416
    5. 'aj' → logprob: -3.202059268951416
    6. '```' → logprob: -3.327059268951416
    7. '       ' → logprob: -4.077059268951416
    8. 'd' → logprob: -4.327059268951416
    9. 'contin' → logprob: -4.702059268951416
    10. '
' → logprob: -4.827059268951416

Token 3262: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.1741085648536682
    2. 'un' → logprob: -2.2991085052490234
    3. ' deux' → logprob: -4.799108505249023
    4. '```' → logprob: -4.799108505249023
    5. '   ' → logprob: -5.174108505249023
    6. ''un' → logprob: -5.299108505249023
    7. ')' → logprob: -5.424108505249023
    8. ' une' → logprob: -5.674108505249023
    9. ' (' → logprob: -5.924108505249023
    10. ' a' → logprob: -6.049108505249023

Token 3263: '
' (ID: 198)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.749932050704956
    2. 'cost' → logprob: -1.374932050704956
    3. ' coût' → logprob: -2.749932050704956
    4. 'c' → logprob: -2.874932050704956
    5. '   ' → logprob: -3.999932050704956
    6. 'distance' → logprob: -3.999932050704956
    7. '```' → logprob: -4.124932289123535
    8. ' cost' → logprob: -4.249932289123535
    9. 'dist' → logprob: -4.749932289123535
    10. '       ' → logprob: -5.249932289123535

Token 3264: '   ' (ID: 271)
  Prédit: ' space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' space' → logprob: -0.9340130686759949
    2. ' ' → logprob: -1.8090131282806396
    3. ' cost' → logprob: -2.9340131282806396
    4. 'space' → logprob: -3.3090131282806396
    5. ' espace' → logprob: -3.3090131282806396
    6. ' tuple' → logprob: -3.4340131282806396
    7. ' coût' → logprob: -3.5590131282806396
    8. ' (' → logprob: -3.8090131282806396
    9. ' state' → logprob: -4.0590128898620605
    10. 'cost' → logprob: -4.1840128898620605

Token 3265: ' #' (ID: 1069)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -1.0374853610992432
    2. ' coût' → logprob: -1.2874853610992432
    3. '   ' → logprob: -2.537485361099243
    4. ' ' → logprob: -3.037485361099243
    5. 'c' → logprob: -3.412485361099243
    6. 'cout' → logprob: -3.537485361099243
    7. 'pas' → logprob: -4.037485122680664
    8. ' pas' → logprob: -4.037485122680664
    9. 'cost' → logprob: -4.412485122680664
    10. '       ' → logprob: -4.912485122680664

Token 3266: ' état' (ID: 59181)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9612122774124146
    2. 'co' → logprob: -2.086212158203125
    3. 'dist' → logprob: -2.836212158203125
    4. 'c' → logprob: -2.836212158203125
    5. '   ' → logprob: -3.086212158203125
    6. 'distance' → logprob: -3.211212158203125
    7. '```' → logprob: -3.461212158203125
    8. '`' → logprob: -3.711212158203125
    9. '
' → logprob: -3.961212158203125
    10. ' (' → logprob: -4.211212158203125

Token 3267: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.3393429517745972
    2. ' ' → logprob: -1.8393429517745972
    3. '_' → logprob: -1.9643429517745972
    4. ':' → logprob: -2.0893430709838867
    5. ' _' → logprob: -3.2143430709838867
    6. '   ' → logprob: -3.2143430709838867
    7. '```' → logprob: -3.2143430709838867
    8. '[' → logprob: -3.5893430709838867
    9. ' =' → logprob: -4.214343070983887
    10. ' \' → logprob: -4.339343070983887

Token 3268: ' on' (ID: 402)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9042432308197021
    2. ' ' → logprob: -1.1542432308197021
    3. ' "' → logprob: -3.154243230819702
    4. ')' → logprob: -3.404243230819702
    5. '   ' → logprob: -3.529243230819702
    6. ' 
' → logprob: -3.529243230819702
    7. ' )' → logprob: -4.154243469238281
    8. '
' → logprob: -4.404243469238281
    9. '"' → logprob: -4.529243469238281
    10. ' ,' → logprob: -4.904243469238281

Token 3269: ' peut' (ID: 9216)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5659339427947998
    2. ' continue' → logprob: -1.5659339427947998
    3. '_pe' → logprob: -2.3159339427948
    4. ' peux' → logprob: -2.8159339427948
    5. ' peut' → logprob: -2.8159339427948
    6. '
' → logprob: -2.8159339427948
    7. '```' → logprob: -3.0659339427948
    8. '_continue' → logprob: -3.0659339427948
    9. ' est' → logprob: -3.9409339427948
    10. 'continue' → logprob: -3.9409339427948

Token 3270: ' soit' (ID: 17293)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.3280339241027832
    2. '   ' → logprob: -2.203033924102783
    3. 'faire' → logprob: -2.203033924102783
    4. 'contin' → logprob: -2.328033924102783
    5. 'prendre' → logprob: -2.703033924102783
    6. ' déplacer' → logprob: -3.203033924102783
    7. ' ' → logprob: -3.578033924102783
    8. '```' → logprob: -3.703033924102783
    9. 'dé' → logprob: -3.703033924102783
    10. ' considérer' → logprob: -3.953033924102783

Token 3271: ' passer' (ID: 27727)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.7815967798233032
    2. ' rester' → logprob: -1.2815967798233032
    3. 'contin' → logprob: -2.1565966606140137
    4. ' se' → logprob: -2.9065966606140137
    5. 'se' → logprob: -3.5315966606140137
    6. 'dé' → logprob: -4.656596660614014
    7. ' bou' → logprob: -5.156596660614014
    8. '```' → logprob: -5.281596660614014
    9. 'march' → logprob: -5.656596660614014
    10. 're' → logprob: -5.781596660614014

Token 3272: ' normalement' (ID: 164432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6110528707504272
    2. ' ou' → logprob: -1.8610528707504272
    3. ' sur' → logprob: -2.236052989959717
    4. '_' → logprob: -2.861052989959717
    5. ',' → logprob: -3.611052989959717
    6. ' (' → logprob: -3.736052989959717
    7. 'sur' → logprob: -3.861052989959717
    8. ' par' → logprob: -4.736052989959717
    9. ' through' → logprob: -4.986052989959717
    10. '
' → logprob: -5.111052989959717

Token 3273: ' si' (ID: 1784)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8067545890808105
    2. ' ou' → logprob: -1.5567545890808105
    3. '_' → logprob: -1.9317545890808105
    4. ' ,' → logprob: -2.1817545890808105
    5. ' ' → logprob: -3.5567545890808105
    6. ' (' → logprob: -4.1817545890808105
    7. ' or' → logprob: -4.5567545890808105
    8. ' _' → logprob: -5.1817545890808105
    9. '_sur' → logprob: -5.4317545890808105
    10. '```' → logprob: -5.4317545890808105

Token 3274: ' case' (ID: 1890)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5476045608520508
    2. ' A' → logprob: -1.6726045608520508
    3. ' on' → logprob: -2.672604560852051
    4. ' la' → logprob: -2.797604560852051
    5. 'la' → logprob: -3.672604560852051
    6. 'case' → logprob: -3.797604560852051
    7. 'on' → logprob: -3.797604560852051
    8. ' case' → logprob: -4.297604560852051
    9. ' not' → logprob: -6.047604560852051
    10. '0' → logprob: -6.172604560852051

Token 3275: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.06957455724477768
    2. ' vide' → logprob: -2.8195745944976807
    3. ' ==' → logprob: -6.319574356079102
    4. ' est' → logprob: -6.694574356079102
    5. '```' → logprob: -7.069574356079102
    6. '_v' → logprob: -7.319574356079102
    7. '_' → logprob: -7.694574356079102
    8. 'sans' → logprob: -7.819574356079102
    9. '==' → logprob: -8.319574356079102
    10. 'vid' → logprob: -8.444574356079102

Token 3276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09305150806903839
    2. '```' → logprob: -3.5930514335632324
    3. ' ,' → logprob: -3.7180514335632324
    4. ' ou' → logprob: -3.9680514335632324
    5. ' or' → logprob: -4.968051433563232
    6. '   ' → logprob: -5.343051433563232
    7. '``' → logprob: -6.593051433563232
    8. ' (' → logprob: -6.843051433563232
    9. ',
' → logprob: -6.968051433563232
    10. '
' → logprob: -7.718051433563232

Token 3277: ' soit' (ID: 17293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4382392168045044
    2. ' soit' → logprob: -2.188239097595215
    3. ' ou' → logprob: -2.688239097595215
    4. ',' → logprob: -3.063239097595215
    5. 'ou' → logprob: -3.063239097595215
    6. 'so' → logprob: -4.063239097595215
    7. 'else' → logprob: -4.313239097595215
    8. '```' → logprob: -4.438239097595215
    9. 'or' → logprob: -4.938239097595215
    10. ' #' → logprob: -5.063239097595215

Token 3278: ' si' (ID: 1784)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.036200184375047684
    2. 'co' → logprob: -4.161200046539307
    3. 'payer' → logprob: -5.286200046539307
    4. 'on' → logprob: -5.536200046539307
    5. 'contin' → logprob: -6.036200046539307
    6. 'cut' → logprob: -6.036200046539307
    7. ' couper' → logprob: -6.911200046539307
    8. '```' → logprob: -7.036200046539307
    9. 'faire' → logprob: -7.286200046539307
    10. '"' → logprob: -7.286200046539307

Token 3279: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.855035126209259
    2. 'on' → logprob: -1.7300350666046143
    3. 'A' → logprob: -1.9800350666046143
    4. ' on' → logprob: -2.2300350666046143
    5. ' case' → logprob: -3.1050350666046143
    6. 'la' → logprob: -3.4800350666046143
    7. 'ar' → logprob: -4.605035305023193
    8. 'l' → logprob: -4.855035305023193
    9. ' la' → logprob: -4.855035305023193
    10. 'il' → logprob: -4.980035305023193

Token 3280: ' avec' (ID: 3937)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.30855029821395874
    2. ' vide' → logprob: -1.8085503578186035
    3. 'avec' → logprob: -2.9335503578186035
    4. ' avec' → logprob: -3.9335503578186035
    5. 'with' → logprob: -4.8085503578186035
    6. '_' → logprob: -5.1835503578186035
    7. ' has' → logprob: -5.8085503578186035
    8. 'vid' → logprob: -6.5585503578186035
    9. 'has' → logprob: -6.9335503578186035
    10. ' with' → logprob: -6.9335503578186035

Token 3281: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.6451900601387024
    2. ' arbres' → logprob: -0.8951900601387024
    3. '_' → logprob: -2.8951900005340576
    4. ' arbre' → logprob: -5.145190238952637
    5. 'ar' → logprob: -5.645190238952637
    6. 'trees' → logprob: -7.645190238952637
    7. ' _' → logprob: -7.770190238952637
    8. '```' → logprob: -8.270190238952637
    9. ' des' → logprob: -8.520190238952637
    10. '_ar' → logprob: -8.645190238952637

Token 3282: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4742602109909058
    2. '_' → logprob: -1.5992602109909058
    3. ',' → logprob: -2.2242603302001953
    4. ')' → logprob: -2.8492603302001953
    5. ' ' → logprob: -2.9742603302001953
    6. '   ' → logprob: -3.0992603302001953
    7. '```' → logprob: -3.0992603302001953
    8. '<|end|>' → logprob: -3.0992603302001953
    9. ' ,' → logprob: -3.2242603302001953
    10. '[' → logprob: -3.4742603302001953

Token 3283: '   ' (ID: 271)
  Prédit: ' soit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.789263904094696
    2. ' on' → logprob: -1.2892639636993408
    3. '   ' → logprob: -2.789263963699341
    4. '#' → logprob: -2.914263963699341
    5. ' #' → logprob: -3.289263963699341
    6. ',' → logprob: -3.289263963699341
    7. 'so' → logprob: -4.789263725280762
    8. 'on' → logprob: -4.789263725280762
    9. ' else' → logprob: -5.039263725280762
    10. ':' → logprob: -5.039263725280762

Token 3284: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3823763430118561
    2. '   ' → logprob: -2.1323764324188232
    3. ' #' → logprob: -2.1323764324188232
    4. ' soit' → logprob: -2.8823764324188232
    5. ' on' → logprob: -5.132376194000244
    6. ':' → logprob: -6.007376194000244
    7. ')' → logprob: -6.257376194000244
    8. ' ou' → logprob: -6.757376194000244
    9. ',' → logprob: -7.132376194000244
    10. ' ' → logprob: -7.132376194000244

Token 3285: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6317503452301025
    2. ' on' → logprob: -1.3817503452301025
    3. 'on' → logprob: -2.6317503452301025
    4. ' #' → logprob: -2.8817503452301025
    5. 'so' → logprob: -3.5067503452301025
    6. '   ' → logprob: -4.131750106811523
    7. ' soit' → logprob: -4.506750106811523
    8. ' continuer' → logprob: -5.631750106811523
    9. '```' → logprob: -5.756750106811523
    10. ' so' → logprob: -6.256750106811523

Token 3286: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.34075871109962463
    2. ' peux' → logprob: -2.715758800506592
    3. 'continue' → logprob: -2.965758800506592
    4. '_continue' → logprob: -3.590758800506592
    5. ' doit' → logprob: -3.715758800506592
    6. ' peut' → logprob: -3.715758800506592
    7. '_' → logprob: -3.840758800506592
    8. '_pe' → logprob: -4.465758800506592
    9. '```' → logprob: -4.715758800506592
    10. ' ' → logprob: -5.090758800506592

Token 3287: ' payer' (ID: 63614)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.31375354528427124
    2. ' couper' → logprob: -1.563753604888916
    3. 'contin' → logprob: -3.938753604888916
    4. 'payer' → logprob: -4.313753604888916
    5. 'd' → logprob: -4.688753604888916
    6. 'cut' → logprob: -5.938753604888916
    7. ' continuer' → logprob: -6.438753604888916
    8. ' cou' → logprob: -6.438753604888916
    9. 'dé' → logprob: -6.688753604888916
    10. 'faire' → logprob: -6.813753604888916

Token 3288: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1558588147163391
    2. ' ' → logprob: -3.7808587551116943
    3. ' (' → logprob: -3.9058587551116943
    4. ' _' → logprob: -4.030858993530273
    5. '```' → logprob: -4.030858993530273
    6. ')' → logprob: -4.155858993530273
    7. '(' → logprob: -4.405858993530273
    8. '[' → logprob: -5.155858993530273
    9. '*' → logprob: -5.905858993530273
    10. '
' → logprob: -6.030858993530273

Token 3289: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.015614787116646767
    2. 'c' → logprob: -5.265614986419678
    3. 'cou' → logprob: -5.515614986419678
    4. 'cut' → logprob: -6.265614986419678
    5. 'cost' → logprob: -6.265614986419678
    6. 'cout' → logprob: -7.515614986419678
    7. 'prix' → logprob: -7.765614986419678
    8. ' coup' → logprob: -7.765614986419678
    9. '```' → logprob: -8.26561450958252
    10. ' coût' → logprob: -8.64061450958252

Token 3290: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.809309184551239
    2. ' de' → logprob: -1.4343092441558838
    3. ' =' → logprob: -1.9343092441558838
    4. ')' → logprob: -2.184309244155884
    5. '_' → logprob: -4.809309005737305
    6. ' )' → logprob: -5.434309005737305
    7. '<|end|>' → logprob: -5.434309005737305
    8. ' ' → logprob: -5.559309005737305
    9. ' d' → logprob: -5.684309005737305
    10. 'de' → logprob: -5.809309005737305

Token 3291: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.058415111154317856
    2. 'les' → logprob: -3.933415174484253
    3. 'la' → logprob: -4.183414936065674
    4. 'le' → logprob: -4.933414936065674
    5. 'cut' → logprob: -5.058414936065674
    6. 'dé' → logprob: -5.558414936065674
    7. 'd' → logprob: -6.183414936065674
    8. 'l' → logprob: -6.808414936065674
    9. 'c' → logprob: -8.308415412902832
    10. 'pass' → logprob: -8.433415412902832

Token 3292: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03121599741280079
    2. ' _' → logprob: -4.406216144561768
    3. '```' → logprob: -4.656216144561768
    4. ')' → logprob: -5.656216144561768
    5. '_for' → logprob: -7.531216144561768
    6. '_un' → logprob: -8.03121566772461
    7. '`' → logprob: -8.03121566772461
    8. '_sur' → logprob: -8.03121566772461
    9. '_le' → logprob: -8.28121566772461
    10. '   ' → logprob: -8.53121566772461

Token 3293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09066637605428696
    2. ':' → logprob: -3.8406662940979004
    3. '
' → logprob: -4.0906662940979
    4. '       ' → logprob: -4.2156662940979
    5. ')' → logprob: -4.7156662940979
    6. '```' → logprob: -5.0906662940979
    7. ',' → logprob: -5.8406662940979
    8. ':
' → logprob: -6.2156662940979
    9. '[' → logprob: -6.3406662940979
    10. '):' → logprob: -6.8406662940979

Token 3294: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07210074365139008
    2. 'import' → logprob: -3.1971006393432617
    3. ':' → logprob: -4.322100639343262
    4. '```' → logprob: -5.447100639343262
    5. '       ' → logprob: -5.697100639343262
    6. ')' → logprob: -6.822100639343262
    7. ':
' → logprob: -7.072100639343262
    8. ' import' → logprob: -7.072100639343262
    9. 'from' → logprob: -7.197100639343262
    10. '):' → logprob: -7.197100639343262

Token 3295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006350465584546328
    2. '       ' → logprob: -5.881350517272949
    3. '```' → logprob: -6.631350517272949
    4. 'import' → logprob: -7.381350517272949
    5. ':' → logprob: -7.506350517272949
    6. '    
' → logprob: -8.25635051727295
    7. '
' → logprob: -8.63135051727295
    8. '\' → logprob: -9.25635051727295
    9. ')' → logprob: -9.38135051727295
    10. ',' → logprob: -9.50635051727295

Token 3296: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06973756104707718
    2. 'import' → logprob: -2.819737672805786
    3. '
' → logprob: -6.319737434387207
    4. 'from' → logprob: -6.569737434387207
    5. '```' → logprob: -6.694737434387207
    6. '       ' → logprob: -6.819737434387207
    7. ' import' → logprob: -7.194737434387207
    8. '    
' → logprob: -7.944737434387207
    9. ' from' → logprob: -8.319737434387207
    10. 'def' → logprob: -8.819737434387207

Token 3297: ' Ainsi' (ID: 65093)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0292187612503767
    2. 'import' → logprob: -3.6542186737060547
    3. '
' → logprob: -6.654218673706055
    4. 'from' → logprob: -7.029218673706055
    5. '```' → logprob: -8.404218673706055
    6. '       ' → logprob: -8.904218673706055
    7. ' import' → logprob: -9.404218673706055
    8. ' from' → logprob: -9.404218673706055
    9. '    
' → logprob: -9.404218673706055
    10. '               ' → logprob: -10.904218673706055

Token 3298: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05314771831035614
    2. ':' → logprob: -3.803147792816162
    3. 'import' → logprob: -4.553147792816162
    4. '       ' → logprob: -5.428147792816162
    5. ' =' → logprob: -5.428147792816162
    6. ',' → logprob: -6.303147792816162
    7. '    ' → logprob: -6.428147792816162
    8. 'def' → logprob: -7.053147792816162
    9. ':
' → logprob: -7.303147792816162
    10. '=' → logprob: -7.428147792816162

Token 3299: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06503035873174667
    2. '   ' → logprob: -3.190030336380005
    3. 'dist' → logprob: -4.690030574798584
    4. ' on' → logprob: -5.315030574798584
    5. 'from' → logprob: -6.065030574798584
    6. ' import' → logprob: -6.440030574798584
    7. 'distance' → logprob: -7.315030574798584
    8. 'on' → logprob: -7.315030574798584
    9. '       ' → logprob: -7.440030574798584
    10. '
' → logprob: -7.690030574798584

Token 3300: ' définit' (ID: 89835)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7492334842681885
    2. 'import' → logprob: -1.8742334842681885
    3. 'continue' → logprob: -1.8742334842681885
    4. '   ' → logprob: -2.7492334842681885
    5. '_continue' → logprob: -2.8742334842681885
    6. '       ' → logprob: -3.4992334842681885
    7. ' peut' → logprob: -4.624233245849609
    8. ' doit' → logprob: -5.124233245849609
    9. ' continu' → logprob: -5.249233245849609
    10. ' peux' → logprob: -5.249233245849609

Token 3301: ' un' (ID: 537)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2324422597885132
    2. 'un' → logprob: -1.6074422597885132
    3. ' un' → logprob: -1.8574422597885132
    4. 'dist' → logprob: -2.1074423789978027
    5. '   ' → logprob: -2.6074423789978027
    6. 'une' → logprob: -3.1074423789978027
    7. '```' → logprob: -3.3574423789978027
    8. 'le' → logprob: -3.4824423789978027
    9. ' une' → logprob: -4.607442378997803
    10. 'distance' → logprob: -4.732442378997803

Token 3302: ' grap' (ID: 60955)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7420028448104858
    2. 'distance' → logprob: -2.2420029640197754
    3. 'heap' → logprob: -2.3670029640197754
    4. ' dist' → logprob: -2.4920029640197754
    5. 'import' → logprob: -2.9920029640197754
    6. 'cost' → logprob: -3.1170029640197754
    7. '```' → logprob: -3.4920029640197754
    8. ' heap' → logprob: -3.6170029640197754
    9. 'def' → logprob: -4.367002964019775
    10. 'd' → logprob: -4.492002964019775

Token 3303: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.001023758901283145
    2. 'he' → logprob: -7.876023769378662
    3. 'ph' → logprob: -8.001023292541504
    4. '
' → logprob: -9.501023292541504
    5. 'aph' → logprob: -10.126023292541504
    6. '   ' → logprob: -10.876023292541504
    7. '[
' → logprob: -11.001023292541504
    8. '       ' → logprob: -11.126023292541504
    9. ')' → logprob: -11.251023292541504
    10. '#' → logprob: -11.251023292541504

Token 3304: ' pond' (ID: 42367)
  Prédit: ' où'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.6257117986679077
    2. 'où' → logprob: -2.1257119178771973
    3. ' =' → logprob: -2.5007119178771973
    4. ' where' → logprob: -3.1257119178771973
    5. ' avec' → logprob: -3.2507119178771973
    6. ',' → logprob: -3.6257119178771973
    7. ' de' → logprob: -3.8757119178771973
    8. '=' → logprob: -4.000711917877197
    9. ':' → logprob: -4.125711917877197
    10. '```' → logprob: -4.375711917877197

Token 3305: 'éré' (ID: 33338)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5591772794723511
    2. 'éré' → logprob: -2.3091773986816406
    3. 'ré' → logprob: -3.1841773986816406
    4. '   ' → logprob: -3.4341773986816406
    5. 'è' → logprob: -3.4341773986816406
    6. 'u' → logprob: -3.9341773986816406
    7. 'égé' → logprob: -4.059177398681641
    8. 'édé' → logprob: -4.434177398681641
    9. 'raph' → logprob: -4.559177398681641
    10. '       ' → logprob: -4.559177398681641

Token 3306: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.5699691772460938
    2. ',' → logprob: -1.5699691772460938
    3. ' avec' → logprob: -3.0699691772460938
    4. '```' → logprob: -3.3199691772460938
    5. '   ' → logprob: -3.6949691772460938
    6. 'où' → logprob: -3.9449691772460938
    7. ' =' → logprob: -3.9449691772460938
    8. ' where' → logprob: -4.569969177246094
    9. '=' → logprob: -4.694969177246094
    10. ':' → logprob: -4.944969177246094

Token 3307: ' :
' (ID: 10039)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.27476969361305237
    2. ' le' → logprob: -2.8997697830200195
    3. ' les' → logprob: -2.8997697830200195
    4. 'le' → logprob: -3.3997697830200195
    5. 'les' → logprob: -3.5247697830200195
    6. ' on' → logprob: -3.7747697830200195
    7. '   ' → logprob: -4.0247697830200195
    8. ' (' → logprob: -5.2747697830200195
    9. 'each' → logprob: -5.6497697830200195
    10. 'on' → logprob: -5.7747697830200195

Token 3308: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4806201756000519
    2. '   ' → logprob: -1.1056201457977295
    3. ' #' → logprob: -3.7306201457977295
    4. ' chaque' → logprob: -4.855620384216309
    5. '       ' → logprob: -5.105620384216309
    6. '           ' → logprob: -5.855620384216309
    7. ' ' → logprob: -6.230620384216309
    8. ' la' → logprob: -6.730620384216309
    9. ' les' → logprob: -6.980620384216309
    10. ' (' → logprob: -7.230620384216309

Token 3309: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1759205311536789
    2. '   ' → logprob: -2.6759204864501953
    3. ' #' → logprob: -3.4259204864501953
    4. '(i' → logprob: -3.5509204864501953
    5. ' (' → logprob: -4.050920486450195
    6. '(' → logprob: -5.050920486450195
    7. '       ' → logprob: -6.550920486450195
    8. ' ' → logprob: -7.300920486450195
    9. '0' → logprob: -7.425920486450195
    10. '(n' → logprob: -7.550920486450195

Token 3310: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35585635900497437
    2. '(i' → logprob: -2.980856418609619
    3. '       ' → logprob: -3.230856418609619
    4. '#' → logprob: -3.230856418609619
    5. ' (' → logprob: -3.230856418609619
    6. 'cost' → logprob: -3.730856418609619
    7. ' ' → logprob: -3.855856418609619
    8. 'i' → logprob: -4.730856418609619
    9. ' #' → logprob: -4.855856418609619
    10. '(' → logprob: -5.105856418609619

Token 3311: ' pour' (ID: 1930)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0412288904190063
    2. ' (' → logprob: -1.9162288904190063
    3. '   ' → logprob: -2.041228771209717
    4. 'i' → logprob: -2.166228771209717
    5. '0' → logprob: -3.041228771209717
    6. 'cost' → logprob: -3.166228771209717
    7. 'dist' → logprob: -3.666228771209717
    8. ' ' → logprob: -4.041228771209717
    9. 'neighbors' → logprob: -4.166228771209717
    10. ',' → logprob: -4.416228771209717

Token 3312: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2944675087928772
    2. ' chaque' → logprob: -1.9194674491882324
    3. 'ch' → logprob: -3.4194674491882324
    4. 'case' → logprob: -3.9194674491882324
    5. ' i' → logprob: -4.044467449188232
    6. 'cha' → logprob: -4.544467449188232
    7. 'each' → logprob: -4.544467449188232
    8. '   ' → logprob: -4.544467449188232
    9. ' each' → logprob: -6.794467449188232
    10. ' case' → logprob: -7.044467449188232

Token 3313: ' cases' (ID: 7911)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9170626401901245
    2. ' voisins' → logprob: -2.417062759399414
    3. ' i' → logprob: -2.542062759399414
    4. 'neighbors' → logprob: -2.792062759399414
    5. '(i' → logprob: -3.042062759399414
    6. 'vo' → logprob: -3.167062759399414
    7. ' (' → logprob: -3.167062759399414
    8. 'neighbor' → logprob: -3.417062759399414
    9. '_' → logprob: -3.667062759399414
    10. 'case' → logprob: -3.667062759399414

Token 3314: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.1995609998703003
    2. 'vide' → logprob: -1.6995609998703003
    3. ' vide' → logprob: -2.32456111907959
    4. ' avec' → logprob: -2.57456111907959
    5. '_' → logprob: -2.57456111907959
    6. '_v' → logprob: -3.07456111907959
    7. ' with' → logprob: -3.44956111907959
    8. 'with' → logprob: -3.57456111907959
    9. ',' → logprob: -3.82456111907959
    10. 'avec' → logprob: -3.94956111907959

Token 3315: 'ides' (ID: 4105)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -1.0421868562698364
    2. '[i' → logprob: -2.417186737060547
    3. 'u' → logprob: -2.542186737060547
    4. 'ideo' → logprob: -2.667186737060547
    5. 'ides' → logprob: -3.042186737060547
    6. 'vide' → logprob: -3.292186737060547
    7. 'i' → logprob: -3.417186737060547
    8. '[
' → logprob: -3.667186737060547
    9. '   ' → logprob: -3.917186737060547
    10. '=' → logprob: -3.917186737060547

Token 3316: ' déplacement' (ID: 138449)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8805636167526245
    2. ',' → logprob: -1.8805636167526245
    3. ' =' → logprob: -2.005563735961914
    4. '   ' → logprob: -2.880563735961914
    5. ' :' → logprob: -3.005563735961914
    6. ' (' → logprob: -3.505563735961914
    7. '=' → logprob: -3.505563735961914
    8. '[' → logprob: -3.880563735961914
    9. '```' → logprob: -3.880563735961914
    10. ' ' → logprob: -4.130563735961914

Token 3317: ' coût' (ID: 73109)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09597848355770111
    2. '=' → logprob: -2.7209784984588623
    3. ' ' → logprob: -4.845978260040283
    4. '   ' → logprob: -5.220978260040283
    5. ' ,' → logprob: -6.470978260040283
    6. '_' → logprob: -6.720978260040283
    7. ',' → logprob: -6.845978260040283
    8. 'sur' → logprob: -6.970978260040283
    9. 'cost' → logprob: -7.470978260040283
    10. ' sur' → logprob: -7.470978260040283

Token 3318: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3238068222999573
    2. '=' → logprob: -1.4488067626953125
    3. ' ' → logprob: -3.5738067626953125
    4. '1' → logprob: -4.3238067626953125
    5. 's' → logprob: -9.073806762695312
    6. '```' → logprob: -9.823806762695312
    7. '_' → logprob: -9.948806762695312
    8. ':' → logprob: -10.323806762695312
    9. ' +=' → logprob: -10.448806762695312
    10. '0' → logprob: -10.573806762695312

Token 3319: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33193445205688477
    2. '1' → logprob: -1.7069344520568848
    3. ' =' → logprob: -2.5819344520568848
    4. ' ' → logprob: -3.7069344520568848
    5. '0' → logprob: -7.956934452056885
    6. '   ' → logprob: -8.956933975219727
    7. '```' → logprob: -9.331933975219727
    8. '`' → logprob: -9.956933975219727
    9. '==' → logprob: -10.331933975219727
    10. ':' → logprob: -10.331933975219727

Token 3320: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9246010184288025
    2. ')' → logprob: -1.4246010780334473
    3. '   ' → logprob: -2.2996010780334473
    4. ',
' → logprob: -2.5496010780334473
    5. '\n' → logprob: -2.6746010780334473
    6. '```' → logprob: -3.7996010780334473
    7. '
' → logprob: -4.049601078033447
    8. ':' → logprob: -4.424601078033447
    9. '+' → logprob: -4.799601078033447
    10. ' +' → logprob: -4.924601078033447

Token 3321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240939855575562
    2. '#' → logprob: -1.0240939855575562
    3. '           ' → logprob: -3.2740941047668457
    4. ' #' → logprob: -5.524094104766846
    5. '               ' → logprob: -5.899094104766846
    6. '                   ' → logprob: -6.399094104766846
    7. '       ' → logprob: -6.649094104766846
    8. ' ' → logprob: -7.774094104766846
    9. '-' → logprob: -8.399093627929688
    10. ',' → logprob: -9.524093627929688

Token 3322: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5813737511634827
    2. '   ' → logprob: -0.8313737511634827
    3. '-' → logprob: -5.706373691558838
    4. '       ' → logprob: -7.331373691558838
    5. ' #' → logprob: -7.331373691558838
    6. '           ' → logprob: -7.831373691558838
    7. '                   ' → logprob: -8.956374168395996
    8. '               ' → logprob: -9.206374168395996
    9. ' ' → logprob: -10.081374168395996
    10. '  ' → logprob: -10.581374168395996

Token 3323: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30458369851112366
    2. '-' → logprob: -1.5545836687088013
    3. ' #' → logprob: -4.054583549499512
    4. '           ' → logprob: -4.554583549499512
    5. '   ' → logprob: -4.929583549499512
    6. ' -' → logprob: -4.929583549499512
    7. '               ' → logprob: -5.429583549499512
    8. '                   ' → logprob: -6.054583549499512
    9. ' ' → logprob: -7.429583549499512
    10. '       ' → logprob: -7.554583549499512

Token 3324: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.086249589920044
    2. ' -' → logprob: -2.086249589920044
    3. ' ' → logprob: -2.336249589920044
    4. ' pour' → logprob: -2.461249589920044
    5. ' case' → logprob: -2.586249589920044
    6. '0' → logprob: -2.836249589920044
    7. ' (' → logprob: -2.836249589920044
    8. ' *' → logprob: -2.961249589920044
    9. '-' → logprob: -3.086249589920044
    10. '*' → logprob: -3.211249589920044

Token 3325: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7980383038520813
    2. ' les' → logprob: -0.9230383038520813
    3. 'i' → logprob: -2.9230382442474365
    4. ' i' → logprob: -3.5480382442474365
    5. '   ' → logprob: -4.423038482666016
    6. 'cases' → logprob: -4.548038482666016
    7. 'case' → logprob: -4.673038482666016
    8. '(i' → logprob: -4.673038482666016
    9. ' la' → logprob: -5.298038482666016
    10. ' case' → logprob: -5.423038482666016

Token 3326: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.9170219302177429
    2. ' case' → logprob: -1.2920219898223877
    3. ' ' → logprob: -2.4170219898223877
    4. '_' → logprob: -2.6670219898223877
    5. '   ' → logprob: -2.9170219898223877
    6. '(i' → logprob: -3.5420219898223877
    7. ' (' → logprob: -4.292021751403809
    8. 'cell' → logprob: -4.542021751403809
    9. ' _' → logprob: -5.042021751403809
    10. ' i' → logprob: -5.167021751403809

Token 3327: ' à' (ID: 1221)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.8439426422119141
    2. 'avec' → logprob: -0.9689426422119141
    3. 'with' → logprob: -2.843942642211914
    4. ' with' → logprob: -3.468942642211914
    5. '_with' → logprob: -3.843942642211914
    6. '```' → logprob: -4.218942642211914
    7. '_' → logprob: -4.468942642211914
    8. ' ' → logprob: -4.593942642211914
    9. 'vide' → logprob: -4.593942642211914
    10. ' vide' → logprob: -5.093942642211914

Token 3328: ' arbres' (ID: 127011)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.010550870560109615
    2. 'c' → logprob: -4.7605509757995605
    3. 'arb' → logprob: -7.2605509757995605
    4. 'co' → logprob: -7.5105509757995605
    5. 'cout' → logprob: -9.635550498962402
    6. 'for' → logprob: -9.760550498962402
    7. '   ' → logprob: -9.885550498962402
    8. '{"' → logprob: -10.135550498962402
    9. '
' → logprob: -10.385550498962402
    10. '#' → logprob: -10.385550498962402

Token 3329: ' coût' (ID: 73109)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.1678307056427002
    2. ',' → logprob: -1.6678307056427002
    3. ':' → logprob: -2.0428307056427
    4. ' =' → logprob: -2.6678307056427
    5. '_' → logprob: -2.9178307056427
    6. ' ' → logprob: -3.2928307056427
    7. ' with' → logprob: -3.7928307056427
    8. 'avec' → logprob: -3.9178307056427
    9. '[i' → logprob: -4.042830467224121
    10. 'with' → logprob: -4.167830467224121

Token 3330: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36599260568618774
    2. '1' → logprob: -1.865992546081543
    3. ' =' → logprob: -2.740992546081543
    4. '=' → logprob: -2.990992546081543
    5. ' de' → logprob: -4.115992546081543
    6. '0' → logprob: -4.240992546081543
    7. '   ' → logprob: -6.115992546081543
    8. 'de' → logprob: -6.865992546081543
    9. ' +' → logprob: -7.615992546081543
    10. '+' → logprob: -7.615992546081543

Token 3331: ' passer' (ID: 27727)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.2850944399833679
    2. 'cou' → logprob: -1.5350944995880127
    3. 'c' → logprob: -4.160094261169434
    4. '1' → logprob: -5.160094261169434
    5. 'entrée' → logprob: -5.660094261169434
    6. 'pass' → logprob: -5.785094261169434
    7. 'de' → logprob: -6.660094261169434
    8. ' déplacement' → logprob: -7.535094261169434
    9. 'cut' → logprob: -7.660094261169434
    10. 'd' → logprob: -7.785094261169434

Token 3332: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7575827836990356
    2. ' =' → logprob: -0.7575827836990356
    3. '=' → logprob: -3.132582664489746
    4. '_' → logprob: -5.132582664489746
    5. ' sur' → logprob: -5.132582664489746
    6. 'sur' → logprob: -6.382582664489746
    7. '1' → logprob: -7.132582664489746
    8. ' _' → logprob: -7.382582664489746
    9. ' (' → logprob: -7.382582664489746
    10. ')' → logprob: -7.507582664489746

Token 3333: ' couper' (ID: 135212)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.014559382572770119
    2. '(' → logprob: -4.764559268951416
    3. ' A' → logprob: -5.889559268951416
    4. '2' → logprob: -6.264559268951416
    5. 'nombre' → logprob: -7.639559268951416
    6. ' (' → logprob: -8.639559745788574
    7. '   ' → logprob: -8.639559745788574
    8. 'total' → logprob: -9.514559745788574
    9. '(A' → logprob: -9.639559745788574
    10. '1' → logprob: -10.139559745788574

Token 3334: ' tous' (ID: 10688)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8314793705940247
    2. '<|end|>' → logprob: -0.8314793705940247
    3. ')' → logprob: -3.70647931098938
    4. '<|end|>' → logprob: -4.081479549407959
    5. '+' → logprob: -4.331479549407959
    6. '_for' → logprob: -5.081479549407959
    7. '_des' → logprob: -5.206479549407959
    8. '.' → logprob: -5.206479549407959
    9. '_t' → logprob: -5.331479549407959
    10. 'trees' → logprob: -5.581479549407959

Token 3335: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49453529715538025
    2. ' les' → logprob: -1.2445353269577026
    3. 'les' → logprob: -2.369535207748413
    4. '```' → logprob: -6.244535446166992
    5. ')' → logprob: -6.869535446166992
    6. '_le' → logprob: -7.244535446166992
    7. ' _' → logprob: -7.619535446166992
    8. '_t' → logprob: -7.619535446166992
    9. ' ' → logprob: -7.619535446166992
    10. '_l' → logprob: -7.744535446166992

Token 3336: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.055691950023174286
    2. ' arbres' → logprob: -2.930691957473755
    3. 'ar' → logprob: -8.305691719055176
    4. 'trees' → logprob: -8.555691719055176
    5. ' ' → logprob: -9.055691719055176
    6. '#' → logprob: -9.430691719055176
    7. '   ' → logprob: -9.805691719055176
    8. '_' → logprob: -10.055691719055176
    9. '```' → logprob: -10.055691719055176
    10. '+' → logprob: -12.305691719055176

Token 3337: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.27580681443214417
    2. ')' → logprob: -2.6508069038391113
    3. '   ' → logprob: -3.0258069038391113
    4. '+' → logprob: -3.7758069038391113
    5. '[i' → logprob: -4.400806903839111
    6. '               ' → logprob: -4.525806903839111
    7. '           ' → logprob: -4.775806903839111
    8. ' *' → logprob: -5.025806903839111
    9. '```' → logprob: -5.025806903839111
    10. '}' → logprob: -5.150806903839111

Token 3338: ' revenir' (ID: 88322)
  Prédit: 'ram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ram' → logprob: -1.3007445335388184
    2. 'rap' → logprob: -1.5507445335388184
    3. ' rapport' → logprob: -2.0507445335388184
    4. 'les' → logprob: -2.5507445335388184
    5. ' les' → logprob: -2.6757445335388184
    6. 'contin' → logprob: -3.1757445335388184
    7. ' ram' → logprob: -3.1757445335388184
    8. 'import' → logprob: -3.4257445335388184
    9. 'rapport' → logprob: -3.4257445335388184
    10. 'porter' → logprob: -4.300744533538818

Token 3339: ' à' (ID: 1221)
  Prédit: '_sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.9566789269447327
    2. '*' → logprob: -1.831678867340088
    3. '+' → logprob: -2.081678867340088
    4. ')' → logprob: -2.706678867340088
    5. 'sur' → logprob: -3.081678867340088
    6. '_' → logprob: -3.456678867340088
    7. ' +' → logprob: -3.456678867340088
    8. ' _' → logprob: -3.956678867340088
    9. '```' → logprob: -3.956678867340088
    10. '_to' → logprob: -4.081678867340088

Token 3340: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4421004056930542
    2. 'la' → logprob: -1.4421004056930542
    3. 'une' → logprob: -2.8171005249023438
    4. 'l' → logprob: -3.9421005249023438
    5. 'celle' → logprob: -4.067100524902344
    6. 'distance' → logprob: -4.817100524902344
    7. 'dist' → logprob: -5.192100524902344
    8. 'leur' → logprob: -6.567100524902344
    9. 'adj' → logprob: -6.567100524902344
    10. '0' → logprob: -6.692100524902344

Token 3341: ''us' (ID: 143210)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.7877344489097595
    2. 'i' → logprob: -1.7877345085144043
    3. '(i' → logprob: -2.2877345085144043
    4. 'case' → logprob: -2.7877345085144043
    5. ''us' → logprob: -3.5377345085144043
    6. '(' → logprob: -3.6627345085144043
    7. ')' → logprob: -3.9127345085144043
    8. '   ' → logprob: -4.162734508514404
    9. '
' → logprob: -4.287734508514404
    10. '0' → logprob: -4.537734508514404

Token 3342: 'ine' (ID: 514)
  Prédit: 'ière'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ière' → logprob: -1.3354376554489136
    2. 'ier' → logprob: -1.9604376554489136
    3. 'r' → logprob: -2.210437774658203
    4. '   ' → logprob: -2.335437774658203
    5. 're' → logprob: -2.960437774658203
    6. 'er' → logprob: -3.335437774658203
    7. 'trees' → logprob: -3.335437774658203
    8. 'ère' → logprob: -3.710437774658203
    9. 'ar' → logprob: -3.710437774658203
    10. 'ré' → logprob: -3.960437774658203

Token 3343: ' quand' (ID: 18026)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1175845861434937
    2. '   ' → logprob: -1.4925845861434937
    3. ')
' → logprob: -2.367584705352783
    4. ' +' → logprob: -2.742584705352783
    5. '```' → logprob: -2.992584705352783
    6. '[i' → logprob: -3.117584705352783
    7. ',' → logprob: -3.492584705352783
    8. '
' → logprob: -3.867584705352783
    9. '+' → logprob: -3.867584705352783
    10. '               ' → logprob: -3.992584705352783

Token 3344: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3216584622859955
    2. '```' → logprob: -3.0716583728790283
    3. '-même' → logprob: -3.3216583728790283
    4. ' on' → logprob: -3.5716583728790283
    5. ''on' → logprob: -3.8216583728790283
    6. '   ' → logprob: -3.9466583728790283
    7. 'elle' → logprob: -4.071658611297607
    8. 'elles' → logprob: -4.071658611297607
    9. 'ce' → logprob: -4.071658611297607
    10. 'm' → logprob: -4.321658611297607

Token 3345: ' coupe' (ID: 71780)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 've' → logprob: -1.0915488004684448
    2. 'cou' → logprob: -1.5915488004684448
    3. 'do' → logprob: -2.2165489196777344
    4. 'arr' → logprob: -2.3415489196777344
    5. 'atte' → logprob: -3.4665489196777344
    6. 'p' → logprob: -3.5915489196777344
    7. 'a' → logprob: -3.8415489196777344
    8. 'pe' → logprob: -4.091548919677734
    9. 'vient' → logprob: -4.091548919677734
    10. '   ' → logprob: -4.216548919677734

Token 3346: ' cette' (ID: 7696)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6265202164649963
    2. ')
' → logprob: -1.5015201568603516
    3. ',' → logprob: -2.8765201568603516
    4. '),' → logprob: -3.5015201568603516
    5. '```' → logprob: -3.5015201568603516
    6. '[i' → logprob: -3.7515201568603516
    7. '   ' → logprob: -4.376520156860352
    8. ']' → logprob: -5.001520156860352
    9. '_' → logprob: -5.251520156860352
    10. '
' → logprob: -5.376520156860352

Token 3347: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.7154481410980225
    2. 'case' → logprob: -1.2154481410980225
    3. '_' → logprob: -2.0904481410980225
    4. '_case' → logprob: -2.9654481410980225
    5. ' ' → logprob: -4.715448379516602
    6. '   ' → logprob: -4.840448379516602
    7. ' _' → logprob: -4.840448379516602
    8. ')' → logprob: -6.840448379516602
    9. ' ' → logprob: -6.965448379516602
    10. '_c' → logprob: -6.965448379516602

Token 3348: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3016807436943054
    2. ')' → logprob: -2.42668080329895
    3. ')
' → logprob: -2.55168080329895
    4. '       ' → logprob: -3.92668080329895
    5. '
' → logprob: -4.176680564880371
    6. ',' → logprob: -4.676680564880371
    7. '[i' → logprob: -4.801680564880371
    8. '               ' → logprob: -5.051680564880371
    9. '           ' → logprob: -5.551680564880371
    10. '):
' → logprob: -5.801680564880371

Token 3349: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5737797617912292
    2. '   ' → logprob: -1.198779821395874
    3. ' #' → logprob: -2.198779821395874
    4. ' +' → logprob: -5.323779582977295
    5. ' ' → logprob: -5.823779582977295
    6. '           ' → logprob: -6.198779582977295
    7. '#
' → logprob: -6.573779582977295
    8. ',' → logprob: -6.823779582977295
    9. ''' → logprob: -6.823779582977295
    10. ')' → logprob: -7.073779582977295

Token 3350: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.42718231678009033
    2. ' #' → logprob: -1.8021823167800903
    3. '   ' → logprob: -1.9271823167800903
    4. ' ' → logprob: -4.802182197570801
    5. ' +' → logprob: -5.052182197570801
    6. '#
' → logprob: -5.177182197570801
    7. '+' → logprob: -6.052182197570801
    8. '           ' → logprob: -6.677182197570801
    9. '               ' → logprob: -6.802182197570801
    10. ' *' → logprob: -6.927182197570801

Token 3351: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17639431357383728
    2. ' #' → logprob: -2.30139422416687
    3. '   ' → logprob: -3.05139422416687
    4. '#
' → logprob: -5.301394462585449
    5. ' ' → logprob: -6.801394462585449
    6. '
' → logprob: -7.051394462585449
    7. ' +' → logprob: -7.176394462585449
    8. '*' → logprob: -7.301394462585449
    9. ' *' → logprob: -7.426394462585449
    10. ' #
' → logprob: -7.426394462585449

Token 3352: ' doit' (ID: 21822)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6511760354042053
    2. 'do' → logprob: -1.0261759757995605
    3. '#' → logprob: -3.9011759757995605
    4. 'pe' → logprob: -4.0261759757995605
    5. ' continue' → logprob: -4.1511759757995605
    6. 'contin' → logprob: -4.2761759757995605
    7. 'pour' → logprob: -4.9011759757995605
    8. 'continu' → logprob: -4.9011759757995605
    9. 'va' → logprob: -5.1511759757995605
    10. '       ' → logprob: -5.7761759757995605

Token 3353: ' rendre' (ID: 44629)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.783617377281189
    2. 'contin' → logprob: -1.783617377281189
    3. 'payer' → logprob: -2.1586174964904785
    4. 'p' → logprob: -2.7836174964904785
    5. 'faire' → logprob: -3.0336174964904785
    6. ' couper' → logprob: -3.9086174964904785
    7. 'calcul' → logprob: -3.9086174964904785
    8. 'aj' → logprob: -4.4086174964904785
    9. 'penser' → logprob: -4.5336174964904785
    10. 'cut' → logprob: -4.6586174964904785

Token 3354: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8380969762802124
    2. 'accessible' → logprob: -1.8380969762802124
    3. 'la' → logprob: -2.088097095489502
    4. ' accessible' → logprob: -2.213097095489502
    5. '-le' → logprob: -3.213097095489502
    6. ' le' → logprob: -4.338097095489502
    7. '-access' → logprob: -4.463097095489502
    8. 'access' → logprob: -4.588097095489502
    9. 'dist' → logprob: -4.588097095489502
    10. ' la' → logprob: -5.088097095489502

Token 3355: ' temps' (ID: 11160)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.735210657119751
    2. 'code' → logprob: -1.860210657119751
    3. 'pass' → logprob: -2.235210657119751
    4. 'distance' → logprob: -2.860210657119751
    5. ' code' → logprob: -3.735210657119751
    6. 'def' → logprob: -3.860210657119751
    7. 'cost' → logprob: -4.235210418701172
    8. '```' → logprob: -4.485210418701172
    9. 'import' → logprob: -4.735210418701172
    10. ' dist' → logprob: -4.985210418701172

Token 3356: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3236570358276367
    2. ' nécessaire' → logprob: -2.0736570358276367
    3. '=' → logprob: -2.3236570358276367
    4. ' ' → logprob: -2.4486570358276367
    5. '```' → logprob: -2.5736570358276367
    6. '   ' → logprob: -2.6986570358276367
    7. '_' → logprob: -3.4486570358276367
    8. ')' → logprob: -3.5736570358276367
    9. ' pour' → logprob: -3.5736570358276367
    10. 'import' → logprob: -3.9486570358276367

Token 3357: ' coupe' (ID: 71780)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.08790251612663269
    2. 'pass' → logprob: -2.712902545928955
    3. 'c' → logprob: -4.962902545928955
    4. 'par' → logprob: -5.712902545928955
    5. 'dé' → logprob: -5.962902545928955
    6. 'ret' → logprob: -6.962902545928955
    7. 'la' → logprob: -7.587902545928955
    8. 'transport' → logprob: -7.962902545928955
    9. '```' → logprob: -8.087902069091797
    10. '
' → logprob: -8.087902069091797

Token 3358: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0138074159622192
    2. ' =' → logprob: -1.6388074159622192
    3. ')' → logprob: -2.3888072967529297
    4. '=' → logprob: -3.1388072967529297
    5. '_cut' → logprob: -3.2638072967529297
    6. ']' → logprob: -3.6388072967529297
    7. '```' → logprob: -3.7638072967529297
    8. '_for' → logprob: -4.01380729675293
    9. '   ' → logprob: -4.26380729675293
    10. ',' → logprob: -4.38880729675293

Token 3359: ' transport' (ID: 7704)
  Prédit: 'transport'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transport' → logprob: -0.6289530992507935
    2. 'rapport' → logprob: -1.6289530992507935
    3. 'rap' → logprob: -2.503952980041504
    4. 'ret' → logprob: -2.503952980041504
    5. 'de' → logprob: -3.378952980041504
    6. 'port' → logprob: -3.628952980041504
    7. 'le' → logprob: -3.878952980041504
    8. 'report' → logprob: -4.753952980041504
    9. 'trans' → logprob: -5.253952980041504
    10. 'dé' → logprob: -6.003952980041504

Token 3360: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5903317928314209
    2. 'é' → logprob: -1.965331792831421
    3. 'ée' → logprob: -2.840331792831421
    4. ')
' → logprob: -3.090331792831421
    5. '_' → logprob: -3.465331792831421
    6. 'e' → logprob: -3.465331792831421
    7. '+' → logprob: -3.715331792831421
    8. 'er' → logprob: -3.840331792831421
    9. '   ' → logprob: -4.09033203125
    10. '}' → logprob: -4.46533203125

Token 3361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15490461885929108
    2. ')' → logprob: -3.40490460395813
    3. ',' → logprob: -4.154904842376709
    4. '       ' → logprob: -4.279904842376709
    5. '_' → logprob: -4.404904842376709
    6. ':' → logprob: -4.529904842376709
    7. '
' → logprob: -4.529904842376709
    8. '```' → logprob: -4.654904842376709
    9. '):' → logprob: -5.654904842376709
    10. '[' → logprob: -5.654904842376709

Token 3362: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028865009546279907
    2. 'import' → logprob: -3.653865098953247
    3. 'from' → logprob: -7.028864860534668
    4. '       ' → logprob: -7.903864860534668
    5. '
' → logprob: -8.028864860534668
    6. '               ' → logprob: -8.403864860534668
    7. ')' → logprob: -8.903864860534668
    8. '```' → logprob: -9.278864860534668
    9. ',' → logprob: -9.403864860534668
    10. '#' → logprob: -9.528864860534668

Token 3363: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033358193933963776
    2. 'import' → logprob: -3.783358097076416
    3. ':' → logprob: -6.158358097076416
    4. ')' → logprob: -6.283358097076416
    5. '       ' → logprob: -6.533358097076416
    6. '```' → logprob: -7.033358097076416
    7. ',' → logprob: -7.783358097076416
    8. '
' → logprob: -7.908358097076416
    9. 'from' → logprob: -7.908358097076416
    10. '):' → logprob: -8.033358573913574

Token 3364: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03297152370214462
    2. 'import' → logprob: -3.6579716205596924
    3. '
' → logprob: -5.782971382141113
    4. 'dist' → logprob: -6.782971382141113
    5. ')' → logprob: -7.782971382141113
    6. '       ' → logprob: -7.782971382141113
    7. 'cost' → logprob: -7.907971382141113
    8. 'from' → logprob: -8.157971382141113
    9. '    
' → logprob: -8.407971382141113
    10. '```' → logprob: -9.157971382141113

Token 3365: ' Mais' (ID: 13880)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2711603343486786
    2. '   ' → logprob: -1.646160364151001
    3. 'dist' → logprob: -3.521160364151001
    4. 'from' → logprob: -5.271160125732422
    5. '
' → logprob: -5.896160125732422
    6. ' import' → logprob: -6.021160125732422
    7. 'distance' → logprob: -6.646160125732422
    8. '#' → logprob: -7.396160125732422
    9. 'cost' → logprob: -7.646160125732422
    10. 'INF' → logprob: -7.896160125732422

Token 3366: ' cela' (ID: 17542)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.1645931005477905
    2. '   ' → logprob: -2.16459321975708
    3. 'import' → logprob: -2.41459321975708
    4. ':' → logprob: -2.41459321975708
    5. ' ' → logprob: -2.91459321975708
    6. '#' → logprob: -2.91459321975708
    7. 'dist' → logprob: -3.41459321975708
    8. ' :' → logprob: -3.53959321975708
    9. ')' → logprob: -3.91459321975708
    10. '
' → logprob: -4.03959321975708

Token 3367: ' compl' (ID: 8432)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5054407119750977
    2. 'continue' → logprob: -1.5054407119750977
    3. '```' → logprob: -2.0054407119750977
    4. '#' → logprob: -2.7554407119750977
    5. 'contin' → logprob: -3.0054407119750977
    6. ' continues' → logprob: -3.5054407119750977
    7. ' continue' → logprob: -3.6304407119750977
    8. 'reste' → logprob: -3.6304407119750977
    9. '_continue' → logprob: -3.7554407119750977
    10. ')' → logprob: -4.130440711975098

Token 3368: 'ique' (ID: 2222)
  Prédit: 'ète'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ète' → logprob: -1.053025245666504
    2. 'é' → logprob: -1.303025245666504
    3. 'ete' → logprob: -1.303025245666504
    4. 'et' → logprob: -2.928025245666504
    5. 'eted' → logprob: -3.928025245666504
    6. 'été' → logprob: -4.928025245666504
    7. 'e' → logprob: -5.053025245666504
    8. '```' → logprob: -5.053025245666504
    9. 'éter' → logprob: -5.803025245666504
    10. 'eté' → logprob: -6.053025245666504

Token 3369: ' le' (ID: 505)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.11135461926460266
    2. '<|end|>' → logprob: -3.1113545894622803
    3. '_' → logprob: -4.361354827880859
    4. 'tion' → logprob: -4.611354827880859
    5. '```' → logprob: -5.236354827880859
    6. 'ation' → logprob: -5.486354827880859
    7. ')' → logprob: -5.986354827880859
    8. 'é' → logprob: -6.111354827880859
    9. '.' → logprob: -6.111354827880859
    10. '#' → logprob: -6.236354827880859

Token 3370: ' modèle' (ID: 45121)
  Prédit: 'code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'code' → logprob: -1.5633705854415894
    2. ' code' → logprob: -1.9383705854415894
    3. 'problem' → logprob: -1.9383705854415894
    4. 'graph' → logprob: -2.688370704650879
    5. '```' → logprob: -2.688370704650879
    6. 'pro' → logprob: -2.813370704650879
    7. ' problème' → logprob: -3.188370704650879
    8. 'proble' → logprob: -3.813370704650879
    9. 'gr' → logprob: -3.938370704650879
    10. 'process' → logprob: -4.063370704650879

Token 3371: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5007092356681824
    2. 'import' → logprob: -2.125709295272827
    3. '
' → logprob: -2.250709295272827
    4. ',' → logprob: -3.250709295272827
    5. ':
' → logprob: -3.750709295272827
    6. ',
' → logprob: -3.875709295272827
    7. ':' → logprob: -3.875709295272827
    8. ')' → logprob: -4.125709056854248
    9. '       ' → logprob: -5.375709056854248
    10. '\n' → logprob: -5.500709056854248

Token 3372: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03032749891281128
    2. 'import' → logprob: -4.155327320098877
    3. '
' → logprob: -5.530327320098877
    4. ':' → logprob: -5.905327320098877
    5. 'def' → logprob: -6.030327320098877
    6. ')' → logprob: -6.905327320098877
    7. 'from' → logprob: -7.155327320098877
    8. '```' → logprob: -7.155327320098877
    9. '    
' → logprob: -7.405327320098877
    10. '       ' → logprob: -7.655327320098877

Token 3373: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029505150392651558
    2. 'import' → logprob: -3.7795052528381348
    3. 'from' → logprob: -6.154505252838135
    4. '
' → logprob: -6.654505252838135
    5. ')' → logprob: -6.904505252838135
    6. '```' → logprob: -7.779505252838135
    7. '    
' → logprob: -8.279504776000977
    8. ':' → logprob: -8.529504776000977
    9. '       ' → logprob: -8.654504776000977
    10. ',' → logprob: -9.029504776000977

Token 3374: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030119895935058594
    2. ':' → logprob: -4.905119895935059
    3. 'import' → logprob: -5.030119895935059
    4. '       ' → logprob: -5.530119895935059
    5. ')' → logprob: -5.655119895935059
    6. '
' → logprob: -6.530119895935059
    7. '#' → logprob: -6.655119895935059
    8. '    
' → logprob: -7.405119895935059
    9. '```' → logprob: -7.530119895935059
    10. 'def' → logprob: -7.655119895935059

Token 3375: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3448866903781891
    2. 'import' → logprob: -1.3448866605758667
    3. 'dist' → logprob: -4.219886779785156
    4. 'from' → logprob: -4.844886779785156
    5. ')' → logprob: -6.219886779785156
    6. '#' (adapté à ' #') → logprob: -6.469886779785156
    7. '
' → logprob: -6.719886779785156
    8. 'distance' → logprob: -7.594886779785156
    9. '    
' → logprob: -7.844886779785156
    10. 'cost' → logprob: -7.969886779785156

Token 3376: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46775954961776733
    2. 'import' → logprob: -1.592759609222412
    3. 'dist' → logprob: -3.092759609222412
    4. '
' → logprob: -3.092759609222412
    5. '#' → logprob: -3.592759609222412
    6. 'from' → logprob: -3.967759609222412
    7. ')' → logprob: -5.717759609222412
    8. 'def' → logprob: -5.842759609222412
    9. 'distance' → logprob: -5.842759609222412
    10. '    
' → logprob: -6.217759609222412

Token 3377: ''' (ID: 6)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3877792358398438
    2. '#' → logprob: -1.5127792358398438
    3. '   ' → logprob: -2.1377792358398438
    4. 'ine' → logprob: -2.6377792358398438
    5. 'dist' → logprob: -2.6377792358398438
    6. '#
' → logprob: -3.0127792358398438
    7. 'def' → logprob: -3.1377792358398438
    8. '
' → logprob: -3.7627792358398438
    9. 'r' → logprob: -3.8877792358398438
    10. ')' → logprob: -4.637779235839844

Token 3378: 'én' (ID: 3289)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6423171758651733
    2. '#' → logprob: -1.7673171758651733
    3. '   ' → logprob: -2.642317295074463
    4. 'from' → logprob: -2.767317295074463
    5. 'def' → logprob: -2.767317295074463
    6. 'dist' → logprob: -2.892317295074463
    7. 'for' → logprob: -4.267317295074463
    8. 'ine' → logprob: -5.517317295074463
    9. 'continue' → logprob: -5.642317295074463
    10. 'distance' → logprob: -5.767317295074463

Token 3379: 'oncé' (ID: 59071)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.537196934223175
    2. '#' → logprob: -2.0371968746185303
    3. 'def' → logprob: -2.9121968746185303
    4. '```' → logprob: -3.1621968746185303
    5. '   ' → logprob: -3.6621968746185303
    6. 'd' → logprob: -3.7871968746185303
    7. '
' → logprob: -4.412197113037109
    8. 'try' → logprob: -4.537197113037109
    9. ')
' → logprob: -4.662197113037109
    10. '"""
' → logprob: -4.912197113037109

Token 3380: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5767030715942383
    2. ')' → logprob: -2.0767030715942383
    3. '#' → logprob: -3.0767030715942383
    4. '[' → logprob: -3.4517030715942383
    5. '_' → logprob: -3.5767030715942383
    6. '):' → logprob: -3.7017030715942383
    7. '   ' → logprob: -3.8267030715942383
    8. ']' → logprob: -3.9517030715942383
    9. '=' → logprob: -3.9517030715942383
    10. '```' → logprob: -4.076703071594238

Token 3381: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9422799944877625
    2. 'b' → logprob: -1.1922800540924072
    3. 'l' → logprob: -2.8172800540924072
    4. 'code' → logprob: -3.0672800540924072
    5. 'def' → logprob: -3.1922800540924072
    6. 'the' → logprob: -3.4422800540924072
    7. ')' → logprob: -3.9422800540924072
    8. 'd' → logprob: -4.192279815673828
    9. '#' → logprob: -4.567279815673828
    10. 'le' → logprob: -4.692279815673828

Token 3382: ''ex' (ID: 23472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6129058599472046
    2. '#' → logprob: -2.112905979156494
    3. 'n' → logprob: -2.237905979156494
    4. 'ine' → logprob: -2.737905979156494
    5. 'problem' → logprob: -2.862905979156494
    6. ')' → logprob: -2.987905979156494
    7. 'x' → logprob: -3.237905979156494
    8. 'e' → logprob: -3.487905979156494
    9. '`' → logprob: -3.612905979156494
    10. 'é' → logprob: -3.737905979156494

Token 3383: 'emple' (ID: 55259)
  Prédit: 'cerpt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cerpt' → logprob: -0.5178276300430298
    2. 'planation' → logprob: -1.1428276300430298
    3. 'cept' → logprob: -3.2678275108337402
    4. 'pected' → logprob: -3.8928275108337402
    5. 'pression' → logprob: -5.14282751083374
    6. 'p' → logprob: -5.39282751083374
    7. 't' → logprob: -5.51782751083374
    8. '```' → logprob: -6.76782751083374
    9. 'ception' → logprob: -6.89282751083374
    10. 'ample' → logprob: -6.89282751083374

Token 3384: ' ' (ID: 220)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4954991936683655
    2. ':' → logprob: -1.9954991340637207
    3. ')' → logprob: -2.9954991340637207
    4. '
' → logprob: -3.3704991340637207
    5. ' =' → logprob: -3.8704991340637207
    6. '[' → logprob: -3.8704991340637207
    7. '[
' → logprob: -3.9954991340637207
    8. '   ' → logprob: -4.245499134063721
    9. '``' → logprob: -4.245499134063721
    10. ']' → logprob: -4.495499134063721

Token 3385: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6589488387107849
    2. '[' → logprob: -1.5339488983154297
    3. ')' → logprob: -2.6589488983154297
    4. '   ' → logprob: -2.9089488983154297
    5. '):' → logprob: -3.5339488983154297
    6. '```' → logprob: -3.9089488983154297
    7. ']' → logprob: -4.03394889831543
    8. '[
' → logprob: -4.28394889831543
    9. '[i' → logprob: -4.40894889831543
    10. ',' → logprob: -5.15894889831543

Token 3386: ' explique' (ID: 71793)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12150014191865921
    2. '):' → logprob: -3.746500253677368
    3. '   ' → logprob: -3.746500253677368
    4. ':
' → logprob: -3.871500253677368
    5. '[' → logprob: -4.746500015258789
    6. '#' → logprob: -4.871500015258789
    7. '```' → logprob: -5.371500015258789
    8. ')' → logprob: -5.621500015258789
    9. 'def' → logprob: -5.746500015258789
    10. ',' → logprob: -5.746500015258789

Token 3387: ' simplement' (ID: 45065)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5612603425979614
    2. '```' → logprob: -1.4362603425979614
    3. '   ' → logprob: -2.061260223388672
    4. '       ' → logprob: -4.311260223388672
    5. '...' → logprob: -4.561260223388672
    6. '):' → logprob: -4.936260223388672
    7. ':
' → logprob: -4.936260223388672
    8. 'def' → logprob: -5.561260223388672
    9. ')' → logprob: -5.561260223388672
    10. ' :' → logprob: -6.061260223388672

Token 3388: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040240056812763214
    2. '   ' → logprob: -3.9152400493621826
    3. '):' → logprob: -5.290240287780762
    4. ')' → logprob: -5.915240287780762
    5. '```' → logprob: -5.915240287780762
    6. 'def' → logprob: -6.040240287780762
    7. '...' → logprob: -6.165240287780762
    8. ':
' → logprob: -7.165240287780762
    9. ' :' → logprob: -7.165240287780762
    10. '():' → logprob: -7.415240287780762

Token 3389: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008375448174774647
    2. '       ' → logprob: -5.758375644683838
    3. ')' → logprob: -6.383375644683838
    4. '#' → logprob: -7.383375644683838
    5. '
' → logprob: -7.883375644683838
    6. '```' → logprob: -7.883375644683838
    7. 'dist' → logprob: -8.25837516784668
    8. 'import' → logprob: -8.38337516784668
    9. '    
' → logprob: -8.38337516784668
    10. '    ' → logprob: -8.50837516784668

Token 3390: ' coupe' (ID: 71780)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.281585931777954
    2. 'do' → logprob: -1.531585931777954
    3. '#' → logprob: -2.156585931777954
    4. 'def' → logprob: -2.406585931777954
    5. 'n' → logprob: -3.031585931777954
    6. 'pe' → logprob: -3.281585931777954
    7. ' continue' → logprob: -3.656585931777954
    8. 'contin' → logprob: -3.906585931777954
    9. '```' → logprob: -4.156585693359375
    10. ' peux' → logprob: -4.281585693359375

Token 3391: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.902890145778656
    2. 'les' → logprob: -1.0278902053833008
    3. '```' → logprob: -2.902890205383301
    4. 'tout' → logprob: -3.527890205383301
    5. '(' → logprob: -3.652890205383301
    6. ' les' → logprob: -3.902890205383301
    7. 'le' → logprob: -4.402890205383301
    8. 'au' → logprob: -4.652890205383301
    9. '_t' → logprob: -4.652890205383301
    10. '_le' → logprob: -4.652890205383301

Token 3392: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.06234799697995186
    2. 'cases' → logprob: -3.187347888946533
    3. ' arbres' → logprob: -4.062347888946533
    4. 'ar' → logprob: -7.062347888946533
    5. ' cases' → logprob: -7.562347888946533
    6. '```' → logprob: -8.937348365783691
    7. 'trees' → logprob: -9.687348365783691
    8. 'case' → logprob: -10.062348365783691
    9. '   ' → logprob: -10.187348365783691
    10. 'for' → logprob: -10.312348365783691

Token 3393: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7314308881759644
    2. ')' → logprob: -1.4814308881759644
    3. '```' → logprob: -2.356431007385254
    4. ':' → logprob: -2.481431007385254
    5. ',' → logprob: -3.231431007385254
    6. '):' → logprob: -4.481431007385254
    7. ']' → logprob: -5.106431007385254
    8. '       ' → logprob: -5.231431007385254
    9. '.' → logprob: -5.356431007385254
    10. '<|end|>' → logprob: -5.356431007385254

Token 3394: ' certains' (ID: 30681)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.24438612163066864
    2. 'adj' → logprob: -2.1193861961364746
    3. '(' → logprob: -3.4943861961364746
    4. 'l' → logprob: -3.7443861961364746
    5. 'la' → logprob: -4.994386196136475
    6. 'cot' → logprob: -5.119386196136475
    7. '#' → logprob: -5.494386196136475
    8. '
' → logprob: -6.119386196136475
    9. '[(' → logprob: -6.119386196136475
    10. '1' → logprob: -6.369386196136475

Token 3395: ' endroits' (ID: 135663)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.1298726350069046
    2. ')' → logprob: -3.2548725605010986
    3. 'positions' → logprob: -4.379872798919678
    4. '_' → logprob: -4.379872798919678
    5. '```' → logprob: -4.504872798919678
    6. '#' → logprob: -4.629872798919678
    7. ' endroits' → logprob: -5.129872798919678
    8. 'places' → logprob: -5.379872798919678
    9. 'points' → logprob: -5.754872798919678
    10. ',' → logprob: -5.879872798919678

Token 3396: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06044340506196022
    2. ':' → logprob: -3.31044340133667
    3. ':
' → logprob: -5.06044340133667
    4. '):' → logprob: -5.43544340133667
    5. ')' → logprob: -5.81044340133667
    6. ',' → logprob: -6.18544340133667
    7. '       ' → logprob: -6.81044340133667
    8. '
' → logprob: -6.81044340133667
    9. '```' → logprob: -7.31044340133667
    10. '):
' → logprob: -7.43544340133667

Token 3397: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6313031911849976
    2. ')' → logprob: -1.7563031911849976
    3. '#' → logprob: -2.756303310394287
    4. '...' → logprob: -3.006303310394287
    5. '       ' → logprob: -3.256303310394287
    6. ' puis' → logprob: -4.131303310394287
    7. ' et' → logprob: -4.256303310394287
    8. ' #' → logprob: -4.381303310394287
    9. ',' → logprob: -4.381303310394287
    10. '           ' → logprob: -4.631303310394287

Token 3398: ' somme' (ID: 64484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15388263761997223
    2. 'che' → logprob: -3.1538827419281006
    3. 'case' → logprob: -3.7788827419281006
    4. '
' → logprob: -4.5288825035095215
    5. ' #' → logprob: -5.0288825035095215
    6. '   ' → logprob: -5.0288825035095215
    7. ' ' → logprob: -5.2788825035095215
    8. ' case' → logprob: -5.7788825035095215
    9. 'temps' → logprob: -5.7788825035095215
    10. '#
' → logprob: -5.9038825035095215

Token 3399: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9060360789299011
    2. '_' → logprob: -1.281036138534546
    3. '   ' → logprob: -1.531036138534546
    4. ':' → logprob: -3.906036138534546
    5. '=' → logprob: -4.281035900115967
    6. ',' → logprob: -5.031035900115967
    7. '#' → logprob: -5.156035900115967
    8. '```' → logprob: -5.156035900115967
    9. '    ' → logprob: -5.281035900115967
    10. '       ' → logprob: -5.406035900115967

Token 3400: ' coûts' (ID: 116912)
  Prédit: 'temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temps' → logprob: -0.5049625635147095
    2. ')' → logprob: -2.00496244430542
    3. 'co' → logprob: -3.25496244430542
    4. ']' → logprob: -3.50496244430542
    5. '#' → logprob: -3.50496244430542
    6. 'time' → logprob: -3.62996244430542
    7. 'for' → logprob: -4.12996244430542
    8. 'dist' → logprob: -4.12996244430542
    9. '```' → logprob: -4.25496244430542
    10. '}' → logprob: -4.50496244430542

Token 3401: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5975831151008606
    2. '=' → logprob: -2.097583055496216
    3. '   ' → logprob: -2.597583055496216
    4. ':' → logprob: -2.847583055496216
    5. ' =' → logprob: -3.097583055496216
    6. '```' → logprob: -3.222583055496216
    7. '#' → logprob: -4.347583293914795
    8. '<|end|>' → logprob: -4.472583293914795
    9. ',' → logprob: -4.597583293914795
    10. '.' → logprob: -4.597583293914795

Token 3402: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.369885802268982
    2. '```' → logprob: -1.369885802268982
    3. ')' → logprob: -1.744885802268982
    4. '1' → logprob: -2.1198859214782715
    5. '...' → logprob: -2.4948859214782715
    6. '   ' → logprob: -2.9948859214782715
    7. ' ' → logprob: -4.3698859214782715
    8. '6' → logprob: -4.9948859214782715
    9. 'A' → logprob: -5.1198859214782715
    10. '}' → logprob: -5.2448859214782715

Token 3403: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6877316236495972
    2. '   ' → logprob: -1.4377316236495972
    3. '...' → logprob: -2.4377317428588867
    4. ':' → logprob: -3.1877317428588867
    5. '```' → logprob: -3.5627317428588867
    6. ' =' → logprob: -3.8127317428588867
    7. '=' → logprob: -4.187731742858887
    8. '#' → logprob: -5.062731742858887
    9. ' ' → logprob: -5.312731742858887
    10. '.' → logprob: -5.312731742858887

Token 3404: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6855392456054688
    2. '   ' → logprob: -2.0605392456054688
    3. '#' (adapté à ' #') → logprob: -2.3105392456054688
    4. '```' → logprob: -2.6855392456054688
    5. '...' → logprob: -3.5605392456054688
    6. '"' → logprob: -3.5605392456054688
    7. '0' → logprob: -3.8105392456054688
    8. ')
' → logprob: -4.560539245605469
    9. ' =' → logprob: -4.685539245605469
    10. '=' → logprob: -4.810539245605469

Token 3405: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7330225706100464
    2. '1' → logprob: -1.4830225706100464
    3. '   ' → logprob: -1.8580225706100464
    4. '0' → logprob: -3.233022689819336
    5. ' ' → logprob: -3.733022689819336
    6. '```' → logprob: -4.108022689819336
    7. ' (' → logprob: -4.733022689819336
    8. ')
' → logprob: -5.233022689819336
    9. '(' → logprob: -5.483022689819336
    10. '}' → logprob: -5.608022689819336

Token 3406: ' réponse' (ID: 50332)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.5277501344680786
    2. 'min' → logprob: -1.1527501344680786
    3. '```' → logprob: -3.652750015258789
    4. 'temps' → logprob: -3.777750015258789
    5. 'sum' → logprob: -4.902750015258789
    6. 'minimal' → logprob: -5.027750015258789
    7. 'distance' → logprob: -5.277750015258789
    8. 'same' → logprob: -5.777750015258789
    9. 'max' → logprob: -6.027750015258789
    10. 's' → logprob: -6.152750015258789

Token 3407: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04518476873636246
    2. ':' → logprob: -3.795184850692749
    3. '
' → logprob: -4.92018461227417
    4. ')' → logprob: -5.54518461227417
    5. ',' → logprob: -6.17018461227417
    6. ':
' → logprob: -6.54518461227417
    7. 'import' → logprob: -6.92018461227417
    8. '):' → logprob: -7.04518461227417
    9. '```' → logprob: -7.29518461227417
    10. '       ' → logprob: -7.42018461227417

Token 3408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02405521646142006
    2. ')' → logprob: -4.774055004119873
    3. 'import' → logprob: -5.524055004119873
    4. '
' → logprob: -5.774055004119873
    5. 'from' → logprob: -6.024055004119873
    6. '#' → logprob: -6.649055004119873
    7. 'def' → logprob: -7.024055004119873
    8. '```' → logprob: -7.274055004119873
    9. '<|end|>' → logprob: -7.649055004119873
    10. '.' → logprob: -7.774055004119873

Token 3409: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005055025685578585
    2. '
' → logprob: -6.880054950714111
    3. 'import' → logprob: -6.880054950714111
    4. '```' → logprob: -7.130054950714111
    5. ':' → logprob: -7.505054950714111
    6. '    
' → logprob: -7.630054950714111
    7. 'def' → logprob: -8.00505542755127
    8. ')' → logprob: -8.00505542755127
    9. '       ' → logprob: -9.13005542755127
    10. '\' → logprob: -9.75505542755127

Token 3410: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009743575006723404
    2. ':' → logprob: -5.759743690490723
    3. ')' → logprob: -6.384743690490723
    4. '
' → logprob: -6.509743690490723
    5. '       ' → logprob: -6.884743690490723
    6. 'import' → logprob: -7.634743690490723
    7. '```' → logprob: -7.634743690490723
    8. '\' → logprob: -8.259743690490723
    9. '):' → logprob: -8.884743690490723
    10. 'def' → logprob: -8.884743690490723

Token 3411: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015257938764989376
    2. 'import' → logprob: -5.265257835388184
    3. ')' → logprob: -5.640257835388184
    4. '
' → logprob: -6.015257835388184
    5. 'def' → logprob: -7.265257835388184
    6. 'dist' → logprob: -7.265257835388184
    7. '```' → logprob: -7.390257835388184
    8. ':' → logprob: -7.515257835388184
    9. '       ' → logprob: -8.140257835388184
    10. 'from' → logprob: -8.390257835388184

Token 3412: ' On' (ID: 2160)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.32208943367004395
    2. '   ' → logprob: -1.822089433670044
    3. 'from' → logprob: -2.447089433670044
    4. 'dist' → logprob: -4.697089195251465
    5. '
' → logprob: -5.197089195251465
    6. '```' → logprob: -5.322089195251465
    7. ')' → logprob: -6.072089195251465
    8. '#' → logprob: -6.322089195251465
    9. 'INF' → logprob: -7.072089195251465
    10. 'def' → logprob: -7.447089195251465

Token 3413: ' peut' (ID: 9216)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.20366404950618744
    2. '   ' → logprob: -2.7036640644073486
    3. 'from' → logprob: -2.8286640644073486
    4. 'def' → logprob: -4.2036638259887695
    5. 'dist' → logprob: -5.0786638259887695
    6. '#' → logprob: -5.5786638259887695
    7. '
' → logprob: -5.7036638259887695
    8. 'for' → logprob: -5.7036638259887695
    9. '=' → logprob: -5.8286638259887695
    10. ']' → logprob: -5.9536638259887695

Token 3414: ' penser' (ID: 70315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6481571793556213
    2. 'import' → logprob: -1.6481571197509766
    3. 'continue' → logprob: -1.7731571197509766
    4. 'return' → logprob: -3.6481571197509766
    5. '#' → logprob: -4.398157119750977
    6. 'def' → logprob: -4.398157119750977
    7. ':' → logprob: -4.898157119750977
    8. ')' → logprob: -5.023157119750977
    9. ' continue' → logprob: -5.023157119750977
    10. 'use' → logprob: -5.023157119750977

Token 3415: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5430269241333008
    2. '_' → logprob: -2.168026924133301
    3. '```' → logprob: -2.543026924133301
    4. ')' → logprob: -3.168026924133301
    5. '       ' → logprob: -3.418026924133301
    6. '=' → logprob: -3.543026924133301
    7. '    ' → logprob: -4.168026924133301
    8. '.' → logprob: -4.293026924133301
    9. '...' → logprob: -4.543026924133301
    10. ':' → logprob: -4.668026924133301

Token 3416: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1251453012228012
    2. '"' → logprob: -3.500145196914673
    3. ')' → logprob: -3.625145196914673
    4. '```' → logprob: -3.750145196914673
    5. '       ' → logprob: -4.125145435333252
    6. ':' → logprob: -5.500145435333252
    7. '#' → logprob: -6.125145435333252
    8. ':
' → logprob: -6.375145435333252
    9. ''' → logprob: -6.750145435333252
    10. '")' → logprob: -7.000145435333252

Token 3417: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013655293732881546
    2. ')' → logprob: -5.013655185699463
    3. '       ' → logprob: -6.638655185699463
    4. 'import' → logprob: -6.763655185699463
    5. '"' → logprob: -6.888655185699463
    6. '#' (adapté à ' #') → logprob: -7.013655185699463
    7. 'def' → logprob: -7.138655185699463
    8. 'for' → logprob: -8.013655662536621
    9. '
' → logprob: -8.263655662536621
    10. 'from' → logprob: -8.638655662536621

Token 3418: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2575855255126953
    2. '   ' → logprob: -1.5075855255126953
    3. ':' → logprob: -2.0075855255126953
    4. ']' → logprob: -2.8825855255126953
    5. '[' → logprob: -3.0075855255126953
    6. '_' → logprob: -3.1325855255126953
    7. '#' → logprob: -3.3825855255126953
    8. '=' → logprob: -3.8825855255126953
    9. 'import' → logprob: -4.007585525512695
    10. ' ' → logprob: -4.507585525512695

Token 3419: ' Toutes' (ID: 117422)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7294505834579468
    2. 'from' → logprob: -0.9794505834579468
    3. 'dist' → logprob: -2.3544507026672363
    4. 'def' → logprob: -3.8544507026672363
    5. '#' → logprob: -5.104450702667236
    6. '   ' → logprob: -5.104450702667236
    7. '```' → logprob: -5.229450702667236
    8. 'heap' → logprob: -6.354450702667236
    9. ' from' → logprob: -6.604450702667236
    10. 'distance' → logprob: -6.729450702667236

Token 3420: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27922898530960083
    2. '   ' → logprob: -3.029228925704956
    3. 'cases' → logprob: -3.029228925704956
    4. ' _' → logprob: -3.404228925704956
    5. '_cases' → logprob: -3.529228925704956
    6. ')' → logprob: -3.904228925704956
    7. ' ' → logprob: -4.154229164123535
    8. ':' → logprob: -4.904229164123535
    9. ' cases' → logprob: -5.279229164123535
    10. '```' → logprob: -5.529229164123535

Token 3421: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.07670105248689651
    2. '_' → logprob: -4.5767011642456055
    3. '_cases' → logprob: -4.7017011642456055
    4. '(
' → logprob: -4.9517011642456055
    5. 'dist' → logprob: -4.9517011642456055
    6. 'cells' → logprob: -5.8267011642456055
    7. 'vo' → logprob: -5.9517011642456055
    8. 'adj' → logprob: -5.9517011642456055
    9. '
' → logprob: -6.0767011642456055
    10. ' cases' → logprob: -6.2017011642456055

Token 3422: ' non' (ID: 2893)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5235285758972168
    2. '```' → logprob: -1.8985285758972168
    3. 'vide' → logprob: -2.773528575897217
    4. '_v' → logprob: -2.898528575897217
    5. 'with' → logprob: -3.023528575897217
    6. '_empty' → logprob: -3.898528575897217
    7. ' _' → logprob: -5.023528575897217
    8. '[' → logprob: -5.023528575897217
    9. '[v' → logprob: -5.148528575897217
    10. '   ' → logprob: -5.273528575897217

Token 3423: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vid' → logprob: -1.0560624599456787
    2. '```' → logprob: -1.0560624599456787
    3. 'vide' → logprob: -2.1810624599456787
    4. 'blo' → logprob: -2.8060624599456787
    5. 'null' → logprob: -3.5560624599456787
    6. '
' → logprob: -4.181062698364258
    7. 'v' → logprob: -4.306062698364258
    8. 'b' → logprob: -4.806062698364258
    9. 'import' → logprob: -4.931062698364258
    10. '   ' → logprob: -5.181062698364258

Token 3424: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.1061561182141304
    2. 'id' → logprob: -3.48115611076355
    3. 'ide' → logprob: -3.48115611076355
    4. 'u' → logprob: -4.106156349182129
    5. '```' → logprob: -5.481156349182129
    6. 'i' → logprob: -5.481156349182129
    7. '   ' → logprob: -5.981156349182129
    8. '
' → logprob: -6.106156349182129
    9. 'is' → logprob: -7.231156349182129
    10. 'ie' → logprob: -7.231156349182129

Token 3425: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9263903498649597
    2. '_' → logprob: -1.8013904094696045
    3. ' =' → logprob: -3.1763904094696045
    4. ',' → logprob: -3.3013904094696045
    5. '   ' → logprob: -3.5513904094696045
    6. 'vide' → logprob: -3.6763904094696045
    7. ':' → logprob: -3.8013904094696045
    8. ' et' → logprob: -3.9263904094696045
    9. ')' → logprob: -3.9263904094696045
    10. '=' → logprob: -4.051390171051025

Token 3426: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6701730489730835
    2. ' #' → logprob: -1.7951730489730835
    3. '...' → logprob: -3.045173168182373
    4. '   ' → logprob: -3.170173168182373
    5. ')' → logprob: -3.795173168182373
    6. ' ' → logprob: -3.920173168182373
    7. '<|end|>' → logprob: -4.045173168182373
    8. '0' → logprob: -4.045173168182373
    9. ' et' → logprob: -4.420173168182373
    10. ''' → logprob: -4.545173168182373

Token 3427: ' calc' (ID: 25691)
  Prédit: 'pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pour' → logprob: -1.1069581508636475
    2. 'pe' → logprob: -1.7319581508636475
    3. 'continue' → logprob: -2.3569581508636475
    4. ' pour' → logprob: -2.7319581508636475
    5. ' continue' → logprob: -3.3569581508636475
    6. '#' → logprob: -3.3569581508636475
    7. '```' → logprob: -3.3569581508636475
    8. ' peux' → logprob: -3.6069581508636475
    9. 'p' → logprob: -3.7319581508636475
    10. 'les' → logprob: -3.9819581508636475

Token 3428: 'ule' (ID: 1601)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.8859551548957825
    2. 'ule' → logprob: -1.1359550952911377
    3. 'ulte' → logprob: -2.2609550952911377
    4. 'ont' → logprob: -3.3859550952911377
    5. 'ult' → logprob: -3.6359550952911377
    6. 'uler' → logprob: -3.7609550952911377
    7. 'ost' → logprob: -3.7609550952911377
    8. 'ulate' → logprob: -4.635955333709717
    9. 'ute' → logprob: -4.885955333709717
    10. 'u' → logprob: -5.260955333709717

Token 3429: ' le' (ID: 505)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leur' → logprob: -1.504237174987793
    2. ' le' → logprob: -1.629237174987793
    3. 'le' → logprob: -1.879237174987793
    4. '```' → logprob: -2.129237174987793
    5. '_' → logprob: -2.504237174987793
    6. ' un' → logprob: -2.879237174987793
    7. ' ' → logprob: -3.754237174987793
    8. ' leur' → logprob: -3.754237174987793
    9. '`' → logprob: -3.754237174987793
    10. '_le' → logprob: -4.004237174987793

Token 3430: ' coût' (ID: 73109)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.184918999671936
    2. 'co' → logprob: -1.684918999671936
    3. 'cost' → logprob: -2.1849188804626465
    4. ' minimum' → logprob: -2.4349188804626465
    5. 'min' → logprob: -2.8099188804626465
    6. 'distance' → logprob: -2.9349188804626465
    7. 'dist' → logprob: -3.1849188804626465
    8. ' coût' → logprob: -3.4349188804626465
    9. ' minimal' → logprob: -3.9349188804626465
    10. '```' → logprob: -4.3099188804626465

Token 3431: ' couper' (ID: 135212)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.6707843542099
    2. '_to' → logprob: -1.7957843542099
    3. ' =' → logprob: -2.4207844734191895
    4. ')' → logprob: -2.4207844734191895
    5. '```' → logprob: -2.4207844734191895
    6. '_for' → logprob: -2.6707844734191895
    7. '_' → logprob: -2.6707844734191895
    8. '   ' → logprob: -3.1707844734191895
    9. 'for' → logprob: -4.2957844734191895
    10. ' pour' → logprob: -4.4207844734191895

Token 3432: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2348778247833252
    2. ')' → logprob: -1.3598778247833252
    3. ']' → logprob: -2.359877824783325
    4. '_' → logprob: -2.484877824783325
    5. '[i' → logprob: -3.234877824783325
    6. '```' → logprob: -3.484877824783325
    7. '(i' → logprob: -3.609877824783325
    8. '       ' → logprob: -3.859877824783325
    9. '_for' → logprob: -3.984877824783325
    10. ',' → logprob: -4.359877586364746

Token 3433: ' rapport' (ID: 20847)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3698139190673828
    2. 'rap' → logprob: -1.8698139190673828
    3. 'rapport' → logprob: -1.9948139190673828
    4. 'transport' → logprob: -2.994813919067383
    5. '+' → logprob: -3.119813919067383
    6. 'dé' → logprob: -3.369813919067383
    7. ' rapport' → logprob: -3.494813919067383
    8. ' ' → logprob: -3.494813919067383
    9. 'ram' → logprob: -3.744813919067383
    10. 'ret' → logprob: -4.119813919067383

Token 3434: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.21860843896865845
    2. 'ées' → logprob: -2.0936083793640137
    3. 'ée' → logprob: -3.8436083793640137
    4. ')' → logprob: -4.093608379364014
    5. 'é' → logprob: -4.218608379364014
    6. 'és' → logprob: -4.468608379364014
    7. ']' → logprob: -6.718608379364014
    8. '}' → logprob: -6.843608379364014
    9. 'e' → logprob: -7.093608379364014
    10. '_' → logprob: -7.468608379364014

Token 3435: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11074824631214142
    2. ')' → logprob: -2.985748291015625
    3. ')
' → logprob: -4.610748291015625
    4. ':' → logprob: -4.735748291015625
    5. '
' → logprob: -5.360748291015625
    6. 'def' → logprob: -5.485748291015625
    7. '):' → logprob: -5.735748291015625
    8. ':
' → logprob: -5.860748291015625
    9. '```' → logprob: -5.860748291015625
    10. ']' → logprob: -6.110748291015625

Token 3436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2914590835571289
    2. ')' → logprob: -2.416459083557129
    3. 'import' → logprob: -3.416459083557129
    4. '
' → logprob: -3.666459083557129
    5. '#' → logprob: -4.166459083557129
    6. ',' → logprob: -4.791459083557129
    7. '       ' → logprob: -4.791459083557129
    8. ')
' → logprob: -4.916459083557129
    9. '```' → logprob: -4.916459083557129
    10. '[
' → logprob: -5.166459083557129

Token 3437: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12093265354633331
    2. ')' → logprob: -3.2459325790405273
    3. ')
' → logprob: -4.370932579040527
    4. '       ' → logprob: -4.995932579040527
    5. '
' → logprob: -5.120932579040527
    6. '#' (adapté à ' #') → logprob: -5.245932579040527
    7. '*' → logprob: -5.370932579040527
    8. ',' → logprob: -5.495932579040527
    9. ' *' → logprob: -5.745932579040527
    10. '           ' → logprob: -5.745932579040527

Token 3438: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19842010736465454
    2. ')' → logprob: -2.5734200477600098
    3. ')
' → logprob: -3.9484200477600098
    4. '
' → logprob: -4.07342004776001
    5. '           ' → logprob: -4.94842004776001
    6. '       ' → logprob: -4.94842004776001
    7. ',' → logprob: -4.94842004776001
    8. '```' → logprob: -5.44842004776001
    9. 'for' → logprob: -5.94842004776001
    10. '               ' → logprob: -6.19842004776001

Token 3439: ' Puis' (ID: 87717)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08141592144966125
    2. 'import' → logprob: -3.456415891647339
    3. 'from' → logprob: -4.206416130065918
    4. '   ' → logprob: -4.706416130065918
    5. ' #' → logprob: -4.956416130065918
    6. 'for' → logprob: -5.081416130065918
    7. 'dist' → logprob: -5.831416130065918
    8. 'distance' → logprob: -6.206416130065918
    9. '
' → logprob: -6.706416130065918
    10. 'def' → logprob: -6.956416130065918

Token 3440: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7605559825897217
    2. 'on' → logprob: -1.1355559825897217
    3. 'for' → logprob: -2.7605559825897217
    4. ' on' → logprob: -2.8855559825897217
    5. 'import' → logprob: -3.0105559825897217
    6. 'faire' → logprob: -4.510556221008301
    7. '...' → logprob: -4.635556221008301
    8. '   ' → logprob: -5.635556221008301
    9. 'from' → logprob: -6.135556221008301
    10. '
' → logprob: -6.135556221008301

Token 3441: ' construit' (ID: 119882)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39110809564590454
    2. 'continue' → logprob: -1.8911080360412598
    3. '#' → logprob: -2.3911080360412598
    4. 'util' → logprob: -3.7661080360412598
    5. 'find' → logprob: -4.89110803604126
    6. 'from' → logprob: -4.89110803604126
    7. 'return' → logprob: -5.51610803604126
    8. ' #' → logprob: -5.64110803604126
    9. 'importe' → logprob: -5.89110803604126
    10. 'f' → logprob: -6.01610803604126

Token 3442: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5288798809051514
    2. 'un' → logprob: -1.0288798809051514
    3. 'une' → logprob: -3.7788798809051514
    4. 'le' → logprob: -4.9038801193237305
    5. 'a' → logprob: -5.1538801193237305
    6. 'graph' → logprob: -5.4038801193237305
    7. ' une' → logprob: -5.9038801193237305
    8. 'import' → logprob: -6.4038801193237305
    9. '   ' → logprob: -6.5288801193237305
    10. ''un' → logprob: -6.9038801193237305

Token 3443: ' grap' (ID: 60955)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23026888072490692
    2. 'import' → logprob: -1.9802688360214233
    3. 'priority' → logprob: -3.730268955230713
    4. 'heap' → logprob: -3.980268955230713
    5. 'dist' → logprob: -4.230268955230713
    6. 'from' → logprob: -5.980268955230713
    7. '#' → logprob: -6.105268955230713
    8. 'queue' → logprob: -6.355268955230713
    9. '```' → logprob: -6.980268955230713
    10. 'd' → logprob: -7.355268955230713

Token 3444: 'he' (ID: 273)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7135941982269287
    2. 'he' → logprob: -0.8385941982269287
    3. 'aphe' → logprob: -3.7135941982269287
    4. 'ph' → logprob: -4.838594436645508
    5. '   ' → logprob: -4.963594436645508
    6. '
' → logprob: -4.963594436645508
    7. '#' → logprob: -4.963594436645508
    8. '       ' → logprob: -5.338594436645508
    9. 'phe' → logprob: -6.338594436645508
    10. 'aph' → logprob: -6.588594436645508

Token 3445: ' où' (ID: 15113)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3446: ' on' (ID: 402)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8131954669952393
    2. 'les' → logprob: -1.3131954669952393
    3. 'on' → logprob: -2.6881954669952393
    4. 'for' → logprob: -2.6881954669952393
    5. '#' → logprob: -2.8131954669952393
    6. 'le' → logprob: -3.8131954669952393
    7. '   ' → logprob: -3.9381954669952393
    8. ' les' → logprob: -4.18819522857666
    9. ' on' → logprob: -5.31319522857666
    10. '       ' → logprob: -5.68819522857666

Token 3447: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.9137852191925049
    2. 'dé' → logprob: -2.413785219192505
    3. 'def' → logprob: -2.788785219192505
    4. '       ' → logprob: -3.163785219192505
    5. '   ' → logprob: -3.163785219192505
    6. 'pour' → logprob: -3.538785219192505
    7. 'for' → logprob: -3.663785219192505
    8. 'continue' → logprob: -3.788785219192505
    9. 'po' → logprob: -3.913785219192505
    10. 'n' → logprob: -4.038784980773926

Token 3448: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -1.7049492597579956
    2. 'pass' → logprob: -2.204949378967285
    3. 'dé' → logprob: -2.329949378967285
    4. ' aller' → logprob: -2.454949378967285
    5. ' déplacer' → logprob: -2.454949378967285
    6. 'se' → logprob: -2.579949378967285
    7. 'aller' → logprob: -2.829949378967285
    8. 'contin' → logprob: -3.204949378967285
    9. ' bou' → logprob: -3.329949378967285
    10. ' continuer' → logprob: -3.454949378967285

Token 3449: ' déplacer' (ID: 142135)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.04081770405173302
    2. '   ' → logprob: -3.5408177375793457
    3. ' déplacer' → logprob: -5.040817737579346
    4. '       ' → logprob: -6.040817737579346
    5. 'placer' → logprob: -7.415817737579346
    6. 'd' → logprob: -8.040817260742188
    7. '           ' → logprob: -8.290817260742188
    8. 'm' → logprob: -8.790817260742188
    9. ' ' → logprob: -9.540817260742188
    10. '     ' → logprob: -9.790817260742188

Token 3450: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -1.0055125951766968
    2. ',' → logprob: -1.5055125951766968
    3. '```' → logprob: -3.0055127143859863
    4. ' sur' → logprob: -3.1305127143859863
    5. '[
' → logprob: -3.1305127143859863
    6. ')' → logprob: -3.5055127143859863
    7. '   ' → logprob: -3.6305127143859863
    8. '[' → logprob: -3.8805127143859863
    9. '_sur' → logprob: -4.130512714385986
    10. '{' → logprob: -4.130512714385986

Token 3451: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.5412989258766174
    2. 'les' → logprob: -1.5412988662719727
    3. 'case' → logprob: -2.1662988662719727
    4. 'des' → logprob: -3.4162988662719727
    5. ' des' → logprob: -4.166298866271973
    6. ' les' → logprob: -4.291298866271973
    7. ' cases' → logprob: -4.916298866271973
    8. '   ' → logprob: -5.166298866271973
    9. ' case' → logprob: -5.666298866271973
    10. 'une' → logprob: -6.041298866271973

Token 3452: ' v' (ID: 323)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.5090211629867554
    2. ' v' → logprob: -1.5090211629867554
    3. 'v' → logprob: -3.009021282196045
    4. ' vide' → logprob: -3.759021282196045
    5. '```' → logprob: -3.759021282196045
    6. '_v' → logprob: -3.884021282196045
    7. '_' → logprob: -4.384021282196045
    8. 'vid' → logprob: -4.509021282196045
    9. ',' → logprob: -4.884021282196045
    10. '[v' → logprob: -4.884021282196045

Token 3453: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.016076717525720596
    2. 'ide' → logprob: -4.891076564788818
    3. 'vid' → logprob: -6.391076564788818
    4. 'id' → logprob: -6.516076564788818
    5. '   ' → logprob: -6.891076564788818
    6. 'u' → logprob: -7.391076564788818
    7. 'i' → logprob: -7.516076564788818
    8. 'v' → logprob: -7.516076564788818
    9. '
' → logprob: -8.141077041625977
    10. 'uid' → logprob: -8.266077041625977

Token 3454: ' uniquement' (ID: 65527)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24098341166973114
    2. ')' → logprob: -2.240983486175537
    3. ',' → logprob: -3.490983486175537
    4. '```' → logprob: -4.115983486175537
    5. '[
' → logprob: -4.240983486175537
    6. '
' → logprob: -4.615983486175537
    7. ']' → logprob: -4.865983486175537
    8. '[' → logprob: -5.115983486175537
    9. '       ' → logprob: -5.365983486175537
    10. ',
' → logprob: -5.615983486175537

Token 3455: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015311109833419323
    2. ')' → logprob: -5.265311241149902
    3. '       ' → logprob: -6.140311241149902
    4. ':' → logprob: -6.140311241149902
    5. '
' → logprob: -6.765311241149902
    6. ',' → logprob: -7.015311241149902
    7. '.' → logprob: -7.390311241149902
    8. '    
' → logprob: -7.515311241149902
    9. '[' → logprob: -8.265311241149902
    10. ')
' → logprob: -8.890311241149902

Token 3456: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5485206246376038
    2. ',' → logprob: -2.423520565032959
    3. ')' → logprob: -2.548520565032959
    4. '[
' → logprob: -2.673520565032959
    5. '[' → logprob: -3.423520565032959
    6. ',
' → logprob: -3.673520565032959
    7. ']' → logprob: -3.923520565032959
    8. ':' → logprob: -4.048520565032959
    9. '```' → logprob: -4.423520565032959
    10. 'import' → logprob: -4.548520565032959

Token 3457: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010398924350738525
    2. '
' → logprob: -6.010398864746094
    3. ')' → logprob: -6.260398864746094
    4. '#' (adapté à ' #') → logprob: -6.635398864746094
    5. '       ' → logprob: -7.010398864746094
    6. ',' → logprob: -7.260398864746094
    7. '    
' → logprob: -7.385398864746094
    8. '.' → logprob: -8.135398864746094
    9. ')
' → logprob: -8.510398864746094
    10. '[' → logprob: -8.510398864746094

Token 3458: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053071070462465286
    2. 'import' → logprob: -3.4280710220336914
    3. '#' → logprob: -5.178071022033691
    4. 'dist' → logprob: -5.678071022033691
    5. 'from' → logprob: -5.803071022033691
    6. '
' → logprob: -6.678071022033691
    7. ')' → logprob: -6.803071022033691
    8. '       ' → logprob: -7.053071022033691
    9. ',' → logprob: -7.178071022033691
    10. '```' → logprob: -7.553071022033691

Token 3459: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7878876328468323
    2. '#' → logprob: -1.0378875732421875
    3. 'import' → logprob: -2.2878875732421875
    4. 'from' → logprob: -3.7878875732421875
    5. 'dist' → logprob: -4.4128875732421875
    6. '
' → logprob: -4.6628875732421875
    7. '       ' → logprob: -5.1628875732421875
    8. ',' → logprob: -5.5378875732421875
    9. 'for' → logprob: -5.5378875732421875
    10. ')' → logprob: -5.5378875732421875

Token 3460: ' sélection' (ID: 43472)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1091068983078003
    2. '#' → logprob: -1.4841068983078003
    3. 'import' → logprob: -1.8591068983078003
    4. 'for' → logprob: -2.73410701751709
    5. ' continue' → logprob: -3.10910701751709
    6. 'from' → logprob: -3.48410701751709
    7. 'def' → logprob: -3.60910701751709
    8. '
' → logprob: -3.73410701751709
    9. 'contin' → logprob: -4.10910701751709
    10. 'util' → logprob: -4.23410701751709

Token 3461: 'ne' (ID: 611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0892717838287354
    2. 'ner' → logprob: -2.2142717838287354
    3. '```' → logprob: -2.2142717838287354
    4. '       ' → logprob: -2.7142717838287354
    5. ']' → logprob: -2.8392717838287354
    6. 'ion' → logprob: -3.0892717838287354
    7. '           ' → logprob: -3.0892717838287354
    8. 'def' → logprob: -3.3392717838287354
    9. ')' → logprob: -3.3392717838287354
    10. '[
' → logprob: -3.8392717838287354

Token 3462: ' parmi' (ID: 51713)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.045860767364502
    2. ' (' → logprob: -2.170860767364502
    3. ' un' → logprob: -2.295860767364502
    4. '[' → logprob: -2.420860767364502
    5. ' les' → logprob: -2.545860767364502
    6. ')' → logprob: -2.670860767364502
    7. '```' → logprob: -3.045860767364502
    8. '_' → logprob: -3.170860767364502
    9. '(' → logprob: -3.545860767364502
    10. '[(' → logprob: -3.670860767364502

Token 3463: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.026810968294739723
    2. '   ' → logprob: -5.026811122894287
    3. 'cases' → logprob: -5.401811122894287
    4. 't' → logprob: -5.651811122894287
    5. ' les' → logprob: -6.026811122894287
    6. 'le' → logprob: -6.276811122894287
    7. 'l' → logprob: -6.401811122894287
    8. 'la' → logprob: -6.901811122894287
    9. '```' → logprob: -6.901811122894287
    10. '[' → logprob: -7.026811122894287

Token 3464: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.00731128454208374
    2. 'c' → logprob: -5.8823113441467285
    3. 'cells' → logprob: -6.7573113441467285
    4. 'positions' → logprob: -7.3823113441467285
    5. '```' → logprob: -8.00731086730957
    6. ' cases' → logprob: -8.00731086730957
    7. 'case' → logprob: -8.25731086730957
    8. '#' → logprob: -8.38231086730957
    9. '[(' → logprob: -8.38231086730957
    10. 'poss' → logprob: -9.00731086730957

Token 3465: ' avec' (ID: 3937)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.928309977054596
    2. 'vide' → logprob: -1.4283099174499512
    3. 'sans' → logprob: -2.303309917449951
    4. 'v' → logprob: -2.803309917449951
    5. ' v' → logprob: -2.928309917449951
    6. '```' → logprob: -3.303309917449951
    7. ' sans' → logprob: -4.178309917449951
    8. 'with' → logprob: -4.303309917449951
    9. '_v' → logprob: -4.428309917449951
    10. '_' → logprob: -4.678309917449951

Token 3466: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0008702484192326665
    2. 'ar' → logprob: -7.875870227813721
    3. ' arbres' → logprob: -9.000870704650879
    4. '```' → logprob: -9.125870704650879
    5. '0' → logprob: -9.375870704650879
    6. '   ' → logprob: -9.875870704650879
    7. '#' → logprob: -10.125870704650879
    8. 'des' → logprob: -10.750870704650879
    9. 'for' → logprob: -11.000870704650879
    10. 'trees' → logprob: -11.500870704650879

Token 3467: ' celles' (ID: 57573)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28859856724739075
    2. '```' → logprob: -2.4135985374450684
    3. ',' → logprob: -3.5385985374450684
    4. ' _' → logprob: -4.038598537445068
    5. '[' → logprob: -4.163598537445068
    6. ')' → logprob: -4.288598537445068
    7. 'with' → logprob: -4.663598537445068
    8. ':' → logprob: -4.788598537445068
    9. ']' → logprob: -4.788598537445068
    10. '[
' → logprob: -5.038598537445068

Token 3468: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.7346305251121521
    2. ' où' → logprob: -1.9846305847167969
    3. 'qui' → logprob: -2.359630584716797
    4. 'où' → logprob: -2.984630584716797
    5. ' que' → logprob: -3.484630584716797
    6. 'adj' → logprob: -3.609630584716797
    7. ' avec' → logprob: -3.734630584716797
    8. ' à' → logprob: -3.859630584716797
    9. '```' → logprob: -3.984630584716797
    10. ' accessibles' → logprob: -4.109630584716797

Token 3469: ' just' (ID: 1327)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3922155201435089
    2. 'ser' → logprob: -2.0172154903411865
    3. 'ont' → logprob: -2.8922154903411865
    4. 'do' → logprob: -3.0172154903411865
    5. '#' → logprob: -3.2672154903411865
    6. 'pe' → logprob: -4.017215728759766
    7. 'v' → logprob: -5.267215728759766
    8. 'f' → logprob: -5.517215728759766
    9. 'pour' → logprob: -5.517215728759766
    10. 'sert' → logprob: -6.017215728759766

Token 3470: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48182523250579834
    2. 'e' → logprob: -1.4818252325057983
    3. 'es' → logprob: -2.856825351715088
    4. 'continue' → logprob: -2.981825351715088
    5. '```' → logprob: -4.606825351715088
    6. 'def' → logprob: -5.106825351715088
    7. 'u' → logprob: -5.106825351715088
    8. 'ify' → logprob: -5.731825351715088
    9. 'é' → logprob: -5.856825351715088
    10. '   ' → logprob: -6.231825351715088

Token 3471: 'ient' (ID: 773)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7197922468185425
    2. 'if' → logprob: -1.5947922468185425
    3. 'ify' → logprob: -2.094792366027832
    4. 'ifie' → logprob: -2.594792366027832
    5. 'er' → logprob: -3.969792366027832
    6. 'ifies' → logprob: -4.094792366027832
    7. '```' → logprob: -4.219792366027832
    8. '   ' → logprob: -4.469792366027832
    9. 'es' → logprob: -4.719792366027832
    10. 'é' → logprob: -4.844792366027832

Token 3472: ' d' (ID: 272)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.1095162630081177
    2. 'd' → logprob: -1.4845162630081177
    3. 'leur' → logprob: -2.234516143798828
    4. 'l' → logprob: -2.359516143798828
    5. 'de' → logprob: -2.609516143798828
    6. ' leur' → logprob: -3.859516143798828
    7. ' le' → logprob: -3.859516143798828
    8. 'la' → logprob: -3.984516143798828
    9. ' de' → logprob: -3.984516143798828
    10. '```' → logprob: -4.234516143798828

Token 3473: ''être' (ID: 47704)
  Prédit: ''être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''être' → logprob: -0.8222488164901733
    2. 'e' → logprob: -0.9472488164901733
    3. 'éc' → logprob: -3.322248935699463
    4. ''aller' → logprob: -3.697248935699463
    5. 'eux' → logprob: -4.447248935699463
    6. 'être' → logprob: -4.447248935699463
    7. 'é' → logprob: -4.697248935699463
    8. 'cut' → logprob: -5.072248935699463
    9. '```' → logprob: -5.197248935699463
    10. '’être' → logprob: -5.447248935699463

Token 3474: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1294054090976715
    2. 'd' → logprob: -3.1294054985046387
    3. 'cou' → logprob: -3.6294054985046387
    4. '```' → logprob: -4.129405498504639
    5. ' coup' → logprob: -4.879405498504639
    6. 'dé' → logprob: -5.504405498504639
    7. 'aj' → logprob: -5.629405498504639
    8. '``' → logprob: -6.379405498504639
    9. 'int' → logprob: -6.379405498504639
    10. 'in' → logprob: -6.379405498504639

Token 3475: 'ées' (ID: 5161)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.48708176612854
    2. 'ées' → logprob: -1.61208176612854
    3. ']' → logprob: -1.98708176612854
    4. '   ' → logprob: -2.36208176612854
    5. '}' → logprob: -2.48708176612854
    6. '       ' → logprob: -2.86208176612854
    7. 'er' → logprob: -3.73708176612854
    8. ')' → logprob: -4.237081527709961
    9. ']
' → logprob: -4.362081527709961
    10. 'u' → logprob: -4.362081527709961

Token 3476: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3473862409591675
    2. ':' → logprob: -1.8473862409591675
    3. ')' → logprob: -3.097386360168457
    4. ':
' → logprob: -3.847386360168457
    5. ',' → logprob: -4.222386360168457
    6. '):' → logprob: -5.097386360168457
    7. 'def' → logprob: -5.222386360168457
    8. 'import' → logprob: -5.222386360168457
    9. ']' → logprob: -5.472386360168457
    10. '
' → logprob: -5.597386360168457

Token 3477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14030447602272034
    2. ':' → logprob: -2.5153045654296875
    3. ',' → logprob: -4.5153045654296875
    4. ')' → logprob: -4.5153045654296875
    5. ':
' → logprob: -5.5153045654296875
    6. '.' → logprob: -5.6403045654296875
    7. '```' → logprob: -5.6403045654296875
    8. '       ' → logprob: -5.7653045654296875
    9. ']' → logprob: -6.2653045654296875
    10. '#' → logprob: -6.3903045654296875

Token 3478: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042049817740917206
    2. ':' → logprob: -3.9170498847961426
    3. ')' → logprob: -4.917049884796143
    4. '       ' → logprob: -5.542049884796143
    5. ',' → logprob: -6.417049884796143
    6. ']' → logprob: -6.542049884796143
    7. '[' → logprob: -7.167049884796143
    8. '):' → logprob: -7.417049884796143
    9. '```' → logprob: -7.542049884796143
    10. ':
' → logprob: -7.542049884796143

Token 3479: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02703329548239708
    2. 'import' → logprob: -5.40203332901001
    3. ':' → logprob: -5.52703332901001
    4. ')' → logprob: -6.15203332901001
    5. '
' → logprob: -6.27703332901001
    6. ',' → logprob: -6.27703332901001
    7. '       ' → logprob: -6.27703332901001
    8. ']' → logprob: -6.52703332901001
    9. '               ' → logprob: -6.90203332901001
    10. '                   ' → logprob: -7.15203332901001

Token 3480: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7155096530914307
    2. '   ' → logprob: -1.4655096530914307
    3. ')' → logprob: -2.4655096530914307
    4. ']' → logprob: -2.8405096530914307
    5. ':
' → logprob: -3.7155096530914307
    6. ',' → logprob: -3.8405096530914307
    7. '#' → logprob: -4.090509414672852
    8. '```' → logprob: -4.340509414672852
    9. '
' → logprob: -4.965509414672852
    10. '       ' → logprob: -5.215509414672852

Token 3481: ' les' (ID: 1341)
  Prédit: 'continu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continu' → logprob: -1.1439847946166992
    2. 'aj' → logprob: -1.3939847946166992
    3. 'calcul' → logprob: -3.268984794616699
    4. ' continu' → logprob: -3.643984794616699
    5. '```' → logprob: -3.643984794616699
    6. '#' → logprob: -3.768984794616699
    7. 'dist' → logprob: -3.893984794616699
    8. 'contin' → logprob: -3.893984794616699
    9. 'continue' → logprob: -3.893984794616699
    10. 'f' → logprob: -4.018984794616699

Token 3482: ' tri' (ID: 12665)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6436063051223755
    2. 'consider' → logprob: -1.7686063051223755
    3. 'visit' → logprob: -2.393606185913086
    4. 'cou' → logprob: -2.893606185913086
    5. 'cons' → logprob: -3.143606185913086
    6. 'aj' → logprob: -3.143606185913086
    7. 'dé' → logprob: -3.143606185913086
    8. 'tr' → logprob: -3.268606185913086
    9. '#' → logprob: -3.393606185913086
    10. '```' → logprob: -3.518606185913086

Token 3483: 'ant' (ID: 493)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ang' → logprob: -1.0920493602752686
    2. 'e' → logprob: -1.5920493602752686
    3. 'angular' → logprob: -2.7170493602752686
    4. 'angle' → logprob: -2.8420493602752686
    5. 'é' → logprob: -2.9670493602752686
    6. 'age' → logprob: -3.3420493602752686
    7. 'a' → logprob: -3.3420493602752686
    8. '=' → logprob: -4.092049598693848
    9. 'és' → logprob: -4.217049598693848
    10. 'ange' → logprob: -4.217049598693848

Token 3484: ' sur' (ID: 1512)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3485: ' les' (ID: 1341)
  Prédit: 'leur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leur' → logprob: -0.7838786244392395
    2. 'le' → logprob: -1.0338785648345947
    3. ' leur' → logprob: -2.9088785648345947
    4. ' la' → logprob: -3.4088785648345947
    5. ' le' → logprob: -3.4088785648345947
    6. 'la' → logprob: -3.7838785648345947
    7. 'their' → logprob: -5.033878803253174
    8. 'leurs' → logprob: -5.283878803253174
    9. '   ' → logprob: -5.533878803253174
    10. ' leurs' → logprob: -5.658878803253174

Token 3486: ' chemins' (ID: 192063)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1865116357803345
    2. 'co' → logprob: -1.9365116357803345
    3. 'neighbors' → logprob: -2.686511516571045
    4. 'cases' → logprob: -2.936511516571045
    5. 'dist' → logprob: -3.061511516571045
    6. ' voisins' → logprob: -3.311511516571045
    7. '+' → logprob: -3.686511516571045
    8. '   ' → logprob: -3.936511516571045
    9. 'cout' → logprob: -4.061511516571045
    10. 'min' → logprob: -4.061511516571045

Token 3487: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14954832196235657
    2. '       ' → logprob: -3.024548292160034
    3. ')' → logprob: -3.524548292160034
    4. ':' → logprob: -3.899548292160034
    5. ']' → logprob: -5.274548530578613
    6. '           ' → logprob: -5.899548530578613
    7. ',' → logprob: -5.899548530578613
    8. '.' → logprob: -6.024548530578613
    9. '[i' → logprob: -6.274548530578613
    10. '):' → logprob: -6.274548530578613

Token 3488: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3625567555427551
    2. 'import' → logprob: -1.3625566959381104
    3. 'dist' → logprob: -4.3625569343566895
    4. ')' → logprob: -4.9875569343566895
    5. 'from' → logprob: -5.1125569343566895
    6. '```' → logprob: -5.7375569343566895
    7. 'def' → logprob: -5.9875569343566895
    8. '
' → logprob: -6.1125569343566895
    9. ':' → logprob: -6.3625569343566895
    10. '       ' → logprob: -6.6125569343566895

Token 3489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44885706901550293
    2. 'import' → logprob: -2.073857069015503
    3. ')' → logprob: -2.823857069015503
    4. ']' → logprob: -3.073857069015503
    5. ':' → logprob: -3.573857069015503
    6. ',' → logprob: -3.698857069015503
    7. '[' → logprob: -4.323857307434082
    8. '       ' → logprob: -4.823857307434082
    9. '```' → logprob: -5.073857307434082
    10. 'dist' → logprob: -5.198857307434082

Token 3490: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022578099742531776
    2. 'import' → logprob: -3.897578001022339
    3. 'from' → logprob: -7.147578239440918
    4. ')' → logprob: -7.897578239440918
    5. '...' → logprob: -8.272578239440918
    6. '    
' → logprob: -9.147578239440918
    7. '#' → logprob: -9.272578239440918
    8. '       ' → logprob: -9.522578239440918
    9. ',' → logprob: -9.647578239440918
    10. '.' → logprob: -10.022578239440918

Token 3491: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00444946251809597
    2. 'import' → logprob: -6.379449367523193
    3. '       ' → logprob: -7.004449367523193
    4. ')' → logprob: -7.879449367523193
    5. '<|end|>' → logprob: -8.504449844360352
    6. '    
' → logprob: -8.629449844360352
    7. '
' → logprob: -8.754449844360352
    8. '    ' → logprob: -9.254449844360352
    9. '```' → logprob: -9.254449844360352
    10. '...' → logprob: -9.254449844360352

Token 3492: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010342882014811039
    2. 'import' → logprob: -6.260343074798584
    3. ')' → logprob: -6.385343074798584
    4. '
' → logprob: -6.385343074798584
    5. '    
' → logprob: -7.135343074798584
    6. ':' → logprob: -7.135343074798584
    7. '       ' → logprob: -7.260343074798584
    8. '```' → logprob: -7.885343074798584
    9. '\' → logprob: -8.385342597961426
    10. '[' → logprob: -8.510342597961426

Token 3493: ' Une' (ID: 19758)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.025426378473639488
    2. 'from' → logprob: -4.525426387786865
    3. 'dist' → logprob: -4.900426387786865
    4. '   ' → logprob: -5.275426387786865
    5. 'heap' → logprob: -7.400426387786865
    6. '#' → logprob: -7.775426387786865
    7. '
' → logprob: -8.400425910949707
    8. 'distance' → logprob: -9.025425910949707
    9. '```' → logprob: -9.275425910949707
    10. 'visited' → logprob: -9.900425910949707

Token 3494: ' solution' (ID: 7578)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16332431137561798
    2. 'from' → logprob: -2.2883243560791016
    3. '#' → logprob: -4.413324356079102
    4. 'heap' → logprob: -4.788324356079102
    5. 'queue' → logprob: -4.788324356079102
    6. 'def' → logprob: -5.038324356079102
    7. 'd' → logprob: -5.663324356079102
    8. 'priority' → logprob: -5.913324356079102
    9. 'dist' → logprob: -6.163324356079102
    10. '   ' → logprob: -6.538324356079102

Token 3495: ' plus' (ID: 2932)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5351384282112122
    2. ':' → logprob: -1.5351383686065674
    3. '   ' → logprob: -2.4101383686065674
    4. '=' → logprob: -2.9101383686065674
    5. 'import' → logprob: -4.2851386070251465
    6. '```' → logprob: -4.2851386070251465
    7. '#' → logprob: -4.7851386070251465
    8. ':
' → logprob: -5.0351386070251465
    9. '
' → logprob: -6.2851386070251465
    10. '.' → logprob: -6.6601386070251465

Token 3496: ' simple' (ID: 4705)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.45647040009498596
    2. 'simple' → logprob: -1.5814703702926636
    3. '   ' → logprob: -3.331470489501953
    4. '#' → logprob: -3.581470489501953
    5. '```' → logprob: -3.581470489501953
    6. 'complex' → logprob: -4.331470489501953
    7. 'prec' → logprob: -4.456470489501953
    8. '
' → logprob: -4.581470489501953
    9. 'complete' → logprob: -5.206470489501953
    10. 'simpl' → logprob: -5.331470489501953

Token 3497: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30399736762046814
    2. '   ' → logprob: -1.5539973974227905
    3. 'import' → logprob: -3.553997278213501
    4. ':
' → logprob: -4.55399751663208
    5. '```' → logprob: -5.55399751663208
    6. ' =' → logprob: -6.30399751663208
    7. '=' → logprob: -7.30399751663208
    8. '#' → logprob: -7.30399751663208
    9. ' :' → logprob: -7.42899751663208
    10. '       ' → logprob: -7.55399751663208

Token 3498: ' 
' (ID: 793)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09355492889881134
    2. '   ' → logprob: -3.093554973602295
    3. 'dist' → logprob: -3.718554973602295
    4. 'from' → logprob: -4.593554973602295
    5. '#' → logprob: -5.093554973602295
    6. ' import' → logprob: -6.843554973602295
    7. '```' → logprob: -6.968554973602295
    8. '
' → logprob: -7.968554973602295
    9. 'distance' → logprob: -8.593554496765137
    10. 'cost' → logprob: -8.718554496765137

Token 3499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10977187007665634
    2. 'import' → logprob: -2.609771966934204
    3. '```' → logprob: -4.484771728515625
    4. '#' → logprob: -4.609771728515625
    5. 'from' → logprob: -5.609771728515625
    6. '       ' → logprob: -5.609771728515625
    7. '...' → logprob: -7.484771728515625
    8. '
' → logprob: -8.109771728515625
    9. '``' → logprob: -8.734771728515625
    10. ')' → logprob: -9.109771728515625

Token 3500: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021173276007175446
    2. 'import' → logprob: -4.021173477172852
    3. 'from' → logprob: -6.896173477172852
    4. '#' (adapté à ' #') → logprob: -7.146173477172852
    5. '```' → logprob: -7.896173477172852
    6. '
' → logprob: -8.146173477172852
    7. '       ' → logprob: -8.521173477172852
    8. '    
' → logprob: -9.271173477172852
    9. 'pass' → logprob: -9.521173477172852
    10. 'queue' → logprob: -10.271173477172852

Token 3501: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29373061656951904
    2. 'import' → logprob: -1.418730616569519
    3. 'from' → logprob: -5.043730735778809
    4. 'dist' → logprob: -5.918730735778809
    5. '```' → logprob: -6.293730735778809
    6. '#' → logprob: -7.543730735778809
    7. 'priority' → logprob: -8.668730735778809
    8. 'heap' → logprob: -8.918730735778809
    9. 'INF' → logprob: -9.043730735778809
    10. 'distance' → logprob: -9.543730735778809

Token 3502: ' suppose' (ID: 35968)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08719711005687714
    2. 'from' → logprob: -3.3371970653533936
    3. 'def' → logprob: -4.212197303771973
    4. '#' → logprob: -4.587197303771973
    5. 'continue' → logprob: -4.962197303771973
    6. '
' → logprob: -5.212197303771973
    7. '```' → logprob: -6.212197303771973
    8. 'contin' → logprob: -6.837197303771973
    9. ' import' → logprob: -7.212197303771973
    10. 'n' → logprob: -7.337197303771973

Token 3503: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7962290644645691
    2. ' que' → logprob: -1.0462291240692139
    3. 'import' → logprob: -2.296229124069214
    4. '    ' → logprob: -3.546229124069214
    5. '       ' → logprob: -5.046228885650635
    6. '_' → logprob: -5.046228885650635
    7. 'def' → logprob: -5.046228885650635
    8. '```' → logprob: -5.421228885650635
    9. ' ' → logprob: -5.671228885650635
    10. ')' → logprob: -5.671228885650635

Token 3504: ' chaque' (ID: 21194)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1684216558933258
    2. ' dist' → logprob: -2.418421745300293
    3. '   ' → logprob: -3.168421745300293
    4. 'import' → logprob: -4.043421745300293
    5. 'from' → logprob: -6.043421745300293
    6. 'the' → logprob: -7.543421745300293
    7. 'not' → logprob: -7.668421745300293
    8. 'total' → logprob: -7.918421745300293
    9. '```' → logprob: -7.918421745300293
    10. '#' → logprob: -8.168421745300293

Token 3505: ' case' (ID: 1890)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5887616872787476
    2. 'case' → logprob: -1.3387616872787476
    3. ' case' → logprob: -3.838761806488037
    4. '
' → logprob: -4.088761806488037
    5. 'cell' → logprob: -4.338761806488037
    6. '```' → logprob: -4.463761806488037
    7. ' ' → logprob: -4.713761806488037
    8. '(
' → logprob: -4.713761806488037
    9. 'i' → logprob: -4.713761806488037
    10. ')' → logprob: -4.838761806488037

Token 3506: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5738335251808167
    2. '```' → logprob: -1.6988334655761719
    3. 'vide' → logprob: -2.948833465576172
    4. ' avec' → logprob: -3.698833465576172
    5. 'with' → logprob: -3.823833465576172
    6. ' vide' → logprob: -3.948833465576172
    7. '`' → logprob: -4.323833465576172
    8. '   ' → logprob: -4.448833465576172
    9. ' _' → logprob: -4.573833465576172
    10. ' =' → logprob: -4.698833465576172

Token 3507: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.008067441172897816
    2. 'ar' → logprob: -6.258067607879639
    3. 'cou' → logprob: -6.258067607879639
    4. ' arbres' → logprob: -6.508067607879639
    5. '   ' → logprob: -7.258067607879639
    6. '0' → logprob: -7.508067607879639
    7. 'for' → logprob: -7.508067607879639
    8. 'co' → logprob: -9.13306713104248
    9. ' ' → logprob: -9.13306713104248
    10. '
' → logprob: -9.50806713104248

Token 3508: ' doit' (ID: 21822)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0913894847035408
    2. ' _' → logprob: -3.3413894176483154
    3. '```' → logprob: -4.5913896560668945
    4. ' ' → logprob: -4.7163896560668945
    5. ' est' → logprob: -5.4663896560668945
    6. '
' → logprob: -6.0913896560668945
    7. ' =' → logprob: -6.0913896560668945
    8. ' a' → logprob: -6.2163896560668945
    9. '   ' → logprob: -6.4663896560668945
    10. '`' → logprob: -6.5913896560668945

Token 3509: ' être' (ID: 9104)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9435074925422668
    2. ' être' → logprob: -0.9435074925422668
    3. 'être' → logprob: -1.818507432937622
    4. ' be' → logprob: -4.318507671356201
    5. '```' → logprob: -4.318507671356201
    6. ' _' → logprob: -5.068507671356201
    7. ''être' → logprob: -5.568507671356201
    8. ' ' → logprob: -5.693507671356201
    9. 'etre' → logprob: -5.818507671356201
    10. '_cut' → logprob: -6.318507671356201

Token 3510: ' coup' (ID: 25465)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.530796229839325
    2. 'trait' → logprob: -1.6557962894439697
    3. 'cons' → logprob: -2.7807962894439697
    4. 'cou' → logprob: -3.5307962894439697
    5. 'consider' → logprob: -4.030796051025391
    6. 'd' → logprob: -4.030796051025391
    7. 'pris' → logprob: -4.155796051025391
    8. 'vis' → logprob: -4.155796051025391
    9. 'int' → logprob: -4.655796051025391
    10. 'prise' → logprob: -4.905796051025391

Token 3511: 'ée' (ID: 2894)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06979158520698547
    2. 'é' → logprob: -3.194791555404663
    3. 'e' → logprob: -5.194791793823242
    4. 'ée' → logprob: -5.319791793823242
    5. ')' → logprob: -6.319791793823242
    6. '_cut' → logprob: -6.319791793823242
    7. '_
' → logprob: -7.069791793823242
    8. ' _' → logprob: -7.319791793823242
    9. '   ' → logprob: -7.569791793823242
    10. '()' → logprob: -7.569791793823242

Token 3512: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0253655910491943
    2. '   ' → logprob: -1.0253655910491943
    3. ')' → logprob: -2.5253655910491943
    4. '```' → logprob: -2.9003655910491943
    5. '<|end|>' → logprob: -3.6503655910491943
    6. ',' → logprob: -4.150365829467773
    7. '       ' → logprob: -4.275365829467773
    8. ']' → logprob: -4.275365829467773
    9. '
' → logprob: -4.400365829467773
    10. '):' → logprob: -4.775365829467773

Token 3513: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29906994104385376
    2. ':' → logprob: -2.299069881439209
    3. ')' → logprob: -2.549069881439209
    4. '#' → logprob: -3.924069881439209
    5. '```' → logprob: -4.674069881439209
    6. ' ' → logprob: -4.799069881439209
    7. '       ' → logprob: -4.799069881439209
    8. '<|end|>' → logprob: -4.924069881439209
    9. '.' → logprob: -5.424069881439209
    10. '
' → logprob: -5.924069881439209

Token 3514: ' addition' (ID: 5856)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24813318252563477
    2. '   ' → logprob: -2.1231331825256348
    3. 'on' → logprob: -3.3731331825256348
    4. ' on' → logprob: -4.123133182525635
    5. ' #' → logprob: -4.123133182525635
    6. '```' → logprob: -4.748133182525635
    7. 'continue' → logprob: -4.998133182525635
    8. 'return' → logprob: -5.248133182525635
    9. 'import' → logprob: -6.248133182525635
    10. '       ' → logprob: -6.498133182525635

Token 3515: 'ne' (ID: 611)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9377756714820862
    2. '   ' → logprob: -1.1877756118774414
    3. 'né' → logprob: -2.3127756118774414
    4. '+=' → logprob: -3.0627756118774414
    5. 'é' → logprob: -3.4377756118774414
    6. ' +=' → logprob: -3.6877756118774414
    7. '=' → logprob: -4.437775611877441
    8. 'd' → logprob: -4.562775611877441
    9. 'ed' → logprob: -4.687775611877441
    10. 'al' → logprob: -4.687775611877441

Token 3516: ' leur' (ID: 9853)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5031858682632446
    2. '()' → logprob: -2.003185749053955
    3. '<|end|>' → logprob: -2.253185749053955
    4. ')' → logprob: -2.378185749053955
    5. 'total' → logprob: -2.878185749053955
    6. 's' → logprob: -3.003185749053955
    7. '(' → logprob: -3.253185749053955
    8. '.' → logprob: -3.378185749053955
    9. ' _' → logprob: -3.628185749053955
    10. '   ' → logprob: -3.628185749053955

Token 3517: ' coût' (ID: 73109)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8479681611061096
    2. '_' → logprob: -1.3479681015014648
    3. '_cost' → logprob: -2.097968101501465
    4. '_time' → logprob: -2.722968101501465
    5. 's' → logprob: -2.847968101501465
    6. 'cost' → logprob: -4.472968101501465
    7. ' ' → logprob: -5.097968101501465
    8. '_s' → logprob: -5.097968101501465
    9. ')' → logprob: -5.222968101501465
    10. '_total' → logprob: -5.472968101501465

Token 3518: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5176020264625549
    2. ')' → logprob: -1.2676019668579102
    3. '<|end|>' → logprob: -3.26760196685791
    4. ':' → logprob: -3.39260196685791
    5. '```' → logprob: -4.26760196685791
    6. '()' → logprob: -4.89260196685791
    7. '\' → logprob: -5.14260196685791
    8. ']' → logprob: -5.51760196685791
    9. '(' → logprob: -5.89260196685791
    10. '}' → logprob: -6.26760196685791

Token 3520: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49897459149360657
    2. '<|end|>' → logprob: -1.1239745616912842
    3. '   ' → logprob: -2.873974561691284
    4. '<|end|>' → logprob: -5.998974800109863
    5. '```' → logprob: -6.248974800109863
    6. '#' (adapté à ' #') → logprob: -6.373974800109863
    7. '...' → logprob: -6.998974800109863
    8. ']' → logprob: -6.998974800109863
    9. '
' → logprob: -7.373974800109863
    10. 'return' → logprob: -7.748974800109863

Token 3521: ' Ce' (ID: 14228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22886237502098083
    2. '<|end|>' → logprob: -2.3538622856140137
    3. ')' → logprob: -2.8538622856140137
    4. 'return' → logprob: -3.6038622856140137
    5. 'pass' → logprob: -4.353862285614014
    6. '```' → logprob: -5.853862285614014
    7. '#' → logprob: -6.478862285614014
    8. '<|end|>' → logprob: -6.728862285614014
    9. 'if' → logprob: -6.853862285614014
    10. ':' → logprob: -7.728862285614014

Token 3522: ' n' (ID: 297)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3785926103591919
    2. '_' → logprob: -2.1285924911499023
    3. ']' → logprob: -3.2535924911499023
    4. ')' → logprob: -3.5035924911499023
    5. '=' → logprob: -3.7535924911499023
    6. ':' → logprob: -3.7535924911499023
    7. '
' → logprob: -4.003592491149902
    8. '   ' → logprob: -4.253592491149902
    9. ' =' → logprob: -4.378592491149902
    10. 'def' → logprob: -5.378592491149902

Token 3523: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3861570954322815
    2. '=' → logprob: -1.5111570358276367
    3. ' =' → logprob: -3.8861570358276367
    4. ')' → logprob: -4.011157035827637
    5. '
' → logprob: -4.386157035827637
    6. ':' → logprob: -4.386157035827637
    7. '.' → logprob: -4.886157035827637
    8. '```' → logprob: -5.011157035827637
    9. ':
' → logprob: -5.886157035827637
    10. '#
' → logprob: -6.011157035827637

Token 3524: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.050503134727478
    2. ' not' → logprob: -1.675503134727478
    3. ' pas' → logprob: -1.925503134727478
    4. ' possible' → logprob: -2.8005032539367676
    5. '```' → logprob: -2.9255032539367676
    6. 'possible' → logprob: -3.1755032539367676
    7. '_' → logprob: -3.6755032539367676
    8. ')' → logprob: -3.8005032539367676
    9. ''' → logprob: -3.9255032539367676
    10. '#' → logprob: -3.9255032539367676

Token 3525: ' optimal' (ID: 24174)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.42397111654281616
    2. ')' → logprob: -3.048971176147461
    3. ' possible' → logprob: -3.173971176147461
    4. 'necessary' → logprob: -3.298971176147461
    5. '<|end|>' → logprob: -3.423971176147461
    6. '```' → logprob: -3.798971176147461
    7. 'complete' → logprob: -3.923971176147461
    8. '.' → logprob: -4.298971176147461
    9. 'needed' → logprob: -4.548971176147461
    10. '_possible' → logprob: -4.673971176147461

Token 3526: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7196347713470459
    2. 'import' → logprob: -2.094634771347046
    3. ':' → logprob: -2.219634771347046
    4. '   ' → logprob: -2.969634771347046
    5. ']' → logprob: -3.094634771347046
    6. '<|end|>' → logprob: -3.094634771347046
    7. '```' → logprob: -3.094634771347046
    8. 'def' → logprob: -3.969634771347046
    9. ':
' → logprob: -4.969635009765625
    10. '
' → logprob: -4.969635009765625

Token 3527: ' ne' (ID: 453)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3528: ' respecte' (ID: 140483)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2800477147102356
    2. 'continue' → logprob: -2.280047655105591
    3. ')' → logprob: -3.030047655105591
    4. '```' → logprob: -3.655047655105591
    5. ' return' → logprob: -3.780047655105591
    6. '#' → logprob: -4.03004789352417
    7. ' continue' → logprob: -5.28004789352417
    8. '...' → logprob: -5.53004789352417
    9. 's' → logprob: -5.90504789352417
    10. '
' → logprob: -6.15504789352417

Token 3529: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.3506490886211395
    2. ' la' → logprob: -2.725649118423462
    3. '```' → logprob: -2.725649118423462
    4. 'pas' → logprob: -3.475649118423462
    5. 'le' → logprob: -3.850649118423462
    6. ' le' → logprob: -3.975649118423462
    7. '_pas' → logprob: -4.225648880004883
    8. '   ' → logprob: -4.350648880004883
    9. ')' → logprob: -4.475648880004883
    10. ' l' → logprob: -4.475648880004883

Token 3530: ' l' (ID: 305)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.42544278502464294
    2. 'l' → logprob: -2.050442695617676
    3. 'la' → logprob: -2.175442695617676
    4. ' la' → logprob: -3.175442695617676
    5. '```' → logprob: -3.925442695617676
    6. 'les' → logprob: -4.175442695617676
    7. ' le' → logprob: -5.175442695617676
    8. ' l' → logprob: -5.175442695617676
    9. 'strict' → logprob: -5.800442695617676
    10. ' les' → logprob: -5.800442695617676

Token 3531: ''ex' (ID: 23472)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9606220126152039
    2. '```' → logprob: -1.7106220722198486
    3. ')' → logprob: -2.5856220722198486
    4. ''' → logprob: -2.7106220722198486
    5. 'e' → logprob: -3.0856220722198486
    6. '_' → logprob: -3.7106220722198486
    7. 'def' → logprob: -3.8356220722198486
    8. 'final' → logprob: -3.9606220722198486
    9. 'total' → logprob: -4.3356218338012695
    10. '"' → logprob: -4.4606218338012695

Token 3532: 'emple' (ID: 55259)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3959624767303467
    2. '_' → logprob: -1.3959624767303467
    3. 'cept' → logprob: -1.6459624767303467
    4. 'act' → logprob: -3.0209624767303467
    5. '```' → logprob: -3.0209624767303467
    6. 'p' → logprob: -3.1459624767303467
    7. '\n' → logprob: -3.5209624767303467
    8. 'cerpt' → logprob: -3.6459624767303467
    9. 'planation' → logprob: -3.7709624767303467
    10. '#' → logprob: -4.145962715148926

Token 3533: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9365833401679993
    2. '<|end|>' → logprob: -1.1865832805633545
    3. ']' → logprob: -2.3115832805633545
    4. ':' → logprob: -2.9365832805633545
    5. '   ' → logprob: -2.9365832805633545
    6. '```' → logprob: -3.4365832805633545
    7. '<|end|>' → logprob: -4.186583518981934
    8. '#' → logprob: -5.061583518981934
    9. '
' → logprob: -5.186583518981934
    10. '[' → logprob: -5.186583518981934

Token 3534: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.865763247013092
    2. ')' → logprob: -1.3657631874084473
    3. '```' → logprob: -1.8657631874084473
    4. ']' → logprob: -3.3657631874084473
    5. ':' → logprob: -3.7407631874084473
    6. '   ' → logprob: -3.7407631874084473
    7. '[' → logprob: -3.7407631874084473
    8. '#' → logprob: -4.490763187408447
    9. '<|end|>' → logprob: -4.615763187408447
    10. '\' → logprob: -4.740763187408447

Token 3535: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.866955041885376
    2. '   ' → logprob: -0.866955041885376
    3. '<|end|>' → logprob: -3.116955041885376
    4. ':' → logprob: -3.241955041885376
    5. ']' → logprob: -4.116954803466797
    6. 'import' → logprob: -4.366954803466797
    7. '```' → logprob: -4.866954803466797
    8. '...' → logprob: -4.991954803466797
    9. 'def' → logprob: -5.491954803466797
    10. 'pass' → logprob: -5.741954803466797

Token 3536: '3' (ID: 18)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1433067321777344
    2. '3' → logprob: -1.5183067321777344
    3. '0' → logprob: -2.3933067321777344
    4. ')' → logprob: -2.6433067321777344
    5. '   ' → logprob: -2.7683067321777344
    6. '#' → logprob: -3.3933067321777344
    7. '4' → logprob: -3.5183067321777344
    8. '7' → logprob: -3.8933067321777344
    9. '9' → logprob: -4.018306732177734
    10. ']' → logprob: -4.143306732177734

Token 3537: '.

' (ID: 364)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5326704978942871
    2. ':' → logprob: -2.282670497894287
    3. '   ' → logprob: -2.407670497894287
    4. 'import' → logprob: -2.407670497894287
    5. ']' → logprob: -2.907670497894287
    6. '}' → logprob: -4.782670497894287
    7. '```' → logprob: -4.782670497894287
    8. 'def' → logprob: -5.282670497894287
    9. 'from' → logprob: -5.282670497894287
    10. '):' → logprob: -5.282670497894287

Token 3538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03076893463730812
    2. ')' → logprob: -4.530768871307373
    3. 'import' → logprob: -5.155768871307373
    4. '<|end|>' → logprob: -5.405768871307373
    5. 'from' → logprob: -5.905768871307373
    6. '#' → logprob: -6.530768871307373
    7. '```' → logprob: -6.780768871307373
    8. '...' → logprob: -6.905768871307373
    9. '    
' → logprob: -7.405768871307373
    10. '.' → logprob: -7.905768871307373

Token 3539: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023009369149804115
    2. 'import' → logprob: -4.648009300231934
    3. ')' → logprob: -5.273009300231934
    4. '<|end|>' → logprob: -6.148009300231934
    5. '```' → logprob: -6.398009300231934
    6. '#' (adapté à ' #') → logprob: -6.898009300231934
    7. '...' → logprob: -7.148009300231934
    8. 'from' → logprob: -7.523009300231934
    9. '    
' → logprob: -7.773009300231934
    10. 'pass' → logprob: -8.398009300231934

Token 3540: ' Or' (ID: 2604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8240687847137451
    2. 'import' → logprob: -1.1990687847137451
    3. 'from' → logprob: -2.199068784713745
    4. ')' → logprob: -3.324068784713745
    5. 'if' → logprob: -3.449068784713745
    6. 'dist' → logprob: -3.449068784713745
    7. 'return' → logprob: -3.574068784713745
    8. '```' → logprob: -4.574069023132324
    9. 'd' → logprob: -5.949069023132324
    10. '#' → logprob: -6.199069023132324

Token 3541: ' les' (ID: 1341)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3955194652080536
    2. 'import' → logprob: -1.395519495010376
    3. '   ' → logprob: -3.895519495010376
    4. 'from' → logprob: -4.020519256591797
    5. ' dist' → logprob: -4.645519256591797
    6. 'd' → logprob: -5.020519256591797
    7. ')' → logprob: -5.145519256591797
    8. ':' → logprob: -5.895519256591797
    9. 'def' → logprob: -5.895519256591797
    10. '
' → logprob: -6.520519256591797

Token 3542: ' exemples' (ID: 105138)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.37276649475097656
    2. 'import' → logprob: -2.6227664947509766
    3. 'd' → logprob: -3.2477664947509766
    4. 'def' → logprob: -3.4977664947509766
    5. '#' → logprob: -3.8727664947509766
    6. '
' → logprob: -4.122766494750977
    7. ')' → logprob: -4.122766494750977
    8. '_' → logprob: -4.497766494750977
    9. 'from' → logprob: -4.497766494750977
    10. 'distance' → logprob: -4.747766494750977

Token 3543: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1675320863723755
    2. '<|end|>' → logprob: -3.417531967163086
    3. 'import' → logprob: -3.667531967163086
    4. ')' → logprob: -4.167531967163086
    5. 'def' → logprob: -4.417531967163086
    6. ':
' → logprob: -4.667531967163086
    7. '   ' → logprob: -4.792531967163086
    8. '):' → logprob: -4.792531967163086
    9. '```' → logprob: -4.792531967163086
    10. ']' → logprob: -5.042531967163086

Token 3544: '2' (ID: 17)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9919931888580322
    2. '[' → logprob: -2.2419931888580322
    3. '.' → logprob: -2.7419931888580322
    4. 'from' → logprob: -2.7419931888580322
    5. '[
' → logprob: -2.9919931888580322
    6. '```' → logprob: -2.9919931888580322
    7. 'import' → logprob: -3.2419931888580322
    8. '#' → logprob: -3.2419931888580322
    9. ']' → logprob: -3.4919931888580322
    10. '=' → logprob: -3.6169931888580322

Token 3545: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2755993604660034
    2. ']' → logprob: -1.2755993604660034
    3. ':' → logprob: -2.025599479675293
    4. '   ' → logprob: -2.650599479675293
    5. 'import' → logprob: -3.150599479675293
    6. '[' → logprob: -3.400599479675293
    7. '#' → logprob: -3.525599479675293
    8. '.' → logprob: -3.900599479675293
    9. ')' → logprob: -3.900599479675293
    10. '...' → logprob: -3.900599479675293

Token 3546: ' ' (ID: 220)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6115602254867554
    2. '3' → logprob: -1.6115602254867554
    3. ' W' → logprob: -1.6115602254867554
    4. ':' → logprob: -3.611560344696045
    5. ' ' → logprob: -4.611560344696045
    6. '```' → logprob: -5.111560344696045
    7. '4' → logprob: -5.361560344696045
    8. '#' → logprob: -5.361560344696045
    9. '7' → logprob: -6.486560344696045
    10. '...' → logprob: -6.861560344696045

Token 3547: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8107096552848816
    2. 'W' → logprob: -0.8107096552848816
    3. ':' → logprob: -2.5607097148895264
    4. '#' → logprob: -4.560709476470947
    5. '```' → logprob: -4.560709476470947
    6. ' W' → logprob: -5.435709476470947
    7. '...' → logprob: -5.560709476470947
    8. '0' → logprob: -6.560709476470947
    9. 'j' → logprob: -7.185709476470947
    10. '4' → logprob: -7.935709476470947

Token 3548: ' montrent' (ID: 178953)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4347471296787262
    2. '   ' → logprob: -1.4347470998764038
    3. ':
' → logprob: -3.3097472190856934
    4. 'import' → logprob: -3.6847472190856934
    5. '#' → logprob: -4.684747219085693
    6. ',' → logprob: -5.059747219085693
    7. ' continue' → logprob: -5.184747219085693
    8. '...' → logprob: -5.559747219085693
    9. '):' → logprob: -5.809747219085693
    10. '
' → logprob: -6.059747219085693

Token 3549: ' que' (ID: 661)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -1.364355444908142
    2. 'import' → logprob: -1.614355444908142
    3. '   ' → logprob: -1.864355444908142
    4. '#' → logprob: -1.989355444908142
    5. '```' → logprob: -2.9893555641174316
    6. '.' → logprob: -3.1143555641174316
    7. ')' → logprob: -3.4893555641174316
    8. ':' → logprob: -4.364355564117432
    9. ' que' → logprob: -4.364355564117432
    10. 'def' → logprob: -4.364355564117432

Token 3550: ' l' (ID: 305)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4359365701675415
    2. '#' → logprob: -1.8109365701675415
    3. 'import' → logprob: -2.060936450958252
    4. ' dist' → logprob: -4.310936450958252
    5. 'from' → logprob: -5.185936450958252
    6. ' #' → logprob: -5.435936450958252
    7. '   ' → logprob: -5.435936450958252
    8. ' on' → logprob: -5.435936450958252
    9. '...' → logprob: -5.560936450958252
    10. 'def' → logprob: -5.685936450958252

Token 3551: ''on' (ID: 25812)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1663960218429565
    2. 'import' → logprob: -1.4163960218429565
    3. '#' → logprob: -1.7913960218429565
    4. 'def' → logprob: -2.041396141052246
    5. 'dist' → logprob: -3.291396141052246
    6. '
' → logprob: -4.166396141052246
    7. '[
' → logprob: -4.541396141052246
    8. 'for' → logprob: -4.541396141052246
    9. ')' → logprob: -4.791396141052246
    10. 'n' → logprob: -4.916396141052246

Token 3552: ' ne' (ID: 453)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3502710461616516
    2. '#' → logprob: -1.9752709865570068
    3. 'def' → logprob: -2.850270986557007
    4. 'from' → logprob: -2.975270986557007
    5. '   ' → logprob: -5.100271224975586
    6. '
' → logprob: -5.100271224975586
    7. ' can' → logprob: -5.475271224975586
    8. 'can' → logprob: -5.600271224975586
    9. 'n' → logprob: -5.850271224975586
    10. ')' → logprob: -6.100271224975586

Token 3553: ' doit' (ID: 21822)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6731208562850952
    2. 'def' → logprob: -1.2981208562850952
    3. 'import' → logprob: -2.6731209754943848
    4. 'continue' → logprob: -2.9231209754943848
    5. 'contin' → logprob: -3.7981209754943848
    6. 's' → logprob: -4.423120975494385
    7. 'from' → logprob: -4.673120975494385
    8. '
' → logprob: -4.923120975494385
    9. '...' → logprob: -5.173120975494385
    10. '```' → logprob: -5.423120975494385

Token 3554: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.18072986602783203
    2. 'import' → logprob: -2.555729866027832
    3. '#' → logprob: -2.805729866027832
    4. '```' → logprob: -4.555729866027832
    5. ' pas' → logprob: -4.680729866027832
    6. 'contin' → logprob: -6.305729866027832
    7. 'return' → logprob: -6.805729866027832
    8. 'cut' → logprob: -7.180729866027832
    9. 'faire' → logprob: -7.430729866027832
    10. 'continue' → logprob: -7.680729866027832

Token 3555: ' couper' (ID: 135212)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1198023557662964
    2. 'contin' → logprob: -1.8698023557662964
    3. 'import' → logprob: -1.9948023557662964
    4. 'pas' → logprob: -2.119802474975586
    5. 'cou' → logprob: -2.369802474975586
    6. 'faire' → logprob: -2.619802474975586
    7. ' couper' → logprob: -3.619802474975586
    8. 'cut' → logprob: -4.494802474975586
    9. 'continue' → logprob: -4.744802474975586
    10. '```' → logprob: -4.744802474975586

Token 3556: ' tous' (ID: 10688)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6102184057235718
    2. '<|end|>' → logprob: -1.6102184057235718
    3. '_' → logprob: -1.8602184057235718
    4. ']' → logprob: -2.1102185249328613
    5. '#' → logprob: -2.4852185249328613
    6. '   ' → logprob: -2.7352185249328613
    7. '
' → logprob: -2.9852185249328613
    8. ' ' → logprob: -3.3602185249328613
    9. '[' → logprob: -4.235218524932861
    10. '...' → logprob: -4.610218524932861

Token 3557: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17349497973918915
    2. 'les' → logprob: -2.423495054244995
    3. ' les' → logprob: -3.673495054244995
    4. ':' → logprob: -4.298494815826416
    5. '```' → logprob: -5.173494815826416
    6. '   ' → logprob: -5.298494815826416
    7. ' _' → logprob: -6.048494815826416
    8. ' ' → logprob: -6.298494815826416
    9. '.' → logprob: -6.298494815826416
    10. ')' → logprob: -6.423494815826416

Token 3558: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.11228810995817184
    2. '_' → logprob: -2.737287998199463
    3. 'arb' → logprob: -3.362287998199463
    4. 'trees' → logprob: -5.987287998199463
    5. ' ' → logprob: -7.237287998199463
    6. '\' → logprob: -7.737287998199463
    7. 'ar' → logprob: -7.862287998199463
    8. '#' → logprob: -8.112288475036621
    9. 'for' → logprob: -8.112288475036621
    10. '\n' → logprob: -8.237288475036621

Token 3559: ' mais' (ID: 2899)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029444269835948944
    2. 'import' → logprob: -4.029444217681885
    3. ')' → logprob: -5.529444217681885
    4. ':' → logprob: -6.279444217681885
    5. 'from' → logprob: -6.654444217681885
    6. '.' → logprob: -7.279444217681885
    7. '...' → logprob: -7.654444217681885
    8. '#' → logprob: -7.779444217681885
    9. ',' → logprob: -7.904444217681885
    10. '
' → logprob: -7.904444217681885

Token 3560: ' uniquement' (ID: 65527)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4051510989665985
    2. ' seulement' → logprob: -2.405151128768921
    3. 'import' → logprob: -2.530151128768921
    4. 'se' → logprob: -2.905151128768921
    5. 'pas' → logprob: -3.780151128768921
    6. 'que' → logprob: -4.405150890350342
    7. ' uniquement' → logprob: -4.530150890350342
    8. '```' → logprob: -4.655150890350342
    9. 'contin' → logprob: -4.905150890350342
    10. 'only' → logprob: -5.405150890350342

Token 3561: ' ceux' (ID: 26863)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.7467057704925537
    2. ' celles' → logprob: -1.8717057704925537
    3. ' ceux' → logprob: -1.8717057704925537
    4. '#' → logprob: -1.9967057704925537
    5. 'ce' → logprob: -1.9967057704925537
    6. 'celle' → logprob: -2.1217057704925537
    7. 'cel' → logprob: -2.8717057704925537
    8. '```' → logprob: -3.2467057704925537
    9. 'import' → logprob: -5.371706008911133
    10. 'c' → logprob: -5.871706008911133

Token 3562: ' nécessaires' (ID: 74402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3059678077697754
    2. ' nécessaires' → logprob: -2.3059678077697754
    3. 'import' → logprob: -2.3059678077697754
    4. '.' → logprob: -2.5559678077697754
    5. 'needed' → logprob: -2.8059678077697754
    6. '_needed' → logprob: -2.8059678077697754
    7. '<|end|>' → logprob: -2.9309678077697754
    8. 'necessary' → logprob: -3.5559678077697754
    9. ')' → logprob: -3.5559678077697754
    10. '#' → logprob: -3.5559678077697754

Token 3563: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05453037470579147
    2. ':' → logprob: -3.679530382156372
    3. 'import' → logprob: -4.554530143737793
    4. ')' → logprob: -5.554530143737793
    5. '.' → logprob: -5.804530143737793
    6. 'from' → logprob: -6.054530143737793
    7. '<|end|>' → logprob: -6.679530143737793
    8. ':
' → logprob: -6.804530143737793
    9. ']' → logprob: -7.054530143737793
    10. '#' → logprob: -7.304530143737793

Token 3564: ' assurer' (ID: 77791)
  Prédit: 'ouvrir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ouvrir' → logprob: -1.3609241247177124
    2. 'pass' → logprob: -1.4859241247177124
    3. 'cr' → logprob: -1.7359241247177124
    4. 'connect' → logprob: -2.235924243927002
    5. 'per' → logprob: -3.735924243927002
    6. 'r' → logprob: -3.860924243927002
    7. 'tr' → logprob: -3.860924243927002
    8. 'contin' → logprob: -3.860924243927002
    9. 'ré' → logprob: -3.985924243927002
    10. '   ' → logprob: -4.110924243927002

Token 3565: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5231314897537231
    2. 'la' → logprob: -1.2731314897537231
    3. 'le' → logprob: -2.6481313705444336
    4. 'l' → logprob: -3.5231313705444336
    5. 'un' → logprob: -4.523131370544434
    6. 'une' → logprob: -4.773131370544434
    7. ' la' → logprob: -6.148131370544434
    8. '#' → logprob: -6.273131370544434
    9. '```' → logprob: -7.148131370544434
    10. 'import' → logprob: -7.398131370544434

Token 3566: ' connect' (ID: 4837)
  Prédit: 'connexion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connexion' → logprob: -0.4712834060192108
    2. 'pass' → logprob: -1.7212834358215332
    3. 'conn' → logprob: -2.596283435821533
    4. 'che' → logprob: -2.721283435821533
    5. 'connection' → logprob: -3.471283435821533
    6. 'connect' → logprob: -4.221283435821533
    7. '   ' → logprob: -5.721283435821533
    8. '```' → logprob: -6.096283435821533
    9. '#' → logprob: -6.971283435821533
    10. 'contin' → logprob: -6.971283435821533

Token 3567: 'ivité' (ID: 73445)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.43373364210128784
    2. 'ivité' → logprob: -1.0587337017059326
    3. 'ivity' → logprob: -5.6837334632873535
    4. 'ité' → logprob: -7.8087334632873535
    5. 'iv' → logprob: -8.433733940124512
    6. 'é' → logprob: -8.683733940124512
    7. 'ivit' → logprob: -8.933733940124512
    8. 'import' → logprob: -9.058733940124512
    9. '#' → logprob: -9.058733940124512
    10. '```' → logprob: -9.308733940124512

Token 3568: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2007371038198471
    2. 'import' → logprob: -1.9507371187210083
    3. 'from' → logprob: -4.075736999511719
    4. ')' → logprob: -4.575736999511719
    5. '...' → logprob: -5.950736999511719
    6. '
' → logprob: -6.075736999511719
    7. '#' → logprob: -6.450736999511719
    8. '<|end|>' → logprob: -6.825736999511719
    9. '.' → logprob: -6.950736999511719
    10. '```' → logprob: -7.200736999511719

Token 3569: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1421860307455063
    2. 'import' → logprob: -3.017185926437378
    3. '<|end|>' → logprob: -3.142185926437378
    4. ')' → logprob: -4.017186164855957
    5. '...' → logprob: -4.767186164855957
    6. 'from' → logprob: -5.142186164855957
    7. '#' → logprob: -6.392186164855957
    8. '
' → logprob: -7.017186164855957
    9. '```' → logprob: -7.142186164855957
    10. '<|end|>' → logprob: -7.267186164855957

Token 3570: ' #
' (ID: 21888)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3175131678581238
    2. '   ' → logprob: -1.5675132274627686
    3. 'from' → logprob: -2.8175132274627686
    4. '#' → logprob: -7.1925129890441895
    5. ')' → logprob: -7.1925129890441895
    6. '```' → logprob: -7.1925129890441895
    7. 'pass' → logprob: -7.9425129890441895
    8. '...' → logprob: -7.9425129890441895
    9. 'dist' → logprob: -9.067513465881348
    10. 'def' → logprob: -9.192513465881348

Token 3571: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42007893323898315
    2. '   ' → logprob: -1.295078992843628
    3. 'from' → logprob: -2.795078992843628
    4. '#' → logprob: -6.420078754425049
    5. ')' → logprob: -6.420078754425049
    6. 'pass' → logprob: -7.045078754425049
    7. '...' → logprob: -7.295078754425049
    8. 'def' → logprob: -7.295078754425049
    9. '```' → logprob: -7.420078754425049
    10. ' from' → logprob: -8.170079231262207

Token 3572: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6669982671737671
    2. '   ' → logprob: -0.7919982671737671
    3. 'from' → logprob: -3.7919983863830566
    4. 'dist' → logprob: -5.041998386383057
    5. ')' → logprob: -7.041998386383057
    6. '#' (adapté à ' #') → logprob: -7.291998386383057
    7. 'distance' → logprob: -7.541998386383057
    8. 'heap' → logprob: -8.041997909545898
    9. ' from' → logprob: -8.166997909545898
    10. ' import' → logprob: -8.166997909545898

Token 3573: ' Le' (ID: 2018)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7102733254432678
    2. '   ' → logprob: -0.8352733254432678
    3. 'from' → logprob: -2.835273265838623
    4. ')' → logprob: -5.460273265838623
    5. '#' → logprob: -5.960273265838623
    6. '
' → logprob: -6.585273265838623
    7. 'dist' → logprob: -6.585273265838623
    8. '```' → logprob: -7.085273265838623
    9. '...' → logprob: -7.335273265838623
    10. '    
' → logprob: -7.585273265838623

Token 3574: ' problème' (ID: 35630)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3260542154312134
    2. 'dist' → logprob: -1.8260542154312134
    3. 'from' → logprob: -2.326054096221924
    4. '#' → logprob: -5.326054096221924
    5. '   ' → logprob: -5.326054096221924
    6. 'def' → logprob: -6.076054096221924
    7. 'heap' → logprob: -6.326054096221924
    8. 'distance' → logprob: -6.451054096221924
    9. 'queue' → logprob: -6.951054096221924
    10. '
' → logprob: -7.201054096221924

Token 3575: ' est' (ID: 893)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.257087767124176
    2. '   ' → logprob: -2.1320877075195312
    3. '#' → logprob: -3.6320877075195312
    4. 'from' → logprob: -3.7570877075195312
    5. ':' → logprob: -4.007087707519531
    6. ':
' → logprob: -4.757087707519531
    7. '
' → logprob: -4.882087707519531
    8. '=' → logprob: -5.382087707519531
    9. ' =' → logprob: -5.382087707519531
    10. ' is' → logprob: -6.257087707519531

Token 3576: ' en' (ID: 469)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3258049190044403
    2. 'd' → logprob: -2.4508049488067627
    3. '```' → logprob: -3.0758049488067627
    4. 'de' → logprob: -3.2008049488067627
    5. '   ' → logprob: -3.5758049488067627
    6. 'complex' → logprob: -3.7008049488067627
    7. '#' → logprob: -3.9508049488067627
    8. 'un' → logprob: -5.950804710388184
    9. 'class' → logprob: -6.450804710388184
    10. 'tr' → logprob: -6.450804710388184

Token 3577: ' fait' (ID: 7473)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.5755349397659302
    2. 'fait' → logprob: -1.0755349397659302
    3. 'faite' → logprob: -3.0755348205566406
    4. 'part' → logprob: -4.325534820556641
    5. 'core' → logprob: -5.325534820556641
    6. '#' → logprob: -5.325534820556641
    7. 'continue' → logprob: -5.575534820556641
    8. 'large' → logprob: -5.575534820556641
    9. 'import' → logprob: -5.700534820556641
    10. 'continu' → logprob: -5.825534820556641

Token 3578: ' de' (ID: 334)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6227246522903442
    2. 'de' → logprob: -1.7477246522903442
    3. 'complex' → logprob: -2.3727245330810547
    4. 'd' → logprob: -2.4977245330810547
    5. 'une' → logprob: -3.4977245330810547
    6. '```' → logprob: -4.372724533081055
    7. '#' → logprob: -4.497724533081055
    8. 'class' → logprob: -4.622724533081055
    9. 'à' → logprob: -4.747724533081055
    10. 'cel' → logprob: -5.497724533081055

Token 3579: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.0149743556976318
    2. 'faire' → logprob: -1.5149743556976318
    3. 'rés' → logprob: -1.6399743556976318
    4. '#' → logprob: -2.889974355697632
    5. 'mod' → logprob: -3.514974355697632
    6. 'con' → logprob: -3.639974355697632
    7. 'fait' → logprob: -4.389974594116211
    8. 'impl' → logprob: -4.389974594116211
    9. 're' → logprob: -4.514974594116211
    10. 'contin' → logprob: -5.014974594116211

Token 3580: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.517582893371582
    2. 'import' → logprob: -2.017582893371582
    3. ' un' → logprob: -2.017582893371582
    4. 'le' → logprob: -3.017582893371582
    5. 'une' → logprob: -3.267582893371582
    6. '```' → logprob: -3.892582893371582
    7. ')' → logprob: -4.767582893371582
    8. '   ' → logprob: -6.142582893371582
    9. 'la' → logprob: -6.142582893371582
    10. ''un' → logprob: -6.267582893371582

Token 3581: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.8290188908576965
    2. '#' → logprob: -1.7040188312530518
    3. '```' → logprob: -2.4540188312530518
    4. 'minimum' → logprob: -2.7040188312530518
    5. 'import' → logprob: -3.0790188312530518
    6. 'plus' → logprob: -3.0790188312530518
    7. 'short' → logprob: -3.5790188312530518
    8. 'path' → logprob: -3.9540188312530518
    9. 'min' → logprob: -4.079019069671631
    10. '
' → logprob: -4.329019069671631

Token 3582: ' du' (ID: 1462)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.080511450767517
    2. '.' → logprob: -2.0805115699768066
    3. ' ' → logprob: -3.0805115699768066
    4. ',' → logprob: -3.2055115699768066
    5. ':' → logprob: -3.2055115699768066
    6. '```' → logprob: -3.3305115699768066
    7. '<|end|>' → logprob: -3.4555115699768066
    8. 'from' → logprob: -3.5805115699768066
    9. ' vers' → logprob: -3.5805115699768066
    10. '   ' → logprob: -3.7055115699768066

Token 3583: ' nord' (ID: 35057)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5985890030860901
    2. '```' → logprob: -2.4735889434814453
    3. 's' → logprob: -2.5985889434814453
    4. '(' → logprob: -3.3485889434814453
    5. '(n' → logprob: -3.3485889434814453
    6. '
' → logprob: -3.5985889434814453
    7. '0' → logprob: -3.5985889434814453
    8. 'N' → logprob: -3.8485889434814453
    9. '(s' → logprob: -4.348588943481445
    10. ' nord' → logprob: -4.348588943481445

Token 3584: '-ou' (ID: 192984)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6824012398719788
    2. '-west' → logprob: -1.932401180267334
    3. 'west' → logprob: -2.182401180267334
    4. '-' → logprob: -2.307401180267334
    5. '-
' → logprob: -3.432401180267334
    6. '       ' → logprob: -3.682401180267334
    7. ',' → logprob: -4.057401180267334
    8. 'w' → logprob: -4.182401180267334
    9. 'O' → logprob: -5.307401180267334
    10. '-ou' → logprob: -5.432401180267334

Token 3585: 'est' (ID: 376)
  Prédit: 'est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.23322786390781403
    2. 'uest' → logprob: -1.6082278490066528
    3. 'u' → logprob: -5.608227729797363
    4. 'ou' → logprob: -6.733227729797363
    5. '```' → logprob: -7.233227729797363
    6. 'e' → logprob: -7.483227729797363
    7. '
' → logprob: -7.733227729797363
    8. 'vest' → logprob: -8.483227729797363
    9. 'west' → logprob: -9.233227729797363
    10. 'o' → logprob: -9.733227729797363

Token 3586: ' vers' (ID: 3640)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7699441313743591
    2. '   ' → logprob: -2.019944190979004
    3. 'à' → logprob: -2.269944190979004
    4. ' vers' → logprob: -2.394944190979004
    5. 'au' → logprob: -2.894944190979004
    6. ' à' → logprob: -3.144944190979004
    7. '```' → logprob: -3.769944190979004
    8. ')' → logprob: -4.019944190979004
    9. '       ' → logprob: -4.144944190979004
    10. ' au' → logprob: -4.394944190979004

Token 3587: ' sud' (ID: 10332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.057583700865507126
    2. 'le' → logprob: -3.432583808898926
    3. '#' → logprob: -5.057583808898926
    4. 'l' → logprob: -5.182583808898926
    5. 'la' → logprob: -5.557583808898926
    6. '```' → logprob: -5.557583808898926
    7. '   ' → logprob: -5.932583808898926
    8. '
' → logprob: -7.682583808898926
    9. 'south' → logprob: -9.182583808898926
    10. '       ' → logprob: -9.182583808898926

Token 3588: '-est' (ID: 49572)
  Prédit: '-est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-est' → logprob: -0.02847648411989212
    2. '-' → logprob: -3.9034764766693115
    3. '-ou' → logprob: -5.903476715087891
    4. '```' → logprob: -6.153476715087891
    5. '   ' → logprob: -7.028476715087891
    6. 'est' → logprob: -7.153476715087891
    7. '-east' → logprob: -7.278476715087891
    8. '#' → logprob: -8.40347671508789
    9. '_est' → logprob: -9.15347671508789
    10. '=' → logprob: -10.15347671508789

Token 3589: ' dans' (ID: 2671)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.2904437780380249
    2. '   ' → logprob: -2.0404438972473145
    3. ',' → logprob: -2.9154438972473145
    4. ':' → logprob: -4.6654438972473145
    5. ' avec' → logprob: -4.7904438972473145
    6. 'en' → logprob: -4.7904438972473145
    7. ' vers' → logprob: -5.2904438972473145
    8. '.' → logprob: -5.4154438972473145
    9. ' où' → logprob: -5.4154438972473145
    10. ' (' → logprob: -5.6654438972473145

Token 3590: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.3768938779830933
    2. 'la' → logprob: -1.7518938779830933
    3. 'A' → logprob: -1.8768938779830933
    4. ' la' → logprob: -2.126893997192383
    5. ' un' → logprob: -2.626893997192383
    6. 'le' → logprob: -2.876893997192383
    7. 'un' → logprob: -3.251893997192383
    8. 'l' → logprob: -3.501893997192383
    9. ' A' → logprob: -3.626893997192383
    10. ' une' → logprob: -3.876893997192383

Token 3591: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.31378743052482605
    2. 'grid' → logprob: -2.5637874603271484
    3. '#' → logprob: -3.1887874603271484
    4. 'graph' → logprob: -3.3137874603271484
    5. '   ' → logprob: -3.4387874603271484
    6. '
' → logprob: -3.9387874603271484
    7. '```' → logprob: -4.188787460327148
    8. 'case' → logprob: -4.563787460327148
    9. 'weighted' → logprob: -4.813787460327148
    10. ' grid' → logprob: -5.063787460327148

Token 3592: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1250361204147339
    2. ',' → logprob: -2.0000362396240234
    3. 'où' → logprob: -2.0000362396240234
    4. ' où' → logprob: -2.1250362396240234
    5. ' en' → logprob: -3.0000362396240234
    6. 'en' → logprob: -3.0000362396240234
    7. ' avec' → logprob: -3.1250362396240234
    8. '```' → logprob: -3.3750362396240234
    9. 'avec' → logprob: -3.6250362396240234
    10. '       ' → logprob: -4.125036239624023

Token 3593: ' chaque' (ID: 21194)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.16441941261291504
    2. ' chaque' → logprob: -2.539419412612915
    3. 'le' → logprob: -3.789419412612915
    4. 'cha' → logprob: -4.289419174194336
    5. '#' → logprob: -4.539419174194336
    6. '   ' → logprob: -4.789419174194336
    7. 'cases' → logprob: -5.789419174194336
    8. 'on' → logprob: -5.789419174194336
    9. ' les' → logprob: -6.039419174194336
    10. 'case' → logprob: -6.164419174194336

Token 3594: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.2163570672273636
    2. ' case' → logprob: -2.4663569927215576
    3. '   ' → logprob: -2.5913569927215576
    4. 'cell' → logprob: -4.216357231140137
    5. ' ' → logprob: -5.466357231140137
    6. '#' → logprob: -5.841357231140137
    7. 'car' → logprob: -5.966357231140137
    8. '       ' → logprob: -6.341357231140137
    9. '
' → logprob: -6.591357231140137
    10. '  ' → logprob: -6.966357231140137

Token 3595: ' a' (ID: 261)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4705372452735901
    2. 'cont' → logprob: -2.0955371856689453
    3. 'avec' → logprob: -2.7205371856689453
    4. ' est' → logprob: -3.5955371856689453
    5. '   ' → logprob: -3.7205371856689453
    6. ' avec' → logprob: -3.7205371856689453
    7. 'a' → logprob: -4.095537185668945
    8. '
' → logprob: -4.220537185668945
    9. 'à' → logprob: -4.470537185668945
    10. ',' → logprob: -4.720537185668945

Token 3596: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.010809162631630898
    2. ' un' → logprob: -5.010808944702148
    3. 'une' → logprob: -6.260808944702148
    4. '   ' → logprob: -7.010808944702148
    5. ''un' → logprob: -7.635808944702148
    6. '       ' → logprob: -8.510808944702148
    7. '```' → logprob: -9.260808944702148
    8. 'so' → logprob: -9.385808944702148
    9. '
' → logprob: -9.760808944702148
    10. '_un' → logprob: -10.010808944702148

Token 3597: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4701206088066101
    2. 'co' → logprob: -1.7201206684112549
    3. 'c' → logprob: -2.345120668411255
    4. '   ' → logprob: -3.720120668411255
    5. 'cout' → logprob: -3.970120668411255
    6. '#' → logprob: -4.595120429992676
    7. '
' → logprob: -5.095120429992676
    8. '       ' → logprob: -5.220120429992676
    9. ' coût' → logprob: -5.220120429992676
    10. '```' → logprob: -5.220120429992676

Token 3598: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0072171688079834
    2. '   ' → logprob: -1.8822171688079834
    3. '=' → logprob: -2.8822171688079834
    4. ')' → logprob: -3.0072171688079834
    5. '```' → logprob: -3.1322171688079834
    6. ' =' → logprob: -3.2572171688079834
    7. ',' → logprob: -3.2572171688079834
    8. ' de' → logprob: -3.3822171688079834
    9. '
' → logprob: -3.6322171688079834
    10. '       ' → logprob: -4.0072174072265625

Token 3599: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7715058922767639
    2. '0' → logprob: -1.1465058326721191
    3. ')' → logprob: -3.271505832672119
    4. '=' → logprob: -3.396505832672119
    5. ' ' → logprob: -3.646505832672119
    6. '```' → logprob: -3.646505832672119
    7. '   ' → logprob: -3.771505832672119
    8. 'à' → logprob: -4.771505832672119
    9. ',' → logprob: -5.021505832672119
    10. ' =' → logprob: -5.271505832672119

Token 3600: ' pour' (ID: 1930)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.39731860160827637
    2. ')' → logprob: -1.7723186016082764
    3. ',' → logprob: -2.8973186016082764
    4. '=' → logprob: -3.2723186016082764
    5. '   ' → logprob: -4.1473188400268555
    6. ' =' → logprob: -4.2723188400268555
    7. ' pour' → logprob: -5.1473188400268555
    8. ' or' → logprob: -5.2723188400268555
    9. '),' → logprob: -5.8973188400268555
    10. ' (' → logprob: -6.0223188400268555

Token 3601: ' vide' (ID: 21835)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.697449803352356
    2. 'les' → logprob: -1.947449803352356
    3. 'case' → logprob: -2.5724496841430664
    4. 'des' → logprob: -2.6974496841430664
    5. 'arb' → logprob: -2.9474496841430664
    6. 'ar' → logprob: -3.4474496841430664
    7. 'une' → logprob: -3.6974496841430664
    8. 'l' → logprob: -3.8224496841430664
    9. 'la' → logprob: -3.9474496841430664
    10. 'vide' → logprob: -4.697449684143066

Token 3602: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.822974681854248
    2. ',' → logprob: -0.822974681854248
    3. ' ou' → logprob: -3.697974681854248
    4. '),' → logprob: -4.072974681854248
    5. '```' → logprob: -4.197974681854248
    6. '):' → logprob: -4.822974681854248
    7. '=' → logprob: -4.947974681854248
    8. '
' → logprob: -5.322974681854248
    9. ',
' → logprob: -5.447974681854248
    10. '   ' → logprob: -5.447974681854248

Token 3603: ' temps' (ID: 11160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.48552998900413513
    2. '1' → logprob: -0.9855300188064575
    3. '
' → logprob: -5.860529899597168
    4. '   ' → logprob: -5.985529899597168
    5. ' #' → logprob: -6.610529899597168
    6. '               ' → logprob: -6.860529899597168
    7. ' ' → logprob: -7.360529899597168
    8. ')' → logprob: -7.735529899597168
    9. '       ' → logprob: -8.110529899597168
    10. '                   ' → logprob: -8.110529899597168

Token 3604: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7574141621589661
    2. ')' → logprob: -0.8824141621589661
    3. ' =' → logprob: -2.8824141025543213
    4. 'pour' → logprob: -3.5074141025543213
    5. '   ' → logprob: -5.0074143409729
    6. '```' → logprob: -5.2574143409729
    7. '_' → logprob: -5.6324143409729
    8. 'de' → logprob: -5.8824143409729
    9. ' pour' → logprob: -6.3824143409729
    10. '),' → logprob: -6.6324143409729

Token 3605: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.0009683952084742486
    2. 'cut' → logprob: -8.000967979431152
    3. ' couper' → logprob: -8.250967979431152
    4. '   ' → logprob: -9.375967979431152
    5. ' ' → logprob: -9.750967979431152
    6. 'd' → logprob: -9.750967979431152
    7. '```' → logprob: -10.000967979431152
    8. 'c' → logprob: -10.625967979431152
    9. 'co' → logprob: -11.250967979431152
    10. 'dé' → logprob: -11.375967979431152

Token 3606: ' arbres' (ID: 127011)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7185158729553223
    2. 'les' → logprob: -1.2185158729553223
    3. '_' → logprob: -2.0935158729553223
    4. ' les' → logprob: -3.5935158729553223
    5. ',' → logprob: -4.093515872955322
    6. '),' → logprob: -4.593515872955322
    7. '```' → logprob: -4.593515872955322
    8. '_t' → logprob: -5.093515872955322
    9. ' arbres' → logprob: -5.718515872955322
    10. 'trees' → logprob: -5.843515872955322

Token 3607: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06070695444941521
    2. ',' → logprob: -4.435707092285156
    3. ')
' → logprob: -4.435707092285156
    4. '+' → logprob: -4.810707092285156
    5. '),' → logprob: -5.060707092285156
    6. '
' → logprob: -5.685707092285156
    7. '```' → logprob: -5.810707092285156
    8. '=' → logprob: -5.935707092285156
    9. '):
' → logprob: -6.935707092285156
    10. '   ' → logprob: -6.935707092285156

Token 3608: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.453233540058136
    2. '#' → logprob: -1.8282334804534912
    3. ' #' → logprob: -2.703233480453491
    4. '
' → logprob: -3.203233480453491
    5. ' en' → logprob: -3.703233480453491
    6. ' et' → logprob: -4.95323371887207
    7. ',' → logprob: -4.95323371887207
    8. '       ' → logprob: -5.07823371887207
    9. '"' → logprob: -5.20323371887207
    10. ' où' → logprob: -5.32823371887207

Token 3609: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0881916806101799
    2. 'où' → logprob: -2.9631917476654053
    3. 'on' → logprob: -4.213191509246826
    4. '   ' → logprob: -5.588191509246826
    5. '```' → logprob: -6.213191509246826
    6. ' on' → logprob: -6.213191509246826
    7. ' #' → logprob: -6.463191509246826
    8. 'import' → logprob: -6.463191509246826
    9. 'que' → logprob: -6.963191509246826
    10. ' où' → logprob: -7.463191509246826

Token 3610: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.005740948487073183
    2. '   ' → logprob: -6.130741119384766
    3. ' #' → logprob: -6.505741119384766
    4. 'où' → logprob: -6.880741119384766
    5. '       ' → logprob: -9.005741119384766
    6. '           ' → logprob: -9.130741119384766
    7. 'une' → logprob: -9.505741119384766
    8. ' ' → logprob: -9.505741119384766
    9. '                   ' → logprob: -9.755741119384766
    10. '               ' → logprob: -9.755741119384766

Token 3611: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.007237075362354517
    2. 'où' → logprob: -5.757236957550049
    3. '   ' → logprob: -6.507236957550049
    4. ' #' → logprob: -6.632236957550049
    5. '       ' → logprob: -9.007237434387207
    6. '           ' → logprob: -9.382237434387207
    7. 'co' → logprob: -9.507237434387207
    8. '
' → logprob: -9.632237434387207
    9. ' où' → logprob: -9.757237434387207
    10. ' ' → logprob: -9.757237434387207

Token 3612: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0041952175088226795
    2. 'où' → logprob: -6.129195213317871
    3. '   ' → logprob: -6.629195213317871
    4. ' #' → logprob: -8.379195213317871
    5. 'on' → logprob: -9.879195213317871
    6. '       ' → logprob: -9.879195213317871
    7. '           ' → logprob: -10.129195213317871
    8. 'faire' → logprob: -10.754195213317871
    9. ' ' → logprob: -10.879195213317871
    10. 'une' → logprob: -11.004195213317871

Token 3613: ' cherche' (ID: 52345)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14475606381893158
    2. 'continue' → logprob: -3.2697560787200928
    3. 'import' → logprob: -3.5197560787200928
    4. '
' → logprob: -4.019755840301514
    5. 'util' → logprob: -5.019755840301514
    6. 'do' → logprob: -5.019755840301514
    7. ' doit' → logprob: -5.144755840301514
    8. 'pe' → logprob: -5.644755840301514
    9. ' #' → logprob: -5.769755840301514
    10. 'from' → logprob: -5.894755840301514

Token 3614: ' le' (ID: 505)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8238918781280518
    2. 'le' → logprob: -2.3238918781280518
    3. ' un' → logprob: -2.3238918781280518
    4. ' le' → logprob: -2.5738918781280518
    5. 'un' → logprob: -2.6988918781280518
    6. ' à' → logprob: -2.6988918781280518
    7. 'import' → logprob: -3.9488918781280518
    8. '   ' → logprob: -4.073891639709473
    9. ' de' → logprob: -4.198891639709473
    10. ')' → logprob: -4.323891639709473

Token 3615: ' chemin' (ID: 45035)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -1.2867381572723389
    2. 'co' → logprob: -1.5367381572723389
    3. 'che' → logprob: -1.7867381572723389
    4. 'plus' → logprob: -2.161738157272339
    5. 'min' → logprob: -2.286738157272339
    6. 'minimal' → logprob: -2.661738157272339
    7. 'import' → logprob: -4.536738395690918
    8. 'me' → logprob: -5.286738395690918
    9. 'short' → logprob: -5.411738395690918
    10. 'cost' → logprob: -5.786738395690918

Token 3616: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3966491222381592
    2. '```' → logprob: -1.7716491222381592
    3. '=' → logprob: -2.396649122238159
    4. '_' → logprob: -2.521649122238159
    5. 'with' → logprob: -3.021649122238159
    6. 'import' → logprob: -3.396649122238159
    7. '   ' → logprob: -3.521649122238159
    8. ' ' → logprob: -3.771649122238159
    9. ' avec' → logprob: -3.896649122238159
    10. ',' → logprob: -4.146649360656738

Token 3617: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4879350662231445
    2. '   ' → logprob: -1.9879350662231445
    3. '```' → logprob: -2.3629350662231445
    4. 'import' → logprob: -2.6129350662231445
    5. '_' → logprob: -3.1129350662231445
    6. ')' → logprob: -3.1129350662231445
    7. ' =' → logprob: -3.2379350662231445
    8. '=' → logprob: -3.8629350662231445
    9. '
' → logprob: -3.8629350662231445
    10. '.' → logprob: -3.8629350662231445

Token 3618: 's' (ID: 82)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.810200810432434
    2. 'min' → logprob: -2.3102006912231445
    3. 'co' → logprob: -2.5602006912231445
    4. ')' → logprob: -2.6852006912231445
    5. 'temps' → logprob: -2.6852006912231445
    6. '```' → logprob: -2.8102006912231445
    7. 'possible' → logprob: -2.9352006912231445
    8. '#' → logprob: -2.9352006912231445
    9. '1' → logprob: -3.1852006912231445
    10. 'à' → logprob: -3.8102006912231445

Token 3619: 'omme' (ID: 30420)
  Prédit: 'hort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hort' → logprob: -1.4737974405288696
    2. 'ans' → logprob: -2.22379732131958
    3. ')' → logprob: -2.84879732131958
    4. '   ' → logprob: -2.97379732131958
    5. 'um' → logprob: -3.09879732131958
    6. '=' → logprob: -3.22379732131958
    7. ')
' → logprob: -3.34879732131958
    8. ' =' → logprob: -3.34879732131958
    9. '}' → logprob: -3.34879732131958
    10. '{
' → logprob: -3.59879732131958

Token 3620: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2702099084854126
    2. ' des' → logprob: -1.6452099084854126
    3. 'des' → logprob: -1.7702099084854126
    4. '```' → logprob: -2.770209789276123
    5. ' de' → logprob: -2.895209789276123
    6. '_des' → logprob: -3.145209789276123
    7. 'de' → logprob: -3.270209789276123
    8. ')' → logprob: -3.270209789276123
    9. '+' → logprob: -4.020209789276123
    10. '_of' → logprob: -4.395209789276123

Token 3621: ' coûts' (ID: 116912)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6202539205551147
    2. 'co' → logprob: -0.9952539205551147
    3. 'cout' → logprob: -3.2452540397644043
    4. 'dist' → logprob: -4.620254039764404
    5. 'temps' → logprob: -4.620254039764404
    6. 'weights' → logprob: -5.120254039764404
    7. ' coûts' → logprob: -5.370254039764404
    8. ' ' → logprob: -5.870254039764404
    9. 'time' → logprob: -6.245254039764404
    10. 'cuts' → logprob: -6.245254039764404

Token 3622: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07819881290197372
    2. '+' → logprob: -3.3281989097595215
    3. ' +' → logprob: -3.9531989097595215
    4. ')
' → logprob: -5.7031989097595215
    5. 'possible' → logprob: -6.0781989097595215
    6. ')+' → logprob: -6.2031989097595215
    7. ',' → logprob: -6.5781989097595215
    8. '   ' → logprob: -6.8281989097595215
    9. ' )' → logprob: -6.9531989097595215
    10. '_possible' → logprob: -6.9531989097595215

Token 3623: ' déplacements' (ID: 193957)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0072965621948242
    2. ' déplacements' → logprob: -1.5072965621948242
    3. 'le' → logprob: -1.8822965621948242
    4. 'distance' → logprob: -3.007296562194824
    5. 'dé' → logprob: -3.007296562194824
    6. ' déplacement' → logprob: -3.007296562194824
    7. 'les' → logprob: -3.757296562194824
    8. ' le' → logprob: -3.882296562194824
    9. 'dist' → logprob: -4.132296562194824
    10. ' ' → logprob: -4.257296562194824

Token 3624: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023118633776903152
    2. '+' → logprob: -4.898118495941162
    3. '   ' → logprob: -5.648118495941162
    4. ' +' → logprob: -5.773118495941162
    5. '=' → logprob: -6.273118495941162
    6. ')+' → logprob: -6.898118495941162
    7. ' )' → logprob: -7.148118495941162
    8. '[i' → logprob: -7.398118495941162
    9. ' =' → logprob: -7.648118495941162
    10. ')
' → logprob: -8.14811897277832

Token 3625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013072106055915356
    2. 'import' → logprob: -4.7630720138549805
    3. '
' → logprob: -5.8880720138549805
    4. ')' → logprob: -7.3880720138549805
    5. 'from' → logprob: -8.26307201385498
    6. '    
' → logprob: -8.38807201385498
    7. '```' → logprob: -9.26307201385498
    8. '...' → logprob: -9.38807201385498
    9. '#' → logprob: -9.63807201385498
    10. ',' → logprob: -9.76307201385498

Token 3626: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11100218445062637
    2. 'import' → logprob: -2.361002206802368
    3. '
' → logprob: -5.611001968383789
    4. 'from' → logprob: -6.361001968383789
    5. '```' → logprob: -6.361001968383789
    6. ' import' → logprob: -6.986001968383789
    7. 'dist' → logprob: -6.986001968383789
    8. ')' → logprob: -7.611001968383789
    9. '    
' → logprob: -7.986001968383789
    10. ' from' → logprob: -8.736001968383789

Token 3627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01706089824438095
    2. 'import' → logprob: -4.26706075668335
    3. '```' → logprob: -6.51706075668335
    4. ')' → logprob: -8.017061233520508
    5. 'from' → logprob: -8.267061233520508
    6. '
' → logprob: -8.267061233520508
    7. '    
' → logprob: -9.017061233520508
    8. ' import' → logprob: -9.267061233520508
    9. ':' → logprob: -10.017061233520508
    10. ',' → logprob: -10.017061233520508

Token 3628: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12004359811544418
    2. 'import' → logprob: -2.2450435161590576
    3. 'from' → logprob: -6.370043754577637
    4. 'dist' → logprob: -6.495043754577637
    5. ' import' → logprob: -6.995043754577637
    6. ')' → logprob: -7.120043754577637
    7. '```' → logprob: -7.870043754577637
    8. '
' → logprob: -8.245043754577637
    9. '#' (adapté à ' #') → logprob: -8.495043754577637
    10. '    
' → logprob: -8.620043754577637

Token 3629: ' Solution' (ID: 20858)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2214239537715912
    2. 'import' → logprob: -1.7214239835739136
    3. '
' → logprob: -4.971424102783203
    4. 'from' → logprob: -5.471424102783203
    5. '```' → logprob: -6.096424102783203
    6. ')' → logprob: -6.846424102783203
    7. 'dist' → logprob: -6.846424102783203
    8. '#' → logprob: -7.096424102783203
    9. ' import' → logprob: -7.221424102783203
    10. 'def' → logprob: -7.846424102783203

Token 3630: ' adéqu' (ID: 158942)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.305276095867157
    2. '   ' → logprob: -2.1802761554718018
    3. ':' → logprob: -2.4302761554718018
    4. 'from' → logprob: -3.5552761554718018
    5. ':
' → logprob: -4.555275917053223
    6. ' =' → logprob: -4.680275917053223
    7. '```' → logprob: -5.305275917053223
    8. '
' → logprob: -5.805275917053223
    9. ' import' → logprob: -6.055275917053223
    10. '):' → logprob: -7.555275917053223

Token 3631: 'ate' (ID: 379)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43519988656044006
    2. '   ' → logprob: -1.5601998567581177
    3. 'def' → logprob: -2.6851999759674072
    4. ' =' → logprob: -3.4351999759674072
    5. ':
' → logprob: -4.310199737548828
    6. '=' → logprob: -4.435199737548828
    7. ' :' → logprob: -5.185199737548828
    8. 'import' → logprob: -6.060199737548828
    9. '       ' → logprob: -6.560199737548828
    10. '  ' → logprob: -6.810199737548828

Token 3632: ':
' (ID: 734)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7136668562889099
    2. ':' → logprob: -0.8386668562889099
    3. '   ' → logprob: -3.0886669158935547
    4. '```' → logprob: -5.088666915893555
    5. 'from' → logprob: -5.213666915893555
    6. ':
' → logprob: -5.213666915893555
    7. ' =' → logprob: -5.588666915893555
    8. ' :' → logprob: -6.088666915893555
    9. ' import' → logprob: -6.338666915893555
    10. ',' → logprob: -6.588666915893555

Token 3633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03939933329820633
    2. 'import' → logprob: -3.4143993854522705
    3. '```' → logprob: -5.664399147033691
    4. 'from' → logprob: -7.039399147033691
    5. ' import' → logprob: -7.539399147033691
    6. '
' → logprob: -8.289399147033691
    7. ' from' → logprob: -8.539399147033691
    8. 'dist' → logprob: -8.789399147033691
    9. '    
' → logprob: -9.664399147033691
    10. '``' → logprob: -10.039399147033691

Token 3634: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34190046787261963
    2. 'import' → logprob: -1.3419004678726196
    3. 'dist' → logprob: -4.21690034866333
    4. '```' → logprob: -5.09190034866333
    5. 'from' → logprob: -5.59190034866333
    6. '
' → logprob: -6.84190034866333
    7. ' import' → logprob: -7.09190034866333
    8. 'cost' → logprob: -7.96690034866333
    9. '``' → logprob: -8.216900825500488
    10. '       ' → logprob: -8.466900825500488

Token 3635: ' Faire' (ID: 104849)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20138603448867798
    2. 'import' → logprob: -1.8263859748840332
    3. '```' → logprob: -4.451385974884033
    4. 'from' → logprob: -5.201385974884033
    5. 'dist' → logprob: -6.826385974884033
    6. ' import' → logprob: -7.201385974884033
    7. ' from' → logprob: -7.451385974884033
    8. '
' → logprob: -7.576385974884033
    9. '``' → logprob: -7.576385974884033
    10. '#' → logprob: -8.201386451721191

Token 3636: ' un' (ID: 537)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.009000258520245552
    2. 'from' → logprob: -5.009000301361084
    3. 'dist' → logprob: -6.634000301361084
    4. '   ' → logprob: -7.759000301361084
    5. '```' → logprob: -8.133999824523926
    6. 'a' → logprob: -8.758999824523926
    7. ' import' → logprob: -10.383999824523926
    8. 'heap' → logprob: -10.633999824523926
    9. 'distance' → logprob: -11.758999824523926
    10. '
' → logprob: -12.133999824523926

Token 3637: ' D' (ID: 415)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03716030344367027
    2. 'from' → logprob: -3.5371603965759277
    3. 'heap' → logprob: -5.037160396575928
    4. 'dist' → logprob: -7.912160396575928
    5. 'd' → logprob: -8.28715991973877
    6. 'def' → logprob: -9.16215991973877
    7. '```' → logprob: -9.53715991973877
    8. '   ' → logprob: -10.41215991973877
    9. 'D' → logprob: -10.78715991973877
    10. '
' → logprob: -11.16215991973877

Token 3638: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.001666611758992076
    2. 'ijk' → logprob: -6.62666654586792
    3. 'ij' → logprob: -9.001667022705078
    4. 'jik' → logprob: -9.126667022705078
    5. 'jk' → logprob: -9.501667022705078
    6. 'j' → logprob: -10.876667022705078
    7. '```' → logprob: -12.501667022705078
    8. '   ' → logprob: -12.751667022705078
    9. 'ijks' → logprob: -12.876667022705078
    10. 'i' → logprob: -13.251667022705078

Token 3639: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028186898678541183
    2. 'import' → logprob: -3.653186798095703
    3. '
' → logprob: -7.778186798095703
    4. 'from' → logprob: -7.903186798095703
    5. ':' → logprob: -8.403186798095703
    6. '       ' → logprob: -8.778186798095703
    7. '```' → logprob: -8.778186798095703
    8. ' import' → logprob: -8.903186798095703
    9. 'dist' → logprob: -9.278186798095703
    10. ':
' → logprob: -9.778186798095703

Token 3640: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1581199169158936
    2. 'dist' → logprob: -1.5331199169158936
    3. 'import' → logprob: -1.9081199169158936
    4. '0' → logprob: -2.9081199169158936
    5. 'cost' → logprob: -2.9081199169158936
    6. '```' → logprob: -2.9081199169158936
    7. 'heap' → logprob: -2.9081199169158936
    8. 'queue' → logprob: -3.5331199169158936
    9. ' dist' → logprob: -4.158120155334473
    10. ' (' → logprob: -4.658120155334473

Token 3641: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11420658230781555
    2. ' chaque' → logprob: -3.489206552505493
    3. 'case' → logprob: -3.614206552505493
    4. 'ch' → logprob: -4.614206790924072
    5. 'cost' → logprob: -4.614206790924072
    6. '(i' → logprob: -4.864206790924072
    7. 'each' → logprob: -5.614206790924072
    8. ' i' → logprob: -5.989206790924072
    9. 'dist' → logprob: -6.114206790924072
    10. '   ' → logprob: -6.364206790924072

Token 3642: ' case' (ID: 1890)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7823667526245117
    2. ' i' → logprob: -1.9073667526245117
    3. 'case' → logprob: -1.9073667526245117
    4. ' (' → logprob: -2.0323667526245117
    5. 'cell' → logprob: -2.4073667526245117
    6. 'position' → logprob: -2.7823667526245117
    7. ' case' → logprob: -2.7823667526245117
    8. '   ' → logprob: -2.9073667526245117
    9. '(i' → logprob: -3.6573667526245117
    10. 'neighbor' → logprob: -4.032366752624512

Token 3643: ' :
' (ID: 10039)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2024315893650055
    2. ' on' → logprob: -3.3274316787719727
    3. ' (' → logprob: -3.8274316787719727
    4. '       ' → logprob: -3.8274316787719727
    5. ' ' → logprob: -3.9524316787719727
    6. '           ' → logprob: -4.077431678771973
    7. '  ' → logprob: -4.702431678771973
    8. '    ' → logprob: -4.952431678771973
    9. '               ' → logprob: -5.077431678771973
    10. '#' → logprob: -5.077431678771973

Token 3645: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5344722270965576
    2. '#' (adapté à ' #') → logprob: -2.0344722270965576
    3. ' #' → logprob: -2.5344722270965576
    4. ' (' → logprob: -3.6594722270965576
    5. ' on' → logprob: -3.7844722270965576
    6. ' ' → logprob: -3.7844722270965576
    7. '           ' → logprob: -3.9094722270965576
    8. '       ' → logprob: -4.034472465515137
    9. '    ' → logprob: -4.284472465515137
    10. ' =' → logprob: -4.409472465515137

Token 3646: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5823344588279724
    2. 'co' → logprob: -1.4573345184326172
    3. '   ' → logprob: -1.9573345184326172
    4. ' #' → logprob: -4.832334518432617
    5. 'on' → logprob: -4.957334518432617
    6. 'cout' → logprob: -4.957334518432617
    7. 'cost' → logprob: -4.957334518432617
    8. 'c' → logprob: -5.457334518432617
    9. ' on' → logprob: -5.582334518432617
    10. '       ' → logprob: -5.582334518432617

Token 3647: ' si' (ID: 1784)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.8524431586265564
    2. 'on' → logprob: -1.7274432182312012
    3. ' on' → logprob: -1.7274432182312012
    4. 'le' → logprob: -2.977443218231201
    5. 'cost' → logprob: -2.977443218231201
    6. '   ' → logprob: -3.477443218231201
    7. ' le' → logprob: -3.977443218231201
    8. 'dist' → logprob: -4.352443218231201
    9. ' la' → logprob: -4.977443218231201
    10. '#' → logprob: -4.977443218231201

Token 3648: ' case' (ID: 1890)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.016112608835101128
    2. ' A' → logprob: -4.141112804412842
    3. 'not' → logprob: -10.266112327575684
    4. '   ' → logprob: -10.891112327575684
    5. ' not' → logprob: -11.891112327575684
    6. ' ' → logprob: -12.016112327575684
    7. '0' → logprob: -12.641112327575684
    8. '```' → logprob: -13.016112327575684
    9. '`' → logprob: -13.891112327575684
    10. '  ' → logprob: -14.141112327575684

Token 3649: ' vide' (ID: 21835)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7253291606903076
    2. 'vide' → logprob: -1.3503291606903076
    3. ' est' → logprob: -2.2253291606903076
    4. ' vide' → logprob: -2.3503291606903076
    5. '==' → logprob: -4.100329399108887
    6. ' ' → logprob: -5.100329399108887
    7. 'est' → logprob: -5.600329399108887
    8. ' =' → logprob: -5.850329399108887
    9. ' is' → logprob: -5.850329399108887
    10. '```' → logprob: -5.975329399108887

Token 3650: ':' (ID: 25)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.028240444138646126
    2. ':' → logprob: -4.27824068069458
    3. '==' → logprob: -4.90324068069458
    4. ' =' → logprob: -5.77824068069458
    5. ' !=' → logprob: -7.02824068069458
    6. ' :' → logprob: -7.52824068069458
    7. ' (' → logprob: -7.90324068069458
    8. ' ' → logprob: -8.153240203857422
    9. '=' → logprob: -8.153240203857422
    10. ' or' → logprob: -8.528240203857422

Token 3651: ' coût' (ID: 73109)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.216628909111023
    2. ' cost' → logprob: -1.216628909111023
    3. '0' → logprob: -2.3416290283203125
    4. 'cost' → logprob: -2.4666290283203125
    5. '   ' → logprob: -2.5916290283203125
    6. ' c' → logprob: -3.9666290283203125
    7. '    ' → logprob: -4.3416290283203125
    8. ' co' → logprob: -4.4666290283203125
    9. ' on' → logprob: -4.5916290283203125
    10. ' =' → logprob: -4.7166290283203125

Token 3652: ' déplacement' (ID: 138449)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05721168965101242
    2. '=' → logprob: -2.9322116374969482
    3. ' ' → logprob: -6.557211875915527
    4. ':' → logprob: -8.432211875915527
    5. '1' → logprob: -8.807211875915527
    6. '0' → logprob: -8.807211875915527
    7. '   ' → logprob: -9.057211875915527
    8. ' ==' → logprob: -9.057211875915527
    9. ' +=' → logprob: -9.432211875915527
    10. ' est' → logprob: -10.932211875915527

Token 3653: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17315338551998138
    2. '=' → logprob: -2.0481534004211426
    3. ':' → logprob: -3.9231534004211426
    4. '1' → logprob: -5.673153400421143
    5. ' +' → logprob: -5.798153400421143
    6. '+' → logprob: -6.673153400421143
    7. '   ' → logprob: -6.798153400421143
    8. ' ' → logprob: -7.923153400421143
    9. ' ==' → logprob: -8.173152923583984
    10. ' :' → logprob: -8.298152923583984

Token 3654: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15253421664237976
    2. '1' → logprob: -2.527534246444702
    3. ' =' → logprob: -2.902534246444702
    4. '0' → logprob: -5.152534008026123
    5. ' ' → logprob: -7.027534008026123
    6. '   ' → logprob: -11.152534484863281
    7. ':' → logprob: -11.152534484863281
    8. '==' → logprob: -11.277534484863281
    9. '```' → logprob: -11.902534484863281
    10. '+' → logprob: -12.527534484863281

Token 3655: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42439231276512146
    2. ',' → logprob: -2.4243922233581543
    3. '
' → logprob: -2.5493922233581543
    4. ':' → logprob: -2.6743922233581543
    5. 'else' → logprob: -3.9243922233581543
    6. ')' → logprob: -4.049392223358154
    7. ',
' → logprob: -4.174392223358154
    8. ' else' → logprob: -5.049392223358154
    9. 'elif' → logprob: -5.049392223358154
    10. '+' → logprob: -5.299392223358154

Token 3656: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11680794507265091
    2. '           ' → logprob: -3.2418079376220703
    3. '#' → logprob: -3.3668079376220703
    4. 'else' → logprob: -4.24180793762207
    5. '-' → logprob: -5.24180793762207
    6. ',' → logprob: -5.61680793762207
    7. ':' → logprob: -5.99180793762207
    8. '               ' → logprob: -6.24180793762207
    9. '       ' → logprob: -6.49180793762207
    10. ' ' → logprob: -6.61680793762207

Token 3657: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6135302186012268
    2. '   ' → logprob: -1.613530158996582
    3. 'else' → logprob: -1.738530158996582
    4. '#' (adapté à ' #') → logprob: -3.238530158996582
    5. '           ' → logprob: -3.613530158996582
    6. ' ' → logprob: -5.363530158996582
    7. 'elif' → logprob: -5.988530158996582
    8. ' else' → logprob: -6.113530158996582
    9. ',' → logprob: -6.363530158996582
    10. ' -' → logprob: -6.613530158996582

Token 3658: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.024208009243011475
    2. '-' → logprob: -4.274208068847656
    3. 'else' → logprob: -5.524208068847656
    4. '           ' → logprob: -6.149208068847656
    5. '               ' → logprob: -6.399208068847656
    6. '   ' → logprob: -6.399208068847656
    7. 'elif' → logprob: -8.774208068847656
    8. '                   ' → logprob: -9.024208068847656
    9. ' ' → logprob: -9.399208068847656
    10. ' #' → logprob: -9.774208068847656

Token 3659: ' si' (ID: 1784)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0063002109527588
    2. 'if' → logprob: -1.0063002109527588
    3. 'si' → logprob: -1.7563002109527588
    4. 'case' → logprob: -2.631300210952759
    5. 'elif' → logprob: -4.63129997253418
    6. '           ' → logprob: -5.00629997253418
    7. '               ' → logprob: -6.25629997253418
    8. '   ' → logprob: -6.25629997253418
    9. 's' → logprob: -6.63129997253418
    10. '-' → logprob: -7.13129997253418

Token 3660: ' case' (ID: 1890)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05920673534274101
    2. ' A' → logprob: -2.93420672416687
    3. 'case' → logprob: -5.559206962585449
    4. '   ' → logprob: -8.43420696258545
    5. ' case' → logprob: -8.55920696258545
    6. ' ' → logprob: -10.43420696258545
    7. '  ' → logprob: -12.43420696258545
    8. '       ' → logprob: -12.68420696258545
    9. '               ' → logprob: -12.93420696258545
    10. '    ' → logprob: -13.05920696258545

Token 3661: ' avec' (ID: 3937)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.019519951194524765
    2. 'avec' → logprob: -4.644519805908203
    3. ' vide' → logprob: -5.519519805908203
    4. 'empty' → logprob: -6.644519805908203
    5. 'with' → logprob: -6.769519805908203
    6. 'ar' → logprob: -6.769519805908203
    7. 'vid' → logprob: -7.394519805908203
    8. 'à' → logprob: -7.894519805908203
    9. 'arb' → logprob: -7.894519805908203
    10. '   ' → logprob: -8.394519805908203

Token 3662: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.003633804153650999
    2. '0' → logprob: -6.128633975982666
    3. ' arbres' → logprob: -7.128633975982666
    4. '>' → logprob: -8.253633499145508
    5. 'trees' → logprob: -8.378633499145508
    6. ' ' → logprob: -9.253633499145508
    7. 'ar' → logprob: -10.253633499145508
    8. '   ' → logprob: -10.878633499145508
    9. '```' → logprob: -13.503633499145508
    10. 'des' → logprob: -14.003633499145508

Token 3663: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01234129536896944
    2. '=' → logprob: -5.387341499328613
    3. '==' → logprob: -5.637341499328613
    4. ' ==' → logprob: -5.762341499328613
    5. '>' → logprob: -7.637341499328613
    6. ' =' → logprob: -8.637341499328613
    7. ' >' → logprob: -8.887341499328613
    8. ':
' → logprob: -9.262341499328613
    9. '   ' → logprob: -10.637341499328613
    10. ' :' → logprob: -10.762341499328613

Token 3664: ' le' (ID: 505)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.11222396045923233
    2. '1' → logprob: -3.2372238636016846
    3. 'cost' → logprob: -3.6122238636016846
    4. '   ' → logprob: -4.237224102020264
    5. 'cout' → logprob: -5.237224102020264
    6. '       ' → logprob: -5.362224102020264
    7. ' coût' → logprob: -5.487224102020264
    8. '           ' → logprob: -6.112224102020264
    9. 'c' → logprob: -6.112224102020264
    10. '0' → logprob: -6.237224102020264

Token 3665: ' coût' (ID: 73109)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.8890165090560913
    2. 'co' → logprob: -2.014016628265381
    3. 'cost' → logprob: -2.014016628265381
    4. '+' → logprob: -2.514016628265381
    5. ' cost' → logprob: -2.639016628265381
    6. ' #' → logprob: -2.764016628265381
    7. '*' → logprob: -3.139016628265381
    8. ' coût' → logprob: -3.264016628265381
    9. ' +' → logprob: -3.389016628265381
    10. ' ' → logprob: -3.764016628265381

Token 3666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40369054675102234
    2. '=' → logprob: -1.7786905765533447
    3. ' de' → logprob: -2.0286905765533447
    4. 'de' → logprob: -4.903690338134766
    5. ':' → logprob: -5.153690338134766
    6. ' pour' → logprob: -5.278690338134766
    7. '_de' → logprob: -6.403690338134766
    8. '_c' → logprob: -6.403690338134766
    9. ' to' → logprob: -6.653690338134766
    10. 'pour' → logprob: -6.903690338134766

Token 3667: ' nombre' (ID: 9733)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004115561489015818
    2. ' A' → logprob: -6.129115581512451
    3. '2' → logprob: -7.129115581512451
    4. '(' → logprob: -7.879115581512451
    5. 'nombre' → logprob: -8.254115104675293
    6. 'n' → logprob: -9.004115104675293
    7. '   ' → logprob: -9.129115104675293
    8. '0' → logprob: -9.254115104675293
    9. 'lambda' → logprob: -10.879115104675293
    10. '               ' → logprob: -10.879115104675293

Token 3668: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0008110555354505777
    2. '_de' → logprob: -8.000810623168945
    3. ' _' → logprob: -9.625810623168945
    4. '_ar' → logprob: -9.750810623168945
    5. '   ' → logprob: -10.125810623168945
    6. '*' → logprob: -10.375810623168945
    7. '_d' → logprob: -10.500810623168945
    8. 'd' → logprob: -10.625810623168945
    9. '_of' → logprob: -10.625810623168945
    10. 'de' → logprob: -10.625810623168945

Token 3669: 'arb' (ID: 36740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00519426679238677
    2. '_ar' → logprob: -5.630194187164307
    3. 'arb' → logprob: -7.130194187164307
    4. '_t' → logprob: -7.380194187164307
    5. 'trees' → logprob: -10.130194664001465
    6. '_tree' → logprob: -11.005194664001465
    7. ''_' → logprob: -11.130194664001465
    8. ' arbres' → logprob: -11.380194664001465
    9. 'ar' → logprob: -11.380194664001465
    10. '_s' → logprob: -11.505194664001465

Token 3670: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3490436375141144
    2. 'es' → logprob: -1.349043607711792
    3. '_res' → logprob: -4.849043846130371
    4. '_' → logprob: -4.974043846130371
    5. 're' → logprob: -5.599043846130371
    6. 's' → logprob: -5.724043846130371
    7. '_t' → logprob: -5.849043846130371
    8. 'e' → logprob: -6.099043846130371
    9. '\' → logprob: -6.349043846130371
    10. ''' → logprob: -7.099043846130371

Token 3671: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9296509623527527
    2. ' *' → logprob: -1.4296510219573975
    3. ' +' → logprob: -1.8046510219573975
    4. ':' → logprob: -3.1796510219573975
    5. '*' → logprob: -3.5546510219573975
    6. '):' → logprob: -3.8046510219573975
    7. ' )' → logprob: -4.054650783538818
    8. ' _' → logprob: -4.554650783538818
    9. '_' → logprob: -4.554650783538818
    10. '+' → logprob: -5.054650783538818

Token 3672: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932981610298157
    2. ' (' → logprob: -0.6932981610298157
    3. '1' → logprob: -9.56829833984375
    4. '"' → logprob: -10.81829833984375
    5. '```' → logprob: -11.06829833984375
    6. ''' → logprob: -11.19329833984375
    7. '`' → logprob: -11.44329833984375
    8. ' ' → logprob: -13.06829833984375
    9. '(space' → logprob: -13.31829833984375
    10. ' +' → logprob: -13.44329833984375

Token 3673: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31866371631622314
    2. ' (' → logprob: -1.3186637163162231
    3. '1' → logprob: -5.318663597106934
    4. ' ' → logprob: -8.568663597106934
    5. '0' → logprob: -9.068663597106934
    6. '2' → logprob: -10.193663597106934
    7. '`' → logprob: -10.568663597106934
    8. '```' → logprob: -10.568663597106934
    9. '   ' → logprob: -10.818663597106934
    10. ')' → logprob: -11.631163597106934

Token 3674: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02975720353424549
    2. '*' → logprob: -3.529757261276245
    3. ' ' → logprob: -12.779757499694824
    4. ')' → logprob: -13.779757499694824
    5. '```' → logprob: -13.779757499694824
    6. ' ' → logprob: -14.279757499694824
    7. ' **' → logprob: -14.904757499694824
    8. ' #' → logprob: -15.654757499694824
    9. '**' → logprob: -15.779757499694824
    10. ')*' → logprob: -16.279756546020508

Token 3675: ' minimal' (ID: 19957)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007907546125352383
    2. ' dist' → logprob: -4.882907390594482
    3. 'min' → logprob: -8.25790786743164
    4. '(dist' → logprob: -10.38290786743164
    5. ' min' → logprob: -11.88290786743164
    6. 'distance' → logprob: -12.63290786743164
    7. '```' → logprob: -15.38290786743164
    8. '_dist' → logprob: -15.50790786743164
    9. '	dist' → logprob: -15.50790786743164
    10. '(min' → logprob: -16.25790786743164

Token 3676: ' distance' (ID: 9324)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.32013738155365
    2. '_dist' → logprob: -1.32013738155365
    3. 'distance' → logprob: -1.82013738155365
    4. 'dist' → logprob: -1.82013738155365
    5. ' *' → logprob: -2.3201375007629395
    6. '_distance' → logprob: -3.4451375007629395
    7. ' distance' → logprob: -4.6951375007629395
    8. ' dist' → logprob: -6.4451375007629395
    9. ' _' → logprob: -7.9451375007629395
    10. ' ' → logprob: -8.695137023925781

Token 3677: ' aller' (ID: 18383)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9814203977584839
    2. '_from' → logprob: -0.9814203977584839
    3. '_to' → logprob: -1.6064203977584839
    4. ' +' → logprob: -4.356420516967773
    5. '   ' → logprob: -4.481420516967773
    6. ')' → logprob: -4.981420516967773
    7. 'from' → logprob: -5.356420516967773
    8. 'dep' → logprob: -5.481420516967773
    9. 'to' → logprob: -5.981420516967773
    10. ' ' → logprob: -6.856420516967773

Token 3678: '-ret' (ID: 104824)
  Prédit: '-ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ret' → logprob: -0.0013300024438649416
    2. '_ret' → logprob: -7.3763298988342285
    3. 'ret' → logprob: -7.7513298988342285
    4. '-return' → logprob: -8.501330375671387
    5. '-' → logprob: -10.751330375671387
    6. '-re' → logprob: -11.251330375671387
    7. '   ' → logprob: -12.126330375671387
    8. '-r' → logprob: -12.376330375671387
    9. ' -' → logprob: -12.501330375671387
    10. ',' → logprob: -12.626330375671387

Token 3679: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.33725857734680176
    2. 'et' → logprob: -1.8372585773468018
    3. 'eturn' → logprob: -4.337258338928223
    4. 'o' → logprob: -4.462258338928223
    5. '```' → logprob: -4.837258338928223
    6. 'ot' → logprob: -4.962258338928223
    7. 'etur' → logprob: -5.087258338928223
    8. 'from' → logprob: -5.087258338928223
    9. 'urn' → logprob: -5.212258338928223
    10. 'oi' → logprob: -5.212258338928223

Token 3680: ' vers' (ID: 3640)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2629343271255493
    2. '+' → logprob: -1.5129343271255493
    3. '_from' → logprob: -5.38793420791626
    4. ')' → logprob: -5.76293420791626
    5. '_to' → logprob: -6.88793420791626
    6. ')+' → logprob: -7.38793420791626
    7. '                           ' → logprob: -7.76293420791626
    8. 'from' → logprob: -8.012934684753418
    9. '                               ' → logprob: -8.387934684753418
    10. '                   ' → logprob: -9.262934684753418

Token 3681: ' usine' (ID: 124673)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.04001743346452713
    2. 'case' → logprob: -3.9150173664093018
    3. 'la' → logprob: -4.540017604827881
    4. 'adj' → logprob: -5.290017604827881
    5. 'vo' → logprob: -6.665017604827881
    6. 'l' → logprob: -7.290017604827881
    7. 'cases' → logprob: -7.415017604827881
    8. '   ' → logprob: -8.290017127990723
    9. ' une' → logprob: -8.915017127990723
    10. 'dist' → logprob: -9.290017127990723

Token 3682: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4714241325855255
    2. '+' → logprob: -2.096424102783203
    3. ' +' → logprob: -2.221424102783203
    4. '[' → logprob: -3.221424102783203
    5. '[i' → logprob: -3.221424102783203
    6. ')+' → logprob: -3.346424102783203
    7. '   ' → logprob: -4.846424102783203
    8. ')*' → logprob: -5.596424102783203
    9. '                   ' → logprob: -5.596424102783203
    10. 'adj' → logprob: -6.471424102783203

Token 3683: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.06536552309989929
    2. 'case' → logprob: -3.5653655529022217
    3. 'adj' → logprob: -4.190365314483643
    4. 'la' → logprob: -4.315365314483643
    5. 'l' → logprob: -6.065365314483643
    6. 'vo' → logprob: -6.565365314483643
    7. 'cases' → logprob: -6.940365314483643
    8. 'c' → logprob: -7.815365314483643
    9. '   ' → logprob: -8.3153657913208
    10. ' une' → logprob: -8.4403657913208

Token 3684: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0008494134526699781
    2. 'adj' → logprob: -7.87584924697876
    3. 'vo' → logprob: -8.250849723815918
    4. ' case' → logprob: -8.625849723815918
    5. '
' → logprob: -11.875849723815918
    6. 'cell' → logprob: -12.375849723815918
    7. 'cases' → logprob: -12.625849723815918
    8. '   ' → logprob: -12.875849723815918
    9. 'voie' → logprob: -13.250849723815918
    10. '```' → logprob: -13.375849723815918

Token 3685: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.09781617671251297
    2. 'adj' → logprob: -2.847816228866577
    3. 'sans' → logprob: -3.472816228866577
    4. 'vo' → logprob: -5.972815990447998
    5. ' vide' → logprob: -7.972815990447998
    6. '           ' → logprob: -8.097816467285156
    7. '               ' → logprob: -8.972816467285156
    8. '   ' → logprob: -9.222816467285156
    9. 'vid' → logprob: -9.222816467285156
    10. '         ' → logprob: -9.472816467285156

Token 3686: ' adj' (ID: 20251)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6837197542190552
    2. 'adj' → logprob: -0.9337197542190552
    3. ')*' → logprob: -3.4337196350097656
    4. '_adj' → logprob: -3.5587196350097656
    5. '   ' → logprob: -4.933719635009766
    6. ',' → logprob: -5.183719635009766
    7. ')+' → logprob: -6.058719635009766
    8. '                   ' → logprob: -6.058719635009766
    9. ']' → logprob: -6.183719635009766
    10. '),' → logprob: -6.433719635009766

Token 3687: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.7612179517745972
    2. 'acent' → logprob: -1.0112179517745972
    3. ')' → logprob: -2.6362180709838867
    4. '   ' → logprob: -2.8862180709838867
    5. ')
' → logprob: -4.386218070983887
    6. ']' → logprob: -4.761218070983887
    7. 'acé' → logprob: -6.261218070983887
    8. '       ' → logprob: -6.386218070983887
    9. '
' → logprob: -6.636218070983887
    10. '}' → logprob: -6.761218070983887

Token 3688: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.6393101215362549
    2. 'ent' → logprob: -0.7643101215362549
    3. 'acent' → logprob: -5.264309883117676
    4. 'ac' → logprob: -7.514309883117676
    5. '   ' → logprob: -7.889309883117676
    6. '#' → logprob: -8.764309883117676
    7. 'cent' → logprob: -9.014309883117676
    8. '
' → logprob: -9.139309883117676
    9. 'ée' → logprob: -11.014309883117676
    10. '       ' → logprob: -11.139309883117676

Token 3689: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47987502813339233
    2. '[i' → logprob: -1.729875087738037
    3. ' +' → logprob: -2.979875087738037
    4. ')*' → logprob: -3.729875087738037
    5. '+' → logprob: -3.854875087738037
    6. ']' → logprob: -3.979875087738037
    7. '   ' → logprob: -4.104875087738037
    8. ',' → logprob: -4.479875087738037
    9. ')+' → logprob: -4.979875087738037
    10. ')
' → logprob: -5.104875087738037

Token 3690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014165159314870834
    2. ' ' → logprob: -4.264164924621582
    3. '0' → logprob: -13.889164924621582
    4. ')' → logprob: -15.264164924621582
    5. '   ' → logprob: -15.264164924621582
    6. ' ' → logprob: -16.3891658782959
    7. '```' → logprob: -17.2641658782959
    8. '#' → logprob: -17.2641658782959
    9. ' #' → logprob: -17.5141658782959
    10. '  ' → logprob: -18.1391658782959

Token 3691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.0339031834737398e-05
    2. '0' → logprob: -11.500020027160645
    3. ' ' → logprob: -11.625020027160645
    4. '   ' → logprob: -14.625020027160645
    5. '```' → logprob: -15.500020027160645
    6. '
' → logprob: -15.625020027160645
    7. ')' → logprob: -15.625020027160645
    8. '#' → logprob: -16.75002098083496
    9. '                   ' → logprob: -17.25002098083496
    10. '                               ' → logprob: -17.87502098083496

Token 3692: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2742866575717926
    2. ')
' → logprob: -2.2742867469787598
    3. '):' → logprob: -3.5242867469787598
    4. '   ' → logprob: -3.5242867469787598
    5. '):
' → logprob: -4.14928674697876
    6. ' +' → logprob: -4.52428674697876
    7. '+' → logprob: -5.02428674697876
    8. ' )' → logprob: -5.14928674697876
    9. '
' → logprob: -5.27428674697876
    10. ',' → logprob: -5.39928674697876

Token 3693: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3893402814865112
    2. '               ' → logprob: -2.514340400695801
    3. ' 
' → logprob: -2.514340400695801
    4. ' #' → logprob: -2.514340400695801
    5. '           ' → logprob: -2.514340400695801
    6. '#' → logprob: -2.639340400695801
    7. '                   ' → logprob: -3.139340400695801
    8. '       ' → logprob: -3.889340400695801
    9. ' ' → logprob: -4.014340400695801
    10. '    ' → logprob: -4.014340400695801

Token 3694: ''est' (ID: 6616)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05529915168881416
    2. '#' → logprob: -3.9302990436553955
    3. ' =' → logprob: -4.055299282073975
    4. '=
' → logprob: -5.430299282073975
    5. ')' → logprob: -5.680299282073975
    6. ':' → logprob: -6.055299282073975
    7. '==' → logprob: -6.680299282073975
    8. '*' → logprob: -6.805299282073975
    9. '+' → logprob: -6.805299282073975
    10. 'ont' → logprob: -7.055299282073975

Token 3695: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.552297830581665
    2. 'à' → logprob: -2.302297830581665
    3. 'égal' → logprob: -2.302297830581665
    4. 'le' → logprob: -2.677297830581665
    5. 'exact' → logprob: -2.802297830581665
    6. '       ' → logprob: -3.052297830581665
    7. 'une' → logprob: -3.427297830581665
    8. 'calcul' → logprob: -3.802297830581665
    9. 'possible' → logprob: -3.927297830581665
    10. 'la' → logprob: -3.927297830581665

Token 3696: '-dire' (ID: 76064)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.49283766746521
    2. 'def' → logprob: -1.74283766746521
    3. '                   ' → logprob: -2.61783766746521
    4. '   ' → logprob: -2.86783766746521
    5. 'une' → logprob: -2.86783766746521
    6. '               ' → logprob: -2.86783766746521
    7. 'distance' → logprob: -3.11783766746521
    8. '       ' → logprob: -3.36783766746521
    9. 'à' → logprob: -3.61783766746521
    10. 'not' → logprob: -3.61783766746521

Token 3697: ' le' (ID: 505)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.2732207775115967
    2. ' ' → logprob: -2.6482207775115967
    3. ' nombre' → logprob: -3.1482207775115967
    4. ')' → logprob: -3.7732207775115967
    5. '1' → logprob: -3.8982207775115967
    6. 'A' → logprob: -3.8982207775115967
    7. ' (' → logprob: -4.523221015930176
    8. ' la' → logprob: -4.773221015930176
    9. 'nombre' → logprob: -5.273221015930176
    10. ' number' → logprob: -5.523221015930176

Token 3698: ' temps' (ID: 11160)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.5795149207115173
    2. 'distance' → logprob: -2.329514980316162
    3. 'cost' → logprob: -2.704514980316162
    4. 'A' → logprob: -3.204514980316162
    5. 'case' → logprob: -3.204514980316162
    6. ' minimal' → logprob: -3.329514980316162
    7. ' A' → logprob: -3.704514980316162
    8. ' case' → logprob: -3.829514980316162
    9. 'dist' → logprob: -4.079514980316162
    10. 'minimum' → logprob: -4.079514980316162

Token 3699: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4789735078811646
    2. ' =' → logprob: -1.6039735078811646
    3. '   ' → logprob: -2.353973388671875
    4. 'pour' → logprob: -2.728973388671875
    5. ' pour' → logprob: -2.853973388671875
    6. '_for' → logprob: -2.853973388671875
    7. '_to' → logprob: -2.853973388671875
    8. ')' → logprob: -2.853973388671875
    9. ' de' → logprob: -3.353973388671875
    10. '+' → logprob: -3.978973388671875

Token 3700: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.004137887619435787
    2. 'pass' → logprob: -6.629137992858887
    3. 'cut' → logprob: -7.004137992858887
    4. ' couper' → logprob: -7.254137992858887
    5. 'd' → logprob: -8.004137992858887
    6. 'dé' → logprob: -8.504137992858887
    7. '   ' → logprob: -8.879137992858887
    8. 'co' → logprob: -9.754137992858887
    9. '#' → logprob: -10.254137992858887
    10. '       ' → logprob: -10.254137992858887

Token 3701: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2790206670761108
    2. ')' → logprob: -1.5290206670761108
    3. ' +' → logprob: -1.7790206670761108
    4. '+' → logprob: -2.6540207862854004
    5. '       ' → logprob: -3.4040207862854004
    6. ',' → logprob: -3.5290207862854004
    7. 'import' → logprob: -3.5290207862854004
    8. '           ' → logprob: -4.0290207862854
    9. '```' → logprob: -4.0290207862854
    10. '(i' → logprob: -4.1540207862854

Token 3702: ' ram' (ID: 20920)
  Prédit: 'rap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rap' → logprob: -0.15593388676643372
    2. 'ram' → logprob: -2.7809338569641113
    3. 'rapport' → logprob: -3.1559338569641113
    4. '   ' → logprob: -4.780933856964111
    5. 'de' → logprob: -4.780933856964111
    6. ' rapport' → logprob: -5.155933856964111
    7. 'ramer' → logprob: -5.405933856964111
    8. 'porter' → logprob: -5.530933856964111
    9. 'report' → logprob: -5.905933856964111
    10. 'import' → logprob: -6.905933856964111

Token 3703: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -0.0001628956088097766
    2. '   ' → logprob: -10.000163078308105
    3. 'porter' → logprob: -10.000163078308105
    4. 'è' → logprob: -10.750163078308105
    5. '|' → logprob: -11.875163078308105
    6. 'p' → logprob: -12.375163078308105
    7. '
' → logprob: -12.500163078308105
    8. '>' → logprob: -12.500163078308105
    9. '#' → logprob: -12.625163078308105
    10. 'é' → logprob: -12.875163078308105

Token 3704: ' tous' (ID: 10688)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2955007553100586
    2. '   ' → logprob: -2.1705007553100586
    3. ' +' → logprob: -2.4205007553100586
    4. 'import' → logprob: -2.5455007553100586
    5. '(i' → logprob: -2.9205007553100586
    6. ' =' → logprob: -3.0455007553100586
    7. '```' → logprob: -3.0455007553100586
    8. '
' → logprob: -3.1705007553100586
    9. ',' → logprob: -3.4205007553100586
    10. '+' → logprob: -3.5455007553100586

Token 3705: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.016062524169683456
    2. ' les' → logprob: -4.7660627365112305
    3. '   ' → logprob: -5.8910627365112305
    4. 'ces' → logprob: -5.8910627365112305
    5. '       ' → logprob: -7.6410627365112305
    6. ' ces' → logprob: -8.01606273651123
    7. 'leurs' → logprob: -8.51606273651123
    8. ' ' → logprob: -8.89106273651123
    9. '     ' → logprob: -9.51606273651123
    10. 'leur' → logprob: -9.64106273651123

Token 3706: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0018096525454893708
    2. ' arbres' → logprob: -6.501809597015381
    3. 'ar' → logprob: -8.376810073852539
    4. '   ' → logprob: -10.376810073852539
    5. 'A' → logprob: -11.126810073852539
    6. '#' → logprob: -11.876810073852539
    7. 'trees' → logprob: -11.876810073852539
    8. ' ' → logprob: -12.001810073852539
    9. '     ' → logprob: -12.376810073852539
    10. '       ' → logprob: -12.751810073852539

Token 3707: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26530784368515015
    2. 'import' → logprob: -2.015307903289795
    3. '
' → logprob: -3.890307903289795
    4. ',' → logprob: -3.890307903289795
    5. '       ' → logprob: -4.765307903289795
    6. 'from' → logprob: -5.015307903289795
    7. ':
' → logprob: -5.390307903289795
    8. ' =' → logprob: -5.390307903289795
    9. ' +' → logprob: -5.390307903289795
    10. ',
' → logprob: -5.515307903289795

Token 3708: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18420612812042236
    2. 'import' → logprob: -3.059206008911133
    3. '
' → logprob: -3.309206008911133
    4. ':' → logprob: -3.809206008911133
    5. 'def' → logprob: -3.809206008911133
    6. 'from' → logprob: -4.434206008911133
    7. ':
' → logprob: -4.684206008911133
    8. '```' → logprob: -5.934206008911133
    9. '       ' → logprob: -6.059206008911133
    10. ')' → logprob: -6.184206008911133

Token 3709: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1778854876756668
    2. 'import' → logprob: -2.1778855323791504
    3. 'def' → logprob: -4.30288553237915
    4. '
' → logprob: -4.55288553237915
    5. 'from' → logprob: -4.55288553237915
    6. 'dist' → logprob: -5.05288553237915
    7. ' import' → logprob: -6.42788553237915
    8. '```' → logprob: -6.42788553237915
    9. ':' → logprob: -6.55288553237915
    10. ':
' → logprob: -7.30288553237915

Token 3710: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015070192515850067
    2. 'import' → logprob: -4.265069961547852
    3. ' import' → logprob: -7.890069961547852
    4. 'from' → logprob: -8.140069961547852
    5. ' from' → logprob: -9.515069961547852
    6. '
' → logprob: -10.265069961547852
    7. '       ' → logprob: -10.265069961547852
    8. '```' → logprob: -10.265069961547852
    9. '    
' → logprob: -11.515069961547852
    10. ')' → logprob: -11.640069961547852

Token 3711: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20609734952449799
    2. 'import' → logprob: -1.8310973644256592
    3. 'dist' → logprob: -4.20609712600708
    4. 'def' → logprob: -5.58109712600708
    5. 'from' → logprob: -6.33109712600708
    6. ' import' → logprob: -6.58109712600708
    7. 'cost' → logprob: -6.83109712600708
    8. '       ' → logprob: -7.33109712600708
    9. '```' → logprob: -7.33109712600708
    10. 'distance' → logprob: -7.70609712600708

Token 3712: ' Puis' (ID: 87717)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4791048765182495
    2. '   ' → logprob: -0.9791048765182495
    3. 'from' → logprob: -5.729104995727539
    4. '
' → logprob: -7.604104995727539
    5. 'cost' → logprob: -7.854104995727539
    6. 'dist' → logprob: -7.979104995727539
    7. '```' → logprob: -9.104104995727539
    8. ' import' → logprob: -9.229104995727539
    9. '#' → logprob: -9.229104995727539
    10. '    
' → logprob: -9.854104995727539

Token 3713: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8344675898551941
    2. 'import' → logprob: -0.8344675898551941
    3. '#' → logprob: -2.459467649459839
    4. 'dist' → logprob: -3.584467649459839
    5. 'distance' → logprob: -4.95946741104126
    6. 'def' → logprob: -5.45946741104126
    7. 'from' → logprob: -5.83446741104126
    8. 'cost' → logprob: -6.33446741104126
    9. '
' → logprob: -6.70946741104126
    10. '```' → logprob: -7.20946741104126

Token 3714: ' chemin' (ID: 45035)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2533709704875946
    2. 'dist' → logprob: -1.628371000289917
    3. 'from' → logprob: -4.253370761871338
    4. 'def' → logprob: -5.253370761871338
    5. '#' → logprob: -5.753370761871338
    6. 'queue' → logprob: -6.128370761871338
    7. '   ' → logprob: -6.503370761871338
    8. 'distance' → logprob: -7.503370761871338
    9. 'cost' → logprob: -8.628371238708496
    10. 'heap' → logprob: -8.628371238708496

Token 3715: ' minimum' (ID: 11085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45913735032081604
    2. '=' → logprob: -1.8341373205184937
    3. '   ' → logprob: -2.959137439727783
    4. 'import' → logprob: -3.334137439727783
    5. 'cost' → logprob: -3.459137439727783
    6. '_cost' → logprob: -4.084137439727783
    7. '#' → logprob: -4.584137439727783
    8. '[i' → logprob: -4.959137439727783
    9. ',' → logprob: -4.959137439727783
    10. '       ' → logprob: -5.209137439727783

Token 3716: ' en' (ID: 469)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7837265729904175
    2. 'import' → logprob: -1.4087265729904175
    3. '   ' → logprob: -2.658726692199707
    4. ':
' → logprob: -2.783726692199707
    5. '```' → logprob: -3.158726692199707
    6. ' =' → logprob: -4.158726692199707
    7. '):' → logprob: -4.533726692199707
    8. ' import' → logprob: -4.658726692199707
    9. 'def' → logprob: -4.783726692199707
    10. 'from' → logprob: -5.158726692199707

Token 3717: ' D' (ID: 415)
  Prédit: 'cout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cout' → logprob: -1.330671787261963
    2. 'pass' → logprob: -1.830671787261963
    3. 'continu' → logprob: -1.830671787261963
    4. 'temps' → logprob: -2.330671787261963
    5. 'co' → logprob: -2.830671787261963
    6. 'termin' → logprob: -3.705671787261963
    7. 'util' → logprob: -3.705671787261963
    8. '0' → logprob: -4.205671787261963
    9. ' passant' → logprob: -4.205671787261963
    10. 's' → logprob: -4.330671787261963

Token 3718: 'ijkstra' (ID: 124290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8309416174888611
    2. 'ijkstra' → logprob: -2.830941677093506
    3. '```' → logprob: -3.080941677093506
    4. 'distance' → logprob: -3.080941677093506
    5. 'd' → logprob: -3.205941677093506
    6. ']' → logprob: -3.580941677093506
    7. '_distance' → logprob: -3.955941677093506
    8. '_dist' → logprob: -4.080941677093506
    9. 't' → logprob: -4.080941677093506
    10. '
' → logprob: -4.080941677093506

Token 3719: ' donne' (ID: 30004)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36089208722114563
    2. 'import' → logprob: -2.2358920574188232
    3. ':' → logprob: -3.3608920574188232
    4. '
' → logprob: -3.4858920574188232
    5. ':
' → logprob: -4.110892295837402
    6. '```' → logprob: -4.110892295837402
    7. ' =' → logprob: -4.235892295837402
    8. ',' → logprob: -4.610892295837402
    9. 'def' → logprob: -4.610892295837402
    10. '       ' → logprob: -4.610892295837402

Token 3720: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4886969327926636
    2. 'le' → logprob: -1.6136969327926636
    3. '```' → logprob: -2.363697052001953
    4. 'un' → logprob: -3.988697052001953
    5. 'cost' → logprob: -3.988697052001953
    6. ':' → logprob: -4.488697052001953
    7. ')' → logprob: -4.863697052001953
    8. ' le' → logprob: -5.363697052001953
    9. '       ' → logprob: -5.613697052001953
    10. ' la' → logprob: -5.613697052001953

Token 3721: ' temps' (ID: 11160)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.8683306574821472
    2. 'temps' → logprob: -1.368330717086792
    3. ' coût' → logprob: -1.618330717086792
    4. 'cout' → logprob: -2.743330717086792
    5. 'result' → logprob: -4.493330478668213
    6. 'minimum' → logprob: -4.493330478668213
    7. 'cost' → logprob: -4.868330478668213
    8. ' temps' → logprob: -5.118330478668213
    9. '```' → logprob: -5.743330478668213
    10. 'minimal' → logprob: -5.743330478668213

Token 3722: ' minimal' (ID: 19957)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7501756548881531
    2. '   ' → logprob: -1.6251757144927979
    3. '_from' → logprob: -2.625175714492798
    4. 'from' → logprob: -2.625175714492798
    5. '```' → logprob: -3.625175714492798
    6. '
' → logprob: -4.375175476074219
    7. ' =' → logprob: -4.375175476074219
    8. ')
' → logprob: -4.750175476074219
    9. '_heap' → logprob: -4.750175476074219
    10. ':
' → logprob: -4.875175476074219

Token 3723: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03467033430933952
    2. 'import' → logprob: -3.784670352935791
    3. 'from' → logprob: -5.409670352935791
    4. '
' → logprob: -5.784670352935791
    5. ',' → logprob: -7.034670352935791
    6. '```' → logprob: -7.784670352935791
    7. ' =' → logprob: -8.034669876098633
    8. ' +' → logprob: -8.159669876098633
    9. '       ' → logprob: -8.284669876098633
    10. ':
' → logprob: -8.409669876098633

Token 3724: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4394383728504181
    2. '   ' → logprob: -1.3144383430480957
    3. 'def' → logprob: -3.8144383430480957
    4. ':
' → logprob: -4.189438343048096
    5. 'from' → logprob: -4.439438343048096
    6. '```' → logprob: -4.439438343048096
    7. '
' → logprob: -4.939438343048096
    8. ':' → logprob: -5.064438343048096
    9. 'dist' → logprob: -5.689438343048096
    10. ' import' → logprob: -6.939438343048096

Token 3725: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0818442851305008
    2. 'import' → logprob: -2.5818443298339844
    3. 'from' → logprob: -6.456844329833984
    4. '
' → logprob: -7.206844329833984
    5. ' import' → logprob: -8.081844329833984
    6. '```' → logprob: -8.831844329833984
    7. 'dist' → logprob: -9.581844329833984
    8. ' from' → logprob: -10.206844329833984
    9. '    
' → logprob: -10.331844329833984
    10. '       ' → logprob: -11.706844329833984

Token 3726: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0273712370544672
    2. 'import' → logprob: -3.7773711681365967
    3. '
' → logprob: -6.027371406555176
    4. 'from' → logprob: -6.777371406555176
    5. 'dist' → logprob: -8.277371406555176
    6. 'cost' → logprob: -9.277371406555176
    7. '```' → logprob: -9.652371406555176
    8. '    
' → logprob: -9.902371406555176
    9. ' import' → logprob: -10.402371406555176
    10. 'distance' → logprob: -11.152371406555176

Token 3727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018340270966291428
    2. 'import' → logprob: -4.143340110778809
    3. 'from' → logprob: -6.768340110778809
    4. '
' → logprob: -7.018340110778809
    5. '```' → logprob: -9.018340110778809
    6. ' from' → logprob: -10.268340110778809
    7. ' import' → logprob: -10.268340110778809
    8. 'dist' → logprob: -10.893340110778809
    9. '    
' → logprob: -10.893340110778809
    10. 'cost' → logprob: -11.518340110778809

Token 3728: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2180027812719345
    2. 'import' → logprob: -1.7180027961730957
    3. 'dist' → logprob: -4.843002796173096
    4. 'from' → logprob: -5.093002796173096
    5. '
' → logprob: -7.218002796173096
    6. ' import' → logprob: -8.218002319335938
    7. 'INF' → logprob: -8.343002319335938
    8. '#' (adapté à ' #') → logprob: -8.593002319335938
    9. ' from' → logprob: -8.718002319335938
    10. 'distance' → logprob: -8.843002319335938

Token 3729: ' Le' (ID: 2018)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06769755482673645
    2. '   ' → logprob: -3.317697525024414
    3. 'dist' → logprob: -3.817697525024414
    4. 'from' → logprob: -5.067697525024414
    5. '#' → logprob: -8.442697525024414
    6. 'INF' → logprob: -8.442697525024414
    7. '
' → logprob: -8.942697525024414
    8. 'distance' → logprob: -9.317697525024414
    9. 'heap' → logprob: -9.442697525024414
    10. 'cost' → logprob: -9.442697525024414

Token 3730: ' problème' (ID: 35630)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9662367701530457
    2. 'import' → logprob: -1.5912368297576904
    3. 'dist' → logprob: -1.8412368297576904
    4. 'cost' → logprob: -2.4662368297576904
    5. 'time' → logprob: -3.4662368297576904
    6. '#' → logprob: -3.8412368297576904
    7. 'distance' → logprob: -3.8412368297576904
    8. 'from' → logprob: -3.9662368297576904
    9. 'heap' → logprob: -4.216236591339111
    10. '
' → logprob: -4.466236591339111

Token 3731: ' est' (ID: 893)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8325793147087097
    2. ' =' → logprob: -1.2075793743133545
    3. '=' → logprob: -2.0825793743133545
    4. 'from' → logprob: -3.4575793743133545
    5. ':' → logprob: -3.5825793743133545
    6. '   ' → logprob: -3.7075793743133545
    7. ' est' → logprob: -4.332579135894775
    8. '#' → logprob: -4.832579135894775
    9. ':
' → logprob: -4.957579135894775
    10. ' is' → logprob: -5.332579135894775

Token 3732: ' que' (ID: 661)
  Prédit: ' donc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' donc' → logprob: -1.7111294269561768
    2. '=' → logprob: -1.9611294269561768
    3. 'd' → logprob: -2.3361294269561768
    4. ']' → logprob: -2.3361294269561768
    5. '   ' → logprob: -2.5861294269561768
    6. ':' → logprob: -2.9611294269561768
    7. ' de' → logprob: -3.0861294269561768
    8. '```' → logprob: -3.3361294269561768
    9. '_' → logprob: -3.4611294269561768
    10. ')' → logprob: -3.9611294269561768

Token 3733: ' le' (ID: 505)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0387426614761353
    2. '   ' → logprob: -1.1637426614761353
    3. 'dist' → logprob: -2.0387425422668457
    4. ' dist' → logprob: -3.4137425422668457
    5. 'distance' → logprob: -3.7887425422668457
    6. '```' → logprob: -3.9137425422668457
    7. 'cost' → logprob: -4.163742542266846
    8. 'heap' → logprob: -4.163742542266846
    9. ':' → logprob: -5.038742542266846
    10. ')' → logprob: -5.038742542266846

Token 3734: ' coût' (ID: 73109)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3618519604206085
    2. 'dist' → logprob: -1.6118519306182861
    3. 'heap' → logprob: -3.611851930618286
    4. 'from' → logprob: -3.861851930618286
    5. 'distance' → logprob: -3.861851930618286
    6. 'def' → logprob: -4.486852169036865
    7. 'cost' → logprob: -4.986852169036865
    8. 'queue' → logprob: -5.986852169036865
    9. '
' → logprob: -6.111852169036865
    10. '#' → logprob: -6.111852169036865

Token 3735: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38293784856796265
    2. ' =' → logprob: -1.3829379081726074
    3. '[i' → logprob: -4.632937908172607
    4. '   ' → logprob: -4.882937908172607
    5. 'for' → logprob: -5.007937908172607
    6. ' pour' → logprob: -5.132937908172607
    7. ' de' → logprob: -5.507937908172607
    8. ')' → logprob: -5.507937908172607
    9. ' for' → logprob: -5.632937908172607
    10. ' ' → logprob: -6.132937908172607

Token 3736: ' couper' (ID: 135212)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.4151530265808105
    2. 'dé' → logprob: -1.7901530265808105
    3. 'import' → logprob: -2.1651530265808105
    4. 'cut' → logprob: -2.5401530265808105
    5. ' passage' → logprob: -2.5401530265808105
    6. ' déplacement' → logprob: -2.9151530265808105
    7. '   ' → logprob: -3.0401530265808105
    8. 'faire' → logprob: -3.6651530265808105
    9. 'case' → logprob: -4.1651530265808105
    10. ' chaque' → logprob: -4.2901530265808105

Token 3737: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13134095072746277
    2. ')' → logprob: -4.006340980529785
    3. '_for' → logprob: -4.131340980529785
    4. ',' → logprob: -4.506340980529785
    5. '[i' → logprob: -4.506340980529785
    6. '[' → logprob: -5.256340980529785
    7. '```' → logprob: -5.256340980529785
    8. 'es' → logprob: -5.631340980529785
    9. 'une' → logprob: -5.756340980529785
    10. '_case' → logprob: -5.756340980529785

Token 3738: ' arbres' (ID: 127011)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.026012659072876
    2. 'pass' → logprob: -1.651012659072876
    3. 'case' → logprob: -1.901012659072876
    4. 'cou' → logprob: -2.026012659072876
    5. 'for' → logprob: -3.026012659072876
    6. 'ar' → logprob: -3.401012659072876
    7. 'dé' → logprob: -3.776012659072876
    8. 'che' → logprob: -3.901012659072876
    9. 'cut' → logprob: -5.401012420654297
    10. 'c' → logprob: -5.401012420654297

Token 3739: ' ne' (ID: 453)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2377465963363647
    2. '=' → logprob: -1.7377465963363647
    3. '_' → logprob: -2.4877467155456543
    4. ' =' → logprob: -2.6127467155456543
    5. ']' → logprob: -2.9877467155456543
    6. '   ' → logprob: -3.1127467155456543
    7. ')' → logprob: -3.4877467155456543
    8. '```' → logprob: -3.6127467155456543
    9. '_sur' → logprob: -3.6127467155456543
    10. ',' → logprob: -3.8627467155456543

Token 3740: ' se' (ID: 458)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2972421646118164
    2. 'est' → logprob: -1.4222421646118164
    3. '=' → logprob: -2.0472421646118164
    4. 'pe' → logprob: -2.2972421646118164
    5. '#' → logprob: -2.4222421646118164
    6. ' =' → logprob: -2.7972421646118164
    7. 'pas' → logprob: -3.2972421646118164
    8. '```' → logprob: -3.5472421646118164
    9. 'do' → logprob: -4.672242164611816
    10. 'pour' → logprob: -4.922242164611816

Token 3741: ' réalise' (ID: 153079)
  Prédit: 'rait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rait' → logprob: -1.5926637649536133
    2. 'ait' → logprob: -2.0926637649536133
    3. '#' → logprob: -2.2176637649536133
    4. 'p' → logprob: -2.3426637649536133
    5. 'st' → logprob: -2.8426637649536133
    6. 'pas' → logprob: -2.8426637649536133
    7. 'ré' → logprob: -3.3426637649536133
    8. 'nt' → logprob: -3.5926637649536133
    9. 'ra' → logprob: -3.5926637649536133
    10. 'ont' → logprob: -3.8426637649536133

Token 3742: ' que' (ID: 661)
  Prédit: ' pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pas' → logprob: -1.5198540687561035
    2. '_' → logprob: -1.7698540687561035
    3. '=' → logprob: -1.8948540687561035
    4. ')' → logprob: -2.0198540687561035
    5. ' =' → logprob: -2.6448540687561035
    6. 'pas' → logprob: -2.7698540687561035
    7. '```' → logprob: -3.0198540687561035
    8. ' uniquement' → logprob: -3.1448540687561035
    9. 'sur' → logprob: -4.6448540687561035
    10. ' seulement' → logprob: -4.7698540687561035

Token 3743: ' si' (ID: 1784)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.4729416072368622
    2. 'pas' → logprob: -1.9729416370391846
    3. 'que' → logprob: -1.9729416370391846
    4. 'sur' → logprob: -2.9729416370391846
    5. 'une' → logprob: -4.8479413986206055
    6. 'uni' → logprob: -5.2229413986206055
    7. 'dans' → logprob: -5.3479413986206055
    8. 'à' → logprob: -5.5979413986206055
    9. ' qu' → logprob: -5.7229413986206055
    10. 'l' → logprob: -5.7229413986206055

Token 3744: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.1418673992156982
    2. ' la' → logprob: -1.3918673992156982
    3. 'la' → logprob: -1.7668673992156982
    4. ' on' → logprob: -2.0168673992156982
    5. 'le' → logprob: -2.8918673992156982
    6. 'l' → logprob: -4.141867637634277
    7. ' le' → logprob: -4.141867637634277
    8. 'A' → logprob: -4.141867637634277
    9. ' l' → logprob: -4.891867637634277
    10. ' A' → logprob: -5.516867637634277

Token 3745: ' arrive' (ID: 18338)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.4110809564590454
    2. 'continue' → logprob: -1.4110809564590454
    3. ' arrive' → logprob: -2.286080837249756
    4. ' se' → logprob: -2.536080837249756
    5. ' traverse' → logprob: -2.661080837249756
    6. 'p' → logprob: -2.786080837249756
    7. 'dé' → logprob: -3.411080837249756
    8. 'tr' → logprob: -3.911080837249756
    9. 'ren' → logprob: -4.411080837249756
    10. 'd' → logprob: -4.536080837249756

Token 3746: ' sur' (ID: 1512)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9650710821151733
    2. ' sur' → logprob: -1.2150710821151733
    3. 'sur' → logprob: -2.215071201324463
    4. ')' → logprob: -3.090071201324463
    5. '_' → logprob: -3.590071201324463
    6. 'à' → logprob: -3.715071201324463
    7. '```' → logprob: -4.090071201324463
    8. ' ' → logprob: -4.340071201324463
    9. '_sur' → logprob: -4.465071201324463
    10. ' pas' → logprob: -4.590071201324463

Token 3747: ' une' (ID: 2463)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8228548169136047
    2. ' (' → logprob: -1.57285475730896
    3. ' cette' → logprob: -2.07285475730896
    4. ' une' → logprob: -2.19785475730896
    5. 'une' → logprob: -3.07285475730896
    6. 'la' → logprob: -4.197854995727539
    7. '(i' → logprob: -4.322854995727539
    8. ' un' → logprob: -5.197854995727539
    9. '(' → logprob: -5.572854995727539
    10. ')' → logprob: -6.072854995727539

Token 3748: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.07642246037721634
    2. ' case' → logprob: -2.8264224529266357
    3. '
' → logprob: -5.201422691345215
    4. ' ' → logprob: -6.326422691345215
    5. ')' → logprob: -6.951422691345215
    6. ' 
' → logprob: -6.951422691345215
    7. 'cell' → logprob: -7.326422691345215
    8. '   ' → logprob: -7.326422691345215
    9. '(case' → logprob: -7.326422691345215
    10. ' (' → logprob: -8.201422691345215

Token 3749: ' adj' (ID: 20251)
  Prédit: ' avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' avec' → logprob: -1.2939828634262085
    2. 'with' → logprob: -1.7939828634262085
    3. 'avec' → logprob: -1.9189828634262085
    4. '```' → logprob: -2.168982982635498
    5. ' with' → logprob: -3.168982982635498
    6. '_with' → logprob: -3.168982982635498
    7. '
' → logprob: -3.543982982635498
    8. '_' → logprob: -3.668982982635498
    9. ' =' → logprob: -3.918982982635498
    10. 'vide' → logprob: -4.043982982635498

Token 3750: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.5929145812988281
    2. 'acent' → logprob: -1.0929145812988281
    3. ')' → logprob: -4.092914581298828
    4. '   ' → logprob: -4.217914581298828
    5. '```' → logprob: -4.467914581298828
    6. '
' → logprob: -4.592914581298828
    7. ')
' → logprob: -4.717914581298828
    8. ':
' → logprob: -5.217914581298828
    9. 'ace' → logprob: -5.342914581298828
    10. '):
' → logprob: -5.592914581298828

Token 3751: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.27640965580940247
    2. 'ent' → logprob: -1.52640962600708
    3. ')' → logprob: -4.77640962600708
    4. 'nte' → logprob: -4.90140962600708
    5. ']' → logprob: -6.52640962600708
    6. '#' → logprob: -6.52640962600708
    7. 'n' → logprob: -6.90140962600708
    8. 'nt' → logprob: -6.90140962600708
    9. 'cente' → logprob: -7.65140962600708
    10. ')
' → logprob: -7.65140962600708

Token 3752: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5930464267730713
    2. ':' → logprob: -2.7180464267730713
    3. ':
' → logprob: -3.2180464267730713
    4. '       ' → logprob: -3.5930464267730713
    5. ' +' → logprob: -3.5930464267730713
    6. ',' → logprob: -3.7180464267730713
    7. 'def' → logprob: -3.8430464267730713
    8. '               ' → logprob: -3.8430464267730713
    9. '[i' → logprob: -3.9680464267730713
    10. '+' → logprob: -4.218046188354492

Token 3753: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.8298932909965515
    2. 'ar' → logprob: -1.2048933506011963
    3. ' arbre' → logprob: -1.7048933506011963
    4. ' arbres' → logprob: -3.2048933506011963
    5. '   ' → logprob: -4.579893112182617
    6. '```' → logprob: -4.829893112182617
    7. 'trees' → logprob: -5.704893112182617
    8. '_' → logprob: -5.829893112182617
    9. 'es' → logprob: -5.954893112182617
    10. '_ar' → logprob: -6.454893112182617

Token 3754: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9081326127052307
    2. ':
' → logprob: -1.783132553100586
    3. 'import' → logprob: -1.908132553100586
    4. ':' → logprob: -3.658132553100586
    5. '[' → logprob: -3.783132553100586
    6. 'def' → logprob: -3.783132553100586
    7. 'dist' → logprob: -3.908132553100586
    8. 'from' → logprob: -4.033132553100586
    9. '[i' → logprob: -4.033132553100586
    10. '       ' → logprob: -4.033132553100586

Token 3755: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4475300312042236
    2. ':' → logprob: -1.9475300312042236
    3. '                   ' → logprob: -1.9475300312042236
    4. '               ' → logprob: -2.3225300312042236
    5. ''' → logprob: -3.3225300312042236
    6. '                       ' → logprob: -3.4475300312042236
    7. ' :' → logprob: -3.5725300312042236
    8. ',' → logprob: -3.6975300312042236
    9. '       ' → logprob: -3.6975300312042236
    10. ')' → logprob: -3.6975300312042236

Token 3756: ' coupe' (ID: 71780)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -2.0994482040405273
    2. 'continue' → logprob: -2.4744482040405273
    3. ' doit' → logprob: -2.7244482040405273
    4. '#' → logprob: -2.8494482040405273
    5. '
' → logprob: -3.0994482040405273
    6. '+' → logprob: -3.0994482040405273
    7. ':
' → logprob: -3.3494482040405273
    8. 'n' → logprob: -3.3494482040405273
    9. ' peux' → logprob: -3.3494482040405273
    10. '   ' → logprob: -3.4744482040405273

Token 3757: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6020175218582153
    2. '=' → logprob: -2.727017402648926
    3. '               ' → logprob: -2.852017402648926
    4. '```' → logprob: -2.977017402648926
    5. '           ' → logprob: -3.227017402648926
    6. ' =' → logprob: -3.227017402648926
    7. ' et' → logprob: -3.227017402648926
    8. ')' → logprob: -3.352017402648926
    9. '[i' → logprob: -3.352017402648926
    10. '                       ' → logprob: -3.727017402648926

Token 3758: ' revient' (ID: 95900)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4984702467918396
    2. 'p' → logprob: -1.6234703063964844
    3. 'on' → logprob: -1.9984703063964844
    4. ' continue' → logprob: -4.748470306396484
    5. 'dé' → logprob: -4.873470306396484
    6. 'se' → logprob: -4.998470306396484
    7. 're' → logprob: -5.373470306396484
    8. 'ret' → logprob: -5.373470306396484
    9. 'contin' → logprob: -5.498470306396484
    10. 'le' → logprob: -5.498470306396484

Token 3759: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6729034185409546
    2. ')' → logprob: -2.672903537750244
    3. ':' → logprob: -2.797903537750244
    4. '[' → logprob: -3.172903537750244
    5. '[
' → logprob: -3.172903537750244
    6. '```' → logprob: -3.172903537750244
    7. '(' → logprob: -3.422903537750244
    8. '       ' → logprob: -3.547903537750244
    9. 'import' → logprob: -3.672903537750244
    10. '(
' → logprob: -3.672903537750244

Token 3760: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7732869982719421
    2. 'la' → logprob: -0.8982869982719421
    3. 'jou' → logprob: -3.773287057876587
    4. 'i' → logprob: -4.523286819458008
    5. 'faire' → logprob: -4.648286819458008
    6. '   ' → logprob: -4.773286819458008
    7. 'pass' → logprob: -5.148286819458008
    8. 'j' → logprob: -5.148286819458008
    9. '0' → logprob: -5.273286819458008
    10. 'une' → logprob: -5.273286819458008

Token 3761: ''us' (ID: 143210)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.5684346556663513
    2. 'case' → logprob: -2.068434715270996
    3. 'i' → logprob: -3.818434715270996
    4. '   ' → logprob: -3.943434715270996
    5. 'u' → logprob: -3.943434715270996
    6. 'a' → logprob: -4.068434715270996
    7. 'n' → logprob: -4.193434715270996
    8. ')' → logprob: -4.193434715270996
    9. ' ' → logprob: -4.443434715270996
    10. 'vide' → logprob: -4.568434715270996

Token 3762: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.14174780249595642
    2. 'e' → logprob: -2.5167477130889893
    3. 'ère' → logprob: -3.8917477130889893
    4. 'er' → logprob: -4.516747951507568
    5. '
' → logprob: -5.016747951507568
    6. '   ' → logprob: -5.891747951507568
    7. 'ere' → logprob: -6.016747951507568
    8. 're' → logprob: -6.141747951507568
    9. 'r' → logprob: -7.016747951507568
    10. 'i' → logprob: -7.016747951507568

Token 3763: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3666542768478394
    2. '   ' → logprob: -1.4916542768478394
    3. 'import' → logprob: -2.366654396057129
    4. ':
' → logprob: -2.366654396057129
    5. ',' → logprob: -2.491654396057129
    6. 'from' → logprob: -3.366654396057129
    7. '```' → logprob: -3.491654396057129
    8. ')' → logprob: -3.866654396057129
    9. 'def' → logprob: -3.991654396057129
    10. '):' → logprob: -4.116654396057129

Token 3764: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.558872640132904
    2. ':' → logprob: -1.8088726997375488
    3. 'def' → logprob: -2.933872699737549
    4. 'import' → logprob: -3.058872699737549
    5. ':
' → logprob: -3.433872699737549
    6. ',' → logprob: -3.558872699737549
    7. ')' → logprob: -4.058872699737549
    8. ']' → logprob: -4.683872699737549
    9. '[' → logprob: -4.683872699737549
    10. '[
' → logprob: -4.683872699737549

Token 3765: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018419386819005013
    2. 'import' → logprob: -4.89341926574707
    3. '
' → logprob: -5.26841926574707
    4. 'def' → logprob: -6.89341926574707
    5. '       ' → logprob: -7.01841926574707
    6. ':' → logprob: -7.14341926574707
    7. 'from' → logprob: -7.64341926574707
    8. ':
' → logprob: -7.76841926574707
    9. 'dist' → logprob: -8.14341926574707
    10. ',' → logprob: -8.14341926574707

Token 3766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015470639802515507
    2. '
' → logprob: -5.015470504760742
    3. '       ' → logprob: -6.265470504760742
    4. 'import' → logprob: -6.390470504760742
    5. ':' → logprob: -6.640470504760742
    6. ',' → logprob: -7.640470504760742
    7. '                   ' → logprob: -8.265470504760742
    8. 'def' → logprob: -8.265470504760742
    9. '               ' → logprob: -8.265470504760742
    10. '```' → logprob: -8.265470504760742

Token 3767: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01243594940751791
    2. 'import' → logprob: -5.0124359130859375
    3. '
' → logprob: -6.3874359130859375
    4. '       ' → logprob: -7.3874359130859375
    5. 'def' → logprob: -7.3874359130859375
    6. 'from' → logprob: -7.5124359130859375
    7. '#' (adapté à ' #') → logprob: -7.5124359130859375
    8. 'dist' → logprob: -8.262435913085938
    9. ')' → logprob: -8.512435913085938
    10. ',' → logprob: -8.637435913085938

Token 3768: ' Cependant' (ID: 74480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04865299537777901
    2. 'import' → logprob: -3.4236528873443604
    3. '
' → logprob: -5.0486531257629395
    4. '       ' → logprob: -6.7986531257629395
    5. ':' → logprob: -7.1736531257629395
    6. 'from' → logprob: -7.1736531257629395
    7. ')' → logprob: -7.2986531257629395
    8. '#' → logprob: -7.2986531257629395
    9. ':
' → logprob: -7.4236531257629395
    10. ',' → logprob: -7.6736531257629395

Token 3769: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3556666076183319
    2. '#' → logprob: -2.1056666374206543
    3. '   ' → logprob: -2.4806666374206543
    4. ':
' → logprob: -3.3556666374206543
    5. ',' → logprob: -4.980666637420654
    6. ' :' → logprob: -4.980666637420654
    7. 'import' → logprob: -5.230666637420654
    8. ' continue' → logprob: -5.355666637420654
    9. 'def' → logprob: -5.980666637420654
    10. '
' → logprob: -5.980666637420654

Token 3770: ' l' (ID: 305)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45898187160491943
    2. '#' → logprob: -2.208981990814209
    3. ':' → logprob: -2.583981990814209
    4. ' #' → logprob: -3.333981990814209
    5. ' :' → logprob: -3.583981990814209
    6. '                           ' → logprob: -4.083981990814209
    7. '                   ' → logprob: -4.083981990814209
    8. '       ' → logprob: -4.333981990814209
    9. 'dist' → logprob: -4.333981990814209
    10. '                       ' → logprob: -4.708981990814209

Token 3771: ''' (ID: 6)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -1.2521679401397705
    2. 'dist' → logprob: -1.5021679401397705
    3. ' ' → logprob: -1.8771679401397705
    4. 'n' → logprob: -3.1271679401397705
    5. '_' → logprob: -3.5021679401397705
    6. ')' → logprob: -3.6271679401397705
    7. '   ' → logprob: -3.7521679401397705
    8. ']' → logprob: -3.8771679401397705
    9. '[' → logprob: -4.127167701721191
    10. '
' → logprob: -4.252167701721191

Token 3772: 'én' (ID: 3289)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5805650949478149
    2. '#' → logprob: -2.3305649757385254
    3. 'def' → logprob: -3.2055649757385254
    4. 'b' → logprob: -3.2055649757385254
    5. 'i' → logprob: -3.3305649757385254
    6. 'import' → logprob: -3.7055649757385254
    7. 'cost' → logprob: -3.7055649757385254
    8. '   ' → logprob: -3.7055649757385254
    9. '
' → logprob: -3.9555649757385254
    10. ' dist' → logprob: -3.9555649757385254

Token 3773: 'oncé' (ID: 59071)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4786872863769531
    2. '```' → logprob: -1.8536872863769531
    3. 't' → logprob: -2.353687286376953
    4. '``' → logprob: -2.728687286376953
    5. 'e' → logprob: -2.853687286376953
    6. 'ction' → logprob: -3.228687286376953
    7. '[i' → logprob: -3.353687286376953
    8. '_' → logprob: -3.353687286376953
    9. 'def' → logprob: -3.478687286376953
    10. 'é' → logprob: -3.853687286376953

Token 3774: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.701331377029419
    2. ')' → logprob: -2.451331377029419
    3. '[i' → logprob: -2.451331377029419
    4. '   ' → logprob: -2.701331377029419
    5. '[' → logprob: -3.201331377029419
    6. '):' → logprob: -3.201331377029419
    7. ':
' → logprob: -3.451331377029419
    8. ']' → logprob: -3.576331377029419
    9. '```' → logprob: -3.951331377029419
    10. '#' → logprob: -4.20133113861084

Token 3775: ' dit' (ID: 4758)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5485883951187134
    2. '```' → logprob: -1.7985883951187134
    3. ' continue' → logprob: -2.423588275909424
    4. ':' → logprob: -2.673588275909424
    5. '#' → logprob: -2.673588275909424
    6. 'def' → logprob: -3.048588275909424
    7. '   ' → logprob: -3.048588275909424
    8. '_' → logprob: -3.423588275909424
    9. 'continue' → logprob: -3.423588275909424
    10. ':
' → logprob: -3.673588275909424

Token 3776: ' pas' (ID: 2173)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2225814163684845
    2. ' pas' → logprob: -3.222581386566162
    3. ':' → logprob: -3.347581386566162
    4. '"' → logprob: -3.847581386566162
    5. 'def' → logprob: -4.722581386566162
    6. ' ' → logprob: -4.722581386566162
    7. '```' → logprob: -4.722581386566162
    8. '#' → logprob: -4.847581386566162
    9. ''t' → logprob: -4.972581386566162
    10. '_' → logprob: -5.222581386566162

Token 3777: ' qu' (ID: 474)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2592214345932007
    2. ' :' → logprob: -2.2592215538024902
    3. '   ' → logprob: -3.5092215538024902
    4. ''' → logprob: -4.00922155380249
    5. ' ' → logprob: -4.25922155380249
    6. '```' → logprob: -4.63422155380249
    7. '_' → logprob: -5.25922155380249
    8. ':
' → logprob: -5.25922155380249
    9. '#' → logprob: -5.63422155380249
    10. '':' → logprob: -5.75922155380249

Token 3778: ''on' (ID: 25812)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1117316484451294
    2. ' ' → logprob: -3.86173152923584
    3. '_' → logprob: -4.23673152923584
    4. ':' → logprob: -4.23673152923584
    5. '   ' → logprob: -4.86173152923584
    6. '```' → logprob: -5.11173152923584
    7. '#' → logprob: -5.48673152923584
    8. ' (' → logprob: -5.48673152923584
    9. ')' → logprob: -5.73673152923584
    10. '"' → logprob: -5.86173152923584

Token 3779: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -1.7421749830245972
    2. '```' → logprob: -1.9921749830245972
    3. ' est' → logprob: -2.3671751022338867
    4. '#' → logprob: -2.4921751022338867
    5. ' doit' → logprob: -2.7421751022338867
    6. ' peux' → logprob: -3.2421751022338867
    7. '[' → logprob: -3.3671751022338867
    8. ' faut' → logprob: -3.6171751022338867
    9. 'possible' → logprob: -3.9921751022338867
    10. 'continue' → logprob: -3.9921751022338867

Token 3780: ' avancer' (ID: 151163)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.3793814182281494
    2. ' couper' → logprob: -2.0043814182281494
    3. 'contin' → logprob: -2.8793814182281494
    4. '#' → logprob: -2.8793814182281494
    5. ' déplacer' → logprob: -3.0043814182281494
    6. 'faire' → logprob: -3.1293814182281494
    7. ' ' → logprob: -3.1293814182281494
    8. '"' → logprob: -3.1293814182281494
    9. ''' → logprob: -3.3793814182281494
    10. ' cut' → logprob: -3.6293814182281494

Token 3781: ' sur' (ID: 1512)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8595067262649536
    2. ')' → logprob: -2.609506607055664
    3. '   ' → logprob: -2.609506607055664
    4. '.' → logprob: -2.734506607055664
    5. ':' → logprob: -3.109506607055664
    6. '[' → logprob: -3.234506607055664
    7. '_' → logprob: -3.234506607055664
    8. 'sur' → logprob: -3.359506607055664
    9. ' sur' → logprob: -3.984506607055664
    10. '[
' → logprob: -4.234506607055664

Token 3782: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6169504523277283
    2. 'cases' → logprob: -1.991950511932373
    3. 'les' → logprob: -2.491950511932373
    4. 'ces' → logprob: -2.616950511932373
    5. 'case' → logprob: -2.866950511932373
    6. 'la' → logprob: -2.991950511932373
    7. 'des' → logprob: -3.241950511932373
    8. 'c' → logprob: -4.991950511932373
    9. 'arb' → logprob: -5.241950511932373
    10. 'ar' → logprob: -5.241950511932373

Token 3783: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.30990323424339294
    2. ' case' → logprob: -1.4349032640457153
    3. '_' → logprob: -4.934903144836426
    4. '
' → logprob: -5.059903144836426
    5. ' ' → logprob: -5.184903144836426
    6. '_case' → logprob: -6.434903144836426
    7. '(case' → logprob: -6.559903144836426
    8. '#' → logprob: -7.559903144836426
    9. ')' → logprob: -7.559903144836426
    10. ' (' → logprob: -7.809903144836426

Token 3784: ' avec' (ID: 3937)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3461192846298218
    2. 'vide' → logprob: -1.4711192846298218
    3. '```' → logprob: -1.5961192846298218
    4. 'avec' → logprob: -2.4711194038391113
    5. 'with' → logprob: -2.5961194038391113
    6. '_with' → logprob: -3.8461194038391113
    7. ' avec' → logprob: -3.9711194038391113
    8. '
' → logprob: -4.221119403839111
    9. '_v' → logprob: -4.346119403839111
    10. ')' → logprob: -4.596119403839111

Token 3785: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.002258498687297106
    2. 'ar' → logprob: -6.50225830078125
    3. '#' → logprob: -8.12725830078125
    4. '   ' → logprob: -8.25225830078125
    5. 'des' → logprob: -9.62725830078125
    6. ' arbres' → logprob: -9.75225830078125
    7. '```' → logprob: -10.00225830078125
    8. '       ' → logprob: -11.75225830078125
    9. '0' → logprob: -12.37725830078125
    10. 'for' → logprob: -12.50225830078125

Token 3786: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27178695797920227
    2. ')' → logprob: -2.89678692817688
    3. ':' → logprob: -3.89678692817688
    4. '[i' → logprob: -4.021787166595459
    5. ')
' → logprob: -4.021787166595459
    6. ':
' → logprob: -4.021787166595459
    7. '
' → logprob: -4.271787166595459
    8. '       ' → logprob: -4.271787166595459
    9. ']' → logprob: -4.521787166595459
    10. '[' → logprob: -4.771787166595459

Token 3787: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9152648448944092
    2. '   ' → logprob: -1.2902648448944092
    3. ':
' → logprob: -2.540264844894409
    4. 'def' → logprob: -2.915264844894409
    5. '```' → logprob: -2.915264844894409
    6. '[' → logprob: -3.165264844894409
    7. '[
' → logprob: -3.665264844894409
    8. 'import' → logprob: -4.665265083312988
    9. ')' → logprob: -4.790265083312988
    10. '
' → logprob: -5.040265083312988

Token 3788: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015236332081258297
    2. ':' → logprob: -5.3902363777160645
    3. ':
' → logprob: -6.0152363777160645
    4. '
' → logprob: -6.2652363777160645
    5. '       ' → logprob: -6.6402363777160645
    6. 'def' → logprob: -7.0152363777160645
    7. ')' → logprob: -7.6402363777160645
    8. '```' → logprob: -7.8902363777160645
    9. 'import' → logprob: -8.015235900878906
    10. '#' → logprob: -8.140235900878906

Token 3789: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016092555597424507
    2. ':' → logprob: -5.891092777252197
    3. '       ' → logprob: -5.891092777252197
    4. '                   ' → logprob: -6.516092777252197
    5. '               ' → logprob: -6.766092777252197
    6. ',' → logprob: -7.266092777252197
    7. 'def' → logprob: -7.266092777252197
    8. '```' → logprob: -7.516092777252197
    9. '                           ' → logprob: -7.516092777252197
    10. '#' → logprob: -7.641092777252197

Token 3790: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03775821998715401
    2. '#' (adapté à ' #') → logprob: -4.7877583503723145
    3. 'def' → logprob: -4.7877583503723145
    4. 'import' → logprob: -5.4127583503723145
    5. ':' → logprob: -5.9127583503723145
    6. '       ' → logprob: -5.9127583503723145
    7. '
' → logprob: -6.7877583503723145
    8. ')' → logprob: -6.9127583503723145
    9. ':
' → logprob: -6.9127583503723145
    10. '```' → logprob: -6.9127583503723145

Token 3791: ' Par' (ID: 3371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09373360127210617
    2. 'import' → logprob: -4.218733787536621
    3. '
' → logprob: -4.468733787536621
    4. ':' → logprob: -4.593733787536621
    5. 'dist' → logprob: -4.843733787536621
    6. '       ' → logprob: -4.968733787536621
    7. ')' → logprob: -4.968733787536621
    8. ':
' → logprob: -5.468733787536621
    9. '```' → logprob: -5.468733787536621
    10. '):' → logprob: -5.843733787536621

Token 3792: ' contre' (ID: 17771)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4951173067092896
    2. 'case' → logprob: -1.4951173067092896
    3. 'def' → logprob: -1.6201173067092896
    4. '
' → logprob: -2.2451171875
    5. 'fait' → logprob: -2.8701171875
    6. '```' → logprob: -3.7451171875
    7. 'r' → logprob: -3.8701171875
    8. 'u' → logprob: -4.1201171875
    9. 'n' → logprob: -4.2451171875
    10. 'cess' → logprob: -4.3701171875

Token 3793: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1990567445755005
    2. ' :' → logprob: -1.5740567445755005
    3. '   ' → logprob: -2.574056625366211
    4. '#' → logprob: -2.949056625366211
    5. ' (' → logprob: -2.949056625366211
    6. ' ' → logprob: -3.074056625366211
    7. '                           ' → logprob: -3.449056625366211
    8. '                               ' → logprob: -3.699056625366211
    9. '(' → logprob: -4.074056625366211
    10. '                       ' → logprob: -4.199056625366211

Token 3794: ' lors' (ID: 15456)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8261617422103882
    2. '   ' → logprob: -1.5761617422103882
    3. ':' → logprob: -2.3261618614196777
    4. ' on' → logprob: -2.3261618614196777
    5. ' #' → logprob: -3.3261618614196777
    6. '                   ' → logprob: -3.8261618614196777
    7. ' :' → logprob: -4.201161861419678
    8. ' ' → logprob: -4.576161861419678
    9. '       ' → logprob: -5.076161861419678
    10. ' (' → logprob: -5.201161861419678

Token 3795: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.276041030883789
    2. '   ' → logprob: -1.526041030883789
    3. ' de' → logprob: -1.526041030883789
    4. 'def' → logprob: -2.401041030883789
    5. '       ' → logprob: -3.276041030883789
    6. '#' → logprob: -3.526041030883789
    7. ' des' → logprob: -4.026041030883789
    8. 'à' → logprob: -4.026041030883789
    9. ')' → logprob: -4.401041030883789
    10. 'd' → logprob: -4.651041030883789

Token 3796: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8835157155990601
    2. 'l' → logprob: -1.25851571559906
    3. 'cou' → logprob: -2.1335158348083496
    4. 'le' → logprob: -3.5085158348083496
    5. 'cut' → logprob: -3.6335158348083496
    6. 'dé' → logprob: -3.6335158348083496
    7. 'pass' → logprob: -3.8835158348083496
    8. 'd' → logprob: -4.00851583480835
    9. '   ' → logprob: -4.75851583480835
    10. '#' → logprob: -5.38351583480835

Token 3797: ' coupe' (ID: 71780)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.4401586055755615
    2. 'cut' → logprob: -1.9401586055755615
    3. 'def' → logprob: -2.1901586055755615
    4. 'dé' → logprob: -2.3151586055755615
    5. 'cou' → logprob: -2.8151586055755615
    6. '#' → logprob: -3.1901586055755615
    7. 'for' → logprob: -3.3151586055755615
    8. 'continu' → logprob: -3.8151586055755615
    9. ' traversal' → logprob: -3.9401586055755615
    10. 'd' → logprob: -4.190158843994141

Token 3798: ',' (ID: 11)
  Prédit: ' sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sur' → logprob: -1.621613621711731
    2. ' de' → logprob: -2.3716135025024414
    3. 'sur' → logprob: -2.3716135025024414
    4. ' des' → logprob: -2.6216135025024414
    5. '   ' → logprob: -2.7466135025024414
    6. '_sur' → logprob: -2.8716135025024414
    7. ' (' → logprob: -2.9966135025024414
    8. '       ' → logprob: -3.1216135025024414
    9. 's' → logprob: -3.3716135025024414
    10. ' d' → logprob: -3.4966135025024414

Token 3799: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6941823363304138
    2. '#' → logprob: -1.0691823959350586
    3. 'on' → logprob: -2.4441823959350586
    4. ' #' → logprob: -4.694182395935059
    5. '   ' → logprob: -4.819182395935059
    6. ' il' → logprob: -4.944182395935059
    7. ' la' → logprob: -5.069182395935059
    8. ' ' → logprob: -5.569182395935059
    9. ''on' → logprob: -5.819182395935059
    10. ',' → logprob: -5.944182395935059

Token 3800: ' se' (ID: 458)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.9352128505706787
    2. 'pe' → logprob: -1.0602128505706787
    3. 'ne' → logprob: -1.6852128505706787
    4. ' ne' → logprob: -3.3102128505706787
    5. '#' → logprob: -4.435213088989258
    6. ' doit' → logprob: -5.060213088989258
    7. ' peut' → logprob: -5.185213088989258
    8. 'pour' → logprob: -5.310213088989258
    9. 'n' → logprob: -6.560213088989258
    10. ' peux' → logprob: -6.560213088989258

Token 3801: ' trouve' (ID: 30913)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.26832208037376404
    2. ' dé' → logprob: -1.6433221101760864
    3. 'pe' → logprob: -3.643321990966797
    4. '   ' → logprob: -5.393321990966797
    5. 'place' → logprob: -5.893321990966797
    6. 'd' → logprob: -6.768321990966797
    7. '       ' → logprob: -6.768321990966797
    8. '{
' → logprob: -7.268321990966797
    9. '_d' → logprob: -7.268321990966797
    10. '```' → logprob: -7.643321990966797

Token 3802: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.0033681849017739296
    2. ' sur' → logprob: -7.003368377685547
    3. 'à' → logprob: -7.253368377685547
    4. 'adj' → logprob: -7.503368377685547
    5. 'possible' → logprob: -7.753368377685547
    6. 's' → logprob: -8.753368377685547
    7. '_sur' → logprob: -9.378368377685547
    8. 'au' → logprob: -9.503368377685547
    9. '=' → logprob: -10.128368377685547
    10. 'dans' → logprob: -10.253368377685547

Token 3803: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.6432620882987976
    2. 'une' → logprob: -0.7682620882987976
    3. 'case' → logprob: -5.768261909484863
    4. ' une' → logprob: -6.268261909484863
    5. ' la' → logprob: -6.393261909484863
    6. 'a' → logprob: -6.768261909484863
    7. 'celle' → logprob: -6.768261909484863
    8. 'l' → logprob: -8.143261909484863
    9. 'adj' → logprob: -8.518261909484863
    10. ''une' → logprob: -8.643261909484863

Token 3804: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.28311777114868164
    2. 'case' → logprob: -1.4081177711486816
    3. 'vo' → logprob: -7.908117771148682
    4. 'adj' → logprob: -7.908117771148682
    5. ' adjacent' → logprob: -8.033117294311523
    6. ' ' → logprob: -8.033117294311523
    7. '(case' → logprob: -9.408117294311523
    8. ' ' → logprob: -9.783117294311523
    9. '
' → logprob: -10.283117294311523
    10. ' adj' → logprob: -10.408117294311523

Token 3805: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.5020835995674133
    2. ' vide' → logprob: -1.6270835399627686
    3. ' avec' → logprob: -3.0020835399627686
    4. 'avec' → logprob: -3.0020835399627686
    5. '```' → logprob: -3.7520835399627686
    6. ' sans' → logprob: -4.002083778381348
    7. 'with' → logprob: -4.377083778381348
    8. ')' → logprob: -4.627083778381348
    9. 'sans' → logprob: -4.627083778381348
    10. ' with' → logprob: -5.127083778381348

Token 3806: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.7551583051681519
    2. ' (' → logprob: -2.0051584243774414
    3. '```' → logprob: -2.1301584243774414
    4. ',' → logprob: -2.5051584243774414
    5. '
' → logprob: -2.6301584243774414
    6. ')' → logprob: -2.6301584243774414
    7. ' adjacent' → logprob: -3.0051584243774414
    8. ':' → logprob: -3.1301584243774414
    9. '   ' → logprob: -3.2551584243774414
    10. ' adj' → logprob: -3.7551584243774414

Token 3807: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.3941068649291992
    2. 'ac' → logprob: -1.1441068649291992
    3. '
' → logprob: -5.894106864929199
    4. '```' → logprob: -6.519106864929199
    5. 'acency' → logprob: -6.644106864929199
    6. ')' → logprob: -7.519106864929199
    7. ']' → logprob: -8.5191068649292
    8. ')
' → logprob: -8.8941068649292
    9. ' 
' → logprob: -8.8941068649292
    10. '   ' → logprob: -9.2691068649292

Token 3808: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.04784023389220238
    2. 'ent' → logprob: -3.297840118408203
    3. '
' → logprob: -6.297840118408203
    4. '#' → logprob: -6.297840118408203
    5. '   ' → logprob: -7.172840118408203
    6. 'e' → logprob: -7.422840118408203
    7. ')
' → logprob: -7.547840118408203
    8. ')' → logprob: -7.547840118408203
    9. 'acent' → logprob: -7.672840118408203
    10. 'ac' → logprob: -8.047840118408203

Token 3809: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7164048552513123
    2. ':' → logprob: -1.466404914855957
    3. ' (' → logprob: -2.841404914855957
    4. '```' → logprob: -3.216404914855957
    5. '   ' → logprob: -3.341404914855957
    6. ')' → logprob: -3.466404914855957
    7. '.' → logprob: -3.841404914855957
    8. '(' → logprob: -4.591404914855957
    9. ':
' → logprob: -4.591404914855957
    10. '):' → logprob: -5.091404914855957

Token 3810: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3834988474845886
    2. '                   ' → logprob: -1.7584989070892334
    3. ' #' → logprob: -3.6334989070892334
    4. '   ' → logprob: -3.8834989070892334
    5. '               ' → logprob: -3.8834989070892334
    6. 'et' → logprob: -4.758498668670654
    7. ' et' → logprob: -4.883498668670654
    8. ',' → logprob: -4.883498668670654
    9. 'not' → logprob: -5.133498668670654
    10. ')' → logprob: -5.383498668670654

Token 3811: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.03316112235188484
    2. '#' → logprob: -4.908161163330078
    3. 'l' → logprob: -5.283161163330078
    4. 'le' → logprob: -5.408161163330078
    5. 'cou' → logprob: -5.408161163330078
    6. ' on' → logprob: -5.533161163330078
    7. 'p' → logprob: -6.658161163330078
    8. 'la' → logprob: -7.033161163330078
    9. '       ' → logprob: -7.283161163330078
    10. '           ' → logprob: -7.533161163330078

Token 3812: ' coupe' (ID: 71780)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.6618208289146423
    2. 'do' → logprob: -1.911820888519287
    3. 'continue' → logprob: -1.911820888519287
    4. ' coupe' → logprob: -3.036820888519287
    5. '#' → logprob: -3.786820888519287
    6. 'pe' → logprob: -4.411820888519287
    7. ' continue' → logprob: -4.411820888519287
    8. '       ' → logprob: -4.411820888519287
    9. 'cut' → logprob: -4.661820888519287
    10. 'dé' → logprob: -4.661820888519287

Token 3813: ' les' (ID: 1341)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.3508540391921997
    2. ',' → logprob: -1.8508540391921997
    3. ')' → logprob: -1.9758540391921997
    4. '(' → logprob: -2.22585391998291
    5. ' et' → logprob: -2.22585391998291
    6. '<|end|>' → logprob: -2.85085391998291
    7. ' ' → logprob: -2.97585391998291
    8. '```' → logprob: -3.47585391998291
    9. '_' → logprob: -4.10085391998291
    10. 'et' → logprob: -4.47585391998291

Token 3814: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.23601850867271423
    2. ' arbres' → logprob: -1.6110185384750366
    3. 'ar' → logprob: -5.361018657684326
    4. '#' → logprob: -5.486018657684326
    5. 'trees' → logprob: -7.861018657684326
    6. '_' → logprob: -8.236018180847168
    7. ' #' → logprob: -8.611018180847168
    8. ' ' → logprob: -8.736018180847168
    9. '   ' → logprob: -9.236018180847168
    10. ' arbre' → logprob: -9.361018180847168

Token 3815: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5594736337661743
    2. ',' → logprob: -1.8094736337661743
    3. ')' → logprob: -2.3094735145568848
    4. '```' → logprob: -2.4344735145568848
    5. ' (' → logprob: -2.8094735145568848
    6. '       ' → logprob: -2.9344735145568848
    7. 'adj' → logprob: -3.0594735145568848
    8. ' et' → logprob: -3.6844735145568848
    9. '.' → logprob: -4.059473514556885
    10. 'sur' → logprob: -4.184473514556885

Token 3816: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.039653148502111435
    2. 'l' → logprob: -3.9146530628204346
    3. 'une' → logprob: -4.789653301239014
    4. '(' → logprob: -5.039653301239014
    5. '(i' → logprob: -6.664653301239014
    6. '(l' → logprob: -7.414653301239014
    7. 'A' → logprob: -7.414653301239014
    8. 'les' → logprob: -7.664653301239014
    9. ' la' → logprob: -8.039652824401855
    10. 'adj' → logprob: -8.539652824401855

Token 3817: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.07540858536958694
    2. '#' → logprob: -3.700408697128296
    3. 'adj' → logprob: -4.075408458709717
    4. '
' → logprob: -4.700408458709717
    5. 'vo' → logprob: -4.950408458709717
    6. 'cell' → logprob: -5.325408458709717
    7. '   ' → logprob: -5.575408458709717
    8. ' case' → logprob: -6.325408458709717
    9. '"' → logprob: -7.575408458709717
    10. '```' → logprob: -8.200408935546875

Token 3818: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.716910719871521
    2. 'vide' → logprob: -1.341910719871521
    3. 'adj' → logprob: -3.0919108390808105
    4. ' vide' → logprob: -3.3419108390808105
    5. '```' → logprob: -3.3419108390808105
    6. 'avec' → logprob: -3.7169108390808105
    7. 'sans' → logprob: -3.8419108390808105
    8. ',' → logprob: -4.0919108390808105
    9. ' sans' → logprob: -4.2169108390808105
    10. '(vo' → logprob: -4.7169108390808105

Token 3819: 'isine' (ID: 24412)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.7937682271003723
    2. 'isine' → logprob: -1.4187681674957275
    3. 'i' → logprob: -2.5437681674957275
    4. '+' → logprob: -2.5437681674957275
    5. 'ide' → logprob: -2.6687681674957275
    6. 'ir' → logprob: -4.543768405914307
    7. 'id' → logprob: -4.543768405914307
    8. '#' → logprob: -4.668768405914307
    9. '   ' → logprob: -5.293768405914307
    10. 'ie' → logprob: -5.418768405914307

Token 3820: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9380455613136292
    2. '   ' → logprob: -1.0630455017089844
    3. ')' → logprob: -2.9380455017089844
    4. ':' → logprob: -3.3130455017089844
    5. '[' → logprob: -4.063045501708984
    6. ' (' → logprob: -4.188045501708984
    7. '                           ' → logprob: -4.438045501708984
    8. '```' → logprob: -4.438045501708984
    9. ' ' → logprob: -4.813045501708984
    10. '(n' → logprob: -4.813045501708984

Token 3821: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049527738243341446
    2. '                   ' → logprob: -4.049527645111084
    3. '               ' → logprob: -5.299527645111084
    4. '       ' → logprob: -5.299527645111084
    5. ',' → logprob: -5.424527645111084
    6. ')' → logprob: -6.049527645111084
    7. '                       ' → logprob: -6.174527645111084
    8. '           ' → logprob: -6.174527645111084
    9. '(' → logprob: -6.424527645111084
    10. '#' → logprob: -6.674527645111084

Token 3822: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010621286928653717
    2. '       ' → logprob: -6.010621070861816
    3. '                   ' → logprob: -6.385621070861816
    4. ',' → logprob: -6.885621070861816
    5. ':' → logprob: -7.385621070861816
    6. '               ' → logprob: -7.510621070861816
    7. '```' → logprob: -7.510621070861816
    8. '                       ' → logprob: -7.635621070861816
    9. '                           ' → logprob: -7.885621070861816
    10. '.' → logprob: -8.135621070861816

Token 3823: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0073505667969584465
    2. '       ' → logprob: -5.882350444793701
    3. '    
' → logprob: -7.382350444793701
    4. ':' → logprob: -7.757350444793701
    5. '```' → logprob: -7.882350444793701
    6. '
' → logprob: -7.882350444793701
    7. '\' → logprob: -8.25735092163086
    8. '"' → logprob: -8.38235092163086
    9. '\n' → logprob: -8.38235092163086
    10. '           ' → logprob: -8.50735092163086

Token 3824: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1074841171503067
    2. ':' → logprob: -3.8574841022491455
    3. ')' → logprob: -4.232484340667725
    4. 'import' → logprob: -4.232484340667725
    5. '       ' → logprob: -4.607484340667725
    6. '```' → logprob: -4.857484340667725
    7. 'dist' → logprob: -5.232484340667725
    8. '):' → logprob: -5.232484340667725
    9. 'def' → logprob: -5.607484340667725
    10. ':
' → logprob: -6.107484340667725

Token 3825: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04954485967755318
    2. '
' → logprob: -4.174544811248779
    3. '       ' → logprob: -5.299544811248779
    4. ')' → logprob: -5.424544811248779
    5. ':' → logprob: -5.424544811248779
    6. 'import' → logprob: -6.174544811248779
    7. 'dist' → logprob: -6.299544811248779
    8. ',' → logprob: -6.424544811248779
    9. ':
' → logprob: -6.549544811248779
    10. '#' → logprob: -6.549544811248779

Token 3826: ' décou' (ID: 68302)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8169775009155273
    2. ' case' → logprob: -2.1919775009155273
    3. '
' → logprob: -2.4419775009155273
    4. ' voisin' → logprob: -3.0669775009155273
    5. ' #' → logprob: -3.1919775009155273
    6. ' cost' → logprob: -3.9419775009155273
    7. ' code' → logprob: -4.441977500915527
    8. ' ' → logprob: -4.441977500915527
    9. 'cost' → logprob: -4.566977500915527
    10. 's' → logprob: -4.566977500915527

Token 3827: 'page' (ID: 5342)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5539841651916504
    2. 'd' → logprob: -2.9289841651916504
    3. 'de' → logprob: -2.9289841651916504
    4. 'u' → logprob: -3.0539841651916504
    5. 'p' → logprob: -3.5539841651916504
    6. 'nt' → logprob: -3.6789841651916504
    7. '   ' → logprob: -3.8039841651916504
    8. '       ' → logprob: -3.8039841651916504
    9. 'r' → logprob: -3.9289841651916504
    10. '#' → logprob: -3.9289841651916504

Token 3828: ' en' (ID: 469)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.522310733795166
    2. ' de' → logprob: -2.397310733795166
    3. '#' → logprob: -2.522310733795166
    4. '   ' → logprob: -2.772310733795166
    5. '```' → logprob: -3.022310733795166
    6. '
' → logprob: -3.272310733795166
    7. ' complet' → logprob: -3.272310733795166
    8. 'des' → logprob: -3.522310733795166
    9. 's' → logprob: -3.772310733795166
    10. ' #' → logprob: -3.772310733795166

Token 3829: ' coût' (ID: 73109)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.9038060903549194
    2. '#' → logprob: -2.153806209564209
    3. 'pass' → logprob: -2.778806209564209
    4. 'vo' → logprob: -3.028806209564209
    5. '
' → logprob: -3.028806209564209
    6. 'pas' → logprob: -3.153806209564209
    7. 'continue' → logprob: -3.153806209564209
    8. 'case' → logprob: -3.278806209564209
    9. 'cases' → logprob: -3.278806209564209
    10. '"' → logprob: -3.403806209564209

Token 3830: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4767805337905884
    2. '   ' → logprob: -1.7267805337905884
    3. ' des' → logprob: -2.226780414581299
    4. 'des' → logprob: -2.851780414581299
    5. 'for' → logprob: -2.976780414581299
    6. '=' → logprob: -3.101780414581299
    7. 'de' → logprob: -3.601780414581299
    8. ' de' → logprob: -3.726780414581299
    9. '#' → logprob: -3.851780414581299
    10. 's' → logprob: -3.976780414581299

Token 3831: ' déplacer' (ID: 142135)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.12094627320766449
    2. 'pass' → logprob: -3.620946168899536
    3. 'case' → logprob: -3.995946168899536
    4. 'dé' → logprob: -4.120946407318115
    5. 'la' → logprob: -4.745946407318115
    6. 'le' → logprob: -4.995946407318115
    7. 'l' → logprob: -5.495946407318115
    8. 'c' → logprob: -5.495946407318115
    9. 'cut' → logprob: -5.620946407318115
    10. 'cha' → logprob: -5.745946407318115

Token 3832: ' semble' (ID: 42899)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' et' → logprob: -1.5776723623275757
    2. ',' → logprob: -1.9526723623275757
    3. 'sur' → logprob: -2.3276724815368652
    4. ')' → logprob: -2.7026724815368652
    5. '_' → logprob: -2.8276724815368652
    6. '=' → logprob: -2.9526724815368652
    7. ' =' → logprob: -3.0776724815368652
    8. 'et' → logprob: -3.3276724815368652
    9. ' ' → logprob: -3.4526724815368652
    10. ' +' → logprob: -3.7026724815368652

Token 3833: ' incl' (ID: 11368)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9054710268974304
    2. 'possible' → logprob: -2.030471086502075
    3. '+' → logprob: -2.655471086502075
    4. 's' → logprob: -3.155471086502075
    5. ' =' → logprob: -3.280471086502075
    6. 'sur' → logprob: -3.530471086502075
    7. 'se' → logprob: -3.655471086502075
    8. '```' → logprob: -3.780471086502075
    9. '_' → logprob: -4.405470848083496
    10. 'complex' → logprob: -4.405470848083496

Token 3834: 'ure' (ID: 627)
  Prédit: 'ément'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.9798561334609985
    2. ')' → logprob: -2.229856014251709
    3. '   ' → logprob: -2.729856014251709
    4. '#' → logprob: -2.854856014251709
    5. 'é' → logprob: -2.979856014251709
    6. 'm' → logprob: -2.979856014251709
    7. 'ustr' → logprob: -3.104856014251709
    8. 'imité' → logprob: -3.979856014251709
    9. 'ement' → logprob: -4.104856014251709
    10. 'ment' → logprob: -4.354856014251709

Token 3835: ' uniquement' (ID: 65527)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.743095874786377
    2. 'un' → logprob: -2.368095874786377
    3. ' les' → logprob: -2.493095874786377
    4. 'le' → logprob: -2.868095874786377
    5. 'une' → logprob: -2.993095874786377
    6. 's' → logprob: -3.118095874786377
    7. 'à' → logprob: -3.118095874786377
    8. 'la' → logprob: -3.368095874786377
    9. 'au' → logprob: -3.368095874786377
    10. ' la' → logprob: -3.368095874786377

Token 3836: ' les' (ID: 1341)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.3878434896469116
    2. 'le' → logprob: -1.6378434896469116
    3. 'les' → logprob: -2.387843608856201
    4. ' le' → logprob: -2.387843608856201
    5. ' les' → logprob: -2.512843608856201
    6. ' couper' → logprob: -2.637843608856201
    7. ' la' → logprob: -3.762843608856201
    8. ' ' → logprob: -3.887843608856201
    9. 'la' → logprob: -4.137843608856201
    10. 'l' → logprob: -4.262843608856201

Token 3837: ' cases' (ID: 7911)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -1.8983583450317383
    2. 'case' → logprob: -2.0233583450317383
    3. 'cases' → logprob: -2.1483583450317383
    4. 'co' → logprob: -2.2733583450317383
    5. ' case' → logprob: -2.3983583450317383
    6. ' arbres' → logprob: -3.5233583450317383
    7. 'for' → logprob: -3.6483583450317383
    8. ' cases' → logprob: -3.7733583450317383
    9. ' for' → logprob: -4.023358345031738
    10. 'adj' → logprob: -4.148358345031738

Token 3838: ' v' (ID: 323)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.3884502351284027
    2. '_v' → logprob: -1.888450264930725
    3. ' vide' → logprob: -2.7634501457214355
    4. 'with' → logprob: -3.6384501457214355
    5. '```' → logprob: -3.8884501457214355
    6. '_' → logprob: -5.0134501457214355
    7. 'avec' → logprob: -5.2634501457214355
    8. ' with' → logprob: -5.2634501457214355
    9. 'v' → logprob: -5.2634501457214355
    10. ' v' → logprob: -5.3884501457214355

Token 3839: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.7085674405097961
    2. 'i' → logprob: -1.5835673809051514
    3. 'ide' → logprob: -2.4585673809051514
    4. 'id' → logprob: -2.7085673809051514
    5. 'u' → logprob: -3.7085673809051514
    6. ']' → logprob: -4.3335676193237305
    7. '[' → logprob: -4.4585676193237305
    8. '```' → logprob: -4.8335676193237305
    9. '[i' → logprob: -4.9585676193237305
    10. 'o' → logprob: -4.9585676193237305

Token 3840: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2431412935256958
    2. '   ' → logprob: -1.8681412935256958
    3. '
' → logprob: -2.1181411743164062
    4. ')' → logprob: -2.7431411743164062
    5. '[' → logprob: -2.9931411743164062
    6. '[i' → logprob: -3.4931411743164062
    7. '_' → logprob: -3.6181411743164062
    8. '[
' → logprob: -3.6181411743164062
    9. ':' → logprob: -3.7431411743164062
    10. ' ' → logprob: -3.8681411743164062

Token 3841: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11884789913892746
    2. ':' → logprob: -3.4938478469848633
    3. 'def' → logprob: -4.368847846984863
    4. '
' → logprob: -4.618847846984863
    5. '       ' → logprob: -4.868847846984863
    6. ',' → logprob: -4.868847846984863
    7. ']' → logprob: -4.868847846984863
    8. 'import' → logprob: -5.243847846984863
    9. ')' → logprob: -5.493847846984863
    10. '```' → logprob: -5.618847846984863

Token 3842: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05342179536819458
    2. 'import' → logprob: -3.92842173576355
    3. 'dist' → logprob: -4.553421974182129
    4. ':' → logprob: -5.428421974182129
    5. 'def' → logprob: -5.678421974182129
    6. 'from' → logprob: -5.803421974182129
    7. '
' → logprob: -5.928421974182129
    8. ')' → logprob: -6.678421974182129
    9. '       ' → logprob: -6.928421974182129
    10. '```' → logprob: -7.053421974182129

Token 3843: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008957972750067711
    2. '\n' → logprob: -6.633957862854004
    3. 'import' → logprob: -6.758957862854004
    4. '       ' → logprob: -6.883957862854004
    5. '```' → logprob: -7.008957862854004
    6. ':' → logprob: -7.633957862854004
    7. '\' → logprob: -7.633957862854004
    8. '    
' → logprob: -7.758957862854004
    9. '"' → logprob: -7.883957862854004
    10. ')' → logprob: -8.008957862854004

Token 3844: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02131284773349762
    2. 'import' → logprob: -4.271312713623047
    3. 'from' → logprob: -5.896312713623047
    4. 'dist' → logprob: -6.021312713623047
    5. '#' (adapté à ' #') → logprob: -7.771312713623047
    6. '
' → logprob: -7.896312713623047
    7. '```' → logprob: -8.396312713623047
    8. ')' → logprob: -8.896312713623047
    9. 'def' → logprob: -9.021312713623047
    10. '       ' → logprob: -9.271312713623047

Token 3845: ' Donc' (ID: 88837)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07859846949577332
    2. 'import' → logprob: -3.5785984992980957
    3. 'dist' → logprob: -4.078598499298096
    4. '
' → logprob: -4.578598499298096
    5. 'from' → logprob: -5.578598499298096
    6. ':' → logprob: -6.078598499298096
    7. '#' → logprob: -6.328598499298096
    8. 'def' → logprob: -6.328598499298096
    9. '```' → logprob: -6.328598499298096
    10. ')' → logprob: -6.328598499298096

Token 3846: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8401831388473511
    2. 'dist' → logprob: -1.215183138847351
    3. '#' → logprob: -2.4651832580566406
    4. ' dist' → logprob: -2.5901832580566406
    5. ':' → logprob: -3.4651832580566406
    6. '"' → logprob: -4.340183258056641
    7. ' #' → logprob: -4.590183258056641
    8. ':
' → logprob: -4.840183258056641
    9. 'import' → logprob: -5.465183258056641
    10. '```' → logprob: -5.465183258056641

Token 3847: ' modèle' (ID: 45121)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4103376865386963
    2. '
' → logprob: -2.5353376865386963
    3. 'n' → logprob: -2.6603376865386963
    4. ' #' → logprob: -2.9103376865386963
    5. 'def' → logprob: -3.5353376865386963
    6. '   ' → logprob: -4.535337448120117
    7. 'dist' → logprob: -4.535337448120117
    8. 'import' → logprob: -4.910337448120117
    9. ')' → logprob: -5.160337448120117
    10. ' 
' → logprob: -5.285337448120117

Token 3848: ' clar' (ID: 16702)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7889031171798706
    2. ':' → logprob: -1.1639031171798706
    3. '=' → logprob: -1.7889031171798706
    4. ' :' → logprob: -4.16390323638916
    5. '```' → logprob: -4.16390323638916
    6. ':
' → logprob: -5.16390323638916
    7. '
' → logprob: -5.66390323638916
    8. '_' → logprob: -5.91390323638916
    9. '   ' → logprob: -6.03890323638916
    10. ' ' → logprob: -6.16390323638916

Token 3849: 'ifié' (ID: 49927)
  Prédit: 'ification'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ification' → logprob: -0.8921824097633362
    2. 'ass' → logprob: -1.8921823501586914
    3. 'def' → logprob: -2.0171823501586914
    4. 'e' → logprob: -2.3921823501586914
    5. '#' → logprob: -2.5171823501586914
    6. '
' → logprob: -3.3921823501586914
    7. '```' → logprob: -3.8921823501586914
    8. 'if' → logprob: -4.142182350158691
    9. 'ifié' → logprob: -4.517182350158691
    10. '   ' → logprob: -4.767182350158691

Token 3850: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.784838855266571
    2. ':' → logprob: -0.909838855266571
    3. 'import' → logprob: -3.034838914871216
    4. ':
' → logprob: -3.159838914871216
    5. 'from' → logprob: -4.534838676452637
    6. 'def' → logprob: -4.784838676452637
    7. 'dist' → logprob: -5.159838676452637
    8. ',' → logprob: -6.159838676452637
    9. '#' → logprob: -6.159838676452637
    10. '       ' → logprob: -6.284838676452637

Token 3851: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001048646867275238
    2. ':' → logprob: -8.126049041748047
    3. '       ' → logprob: -8.501049041748047
    4. '#' → logprob: -8.751049041748047
    5. '```' → logprob: -9.126049041748047
    6. '
' → logprob: -9.501049041748047
    7. '    
' → logprob: -9.876049041748047
    8. '.' → logprob: -10.501049041748047
    9. ',' → logprob: -10.751049041748047
    10. '\' → logprob: -11.376049041748047

Token 3852: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004802007228136063
    2. '
' → logprob: -6.129802227020264
    3. '       ' → logprob: -6.754802227020264
    4. '#' (adapté à ' #') → logprob: -7.754802227020264
    5. '    
' → logprob: -8.629801750183105
    6. ':' → logprob: -9.504801750183105
    7. '```' → logprob: -9.629801750183105
    8. '"' → logprob: -9.629801750183105
    9. ')' → logprob: -9.879801750183105
    10. 'import' → logprob: -10.004801750183105

Token 3853: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05635031312704086
    2. ':' → logprob: -3.9313502311706543
    3. '#' → logprob: -4.681350231170654
    4. 'dist' → logprob: -5.431350231170654
    5. ':
' → logprob: -5.556350231170654
    6. '
' → logprob: -6.181350231170654
    7. '```' → logprob: -6.181350231170654
    8. '\n' → logprob: -6.431350231170654
    9. '       ' → logprob: -6.556350231170654
    10. '"' → logprob: -6.681350231170654

Token 3854: ' Les' (ID: 7029)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.706992506980896
    2. 'dist' → logprob: -2.0819926261901855
    3. '   ' → logprob: -2.3319926261901855
    4. '
' → logprob: -2.4569926261901855
    5. '#' → logprob: -2.7069926261901855
    6. 'for' → logprob: -2.9569926261901855
    7. ')' → logprob: -3.2069926261901855
    8. '[' → logprob: -3.4569926261901855
    9. ' (' → logprob: -3.5819926261901855
    10. 'import' → logprob: -3.8319926261901855

Token 3855: ' déplacements' (ID: 193957)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.5992190837860107
    2. '#' → logprob: -1.9742190837860107
    3. ')' → logprob: -2.0992190837860107
    4. '_' → logprob: -2.4742190837860107
    5. 'i' → logprob: -2.7242190837860107
    6. 'neighbors' → logprob: -2.7242190837860107
    7. '
' → logprob: -3.5992190837860107
    8. ' ' → logprob: -3.7242190837860107
    9. 'case' → logprob: -3.9742190837860107
    10. '"' → logprob: -4.22421932220459

Token 3856: ' se' (ID: 458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42799147963523865
    2. '_' → logprob: -1.677991509437561
    3. ' =' → logprob: -3.6779913902282715
    4. '=' → logprob: -3.8029913902282715
    5. ',' → logprob: -4.1779913902282715
    6. '   ' → logprob: -4.5529913902282715
    7. ')' → logprob: -4.5529913902282715
    8. ':' → logprob: -5.0529913902282715
    9. '#' → logprob: -5.1779913902282715
    10. ''' → logprob: -5.4279913902282715

Token 3857: ' font' (ID: 5109)
  Prédit: 'font'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'font' → logprob: -0.685221791267395
    2. 'ont' → logprob: -1.435221791267395
    3. 'nt' → logprob: -1.560221791267395
    4. ' font' → logprob: -4.0602216720581055
    5. 'n' → logprob: -5.1852216720581055
    6. 'r' → logprob: -5.6852216720581055
    7. 'continu' → logprob: -5.6852216720581055
    8. 'ffect' → logprob: -6.3102216720581055
    9. 'pe' → logprob: -6.4352216720581055
    10. 'p' → logprob: -6.6852216720581055

Token 3858: ' uniquement' (ID: 65527)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.23614823818206787
    2. ' sur' → logprob: -1.8611482381820679
    3. ' uniquement' → logprob: -3.4861483573913574
    4. ' ' → logprob: -5.111148357391357
    5. '=' → logprob: -5.361148357391357
    6. 's' → logprob: -5.861148357391357
    7. '.' → logprob: -6.361148357391357
    8. 'se' → logprob: -6.611148357391357
    9. '`' → logprob: -6.736148357391357
    10. ')' → logprob: -7.111148357391357

Token 3859: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.027259068563580513
    2. ' sur' → logprob: -3.652259111404419
    3. ' ' → logprob: -8.27725887298584
    4. '```' → logprob: -8.90225887298584
    5. 'dans' → logprob: -9.40225887298584
    6. 'à' → logprob: -9.52725887298584
    7. ' uniquement' → logprob: -9.65225887298584
    8. 'se' → logprob: -9.77725887298584
    9. 's' → logprob: -10.02725887298584
    10. '-sur' → logprob: -10.27725887298584

Token 3860: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.004141091834753752
    2. 'les' → logprob: -6.004140853881836
    3. 'des' → logprob: -7.254140853881836
    4. 'case' → logprob: -7.629140853881836
    5. ' cases' → logprob: -8.004140853881836
    6. '   ' → logprob: -9.879140853881836
    7. '```' → logprob: -10.254140853881836
    8. ' des' → logprob: -10.629140853881836
    9. 'l' → logprob: -12.254140853881836
    10. ' les' → logprob: -12.504140853881836

Token 3861: ' v' (ID: 323)
  Prédit: 'vid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vid' → logprob: -0.618628740310669
    2. 'vide' → logprob: -1.243628740310669
    3. ' v' → logprob: -2.118628740310669
    4. 'v' → logprob: -3.743628740310669
    5. 'sans' → logprob: -4.99362850189209
    6. ' vide' → logprob: -5.11862850189209
    7. ' sans' → logprob: -5.36862850189209
    8. '_vid' → logprob: -5.61862850189209
    9. '_v' → logprob: -5.86862850189209
    10. '```' → logprob: -6.36862850189209

Token 3862: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.0938471257686615
    2. 'ide' → logprob: -3.7188470363616943
    3. 'u' → logprob: -4.468847274780273
    4. 'id' → logprob: -4.843847274780273
    5. 'i' → logprob: -5.593847274780273
    6. 'ac' → logprob: -5.718847274780273
    7. 'v' → logprob: -5.718847274780273
    8. '   ' → logprob: -5.718847274780273
    9. '
' → logprob: -5.843847274780273
    10. '#' → logprob: -6.031347274780273

Token 3863: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1735495328903198
    2. '[' → logprob: -1.5485495328903198
    3. '\n' → logprob: -2.1735496520996094
    4. '```' → logprob: -2.7985496520996094
    5. '
' → logprob: -2.9235496520996094
    6. ':' → logprob: -2.9235496520996094
    7. ']' → logprob: -3.4235496520996094
    8. ',' → logprob: -3.9235496520996094
    9. '[
' → logprob: -3.9235496520996094
    10. ' ' → logprob: -3.9235496520996094

Token 3864: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18893900513648987
    2. '#' → logprob: -2.813939094543457
    3. ',' → logprob: -3.188939094543457
    4. '\n' → logprob: -3.688939094543457
    5. '.' → logprob: -4.438939094543457
    6. ',
' → logprob: -5.063939094543457
    7. '
' → logprob: -5.563939094543457
    8. '\' → logprob: -5.688939094543457
    9. '#
' → logprob: -5.688939094543457
    10. ')' → logprob: -5.938939094543457

Token 3865: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03786852955818176
    2. '#' (adapté à ' #') → logprob: -4.912868499755859
    3. '
' → logprob: -4.912868499755859
    4. '.' → logprob: -5.287868499755859
    5. '\n' → logprob: -5.287868499755859
    6. '       ' → logprob: -6.162868499755859
    7. ',' → logprob: -6.537868499755859
    8. ')' → logprob: -6.662868499755859
    9. ':' → logprob: -6.787868499755859
    10. '```' → logprob: -6.912868499755859

Token 3866: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06166578829288483
    2. '
' → logprob: -3.8116657733917236
    3. '\n' → logprob: -4.311666011810303
    4. '#' → logprob: -4.311666011810303
    5. '       ' → logprob: -5.686666011810303
    6. '    
' → logprob: -6.561666011810303
    7. '"' → logprob: -7.561666011810303
    8. '```' → logprob: -7.561666011810303
    9. ':' → logprob: -7.686666011810303
    10. '\' → logprob: -7.686666011810303

Token 3867: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04670331999659538
    2. '   ' → logprob: -3.546703338623047
    3. ' #' → logprob: -4.796703338623047
    4. '
' → logprob: -6.796703338623047
    5. '-' → logprob: -7.296703338623047
    6. '       ' → logprob: -7.546703338623047
    7. ' ' → logprob: -7.671703338623047
    8. ' (' → logprob: -7.796703338623047
    9. '#
' → logprob: -7.796703338623047
    10. 'import' → logprob: -8.046703338623047

Token 3868: ' couper' (ID: 135212)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.9311895966529846
    2. 'i' → logprob: -2.05618953704834
    3. 'cut' → logprob: -2.05618953704834
    4. 'ch' → logprob: -2.43118953704834
    5. ' i' → logprob: -3.05618953704834
    6. '(i' → logprob: -3.05618953704834
    7. 'each' → logprob: -3.30618953704834
    8. ' couper' → logprob: -3.68118953704834
    9. 'cou' → logprob: -3.68118953704834
    10. 'case' → logprob: -4.05618953704834

Token 3869: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7116006016731262
    2. '_' → logprob: -0.9616006016731262
    3. ' les' → logprob: -2.9616005420684814
    4. 'des' → logprob: -3.8366005420684814
    5. ' ' → logprob: -3.9616005420684814
    6. '#' → logprob: -4.3366007804870605
    7. ' des' → logprob: -5.4616007804870605
    8. '```' → logprob: -5.8366007804870605
    9. 'une' → logprob: -6.5866007804870605
    10. 's' → logprob: -6.7116007804870605

Token 3870: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0678086131811142
    2. ' arbres' → logprob: -2.8178086280822754
    3. 'cases' → logprob: -6.317808628082275
    4. '#' → logprob: -6.692808628082275
    5. 'ar' → logprob: -7.067808628082275
    6. 'trees' → logprob: -7.317808628082275
    7. 'for' → logprob: -7.817808628082275
    8. '```' → logprob: -8.317808151245117
    9. ' for' → logprob: -9.317808151245117
    10. '   ' → logprob: -9.817808151245117

Token 3871: ' sur' (ID: 1512)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1999117136001587
    2. 'adj' → logprob: -1.5749117136001587
    3. 'sur' → logprob: -2.574911594390869
    4. '_' → logprob: -2.699911594390869
    5. '_sur' → logprob: -2.824911594390869
    6. ' ' → logprob: -3.199911594390869
    7. ' adjacent' → logprob: -3.324911594390869
    8. ' sur' → logprob: -3.574911594390869
    9. '#' → logprob: -3.574911594390869
    10. ':' → logprob: -3.949911594390869

Token 3872: ' une' (ID: 2463)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.1228903532028198
    2. 'une' → logprob: -1.3728903532028198
    3. '(i' → logprob: -1.6228903532028198
    4. ' la' → logprob: -2.9978904724121094
    5. 'les' → logprob: -3.2478904724121094
    6. ' (' → logprob: -3.3728904724121094
    7. 'l' → logprob: -3.6228904724121094
    8. 'adj' → logprob: -3.6228904724121094
    9. ' une' → logprob: -4.247890472412109
    10. 'un' → logprob: -5.122890472412109

Token 3873: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.6757938265800476
    2. 'vo' → logprob: -1.4257938861846924
    3. 'adj' → logprob: -2.0507938861846924
    4. ' case' → logprob: -2.3007938861846924
    5. ' (' → logprob: -5.050793647766113
    6. '   ' → logprob: -6.050793647766113
    7. '
' → logprob: -6.300793647766113
    8. '#' → logprob: -6.550793647766113
    9. ' adjacent' → logprob: -6.800793647766113
    10. ',' → logprob: -7.050793647766113

Token 3874: ' (' (ID: 350)
  Prédit: 'avec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avec' → logprob: -1.5450044870376587
    2. 'sans' → logprob: -1.6700044870376587
    3. ' avec' → logprob: -2.045004367828369
    4. ' sans' → logprob: -2.170004367828369
    5. 'vide' → logprob: -2.545004367828369
    6. 'adj' → logprob: -2.920004367828369
    7. 'vo' → logprob: -3.045004367828369
    8. 'with' → logprob: -3.420004367828369
    9. '```' → logprob: -3.545004367828369
    10. 'à' → logprob: -3.670004367828369

Token 3875: 'avec' (ID: 64065)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1776392459869385
    2. 'i' → logprob: -1.3026392459869385
    3. ')' → logprob: -1.8026392459869385
    4. '(i' → logprob: -2.1776392459869385
    5. ' )' → logprob: -3.4276392459869385
    6. '[i' → logprob: -4.302639007568359
    7. ' i' → logprob: -4.302639007568359
    8. ' ' → logprob: -4.677639007568359
    9. ',' → logprob: -4.927639007568359
    10. 'adj' → logprob: -4.927639007568359

Token 3876: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.011264383792877197
    2. '0' → logprob: -5.636264324188232
    3. 'des' → logprob: -5.886264324188232
    4. '>' → logprob: -6.511264324188232
    5. 'ar' → logprob: -6.761264324188232
    6. '#' → logprob: -7.136264324188232
    7. 'for' → logprob: -8.13626480102539
    8. '   ' → logprob: -8.38626480102539
    9. ' arbres' → logprob: -8.38626480102539
    10. '+' → logprob: -9.26126480102539

Token 3877: '),' (ID: 936)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.856944739818573
    2. ')' → logprob: -1.7319447994232178
    3. '):' → logprob: -1.7319447994232178
    4. '):
' → logprob: -2.3569447994232178
    5. 'adj' → logprob: -3.7319447994232178
    6. ']' → logprob: -4.231944561004639
    7. ',' → logprob: -4.356944561004639
    8. '[' → logprob: -4.731944561004639
    9. '[j' → logprob: -4.731944561004639
    10. '),' → logprob: -4.731944561004639

Token 3878: ' le' (ID: 505)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.00038562860572710633
    2. ' #' → logprob: -8.625385284423828
    3. '   ' → logprob: -10.125385284423828
    4. 'on' → logprob: -10.375385284423828
    5. '               ' → logprob: -10.375385284423828
    6. 'pass' → logprob: -10.750385284423828
    7. '                   ' → logprob: -10.875385284423828
    8. ' on' → logprob: -11.000385284423828
    9. 'il' → logprob: -11.500385284423828
    10. '           ' → logprob: -11.500385284423828

Token 3879: ' joueur' (ID: 72629)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3409733176231384
    2. ' #' → logprob: -1.9659733772277832
    3. '
' → logprob: -3.590973377227783
    4. ' voisin' → logprob: -3.965973377227783
    5. '"' → logprob: -4.840973377227783
    6. 'for' → logprob: -5.215973377227783
    7. ' ' → logprob: -5.215973377227783
    8. ' ' → logprob: -5.340973377227783
    9. ' for' → logprob: -5.465973377227783
    10. ' "' → logprob: -5.590973377227783

Token 3880: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.479461669921875
    2. 'do' → logprob: -1.354461669921875
    3. '#' → logprob: -3.229461669921875
    4. ' continue' → logprob: -3.979461669921875
    5. 's' → logprob: -4.604461669921875
    6. 'pe' → logprob: -4.729461669921875
    7. ' peut' → logprob: -4.979461669921875
    8. ' do' → logprob: -5.229461669921875
    9. ' must' → logprob: -5.979461669921875
    10. 'adj' → logprob: -5.979461669921875

Token 3881: ' se' (ID: 458)
  Prédit: ' se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -0.4735368490219116
    2. 'se' → logprob: -2.598536968231201
    3. ' être' → logprob: -2.598536968231201
    4. ' pouvoir' → logprob: -2.973536968231201
    5. 'p' → logprob: -3.098536968231201
    6. '#' → logprob: -3.848536968231201
    7. 'être' → logprob: -4.098536968231201
    8. ' couper' → logprob: -4.098536968231201
    9. 'contin' → logprob: -4.348536968231201
    10. ' ' → logprob: -4.348536968231201

Token 3882: ' rendre' (ID: 44629)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.37660160660743713
    2. 'placer' → logprob: -1.7516015768051147
    3. 'dé' → logprob: -2.2516016960144043
    4. 'tenir' → logprob: -4.376601696014404
    5. 'position' → logprob: -4.501601696014404
    6. 'poser' → logprob: -5.126601696014404
    7. '#' → logprob: -6.376601696014404
    8. 'mettre' → logprob: -7.001601696014404
    9. ' déplacer' → logprob: -7.376601696014404
    10. ' trouver' → logprob: -8.126601219177246

Token 3883: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.04935118928551674
    2. 'adj' → logprob: -3.174351215362549
    3. 'à' → logprob: -5.174351215362549
    4. ' sur' → logprob: -8.42435073852539
    5. 'dans' → logprob: -8.54935073852539
    6. 'au' → logprob: -9.42435073852539
    7. '```' → logprob: -9.92435073852539
    8. ' adjacent' → logprob: -10.79935073852539
    9. ' à' → logprob: -11.29935073852539
    10. '_sur' → logprob: -11.54935073852539

Token 3884: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5255411863327026
    2. 'une' → logprob: -0.9005411863327026
    3. ''une' → logprob: -7.400541305541992
    4. 'l' → logprob: -7.650541305541992
    5. 'adj' → logprob: -7.900541305541992
    6. 'la' → logprob: -8.525541305541992
    7. 'a' → logprob: -8.525541305541992
    8. ' la' → logprob: -9.150541305541992
    9. ' l' → logprob: -9.775541305541992
    10. ' un' → logprob: -9.900541305541992

Token 3885: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.17476508021354675
    2. ' case' → logprob: -2.549765110015869
    3. 'adj' → logprob: -2.924765110015869
    4. 'vo' → logprob: -3.799765110015869
    5. '#' → logprob: -6.049765110015869
    6. '
' → logprob: -7.174765110015869
    7. ' adjacent' → logprob: -7.549765110015869
    8. ' #' → logprob: -7.549765110015869
    9. '```' → logprob: -7.674765110015869
    10. ' adj' → logprob: -7.799765110015869

Token 3886: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.2588949203491211
    2. 'vo' → logprob: -2.508894920349121
    3. 'adj' → logprob: -3.008894920349121
    4. ' vide' → logprob: -3.133894920349121
    5. 'sans' → logprob: -3.383894920349121
    6. ' sans' → logprob: -4.508894920349121
    7. ' adj' → logprob: -5.133894920349121
    8. '```' → logprob: -6.883894920349121
    9. ' vo' → logprob: -7.758894920349121
    10. '
' → logprob: -8.508894920349121

Token 3887: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.31683310866355896
    2. ' adj' → logprob: -1.5668331384658813
    3. '_adj' → logprob: -3.566833019256592
    4. 'vo' → logprob: -4.066833019256592
    5. ' vo' → logprob: -4.816833019256592
    6. ' adjacent' → logprob: -5.941833019256592
    7. '_vo' → logprob: -6.566833019256592
    8. ')' → logprob: -6.941833019256592
    9. ' vois' → logprob: -6.941833019256592
    10. '(vo' → logprob: -7.191833019256592

Token 3888: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.11089720577001572
    2. 'acent' → logprob: -2.4858973026275635
    3. '```' → logprob: -4.735897064208984
    4. '   ' → logprob: -5.610897064208984
    5. '
' → logprob: -5.985897064208984
    6. '#' → logprob: -6.860897064208984
    7. ')' → logprob: -7.110897064208984
    8. 'acency' → logprob: -7.235897064208984
    9. '       ' → logprob: -7.860897064208984
    10. ']' → logprob: -7.985897064208984

Token 3889: 'ente' (ID: 1576)
  Prédit: 'ente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ente' → logprob: -0.023653510957956314
    2. 'ent' → logprob: -3.773653507232666
    3. 'acent' → logprob: -9.023653984069824
    4. '#' → logprob: -9.273653984069824
    5. 'cente' → logprob: -9.648653984069824
    6. '   ' → logprob: -10.023653984069824
    7. 'ENTE' → logprob: -11.398653984069824
    8. 'nte' → logprob: -11.398653984069824
    9. 'e' → logprob: -11.773653984069824
    10. 'ante' → logprob: -12.148653984069824

Token 3890: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33376583456993103
    2. '   ' → logprob: -2.208765745162964
    3. '[' → logprob: -3.333765745162964
    4. ',' → logprob: -3.458765745162964
    5. ':
' → logprob: -4.083765983581543
    6. '       ' → logprob: -4.333765983581543
    7. '```' → logprob: -4.333765983581543
    8. '.' → logprob: -4.958765983581543
    9. '               ' → logprob: -5.083765983581543
    10. ' ' → logprob: -5.083765983581543

Token 3891: '   ' (ID: 271)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.46633681654930115
    2. '#' → logprob: -1.0913368463516235
    3. '               ' → logprob: -4.716336727142334
    4. ' #' → logprob: -4.841336727142334
    5. '   ' → logprob: -5.216336727142334
    6. '           ' → logprob: -5.466336727142334
    7. '                           ' → logprob: -5.716336727142334
    8. '                       ' → logprob: -5.841336727142334
    9. '       ' → logprob: -7.091336727142334
    10. '.' → logprob: -7.216336727142334

Token 3892: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.12696097791194916
    2. '                   ' → logprob: -2.3769609928131104
    3. '   ' → logprob: -4.501960754394531
    4. ' #' → logprob: -4.751960754394531
    5. '               ' → logprob: -6.001960754394531
    6. '           ' → logprob: -6.751960754394531
    7. '                       ' → logprob: -7.251960754394531
    8. '       ' → logprob: -7.626960754394531
    9. '                           ' → logprob: -8.001960754394531
    10. '.' → logprob: -8.501960754394531

Token 3893: '  ' (ID: 256)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2847643494606018
    2. '#' → logprob: -1.534764289855957
    3. '   ' → logprob: -4.909764289855957
    4. '                           ' → logprob: -4.909764289855957
    5. '                       ' → logprob: -4.909764289855957
    6. '               ' → logprob: -6.034764289855957
    7. ' #' → logprob: -6.409764289855957
    8. '                    ' → logprob: -6.659764289855957
    9. '                     ' → logprob: -7.284764289855957
    10. '                               ' → logprob: -7.409764289855957

Token 3894: ' y' (ID: 342)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08401965349912643
    2. 'et' → logprob: -3.209019660949707
    3. ' puis' → logprob: -4.334019660949707
    4. ' #' → logprob: -4.834019660949707
    5. 'p' → logprob: -5.209019660949707
    6. '   ' → logprob: -5.709019660949707
    7. '                   ' → logprob: -6.084019660949707
    8. 'don' → logprob: -6.459019660949707
    9. 'adj' → logprob: -6.459019660949707
    10. ' et' → logprob: -6.834019660949707

Token 3895: ' couper' (ID: 135212)
  Prédit: ' couper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couper' → logprob: -1.3014765977859497
    2. '   ' → logprob: -1.5514765977859497
    3. 'être' → logprob: -2.17647647857666
    4. '  ' → logprob: -2.17647647857666
    5. 'cou' → logprob: -3.17647647857666
    6. ' être' → logprob: -3.30147647857666
    7. ' continuer' → logprob: -3.67647647857666
    8. '#' → logprob: -3.92647647857666
    9. 'aj' → logprob: -4.30147647857666
    10. 'p' → logprob: -4.30147647857666

Token 3896: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7075744867324829
    2. ' ' → logprob: -1.832574486732483
    3. ' (' → logprob: -2.4575743675231934
    4. '(' → logprob: -3.0825743675231934
    5. 'les' → logprob: -3.0825743675231934
    6. '#' → logprob: -3.3325743675231934
    7. ''' → logprob: -3.7075743675231934
    8. ')' → logprob: -4.082574367523193
    9. ' les' → logprob: -4.332574367523193
    10. 'l' → logprob: -4.582574367523193

Token 3897: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0030853748321533203
    2. ' arbres' → logprob: -6.003085136413574
    3. 'ar' → logprob: -7.878085136413574
    4. 'trees' → logprob: -8.628085136413574
    5. 'A' → logprob: -10.628085136413574
    6. '#' → logprob: -12.128085136413574
    7. '```' → logprob: -12.253085136413574
    8. '   ' → logprob: -12.503085136413574
    9. 'l' → logprob: -13.003085136413574
    10. '
' → logprob: -13.253085136413574

Token 3898: ' une' (ID: 2463)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7461920976638794
    2. ')' → logprob: -0.8711920976638794
    3. '   ' → logprob: -3.99619197845459
    4. ',
' → logprob: -4.87119197845459
    5. '
' → logprob: -4.99619197845459
    6. '[' → logprob: -5.12119197845459
    7. '```' → logprob: -5.12119197845459
    8. ':' → logprob: -5.24619197845459
    9. '<|end|>' → logprob: -5.24619197845459
    10. '.' → logprob: -5.37119197845459

Token 3899: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.19847171008586884
    2. ' à' → logprob: -3.198471784591675
    3. ' adjacent' → logprob: -3.198471784591675
    4. 'adj' → logprob: -3.698471784591675
    5. 'par' → logprob: -4.073471546173096
    6. ' adj' → logprob: -4.448471546173096
    7. 'à' → logprob: -4.573471546173096
    8. ' )' → logprob: -4.698471546173096
    9. ' ' → logprob: -5.198471546173096
    10. ' fois' → logprob: -5.448471546173096

Token 3900: ' une' (ID: 2463)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.7143577933311462
    2. 'adj' → logprob: -1.089357852935791
    3. 'minute' → logprob: -3.214357852935791
    4. 'i' → logprob: -3.339357852935791
    5. 'tour' → logprob: -3.339357852935791
    6. 'celle' → logprob: -4.214357852935791
    7. 'ligne' → logprob: -4.464357852935791
    8. '```' → logprob: -4.839357852935791
    9. '(i' → logprob: -5.089357852935791
    10. '
' → logprob: -5.839357852935791

Token 3901: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4726594388484955
    2. ':' → logprob: -2.2226593494415283
    3. '<|end|>' → logprob: -3.3476593494415283
    4. '[' → logprob: -3.4726593494415283
    5. ' ' → logprob: -3.4726593494415283
    6. ')' → logprob: -3.4726593494415283
    7. '
' → logprob: -3.5976593494415283
    8. '       ' → logprob: -3.8476593494415283
    9. ',' → logprob: -4.347659587860107
    10. '\n' → logprob: -4.847659587860107

Token 3902: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06910239905118942
    2. ' )' → logprob: -3.0691022872924805
    3. '),' → logprob: -4.9441022872924805
    4. ')
' → logprob: -5.4441022872924805
    5. ' ' → logprob: -6.3191022872924805
    6. ' )
' → logprob: -7.0691022872924805
    7. ' ),' → logprob: -7.0691022872924805
    8. 'adj' → logprob: -7.3191022872924805
    9. ' (' → logprob: -7.4441022872924805
    10. '#' → logprob: -7.6941022872924805

Token 3903: 'min' (ID: 1493)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -1.0920007228851318
    2. ' minute' → logprob: -1.2170007228851318
    3. ')' → logprob: -1.4670007228851318
    4. 'minute' → logprob: -2.217000722885132
    5. '
' → logprob: -4.467000961303711
    6. ' ),' → logprob: -4.842000961303711
    7. ' *' → logprob: -5.842000961303711
    8. '),' → logprob: -6.342000961303711
    9. ' +' → logprob: -7.467000961303711
    10. ' ' → logprob: -7.717000961303711

Token 3904: '/ar' (ID: 191806)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19882842898368835
    2. ' )' → logprob: -1.9488284587860107
    3. '),' → logprob: -4.323828220367432
    4. ' ),' → logprob: -4.948828220367432
    5. ' pour' → logprob: -5.198828220367432
    6. ' par' → logprob: -6.198828220367432
    7. 'pour' → logprob: -6.573828220367432
    8. ' ' → logprob: -6.698828220367432
    9. ' chaque' → logprob: -6.698828220367432
    10. '```' → logprob: -7.198828220367432

Token 3905: 'bre' (ID: 9945)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07428348064422607
    2. 'e' → logprob: -3.8242835998535156
    3. 'bre' → logprob: -3.8242835998535156
    4. ')' → logprob: -4.074283599853516
    5. 'rée' → logprob: -6.074283599853516
    6. 't' → logprob: -6.449283599853516
    7. 'b' → logprob: -6.699283599853516
    8. 'g' → logprob: -6.949283599853516
    9. 'ête' → logprob: -7.324283599853516
    10. 'ré' → logprob: -7.449283599853516

Token 3906: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01980796828866005
    2. ')
' → logprob: -4.894807815551758
    3. ' )' → logprob: -5.019807815551758
    4. '),' → logprob: -5.394807815551758
    5. ' )
' → logprob: -8.394807815551758
    6. ')+' → logprob: -8.769807815551758
    7. ',' → logprob: -9.144807815551758
    8. ' ),' → logprob: -9.519807815551758
    9. '+' → logprob: -9.769807815551758
    10. '```' → logprob: -9.769807815551758

Token 3907: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.030515054240822792
    2. '   ' → logprob: -3.65551495552063
    3. '                   ' → logprob: -6.030515193939209
    4. ' #' → logprob: -6.905515193939209
    5. '       ' → logprob: -8.28051471710205
    6. '               ' → logprob: -8.65551471710205
    7. '           ' → logprob: -8.78051471710205
    8. '                       ' → logprob: -9.40551471710205
    9. '                           ' → logprob: -10.65551471710205
    10. ' ' → logprob: -10.90551471710205

Token 3908: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.10080404579639435
    2. '   ' → logprob: -2.600804090499878
    3. '                   ' → logprob: -4.225803852081299
    4. ' #' → logprob: -6.100803852081299
    5. 'et' → logprob: -6.975803852081299
    6. '               ' → logprob: -7.475803852081299
    7. ')' → logprob: -7.725803852081299
    8. '                       ' → logprob: -7.850803852081299
    9. '       ' → logprob: -7.975803852081299
    10. '           ' → logprob: -8.100804328918457

Token 3909: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6994027495384216
    2. '                   ' → logprob: -1.4494028091430664
    3. '   ' → logprob: -1.5744028091430664
    4. '                       ' → logprob: -4.449402809143066
    5. '               ' → logprob: -4.949402809143066
    6. ',' → logprob: -4.949402809143066
    7. '                           ' → logprob: -5.199402809143066
    8. ')' → logprob: -5.324402809143066
    9. ''' → logprob: -5.699402809143066
    10. '(' → logprob: -5.824402809143066

Token 3910: ' puis' (ID: 18766)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8854237198829651
    2. '#' → logprob: -1.2604236602783203
    3. 'et' → logprob: -1.3854236602783203
    4. '                   ' → logprob: -4.26042366027832
    5. 'p' → logprob: -4.51042366027832
    6. ',' → logprob: -5.38542366027832
    7. '\t' → logprob: -5.51042366027832
    8. '       ' → logprob: -5.63542366027832
    9. ' puis' → logprob: -5.63542366027832
    10. ' et' → logprob: -5.76042366027832

Token 3911: ' ram' (ID: 20920)
  Prédit: 'ram'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ram' → logprob: -1.3418596982955933
    2. 'contin' → logprob: -1.4668596982955933
    3. '   ' → logprob: -2.216859817504883
    4. 'rap' → logprob: -2.591859817504883
    5. 're' → logprob: -2.841859817504883
    6. ' continuer' → logprob: -2.966859817504883
    7. ' revenir' → logprob: -3.091859817504883
    8. '#' → logprob: -3.591859817504883
    9. ' ram' → logprob: -3.716859817504883
    10. ' rapport' → logprob: -3.966859817504883

Token 3912: 'ener' (ID: 944)
  Prédit: 'ener'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ener' → logprob: -0.2954167127609253
    2. 'p' → logprob: -2.420416831970215
    3. 'porter' → logprob: -2.670416831970215
    4. 'port' → logprob: -3.295416831970215
    5. 'e' → logprob: -3.420416831970215
    6. '   ' → logprob: -5.170416831970215
    7. 'ène' → logprob: -5.170416831970215
    8. 'è' → logprob: -6.295416831970215
    9. 'por' → logprob: -6.420416831970215
    10. '       ' → logprob: -6.795416831970215

Token 3913: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.32329386472702026
    2. ' les' → logprob: -1.573293924331665
    3. ' chaque' → logprob: -3.448293924331665
    4. '-les' → logprob: -4.448293685913086
    5. ' ' → logprob: -4.823293685913086
    6. '   ' → logprob: -5.198293685913086
    7. 'l' → logprob: -5.698293685913086
    8. 'le' → logprob: -5.698293685913086
    9. ' ' → logprob: -7.073293685913086
    10. 'each' → logprob: -7.448293685913086

Token 3914: ''ar' (ID: 54307)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.828965425491333
    2. 'es' → logprob: -1.203965425491333
    3. 'ar' → logprob: -1.953965425491333
    4. ''ar' → logprob: -2.703965425491333
    5. 'er' → logprob: -4.328965187072754
    6. 'arb' → logprob: -4.328965187072754
    7. 's' → logprob: -5.328965187072754
    8. ' ' → logprob: -5.953965187072754
    9. ' arbres' → logprob: -5.953965187072754
    10. 'é' → logprob: -5.953965187072754

Token 3915: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.23643642663955688
    2. 'b' → logprob: -1.611436367034912
    3. 'bres' → logprob: -5.361436367034912
    4. 'r' → logprob: -5.986436367034912
    5. '#' → logprob: -7.361436367034912
    6. 'br' → logprob: -7.361436367034912
    7. '   ' → logprob: -7.736436367034912
    8. '  ' → logprob: -8.23643684387207
    9. '```' → logprob: -8.36143684387207
    10. 'm' → logprob: -8.86143684387207

Token 3916: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3204346001148224
    2. ' ' → logprob: -1.8204345703125
    3. 's' → logprob: -3.3204345703125
    4. '(s' → logprob: -3.9454345703125
    5. 'à' → logprob: -4.3204345703125
    6. '   ' → logprob: -4.6954345703125
    7. '```' → logprob: -4.6954345703125
    8. '       ' → logprob: -5.8204345703125
    9. ')' → logprob: -5.9454345703125
    10. ' to' → logprob: -6.1954345703125

Token 3917: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2261887490749359
    2. 'la' → logprob: -1.6011887788772583
    3. 'us' → logprob: -7.851188659667969
    4. '   ' → logprob: -8.976188659667969
    5. 'sa' → logprob: -9.476188659667969
    6. '0' → logprob: -10.226188659667969
    7. '(' → logprob: -10.976188659667969
    8. '1' → logprob: -11.226188659667969
    9. 'lac' → logprob: -11.601188659667969
    10. ' l' → logprob: -11.601188659667969

Token 3918: ''us' (ID: 143210)
  Prédit: 'us'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'us' → logprob: -0.2999393045902252
    2. ''us' → logprob: -1.4249392747879028
    3. 'u' → logprob: -5.049939155578613
    4. '(' → logprob: -5.549939155578613
    5. '0' → logprob: -5.799939155578613
    6. 'i' → logprob: -6.924939155578613
    7. 'a' → logprob: -7.424939155578613
    8. '   ' → logprob: -7.799939155578613
    9. '’us' → logprob: -7.924939155578613
    10. '[' → logprob: -7.924939155578613

Token 3919: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.13086897134780884
    2. 'e' → logprob: -2.130868911743164
    3. '   ' → logprob: -6.005868911743164
    4. 'i' → logprob: -7.630868911743164
    5. '
' → logprob: -8.505868911743164
    6. 'er' → logprob: -9.005868911743164
    7. 'factory' → logprob: -9.630868911743164
    8. 'in' → logprob: -9.880868911743164
    9. '```' → logprob: -10.005868911743164
    10. 're' → logprob: -10.130868911743164

Token 3920: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9525177478790283
    2. '   ' → logprob: -1.2025177478790283
    3. ':' → logprob: -2.2025177478790283
    4. ')
' → logprob: -3.2025177478790283
    5. '
' → logprob: -3.7025177478790283
    6. '```' → logprob: -3.9525177478790283
    7. '):' → logprob: -4.202517509460449
    8. ':
' → logprob: -4.327517509460449
    9. '.' → logprob: -4.452517509460449
    10. ',' → logprob: -4.577517509460449

Token 3921: 'temps' (ID: 42511)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13324405252933502
    2. ' ' → logprob: -2.758244037628174
    3. ')' → logprob: -3.258244037628174
    4. '(' → logprob: -4.633244037628174
    5. ' (' → logprob: -4.633244037628174
    6. '   ' → logprob: -6.883244037628174
    7. ',' → logprob: -7.883244037628174
    8. '*' → logprob: -8.133244514465332
    9. '0' → logprob: -8.133244514465332
    10. ' )' → logprob: -8.883244514465332

Token 3922: ' déplacement' (ID: 138449)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48666274547576904
    2. ')' → logprob: -1.986662745475769
    3. '*' → logprob: -2.6116628646850586
    4. ' =' → logprob: -3.1116628646850586
    5. '   ' → logprob: -3.4866628646850586
    6. ' de' → logprob: -3.6116628646850586
    7. 'de' → logprob: -4.486662864685059
    8. '```' → logprob: -4.861662864685059
    9. 'pour' → logprob: -4.986662864685059
    10. ' ' → logprob: -4.986662864685059

Token 3923: ' aller' (ID: 18383)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.301541805267334
    2. '+' → logprob: -1.426541805267334
    3. ' aller' → logprob: -2.176541805267334
    4. ' +' → logprob: -2.301541805267334
    5. '```' → logprob: -2.301541805267334
    6. '*' → logprob: -2.676541805267334
    7. '=' → logprob: -3.176541805267334
    8. '   ' → logprob: -4.801541805267334
    9. ' *' → logprob: -4.801541805267334
    10. 'sur' → logprob: -4.926541805267334

Token 3924: '-ret' (ID: 104824)
  Prédit: '-ret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ret' → logprob: -0.008250606246292591
    2. '-return' → logprob: -5.383250713348389
    3. '-' → logprob: -6.508250713348389
    4. '-re' → logprob: -7.883250713348389
    5. '-et' → logprob: -7.883250713348389
    6. ',' → logprob: -8.25825023651123
    7. '-r' → logprob: -8.50825023651123
    8. '_ret' → logprob: -8.50825023651123
    9. '   ' → logprob: -8.88325023651123
    10. '+' → logprob: -9.00825023651123

Token 3925: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0007401806069537997
    2. '```' → logprob: -8.750740051269531
    3. '
' → logprob: -8.875740051269531
    4. 'urn' → logprob: -9.375740051269531
    5. 'Our' → logprob: -9.500740051269531
    6. 'OUR' → logprob: -9.625740051269531
    7. 'out' → logprob: -9.750740051269531
    8. 'ours' → logprob: -10.750740051269531
    9. 'ourn' → logprob: -10.750740051269531
    10. '   ' → logprob: -11.500740051269531

Token 3926: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18814970552921295
    2. '=' → logprob: -3.1881496906280518
    3. '+' → logprob: -3.3131496906280518
    4. '*' → logprob: -3.4381496906280518
    5. ' +' → logprob: -4.313149929046631
    6. ' )' → logprob: -5.063149929046631
    7. ')*' → logprob: -5.063149929046631
    8. '   ' → logprob: -5.188149929046631
    9. ')+' → logprob: -5.188149929046631
    10. ' =' → logprob: -5.313149929046631

Token 3927: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08302921801805496
    2. ' dist' → logprob: -2.583029270172119
    3. '1' → logprob: -5.583029270172119
    4. ' ' → logprob: -8.833028793334961
    5. '2' → logprob: -8.833028793334961
    6. 'distance' → logprob: -10.958028793334961
    7. '(dist' → logprob: -11.208028793334961
    8. '`' → logprob: -11.458028793334961
    9. '   ' → logprob: -12.333028793334961
    10. ' (' → logprob: -12.770528793334961

Token 3928: '2' (ID: 17)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0016643505077809095
    2. '1' → logprob: -7.126664161682129
    3. ' dist' → logprob: -7.126664161682129
    4. '2' → logprob: -10.501664161682129
    5. 'distance' → logprob: -11.876664161682129
    6. '(dist' → logprob: -11.876664161682129
    7. '```' → logprob: -12.876664161682129
    8. ' ' → logprob: -13.001664161682129
    9. '`' → logprob: -13.251664161682129
    10. '   ' → logprob: -13.376664161682129

Token 3929: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5763317942619324
    2. '*' → logprob: -0.8263317942619324
    3. ')' → logprob: -7.951331615447998
    4. '*(' → logprob: -12.076332092285156
    5. '),' → logprob: -12.076332092285156
    6. '#' → logprob: -12.326332092285156
    7. ')*' → logprob: -12.701332092285156
    8. ',' → logprob: -12.826332092285156
    9. ' ' → logprob: -12.826332092285156
    10. '```' → logprob: -13.076332092285156

Token 3930: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.966313281329349e-05
    2. 'min' → logprob: -10.625049591064453
    3. ' dist' → logprob: -10.625049591064453
    4. 'distance' → logprob: -14.625049591064453
    5. '(dist' → logprob: -14.750049591064453
    6. 'abs' → logprob: -16.625049591064453
    7. '```' → logprob: -17.500049591064453
    8. '	dist' → logprob: -18.125049591064453
    9. '_dist' → logprob: -19.125049591064453
    10. '   ' → logprob: -19.125049591064453

Token 3931: ' du' (ID: 1462)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.14384788274765015
    2. ')' → logprob: -2.143847942352295
    3. '_to' → logprob: -5.643847942352295
    4. '```' → logprob: -5.768847942352295
    5. '[' → logprob: -6.018847942352295
    6. 'dep' → logprob: -6.518847942352295
    7. '_' → logprob: -6.893847942352295
    8. 'from' → logprob: -6.893847942352295
    9. '_dep' → logprob: -7.768847942352295
    10. '_between' → logprob: -7.893847942352295

Token 3932: ' vide' (ID: 21835)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.8786198496818542
    2. 'dist' → logprob: -1.003619909286499
    3. 'i' → logprob: -2.128619909286499
    4. ' (' → logprob: -4.25361967086792
    5. '(' → logprob: -4.50361967086792
    6. ' dist' → logprob: -4.62861967086792
    7. '(i' → logprob: -4.62861967086792
    8. '`' → logprob: -5.00361967086792
    9. '```' → logprob: -5.00361967086792
    10. 'start' → logprob: -5.12861967086792

Token 3933: ' adj' (ID: 20251)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.251968652009964
    2. '_to' → logprob: -2.1269686222076416
    3. '[' → logprob: -2.8769686222076416
    4. '_' → logprob: -4.626968860626221
    5. '_adj' → logprob: -4.876968860626221
    6. '[i' → logprob: -5.001968860626221
    7. ')' → logprob: -5.126968860626221
    8. ']' → logprob: -5.251968860626221
    9. '```' → logprob: -6.126968860626221
    10. '   ' → logprob: -6.876968860626221

Token 3934: 'ac' (ID: 359)
  Prédit: 'acent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.022476350888609886
    2. 'ac' → logprob: -4.6474761962890625
    3. ']' → logprob: -5.1474761962890625
    4. '   ' → logprob: -5.8974761962890625
    5. '])' → logprob: -6.5224761962890625
    6. ')' → logprob: -8.022476196289062
    7. '```' → logprob: -8.272476196289062
    8. ' ]' → logprob: -8.397476196289062
    9. ']
' → logprob: -8.397476196289062
    10. ')]' → logprob: -8.522476196289062

Token 3935: 'ente' (ID: 1576)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.26323699951171875
    2. 'acent' → logprob: -1.6382369995117188
    3. '   ' → logprob: -3.7632369995117188
    4. ']' → logprob: -5.013236999511719
    5. '       ' → logprob: -7.263236999511719
    6. ')' → logprob: -7.263236999511719
    7. '               ' → logprob: -7.638236999511719
    8. '```' → logprob: -7.888236999511719
    9. '                   ' → logprob: -8.138236999511719
    10. '     ' → logprob: -8.138236999511719

Token 3936: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40183085203170776
    2. '[' → logprob: -2.2768309116363525
    3. '+' → logprob: -2.7768309116363525
    4. ']' → logprob: -3.1518309116363525
    5. '```' → logprob: -3.6518309116363525
    6. '[i' → logprob: -3.9018309116363525
    7. ')+' → logprob: -4.276830673217773
    8. '   ' → logprob: -5.151830673217773
    9. '*' → logprob: -5.276830673217773
    10. ')
' → logprob: -5.526830673217773

Token 3937: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012982797808945179
    2. '0' → logprob: -5.1379828453063965
    3. 'i' → logprob: -5.6379828453063965
    4. ' (' → logprob: -6.7629828453063965
    5. '(i' → logprob: -6.8879828453063965
    6. 'l' → logprob: -7.0129828453063965
    7. '   ' → logprob: -9.012982368469238
    8. 'start' → logprob: -9.387982368469238
    9. 'la' → logprob: -9.762982368469238
    10. 'us' → logprob: -10.012982368469238

Token 3938: ''us' (ID: 143210)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1823925971984863
    2. 'us' → logprob: -1.1823925971984863
    3. ''us' → logprob: -1.8073925971984863
    4. 'i' → logprob: -2.1823925971984863
    5. '0' → logprob: -3.0573925971984863
    6. '(i' → logprob: -3.4323925971984863
    7. 'A' → logprob: -4.182392597198486
    8. '(us' → logprob: -6.057392597198486
    9. 'start' → logprob: -6.432392597198486
    10. ''i' → logprob: -6.432392597198486

Token 3939: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.004243181552737951
    2. 'e' → logprob: -6.25424337387085
    3. 'ile' → logprob: -7.87924337387085
    4. 'in' → logprob: -7.87924337387085
    5. 'ère' → logprob: -8.754242897033691
    6. '(i' → logprob: -9.004242897033691
    7. 'ité' → logprob: -9.004242897033691
    8. 'i' → logprob: -9.379242897033691
    9. 'ite' → logprob: -9.379242897033691
    10. '(' → logprob: -9.504242897033691

Token 3940: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2095498889684677
    2. ')
' → logprob: -1.834549903869629
    3. '   ' → logprob: -4.584549903869629
    4. '):
' → logprob: -6.209549903869629
    5. ')*' → logprob: -6.459549903869629
    6. '):' → logprob: -6.459549903869629
    7. '#' → logprob: -6.459549903869629
    8. '       ' → logprob: -6.584549903869629
    9. '+' → logprob: -6.709549903869629
    10. '```' → logprob: -6.959549903869629

Token 3941: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17650672793388367
    2. ')' → logprob: -3.051506757736206
    3. '                   ' → logprob: -4.301506519317627
    4. '               ' → logprob: -4.676506519317627
    5. ',' → logprob: -4.676506519317627
    6. '       ' → logprob: -4.926506519317627
    7. '                       ' → logprob: -4.926506519317627
    8. '
' → logprob: -5.051506519317627
    9. '.' → logprob: -5.051506519317627
    10. '                           ' → logprob: -5.176506519317627

Token 3942: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009736019186675549
    2. '#' → logprob: -6.134736061096191
    3. '
' → logprob: -6.384736061096191
    4. ')' → logprob: -7.009736061096191
    5. '                   ' → logprob: -7.509736061096191
    6. '                           ' → logprob: -7.509736061096191
    7. 'import' → logprob: -7.634736061096191
    8. '.' → logprob: -7.759736061096191
    9. '                       ' → logprob: -8.009736061096191
    10. '       ' → logprob: -8.259736061096191

Token 3943: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008534789085388184
    2. '#' → logprob: -6.133534908294678
    3. 'import' → logprob: -6.883534908294678
    4. '<|end|>' → logprob: -6.883534908294678
    5. '       ' → logprob: -7.008534908294678
    6. '
' → logprob: -7.883534908294678
    7. '...' → logprob: -7.883534908294678
    8. ')' → logprob: -7.883534908294678
    9. '.' → logprob: -8.13353443145752
    10. '                           ' → logprob: -8.25853443145752

Token 3944: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026012176647782326
    2. '#' (adapté à ' #') → logprob: -4.651011943817139
    3. ')' → logprob: -5.776011943817139
    4. ':' → logprob: -6.276011943817139
    5. '       ' → logprob: -6.401011943817139
    6. '
' → logprob: -6.526011943817139
    7. '.' → logprob: -6.526011943817139
    8. ':
' → logprob: -7.276011943817139
    9. 'import' → logprob: -7.276011943817139
    10. 'for' → logprob: -7.401011943817139

Token 3945: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09761972725391388
    2. 'import' → logprob: -3.5976197719573975
    3. ')' → logprob: -4.097619533538818
    4. 'from' → logprob: -4.222619533538818
    5. ':' → logprob: -4.347619533538818
    6. '
' → logprob: -5.722619533538818
    7. '#' → logprob: -5.847619533538818
    8. 'if' → logprob: -6.347619533538818
    9. 'def' → logprob: -6.347619533538818
    10. 'for' → logprob: -6.722619533538818

Token 3946: ' total' (ID: 3609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45877230167388916
    2. 'for' → logprob: -2.4587721824645996
    3. ' #' → logprob: -2.9587721824645996
    4. 'dist' → logprob: -3.0837721824645996
    5. '
' → logprob: -3.7087721824645996
    6. ' for' → logprob: -3.8337721824645996
    7. 'distance' → logprob: -4.5837721824646
    8. '_' → logprob: -4.7087721824646
    9. 'i' → logprob: -4.8337721824646
    10. '   ' → logprob: -4.8337721824646

Token 3947: ' du' (ID: 1462)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.728512704372406
    2. '_time' → logprob: -1.1035127639770508
    3. ' =' → logprob: -2.728512763977051
    4. '#' → logprob: -3.228512763977051
    5. 'for' → logprob: -3.603512763977051
    6. '   ' → logprob: -4.978512763977051
    7. '+=' → logprob: -4.978512763977051
    8. ' +=' → logprob: -5.228512763977051
    9. '_' → logprob: -5.228512763977051
    10. 'time' → logprob: -5.478512763977051

Token 3948: ' temps' (ID: 11160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.3043049573898315
    2. 'temps' → logprob: -2.179305076599121
    3. ' temps' → logprob: -2.429305076599121
    4. ')' → logprob: -2.429305076599121
    5. '_' → logprob: -2.679305076599121
    6. '```' → logprob: -2.929305076599121
    7. 'time' → logprob: -3.054305076599121
    8. 'total' → logprob: -3.179305076599121
    9. '`' → logprob: -3.679305076599121
    10. ''' → logprob: -3.679305076599121

Token 3949: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021148763597011566
    2. ' =' → logprob: -4.521148681640625
    3. '+=' → logprob: -5.271148681640625
    4. 'for' → logprob: -6.521148681640625
    5. '#' → logprob: -7.146148681640625
    6. ' +=' → logprob: -7.521148681640625
    7. ')' → logprob: -7.646148681640625
    8. '   ' → logprob: -7.771148681640625
    9. '```' → logprob: -8.021148681640625
    10. '=
' → logprob: -9.021148681640625

Token 3950: ' somme' (ID: 64484)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.002073767827823758
    2. ' total' → logprob: -6.377073764801025
    3. '0' → logprob: -8.002074241638184
    4. 'sum' → logprob: -11.252074241638184
    5. 'dist' → logprob: -12.002074241638184
    6. '   ' → logprob: -12.252074241638184
    7. '(total' → logprob: -12.627074241638184
    8. ' ' → logprob: -12.752074241638184
    9. '	total' → logprob: -13.002074241638184
    10. 'distance' → logprob: -14.002074241638184

Token 3951: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.054540753364563
    2. '=' → logprob: -2.0545406341552734
    3. ' +=' → logprob: -2.4295406341552734
    4. '   ' → logprob: -2.4295406341552734
    5. '(
' → logprob: -2.6795406341552734
    6. '+' → logprob: -2.6795406341552734
    7. '(' → logprob: -3.0545406341552734
    8. ' =' → logprob: -3.8045406341552734
    9. '+=' → logprob: -3.8045406341552734
    10. '```' → logprob: -4.179540634155273

Token 3952: ' toutes' (ID: 17502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.864678680896759
    2. 'les' → logprob: -0.989678680896759
    3. '(i' → logprob: -2.6146786212921143
    4. 't' → logprob: -3.2396786212921143
    5. 'la' → logprob: -3.4896786212921143
    6. 'l' → logprob: -4.114678859710693
    7. 'c' → logprob: -5.114678859710693
    8. 'ch' → logprob: -5.489678859710693
    9. 'cha' → logprob: -5.489678859710693
    10. 'le' → logprob: -5.614678859710693

Token 3953: ' les' (ID: 1341)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1028462648391724
    2. 'cases' → logprob: -1.2278462648391724
    3. ')' → logprob: -1.9778462648391724
    4. 'les' → logprob: -2.727846145629883
    5. ':' → logprob: -2.852846145629883
    6. 'i' → logprob: -3.977846145629883
    7. '   ' → logprob: -4.227846145629883
    8. ' (' → logprob: -4.477846145629883
    9. '```' → logprob: -4.727846145629883
    10. ' cases' → logprob: -5.227846145629883

Token 3954: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.09408631175756454
    2. 'i' → logprob: -2.9690864086151123
    3. '(i' → logprob: -4.719086170196533
    4. 'cells' → logprob: -5.094086170196533
    5. 'arb' → logprob: -5.344086170196533
    6. 'case' → logprob: -5.594086170196533
    7. 'for' → logprob: -5.969086170196533
    8. 'c' → logprob: -5.969086170196533
    9. '#' → logprob: -6.094086170196533
    10. 'trees' → logprob: -6.469086170196533

Token 3955: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4415884017944336
    2. '[i' → logprob: -1.6915884017944336
    3. '```' → logprob: -2.1915884017944336
    4. 'for' → logprob: -2.3165884017944336
    5. '+' → logprob: -2.6915884017944336
    6. ')' → logprob: -2.8165884017944336
    7. '[
' → logprob: -3.1915884017944336
    8. '[' → logprob: -3.9415884017944336
    9. '_' → logprob: -4.066588401794434
    10. ':' → logprob: -4.066588401794434

Token 3956: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.0898725688457489
    2. ' arbres' → logprob: -3.5898725986480713
    3. 'trees' → logprob: -3.5898725986480713
    4. '   ' → logprob: -4.464872360229492
    5. 'ar' → logprob: -4.589872360229492
    6. '#' → logprob: -6.214872360229492
    7. '```' → logprob: -6.464872360229492
    8. '>' → logprob: -6.839872360229492
    9. '_' → logprob: -6.964872360229492
    10. ' ' → logprob: -7.714872360229492

Token 3957: ' du' (ID: 1462)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.627181351184845
    2. '   ' → logprob: -0.877181351184845
    3. '):' → logprob: -3.8771812915802
    4. ')' → logprob: -5.002181529998779
    5. ':
' → logprob: -5.877181529998779
    6. '```' → logprob: -5.877181529998779
    7. '       ' → logprob: -6.127181529998779
    8. '\' → logprob: -6.502181529998779
    9. '<|end|>' → logprob: -6.502181529998779
    10. ']' → logprob: -6.752181529998779

Token 3958: ' nombre' (ID: 9733)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.34843334555625916
    2. ' A' → logprob: -1.9734333753585815
    3. 'total' → logprob: -2.973433256149292
    4. 'time' → logprob: -3.848433256149292
    5. ' (' → logprob: -4.223433494567871
    6. 'temps' → logprob: -4.473433494567871
    7. '`' → logprob: -4.723433494567871
    8. '(' → logprob: -4.723433494567871
    9. '```' → logprob: -4.723433494567871
    10. ' total' → logprob: -4.723433494567871

Token 3959: ' d' (ID: 272)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -8.494741632603109e-05
    2. '_*' → logprob: -10.37508487701416
    3. '_
' → logprob: -11.50008487701416
    4. '*' → logprob: -11.62508487701416
    5. '`' → logprob: -11.75008487701416
    6. '```' → logprob: -11.75008487701416
    7. '   ' → logprob: -12.50008487701416
    8. 's' → logprob: -12.75008487701416
    9. ''' → logprob: -13.87508487701416
    10. '_
' → logprob: -14.00008487701416

Token 3960: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0038397370371967554
    2. ''' → logprob: -6.25383996963501
    3. ''_' → logprob: -6.75383996963501
    4. '`' → logprob: -8.753839492797852
    5. '_s' → logprob: -9.003839492797852
    6. '_ar' → logprob: -9.003839492797852
    7. 's' → logprob: -9.503839492797852
    8. '"' → logprob: -9.753839492797852
    9. 'e' → logprob: -10.003839492797852
    10. '"_' → logprob: -10.128839492797852

Token 3961: 'arb' (ID: 36740)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.25427308678627014
    2. 'arb' → logprob: -1.7542730569839478
    3. ' arbres' → logprob: -4.129272937774658
    4. 'ar' → logprob: -4.254272937774658
    5. '_ar' → logprob: -4.754272937774658
    6. ' ' → logprob: -5.254272937774658
    7. '   ' → logprob: -6.254272937774658
    8. '```' → logprob: -6.879272937774658
    9. 'trees' → logprob: -7.004272937774658
    10. ' _' → logprob: -7.254272937774658

Token 3962: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1591869741678238
    2. 'r' → logprob: -2.409187078475952
    3. 's' → logprob: -3.784187078475952
    4. 're' → logprob: -4.784186840057373
    5. 'es' → logprob: -5.909186840057373
    6. 'rès' → logprob: -6.034186840057373
    7. 'ées' → logprob: -6.284186840057373
    8. 'ières' → logprob: -6.409186840057373
    9. 'êtres' → logprob: -6.409186840057373
    10. '[' → logprob: -6.784186840057373

Token 3963: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9462237358093262
    2. '   ' → logprob: -1.5712237358093262
    3. ')' → logprob: -2.571223735809326
    4. 'for' → logprob: -2.821223735809326
    5. '):' → logprob: -3.321223735809326
    6. '```' → logprob: -3.321223735809326
    7. '*' → logprob: -3.571223735809326
    8. ']' → logprob: -3.696223735809326
    9. '[' → logprob: -3.821223735809326
    10. '[i' → logprob: -3.946223735809326

Token 3964: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22551214694976807
    2. ' (' → logprob: -1.600512146949768
    3. '"' → logprob: -9.600512504577637
    4. '((' → logprob: -11.975512504577637
    5. ' ' → logprob: -12.100512504577637
    6. '`' → logprob: -12.100512504577637
    7. ''' → logprob: -12.600512504577637
    8. ' ((' → logprob: -13.225512504577637
    9. '  ' → logprob: -13.475512504577637
    10. '```' → logprob: -13.475512504577637

Token 3965: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1464402973651886
    2. '2' → logprob: -2.021440267562866
    3. ' (' → logprob: -6.146440505981445
    4. '1' → logprob: -6.521440505981445
    5. ' ' → logprob: -10.146440505981445
    6. ')' → logprob: -10.146440505981445
    7. '   ' → logprob: -10.771440505981445
    8. '`' → logprob: -10.896440505981445
    9. '```' → logprob: -12.021440505981445
    10. '
' → logprob: -12.396440505981445

Token 3966: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4741833209991455
    2. ' +' → logprob: -0.9741833209991455
    3. ')' → logprob: -9.349183082580566
    4. '#' → logprob: -11.474183082580566
    5. 'import' → logprob: -13.349183082580566
    6. '```' → logprob: -13.474183082580566
    7. ')+' → logprob: -13.849183082580566
    8. '+
' → logprob: -13.974183082580566
    9. '*' → logprob: -13.974183082580566
    10. ' plus' → logprob: -14.849183082580566

Token 3967: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.625045776367188
    3. ' ' → logprob: -10.875045776367188
    4. '```' → logprob: -13.875045776367188
    5. '   ' → logprob: -14.875045776367188
    6. '
' → logprob: -14.875045776367188
    7. '``' → logprob: -16.375045776367188
    8. '`' → logprob: -16.625045776367188
    9. ' (' → logprob: -17.000045776367188
    10. '       ' → logprob: -17.000045776367188

Token 3968: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016766376211307943
    2. '(' → logprob: -9.250167846679688
    3. ' ' → logprob: -9.625167846679688
    4. '   ' → logprob: -13.500167846679688
    5. '```' → logprob: -14.125167846679688
    6. '0' → logprob: -14.625167846679688
    7. '
' → logprob: -14.875167846679688
    8. ' (' → logprob: -15.000167846679688
    9. '+' → logprob: -15.687667846679688
    10. '#' → logprob: -15.750167846679688

Token 3969: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931514739990234
    2. ' *' → logprob: -0.6931514739990234
    3. ')' → logprob: -13.818151473999023
    4. '#' → logprob: -13.943151473999023
    5. '*(' → logprob: -14.318151473999023
    6. ' ' → logprob: -14.318151473999023
    7. ' ' → logprob: -14.818151473999023
    8. '**' → logprob: -15.443151473999023
    9. ' #' → logprob: -15.943151473999023
    10. '```' → logprob: -16.193151473999023

Token 3970: ' distance' (ID: 9324)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1373213678598404
    2. 'dist' → logprob: -2.6373214721679688
    3. ' min' → logprob: -3.0123214721679688
    4. ' dist' → logprob: -4.887321472167969
    5. '(min' → logprob: -10.637321472167969
    6. '(dist' → logprob: -12.012321472167969
    7. ' (' → logprob: -12.762321472167969
    8. 'distance' → logprob: -13.887321472167969
    9. '[min' → logprob: -14.387321472167969
    10. '_dist' → logprob: -14.512321472167969

Token 3971: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.20268763601779938
    2. '_to' → logprob: -1.7026876211166382
    3. ')' → logprob: -6.952687740325928
    4. '_' → logprob: -9.70268726348877
    5. '_dep' → logprob: -9.70268726348877
    6. 'from' → logprob: -9.82768726348877
    7. '_de' → logprob: -10.32768726348877
    8. '_dist' → logprob: -10.70268726348877
    9. '_us' → logprob: -11.57768726348877
    10. 'dep' → logprob: -11.57768726348877

Token 3972: '_us' (ID: 43779)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.0019420842872932553
    2. 'start' → logprob: -6.251942157745361
    3. '_' → logprob: -11.501941680908203
    4. '_dist' → logprob: -14.126941680908203
    5. '_s' → logprob: -14.501941680908203
    6. ' start' → logprob: -15.001941680908203
    7. '_from' → logprob: -15.126941680908203
    8. '```' → logprob: -15.251941680908203
    9. '[start' → logprob: -15.376941680908203
    10. 'dist' → logprob: -16.001941680908203

Token 3973: 'ine' (ID: 514)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0025354712270200253
    2. 'art' → logprob: -6.627535343170166
    3. 'start' → logprob: -6.752535343170166
    4. 'rt' → logprob: -10.752535820007324
    5. '_start' → logprob: -11.377535820007324
    6. '
' → logprob: -13.002535820007324
    7. '```' → logprob: -13.502535820007324
    8. 'tar' → logprob: -13.752535820007324
    9. 'e' → logprob: -13.877535820007324
    10. '_t' → logprob: -14.127535820007324

Token 3974: '_to' (ID: 5089)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029888873919844627
    2. ')' → logprob: -4.154889106750488
    3. '+' → logprob: -5.404889106750488
    4. '_adj' → logprob: -5.904889106750488
    5. '   ' → logprob: -6.779889106750488
    6. '[(' → logprob: -6.904889106750488
    7. '[i' → logprob: -7.029889106750488
    8. '_to' → logprob: -7.154889106750488
    9. 'adj' → logprob: -7.529889106750488
    10. '_' → logprob: -7.654889106750488

Token 3975: '_case' (ID: 43667)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -1.2643400430679321
    2. '(' → logprob: -1.6393400430679321
    3. 'dist' → logprob: -2.1393399238586426
    4. '[' → logprob: -2.5143399238586426
    5. '[(' → logprob: -3.0143399238586426
    6. ')' → logprob: -3.2643399238586426
    7. 'ni' → logprob: -3.5143399238586426
    8. ' (' → logprob: -3.6393399238586426
    9. '
' → logprob: -3.6393399238586426
    10. '[]' → logprob: -3.7643399238586426

Token 3976: '_v' (ID: 5390)
  Prédit: '_adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.043736133724451065
    2. '[' → logprob: -4.418735980987549
    3. '_' → logprob: -4.668735980987549
    4. ')' → logprob: -4.793735980987549
    5. '_ad' → logprob: -5.293735980987549
    6. ')_' → logprob: -6.918735980987549
    7. '   ' → logprob: -6.918735980987549
    8. ' _' → logprob: -7.043735980987549
    9. '```' → logprob: -7.043735980987549
    10. '_empty' → logprob: -7.293735980987549

Token 3977: 'ide' (ID: 617)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.9916561245918274
    2. 'ide' → logprob: -1.3666560649871826
    3. 'isible' → logprob: -1.6166560649871826
    4. 'i' → logprob: -2.8666560649871826
    5. 'is' → logprob: -3.2416560649871826
    6. 'id' → logprob: -3.9916560649871826
    7. 'ideo' → logprob: -4.491656303405762
    8. ']' → logprob: -4.741656303405762
    9. 'adj' → logprob: -5.116656303405762
    10. 'ac' → logprob: -5.491656303405762

Token 3978: '_adj' (ID: 117293)
  Prédit: '_adj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_adj' → logprob: -0.1943783462047577
    2. '[' → logprob: -2.31937837600708
    3. ')' → logprob: -3.44437837600708
    4. '+' → logprob: -4.94437837600708
    5. 'adj' → logprob: -4.94437837600708
    6. '_ad' → logprob: -5.06937837600708
    7. '_' → logprob: -5.44437837600708
    8. '))' → logprob: -5.56937837600708
    9. ')])' → logprob: -5.56937837600708
    10. '])' → logprob: -5.69437837600708

Token 3979: 'acent' (ID: 28063)
  Prédit: 'acent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acent' → logprob: -0.05515442043542862
    2. 'ac' → logprob: -3.305154323577881
    3. ']' → logprob: -4.680154323577881
    4. ')' → logprob: -6.055154323577881
    5. '   ' → logprob: -6.680154323577881
    6. '']' → logprob: -7.055154323577881
    7. '```' → logprob: -7.055154323577881
    8. '])' → logprob: -7.680154323577881
    9. 'acency' → logprob: -7.805154323577881
    10. '[' → logprob: -8.180154800415039

Token 3980: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11201807856559753
    2. '[i' → logprob: -3.23701810836792
    3. '))' → logprob: -3.73701810836792
    4. '[' → logprob: -4.73701810836792
    5. '+' → logprob: -4.73701810836792
    6. ')
' → logprob: -4.86201810836792
    7. ')`' → logprob: -5.48701810836792
    8. '])' → logprob: -5.86201810836792
    9. ')))' → logprob: -6.23701810836792
    10. ')])' → logprob: -6.36201810836792

Token 3981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23790565133094788
    2. ')' → logprob: -2.362905740737915
    3. ':' → logprob: -2.737905740737915
    4. '
' → logprob: -4.612905502319336
    5. '```' → logprob: -4.862905502319336
    6. '):' → logprob: -4.987905502319336
    7. 'import' → logprob: -5.362905502319336
    8. '<|end|>' → logprob: -5.612905502319336
    9. 'def' → logprob: -5.987905502319336
    10. '.' → logprob: -6.112905502319336

Token 3982: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10141602158546448
    2. ')' → logprob: -3.1014161109924316
    3. 'import' → logprob: -3.8514161109924316
    4. 'return' → logprob: -4.601416110992432
    5. '```' → logprob: -5.476416110992432
    6. '
' → logprob: -5.851416110992432
    7. '<|end|>' → logprob: -6.101416110992432
    8. 'if' → logprob: -6.226416110992432
    9. 'from' → logprob: -6.351416110992432
    10. ':' → logprob: -6.601416110992432

Token 3983: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4655044972896576
    2. '<|end|>' → logprob: -1.59050452709198
    3. ')' → logprob: -2.0905044078826904
    4. 'if' → logprob: -4.2155046463012695
    5. '<|end|>' → logprob: -5.2155046463012695
    6. 'import' → logprob: -5.2155046463012695
    7. 'main' → logprob: -5.4655046463012695
    8. 'return' → logprob: -5.7155046463012695
    9. '```' → logprob: -6.5905046463012695
    10. '#' → logprob: -6.8405046463012695

Token 3984: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.914673388004303
    2. '   ' → logprob: -1.1646733283996582
    3. 'return' → logprob: -1.4146733283996582
    4. 'import' → logprob: -4.289673328399658
    5. 'if' → logprob: -4.914673328399658
    6. '```' → logprob: -5.164673328399658
    7. 'def' → logprob: -5.789673328399658
    8. '
' → logprob: -6.414673328399658
    9. '):' → logprob: -6.914673328399658
    10. '.' → logprob: -6.914673328399658

Token 3985: ' BUT' (ID: 21371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14055287837982178
    2. ')' → logprob: -2.5155529975891113
    3. 'return' → logprob: -4.515552997589111
    4. ':' → logprob: -4.640552997589111
    5. '```' → logprob: -4.890552997589111
    6. '<|end|>' → logprob: -5.140552997589111
    7. '
' → logprob: -5.765552997589111
    8. '):' → logprob: -5.765552997589111
    9. 'import' → logprob: -6.515552997589111
    10. '#' → logprob: -6.640552997589111

Token 3986: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9610057473182678
    2. ':' → logprob: -1.461005687713623
    3. '(
' → logprob: -2.211005687713623
    4. '(' → logprob: -2.961005687713623
    5. 'for' → logprob: -3.086005687713623
    6. '.' → logprob: -3.086005687713623
    7. ')' → logprob: -3.836005687713623
    8. ':
' → logprob: -4.336005687713623
    9. ',' → logprob: -4.586005687713623
    10. 'import' → logprob: -4.711005687713623

Token 3987: ' ne' (ID: 453)
  Prédit: 'do'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'do' → logprob: -0.5018253326416016
    2. 'pe' → logprob: -1.6268253326416016
    3. 'continue' → logprob: -1.7518253326416016
    4. '#' → logprob: -5.376825332641602
    5. 'n' → logprob: -5.376825332641602
    6. 'ne' → logprob: -5.751825332641602
    7. 'p' → logprob: -6.251825332641602
    8. 'vais' → logprob: -6.251825332641602
    9. 'veux' → logprob: -6.501825332641602
    10. 'contin' → logprob: -6.751825332641602

Token 3988: ' doit' (ID: 21822)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.3198005259037018
    2. 'do' → logprob: -1.4448004961013794
    3. 'p' → logprob: -4.69480037689209
    4. 'continue' → logprob: -4.94480037689209
    5. ' peux' → logprob: -5.31980037689209
    6. 'pour' → logprob: -5.69480037689209
    7. 'cut' → logprob: -5.69480037689209
    8. 'veux' → logprob: -6.06980037689209
    9. 's' → logprob: -6.31980037689209
    10. '#' → logprob: -6.31980037689209

Token 3989: ' couper' (ID: 135212)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5983891487121582
    2. ' pas' → logprob: -0.8483891487121582
    3. '_pas' → logprob: -5.348389148712158
    4. '#' → logprob: -5.598389148712158
    5. ' couper' → logprob: -5.848389148712158
    6. 'p' → logprob: -6.473389148712158
    7. '_' → logprob: -6.848389148712158
    8. 'faire' → logprob: -6.973389148712158
    9. '```' → logprob: -6.973389148712158
    10. '_cut' → logprob: -7.598389148712158

Token 3990: ' que' (ID: 661)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.29247573018074036
    2. ' pas' → logprob: -2.417475700378418
    3. '_pas' → logprob: -3.167475700378418
    4. 'r' → logprob: -3.792475700378418
    5. 't' → logprob: -4.042475700378418
    6. '_' → logprob: -4.292475700378418
    7. ' ' → logprob: -4.667475700378418
    8. 'plus' → logprob: -4.667475700378418
    9. ' que' → logprob: -4.792475700378418
    10. 'que' → logprob: -5.167475700378418

Token 3991: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.1069556325674057
    2. ' les' → logprob: -2.4819555282592773
    3. 'le' → logprob: -4.856955528259277
    4. ' ceux' → logprob: -5.731955528259277
    5. 'l' → logprob: -5.981955528259277
    6. 'se' → logprob: -6.731955528259277
    7. ' ce' → logprob: -7.106955528259277
    8. 'ce' → logprob: -7.481955528259277
    9. '```' → logprob: -8.106955528259277
    10. ' le' → logprob: -8.356955528259277

Token 3992: ' arbres' (ID: 127011)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.3674902021884918
    2. 'arb' → logprob: -1.8674901723861694
    3. ' arbres' → logprob: -2.367490291595459
    4. ' cases' → logprob: -3.742490291595459
    5. 'che' → logprob: -3.867490291595459
    6. 'case' → logprob: -5.367490291595459
    7. 'ar' → logprob: -6.367490291595459
    8. 'trees' → logprob: -6.742490291595459
    9. ' nécessaires' → logprob: -6.992490291595459
    10. ' case' → logprob: -7.242490291595459

Token 3993: ' qui' (ID: 2780)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.49884033203125
    2. ')' → logprob: -1.87384033203125
    3. '_needed' → logprob: -2.12384033203125
    4. '   ' → logprob: -2.62384033203125
    5. '*' → logprob: -2.87384033203125
    6. 'import' → logprob: -2.87384033203125
    7. ' nécessaire' → logprob: -3.37384033203125
    8. '_required' → logprob: -3.74884033203125
    9. 'necessary' → logprob: -3.87384033203125
    10. '_' → logprob: -3.99884033203125

Token 3994: ' empê' (ID: 192030)
  Prédit: 'blo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blo' → logprob: -0.06394155323505402
    2. 's' → logprob: -4.063941478729248
    3. 'font' → logprob: -4.063941478729248
    4. 'b' → logprob: -4.813941478729248
    5. 'emp' → logprob: -5.563941478729248
    6. 'se' → logprob: -5.688941478729248
    7. '```' → logprob: -6.188941478729248
    8. 'per' → logprob: -6.438941478729248
    9. 'f' → logprob: -6.813941478729248
    10. 'sé' → logprob: -7.063941478729248

Token 3995: 'chent' (ID: 74659)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3350322246551514
    2. 'x' → logprob: -1.5850322246551514
    3. 'd' → logprob: -1.9600322246551514
    4. 'r' → logprob: -2.4600322246551514
    5. 'ss' → logprob: -2.9600322246551514
    6. '=' → logprob: -2.9600322246551514
    7. '       ' → logprob: -3.9600322246551514
    8. 'u' → logprob: -3.9600322246551514
    9. 's' → logprob: -4.2100324630737305
    10. ')' → logprob: -4.4600324630737305

Token 3996: ' la' (ID: 557)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -2.0471725463867188
    2. ' le' → logprob: -2.1721725463867188
    3. 'le' → logprob: -2.5471725463867188
    4. '_pass' → logprob: -2.7971725463867188
    5. '`' → logprob: -2.9221725463867188
    6. 'pas' → logprob: -3.0471725463867188
    7. 'pass' → logprob: -3.2971725463867188
    8. ')' → logprob: -3.2971725463867188
    9. ' la' → logprob: -3.5471725463867188
    10. '_path' → logprob: -3.5471725463867188

Token 3997: ' connect' (ID: 4837)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.1925433874130249
    2. 'che' → logprob: -1.942543387413025
    3. 'connexion' → logprob: -3.6925435066223145
    4. 'p' → logprob: -6.5675435066223145
    5. '```' → logprob: -6.9425435066223145
    6. 'conn' → logprob: -6.9425435066223145
    7. '_' → logprob: -7.4425435066223145
    8. '
' → logprob: -7.5675435066223145
    9. 'connect' → logprob: -7.6925435066223145
    10. 'c' → logprob: -8.067543029785156

Token 3998: 'ivité' (ID: 73445)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.4723280370235443
    2. 'ivité' → logprob: -1.4723280668258667
    3. '_' → logprob: -2.722327947616577
    4. 'é' → logprob: -2.972327947616577
    5. 'ivity' → logprob: -4.847328186035156
    6. 'i' → logprob: -5.097328186035156
    7. '#' → logprob: -5.597328186035156
    8. 'ex' → logprob: -6.472328186035156
    9. 'iv' → logprob: -6.597328186035156
    10. '}' → logprob: -6.972328186035156

Token 3999: ' entre' (ID: 3853)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.41858112812042236
    2. '   ' → logprob: -1.7935811281204224
    3. 'from' → logprob: -2.293581008911133
    4. ':' → logprob: -3.668581008911133
    5. ':
' → logprob: -3.793581008911133
    6. '```' → logprob: -5.043581008911133
    7. '
' → logprob: -5.543581008911133
    8. 'def' → logprob: -5.793581008911133
    9. ')' → logprob: -6.168581008911133
    10. ']' → logprob: -6.668581008911133

Token 4000: ' usine' (ID: 124673)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0055924654006958
    2. 'l' → logprob: -1.0055924654006958
    3. 'la' → logprob: -2.0055923461914062
    4. 'n' → logprob: -3.6305923461914062
    5. '0' → logprob: -3.7555923461914062
    6. '```' → logprob: -4.005592346191406
    7. 'north' → logprob: -4.005592346191406
    8. '(n' → logprob: -4.130592346191406
    9. 'le' → logprob: -5.005592346191406
    10. 'les' → logprob: -5.630592346191406

Token 4001: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0541971921920776
    2. 'import' → logprob: -1.0541971921920776
    3. ':' → logprob: -2.554197311401367
    4. ':
' → logprob: -2.929197311401367
    5. '
' → logprob: -3.429197311401367
    6. 'from' → logprob: -3.429197311401367
    7. '```' → logprob: -3.679197311401367
    8. 'def' → logprob: -4.304197311401367
    9. ')' → logprob: -4.679197311401367
    10. ',' → logprob: -4.929197311401367

Token 4002: ' destination' (ID: 13330)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13027404248714447
    2. '(' → logprob: -2.5052740573883057
    3. '(s' → logprob: -3.8802740573883057
    4. 'destination' → logprob: -4.630273818969727
    5. 'l' → logprob: -6.005273818969727
    6. 'but' → logprob: -6.880273818969727
    7. 'dest' → logprob: -7.005273818969727
    8. 'la' → logprob: -7.005273818969727
    9. '```' → logprob: -7.255273818969727
    10. '((' → logprob: -7.630273818969727

Token 4003: '.
' (ID: 558)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3084445297718048
    2. '   ' → logprob: -1.5584444999694824
    3. 'from' → logprob: -3.1834444999694824
    4. ':
' → logprob: -5.433444499969482
    5. '```' → logprob: -5.933444499969482
    6. '
' → logprob: -7.058444499969482
    7. ':' → logprob: -7.058444499969482
    8. 'def' → logprob: -7.308444499969482
    9. 'dist' → logprob: -7.433444499969482
    10. ')' → logprob: -7.433444499969482

Token 4004: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1710740178823471
    2. 'import' → logprob: -2.0460739135742188
    3. 'from' → logprob: -5.046073913574219
    4. ':' → logprob: -5.546073913574219
    5. '
' → logprob: -5.671073913574219
    6. ')' → logprob: -5.796073913574219
    7. '```' → logprob: -6.171073913574219
    8. ':
' → logprob: -6.296073913574219
    9. 'def' → logprob: -6.921073913574219
    10. ']' → logprob: -7.046073913574219

Token 4005: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3811579644680023
    2. 'import' → logprob: -1.3811579942703247
    3. 'from' → logprob: -3.506157875061035
    4. ':' → logprob: -4.381157875061035
    5. ')' → logprob: -4.756157875061035
    6. '
' → logprob: -6.131157875061035
    7. '#' → logprob: -6.131157875061035
    8. 'if' → logprob: -6.631157875061035
    9. '```' → logprob: -6.756157875061035
    10. ']' → logprob: -6.881157875061035

Token 4006: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05543190985918045
    2. 'import' → logprob: -3.180431842803955
    3. ':' → logprob: -5.180431842803955
    4. 'from' → logprob: -7.180431842803955
    5. ')' → logprob: -7.555431842803955
    6. '#' → logprob: -7.555431842803955
    7. '```' → logprob: -7.555431842803955
    8. '    
' → logprob: -7.680431842803955
    9. '...' → logprob: -7.805431842803955
    10. '       ' → logprob: -7.805431842803955

Token 4007: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13982103765010834
    2. 'import' → logprob: -2.2648210525512695
    3. 'from' → logprob: -4.0148210525512695
    4. '```' → logprob: -5.7648210525512695
    5. '
' → logprob: -6.7648210525512695
    6. 'def' → logprob: -7.0148210525512695
    7. 'if' → logprob: -7.7648210525512695
    8. '#' (adapté à ' #') → logprob: -8.01482105255127
    9. 'heap' → logprob: -8.01482105255127
    10. ':' → logprob: -8.26482105255127

Token 4008: ' Pour' (ID: 13931)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4510926306247711
    2. '   ' → logprob: -1.4510926008224487
    3. 'from' → logprob: -2.3260927200317383
    4. '#' → logprob: -4.701092720031738
    5. 'dist' → logprob: -4.826092720031738
    6. 'if' → logprob: -5.951092720031738
    7. ')' → logprob: -6.076092720031738
    8. 'distance' → logprob: -6.451092720031738
    9. '
' → logprob: -7.076092720031738
    10. '```' → logprob: -7.076092720031738

Token 4009: ' trouver' (ID: 23195)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.4196642637252808
    2. 'i' → logprob: -2.1696643829345703
    3. 'cela' → logprob: -2.1696643829345703
    4. '#' → logprob: -2.5446643829345703
    5. 'impl' → logprob: -2.6696643829345703
    6. 'rés' → logprob: -3.1696643829345703
    7. 'faire' → logprob: -3.1696643829345703
    8. 'conn' → logprob: -3.4196643829345703
    9. 'calcul' → logprob: -4.16966438293457
    10. 'determ' → logprob: -4.29466438293457

Token 4010: ' ces' (ID: 10532)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.7518100738525391
    2. 'les' → logprob: -1.626810073852539
    3. 'la' → logprob: -1.876810073852539
    4. 'l' → logprob: -3.126810073852539
    5. '```' → logprob: -3.501810073852539
    6. '#' → logprob: -3.626810073852539
    7. 'contin' → logprob: -4.376810073852539
    8. 'ce' → logprob: -4.626810073852539
    9. 'faire' → logprob: -4.626810073852539
    10. 'cela' → logprob: -5.126810073852539

Token 4011: ' arbres' (ID: 127011)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cases' → logprob: -1.2261935472488403
    2. '#' → logprob: -1.9761935472488403
    3. 'case' → logprob: -2.351193428039551
    4. 'che' → logprob: -2.351193428039551
    5. 'path' → logprob: -2.476193428039551
    6. '```' → logprob: -2.851193428039551
    7. '_path' → logprob: -2.976193428039551
    8. ')' → logprob: -3.101193428039551
    9. '_' → logprob: -3.601193428039551
    10. 'neighbors' → logprob: -4.726193428039551

Token 4012: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49749305844306946
    2. ':' → logprob: -1.622493028640747
    3. ':
' → logprob: -2.247493028640747
    4. ',' → logprob: -3.122493028640747
    5. '#' → logprob: -4.247493267059326
    6. 'import' → logprob: -4.372493267059326
    7. '
' → logprob: -5.247493267059326
    8. ',
' → logprob: -6.122493267059326
    9. '.' → logprob: -6.497493267059326
    10. ' :
' → logprob: -7.122493267059326

Token 4013: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6573714017868042
    2. '#' → logprob: -1.4073714017868042
    3. 'import' → logprob: -1.6573714017868042
    4. 'dist' → logprob: -3.2823715209960938
    5. 'visited' → logprob: -5.532371520996094
    6. 'from' → logprob: -6.407371520996094
    7. 'distance' → logprob: -7.407371520996094
    8. ' #' → logprob: -7.657371520996094
    9. '
' → logprob: -7.657371520996094
    10. 'd' → logprob: -7.907371520996094

Token 4014: ' peut' (ID: 9216)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1267293244600296
    2. 'continue' → logprob: -2.8767292499542236
    3. 'do' → logprob: -3.1267292499542236
    4. 'import' → logprob: -5.751729488372803
    5. '   ' → logprob: -6.001729488372803
    6. ' doit' → logprob: -6.001729488372803
    7. ' #' → logprob: -6.251729488372803
    8. '       ' → logprob: -6.751729488372803
    9. 'must' → logprob: -6.876729488372803
    10. 'def' → logprob: -7.001729488372803

Token 4015: ' sim' (ID: 1845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7026520371437073
    2. 'faire' → logprob: -1.2026519775390625
    3. '#' → logprob: -2.8276519775390625
    4. 'util' → logprob: -3.0776519775390625
    5. 'contin' → logprob: -3.0776519775390625
    6. '   ' → logprob: -3.3276519775390625
    7. '```' → logprob: -5.5776519775390625
    8. 'from' → logprob: -5.7026519775390625
    9. 'perform' → logprob: -6.2026519775390625
    10. 'continue' → logprob: -6.5776519775390625

Token 4016: 'uler' (ID: 11802)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.038977038115262985
    2. 'port' → logprob: -4.663977146148682
    3. 'plement' → logprob: -4.788977146148682
    4. 'uler' → logprob: -5.288977146148682
    5. 'ule' → logprob: -5.663977146148682
    6. '#' → logprob: -5.913977146148682
    7. 'ple' → logprob: -6.538977146148682
    8. 'ply' → logprob: -6.913977146148682
    9. 'import' → logprob: -7.038977146148682
    10. 'pl' → logprob: -7.163977146148682

Token 4017: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.1189236640930176
    2. 'un' → logprob: -1.6189236640930176
    3. '   ' → logprob: -1.7439236640930176
    4. 'une' → logprob: -2.7439236640930176
    5. 'd' → logprob: -3.1189236640930176
    6. 'import' → logprob: -3.3689236640930176
    7. ' une' → logprob: -3.3689236640930176
    8. '#' → logprob: -3.7439236640930176
    9. 'b' → logprob: -3.8689236640930176
    10. 'a' → logprob: -4.243923664093018

Token 4018: ' grap' (ID: 60955)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31227606534957886
    2. '#' → logprob: -2.4372761249542236
    3. 'D' → logprob: -2.6872761249542236
    4. 'import' → logprob: -2.9372761249542236
    5. 'def' → logprob: -3.9372761249542236
    6. 'b' → logprob: -4.1872758865356445
    7. 'dist' → logprob: -4.6872758865356445
    8. 'from' → logprob: -5.0622758865356445
    9. 'heap' → logprob: -5.9372758865356445
    10. 'short' → logprob: -6.8122758865356445

Token 4019: 'he' (ID: 273)
  Prédit: 'ph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ph' → logprob: -0.5455141067504883
    2. 'h' → logprob: -1.6705141067504883
    3. 'p' → logprob: -1.6705141067504883
    4. 'm' → logprob: -4.295514106750488
    5. '#' → logprob: -4.670514106750488
    6. ')' → logprob: -5.920514106750488
    7. '
' → logprob: -6.045514106750488
    8. '   ' → logprob: -6.170514106750488
    9. 'raph' → logprob: -6.545514106750488
    10. '```' → logprob: -6.920514106750488

Token 4020: ' où' (ID: 15113)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5806787610054016
    2. '   ' → logprob: -1.7056787014007568
    3. ')' → logprob: -2.705678701400757
    4. ':' → logprob: -2.705678701400757
    5. ']' → logprob: -3.455678701400757
    6. 'from' → logprob: -3.830678701400757
    7. '#' → logprob: -4.330678939819336
    8. '       ' → logprob: -4.830678939819336
    9. ':
' → logprob: -5.080678939819336
    10. '```' → logprob: -5.205678939819336

Token 4021: ' les' (ID: 1341)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6543362140655518
    2. 'les' → logprob: -1.1543362140655518
    3. '#' → logprob: -2.4043362140655518
    4. 'le' → logprob: -3.7793362140655518
    5. ' on' → logprob: -4.529335975646973
    6. ' chaque' → logprob: -4.529335975646973
    7. 'dist' → logprob: -5.029335975646973
    8. 'l' → logprob: -5.154335975646973
    9. '   ' → logprob: -5.904335975646973
    10. 'la' → logprob: -5.904335975646973

Token 4022: ' cases' (ID: 7911)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0296989679336548
    2. 'import' → logprob: -1.2796989679336548
    3. '#' → logprob: -1.4046989679336548
    4. 'from' → logprob: -3.5296988487243652
    5. 'cost' → logprob: -3.5296988487243652
    6. '   ' → logprob: -4.029698848724365
    7. 'cases' → logprob: -4.529698848724365
    8. 'empty' → logprob: -4.904698848724365
    9. 'visited' → logprob: -5.279698848724365
    10. 'edges' → logprob: -5.404698848724365

Token 4023: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9226565361022949
    2. 'vid' → logprob: -1.672656536102295
    3. 's' → logprob: -2.297656536102295
    4. 'sans' → logprob: -2.797656536102295
    5. 'vide' → logprob: -2.922656536102295
    6. 'with' → logprob: -3.172656536102295
    7. '#' → logprob: -3.297656536102295
    8. 'avec' → logprob: -3.547656536102295
    9. ' v' → logprob: -3.672656536102295
    10. 'à' → logprob: -3.797656536102295

Token 4024: 'ides' (ID: 4105)
  Prédit: 'ides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.4357982873916626
    2. '=' → logprob: -2.435798168182373
    3. 'i' → logprob: -2.560798168182373
    4. 'ide' → logprob: -3.185798168182373
    5. '[i' → logprob: -3.310798168182373
    6. '[' → logprob: -3.810798168182373
    7. ']' → logprob: -4.060798168182373
    8. 'is' → logprob: -4.810798168182373
    9. '   ' → logprob: -5.185798168182373
    10. '[]' → logprob: -5.310798168182373

Token 4025: ' sont' (ID: 5242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7549089193344116
    2. ')' → logprob: -2.254909038543701
    3. '```' → logprob: -2.254909038543701
    4. '   ' → logprob: -2.879909038543701
    5. '[i' → logprob: -3.254909038543701
    6. '#' → logprob: -3.629909038543701
    7. ':' → logprob: -3.754909038543701
    8. ']' → logprob: -3.754909038543701
    9. 'with' → logprob: -4.504909038543701
    10. '[' → logprob: -4.504909038543701

Token 4026: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.10433739423751831
    2. 'des' → logprob: -3.354337453842163
    3. '```' → logprob: -3.729337453842163
    4. 'nodes' → logprob: -4.104337215423584
    5. 'no' → logprob: -5.354337215423584
    6. 's' → logprob: -5.354337215423584
    7. 'le' → logprob: -6.354337215423584
    8. 'n' → logprob: -6.354337215423584
    9. 'consider' → logprob: -6.479337215423584
    10. '#' → logprob: -6.479337215423584

Token 4027: ' noe' (ID: 49921)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6050134897232056
    2. 'cases' → logprob: -1.4800134897232056
    3. 'no' → logprob: -2.480013370513916
    4. 'vo' → logprob: -3.230013370513916
    5. 'points' → logprob: -4.105013370513916
    6. 'som' → logprob: -4.105013370513916
    7. 'n' → logprob: -4.480013370513916
    8. 's' → logprob: -4.605013370513916
    9. 'neighbors' → logprob: -4.730013370513916
    10. 'positions' → logprob: -4.855013370513916

Token 4028: 'uds' (ID: 44387)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5528652667999268
    2. 'des' → logprob: -1.9278652667999268
    3. 'uds' → logprob: -2.0528652667999268
    4. 'ud' → logprob: -3.5528652667999268
    5. 'ighbors' → logprob: -3.5528652667999268
    6. 'd' → logprob: -3.9278652667999268
    7. 'de' → logprob: -4.177865028381348
    8. 'r' → logprob: -4.927865028381348
    9. 'n' → logprob: -5.177865028381348
    10. ')' → logprob: -5.302865028381348

Token 4029: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0336220264434814
    2. '   ' → logprob: -1.0336220264434814
    3. ')' → logprob: -2.0336220264434814
    4. ']' → logprob: -3.5336220264434814
    5. '       ' → logprob: -4.033621788024902
    6. ',
' → logprob: -4.283621788024902
    7. '```' → logprob: -4.283621788024902
    8. '[
' → logprob: -4.658621788024902
    9. 'import' → logprob: -4.783621788024902
    10. '
' → logprob: -4.783621788024902

Token 4030: '   ' (ID: 271)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.2264914512634277
    2. ' et' → logprob: -1.3514914512634277
    3. '   ' → logprob: -1.9764914512634277
    4. '                   ' → logprob: -2.4764914512634277
    5. ',' → logprob: -2.8514914512634277
    6. '       ' → logprob: -3.4764914512634277
    7. '#' → logprob: -3.4764914512634277
    8. '               ' → logprob: -3.6014914512634277
    9. '           ' → logprob: -4.351491451263428
    10. '```' → logprob: -4.726491451263428

Token 4031: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.14691373705863953
    2. '   ' → logprob: -2.771913766860962
    3. 'et' → logprob: -3.271913766860962
    4. ' et' → logprob: -5.021913528442383
    5. ' #' → logprob: -5.021913528442383
    6. '                   ' → logprob: -5.396913528442383
    7. ',' → logprob: -6.021913528442383
    8. '       ' → logprob: -6.021913528442383
    9. 'and' → logprob: -6.271913528442383
    10. '               ' → logprob: -6.396913528442383

Token 4032: ' et' (ID: 859)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28750666975975037
    2. '   ' → logprob: -2.162506580352783
    3. 'et' → logprob: -2.912506580352783
    4. ')' → logprob: -4.662506580352783
    5. ' et' → logprob: -4.787506580352783
    6. 'edges' → logprob: -4.787506580352783
    7. ',' → logprob: -4.912506580352783
    8. '       ' → logprob: -5.037506580352783
    9. ' #' → logprob: -5.037506580352783
    10. 'neighbors' → logprob: -5.662506580352783

Token 4033: ' chaque' (ID: 21194)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3639983832836151
    2. 'les' → logprob: -1.6139984130859375
    3. 'edges' → logprob: -2.7389984130859375
    4. 'le' → logprob: -4.4889984130859375
    5. 'leurs' → logprob: -5.1139984130859375
    6. 'on' → logprob: -5.4889984130859375
    7. 'l' → logprob: -5.8639984130859375
    8. 'la' → logprob: -5.9889984130859375
    9. 'leur' → logprob: -6.1139984130859375
    10. 'ar' → logprob: -6.8639984130859375

Token 4034: ' arbre' (ID: 164180)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5966626405715942
    2. '(' → logprob: -2.2216625213623047
    3. ')' → logprob: -2.2216625213623047
    4. '(i' → logprob: -2.3466625213623047
    5. '   ' → logprob: -2.4716625213623047
    6. ' (' → logprob: -2.8466625213623047
    7. 'adj' → logprob: -3.2216625213623047
    8. '#' → logprob: -3.3466625213623047
    9. ' ' → logprob: -3.7216625213623047
    10. '[i' → logprob: -3.9716625213623047

Token 4035: ' adjacent' (ID: 39069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4564139246940613
    2. ')' → logprob: -2.581413984298706
    3. ']' → logprob: -3.331413984298706
    4. '_' → logprob: -3.456413984298706
    5. '[' → logprob: -3.706413984298706
    6. '[i' → logprob: -4.081413745880127
    7. '   ' → logprob: -4.081413745880127
    8. '```' → logprob: -4.206413745880127
    9. '_adj' → logprob: -4.456413745880127
    10. '
' → logprob: -4.456413745880127

Token 4036: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.033714771270752
    2. '```' → logprob: -1.533714771270752
    3. ',' → logprob: -2.283714771270752
    4. ')' → logprob: -2.408714771270752
    5. 'à' → logprob: -3.033714771270752
    6. 'adj' → logprob: -3.658714771270752
    7. '`' → logprob: -3.908714771270752
    8. ' aux' → logprob: -4.158714771270752
    9. ' à' → logprob: -4.283714771270752
    10. 'aux' → logprob: -4.658714771270752

Token 4037: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.23516122996807098
    2. 'ces' → logprob: -1.9851611852645874
    3. 'la' → logprob: -3.360161304473877
    4. 'un' → logprob: -3.735161304473877
    5. 'au' → logprob: -6.235161304473877
    6. 'a' → logprob: -6.360161304473877
    7. 'u' → logprob: -6.360161304473877
    8. 'c' → logprob: -6.485161304473877
    9. 'ce' → logprob: -7.110161304473877
    10. 'l' → logprob: -7.235161304473877

Token 4038: ' noe' (ID: 49921)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8138114809989929
    2. 'case' → logprob: -1.4388115406036377
    3. 'vide' → logprob: -2.6888115406036377
    4. 'empty' → logprob: -2.8138115406036377
    5. 'i' → logprob: -2.8138115406036377
    6. ')' → logprob: -3.8138115406036377
    7. '0' → logprob: -4.313811302185059
    8. ' (' → logprob: -4.313811302185059
    9. ' case' → logprob: -4.688811302185059
    10. '
' → logprob: -4.813811302185059

Token 4039: 'ud' (ID: 527)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9163340926170349
    2. 'e' → logprob: -2.1663341522216797
    3. ']' → logprob: -2.2913341522216797
    4. '```' → logprob: -2.6663341522216797
    5. 'ud' → logprob: -2.7913341522216797
    6. 'u' → logprob: -2.9163341522216797
    7. 'de' → logprob: -3.0413341522216797
    8. 'w' → logprob: -3.5413341522216797
    9. 'i' → logprob: -4.16633415222168
    10. ')
' → logprob: -4.16633415222168

Token 4040: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.18088676035404205
    2. ' vide' → logprob: -2.555886745452881
    3. 's' → logprob: -3.430886745452881
    4. 'v' → logprob: -4.430886745452881
    5. ')' → logprob: -4.680886745452881
    6. ',' → logprob: -5.430886745452881
    7. '```' → logprob: -5.430886745452881
    8. ' est' → logprob: -5.805886745452881
    9. ' avec' → logprob: -6.180886745452881
    10. '
' → logprob: -6.305886745452881

Token 4041: ' nous' (ID: 6176)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6253536343574524
    2. ')' → logprob: -2.2503535747528076
    3. ':' → logprob: -2.5003535747528076
    4. 's' → logprob: -3.1253535747528076
    5. '#' → logprob: -3.2503535747528076
    6. ']' → logprob: -3.3753535747528076
    7. '.' → logprob: -3.7503535747528076
    8. '```' → logprob: -3.8753535747528076
    9. '
' → logprob: -4.625353813171387
    10. ' est' → logprob: -4.750353813171387

Token 4042: ' devons' (ID: 140218)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.25525104999542236
    2. 'perm' → logprob: -2.255250930786133
    3. ' permet' → logprob: -2.630250930786133
    4. '#' → logprob: -4.380250930786133
    5. 'fait' → logprob: -5.130250930786133
    6. 'pe' → logprob: -5.130250930786133
    7. 'connect' → logprob: -5.755250930786133
    8. 'don' → logprob: -5.880250930786133
    9. 'sert' → logprob: -6.380250930786133
    10. 'd' → logprob: -6.380250930786133

Token 4043: ' "' (ID: 392)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.8830885291099548
    2. 'contin' → logprob: -1.8830885887145996
    3. 'aj' → logprob: -2.0080885887145996
    4. 'payer' → logprob: -3.3830885887145996
    5. 'consider' → logprob: -3.5080885887145996
    6. '#' → logprob: -3.5080885887145996
    7. '```' → logprob: -3.7580885887145996
    8. ' couper' → logprob: -3.7580885887145996
    9. 'prendre' → logprob: -3.8830885887145996
    10. 'cut' → logprob: -4.2580885887146

Token 4044: 'payer' (ID: 192126)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.1274145543575287
    2. 'contin' → logprob: -3.3774144649505615
    3. 'aj' → logprob: -3.8774144649505615
    4. 'payer' → logprob: -4.002414703369141
    5. 'calcul' → logprob: -5.377414703369141
    6. '{"' → logprob: -5.502414703369141
    7. 'prendre' → logprob: -5.627414703369141
    8. 'cons' → logprob: -6.002414703369141
    9. '```' → logprob: -6.002414703369141
    10. 'cut' → logprob: -6.002414703369141

Token 4045: '"' (ID: 1)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.37615737318992615
    2. 'pour' → logprob: -2.626157283782959
    3. 'un' → logprob: -3.126157283782959
    4. 'du' → logprob: -3.376157283782959
    5. ')' → logprob: -3.876157283782959
    6. 'for' → logprob: -4.126157283782959
    7. '"' → logprob: -4.251157283782959
    8. 'la' → logprob: -4.626157283782959
    9. '_le' → logprob: -4.876157283782959
    10. '```' → logprob: -4.876157283782959

Token 4046: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0906206369400024
    2. ' ' → logprob: -2.465620517730713
    3. ')' → logprob: -2.590620517730713
    4. '[' → logprob: -2.590620517730713
    5. ''' → logprob: -2.715620517730713
    6. ']' → logprob: -2.965620517730713
    7. '```' → logprob: -3.340620517730713
    8. ':' → logprob: -3.465620517730713
    9. '   ' → logprob: -3.840620517730713
    10. '"' → logprob: -3.965620517730713

Token 4047: ' coût' (ID: 73109)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.4196748733520508
    2. 'temps' → logprob: -1.9196748733520508
    3. 'po' → logprob: -3.044674873352051
    4. 'cost' → logprob: -3.294674873352051
    5. 'cou' → logprob: -3.669674873352051
    6. 'd' → logprob: -3.794674873352051
    7. '#' → logprob: -4.044674873352051
    8. 'cout' → logprob: -4.169674873352051
    9. 'c' → logprob: -5.794674873352051
    10. 'case' → logprob: -5.919674873352051

Token 4048: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4815804958343506
    2. ')' → logprob: -2.1065804958343506
    3. ']' → logprob: -2.2315804958343506
    4. '[' → logprob: -2.3565804958343506
    5. '+' → logprob: -2.4815804958343506
    6. '   ' → logprob: -3.3565804958343506
    7. '=' → logprob: -3.3565804958343506
    8. '```' → logprob: -3.4815804958343506
    9. ''' → logprob: -3.7315804958343506
    10. ',' → logprob: -3.9815804958343506

Token 4049: ' couper' (ID: 135212)
  Prédit: 'cou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cou' → logprob: -0.07686543464660645
    2. 'le' → logprob: -3.8268654346466064
    3. 'dé' → logprob: -3.9518654346466064
    4. 'pass' → logprob: -4.576865196228027
    5. 'l' → logprob: -5.076865196228027
    6. 'cut' → logprob: -5.201865196228027
    7. 'd' → logprob: -6.326865196228027
    8. 'la' → logprob: -6.701865196228027
    9. 'contin' → logprob: -6.826865196228027
    10. ' couper' → logprob: -6.951865196228027

Token 4050: ' ces' (ID: 10532)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5639772415161133
    2. '[' → logprob: -2.1889772415161133
    3. ']' → logprob: -2.4389772415161133
    4. '```' → logprob: -2.8139772415161133
    5. ')' → logprob: -3.8139772415161133
    6. ',' → logprob: -4.063977241516113
    7. ' ' → logprob: -4.313977241516113
    8. ' _' → logprob: -4.313977241516113
    9. '[
' → logprob: -4.563977241516113
    10. '   ' → logprob: -4.813977241516113

Token 4051: ' arbres' (ID: 127011)
  Prédit: ' arbres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arbres' → logprob: -0.42879974842071533
    2. 'arb' → logprob: -1.1787997484207153
    3. 'trees' → logprob: -4.928799629211426
    4. 'ar' → logprob: -5.178799629211426
    5. '   ' → logprob: -5.303799629211426
    6. 'adj' → logprob: -5.428799629211426
    7. '_' → logprob: -5.928799629211426
    8. '#' → logprob: -6.178799629211426
    9. ' ' → logprob: -6.678799629211426
    10. ' arbre' → logprob: -6.803799629211426

Token 4052: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4455770254135132
    2. ':' → logprob: -1.6955770254135132
    3. ')' → logprob: -3.1955771446228027
    4. ']' → logprob: -3.4455771446228027
    5. '.' → logprob: -4.320577144622803
    6. ':
' → logprob: -4.445577144622803
    7. '       ' → logprob: -4.570577144622803
    8. ',' → logprob: -5.320577144622803
    9. 'import' → logprob: -5.320577144622803
    10. '
' → logprob: -5.320577144622803

Token 4053: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.05132214352488518
    2. ' on' → logprob: -3.3013222217559814
    3. 'nous' → logprob: -5.426321983337402
    4. ' ce' → logprob: -6.051321983337402
    5. 'we' → logprob: -6.426321983337402
    6. 'le' → logprob: -6.551321983337402
    7. 'ce' → logprob: -6.551321983337402
    8. 'cet' → logprob: -8.051321983337402
    9. ''on' → logprob: -8.051321983337402
    10. ' nous' → logprob: -8.051321983337402

Token 4054: ' doit' (ID: 21822)
  Prédit: 've'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 've' → logprob: -1.167340636253357
    2. 'continue' → logprob: -1.167340636253357
    3. 'tr' → logprob: -1.417340636253357
    4. 'p' → logprob: -3.4173407554626465
    5. 'se' → logprob: -4.1673407554626465
    6. 'dé' → logprob: -4.1673407554626465
    7. 'veux' → logprob: -4.5423407554626465
    8. 'd' → logprob: -5.1673407554626465
    9. 'avance' → logprob: -5.2923407554626465
    10. 'do' → logprob: -5.2923407554626465

Token 4055: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.3535813093185425
    2. 'cou' → logprob: -1.3535813093185425
    3. 'contin' → logprob: -4.353581428527832
    4. 'tr' → logprob: -4.478581428527832
    5. 'les' → logprob: -5.103581428527832
    6. 'cut' → logprob: -5.978581428527832
    7. 'aller' → logprob: -6.853581428527832
    8. 'y' → logprob: -7.603581428527832
    9. 'le' → logprob: -7.853581428527832
    10. 're' → logprob: -7.978581428527832

Token 4056: ' par' (ID: 686)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2473078966140747
    2. ')' → logprob: -1.4973078966140747
    3. ']' → logprob: -2.372307777404785
    4. '   ' → logprob: -2.372307777404785
    5. '```' → logprob: -2.747307777404785
    6. '
' → logprob: -3.997307777404785
    7. '[' → logprob: -3.997307777404785
    8. '[i' → logprob: -4.247307777404785
    9. '[
' → logprob: -4.247307777404785
    10. '       ' → logprob: -4.372307777404785

Token 4057: ' ce' (ID: 2357)
  Prédit: 'cet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cet' → logprob: -0.4048015773296356
    2. ' cette' → logprob: -1.404801607131958
    3. ' ce' → logprob: -3.529801607131958
    4. ' cet' → logprob: -3.654801607131958
    5. 'ce' → logprob: -4.404801368713379
    6. 'c' → logprob: -5.154801368713379
    7. 'ces' → logprob: -5.404801368713379
    8. 'l' → logprob: -5.654801368713379
    9. 'celle' → logprob: -6.029801368713379
    10. 'cel' → logprob: -6.029801368713379

Token 4058: ' noe' (ID: 49921)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.5420846343040466
    2. ' adjacent' → logprob: -2.0420846939086914
    3. 'adj' → logprob: -2.2920846939086914
    4. 'case' → logprob: -2.6670846939086914
    5. ' node' → logprob: -3.9170846939086914
    6. ' voisin' → logprob: -4.167084693908691
    7. ' adj' → logprob: -4.167084693908691
    8. ' adjacency' → logprob: -4.292084693908691
    9. ' ' → logprob: -4.667084693908691
    10. '#' → logprob: -5.292084693908691

Token 4059: 'ud' (ID: 527)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14315038919448853
    2. '#' → logprob: -3.0181503295898438
    3. 'u' → logprob: -3.5181503295898438
    4. 'e' → logprob: -3.8931503295898438
    5. '\' → logprob: -4.518150329589844
    6. ')' → logprob: -5.393150329589844
    7. ',' → logprob: -6.018150329589844
    8. 'd' → logprob: -6.268150329589844
    9. '```' → logprob: -6.643150329589844
    10. ' 
' → logprob: -6.768150329589844

Token 4060: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7793757915496826
    2. ':' → logprob: -0.9043757915496826
    3. '       ' → logprob: -4.029376029968262
    4. ':
' → logprob: -4.154376029968262
    5. '):' → logprob: -4.279376029968262
    6. ')' → logprob: -4.279376029968262
    7. ']' → logprob: -4.279376029968262
    8. ',' → logprob: -4.529376029968262
    9. '[' → logprob: -4.779376029968262
    10. ']:' → logprob: -5.404376029968262

Token 4061: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22469770908355713
    2. ':' → logprob: -2.2246975898742676
    3. ')' → logprob: -3.9746975898742676
    4. '       ' → logprob: -4.099697589874268
    5. ']' → logprob: -4.474697589874268
    6. '\n' → logprob: -5.099697589874268
    7. '[' → logprob: -5.349697589874268
    8. '```' → logprob: -5.349697589874268
    9. '\' → logprob: -5.474697589874268
    10. ',' → logprob: -5.474697589874268

Token 4062: ' #
' (ID: 21888)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04348141327500343
    2. ':' → logprob: -4.043481349945068
    3. '       ' → logprob: -4.543481349945068
    4. ')' → logprob: -5.793481349945068
    5. '[' → logprob: -6.668481349945068
    6. ']' → logprob: -6.793481349945068
    7. '
' → logprob: -6.918481349945068
    8. '```' → logprob: -7.168481349945068
    9. ',' → logprob: -7.293481349945068
    10. '.' → logprob: -7.418481349945068

Token 4063: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037655819207429886
    2. '       ' → logprob: -4.287655830383301
    3. ':' → logprob: -4.912655830383301
    4. 'import' → logprob: -6.412655830383301
    5. ')' → logprob: -6.662655830383301
    6. '
' → logprob: -6.787655830383301
    7. '\' → logprob: -6.787655830383301
    8. '[' → logprob: -6.787655830383301
    9. ']' → logprob: -7.037655830383301
    10. ',' → logprob: -7.287655830383301

Token 4064: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33626776933670044
    2. ':' → logprob: -2.4612677097320557
    3. ')' → logprob: -2.5862677097320557
    4. 'import' → logprob: -3.5862677097320557
    5. ']' → logprob: -3.8362677097320557
    6. '
' → logprob: -4.086267948150635
    7. '       ' → logprob: -4.586267948150635
    8. '):' → logprob: -4.836267948150635
    9. ',' → logprob: -5.211267948150635
    10. '```' → logprob: -5.336267948150635

Token 4065: ' Cela' (ID: 44403)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20069994032382965
    2. 'import' → logprob: -1.9506999254226685
    3. ')' → logprob: -4.325699806213379
    4. 'from' → logprob: -5.075699806213379
    5. ':' → logprob: -5.575699806213379
    6. '
' → logprob: -5.575699806213379
    7. ']' → logprob: -6.575699806213379
    8. '#' → logprob: -6.700699806213379
    9. '               ' → logprob: -6.700699806213379
    10. ':
' → logprob: -6.825699806213379

Token 4066: ' devient' (ID: 63488)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1415674686431885
    2. '#' → logprob: -1.7665674686431885
    3. ']' → logprob: -2.5165674686431885
    4. '[i' → logprob: -2.5165674686431885
    5. '
' → logprob: -3.0165674686431885
    6. '[' → logprob: -3.2665674686431885
    7. ')' → logprob: -3.5165674686431885
    8. 'import' → logprob: -3.5165674686431885
    9. '   ' → logprob: -3.6415674686431885
    10. '[
' → logprob: -3.7665674686431885

Token 4067: ' un' (ID: 537)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.033331274986267
    2. 'un' → logprob: -1.658331274986267
    3. ' un' → logprob: -1.783331274986267
    4. 'une' → logprob: -1.908331274986267
    5. 'complex' → logprob: -3.5333313941955566
    6. 'a' → logprob: -3.6583313941955566
    7. 'import' → logprob: -3.9083313941955566
    8. 'd' → logprob: -4.158331394195557
    9. 'possible' → logprob: -4.533331394195557
    10. ' une' → logprob: -5.033331394195557

Token 4068: ' problème' (ID: 35630)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.515395164489746
    2. 'd' → logprob: -1.765395164489746
    3. '[
' → logprob: -2.515395164489746
    4. 'graph' → logprob: -2.640395164489746
    5. ')' → logprob: -2.765395164489746
    6. 'heap' → logprob: -3.140395164489746
    7. '[' → logprob: -3.390395164489746
    8. '#' → logprob: -3.515395164489746
    9. 'weighted' → logprob: -3.765395164489746
    10. '.' → logprob: -3.890395164489746

Token 4069: ' complexe' (ID: 78615)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34332576394081116
    2. 'import' → logprob: -2.7183258533477783
    3. ']' → logprob: -3.2183258533477783
    4. ')' → logprob: -3.4683258533477783
    5. '   ' → logprob: -3.4683258533477783
    6. '=' → logprob: -3.7183258533477783
    7. ':
' → logprob: -3.8433258533477783
    8. '[' → logprob: -4.468325614929199
    9. '#' → logprob: -4.843325614929199
    10. '[
' → logprob: -5.218325614929199

Token 4070: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27105626463890076
    2. ':' → logprob: -1.6460562944412231
    3. ')' → logprob: -4.646056175231934
    4. '):' → logprob: -4.771056175231934
    5. '       ' → logprob: -5.271056175231934
    6. ':
' → logprob: -5.521056175231934
    7. '...' → logprob: -6.021056175231934
    8. '.' → logprob: -6.271056175231934
    9. ']' → logprob: -6.521056175231934
    10. ',' → logprob: -6.521056175231934

Token 4071: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1596626490354538
    2. ':' → logprob: -2.6596627235412598
    3. ')' → logprob: -3.9096627235412598
    4. 'import' → logprob: -4.15966272354126
    5. '
' → logprob: -5.15966272354126
    6. '```' → logprob: -5.15966272354126
    7. '#' → logprob: -5.40966272354126
    8. ']' → logprob: -5.78466272354126
    9. '<|end|>' → logprob: -5.78466272354126
    10. '...' → logprob: -6.15966272354126

Token 4072: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03179804980754852
    2. 'import' → logprob: -3.7817981243133545
    3. '<|end|>' → logprob: -6.031797885894775
    4. '    
' → logprob: -6.906797885894775
    5. '```' → logprob: -6.906797885894775
    6. '#' → logprob: -7.281797885894775
    7. ')' → logprob: -7.281797885894775
    8. 'from' → logprob: -7.406797885894775
    9. '...' → logprob: -7.656797885894775
    10. 'def' → logprob: -7.656797885894775

Token 4073: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.530555784702301
    2. 'import' → logprob: -0.905555784702301
    3. 'from' → logprob: -6.030555725097656
    4. 'pass' → logprob: -6.030555725097656
    5. '    
' → logprob: -7.280555725097656
    6. '#' (adapté à ' #') → logprob: -7.405555725097656
    7. ' import' → logprob: -8.155555725097656
    8. ')' → logprob: -8.530555725097656
    9. '```' → logprob: -9.030555725097656
    10. 'dist' → logprob: -9.280555725097656

Token 4074: ' Simpl' (ID: 92258)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12893660366535187
    2. '   ' → logprob: -2.503936529159546
    3. 'from' → logprob: -3.503936529159546
    4. '#' → logprob: -5.003936767578125
    5. 'dist' → logprob: -6.503936767578125
    6. 'pass' → logprob: -8.503936767578125
    7. 'distance' → logprob: -9.003936767578125
    8. '    
' → logprob: -9.503936767578125
    9. '
' → logprob: -9.628936767578125
    10. '```' → logprob: -9.753936767578125

Token 4075: 'ification' (ID: 3166)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0933558940887451
    2. 'import' → logprob: -1.5933558940887451
    3. 'ified' → logprob: -1.7183558940887451
    4. 'ify' → logprob: -1.7183558940887451
    5. 'def' → logprob: -3.468355894088745
    6. 'e' → logprob: -3.718355894088745
    7. 'if' → logprob: -4.093356132507324
    8. 'from' → logprob: -4.843356132507324
    9. 'ification' → logprob: -4.968356132507324
    10. '#' → logprob: -5.093356132507324

Token 4076: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18514922261238098
    2. 'import' → logprob: -2.5601491928100586
    3. ':' → logprob: -3.8101491928100586
    4. '
' → logprob: -3.9351491928100586
    5. ')' → logprob: -4.435149192810059
    6. 'def' → logprob: -4.935149192810059
    7. '<|end|>' → logprob: -5.185149192810059
    8. 'dist' → logprob: -5.685149192810059
    9. '#' → logprob: -5.810149192810059
    10. '...' → logprob: -6.185149192810059

Token 4077: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7925406694412231
    2. 'import' → logprob: -0.7925406694412231
    3. 'dist' → logprob: -2.6675405502319336
    4. 'from' → logprob: -4.417540550231934
    5. '#' → logprob: -5.292540550231934
    6. 'cost' → logprob: -6.417540550231934
    7. 'pass' → logprob: -6.667540550231934
    8. 'distance' → logprob: -6.917540550231934
    9. '```' → logprob: -7.167540550231934
    10. '    
' → logprob: -7.542540550231934

Token 4078: ' forêt' (ID: 117038)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2267577648162842
    2. 'pass' → logprob: -1.2267577648162842
    3. 'from' → logprob: -1.4767577648162842
    4. '...' → logprob: -2.976757764816284
    5. 'def' → logprob: -2.976757764816284
    6. '#' → logprob: -3.226757764816284
    7. 'dist' → logprob: -4.476758003234863
    8. 'return' → logprob: -4.851758003234863
    9. '   ' → logprob: -4.976758003234863
    10. '
' → logprob: -5.976758003234863

Token 4079: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.230145812034607
    2. ' =' → logprob: -1.355145812034607
    3. '#' → logprob: -2.2301459312438965
    4. 'import' → logprob: -2.4801459312438965
    5. '=' → logprob: -2.8551459312438965
    6. '
' → logprob: -3.2301459312438965
    7. '.' → logprob: -3.3551459312438965
    8. ':' → logprob: -3.7301459312438965
    9. ')' → logprob: -4.1051459312438965
    10. ',' → logprob: -4.4801459312438965

Token 4080: ' «' (ID: 2415)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3992542028427124
    2. 'vide' → logprob: -1.8992542028427124
    3. 'possible' → logprob: -2.024254322052002
    4. 't' → logprob: -2.274254322052002
    5. 'larg' → logprob: -2.399254322052002
    6. 'dense' → logprob: -3.524254322052002
    7. '   ' → logprob: -3.649254322052002
    8. '```' → logprob: -3.774254322052002
    9. 'tou' → logprob: -4.274254322052002
    10. 'for' → logprob: -4.274254322052002

Token 4081: ' dém' (ID: 34947)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.22748610377311707
    2. '   ' → logprob: -3.3524861335754395
    3. '```' → logprob: -4.2274861335754395
    4. 'possible' → logprob: -4.2274861335754395
    5. 'dense' → logprob: -4.3524861335754395
    6. 'vid' → logprob: -4.4774861335754395
    7. 'in' → logprob: -4.4774861335754395
    8. '"' → logprob: -4.7274861335754395
    9. ' vide' → logprob: -4.8524861335754395
    10. 'import' → logprob: -4.9774861335754395

Token 4082: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3848341107368469
    2. 'in' → logprob: -1.6348340511322021
    3. '#' → logprob: -3.384834051132202
    4. '```' → logprob: -4.134834289550781
    5. 'def' → logprob: -4.259834289550781
    6. 'arr' → logprob: -4.509834289550781
    7. 'e' → logprob: -4.634834289550781
    8. 'if' → logprob: -4.884834289550781
    9. 'onstr' → logprob: -6.009834289550781
    10. 'ocrat' → logprob: -6.009834289550781

Token 4083: 'elé' (ID: 131959)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.4477943480014801
    2. 'arr' → logprob: -2.4477944374084473
    3. 'ar' → logprob: -2.9477944374084473
    4. 'ant' → logprob: -3.1977944374084473
    5. 'i' → logprob: -3.6977944374084473
    6. '   ' → logprob: -3.8227944374084473
    7. '```' → logprob: -4.572794437408447
    8. 'def' → logprob: -4.822794437408447
    9. 'il' → logprob: -4.822794437408447
    10. 'ié' → logprob: -5.135294437408447

Token 4084: ' »' (ID: 4334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0429457426071167
    2. 'ée' → logprob: -1.0429457426071167
    3. '#' → logprob: -2.9179458618164062
    4. 'é' → logprob: -3.4179458618164062
    5. '```' → logprob: -3.4179458618164062
    6. 'rée' → logprob: -3.6679458618164062
    7. '»' → logprob: -3.7929458618164062
    8. '"' → logprob: -4.042945861816406
    9. ''''' → logprob: -4.167945861816406
    10. 'ed' → logprob: -4.667945861816406

Token 4085: ' seulement' (ID: 32072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0023423433303833
    2. '.' → logprob: -1.5023423433303833
    3. '```' → logprob: -2.3773422241210938
    4. '#' → logprob: -2.7523422241210938
    5. ':' → logprob: -2.8773422241210938
    6. '...' → logprob: -3.0023422241210938
    7. ',' → logprob: -3.0023422241210938
    8. 'def' → logprob: -4.252342224121094
    9. '
' → logprob: -4.502342224121094
    10. ';' → logprob: -5.002342224121094

Token 4086: ' sur' (ID: 1512)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5386059284210205
    2. '   ' → logprob: -1.6636059284210205
    3. 'sur' → logprob: -2.2886059284210205
    4. ' jusqu' → logprob: -2.4136059284210205
    5. 'pour' → logprob: -2.4136059284210205
    6. 'par' → logprob: -3.2886059284210205
    7. 'en' → logprob: -3.5386059284210205
    8. 'if' → logprob: -3.7886059284210205
    9. 'import' → logprob: -3.9136059284210205
    10. 'à' → logprob: -4.288605690002441

Token 4087: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.2560676634311676
    2. ' les' → logprob: -1.7560676336288452
    3. 'le' → logprob: -3.7560677528381348
    4. 'la' → logprob: -4.631067752838135
    5. ' le' → logprob: -5.381067752838135
    6. 'cases' → logprob: -5.506067752838135
    7. '   ' → logprob: -6.006067752838135
    8. ' la' → logprob: -6.131067752838135
    9. 'l' → logprob: -6.256067752838135
    10. 'une' → logprob: -7.256067752838135

Token 4088: ' cases' (ID: 7911)
  Prédit: 'cases'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cases' → logprob: -0.03949696570634842
    2. ' cases' → logprob: -3.789496898651123
    3. 'che' → logprob: -4.664496898651123
    4. 'case' → logprob: -6.539496898651123
    5. ' chemins' → logprob: -7.164496898651123
    6. 'c' → logprob: -7.289496898651123
    7. '   ' → logprob: -7.539496898651123
    8. 'l' → logprob: -7.539496898651123
    9. 'cells' → logprob: -8.289497375488281
    10. 'pass' → logprob: -8.414497375488281

Token 4089: ' avec' (ID: 3937)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.43130770325660706
    2. '   ' → logprob: -1.6813076734542847
    3. '```' → logprob: -3.806307792663574
    4. '_v' → logprob: -4.181307792663574
    5. 'v' → logprob: -4.431307792663574
    6. ' =' → logprob: -4.556307792663574
    7. 'with' → logprob: -4.806307792663574
    8. 'empty' → logprob: -4.806307792663574
    9. '=' → logprob: -4.931307792663574
    10. 'sans' → logprob: -4.931307792663574

Token 4090: ' arbres' (ID: 127011)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.007829603739082813
    2. '0' → logprob: -6.257829666137695
    3. 'des' → logprob: -6.257829666137695
    4. 'ar' → logprob: -6.382829666137695
    5. ' arbres' → logprob: -7.507829666137695
    6. 'for' → logprob: -7.632829666137695
    7. '   ' → logprob: -8.007829666137695
    8. '```' → logprob: -8.632829666137695
    9. 'au' → logprob: -8.757829666137695
    10. 'trees' → logprob: -8.882829666137695

Token 4091: ' blo' (ID: 13098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5706204175949097
    2. 'import' → logprob: -1.3206204175949097
    3. '
' → logprob: -2.070620536804199
    4. ')' → logprob: -4.445620536804199
    5. 'from' → logprob: -4.570620536804199
    6. 'def' → logprob: -5.195620536804199
    7. ':' → logprob: -5.945620536804199
    8. '    
' → logprob: -6.445620536804199
    9. '#' → logprob: -6.695620536804199
    10. '```' → logprob: -6.695620536804199

Token 4092: 'quant' (ID: 39719)
  Prédit: 'ck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ck' → logprob: -1.0187445878982544
    2. '   ' → logprob: -1.3937445878982544
    3. '       ' → logprob: -2.143744468688965
    4. '```' → logprob: -2.393744468688965
    5. 'é' → logprob: -4.018744468688965
    6. ']' → logprob: -4.018744468688965
    7. '     ' → logprob: -4.768744468688965
    8. 'ée' → logprob: -4.893744468688965
    9. 'quer' → logprob: -5.018744468688965
    10. '  ' → logprob: -5.018744468688965

Token 4093: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6789433360099792
    2. 'import' → logprob: -0.8039433360099792
    3. '
' → logprob: -4.303943157196045
    4. 'from' → logprob: -4.928943157196045
    5. 'dist' → logprob: -5.053943157196045
    6. ')' → logprob: -5.428943157196045
    7. 'def' → logprob: -5.803943157196045
    8. '#' → logprob: -5.803943157196045
    9. ':' → logprob: -7.428943157196045
    10. '```' → logprob: -7.428943157196045

Token 4094: ' chemin' (ID: 45035)
  Prédit: 'che'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'che' → logprob: -0.5014216899871826
    2. 'pass' → logprob: -1.3764216899871826
    3. ' passage' → logprob: -2.6264216899871826
    4. ' chemin' → logprob: -3.7514216899871826
    5. '```' → logprob: -4.376421928405762
    6. 'plus' → logprob: -4.876421928405762
    7. ' pass' → logprob: -5.376421928405762
    8. 'path' → logprob: -5.626421928405762
    9. '#' → logprob: -6.376421928405762
    10. '   ' → logprob: -6.626421928405762

Token 4095: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21968646347522736
    2. 'import' → logprob: -1.719686508178711
    3. 'from' → logprob: -4.844686508178711
    4. '
' → logprob: -4.844686508178711
    5. '    
' → logprob: -7.094686508178711
    6. '#' → logprob: -7.219686508178711
    7. ',' → logprob: -9.469686508178711
    8. ')' → logprob: -9.594686508178711
    9. '...' → logprob: -9.719686508178711
    10. '.' → logprob: -9.844686508178711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4093
Tokens correctement prédits (1ère position, stricte): 969
Tokens correctement prédits (1ère position, avec adaptation): 1009
Tokens correctement prédits (top 10): 2301
Précision stricte (1ère position): 23.67%
Précision adaptée (1ère position): 24.65%
Précision (top 10): 56.22%
================================================================================
