================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline
N=int(input())
arr=[int(input()) for _ in range(N)]
prefix_sum=0
pos={0:-1}
max_len=0
for i,v in enumerate(arr):
    prefix_sum+=v
    if prefix_sum in pos:
        length=i-pos[prefix_sum]
        if length>max_len:
            max_len=length
    else:
        pos[prefix_sum]=i
print(max_len)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024087082128971815
    2. '.' → logprob: -7.002408504486084
    3. '()' → logprob: -7.127408504486084
    4. '(
' → logprob: -8.877408981323242
    5. '=' → logprob: -9.002408981323242
    6. ')' → logprob: -9.252408981323242
    7. '_' → logprob: -9.502408981323242
    8. ' (' → logprob: -10.002408981323242
    9. '```' → logprob: -10.002408981323242
    10. ' =' → logprob: -10.252408981323242

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016158436483237892
    2. ' .' → logprob: -9.750161170959473
    3. '.readline' → logprob: -9.875161170959473
    4. '.
' → logprob: -10.625161170959473
    5. '[' → logprob: -11.375161170959473
    6. '.get' → logprob: -12.875161170959473
    7. '```' → logprob: -13.250161170959473
    8. '.

' → logprob: -13.625161170959473
    9. '.setdefault' → logprob: -14.000161170959473
    10. '.stdin' → logprob: -14.125161170959473

Token 6: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0017238459549844265
    2. '.' → logprob: -7.001723766326904
    3. '.read' → logprob: -7.126723766326904
    4. ' readline' → logprob: -12.501724243164062
    5. '.readlines' → logprob: -12.876724243164062
    6. 'read' → logprob: -13.626724243164062
    7. '.Read' → logprob: -14.251724243164062
    8. '```' → logprob: -15.626724243164062
    9. ' .' → logprob: -16.001724243164062
    10. '.buffer' → logprob: -16.876724243164062

Token 7: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020652368664741516
    2. '(' → logprob: -4.3956522941589355
    3. '().' → logprob: -4.8956522941589355
    4. '()
' → logprob: -7.8956522941589355
    5. '(
' → logprob: -9.645652770996094
    6. '()\' → logprob: -9.645652770996094
    7. ')' → logprob: -10.270652770996094
    8. '()

' → logprob: -10.770652770996094
    9. '
' → logprob: -11.520652770996094
    10. ' ()' → logprob: -11.645652770996094

Token 8: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.034171056002378464
    2. '(' → logprob: -3.4091711044311523
    3. '().' → logprob: -8.159171104431152
    4. '()
' → logprob: -8.909171104431152
    5. '(
' → logprob: -10.659171104431152
    6. '()\' → logprob: -10.659171104431152
    7. '()

' → logprob: -11.159171104431152
    8. ')' → logprob: -11.534171104431152
    9. '())' → logprob: -12.409171104431152
    10. 'def' → logprob: -12.534171104431152

Token 9: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5842719078063965
    2. ' =' → logprob: -0.8342719078063965
    3. ' ' → logprob: -5.0842719078063965
    4. ',' → logprob: -7.3342719078063965
    5. '=int' → logprob: -7.5842719078063965
    6. ')' → logprob: -7.9592719078063965
    7. '.' → logprob: -8.584272384643555
    8. '>' → logprob: -9.709272384643555
    9. '_' → logprob: -10.084272384643555
    10. '[' → logprob: -10.209272384643555

Token 10: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47439107298851013
    2. '(' → logprob: -0.9743911027908325
    3. '()' → logprob: -9.099390983581543
    4. '(sys' → logprob: -9.349390983581543
    5. '(N' → logprob: -9.724390983581543
    6. '('' → logprob: -10.849390983581543
    7. 'input' → logprob: -10.849390983581543
    8. ' (' → logprob: -12.599390983581543
    9. '(
' → logprob: -12.974390983581543
    10. '(`' → logprob: -12.974390983581543

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17001013457775116
    2. ')' → logprob: -2.1700100898742676
    3. '()' → logprob: -3.1700100898742676
    4. '(' → logprob: -9.170010566711426
    5. ' ())' → logprob: -10.545010566711426
    6. '().' → logprob: -11.795010566711426
    7. '`)' → logprob: -12.045010566711426
    8. ' )' → logprob: -12.420010566711426
    9. '())
' → logprob: -12.545010566711426
    10. '))' → logprob: -13.295010566711426

Token 12: 'arr' (ID: 1614)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16625092923641205
    2. 'data' → logprob: -2.4162509441375732
    3. ' for' → logprob: -4.166250705718994
    4. 'a' → logprob: -4.291250705718994
    5. ')' → logprob: -4.916250705718994
    6. '*' → logprob: -5.541250705718994
    7. '\' → logprob: -6.041250705718994
    8. '#' → logprob: -6.041250705718994
    9. 'if' → logprob: -6.041250705718994
    10. 's' → logprob: -6.166250705718994

Token 13: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004802245646715164
    2. '=' → logprob: -6.004802227020264
    3. '.' → logprob: -7.004802227020264
    4. ' =' → logprob: -7.254802227020264
    5. '[:]' → logprob: -8.129802703857422
    6. '[]' → logprob: -8.879802703857422
    7. '=[]' → logprob: -9.754802703857422
    8. '\[' → logprob: -10.254802703857422
    9. '.append' → logprob: -10.504802703857422
    10. '[i' → logprob: -10.629802703857422

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.021025381982326508
    2. '0' → logprob: -4.02102518081665
    3. ']int' → logprob: -6.52102518081665
    4. ']' → logprob: -6.89602518081665
    5. '(int' → logprob: -8.896025657653809
    6. ' int' → logprob: -9.146025657653809
    7. '*' → logprob: -9.896025657653809
    8. 'list' → logprob: -11.021025657653809
    9. ']*' → logprob: -11.271025657653809
    10. 'i' → logprob: -11.396025657653809

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005234121344983578
    2. '(x' → logprob: -5.630234241485596
    3. '()]' → logprob: -7.255234241485596
    4. '(input' → logprob: -7.630234241485596
    5. '(i' → logprob: -8.130233764648438
    6. '()' → logprob: -9.380233764648438
    7. '(a' → logprob: -11.005233764648438
    8. '(
' → logprob: -11.380233764648438
    9. '(

' → logprob: -11.505233764648438
    10. ']' → logprob: -12.005233764648438

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0005830573500134051
    2. '()' → logprob: -8.125582695007324
    3. '()]' → logprob: -8.250582695007324
    4. '()))' → logprob: -12.000582695007324
    5. '()),' → logprob: -12.125582695007324
    6. ')' → logprob: -12.500582695007324
    7. ' ())' → logprob: -12.625582695007324
    8. '())
' → logprob: -12.750582695007324
    9. '().' → logprob: -13.125582695007324
    10. '(' → logprob: -14.500582695007324

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007570415735244751
    2. ')]' → logprob: -5.132570266723633
    3. '()' → logprob: -7.507570266723633
    4. '())' → logprob: -7.507570266723633
    5. ']' → logprob: -8.382570266723633
    6. 'for' → logprob: -9.507570266723633
    7. ' )' → logprob: -10.007570266723633
    8. '()]' → logprob: -10.007570266723633
    9. '[i' → logprob: -10.382570266723633
    10. ' for' → logprob: -10.632570266723633

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.028212744742631912
    2. '_' → logprob: -4.403212547302246
    3. ' _' → logprob: -4.403212547302246
    4. ' ' → logprob: -5.903212547302246
    5. ' i' → logprob: -8.278212547302246
    6. ' in' → logprob: -8.903212547302246
    7. 'range' → logprob: -9.153212547302246
    8. '_range' → logprob: -9.653212547302246
    9. ' xrange' → logprob: -10.778212547302246
    10. '	range' → logprob: -10.778212547302246

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001202850602567196
    2. 'in' → logprob: -6.7512030601501465
    3. ' ' → logprob: -10.501202583312988
    4. 'range' → logprob: -12.876202583312988
    5. ' range' → logprob: -13.876202583312988
    6. '  ' → logprob: -13.876202583312988
    7. 'i' → logprob: -15.501202583312988
    8. '	in' → logprob: -15.626202583312988
    9. ' i' → logprob: -15.876202583312988
    10. ' _' → logprob: -16.251203536987305

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019294669618830085
    2. ' range' → logprob: -6.25192928314209
    3. '(range' → logprob: -15.62692928314209
    4. 'rang' → logprob: -15.75192928314209
    5. '	range' → logprob: -15.87692928314209
    6. 'ange' → logprob: -16.251930236816406
    7. 'arr' → logprob: -16.751930236816406
    8. ')' → logprob: -17.251930236816406
    9. 'ran' → logprob: -17.501930236816406
    10. '.range' → logprob: -17.626930236816406

Token 21: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008350008283741772
    2. '(' → logprob: -7.125834941864014
    3. 'N' → logprob: -10.500835418701172
    4. '(n' → logprob: -13.000835418701172
    5. ' (' → logprob: -15.125835418701172
    6. ' N' → logprob: -15.250835418701172
    7. '(
' → logprob: -15.625835418701172
    8. ')' → logprob: -16.000835418701172
    9. '()' → logprob: -18.125835418701172
    10. '(

' → logprob: -18.750835418701172

Token 22: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000526938121765852
    2. ')' → logprob: -7.8755269050598145
    3. ']' → logprob: -8.875527381896973
    4. ')])' → logprob: -13.000527381896973
    5. ')]
' → logprob: -13.250527381896973
    6. '])]' → logprob: -13.875527381896973
    7. '])' → logprob: -14.875527381896973
    8. '))' → logprob: -15.000527381896973
    9. ' )' → logprob: -15.000527381896973
    10. ')
' → logprob: -15.500527381896973

Token 23: 'prefix' (ID: 26155)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0034555026795715094
    2. 'dp' → logprob: -6.753455638885498
    3. 'max' → logprob: -7.503455638885498
    4. 'sorted' → logprob: -7.503455638885498
    5. 'result' → logprob: -8.50345516204834
    6. 's' → logprob: -8.62845516204834
    7. 'answer' → logprob: -8.62845516204834
    8. 'count' → logprob: -9.25345516204834
    9. 'sum' → logprob: -9.37845516204834
    10. 'for' → logprob: -9.62845516204834

Token 24: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.03717765212059021
    2. '_' → logprob: -3.787177562713623
    3. '_s' → logprob: -4.287177562713623
    4. 'sum' → logprob: -9.912178039550781
    5. 's' → logprob: -11.787178039550781
    6. '[' → logprob: -11.787178039550781
    7. 'Sum' → logprob: -12.037178039550781
    8. '_max' → logprob: -12.412178039550781
    9. '_prefix' → logprob: -12.537178039550781
    10. '=' → logprob: -12.787178039550781

Token 25: '=' (ID: 28)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7053355574607849
    2. '=' → logprob: -1.0803356170654297
    3. '_' → logprob: -2.7053356170654297
    4. ' =' → logprob: -2.7053356170654297
    5. '=[' → logprob: -4.20533561706543
    6. 's' → logprob: -4.83033561706543
    7. '=[]' → logprob: -4.83033561706543
    8. '[:]' → logprob: -7.45533561706543
    9. '_=' → logprob: -7.58033561706543
    10. '[]' → logprob: -8.20533561706543

Token 26: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0183525700122118
    2. '0' → logprob: -4.018352508544922
    3. '[arr' → logprob: -9.143352508544922
    4. ' [' → logprob: -9.393352508544922
    5. 'arr' → logprob: -12.268352508544922
    6. '[int' → logprob: -12.643352508544922
    7. ' ' → logprob: -13.268352508544922
    8. '[N' → logprob: -13.893352508544922
    9. '[len' → logprob: -14.393352508544922
    10. '[n' → logprob: -14.893352508544922

Token 27: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7911418080329895
    2. 'result' → logprob: -1.5411417484283447
    3. 'max' → logprob: -1.6661417484283447
    4. 'total' → logprob: -2.9161417484283447
    5. '
' → logprob: -3.9161417484283447
    6. 'answer' → logprob: -3.9161417484283447
    7. ' for' → logprob: -4.041141986846924
    8. 'prefix' → logprob: -4.541141986846924
    9. 'sum' → logprob: -5.666141986846924
    10. 's' → logprob: -5.791141986846924

Token 28: 'pos' (ID: 1103)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.027104884386062622
    2. 'result' → logprob: -4.40210485458374
    3. 'answer' → logprob: -5.02710485458374
    4. 'min' → logprob: -6.15210485458374
    5. 'for' → logprob: -6.40210485458374
    6. 'count' → logprob: -6.77710485458374
    7. ' max' → logprob: -7.27710485458374
    8. 'res' → logprob: -7.27710485458374
    9. 'total' → logprob: -7.90210485458374
    10. 'prefix' → logprob: -8.027105331420898

Token 29: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15875014662742615
    2. 'fix' → logprob: -3.158750057220459
    3. '=[]' → logprob: -3.658750057220459
    4. '_sum' → logprob: -4.033750057220459
    5. ' =' → logprob: -4.658750057220459
    6. 's' → logprob: -4.783750057220459
    7. '_prefix' → logprob: -5.283750057220459
    8. 'itive' → logprob: -5.658750057220459
    9. '_counts' → logprob: -5.658750057220459
    10. '_=' → logprob: -5.783750057220459

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011214634403586388
    2. '}' → logprob: -4.511214733123779
    3. ' ' → logprob: -8.761214256286621
    4. ' }' → logprob: -12.761214256286621
    5. '-' → logprob: -13.011214256286621
    6. '}
' → logprob: -13.511214256286621
    7. '[]}' → logprob: -14.136214256286621
    8. '   ' → logprob: -14.511214256286621
    9. '}

' → logprob: -14.636214256286621
    10. '  ' → logprob: -15.511214256286621

Token 31: ':-' (ID: 20118)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011594036914175376
    2. ':-' → logprob: -9.125116348266602
    3. ' :' → logprob: -12.750116348266602
    4. ':[' → logprob: -12.875116348266602
    5. ':index' → logprob: -15.000116348266602
    6. '}' → logprob: -15.125116348266602
    7. ':]' → logprob: -15.250116348266602
    8. ':true' → logprob: -16.1251163482666
    9. '0' → logprob: -16.5001163482666
    10. ':+' → logprob: -17.0001163482666

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.500004768371582
    3. '１' → logprob: -14.937504768371582
    4. '{' → logprob: -15.000004768371582
    5. '۱' → logprob: -15.562504768371582
    6. '-' → logprob: -15.875004768371582
    7. '১' → logprob: -16.8750057220459
    8. '2' → logprob: -16.9375057220459
    9. '१' → logprob: -17.1875057220459
    10. '0' → logprob: -17.2500057220459

Token 33: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00047475993051193655
    2. ' }' → logprob: -7.87547492980957
    3. ',' → logprob: -9.50047492980957
    4. '}
' → logprob: -10.87547492980957
    5. '}

' → logprob: -14.50047492980957
    6. ',
' → logprob: -15.62547492980957
    7. ' }
' → logprob: -16.50047492980957
    8. '}`' → logprob: -17.37547492980957
    9. '}
' → logprob: -17.37547492980957
    10. '}\' → logprob: -17.50047492980957

Token 34: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.40074604749679565
    2. 'count' → logprob: -2.4007461071014404
    3. 'result' → logprob: -2.4007461071014404
    4. 'answer' → logprob: -2.5257461071014404
    5. 'ans' → logprob: -3.1507461071014404
    6. 'res' → logprob: -4.275745868682861
    7. 'for' → logprob: -4.650745868682861
    8. 'total' → logprob: -7.150745868682861
    9. 'dp' → logprob: -7.650745868682861
    10. 'output' → logprob: -8.02574634552002

Token 35: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.4589051902294159
    2. '_len' → logprob: -1.4589052200317383
    3. '_sum' → logprob: -2.2089052200317383
    4. '_' → logprob: -3.7089052200317383
    5. '_val' → logprob: -7.708905220031738
    6. '_value' → logprob: -7.958905220031738
    7. '_l' → logprob: -8.833905220031738
    8. 'length' → logprob: -10.333905220031738
    9. '_prefix' → logprob: -10.333905220031738
    10. 'sum' → logprob: -10.583905220031738

Token 36: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01816820353269577
    2. ' =' → logprob: -4.018167972564697
    3. '=max' → logprob: -11.768168449401855
    4. '=int' → logprob: -11.893168449401855
    5. '=

' → logprob: -13.768168449401855
    6. '={}' → logprob: -14.643168449401855
    7. '=None' → logprob: -14.643168449401855
    8. ',' → logprob: -14.893168449401855
    9. '=[]' → logprob: -15.518168449401855
    10. '=s' → logprob: -16.14316749572754

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '۰' → logprob: -16.00004005432129
    4. '０' → logprob: -17.00004005432129
    5. '000' → logprob: -17.68754005432129
    6. '1' → logprob: -18.06254005432129
    7. '-' → logprob: -18.25004005432129
    8. '০' → logprob: -18.37504005432129
    9. '=' → logprob: -18.50004005432129
    10. '00' → logprob: -18.87504005432129

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03415239602327347
    2. '\n' → logprob: -4.159152507781982
    3. 'for' → logprob: -5.159152507781982
    4. '
' → logprob: -5.284152507781982
    5. ' for' → logprob: -5.659152507781982
    6. ' 
' → logprob: -6.159152507781982
    7. '' → logprob: -7.409152507781982
    8. '<|end|>' → logprob: -8.034152030944824
    9. '\' → logprob: -8.409152030944824
    10. '```' → logprob: -9.534152030944824

Token 39: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9044122099876404
    2. 'current' → logprob: -1.5294122695922852
    3. '
' → logprob: -2.029412269592285
    4. 'curr' → logprob: -2.029412269592285
    5. 'count' → logprob: -3.529412269592285
    6. ' for' → logprob: -4.529412269592285
    7. 's' → logprob: -4.529412269592285
    8. 'sum' → logprob: -4.529412269592285
    9. 'cum' → logprob: -4.779412269592285
    10. 'answer' → logprob: -4.779412269592285

Token 40: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5242156386375427
    2. ' i' → logprob: -0.8992156386375427
    3. 'num' → logprob: -8.274215698242188
    4. ' num' → logprob: -8.649215698242188
    5. ' idx' → logprob: -8.774215698242188
    6. 'value' → logprob: -9.149215698242188
    7. ' value' → logprob: -9.274215698242188
    8. 'idx' → logprob: -9.399215698242188
    9. 'x' → logprob: -9.524215698242188
    10. ' ' → logprob: -10.649215698242188

Token 41: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01429525576531887
    2. 'in' → logprob: -4.3892951011657715
    3. ',' → logprob: -6.8892951011657715
    4. ' ' → logprob: -7.2642951011657715
    5. ' ,' → logprob: -10.01429557800293
    6. ',in' → logprob: -11.76429557800293
    7. '	in' → logprob: -12.51429557800293
    8. '  ' → logprob: -13.51429557800293
    9. '```' → logprob: -13.63929557800293
    10. ' i' → logprob: -13.88929557800293

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04311200976371765
    2. 'in' → logprob: -3.16811203956604
    3. ' ' → logprob: -9.668111801147461
    4. '	in' → logprob: -11.043111801147461
    5. ',' → logprob: -11.293111801147461
    6. '```' → logprob: -11.918111801147461
    7. ',in' → logprob: -12.293111801147461
    8. 'n' → logprob: -13.543111801147461
    9. ' ```' → logprob: -13.668111801147461
    10. ' ,' → logprob: -13.793111801147461

Token 43: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.12693451344966888
    2. 'enumer' → logprob: -2.12693452835083
    3. '(en' → logprob: -12.626934051513672
    4. '```' → logprob: -13.126934051513672
    5. 'en' → logprob: -14.376934051513672
    6. 'Enumer' → logprob: -16.126934051513672
    7. ' enumer' → logprob: -16.251934051513672
    8. ' en' → logprob: -16.501934051513672
    9. '.enumer' → logprob: -16.501934051513672
    10. ' ' → logprob: -16.626934051513672

Token 44: '(arr' (ID: 19646)
  Prédit: '(arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.00017314712749794126
    2. 'arr' → logprob: -8.750173568725586
    3. ' (' → logprob: -11.250173568725586
    4. ' arr' → logprob: -13.625173568725586
    5. '(' → logprob: -15.875173568725586
    6. '	arr' → logprob: -16.125173568725586
    7. '<arr' → logprob: -16.750173568725586
    8. '[arr' → logprob: -17.625173568725586
    9. '(range' → logprob: -18.375173568725586
    10. '_arr' → logprob: -18.750173568725586

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06522581726312637
    2. '):
' → logprob: -2.815225839614868
    3. ':' → logprob: -6.065225601196289
    4. ' ):' → logprob: -7.690225601196289
    5. ')' → logprob: -8.315225601196289
    6. '):
' → logprob: -9.065225601196289
    7. ' ):
' → logprob: -9.940225601196289
    8. ':
' → logprob: -10.815225601196289
    9. '+' → logprob: -11.190225601196289
    10. '=' → logprob: -12.065225601196289

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6474419236183167
    2. ' prefix' → logprob: -0.7724419236183167
    3. 'prefix' → logprob: -4.772441864013672
    4. ' ' → logprob: -5.897441864013672
    5. '    
' → logprob: -7.272441864013672
    6. '<|end|>' → logprob: -7.647441864013672
    7. ' 
' → logprob: -7.772441864013672
    8. '	p' → logprob: -7.772441864013672
    9. '(prefix' → logprob: -7.897441864013672
    10. '
' → logprob: -8.272441864013672

Token 47: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.23386891186237335
    2. 'prefix' (adapté à ' prefix') → logprob: -1.608868956565857
    3. '   ' → logprob: -4.8588690757751465
    4. '```' → logprob: -7.9838690757751465
    5. '_prefix' → logprob: -8.858868598937988
    6. '(prefix' → logprob: -9.608868598937988
    7. ' ' → logprob: -10.483868598937988
    8. '<|end|>' → logprob: -11.358868598937988
    9. '
' → logprob: -11.983868598937988
    10. 'Prefix' → logprob: -12.108868598937988

Token 48: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00021319588995538652
    2. '_' → logprob: -8.750213623046875
    3. '_s' → logprob: -10.000213623046875
    4. ' _' → logprob: -12.625213623046875
    5. '=_' → logprob: -14.250213623046875
    6. '##_' → logprob: -14.625213623046875
    7. '_put' → logprob: -14.750213623046875
    8. '```' → logprob: -14.875213623046875
    9. '_add' → logprob: -15.000213623046875
    10. ')_' → logprob: -15.500213623046875

Token 49: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6949957013130188
    2. '+=' → logprob: -0.6949957013130188
    3. '+' → logprob: -6.444995880126953
    4. ' +' → logprob: -9.444995880126953
    5. '=' → logprob: -9.819995880126953
    6. ']+=' → logprob: -10.069995880126953
    7. '+='' → logprob: -10.319995880126953
    8. '+=(' → logprob: -10.819995880126953
    9. '+="' → logprob: -11.069995880126953
    10. ' =' → logprob: -11.819995880126953

Token 50: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.4855663721391466e-05
    2. ' v' → logprob: -11.125015258789062
    3. '1' → logprob: -16.750015258789062
    4. '	v' → logprob: -18.375015258789062
    5. 'arr' → logprob: -19.000015258789062
    6. '-v' → logprob: -19.250015258789062
    7. '_v' → logprob: -19.500015258789062
    8. '(v' → logprob: -20.000015258789062
    9. '   ' → logprob: -20.250015258789062
    10. ' ' → logprob: -20.375015258789062

Token 51: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31009697914123535
    2. ' ' → logprob: -2.5600969791412354
    3. '<|end|>' → logprob: -2.6850969791412354
    4. '
' → logprob: -2.8100969791412354
    5. 'if' → logprob: -3.6850969791412354
    6. ' 
' → logprob: -3.9350969791412354
    7. '   ' → logprob: -5.310096740722656
    8. '    
' → logprob: -5.560096740722656
    9. '```' → logprob: -6.060096740722656
    10. '  
' → logprob: -6.310096740722656

Token 53: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0337880440056324
    2. ' if' → logprob: -3.408787965774536
    3. '```' → logprob: -8.908787727355957
    4. ' ' → logprob: -13.658787727355957
    5. '`' → logprob: -13.783787727355957
    6. '   ' → logprob: -13.908787727355957
    7. 'If' → logprob: -14.158787727355957
    8. 's' → logprob: -14.283787727355957
    9. '``' → logprob: -14.658787727355957
    10. '<|end|>' → logprob: -15.283787727355957

Token 54: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.006095284596085548
    2. 'prefix' → logprob: -5.6310954093933105
    3. '(prefix' → logprob: -6.1310954093933105
    4. ' (' → logprob: -8.131094932556152
    5. ' ' → logprob: -11.256094932556152
    6. ' ' → logprob: -12.381094932556152
    7. '(' → logprob: -13.256094932556152
    8. '(p' → logprob: -14.006094932556152
    9. '_prefix' → logprob: -14.256094932556152
    10. ' prefixes' → logprob: -14.756094932556152

Token 55: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.465036105713807e-06
    2. '_s' → logprob: -12.625007629394531
    3. ' _' → logprob: -13.000007629394531
    4. 'sum' → logprob: -14.000007629394531
    5. '_' → logprob: -15.000007629394531
    6. '```' → logprob: -15.250007629394531
    7. '._' → logprob: -16.37500762939453
    8. '_len' → logprob: -16.87500762939453
    9. ''_' → logprob: -17.12500762939453
    10. '>' → logprob: -17.12500762939453

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01878727599978447
    2. 'in' → logprob: -4.518787384033203
    3. ' not' → logprob: -4.893787384033203
    4. 'not' → logprob: -8.643787384033203
    5. ' ' → logprob: -10.643787384033203
    6. ' i' → logprob: -12.643787384033203
    7. '```' → logprob: -13.018787384033203
    8. 'n' → logprob: -13.143787384033203
    9. ' n' → logprob: -13.581287384033203
    10. '-' → logprob: -13.581287384033203

Token 57: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.693152129650116
    2. ' pos' → logprob: -0.693152129650116
    3. '	pos' → logprob: -13.31815242767334
    4. '_pos' → logprob: -14.19315242767334
    5. '```' → logprob: -14.81815242767334
    6. '[pos' → logprob: -14.94315242767334
    7. '(pos' → logprob: -14.94315242767334
    8. ' ' → logprob: -15.06815242767334
    9. ',pos' → logprob: -15.06815242767334
    10. '<|end|>' → logprob: -15.44315242767334

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.045823566731997e-05
    2. ':
' → logprob: -11.875020027160645
    3. ' :' → logprob: -12.250020027160645
    4. '<|end|>' → logprob: -12.625020027160645
    5. ':**' → logprob: -13.375020027160645
    6. '):' → logprob: -13.500020027160645
    7. '>:' → logprob: -14.625020027160645
    8. '.keys' → logprob: -15.125020027160645
    9. '=' → logprob: -15.250020027160645
    10. ':return' → logprob: -15.500020027160645

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003732499200850725
    2. ':' → logprob: -6.378732681274414
    3. ' max' → logprob: -7.003732681274414
    4. 'max' → logprob: -7.253732681274414
    5. '	' → logprob: -9.253732681274414
    6. '   ' → logprob: -9.378732681274414
    7. '	max' → logprob: -9.628732681274414
    8. '```' → logprob: -10.003732681274414
    9. '	   ' → logprob: -10.753732681274414
    10. ',' → logprob: -11.378732681274414

Token 60: ' length' (ID: 5517)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.15638156235218048
    2. 'max' → logprob: -2.781381607055664
    3. '           ' → logprob: -2.906381607055664
    4. '       ' → logprob: -4.031381607055664
    5. '
' → logprob: -4.781381607055664
    6. '        
' → logprob: -8.531381607055664
    7. ',max' → logprob: -8.781381607055664
    8. '(max' → logprob: -8.781381607055664
    9. '	max' → logprob: -8.781381607055664
    10. '        ' → logprob: -9.156381607055664

Token 61: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04033280536532402
    2. ' =' → logprob: -3.665332794189453
    3. '=max' → logprob: -4.290332794189453
    4. '=len' → logprob: -8.415332794189453
    5. '=int' → logprob: -13.165332794189453
    6. '=i' → logprob: -13.665332794189453
    7. '=current' → logprob: -13.790332794189453
    8. '=Math' → logprob: -14.165332794189453
    9. '=user' → logprob: -14.415332794189453
    10. 'max' → logprob: -14.540332794189453

Token 62: '-pos' (ID: 153726)
  Prédit: '-pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-pos' → logprob: -0.6335124373435974
    2. ' -' → logprob: -0.8835124373435974
    3. '-' → logprob: -2.883512496948242
    4. '-position' → logprob: -12.258512496948242
    5. '-post' → logprob: -13.883512496948242
    6. 'pos' → logprob: -14.258512496948242
    7. '-P' → logprob: -14.258512496948242
    8. ' ' → logprob: -14.508512496948242
    9. '-po' → logprob: -15.508512496948242
    10. '-p' → logprob: -15.758512496948242

Token 63: '[p' (ID: 23234)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.3887134790420532
    2. '[p' → logprob: -1.1387134790420532
    3. 'sum' → logprob: -7.013713359832764
    4. 'prefix' → logprob: -7.888713359832764
    5. '[' → logprob: -8.388713836669922
    6. '][' → logprob: -10.263713836669922
    7. '[_' → logprob: -10.638713836669922
    8. 's' → logprob: -10.638713836669922
    9. '_prefix' → logprob: -10.638713836669922
    10. '_[' → logprob: -10.888713836669922

Token 64: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -0.0003513125702738762
    2. 'prefix' → logprob: -8.875350952148438
    3. 'ref' → logprob: -9.250350952148438
    4. 'REFIX' → logprob: -10.250350952148438
    5. '[' → logprob: -10.750350952148438
    6. 're' → logprob: -11.000350952148438
    7. 'sum' → logprob: -11.375350952148438
    8. 'ef' → logprob: -11.750350952148438
    9. 'fix' → logprob: -11.750350952148438
    10. 'ix' → logprob: -12.625350952148438

Token 65: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.995397365652025e-05
    2. 'sum' → logprob: -9.375089645385742
    3. '_' → logprob: -12.750089645385742
    4. '	sum' → logprob: -15.125089645385742
    5. ' sum' → logprob: -15.250089645385742
    6. '_len' → logprob: -15.250089645385742
    7. '_s' → logprob: -15.375089645385742
    8. 's' → logprob: -15.750089645385742
    9. ']' → logprob: -15.875089645385742
    10. '.sum' → logprob: -16.000089645385742

Token 66: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00026383911608718336
    2. ' ]' → logprob: -9.125264167785645
    3. ']
' → logprob: -9.375264167785645
    4. ']>' → logprob: -10.125264167785645
    5. '']' → logprob: -11.125264167785645
    6. '"]' → logprob: -12.250264167785645
    7. '`]' → logprob: -12.750264167785645
    8. ']

' → logprob: -13.750264167785645
    9. ']>=' → logprob: -13.875264167785645
    10. ']-' → logprob: -14.125264167785645

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10643202811479568
    2. '>' → logprob: -3.1064319610595703
    3. '
' → logprob: -3.8564319610595703
    4. '```' → logprob: -4.35643196105957
    5. '           ' → logprob: -4.98143196105957
    6. '   ' → logprob: -5.23143196105957
    7. 'max' → logprob: -6.85643196105957
    8. '=' → logprob: -6.85643196105957
    9. ':
' → logprob: -6.85643196105957
    10. '        
' → logprob: -6.98143196105957

Token 68: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0077775754034519196
    2. ' if' → logprob: -5.007777690887451
    3. 'max' → logprob: -7.132777690887451
    4. '       ' → logprob: -8.507777214050293
    5. '
' → logprob: -11.007777214050293
    6. '```' → logprob: -11.007777214050293
    7. '           ' → logprob: -11.382777214050293
    8. '>' → logprob: -11.632777214050293
    9. '   ' → logprob: -12.632777214050293
    10. ' max' → logprob: -13.382777214050293

Token 69: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.00861669983714819
    2. 'length' → logprob: -4.758616924285889
    3. '(length' → logprob: -14.13361644744873
    4. '	length' → logprob: -14.38361644744873
    5. 'ength' → logprob: -14.75861644744873
    6. ' max' → logprob: -14.88361644744873
    7. ' ' → logprob: -17.133617401123047
    8. 'max' → logprob: -17.258617401123047
    9. ' lenght' → logprob: -17.258617401123047
    10. '_length' → logprob: -17.508617401123047

Token 70: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0017038638470694423
    2. ' >' → logprob: -6.37670373916626
    3. '">' → logprob: -14.626704216003418
    4. ' ' → logprob: -14.876704216003418
    5. '＞' → logprob: -15.376704216003418
    6. '&gt' → logprob: -15.626704216003418
    7. ' ' → logprob: -16.1267032623291
    8. ')>' → logprob: -16.6267032623291
    9. '```' → logprob: -16.7517032623291
    10. '()>' → logprob: -17.1267032623291

Token 71: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0003806257154792547
    2. ' max' → logprob: -7.875380516052246
    3. '	max' → logprob: -15.875380516052246
    4. 'maxlength' → logprob: -16.125381469726562
    5. '
' → logprob: -16.750381469726562
    6. '```' → logprob: -16.875381469726562
    7. '0' → logprob: -17.250381469726562
    8. '(max' → logprob: -17.375381469726562
    9. '=max' → logprob: -17.625381469726562
    10. '_max' → logprob: -17.875381469726562

Token 72: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -16.5
    3. 'len' → logprob: -17.5
    4. '_LEN' → logprob: -18.25
    5. '_' → logprob: -19.25
    6. '_length' → logprob: -20.0
    7. ' _' → logprob: -20.125
    8. '```' → logprob: -20.5
    9. '_pos' → logprob: -21.125
    10. '<len' → logprob: -21.375

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004854568745940924
    2. ':
' → logprob: -5.379854679107666
    3. '           ' → logprob: -9.129854202270508
    4. '<|end|>' → logprob: -10.004854202270508
    5. '       ' → logprob: -10.129854202270508
    6. '):' → logprob: -11.504854202270508
    7. '=' → logprob: -12.129854202270508
    8. ':max' → logprob: -12.129854202270508
    9. '<|end|>' → logprob: -12.129854202270508
    10. ':

' → logprob: -13.504854202270508

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33278313279151917
    2. 'max' → logprob: -1.3327831029891968
    3. ' max' → logprob: -4.082783222198486
    4. '```' → logprob: -6.457783222198486
    5. ':
' → logprob: -8.457782745361328
    6. '       ' → logprob: -8.957782745361328
    7. '               ' → logprob: -9.082782745361328
    8. '(max' → logprob: -9.082782745361328
    9. '	max' → logprob: -9.957782745361328
    10. '
' → logprob: -9.957782745361328

Token 75: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.252013236284256
    2. ' max' → logprob: -1.5020132064819336
    3. '               ' → logprob: -10.127013206481934
    4. '           ' → logprob: -10.502013206481934
    5. '```' → logprob: -11.877013206481934
    6. '_max' → logprob: -12.252013206481934
    7. '	max' → logprob: -13.002013206481934
    8. 'maxlength' → logprob: -14.377013206481934
    9. '(max' → logprob: -14.752013206481934
    10. '   ' → logprob: -14.877013206481934

Token 76: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.6240566083070007e-06
    2. 'len' → logprob: -13.750001907348633
    3. '_length' → logprob: -15.000001907348633
    4. '_' → logprob: -16.375001907348633
    5. '_LEN' → logprob: -17.000001907348633
    6. 'Len' → logprob: -17.250001907348633
    7. ' _' → logprob: -17.250001907348633
    8. '_l' → logprob: -17.375001907348633
    9. '```' → logprob: -18.125001907348633
    10. '_max' → logprob: -18.500001907348633

Token 77: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.927930654550437e-05
    2. ' =' → logprob: -10.500029563903809
    3. '=len' → logprob: -14.000029563903809
    4. '=

' → logprob: -15.500029563903809
    5. '=max' → logprob: -15.875029563903809
    6. 'length' → logprob: -16.125028610229492
    7. ',length' → logprob: -16.625028610229492
    8. '=line' → logprob: -16.750028610229492
    9. '=l' → logprob: -16.875028610229492
    10. '=size' → logprob: -17.250028610229492

Token 78: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0002613358374219388
    2. ' length' → logprob: -8.250261306762695
    3. 'leng' → logprob: -17.625261306762695
    4. 'ength' → logprob: -18.000261306762695
    5. '	length' → logprob: -19.375261306762695
    6. '(length' → logprob: -19.375261306762695
    7. '_length' → logprob: -20.000261306762695
    8. 'len' → logprob: -20.750261306762695
    9. '-length' → logprob: -21.000261306762695
    10. 'l' → logprob: -21.125261306762695

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01442438643425703
    2. 'else' → logprob: -4.2644243240356445
    3. '```' → logprob: -8.639424324035645
    4. ' else' → logprob: -9.514424324035645
    5. '       ' → logprob: -12.014424324035645
    6. '}else' → logprob: -13.264424324035645
    7. '	else' → logprob: -13.889424324035645
    8. '   ' → logprob: -15.139424324035645
    9. '``' → logprob: -15.514424324035645
    10. 'elif' → logprob: -15.889424324035645

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03837239742279053
    2. 'else' → logprob: -3.28837251663208
    3. '```' → logprob: -8.663372039794922
    4. ' else' → logprob: -8.788372039794922
    5. '       ' → logprob: -12.913372039794922
    6. '}else' → logprob: -13.663372039794922
    7. '	else' → logprob: -13.913372039794922
    8. 'elif' → logprob: -15.038372039794922
    9. '   ' → logprob: -15.788372039794922
    10. '}' → logprob: -15.788372039794922

Token 81: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2544618546962738
    2. '   ' → logprob: -1.5044618844985962
    3. ' else' → logprob: -6.004461765289307
    4. '```' → logprob: -10.129462242126465
    5. '       ' → logprob: -11.504462242126465
    6. '	else' → logprob: -11.754462242126465
    7. '  ' → logprob: -13.129462242126465
    8. '}else' → logprob: -14.129462242126465
    9. ' ' → logprob: -14.254462242126465
    10. 'elif' → logprob: -15.129462242126465

Token 82: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014409352093935013
    2. ':' → logprob: -4.38940954208374
    3. '   ' → logprob: -6.63940954208374
    4. ':
' → logprob: -8.014409065246582
    5. ' pos' → logprob: -9.389409065246582
    6. 'pos' → logprob: -10.264409065246582
    7. '[pos' → logprob: -10.514409065246582
    8. '    ' → logprob: -10.889409065246582
    9. '        
' → logprob: -11.014409065246582
    10. '    
' → logprob: -11.389409065246582

Token 83: '       ' (ID: 309)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.48084720969200134
    2. 'pos' → logprob: -0.9808472394943237
    3. '       ' → logprob: -5.480847358703613
    4. '   ' → logprob: -5.980847358703613
    5. '           ' → logprob: -10.730847358703613
    6. '	pos' → logprob: -11.480847358703613
    7. '[pos' → logprob: -11.855847358703613
    8. '    ' → logprob: -12.230847358703613
    9. ' ' → logprob: -12.855847358703613
    10. '```' → logprob: -13.480847358703613

Token 84: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.014168326742947102
    2. ' pos' → logprob: -4.2641682624816895
    3. '   ' → logprob: -12.389168739318848
    4. '       ' → logprob: -14.764168739318848
    5. '	pos' → logprob: -16.26416778564453
    6. '[pos' → logprob: -17.01416778564453
    7. '_pos' → logprob: -17.38916778564453
    8. '           ' → logprob: -17.51416778564453
    9. '```' → logprob: -18.01416778564453
    10. '    ' → logprob: -18.51416778564453

Token 85: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.5954712075181305e-05
    2. '[' → logprob: -10.375036239624023
    3. '[pos' → logprob: -12.750036239624023
    4. '\[' → logprob: -13.750036239624023
    5. '```' → logprob: -15.250036239624023
    6. '[v' → logprob: -15.625036239624023
    7. 'prefix' → logprob: -16.500036239624023
    8. '[ip' → logprob: -16.875036239624023
    9. '[parent' → logprob: -17.000036239624023
    10. ' [' → logprob: -17.000036239624023

Token 86: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -0.0006241570226848125
    2. '_sum' → logprob: -8.12562370300293
    3. 'sum' → logprob: -8.87562370300293
    4. 'prefix' → logprob: -9.50062370300293
    5. '[' → logprob: -10.50062370300293
    6. 'ref' → logprob: -10.62562370300293
    7. 'REFIX' → logprob: -10.87562370300293
    8. '_prefix' → logprob: -11.37562370300293
    9. 'ef' → logprob: -11.62562370300293
    10. 'r' → logprob: -12.00062370300293

Token 87: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.688212614681106e-05
    2. 'sum' → logprob: -11.000017166137695
    3. '_' → logprob: -17.500017166137695
    4. '	sum' → logprob: -17.875017166137695
    5. '_s' → logprob: -18.000017166137695
    6. ' sum' → logprob: -18.500017166137695
    7. '```' → logprob: -18.625017166137695
    8. 's' → logprob: -18.875017166137695
    9. '   ' → logprob: -19.375017166137695
    10. '[' → logprob: -19.375017166137695

Token 88: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.21071161329746246
    2. '=i' → logprob: -1.7107115983963013
    3. ']' → logprob: -4.710711479187012
    4. '=' → logprob: -8.460711479187012
    5. '}=' → logprob: -11.210711479187012
    6. ')=' → logprob: -11.460711479187012
    7. ' =' → logprob: -11.710711479187012
    8. '"]=' → logprob: -12.835711479187012
    9. ']=-' → logprob: -12.960711479187012
    10. '']=' → logprob: -13.085711479187012

Token 89: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.088346359931165e-07
    2. ' i' → logprob: -14.000000953674316
    3. '	i' → logprob: -21.375
    4. '   ' → logprob: -23.5
    5. '```' → logprob: -25.375
    6. '_i' → logprob: -26.0
    7. ',i' → logprob: -26.75
    8. ')i' → logprob: -26.875
    9. '  ' → logprob: -27.0
    10. '*i' → logprob: -27.125

Token 90: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00011617878044489771
    2. ' print' → logprob: -9.875116348266602
    3. '
' → logprob: -10.125116348266602
    4. '<|end|>' → logprob: -11.250116348266602
    5. '#print' → logprob: -12.250116348266602
    6. '\n' → logprob: -12.875116348266602
    7. '#' → logprob: -13.625116348266602
    8. '```' → logprob: -13.750116348266602
    9. '(print' → logprob: -13.875116348266602
    10. ')' → logprob: -15.250116348266602

Token 91: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.080963092041202e-06
    2. ' print' → logprob: -12.625004768371582
    3. '#print' → logprob: -14.500004768371582
    4. 'return' → logprob: -15.250004768371582
    5. '(print' → logprob: -15.375004768371582
    6. '<|end|>' → logprob: -15.500004768371582
    7. ')' → logprob: -15.625004768371582
    8. '```' → logprob: -15.750004768371582
    9. '#' → logprob: -16.6250057220459
    10. 'max' → logprob: -16.7500057220459

Token 92: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.023276230320334435
    2. '(' → logprob: -3.7732763290405273
    3. 'max' → logprob: -10.398276329040527
    4. ' (' → logprob: -16.52327537536621
    5. ' max' → logprob: -17.02327537536621
    6. '()' → logprob: -17.39827537536621
    7. '_max' → logprob: -17.39827537536621
    8. '(
' → logprob: -17.64827537536621
    9. '('' → logprob: -18.02327537536621
    10. '(Max' → logprob: -18.52327537536621

Token 93: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: 0.0
    2. 'len' → logprob: -19.0
    3. '_l' → logprob: -19.875
    4. '_LEN' → logprob: -20.375
    5. '_' → logprob: -20.625
    6. ' _' → logprob: -21.125
    7. '_val' → logprob: -21.375
    8. '__' → logprob: -22.25
    9. '_le' → logprob: -23.25
    10. '_pos' → logprob: -23.375

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -16.375
    3. ')
' → logprob: -17.75
    4. ')`' → logprob: -18.125
    5. '))' → logprob: -19.0
    6. '`)' → logprob: -20.375
    7. '）' → logprob: -21.0
    8. ')}' → logprob: -21.125
    9. '),' → logprob: -21.625
    10. '')' → logprob: -21.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 80
Précision stricte (1ère position): 51.09%
Précision adaptée (1ère position): 56.52%
Précision (top 10): 86.96%
================================================================================
