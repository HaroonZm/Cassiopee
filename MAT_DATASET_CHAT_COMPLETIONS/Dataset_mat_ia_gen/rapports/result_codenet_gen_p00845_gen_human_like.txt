================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys

def normalize(v):
    length = math.sqrt(v[0]**2 + v[1]**2 + v[2]**2)
    return (v[0]/length, v[1]/length, v[2]/length)

def angle_between(v1, v2):
    # v1 and v2 are unit vectors
    dot = v1[0]*v2[0] + v1[1]*v2[1] + v1[2]*v2[2]
    # Clamp dot product to avoid floating point errors out of domain
    dot = max(min(dot, 1.0), -1.0)
    return math.acos(dot)

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        n = input_lines[idx].strip()
        idx += 1
        if n == '0':
            break
        n = int(n)
        stars = []
        for _ in range(n):
            sx, sy, sz = map(float, input_lines[idx].strip().split())
            idx += 1
            stars.append(normalize((sx, sy, sz)))
        m = int(input_lines[idx].strip())
        idx += 1
        telescopes = []
        for _ in range(m):
            tx, ty, tz, phi = input_lines[idx].strip().split()
            idx += 1
            t_dir = normalize((float(tx), float(ty), float(tz)))
            phi = float(phi)
            telescopes.append((t_dir, phi))

        visible = set()
        for i, s_dir in enumerate(stars):
            for t_dir, phi in telescopes:
                if angle_between(s_dir, t_dir) < phi:
                    visible.add(i)
                    break
        print(len(visible))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.007841432467103004
    2. '\n' → logprob: -5.75784158706665
    3. '\' → logprob: -6.50784158706665
    4. '<|end|>' → logprob: -6.88284158706665
    5. '```' → logprob: -7.13284158706665
    6. 'import' → logprob: -7.25784158706665
    7. '<|end|>' → logprob: -9.632841110229492
    8. '
' → logprob: -9.882841110229492
    9. '.

' → logprob: -10.007841110229492
    10. '.pi' → logprob: -10.007841110229492

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3945826292037964
    2. ' os' → logprob: -1.1445826292037964
    3. ' numpy' → logprob: -5.644582748413086
    4. ' random' → logprob: -6.519582748413086
    5. 'sys' → logprob: -6.644582748413086
    6. 'os' → logprob: -7.394582748413086
    7. ' re' → logprob: -8.144582748413086
    8. ' ' → logprob: -8.769582748413086
    9. ' statistics' → logprob: -9.019582748413086
    10. ' cm' → logprob: -9.644582748413086

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3678129017353058
    2. 'import' → logprob: -1.9928128719329834
    3. '\' → logprob: -2.4928128719329834
    4. '
' → logprob: -3.6178128719329834
    5. '.' → logprob: -3.9928128719329834
    6. '```' → logprob: -3.9928128719329834
    7. '<|end|>' → logprob: -4.3678131103515625
    8. '

' → logprob: -5.1178131103515625
    9. '<|end|>' → logprob: -6.7428131103515625
    10. 'newline' → logprob: -6.9928131103515625

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7831763029098511
    2. '\' → logprob: -1.783176302909851
    3. '\n' → logprob: -2.0331764221191406
    4. '```' → logprob: -2.2831764221191406
    5. 'def' → logprob: -2.5331764221191406
    6. 'import' → logprob: -3.7831764221191406
    7. '
' → logprob: -4.408176422119141
    8. '#' → logprob: -4.658176422119141
    9. '`' → logprob: -5.783176422119141
    10. ',' → logprob: -5.783176422119141

Token 7: ' normalize' (ID: 44464)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03880825266242027
    2. ' calculate' → logprob: -3.5388083457946777
    3. ' factorial' → logprob: -5.788808345794678
    4. ' space' → logprob: -6.788808345794678
    5. '_' → logprob: -6.913808345794678
    6. ' math' → logprob: -7.038808345794678
    7. ' sqrt' → logprob: -7.288808345794678
    8. ' add' → logprob: -7.788808345794678
    9. ' compute' → logprob: -7.913808345794678
    10. ' ' → logprob: -8.53880786895752

Token 8: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016298050060868263
    2. '_' → logprob: -4.141297817230225
    3. ' (' → logprob: -10.141298294067383
    4. '_token' → logprob: -10.266298294067383
    5. '_user' → logprob: -11.266298294067383
    6. '_string' → logprob: -11.391298294067383
    7. '(value' → logprob: -11.391298294067383
    8. '(data' → logprob: -11.516298294067383
    9. '(user' → logprob: -11.516298294067383
    10. '_text' → logprob: -11.766298294067383

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00959104485809803
    2. '[' → logprob: -5.259591102600098
    3. ')' → logprob: -6.009591102600098
    4. ',' → logprob: -6.634591102600098
    5. '):
' → logprob: -8.009591102600098
    6. ' ):' → logprob: -9.134591102600098
    7. ':' → logprob: -10.134591102600098
    8. '[]):' → logprob: -10.384591102600098
    9. 'ectors' → logprob: -11.509591102600098
    10. '[i' → logprob: -12.009591102600098

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1741621345281601
    2. ':' → logprob: -2.7991621494293213
    3. 'v' → logprob: -3.2991621494293213
    4. '):' → logprob: -4.424161911010742
    5. '(' → logprob: -4.549161911010742
    6. ' :' → logprob: -5.174161911010742
    7. '    ' → logprob: -5.299161911010742
    8. '[' → logprob: -5.299161911010742
    9. ' v' → logprob: -5.424161911010742
    10. 'return' → logprob: -5.674161911010742

Token 11: ' length' (ID: 5517)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6689242720603943
    2. ' return' → logprob: -1.168924331665039
    3. ' if' → logprob: -2.418924331665039
    4. 'return' → logprob: -3.293924331665039
    5. 'v' → logprob: -3.418924331665039
    6. '   ' → logprob: -4.418924331665039
    7. 'if' → logprob: -5.418924331665039
    8. ' ' → logprob: -7.918924331665039
    9. '    ' → logprob: -8.043924331665039
    10. ' norm' → logprob: -8.668924331665039

Token 12: ' =' (ID: 314)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.13809190690517426
    2. '(' → logprob: -2.263091802597046
    3. ' =' → logprob: -4.513092041015625
    4. '=' → logprob: -5.513092041015625
    5. ')' → logprob: -5.763092041015625
    6. ' v' → logprob: -6.513092041015625
    7. '<|end|>' → logprob: -6.513092041015625
    8. ' (' → logprob: -7.388092041015625
    9. 'v' → logprob: -7.763092041015625
    10. ' ' → logprob: -8.013092041015625

Token 13: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0008903791895136237
    2. ' len' → logprob: -7.750890254974365
    3. 'math' → logprob: -7.875890254974365
    4. ' ' → logprob: -9.750890731811523
    5. ' sum' → logprob: -10.875890731811523
    6. 'len' → logprob: -14.125890731811523
    7. '(math' → logprob: -14.375890731811523
    8. '   ' → logprob: -15.125890731811523
    9. ' max' → logprob: -15.125890731811523
    10. ' m' → logprob: -15.250890731811523

Token 14: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.008628051728010178
    2. '.' → logprob: -4.758627891540527
    3. '.Sqrt' → logprob: -12.383627891540527
    4. ' .' → logprob: -12.883627891540527
    5. '.s' → logprob: -13.008627891540527
    6. '.h' → logprob: -13.508627891540527
    7. '.norm' → logprob: -13.508627891540527
    8. '.linalg' → logprob: -14.508627891540527
    9. '.pow' → logprob: -14.758627891540527
    10. '.atan' → logprob: -15.133627891540527

Token 15: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2104286253452301
    2. '(' → logprob: -1.7104285955429077
    3. 'v' → logprob: -5.335428714752197
    4. '(sum' → logprob: -5.710428714752197
    5. 'sum' → logprob: -8.210428237915039
    6. '(x' → logprob: -8.210428237915039
    7. '((' → logprob: -8.960428237915039
    8. '(
' → logprob: -9.710428237915039
    9. ' (' → logprob: -10.460428237915039
    10. '(len' → logprob: -10.585428237915039

Token 16: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0087516784551553e-05
    2. '[i' → logprob: -11.87501049041748
    3. ' ' → logprob: -14.25001049041748
    4. '0' → logprob: -14.37501049041748
    5. ' [' → logprob: -15.12501049041748
    6. '1' → logprob: -15.25001049041748
    7. '(' → logprob: -15.25001049041748
    8. '```' → logprob: -15.62501049041748
    9. '**' → logprob: -16.125009536743164
    10. ')' → logprob: -16.250009536743164

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '])' → logprob: -16.375001907348633
    4. 'i' → logprob: -16.500001907348633
    5. ']' → logprob: -16.625001907348633
    6. 'x' → logprob: -17.625001907348633
    7. '1' → logprob: -18.000001907348633
    8. '   ' → logprob: -18.375001907348633
    9. '**' → logprob: -19.250001907348633
    10. '-' → logprob: -19.250001907348633

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05888388678431511
    2. '**' → logprob: -2.9338839054107666
    3. ' **' → logprob: -6.1838836669921875
    4. ' ]' → logprob: -6.4338836669921875
    5. ']*' → logprob: -8.808883666992188
    6. ' *' → logprob: -9.808883666992188
    7. '*' → logprob: -9.808883666992188
    8. '*v' → logprob: -10.808883666992188
    9. '']' → logprob: -10.933883666992188
    10. '```' → logprob: -11.558883666992188

Token 19: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.010682155378162861
    2. '*v' → logprob: -5.010682106018066
    3. '*' → logprob: -6.135682106018066
    4. ' **' → logprob: -6.385682106018066
    5. ' *' → logprob: -9.135682106018066
    6. 'v' → logprob: -14.385682106018066
    7. '```' → logprob: -15.885682106018066
    8. ']' → logprob: -15.885682106018066
    9. ')**' → logprob: -16.385683059692383
    10. '***' → logprob: -16.385683059692383

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.500204086303711
    4. '```' → logprob: -15.625204086303711
    5. '   ' → logprob: -15.875204086303711
    6. '  ' → logprob: -16.31270408630371
    7. '²' → logprob: -16.56270408630371
    8. '۲' → logprob: -17.06270408630371
    9. '**' → logprob: -17.25020408630371
    10. '

' → logprob: -17.37520408630371

Token 21: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20142436027526855
    2. '+' → logprob: -1.7014243602752686
    3. ' ' → logprob: -12.201424598693848
    4. '   ' → logprob: -13.451424598693848
    5. ')' → logprob: -13.951424598693848
    6. ',' → logprob: -14.326424598693848
    7. '0' → logprob: -14.951424598693848
    8. ' +
' → logprob: -15.076424598693848
    9. '  ' → logprob: -15.076424598693848
    10. ' plus' → logprob: -15.451424598693848

Token 22: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.313263863325119
    2. 'v' → logprob: -1.3132638931274414
    3. '	v' → logprob: -13.688263893127441
    4. ' ' → logprob: -14.188263893127441
    5. ')v' → logprob: -16.188262939453125
    6. '   ' → logprob: -16.313262939453125
    7. '  ' → logprob: -16.438262939453125
    8. ' ' → logprob: -17.188262939453125
    9. '    ' → logprob: -18.563262939453125
    10. '<|end|>' → logprob: -19.188262939453125

Token 23: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.735893965815194e-05
    2. ' [' → logprob: -11.500017166137695
    3. '1' → logprob: -12.000017166137695
    4. '```' → logprob: -15.125017166137695
    5. '[
' → logprob: -15.500017166137695
    6. '
' → logprob: -16.375017166137695
    7. '{' → logprob: -16.500017166137695
    8. '.' → logprob: -16.625017166137695
    9. ' ' → logprob: -16.875017166137695
    10. ',' → logprob: -16.937517166137695

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.875001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '```' → logprob: -15.125001907348633
    5. '0' → logprob: -16.312501907348633
    6. '   ' → logprob: -16.875001907348633
    7. '2' → logprob: -17.125001907348633
    8. '`' → logprob: -17.187501907348633
    9. '
' → logprob: -17.875001907348633
    10. '``' → logprob: -18.062501907348633

Token 25: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.729906196298543e-06
    2. '**' → logprob: -12.375009536743164
    3. ' ]' → logprob: -12.750009536743164
    4. '[' → logprob: -13.375009536743164
    5. '']' → logprob: -15.375009536743164
    6. '][' → logprob: -15.750009536743164
    7. '}' → logprob: -16.000009536743164
    8. '"]' → logprob: -16.125009536743164
    9. '0' → logprob: -16.250009536743164
    10. ']*' → logprob: -16.250009536743164

Token 26: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.1994775377388578e-05
    2. ']' → logprob: -12.125012397766113
    3. ')**' → logprob: -12.750012397766113
    4. '2' → logprob: -13.500012397766113
    5. '**)' → logprob: -13.875012397766113
    6. ' **' → logprob: -14.250012397766113
    7. '*' → logprob: -16.000011444091797
    8. ' ' → logprob: -16.125011444091797
    9. '[' → logprob: -16.125011444091797
    10. ')' → logprob: -16.250011444091797

Token 27: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001137947037932463
    2. ' ' → logprob: -9.125113487243652
    3. '**' → logprob: -13.562613487243652
    4. '22' → logprob: -14.000113487243652
    5. '```' → logprob: -14.375113487243652
    6. '1' → logprob: -15.000113487243652
    7. '۲' → logprob: -15.937613487243652
    8. '   ' → logprob: -16.00011444091797
    9. '²' → logprob: -16.06261444091797
    10. '21' → logprob: -16.06261444091797

Token 28: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02344660460948944
    2. '+' → logprob: -4.523446559906006
    3. ' +' → logprob: -5.023446559906006
    4. ' )' → logprob: -5.523446559906006
    5. '))' → logprob: -6.648446559906006
    6. ')**' → logprob: -8.898447036743164
    7. '+)' → logprob: -9.148447036743164
    8. '   ' → logprob: -9.648447036743164
    9. ')+' → logprob: -10.023447036743164
    10. ')))' → logprob: -10.523447036743164

Token 29: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6931476593017578
    2. ' v' → logprob: -0.6931476593017578
    3. '	v' → logprob: -14.943147659301758
    4. ' ' → logprob: -16.068147659301758
    5. ')v' → logprob: -18.568147659301758
    6. ' ' → logprob: -19.068147659301758
    7. '  ' → logprob: -19.943147659301758
    8. '_v' → logprob: -20.443147659301758
    9. '   ' → logprob: -20.568147659301758
    10. ')' → logprob: -20.568147659301758

Token 30: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -15.500000953674316
    3. '```' → logprob: -15.750000953674316
    4. '2' → logprob: -16.0
    5. '   ' → logprob: -16.375
    6. '**' → logprob: -16.5
    7. '\[' → logprob: -17.375
    8. '[
' → logprob: -17.75
    9. ' ' → logprob: -17.75
    10. '0' → logprob: -18.5

Token 31: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -15.250000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '```' → logprob: -15.875000953674316
    5. '-' → logprob: -16.000001907348633
    6. '0' → logprob: -16.375001907348633
    7. '[' → logprob: -16.937501907348633
    8. '
' → logprob: -16.937501907348633
    9. '``' → logprob: -17.187501907348633
    10. '  ' → logprob: -17.250001907348633

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002517873188480735
    2. '**' → logprob: -6.0025177001953125
    3. ' ]' → logprob: -10.252517700195312
    4. '']' → logprob: -13.502517700195312
    5. ' ' → logprob: -13.627517700195312
    6. '])' → logprob: -13.752517700195312
    7. ')**' → logprob: -13.752517700195312
    8. '2' → logprob: -14.752517700195312
    9. '"]' → logprob: -14.752517700195312
    10. '```' → logprob: -15.127517700195312

Token 33: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0007829454843886197
    2. '2' → logprob: -7.2507829666137695
    3. ' **' → logprob: -10.25078296661377
    4. ')**' → logprob: -10.87578296661377
    5. '**)' → logprob: -11.75078296661377
    6. ' ' → logprob: -12.62578296661377
    7. ']' → logprob: -12.87578296661377
    8. ')' → logprob: -12.87578296661377
    9. '```' → logprob: -14.00078296661377
    10. '*' → logprob: -14.12578296661377

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '```' → logprob: -14.750008583068848
    4. ')' → logprob: -15.000008583068848
    5. '**' → logprob: -16.00000762939453
    6. '   ' → logprob: -17.31250762939453
    7. '1' → logprob: -17.37500762939453
    8. '۲' → logprob: -17.62500762939453
    9. '²' → logprob: -18.06250762939453
    10. ' )' → logprob: -18.25000762939453

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7146746763028204e-05
    2. ')
' → logprob: -10.87503719329834
    3. '   ' → logprob: -11.50003719329834
    4. ')return' → logprob: -12.62503719329834
    5. ' )' → logprob: -13.00003719329834
    6. ')v' → logprob: -13.75003719329834
    7. '))' → logprob: -14.87503719329834
    8. 'v' → logprob: -15.62503719329834
    9. ')#' → logprob: -16.125036239624023
    10. 'if' → logprob: -16.125036239624023

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005113034043461084
    2. ' if' → logprob: -5.630113124847412
    3. '    
' → logprob: -6.755113124847412
    4. '```' → logprob: -9.130112648010254
    5. ' return' → logprob: -10.130112648010254
    6. ')' → logprob: -10.130112648010254
    7. 'if' → logprob: -10.505112648010254
    8. '
' → logprob: -10.880112648010254
    9. 'return' → logprob: -11.005112648010254
    10. '    ' → logprob: -11.005112648010254

Token 37: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009328414686024189
    2. ' if' → logprob: -5.009328365325928
    3. 'return' (adapté à ' return') → logprob: -6.884328365325928
    4. ' return' → logprob: -7.259328365325928
    5. '    
' → logprob: -7.884328365325928
    6. '```' → logprob: -8.634328842163086
    7. 'if' → logprob: -8.759328842163086
    8. '
' → logprob: -9.759328842163086
    9. '    ' → logprob: -10.509328842163086
    10. ')' → logprob: -10.884328842163086

Token 38: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.17221103608608246
    2. ' (' → logprob: -2.047210931777954
    3. '[v' → logprob: -3.922210931777954
    4. ' [' → logprob: -5.172211170196533
    5. '(' → logprob: -6.297211170196533
    6. '[' → logprob: -6.672211170196533
    7. ' v' → logprob: -7.922211170196533
    8. 'v' → logprob: -8.922210693359375
    9. '   ' → logprob: -11.297210693359375
    10. '(
' → logprob: -12.172210693359375

Token 39: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0013265528250485659
    2. ' v' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.126326560974121
    4. '(v' → logprob: -16.001325607299805
    5. ')v' → logprob: -16.376325607299805
    6. '	v' → logprob: -16.876325607299805
    7. '```' → logprob: -17.876325607299805
    8. '0' → logprob: -17.876325607299805
    9. ')' → logprob: -18.251325607299805
    10. '?v' → logprob: -19.001325607299805

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3080716346157715e-05
    2. ' /' → logprob: -11.500022888183594
    3. '/' → logprob: -12.375022888183594
    4. '0' → logprob: -12.500022888183594
    5. ')' → logprob: -12.875022888183594
    6. ' [' → logprob: -13.250022888183594
    7. ' )' → logprob: -14.875022888183594
    8. ' ' → logprob: -16.000022888183594
    9. '1' → logprob: -17.375022888183594
    10. ')[' → logprob: -17.875022888183594

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '
' → logprob: -17.6875
    4. '۰' → logprob: -17.75
    5. '[' → logprob: -18.3125
    6. '1' → logprob: -18.375
    7. '   ' → logprob: -18.4375
    8. '```' → logprob: -18.5
    9. '０' → logprob: -18.6875
    10. '2' → logprob: -18.8125

Token 42: ']/' (ID: 18500)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1270247995853424
    2. '/' → logprob: -2.1270248889923096
    3. ' )' → logprob: -9.87702465057373
    4. ')' → logprob: -10.25202465057373
    5. ' ' → logprob: -11.87702465057373
    6. ')/' → logprob: -13.75202465057373
    7. ',' → logprob: -14.87702465057373
    8. ' ' → logprob: -15.37702465057373
    9. ' ]' → logprob: -15.50202465057373
    10. '   ' → logprob: -15.50202465057373

Token 43: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.001170460251159966
    2. ' length' → logprob: -6.751170635223389
    3. 'leng' → logprob: -15.12617015838623
    4. '(length' → logprob: -17.001171112060547
    5. 'l' → logprob: -17.251171112060547
    6. ' ' → logprob: -18.751171112060547
    7. '	length' → logprob: -18.876171112060547
    8. 'max' → logprob: -19.251171112060547
    9. 'ength' → logprob: -19.376171112060547
    10. 'len' → logprob: -20.876171112060547

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.615255839889869e-05
    2. ' ,' → logprob: -9.500096321105957
    3. ',v' → logprob: -11.000096321105957
    4. ')' → logprob: -13.125096321105957
    5. ',
' → logprob: -13.250096321105957
    6. '),' → logprob: -15.125096321105957
    7. '   ' → logprob: -16.12509536743164
    8. '',' → logprob: -16.25009536743164
    9. '`,' → logprob: -16.50009536743164
    10. ',

' → logprob: -16.62509536743164

Token 45: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.28190159797668457
    2. 'v' → logprob: -1.4069015979766846
    3. ' ' → logprob: -7.2819013595581055
    4. ' ' → logprob: -10.031901359558105
    5. ')v' → logprob: -11.906901359558105
    6. '	v' → logprob: -12.656901359558105
    7. ')' → logprob: -12.781901359558105
    8. 'space' → logprob: -13.781901359558105
    9. '<|end|>' → logprob: -13.781901359558105
    10. ' )' → logprob: -14.156901359558105

Token 46: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '[
' → logprob: -16.125
    3. ')' → logprob: -16.375
    4. '<|end|>' → logprob: -17.5
    5. '```' → logprob: -17.5
    6. '0' → logprob: -18.125
    7. ']' → logprob: -18.25
    8. ' [' → logprob: -18.875
    9. '1' → logprob: -19.125
    10. ')[' → logprob: -19.125

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. '0' → logprob: -11.375014305114746
    3. ' ' → logprob: -12.750014305114746
    4. '   ' → logprob: -16.250015258789062
    5. '2' → logprob: -16.875015258789062
    6. '```' → logprob: -17.625015258789062
    7. '  ' → logprob: -18.000015258789062
    8. '１' → logprob: -18.625015258789062
    9. '[' → logprob: -19.000015258789062
    10. '۱' → logprob: -19.187515258789062

Token 48: ']/' (ID: 18500)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00038038729690015316
    2. ')/' → logprob: -8.000380516052246
    3. ']/' → logprob: -10.625380516052246
    4. ' /' → logprob: -11.000380516052246
    5. ')' → logprob: -13.375380516052246
    6. '}/' → logprob: -14.250380516052246
    7. '<|end|>' → logprob: -14.875380516052246
    8. '[length' → logprob: -15.000380516052246
    9. '/)' → logprob: -15.250380516052246
    10. '']/' → logprob: -16.25037956237793

Token 49: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.339278580620885e-06
    2. ' length' → logprob: -13.000001907348633
    3. 'leng' → logprob: -18.000001907348633
    4. 'l' → logprob: -20.375001907348633
    5. '(length' → logprob: -21.750001907348633
    6. 'ength' → logprob: -22.000001907348633
    7. 'len' → logprob: -22.875001907348633
    8. '	length' → logprob: -22.875001907348633
    9. '-length' → logprob: -23.375001907348633
    10. ' ' → logprob: -23.500001907348633

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020509003661572933
    2. ' ,' → logprob: -8.875205039978027
    3. ',v' → logprob: -9.750205039978027
    4. ')' → logprob: -12.000205039978027
    5. '   ' → logprob: -14.875205039978027
    6. ',
' → logprob: -16.125205993652344
    7. '),' → logprob: -16.250205993652344
    8. '/' → logprob: -16.625205993652344
    9. 'v' → logprob: -17.500205993652344
    10. ' ' → logprob: -17.750205993652344

Token 51: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3868718445301056
    2. 'v' → logprob: -1.1368718147277832
    3. ')v' → logprob: -14.761872291564941
    4. '	v' → logprob: -15.386872291564941
    5. ' ' → logprob: -16.511871337890625
    6. ')' → logprob: -16.511871337890625
    7. ' ' → logprob: -17.261871337890625
    8. '(v' → logprob: -18.136871337890625
    9. '```' → logprob: -18.511871337890625
    10. '0' → logprob: -18.636871337890625

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.25
    3. '0' → logprob: -17.375
    4. '/' → logprob: -17.875
    5. '[
' → logprob: -18.375
    6. '3' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '.' → logprob: -20.125
    9. ')[' → logprob: -20.25
    10. '][' → logprob: -20.625

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '２' → logprob: -19.375
    4. '```' → logprob: -19.375
    5. '۲' → logprob: -19.375
    6. '   ' → logprob: -20.125
    7. '-' → logprob: -20.375
    8. '  ' → logprob: -21.5
    9. '	' → logprob: -21.5
    10. '[' → logprob: -21.625

Token 54: ']/' (ID: 18500)
  Prédit: ']/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']/' → logprob: -0.007239687256515026
    2. ']' → logprob: -5.507239818572998
    3. '/' → logprob: -6.132239818572998
    4. ')/' → logprob: -7.132239818572998
    5. '])' → logprob: -9.13223934173584
    6. '])/' → logprob: -9.88223934173584
    7. '/]' → logprob: -11.25723934173584
    8. ')' → logprob: -12.38223934173584
    9. '']/' → logprob: -13.00723934173584
    10. '"]/' → logprob: -13.13223934173584

Token 55: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -7.107425062713446e-06
    2. ' length' → logprob: -11.875006675720215
    3. 'leng' → logprob: -16.37500762939453
    4. 'l' → logprob: -19.50000762939453
    5. 'ength' → logprob: -19.87500762939453
    6. ')' → logprob: -20.00000762939453
    7. '-length' → logprob: -20.25000762939453
    8. '	length' → logprob: -20.37500762939453
    9. '(length' → logprob: -20.62500762939453
    10. '_length' → logprob: -20.75000762939453

Token 56: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.125
    3. ')
' → logprob: -16.875
    4. '}' → logprob: -17.625
    5. ')`' → logprob: -19.375
    6. ')#' → logprob: -19.5
    7. '   ' → logprob: -19.75
    8. '),' → logprob: -20.0
    9. ')return' → logprob: -20.0
    10. ')}' → logprob: -20.25

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013823549263179302
    2. '#' → logprob: -4.513823509216309
    3. '```' → logprob: -7.388823509216309
    4. '<|end|>' → logprob: -7.638823509216309
    5. '\' → logprob: -8.138823509216309
    6. ' 
' → logprob: -8.638823509216309
    7. '  
' → logprob: -8.763823509216309
    8. '(' → logprob: -9.263823509216309
    9. 'n' → logprob: -9.263823509216309
    10. 'd' → logprob: -9.388823509216309

Token 58: ' angle' (ID: 16538)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.43726223707199097
    2. ' calculate' → logprob: -2.1872622966766357
    3. ' dot' → logprob: -2.4372622966766357
    4. ' main' → logprob: -2.6872622966766357
    5. ' vector' → logprob: -3.4372622966766357
    6. ' compute' → logprob: -3.6872622966766357
    7. ' add' → logprob: -4.562262058258057
    8. ' multiply' → logprob: -4.562262058258057
    9. ' ' → logprob: -5.937262058258057
    10. ' normalize' → logprob: -7.312262058258057

Token 59: '_between' (ID: 124874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5777822732925415
    2. '_between' → logprob: -0.8277822732925415
    3. '(v' → logprob: -7.077782154083252
    4. '_' → logprob: -8.32778263092041
    5. '(a' → logprob: -8.45278263092041
    6. '_vector' → logprob: -9.20278263092041
    7. '_to' → logprob: -9.32778263092041
    8. 'Between' → logprob: -9.95278263092041
    9. 'between' → logprob: -10.32778263092041
    10. ' between' → logprob: -10.32778263092041

Token 60: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.15431632101535797
    2. '(' → logprob: -2.0293164253234863
    3. '(u' → logprob: -4.904316425323486
    4. '(a' → logprob: -6.154316425323486
    5. '_vectors' → logprob: -6.404316425323486
    6. '(vec' → logprob: -9.154315948486328
    7. 'Vectors' → logprob: -10.029315948486328
    8. '(vector' → logprob: -10.029315948486328
    9. 'vectors' → logprob: -10.029315948486328
    10. ' vectors' → logprob: -10.154315948486328

Token 61: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.611212968826294
    2. '(' → logprob: -1.111212968826294
    3. ',' → logprob: -2.986212968826294
    4. '1' → logprob: -3.111212968826294
    5. 's' → logprob: -4.236212730407715
    6. 'a' → logprob: -4.736212730407715
    7. '):' → logprob: -5.111212730407715
    8. '(a' → logprob: -6.236212730407715
    9. '_' → logprob: -7.361212730407715
    10. '[' → logprob: -8.236212730407715

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000493937055580318
    2. ',v' → logprob: -7.625494003295898
    3. ' ,' → logprob: -12.250494003295898
    4. '):' → logprob: -14.500494003295898
    5. ')' → logprob: -15.000494003295898
    6. '<|end|>' → logprob: -16.8754940032959
    7. '‌,' → logprob: -16.8754940032959
    8. ',
' → logprob: -17.1254940032959
    9. ',

' → logprob: -17.2504940032959
    10. 'v' → logprob: -18.0004940032959

Token 63: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06198393553495407
    2. 'v' → logprob: -2.811983823776245
    3. ')' → logprob: -11.436984062194824
    4. ' ' → logprob: -13.186984062194824
    5. ' )' → logprob: -13.686984062194824
    6. ')v' → logprob: -14.061984062194824
    7. '	v' → logprob: -14.436984062194824
    8. ' ' → logprob: -14.686984062194824
    9. '<|end|>' → logprob: -14.811984062194824
    10. ',v' → logprob: -16.436983108520508

Token 64: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007658569607883692
    2. '[' → logprob: -6.0076584815979
    3. '2' → logprob: -6.1326584815979
    4. 'ectors' → logprob: -6.5076584815979
    5. ',' → logprob: -7.2576584815979
    6. 'ector' → logprob: -7.7576584815979
    7. ')' → logprob: -8.382658958435059
    8. 'ect' → logprob: -9.632658958435059
    9. 'ec' → logprob: -10.507658958435059
    10. '):' → logprob: -11.882658958435059

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016241880075540394
    2. ')' → logprob: -8.875162124633789
    3. '):
' → logprob: -11.500162124633789
    4. ' ):' → logprob: -11.625162124633789
    5. ':' → logprob: -13.000162124633789
    6. '   ' → logprob: -14.375162124633789
    7. '():' → logprob: -16.50016212463379
    8. ' ' → logprob: -16.75016212463379
    9. '):
' → logprob: -16.75016212463379
    10. ')):' → logprob: -16.75016212463379

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002871207892894745
    2. '    ' → logprob: -6.627871036529541
    3. ' import' → logprob: -6.877871036529541
    4. 'import' → logprob: -8.2528715133667
    5. ' acos' → logprob: -9.1278715133667
    6. '    
' → logprob: -10.7528715133667
    7. ' v' → logprob: -10.7528715133667
    8. ' dot' → logprob: -10.7528715133667
    9. '   ' → logprob: -11.5028715133667
    10. ' (' → logprob: -11.8778715133667

Token 67: ' #' (ID: 1069)
  Prédit: ' dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.3670993149280548
    2. 'dot' → logprob: -1.2420992851257324
    3. '   ' → logprob: -4.617099285125732
    4. 'cos' → logprob: -5.742099285125732
    5. ' v' → logprob: -5.867099285125732
    6. 'v' → logprob: -6.742099285125732
    7. 'import' → logprob: -7.617099285125732
    8. ' cos' → logprob: -7.867099285125732
    9. ' import' → logprob: -8.36709976196289
    10. ' ' → logprob: -9.24209976196289

Token 68: ' v' (ID: 323)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.11841414123773575
    2. ' dot' → logprob: -2.2434141635894775
    3. 'cos' → logprob: -5.993413925170898
    4. 'v' → logprob: -6.743413925170898
    5. 'length' → logprob: -7.243413925170898
    6. '   ' → logprob: -7.618413925170898
    7. 'import' → logprob: -8.368413925170898
    8. ' v' → logprob: -9.243413925170898
    9. 'norm' → logprob: -9.243413925170898
    10. '#' → logprob: -10.118413925170898

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020652047533076257
    2. '   ' → logprob: -9.00020694732666
    3. 'ector' → logprob: -10.87520694732666
    4. 'dot' → logprob: -11.25020694732666
    5. '_dot' → logprob: -11.25020694732666
    6. ' dot' → logprob: -11.50020694732666
    7. ' ' → logprob: -11.87520694732666
    8. '"""' → logprob: -13.12520694732666
    9. '```' → logprob: -13.25020694732666
    10. '  ' → logprob: -13.37520694732666

Token 70: ' and' (ID: 326)
  Prédit: '_dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dot' → logprob: -0.6430066823959351
    2. ' =' → logprob: -1.768006682395935
    3. '.' → logprob: -2.2680068016052246
    4. '=' → logprob: -2.3930068016052246
    5. '_normal' → logprob: -3.2680068016052246
    6. '_norm' → logprob: -3.5180068016052246
    7. 'dot' → logprob: -4.143006801605225
    8. 'v' → logprob: -4.518006801605225
    9. '_v' → logprob: -5.143006801605225
    10. '_' → logprob: -6.518006801605225

Token 71: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.42934200167655945
    2. 'v' → logprob: -1.0543420314788818
    3. '   ' → logprob: -7.679341793060303
    4. 'normalized' → logprob: -9.929342269897461
    5. '```' → logprob: -10.929342269897461
    6. ' normalized' → logprob: -11.179342269897461
    7. ')' → logprob: -11.554342269897461
    8. 'def' → logprob: -11.679342269897461
    9. '	v' → logprob: -12.054342269897461
    10. ',' → logprob: -12.304342269897461

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -12.250008583068848
    3. ' v' → logprob: -13.500008583068848
    4. '   ' → logprob: -13.875008583068848
    5. '  ' → logprob: -15.250008583068848
    6. 'ectors' → logprob: -15.250008583068848
    7. '[' → logprob: -15.750008583068848
    8. 'v' → logprob: -15.875008583068848
    9. '_' → logprob: -16.12500762939453
    10. ' are' → logprob: -16.87500762939453

Token 73: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.02614353597164154
    2. ' normalized' → logprob: -4.651143550872803
    3. '=' → logprob: -4.776143550872803
    4. ' =' → logprob: -5.901143550872803
    5. ':' → logprob: -6.651143550872803
    6. 'are' → logprob: -6.776143550872803
    7. ' have' → logprob: -7.276143550872803
    8. ')' → logprob: -7.276143550872803
    9. 'normalized' → logprob: -7.526143550872803
    10. ' must' → logprob: -8.526143074035645

Token 74: ' unit' (ID: 7670)
  Prédit: ' normalized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' normalized' → logprob: -0.12028831243515015
    2. 'normalized' → logprob: -2.245288372039795
    3. ' tuples' → logprob: -5.995288372039795
    4. ' both' → logprob: -6.495288372039795
    5. ' normalize' → logprob: -6.620288372039795
    6. 'normalize' → logprob: -6.995288372039795
    7. ' vectors' → logprob: -7.495288372039795
    8. ' normal' → logprob: -8.370287895202637
    9. 'both' → logprob: -9.245287895202637
    10. '   ' → logprob: -9.745287895202637

Token 75: ' vectors' (ID: 52254)
  Prédit: ' vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vectors' → logprob: -0.38343361020088196
    2. '_' → logprob: -1.5084335803985596
    3. '_vectors' → logprob: -2.7584335803985596
    4. 'vectors' → logprob: -4.508433818817139
    5. ' ' → logprob: -5.008433818817139
    6. ' _' → logprob: -5.133433818817139
    7. 's' → logprob: -5.508433818817139
    8. '_s' → logprob: -6.383433818817139
    9. ',' → logprob: -7.008433818817139
    10. ')' → logprob: -7.133433818817139

Token 76: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11656291037797928
    2. ':' → logprob: -2.741562843322754
    3. ')' → logprob: -4.491562843322754
    4. '
' → logprob: -4.616562843322754
    5. ',' → logprob: -4.866562843322754
    6. '):' → logprob: -4.991562843322754
    7. '<|end|>' → logprob: -5.366562843322754
    8. '    
' → logprob: -5.741562843322754
    9. '<|end|>' → logprob: -7.241562843322754
    10. '):
' → logprob: -7.991562843322754

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02014578878879547
    2. ')' → logprob: -4.020145893096924
    3. ':' → logprob: -7.145145893096924
    4. ',' → logprob: -7.520145893096924
    5. '    
' → logprob: -7.895145893096924
    6. '):' → logprob: -9.270145416259766
    7. '
' → logprob: -9.770145416259766
    8. '<|end|>' → logprob: -10.520145416259766
    9. '):
' → logprob: -10.770145416259766
    10. '    ' → logprob: -10.895145416259766

Token 78: ' dot' (ID: 16579)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04861370474100113
    2. 'dot' (adapté à ' dot') → logprob: -3.4236137866973877
    3. 'cos' → logprob: -4.923613548278809
    4. ' dot' → logprob: -5.173613548278809
    5. 'return' → logprob: -7.798613548278809
    6. 'import' → logprob: -8.173613548278809
    7. 'acos' → logprob: -9.048613548278809
    8. ' cos' → logprob: -9.048613548278809
    9. ' acos' → logprob: -9.173613548278809
    10. '    ' → logprob: -9.298613548278809

Token 79: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04591049998998642
    2. ' ' → logprob: -4.295910358428955
    3. '(' → logprob: -4.420910358428955
    4. ' _' → logprob: -4.670910358428955
    5. '_product' → logprob: -6.045910358428955
    6. '<|end|>' → logprob: -6.170910358428955
    7. '<|end|>' → logprob: -6.295910358428955
    8. ')' → logprob: -6.420910358428955
    9. '   ' → logprob: -7.420910358428955
    10. '    ' → logprob: -8.670910835266113

Token 80: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.34876546263694763
    2. ' v' → logprob: -1.22376549243927
    3. 'sum' → logprob: -9.09876537322998
    4. 'max' → logprob: -9.59876537322998
    5. ' sum' → logprob: -9.59876537322998
    6. ' max' → logprob: -10.22376537322998
    7. ' ' → logprob: -10.97376537322998
    8. '	v' → logprob: -12.09876537322998
    9. '  ' → logprob: -12.59876537322998
    10. ' math' → logprob: -12.72376537322998

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018441740423440933
    2. '[' → logprob: -4.018441677093506
    3. ' ' → logprob: -9.643442153930664
    4. '```' → logprob: -9.768442153930664
    5. '[
' → logprob: -10.143442153930664
    6. '(' → logprob: -10.268442153930664
    7. '_' → logprob: -11.018442153930664
    8. '.' → logprob: -11.393442153930664
    9. ')' → logprob: -11.518442153930664
    10. '   ' → logprob: -11.580942153930664

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001858982432167977
    2. '.' → logprob: -8.6251859664917
    3. ' [' → logprob: -12.7501859664917
    4. ' ' → logprob: -13.8751859664917
    5. '<|end|>' → logprob: -14.2501859664917
    6. '0' → logprob: -14.7501859664917
    7. ',' → logprob: -15.1251859664917
    8. '(' → logprob: -15.1251859664917
    9. '1' → logprob: -15.5001859664917
    10. ')' → logprob: -15.6251859664917

Token 83: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. ']' → logprob: -19.25
    4. '۰' → logprob: -19.75
    5. '[' → logprob: -19.875
    6. '   ' → logprob: -20.3125
    7. '1' → logprob: -20.375
    8. '  ' → logprob: -20.75
    9. '０' → logprob: -21.0625
    10. '

' → logprob: -21.875

Token 84: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06298196315765381
    2. ' *' → logprob: -2.8129820823669434
    3. '*v' → logprob: -6.937982082366943
    4. ']' → logprob: -10.812981605529785
    5. ']*' → logprob: -11.687981605529785
    6. ')' → logprob: -12.187981605529785
    7. '**' → logprob: -12.312981605529785
    8. ' ' → logprob: -13.312981605529785
    9. '*)' → logprob: -14.062981605529785
    10. '*object' → logprob: -14.437981605529785

Token 85: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5048530030981055e-06
    2. ' v' → logprob: -13.500001907348633
    3. '	v' → logprob: -20.750001907348633
    4. ')v' → logprob: -21.625001907348633
    5. '*v' → logprob: -22.625001907348633
    6. 'vq' → logprob: -22.750001907348633
    7. '<|end|>' → logprob: -23.125001907348633
    8. '```' → logprob: -23.625001907348633
    9. 'vj' → logprob: -23.625001907348633
    10. '$v' → logprob: -24.000001907348633

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07904874533414841
    2. '1' → logprob: -2.5790486335754395
    3. '[' → logprob: -8.954049110412598
    4. '```' → logprob: -11.579049110412598
    5. '3' → logprob: -12.704049110412598
    6. 'x' → logprob: -13.079049110412598
    7. '7' → logprob: -13.079049110412598
    8. ' ' → logprob: -13.641549110412598
    9. 'l' → logprob: -13.641549110412598
    10. '.' → logprob: -13.891549110412598

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.9040898880339228e-05
    2. '[
' → logprob: -11.500028610229492
    3. '<|end|>' → logprob: -11.500028610229492
    4. '```' → logprob: -12.250028610229492
    5. '0' → logprob: -12.750028610229492
    6. ' [' → logprob: -15.625028610229492
    7. '\[' → logprob: -15.625028610229492
    8. '][' → logprob: -15.875028610229492
    9. ' ' → logprob: -16.125028610229492
    10. ']' → logprob: -16.250028610229492

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -19.375
    4. '```' → logprob: -19.75
    5. '  ' → logprob: -20.375
    6. '[' → logprob: -20.375
    7. '۰' → logprob: -20.5
    8. '   ' → logprob: -20.8125
    9. ']' → logprob: -21.375
    10. '2' → logprob: -22.0

Token 89: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47409534454345703
    2. ' +' → logprob: -0.974095344543457
    3. ' ' → logprob: -11.599095344543457
    4. ')' → logprob: -12.474095344543457
    5. ' +
' → logprob: -12.724095344543457
    6. '<|end|>' → logprob: -13.974095344543457
    7. '+
' → logprob: -15.224095344543457
    8. ')+' → logprob: -15.474095344543457
    9. '+)' → logprob: -15.474095344543457
    10. ' +

' → logprob: -15.724095344543457

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326815485954285
    2. ' +' → logprob: -1.3132681846618652
    3. ' +
' → logprob: -12.813267707824707
    4. ' ' → logprob: -12.813267707824707
    5. '<|end|>' → logprob: -15.063267707824707
    6. '+
' → logprob: -15.563267707824707
    7. ' +

' → logprob: -16.188268661499023
    8. '-' → logprob: -16.438268661499023
    9. ' plus' → logprob: -16.563268661499023
    10. ')' → logprob: -16.563268661499023

Token 91: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.31334343552589417
    2. 'v' → logprob: -1.3133434057235718
    3. '<|end|>' → logprob: -10.063343048095703
    4. ' ' → logprob: -10.688343048095703
    5. '	v' → logprob: -11.313343048095703
    6. ' ' → logprob: -13.188343048095703
    7. ' ‌' → logprob: -14.688343048095703
    8. ')v' → logprob: -15.063343048095703
    9. '?v' → logprob: -15.188343048095703
    10. ' 
' → logprob: -15.438343048095703

Token 92: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.089198999106884
    2. '1' → logprob: -2.4641990661621094
    3. '[
' → logprob: -8.71419906616211
    4. '<|end|>' → logprob: -9.46419906616211
    5. '```' → logprob: -12.08919906616211
    6. ' ' → logprob: -12.71419906616211
    7. '<|end|>' → logprob: -13.33919906616211
    8. 'user' → logprob: -13.83919906616211
    9. ' [' → logprob: -14.21419906616211
    10. ']' → logprob: -14.71419906616211

Token 93: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2855416066013277e-05
    2. '[
' → logprob: -10.875032424926758
    3. '<|end|>' → logprob: -11.375032424926758
    4. '```' → logprob: -14.250032424926758
    5. '*' → logprob: -14.500032424926758
    6. '1' → logprob: -15.125032424926758
    7. ' [' → logprob: -15.625032424926758
    8. ' ' → logprob: -15.750032424926758
    9. '<|end|>' → logprob: -16.000032424926758
    10. '*[' → logprob: -16.250032424926758

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8921695047756657e-05
    2. ' ' → logprob: -10.500028610229492
    3. '0' → logprob: -14.250028610229492
    4. '```' → logprob: -14.750028610229492
    5. '   ' → logprob: -16.000028610229492
    6. '2' → logprob: -16.750028610229492
    7. '  ' → logprob: -17.125028610229492
    8. ']' → logprob: -17.750028610229492
    9. '-' → logprob: -17.750028610229492
    10. '
' → logprob: -17.875028610229492

Token 95: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0034499219618737698
    2. ']*' → logprob: -5.7534499168396
    3. '*v' → logprob: -8.503450393676758
    4. '[' → logprob: -10.503450393676758
    5. ']' → logprob: -11.378450393676758
    6. ')*' → logprob: -11.503450393676758
    7. '*[' → logprob: -11.753450393676758
    8. '**' → logprob: -12.878450393676758
    9. ''*' → logprob: -13.128450393676758
    10. '```' → logprob: -13.253450393676758

Token 96: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.661626634420827e-05
    2. ' v' → logprob: -9.375086784362793
    3. '<|end|>' → logprob: -13.375086784362793
    4. '2' → logprob: -15.750086784362793
    5. ' ' → logprob: -17.000085830688477
    6. ')v' → logprob: -17.250085830688477
    7. '	v' → logprob: -17.625085830688477
    8. '1' → logprob: -18.375085830688477
    9. '?v' → logprob: -18.750085830688477
    10. '0' → logprob: -19.250085830688477

Token 97: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3136134445667267
    2. '1' → logprob: -1.3136134147644043
    3. '.' → logprob: -8.313613891601562
    4. '[
' → logprob: -9.563613891601562
    5. ']' → logprob: -11.563613891601562
    6. ' ' → logprob: -11.688613891601562
    7. '2' → logprob: -12.188613891601562
    8. '```' → logprob: -12.438613891601562
    9. '   ' → logprob: -12.563613891601562
    10. '][' → logprob: -13.313613891601562

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00024192029377445579
    2. '1' → logprob: -8.750242233276367
    3. '[
' → logprob: -10.750242233276367
    4. ']' → logprob: -11.125242233276367
    5. '*' → logprob: -11.500242233276367
    6. '```' → logprob: -11.500242233276367
    7. '][' → logprob: -12.000242233276367
    8. '*[' → logprob: -12.250242233276367
    9. ' ' → logprob: -12.500242233276367
    10. '.' → logprob: -12.875242233276367

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.774276774493046e-05
    2. ' ' → logprob: -10.625038146972656
    3. '[' → logprob: -11.500038146972656
    4. ']' → logprob: -13.375038146972656
    5. '0' → logprob: -14.000038146972656
    6. '-' → logprob: -15.000038146972656
    7. '```' → logprob: -15.500038146972656
    8. '   ' → logprob: -16.312538146972656
    9. '
' → logprob: -16.937538146972656
    10. '

' → logprob: -17.000038146972656

Token 100: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14405320584774017
    2. '+' → logprob: -2.0190532207489014
    3. ')' → logprob: -6.644052982330322
    4. ']' → logprob: -10.64405345916748
    5. ' ' → logprob: -10.64405345916748
    6. ' )' → logprob: -11.64405345916748
    7. ')+' → logprob: -11.64405345916748
    8. ']+' → logprob: -13.14405345916748
    9. '+)' → logprob: -13.51905345916748
    10. '}' → logprob: -13.76905345916748

Token 101: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.061973292380571365
    2. '+' → logprob: -2.8119733333587646
    3. ' ' → logprob: -13.061973571777344
    4. ' +
' → logprob: -13.436973571777344
    5. '[' → logprob: -14.561973571777344
    6. 'v' → logprob: -15.061973571777344
    7. ' ' → logprob: -15.436973571777344
    8. ')' → logprob: -15.561973571777344
    9. '1' → logprob: -16.061973571777344
    10. '*' → logprob: -16.061973571777344

Token 102: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.16022564470767975
    2. 'v' → logprob: -1.9102256298065186
    3. '	v' → logprob: -13.785225868225098
    4. ' ' → logprob: -14.910225868225098
    5. ')v' → logprob: -16.53522491455078
    6. '<|end|>' → logprob: -18.28522491455078
    7. '    ' → logprob: -18.53522491455078
    8. '(v' → logprob: -18.66022491455078
    9. '?v' → logprob: -18.66022491455078
    10. ' ' → logprob: -18.66022491455078

Token 103: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04867888614535332
    2. '[' → logprob: -3.0486788749694824
    3. '```' → logprob: -10.42367935180664
    4. '[
' → logprob: -10.54867935180664
    5. ' ' → logprob: -10.79867935180664
    6. '0' → logprob: -11.54867935180664
    7. '1' → logprob: -12.42367935180664
    8. ']' → logprob: -15.04867935180664
    9. '   ' → logprob: -15.29867935180664
    10. '``' → logprob: -15.29867935180664

Token 104: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '*' → logprob: -13.250004768371582
    3. '*[' → logprob: -13.375004768371582
    4. '```' → logprob: -14.250004768371582
    5. '[*' → logprob: -14.625004768371582
    6. '[
' → logprob: -15.375004768371582
    7. '2' → logprob: -17.3750057220459
    8. '[]' → logprob: -18.0000057220459
    9. '][' → logprob: -18.8750057220459
    10. '**' → logprob: -18.8750057220459

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002929174806922674
    2. '[' → logprob: -8.250292778015137
    3. ' ' → logprob: -11.625292778015137
    4. '```' → logprob: -11.625292778015137
    5. '0' → logprob: -11.875292778015137
    6. ']' → logprob: -13.250292778015137
    7. '1' → logprob: -13.937792778015137
    8. '[
' → logprob: -14.187792778015137
    9. '-' → logprob: -14.437792778015137
    10. '   ' → logprob: -14.687792778015137

Token 106: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.32921651005744934
    2. '*' → logprob: -1.329216480255127
    3. ']' → logprob: -4.204216480255127
    4. '*v' → logprob: -7.954216480255127
    5. '[' → logprob: -8.579216957092285
    6. ')*' → logprob: -9.079216957092285
    7. '<|end|>' → logprob: -9.204216957092285
    8. '*
' → logprob: -9.954216957092285
    9. '```' → logprob: -10.079216957092285
    10. '*

' → logprob: -11.329216957092285

Token 107: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0325924449716695e-05
    2. ' v' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -16.625009536743164
    4. ')v' → logprob: -17.250009536743164
    5. '	v' → logprob: -17.375009536743164
    6. '2' → logprob: -18.125009536743164
    7. ' ' → logprob: -18.625009536743164
    8. '*v' → logprob: -19.625009536743164
    9. '?v' → logprob: -20.000009536743164
    10. '```' → logprob: -20.000009536743164

Token 108: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017150469357147813
    2. '[' → logprob: -6.376715183258057
    3. '1' → logprob: -12.001714706420898
    4. ' ' → logprob: -13.251714706420898
    5. '```' → logprob: -13.251714706420898
    6. '   ' → logprob: -13.501714706420898
    7. '-' → logprob: -14.876714706420898
    8. ']' → logprob: -15.564214706420898
    9. '  ' → logprob: -16.0017147064209
    10. '3' → logprob: -16.4392147064209

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0016573284519836307
    2. '2' → logprob: -6.626657485961914
    3. '[
' → logprob: -9.001657485961914
    4. '1' → logprob: -9.501657485961914
    5. '*[' → logprob: -10.126657485961914
    6. '*' → logprob: -10.376657485961914
    7. '```' → logprob: -10.501657485961914
    8. ']' → logprob: -11.751657485961914
    9. '][' → logprob: -12.001657485961914
    10. '3' → logprob: -12.376657485961914

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011941560078412294
    2. ' ' → logprob: -7.376194000244141
    3. '1' → logprob: -7.626194000244141
    4. '[' → logprob: -10.50119400024414
    5. '0' → logprob: -10.62619400024414
    6. ']' → logprob: -11.00119400024414
    7. '-' → logprob: -12.00119400024414
    8. '```' → logprob: -13.25119400024414
    9. '3' → logprob: -13.50119400024414
    10. '   ' → logprob: -15.18869400024414

Token 111: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.856408536899835e-05
    2. ')
' → logprob: -11.125028610229492
    3. '   ' → logprob: -11.750028610229492
    4. ' )' → logprob: -12.500028610229492
    5. ' ' → logprob: -14.625028610229492
    6. ')**' → logprob: -14.875028610229492
    7. '}' → logprob: -15.500028610229492
    8. ']' → logprob: -15.625028610229492
    9. '**' → logprob: -16.000028610229492
    10. ')return' → logprob: -16.375028610229492

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09625537693500519
    2. '   ' → logprob: -2.846255302429199
    3. ')' → logprob: -3.846255302429199
    4. '\n' → logprob: -5.221255302429199
    5. '    
' → logprob: -6.221255302429199
    6. ')
' → logprob: -6.721255302429199
    7. ',' → logprob: -7.221255302429199
    8. '' → logprob: -7.471255302429199
    9. '  
' → logprob: -7.596255302429199
    10. '\' → logprob: -7.721255302429199

Token 113: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07921571284532547
    2. '
' → logprob: -2.8292157649993896
    3. 'return' → logprob: -5.4542155265808105
    4. ')' → logprob: -5.5792155265808105
    5. '    
' → logprob: -5.9542155265808105
    6. ' return' → logprob: -6.0792155265808105
    7. ',' → logprob: -7.3292155265808105
    8. 'dot' → logprob: -7.8292155265808105
    9. '```' → logprob: -7.9542155265808105
    10. '\n' → logprob: -8.079216003417969

Token 114: ' Clamp' (ID: 191815)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.6398395895957947
    2. ' dot' → logprob: -1.1398396492004395
    3. ' return' → logprob: -2.8898396492004395
    4. 'return' → logprob: -3.1398396492004395
    5. '   ' → logprob: -3.3898396492004395
    6. 'max' → logprob: -5.3898396492004395
    7. ' max' → logprob: -5.3898396492004395
    8. 'cl' → logprob: -6.3898396492004395
    9. ' ' → logprob: -6.8898396492004395
    10. 'math' → logprob: -7.2648396492004395

Token 115: ' dot' (ID: 16579)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.07275968790054321
    2. '(' → logprob: -2.6977596282958984
    3. ' dot' → logprob: -6.447759628295898
    4. 'dot' → logprob: -7.447759628295898
    5. '(
' → logprob: -7.697759628295898
    6. ' (' → logprob: -9.697759628295898
    7. '   ' → logprob: -9.697759628295898
    8. ')' → logprob: -11.322759628295898
    9. ' ' → logprob: -11.572759628295898
    10. '(max' → logprob: -11.697759628295898

Token 116: ' product' (ID: 1888)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.087760090827942
    2. ')' → logprob: -1.087760090827942
    3. '=' → logprob: -1.837760090827942
    4. ' =' → logprob: -2.9627599716186523
    5. ',' → logprob: -3.0877599716186523
    6. ' ' → logprob: -3.7127599716186523
    7. '   ' → logprob: -3.8377599716186523
    8. '<|end|>' → logprob: -5.087759971618652
    9. '_' → logprob: -5.712759971618652
    10. ' to' → logprob: -5.712759971618652

Token 117: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25923028588294983
    2. '(' → logprob: -2.384230375289917
    3. '(dot' → logprob: -2.884230375289917
    4. '   ' → logprob: -3.259230375289917
    5. ' to' → logprob: -3.759230375289917
    6. ')' → logprob: -5.384230136871338
    7. ' ,' → logprob: -5.884230136871338
    8. '(
' → logprob: -5.884230136871338
    9. ' ' → logprob: -6.009230136871338
    10. ' between' → logprob: -6.134230136871338

Token 118: ' avoid' (ID: 8397)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.39875924587249756
    2. '1' → logprob: -1.7737592458724976
    3. 'max' → logprob: -2.148759365081787
    4. ' ' → logprob: -3.648759365081787
    5. '-' → logprob: -5.023759365081787
    6. ' -' → logprob: -5.023759365081787
    7. ' min' → logprob: -6.023759365081787
    8. 'min' → logprob: -7.148759365081787
    9. '0' → logprob: -10.648758888244629
    10. '  ' → logprob: -11.148758888244629

Token 119: ' floating' (ID: 35887)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.008162748999893665
    2. 'math' → logprob: -5.633162975311279
    3. ' domain' → logprob: -6.133162975311279
    4. '1' → logprob: -6.758162975311279
    5. ' floating' → logprob: -7.133162975311279
    6. ' float' → logprob: -9.508162498474121
    7. '   ' → logprob: -9.758162498474121
    8. ' Value' → logprob: -9.883162498474121
    9. '```' → logprob: -10.133162498474121
    10. ' acos' → logprob: -10.133162498474121

Token 120: ' point' (ID: 2438)
  Prédit: '-point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-point' → logprob: -0.6225206851959229
    2. '-' → logprob: -1.8725206851959229
    3. '   ' → logprob: -1.9975206851959229
    4. 'point' → logprob: -3.497520685195923
    5. '_point' → logprob: -3.497520685195923
    6. ' errors' → logprob: -3.872520685195923
    7. ' point' → logprob: -4.122520446777344
    8. ' math' → logprob: -4.247520446777344
    9. '<|end|>' → logprob: -4.372520446777344
    10. '_value' → logprob: -4.747520446777344

Token 121: ' errors' (ID: 10664)
  Prédit: ' errors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' errors' → logprob: -0.04060802236199379
    2. ' math' → logprob: -3.7906079292297363
    3. ' domain' → logprob: -4.540607929229736
    4. 'errors' → logprob: -5.165607929229736
    5. 'domain' → logprob: -8.165608406066895
    6. ' issues' → logprob: -8.540608406066895
    7. 'math' → logprob: -9.665608406066895
    8. '_errors' → logprob: -9.915608406066895
    9. ' inaccuracies' → logprob: -9.915608406066895
    10. ' error' → logprob: -10.415608406066895

Token 122: ' out' (ID: 842)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018588723614811897
    2. ',' → logprob: -4.643588542938232
    3. '    
' → logprob: -5.268588542938232
    4. ')' → logprob: -7.643588542938232
    5. '\' → logprob: -7.643588542938232
    6. '(' → logprob: -7.768588542938232
    7. '
' → logprob: -7.768588542938232
    8. ' ' → logprob: -8.01858901977539
    9. '  ' → logprob: -8.14358901977539
    10. '<|end|>' → logprob: -8.39358901977539

Token 123: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6023540496826172
    2. '_' → logprob: -1.6023540496826172
    3. 'of' → logprob: -2.102354049682617
    4. '_of' → logprob: -2.352354049682617
    5. '=' → logprob: -4.102354049682617
    6. '-of' → logprob: -5.977354049682617
    7. '(' → logprob: -6.102354049682617
    8. ' _' → logprob: -6.352354049682617
    9. ')' → logprob: -6.352354049682617
    10. ',' → logprob: -6.477354049682617

Token 124: ' domain' (ID: 11819)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7066267132759094
    2. 'domain' → logprob: -0.8316267132759094
    3. ' range' → logprob: -3.2066266536712646
    4. ' domain' → logprob: -4.206626892089844
    5. '-' → logprob: -4.706626892089844
    6. 'bounds' → logprob: -5.956626892089844
    7. '1' → logprob: -6.081626892089844
    8. 'bound' → logprob: -7.081626892089844
    9. '-range' → logprob: -7.706626892089844
    10. '-domain' → logprob: -8.206626892089844

Token 125: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.815009355545044
    2. '   ' → logprob: -1.315009355545044
    3. ',' → logprob: -2.065009355545044
    4. ')' → logprob: -2.565009355545044
    5. '(
' → logprob: -3.565009355545044
    6. '(math' → logprob: -4.315009117126465
    7. 'math' → logprob: -4.815009117126465
    8. '.' → logprob: -5.190009117126465
    9. 'import' → logprob: -5.315009117126465
    10. ' math' → logprob: -5.315009117126465

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24536874890327454
    2. ')' → logprob: -2.120368719100952
    3. ',' → logprob: -3.120368719100952
    4. '(' → logprob: -3.245368719100952
    5. '.' → logprob: -5.370368957519531
    6. ':' → logprob: -6.495368957519531
    7. '\' → logprob: -6.745368957519531
    8. ' ' → logprob: -6.745368957519531
    9. ')
' → logprob: -6.870368957519531
    10. '(
' → logprob: -6.870368957519531

Token 127: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.12526310980319977
    2. '   ' → logprob: -3.125263214111328
    3. 'dot' (adapté à ' dot') → logprob: -3.250263214111328
    4. ' max' → logprob: -4.375263214111328
    5. '1' → logprob: -5.125263214111328
    6. ' ' → logprob: -5.500263214111328
    7. '(dot' → logprob: -6.000263214111328
    8. 'max' → logprob: -6.500263214111328
    9. ',' → logprob: -6.875263214111328
    10. '0' → logprob: -7.000263214111328

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021691024303436
    2. '=' → logprob: -2.350216865539551
    3. '<|end|>' → logprob: -12.10021686553955
    4. ')' → logprob: -12.97521686553955
    5. ' ' → logprob: -13.97521686553955
    6. '<|end|>' → logprob: -15.10021686553955
    7. ' =
' → logprob: -15.47521686553955
    8. '=}' → logprob: -15.60021686553955
    9. ')=' → logprob: -15.60021686553955
    10. ' ' → logprob: -16.225217819213867

Token 129: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.09281762689352036
    2. 'max' → logprob: -2.592817544937134
    3. ' min' → logprob: -4.342817783355713
    4. 'min' → logprob: -7.092817783355713
    5. '	max' → logprob: -15.217817306518555
    6. ' ' → logprob: -17.217817306518555
    7. '	min' → logprob: -17.467817306518555
    8. ' ' → logprob: -17.842817306518555
    9. '(max' → logprob: -18.092817306518555
    10. ' maximum' → logprob: -19.092817306518555

Token 130: '(min' (ID: 26035)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.05912291258573532
    2. '(min' → logprob: -3.0591228008270264
    3. '(' → logprob: -4.5591230392456055
    4. '(
' → logprob: -11.934123039245605
    5. '-' → logprob: -13.309123039245605
    6. '(

' → logprob: -14.934123039245605
    7. 'min' → logprob: -15.934123039245605
    8. '()' → logprob: -16.68412208557129
    9. '(-(' → logprob: -17.18412208557129
    10. '```' → logprob: -17.30912208557129

Token 131: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.029752571135759354
    2. '(' → logprob: -3.529752492904663
    3. '(
' → logprob: -13.654752731323242
    4. '1' → logprob: -15.529752731323242
    5. 'dot' → logprob: -15.529752731323242
    6. ' dot' → logprob: -15.654752731323242
    7. ' (' → logprob: -15.904752731323242
    8. '(-' → logprob: -15.904752731323242
    9. '(

' → logprob: -17.029752731323242
    10. '```' → logprob: -17.279752731323242

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009591046255081892
    2. ' ,' → logprob: -7.0009589195251465
    3. '1' → logprob: -10.000959396362305
    4. ' ' → logprob: -13.500959396362305
    5. ',
' → logprob: -15.375959396362305
    6. '(' → logprob: -15.625959396362305
    7. '<|end|>' → logprob: -15.750959396362305
    8. '
' → logprob: -16.375959396362305
    9. '

' → logprob: -17.125959396362305
    10. '```' → logprob: -17.625959396362305

Token 133: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132629096508026
    2. ' ' → logprob: -1.313262939453125
    3. ' ' → logprob: -14.063262939453125
    4. ')' → logprob: -16.063262939453125
    5. '
' → logprob: -16.063262939453125
    6. '<|end|>' → logprob: -16.438262939453125
    7. '  ' → logprob: -17.188262939453125
    8. '```' → logprob: -17.313262939453125
    9. '   ' → logprob: -17.500762939453125
    10. ' 
' → logprob: -18.125762939453125

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.376928329467773
    4. '
' → logprob: -17.876928329467773
    5. '```' → logprob: -18.001928329467773
    6. ')' → logprob: -18.251928329467773
    7. '   ' → logprob: -18.501928329467773
    8. '

' → logprob: -18.876928329467773
    9. '  ' → logprob: -18.876928329467773
    10. '１' → logprob: -19.189428329467773

Token 135: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07176239788532257
    2. '),' → logprob: -2.6967623233795166
    3. ')' → logprob: -6.321762561798096
    4. ' ),' → logprob: -10.946762084960938
    5. '1' → logprob: -12.946762084960938
    6. '),(' → logprob: -12.946762084960938
    7. '<|end|>' → logprob: -13.071762084960938
    8. '.),' → logprob: -14.071762084960938
    9. '0' → logprob: -14.321762084960938
    10. ',' → logprob: -15.071762084960938

Token 136: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.125000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '```' → logprob: -17.125
    5. '),' → logprob: -17.75
    6. '

' → logprob: -19.5
    7. '))' → logprob: -19.625
    8. '-' → logprob: -19.875
    9. ',' → logprob: -20.0
    10. '1' → logprob: -20.125

Token 137: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0012041617883369327
    2. ')' → logprob: -6.751204013824463
    3. ' ),' → logprob: -10.501204490661621
    4. ',' → logprob: -12.126204490661621
    5. '),(' → logprob: -14.876204490661621
    6. '),
' → logprob: -15.001204490661621
    7. ',),' → logprob: -15.751204490661621
    8. ' ' → logprob: -16.626203536987305
    9. '),

' → logprob: -17.251203536987305
    10. '1' → logprob: -17.876203536987305

Token 138: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002805110299959779
    2. ' -' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.252805709838867
    4. '0' → logprob: -16.502805709838867
    5. '−' → logprob: -17.127805709838867
    6. '1' → logprob: -17.627805709838867
    7. '```' → logprob: -18.002805709838867
    8. '  ' → logprob: -18.502805709838867
    9. '   ' → logprob: -18.627805709838867
    10. '-
' → logprob: -19.002805709838867

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '<|end|>' → logprob: -16.125001907348633
    4. '```' → logprob: -18.125001907348633
    5. '۱' → logprob: -19.750001907348633
    6. '１' → logprob: -19.812501907348633
    7. '

' → logprob: -20.875001907348633
    8. '১' → logprob: -20.937501907348633
    9. '१' → logprob: -21.125001907348633
    10. '<|end|>' → logprob: -21.250001907348633

Token 140: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.684157026233152e-05
    2. ')' → logprob: -9.500077247619629
    3. '<|end|>' → logprob: -13.375077247619629
    4. '.)' → logprob: -15.500077247619629
    5. '1' → logprob: -16.250076293945312
    6. '<|end|>' → logprob: -17.625076293945312
    7. '.
' → logprob: -17.875076293945312
    8. '0' → logprob: -18.125076293945312
    9. ' )' → logprob: -18.250076293945312
    10. ' ' → logprob: -18.375076293945312

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -9.125140190124512
    3. '1' → logprob: -10.750140190124512
    4. ')' → logprob: -11.625140190124512
    5. '<|end|>' → logprob: -14.250140190124512
    6. '```' → logprob: -15.750140190124512
    7. '  ' → logprob: -16.125141143798828
    8. '-' → logprob: -18.000141143798828
    9. ' 
' → logprob: -18.625141143798828
    10. '
' → logprob: -18.687641143798828

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006722706835716963
    2. ')
' → logprob: -5.006722927093506
    3. '   ' → logprob: -12.506722450256348
    4. ' )' → logprob: -13.131722450256348
    5. ')
' → logprob: -14.006722450256348
    6. ')

' → logprob: -14.756722450256348
    7. ' )
' → logprob: -15.381722450256348
    8. ' ' → logprob: -16.006723403930664
    9. ')`' → logprob: -17.631723403930664
    10. '))' → logprob: -17.756723403930664

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11891467869281769
    2. ')' → logprob: -2.6189146041870117
    3. '    
' → logprob: -3.8689146041870117
    4. '
' → logprob: -4.118914604187012
    5. ')
' → logprob: -7.118914604187012
    6. '  
' → logprob: -7.118914604187012
    7. '   
' → logprob: -8.743914604187012
    8. ' 
' → logprob: -9.493914604187012
    9. ',' → logprob: -9.993914604187012
    10. ' ' → logprob: -10.493914604187012

Token 144: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06470043957233429
    2. '
' → logprob: -3.8147003650665283
    3. 'return' (adapté à ' return') → logprob: -3.8147003650665283
    4. ' return' → logprob: -4.439700603485107
    5. ')' → logprob: -5.314700603485107
    6. '    
' → logprob: -6.689700603485107
    7. ')
' → logprob: -7.814700603485107
    8. '  
' → logprob: -10.18970012664795
    9. '	return' → logprob: -10.43970012664795
    10. ' 
' → logprob: -10.43970012664795

Token 145: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.012510941363871098
    2. 'math' → logprob: -4.387510776519775
    3. '(math' → logprob: -14.137511253356934
    4. ' acos' → logprob: -16.012510299682617
    5. ' ' → logprob: -16.262510299682617
    6. '   ' → logprob: -16.262510299682617
    7. ' ' → logprob: -16.512510299682617
    8. 'm' → logprob: -16.887510299682617
    9. ' m' → logprob: -16.887510299682617
    10. ' ma' → logprob: -17.262510299682617

Token 146: '.ac' (ID: 25905)
  Prédit: '.ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ac' → logprob: -0.16034609079360962
    2. '.' → logprob: -1.9103460311889648
    3. '.atan' → logprob: -9.160346031188965
    4. '.a' → logprob: -12.535346031188965
    5. '.pi' → logprob: -12.535346031188965
    6. ' .' → logprob: -13.160346031188965
    7. '​.' → logprob: -13.285346031188965
    8. '.as' → logprob: -13.285346031188965
    9. '‌.' → logprob: -13.785346031188965
    10. '.ar' → logprob: -13.785346031188965

Token 147: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -1.7120533811976202e-05
    2. 'cos' → logprob: -11.125017166137695
    3. 's' → logprob: -13.125017166137695
    4. 'o' → logprob: -15.500017166137695
    5. '(os' → logprob: -17.125017166137695
    6. '	os' → logprob: -17.500017166137695
    7. 'ос' → logprob: -17.625017166137695
    8. '##' → logprob: -18.125017166137695
    9. '```' → logprob: -18.125017166137695
    10. '[' → logprob: -18.625017166137695

Token 148: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.4741087555885315
    2. '(' → logprob: -0.9741087555885315
    3. '(
' → logprob: -11.724108695983887
    4. '(math' → logprob: -11.974108695983887
    5. '((' → logprob: -12.974108695983887
    6. '(draw' → logprob: -13.599108695983887
    7. ' (' → logprob: -13.599108695983887
    8. '(paren' → logprob: -13.849108695983887
    9. '("("' → logprob: -14.099108695983887
    10. '(abs' → logprob: -14.099108695983887

Token 149: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2352385965641588e-05
    2. ' )' → logprob: -11.500012397766113
    3. ')
' → logprob: -13.125012397766113
    4. '<|end|>' → logprob: -16.000011444091797
    5. ' ' → logprob: -17.750011444091797
    6. ')return' → logprob: -18.000011444091797
    7. '}' → logprob: -18.500011444091797
    8. ')

' → logprob: -18.500011444091797
    9. ')#' → logprob: -18.875011444091797
    10. '   ' → logprob: -19.125011444091797

Token 150: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007394690765067935
    2. '
' → logprob: -8.000739097595215
    3. '<|end|>' → logprob: -9.375739097595215
    4. '\' → logprob: -9.625739097595215
    5. '(' → logprob: -9.750739097595215
    6. ' def' → logprob: -9.875739097595215
    7. 'import' → logprob: -10.250739097595215
    8. '#' → logprob: -10.375739097595215
    9. '(
' → logprob: -10.875739097595215
    10. '```' → logprob: -11.125739097595215

Token 151: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2607790529727936
    2. ' cross' → logprob: -1.6357790231704712
    3. ' vector' → logprob: -4.260778903961182
    4. ' rotate' → logprob: -5.510778903961182
    5. ' normalize' → logprob: -5.760778903961182
    6. ' compute' → logprob: -6.010778903961182
    7. ' distance' → logprob: -6.010778903961182
    8. ' project' → logprob: -6.635778903961182
    9. ' find' → logprob: -7.010778903961182
    10. ' calculate' → logprob: -7.135778903961182

Token 152: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0017862061504274607
    2. '(' → logprob: -6.376786231994629
    3. ':' → logprob: -10.751786231994629
    4. ' ():' → logprob: -10.751786231994629
    5. '()' → logprob: -10.876786231994629
    6. '():
' → logprob: -11.126786231994629
    7. '(:' → logprob: -12.501786231994629
    8. '(":' → logprob: -14.001786231994629
    9. '()>' → logprob: -14.376786231994629
    10. '(args' → logprob: -14.501786231994629

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08047174662351608
    2. ' import' → logprob: -3.5804717540740967
    3. ' line' → logprob: -4.080471515655518
    4. ' input' → logprob: -4.330471515655518
    5. ' n' → logprob: -5.455471515655518
    6. ' argv' → logprob: -6.330471515655518
    7. ' sys' → logprob: -6.455471515655518
    8. ' lines' → logprob: -6.455471515655518
    9. ' readline' → logprob: -6.455471515655518
    10. 'import' → logprob: -6.455471515655518

Token 154: ' input' (ID: 3422)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0741947889328003
    2. 'if' → logprob: -1.8241947889328003
    3. ' input' → logprob: -2.82419490814209
    4. ' args' → logprob: -2.94919490814209
    5. ' n' → logprob: -3.07419490814209
    6. 'n' → logprob: -3.19919490814209
    7. ' lines' → logprob: -3.32419490814209
    8. ' for' → logprob: -3.44919490814209
    9. ' import' → logprob: -3.44919490814209
    10. ' line' → logprob: -3.44919490814209

Token 155: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.143236517906189
    2. '_' → logprob: -1.393236517906189
    3. '_line' → logprob: -1.393236517906189
    4. '_data' → logprob: -2.6432366371154785
    5. ' =' → logprob: -2.7682366371154785
    6. '_lines' → logprob: -3.3932366371154785
    7. 's' → logprob: -5.2682366371154785
    8. '=' → logprob: -5.6432366371154785
    9. '(' → logprob: -5.8932366371154785
    10. '_str' → logprob: -6.6432366371154785

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015029440633952618
    2. '=' → logprob: -4.265029430389404
    3. '()' → logprob: -7.390029430389404
    4. ':' → logprob: -9.515029907226562
    5. '[' → logprob: -9.890029907226562
    6. ' ' → logprob: -10.640029907226562
    7. '(' → logprob: -10.640029907226562
    8. '[:]' → logprob: -10.765029907226562
    9. '=[]' → logprob: -11.265029907226562
    10. '_' → logprob: -11.390029907226562

Token 157: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07890035957098007
    2. 'sys' → logprob: -2.5789003372192383
    3. '	sys' → logprob: -11.953900337219238
    4. '=sys' → logprob: -13.078900337219238
    5. '[' → logprob: -13.828900337219238
    6. ' [' → logprob: -14.703900337219238
    7. '(sys' → logprob: -14.703900337219238
    8. ' ' → logprob: -15.703900337219238
    9. '   ' → logprob: -16.953901290893555
    10. '[]' → logprob: -17.203901290893555

Token 158: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007585270795971155
    2. '.' → logprob: -7.250758647918701
    3. '.argv' → logprob: -10.125758171081543
    4. '.stdout' → logprob: -12.250758171081543
    5. '.std' → logprob: -13.000758171081543
    6. '.readline' → logprob: -14.250758171081543
    7. '.st' → logprob: -14.625758171081543
    8. 'stdin' → logprob: -16.12575912475586
    9. '.stderr' → logprob: -17.00075912475586
    10. '.readlines' → logprob: -17.12575912475586

Token 159: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.039992231875658035
    2. '.readline' → logprob: -3.289992332458496
    3. '.' → logprob: -6.789992332458496
    4. '.read' → logprob: -7.164992332458496
    5. 'read' → logprob: -9.914992332458496
    6. ' .' → logprob: -14.289992332458496
    7. ' readline' → logprob: -15.414992332458496
    8. '```' → logprob: -15.539992332458496
    9. '_read' → logprob: -17.16499137878418
    10. '.buffer' → logprob: -17.16499137878418

Token 160: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1269380897283554
    2. '()' → logprob: -2.1269381046295166
    3. '(' → logprob: -12.251937866210938
    4. '()`' → logprob: -13.751937866210938
    5. ' ()' → logprob: -14.126937866210938
    6. '_lines' → logprob: -14.376937866210938
    7. ' ().' → logprob: -14.876937866210938
    8. '())' → logprob: -15.001937866210938
    9. '()\' → logprob: -15.251937866210938
    10. '();' → logprob: -15.251937866210938

Token 161: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31327658891677856
    2. 'split' → logprob: -1.3132765293121338
    3. 'rstrip' → logprob: -11.188276290893555
    4. ' split' → logprob: -14.438276290893555
    5. 'decode' → logprob: -14.813276290893555
    6. ' strip' → logprob: -15.938276290893555
    7. '```' → logprob: -18.313276290893555
    8. 'replace' → logprob: -18.563276290893555
    9. '(split' → logprob: -18.813276290893555
    10. 'read' → logprob: -19.563276290893555

Token 162: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.029776528477668762
    2. '()' → logprob: -3.5297765731811523
    3. '(' → logprob: -10.654776573181152
    4. 'split' → logprob: -14.404776573181152
    5. '('' → logprob: -14.779776573181152
    6. '().'' → logprob: -14.904776573181152
    7. '()
' → logprob: -15.154776573181152
    8. ' ().' → logprob: -15.529776573181152
    9. '()\' → logprob: -16.404775619506836
    10. '()`' → logprob: -16.529775619506836

Token 163: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.875
    3. '(split' → logprob: -17.375
    4. '```' → logprob: -18.75
    5. 'spl' → logprob: -19.5
    6. ' ' → logprob: -20.0
    7. '.split' → logprob: -21.375
    8. 'sp' → logprob: -21.875
    9. '   ' → logprob: -22.125
    10. 'rstrip' → logprob: -22.5

Token 164: '('\' (ID: 24345)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7470090985298157
    2. '('\' → logprob: -0.7470090985298157
    3. 'lines' → logprob: -3.247009038925171
    4. '()' → logprob: -4.37200927734375
    5. '("\' → logprob: -7.62200927734375
    6. '(' → logprob: -8.37200927734375
    7. '("("' → logprob: -8.74700927734375
    8. '("' → logprob: -10.37200927734375
    9. '(\' → logprob: -12.87200927734375
    10. '('(' → logprob: -12.99700927734375

Token 165: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.7610454708337784e-05
    2. '\n' → logprob: -10.500027656555176
    3. 'newline' → logprob: -17.75002670288086
    4. ' n' → logprob: -17.87502670288086
    5. '
' → logprob: -18.12502670288086
    6. 'lines' → logprob: -19.75002670288086
    7. '	n' → logprob: -19.87502670288086
    8. '\' → logprob: -20.12502670288086
    9. '```' → logprob: -20.12502670288086
    10. 'ndef' → logprob: -20.37502670288086

Token 166: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00775296101346612
    2. '')' → logprob: -4.882752895355225
    3. '   ' → logprob: -9.132753372192383
    4. ')
' → logprob: -10.882753372192383
    5. ' )' → logprob: -11.632753372192383
    6. '")' → logprob: -12.382753372192383
    7. ']' → logprob: -12.632753372192383
    8. '`)' → logprob: -13.882753372192383
    9. '')
' → logprob: -14.132753372192383
    10. '[' → logprob: -14.132753372192383

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07458367198705673
    2. ' n' → logprob: -3.0745837688446045
    3. 'n' → logprob: -3.9495837688446045
    4. ' for' → logprob: -5.324583530426025
    5. 'for' → logprob: -7.199583530426025
    6. '    
' → logprob: -8.574584007263184
    7. '    ' → logprob: -9.074584007263184
    8. 'num' → logprob: -9.074584007263184
    9. ' num' → logprob: -9.199584007263184
    10. ' idx' → logprob: -9.824584007263184

Token 168: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.026247121393680573
    2. ' n' → logprob: -4.651247024536133
    3. 'num' → logprob: -4.776247024536133
    4. 't' → logprob: -5.901247024536133
    5. '   ' → logprob: -6.151247024536133
    6. 'N' → logprob: -6.276247024536133
    7. ' num' → logprob: -8.276247024536133
    8. 'for' → logprob: -8.401247024536133
    9. 'T' → logprob: -8.651247024536133
    10. ' t' → logprob: -9.026247024536133

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001172129064798355
    2. '=' → logprob: -6.751172065734863
    3. ' ' → logprob: -13.501172065734863
    4. ' +=' → logprob: -14.876172065734863
    5. ' ' → logprob: -17.00117301940918
    6. '_' → logprob: -17.12617301940918
    7. '0' → logprob: -17.50117301940918
    8. 's' → logprob: -18.00117301940918
    9. ' =
' → logprob: -18.12617301940918
    10. ' =)' → logprob: -18.75117301940918

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067201098427176476
    2. ' ' → logprob: -5.006720066070557
    3. '1' → logprob: -12.256720542907715
    4. ' ' → logprob: -19.5067195892334
    5. 'int' → logprob: -19.6317195892334
    6. '   ' → logprob: -20.0067195892334
    7. '۰' → logprob: -20.1942195892334
    8. '  ' → logprob: -20.3192195892334
    9. '2' → logprob: -20.6942195892334
    10. '```' → logprob: -21.0067195892334

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -10.62502670288086
    3. '1' → logprob: -12.87502670288086
    4. 'int' → logprob: -17.12502670288086
    5. '   ' → logprob: -18.37502670288086
    6. '2' → logprob: -18.93752670288086
    7. '```' → logprob: -19.12502670288086
    8. 'len' → logprob: -19.25002670288086
    9. '  ' → logprob: -19.68752670288086
    10. '۰' → logprob: -19.93752670288086

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7989413142204285
    2. 'while' → logprob: -1.1739413738250732
    3. ' while' → logprob: -1.5489413738250732
    4. 'n' → logprob: -5.048941135406494
    5. '
' → logprob: -5.298941135406494
    6. '	while' → logprob: -5.298941135406494
    7. '    
' → logprob: -5.423941135406494
    8. ' ' → logprob: -5.798941135406494
    9. '    ' → logprob: -6.798941135406494
    10. '<|end|>' → logprob: -6.923941135406494

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04640178382396698
    2. 'n' → logprob: -3.2964017391204834
    3. ' while' → logprob: -5.2964019775390625
    4. ' n' → logprob: -6.1714019775390625
    5. 'while' → logprob: -7.5464019775390625
    6. '    
' → logprob: -8.421401977539062
    7. '	n' → logprob: -8.671401977539062
    8. '    ' → logprob: -9.421401977539062
    9. 't' → logprob: -9.421401977539062
    10. '
' → logprob: -10.921401977539062

Token 174: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1594284027814865
    2. ' n' → logprob: -2.159428358078003
    3. '   ' → logprob: -4.909428596496582
    4. 't' → logprob: -4.909428596496582
    5. 'num' → logprob: -5.159428596496582
    6. 'N' → logprob: -5.284428596496582
    7. ' num' → logprob: -6.159428596496582
    8. ' t' → logprob: -6.659428596496582
    9. 'T' → logprob: -6.909428596496582
    10. ' T' → logprob: -7.034428596496582

Token 175: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0013510684948414564
    2. 'idx' → logprob: -6.6263508796691895
    3. ' True' → logprob: -10.751351356506348
    4. '	idx' → logprob: -12.876351356506348
    5. '(idx' → logprob: -14.251351356506348
    6. 'True' → logprob: -14.876351356506348
    7. ' ' → logprob: -16.50135040283203
    8. '_idx' → logprob: -17.62635040283203
    9. '[idx' → logprob: -18.00135040283203
    10. ' id' → logprob: -18.00135040283203

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.5597102396423e-05
    2. ':
' → logprob: -10.375035285949707
    3. '   ' → logprob: -13.875035285949707
    4. ',' → logprob: -14.000035285949707
    5. '):' → logprob: -14.000035285949707
    6. ' :' → logprob: -14.125035285949707
    7. ':**' → logprob: -14.625035285949707
    8. '       ' → logprob: -16.125036239624023
    9. ' and' → logprob: -16.375036239624023
    10. '():' → logprob: -16.375036239624023

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6048559546470642
    2. '   ' → logprob: -0.8548559546470642
    3. '    ' → logprob: -3.979856014251709
    4. ' ' → logprob: -4.729856014251709
    5. '    
' → logprob: -7.979856014251709
    6. '  ' → logprob: -8.60485553741455
    7. ' if' → logprob: -8.97985553741455
    8. '     ' → logprob: -9.60485553741455
    9. '        
' → logprob: -9.85485553741455
    10. '      ' → logprob: -9.97985553741455

Token 178: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23571598529815674
    2. ' if' → logprob: -1.8607159852981567
    3. ' ' → logprob: -3.735715866088867
    4. 'if' (adapté à ' if') → logprob: -3.985715866088867
    5. '    ' → logprob: -4.735715866088867
    6. '  ' → logprob: -6.735715866088867
    7. 'i' → logprob: -7.360715866088867
    8. '    
' → logprob: -7.860715866088867
    9. ' i' → logprob: -8.235715866088867
    10. ' try' → logprob: -8.735715866088867

Token 179: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.009960299357771873
    2. 'idx' → logprob: -4.634960174560547
    3. '	idx' → logprob: -8.509960174560547
    4. ' ' → logprob: -13.509960174560547
    5. '(idx' → logprob: -14.509960174560547
    6. '   ' → logprob: -15.009960174560547
    7. ' ' → logprob: -15.384960174560547
    8. '_idx' → logprob: -15.509960174560547
    9. ' input' → logprob: -16.384960174560547
    10. '  ' → logprob: -16.759960174560547

Token 180: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07895941287279129
    2. '>=' → logprob: -2.5789594650268555
    3. ' ' → logprob: -9.703959465026855
    4. ']>=' → logprob: -12.953959465026855
    5. ')>=' → logprob: -13.328959465026855
    6. ' <' → logprob: -13.703959465026855
    7. ' ==' → logprob: -13.828959465026855
    8. '==' → logprob: -13.953959465026855
    9. '   ' → logprob: -14.953959465026855
    10. '>' → logprob: -15.203959465026855

Token 181: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005530327325686812
    2. ' len' → logprob: -7.500553131103516
    3. '	len' → logprob: -18.250553131103516
    4. '   ' → logprob: -18.625553131103516
    5. '=len' → logprob: -18.625553131103516
    6. '(len' → logprob: -19.000553131103516
    7. '<len' → logprob: -19.625553131103516
    8. ',len' → logprob: -20.625553131103516
    9. '[len' → logprob: -21.125553131103516
    10. ' ' → logprob: -21.250553131103516

Token 182: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0012001125141978264
    2. '(' → logprob: -6.751200199127197
    3. 'input' → logprob: -10.876199722290039
    4. ' input' → logprob: -11.626199722290039
    5. ' (' → logprob: -13.251199722290039
    6. '(
' → logprob: -15.876199722290039
    7. '=input' → logprob: -16.75119972229004
    8. ',input' → logprob: -17.12619972229004
    9. '(output' → logprob: -18.00119972229004
    10. '[input' → logprob: -18.62619972229004

Token 183: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.625000953674316
    3. ')' → logprob: -15.125000953674316
    4. ')_' → logprob: -15.875000953674316
    5. '```' → logprob: -16.250001907348633
    6. '_line' → logprob: -16.625001907348633
    7. '_LINES' → logprob: -16.750001907348633
    8. 'lines' → logprob: -17.000001907348633
    9. '_)' → logprob: -17.125001907348633
    10. ' _' → logprob: -17.125001907348633

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17253752052783966
    2. ')' → logprob: -2.0475375652313232
    3. ' or' → logprob: -3.6725375652313232
    4. ':' → logprob: -5.922537326812744
    5. '):
' → logprob: -7.047537326812744
    6. 'or' → logprob: -8.172537803649902
    7. ' ):' → logprob: -9.297537803649902
    8. '   ' → logprob: -10.172537803649902
    9. ' )' → logprob: -11.172537803649902
    10. ' and' → logprob: -11.422537803649902

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11345402151346207
    2. '       ' → logprob: -2.2384541034698486
    3. ':' → logprob: -8.48845386505127
    4. '   ' → logprob: -8.61345386505127
    5. '\n' → logprob: -9.73845386505127
    6. ' break' → logprob: -10.86345386505127
    7. '        
' → logprob: -11.11345386505127
    8. '\' → logprob: -11.23845386505127
    9. ':
' → logprob: -11.48845386505127
    10. ' ' → logprob: -11.48845386505127

Token 186: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6332533359527588
    2. '       ' → logprob: -0.8832533359527588
    3. 'break' (adapté à ' break') → logprob: -3.008253335952759
    4. ' break' → logprob: -5.38325309753418
    5. 'return' → logprob: -6.75825309753418
    6. '   ' → logprob: -8.50825309753418
    7. '	break' → logprob: -8.63325309753418
    8. '```' → logprob: -10.00825309753418
    9. '               ' → logprob: -10.38325309753418
    10. '		' → logprob: -10.50825309753418

Token 187: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04981732368469238
    2. '        
' → logprob: -3.4248173236846924
    3. '
' → logprob: -4.424817085266113
    4. '    
' → logprob: -6.299817085266113
    5. '\n' → logprob: -7.299817085266113
    6. '  
' → logprob: -7.799817085266113
    7. '   ' → logprob: -7.924817085266113
    8. ' 
' → logprob: -8.674817085266113
    9. '<|end|>' → logprob: -9.299817085266113
    10. '            
' → logprob: -9.424817085266113

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23356731235980988
    2. '        
' → logprob: -2.233567237854004
    3. ' 
' → logprob: -3.233567237854004
    4. '
' → logprob: -3.858567237854004
    5. '    
' → logprob: -4.108567237854004
    6. ' ' → logprob: -5.233567237854004
    7. '  
' → logprob: -5.358567237854004
    8. '   ' → logprob: -5.608567237854004
    9. '   
' → logprob: -5.733567237854004
    10. '\n' → logprob: -6.233567237854004

Token 189: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2666705846786499
    2. '       ' → logprob: -2.1416707038879395
    3. 'n' (adapté à ' n') → logprob: -2.7666707038879395
    4. ' line' → logprob: -3.1416707038879395
    5. ' parts' → logprob: -5.8916707038879395
    6. 'line' → logprob: -6.0166707038879395
    7. ' ' → logprob: -6.8916707038879395
    8. '   ' → logprob: -7.1416707038879395
    9. '        
' → logprob: -7.3916707038879395
    10. ' num' → logprob: -7.7666707038879395

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03368096798658371
    2. '=' → logprob: -3.4086809158325195
    3. ',' → logprob: -10.90868091583252
    4. ' ,' → logprob: -12.28368091583252
    5. '=int' → logprob: -12.40868091583252
    6. ' =
' → logprob: -12.65868091583252
    7. ' ' → logprob: -13.15868091583252
    8. 'space' → logprob: -14.65868091583252
    9. ' =
' → logprob: -14.65868091583252
    10. ')' → logprob: -14.78368091583252

Token 191: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4740790128707886
    2. ' int' → logprob: -0.9740790128707886
    3. '[int' → logprob: -14.224079132080078
    4. '=int' → logprob: -14.474079132080078
    5. ' ' → logprob: -14.974079132080078
    6. '(int' → logprob: -15.349079132080078
    7. '	int' → logprob: -15.724079132080078
    8. ']int' → logprob: -15.974079132080078
    9. '<int' → logprob: -17.349079132080078
    10. '   ' → logprob: -17.474079132080078

Token 192: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0050645144656300545
    2. '(int' → logprob: -6.255064487457275
    3. '(lines' → logprob: -6.880064487457275
    4. 'lines' → logprob: -7.255064487457275
    5. '()' → logprob: -7.630064487457275
    6. 'int' → logprob: -8.130064964294434
    7. '(' → logprob: -8.630064964294434
    8. '_tokens' → logprob: -9.380064964294434
    9. 'Lines' → logprob: -9.505064964294434
    10. '(n' → logprob: -10.005064964294434

Token 193: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0007399422465823591
    2. 'idx' → logprob: -7.500740051269531
    3. '[int' → logprob: -9.000740051269531
    4. ')' → logprob: -11.375740051269531
    5. ' idx' → logprob: -11.375740051269531
    6. '[' → logprob: -11.625740051269531
    7. ')[' → logprob: -12.000740051269531
    8. 'split' → logprob: -12.250740051269531
    9. '```' → logprob: -12.750740051269531
    10. '(idx' → logprob: -13.000740051269531

Token 194: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6203352808952332
    2. '].' → logprob: -0.8703352808952332
    3. '])' → logprob: -3.245335340499878
    4. ']
' → logprob: -5.870335102081299
    5. ')' → logprob: -6.995335102081299
    6. ']);' → logprob: -8.370335578918457
    7. '];' → logprob: -8.870335578918457
    8. '])
' → logprob: -8.995335578918457
    9. '.strip' → logprob: -9.745335578918457
    10. ' ]' → logprob: -10.120335578918457

Token 195: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.747814349073451e-05
    2. 'rstrip' → logprob: -11.125017166137695
    3. 'split' → logprob: -12.875017166137695
    4. ' strip' → logprob: -16.375017166137695
    5. 'isdigit' → logprob: -17.000017166137695
    6. 'str' → logprob: -18.500017166137695
    7. 'startswith' → logprob: -18.500017166137695
    8. 'astype' → logprob: -18.500017166137695
    9. '_strip' → logprob: -18.500017166137695
    10. '```' → logprob: -18.625017166137695

Token 196: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020115631923545152
    2. '()
' → logprob: -9.250201225280762
    3. '(' → logprob: -9.625201225280762
    4. '().' → logprob: -11.125201225280762
    5. '('' → logprob: -11.375201225280762
    6. '()`' → logprob: -12.625201225280762
    7. '();' → logprob: -13.375201225280762
    8. '()

' → logprob: -13.875201225280762
    9. '()"' → logprob: -14.000201225280762
    10. ' ()' → logprob: -14.125201225280762

Token 197: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' idx' (ID: 14016)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.599465012550354
    2. 'if' → logprob: -1.349465012550354
    3. '<|end|>' → logprob: -2.2244648933410645
    4. ' =' → logprob: -3.9744648933410645
    5. ')' → logprob: -4.3494648933410645
    6. '<|end|>' → logprob: -4.5994648933410645
    7. ' ' → logprob: -4.7244648933410645
    8. '()' → logprob: -5.2244648933410645
    9. '
' → logprob: -5.4744648933410645
    10. '=' → logprob: -5.4744648933410645

Token 199: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03281591460108757
    2. ' +=' → logprob: -3.907815933227539
    3. '+' → logprob: -4.407815933227539
    4. '=' → logprob: -12.282815933227539
    5. '++' → logprob: -12.657815933227539
    6. '+="' → logprob: -12.782815933227539
    7. '+='' → logprob: -13.157815933227539
    8. ']+=' → logprob: -13.407815933227539
    9. ')' → logprob: -14.032815933227539
    10. '```' → logprob: -14.282815933227539

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -21.37509536743164
    4. '
' → logprob: -21.50009536743164
    5. '１' → logprob: -21.87509536743164
    6. '   ' → logprob: -22.12509536743164
    7. ' ' → logprob: -22.37509536743164
    8. '0' → logprob: -23.00009536743164
    9. '۱' → logprob: -23.25009536743164
    10. ' 
' → logprob: -23.62509536743164

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -20.875001907348633
    4. '0' → logprob: -21.500001907348633
    5. '
' → logprob: -21.750001907348633
    6. '１' → logprob: -21.750001907348633
    7. '۱' → logprob: -23.000001907348633
    8. '-' → logprob: -23.000001907348633
    9. '   ' → logprob: -23.062501907348633
    10. '`' → logprob: -23.187501907348633

Token 202: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3160448670387268
    2. '
' → logprob: -1.816044807434082
    3. ' if' → logprob: -2.441044807434082
    4. '       ' → logprob: -4.316044807434082
    5. '=' → logprob: -6.316044807434082
    6. ' 
' → logprob: -6.691044807434082
    7. '<|end|>' → logprob: -6.691044807434082
    8. '        
' → logprob: -6.816044807434082
    9. ' =' → logprob: -7.066044807434082
    10. '\n' → logprob: -8.441044807434082

Token 203: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07042641192674637
    2. ' if' → logprob: -2.8204264640808105
    3. '       ' → logprob: -5.1954264640808105
    4. '   ' → logprob: -6.4454264640808105
    5. 'n' → logprob: -7.5704264640808105
    6. '\n' → logprob: -8.195425987243652
    7. '        
' → logprob: -9.195425987243652
    8. '
' → logprob: -9.445425987243652
    9. ' 
' → logprob: -9.445425987243652
    10. '<|end|>' → logprob: -10.070425987243652

Token 204: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003163969377055764
    2. ' if' → logprob: -8.125316619873047
    3. 'n' → logprob: -11.625316619873047
    4. '       ' → logprob: -12.000316619873047
    5. 'i' → logprob: -12.250316619873047
    6. 'try' → logprob: -16.375316619873047
    7. '
' → logprob: -16.625316619873047
    8. 'If' → logprob: -16.875316619873047
    9. '```' → logprob: -17.000316619873047
    10. '   ' → logprob: -17.500316619873047

Token 205: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04538857936859131
    2. ' not' → logprob: -3.795388698577881
    3. ' n' → logprob: -4.295388698577881
    4. 'not' → logprob: -4.795388698577881
    5. 'n't' → logprob: -14.795388221740723
    6. ' ' → logprob: -15.170388221740723
    7. '	n' → logprob: -15.795388221740723
    8. '   ' → logprob: -18.17038917541504
    9. '!' → logprob: -18.54538917541504
    10. '	not' → logprob: -18.67038917541504

Token 206: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029784973710775375
    2. '==' → logprob: -3.529784917831421
    3. ' =' → logprob: -10.90478515625
    4. '=' → logprob: -11.40478515625
    5. '.strip' → logprob: -13.27978515625
    6. ' ' → logprob: -13.40478515625
    7. ')==' → logprob: -14.90478515625
    8. ')' → logprob: -15.40478515625
    9. '()==' → logprob: -15.52978515625
    10. ' ===' → logprob: -15.77978515625

Token 207: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0035056343767791986
    2. '"' → logprob: -5.878505706787109
    3. '0' → logprob: -7.628505706787109
    4. ' '' → logprob: -8.50350570678711
    5. ''A' → logprob: -13.00350570678711
    6. ''O' → logprob: -13.00350570678711
    7. ' ' → logprob: -13.12850570678711
    8. '''' → logprob: -13.37850570678711
    9. ''end' → logprob: -14.00350570678711
    10. ''q' → logprob: -14.62850570678711

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026383911608718336
    2. ''' → logprob: -8.250264167785645
    3. ' ' → logprob: -13.375264167785645
    4. '"' → logprob: -14.000264167785645
    5. 'END' → logprob: -16.500263214111328
    6. '#' → logprob: -18.250263214111328
    7. '```' → logprob: -18.375263214111328
    8. '''' → logprob: -18.500263214111328
    9. ' '' → logprob: -18.625263214111328
    10. 'EOF' → logprob: -18.750263214111328

Token 209: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.051011573523283005
    2. '':
' → logprob: -3.051011562347412
    3. ''' → logprob: -6.051011562347412
    4. '':
' → logprob: -10.30101203918457
    5. ':' → logprob: -10.80101203918457
    6. '":' → logprob: -12.67601203918457
    7. ':
' → logprob: -12.92601203918457
    8. ''):
' → logprob: -13.30101203918457
    9. '<|end|>' → logprob: -13.92601203918457
    10. '':'' → logprob: -14.42601203918457

Token 210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013858173042535782
    2. '       ' → logprob: -9.000138282775879
    3. '          ' → logprob: -12.125138282775879
    4. ' break' → logprob: -13.000138282775879
    5. '		' → logprob: -13.500138282775879
    6. '   ' → logprob: -13.750138282775879
    7. '	       ' → logprob: -14.000138282775879
    8. '               ' → logprob: -14.000138282775879
    9. '         ' → logprob: -14.375138282775879
    10. ':' → logprob: -14.500138282775879

Token 211: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6360629200935364
    2. '           ' → logprob: -0.8860629200935364
    3. ' break' → logprob: -2.8860628604888916
    4. '       ' → logprob: -6.386063098907471
    5. '	break' → logprob: -7.761063098907471
    6. 'return' → logprob: -8.011062622070312
    7. '               ' → logprob: -9.636062622070312
    8. '```' → logprob: -11.261062622070312
    9. '   ' → logprob: -11.636062622070312
    10. '		' → logprob: -11.636062622070312

Token 212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013848782982677221
    2. 'n' → logprob: -7.376384735107422
    3. '        
' → logprob: -8.001384735107422
    4. '<|end|>' → logprob: -8.626384735107422
    5. ' n' → logprob: -9.126384735107422
    6. '
' → logprob: -9.751384735107422
    7. ',' → logprob: -10.376384735107422
    8. '        ' → logprob: -11.126384735107422
    9. '   ' → logprob: -11.876384735107422
    10. '      ' → logprob: -12.251384735107422

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036887938622385263
    2. '        
' → logprob: -6.253688812255859
    3. 'n' → logprob: -7.753688812255859
    4. ' n' → logprob: -7.753688812255859
    5. '<|end|>' → logprob: -7.878688812255859
    6. '        ' → logprob: -8.25368881225586
    7. '
' → logprob: -9.37868881225586
    8. '   ' → logprob: -10.25368881225586
    9. '    ' → logprob: -10.50368881225586
    10. '      ' → logprob: -11.00368881225586

Token 214: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.69352126121521
    2. ' n' → logprob: -0.69352126121521
    3. '       ' → logprob: -7.943521499633789
    4. '   ' → logprob: -11.693521499633789
    5. '        
' → logprob: -12.568521499633789
    6. '	n' → logprob: -13.693521499633789
    7. ' 
' → logprob: -13.943521499633789
    8. 'try' → logprob: -14.068521499633789
    9. ',n' → logprob: -14.193521499633789
    10. ' try' → logprob: -14.318521499633789

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47409141063690186
    2. '=' → logprob: -0.9740914106369019
    3. '=int' → logprob: -11.224091529846191
    4. ' ' → logprob: -14.099091529846191
    5. ' =
' → logprob: -16.224090576171875
    6. 'int' → logprob: -16.474090576171875
    7. ')' → logprob: -17.599090576171875
    8. '=
' → logprob: -17.849090576171875
    9. ' ' → logprob: -17.849090576171875
    10. 'n' → logprob: -18.099090576171875

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804149478673935
    2. ' int' → logprob: -3.288041591644287
    3. '[int' → logprob: -22.163042068481445
    4. '(int' → logprob: -22.413042068481445
    5. ' ' → logprob: -22.663042068481445
    6. '=int' → logprob: -23.288042068481445
    7. '<int' → logprob: -23.788042068481445
    8. '	int' → logprob: -24.413042068481445
    9. ':int' → logprob: -25.538042068481445
    10. '   ' → logprob: -26.038042068481445

Token 217: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012451570364646614
    2. '(' → logprob: -9.00012493133545
    3. ' (' → logprob: -14.12512493133545
    4. 'n' → logprob: -14.87512493133545
    5. '(
' → logprob: -18.375123977661133
    6. ')' → logprob: -19.125123977661133
    7. ')n' → logprob: -19.125123977661133
    8. ' n' → logprob: -19.500123977661133
    9. '```' → logprob: -20.875123977661133
    10. '((' → logprob: -21.250123977661133

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6656825866666622e-05
    2. ')
' → logprob: -10.62502670288086
    3. '<|end|>' → logprob: -13.62502670288086
    4. ' )' → logprob: -14.12502670288086
    5. '       ' → logprob: -15.50002670288086
    6. '   ' → logprob: -17.12502670288086
    7. '<|end|>' → logprob: -17.12502670288086
    8. '))' → logprob: -17.75002670288086
    9. ')

' → logprob: -18.12502670288086
    10. ')#' → logprob: -18.12502670288086

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10053574293851852
    2. ' points' → logprob: -2.6005356311798096
    3. 'points' → logprob: -4.725535869598389
    4. ' vectors' → logprob: -5.225535869598389
    5. '        
' → logprob: -5.725535869598389
    6. '   ' → logprob: -6.850535869598389
    7. 'vectors' → logprob: -6.850535869598389
    8. '	points' → logprob: -7.850535869598389
    9. ' angles' → logprob: -8.85053539276123
    10. '    
' → logprob: -8.85053539276123

Token 220: ' stars' (ID: 13701)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.49410027265548706
    2. 'vectors' → logprob: -1.3691003322601318
    3. ' points' → logprob: -2.744100332260132
    4. ' vectors' → logprob: -4.119100093841553
    5. 'vec' → logprob: -4.619100093841553
    6. 'vertices' → logprob: -4.994100093841553
    7. 'positions' → logprob: -5.494100093841553
    8. 'stars' (adapté à ' stars') → logprob: -5.744100093841553
    9. 'dire' → logprob: -5.744100093841553
    10. 'faces' → logprob: -5.869100093841553

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11294475197792053
    2. '=' → logprob: -2.2379448413848877
    3. '_vectors' → logprob: -10.737944602966309
    4. 's' → logprob: -10.862944602966309
    5. '_angles' → logprob: -10.987944602966309
    6. '_positions' → logprob: -11.362944602966309
    7. ',' → logprob: -11.487944602966309
    8. '_coords' → logprob: -11.612944602966309
    9. '_points' → logprob: -11.737944602966309
    10. '=[]' → logprob: -12.237944602966309

Token 222: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3133096992969513
    2. ' []' → logprob: -1.313309669494629
    3. '[' → logprob: -10.313309669494629
    4. ' [' → logprob: -11.313309669494629
    5. '[]
' → logprob: -13.563309669494629
    6. '[]>' → logprob: -15.188309669494629
    7. '[]}' → logprob: -15.188309669494629
    8. '[],' → logprob: -15.438309669494629
    9. ' []
' → logprob: -15.563309669494629
    10. '[n' → logprob: -16.063310623168945

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027648175600916147
    2. ' for' → logprob: -6.127764701843262
    3. 'for' → logprob: -8.377764701843262
    4. '<|end|>' → logprob: -8.502764701843262
    5. '	' → logprob: -10.127764701843262
    6. '
' → logprob: -10.502764701843262
    7. '	for' → logprob: -10.502764701843262
    8. '   ' → logprob: -10.877764701843262
    9. '        
' → logprob: -11.002764701843262
    10. '	   ' → logprob: -12.127764701843262

Token 224: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00028064317302778363
    2. ' for' → logprob: -8.250280380249023
    3. '       ' → logprob: -10.875280380249023
    4. '   ' → logprob: -15.125280380249023
    5. '	for' → logprob: -16.625280380249023
    6. '```' → logprob: -20.000280380249023
    7. ' ' → logprob: -20.500280380249023
    8. '
' → logprob: -20.500280380249023
    9. 'while' → logprob: -21.625280380249023
    10. 'from' → logprob: -21.750280380249023

Token 225: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03119659051299095
    2. ' _' → logprob: -3.5311965942382812
    3. ' i' → logprob: -6.781196594238281
    4. '_i' → logprob: -8.281196594238281
    5. 'i' → logprob: -9.781196594238281
    6. ' ' → logprob: -15.281196594238281
    7. ' ' → logprob: -16.40619659423828
    8. '	i' → logprob: -18.65619659423828
    9. '_]' → logprob: -19.53119659423828
    10. '_=' → logprob: -19.78119659423828

Token 226: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2509143054485321
    2. 'in' → logprob: -2.0009143352508545
    3. ' in' → logprob: -2.5009143352508545
    4. ' range' → logprob: -5.375914096832275
    5. ' ' → logprob: -10.500914573669434
    6. 'i' → logprob: -10.875914573669434
    7. '  ' → logprob: -12.500914573669434
    8. '0' → logprob: -13.000914573669434
    9. '   ' → logprob: -13.500914573669434
    10. '	range' → logprob: -13.750914573669434

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -18.50009536743164
    4. '	range' → logprob: -19.25009536743164
    5. ' ' → logprob: -20.25009536743164
    6. '```' → logprob: -21.12509536743164
    7. 'ange' → logprob: -21.37509536743164
    8. '  ' → logprob: -21.37509536743164
    9. '   ' → logprob: -21.87509536743164
    10. 'in' → logprob: -22.12509536743164

Token 228: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005533146671950817
    2. ' (' → logprob: -5.755533218383789
    3. '(' → logprob: -6.255533218383789
    4. ' n' → logprob: -8.380533218383789
    5. 'n' → logprob: -8.505533218383789
    6. '(
' → logprob: -14.755533218383789
    7. '(range' → logprob: -14.755533218383789
    8. ' ' → logprob: -15.005533218383789
    9. 'range' → logprob: -17.13053321838379
    10. ' in' → logprob: -17.25553321838379

Token 229: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.387018620967865
    2. '):
' → logprob: -1.1370186805725098
    3. '):
' → logprob: -10.012018203735352
    4. ':' → logprob: -10.387018203735352
    5. ' ):' → logprob: -10.637018203735352
    6. '       ' → logprob: -11.262018203735352
    7. ' ):
' → logprob: -11.387018203735352
    8. ':
' → logprob: -11.637018203735352
    9. '   ' → logprob: -12.387018203735352
    10. '):

' → logprob: -12.512018203735352

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031793788075447083
    2. '   ' → logprob: -5.878179550170898
    3. '	       ' → logprob: -9.628179550170898
    4. '<|end|>' → logprob: -9.628179550170898
    5. '       ' → logprob: -10.128179550170898
    6. '<|end|>' → logprob: -10.503179550170898
    7. ',' → logprob: -10.628179550170898
    8. '            
' → logprob: -10.753179550170898
    9. ' line' → logprob: -10.753179550170898
    10. '    	   ' → logprob: -11.003179550170898

Token 231: ' sx' (ID: 39428)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.310115784406662
    2. 'coords' → logprob: -2.6851158142089844
    3. 'line' → logprob: -2.8101158142089844
    4. 'parts' → logprob: -3.1851158142089844
    5. ' parts' → logprob: -3.3101158142089844
    6. 'ra' → logprob: -3.9351158142089844
    7. 'lat' → logprob: -4.685115814208984
    8. 'xyz' → logprob: -4.810115814208984
    9. '           ' → logprob: -5.060115814208984
    10. ' x' → logprob: -5.060115814208984

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3541160523891449
    2. '=' → logprob: -1.7291160821914673
    3. ' =' → logprob: -2.2291159629821777
    4. ' ,' → logprob: -5.604115962982178
    5. '_line' → logprob: -5.854115962982178
    6. '=line' → logprob: -5.979115962982178
    7. 's' → logprob: -6.979115962982178
    8. ',line' → logprob: -7.229115962982178
    9. ',s' → logprob: -7.979115962982178
    10. ')' → logprob: -8.229116439819336

Token 233: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.0009143244242295623
    2. ' sy' → logprob: -7.000914096832275
    3. 's' → logprob: -13.875914573669434
    4. 'syz' → logprob: -14.250914573669434
    5. '_sy' → logprob: -14.625914573669434
    6. 'sys' → logprob: -15.000914573669434
    7. 'sych' → logprob: -15.875914573669434
    8. 'sx' → logprob: -16.125913619995117
    9. '   ' → logprob: -16.750913619995117
    10. 'syn' → logprob: -17.375913619995117

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4617256056226324e-05
    2. ' ,' → logprob: -11.500014305114746
    3. '=' → logprob: -12.875014305114746
    4. ',s' → logprob: -14.000014305114746
    5. '<|end|>' → logprob: -14.625014305114746
    6. 's' → logprob: -15.875014305114746
    7. ',user' → logprob: -16.500015258789062
    8. ' =' → logprob: -16.500015258789062
    9. '<|end|>' → logprob: -16.750015258789062
    10. '‌,' → logprob: -17.000015258789062

Token 235: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.020570967346429825
    2. ' sz' → logprob: -3.895570993423462
    3. 's' → logprob: -11.270570755004883
    4. 'sx' → logprob: -12.145570755004883
    5. '(sz' → logprob: -12.770570755004883
    6. ' ' → logprob: -12.770570755004883
    7. '_sz' → logprob: -13.270570755004883
    8. 'syz' → logprob: -14.270570755004883
    9. ' s' → logprob: -14.520570755004883
    10. '.sz' → logprob: -14.895570755004883

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. ',' → logprob: -14.813262939453125
    4. ' ' → logprob: -16.438262939453125
    5. '=line' → logprob: -16.438262939453125
    6. '=input' → logprob: -16.563262939453125
    7. '=int' → logprob: -16.688262939453125
    8. ')' → logprob: -17.438262939453125
    9. '＝' → logprob: -17.563262939453125
    10. ')=' → logprob: -17.813262939453125

Token 237: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20154023170471191
    2. ' map' → logprob: -1.701540231704712
    3. 'input' → logprob: -9.076539993286133
    4. ' input' → logprob: -11.701539993286133
    5. '   ' → logprob: -12.951539993286133
    6. 'list' → logprob: -13.701539993286133
    7. '	map' → logprob: -15.201539993286133
    8. '(map' → logprob: -15.326539993286133
    9. '[' → logprob: -16.076539993286133
    10. '    ' → logprob: -16.201539993286133

Token 238: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.004161622375249863
    2. 'float' → logprob: -5.504161834716797
    3. '(' → logprob: -9.629161834716797
    4. '(lambda' → logprob: -11.754161834716797
    5. ',float' → logprob: -12.879161834716797
    6. ' float' → logprob: -12.879161834716797
    7. '(int' → logprob: -13.254161834716797
    8. '<float' → logprob: -14.004161834716797
    9. '=float' → logprob: -14.504161834716797
    10. '(str' → logprob: -14.754161834716797

Token 239: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.11554273962974548
    2. ',input' → logprob: -2.4905426502227783
    3. 'input' → logprob: -4.115542888641357
    4. ',' → logprob: -4.740542888641357
    5. ')' → logprob: -7.115542888641357
    6. '(' → logprob: -8.2405424118042
    7. ' input' → logprob: -9.8655424118042
    8. '<|end|>' → logprob: -10.2405424118042
    9. '=input' → logprob: -11.9905424118042
    10. ' (' → logprob: -11.9905424118042

Token 240: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011048054322600365
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -15.886048316955566
    4. ')' → logprob: -16.51104736328125
    5. '	input' → logprob: -17.01104736328125
    6. '   ' → logprob: -17.76104736328125
    7. ',input' → logprob: -17.88604736328125
    8. '[input' → logprob: -18.01104736328125
    9. ' ' → logprob: -18.38604736328125
    10. '=input' → logprob: -19.38604736328125

Token 241: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.3663626305060461e-05
    2. '(lines' → logprob: -11.62501335144043
    3. '().' → logprob: -13.00001335144043
    4. 'Lines' → logprob: -14.12501335144043
    5. 'lines' → logprob: -14.50001335144043
    6. ' lines' → logprob: -15.12501335144043
    7. '()' → logprob: -15.37501335144043
    8. '(' → logprob: -15.37501335144043
    9. ')' → logprob: -15.62501335144043
    10. '_line' → logprob: -16.50001335144043

Token 242: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.25000286102295
    3. ')[' → logprob: -15.50000286102295
    4. ' [' → logprob: -15.62500286102295
    5. 'idx' → logprob: -15.87500286102295
    6. '[index' → logprob: -16.250001907348633
    7. '[id' → logprob: -16.375001907348633
    8. '[input' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.125001907348633
    10. '[ind' → logprob: -17.625001907348633

Token 243: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.141186450899113e-05
    2. ' ].' → logprob: -11.375020980834961
    3. ']' → logprob: -12.000020980834961
    4. '[idx' → logprob: -13.375020980834961
    5. '.strip' → logprob: -13.500020980834961
    6. '][' → logprob: -14.750020980834961
    7. '.split' → logprob: -16.12502098083496
    8. '   ' → logprob: -16.62502098083496
    9. '()].' → logprob: -16.87502098083496
    10. ' ' → logprob: -16.87502098083496

Token 244: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.006716436706483364
    2. 'split' → logprob: -5.006716251373291
    3. ' strip' → logprob: -14.00671672821045
    4. '.strip' → logprob: -15.50671672821045
    5. ' split' → logprob: -19.381715774536133
    6. 'rstrip' → logprob: -20.256715774536133
    7. '(strip' → logprob: -21.131715774536133
    8. '-strip' → logprob: -21.506715774536133
    9. '_strip' → logprob: -21.506715774536133
    10. '.split' → logprob: -22.756715774536133

Token 245: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.935296834039036e-06
    2. '()' → logprob: -12.75000286102295
    3. ' ().' → logprob: -18.000003814697266
    4. '()
' → logprob: -20.375003814697266
    5. ')' → logprob: -21.750003814697266
    6. '()).' → logprob: -22.000003814697266
    7. '())' → logprob: -22.125003814697266
    8. '(' → logprob: -22.125003814697266
    9. '().'' → logprob: -22.250003814697266
    10. '.split' → logprob: -22.250003814697266

Token 246: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.246537173457909e-06
    2. ' split' → logprob: -12.500003814697266
    3. '.split' → logprob: -15.125003814697266
    4. '(split' → logprob: -15.750003814697266
    5. 'rstrip' → logprob: -18.375003814697266
    6. ')' → logprob: -19.500003814697266
    7. '_split' → logprob: -19.750003814697266
    8. 'strip' → logprob: -20.750003814697266
    9. 'spl' → logprob: -20.750003814697266
    10. 'plit' → logprob: -21.625003814697266

Token 247: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00328370975330472
    2. '()' → logprob: -5.878283500671387
    3. '())
' → logprob: -8.253283500671387
    4. '()))' → logprob: -9.003283500671387
    5. '('' → logprob: -9.878283500671387
    6. ')' → logprob: -10.503283500671387
    7. ' ())' → logprob: -11.628283500671387
    8. '()
' → logprob: -12.503283500671387
    9. '()))
' → logprob: -13.503283500671387
    10. '(' → logprob: -13.878283500671387

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1709718406200409
    2. '       ' → logprob: -2.6709718704223633
    3. '<|end|>' → logprob: -3.0459718704223633
    4. 'idx' → logprob: -3.4209718704223633
    5. '   ' → logprob: -6.170971870422363
    6. '[idx' → logprob: -6.670971870422363
    7. ' idx' → logprob: -6.920971870422363
    8. '<|end|>' → logprob: -7.295971870422363
    9. ' ' → logprob: -7.795971870422363
    10. '               ' → logprob: -7.920971870422363

Token 249: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.21429680287837982
    2. '           ' → logprob: -1.839296817779541
    3. ' idx' → logprob: -3.714296817779541
    4. 'stars' → logprob: -4.839296817779541
    5. ' stars' → logprob: -6.714296817779541
    6. '	idx' → logprob: -8.464296340942383
    7. '       ' → logprob: -8.589296340942383
    8. '   ' → logprob: -10.714296340942383
    9. '	       ' → logprob: -11.714296340942383
    10. '               ' → logprob: -11.714296340942383

Token 250: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.31326597929000854
    2. ' +=' → logprob: -1.3132660388946533
    3. '+' → logprob: -13.438265800476074
    4. ']+=' → logprob: -13.813265800476074
    5. '   ' → logprob: -14.063265800476074
    6. '    ' → logprob: -15.063265800476074
    7. '```' → logprob: -15.563265800476074
    8. '++' → logprob: -15.813265800476074
    9. ')' → logprob: -15.813265800476074
    10. '=' → logprob: -16.06326675415039

Token 251: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '```' → logprob: -18.750261306762695
    4. '   ' → logprob: -19.250261306762695
    5. '
' → logprob: -19.375261306762695
    6. '１' → logprob: -20.125261306762695
    7. '۱' → logprob: -21.312761306762695
    8. '3' → logprob: -21.562761306762695
    9. '0' → logprob: -21.875261306762695
    10. ' ' → logprob: -22.250261306762695

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.375001907348633
    4. '１' → logprob: -19.750001907348633
    5. '   ' → logprob: -19.812501907348633
    6. '
' → logprob: -19.812501907348633
    7. '۱' → logprob: -21.250001907348633
    8. '3' → logprob: -21.812501907348633
    9. '' → logprob: -21.937501907348633
    10. '

' → logprob: -22.250001907348633

Token 253: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009238175116479397
    2. '       ' → logprob: -5.384238243103027
    3. '   ' → logprob: -6.259238243103027
    4. ' stars' → logprob: -6.634238243103027
    5. 'stars' → logprob: -6.634238243103027
    6. '
' → logprob: -10.759238243103027
    7. '<|end|>' → logprob: -11.634238243103027
    8. '            
' → logprob: -12.259238243103027
    9. '          ' → logprob: -12.384238243103027
    10. '        
' → logprob: -12.384238243103027

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34636104106903076
    2. '       ' → logprob: -1.4713610410690308
    3. '   ' → logprob: -3.5963611602783203
    4. 'stars' → logprob: -3.9713611602783203
    5. ' stars' → logprob: -4.09636116027832
    6. ' star' → logprob: -10.72136116027832
    7. 's' → logprob: -10.84636116027832
    8. '        
' → logprob: -10.84636116027832
    9. 'star' → logprob: -10.84636116027832
    10. '<|end|>' → logprob: -10.84636116027832

Token 255: ' stars' (ID: 13701)
  Prédit: 'stars'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stars' (adapté à ' stars') → logprob: -0.3692651689052582
    2. ' stars' → logprob: -1.2442651987075806
    3. '           ' → logprob: -4.494265079498291
    4. 'v' → logprob: -5.119265079498291
    5. ' v' → logprob: -6.994265079498291
    6. 'vec' → logprob: -7.619265079498291
    7. 'star' → logprob: -7.619265079498291
    8. 's' → logprob: -8.11926555633545
    9. ' star' → logprob: -8.61926555633545
    10. 'direction' → logprob: -9.11926555633545

Token 256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024869535118341446
    2. '.' → logprob: -6.0024871826171875
    3. '.app' → logprob: -12.252487182617188
    4. '.ap' → logprob: -12.377487182617188
    5. 'append' → logprob: -13.752487182617188
    6. ' .' → logprob: -14.002487182617188
    7. '.extend' → logprob: -15.752487182617188
    8. '.add' → logprob: -16.752487182617188
    9. '=' → logprob: -17.377487182617188
    10. '.Append' → logprob: -17.627487182617188

Token 257: '(normal' (ID: 100011)
  Prédit: '(normal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(normal' → logprob: -0.051679376512765884
    2. 'normalize' → logprob: -3.0516793727874756
    3. '((' → logprob: -6.551679611206055
    4. ' (' → logprob: -7.551679611206055
    5. '(' → logprob: -7.676679611206055
    6. ' normalize' → logprob: -7.801679611206055
    7. '(s' → logprob: -8.301679611206055
    8. '(norm' → logprob: -12.926679611206055
    9. '(n' → logprob: -13.176679611206055
    10. 'normal' → logprob: -13.176679611206055

Token 258: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -10.250059127807617
    3. '(st' → logprob: -11.500059127807617
    4. '(s' → logprob: -12.250059127807617
    5. ' (' → logprob: -12.375059127807617
    6. 'iz' → logprob: -13.250059127807617
    7. ' ' → logprob: -14.625059127807617
    8. '((' → logprob: -15.000059127807617
    9. 'ized' → logprob: -15.000059127807617
    10. '   ' → logprob: -15.250059127807617

Token 259: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0029428747948259115
    2. '(s' → logprob: -6.00294303894043
    3. '(' → logprob: -7.87794303894043
    4. '([' → logprob: -9.37794303894043
    5. '(
' → logprob: -13.75294303894043
    6. ' (' → logprob: -14.00294303894043
    7. '(x' → logprob: -14.00294303894043
    8. ' ((' → logprob: -15.00294303894043
    9. ')' → logprob: -16.25294303894043
    10. '(([' → logprob: -16.50294303894043

Token 260: 'sx' (ID: 102754)
  Prédit: 'sx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sx' → logprob: -4.36574100604048e-06
    2. ' sx' → logprob: -12.375004768371582
    3. '   ' → logprob: -18.125003814697266
    4. ' ' → logprob: -18.750003814697266
    5. 'SX' → logprob: -19.375003814697266
    6. '
' → logprob: -20.000003814697266
    7. '(s' → logprob: -20.125003814697266
    8. '	s' → logprob: -20.250003814697266
    9. 's' → logprob: -20.500003814697266
    10. 'sz' → logprob: -20.875003814697266

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010579373920336366
    2. ' ,' → logprob: -7.126058101654053
    3. ',s' → logprob: -8.751057624816895
    4. ',
' → logprob: -9.376057624816895
    5. '<|end|>' → logprob: -12.751057624816895
    6. ',\
' → logprob: -13.126057624816895
    7. 'sy' → logprob: -14.126057624816895
    8. 's' → logprob: -14.251057624816895
    9. ',y' → logprob: -14.626057624816895
    10. '[' → logprob: -14.751057624816895

Token 262: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.018158607184886932
    2. ' sy' → logprob: -4.018158435821533
    3. 'syz' → logprob: -12.393158912658691
    4. ' ' → logprob: -13.643158912658691
    5. '_sy' → logprob: -14.018158912658691
    6. 'sys' → logprob: -14.143158912658691
    7. 's' → logprob: -15.018158912658691
    8. '   ' → logprob: -15.268158912658691
    9. '.sy' → logprob: -15.518158912658691
    10. 'sym' → logprob: -15.768158912658691

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012094692647224292
    2. ' ,' → logprob: -9.125121116638184
    3. ',
' → logprob: -11.875121116638184
    4. ',s' → logprob: -12.750121116638184
    5. '<|end|>' → logprob: -14.000121116638184
    6. '),' → logprob: -14.875121116638184
    7. ',

' → logprob: -15.250121116638184
    8. '
' → logprob: -16.000120162963867
    9. '```' → logprob: -16.375120162963867
    10. 'sz' → logprob: -16.375120162963867

Token 264: ' sz' (ID: 8515)
  Prédit: 'sz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sz' → logprob: -0.002812124788761139
    2. ' sz' → logprob: -5.877811908721924
    3. '(sz' → logprob: -12.502812385559082
    4. '_sz' → logprob: -14.502812385559082
    5. ' ' → logprob: -14.627812385559082
    6. 'Sz' → logprob: -14.627812385559082
    7. '
' → logprob: -14.752812385559082
    8. '   ' → logprob: -15.627812385559082
    9. '

' → logprob: -15.627812385559082
    10. '  ' → logprob: -15.877812385559082

Token 265: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00028386167832650244
    2. '))' → logprob: -8.250284194946289
    3. ')))
' → logprob: -11.375284194946289
    4. ')' → logprob: -11.500284194946289
    5. ')));' → logprob: -14.625284194946289
    6. ' ' → logprob: -15.125284194946289
    7. '))))' → logprob: -16.00028419494629
    8. ')))

' → logprob: -16.12528419494629
    9. '')))' → logprob: -17.37528419494629
    10. '))
' → logprob: -17.75028419494629

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14808757603168488
    2. '        
' → logprob: -2.898087501525879
    3. '   ' → logprob: -3.648087501525879
    4. 'max' → logprob: -3.773087501525879
    5. 'angles' → logprob: -5.148087501525879
    6. 'min' → logprob: -5.273087501525879
    7. '
' → logprob: -5.648087501525879
    8. '    
' → logprob: -5.898087501525879
    9. 'pairs' → logprob: -6.023087501525879
    10. ' max' → logprob: -6.398087501525879

Token 267: ' m' (ID: 284)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5104210376739502
    2. 'min' → logprob: -1.3854210376739502
    3. '       ' → logprob: -3.01042103767395
    4. 'for' → logprob: -3.51042103767395
    5. 'angles' → logprob: -4.635420799255371
    6. '   ' → logprob: -4.635420799255371
    7. 'best' → logprob: -5.010420799255371
    8. 'pairs' → logprob: -5.260420799255371
    9. ' max' → logprob: -5.385420799255371
    10. 'import' → logprob: -5.510420799255371

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804677724838257
    2. '=' → logprob: -3.2880468368530273
    3. ' ' → logprob: -12.663046836853027
    4. '=int' → logprob: -14.288046836853027
    5. '   ' → logprob: -14.413046836853027
    6. '  ' → logprob: -15.288046836853027
    7. '    ' → logprob: -15.288046836853027
    8. ',' → logprob: -15.913046836853027
    9. ' =
' → logprob: -16.03804588317871
    10. ')' → logprob: -16.78804588317871

Token 269: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4316510260105133
    2. ' int' → logprob: -1.056650996208191
    3. 'input' → logprob: -6.5566511154174805
    4. ' input' → logprob: -6.5566511154174805
    5. ' n' → logprob: -10.43165111541748
    6. 'n' → logprob: -10.55665111541748
    7. ' ' → logprob: -10.93165111541748
    8. '   ' → logprob: -11.55665111541748
    9. '0' → logprob: -11.93165111541748
    10. '1' → logprob: -12.43165111541748

Token 270: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.64839569455944e-05
    2. '(' → logprob: -10.250076293945312
    3. 'input' → logprob: -10.250076293945312
    4. ' (' → logprob: -12.125076293945312
    5. ' input' → logprob: -15.875076293945312
    6. ',input' → logprob: -17.250076293945312
    7. '=input' → logprob: -18.375076293945312
    8. '(
' → logprob: -18.375076293945312
    9. '[input' → logprob: -19.250076293945312
    10. '<input' → logprob: -19.750076293945312

Token 271: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.22627344727516174
    2. '_lines' → logprob: -1.6012734174728394
    3. 'input' → logprob: -7.351273536682129
    4. 'Lines' → logprob: -9.976273536682129
    5. '(lines' → logprob: -10.101273536682129
    6. '[input' → logprob: -10.101273536682129
    7. 'lines' → logprob: -10.476273536682129
    8. ')' → logprob: -11.476273536682129
    9. '(
' → logprob: -11.726273536682129
    10. '_input' → logprob: -11.976273536682129

Token 272: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.023957686498761177
    2. '(idx' → logprob: -3.8989577293395996
    3. '(input' → logprob: -5.8989577293396
    4. '[input' → logprob: -7.3989577293396
    5. ' (' → logprob: -10.523957252502441
    6. '[index' → logprob: -11.898957252502441
    7. 'idx' → logprob: -12.023957252502441
    8. '[' → logprob: -12.023957252502441
    9. ' idx' → logprob: -12.898957252502441
    10. '(inp' → logprob: -13.523957252502441

Token 273: '].' (ID: 1651)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.017859116196632385
    2. '].' → logprob: -4.142858982086182
    3. '])
' → logprob: -6.767858982086182
    4. ']' → logprob: -7.892858982086182
    5. ']);' → logprob: -8.64285945892334
    6. ')' → logprob: -10.14285945892334
    7. ' ])' → logprob: -10.39285945892334
    8. ')]' → logprob: -11.39285945892334
    9. '])+' → logprob: -11.76785945892334
    10. ']
' → logprob: -12.01785945892334

Token 274: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.320199877838604e-07
    2. ' strip' → logprob: -14.875
    3. 'split' → logprob: -16.75
    4. '.strip' → logprob: -18.25
    5. 'rstrip' → logprob: -18.375
    6. 'trim' → logprob: -19.875
    7. 'str' → logprob: -20.375
    8. '(strip' → logprob: -20.75
    9. 'stripe' → logprob: -21.0
    10. '_strip' → logprob: -21.0

Token 275: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06512507051229477
    2. ')
' → logprob: -2.815124988555908
    3. '())' → logprob: -6.065124988555908
    4. '())
' → logprob: -7.190124988555908
    5. '()' → logprob: -9.690125465393066
    6. '()
' → logprob: -11.440125465393066
    7. '))' → logprob: -14.065125465393066
    8. ')
' → logprob: -14.690125465393066
    9. ')

' → logprob: -15.065125465393066
    10. ' )' → logprob: -15.065125465393066

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018513008952140808
    2. '<|end|>' → logprob: -4.518513202667236
    3. 'idx' → logprob: -5.393513202667236
    4. '	idx' → logprob: -7.143513202667236
    5. '[idx' → logprob: -7.143513202667236
    6. ' idx' → logprob: -7.268513202667236
    7. '   ' → logprob: -8.143512725830078
    8. '<|end|>' → logprob: -9.268512725830078
    9. '
' → logprob: -9.518512725830078
    10. '#index' → logprob: -10.268512725830078

Token 277: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.03904685750603676
    2. ' idx' → logprob: -3.4140467643737793
    3. '       ' → logprob: -5.664046764373779
    4. '	idx' → logprob: -7.164046764373779
    5. '[idx' → logprob: -7.164046764373779
    6. '<|end|>' → logprob: -8.914047241210938
    7. '
' → logprob: -9.289047241210938
    8. '   ' → logprob: -9.914047241210938
    9. '_idx' → logprob: -10.039047241210938
    10. 'index' → logprob: -11.289047241210938

Token 278: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16022686660289764
    2. ' +=' → logprob: -1.910226821899414
    3. ']+=' → logprob: -13.285226821899414
    4. '+' → logprob: -14.160226821899414
    5. '```' → logprob: -15.785226821899414
    6. '   ' → logprob: -17.160226821899414
    7. '++' → logprob: -17.785226821899414
    8. '=' → logprob: -18.035226821899414
    9. ' ' → logprob: -18.285226821899414
    10. ' ' → logprob: -18.535226821899414

Token 279: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '0' → logprob: -20.12747573852539
    4. '```' → logprob: -20.75247573852539
    5. '１' → logprob: -21.12747573852539
    6. 'm' → logprob: -21.25247573852539
    7. ' m' → logprob: -21.50247573852539
    8. '   ' → logprob: -21.87747573852539
    9. ' ' → logprob: -22.62747573852539
    10. '
' → logprob: -22.68997573852539

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -18.6250057220459
    4. '```' → logprob: -19.1250057220459
    5. 'm' → logprob: -19.7500057220459
    6. '１' → logprob: -20.2500057220459
    7. '   ' → logprob: -21.5625057220459
    8. '۱' → logprob: -22.2500057220459
    9. '(' → logprob: -22.5625057220459
    10. '
' → logprob: -22.5625057220459

Token 281: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014017868088558316
    2. ' for' → logprob: -7.751401901245117
    3. '   ' → logprob: -8.501401901245117
    4. 'for' → logprob: -9.126401901245117
    5. ' stars' → logprob: -9.251401901245117
    6. 'angles' → logprob: -9.626401901245117
    7. 'stars' → logprob: -9.626401901245117
    8. '        
' → logprob: -9.751401901245117
    9. ' angles' → logprob: -9.751401901245117
    10. '    ' → logprob: -10.376401901245117

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018531967652961612
    2. 'stars' → logprob: -7.751852989196777
    3. 'angles' → logprob: -8.126852989196777
    4. 'points' → logprob: -8.251852989196777
    5. '   ' → logprob: -9.126852989196777
    6. 'queries' → logprob: -9.251852989196777
    7. 'for' → logprob: -9.626852989196777
    8. 'results' → logprob: -9.626852989196777
    9. 'targets' → logprob: -9.626852989196777
    10. ' stars' → logprob: -9.876852989196777

Token 283: ' telesc' (ID: 109816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46837174892425537
    2. 'queries' → logprob: -1.0933717489242554
    3. 'rot' → logprob: -5.218371868133545
    4. 'results' → logprob: -5.343371868133545
    5. 'points' → logprob: -5.843371868133545
    6. ' for' → logprob: -6.093371868133545
    7. 'angles' → logprob: -6.218371868133545
    8. 'matches' → logprob: -6.343371868133545
    9. 'commands' → logprob: -6.343371868133545
    10. 'query' → logprob: -6.468371868133545

Token 284: 'opes' (ID: 25986)
  Prédit: 'opes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opes' → logprob: -0.008195977658033371
    2. 'ope' → logprob: -5.133195877075195
    3. 'e' → logprob: -6.508195877075195
    4. 'es' → logprob: -7.383195877075195
    5. 'ops' → logprob: -9.758195877075195
    6. 'op' → logprob: -10.383195877075195
    7. '   ' → logprob: -11.383195877075195
    8. '```' → logprob: -11.633195877075195
    9. 'sc' → logprob: -12.133195877075195
    10. 'scope' → logprob: -12.133195877075195

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04303230345249176
    2. '=' → logprob: -3.16803240776062
    3. '=[]' → logprob: -10.7930326461792
    4. ',' → logprob: -12.2930326461792
    5. 's' → logprob: -13.5430326461792
    6. ' ' → logprob: -13.6680326461792
    7. 'space' → logprob: -13.9180326461792
    8. ' ,' → logprob: -14.2930326461792
    9. '.' → logprob: -14.7930326461792
    10. '[' → logprob: -14.9180326461792

Token 286: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07898419350385666
    2. '[]
' → logprob: -2.578984260559082
    3. ' []' → logprob: -9.328984260559082
    4. ' []
' → logprob: -12.578984260559082
    5. '[' → logprob: -13.328984260559082
    6. '[]

' → logprob: -14.578984260559082
    7. '   ' → logprob: -16.953983306884766
    8. '[]}' → logprob: -17.203983306884766
    9. ' ' → logprob: -18.328983306884766
    10. '[],' → logprob: -18.453983306884766

Token 287: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005210278555750847
    2. '<|end|>' → logprob: -6.1302103996276855
    3. '	' → logprob: -6.3802103996276855
    4. ' for' → logprob: -7.3802103996276855
    5. 'for' → logprob: -7.6302103996276855
    6. '	   ' → logprob: -9.255209922790527
    7. '   ' → logprob: -10.005209922790527
    8. '	for' → logprob: -10.630209922790527
    9. '<|end|>' → logprob: -11.255209922790527
    10. '[' → logprob: -11.380209922790527

Token 288: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006708591827191412
    2. ' for' → logprob: -7.625670909881592
    3. '       ' → logprob: -8.625670433044434
    4. '	for' → logprob: -13.000670433044434
    5. '<|end|>' → logprob: -13.750670433044434
    6. '   ' → logprob: -17.00067138671875
    7. '[' → logprob: -18.00067138671875
    8. '<|end|>' → logprob: -19.00067138671875
    9. '	' → logprob: -19.62567138671875
    10. '```' → logprob: -19.62567138671875

Token 289: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012682090746238828
    2. ' _' → logprob: -6.75126838684082
    3. '_i' → logprob: -9.25126838684082
    4. 'i' → logprob: -14.50126838684082
    5. '_j' → logprob: -14.87626838684082
    6. ' i' → logprob: -15.12626838684082
    7. '_t' → logprob: -15.12626838684082
    8. '_m' → logprob: -15.62626838684082
    9. '_in' → logprob: -16.25126838684082
    10. '_range' → logprob: -16.50126838684082

Token 290: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07366618514060974
    2. ' in' → logprob: -2.9486660957336426
    3. ' range' → logprob: -4.823666095733643
    4. 'range' → logprob: -4.948666095733643
    5. ' _' → logprob: -6.323666095733643
    6. 'in' → logprob: -6.448666095733643
    7. '_range' → logprob: -9.4486665725708
    8. ' ' → logprob: -11.3236665725708
    9. '_in' → logprob: -12.9486665725708
    10. '    ' → logprob: -13.0736665725708

Token 291: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132629990577698
    2. ' range' → logprob: -1.313262939453125
    3. '_' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.188262939453125
    5. '_range' → logprob: -15.313262939453125
    6. '	range' → logprob: -15.813262939453125
    7. '(range' → logprob: -16.438262939453125
    8. ' xrange' → logprob: -17.563262939453125
    9. ' in' → logprob: -18.063262939453125
    10. '    ' → logprob: -18.313262939453125

Token 292: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.018800033256411552
    2. 'm' → logprob: -4.018800258636475
    3. ' m' → logprob: -7.518800258636475
    4. ' (' → logprob: -9.268799781799316
    5. '(' → logprob: -12.143799781799316
    6. '	m' → logprob: -12.393799781799316
    7. '   ' → logprob: -12.893799781799316
    8. '    ' → logprob: -14.893799781799316
    9. ',m' → logprob: -15.518799781799316
    10. ' ' → logprob: -16.018800735473633

Token 293: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3242499828338623
    2. ':
' → logprob: -2.0742499828338623
    3. ':' → logprob: -2.6992499828338623
    4. '):' → logprob: -2.9492499828338623
    5. ',' → logprob: -3.9492499828338623
    6. '           ' → logprob: -5.324250221252441
    7. '       ' → logprob: -5.449250221252441
    8. '<|end|>' → logprob: -7.449250221252441
    9. '():
' → logprob: -7.824250221252441
    10. '   ' → logprob: -7.824250221252441

Token 294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2665596604347229
    2. 'tx' → logprob: -2.516559600830078
    3. ' sx' → logprob: -2.516559600830078
    4. ' tx' → logprob: -3.266559600830078
    5. 'sx' → logprob: -3.766559600830078
    6. 'ts' → logprob: -5.766559600830078
    7. 't' → logprob: -6.641559600830078
    8. '   ' → logprob: -6.891559600830078
    9. 'tsx' → logprob: -6.891559600830078
    10. 'x' → logprob: -7.266559600830078

Token 295: ' tx' (ID: 10400)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' (adapté à ' tx') → logprob: -0.04142589122056961
    2. 'ox' → logprob: -4.541425704956055
    3. 'dx' → logprob: -4.541425704956055
    4. ' tx' → logprob: -5.666425704956055
    5. 'sx' → logprob: -5.791425704956055
    6. 'rx' → logprob: -5.791425704956055
    7. 'x' → logprob: -5.791425704956055
    8. 'px' → logprob: -6.416425704956055
    9. 'qx' → logprob: -7.166425704956055
    10. 't' → logprob: -7.291425704956055

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.839121826691553e-05
    2. ' ,' → logprob: -9.625078201293945
    3. 'x' → logprob: -12.125078201293945
    4. 's' → logprob: -12.250078201293945
    5. ',s' → logprob: -14.125078201293945
    6. '<|end|>' → logprob: -15.625078201293945
    7. ',t' → logprob: -15.750078201293945
    8. ',line' → logprob: -16.000078201293945
    9. ',y' → logprob: -16.250078201293945
    10. ',user' → logprob: -16.375078201293945

Token 297: ' ty' (ID: 10890)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -0.029778147116303444
    2. ' ty' → logprob: -3.529778242111206
    3. '_ty' → logprob: -10.779778480529785
    4. 'tdy' → logprob: -12.529778480529785
    5. '<|end|>' → logprob: -14.029778480529785
    6. 'ti' → logprob: -15.029778480529785
    7. 'tyw' → logprob: -15.029778480529785
    8. ' ' → logprob: -15.154778480529785
    9. '  ' → logprob: -15.279778480529785
    10. '   ' → logprob: -15.654778480529785

Token 298: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -17.125001907348633
    4. '<|end|>' → logprob: -19.250001907348633
    5. '‌,' → logprob: -19.500001907348633
    6. '_,' → logprob: -20.375001907348633
    7. 't' → logprob: -20.625001907348633
    8. '،' → logprob: -20.750001907348633
    9. 'import' → logprob: -20.750001907348633
    10. ',tr' → logprob: -21.000001907348633

Token 299: ' tz' (ID: 76862)
  Prédit: 'tz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tz' → logprob: -0.008614926598966122
    2. ' tz' → logprob: -4.758615016937256
    3. 't' → logprob: -15.258614540100098
    4. 'tx' → logprob: -16.133615493774414
    5. ' ' → logprob: -17.508615493774414
    6. 'ts' → logprob: -17.633615493774414
    7. '
' → logprob: -18.633615493774414
    8. 'pz' → logprob: -18.883615493774414
    9. ' 
' → logprob: -19.008615493774414
    10. '	t' → logprob: -19.258615493774414

Token 300: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409379482269287
    2. ' =' → logprob: -0.9740937948226929
    3. ',' → logprob: -11.099093437194824
    4. '<|end|>' → logprob: -14.224093437194824
    5. ' ' → logprob: -14.724093437194824
    6. ' ,' → logprob: -15.349093437194824
    7. '<|end|>' → logprob: -15.724093437194824
    8. ')' → logprob: -16.34909439086914
    9. '=line' → logprob: -17.22409439086914
    10. ' ' → logprob: -17.97409439086914

Token 301: ' phi' (ID: 40391)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.3957377672195435
    2. 'f' → logprob: -1.7707377672195435
    3. 'tr' → logprob: -2.145737648010254
    4. ' r' → logprob: -2.770737648010254
    5. ' f' → logprob: -3.145737648010254
    6. ' tr' → logprob: -3.520737648010254
    7. 'qx' → logprob: -3.645737648010254
    8. 'angle' → logprob: -3.833237648010254
    9. 'fr' → logprob: -3.895737648010254
    10. 'fx' → logprob: -3.958237648010254

Token 302: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2524741590023041
    2. ' =' → logprob: -1.6274741888046265
    3. '=' → logprob: -3.627474069595337
    4. ' ,' → logprob: -10.127473831176758
    5. ')' → logprob: -10.377473831176758
    6. ' ' → logprob: -11.377473831176758
    7. '<|end|>' → logprob: -12.502473831176758
    8. 'd' → logprob: -13.002473831176758
    9. '1' → logprob: -13.127473831176758
    10. '_' → logprob: -13.252473831176758

Token 303: ' input' (ID: 3422)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.20158039033412933
    2. 'map' → logprob: -1.7015804052352905
    3. 'input' → logprob: -9.451580047607422
    4. ' input' → logprob: -9.451580047607422
    5. '*' → logprob: -12.576580047607422
    6. ' ' → logprob: -13.326580047607422
    7. '	map' → logprob: -13.451580047607422
    8. 'list' → logprob: -13.701580047607422
    9. ' list' → logprob: -13.826580047607422
    10. '
' → logprob: -14.951580047607422

Token 304: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.003391948528587818
    2. '[idx' → logprob: -6.753391742706299
    3. '_' → logprob: -7.628391742706299
    4. 'Lines' → logprob: -7.753391742706299
    5. '_,' → logprob: -8.753392219543457
    6. '[' → logprob: -8.753392219543457
    7. 'lines' → logprob: -9.003392219543457
    8. ')' → logprob: -9.253392219543457
    9. '(idx' → logprob: -9.253392219543457
    10. '```' → logprob: -9.253392219543457

Token 305: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.8232690460281447e-05
    2. 'idx' → logprob: -10.125048637390137
    3. ' idx' → logprob: -12.125048637390137
    4. '[' → logprob: -13.625048637390137
    5. '(idx' → logprob: -14.500048637390137
    6. '[i' → logprob: -15.125048637390137
    7. '
' → logprob: -15.250048637390137
    8. '	idx' → logprob: -15.375048637390137
    9. '```' → logprob: -16.00004768371582
    10. ' [' → logprob: -16.25004768371582

Token 306: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004735326394438744
    2. '.strip' → logprob: -5.379735469818115
    3. '.' → logprob: -9.754734992980957
    4. ' ].' → logprob: -10.254734992980957
    5. '().' → logprob: -11.629734992980957
    6. '.split' → logprob: -12.629734992980957
    7. ''].' → logprob: -12.879734992980957
    8. ']' → logprob: -13.254734992980957
    9. ').' → logprob: -13.379734992980957
    10. '           ' → logprob: -13.879734992980957

Token 307: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.1008713702030946e-06
    2. 'split' → logprob: -13.250001907348633
    3. ' strip' → logprob: -16.000001907348633
    4. '.strip' → logprob: -16.875001907348633
    5. 'rstrip' → logprob: -17.875001907348633
    6. 'stripe' → logprob: -20.750001907348633
    7. '_strip' → logprob: -21.125001907348633
    8. '(strip' → logprob: -21.125001907348633
    9. 'str' → logprob: -21.625001907348633
    10. 'trip' → logprob: -21.750001907348633

Token 308: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.421908958349377e-05
    2. '.split' → logprob: -9.62507438659668
    3. '.' → logprob: -11.87507438659668
    4. '()' → logprob: -14.12507438659668
    5. ' .' → logprob: -15.37507438659668
    6. ' ().' → logprob: -15.87507438659668
    7. ').' → logprob: -16.50007438659668
    8. ')' → logprob: -19.25007438659668
    9. '('').' → logprob: -19.25007438659668
    10. 'split' → logprob: -19.25007438659668

Token 309: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -15.75
    3. '(split' → logprob: -17.75
    4. '.split' → logprob: -18.25
    5. 'strip' → logprob: -18.75
    6. 'rstrip' → logprob: -19.375
    7. 'spl' → logprob: -20.375
    8. '_split' → logprob: -21.75
    9. '```' → logprob: -22.125
    10. 's' → logprob: -22.375

Token 310: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03580252826213837
    2. '<|end|>' → logprob: -3.7858026027679443
    3. '()
' → logprob: -5.160802364349365
    4. ')' → logprob: -5.785802364349365
    5. '<|end|>' → logprob: -6.285802364349365
    6. ',' → logprob: -6.785802364349365
    7. '(),' → logprob: -8.160802841186523
    8. '())' → logprob: -9.160802841186523
    9. '(' → logprob: -9.785802841186523
    10. '();' → logprob: -10.660802841186523

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3374820947647095
    2. '<|end|>' → logprob: -1.3374820947647095
    3. '<|end|>' → logprob: -1.9624820947647095
    4. '            
' → logprob: -2.71248197555542
    5. ',' → logprob: -2.83748197555542
    6. '       ' → logprob: -3.46248197555542
    7. '
' → logprob: -3.58748197555542
    8. ' 
' → logprob: -3.71248197555542
    9. ' =' → logprob: -3.96248197555542
    10. '		' → logprob: -3.96248197555542

Token 312: ' idx' (ID: 14016)
  Prédit: ' tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tx' → logprob: -0.5104665160179138
    2. 'tx' → logprob: -2.1354665756225586
    3. '           ' → logprob: -2.6354665756225586
    4. ' 
' → logprob: -2.6354665756225586
    5. ' idx' → logprob: -2.8854665756225586
    6. '
' → logprob: -3.8854665756225586
    7. 'idx' (adapté à ' idx') → logprob: -4.010466575622559
    8. '       ' → logprob: -4.885466575622559
    9. '	tx' → logprob: -5.010466575622559
    10. '		' → logprob: -5.260466575622559

Token 313: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026456352323293686
    2. '+=' → logprob: -3.651456356048584
    3. ' =' → logprob: -9.526455879211426
    4. ' ' → logprob: -10.276455879211426
    5. '=' → logprob: -10.776455879211426
    6. '    ' → logprob: -11.401455879211426
    7. '   ' → logprob: -11.776455879211426
    8. '```' → logprob: -13.526455879211426
    9. '            ' → logprob: -13.901455879211426
    10. ']+=' → logprob: -13.901455879211426

Token 314: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233763717114925
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.505233764648438
    4. '           ' → logprob: -18.255233764648438
    5. '```' → logprob: -18.755233764648438
    6. '１' → logprob: -19.505233764648438
    7. '0' → logprob: -19.567733764648438
    8. '       ' → logprob: -19.692733764648438
    9. ' ' → logprob: -20.130233764648438
    10. '
' → logprob: -20.630233764648438

Token 315: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. '           ' → logprob: -18.50020408630371
    5. '	' → logprob: -19.12520408630371
    6. '```' → logprob: -19.43770408630371
    7. '１' → logprob: -19.56270408630371
    8. '       ' → logprob: -20.00020408630371
    9. '0' → logprob: -20.25020408630371
    10. '
' → logprob: -20.56270408630371

Token 316: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017674198374152184
    2. '       ' → logprob: -4.517673969268799
    3. 'tx' → logprob: -5.892673969268799
    4. '   ' → logprob: -6.517673969268799
    5. ' tx' → logprob: -6.892673969268799
    6. '        ' → logprob: -8.767674446105957
    7. '            
' → logprob: -8.892674446105957
    8. '
' → logprob: -8.892674446105957
    9. '            ' → logprob: -9.142674446105957
    10. '<|end|>' → logprob: -9.142674446105957

Token 317: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019157715141773224
    2. '       ' → logprob: -4.769157886505127
    3. '   ' → logprob: -5.644157886505127
    4. 'tx' → logprob: -5.894157886505127
    5. ' tx' → logprob: -6.269157886505127
    6. '
' → logprob: -7.769157886505127
    7. '		' → logprob: -8.019157409667969
    8. '        ' → logprob: -8.019157409667969
    9. '            ' → logprob: -8.769157409667969
    10. 't' → logprob: -8.769157409667969

Token 318: ' t' (ID: 260)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.021449262276291847
    2. ' tx' → logprob: -4.021449089050293
    3. '           ' → logprob: -5.771449089050293
    4. '       ' → logprob: -9.396449089050293
    5. 't' (adapté à ' t') → logprob: -10.521449089050293
    6. '   ' → logprob: -10.521449089050293
    7. '	tx' → logprob: -11.771449089050293
    8. '(tx' → logprob: -12.396449089050293
    9. 'txn' → logprob: -12.896449089050293
    10. 'tp' → logprob: -13.271449089050293

Token 319: '_dir' (ID: 9526)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010390079842181876
    2. ' =' → logprob: -9.625103950500488
    3. '_x' → logprob: -10.500103950500488
    4. '=' → logprob: -12.125103950500488
    5. 'uple' → logprob: -13.875103950500488
    6. 'tx' → logprob: -14.250103950500488
    7. 'up' → logprob: -14.375103950500488
    8. 'xs' → logprob: -14.625103950500488
    9. 'rx' → logprob: -14.625103950500488
    10. ',' → logprob: -14.875103950500488

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932650208473206
    2. ' =' → logprob: -0.6932650208473206
    3. ',' → logprob: -9.068264961242676
    4. 'x' → logprob: -14.568264961242676
    5. '=float' → logprob: -14.693264961242676
    6. '   ' → logprob: -15.068264961242676
    7. '=(' → logprob: -15.068264961242676
    8. '=int' → logprob: -15.443264961242676
    9. ' ' → logprob: -15.568264961242676
    10. ')' → logprob: -15.818264961242676

Token 321: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.0042390236631035805
    2. ' normalize' → logprob: -5.504239082336426
    3. '(normal' → logprob: -8.879239082336426
    4. 'normal' → logprob: -11.504239082336426
    5. '(' → logprob: -11.754239082336426
    6. 'tuple' → logprob: -13.504239082336426
    7. 'normalized' → logprob: -14.629239082336426
    8. ' (' → logprob: -14.879239082336426
    9. '   ' → logprob: -15.004239082336426
    10. 'float' → logprob: -15.129239082336426

Token 322: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.17264124751091003
    2. '(' → logprob: -2.4226412773132324
    3. '(tuple' → logprob: -2.6726412773132324
    4. ' (' → logprob: -7.672641277313232
    5. '(float' → logprob: -8.422640800476074
    6. '(list' → logprob: -10.047640800476074
    7. '(map' → logprob: -10.172640800476074
    8. '(
' → logprob: -11.547640800476074
    9. '(eval' → logprob: -12.047640800476074
    10. '(('' → logprob: -12.672640800476074

Token 323: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.8444881536415778e-05
    2. ' float' → logprob: -10.750028610229492
    3. '(float' → logprob: -12.000028610229492
    4. '   ' → logprob: -15.000028610229492
    5. '	float' → logprob: -15.125028610229492
    6. ',float' → logprob: -16.125028610229492
    7. 'flo' → logprob: -17.000028610229492
    8. '<float' → logprob: -17.000028610229492
    9. '    ' → logprob: -17.875028610229492
    10. '=float' → logprob: -18.125028610229492

Token 324: '(tx' (ID: 54989)
  Prédit: 'tx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tx' → logprob: -0.5759445428848267
    2. '(tx' → logprob: -0.8259445428848267
    3. '(' → logprob: -13.200944900512695
    4. ' tx' → logprob: -13.450944900512695
    5. '	tx' → logprob: -13.450944900512695
    6. 'Tx' → logprob: -15.700944900512695
    7. '_tx' → logprob: -16.950944900512695
    8. ')' → logprob: -17.325944900512695
    9. '.tx' → logprob: -17.825944900512695
    10. '

' → logprob: -17.825944900512695

Token 325: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00012082771718269214
    2. ',' → logprob: -9.250121116638184
    3. ' ),' → logprob: -11.125121116638184
    4. ')' → logprob: -12.000121116638184
    5. '),
' → logprob: -13.500121116638184
    6. ' ' → logprob: -14.250121116638184
    7. '[' → logprob: -14.375121116638184
    8. '   ' → logprob: -15.125121116638184
    9. ' ,' → logprob: -15.125121116638184
    10. '),(' → logprob: -15.500121116638184

Token 326: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.023245826363563538
    2. ' float' → logprob: -3.7732458114624023
    3. ',float' → logprob: -15.773245811462402
    4. '=float' → logprob: -16.02324676513672
    5. '.float' → logprob: -16.89824676513672
    6. '(float' → logprob: -17.14824676513672
    7. '	float' → logprob: -17.27324676513672
    8. '<float' → logprob: -17.52324676513672
    9. '_float' → logprob: -17.64824676513672
    10. 'Float' → logprob: -19.39824676513672

Token 327: '(' (ID: 7)
  Prédit: 'ty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -7.553032628493384e-05
    2. ' ty' → logprob: -9.500075340270996
    3. '(' → logprob: -14.375075340270996
    4. ' (' → logprob: -17.500076293945312
    5. '_ty' → logprob: -17.625076293945312
    6. '   ' → logprob: -18.875076293945312
    7. '.ty' → logprob: -18.875076293945312
    8. ' ' → logprob: -19.500076293945312
    9. '    ' → logprob: -19.750076293945312
    10. '  ' → logprob: -19.750076293945312

Token 328: 'ty' (ID: 1206)
  Prédit: 'ty'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ty' → logprob: -9.698698704596609e-05
    2. ' ty' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.500097274780273
    4. '
' → logprob: -15.625097274780273
    5. ' ' → logprob: -15.875097274780273
    6. '  ' → logprob: -16.625097274780273
    7. '    ' → logprob: -16.625097274780273
    8. '     ' → logprob: -17.625097274780273
    9. '_ty' → logprob: -17.625097274780273
    10. '

' → logprob: -17.750097274780273

Token 329: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.016072377562522888
    2. ',' → logprob: -4.1410722732543945
    3. ')' → logprob: -10.891072273254395
    4. ' ),' → logprob: -11.891072273254395
    5. ' ,' → logprob: -12.391072273254395
    6. ',float' → logprob: -13.391072273254395
    7. '>,' → logprob: -13.641072273254395
    8. '),
' → logprob: -14.016072273254395
    9. '   ' → logprob: -14.141072273254395
    10. '},' → logprob: -14.391072273254395

Token 330: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0040785204619169235
    2. ' float' → logprob: -5.504078388214111
    3. '	float' → logprob: -17.379077911376953
    4. '(float' → logprob: -17.629077911376953
    5. '
' → logprob: -18.879077911376953
    6. ',float' → logprob: -19.004077911376953
    7. '=float' → logprob: -19.254077911376953
    8. '.float' → logprob: -19.504077911376953
    9. ' 
' → logprob: -19.629077911376953
    10. '   ' → logprob: -19.629077911376953

Token 331: '(t' (ID: 2025)
  Prédit: 'tz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tz' → logprob: -2.2603901015827432e-05
    2. ' tz' → logprob: -10.750022888183594
    3. '
' → logprob: -15.000022888183594
    4. '(t' → logprob: -15.000022888183594
    5. 'float' → logprob: -16.125022888183594
    6. '(' → logprob: -16.500022888183594
    7. '   ' → logprob: -17.125022888183594
    8. '0' → logprob: -17.125022888183594
    9. ' ' → logprob: -17.375022888183594
    10. '

' → logprob: -17.625022888183594

Token 332: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00010020548506872728
    2. 'tz' → logprob: -9.250100135803223
    3. 'oz' → logprob: -14.250100135803223
    4. 'az' → logprob: -14.500100135803223
    5. '   ' → logprob: -15.000100135803223
    6. 'iz' → logprob: -15.250100135803223
    7. 'pz' → logprob: -15.250100135803223
    8. 'з' → logprob: -15.500100135803223
    9. 'x' → logprob: -15.500100135803223
    10. ''z' → logprob: -15.750100135803223

Token 333: ')))
' (ID: 12562)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0036292888689786196
    2. ')' → logprob: -5.878629207611084
    3. ')))' → logprob: -7.128629207611084
    4. '),
' → logprob: -11.503629684448242
    5. '   ' → logprob: -12.378629684448242
    6. ' ),' → logprob: -12.878629684448242
    7. '))' → logprob: -13.628629684448242
    8. '),(' → logprob: -13.753629684448242
    9. '),

' → logprob: -14.003629684448242
    10. ',' → logprob: -14.003629684448242

Token 334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004297895822674036
    2. ',' → logprob: -6.379297733306885
    3. 'phi' → logprob: -6.504297733306885
    4. ' phi' → logprob: -7.504297733306885
    5. '<|end|>' → logprob: -8.254298210144043
    6. '       ' → logprob: -9.379298210144043
    7. ')' → logprob: -9.504298210144043
    8. '            
' → logprob: -10.129298210144043
    9. '          ' → logprob: -11.504298210144043
    10. '
' → logprob: -11.754298210144043

Token 335: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' (adapté à ' phi') → logprob: -0.00608142651617527
    2. '           ' → logprob: -5.756081581115723
    3. ' phi' → logprob: -7.131081581115723
    4. 't' → logprob: -7.256081581115723
    5. 'ph' → logprob: -7.756081581115723
    6. 'p' → logprob: -8.131081581115723
    7. 'angle' → logprob: -8.256081581115723
    8. 'theta' → logprob: -9.006081581115723
    9. 'f' → logprob: -9.381081581115723
    10. '   ' → logprob: -10.006081581115723

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386994332075119
    2. '=' → logprob: -1.1369943618774414
    3. '=float' → logprob: -9.386994361877441
    4. '_' → logprob: -10.636994361877441
    5. ' ' → logprob: -12.136994361877441
    6. '_float' → logprob: -13.011994361877441
    7. ')' → logprob: -13.261994361877441
    8. '_=' → logprob: -13.511994361877441
    9. 'f' → logprob: -13.886994361877441
    10. ',' → logprob: -14.136994361877441

Token 337: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.08350010216236115
    2. ' float' → logprob: -2.5835001468658447
    3. 'math' → logprob: -5.583499908447266
    4. ' math' → logprob: -7.083499908447266
    5. '=float' → logprob: -14.833499908447266
    6. 'int' → logprob: -14.958499908447266
    7. '(float' → logprob: -15.083499908447266
    8. '   ' → logprob: -15.208499908447266
    9. '	float' → logprob: -15.958499908447266
    10. ' ' → logprob: -16.833499908447266

Token 338: '(phi' (ID: 122099)
  Prédit: '(phi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(phi' → logprob: -6.885492621222511e-05
    2. '(' → logprob: -9.625068664550781
    3. 'phi' → logprob: -13.125068664550781
    4. ' (' → logprob: -14.750068664550781
    5. ' phi' → logprob: -15.500068664550781
    6. ')' → logprob: -16.25006866455078
    7. '(ph' → logprob: -18.50006866455078
    8. '_phi' → logprob: -18.62506866455078
    9. '(pi' → logprob: -19.25006866455078
    10. 'Phi' → logprob: -19.62506866455078

Token 339: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014132341311778873
    2. ')
' → logprob: -9.375141143798828
    3. ' )' → logprob: -10.250141143798828
    4. ')*' → logprob: -11.875141143798828
    5. '<|end|>' → logprob: -12.250141143798828
    6. '))' → logprob: -12.625141143798828
    7. '   ' → logprob: -13.000141143798828
    8. ')**' → logprob: -14.375141143798828
    9. ' ' → logprob: -14.500141143798828
    10. '<|end|>' → logprob: -14.875141143798828

Token 340: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01407911628484726
    2. '           ' → logprob: -4.8890790939331055
    3. '<|end|>' → logprob: -5.5140790939331055
    4. 't' → logprob: -6.6390790939331055
    5. '   ' → logprob: -7.8890790939331055
    6. ')' → logprob: -8.389079093933105
    7. '<|end|>' → logprob: -9.014079093933105
    8. '        
' → logprob: -9.264079093933105
    9. '	' → logprob: -10.264079093933105
    10. 'angles' → logprob: -10.264079093933105

Token 341: ' telesc' (ID: 109816)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8988449573516846
    2. 't' → logprob: -1.5238449573516846
    3. 'max' → logprob: -2.2738449573516846
    4. 'angle' → logprob: -2.5238449573516846
    5. 'angles' → logprob: -2.5238449573516846
    6. '           ' → logprob: -3.1488449573516846
    7. 'results' → logprob: -4.7738447189331055
    8. 'total' → logprob: -5.0238447189331055
    9. '   ' → logprob: -5.2738447189331055
    10. 'count' → logprob: -5.3988447189331055

Token 342: 'opes' (ID: 25986)
  Prédit: 'opes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opes' → logprob: -0.0011339050251990557
    2. 'sc' → logprob: -7.126133918762207
    3. 'esc' → logprob: -9.001133918762207
    4. '_sc' → logprob: -9.126133918762207
    5. 'es' → logprob: -10.501133918762207
    6. 'ops' → logprob: -11.376133918762207
    7. ')' → logprob: -11.376133918762207
    8. ' scopes' → logprob: -12.001133918762207
    9. '_scope' → logprob: -12.251133918762207
    10. '```' → logprob: -12.251133918762207

Token 343: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001628956088097766
    2. '.' → logprob: -8.750163078308105
    3. ' .' → logprob: -13.625163078308105
    4. '.app' → logprob: -14.000163078308105
    5. '=' → logprob: -14.375163078308105
    6. ' =' → logprob: -14.375163078308105
    7. '.extend' → logprob: -14.500163078308105
    8. '.ap' → logprob: -15.500163078308105
    9. 'append' → logprob: -15.750163078308105
    10. ').' → logprob: -15.750163078308105

Token 344: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0018833002541214228
    2. '(' → logprob: -6.751883506774902
    3. '(t' → logprob: -7.251883506774902
    4. ' (' → logprob: -12.876883506774902
    5. '   ' → logprob: -14.126883506774902
    6. ' ((' → logprob: -14.251883506774902
    7. '({'' → logprob: -17.126882553100586
    8. '(
' → logprob: -17.376882553100586
    9. '(((' → logprob: -17.376882553100586
    10. ' ' → logprob: -18.501882553100586

Token 345: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.1424973713001236e-05
    2. ' t' → logprob: -10.375031471252441
    3. '(t' → logprob: -16.000030517578125
    4. ')t' → logprob: -16.750030517578125
    5. '
' → logprob: -17.375030517578125
    6. '   ' → logprob: -17.625030517578125
    7. '`t' → logprob: -18.750030517578125
    8. '           ' → logprob: -19.000030517578125
    9. ')' → logprob: -19.250030517578125
    10. '	t' → logprob: -19.375030517578125

Token 346: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -7.703443770878948e-06
    2. 'dir' → logprob: -11.875007629394531
    3. '_DIR' → logprob: -16.00000762939453
    4. 't' → logprob: -16.50000762939453
    5. '_' → logprob: -16.87500762939453
    6. '-dir' → logprob: -17.12500762939453
    7. '_dirs' → logprob: -17.50000762939453
    8. '_d' → logprob: -17.50000762939453
    9. ' _' → logprob: -17.62500762939453
    10. '	dir' → logprob: -17.62500762939453

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',
' → logprob: -13.500028610229492
    4. ',float' → logprob: -17.500028610229492
    5. 'phi' → logprob: -17.875028610229492
    6. ',p' → logprob: -18.500028610229492
    7. '‌,' → logprob: -19.000028610229492
    8. ' phi' → logprob: -19.500028610229492
    9. ',

' → logprob: -20.125028610229492
    10. ',\
' → logprob: -20.375028610229492

Token 348: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.043014831840991974
    2. ' phi' → logprob: -3.1680147647857666
    3. 'math' → logprob: -11.543014526367188
    4. ' math' → logprob: -13.043014526367188
    5. '(phi' → logprob: -13.668014526367188
    6. '   ' → logprob: -14.668014526367188
    7. 'ph' → logprob: -14.668014526367188
    8. 'pi' → logprob: -14.793014526367188
    9. '           ' → logprob: -15.418014526367188
    10. ' ' → logprob: -15.418014526367188

Token 349: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006727445870637894
    2. ')' → logprob: -5.00672721862793
    3. '))
' → logprob: -11.50672721862793
    4. ')))' → logprob: -14.63172721862793
    5. '),' → logprob: -14.88172721862793
    6. ')
' → logprob: -14.88172721862793
    7. ' ))' → logprob: -15.25672721862793
    8. ',' → logprob: -15.25672721862793
    9. '   ' → logprob: -16.00672721862793
    10. '));' → logprob: -16.13172721862793

Token 350: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14722009003162384
    2. '       ' → logprob: -2.7722201347351074
    3. 'results' → logprob: -3.1472201347351074
    4. ' for' → logprob: -4.147220134735107
    5. '   ' → logprob: -4.772220134735107
    6. 'result' → logprob: -5.147220134735107
    7. ' results' → logprob: -8.52221965789795
    8. 'angles' → logprob: -8.77221965789795
    9. '        
' → logprob: -9.14721965789795
    10. '	for' → logprob: -9.27221965789795

Token 351: ' visible' (ID: 15263)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34394240379333496
    2. 'results' → logprob: -1.468942403793335
    3. 'answers' → logprob: -3.593942403793335
    4. 'result' → logprob: -4.968942642211914
    5. '       ' → logprob: -5.218942642211914
    6. 'angles' → logprob: -5.718942642211914
    7. 'coverage' → logprob: -5.968942642211914
    8. 'best' → logprob: -6.218942642211914
    9. 'res' → logprob: -6.343942642211914
    10. 'max' → logprob: -6.468942642211914

Token 352: ' =' (ID: 314)
  Prédit: '_counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.7804616093635559
    2. '_count' → logprob: -1.2804615497589111
    3. '=' → logprob: -1.6554615497589111
    4. ' =' → logprob: -2.905461549758911
    5. '_' → logprob: -5.03046178817749
    6. '_st' → logprob: -5.53046178817749
    7. 's' → logprob: -6.03046178817749
    8. 'count' → logprob: -6.40546178817749
    9. '_angles' → logprob: -6.53046178817749
    10. 'counts' → logprob: -7.53046178817749

Token 353: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3971979320049286
    2. '0' → logprob: -1.147197961807251
    3. '[' → logprob: -4.647197723388672
    4. 'set' → logprob: -8.397197723388672
    5. ' []' → logprob: -8.647197723388672
    6. '[]
' → logprob: -8.772197723388672
    7. ' ' → logprob: -9.397197723388672
    8. '[]

' → logprob: -11.772197723388672
    9. '[]}' → logprob: -11.897197723388672
    10. ' [' → logprob: -12.147197723388672

Token 354: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009381203912198544
    2. '(' → logprob: -4.884381294250488
    3. '()
' → logprob: -6.384381294250488
    4. '()\' → logprob: -10.134381294250488
    5. '(
' → logprob: -11.259381294250488
    6. '<|end|>' → logprob: -11.634381294250488
    7. '()

' → logprob: -11.884381294250488
    8. '();' → logprob: -12.509381294250488
    9. '       ' → logprob: -12.634381294250488
    10. '   ' → logprob: -13.634381294250488

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1633387953042984
    2. 'for' → logprob: -2.0383388996124268
    3. ' for' → logprob: -3.9133388996124268
    4. '	for' → logprob: -8.038338661193848
    5. '<|end|>' → logprob: -9.913338661193848
    6. '        
' → logprob: -10.163338661193848
    7. '   ' → logprob: -10.288338661193848
    8. '	' → logprob: -11.913338661193848
    9. '```' → logprob: -12.288338661193848
    10. '' → logprob: -12.663338661193848

Token 356: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0034398192074149847
    2. '       ' → logprob: -5.753439903259277
    3. ' for' → logprob: -8.253439903259277
    4. '	for' → logprob: -13.378439903259277
    5. '   ' → logprob: -16.00343894958496
    6. '```' → logprob: -17.87843894958496
    7. '        
' → logprob: -18.37843894958496
    8. '
' → logprob: -19.12843894958496
    9. '	' → logprob: -20.00343894958496
    10. '​' → logprob: -20.37843894958496

Token 357: ' i' (ID: 575)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.2821974754333496
    2. ' i' → logprob: -2.4071974754333496
    3. ' star' → logprob: -2.6571974754333496
    4. 't' → logprob: -3.0321974754333496
    5. 'i' → logprob: -4.28219747543335
    6. 'star' → logprob: -4.53219747543335
    7. ' telescope' → logprob: -5.03219747543335
    8. ' s' → logprob: -5.90719747543335
    9. ' (' → logprob: -7.03219747543335
    10. ' idx' → logprob: -7.53219747543335

Token 358: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03832099959254265
    2. 'in' → logprob: -3.288321018218994
    3. ',' → logprob: -8.663320541381836
    4. ' ' → logprob: -9.413320541381836
    5. ' ,' → logprob: -11.913320541381836
    6. '	in' → logprob: -12.288320541381836
    7. 'star' → logprob: -13.163320541381836
    8. ' star' → logprob: -13.413320541381836
    9. '_in' → logprob: -13.663320541381836
    10. '0' → logprob: -13.788320541381836

Token 359: ' s' (ID: 265)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.24972160160541534
    2. ' (' → logprob: -1.624721646308899
    3. '(st' → logprob: -4.499721527099609
    4. '(s' → logprob: -5.374721527099609
    5. '(' → logprob: -5.749721527099609
    6. 'star' → logprob: -6.124721527099609
    7. 't' → logprob: -6.499721527099609
    8. '((' → logprob: -7.999721527099609
    9. ' star' → logprob: -8.62472152709961
    10. 's' → logprob: -8.87472152709961

Token 360: '_dir' (ID: 9526)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3360650539398193
    2. ' in' → logprob: -1.3360650539398193
    3. 'in' → logprob: -1.5860650539398193
    4. '_dir' → logprob: -1.8360650539398193
    5. ',' → logprob: -2.3360650539398193
    6. 's' → logprob: -5.086065292358398
    7. 'star' → logprob: -6.336065292358398
    8. '_idx' → logprob: -6.586065292358398
    9. 'dir' → logprob: -6.586065292358398
    10. '_star' → logprob: -6.961065292358398

Token 361: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8833481669425964
    2. 'in' → logprob: -0.8833481669425964
    3. ' in' → logprob: -1.7583482265472412
    4. 's' → logprob: -8.00834846496582
    5. ',s' → logprob: -8.00834846496582
    6. ' ,' → logprob: -9.50834846496582
    7. ')' → logprob: -9.50834846496582
    8. '),' → logprob: -11.13334846496582
    9. ',t' → logprob: -11.50834846496582
    10. 't' → logprob: -11.88334846496582

Token 362: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10046372562646866
    2. ' enumerate' → logprob: -2.350463628768921
    3. 'in' → logprob: -8.4754638671875
    4. 'stars' → logprob: -10.8504638671875
    5. ' in' → logprob: -11.1004638671875
    6. ' stars' → logprob: -11.8504638671875
    7. 'range' → logprob: -13.1004638671875
    8. ')' → logprob: -13.8504638671875
    9. ',' → logprob: -14.1004638671875
    10. ' telesc' → logprob: -14.3504638671875

Token 363: '(st' (ID: 4065)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.09671682864427567
    2. '(st' → logprob: -3.22171688079834
    3. 'stars' → logprob: -3.72171688079834
    4. 'tel' → logprob: -3.84671688079834
    5. ',' → logprob: -5.72171688079834
    6. ' telesc' → logprob: -6.84671688079834
    7. '(' → logprob: -6.97171688079834
    8. 't' → logprob: -7.84671688079834
    9. '(s' → logprob: -8.22171688079834
    10. ' (' → logprob: -8.22171688079834

Token 364: 'ars' (ID: 1904)
  Prédit: 'ars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ars' → logprob: -0.0001514557225164026
    2. 'ar' → logprob: -9.000151634216309
    3. 'stars' → logprob: -10.750151634216309
    4. '   ' → logprob: -13.125151634216309
    5. '       ' → logprob: -13.250151634216309
    6. 'arts' → logprob: -15.000151634216309
    7. '         ' → logprob: -15.125151634216309
    8. '           ' → logprob: -15.125151634216309
    9. ' stars' → logprob: -15.250151634216309
    10. '#' → logprob: -15.875151634216309

Token 365: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004090274218469858
    2. '):
' → logprob: -5.504090309143066
    3. ' ):' → logprob: -11.754090309143066
    4. ':' → logprob: -13.379090309143066
    5. ')' → logprob: -13.504090309143066
    6. '):
' → logprob: -14.379090309143066
    7. '):

' → logprob: -15.754090309143066
    8. ',' → logprob: -15.879090309143066
    9. '   ' → logprob: -17.00408935546875
    10. ' ' → logprob: -17.12908935546875

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05851327255368233
    2. '   ' → logprob: -3.1835131645202637
    3. '       ' → logprob: -4.433513164520264
    4. ' for' → logprob: -6.308513164520264
    5. '<|end|>' → logprob: -7.808513164520264
    6. '    
' → logprob: -8.183513641357422
    7. ',' → logprob: -8.683513641357422
    8. '    ' → logprob: -8.933513641357422
    9. '            
' → logprob: -9.183513641357422
    10. ' ' → logprob: -9.433513641357422

Token 367: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12174990028142929
    2. ' for' → logprob: -2.2467498779296875
    3. '   ' → logprob: -4.9967498779296875
    4. 'found' → logprob: -6.4967498779296875
    5. '           ' → logprob: -8.496749877929688
    6. '       ' → logprob: -8.621749877929688
    7. 'visible' → logprob: -8.871749877929688
    8. ' found' → logprob: -10.246749877929688
    9. ' ' → logprob: -10.621749877929688
    10. 'star' → logprob: -11.246749877929688

Token 368: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0626365914940834
    2. ' t' → logprob: -3.312636613845825
    3. 'j' → logprob: -4.312636375427246
    4. '(t' → logprob: -4.812636375427246
    5. ' j' → logprob: -6.937636375427246
    6. '   ' → logprob: -7.062636375427246
    7. '(j' → logprob: -8.062636375427246
    8. ' (' → logprob: -8.312636375427246
    9. ' ' → logprob: -9.437636375427246
    10. '(' → logprob: -9.812636375427246

Token 369: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.0030762290116399527
    2. 't' → logprob: -6.628076076507568
    3. ',' → logprob: -6.753076076507568
    4. 'dir' → logprob: -8.128076553344727
    5. '_d' → logprob: -9.503076553344727
    6. '_idx' → logprob: -9.753076553344727
    7. '_t' → logprob: -9.753076553344727
    8. 'd' → logprob: -10.503076553344727
    9. 'in' → logprob: -11.253076553344727
    10. ',_' → logprob: -11.628076553344727

Token 370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001310719089815393
    2. 'in' → logprob: -10.250130653381348
    3. ' ,' → logprob: -10.500130653381348
    4. ' in' → logprob: -10.625130653381348
    5. ',t' → logprob: -11.000130653381348
    6. ',_' → logprob: -11.625130653381348
    7. ',s' → logprob: -12.000130653381348
    8. '_,' → logprob: -12.875130653381348
    9. ',
' → logprob: -13.125130653381348
    10. ',v' → logprob: -13.875130653381348

Token 371: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.011101112700998783
    2. ' phi' → logprob: -4.511101245880127
    3. 't' → logprob: -10.636100769042969
    4. 'ph' → logprob: -11.886100769042969
    5. 'angle' → logprob: -12.011100769042969
    6. '_phi' → logprob: -12.511100769042969
    7. ' t' → logprob: -12.886100769042969
    8. '           ' → logprob: -13.011100769042969
    9. 'phis' → logprob: -13.386100769042969
    10. 'theta' → logprob: -13.886100769042969

Token 372: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011105598881840706
    2. 'in' → logprob: -4.511105537414551
    3. ',' → logprob: -9.88610553741455
    4. ')' → logprob: -13.51110553741455
    5. '_in' → logprob: -13.76110553741455
    6. ' ' → logprob: -13.76110553741455
    7. 's' → logprob: -13.88610553741455
    8. '
' → logprob: -14.76110553741455
    9. '	in' → logprob: -14.88610553741455
    10. 'angle' → logprob: -15.26110553741455

Token 373: ' telesc' (ID: 109816)
  Prédit: ' telesc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' telesc' → logprob: -0.5765622854232788
    2. 'tel' → logprob: -0.8265622854232788
    3. 'tele' → logprob: -7.451562404632568
    4. 't' → logprob: -10.70156192779541
    5. ' tel' → logprob: -12.57656192779541
    6. '   ' → logprob: -12.57656192779541
    7. '    ' → logprob: -13.07656192779541
    8. '_tel' → logprob: -13.20156192779541
    9. ' ' → logprob: -13.32656192779541
    10. '           ' → logprob: -14.07656192779541

Token 374: 'opes' (ID: 25986)
  Prédit: 'opes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opes' → logprob: -0.020125342532992363
    2. 'esc' → logprob: -4.645125389099121
    3. 'sc' → logprob: -4.645125389099121
    4. 'op' → logprob: -8.020125389099121
    5. 'osc' → logprob: -8.395125389099121
    6. 'es' → logprob: -10.145125389099121
    7. 'ops' → logprob: -10.645125389099121
    8. '   ' → logprob: -11.145125389099121
    9. '       ' → logprob: -11.145125389099121
    10. '```' → logprob: -11.645125389099121

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10363169759511948
    2. ':
' → logprob: -2.3536317348480225
    3. '               ' → logprob: -5.853631496429443
    4. '           ' → logprob: -8.353631973266602
    5. ',' → logprob: -9.103631973266602
    6. '):
' → logprob: -9.603631973266602
    7. ':

' → logprob: -10.478631973266602
    8. ':
' → logprob: -10.603631973266602
    9. '       ' → logprob: -10.853631973266602
    10. '<|end|>' → logprob: -11.103631973266602

Token 376: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0030525773763656616
    2. '                
' → logprob: -7.003052711486816
    3. ' 
' → logprob: -7.753052711486816
    4. '       ' → logprob: -7.753052711486816
    5. '           ' → logprob: -7.878052711486816
    6. '<|end|>' → logprob: -9.003052711486816
    7. ':' → logprob: -9.128052711486816
    8. ' ' → logprob: -9.503052711486816
    9. '  
' → logprob: -9.628052711486816
    10. '                ' → logprob: -9.753052711486816

Token 377: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36067304015159607
    2. ' angle' → logprob: -1.6106730699539185
    3. 'angle' → logprob: -2.860672950744629
    4. '                   ' → logprob: -3.735672950744629
    5. ' if' → logprob: -4.735672950744629
    6. ' 
' → logprob: -6.235672950744629
    7. '                
' → logprob: -6.360672950744629
    8. '
' → logprob: -6.360672950744629
    9. ')' → logprob: -6.485672950744629
    10. '           ' → logprob: -7.110672950744629

Token 378: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.6931664943695068
    2. ' angle' → logprob: -0.6931664943695068
    3. '(angle' → logprob: -11.568166732788086
    4. '               ' → logprob: -12.318166732788086
    5. '                   ' → logprob: -13.318166732788086
    6. ' ' → logprob: -14.068166732788086
    7. '   ' → logprob: -14.193166732788086
    8. '           ' → logprob: -14.568166732788086
    9. '_angle' → logprob: -14.568166732788086
    10. '.angle' → logprob: -14.818166732788086

Token 379: '_between' (ID: 124874)
  Prédit: '_between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_between' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.250001907348633
    3. '_based' → logprob: -15.375001907348633
    4. '_under' → logprob: -16.750001907348633
    5. '_to' → logprob: -17.000001907348633
    6. '_than' → logprob: -17.250001907348633
    7. '_difference' → logprob: -17.625001907348633
    8. '_before' → logprob: -17.750001907348633
    9. 'between' → logprob: -17.750001907348633
    10. '_b' → logprob: -18.125001907348633

Token 380: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014942926645744592
    2. '(t' → logprob: -9.000149726867676
    3. '(' → logprob: -10.875149726867676
    4. ' (' → logprob: -12.375149726867676
    5. 's' → logprob: -13.375149726867676
    6. '(
' → logprob: -14.125149726867676
    7. ')' → logprob: -14.875149726867676
    8. ')(' → logprob: -16.75014877319336
    9. '(i' → logprob: -17.50014877319336
    10. '(v' → logprob: -17.87514877319336

Token 381: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -0.001186299603432417
    2. '(s' → logprob: -7.626186370849609
    3. 'ir' → logprob: -8.00118637084961
    4. 't' → logprob: -9.00118637084961
    5. 'dir' → logprob: -9.25118637084961
    6. 's' → logprob: -10.25118637084961
    7. '(t' → logprob: -10.62618637084961
    8. 'r' → logprob: -10.87618637084961
    9. 'ird' → logprob: -11.25118637084961
    10. 'or' → logprob: -11.75118637084961

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005398934241384268
    2. ',t' → logprob: -6.130398750305176
    3. ' ,' → logprob: -6.255398750305176
    4. '(t' → logprob: -6.880398750305176
    5. '(' → logprob: -9.005398750305176
    6. ',
' → logprob: -10.005398750305176
    7. '(s' → logprob: -10.255398750305176
    8. 's' → logprob: -11.005398750305176
    9. ',s' → logprob: -11.255398750305176
    10. ')' → logprob: -11.755398750305176

Token 383: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6932631134986877
    2. ' t' → logprob: -0.6932631134986877
    3. '(t' → logprob: -9.818263053894043
    4. 's' → logprob: -10.193263053894043
    5. ' s' → logprob: -10.943263053894043
    6. '	t' → logprob: -12.568263053894043
    7. ')t' → logprob: -13.568263053894043
    8. ')' → logprob: -14.318263053894043
    9. '(s' → logprob: -14.568263053894043
    10. '(' → logprob: -15.693263053894043

Token 384: '_dir' (ID: 9526)
  Prédit: '_dir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dir' → logprob: -9.925185440806672e-05
    2. 'dir' → logprob: -9.250099182128906
    3. 't' → logprob: -14.000099182128906
    4. '-dir' → logprob: -14.375099182128906
    5. '_DIR' → logprob: -15.000099182128906
    6. 'r' → logprob: -15.125099182128906
    7. 'ir' → logprob: -15.375099182128906
    8. '	dir' → logprob: -15.625099182128906
    9. 'Dir' → logprob: -15.750099182128906
    10. 'o' → logprob: -15.750099182128906

Token 385: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.8497312895488e-05
    2. ' )' → logprob: -10.125068664550781
    3. ')<=' → logprob: -10.625068664550781
    4. '()' → logprob: -13.250068664550781
    5. '())' → logprob: -14.000068664550781
    6. ' <=' → logprob: -15.125068664550781
    7. ')<' → logprob: -15.625068664550781
    8. '）' → logprob: -15.875068664550781
    9. ')`' → logprob: -16.00006866455078
    10. '<=' → logprob: -16.25006866455078

Token 386: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.09368659555912018
    2. '<=' → logprob: -2.593686580657959
    3. ')' → logprob: -4.343686580657959
    4. ')<=' → logprob: -6.968686580657959
    5. '()' → logprob: -7.218686580657959
    6. '(' → logprob: -11.968687057495117
    7. ']<=' → logprob: -11.968687057495117
    8. '[' → logprob: -12.593687057495117
    9. ' )' → logprob: -12.843687057495117
    10. ' ' → logprob: -13.218687057495117

Token 387: ' phi' (ID: 40391)
  Prédit: 'phi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phi' → logprob: -0.6935798525810242
    2. ' phi' → logprob: -0.6935798525810242
    3. '(phi' → logprob: -7.94357967376709
    4. ' math' → logprob: -9.94357967376709
    5. 'math' → logprob: -11.31857967376709
    6. '_phi' → logprob: -11.94357967376709
    7. ' (' → logprob: -12.06857967376709
    8. ' ' → logprob: -13.94357967376709
    9. '=' → logprob: -14.31857967376709
    10. 'φ' → logprob: -14.44357967376709

Token 388: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016992258606478572
    2. ':
' → logprob: -6.751699447631836
    3. '):' → logprob: -7.751699447631836
    4. ' :' → logprob: -9.626699447631836
    5. '           ' → logprob: -11.751699447631836
    6. '+:' → logprob: -11.876699447631836
    7. ':return' → logprob: -12.751699447631836
    8. '():' → logprob: -13.001699447631836
    9. '               ' → logprob: -13.126699447631836
    10. '):
' → logprob: -13.126699447631836

Token 389: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000585918256547302
    2. '               ' → logprob: -8.375585556030273
    3. ' visible' → logprob: -9.000585556030273
    4. 'visible' → logprob: -9.125585556030273
    5. '                       ' → logprob: -10.250585556030273
    6. '           ' → logprob: -10.625585556030273
    7. '                  ' → logprob: -11.125585556030273
    8. ':
' → logprob: -11.875585556030273
    9. ',' → logprob: -12.125585556030273
    10. '                    
' → logprob: -12.250585556030273

Token 390: ' visible' (ID: 15263)
  Prédit: 'visible'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visible' (adapté à ' visible') → logprob: -0.0016275715315714478
    2. ' visible' → logprob: -6.501627445220947
    3. '                   ' → logprob: -9.001627922058105
    4. '               ' → logprob: -13.376627922058105
    5. '.visible' → logprob: -15.751627922058105
    6. '_visible' → logprob: -16.25162696838379
    7. '                       ' → logprob: -16.50162696838379
    8. 'VISIBLE' → logprob: -17.12662696838379
    9. '           ' → logprob: -17.37662696838379
    10. '   ' → logprob: -17.37662696838379

Token 391: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -9.627176768844947e-05
    2. '.' → logprob: -9.250096321105957
    3. '.update' → logprob: -16.62509536743164
    4. ' .' → logprob: -17.25009536743164
    5. '.Add' → logprob: -17.75009536743164
    6. '.append' → logprob: -18.62509536743164
    7. 'add' → logprob: -18.87509536743164
    8. '.setdefault' → logprob: -19.50009536743164
    9. '.
' → logprob: -20.25009536743164
    10. '.remove' → logprob: -20.87509536743164

Token 392: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'i' → logprob: -18.500001907348633
    4. '(s' → logprob: -18.750001907348633
    5. '((' → logprob: -18.875001907348633
    6. ' (' → logprob: -18.875001907348633
    7. '(
' → logprob: -21.625001907348633
    8. ' i' → logprob: -22.125001907348633
    9. '(a' → logprob: -23.875001907348633
    10. '(str' → logprob: -23.875001907348633

Token 393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01838265173137188
    2. ')
' → logprob: -4.018382549285889
    3. '                   ' → logprob: -8.643383026123047
    4. '               ' → logprob: -10.643383026123047
    5. ' )' → logprob: -10.768383026123047
    6. '           ' → logprob: -12.018383026123047
    7. ' )
' → logprob: -13.143383026123047
    8. ')

' → logprob: -14.268383026123047
    9. '       ' → logprob: -14.393383026123047
    10. ')
' → logprob: -14.643383026123047

Token 394: '                   ' (ID: 699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003681313246488571
    2. '
' → logprob: -6.503681182861328
    3. '<|end|>' → logprob: -7.253681182861328
    4. 'print' → logprob: -7.753681182861328
    5. '   ' → logprob: -7.878681182861328
    6. '        
' → logprob: -8.378681182861328
    7. '           ' → logprob: -9.128681182861328
    8. '\n' → logprob: -9.503681182861328
    9. '    
' → logprob: -10.128681182861328
    10. '```' → logprob: -10.503681182861328

Token 395: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006828797981142998
    2. 'break' (adapté à ' break') → logprob: -5.006828784942627
    3. ' break' → logprob: -9.506829261779785
    4. '               ' → logprob: -10.506829261779785
    5. '				' → logprob: -12.506829261779785
    6. '	break' → logprob: -12.756829261779785
    7. '                       ' → logprob: -13.006829261779785
    8. '           ' → logprob: -13.881829261779785
    9. '                  ' → logprob: -14.506829261779785
    10. '                 ' → logprob: -14.631829261779785

Token 396: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46519163250923157
    2. '       ' → logprob: -1.3401916027069092
    3. '   ' → logprob: -2.465191602706909
    4. '<|end|>' → logprob: -3.715191602706909
    5. 'print' → logprob: -8.215191841125488
    6. '```' → logprob: -8.465191841125488
    7. '        
' → logprob: -9.340191841125488
    8. '\n' → logprob: -9.340191841125488
    9. '    
' → logprob: -9.590191841125488
    10. '<|end|>' → logprob: -10.465191841125488

Token 397: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026691537350416183
    2. 'print' → logprob: -3.776691436767578
    3. '       ' → logprob: -6.026691436767578
    4. '```' → logprob: -7.526691436767578
    5. '
' → logprob: -7.776691436767578
    6. '    
' → logprob: -9.901691436767578
    7. ' print' → logprob: -11.776691436767578
    8. '<|end|>' → logprob: -12.026691436767578
    9. '        
' → logprob: -13.776691436767578
    10. '``' → logprob: -14.401691436767578

Token 398: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.08528563380241394
    2. '   ' → logprob: -2.5852856636047363
    3. '       ' → logprob: -5.085285663604736
    4. ' print' → logprob: -8.835285186767578
    5. '```' → logprob: -10.460285186767578
    6. '    
' → logprob: -11.960285186767578
    7. '        
' → logprob: -12.335285186767578
    8. 'for' → logprob: -13.210285186767578
    9. '
' → logprob: -14.585285186767578
    10. '	print' → logprob: -15.335285186767578

Token 399: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.4259644558478612e-05
    2. 'len' → logprob: -11.250014305114746
    3. '(' → logprob: -13.625014305114746
    4. ' len' → logprob: -18.62501335144043
    5. '[len' → logprob: -19.62501335144043
    6. '=len' → logprob: -20.25001335144043
    7. '(max' → logprob: -20.37501335144043
    8. ' (' → logprob: -20.37501335144043
    9. '(sorted' → logprob: -20.50001335144043
    10. '()' → logprob: -20.62501335144043

Token 400: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. 'visible' → logprob: -14.125000953674316
    3. ')' → logprob: -16.75
    4. ' (' → logprob: -17.125
    5. ' visible' → logprob: -18.625
    6. ')(' → logprob: -19.75
    7. '(vis' → logprob: -20.375
    8. '.visible' → logprob: -21.0
    9. '_visible' → logprob: -21.125
    10. '(
' → logprob: -21.125

Token 401: 'visible' (ID: 20450)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06196869537234306
    2. 'visible' → logprob: -2.8119688034057617
    3. ' visible' → logprob: -13.936968803405762
    4. ')' → logprob: -15.686968803405762
    5. '_visible' → logprob: -17.561967849731445
    6. '.visible' → logprob: -17.936967849731445
    7. 'Visible' → logprob: -17.936967849731445
    8. '```' → logprob: -19.061967849731445
    9. 'VISIBLE' → logprob: -20.061967849731445
    10. 'vis' → logprob: -20.186967849731445

Token 402: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '))' → logprob: -15.375000953674316
    3. ')
' → logprob: -15.375000953674316
    4. ' )' → logprob: -15.750000953674316
    5. ')}' → logprob: -16.25
    6. ')`' → logprob: -17.125
    7. '())' → logprob: -17.5
    8. ')}}' → logprob: -18.625
    9. '}' → logprob: -19.125
    10. '})' → logprob: -19.375

Token 403: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.537180211627856e-05
    2. 'main' → logprob: -10.125045776367188
    3. ' if' → logprob: -12.750045776367188
    4. '```' → logprob: -13.750045776367188
    5. '
' → logprob: -14.125045776367188
    6. '<|end|>' → logprob: -15.000045776367188
    7. '#' → logprob: -16.125045776367188
    8. '\n' → logprob: -16.750045776367188
    9. '  
' → logprob: -17.750045776367188
    10. '    
' → logprob: -18.000045776367188

Token 404: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.023402824997901917
    2. '__' → logprob: -3.7734029293060303
    3. '_' → logprob: -8.89840316772461
    4. ' ' → logprob: -11.52340316772461
    5. ' _' → logprob: -12.27340316772461
    6. '_name' → logprob: -12.89840316772461
    7. '___' → logprob: -13.64840316772461
    8. ' ___' → logprob: -14.14840316772461
    9. ' ' → logprob: -14.39840316772461
    10. ' ' → logprob: -15.39840316772461

Token 405: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.44087138772010803
    2. '.__' → logprob: -1.3158713579177856
    3. ' __' → logprob: -2.815871477127075
    4. ' ==' → logprob: -4.315871238708496
    5. '.' → logprob: -5.315871238708496
    6. '__.__' → logprob: -5.440871238708496
    7. ' .' → logprob: -6.315871238708496
    8. '__.' → logprob: -6.565871238708496
    9. '.main' → logprob: -7.315871238708496
    10. '==' → logprob: -7.315871238708496

Token 406: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.32392441527918e-05
    2. '__.__' → logprob: -9.875053405761719
    3. '__.' → logprob: -13.500053405761719
    4. '==' → logprob: -15.750053405761719
    5. '__
' → logprob: -17.00005340576172
    6. '____' → logprob: -17.12505340576172
    7. '___' → logprob: -18.00005340576172
    8. '__["' → logprob: -18.12505340576172
    9. '__('' → logprob: -18.62505340576172
    10. ' ==' → logprob: -18.87505340576172

Token 407: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5468480587005615
    2. '__' → logprob: -0.9218480587005615
    3. '==' → logprob: -3.7968480587005615
    4. '=="' → logprob: -7.296848297119141
    5. '.__' → logprob: -9.04684829711914
    6. '=='' → logprob: -9.42184829711914
    7. '_' → logprob: -10.17184829711914
    8. '__.__' → logprob: -10.29684829711914
    9. '___' → logprob: -11.29684829711914
    10. '__.' → logprob: -12.29684829711914

Token 408: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31327024102211
    2. ''' → logprob: -1.3132702112197876
    3. ' "__' → logprob: -12.063270568847656
    4. '__' → logprob: -13.813270568847656
    5. ' "' → logprob: -14.188270568847656
    6. ' '__' → logprob: -14.563270568847656
    7. '"user' → logprob: -15.438270568847656
    8. ''"' → logprob: -16.563270568847656
    9. '"_' → logprob: -16.563270568847656
    10. ' '' → logprob: -16.688270568847656

Token 409: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00270644249394536
    2. '__' → logprob: -6.002706527709961
    3. 'name' → logprob: -8.377706527709961
    4. 'm' → logprob: -15.877706527709961
    5. 'python' → logprob: -15.877706527709961
    6. '_main' → logprob: -16.50270652770996
    7. '__':
' → logprob: -16.62770652770996
    8. '__
' → logprob: -17.25270652770996
    9. ' main' → logprob: -17.37770652770996
    10. 'py' → logprob: -17.37770652770996

Token 410: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.11415714025497437
    2. '__' → logprob: -2.239157199859619
    3. '__:' → logprob: -7.364157199859619
    4. ':' → logprob: -7.614157199859619
    5. '__":
' → logprob: -9.114156723022461
    6. '':' → logprob: -9.864156723022461
    7. '_' → logprob: -10.739156723022461
    8. ''>' → logprob: -11.239156723022461
    9. ''>
' → logprob: -13.239156723022461
    10. '__.' → logprob: -13.614156723022461

Token 411: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.035187333822250366
    2. ' main' → logprob: -3.660187244415283
    3. '   ' → logprob: -4.785187244415283
    4. '	main' → logprob: -7.660187244415283
    5. '_main' → logprob: -11.285187721252441
    6. '(main' → logprob: -12.035187721252441
    7. 'Main' → logprob: -14.285187721252441
    8. '    
' → logprob: -14.285187721252441
    9. 'if' → logprob: -14.410187721252441
    10. '__' → logprob: -14.535187721252441

Token 412: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.7697225252486533e-06
    2. ' main' → logprob: -12.500003814697266
    3. '	main' → logprob: -20.250003814697266
    4. '   ' → logprob: -21.250003814697266
    5. '.main' → logprob: -24.625003814697266
    6. '(main' → logprob: -24.750003814697266
    7. '_main' → logprob: -25.500003814697266
    8. '  ' → logprob: -26.375003814697266
    9. 'import' → logprob: -26.875003814697266
    10. ' ' → logprob: -27.500003814697266

Token 413: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6405207514762878
    2. '<|end|>' → logprob: -1.3905208110809326
    3. '
' → logprob: -1.6405208110809326
    4. '\n' → logprob: -4.2655205726623535
    5. '```' → logprob: -5.0155205726623535
    6. '#' → logprob: -6.0155205726623535
    7. '()
' → logprob: -6.0155205726623535
    8. ')' → logprob: -6.3905205726623535
    9. '(' → logprob: -6.6405205726623535
    10. '<|end|>' → logprob: -7.8905205726623535


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 411
Tokens correctement prédits (1ère position, stricte): 219
Tokens correctement prédits (1ère position, avec adaptation): 234
Tokens correctement prédits (top 10): 372
Précision stricte (1ère position): 53.28%
Précision adaptée (1ère position): 56.93%
Précision (top 10): 90.51%
================================================================================
