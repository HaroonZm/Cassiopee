================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Node:
    def __init__(self, index):
        self.index = index
        self.parent = None
        self.children = []

class Tree:
    def __init__(self, n):
        self.nodes = [None] + [Node(i) for i in range(1, n + 1)]
        self.n = n
        self.marked = [False] * (n + 1)
        self.uf_parent = list(range(n + 1))  # Union-Find parent array for marked ancestors

    def add_edge(self, child_index, parent_index):
        self.nodes[child_index].parent = self.nodes[parent_index]
        self.nodes[parent_index].children.append(self.nodes[child_index])

    def find(self, x):
        # Find with path compression in Union-Find to get nearest marked ancestor
        if self.uf_parent[x] != x:
            self.uf_parent[x] = self.find(self.uf_parent[x])
        return self.uf_parent[x]

    def mark(self, v):
        # Mark node v and union with parent marked ancestor if exists
        self.marked[v] = True
        if v == 1:
            # root, self parent in union-find stays itself
            self.uf_parent[v] = v
        else:
            p = self.nodes[v].parent.index
            if self.marked[p]:
                self.uf_parent[v] = v
            else:
                # Link v to parent's nearest marked ancestor
                self.uf_parent[v] = self.find(p)

    def query(self, v):
        # returns index of nearest marked ancestor
        return self.find(v)

class InputProcessor:
    def __init__(self):
        pass

    def read_dataset(self):
        import sys
        for line in sys.stdin:
            if not line.strip():
                continue
            n, q = map(int, line.split())
            if n == 0 and q == 0:
                break
            yield n, q

    def read_tree_parents(self, n, input_lines):
        parents = []
        for _ in range(n - 1):
            pi = int(next(input_lines))
            parents.append(pi)
        return parents

    def read_operations(self, q, input_lines):
        ops = []
        for _ in range(q):
            parts = next(input_lines).split()
            ops.append((parts[0], int(parts[1])))
        return ops

class MarkedAncestorSolver:
    def __init__(self, n, parents, operations):
        self.tree = Tree(n)
        for i, p in enumerate(parents, start=2):
            self.tree.add_edge(i, p)
        self.operations = operations
        self.output_sum = 0

    def initialize(self):
        # Initially only root node(1) marked
        self.tree.marked[1] = True
        self.tree.uf_parent[1] = 1

    def solve(self):
        self.initialize()
        for op, v in self.operations:
            if op == 'M':
                self.tree.mark(v)
            else:  # op == 'Q'
                res = self.tree.query(v)
                self.output_sum += res
        return self.output_sum

def main():
    import sys
    input_lines = iter(sys.stdin.read().splitlines())
    ip = InputProcessor()
    while True:
        try:
            line = next(input_lines)
        except StopIteration:
            break
        if not line.strip():
            continue
        n, q = map(int, line.split())
        if n == 0 and q == 0:
            break
        parents = [int(next(input_lines)) for _ in range(n - 1)]
        operations = [next(input_lines).split() for _ in range(q)]
        operations = [(op, int(v)) for op, v in operations]
        solver = MarkedAncestorSolver(n, parents, operations)
        print(solver.solve())

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Node' (ID: 10882)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.488202303647995
    2. ':' → logprob: -0.9882023334503174
    3. '```' → logprob: -5.488202095031738
    4. '   ' → logprob: -6.363202095031738
    5. '(
' → logprob: -6.363202095031738
    6. '():' → logprob: -6.613202095031738
    7. ' (' → logprob: -6.988202095031738
    8. '()' → logprob: -7.363202095031738
    9. ' ' → logprob: -7.488202095031738
    10. '<|end|>' → logprob: -7.613202095031738

Token 4: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.536141574382782
    2. '   ' → logprob: -1.5361416339874268
    3. ' ' → logprob: -2.5361416339874268
    4. '```' → logprob: -3.7861416339874268
    5. '    ' → logprob: -3.9111416339874268
    6. ''' → logprob: -4.286141395568848
    7. ' (' → logprob: -4.911141395568848
    8. '`' → logprob: -4.911141395568848
    9. '(space' → logprob: -4.911141395568848
    10. 'def' (adapté à ' def') → logprob: -5.036141395568848

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24839042127132416
    2. ' __' → logprob: -1.7483904361724854
    3. '__' → logprob: -3.7483904361724854
    4. ' ' → logprob: -5.123390197753906
    5. '    ' → logprob: -5.248390197753906
    6. ' init' → logprob: -5.873390197753906
    7. '```' → logprob: -6.998390197753906
    8. ' ```' → logprob: -7.248390197753906
    9. ' def' → logprob: -7.373390197753906
    10. '_' → logprob: -7.373390197753906

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.856408536899835e-05
    2. ' init' → logprob: -11.000028610229492
    3. '_init' → logprob: -11.625028610229492
    4. 'i' → logprob: -13.625028610229492
    5. 'ini' → logprob: -13.625028610229492
    6. '	init' → logprob: -15.750028610229492
    7. '_i' → logprob: -16.125028610229492
    8. '_' → logprob: -16.250028610229492
    9. 'in' → logprob: -16.500028610229492
    10. '   ' → logprob: -18.000028610229492

Token 7: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5764837265014648
    2. '__(' → logprob: -0.8264837265014648
    3. '__(
' → logprob: -8.076483726501465
    4. '_' → logprob: -8.826483726501465
    5. '__((' → logprob: -10.201483726501465
    6. '__('' → logprob: -11.076483726501465
    7. '(' → logprob: -11.076483726501465
    8. '___' → logprob: -11.451483726501465
    9. '__("' → logprob: -13.451483726501465
    10. '__(*' → logprob: -13.451483726501465

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00028266964363865554
    2. ' self' → logprob: -8.250282287597656
    3. ')' → logprob: -11.125282287597656
    4. '(self' → logprob: -12.250282287597656
    5. ' ' → logprob: -14.375282287597656
    6. ' )' → logprob: -14.875282287597656
    7. 'sel' → logprob: -15.875282287597656
    8. '	self' → logprob: -15.875282287597656
    9. ',self' → logprob: -16.000282287597656
    10. '   ' → logprob: -16.125282287597656

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8371527194976807
    2. ',' → logprob: -1.2121527194976807
    3. '(' → logprob: -2.2121527194976807
    4. 'self' → logprob: -2.8371527194976807
    5. '_' → logprob: -3.4621527194976807
    6. ' )' → logprob: -3.7121527194976807
    7. ' ' → logprob: -4.337152481079102
    8. ' ,' → logprob: -4.712152481079102
    9. '<|end|>' → logprob: -4.837152481079102
    10. '(self' → logprob: -5.462152481079102

Token 10: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009624576196074486
    2. ' self' → logprob: -5.009624481201172
    3. 'data' → logprob: -6.009624481201172
    4. 'value' → logprob: -8.259624481201172
    5. ')' → logprob: -9.634624481201172
    6. ' data' → logprob: -10.009624481201172
    7. 'val' → logprob: -10.009624481201172
    8. 'parent' → logprob: -11.134624481201172
    9. ' value' → logprob: -11.884624481201172
    10. '(self' → logprob: -12.384624481201172

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30736061930656433
    2. ',' → logprob: -1.6823606491088867
    3. ')' → logprob: -2.5573606491088867
    4. ':' → logprob: -7.057360649108887
    5. ' ,' → logprob: -9.432360649108887
    6. '=' → logprob: -9.932360649108887
    7. '):
' → logprob: -10.182360649108887
    8. '   ' → logprob: -10.557360649108887
    9. '_' → logprob: -10.682360649108887
    10. ' ):' → logprob: -10.932360649108887

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08593706041574478
    2. ':' → logprob: -3.835937023162842
    3. '   ' → logprob: -3.960937023162842
    4. '    ' → logprob: -3.960937023162842
    5. '(' → logprob: -4.835937023162842
    6. '_' → logprob: -6.085937023162842
    7. '     ' → logprob: -6.210937023162842
    8. ' :' → logprob: -6.210937023162842
    9. ' ' → logprob: -6.585937023162842
    10. '        ' → logprob: -6.960937023162842

Token 13: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15638615190982819
    2. ' ' → logprob: -3.031386137008667
    3. ' self' → logprob: -3.406386137008667
    4. '_' → logprob: -3.781386137008667
    5. '       ' → logprob: -3.781386137008667
    6. 's' → logprob: -4.531386375427246
    7. '   ' → logprob: -6.156386375427246
    8. ' ' → logprob: -6.781386375427246
    9. '        ' → logprob: -7.281386375427246
    10. '    ' → logprob: -7.531386375427246

Token 14: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005230080569162965
    2. ' .' → logprob: -8.50052261352539
    3. '.index' → logprob: -9.00052261352539
    4. '.value' → logprob: -9.87552261352539
    5. ' ' → logprob: -10.62552261352539
    6. '.data' → logprob: -11.00052261352539
    7. '.next' → logprob: -11.50052261352539
    8. '.token' → logprob: -11.75052261352539
    9. '.parent' → logprob: -11.87552261352539
    10. '.code' → logprob: -12.37552261352539

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2819487750530243
    2. ' =' → logprob: -1.4069488048553467
    3. ' ' → logprob: -7.531948566436768
    4. '<|end|>' → logprob: -8.656949043273926
    5. ')' → logprob: -10.656949043273926
    6. '_' → logprob: -10.906949043273926
    7. ' is' → logprob: -11.531949043273926
    8. '.' → logprob: -11.656949043273926
    9. ' =
' → logprob: -11.781949043273926
    10. ' =)' → logprob: -12.156949043273926

Token 16: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.02324594371020794
    2. 'index' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.273245811462402
    4. '#index' → logprob: -16.39824676513672
    5. '(index' → logprob: -16.77324676513672
    6. '	index' → logprob: -17.14824676513672
    7. ' ' → logprob: -17.39824676513672
    8. '=index' → logprob: -17.64824676513672
    9. '@index' → logprob: -19.02324676513672
    10. '[index' → logprob: -19.14824676513672

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1400882005691528
    2. '<|end|>' → logprob: -1.1400882005691528
    3. '.' → logprob: -1.2650882005691528
    4. '\n' → logprob: -3.3900880813598633
    5. '\' → logprob: -4.640088081359863
    6. ',' → logprob: -5.265088081359863
    7. ')' → logprob: -5.265088081359863
    8. ':' → logprob: -5.390088081359863
    9. ' ' → logprob: -5.640088081359863
    10. 'newline' → logprob: -5.765088081359863

Token 18: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: '.parent' (ID: 17454)
  Prédit: '.children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.3946339190006256
    2. '.next' → logprob: -2.0196340084075928
    3. ' .' → logprob: -2.3946340084075928
    4. '.' → logprob: -2.7696340084075928
    5. '_children' → logprob: -4.394633769989014
    6. '._' → logprob: -4.644633769989014
    7. '.parent' → logprob: -6.019633769989014
    8. '.left' → logprob: -6.019633769989014
    9. 'children' → logprob: -6.269633769989014
    10. '.nodes' → logprob: -6.519633769989014

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012566749937832355
    2. '=' → logprob: -4.387566566467285
    3. '=None' → logprob: -10.137566566467285
    4. ' ' → logprob: -11.637566566467285
    5. '<|end|>' → logprob: -12.137566566467285
    6. ' None' → logprob: -13.512566566467285
    7. '_' → logprob: -14.512566566467285
    8. ' is' → logprob: -14.887566566467285
    9. 's' → logprob: -15.137566566467285
    10. '<|end|>' → logprob: -15.387566566467285

Token 22: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.06196768581867218
    2. 'None' → logprob: -2.811967611312866
    3. 'self' → logprob: -17.311967849731445
    4. ' self' → logprob: -17.811967849731445
    5. '_None' → logprob: -17.936967849731445
    6. '(None' → logprob: -19.061967849731445
    7. ' none' → logprob: -19.686967849731445
    8. '.None' → logprob: -19.811967849731445
    9. ',None' → logprob: -19.811967849731445
    10. '=None' → logprob: -20.061967849731445

Token 23: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2750896215438843
    2. '\n' → logprob: -1.4000896215438843
    3. '   ' → logprob: -1.5250896215438843
    4. '<|end|>' → logprob: -2.275089740753174
    5. '    
' → logprob: -2.775089740753174
    6. '\' → logprob: -3.400089740753174
    7. '       ' → logprob: -4.275089740753174
    8. ' 
' → logprob: -4.650089740753174
    9. '```' → logprob: -4.650089740753174
    10. '  
' → logprob: -5.275089740753174

Token 25: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07432541251182556
    2. '   ' → logprob: -3.1993253231048584
    3. '
' → logprob: -4.1993255615234375
    4. '\n' → logprob: -5.9493255615234375
    5. '        
' → logprob: -6.0743255615234375
    6. '    
' → logprob: -6.0743255615234375
    7. '<|end|>' → logprob: -6.3243255615234375
    8. '\' → logprob: -6.6993255615234375
    9. ' ' → logprob: -6.8243255615234375
    10. '    ' → logprob: -7.1993255615234375

Token 26: '.children' (ID: 26331)
  Prédit: '.children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.02503313310444355
    2. '.' → logprob: -3.9000332355499268
    3. '_children' → logprob: -6.150032997131348
    4. ' .' → logprob: -6.775032997131348
    5. 'children' → logprob: -7.025032997131348
    6. ' children' → logprob: -9.150032997131348
    7. '.child' → logprob: -9.400032997131348
    8. 'Children' → logprob: -10.275032997131348
    9. '.left' → logprob: -10.775032997131348
    10. '.Children' → logprob: -10.775032997131348

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02636927366256714
    2. '=' → logprob: -3.651369333267212
    3. '=[]' → logprob: -9.901369094848633
    4. ' ' → logprob: -11.776369094848633
    5. '<|end|>' → logprob: -12.026369094848633
    6. '[]' → logprob: -13.401369094848633
    7. 's' → logprob: -13.526369094848633
    8. '[' → logprob: -14.776369094848633
    9. '[:]' → logprob: -14.901369094848633
    10. '   ' → logprob: -14.901369094848633

Token 28: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12693241238594055
    2. ' []' → logprob: -2.126932382583618
    3. '[' → logprob: -12.751932144165039
    4. '[]}' → logprob: -13.751932144165039
    5. '[]
' → logprob: -16.50193214416504
    6. '[]>' → logprob: -16.62693214416504
    7. '[]"' → logprob: -17.12693214416504
    8. ' []
' → logprob: -17.25193214416504
    9. '[],' → logprob: -17.25193214416504
    10. ' [' → logprob: -17.25193214416504

Token 29: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8989660143852234
    2. '   ' → logprob: -1.6489660739898682
    3. '
' → logprob: -1.6489660739898682
    4. 'd' → logprob: -2.648966073989868
    5. ' ' → logprob: -3.273966073989868
    6. '\' → logprob: -3.773966073989868
    7. 'n' → logprob: -4.148965835571289
    8. '' → logprob: -4.398965835571289
    9. '\n' → logprob: -4.398965835571289
    10. 'def' → logprob: -4.773965835571289

Token 30: ' Tree' (ID: 14224)
  Prédit: ' Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tree' → logprob: -0.03929079324007034
    2. ' ' → logprob: -4.414290904998779
    3. ' Binary' → logprob: -4.539290904998779
    4. 'Tree' → logprob: -4.539290904998779
    5. ' Node' → logprob: -5.914290904998779
    6. ' ' → logprob: -6.914290904998779
    7. 'Binary' → logprob: -7.414290904998779
    8. ' tree' → logprob: -8.664290428161621
    9. ' Trie' → logprob: -8.664290428161621
    10. ' BST' → logprob: -9.914290428161621

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008992237038910389
    2. '(' → logprob: -4.7589921951293945
    3. ' :' → logprob: -8.758992195129395
    4. '):' → logprob: -9.258992195129395
    5. '<|end|>' → logprob: -10.008992195129395
    6. '():' → logprob: -10.883992195129395
    7. '.' → logprob: -11.258992195129395
    8. ')' → logprob: -11.258992195129395
    9. ':**' → logprob: -11.758992195129395
    10. '(object' → logprob: -11.883992195129395

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26501384377479553
    2. '    ' → logprob: -2.3900139331817627
    3. '(' → logprob: -2.8900139331817627
    4. ' ' → logprob: -3.1400139331817627
    5. ' def' → logprob: -4.265013694763184
    6. '    
' → logprob: -5.015013694763184
    7. '     
' → logprob: -5.390013694763184
    8. ' (' → logprob: -5.640013694763184
    9. ' 
' → logprob: -5.640013694763184
    10. '(n' → logprob: -6.265013694763184

Token 33: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04002922773361206
    2. ' def' → logprob: -3.415029287338257
    3. 'd' → logprob: -5.540029048919678
    4. '   ' → logprob: -6.290029048919678
    5. 'de' → logprob: -7.665029048919678
    6. ' ' → logprob: -10.165029525756836
    7. ' de' → logprob: -10.540029525756836
    8. ' d' → logprob: -10.665029525756836
    9. '    ' → logprob: -11.415029525756836
    10. '_' → logprob: -12.665029525756836

Token 34: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.643424928188324
    2. ' __' → logprob: -0.768424928188324
    3. ' _' → logprob: -5.768424987792969
    4. ' init' → logprob: -6.143424987792969
    5. ' ' → logprob: -6.393424987792969
    6. ' ```' → logprob: -6.518424987792969
    7. '_' → logprob: -7.268424987792969
    8. '__' → logprob: -7.643424987792969
    9. ' ‌' → logprob: -7.893424987792969
    10. ' def' → logprob: -8.893424987792969

Token 35: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.133198283147067e-05
    2. 'i' → logprob: -10.000051498413086
    3. 'ini' → logprob: -12.375051498413086
    4. 'in' → logprob: -13.375051498413086
    5. 'int' → logprob: -19.125051498413086
    6. 'innit' → logprob: -19.625051498413086
    7. ' init' → logprob: -19.750051498413086
    8. 'def' → logprob: -20.250051498413086
    9. 'initi' → logprob: -20.375051498413086
    10. 'inin' → logprob: -21.000051498413086

Token 36: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2781812250614166
    2. ' (' → logprob: -2.528181314468384
    3. '__(' → logprob: -2.653181314468384
    4. '<|end|>' → logprob: -2.778181314468384
    5. '(self' → logprob: -3.778181314468384
    6. '__' → logprob: -6.028181076049805
    7. '<|end|>' → logprob: -6.403181076049805
    8. '_' → logprob: -6.778181076049805
    9. ' ' → logprob: -7.778181076049805
    10. '__((' → logprob: -8.028181076049805

Token 37: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010871129343286157
    2. ' self' → logprob: -6.876087188720703
    3. ')' → logprob: -9.876087188720703
    4. ' ' → logprob: -13.251087188720703
    5. ' )' → logprob: -14.251087188720703
    6. '   ' → logprob: -16.001087188720703
    7. '(self' → logprob: -16.126087188720703
    8. '  ' → logprob: -16.626087188720703
    9. '
' → logprob: -16.751087188720703
    10. '	self' → logprob: -16.876087188720703

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009399507194757462
    2. ' ,' → logprob: -4.7593994140625
    3. ')' → logprob: -7.8843994140625
    4. 'self' → logprob: -8.7593994140625
    5. ' )' → logprob: -8.7593994140625
    6. '):' → logprob: -10.1343994140625
    7. ' ' → logprob: -10.5093994140625
    8. ' ):' → logprob: -11.2593994140625
    9. ',self' → logprob: -12.2593994140625
    10. ' self' → logprob: -12.5093994140625

Token 39: ' n' (ID: 297)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.7940147519111633
    2. ' root' → logprob: -1.0440146923065186
    3. ')' → logprob: -2.9190146923065186
    4. 'root' → logprob: -3.1690146923065186
    5. ' data' → logprob: -3.7940146923065186
    6. ' self' → logprob: -3.7940146923065186
    7. 'self' → logprob: -4.169014930725098
    8. ' n' → logprob: -4.294014930725098
    9. ' ):' → logprob: -5.044014930725098
    10. 'n' → logprob: -5.294014930725098

Token 40: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09046155959367752
    2. '):' → logprob: -2.465461492538452
    3. ',' → logprob: -6.590461730957031
    4. '_nodes' → logprob: -9.715461730957031
    5. '):
' → logprob: -10.340461730957031
    6. '_' → logprob: -10.715461730957031
    7. ' )' → logprob: -11.465461730957031
    8. '):

' → logprob: -12.840461730957031
    9. ':' → logprob: -12.840461730957031
    10. ' ):' → logprob: -13.215461730957031

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024154919665306807
    2. '   ' → logprob: -6.877415657043457
    3. '<|end|>' → logprob: -7.502415657043457
    4. 'self' → logprob: -8.627415657043457
    5. ':' → logprob: -9.252415657043457
    6. '
' → logprob: -9.627415657043457
    7. ' self' → logprob: -9.627415657043457
    8. '        
' → logprob: -10.002415657043457
    9. '```' → logprob: -10.252415657043457
    10. '    ' → logprob: -10.252415657043457

Token 42: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25476524233818054
    2. ' self' → logprob: -1.504765272140503
    3. '       ' → logprob: -5.879765033721924
    4. '   ' → logprob: -10.879765510559082
    5. 'n' → logprob: -11.754765510559082
    6. ' ' → logprob: -12.754765510559082
    7. 's' → logprob: -13.629765510559082
    8. '0' → logprob: -13.879765510559082
    9. ' ' → logprob: -14.129765510559082
    10. '	self' → logprob: -14.129765510559082

Token 43: '.nodes' (ID: 44152)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0019837100990116596
    2. '.n' → logprob: -6.376983642578125
    3. ' .' → logprob: -8.376983642578125
    4. '.nodes' → logprob: -11.376983642578125
    5. '._' → logprob: -11.751983642578125
    6. '.index' → logprob: -12.126983642578125
    7. '.data' → logprob: -12.876983642578125
    8. '.s' → logprob: -13.001983642578125
    9. ' =' → logprob: -13.251983642578125
    10. '.children' → logprob: -13.501983642578125

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2617502212524414
    2. '[' → logprob: -1.5117502212524414
    3. '=' → logprob: -4.761750221252441
    4. ' ' → logprob: -7.636750221252441
    5. '.append' → logprob: -8.011750221252441
    6. '.' → logprob: -8.136750221252441
    7. '[:]' → logprob: -10.011750221252441
    8. '[]' → logprob: -11.261750221252441
    9. '=[]' → logprob: -11.886750221252441
    10. 's' → logprob: -12.011750221252441

Token 45: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.014236020855605602
    2. ' []' → logprob: -4.764235973358154
    3. '[' → logprob: -5.264235973358154
    4. '[]' → logprob: -8.639236450195312
    5. '[n' → logprob: -8.639236450195312
    6. ' {}' → logprob: -9.764236450195312
    7. ' [[]' → logprob: -12.514236450195312
    8. '[int' → logprob: -12.764236450195312
    9. ' ' → logprob: -12.889236450195312
    10. '[node' → logprob: -13.014236450195312

Token 46: 'None' (ID: 8505)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.33664143085479736
    2. 'None' → logprob: -1.3366414308547974
    3. ' Node' → logprob: -4.086641311645508
    4. ' None' → logprob: -5.086641311645508
    5. 'No' → logprob: -9.961641311645508
    6. ']' → logprob: -10.336641311645508
    7. 'N' → logprob: -10.961641311645508
    8. '	Node' → logprob: -10.961641311645508
    9. ' ]' → logprob: -12.211641311645508
    10. '_Node' → logprob: -13.211641311645508

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006984725594520569
    2. ' for' → logprob: -5.381984710693359
    3. ',' → logprob: -7.381984710693359
    4. ']*' → logprob: -7.381984710693359
    5. ' ]' → logprob: -7.506984710693359
    6. ']+' → logprob: -8.25698471069336
    7. 'for' → logprob: -8.75698471069336
    8. ']*(' → logprob: -9.00698471069336
    9. ')' → logprob: -11.38198471069336
    10. '(' → logprob: -12.13198471069336

Token 48: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7087274193763733
    2. '(' → logprob: -1.4587273597717285
    3. '+' → logprob: -2.2087273597717285
    4. ' for' → logprob: -2.3337273597717285
    5. '*' → logprob: -3.7087273597717285
    6. 'for' → logprob: -4.0837273597717285
    7. ']' → logprob: -4.9587273597717285
    8. '[' → logprob: -5.5837273597717285
    9. '(n' → logprob: -5.5837273597717285
    10. ' +' → logprob: -5.8337273597717285

Token 49: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2904030382633209
    2. ' [' → logprob: -2.040403127670288
    3. '[n' → logprob: -2.290403127670288
    4. '[class' → logprob: -4.790402889251709
    5. '[node' → logprob: -4.790402889251709
    6. '[int' → logprob: -7.165402889251709
    7. '[list' → logprob: -7.165402889251709
    8. '[Index' → logprob: -7.540402889251709
    9. '[List' → logprob: -7.915402889251709
    10. '[self' → logprob: -7.915402889251709

Token 50: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -3.547789674485102e-05
    2. ' Node' → logprob: -10.250035285949707
    3. '	Node' → logprob: -18.750036239624023
    4. 'N' → logprob: -19.250036239624023
    5. 'No' → logprob: -19.500036239624023
    6. '(Node' → logprob: -19.625036239624023
    7. '_Node' → logprob: -19.625036239624023
    8. '<Node' → logprob: -21.000036239624023
    9. '.Node' → logprob: -21.500036239624023
    10. '_node' → logprob: -21.625036239624023

Token 51: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.002478508511558175
    2. '(' → logprob: -6.00247859954834
    3. '(n' → logprob: -13.25247859954834
    4. '(x' → logprob: -14.75247859954834
    5. '(range' → logprob: -15.75247859954834
    6. '((' → logprob: -16.127477645874023
    7. '(index' → logprob: -16.252477645874023
    8. 'i' → logprob: -16.377477645874023
    9. '(s' → logprob: -16.877477645874023
    10. '(j' → logprob: -16.877477645874023

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005846070707775652
    2. ' for' → logprob: -7.625584602355957
    3. 'for' → logprob: -10.250584602355957
    4. ' )' → logprob: -10.875584602355957
    5. '(' → logprob: -11.250584602355957
    6. '(n' → logprob: -12.250584602355957
    7. ' ' → logprob: -12.250584602355957
    8. ')]' → logprob: -12.375584602355957
    9. '<|end|>' → logprob: -12.375584602355957
    10. '(i' → logprob: -13.500584602355957

Token 53: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4988868832588196
    2. '(' → logprob: -1.8738868236541748
    3. '(i' → logprob: -2.123886823654175
    4. '(n' → logprob: -2.373886823654175
    5. ' (' → logprob: -4.248887062072754
    6. 'for' → logprob: -5.123887062072754
    7. ')' → logprob: -5.498887062072754
    8. '(range' → logprob: -6.623887062072754
    9. ' in' → logprob: -7.623887062072754
    10. ' ' → logprob: -9.248887062072754

Token 54: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008634188212454319
    2. 'range' → logprob: -4.758634090423584
    3. '(range' → logprob: -11.258634567260742
    4. '	range' → logprob: -12.633634567260742
    5. ' xrange' → logprob: -13.258634567260742
    6. ' i' → logprob: -13.508634567260742
    7. '_range' → logprob: -16.008634567260742
    8. ' in' → logprob: -16.133634567260742
    9. ' ' → logprob: -16.258634567260742
    10. ' ran' → logprob: -17.258634567260742

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0048906197771430016
    2. ' range' → logprob: -6.004890441894531
    3. 'range' → logprob: -6.879890441894531
    4. 'in' → logprob: -7.129890441894531
    5. ' ' → logprob: -7.504890441894531
    6. '(range' → logprob: -10.754890441894531
    7. ' i' → logprob: -12.254890441894531
    8. '(' → logprob: -13.004890441894531
    9. '  ' → logprob: -13.629890441894531
    10. ',' → logprob: -14.129890441894531

Token 56: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1602250337600708
    2. 'range' → logprob: -1.9102250337600708
    3. '(range' → logprob: -14.785224914550781
    4. ' ' → logprob: -15.160224914550781
    5. '	range' → logprob: -15.660224914550781
    6. '   ' → logprob: -17.28522491455078
    7. ' xrange' → logprob: -17.53522491455078
    8. '  ' → logprob: -18.03522491455078
    9. 'ange' → logprob: -19.03522491455078
    10. '_range' → logprob: -19.16022491455078

Token 57: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.000000953674316
    3. '(
' → logprob: -16.375001907348633
    4. '(n' → logprob: -16.375001907348633
    5. ' (' → logprob: -17.875001907348633
    6. '(

' → logprob: -18.750001907348633
    7. ' ' → logprob: -20.750001907348633
    8. ')' → logprob: -21.125001907348633
    9. ',' → logprob: -21.875001907348633
    10. '	' → logprob: -22.250001907348633

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8087270038668066e-05
    2. ' ' → logprob: -10.500027656555176
    3. 'n' → logprob: -15.250027656555176
    4. '   ' → logprob: -16.000028610229492
    5. '(' → logprob: -16.375028610229492
    6. ' n' → logprob: -17.750028610229492
    7. '(n' → logprob: -19.125028610229492
    8. '2' → logprob: -19.375028610229492
    9. '       ' → logprob: -20.000028610229492
    10. '    ' → logprob: -20.625028610229492

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012017777189612389
    2. ',n' → logprob: -7.251201629638672
    3. ' ,' → logprob: -7.626201629638672
    4. ' ' → logprob: -13.251201629638672
    5. '(n' → logprob: -13.876201629638672
    6. ',
' → logprob: -15.001201629638672
    7. 'n' → logprob: -15.251201629638672
    8. '1' → logprob: -15.751201629638672
    9. ',len' → logprob: -16.126201629638672
    10. '<|end|>' → logprob: -16.126201629638672

Token 60: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02324594371020794
    2. 'n' → logprob: -3.7732460498809814
    3. '	n' → logprob: -15.148245811462402
    4. ' ' → logprob: -15.523245811462402
    5. ' ' → logprob: -17.02324676513672
    6. ')n' → logprob: -17.52324676513672
    7. ' 
' → logprob: -17.77324676513672
    8. '(n' → logprob: -18.64824676513672
    9. '<|end|>' → logprob: -18.64824676513672
    10. ' ‌' → logprob: -18.89824676513672

Token 61: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022798418998718
    2. ' +' → logprob: -1.9102280139923096
    3. ')' → logprob: -13.78522777557373
    4. ' ' → logprob: -14.03522777557373
    5. ' +
' → logprob: -14.16022777557373
    6. ')]' → logprob: -14.28522777557373
    7. '+
' → logprob: -14.53522777557373
    8. ')+' → logprob: -16.910228729248047
    9. ' )' → logprob: -17.035228729248047
    10. '1' → logprob: -17.160228729248047

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042999543249607086
    2. ' ' → logprob: -3.167999505996704
    3. '```' → logprob: -15.667999267578125
    4. '   ' → logprob: -16.792999267578125
    5. '

' → logprob: -17.042999267578125
    6. ')' → logprob: -17.417999267578125
    7. ' ' → logprob: -17.542999267578125
    8. '  ' → logprob: -17.667999267578125
    9. '
' → logprob: -18.042999267578125
    10. '2' → logprob: -18.167999267578125

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. ')' → logprob: -17.62501335144043
    4. '```' → logprob: -17.62501335144043
    5. '   ' → logprob: -18.37501335144043
    6. '

' → logprob: -18.75001335144043
    7. '2' → logprob: -19.37501335144043
    8. '  ' → logprob: -19.87501335144043
    9. ')]' → logprob: -20.37501335144043
    10. '۱' → logprob: -21.00001335144043

Token 64: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03810954466462135
    2. ')' → logprob: -3.288109540939331
    3. ' )' → logprob: -10.78810977935791
    4. ']' → logprob: -10.91310977935791
    5. ')
' → logprob: -10.91310977935791
    6. '))' → logprob: -12.41310977935791
    7. ')])' → logprob: -13.03810977935791
    8. ')]
' → logprob: -13.41310977935791
    9. ')}' → logprob: -13.91310977935791
    10. '       ' → logprob: -14.53810977935791

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17951202392578125
    2. '<|end|>' → logprob: -2.6795120239257812
    3. 'def' → logprob: -2.9295120239257812
    4. '   ' → logprob: -3.3045120239257812
    5. ' def' → logprob: -5.929512023925781
    6. '    
' → logprob: -6.929512023925781
    7. '<|end|>' → logprob: -7.804512023925781
    8. '```' → logprob: -7.804512023925781
    9. ' 
' → logprob: -8.429512023925781
    10. '  
' → logprob: -8.804512023925781

Token 66: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07007692754268646
    2. '<|end|>' → logprob: -3.4450769424438477
    3. 'def' → logprob: -3.6950769424438477
    4. '   ' → logprob: -5.820076942443848
    5. '    
' → logprob: -6.195076942443848
    6. ' def' → logprob: -6.195076942443848
    7. ' 
' → logprob: -7.195076942443848
    8. '  
' → logprob: -7.320076942443848
    9. '

' → logprob: -7.445076942443848
    10. '<|end|>' → logprob: -7.695076942443848

Token 67: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26868435740470886
    2. '.n' → logprob: -1.8936843872070312
    3. '.root' → logprob: -3.1436843872070312
    4. '.parent' → logprob: -3.5186843872070312
    5. '.nodes' → logprob: -5.518684387207031
    6. ' .' → logprob: -6.143684387207031
    7. '.tree' → logprob: -6.268684387207031
    8. '.children' → logprob: -7.143684387207031
    9. '.parents' → logprob: -7.393684387207031
    10. 'n' → logprob: -8.018684387207031

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12145981937646866
    2. '=' → logprob: -2.371459722518921
    3. '_' → logprob: -4.2464599609375
    4. ' ' → logprob: -5.4964599609375
    5. '<|end|>' → logprob: -6.7464599609375
    6. '.' → logprob: -7.9964599609375
    7. ' _' → logprob: -8.1214599609375
    8. ')' → logprob: -8.7464599609375
    9. '_space' → logprob: -8.8714599609375
    10. '  ' → logprob: -8.8714599609375

Token 69: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029751529917120934
    2. 'n' → logprob: -3.5297515392303467
    3. '	n' → logprob: -14.154751777648926
    4. ' ' → logprob: -15.029751777648926
    5. ' ' → logprob: -17.15475082397461
    6. ' 
' → logprob: -18.15475082397461
    7. ' н' → logprob: -18.27975082397461
    8. ' ‌' → logprob: -19.15475082397461
    9. '    ' → logprob: -19.65475082397461
    10. ')n' → logprob: -19.90475082397461

Token 70: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04622640088200569
    2. '<|end|>' → logprob: -3.1712265014648438
    3. '   ' → logprob: -6.421226501464844
    4. '

' → logprob: -7.796226501464844
    5. '<|end|>' → logprob: -7.921226501464844
    6. 'def' → logprob: -8.046226501464844
    7. '    
' → logprob: -8.546226501464844
    8. '  
' → logprob: -9.421226501464844
    9. ' 
' → logprob: -9.796226501464844
    10. '```' → logprob: -9.796226501464844

Token 71: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3895074725151062
    2. 'def' → logprob: -2.014507532119751
    3. '<|end|>' → logprob: -2.639507532119751
    4. '
' → logprob: -2.764507532119751
    5. ' def' → logprob: -3.139507532119751
    6. '    
' → logprob: -5.264507293701172
    7. ' ' → logprob: -6.264507293701172
    8. '<|end|>' → logprob: -6.639507293701172
    9. '	def' → logprob: -7.389507293701172
    10. '```' → logprob: -7.514507293701172

Token 72: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2201843559741974
    2. 'def' → logprob: -2.345184326171875
    3. '<|end|>' → logprob: -2.720184326171875
    4. '   ' → logprob: -4.095184326171875
    5. '    
' → logprob: -4.345184326171875
    6. '

' → logprob: -6.220184326171875
    7. '<|end|>' → logprob: -6.220184326171875
    8. ' def' → logprob: -6.970184326171875
    9. ' 
' → logprob: -8.220184326171875
    10. '  
' → logprob: -8.345184326171875

Token 73: '.mark' (ID: 32834)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003677632659673691
    2. '.parent' → logprob: -6.253677845001221
    3. '.root' → logprob: -6.503677845001221
    4. '.children' → logprob: -10.253677368164062
    5. '.parents' → logprob: -10.503677368164062
    6. '._' → logprob: -10.878677368164062
    7. ' .' → logprob: -11.128677368164062
    8. '_root' → logprob: -11.253677368164062
    9. '.is' → logprob: -11.253677368164062
    10. '.depth' → logprob: -11.378677368164062

Token 74: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.000883237924426794
    2. 's' → logprob: -7.250883102416992
    3. ' =' → logprob: -9.125883102416992
    4. 'ers' → logprob: -10.875883102416992
    5. '=' → logprob: -11.125883102416992
    6. 'ing' → logprob: -11.500883102416992
    7. '[' → logprob: -12.125883102416992
    8. 'e' → logprob: -12.875883102416992
    9. 'edin' → logprob: -13.125883102416992
    10. '_' → logprob: -13.250883102416992

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0790766105055809
    2. '=' → logprob: -2.5790765285491943
    3. 's' → logprob: -9.454076766967773
    4. '_nodes' → logprob: -9.954076766967773
    5. 'ed' → logprob: -10.829076766967773
    6. '_' → logprob: -10.954076766967773
    7. ' ' → logprob: -11.329076766967773
    8. '  ' → logprob: -12.204076766967773
    9. '[' → logprob: -13.704076766967773
    10. '=[]' → logprob: -13.954076766967773

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6787058711051941
    2. ' [' → logprob: -0.9287058711051941
    3. '[]' → logprob: -3.178705930709839
    4. ' set' → logprob: -3.303705930709839
    5. 'set' → logprob: -4.30370569229126
    6. ' []' → logprob: -5.17870569229126
    7. '{}' → logprob: -9.803706169128418
    8. ' ' → logprob: -10.928706169128418
    9. ' {}' → logprob: -11.178706169128418
    10. '[s' → logprob: -11.928706169128418

Token 77: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014175384305417538
    2. ' False' → logprob: -4.2641754150390625
    3. '0' → logprob: -11.889175415039062
    4. 'F' → logprob: -12.764175415039062
    5. '(False' → logprob: -13.639175415039062
    6. ']' → logprob: -15.764175415039062
    7. 'True' → logprob: -15.764175415039062
    8. 'Fal' → logprob: -15.889175415039062
    9. 'Fa' → logprob: -16.264175415039062
    10. '   ' → logprob: -16.264175415039062

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004866907373070717
    2. '(' → logprob: -6.129867076873779
    3. ' for' → logprob: -6.629867076873779
    4. ' ]' → logprob: -6.879867076873779
    5. ']*' → logprob: -8.754866600036621
    6. ')' → logprob: -10.379866600036621
    7. ',' → logprob: -10.504866600036621
    8. '](' → logprob: -10.629866600036621
    9. ']*(' → logprob: -10.879866600036621
    10. ' (' → logprob: -11.004866600036621

Token 79: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09971360862255096
    2. ' *' → logprob: -2.4747135639190674
    3. '(' → logprob: -5.5997138023376465
    4. '+' → logprob: -6.4747138023376465
    5. '[' → logprob: -6.4747138023376465
    6. '(n' → logprob: -6.8497138023376465
    7. ']' → logprob: -7.2247138023376465
    8. ' for' → logprob: -7.3497138023376465
    9. '*(' → logprob: -7.4747138023376465
    10. ')' → logprob: -8.849713325500488

Token 80: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.21672742068767548
    2. ' (' → logprob: -1.841727375984192
    3. 'n' → logprob: -3.7167274951934814
    4. '(' → logprob: -4.591727256774902
    5. ' n' → logprob: -6.341727256774902
    6. '(self' → logprob: -9.466727256774902
    7. 'self' → logprob: -11.591727256774902
    8. ' self' → logprob: -12.091727256774902
    9. ' ' → logprob: -13.466727256774902
    10. '	n' → logprob: -14.091727256774902

Token 81: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0452575720846653
    2. '(n' → logprob: -3.170257568359375
    3. 'self' → logprob: -7.045257568359375
    4. ' (' → logprob: -7.295257568359375
    5. ' n' → logprob: -8.045257568359375
    6. '(' → logprob: -8.170257568359375
    7. '(self' → logprob: -9.795257568359375
    8. ')n' → logprob: -10.795257568359375
    9. '   ' → logprob: -11.295257568359375
    10. ')' → logprob: -12.170257568359375

Token 82: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10039536654949188
    2. ' +' → logprob: -2.350395441055298
    3. ')' → logprob: -9.100395202636719
    4. ' )' → logprob: -10.475395202636719
    5. ' ' → logprob: -10.850395202636719
    6. '<|end|>' → logprob: -11.475395202636719
    7. ' +
' → logprob: -11.600395202636719
    8. '+
' → logprob: -12.100395202636719
    9. '+)' → logprob: -12.725395202636719
    10. ' +

' → logprob: -15.100395202636719

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009120595059357584
    2. ' ' → logprob: -7.000912189483643
    3. '```' → logprob: -15.500911712646484
    4. ')' → logprob: -15.750911712646484
    5. '2' → logprob: -16.625911712646484
    6. '   ' → logprob: -17.500911712646484
    7. '۱' → logprob: -18.000911712646484
    8. '１' → logprob: -18.313411712646484
    9. ' )' → logprob: -18.313411712646484
    10. ' ' → logprob: -18.563411712646484

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0484450437361374e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.750040054321289
    4. ')' → logprob: -16.62504005432129
    5. '  ' → logprob: -17.00004005432129
    6. '```' → logprob: -17.25004005432129
    7. '2' → logprob: -17.37504005432129
    8. '１' → logprob: -17.93754005432129
    9. '

' → logprob: -18.00004005432129
    10. '۱' → logprob: -18.18754005432129

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7133641196996905e-05
    2. ' )' → logprob: -11.00002670288086
    3. ')
' → logprob: -11.62502670288086
    4. '       ' → logprob: -15.50002670288086
    5. '   ' → logprob: -15.62502670288086
    6. '))' → logprob: -16.00002670288086
    7. '`)' → logprob: -16.12502670288086
    8. ')n' → logprob: -16.37502670288086
    9. ')return' → logprob: -16.50002670288086
    10. '）' → logprob: -16.50002670288086

Token 86: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31301572918891907
    2. '   ' → logprob: -2.1880156993865967
    3. '<|end|>' → logprob: -2.5630156993865967
    4. 'def' → logprob: -2.9380156993865967
    5. ' def' → logprob: -4.063015937805176
    6. '    
' → logprob: -5.813015937805176
    7. ' 
' → logprob: -6.313015937805176
    8. '<|end|>' → logprob: -7.063015937805176
    9. '  
' → logprob: -7.188015937805176
    10. ' ' → logprob: -7.438015937805176

Token 87: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5267614126205444
    2. '   ' → logprob: -1.7767614126205444
    3. '
' → logprob: -1.9017614126205444
    4. '<|end|>' → logprob: -2.651761531829834
    5. ' def' → logprob: -4.526761531829834
    6. '    
' → logprob: -5.026761531829834
    7. '<|end|>' → logprob: -7.151761531829834
    8. '       ' → logprob: -7.651761531829834
    9. ' 
' → logprob: -8.026761054992676
    10. ' ' → logprob: -8.276761054992676

Token 88: '.uf' (ID: 131293)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.8871074914932251
    2. '.' → logprob: -1.137107491493225
    3. '.stack' → logprob: -2.2621073722839355
    4. '.depth' → logprob: -2.7621073722839355
    5. '.selected' → logprob: -4.3871073722839355
    6. '.root' → logprob: -4.6371073722839355
    7. '.parents' → logprob: -4.7621073722839355
    8. '.mark' → logprob: -4.7621073722839355
    9. '.tree' → logprob: -5.1371073722839355
    10. '.is' → logprob: -5.2621073722839355

Token 89: '_parent' (ID: 39570)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26567351818084717
    2. '=' → logprob: -1.6406735181808472
    3. '_' → logprob: -3.5156736373901367
    4. '_parent' → logprob: -4.765673637390137
    5. 's' → logprob: -7.515673637390137
    6. ' ' → logprob: -9.390673637390137
    7. '_id' → logprob: -9.515673637390137
    8. '_par' → logprob: -9.515673637390137
    9. '_ind' → logprob: -9.890673637390137
    10. 'parent' → logprob: -10.390673637390137

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01424072589725256
    2. '=' → logprob: -4.264240741729736
    3. '<|end|>' → logprob: -10.389240264892578
    4. 's' → logprob: -10.889240264892578
    5. ' ' → logprob: -11.139240264892578
    6. '[' → logprob: -11.889240264892578
    7. ' =[' → logprob: -13.139240264892578
    8. '=[]' → logprob: -13.764240264892578
    9. '  ' → logprob: -14.014240264892578
    10. ' =
' → logprob: -14.139240264892578

Token 91: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2558055818080902
    2. ' [' → logprob: -1.5058056116104126
    3. '[list' → logprob: -6.005805492401123
    4. ' list' → logprob: -6.755805492401123
    5. '[n' → logprob: -9.505805969238281
    6. 'list' → logprob: -10.005805969238281
    7. '[i' → logprob: -10.005805969238281
    8. '[-' → logprob: -10.755805969238281
    9. '[List' → logprob: -11.005805969238281
    10. '[node' → logprob: -11.130805969238281

Token 92: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.000204851632588543
    2. '(' → logprob: -8.500205039978027
    3. '<|end|>' → logprob: -14.000205039978027
    4. 'range' → logprob: -15.500205039978027
    5. '(
' → logprob: -16.00020408630371
    6. '(i' → logprob: -16.37520408630371
    7. '	range' → logprob: -17.37520408630371
    8. '(

' → logprob: -17.50020408630371
    9. ' range' → logprob: -17.50020408630371
    10. '(map' → logprob: -17.75020408630371

Token 93: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00038705902989022434
    2. '(' → logprob: -7.875387191772461
    3. ' (' → logprob: -12.875387191772461
    4. '(self' → logprob: -13.000387191772461
    5. 'n' → logprob: -13.750387191772461
    6. ')(' → logprob: -15.125387191772461
    7. ')' → logprob: -15.500387191772461
    8. '((' → logprob: -15.750387191772461
    9. '(
' → logprob: -15.875387191772461
    10. '(len' → logprob: -15.875387191772461

Token 94: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193390250205994
    2. '+' → logprob: -1.5019339323043823
    3. ' ' → logprob: -12.876934051513672
    4. ' +
' → logprob: -13.376934051513672
    5. '+
' → logprob: -15.126934051513672
    6. ')' → logprob: -16.126934051513672
    7. '1' → logprob: -16.501934051513672
    8. ' +
' → logprob: -16.876934051513672
    9. ' +

' → logprob: -17.126934051513672
    10. '   ' → logprob: -17.126934051513672

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011327913030982018
    2. ' ' → logprob: -4.511327743530273
    3. '+' → logprob: -8.761327743530273
    4. ' +' → logprob: -10.261327743530273
    5. ' n' → logprob: -10.636327743530273
    6. ')' → logprob: -10.886327743530273
    7. 'n' → logprob: -11.011327743530273
    8. '   ' → logprob: -11.386327743530273
    9. '```' → logprob: -11.761327743530273
    10. '(n' → logprob: -13.136327743530273

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.750011444091797
    3. '+' → logprob: -12.750011444091797
    4. ')' → logprob: -15.500011444091797
    5. 'n' → logprob: -15.875011444091797
    6. '```' → logprob: -15.875011444091797
    7. ' +' → logprob: -16.625011444091797
    8. '۱' → logprob: -16.875011444091797
    9. '   ' → logprob: -17.125011444091797
    10. '

' → logprob: -17.500011444091797

Token 97: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.47424542903900146
    2. ')' → logprob: -0.9742454290390015
    3. '))
' → logprob: -8.974245071411133
    4. ')
' → logprob: -10.224245071411133
    5. ')))' → logprob: -12.849245071411133
    6. '<|end|>' → logprob: -13.849245071411133
    7. ' )' → logprob: -14.599245071411133
    8. '])' → logprob: -15.224245071411133
    9. ')}' → logprob: -15.599245071411133
    10. ' ))' → logprob: -15.599245071411133

Token 98: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6168181896209717
    2. '<|end|>' → logprob: -0.8668181896209717
    3. '   ' → logprob: -3.3668181896209717
    4. '    
' → logprob: -5.741818428039551
    5. '<|end|>' → logprob: -7.616818428039551
    6. '' → logprob: -8.11681842803955
    7. 'def' → logprob: -8.11681842803955
    8. ' 
' → logprob: -8.36681842803955
    9. ' ' → logprob: -8.36681842803955
    10. '  
' → logprob: -8.61681842803955

Token 99: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07281854748725891
    2. '<|end|>' → logprob: -3.0728185176849365
    3. '   ' → logprob: -3.8228185176849365
    4. 'def' → logprob: -6.822818756103516
    5. '    
' → logprob: -7.447818756103516
    6. '

' → logprob: -9.822818756103516
    7. '```' → logprob: -9.822818756103516
    8. '<|end|>' → logprob: -9.822818756103516
    9. '       ' → logprob: -9.947818756103516
    10. ' def' → logprob: -10.322818756103516

Token 100: ' Union' (ID: 14746)
  Prédit: ' Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.14009620249271393
    2. 'Union' → logprob: -2.7650961875915527
    3. 'Initialize' → logprob: -4.265096187591553
    4. ' Initialize' → logprob: -4.515096187591553
    5. ' Dis' → logprob: -4.640096187591553
    6. 'self' → logprob: -5.140096187591553
    7. 'Dis' → logprob: -5.640096187591553
    8. 'union' → logprob: -5.765096187591553
    9. ' for' → logprob: -5.890096187591553
    10. ' union' → logprob: -6.015096187591553

Token 101: '-F' (ID: 8074)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.08083905279636383
    2. '-F' → logprob: -2.580839157104492
    3. ' Find' → logprob: -6.955839157104492
    4. '_Find' → logprob: -8.080839157104492
    5. '-' → logprob: -8.330839157104492
    6. ' -' → logprob: -8.955839157104492
    7. '   ' → logprob: -9.205839157104492
    8. '-find' → logprob: -9.455839157104492
    9. 'find' → logprob: -10.205839157104492
    10. '[' → logprob: -10.705839157104492

Token 102: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.11411885172128677
    2. 'Find' → logprob: -2.239118814468384
    3. ' Find' → logprob: -8.614118576049805
    4. 'find' → logprob: -8.739118576049805
    5. '-find' → logprob: -8.739118576049805
    6. ' ind' → logprob: -8.739118576049805
    7. '```' → logprob: -9.364118576049805
    8. ' ' → logprob: -9.864118576049805
    9. '_find' → logprob: -9.864118576049805
    10. 'nd' → logprob: -10.114118576049805

Token 103: ' parent' (ID: 5980)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48049867153167725
    2. '<|end|>' → logprob: -0.9804986715316772
    3. '   ' → logprob: -6.230498790740967
    4. '

' → logprob: -6.480498790740967
    5. '<|end|>' → logprob: -6.480498790740967
    6. 'def' → logprob: -8.355498313903809
    7. '
' → logprob: -8.730498313903809
    8. '[' → logprob: -8.855498313903809
    9. '    
' → logprob: -8.855498313903809
    10. ' def' → logprob: -8.980498313903809

Token 104: ' array' (ID: 2644)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.890134871006012
    2. '<|end|>' → logprob: -1.1401348114013672
    3. '   ' → logprob: -1.3901348114013672
    4. '    
' → logprob: -4.265134811401367
    5. '       ' → logprob: -6.390134811401367
    6. '<|end|>' → logprob: -6.515134811401367
    7. 'def' → logprob: -7.140134811401367
    8. '  
' → logprob: -7.890134811401367
    9. '```' → logprob: -8.015134811401367
    10. '        
' → logprob: -8.015134811401367

Token 106: ' marked' (ID: 20779)
  Prédit: ' connectivity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connectivity' → logprob: -0.551859974861145
    2. ' the' → logprob: -1.926859974861145
    3. ' union' → logprob: -2.5518598556518555
    4. ' tracking' → logprob: -2.6768598556518555
    5. ' maintaining' → logprob: -3.3018598556518555
    6. ' connected' → logprob: -3.8018598556518555
    7. ' managing' → logprob: -3.9268598556518555
    8. ' detecting' → logprob: -4.1768598556518555
    9. ' each' → logprob: -5.0518598556518555
    10. ' dynamic' → logprob: -5.1768598556518555

Token 107: ' ancestors' (ID: 66258)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24576759338378906
    2. '   ' → logprob: -2.245767593383789
    3. '<|end|>' → logprob: -2.620767593383789
    4. 'def' → logprob: -3.620767593383789
    5. '    
' → logprob: -4.745767593383789
    6. '

' → logprob: -6.745767593383789
    7. '<|end|>' → logprob: -6.745767593383789
    8. ' def' → logprob: -7.245767593383789
    9. '  
' → logprob: -8.870767593383789
    10. ' 
' → logprob: -8.995767593383789

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0434364415705204
    2. '   ' → logprob: -3.4184365272521973
    3. 'def' → logprob: -5.418436527252197
    4. '<|end|>' → logprob: -6.043436527252197
    5. '    
' → logprob: -6.293436527252197
    6. '

' → logprob: -7.418436527252197
    7. ' def' → logprob: -8.668436050415039
    8. '  
' → logprob: -9.543436050415039
    9. ' 
' → logprob: -9.668436050415039
    10. '<|end|>' → logprob: -9.918436050415039

Token 110: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6740313172340393
    2. ' def' → logprob: -1.2990312576293945
    3. '   ' → logprob: -1.6740312576293945
    4. '
' → logprob: -3.5490312576293945
    5. '    
' → logprob: -6.9240312576293945
    6. '

' → logprob: -8.549031257629395
    7. ' 
' → logprob: -10.174031257629395
    8. '	def' → logprob: -10.799031257629395
    9. '```' → logprob: -10.799031257629395
    10. ' ' → logprob: -10.924031257629395

Token 111: ' add' (ID: 1147)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.045470260083675385
    2. 'find' → logprob: -3.1704702377319336
    3. ' uf' → logprob: -6.295470237731934
    4. ' union' → logprob: -8.545470237731934
    5. 'uf' → logprob: -8.920470237731934
    6. '_find' → logprob: -9.420470237731934
    7. ' ' → logprob: -9.920470237731934
    8. '	find' → logprob: -10.170470237731934
    9. ' def' → logprob: -10.420470237731934
    10. 'union' → logprob: -10.795470237731934

Token 112: '_edge' (ID: 43226)
  Prédit: '_child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.6235818862915039
    2. '_edge' → logprob: -1.373581886291504
    3. '_node' → logprob: -1.873581886291504
    4. '_' → logprob: -2.873581886291504
    5. '_parent' → logprob: -7.623581886291504
    6. '_branch' → logprob: -9.498581886291504
    7. '_connection' → logprob: -9.873581886291504
    8. '_children' → logprob: -10.748581886291504
    9. '_leaf' → logprob: -10.873581886291504
    10. '_relation' → logprob: -11.998581886291504

Token 113: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01879008300602436
    2. '(' → logprob: -4.018790245056152
    3. ' (' → logprob: -7.518790245056152
    4. '(s' → logprob: -9.518790245056152
    5. 'self' → logprob: -11.893790245056152
    6. '(sel' → logprob: -12.643790245056152
    7. '(u' → logprob: -12.768790245056152
    8. '(
' → logprob: -13.018790245056152
    9. '(a' → logprob: -13.393790245056152
    10. ' self' → logprob: -13.518790245056152

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.452426608419046e-05
    2. 'self' → logprob: -10.37503433227539
    3. ' ,' → logprob: -13.37503433227539
    4. ',u' → logprob: -13.87503433227539
    5. 'u' → logprob: -15.25003433227539
    6. ',self' → logprob: -15.87503433227539
    7. 's' → logprob: -16.25003433227539
    8. ',
' → logprob: -16.50003433227539
    9. ',parent' → logprob: -17.25003433227539
    10. '   ' → logprob: -17.37503433227539

Token 115: ' child' (ID: 2320)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.32817402482032776
    2. 'u' → logprob: -1.3281739950180054
    3. 'self' → logprob: -4.703174114227295
    4. ' self' → logprob: -5.203174114227295
    5. ' parent' → logprob: -9.453173637390137
    6. ')' → logprob: -9.828173637390137
    7. 'parent' → logprob: -9.828173637390137
    8. 'a' → logprob: -11.078173637390137
    9. '   ' → logprob: -11.078173637390137
    10. '	u' → logprob: -12.078173637390137

Token 116: '_index' (ID: 7748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016077011823654175
    2. ' ,' → logprob: -7.751607894897461
    3. '_index' → logprob: -7.751607894897461
    4. '_,' → logprob: -8.251607894897461
    5. '_parent' → logprob: -8.626607894897461
    6. '_idx' → logprob: -9.376607894897461
    7. '):' → logprob: -9.626607894897461
    8. ')' → logprob: -10.126607894897461
    9. ',parent' → logprob: -10.626607894897461
    10. '_node' → logprob: -10.876607894897461

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -11.750008583068848
    3. ',parent' → logprob: -15.250008583068848
    4. ',
' → logprob: -17.00000762939453
    5. ':' → logprob: -18.75000762939453
    6. '‌,' → logprob: -18.87500762939453
    7. ',node' → logprob: -19.37500762939453
    8. ',index' → logprob: -20.00000762939453
    9. '):' → logprob: -20.12500762939453
    10. ',class' → logprob: -20.50000762939453

Token 118: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.1427260935306549
    2. 'parent' → logprob: -2.017726182937622
    3. '   ' → logprob: -11.142725944519043
    4. ',parent' → logprob: -11.392725944519043
    5. ' ' → logprob: -12.142725944519043
    6. '	parent' → logprob: -12.392725944519043
    7. '[parent' → logprob: -13.142725944519043
    8. '_parent' → logprob: -13.142725944519043
    9. ' father' → logprob: -13.392725944519043
    10. 'p' → logprob: -13.392725944519043

Token 119: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0011930868495255709
    2. '_' → logprob: -7.001193046569824
    3. ')_' → logprob: -9.376193046569824
    4. '):' → logprob: -9.501193046569824
    5. ' _' → logprob: -10.001193046569824
    6. ')' → logprob: -10.251193046569824
    7. '_indices' → logprob: -11.126193046569824
    8. '_idx' → logprob: -12.001193046569824
    9. '_i' → logprob: -12.501193046569824
    10. 'index' → logprob: -12.751193046569824

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012960802763700485
    2. '):
' → logprob: -4.387960910797119
    3. ')' → logprob: -7.762960910797119
    4. ':' → logprob: -10.762960433959961
    5. '   ' → logprob: -13.262960433959961
    6. ' ):' → logprob: -13.887960433959961
    7. '):
' → logprob: -14.012960433959961
    8. '):

' → logprob: -14.637960433959961
    9. '       ' → logprob: -15.387960433959961
    10. ' ' → logprob: -15.887960433959961

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018487969413399696
    2. '
' → logprob: -4.268487930297852
    3. 'self' → logprob: -6.393487930297852
    4. ' self' → logprob: -6.768487930297852
    5. '<|end|>' → logprob: -7.768487930297852
    6. '   ' → logprob: -7.893487930297852
    7. ',' → logprob: -9.143487930297852
    8. '):
' → logprob: -9.143487930297852
    9. '        
' → logprob: -9.143487930297852
    10. '```' → logprob: -9.768487930297852

Token 122: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18363067507743835
    2. 'self' (adapté à ' self') → logprob: -2.1836307048797607
    3. ' self' → logprob: -3.3086307048797607
    4. 'child' → logprob: -5.058630466461182
    5. ' child' → logprob: -5.183630466461182
    6. 'node' → logprob: -5.808630466461182
    7. ' node' → logprob: -6.683630466461182
    8. 'parent' → logprob: -6.933630466461182
    9. '
' → logprob: -7.183630466461182
    10. ' parent' → logprob: -8.05863094329834

Token 123: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.003221802646294236
    2. '.' → logprob: -5.8782219886779785
    3. '.children' → logprob: -9.25322151184082
    4. ' .' → logprob: -9.37822151184082
    5. '.cells' → logprob: -10.75322151184082
    6. '   ' → logprob: -10.87822151184082
    7. '.n' → logprob: -10.87822151184082
    8. '
' → logprob: -11.00322151184082
    9. '[' → logprob: -11.00322151184082
    10. '	nodes' → logprob: -11.00322151184082

Token 124: '[' (ID: 58)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.05489131063222885
    2. '[' → logprob: -2.929891347885132
    3. 'parent' → logprob: -13.304891586303711
    4. '[self' → logprob: -13.429891586303711
    5. '[node' → logprob: -13.804891586303711
    6. '   ' → logprob: -14.179891586303711
    7. '[p' → logprob: -14.679891586303711
    8. '[
' → logprob: -14.679891586303711
    9. '[player' → logprob: -14.929891586303711
    10. '[class' → logprob: -15.179891586303711

Token 125: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.20259806513786316
    2. 'parent' → logprob: -1.7025980949401855
    3. ' child' → logprob: -7.4525980949401855
    4. ' parent' → logprob: -7.5775980949401855
    5. 'index' → logprob: -10.077597618103027
    6. 'children' → logprob: -11.952597618103027
    7. '_parent' → logprob: -12.077597618103027
    8. '_child' → logprob: -12.202597618103027
    9. '(child' → logprob: -12.327597618103027
    10. '[parent' → logprob: -12.577597618103027

Token 126: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0003360582049936056
    2. '_' → logprob: -8.125335693359375
    3. ' _' → logprob: -11.000335693359375
    4. '._' → logprob: -12.375335693359375
    5. ']_' → logprob: -12.500335693359375
    6. '_i' → logprob: -12.750335693359375
    7. ']' → logprob: -13.000335693359375
    8. ')' → logprob: -13.750335693359375
    9. '_ind' → logprob: -14.125335693359375
    10. ')_' → logprob: -14.125335693359375

Token 127: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.4025771915912628
    2. ').' → logprob: -1.2775771617889404
    3. '.parent' → logprob: -3.4025771617889404
    4. '.' → logprob: -4.0275774002075195
    5. ']' → logprob: -7.5275774002075195
    6. ')' → logprob: -7.5275774002075195
    7. '}.' → logprob: -9.02757740020752
    8. '   ' → logprob: -9.40257740020752
    9. ' ' → logprob: -9.52757740020752
    10. ' ].' → logprob: -9.65257740020752

Token 128: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -6.630610641877865e-06
    2. ' parent' → logprob: -12.250006675720215
    3. 'paren' → logprob: -13.875006675720215
    4. '.parent' → logprob: -14.875006675720215
    5. '_parent' → logprob: -15.875006675720215
    6. 'children' → logprob: -16.5000057220459
    7. '	parent' → logprob: -16.7500057220459
    8. 'parents' → logprob: -16.7500057220459
    9. 'par' → logprob: -17.2500057220459
    10. 'pare' → logprob: -17.7500057220459

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021130740642548
    2. '=' → logprob: -2.3502113819122314
    3. ' ' → logprob: -13.225211143493652
    4. '.' → logprob: -13.600211143493652
    5. 's' → logprob: -14.725211143493652
    6. ' =
' → logprob: -15.225211143493652
    7. '<|end|>' → logprob: -15.350211143493652
    8. ')' → logprob: -15.850211143493652
    9. '.=' → logprob: -16.35021209716797
    10. ',' → logprob: -16.35021209716797

Token 130: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07912749797105789
    2. 'self' → logprob: -2.579127550125122
    3. ' parent' → logprob: -8.579127311706543
    4. 'parent' → logprob: -9.954127311706543
    5. ' ' → logprob: -13.954127311706543
    6. '	self' → logprob: -14.204127311706543
    7. ' ' → logprob: -14.704127311706543
    8. '(self' → logprob: -16.57912826538086
    9. ' 
' → logprob: -17.07912826538086
    10. '    ' → logprob: -18.07912826538086

Token 131: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.010504503734409809
    2. '.' → logprob: -4.635504722595215
    3. '.parent' → logprob: -7.760504722595215
    4. 'nodes' → logprob: -8.260504722595215
    5. '.
' → logprob: -11.510504722595215
    6. '.n' → logprob: -11.760504722595215
    7. '.children' → logprob: -11.885504722595215
    8. '._' → logprob: -12.510504722595215
    9. 's' → logprob: -12.635504722595215
    10. '.parents' → logprob: -12.635504722595215

Token 132: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -1.3425219549390022e-05
    2. '[' → logprob: -11.62501335144043
    3. 'parent' → logprob: -12.50001335144043
    4. ' [' → logprob: -14.50001335144043
    5. '(parent' → logprob: -16.37501335144043
    6. '```' → logprob: -17.12501335144043
    7. '[p' → logprob: -17.50001335144043
    8. '[root' → logprob: -17.87501335144043
    9. '[
' → logprob: -18.25001335144043
    10. '   ' → logprob: -18.25001335144043

Token 133: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00010354319238103926
    2. 'index' → logprob: -9.625103950500488
    3. '_' → logprob: -11.625103950500488
    4. 'parent' → logprob: -11.750103950500488
    5. '_parent' → logprob: -12.250103950500488
    6. ')' → logprob: -12.625103950500488
    7. ' _' → logprob: -12.875103950500488
    8. 'Index' → logprob: -13.250103950500488
    9. '(parent' → logprob: -13.875103950500488
    10. ']' → logprob: -14.000103950500488

Token 134: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11771587282419205
    2. ']' → logprob: -2.242715835571289
    3. ')
' → logprob: -5.867715835571289
    4. '<|end|>' → logprob: -6.992715835571289
    5. ' )' → logprob: -7.992715835571289
    6. ']
' → logprob: -8.117715835571289
    7. ').' → logprob: -9.242715835571289
    8. '])' → logprob: -9.367715835571289
    9. '       ' → logprob: -9.367715835571289
    10. ' ]' → logprob: -9.617715835571289

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012386832386255264
    2. 'self' → logprob: -6.751238822937012
    3. '<|end|>' → logprob: -10.626238822937012
    4. '   ' → logprob: -11.126238822937012
    5. ' self' → logprob: -11.251238822937012
    6. ',' → logprob: -11.626238822937012
    7. '
' → logprob: -13.251238822937012
    8. '```' → logprob: -13.876238822937012
    9. '        
' → logprob: -14.376238822937012
    10. '<|end|>' → logprob: -14.501238822937012

Token 136: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007268683053553104
    2. ' self' → logprob: -5.007268905639648
    3. '       ' → logprob: -7.507268905639648
    4. '   ' → logprob: -13.132268905639648
    5. '
' → logprob: -14.007268905639648
    6. '	self' → logprob: -14.132268905639648
    7. '```' → logprob: -14.882268905639648
    8. '        
' → logprob: -16.63226890563965
    9. '           ' → logprob: -16.75726890563965
    10. '[self' → logprob: -16.88226890563965

Token 137: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.002563291694968939
    2. '.' → logprob: -6.3775634765625
    3. ' .' → logprob: -7.8775634765625
    4. 'nodes' → logprob: -8.5025634765625
    5. '
' → logprob: -9.2525634765625
    6. '	nodes' → logprob: -10.3775634765625
    7. '.tokens' → logprob: -11.0025634765625
    8. '.
' → logprob: -11.1275634765625
    9. '.n' → logprob: -11.2525634765625
    10. '.parent' → logprob: -11.2525634765625

Token 138: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -4.3226136767771095e-05
    2. '[' → logprob: -10.375042915344238
    3. 'parent' → logprob: -11.625042915344238
    4. '[p' → logprob: -14.125042915344238
    5. '
' → logprob: -14.500042915344238
    6. ' [' → logprob: -14.750042915344238
    7. '[node' → logprob: -15.500042915344238
    8. '   ' → logprob: -15.625042915344238
    9. '.parent' → logprob: -15.625042915344238
    10. '```' → logprob: -15.750042915344238

Token 139: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.021826189011335373
    2. '].' → logprob: -4.396826267242432
    3. '[' → logprob: -5.646826267242432
    4. '.children' → logprob: -5.896826267242432
    5. '][' → logprob: -6.896826267242432
    6. 's' → logprob: -8.021825790405273
    7. ']' → logprob: -8.271825790405273
    8. '[parent' → logprob: -8.271825790405273
    9. '.child' → logprob: -8.396825790405273
    10. '.' → logprob: -8.771825790405273

Token 140: '].' (ID: 1651)
  Prédit: '.children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.3513505458831787
    2. '].' → logprob: -1.2263505458831787
    3. '.' → logprob: -6.601350784301758
    4. ').' → logprob: -6.726350784301758
    5. '}.' → logprob: -8.351350784301758
    6. '.child' → logprob: -10.601350784301758
    7. ' ].' → logprob: -11.476350784301758
    8. ']' → logprob: -12.101350784301758
    9. '.Children' → logprob: -12.101350784301758
    10. ' .' → logprob: -12.351350784301758

Token 141: 'children' (ID: 10961)
  Prédit: 'children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'children' → logprob: -1.5094070477061905e-05
    2. '.children' → logprob: -11.625015258789062
    3. ' children' → logprob: -12.250015258789062
    4. 'child' → logprob: -14.250015258789062
    5. '	children' → logprob: -15.000015258789062
    6. '_children' → logprob: -16.125015258789062
    7. '(children' → logprob: -16.125015258789062
    8. 'chil' → logprob: -16.875015258789062
    9. '```' → logprob: -17.625015258789062
    10. 'c' → logprob: -17.875015258789062

Token 142: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003184125293046236
    2. '.' → logprob: -5.7531843185424805
    3. ' .' → logprob: -13.25318431854248
    4. '.app' → logprob: -13.50318431854248
    5. '.ap' → logprob: -13.75318431854248
    6. '.setdefault' → logprob: -14.62818431854248
    7. '.add' → logprob: -14.87818431854248
    8. 'append' → logprob: -15.00318431854248
    9. '.Append' → logprob: -15.25318431854248
    10. ').' → logprob: -15.25318431854248

Token 143: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015051016816869378
    2. '(' → logprob: -6.501504898071289
    3. 'self' → logprob: -13.501504898071289
    4. '(
' → logprob: -13.626504898071289
    5. ' (' → logprob: -15.876504898071289
    6. '(

' → logprob: -16.87650489807129
    7. ' self' → logprob: -17.37650489807129
    8. '(s' → logprob: -17.75150489807129
    9. '(sel' → logprob: -19.37650489807129
    10. '((' → logprob: -19.50150489807129

Token 144: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.014530611224472523
    2. '[' → logprob: -4.639530658721924
    3. 'nodes' → logprob: -5.889530658721924
    4. '.' → logprob: -7.264530658721924
    5. ')' → logprob: -7.889530658721924
    6. ']' → logprob: -8.264530181884766
    7. '.children' → logprob: -8.639530181884766
    8. '_nodes' → logprob: -9.014530181884766
    9. '	nodes' → logprob: -9.639530181884766
    10. ' nodes' → logprob: -9.764530181884766

Token 145: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. 'child' → logprob: -14.375001907348633
    3. '[
' → logprob: -14.875001907348633
    4. '(child' → logprob: -15.375001907348633
    5. ')[' → logprob: -15.625001907348633
    6. ' [' → logprob: -15.625001907348633
    7. ')' → logprob: -16.250001907348633
    8. '[parent' → logprob: -16.250001907348633
    9. '```' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.750001907348633

Token 146: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -7.004696090007201e-05
    2. ' child' → logprob: -9.625069618225098
    3. '   ' → logprob: -13.500069618225098
    4. '	child' → logprob: -13.750069618225098
    5. '(child' → logprob: -14.875069618225098
    6. '.child' → logprob: -15.500069618225098
    7. 'ch' → logprob: -15.500069618225098
    8. 'chil' → logprob: -15.625069618225098
    9. 'chi' → logprob: -16.375070571899414
    10. '[' → logprob: -16.500070571899414

Token 147: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0009557669400237501
    2. 'child' → logprob: -8.000955581665039
    3. 'index' → logprob: -8.250955581665039
    4. ')' → logprob: -8.500955581665039
    5. '_' → logprob: -10.750955581665039
    6. '_child' → logprob: -10.750955581665039
    7. '   ' → logprob: -10.875955581665039
    8. '])' → logprob: -11.125955581665039
    9. 'Index' → logprob: -11.250955581665039
    10. ']' → logprob: -11.375955581665039

Token 148: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ')
' → logprob: -10.250048637390137
    3. ' )' → logprob: -11.625048637390137
    4. '))' → logprob: -13.750048637390137
    5. '])' → logprob: -14.250048637390137
    6. ')

' → logprob: -14.500048637390137
    7. ']' → logprob: -14.500048637390137
    8. '   ' → logprob: -14.875048637390137
    9. '())' → logprob: -15.250048637390137
    10. '       ' → logprob: -15.250048637390137

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012630660086870193
    2. '   ' → logprob: -4.512630462646484
    3. '    
' → logprob: -7.637630462646484
    4. '<|end|>' → logprob: -7.637630462646484
    5. 'def' → logprob: -7.887630462646484
    6. '

' → logprob: -9.637630462646484
    7. '```' → logprob: -9.762630462646484
    8. '  
' → logprob: -10.137630462646484
    9. '<|end|>' → logprob: -10.387630462646484
    10. ' 
' → logprob: -11.012630462646484

Token 150: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6926334500312805
    2. 'def' (adapté à ' def') → logprob: -1.3176333904266357
    3. ' def' → logprob: -1.6926333904266357
    4. '
' → logprob: -3.0676333904266357
    5. '    
' → logprob: -7.317633628845215
    6. ' 
' → logprob: -7.817633628845215
    7. '	def' → logprob: -9.067633628845215
    8. ' ' → logprob: -9.442633628845215
    9. '

' → logprob: -9.942633628845215
    10. '```' → logprob: -10.317633628845215

Token 151: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.028196867555379868
    2. 'find' → logprob: -3.6531968116760254
    3. ' def' → logprob: -7.278196811676025
    4. ' uf' → logprob: -7.403196811676025
    5. ' union' → logprob: -8.653197288513184
    6. 'def' → logprob: -8.778197288513184
    7. '_find' → logprob: -9.153197288513184
    8. 'uf' → logprob: -10.028197288513184
    9. ' mark' → logprob: -10.778197288513184
    10. ' ' → logprob: -10.778197288513184

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13608819246292114
    2. '(' → logprob: -2.1360881328582764
    3. '_parent' → logprob: -4.8860883712768555
    4. '(parent' → logprob: -7.2610883712768555
    5. '_' → logprob: -7.8860883712768555
    6. '_(' → logprob: -8.886088371276855
    7. ' (' → logprob: -9.636088371276855
    8. 'self' → logprob: -9.886088371276855
    9. '(_' → logprob: -9.886088371276855
    10. '(u' → logprob: -10.136088371276855

Token 153: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8549373745918274
    2. '_parent' → logprob: -1.2299373149871826
    3. '(self' → logprob: -2.1049373149871826
    4. ')' → logprob: -2.1049373149871826
    5. '_' → logprob: -4.604937553405762
    6. ' (' → logprob: -4.729937553405762
    7. 'self' → logprob: -5.104937553405762
    8. ')_' → logprob: -5.479937553405762
    9. '(parent' → logprob: -5.729937553405762
    10. '(node' → logprob: -6.354937553405762

Token 154: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.023595768958330154
    2. ' x' → logprob: -3.7735958099365234
    3. 'u' → logprob: -8.023595809936523
    4. ' u' → logprob: -11.148595809936523
    5. 'self' → logprob: -12.148595809936523
    6. 'a' → logprob: -13.273595809936523
    7. 'node' → logprob: -14.773595809936523
    8. ' self' → logprob: -15.398595809936523
    9. 'parent' → logprob: -15.773595809936523
    10. ' node' → logprob: -16.273595809936523

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005476244725286961
    2. '):
' → logprob: -5.255476474761963
    3. ')' → logprob: -8.380475997924805
    4. ' ):' → logprob: -11.380475997924805
    5. '):
' → logprob: -14.130475997924805
    6. '   ' → logprob: -15.005475997924805
    7. '):

' → logprob: -15.380475997924805
    8. ':' → logprob: -15.880475997924805
    9. ' )' → logprob: -16.630475997924805
    10. '       ' → logprob: -17.380475997924805

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003966317046433687
    2. 'self' → logprob: -6.253966331481934
    3. ':' → logprob: -7.753966331481934
    4. '   ' → logprob: -7.878966331481934
    5. ':
' → logprob: -8.503966331481934
    6. '):
' → logprob: -8.753966331481934
    7. 'if' → logprob: -8.878966331481934
    8. '
' → logprob: -9.003966331481934
    9. ' if' → logprob: -9.128966331481934
    10. ' self' → logprob: -9.378966331481934

Token 157: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40178027749061584
    2. ' if' → logprob: -1.6517802476882935
    3. 'self' → logprob: -2.151780366897583
    4. '       ' → logprob: -4.151780128479004
    5. ' self' → logprob: -5.026780128479004
    6. '0' → logprob: -8.651780128479004
    7. 'return' → logprob: -8.651780128479004
    8. '
' → logprob: -9.151780128479004
    9. '   ' → logprob: -9.526780128479004
    10. '           ' → logprob: -11.276780128479004

Token 158: ' Find' (ID: 9764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07897362112998962
    2. ' if' → logprob: -2.5789735317230225
    3. '       ' → logprob: -9.453973770141602
    4. 'while' → logprob: -12.578973770141602
    5. '   ' → logprob: -13.828973770141602
    6. ' while' → logprob: -14.578973770141602
    7. 'If' → logprob: -15.453973770141602
    8. 'self' → logprob: -15.703973770141602
    9. 'return' → logprob: -15.703973770141602
    10. '	if' → logprob: -16.9539737701416

Token 159: ' with' (ID: 483)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.7631598114967346
    2. 'self' → logprob: -1.1381597518920898
    3. '(self' → logprob: -2.51315975189209
    4. 'x' → logprob: -3.26315975189209
    5. ' x' → logprob: -3.26315975189209
    6. '(' → logprob: -3.51315975189209
    7. ' self' → logprob: -4.51315975189209
    8. ' (' → logprob: -5.13815975189209
    9. ')' → logprob: -5.51315975189209
    10. ' ' → logprob: -5.88815975189209

Token 160: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.06454487890005112
    2. 'path' → logprob: -2.814544916152954
    3. 'self' → logprob: -6.814544677734375
    4. ' self' → logprob: -6.939544677734375
    5. ' compression' → logprob: -8.689544677734375
    6. ' ' → logprob: -9.064544677734375
    7. '   ' → logprob: -9.689544677734375
    8. 'compression' → logprob: -10.189544677734375
    9. ' uf' → logprob: -10.439544677734375
    10. 'uf' → logprob: -10.564544677734375

Token 161: ' compression' (ID: 41811)
  Prédit: ' compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compression' → logprob: -0.22265125811100006
    2. 'compression' → logprob: -1.9726512432098389
    3. '_com' → logprob: -3.347651243209839
    4. '_' → logprob: -3.722651243209839
    5. ' _' → logprob: -7.472651481628418
    6. '   ' → logprob: -8.847651481628418
    7. ' ' → logprob: -9.222651481628418
    8. 'compress' → logprob: -9.972651481628418
    9. '_comp' → logprob: -9.972651481628418
    10. ' compress' → logprob: -10.097651481628418

Token 162: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12933805584907532
    2. '
' → logprob: -2.879338026046753
    3. '   ' → logprob: -3.504338026046753
    4. ':' → logprob: -4.379338264465332
    5. ':
' → logprob: -5.004338264465332
    6. '  
' → logprob: -6.129338264465332
    7. '        
' → logprob: -6.254338264465332
    8. ' ' → logprob: -6.504338264465332
    9. ' 
' → logprob: -6.504338264465332
    10. ')' → logprob: -6.629338264465332

Token 163: ' Union' (ID: 14746)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.265922874212265
    2. 'self' → logprob: -1.8909229040145874
    3. ' the' → logprob: -3.390922784805298
    4. ' union' → logprob: -3.515922784805298
    5. ' Union' → logprob: -4.515923023223877
    6. 'union' → logprob: -5.390923023223877
    7. 'Union' → logprob: -6.140923023223877
    8. '_union' → logprob: -7.765923023223877
    9. 'the' → logprob: -8.015922546386719
    10. '   ' → logprob: -8.265922546386719

Token 164: '-F' (ID: 8074)
  Prédit: '-F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-F' → logprob: -0.12700821459293365
    2. 'Find' → logprob: -2.1270081996917725
    3. '[' → logprob: -10.752008438110352
    4. '_Find' → logprob: -10.877008438110352
    5. '   ' → logprob: -11.127008438110352
    6. '[-' → logprob: -11.627008438110352
    7. '-' → logprob: -12.002008438110352
    8. '[int' → logprob: -12.377008438110352
    9. '-find' → logprob: -13.627008438110352
    10. ' Find' → logprob: -13.627008438110352

Token 165: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.676292231422849e-05
    2. 'Ind' → logprob: -11.750017166137695
    3. 'Find' → logprob: -12.750017166137695
    4. '```' → logprob: -13.000017166137695
    5. 'nd' → logprob: -13.875017166137695
    6. '(ind' → logprob: -14.125017166137695
    7. '[ind' → logprob: -15.000017166137695
    8. 'or' → logprob: -15.375017166137695
    9. '``' → logprob: -16.125017166137695
    10. 'old' → logprob: -16.250017166137695

Token 166: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7588680386543274
    2. ')' → logprob: -1.2588679790496826
    3. '   ' → logprob: -2.2588679790496826
    4. ':' → logprob: -3.2588679790496826
    5. '(x' → logprob: -3.3838679790496826
    6. '(' → logprob: -4.133868217468262
    7. '(self' → logprob: -4.258868217468262
    8. ')
' → logprob: -4.883868217468262
    9. '
' → logprob: -5.008868217468262
    10. '):' → logprob: -5.133868217468262

Token 167: ' get' (ID: 717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.4547789096832275
    2. ' find' → logprob: -1.4547789096832275
    3. ' get' → logprob: -2.3297789096832275
    4. 'self' → logprob: -2.3297789096832275
    5. ' def' → logprob: -2.5797789096832275
    6. 'get' → logprob: -2.8297789096832275
    7. 'return' → logprob: -2.9547789096832275
    8. ' return' → logprob: -3.5797789096832275
    9. 'find' → logprob: -3.5797789096832275
    10. ' optimize' → logprob: -3.5797789096832275

Token 168: ' nearest' (ID: 35210)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0114502906799316
    2. 'self' → logprob: -1.6364502906799316
    3. ' x' → logprob: -1.7614502906799316
    4. ' self' → logprob: -1.8864502906799316
    5. 'x' → logprob: -2.2614502906799316
    6. 'the' → logprob: -5.261450290679932
    7. ' marked' → logprob: -5.761450290679932
    8. ' parent' → logprob: -6.636450290679932
    9. 'marked' → logprob: -6.761450290679932
    10. '   ' → logprob: -6.761450290679932

Token 169: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.1815435141324997
    2. 'marked' → logprob: -1.8065434694290161
    3. ' ancestor' → logprob: -7.181543350219727
    4. ' parent' → logprob: -7.681543350219727
    5. 'ancestor' → logprob: -8.806543350219727
    6. '   ' → logprob: -8.931543350219727
    7. 'parent' → logprob: -8.931543350219727
    8. '_mark' → logprob: -9.181543350219727
    9. ' ' → logprob: -10.806543350219727
    10. 'Marked' → logprob: -11.806543350219727

Token 170: ' ancestor' (ID: 90832)
  Prédit: ' ancestor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ancestor' → logprob: -0.09676162898540497
    2. 'ancestor' → logprob: -2.596761703491211
    3. ' parent' → logprob: -4.096761703491211
    4. 'parent' → logprob: -7.096761703491211
    5. '[parent' → logprob: -8.721761703491211
    6. '_parent' → logprob: -9.596761703491211
    7. 'Ancestor' → logprob: -11.096761703491211
    8. ' node' → logprob: -12.721761703491211
    9. '   ' → logprob: -12.846761703491211
    10. '(parent' → logprob: -13.471761703491211

Token 171: '
' (ID: 198)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2724582552909851
    2. '       ' → logprob: -2.39745831489563
    3. '   ' → logprob: -2.52245831489563
    4. ':' → logprob: -3.52245831489563
    5. '(' → logprob: -4.397458076477051
    6. '
' → logprob: -5.022458076477051
    7. ')' → logprob: -5.397458076477051
    8. '(
' → logprob: -6.022458076477051
    9. ':
' → logprob: -6.272458076477051
    10. '(self' → logprob: -6.522458076477051

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4274710416793823
    2. ')' → logprob: -2.052471160888672
    3. '   ' → logprob: -2.427471160888672
    4. ':' → logprob: -2.677471160888672
    5. '(x' → logprob: -4.052471160888672
    6. '(' → logprob: -4.677471160888672
    7. '):' → logprob: -4.927471160888672
    8. '
' → logprob: -5.177471160888672
    9. ':
' → logprob: -5.177471160888672
    10. '(self' → logprob: -5.802471160888672

Token 173: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11756178736686707
    2. ' if' → logprob: -2.2425618171691895
    3. '       ' → logprob: -5.3675618171691895
    4. 'x' → logprob: -10.992561340332031
    5. '   ' → logprob: -11.492561340332031
    6. 'return' → logprob: -12.117561340332031
    7. '
' → logprob: -12.242561340332031
    8. '        
' → logprob: -12.242561340332031
    9. 'while' → logprob: -12.492561340332031
    10. '	if' → logprob: -12.742561340332031

Token 174: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931700706481934
    2. 'self' → logprob: -0.6931700706481934
    3. '	self' → logprob: -11.443170547485352
    4. 'x' → logprob: -11.693170547485352
    5. ' ' → logprob: -13.693170547485352
    6. ' x' → logprob: -13.943170547485352
    7. '(self' → logprob: -14.193170547485352
    8. ' ' → logprob: -14.818170547485352
    9. '   ' → logprob: -15.693170547485352
    10. '[self' → logprob: -15.693170547485352

Token 175: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -6.8497312895488e-05
    2. ' .' → logprob: -9.750068664550781
    3. '.' → logprob: -12.000068664550781
    4. ' uf' → logprob: -13.625068664550781
    5. 'uf' → logprob: -13.875068664550781
    6. '.ud' → logprob: -14.875068664550781
    7. '._' → logprob: -14.875068664550781
    8. '.u' → logprob: -15.125068664550781
    9. '.ul' → logprob: -15.500068664550781
    10. '.ub' → logprob: -15.750068664550781

Token 176: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -7.896309739408025e-07
    2. 'parent' → logprob: -14.375000953674316
    3. '_' → logprob: -16.625
    4. '
' → logprob: -18.125
    5. 'Parent' → logprob: -18.25
    6. '[parent' → logprob: -18.25
    7. '_PARENT' → logprob: -18.25
    8. '```' → logprob: -18.875
    9. '_par' → logprob: -19.0
    10. '   ' → logprob: -19.125

Token 177: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.00016301481809932739
    2. '[' → logprob: -8.750163078308105
    3. 'x' → logprob: -13.250163078308105
    4. '[self' → logprob: -13.625163078308105
    5. ' [' → logprob: -14.000163078308105
    6. '[
' → logprob: -14.500163078308105
    7. ' x' → logprob: -17.12516212463379
    8. '[int' → logprob: -17.62516212463379
    9. '[s' → logprob: -17.62516212463379
    10. '```' → logprob: -17.87516212463379

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01633276417851448
    2. ']!=' → logprob: -4.266332626342773
    3. '!=' → logprob: -6.141332626342773
    4. ' !=' → logprob: -11.391332626342773
    5. ')!=' → logprob: -13.141332626342773
    6. ' ]' → logprob: -14.266332626342773
    7. ']==' → logprob: -14.891332626342773
    8. ')' → logprob: -15.516332626342773
    9. 'self' → logprob: -16.766332626342773
    10. ']=' → logprob: -16.891332626342773

Token 179: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0003876550472341478
    2. ' !=' → logprob: -7.875387668609619
    3. ')!=' → logprob: -12.375387191772461
    4. ']!=' → logprob: -13.250387191772461
    5. '!==' → logprob: -14.000387191772461
    6. '()!=' → logprob: -15.000387191772461
    7. '==' → logprob: -15.750387191772461
    8. '!=(' → logprob: -15.875387191772461
    9. '!='' → logprob: -16.75038719177246
    10. '=' → logprob: -17.25038719177246

Token 180: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014163628220558167
    2. ' x' → logprob: -4.264163494110107
    3. '	x' → logprob: -16.389163970947266
    4. '   ' → logprob: -18.639163970947266
    5. ')x' → logprob: -19.014163970947266
    6. ' ' → logprob: -19.139163970947266
    7. 'self' → logprob: -19.764163970947266
    8. '
' → logprob: -20.264163970947266
    9. '    ' → logprob: -20.764163970947266
    10. '$x' → logprob: -21.264163970947266

Token 181: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6579610109329224
    2. ':' → logprob: -0.7829610109329224
    3. '):
' → logprob: -3.782960891723633
    4. '):' → logprob: -6.157960891723633
    5. ')' → logprob: -9.782960891723633
    6. '       ' → logprob: -10.407960891723633
    7. ',' → logprob: -10.657960891723633
    8. 'self' → logprob: -11.282960891723633
    9. '():
' → logprob: -11.532960891723633
    10. ' :
' → logprob: -11.782960891723633

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1990669220685959
    2. ':
' → logprob: -2.3240668773651123
    3. ':' → logprob: -3.0740668773651123
    4. '       ' → logprob: -3.5740668773651123
    5. '):
' → logprob: -5.199067115783691
    6. ',' → logprob: -7.949067115783691
    7. 'self' → logprob: -8.074067115783691
    8. '\n' → logprob: -8.324067115783691
    9. ')' → logprob: -8.449067115783691
    10. '   ' → logprob: -8.574067115783691

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10487411916255951
    2. ' self' → logprob: -2.3548741340637207
    3. '           ' → logprob: -5.479874134063721
    4. '               ' → logprob: -8.604873657226562
    5. '
' → logprob: -8.854873657226562
    6. '       ' → logprob: -9.979873657226562
    7. '   ' → logprob: -10.229873657226562
    8. '	self' → logprob: -10.229873657226562
    9. '[self' → logprob: -11.229873657226562
    10. 'x' → logprob: -11.854873657226562

Token 184: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -0.02238519676029682
    2. 'uf' → logprob: -3.8973851203918457
    3. ' uf' → logprob: -6.897385120391846
    4. '=' → logprob: -8.272385597229004
    5. '.' → logprob: -8.647385597229004
    6. 'self' → logprob: -8.897385597229004
    7. ' =' → logprob: -9.022385597229004
    8. 'ufs' → logprob: -10.522385597229004
    9. '   ' → logprob: -11.522385597229004
    10. 'Uf' → logprob: -11.522385597229004

Token 185: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -1.3544423381972592e-05
    2. 'parent' → logprob: -11.87501335144043
    3. '_' → logprob: -12.37501335144043
    4. '_PARENT' → logprob: -14.00001335144043
    5. 'Parent' → logprob: -14.37501335144043
    6. ' _' → logprob: -15.25001335144043
    7. '_par' → logprob: -15.75001335144043
    8. '.parent' → logprob: -16.25001335144043
    9. '._' → logprob: -16.37501335144043
    10. '_p' → logprob: -16.62501335144043

Token 186: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -4.3464544432936236e-05
    2. 'x' → logprob: -10.250043869018555
    3. '[' → logprob: -12.000043869018555
    4. '```' → logprob: -14.000043869018555
    5. '[
' → logprob: -14.375043869018555
    6. '[self' → logprob: -15.625043869018555
    7. ' [' → logprob: -16.500043869018555
    8. '
' → logprob: -16.500043869018555
    9. ' ' → logprob: -17.000043869018555
    10. ' x' → logprob: -17.250043869018555

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06856603175401688
    2. '=' → logprob: -2.818566083908081
    3. ']=' → logprob: -5.193565845489502
    4. ' =' → logprob: -6.943565845489502
    5. ')' → logprob: -9.81856632232666
    6. ' ]' → logprob: -12.81856632232666
    7. ')=' → logprob: -13.31856632232666
    8. '[' → logprob: -15.81856632232666
    9. '
' → logprob: -16.068565368652344
    10. ']+=' → logprob: -16.068565368652344

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061968810856342316
    2. ' =' → logprob: -2.8119688034057617
    3. '=
' → logprob: -14.811968803405762
    4. ']=' → logprob: -15.436968803405762
    5. ')=' → logprob: -15.436968803405762
    6. ')' → logprob: -15.686968803405762
    7. ']' → logprob: -16.436969757080078
    8. '=self' → logprob: -16.436969757080078
    9. ' =
' → logprob: -16.936969757080078
    10. '=

' → logprob: -17.436969757080078

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170225441455841
    2. ' self' → logprob: -6.7511701583862305
    3. '(self' → logprob: -17.126171112060547
    4. '[self' → logprob: -17.876171112060547
    5. '
' → logprob: -18.001171112060547
    6. 'elf' → logprob: -19.001171112060547
    7. '	self' → logprob: -19.876171112060547
    8. '=self' → logprob: -20.501171112060547
    9. '   ' → logprob: -21.001171112060547
    10. '    ' → logprob: -21.626171112060547

Token 190: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.002141812816262245
    2. '.uf' → logprob: -6.627141952514648
    3. 'find' → logprob: -8.002141952514648
    4. '.' → logprob: -8.002141952514648
    5. 'uf' → logprob: -9.252141952514648
    6. ' .' → logprob: -10.627141952514648
    7. '.f' → logprob: -12.002141952514648
    8. '.findall' → logprob: -12.002141952514648
    9. ').' → logprob: -12.752141952514648
    10. 'f' → logprob: -13.127141952514648

Token 191: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003357006062287837
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -15.875335693359375
    4. 'self' → logprob: -16.375335693359375
    5. ' (' → logprob: -17.500335693359375
    6. '(

' → logprob: -19.500335693359375
    7. '((' → logprob: -19.625335693359375
    8. '[self' → logprob: -19.750335693359375
    9. ' self' → logprob: -20.375335693359375
    10. '(s' → logprob: -20.500335693359375

Token 192: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -0.00019328886992298067
    2. 'uf' → logprob: -9.75019359588623
    3. 'self' → logprob: -10.00019359588623
    4. '.' → logprob: -10.50019359588623
    5. '(self' → logprob: -10.50019359588623
    6. ' .' → logprob: -11.25019359588623
    7. ' uf' → logprob: -11.50019359588623
    8. '.self' → logprob: -12.37519359588623
    9. '[self' → logprob: -13.75019359588623
    10. ')' → logprob: -13.87519359588623

Token 193: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.00012558852904476225
    2. 'parent' → logprob: -9.000125885009766
    3. '_par' → logprob: -14.375125885009766
    4. '_PARENT' → logprob: -14.625125885009766
    5. '_' → logprob: -15.375125885009766
    6. '.parent' → logprob: -16.000125885009766
    7. 'Parent' → logprob: -16.375125885009766
    8. '	parent' → logprob: -16.500125885009766
    9. '_root' → logprob: -16.500125885009766
    10. 'uf' → logprob: -16.625125885009766

Token 194: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.000685391016304493
    2. '[self' → logprob: -7.875685214996338
    3. '[' → logprob: -8.375685691833496
    4. 'x' → logprob: -10.250685691833496
    5. '[
' → logprob: -10.875685691833496
    6. '(x' → logprob: -12.125685691833496
    7. ' [' → logprob: -12.375685691833496
    8. ')' → logprob: -13.000685691833496
    9. '```' → logprob: -13.250685691833496
    10. 'self' → logprob: -13.375685691833496

Token 195: '])
' (ID: 5169)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.04905715212225914
    2. '])' → logprob: -3.0490572452545166
    3. ')' → logprob: -8.424057006835938
    4. ']' → logprob: -8.924057006835938
    5. 'x' → logprob: -9.799057006835938
    6. '[' → logprob: -10.424057006835938
    7. '[self' → logprob: -11.799057006835938
    8. ' ])' → logprob: -11.924057006835938
    9. '])
' → logprob: -12.299057006835938
    10. '(x' → logprob: -12.299057006835938

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009854895062744617
    2. 'return' → logprob: -4.759854793548584
    3. '   ' → logprob: -7.384854793548584
    4. ' return' → logprob: -7.509854793548584
    5. '
' → logprob: -10.634855270385742
    6. '	' → logprob: -11.134855270385742
    7. '	return' → logprob: -11.634855270385742
    8. ')' → logprob: -12.009855270385742
    9. '           ' → logprob: -12.634855270385742
    10. ')
' → logprob: -13.634855270385742

Token 197: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26372089982032776
    2. '       ' → logprob: -1.5137208700180054
    3. ' return' → logprob: -5.013720989227295
    4. '   ' → logprob: -5.388720989227295
    5. '	return' → logprob: -7.763720989227295
    6. ':return' → logprob: -10.013720512390137
    7. '
' → logprob: -12.013720512390137
    8. '           ' → logprob: -12.263720512390137
    9. '	' → logprob: -12.263720512390137
    10. ')return' → logprob: -12.388720512390137

Token 198: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12692894041538239
    2. ' self' → logprob: -2.1269290447235107
    3. '(self' → logprob: -14.25192928314209
    4. '	self' → logprob: -16.626928329467773
    5. 'x' → logprob: -17.126928329467773
    6. '   ' → logprob: -17.751928329467773
    7. ' ' → logprob: -18.126928329467773
    8. '[self' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.376928329467773
    10. 'elf' → logprob: -18.876928329467773

Token 199: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -7.703443770878948e-06
    2. '.' → logprob: -12.875007629394531
    3. 'uf' → logprob: -13.125007629394531
    4. ' .' → logprob: -13.750007629394531
    5. '_.' → logprob: -14.375007629394531
    6. '._' → logprob: -14.500007629394531
    7. ' uf' → logprob: -15.000007629394531
    8. '.uk' → logprob: -15.750007629394531
    9. '.ud' → logprob: -15.750007629394531
    10. '.ub' → logprob: -16.12500762939453

Token 200: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.00011486753646750003
    2. 'parent' → logprob: -9.125114440917969
    3. '_PARENT' → logprob: -12.750114440917969
    4. '_' → logprob: -13.750114440917969
    5. 'Parent' → logprob: -14.250114440917969
    6. '_par' → logprob: -14.375114440917969
    7. '	parent' → logprob: -15.375114440917969
    8. '[parent' → logprob: -16.62511444091797
    9. '_p' → logprob: -16.75011444091797
    10. ' _' → logprob: -16.75011444091797

Token 201: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.009810280054807663
    2. '[' → logprob: -4.634810447692871
    3. '[
' → logprob: -10.384810447692871
    4. '[self' → logprob: -11.884810447692871
    5. 'x' → logprob: -12.134810447692871
    6. '[u' → logprob: -12.634810447692871
    7. ' [' → logprob: -12.759810447692871
    8. '```' → logprob: -13.009810447692871
    9. '(x' → logprob: -13.884810447692871
    10. '[s' → logprob: -15.134810447692871

Token 202: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001805377542041242
    2. ']' → logprob: -9.1251802444458
    3. '}' → logprob: -10.2501802444458
    4. '<|end|>' → logprob: -10.8751802444458
    5. ')
' → logprob: -11.5001802444458
    6. ' )' → logprob: -12.2501802444458
    7. ')return' → logprob: -14.2501802444458
    8. '   ' → logprob: -14.6251802444458
    9. ')}' → logprob: -15.3751802444458
    10. ' ' → logprob: -15.6251802444458

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009905888698995113
    2. '<|end|>' → logprob: -6.009905815124512
    3. '
' → logprob: -6.134905815124512
    4. '    
' → logprob: -6.259905815124512
    5. '```' → logprob: -6.509905815124512
    6. '  
' → logprob: -7.759905815124512
    7. ' 
' → logprob: -8.134905815124512
    8. ' ' → logprob: -8.134905815124512
    9. 'def' → logprob: -8.509905815124512
    10. '  ' → logprob: -9.259905815124512

Token 204: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007197193335741758
    2. ' def' → logprob: -5.382197380065918
    3. '   ' → logprob: -6.007197380065918
    4. '	def' → logprob: -9.882197380065918
    5. '    
' → logprob: -10.632197380065918
    6. '
' → logprob: -10.882197380065918
    7. ' ' → logprob: -11.632197380065918
    8. '  
' → logprob: -12.257197380065918
    9. '  ' → logprob: -13.382197380065918
    10. '<|end|>' → logprob: -14.382197380065918

Token 205: ' mark' (ID: 1983)
  Prédit: 'mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mark' → logprob: -0.2032012641429901
    2. ' mark' → logprob: -1.7032012939453125
    3. 'dfs' → logprob: -7.2032012939453125
    4. ' dfs' → logprob: -7.9532012939453125
    5. '_mark' → logprob: -7.9532012939453125
    6. 'toggle' → logprob: -10.078201293945312
    7. 'set' → logprob: -10.328201293945312
    8. 'marked' → logprob: -10.453201293945312
    9. 'update' → logprob: -10.828201293945312
    10. ' set' → logprob: -11.203201293945312

Token 206: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6937659382820129
    2. '(self' → logprob: -0.6937659382820129
    3. '_' → logprob: -8.193765640258789
    4. '_node' → logprob: -9.193765640258789
    5. '_(' → logprob: -9.693765640258789
    6. '(s' → logprob: -10.068765640258789
    7. 'self' → logprob: -10.193765640258789
    8. ' (' → logprob: -10.443765640258789
    9. '(node' → logprob: -11.318765640258789
    10. '_self' → logprob: -11.443765640258789

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30000340938568115
    2. '(' → logprob: -1.4250034093856812
    3. '(self' → logprob: -4.550003528594971
    4. ')' → logprob: -5.925003528594971
    5. '(x' → logprob: -6.425003528594971
    6. '[' → logprob: -6.425003528594971
    7. ' (' → logprob: -7.050003528594971
    8. ' ,' → logprob: -7.300003528594971
    9. 'self' → logprob: -8.050003051757812
    10. '   ' → logprob: -9.550003051757812

Token 208: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21489769220352173
    2. ' x' → logprob: -1.714897632598877
    3. ' node' → logprob: -4.839897632598877
    4. 'node' → logprob: -5.714897632598877
    5. 'self' → logprob: -6.714897632598877
    6. ' self' → logprob: -7.714897632598877
    7. 'index' → logprob: -8.464898109436035
    8. ' index' → logprob: -9.089898109436035
    9. 'u' → logprob: -9.589898109436035
    10. '   ' → logprob: -9.839898109436035

Token 209: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016266264021396637
    2. '):
' → logprob: -4.141266345977783
    3. ')' → logprob: -8.516265869140625
    4. '):
' → logprob: -11.141265869140625
    5. ' ):' → logprob: -11.266265869140625
    6. '   ' → logprob: -13.266265869140625
    7. ',' → logprob: -13.766265869140625
    8. '):

' → logprob: -14.516265869140625
    9. ':' → logprob: -14.641265869140625
    10. ' ' → logprob: -16.016265869140625

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003710646415129304
    2. ':' → logprob: -7.128710746765137
    3. '
' → logprob: -7.628710746765137
    4. '   ' → logprob: -7.753710746765137
    5. 'self' → logprob: -7.753710746765137
    6. ' self' → logprob: -7.878710746765137
    7. '):
' → logprob: -7.878710746765137
    8. '):' → logprob: -8.378710746765137
    9. ')' → logprob: -9.128710746765137
    10. ':
' → logprob: -9.253710746765137

Token 211: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6946002244949341
    2. ' self' → logprob: -1.069600224494934
    3. 'self' → logprob: -1.944600224494934
    4. '   ' → logprob: -5.0696001052856445
    5. '
' → logprob: -5.4446001052856445
    6. '```' → logprob: -6.8196001052856445
    7. ' 
' → logprob: -7.0696001052856445
    8. '        
' → logprob: -7.8196001052856445
    9. ' if' → logprob: -7.9446001052856445
    10. '\' → logprob: -8.569600105285645

Token 212: ' Mark' (ID: 5070)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029478173702955246
    2. ' self' → logprob: -3.654478073120117
    3. '       ' → logprob: -6.279478073120117
    4. 'if' → logprob: -7.404478073120117
    5. 'v' → logprob: -8.404478073120117
    6. '   ' → logprob: -8.654478073120117
    7. ' if' → logprob: -8.904478073120117
    8. '
' → logprob: -9.404478073120117
    9. ' v' → logprob: -10.279478073120117
    10. '```' → logprob: -11.779478073120117

Token 213: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7794973850250244
    2. '(v' → logprob: -0.7794973850250244
    3. ' self' → logprob: -3.1544973850250244
    4. '(self' → logprob: -4.154497146606445
    5. ' v' → logprob: -4.654497146606445
    6. ' (' → logprob: -5.154497146606445
    7. 'v' → logprob: -5.529497146606445
    8. '(' → logprob: -5.904497146606445
    9. '[v' → logprob: -7.279497146606445
    10. ' the' → logprob: -7.654497146606445

Token 214: ' v' (ID: 323)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5627503395080566
    2. '(v' → logprob: -0.9377503395080566
    3. 'v' → logprob: -3.5627503395080566
    4. ' v' → logprob: -5.312750339508057
    5. 'self' → logprob: -5.437750339508057
    6. '   ' → logprob: -8.062749862670898
    7. ' self' → logprob: -8.312749862670898
    8. '(self' → logprob: -8.812749862670898
    9. '       ' → logprob: -9.312749862670898
    10. '[' → logprob: -9.437749862670898

Token 215: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9034718871116638
    2. '
' → logprob: -1.6534719467163086
    3. ':' → logprob: -1.7784719467163086
    4. ':
' → logprob: -1.7784719467163086
    5. '):
' → logprob: -3.9034719467163086
    6. '):' → logprob: -4.778471946716309
    7. '   ' → logprob: -5.028471946716309
    8. 'v' → logprob: -5.153471946716309
    9. ')
' → logprob: -5.528471946716309
    10. ')' → logprob: -5.528471946716309

Token 216: ' union' (ID: 22208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017792247235774994
    2. ' self' → logprob: -4.142792224884033
    3. '
' → logprob: -7.392792224884033
    4. '       ' → logprob: -7.517792224884033
    5. '   ' → logprob: -8.517792701721191
    6. 'if' → logprob: -8.642792701721191
    7. 'v' → logprob: -9.892792701721191
    8. 'for' → logprob: -10.142792701721191
    9. ' if' → logprob: -10.642792701721191
    10. ' v' → logprob: -11.017792701721191

Token 217: ' with' (ID: 483)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6510125398635864
    2. '(' → logprob: -0.7760125398635864
    3. '(
' → logprob: -4.526012420654297
    4. ' (' → logprob: -5.401012420654297
    5. '(self' → logprob: -6.276012420654297
    6. 'self' → logprob: -7.526012420654297
    7. 'v' → logprob: -9.151012420654297
    8. ',' → logprob: -9.401012420654297
    9. ' v' → logprob: -9.901012420654297
    10. '   ' → logprob: -10.276012420654297

Token 218: ' parent' (ID: 5980)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15853887796401978
    2. 'v' → logprob: -2.283538818359375
    3. ' self' → logprob: -3.658538818359375
    4. ' v' → logprob: -4.158538818359375
    5. ' its' → logprob: -6.533538818359375
    6. '[v' → logprob: -7.408538818359375
    7. 'parent' → logprob: -8.408538818359375
    8. 'its' → logprob: -8.658538818359375
    9. 'neighbors' → logprob: -8.783538818359375
    10. '(v' → logprob: -9.033538818359375

Token 219: ' marked' (ID: 20779)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.23102234303951263
    2. '       ' → logprob: -2.356022357940674
    3. '(' → logprob: -2.481022357940674
    4. '(self' → logprob: -4.356022357940674
    5. '
' → logprob: -5.481022357940674
    6. '   ' → logprob: -6.606022357940674
    7. 'self' → logprob: -6.606022357940674
    8. 'v' → logprob: -6.856022357940674
    9. ':
' → logprob: -6.981022357940674
    10. ',' → logprob: -7.106022357940674

Token 220: ' ancestor' (ID: 90832)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3793374300003052
    2. '(v' → logprob: -2.3793373107910156
    3. ')' → logprob: -2.8793373107910156
    4. 'v' → logprob: -3.3793373107910156
    5. '   ' → logprob: -3.5043373107910156
    6. ' if' → logprob: -4.254337310791016
    7. '[' → logprob: -4.254337310791016
    8. 'node' → logprob: -4.629337310791016
    9. '[node' → logprob: -4.629337310791016
    10. ':' → logprob: -4.754337310791016

Token 221: ' if' (ID: 538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6566522717475891
    2. '(v' → logprob: -1.4066522121429443
    3. '       ' → logprob: -2.5316522121429443
    4. ':' → logprob: -2.7816522121429443
    5. '   ' → logprob: -3.6566522121429443
    6. '(
' → logprob: -4.281652450561523
    7. ')' → logprob: -4.531652450561523
    8. '(self' → logprob: -4.531652450561523
    9. ':
' → logprob: -4.906652450561523
    10. 'v' → logprob: -5.156652450561523

Token 222: ' exists' (ID: 13031)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16569705307483673
    2. ' self' → logprob: -1.9156970977783203
    3. 'v' → logprob: -5.54069709777832
    4. ' v' → logprob: -6.54069709777832
    5. '(self' → logprob: -9.41569709777832
    6. '(v' → logprob: -12.91569709777832
    7. '(' → logprob: -13.66569709777832
    8. '   ' → logprob: -13.66569709777832
    9. '	self' → logprob: -13.66569709777832
    10. ' ' → logprob: -14.29069709777832

Token 223: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43901100754737854
    2. '(v' → logprob: -1.6890109777450562
    3. '(self' → logprob: -3.1890110969543457
    4. '   ' → logprob: -3.3140110969543457
    5. '
' → logprob: -3.8140110969543457
    6. '(' → logprob: -3.9390110969543457
    7. ':' → logprob: -4.564011096954346
    8. 'v' → logprob: -4.564011096954346
    9. ':
' → logprob: -4.689011096954346
    10. '(
' → logprob: -5.314011096954346

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06870894879102707
    2. '   ' → logprob: -3.568708896636963
    3. ':' → logprob: -4.193708896636963
    4. '
' → logprob: -5.068708896636963
    5. 'v' → logprob: -6.068708896636963
    6. ')' → logprob: -6.068708896636963
    7. '):' → logprob: -6.068708896636963
    8. '):
' → logprob: -6.568708896636963
    9. '(v' → logprob: -6.568708896636963
    10. ')
' → logprob: -6.818708896636963

Token 225: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6623016595840454
    2. '       ' → logprob: -1.0373016595840454
    3. '
' → logprob: -2.537301540374756
    4. ' self' → logprob: -3.912301540374756
    5. 'v' → logprob: -4.162301540374756
    6. '   ' → logprob: -4.537301540374756
    7. '```' → logprob: -6.787301540374756
    8. '\n' → logprob: -7.412301540374756
    9. '        
' → logprob: -7.787301540374756
    10. '	self' → logprob: -8.287302017211914

Token 226: '.mark' (ID: 32834)
  Prédit: '.mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mark' → logprob: -0.01181988324970007
    2. '.' → logprob: -4.511819839477539
    3. ' .' → logprob: -7.386819839477539
    4. '.m' → logprob: -9.761819839477539
    5. 'marked' → logprob: -10.261819839477539
    6. ' marked' → logprob: -11.386819839477539
    7. '.
' → logprob: -11.636819839477539
    8. '.v' → logprob: -11.886819839477539
    9. '   ' → logprob: -12.761819839477539
    10. '.nodes' → logprob: -12.886819839477539

Token 227: 'ed' (ID: 295)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.3133121728897095
    2. 'ed' → logprob: -1.3133121728897095
    3. '[' → logprob: -10.063312530517578
    4. '[e' → logprob: -12.563312530517578
    5. 'e' → logprob: -13.813312530517578
    6. ' [' → logprob: -14.063312530517578
    7. '[
' → logprob: -14.938312530517578
    8. 'eds' → logprob: -15.063312530517578
    9. '[V' → logprob: -15.188312530517578
    10. 's' → logprob: -15.563312530517578

Token 228: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. 'v' → logprob: -15.37500286102295
    4. ' [' → logprob: -15.62500286102295
    5. '```' → logprob: -17.750003814697266
    6. '[
' → logprob: -18.375003814697266
    7. '[V' → logprob: -18.500003814697266
    8. '[x' → logprob: -19.250003814697266
    9. '

' → logprob: -19.750003814697266
    10. '\[' → logprob: -19.750003814697266

Token 229: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015335931675508618
    2. ' ]' → logprob: -9.250153541564941
    3. ']=' → logprob: -9.875153541564941
    4. '=' → logprob: -12.500153541564941
    5. ' =' → logprob: -13.500153541564941
    6. ' ' → logprob: -15.375153541564941
    7. ']
' → logprob: -15.750153541564941
    8. '
' → logprob: -16.375152587890625
    9. '=True' → logprob: -16.375152587890625
    10. '   ' → logprob: -16.625152587890625

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38688942790031433
    2. ' =' → logprob: -1.1368894577026367
    3. ' ' → logprob: -12.011889457702637
    4. '=True' → logprob: -12.386889457702637
    5. ' =
' → logprob: -12.636889457702637
    6. '=
' → logprob: -13.011889457702637
    7. '   ' → logprob: -14.261889457702637
    8. ',' → logprob: -14.636889457702637
    9. '=

' → logprob: -14.761889457702637
    10. '    ' → logprob: -14.886889457702637

Token 231: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02324547804892063
    2. ' True' → logprob: -3.7732455730438232
    3. '(True' → logprob: -17.648244857788086
    4. '=True' → logprob: -19.773244857788086
    5. ' Tru' → logprob: -21.148244857788086
    6. 'Tr' → logprob: -21.273244857788086
    7. '.True' → logprob: -21.773244857788086
    8. 'true' → logprob: -22.273244857788086
    9. 'T' → logprob: -22.648244857788086
    10. '   ' → logprob: -23.023244857788086

Token 232: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.094636932015419
    2. ' if' → logprob: -3.469636917114258
    3. 'if' → logprob: -3.719636917114258
    4. '       ' → logprob: -3.844636917114258
    5. ' 
' → logprob: -5.969636917114258
    6. '        
' → logprob: -5.969636917114258
    7. '\n' → logprob: -6.219636917114258
    8. '<|end|>' → logprob: -6.469636917114258
    9. '  
' → logprob: -7.094636917114258
    10. '   ' → logprob: -7.594636917114258

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4646793305873871
    2. 'if' → logprob: -1.4646793603897095
    3. ' if' → logprob: -2.46467924118042
    4. '
' → logprob: -2.96467924118042
    5. ',' → logprob: -7.21467924118042
    6. 'u' → logprob: -7.71467924118042
    7. 'self' → logprob: -7.83967924118042
    8. '   ' → logprob: -7.96467924118042
    9. 'x' → logprob: -7.96467924118042
    10. '        
' → logprob: -7.96467924118042

Token 234: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07164034247398376
    2. 'p' → logprob: -2.6966402530670166
    3. 'self' → logprob: -7.321640491485596
    4. 'u' → logprob: -7.696640491485596
    5. 'parent' → logprob: -8.071640014648438
    6. 'x' → logprob: -9.446640014648438
    7. 'uf' → logprob: -9.571640014648438
    8. ' if' → logprob: -9.696640014648438
    9. 'pv' → logprob: -10.571640014648438
    10. 'pf' → logprob: -11.696640014648438

Token 235: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5761979818344116
    2. ' self' → logprob: -0.8261979818344116
    3. ' v' → logprob: -8.576197624206543
    4. 'v' → logprob: -9.826197624206543
    5. '(self' → logprob: -12.076197624206543
    6. ' ' → logprob: -12.451197624206543
    7. '   ' → logprob: -12.826197624206543
    8. '	self' → logprob: -13.451197624206543
    9. '
' → logprob: -13.576197624206543
    10. ' not' → logprob: -14.826197624206543

Token 236: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.8737232089042664
    2. ' >' → logprob: -1.2487232685089111
    3. '>' → logprob: -1.4987232685089111
    4. '!=' → logprob: -2.748723268508911
    5. ' and' → logprob: -5.248723030090332
    6. 'and' → logprob: -6.498723030090332
    7. ' ' → logprob: -7.373723030090332
    8. ')' → logprob: -8.748723030090332
    9. ' ==' → logprob: -8.873723030090332
    10. '_parent' → logprob: -9.748723030090332

Token 237: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010361451422795653
    2. ' ' → logprob: -6.876036167144775
    3. '0' → logprob: -13.251035690307617
    4. 'self' → logprob: -13.751035690307617
    5. '
' → logprob: -16.001035690307617
    6. ' self' → logprob: -16.126035690307617
    7. 'v' → logprob: -16.501035690307617
    8. '   ' → logprob: -16.751035690307617
    9. '  ' → logprob: -18.126035690307617
    10. ' 
' → logprob: -18.751035690307617

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001617035741219297
    2. ' ' → logprob: -8.875162124633789
    3. '0' → logprob: -10.750162124633789
    4. 'self' → logprob: -14.875162124633789
    5. 'v' → logprob: -17.87516212463379
    6. '   ' → logprob: -18.12516212463379
    7. 'root' → logprob: -18.25016212463379
    8. ' self' → logprob: -19.50016212463379
    9. '  ' → logprob: -20.00016212463379
    10. '
' → logprob: -20.00016212463379

Token 239: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4011523723602295
    2. ':' → logprob: -1.1511523723602295
    3. ':
' → logprob: -4.776152610778809
    4. ':return' → logprob: -6.276152610778809
    5. 'or' → logprob: -6.401152610778809
    6. ' ' → logprob: -6.526152610778809
    7. ' :' → logprob: -7.276152610778809
    8. ' :
' → logprob: -10.401152610778809
    9. '	or' → logprob: -12.651152610778809
    10. ')' → logprob: -12.901152610778809

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08245349675416946
    2. ':
' → logprob: -3.207453489303589
    3. ':' → logprob: -3.957453489303589
    4. 'self' → logprob: -4.707453727722168
    5. ' self' → logprob: -5.457453727722168
    6. '       ' → logprob: -6.207453727722168
    7. ':return' → logprob: -6.332453727722168
    8. '   ' → logprob: -7.082453727722168
    9. ':self' → logprob: -7.082453727722168
    10. 'return' → logprob: -8.957453727722168

Token 241: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5015061497688293
    2. 'return' → logprob: -1.0015060901641846
    3. ' self' → logprob: -4.251506328582764
    4. ' return' → logprob: -4.376506328582764
    5. '   ' → logprob: -9.001505851745605
    6. '           ' → logprob: -9.876505851745605
    7. '       ' → logprob: -10.126505851745605
    8. ':return' → logprob: -12.001505851745605
    9. ' ' → logprob: -12.501505851745605
    10. '	self' → logprob: -12.626505851745605

Token 242: ' root' (ID: 6577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.032468050718307495
    2. 'return' → logprob: -4.032467842102051
    3. ' self' → logprob: -4.282467842102051
    4. ' return' → logprob: -7.907467842102051
    5. '#' → logprob: -11.15746784210205
    6. '   ' → logprob: -12.15746784210205
    7. '       ' → logprob: -12.15746784210205
    8. '           ' → logprob: -12.15746784210205
    9. 'pass' → logprob: -12.90746784210205
    10. '	self' → logprob: -13.53246784210205

Token 243: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.192367434501648
    2. ':' → logprob: -1.317367434501648
    3. ':
' → logprob: -1.442367434501648
    4. 'self' → logprob: -2.5673675537109375
    5. ':return' → logprob: -2.6923675537109375
    6. ' self' → logprob: -3.6923675537109375
    7. '       ' → logprob: -5.4423675537109375
    8. 'return' → logprob: -5.5673675537109375
    9. '
' → logprob: -5.8173675537109375
    10. ' return' → logprob: -5.9423675537109375

Token 244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5100849270820618
    2. 'return' → logprob: -1.135084867477417
    3. ' self' → logprob: -3.260084867477417
    4. ' return' → logprob: -3.260084867477417
    5. '           ' → logprob: -6.635085105895996
    6. '   ' → logprob: -10.510085105895996
    7. '       ' → logprob: -11.010085105895996
    8. ' ' → logprob: -12.010085105895996
    9. 'pass' → logprob: -12.635085105895996
    10. ':return' → logprob: -12.760085105895996

Token 245: ' parent' (ID: 5980)
  Prédit: '.uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.uf' → logprob: -3.1424973713001236e-05
    2. 'uf' → logprob: -10.625031471252441
    3. 'parent' → logprob: -13.375031471252441
    4. 'self' → logprob: -13.500031471252441
    5. '.parent' → logprob: -13.625031471252441
    6. ' uf' → logprob: -14.500031471252441
    7. '.' → logprob: -14.875031471252441
    8. '.um' → logprob: -15.250031471252441
    9. '.uk' → logprob: -15.500031471252441
    10. '.union' → logprob: -15.625031471252441

Token 246: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3755107522010803
    2. ' =' → logprob: -1.6255106925964355
    3. '=' → logprob: -3.2505106925964355
    4. '       ' → logprob: -4.0005106925964355
    5. ' self' → logprob: -4.1255106925964355
    6. '           ' → logprob: -4.5005106925964355
    7. '=self' → logprob: -4.7505106925964355
    8. '[self' → logprob: -4.7505106925964355
    9. '
' → logprob: -5.0005106925964355
    10. ':' → logprob: -7.0005106925964355

Token 247: ' union' (ID: 22208)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.2558453679084778
    2. 'self' → logprob: -2.005845308303833
    3. ' uf' → logprob: -2.630845308303833
    4. ' self' → logprob: -4.880845546722412
    5. 'union' → logprob: -5.380845546722412
    6. ' union' → logprob: -6.505845546722412
    7. 'this' → logprob: -6.755845546722412
    8. 'the' → logprob: -7.005845546722412
    9. ' the' → logprob: -7.255845546722412
    10. 'UF' → logprob: -7.755845546722412

Token 248: '-find' (ID: 168817)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.5372874140739441
    2. '=' → logprob: -1.9122874736785889
    3. 'self' → logprob: -2.537287473678589
    4. ' =' → logprob: -2.662287473678589
    5. '[self' → logprob: -3.162287473678589
    6. '[' → logprob: -3.912287473678589
    7. ' self' → logprob: -4.41228723526001
    8. '       ' → logprob: -4.91228723526001
    9. ')' → logprob: -5.28728723526001
    10. ']' → logprob: -5.28728723526001

Token 249: ' stays' (ID: 35239)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40761351585388184
    2. ' =' → logprob: -2.407613515853882
    3. ' self' → logprob: -2.657613515853882
    4. '=' → logprob: -3.157613515853882
    5. '           ' → logprob: -3.532613515853882
    6. '       ' → logprob: -3.532613515853882
    7. '
' → logprob: -3.782613515853882
    8. '[self' → logprob: -4.032613754272461
    9. 'return' → logprob: -4.907613754272461
    10. '=self' → logprob: -5.407613754272461

Token 250: ' itself' (ID: 8807)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14099735021591187
    2. 'v' → logprob: -2.1409974098205566
    3. 'x' → logprob: -5.140997409820557
    4. 'self' → logprob: -5.265997409820557
    5. 'as' → logprob: -6.515997409820557
    6. ' as' → logprob: -7.015997409820557
    7. ' itself' → logprob: -9.265996932983398
    8. 'it' → logprob: -9.390996932983398
    9. ' v' → logprob: -9.640996932983398
    10. ' ' → logprob: -9.890996932983398

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10343793034553528
    2. '           ' → logprob: -2.478437900543213
    3. 'return' → logprob: -4.728437900543213
    4. '
' → logprob: -6.228437900543213
    5. '<|end|>' → logprob: -7.103437900543213
    6. ' return' → logprob: -7.603437900543213
    7. '.' → logprob: -7.603437900543213
    8. 'else' → logprob: -8.103438377380371
    9. ':return' → logprob: -8.228438377380371
    10. ')' → logprob: -8.353438377380371

Token 252: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33484548330307007
    2. '           ' → logprob: -1.4598455429077148
    3. 'return' → logprob: -3.334845542907715
    4. ' return' → logprob: -4.584845542907715
    5. ':return' → logprob: -6.334845542907715
    6. '<|end|>' → logprob: -6.959845542907715
    7. '   ' → logprob: -7.334845542907715
    8. '.' → logprob: -7.459845542907715
    9. 'else' → logprob: -7.709845542907715
    10. ')' → logprob: -7.834845542907715

Token 253: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012162297032773495
    2. 'self' (adapté à ' self') → logprob: -4.887162208557129
    3. ' return' → logprob: -5.512162208557129
    4. 'pass' → logprob: -7.887162208557129
    5. '           ' → logprob: -10.012162208557129
    6. '       ' → logprob: -10.137162208557129
    7. ' self' → logprob: -10.637162208557129
    8. '   ' → logprob: -11.262162208557129
    9. ' pass' → logprob: -12.012162208557129
    10. 'ret' → logprob: -13.387162208557129

Token 254: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -2.15310683415737e-05
    2. '.' → logprob: -11.125021934509277
    3. ' .' → logprob: -13.000021934509277
    4. '.u' → logprob: -13.375021934509277
    5. 'uf' → logprob: -13.375021934509277
    6. '.
' → logprob: -14.500021934509277
    7. '.uk' → logprob: -16.25002098083496
    8. '..' → logprob: -16.25002098083496
    9. '.ud' → logprob: -16.37502098083496
    10. '.uc' → logprob: -16.37502098083496

Token 255: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -3.173704271830502e-06
    2. ' _' → logprob: -13.12500286102295
    3. '_' → logprob: -14.12500286102295
    4. '_par' → logprob: -15.75000286102295
    5. '_p' → logprob: -16.375003814697266
    6. '_pa' → logprob: -17.000003814697266
    7. 'parent' → logprob: -17.125003814697266
    8. '_PARENT' → logprob: -17.750003814697266
    9. '\' → logprob: -18.250003814697266
    10. '_partner' → logprob: -18.250003814697266

Token 256: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.8325677703833207e-05
    2. '[' → logprob: -10.500028610229492
    3. 'v' → logprob: -14.125028610229492
    4. ' [' → logprob: -17.500028610229492
    5. '=v' → logprob: -18.625028610229492
    6. '(v' → logprob: -18.625028610229492
    7. '[
' → logprob: -18.750028610229492
    8. '	v' → logprob: -19.125028610229492
    9. ')v' → logprob: -19.125028610229492
    10. ')[' → logprob: -19.250028610229492

Token 257: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5445654988288879
    2. ']' → logprob: -1.0445654392242432
    3. ']=' → logprob: -3.169565439224243
    4. ' =' → logprob: -3.919565439224243
    5. ' ]' → logprob: -5.294565677642822
    6. ')' → logprob: -7.044565677642822
    7. ')=' → logprob: -9.044565200805664
    8. ' ' → logprob: -9.794565200805664
    9. '=
' → logprob: -10.419565200805664
    10. '=v' → logprob: -10.544565200805664

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023255610838532448
    2. ' =' → logprob: -3.7732555866241455
    3. '=v' → logprob: -12.273255348205566
    4. '=
' → logprob: -12.773255348205566
    5. ' ' → logprob: -14.023255348205566
    6. ' =
' → logprob: -14.398255348205566
    7. ',' → logprob: -15.523255348205566
    8. ')=' → logprob: -15.648255348205566
    9. '[' → logprob: -15.898255348205566
    10. '=

' → logprob: -15.898255348205566

Token 259: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00016468366084154695
    2. '1' → logprob: -8.750164985656738
    3. ' v' → logprob: -12.000164985656738
    4. '	v' → logprob: -16.500164031982422
    5. '
' → logprob: -17.250164031982422
    6. ' ' → logprob: -19.000164031982422
    7. '   ' → logprob: -20.125164031982422
    8. '[v' → logprob: -20.250164031982422
    9. '\
' → logprob: -20.500164031982422
    10. '```' → logprob: -21.000164031982422

Token 260: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05242615193128586
    2. '
' → logprob: -3.6774260997772217
    3. 'else' → logprob: -3.9274260997772217
    4. ' else' → logprob: -5.802426338195801
    5. '<|end|>' → logprob: -6.677426338195801
    6. '	' → logprob: -7.802426338195801
    7. '   ' → logprob: -7.802426338195801
    8. 'return' → logprob: -8.8024263381958
    9. '\n' → logprob: -8.9274263381958
    10. 'elif' → logprob: -9.0524263381958

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005107457283884287
    2. 'else' → logprob: -5.880107402801514
    3. '
' → logprob: -6.755107402801514
    4. ' else' → logprob: -7.755107402801514
    5. '<|end|>' → logprob: -7.755107402801514
    6. '   ' → logprob: -9.380107879638672
    7. '	' → logprob: -10.130107879638672
    8. '           ' → logprob: -10.255107879638672
    9. 'elif' → logprob: -10.380107879638672
    10. 'return' → logprob: -10.630107879638672

Token 262: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3898453116416931
    2. 'else' (adapté à ' else') → logprob: -1.139845371246338
    3. '       ' → logprob: -5.889845371246338
    4. 'elif' → logprob: -9.01484489440918
    5. ' elif' → logprob: -10.38984489440918
    6. '   ' → logprob: -10.51484489440918
    7. '	else' → logprob: -11.01484489440918
    8. '
' → logprob: -12.88984489440918
    9. ' ' → logprob: -14.13984489440918
    10. ',' → logprob: -14.38984489440918

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18026866018772125
    2. ':
' → logprob: -1.80526864528656
    3. '       ' → logprob: -8.430268287658691
    4. '           ' → logprob: -9.055268287658691
    5. ' if' → logprob: -10.055268287658691
    6. ',' → logprob: -10.305268287658691
    7. ' :' → logprob: -10.430268287658691
    8. ' :
' → logprob: -10.805268287658691
    9. ':

' → logprob: -10.930268287658691
    10. ' and' → logprob: -11.430268287658691

Token 264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18116328120231628
    2. ' if' → logprob: -1.9311633110046387
    3. ' parent' → logprob: -4.681163311004639
    4. 'if' → logprob: -5.181163311004639
    5. '       ' → logprob: -5.931163311004639
    6. 'parent' → logprob: -6.556163311004639
    7. '   ' → logprob: -7.806163311004639
    8. ' p' → logprob: -7.806163311004639
    9. ' self' → logprob: -8.05616283416748
    10. 'p' → logprob: -9.18116283416748

Token 265: ' p' (ID: 275)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9897177219390869
    2. ' if' → logprob: -1.364717721939087
    3. 'p' (adapté à ' p') → logprob: -1.489717721939087
    4. ' p' → logprob: -2.739717721939087
    5. 'parent' → logprob: -3.114717721939087
    6. ' parent' → logprob: -3.489717721939087
    7. '           ' → logprob: -5.114717483520508
    8. '       ' → logprob: -8.364717483520508
    9. 'self' → logprob: -8.364717483520508
    10. 'pv' → logprob: -8.364717483520508

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2832196056842804
    2. '=' → logprob: -1.408219575881958
    3. '_index' → logprob: -6.533219814300537
    4. 'v' → logprob: -8.408219337463379
    5. '_idx' → logprob: -8.908219337463379
    6. '_parent' → logprob: -9.408219337463379
    7. '_' → logprob: -9.533219337463379
    8. 'index' → logprob: -10.533219337463379
    9. ' ' → logprob: -10.658219337463379
    10. 'ar' → logprob: -11.908219337463379

Token 267: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163747429847717
    2. ' self' → logprob: -4.264163970947266
    3. '(self' → logprob: -16.514163970947266
    4. '       ' → logprob: -16.639163970947266
    5. '	self' → logprob: -16.639163970947266
    6. '   ' → logprob: -17.764163970947266
    7. '           ' → logprob: -18.139163970947266
    8. '
' → logprob: -18.389163970947266
    9. '[self' → logprob: -18.389163970947266
    10. ' ' → logprob: -19.389163970947266

Token 268: '.nodes' (ID: 44152)
  Prédit: '.nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.nodes' → logprob: -0.019348548725247383
    2. 'nodes' → logprob: -4.519348621368408
    3. '.' → logprob: -5.519348621368408
    4. '.uf' → logprob: -5.769348621368408
    5. '.find' → logprob: -7.394348621368408
    6. '.parent' → logprob: -8.14434814453125
    7. ' .' → logprob: -9.39434814453125
    8. 'find' → logprob: -10.14434814453125
    9. ' nodes' → logprob: -10.51934814453125
    10. '	nodes' → logprob: -11.14434814453125

Token 269: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.371605948312208e-05
    2. 'v' → logprob: -9.875053405761719
    3. '[p' → logprob: -13.875053405761719
    4. '[' → logprob: -14.000053405761719
    5. ' v' → logprob: -15.500053405761719
    6. '```' → logprob: -16.62505340576172
    7. '[parent' → logprob: -17.00005340576172
    8. '[self' → logprob: -17.00005340576172
    9. '	v' → logprob: -17.62505340576172
    10. '(v' → logprob: -17.75005340576172

Token 270: '].' (ID: 1651)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.04938739165663719
    2. '].' → logprob: -3.0493874549865723
    3. ').' → logprob: -8.299386978149414
    4. '.' → logprob: -8.799386978149414
    5. '.p' → logprob: -8.799386978149414
    6. ' .' → logprob: -9.049386978149414
    7. '.index' → logprob: -9.424386978149414
    8. ' ].' → logprob: -11.299386978149414
    9. '}.' → logprob: -11.424386978149414
    10. '   ' → logprob: -11.799386978149414

Token 271: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -3.9888433093437925e-05
    2. 'index' → logprob: -10.250040054321289
    3. ' parent' → logprob: -12.875040054321289
    4. '.parent' → logprob: -13.250040054321289
    5. 'paren' → logprob: -17.00004005432129
    6. '	parent' → logprob: -18.00004005432129
    7. 'p' → logprob: -18.00004005432129
    8. '_parent' → logprob: -18.37504005432129
    9. '(parent' → logprob: -18.37504005432129
    10. '   ' → logprob: -18.62504005432129

Token 272: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00034118397161364555
    2. 'index' → logprob: -8.250341415405273
    3. '.' → logprob: -9.500341415405273
    4. '#index' → logprob: -13.125341415405273
    5. ' .' → logprob: -14.000341415405273
    6. ' index' → logprob: -14.625341415405273
    7. '.Index' → logprob: -15.375341415405273
    8. '
' → logprob: -15.500341415405273
    9. '.
' → logprob: -15.750341415405273
    10. '	index' → logprob: -15.875341415405273

Token 273: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.059794384986162186
    2. ' if' → logprob: -3.4347944259643555
    3. '<|end|>' → logprob: -4.4347944259643555
    4. '       ' → logprob: -4.9347944259643555
    5. '           ' → logprob: -5.9347944259643555
    6. 'if' → logprob: -6.5597944259643555
    7. ' 
' → logprob: -7.4347944259643555
    8. ')' → logprob: -7.5597944259643555
    9. '  
' → logprob: -8.059794425964355
    10. ';if' → logprob: -8.434794425964355

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10369575768709183
    2. '       ' → logprob: -2.978695869445801
    3. ' if' → logprob: -3.603695869445801
    4. 'if' → logprob: -4.603695869445801
    5. '
' → logprob: -5.228695869445801
    6. 'self' → logprob: -5.603695869445801
    7. ' self' → logprob: -8.2286958694458
    8. ')' → logprob: -8.7286958694458
    9. '```' → logprob: -8.7286958694458
    10. '   ' → logprob: -9.2286958694458

Token 275: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005761691834777594
    2. '           ' → logprob: -5.630761623382568
    3. ' if' → logprob: -6.380761623382568
    4. 'self' → logprob: -7.755761623382568
    5. '	if' → logprob: -12.005762100219727
    6. '            
' → logprob: -12.130762100219727
    7. '
' → logprob: -12.380762100219727
    8. 'If' → logprob: -12.505762100219727
    9. '```' → logprob: -12.505762100219727
    10. ';if' → logprob: -13.005762100219727

Token 276: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014203116297721863
    2. ' self' → logprob: -4.264203071594238
    3. '           ' → logprob: -10.264203071594238
    4. '   ' → logprob: -13.764203071594238
    5. 'not' → logprob: -14.014203071594238
    6. '(self' → logprob: -14.389203071594238
    7. '[self' → logprob: -14.764203071594238
    8. '               ' → logprob: -14.889203071594238
    9. ' ' → logprob: -14.889203071594238
    10. '	self' → logprob: -15.014203071594238

Token 277: '.mark' (ID: 32834)
  Prédit: '.mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mark' → logprob: -0.00016921341011766344
    2. 'marked' → logprob: -8.750168800354004
    3. 'mark' → logprob: -12.500168800354004
    4. '.' → logprob: -12.750168800354004
    5. 'Marked' → logprob: -13.250168800354004
    6. ' .' → logprob: -14.125168800354004
    7. ' marked' → logprob: -14.375168800354004
    8. '_mark' → logprob: -15.500168800354004
    9. '.m' → logprob: -16.12516975402832
    10. '-mark' → logprob: -16.25016975402832

Token 278: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -14.000001907348633
    3. '[p' → logprob: -14.125001907348633
    4. 'edf' → logprob: -15.625001907348633
    5. 'arked' → logprob: -16.000001907348633
    6. 'ED' → logprob: -16.250001907348633
    7. 'edis' → logprob: -16.875001907348633
    8. 'e' → logprob: -16.875001907348633
    9. 'eds' → logprob: -17.250001907348633
    10. 'ked' → logprob: -17.625001907348633

Token 279: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0002553793019615114
    2. 'p' → logprob: -8.500255584716797
    3. '[' → logprob: -10.500255584716797
    4. '(p' → logprob: -10.750255584716797
    5. '[
' → logprob: -13.625255584716797
    6. '   ' → logprob: -15.125255584716797
    7. '       ' → logprob: -15.125255584716797
    8. '<p' → logprob: -15.500255584716797
    9. ' [' → logprob: -15.500255584716797
    10. '```' → logprob: -15.500255584716797

Token 280: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.23277384042739868
    2. ']:' → logprob: -1.607773780822754
    3. ':
' → logprob: -5.982773780822754
    4. ':' → logprob: -6.107773780822754
    5. ']' → logprob: -6.357773780822754
    6. '):
' → logprob: -7.857773780822754
    7. ']==' → logprob: -8.607773780822754
    8. ' ]' → logprob: -8.732773780822754
    9. ']:
' → logprob: -10.607773780822754
    10. ']:

' → logprob: -10.857773780822754

Token 281: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043071016669273376
    2. 'self' → logprob: -3.6680710315704346
    3. ' self' → logprob: -4.1680707931518555
    4. '           ' → logprob: -7.6680707931518555
    5. ':
' → logprob: -8.543070793151855
    6. ':' → logprob: -8.918070793151855
    7. ',' → logprob: -9.293070793151855
    8. '[self' → logprob: -10.293070793151855
    9. '```' → logprob: -10.543070793151855
    10. ':self' → logprob: -10.543070793151855

Token 282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00415022624656558
    2. ' self' → logprob: -5.504150390625
    3. '               ' → logprob: -9.629150390625
    4. '	self' → logprob: -13.504150390625
    5. '
' → logprob: -13.754150390625
    6. 'root' → logprob: -14.004150390625
    7. '   ' → logprob: -14.629150390625
    8. '=self' → logprob: -14.754150390625
    9. '                   ' → logprob: -14.879150390625
    10. '[self' → logprob: -15.504150390625

Token 283: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -1.9743012671824545e-05
    2. '.' → logprob: -11.625020027160645
    3. ' .' → logprob: -12.375020027160645
    4. 'uf' → logprob: -12.750020027160645
    5. '.union' → logprob: -12.875020027160645
    6. '.
' → logprob: -15.500020027160645
    7. ' uf' → logprob: -15.750020027160645
    8. 'Uf' → logprob: -16.000019073486328
    9. '.uc' → logprob: -16.125019073486328
    10. '.uk' → logprob: -16.375019073486328

Token 284: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -1.0802738870552275e-05
    2. 'parent' → logprob: -11.62501049041748
    3. '_' → logprob: -14.25001049041748
    4. '_par' → logprob: -15.25001049041748
    5. '_PARENT' → logprob: -15.37501049041748
    6. '_p' → logprob: -15.62501049041748
    7. 'Parent' → logprob: -15.87501049041748
    8. '[parent' → logprob: -16.750011444091797
    9. '```' → logprob: -16.875011444091797
    10. '[_' → logprob: -17.250011444091797

Token 285: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4757516086101532
    2. '[p' → logprob: -0.9757516384124756
    3. '[' → logprob: -6.8507513999938965
    4. 'p' → logprob: -8.600751876831055
    5. 'v' → logprob: -8.850751876831055
    6. '[self' → logprob: -9.225751876831055
    7. '[parent' → logprob: -10.350751876831055
    8. '[
' → logprob: -10.475751876831055
    9. '=' → logprob: -10.725751876831055
    10. ' [' → logprob: -10.975751876831055

Token 286: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26412805914878845
    2. '=' → logprob: -1.7641280889511108
    3. ' =' → logprob: -2.8891279697418213
    4. ']=' → logprob: -5.8891282081604
    5. ' ]' → logprob: -6.1391282081604
    6. ')' → logprob: -8.389127731323242
    7. ' ' → logprob: -12.889127731323242
    8. ')=' → logprob: -13.264127731323242
    9. '=p' → logprob: -13.514127731323242
    10. '[' → logprob: -14.139127731323242

Token 287: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869083523750305
    2. ' =' → logprob: -1.1369082927703857
    3. '=p' → logprob: -10.261908531188965
    4. '=
' → logprob: -14.511908531188965
    5. ' =
' → logprob: -14.636908531188965
    6. ' ' → logprob: -14.761908531188965
    7. '=v' → logprob: -15.261908531188965
    8. ')' → logprob: -16.13690757751465
    9. '=self' → logprob: -16.13690757751465
    10. '=

' → logprob: -16.26190757751465

Token 288: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31696128845214844
    2. 'p' → logprob: -1.3169612884521484
    3. ' self' → logprob: -5.691961288452148
    4. ' p' → logprob: -8.066961288452148
    5. 'elf' → logprob: -13.941961288452148
    6. 'sel' → logprob: -14.066961288452148
    7. 's' → logprob: -14.191961288452148
    8. 'v' → logprob: -14.316961288452148
    9. '   ' → logprob: -14.441961288452148
    10. '	self' → logprob: -14.566961288452148

Token 289: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23586618900299072
    2. '           ' → logprob: -1.8608661890029907
    3. ' else' → logprob: -3.110866069793701
    4. '               ' → logprob: -4.860866069793701
    5. '
' → logprob: -6.235866069793701
    6. '       ' → logprob: -9.36086654663086
    7. 'elif' → logprob: -10.11086654663086
    8. ')' → logprob: -10.86086654663086
    9. ';' → logprob: -11.11086654663086
    10. '   ' → logprob: -11.11086654663086

Token 290: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.44218316674232483
    2. '           ' → logprob: -1.3171831369400024
    3. ' else' → logprob: -2.442183256149292
    4. '               ' → logprob: -6.067183017730713
    5. '       ' → logprob: -9.692183494567871
    6. 'elif' → logprob: -10.567183494567871
    7. '<|end|>' → logprob: -10.942183494567871
    8. ')' → logprob: -11.317183494567871
    9. '		' → logprob: -11.442183494567871
    10. ' or' → logprob: -11.692183494567871

Token 291: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0366823635995388
    2. ' else' → logprob: -3.411682367324829
    3. '           ' → logprob: -6.03668212890625
    4. '               ' → logprob: -7.78668212890625
    5. '       ' → logprob: -8.53668212890625
    6. '   ' → logprob: -11.91168212890625
    7. '	else' → logprob: -12.03668212890625
    8. 'elif' → logprob: -12.16168212890625
    9. ')' → logprob: -12.78668212890625
    10. 'self' → logprob: -13.28668212890625

Token 292: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16569755971431732
    2. '               ' → logprob: -2.4156975746154785
    3. ':' → logprob: -2.7906975746154785
    4. ' self' → logprob: -7.5406975746154785
    5. 'self' → logprob: -7.6656975746154785
    6. ' :
' → logprob: -7.9156975746154785
    7. '           ' → logprob: -8.41569709777832
    8. ',' → logprob: -8.66569709777832
    9. ':

' → logprob: -9.79069709777832
    10. '
' → logprob: -10.41569709777832

Token 293: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6100097298622131
    2. ' self' → logprob: -1.3600096702575684
    3. '               ' → logprob: -1.6100096702575684
    4. '           ' → logprob: -9.985010147094727
    5. '	self' → logprob: -10.610010147094727
    6. '   ' → logprob: -10.985010147094727
    7. ' ' → logprob: -12.610010147094727
    8. 'elf' → logprob: -12.985010147094727
    9. '(self' → logprob: -13.485010147094727
    10. ' ' → logprob: -13.485010147094727

Token 294: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028513523284345865
    2. ' self' → logprob: -5.877851486206055
    3. '               ' → logprob: -10.002851486206055
    4. '	self' → logprob: -14.377851486206055
    5. 'p' → logprob: -15.752851486206055
    6. 'v' → logprob: -15.752851486206055
    7. 'elf' → logprob: -16.752851486206055
    8. 's' → logprob: -16.877851486206055
    9. '=self' → logprob: -17.002851486206055
    10. '[self' → logprob: -17.127851486206055

Token 295: ' Link' (ID: 8348)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03082527406513691
    2. ' self' → logprob: -3.53082537651062
    3. '               ' → logprob: -6.905825138092041
    4. 'parent' → logprob: -9.9058256149292
    5. '	self' → logprob: -12.1558256149292
    6. '   ' → logprob: -12.4058256149292
    7. 'if' → logprob: -13.1558256149292
    8. ' parent' → logprob: -13.2808256149292
    9. '           ' → logprob: -13.5308256149292
    10. ' ' → logprob: -13.5308256149292

Token 296: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13126182556152344
    2. ' self' → logprob: -2.1312618255615234
    3. '               ' → logprob: -5.631261825561523
    4. 'v' → logprob: -8.506261825561523
    5. '=self' → logprob: -8.631261825561523
    6. '[self' → logprob: -9.631261825561523
    7. ',' → logprob: -9.756261825561523
    8. ' v' → logprob: -9.881261825561523
    9. '	self' → logprob: -10.256261825561523
    10. '                   ' → logprob: -11.131261825561523

Token 297: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0931615829467773
    2. 'self' → logprob: -1.2181615829467773
    3. ']' → logprob: -1.5931615829467773
    4. ' to' → logprob: -2.7181615829467773
    5. ')' → logprob: -3.4681615829467773
    6. '               ' → logprob: -4.468161582946777
    7. 'to' → logprob: -4.718161582946777
    8. '           ' → logprob: -4.843161582946777
    9. '],' → logprob: -4.968161582946777
    10. ''s' → logprob: -5.468161582946777

Token 298: ' parent's' (ID: 198188)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7045910358428955
    2. 'self' → logprob: -0.7045910358428955
    3. ' self' → logprob: -4.704590797424316
    4. ' p' → logprob: -6.079590797424316
    5. 'parent' → logprob: -10.704590797424316
    6. 'the' → logprob: -12.329590797424316
    7. 's' → logprob: -12.954590797424316
    8. '(self' → logprob: -14.329590797424316
    9. 'elf' → logprob: -14.329590797424316
    10. 'v' → logprob: -14.579590797424316

Token 299: ' nearest' (ID: 35210)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.0710853561758995
    2. ' uf' → logprob: -2.8210854530334473
    3. 'self' → logprob: -5.571085453033447
    4. 'parent' → logprob: -6.321085453033447
    5. '.uf' → logprob: -6.821085453033447
    6. 'find' → logprob: -7.446085453033447
    7. 'v' → logprob: -7.696085453033447
    8. 'p' → logprob: -7.946085453033447
    9. 'ufs' → logprob: -8.446084976196289
    10. 'ufi' → logprob: -8.946084976196289

Token 300: ' marked' (ID: 20779)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.06313452124595642
    2. ' marked' → logprob: -2.9381344318389893
    3. 'self' → logprob: -5.313134670257568
    4. 'parent' → logprob: -6.188134670257568
    5. ' self' → logprob: -7.438134670257568
    6. 'ancestor' → logprob: -8.18813419342041
    7. ' parent' → logprob: -9.06313419342041
    8. '_mark' → logprob: -9.18813419342041
    9. ' ancestor' → logprob: -10.06313419342041
    10. '_parent' → logprob: -10.68813419342041

Token 301: ' ancestor' (ID: 90832)
  Prédit: 'ancestor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancestor' → logprob: -0.2024352103471756
    2. ' ancestor' → logprob: -1.7024352550506592
    3. '_' → logprob: -7.82743501663208
    4. 'parent' → logprob: -8.452435493469238
    5. 'anc' → logprob: -9.202435493469238
    6. ' ' → logprob: -9.577435493469238
    7. ' parent' → logprob: -9.827435493469238
    8. ' _' → logprob: -9.952435493469238
    9. 'marked' → logprob: -10.452435493469238
    10. '_parent' → logprob: -10.577435493469238

Token 302: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0586588382720947
    2. 'self' → logprob: -1.1836588382720947
    3. ' self' → logprob: -1.6836588382720947
    4. '               ' → logprob: -2.5586588382720947
    5. '=' → logprob: -2.6836588382720947
    6. '=self' → logprob: -4.683658599853516
    7. ',' → logprob: -6.058658599853516
    8. ')' → logprob: -6.933658599853516
    9. '[self' → logprob: -7.433658599853516
    10. '(self' → logprob: -7.683658599853516

Token 303: '               ' (ID: 506)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2140064835548401
    2. 'self' → logprob: -2.0890064239501953
    3. '               ' → logprob: -3.5890064239501953
    4. '=' → logprob: -3.8390064239501953
    5. ' =' → logprob: -4.339006423950195
    6. '=self' → logprob: -5.214006423950195
    7. ' p' → logprob: -8.339006423950195
    8. ' v' → logprob: -8.464006423950195
    9. ')' → logprob: -9.089006423950195
    10. '(self' → logprob: -9.214006423950195

Token 304: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.029768195003271103
    2. ' self' → logprob: -3.529768228530884
    3. '               ' → logprob: -11.154767990112305
    4. '=self' → logprob: -14.154767990112305
    5. 'v' → logprob: -14.279767990112305
    6. '	self' → logprob: -14.279767990112305
    7. '[self' → logprob: -15.279767990112305
    8. '(self' → logprob: -15.529767990112305
    9. '                   ' → logprob: -15.654767990112305
    10. '           ' → logprob: -15.779767990112305

Token 305: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -1.0802738870552275e-05
    2. 'uf' → logprob: -11.62501049041748
    3. '.' → logprob: -13.75001049041748
    4. ' .' → logprob: -14.87501049041748
    5. ' uf' → logprob: -16.625011444091797
    6. 'Uf' → logprob: -16.750011444091797
    7. 'UF' → logprob: -17.125011444091797
    8. '.u' → logprob: -17.625011444091797
    9. '.uc' → logprob: -18.125011444091797
    10. '.ud' → logprob: -18.250011444091797

Token 306: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -5.9153885558771435e-06
    2. 'parent' → logprob: -12.625005722045898
    3. '_par' → logprob: -14.000005722045898
    4. '_p' → logprob: -14.125005722045898
    5. '_' → logprob: -14.750005722045898
    6. '_PARENT' → logprob: -15.625005722045898
    7. 'Parent' → logprob: -16.1250057220459
    8. ' _' → logprob: -16.8750057220459
    9. '_pa' → logprob: -16.8750057220459
    10. '```' → logprob: -17.1250057220459

Token 307: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.02717066928744316
    2. '[p' → logprob: -3.6521706581115723
    3. '[self' → logprob: -7.902170658111572
    4. '[' → logprob: -8.02717113494873
    5. '[parent' → logprob: -9.65217113494873
    6. '=' → logprob: -10.27717113494873
    7. 'v' → logprob: -10.52717113494873
    8. '[
' → logprob: -11.40217113494873
    9. 'p' → logprob: -11.52717113494873
    10. ' [' → logprob: -12.15217113494873

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6009425520896912
    2. '=' → logprob: -0.8509425520896912
    3. ' =' → logprob: -3.850942611694336
    4. ']=' → logprob: -5.975942611694336
    5. ')' → logprob: -7.350942611694336
    6. ' ]' → logprob: -8.350942611694336
    7. ')=' → logprob: -11.725942611694336
    8. '   ' → logprob: -12.725942611694336
    9. ' ' → logprob: -13.350942611694336
    10. ' )' → logprob: -14.225942611694336

Token 309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. ')' → logprob: -15.410224914550781
    4. '=self' → logprob: -16.66022491455078
    5. ' ' → logprob: -17.41022491455078
    6. ' =
' → logprob: -17.66022491455078
    7. '=
' → logprob: -17.78522491455078
    8. ',' → logprob: -17.78522491455078
    9. '=

' → logprob: -17.78522491455078
    10. ']' → logprob: -17.91022491455078

Token 310: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019293478690087795
    2. ' self' → logprob: -6.25192928314209
    3. '[self' → logprob: -15.37692928314209
    4. '               ' → logprob: -15.75192928314209
    5. 's' → logprob: -16.251930236816406
    6. '(self' → logprob: -16.501930236816406
    7. 'elf' → logprob: -16.751930236816406
    8. '	self' → logprob: -17.001930236816406
    9. 'p' → logprob: -17.126930236816406
    10. '                   ' → logprob: -17.376930236816406

Token 311: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.23274680972099304
    2. '.uf' → logprob: -1.6077468395233154
    3. '.' → logprob: -4.982746601104736
    4. 'find' → logprob: -8.607747077941895
    5. ' .' → logprob: -9.232747077941895
    6. 'uf' → logprob: -9.357747077941895
    7. '.parent' → logprob: -10.482747077941895
    8. ' uf' → logprob: -11.982747077941895
    9. '._' → logprob: -12.357747077941895
    10. ').' → logprob: -12.357747077941895

Token 312: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.398067828034982e-05
    2. '(' → logprob: -9.62507438659668
    3. '(
' → logprob: -12.50007438659668
    4. 'p' → logprob: -12.75007438659668
    5. '(self' → logprob: -15.00007438659668
    6. ' (' → logprob: -15.00007438659668
    7. '(v' → logprob: -15.50007438659668
    8. '((' → logprob: -16.37507438659668
    9. '(parent' → logprob: -16.75007438659668
    10. '(

' → logprob: -16.87507438659668

Token 313: ')

' (ID: 1029)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -1.2696439027786255
    2. 'get' → logprob: -1.3946439027786255
    3. 'l' → logprob: -1.7696439027786255
    4. 'un' → logprob: -2.144643783569336
    5. 'find' → logprob: -2.769643783569336
    6. 'lowest' → logprob: -3.269643783569336
    7. ' query' → logprob: -3.894643783569336
    8. ' l' → logprob: -4.144643783569336
    9. 'nearest' → logprob: -4.769643783569336
    10. ' get' → logprob: -4.769643783569336

Token 317: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2520912289619446
    2. '(' → logprob: -1.5020911693572998
    3. ' (' → logprob: -9.502091407775879
    4. '(v' → logprob: -10.502091407775879
    5. 'self' → logprob: -10.877091407775879
    6. '_parent' → logprob: -11.877091407775879
    7. '_' → logprob: -12.377091407775879
    8. '(
' → logprob: -12.377091407775879
    9. '(s' → logprob: -12.627091407775879
    10. '   ' → logprob: -12.752091407775879

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4604478180408478
    2. '(self' → logprob: -1.0854477882385254
    3. 'self' → logprob: -4.460447788238525
    4. '(' → logprob: -4.460447788238525
    5. ')' → logprob: -5.085447788238525
    6. ',v' → logprob: -8.210448265075684
    7. '   ' → logprob: -8.335448265075684
    8. ')(' → logprob: -8.460448265075684
    9. ',self' → logprob: -8.460448265075684
    10. ' ,' → logprob: -8.460448265075684

Token 319: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.05207258090376854
    2. ' v' → logprob: -3.052072525024414
    3. 'x' → logprob: -5.802072525024414
    4. 'u' → logprob: -8.677072525024414
    5. ' x' → logprob: -8.677072525024414
    6. 'self' → logprob: -9.302072525024414
    7. ' u' → logprob: -11.177072525024414
    8. ' self' → logprob: -11.802072525024414
    9. '   ' → logprob: -13.552072525024414
    10. ')' → logprob: -14.177072525024414

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761628150939941
    2. '):
' → logprob: -0.8261628150939941
    3. '):
' → logprob: -9.076162338256836
    4. ',' → logprob: -9.951162338256836
    5. ')' → logprob: -10.201162338256836
    6. '   ' → logprob: -11.201162338256836
    7. '):

' → logprob: -12.451162338256836
    8. '       ' → logprob: -13.201162338256836
    9. ' ):' → logprob: -13.576162338256836
    10. 'self' → logprob: -13.826162338256836

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001447737100534141
    2. '(' → logprob: -8.376447677612305
    3. ' if' → logprob: -8.501447677612305
    4. ':' → logprob: -8.751447677612305
    5. 'return' → logprob: -8.751447677612305
    6. ' return' → logprob: -9.126447677612305
    7. '   ' → logprob: -9.251447677612305
    8. '        
' → logprob: -9.376447677612305
    9. ' 
' → logprob: -9.626447677612305
    10. '#' → logprob: -10.376447677612305

Token 322: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3845665156841278
    2. 'return' → logprob: -1.6345665454864502
    3. '       ' → logprob: -2.50956654548645
    4. ' if' → logprob: -4.009566307067871
    5. 'res' → logprob: -4.134566307067871
    6. ' return' → logprob: -6.009566307067871
    7. 'ancestor' → logprob: -6.634566307067871
    8. 'nearest' → logprob: -6.884566307067871
    9. 'x' → logprob: -7.009566307067871
    10. 'u' → logprob: -7.509566307067871

Token 323: ' returns' (ID: 7377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3221840262413025
    2. 'return' → logprob: -1.6971840858459473
    3. 'ancestor' → logprob: -3.4471840858459473
    4. 'res' → logprob: -3.8221840858459473
    5. ' if' → logprob: -4.072184085845947
    6. ' return' → logprob: -5.072184085845947
    7. 'nearest' → logprob: -5.197184085845947
    8. 'u' → logprob: -6.197184085845947
    9. 'ans' → logprob: -6.322184085845947
    10. '   ' → logprob: -6.947184085845947

Token 324: ' index' (ID: 3472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016381194815039635
    2. ' self' → logprob: -4.14138126373291
    3. 'the' → logprob: -8.39138126373291
    4. 'v' → logprob: -10.76638126373291
    5. ''' → logprob: -10.89138126373291
    6. ' the' → logprob: -11.01638126373291
    7. 'nearest' → logprob: -11.39138126373291
    8. ''s' → logprob: -11.64138126373291
    9. '"' → logprob: -11.76638126373291
    10. ' v' → logprob: -11.89138126373291

Token 325: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.49797627329826355
    2. '(self' → logprob: -1.997976303100586
    3. ' self' → logprob: -2.372976303100586
    4. '       ' → logprob: -2.872976303100586
    5. 'self' → logprob: -3.122976303100586
    6. ' ' → logprob: -3.997976303100586
    7. '   ' → logprob: -4.497976303100586
    8. ' =' → logprob: -5.247976303100586
    9. 'of' → logprob: -5.747976303100586
    10. '_' → logprob: -5.997976303100586

Token 326: ' nearest' (ID: 35210)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21374939382076263
    2. 'the' → logprob: -1.7137494087219238
    3. 'nearest' → logprob: -4.463749408721924
    4. 'marked' → logprob: -7.963749408721924
    5. 'closest' → logprob: -8.713748931884766
    6. 'next' → logprob: -9.463748931884766
    7. ' self' → logprob: -9.713748931884766
    8. ' the' → logprob: -10.088748931884766
    9. 'node' → logprob: -10.463748931884766
    10. ' nearest' → logprob: -11.463748931884766

Token 327: ' marked' (ID: 20779)
  Prédit: ' marked'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' marked' → logprob: -0.32882729172706604
    2. '_' → logprob: -1.5788272619247437
    3. '_mark' → logprob: -3.078827381134033
    4. 'marked' → logprob: -3.828827381134033
    5. ' _' → logprob: -5.703827381134033
    6. ' ' → logprob: -6.953827381134033
    7. ' ' → logprob: -7.953827381134033
    8. ' space' → logprob: -8.078826904296875
    9. '_space' → logprob: -8.453826904296875
    10. ' 
' → logprob: -8.578826904296875

Token 328: ' ancestor' (ID: 90832)
  Prédit: ' ancestor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ancestor' → logprob: -0.6433775424957275
    2. 'ancestor' → logprob: -0.7683775424957275
    3. ' node' → logprob: -5.268377304077148
    4. '_' → logprob: -5.518377304077148
    5. 'node' → logprob: -6.893377304077148
    6. ' _' → logprob: -8.893377304077148
    7. ' v' → logprob: -9.393377304077148
    8. ' ' → logprob: -9.393377304077148
    9. '_node' → logprob: -9.768377304077148
    10. '   ' → logprob: -10.268377304077148

Token 329: '
' (ID: 198)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.6681796312332153
    2. '(' → logprob: -1.1681796312332153
    3. '(self' → logprob: -2.418179512023926
    4. '(
' → logprob: -2.793179512023926
    5. '       ' → logprob: -4.418179512023926
    6. '   ' → logprob: -4.918179512023926
    7. 'v' → logprob: -5.918179512023926
    8. 'self' → logprob: -6.543179512023926
    9. ' (' → logprob: -7.543179512023926
    10. 'return' → logprob: -7.543179512023926

Token 330: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38498184084892273
    2. '(self' → logprob: -1.7599818706512451
    3. '       ' → logprob: -2.259981870651245
    4. '(
' → logprob: -3.884981870651245
    5. '   ' → logprob: -4.259981632232666
    6. '(v' → logprob: -5.134981632232666
    7. 'self' → logprob: -7.384981632232666
    8. 'return' → logprob: -7.884981632232666
    9. ' (' → logprob: -7.884981632232666
    10. ',' → logprob: -8.009982109069824

Token 331: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.044902727007865906
    2. 'if' → logprob: -3.544902801513672
    3. '       ' → logprob: -4.419902801513672
    4. ' return' → logprob: -5.919902801513672
    5. ' if' → logprob: -8.419902801513672
    6. 'res' → logprob: -9.669902801513672
    7. '   ' → logprob: -11.419902801513672
    8. 'ret' → logprob: -11.919902801513672
    9. 'result' → logprob: -12.544902801513672
    10. 'r' → logprob: -13.044902801513672

Token 332: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06196869537234306
    2. ' self' → logprob: -2.8119688034057617
    3. '(self' → logprob: -14.311968803405762
    4. '   ' → logprob: -15.311968803405762
    5. '0' → logprob: -17.311967849731445
    6. '	self' → logprob: -17.311967849731445
    7. ' ' → logprob: -17.561967849731445
    8. '[self' → logprob: -17.686967849731445
    9. '       ' → logprob: -17.811967849731445
    10. '
' → logprob: -18.061967849731445

Token 333: '.find' (ID: 4231)
  Prédit: '.uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -0.5365978479385376
    2. '.find' → logprob: -1.1615978479385376
    3. '.' → logprob: -2.286597728729248
    4. ' .' → logprob: -8.036598205566406
    5. 'uf' → logprob: -8.911598205566406
    6. '.f' → logprob: -10.661598205566406
    7. '.mark' → logprob: -10.786598205566406
    8. 'find' → logprob: -10.786598205566406
    9. '.findall' → logprob: -10.786598205566406
    10. '.nodes' → logprob: -11.161598205566406

Token 334: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.5760095715522766
    2. '(' → logprob: -0.8260095715522766
    3. '(
' → logprob: -9.701009750366211
    4. '(

' → logprob: -12.826009750366211
    5. '(self' → logprob: -13.201009750366211
    6. 'v' → logprob: -13.201009750366211
    7. '((' → logprob: -13.826009750366211
    8. ' (' → logprob: -14.576009750366211
    9. ')' → logprob: -15.076009750366211
    10. '('' → logprob: -16.45100975036621

Token 335: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -13.62500286102295
    3. ')
' → logprob: -13.62500286102295
    4. ')v' → logprob: -15.62500286102295
    5. '())' → logprob: -15.87500286102295
    6. '   ' → logprob: -16.125003814697266
    7. '()' → logprob: -16.250003814697266
    8. '))' → logprob: -16.500003814697266
    9. ')`' → logprob: -16.750003814697266
    10. ')return' → logprob: -17.500003814697266

Token 336: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' Input' (ID: 10090)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.6684435606002808
    2. ' Tree' → logprob: -1.6684435606002808
    3. 'Solution' → logprob: -1.9184435606002808
    4. 'Tree' → logprob: -3.2934436798095703
    5. ' Binary' → logprob: -3.6684436798095703
    6. ' Query' → logprob: -4.16844367980957
    7. 'Binary' → logprob: -4.54344367980957
    8. ' Main' → logprob: -4.66844367980957
    9. ' Solver' → logprob: -4.66844367980957
    10. 'Query' → logprob: -4.79344367980957

Token 338: 'Processor' (ID: 22334)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.34389373660087585
    2. 'Handler' → logprob: -1.7188937664031982
    3. 'Parser' → logprob: -3.3438937664031982
    4. '():' → logprob: -3.7188937664031982
    5. ':' → logprob: -3.8438937664031982
    6. 'Processor' → logprob: -4.843893527984619
    7. 'Tokenizer' → logprob: -5.468893527984619
    8. 'Data' → logprob: -5.468893527984619
    9. 'Stream' → logprob: -5.593893527984619
    10. '():
' → logprob: -6.343893527984619

Token 339: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023698240984231234
    2. ':
' → logprob: -6.1273698806762695
    3. ' :' → logprob: -9.75236988067627
    4. '():' → logprob: -10.00236988067627
    5. '(' → logprob: -10.12736988067627
    6. '<|end|>' → logprob: -11.25236988067627
    7. '):' → logprob: -11.62736988067627
    8. '(object' → logprob: -12.62736988067627
    9. ':def' → logprob: -13.12736988067627
    10. '   ' → logprob: -13.25236988067627

Token 340: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015927962958812714
    2. ' def' → logprob: -4.265927791595459
    3. '    
' → logprob: -7.640927791595459
    4. ':' → logprob: -8.140928268432617
    5. 'def' → logprob: -8.265928268432617
    6. '<|end|>' → logprob: -8.390928268432617
    7. '```' → logprob: -8.640928268432617
    8. '(' → logprob: -9.140928268432617
    9. ' 
' → logprob: -10.265928268432617
    10. ':
' → logprob: -10.390928268432617

Token 341: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0032360595650970936
    2. 'def' (adapté à ' def') → logprob: -5.753236293792725
    3. '   ' → logprob: -9.753235816955566
    4. '	def' → logprob: -15.878235816955566
    5. 'class' → logprob: -17.378236770629883
    6. ' de' → logprob: -17.378236770629883
    7. ' class' → logprob: -17.753236770629883
    8. '```' → logprob: -17.753236770629883
    9. ':def' → logprob: -18.253236770629883
    10. 'de' → logprob: -18.253236770629883

Token 342: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06477396190166473
    2. '__' → logprob: -2.8147740364074707
    3. 'init' → logprob: -6.689774036407471
    4. '_' → logprob: -7.564774036407471
    5. ' init' → logprob: -7.939774036407471
    6. '_init' → logprob: -8.064773559570312
    7. ' _' → logprob: -8.439773559570312
    8. ' def' → logprob: -9.564773559570312
    9. 'def' → logprob: -10.689773559570312
    10. ' process' → logprob: -10.814773559570312

Token 343: 'init' (ID: 3287)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019896593876183033
    2. '__' → logprob: -6.376989841461182
    3. '__(
' → logprob: -8.376989364624023
    4. '__((' → logprob: -10.501989364624023
    5. '(self' → logprob: -10.626989364624023
    6. '(' → logprob: -12.626989364624023
    7. '__('' → logprob: -14.251989364624023
    8. '___' → logprob: -15.001989364624023
    9. '__("' → logprob: -15.001989364624023
    10. '_(' → logprob: -15.001989364624023

Token 345: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.644463479053229e-05
    2. ' self' → logprob: -10.000046730041504
    3. '(self' → logprob: -15.125046730041504
    4. '   ' → logprob: -15.375046730041504
    5. 'n' → logprob: -15.500046730041504
    6. ',' → logprob: -16.750045776367188
    7. ')' → logprob: -16.875045776367188
    8. '
' → logprob: -17.000045776367188
    9. ',self' → logprob: -17.125045776367188
    10. '	self' → logprob: -18.125045776367188

Token 346: '):
' (ID: 1883)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06192050874233246
    2. ' self' → logprob: -2.936920404434204
    3. 'n' → logprob: -5.436920642852783
    4. '   ' → logprob: -6.311920642852783
    5. '(self' → logprob: -7.436920642852783
    6. ' n' → logprob: -8.686920166015625
    7. ' (' → logprob: -11.311920166015625
    8. '(n' → logprob: -11.311920166015625
    9. ',' → logprob: -11.561920166015625
    10. '0' → logprob: -11.686920166015625

Token 348: ' pass' (ID: 1853)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12783405184745789
    2. ' self' → logprob: -2.7528340816497803
    3. 'pass' (adapté à ' pass') → logprob: -3.2528340816497803
    4. ' pass' → logprob: -4.752833843231201
    5. '       ' → logprob: -4.877833843231201
    6. '   ' → logprob: -7.627833843231201
    7. 'import' → logprob: -7.752833843231201
    8. 'def' → logprob: -8.25283432006836
    9. 'n' → logprob: -10.37783432006836
    10. '[]' → logprob: -10.75283432006836

Token 349: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016265559941530228
    2. '
' → logprob: -4.516265392303467
    3. ' def' → logprob: -5.766265392303467
    4. 'def' → logprob: -6.766265392303467
    5. '<|end|>' → logprob: -7.641265392303467
    6. '    
' → logprob: -8.641265869140625
    7. '	def' → logprob: -9.141265869140625
    8. '```' → logprob: -9.516265869140625
    9. '<|end|>' → logprob: -9.891265869140625
    10. ',' → logprob: -12.266265869140625

Token 350: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00018006093159783632
    2. ' def' → logprob: -8.7501802444458
    3. '   ' → logprob: -10.7501802444458
    4. 'import' → logprob: -17.000179290771484
    5. '	def' → logprob: -19.125179290771484
    6. 'de' → logprob: -20.125179290771484
    7. '
' → logprob: -20.750179290771484
    8. 'class' → logprob: -20.750179290771484
    9. 'from' → logprob: -21.250179290771484
    10. 'd' → logprob: -21.375179290771484

Token 352: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.012828404083848
    2. ' process' → logprob: -4.387828350067139
    3. 'read' → logprob: -8.762828826904297
    4. 'parse' → logprob: -8.887828826904297
    5. 'run' → logprob: -11.262828826904297
    6. 'solve' → logprob: -13.387828826904297
    7. 'handle' → logprob: -13.512828826904297
    8. ' read' → logprob: -13.887828826904297
    9. 'proces' → logprob: -13.887828826904297
    10. ' parse' → logprob: -13.887828826904297

Token 353: '_dataset' (ID: 40568)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.14361640810966492
    2. '(self' → logprob: -2.1436164379119873
    3. '_input' → logprob: -4.518616199493408
    4. 'line' → logprob: -5.768616199493408
    5. 'self' → logprob: -6.143616199493408
    6. '_data' → logprob: -9.768616676330566
    7. '(' → logprob: -9.768616676330566
    8. '()' → logprob: -9.893616676330566
    9. '_lines' → logprob: -9.893616676330566
    10. '_self' → logprob: -9.893616676330566

Token 354: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002496587112545967
    2. '(' → logprob: -6.002496719360352
    3. 'self' → logprob: -11.002496719360352
    4. ' (' → logprob: -13.127496719360352
    5. '(s' → logprob: -14.377496719360352
    6. '(
' → logprob: -14.502496719360352
    7. '(sel' → logprob: -14.877496719360352
    8. '()' → logprob: -15.252496719360352
    9. '   ' → logprob: -15.377496719360352
    10. '(Self' → logprob: -16.50249671936035

Token 355: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09447414427995682
    2. '):' → logprob: -2.5944740772247314
    3. 'self' → logprob: -4.7194743156433105
    4. '):
' → logprob: -5.0944743156433105
    5. '   ' → logprob: -8.844473838806152
    6. ' ,' → logprob: -9.594473838806152
    7. '(self' → logprob: -9.844473838806152
    8. '       ' → logprob: -10.469473838806152
    9. ')' → logprob: -10.594473838806152
    10. ',self' → logprob: -10.594473838806152

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005004020873457193
    2. '(self' → logprob: -6.005003929138184
    3. '   ' → logprob: -7.130003929138184
    4. 'self' → logprob: -7.505003929138184
    5. '```' → logprob: -7.505003929138184
    6. '(' → logprob: -8.130003929138184
    7. 'n' → logprob: -9.630003929138184
    8. '()' → logprob: -9.880003929138184
    9. ' self' → logprob: -10.130003929138184
    10. '           ' → logprob: -10.505003929138184

Token 357: ' import' (ID: 1588)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.45370256900787354
    2. 'n' → logprob: -1.0787025690078735
    3. '       ' → logprob: -4.953702449798584
    4. 'import' (adapté à ' import') → logprob: -4.953702449798584
    5. ' import' → logprob: -5.703702449798584
    6. ' lines' → logprob: -5.953702449798584
    7. ' line' → logprob: -6.328702449798584
    8. ' self' → logprob: -7.328702449798584
    9. ' try' → logprob: -7.578702449798584
    10. 'try' → logprob: -7.953702449798584

Token 358: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12693357467651367
    2. ' sys' → logprob: -2.1269335746765137
    3. '=sys' → logprob: -12.251934051513672
    4. '	sys' → logprob: -14.626934051513672
    5. '_sys' → logprob: -15.626934051513672
    6. '(sys' → logprob: -18.126934051513672
    7. 'io' → logprob: -18.626934051513672
    8. 's' → logprob: -18.626934051513672
    9. 'stdin' → logprob: -19.376934051513672
    10. '.sys' → logprob: -19.376934051513672

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03768187761306763
    2. '
' → logprob: -3.412681818008423
    3. '        
' → logprob: -6.037682056427002
    4. 'data' → logprob: -7.662682056427002
    5. ' lines' → logprob: -8.037681579589844
    6. 'input' → logprob: -8.662681579589844
    7. ' line' → logprob: -8.662681579589844
    8. 'line' → logprob: -8.787681579589844
    9. '.readline' → logprob: -9.662681579589844
    10. ',' → logprob: -9.787681579589844

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00449444679543376
    2. '
' → logprob: -6.129494667053223
    3. 'input' → logprob: -7.004494667053223
    4. '        
' → logprob: -7.379494667053223
    5. 'data' → logprob: -8.629494667053223
    6. 'n' → logprob: -8.754494667053223
    7. 'line' → logprob: -9.004494667053223
    8. ' lines' → logprob: -9.629494667053223
    9. '	' → logprob: -10.004494667053223
    10. ' line' → logprob: -10.504494667053223

Token 361: ' for' (ID: 395)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.6767248511314392
    2. '       ' → logprob: -1.426724910736084
    3. 'input' → logprob: -2.051724910736084
    4. ' lines' → logprob: -3.176724910736084
    5. ' data' → logprob: -3.301724910736084
    6. ' input' → logprob: -4.051724910736084
    7. 'lines' → logprob: -4.051724910736084
    8. 'n' → logprob: -5.051724910736084
    9. 'for' (adapté à ' for') → logprob: -6.676724910736084
    10. 'line' → logprob: -7.051724910736084

Token 362: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0015433111693710089
    2. 'line' → logprob: -6.5015435218811035
    3. '	line' → logprob: -10.751543045043945
    4. '_line' → logprob: -12.251543045043945
    5. ' l' → logprob: -12.626543045043945
    6. ' lin' → logprob: -13.376543045043945
    7. ' linen' → logprob: -13.376543045043945
    8. ' ' → logprob: -13.376543045043945
    9. ' sys' → logprob: -13.751543045043945
    10. '=line' → logprob: -13.751543045043945

Token 363: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001278534036828205
    2. 'in' → logprob: -9.000127792358398
    3. ' ' → logprob: -13.625127792358398
    4. ' =' → logprob: -13.750127792358398
    5. 's' → logprob: -14.625127792358398
    6. '        ' → logprob: -15.250127792358398
    7. '_in' → logprob: -15.750127792358398
    8. 'line' → logprob: -15.875127792358398
    9. '	in' → logprob: -15.875127792358398
    10. '[line' → logprob: -15.875127792358398

Token 364: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018150413408875465
    2. ' sys' → logprob: -4.018150329589844
    3. '=sys' → logprob: -15.268150329589844
    4. '(sys' → logprob: -16.018150329589844
    5. '	sys' → logprob: -16.143150329589844
    6. 'iter' → logprob: -19.143150329589844
    7. 'stdin' → logprob: -19.643150329589844
    8. '.sys' → logprob: -19.768150329589844
    9. '_sys' → logprob: -20.643150329589844
    10. 'Sys' → logprob: -20.768150329589844

Token 365: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00013357517309486866
    2. 'stdin' → logprob: -9.250133514404297
    3. '.stdout' → logprob: -11.250133514404297
    4. '.' → logprob: -11.500133514404297
    5. ' stdin' → logprob: -11.875133514404297
    6. '.argv' → logprob: -12.625133514404297
    7. '.readline' → logprob: -13.000133514404297
    8. '(stdin' → logprob: -14.375133514404297
    9. '.std' → logprob: -14.750133514404297
    10. '.stderr' → logprob: -14.875133514404297

Token 366: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4846579432487488
    2. '.readline' → logprob: -0.9846579432487488
    3. '.' → logprob: -5.8596577644348145
    4. '       ' → logprob: -6.2346577644348145
    5. '   ' → logprob: -6.3596577644348145
    6. 'in' → logprob: -6.4846577644348145
    7. ':
' → logprob: -7.1096577644348145
    8. ':' → logprob: -7.6096577644348145
    9. '.rstrip' → logprob: -8.234658241271973
    10. ' readline' → logprob: -8.484658241271973

Token 367: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005831745453178883
    2. ' if' → logprob: -6.255831718444824
    3. '       ' → logprob: -6.630831718444824
    4. ' =' → logprob: -8.130831718444824
    5. ',' → logprob: -8.255831718444824
    6. '```' → logprob: -8.380831718444824
    7. '.rstrip' → logprob: -8.505831718444824
    8. '.strip' → logprob: -8.630831718444824
    9. '<|end|>' → logprob: -8.630831718444824
    10. '            
' → logprob: -8.755831718444824

Token 368: ' if' (ID: 538)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4413127601146698
    2. 'line' → logprob: -1.4413127899169922
    3. '           ' → logprob: -2.191312789916992
    4. ' if' → logprob: -5.441312789916992
    5. ' stripped' → logprob: -6.066312789916992
    6. '               ' → logprob: -7.566312789916992
    7. 'if' (adapté à ' if') → logprob: -8.191312789916992
    8. 'strip' → logprob: -8.566312789916992
    9. 'tokens' → logprob: -8.941312789916992
    10. '=line' → logprob: -9.191312789916992

Token 369: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.053589385002851486
    2. ' line' → logprob: -3.053589344024658
    3. 'not' → logprob: -5.553589344024658
    4. 'line' → logprob: -6.803589344024658
    5. ' ' → logprob: -12.303589820861816
    6. '#line' → logprob: -14.428589820861816
    7. '=line' → logprob: -14.553589820861816
    8. '   ' → logprob: -15.428589820861816
    9. '	line' → logprob: -15.803589820861816
    10. '[line' → logprob: -16.4285888671875

Token 370: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20141352713108063
    2. ' line' → logprob: -1.7014135122299194
    3. '(line' → logprob: -16.201414108276367
    4. '	line' → logprob: -16.576414108276367
    5. '=line' → logprob: -17.326414108276367
    6. '#line' → logprob: -17.451414108276367
    7. '[line' → logprob: -18.701414108276367
    8. ' ' → logprob: -19.076414108276367
    9. 'li' → logprob: -20.076414108276367
    10. 'ine' → logprob: -20.451414108276367

Token 371: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0015586663503199816
    2. '.' → logprob: -6.501558780670166
    3. '.rstrip' → logprob: -10.626558303833008
    4. '.startswith' → logprob: -10.751558303833008
    5. 'strip' → logprob: -12.376558303833008
    6. ' .' → logprob: -12.501558303833008
    7. ':' → logprob: -14.376558303833008
    8. '.readline' → logprob: -14.626558303833008
    9. ' strip' → logprob: -14.751558303833008
    10. '           ' → logprob: -15.126558303833008

Token 372: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.038270529359579086
    2. '():
' → logprob: -3.2882704734802246
    3. '()' → logprob: -8.663270950317383
    4. ':' → logprob: -9.913270950317383
    5. '():
' → logprob: -12.288270950317383
    6. ' ():' → logprob: -14.038270950317383
    7. ':
' → logprob: -14.413270950317383
    8. '():

' → logprob: -15.038270950317383
    9. '()==' → logprob: -15.788270950317383
    10. '(' → logprob: -16.038270950317383

Token 373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.759734732331708e-05
    2. ',' → logprob: -12.750017166137695
    3. '                   ' → logprob: -12.750017166137695
    4. '           ' → logprob: -12.750017166137695
    5. '	           ' → logprob: -13.250017166137695
    6. ' break' → logprob: -13.750017166137695
    7. '                
' → logprob: -13.750017166137695
    8. '<|end|>' → logprob: -14.000017166137695
    9. ':' → logprob: -14.125017166137695
    10. '              ' → logprob: -14.625017166137695

Token 374: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.02448432520031929
    2. '               ' → logprob: -4.524484157562256
    3. ' break' → logprob: -4.524484157562256
    4. 'return' → logprob: -6.024484157562256
    5. '                   ' → logprob: -10.274484634399414
    6. 'continue' (adapté à ' continue') → logprob: -10.274484634399414
    7. ' return' → logprob: -11.899484634399414
    8. '           ' → logprob: -12.024484634399414
    9. '	break' → logprob: -12.774484634399414
    10. '
' → logprob: -13.399484634399414

Token 375: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004061242798343301
    2. '            
' → logprob: -8.000406265258789
    3. ',' → logprob: -10.875406265258789
    4. '       ' → logprob: -11.625406265258789
    5. '          ' → logprob: -11.750406265258789
    6. '               ' → logprob: -11.750406265258789
    7. '<|end|>' → logprob: -11.750406265258789
    8. '```' → logprob: -12.625406265258789
    9. '<|end|>' → logprob: -13.000406265258789
    10. '   ' → logprob: -13.625406265258789

Token 376: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010103991371579468
    2. '       ' → logprob: -10.250101089477539
    3. '            
' → logprob: -10.375101089477539
    4. '```' → logprob: -11.375101089477539
    5. ',' → logprob: -12.125101089477539
    6. '               ' → logprob: -12.125101089477539
    7. '          ' → logprob: -12.500101089477539
    8. '   ' → logprob: -13.375101089477539
    9. '	       ' → logprob: -14.375101089477539
    10. ' for' → logprob: -14.375101089477539

Token 377: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.8066813945770264
    2. 'parts' → logprob: -1.6816813945770264
    3. ' parts' → logprob: -1.6816813945770264
    4. ' n' → logprob: -2.0566813945770264
    5. 'tokens' → logprob: -3.4316813945770264
    6. 'cmd' → logprob: -5.0566816329956055
    7. 'q' → logprob: -5.6816816329956055
    8. ' tokens' → logprob: -5.6816816329956055
    9. '           ' → logprob: -6.1816816329956055
    10. 'data' → logprob: -6.4316816329956055

Token 378: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47972187399864197
    2. '=' → logprob: -0.9797219038009644
    3. ',' → logprob: -5.229722023010254
    4. '=int' → logprob: -8.229722023010254
    5. ' ,' → logprob: -12.604722023010254
    6. ',int' → logprob: -13.604722023010254
    7. ' =
' → logprob: -14.354722023010254
    8. '   ' → logprob: -14.604722023010254
    9. ' ' → logprob: -14.854722023010254
    10. '=

' → logprob: -15.479722023010254

Token 379: ' q' (ID: 2335)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.445037841796875
    2. 'q' → logprob: -1.695037841796875
    3. 'k' → logprob: -2.820037841796875
    4. ' m' → logprob: -3.195037841796875
    5. ' q' → logprob: -3.320037841796875
    6. ' k' → logprob: -4.320037841796875
    7. ' =' → logprob: -4.820037841796875
    8. '*' → logprob: -5.570037841796875
    9. '=' → logprob: -5.570037841796875
    10. 'rest' → logprob: -6.445037841796875

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931657791137695
    2. ' =' → logprob: -0.6931657791137695
    3. ',' → logprob: -11.06816577911377
    4. '=line' → logprob: -13.56816577911377
    5. ' ' → logprob: -14.31816577911377
    6. ')' → logprob: -14.31816577911377
    7. '=int' → logprob: -16.068164825439453
    8. '   ' → logprob: -16.193164825439453
    9. ')=' → logprob: -16.568164825439453
    10. '  ' → logprob: -16.693164825439453

Token 381: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16022443771362305
    2. 'map' → logprob: -1.910224437713623
    3. '(map' → logprob: -16.41022491455078
    4. '	map' → logprob: -16.91022491455078
    5. '[' → logprob: -17.16022491455078
    6. 'list' → logprob: -17.78522491455078
    7. '   ' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.41022491455078
    9. ' line' → logprob: -18.41022491455078
    10. ' list' → logprob: -18.66022491455078

Token 382: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0016517332987859845
    2. '(str' → logprob: -6.501651763916016
    3. 'int' → logprob: -9.001651763916016
    4. '(' → logprob: -11.376651763916016
    5. '(lambda' → logprob: -11.501651763916016
    6. 'str' → logprob: -13.001651763916016
    7. '[int' → logprob: -14.126651763916016
    8. '(line' → logprob: -14.251651763916016
    9. '(list' → logprob: -15.376651763916016
    10. '=int' → logprob: -15.876651763916016

Token 383: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0012379679828882217
    2. '(' → logprob: -7.126237869262695
    3. ')' → logprob: -8.126237869262695
    4. 'line' → logprob: -9.376237869262695
    5. ',line' → logprob: -10.376237869262695
    6. ',' → logprob: -11.876237869262695
    7. '=line' → logprob: -12.001237869262695
    8. ' line' → logprob: -12.751237869262695
    9. '[line' → logprob: -13.251237869262695
    10. '(
' → logprob: -13.501237869262695

Token 384: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.000553151941858232
    2. ' line' → logprob: -7.500553131103516
    3. '(line' → logprob: -16.000553131103516
    4. '=line' → logprob: -17.750553131103516
    5. '	line' → logprob: -18.500553131103516
    6. '#line' → logprob: -19.000553131103516
    7. '[line' → logprob: -19.625553131103516
    8. '           ' → logprob: -19.875553131103516
    9. '   ' → logprob: -20.125553131103516
    10. ',line' → logprob: -20.375553131103516

Token 385: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10077515244483948
    2. '.strip' → logprob: -2.6007752418518066
    3. '.split' → logprob: -3.8507752418518066
    4. '.' → logprob: -8.225774765014648
    5. '()' → logprob: -9.475774765014648
    6. ' .' → logprob: -10.725774765014648
    7. '.readline' → logprob: -12.225774765014648
    8. '()
' → logprob: -12.475774765014648
    9. '.rstrip' → logprob: -12.600774765014648
    10. ')' → logprob: -13.225774765014648

Token 386: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0815509706735611
    2. '()' → logprob: -2.5815510749816895
    3. '('' → logprob: -6.4565510749816895
    4. '())
' → logprob: -7.7065510749816895
    5. '(' → logprob: -8.081550598144531
    6. ')' → logprob: -8.206550598144531
    7. '()
' → logprob: -10.206550598144531
    8. '("' → logprob: -12.456550598144531
    9. '')' → logprob: -13.081550598144531
    10. '()]' → logprob: -13.206550598144531

Token 387: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023238400171976537
    2. '       ' → logprob: -9.000232696533203
    3. ' for' → logprob: -10.375232696533203
    4. '            
' → logprob: -10.750232696533203
    5. '```' → logprob: -11.000232696533203
    6. '<|end|>' → logprob: -11.625232696533203
    7. '               ' → logprob: -11.875232696533203
    8. 'for' → logprob: -12.125232696533203
    9. ' if' → logprob: -12.500232696533203
    10. '   ' → logprob: -12.500232696533203

Token 388: ' if' (ID: 538)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.004772699438035488
    2. 't' → logprob: -6.129772663116455
    3. ' tree' → logprob: -6.629772663116455
    4. 'return' → logprob: -7.754772663116455
    5. '       ' → logprob: -8.254773139953613
    6. 'break' → logprob: -8.629773139953613
    7. 'if' (adapté à ' if') → logprob: -8.629773139953613
    8. 'yield' → logprob: -9.129773139953613
    9. '           ' → logprob: -10.754773139953613
    10. '```' → logprob: -11.004773139953613

Token 389: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011048054322600365
    2. ' n' → logprob: -4.511047840118408
    3. '(n' → logprob: -15.511048316955566
    4. '	n' → logprob: -16.76104736328125
    5. '   ' → logprob: -17.01104736328125
    6. '(' → logprob: -19.01104736328125
    7. '           ' → logprob: -19.51104736328125
    8. '
' → logprob: -20.01104736328125
    9. ' (' → logprob: -20.26104736328125
    10. 'not' → logprob: -20.26104736328125

Token 390: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42943671345710754
    2. '==' → logprob: -1.0544366836547852
    3. '<=' → logprob: -7.804436683654785
    4. ' <=' → logprob: -8.179436683654785
    5. '=' → logprob: -10.804436683654785
    6. ' ' → logprob: -11.429436683654785
    7. '==
' → logprob: -12.304436683654785
    8. '0' → logprob: -13.179436683654785
    9. ')==' → logprob: -13.179436683654785
    10. '===' → logprob: -13.304436683654785

Token 391: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -20.12502098083496
    4. '  ' → logprob: -20.75002098083496
    5. '
' → logprob: -21.12502098083496
    6. ' ' → logprob: -21.50002098083496
    7. '   ' → logprob: -21.75002098083496
    8. '

' → logprob: -22.06252098083496
    9. '=' → logprob: -22.31252098083496
    10. '０' → logprob: -22.37502098083496

Token 392: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۰' → logprob: -18.062503814697266
    4. '
' → logprob: -18.875003814697266
    5. '

' → logprob: -19.000003814697266
    6. '-' → logprob: -19.000003814697266
    7. '０' → logprob: -19.312503814697266
    8. 'q' → logprob: -19.375003814697266
    9. '```' → logprob: -19.562503814697266
    10. '০' → logprob: -19.562503814697266

Token 393: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06781574338674545
    2. ':
' → logprob: -2.8178157806396484
    3. ' and' → logprob: -5.192815780639648
    4. 'and' → logprob: -9.067815780639648
    5. '           ' → logprob: -9.692815780639648
    6. ':return' → logprob: -9.817815780639648
    7. '   ' → logprob: -10.567815780639648
    8. '               ' → logprob: -11.317815780639648
    9. ' :' → logprob: -13.442815780639648
    10. ':
' → logprob: -13.942815780639648

Token 394: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0015023599844425917
    2. ' q' → logprob: -6.501502513885498
    3. '	q' → logprob: -17.251502990722656
    4. '   ' → logprob: -17.626502990722656
    5. '  ' → logprob: -17.876502990722656
    6. ' ' → logprob: -19.251502990722656
    7. '    ' → logprob: -20.376502990722656
    8. '     ' → logprob: -21.876502990722656
    9. '_q' → logprob: -22.876502990722656
    10. ',q' → logprob: -23.501502990722656

Token 395: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10060721635818481
    2. ' ==' → logprob: -2.35060715675354
    3. '=' → logprob: -8.100606918334961
    4. '0' → logprob: -9.975606918334961
    5. ')==' → logprob: -11.100606918334961
    6. '<|end|>' → logprob: -11.475606918334961
    7. ' ' → logprob: -11.725606918334961
    8. ']==' → logprob: -12.475606918334961
    9. '===' → logprob: -12.600606918334961
    10. ' =' → logprob: -12.975606918334961

Token 396: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '۰' → logprob: -19.37502098083496
    4. '   ' → logprob: -20.37502098083496
    5. '  ' → logprob: -20.50002098083496
    6. ' ' → logprob: -21.18752098083496
    7. '
' → logprob: -21.37502098083496
    8. '০' → logprob: -21.87502098083496
    9. '<|end|>' → logprob: -21.87502098083496
    10. '=' → logprob: -22.18752098083496

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -20.125001907348633
    4. '০' → logprob: -21.375001907348633
    5. '०' → logprob: -22.000001907348633
    6. '```' → logprob: -22.312501907348633
    7. '<|end|>' → logprob: -22.375001907348633
    8. 'o' → logprob: -22.437501907348633
    9. '<|end|>' → logprob: -22.812501907348633
    10. '=' → logprob: -22.875001907348633

Token 398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3590615689754486
    2. ':
' → logprob: -1.234061598777771
    3. '               ' → logprob: -4.6090617179870605
    4. '           ' → logprob: -8.109061241149902
    5. ':return' → logprob: -8.234061241149902
    6. ':
' → logprob: -11.234061241149902
    7. '   ' → logprob: -11.609061241149902
    8. '                   ' → logprob: -12.359061241149902
    9. '              ' → logprob: -13.734061241149902
    10. '       ' → logprob: -13.734061241149902

Token 399: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.363617962459102e-05
    2. '                   ' → logprob: -10.000083923339844
    3. '           ' → logprob: -10.750083923339844
    4. '   ' → logprob: -12.000083923339844
    5. 'break' → logprob: -13.125083923339844
    6. ' break' → logprob: -13.375083923339844
    7. '              ' → logprob: -13.625083923339844
    8. 'return' → logprob: -13.625083923339844
    9. '	           ' → logprob: -13.875083923339844
    10. '                
' → logprob: -14.000083923339844

Token 400: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1437564194202423
    2. 'return' → logprob: -2.14375638961792
    3. '               ' → logprob: -4.39375638961792
    4. ' break' → logprob: -5.64375638961792
    5. '                   ' → logprob: -7.26875638961792
    6. ' return' → logprob: -9.893756866455078
    7. '	break' → logprob: -10.268756866455078
    8. '           ' → logprob: -12.268756866455078
    9. '                       ' → logprob: -13.268756866455078
    10. '   ' → logprob: -13.518756866455078

Token 401: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027136921416968107
    2. '<|end|>' → logprob: -6.627713680267334
    3. '            
' → logprob: -7.502713680267334
    4. '
' → logprob: -7.627713680267334
    5. '       ' → logprob: -8.752714157104492
    6. '          ' → logprob: -10.252714157104492
    7. '```' → logprob: -10.377714157104492
    8. ',' → logprob: -10.627714157104492
    9. '    
' → logprob: -11.002714157104492
    10. '<|end|>' → logprob: -11.252714157104492

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017136165406554937
    2. '       ' → logprob: -6.626713752746582
    3. '
' → logprob: -8.876713752746582
    4. '            
' → logprob: -9.126713752746582
    5. '```' → logprob: -9.376713752746582
    6. '        
' → logprob: -11.001713752746582
    7. '          ' → logprob: -11.626713752746582
    8. '<|end|>' → logprob: -12.126713752746582
    9. ',' → logprob: -12.626713752746582
    10. '               ' → logprob: -13.126713752746582

Token 403: ' yield' (ID: 14376)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.6548418402671814
    2. 'tree' → logprob: -0.7798418402671814
    3. '           ' → logprob: -3.904841899871826
    4. 't' → logprob: -7.154841899871826
    5. ' t' → logprob: -7.529841899871826
    6. '
' → logprob: -8.154841423034668
    7. '	tree' → logprob: -9.154841423034668
    8. '       ' → logprob: -9.904841423034668
    9. '            
' → logprob: -10.154841423034668
    10. '```' → logprob: -11.279841423034668

Token 404: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.028986375778913498
    2. '(n' → logprob: -4.15398645401001
    3. ' n' → logprob: -5.02898645401001
    4. 'Tree' → logprob: -5.40398645401001
    5. ' (' → logprob: -6.77898645401001
    6. ' Tree' → logprob: -8.028985977172852
    7. '(Tree' → logprob: -8.028985977172852
    8. '(' → logprob: -11.403985977172852
    9. '(T' → logprob: -11.778985977172852
    10. '           ' → logprob: -11.903985977172852

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07246004790067673
    2. ',q' → logprob: -2.6974599361419678
    3. ' ,' → logprob: -6.572460174560547
    4. '<|end|>' → logprob: -6.947460174560547
    5. '<|end|>' → logprob: -9.822460174560547
    6. ',
' → logprob: -10.322460174560547
    7. ',n' → logprob: -10.447460174560547
    8. 'q' → logprob: -11.447460174560547
    9. ',Q' → logprob: -11.822460174560547
    10. '		' → logprob: -12.947460174560547

Token 406: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0067154900170862675
    2. ' q' → logprob: -5.006715297698975
    3. '	q' → logprob: -15.881715774536133
    4. '<|end|>' → logprob: -19.131715774536133
    5. 'qml' → logprob: -19.256715774536133
    6. '   ' → logprob: -19.506715774536133
    7. '$q' → logprob: -19.756715774536133
    8. ',q' → logprob: -19.756715774536133
    9. ' ' → logprob: -19.756715774536133
    10. '[q' → logprob: -20.006715774536133

Token 407: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2762615382671356
    2. '       ' → logprob: -2.276261568069458
    3. 'def' → logprob: -3.151261568069458
    4. ' for' → logprob: -4.026261329650879
    5. '```' → logprob: -4.026261329650879
    6. '<|end|>' → logprob: -4.276261329650879
    7. '           ' → logprob: -4.776261329650879
    8. 'for' → logprob: -4.901261329650879
    9. '.' → logprob: -5.401261329650879
    10. 'class' → logprob: -5.401261329650879

Token 409: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001061390619724989
    2. ' def' → logprob: -7.12606143951416
    3. '   ' → logprob: -8.37606143951416
    4. 'for' → logprob: -10.75106143951416
    5. 'tree' → logprob: -13.12606143951416
    6. '```' → logprob: -13.50106143951416
    7. '
' → logprob: -14.50106143951416
    8. ' for' → logprob: -14.87606143951416
    9. ' ' → logprob: -15.62606143951416
    10. '    
' → logprob: -15.62606143951416

Token 410: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.2590162754058838
    2. 'read' → logprob: -1.5090162754058838
    3. ' process' → logprob: -5.509016036987305
    4. 'parse' → logprob: -6.134016036987305
    5. ' read' → logprob: -7.634016036987305
    6. '__' → logprob: -8.759016036987305
    7. 'generate' → logprob: -9.259016036987305
    8. 'get' → logprob: -11.009016036987305
    9. 'solve' → logprob: -11.134016036987305
    10. 'input' → logprob: -11.384016036987305

Token 411: '_tree' (ID: 27118)
  Prédit: '_query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_query' → logprob: -0.3003028333187103
    2. '_queries' → logprob: -1.5503028631210327
    3. '   ' → logprob: -4.425302982330322
    4. '_operation' → logprob: -4.550302982330322
    5. '_line' → logprob: -4.800302982330322
    6. '_command' → logprob: -4.925302982330322
    7. '_commands' → logprob: -5.675302982330322
    8. '_operations' → logprob: -6.050302982330322
    9. '_data' → logprob: -7.175302982330322
    10. 'query' → logprob: -7.300302982330322

Token 412: '_par' (ID: 31329)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.790129555156454e-05
    2. 'self' → logprob: -10.250067710876465
    3. '(' → logprob: -11.375067710876465
    4. '   ' → logprob: -11.375067710876465
    5. '       ' → logprob: -11.750067710876465
    6. '(
' → logprob: -14.375067710876465
    7. ' (' → logprob: -14.875067710876465
    8. '_line' → logprob: -15.875067710876465
    9. 'def' → logprob: -16.00006866455078
    10. 'line' → logprob: -16.62506866455078

Token 413: 'ents' (ID: 1094)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2025589495897293
    2. 'ents' → logprob: -1.702558994293213
    3. 't' → logprob: -7.577558994293213
    4. 'ams' → logprob: -7.952558994293213
    5. 'ts' → logprob: -8.452558517456055
    6. 'edges' → logprob: -10.577558517456055
    7. 'am' → logprob: -11.327558517456055
    8. 'e' → logprob: -11.452558517456055
    9. '```' → logprob: -11.827558517456055
    10. '   ' → logprob: -12.952558517456055

Token 414: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000577696890104562
    2. '(' → logprob: -8.000577926635742
    3. 'self' → logprob: -9.000577926635742
    4. '   ' → logprob: -9.375577926635742
    5. ' (' → logprob: -10.875577926635742
    6. '       ' → logprob: -11.750577926635742
    7. '(
' → logprob: -12.875577926635742
    8. 'def' → logprob: -13.375577926635742
    9. ' self' → logprob: -14.375577926635742
    10. '(s' → logprob: -14.750577926635742

Token 415: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 416: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2574344873428345
    2. ' n' → logprob: -2.007434368133545
    3. 'self' → logprob: -2.507434368133545
    4. ' self' → logprob: -4.632434368133545
    5. ')' → logprob: -7.007434368133545
    6. ')n' → logprob: -7.882434368133545
    7. 'parent' → logprob: -10.382434844970703
    8. '):' → logprob: -11.507434844970703
    9. ' )' → logprob: -11.507434844970703
    10. '),' → logprob: -11.507434844970703

Token 417: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18739299476146698
    2. '):' → logprob: -1.8123929500579834
    3. ',' → logprob: -5.0623931884765625
    4. '   ' → logprob: -7.6873931884765625
    5. '):
' → logprob: -7.6873931884765625
    6. '       ' → logprob: -8.187393188476562
    7. ' ):' → logprob: -10.562393188476562
    8. ' ):
' → logprob: -10.562393188476562
    9. ')' → logprob: -10.812393188476562
    10. 'self' → logprob: -12.062393188476562

Token 418: ' input' (ID: 3422)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.29359403252601624
    2. ' parents' → logprob: -2.0435941219329834
    3. 'lines' → logprob: -3.4185941219329834
    4. 'q' → logprob: -4.043593883514404
    5. 'parent' → logprob: -4.043593883514404
    6. 'sys' → logprob: -4.543593883514404
    7. ' lines' → logprob: -4.668593883514404
    8. 'input' → logprob: -5.043593883514404
    9. ' sys' → logprob: -5.043593883514404
    10. ')' → logprob: -5.918593883514404

Token 419: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8096266388893127
    2. '_lines' → logprob: -0.8096266388893127
    3. '):' → logprob: -3.434626579284668
    4. '=sys' → logprob: -3.934626579284668
    5. '=' → logprob: -4.059626579284668
    6. '_data' → logprob: -4.684626579284668
    7. '()):
' → logprob: -4.684626579284668
    8. 's' → logprob: -5.059626579284668
    9. ')' → logprob: -5.434626579284668
    10. '):
' → logprob: -5.809626579284668

Token 420: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2829417288303375
    2. '):
' → logprob: -1.6579416990280151
    3. '):' → logprob: -2.9079418182373047
    4. '       ' → logprob: -7.282941818237305
    5. '   ' → logprob: -8.282941818237305
    6. 'self' → logprob: -8.282941818237305
    7. '):
' → logprob: -9.907941818237305
    8. ' ,' → logprob: -10.407941818237305
    9. ',
' → logprob: -11.532941818237305
    10. ')' → logprob: -11.907941818237305

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003036536043509841
    2. '(self' → logprob: -7.0030364990234375
    3. 'self' → logprob: -7.2530364990234375
    4. ',' → logprob: -7.6280364990234375
    5. ' for' → logprob: -8.003036499023438
    6. '(' → logprob: -8.753036499023438
    7. '   ' → logprob: -9.003036499023438
    8. 'for' → logprob: -9.253036499023438
    9. ':' → logprob: -10.128036499023438
    10. ' self' → logprob: -10.253036499023438

Token 422: ' parents' (ID: 8783)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7763797044754028
    2. 'parents' (adapté à ' parents') → logprob: -1.0263797044754028
    3. ' parents' → logprob: -1.9013797044754028
    4. 'tree' → logprob: -4.526379585266113
    5. ' tree' → logprob: -4.901379585266113
    6. 'nodes' → logprob: -5.526379585266113
    7. 'parent' → logprob: -5.651379585266113
    8. 'return' → logprob: -6.526379585266113
    9. ' edges' → logprob: -6.901379585266113
    10. ' parent' → logprob: -7.026379585266113

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740830957889557
    2. ' =' → logprob: -0.9740830659866333
    3. '=[]' → logprob: -12.224082946777344
    4. '=[]
' → logprob: -14.474082946777344
    5. ',' → logprob: -15.474082946777344
    6. '   ' → logprob: -16.224082946777344
    7. ' ' → logprob: -16.224082946777344
    8. ' =[' → logprob: -17.099082946777344
    9. '[]' → logprob: -17.224082946777344
    10. '=list' → logprob: -17.474082946777344

Token 424: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3743536472320557
    2. 'list' → logprob: -1.3743536472320557
    3. '[]
' → logprob: -1.8743536472320557
    4. '[input' → logprob: -1.8743536472320557
    5. '[next' → logprob: -2.1243536472320557
    6. '[list' → logprob: -3.2493536472320557
    7. '[' → logprob: -3.8743536472320557
    8. 'next' → logprob: -5.499353408813477
    9. 'input' → logprob: -6.624353408813477
    10. ' []' → logprob: -7.124353408813477

Token 425: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28999394178390503
    2. 'for' → logprob: -1.7899940013885498
    3. '       ' → logprob: -2.66499400138855
    4. '
' → logprob: -5.414993762969971
    5. ' =' → logprob: -5.414993762969971
    6. '=' → logprob: -5.914993762969971
    7. '   ' → logprob: -7.039993762969971
    8. ',' → logprob: -7.539993762969971
    9. '	for' → logprob: -7.539993762969971
    10. '        
' → logprob: -8.164994239807129

Token 426: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014270813204348087
    2. ' for' → logprob: -4.264270782470703
    3. '       ' → logprob: -9.389270782470703
    4. 'count' → logprob: -11.014270782470703
    5. '
' → logprob: -12.764270782470703
    6. '   ' → logprob: -13.389270782470703
    7. '	for' → logprob: -13.764270782470703
    8. 'next' → logprob: -14.514270782470703
    9. 'while' → logprob: -15.389270782470703
    10. 'idx' → logprob: -15.389270782470703

Token 427: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13035398721694946
    2. '_i' → logprob: -2.3803539276123047
    3. '_line' → logprob: -3.6303539276123047
    4. 'i' → logprob: -6.755353927612305
    5. '_parent' → logprob: -7.005353927612305
    6. '_input' → logprob: -7.505353927612305
    7. ' _' → logprob: -8.505353927612305
    8. '_index' → logprob: -8.880353927612305
    9. '_idx' → logprob: -9.755353927612305
    10. '_p' → logprob: -10.005353927612305

Token 428: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028085719794034958
    2. 'input' → logprob: -4.153085708618164
    3. ' range' → logprob: -4.528085708618164
    4. '_' → logprob: -7.653085708618164
    5. 'in' → logprob: -8.278085708618164
    6. '_range' → logprob: -8.778085708618164
    7. ' input' → logprob: -9.028085708618164
    8. ' in' → logprob: -9.153085708618164
    9. '_input' → logprob: -10.153085708618164
    10. '	range' → logprob: -12.403085708618164

Token 429: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20157812535762787
    2. 'input' → logprob: -1.701578140258789
    3. ' range' → logprob: -8.826578140258789
    4. ' input' → logprob: -11.576578140258789
    5. 'put' → logprob: -13.701578140258789
    6. '   ' → logprob: -13.826578140258789
    7. '	range' → logprob: -14.076578140258789
    8. '(range' → logprob: -14.451578140258789
    9. 'rang' → logprob: -14.826578140258789
    10. '_range' → logprob: -14.951578140258789

Token 430: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002998312993440777
    2. 'n' → logprob: -8.125299453735352
    3. '(' → logprob: -12.750299453735352
    4. ' n' → logprob: -14.500299453735352
    5. '	n' → logprob: -15.375299453735352
    6. '_n' → logprob: -17.00029945373535
    7. ',n' → logprob: -18.50029945373535
    8. '(_' → logprob: -18.62529945373535
    9. ')n' → logprob: -18.75029945373535
    10. '(
' → logprob: -18.87529945373535

Token 431: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28126490116119385
    2. '-' → logprob: -1.4062649011611938
    3. '       ' → logprob: -10.656265258789062
    4. '   ' → logprob: -10.781265258789062
    5. '):
' → logprob: -11.031265258789062
    6. ' ' → logprob: -11.156265258789062
    7. '
' → logprob: -11.406265258789062
    8. '           ' → logprob: -11.531265258789062
    9. ')' → logprob: -11.906265258789062
    10. '1' → logprob: -12.656265258789062

Token 432: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026336227892898023
    2. ' ' → logprob: -8.250263214111328
    3. ')' → logprob: -14.000263214111328
    4. '   ' → logprob: -14.125263214111328
    5. '2' → logprob: -15.125263214111328
    6. '0' → logprob: -16.875263214111328
    7. '       ' → logprob: -16.875263214111328
    8. '
' → logprob: -16.875263214111328
    9. '           ' → logprob: -17.500263214111328
    10. '  ' → logprob: -18.500263214111328

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. ')' → logprob: -16.250011444091797
    4. '2' → logprob: -16.500011444091797
    5. '0' → logprob: -16.875011444091797
    6. '   ' → logprob: -17.250011444091797
    7. '
' → logprob: -17.937511444091797
    8. '<|end|>' → logprob: -18.125011444091797
    9. '```' → logprob: -18.187511444091797
    10. '১' → logprob: -19.062511444091797

Token 434: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006997389253228903
    2. '):' → logprob: -5.006997585296631
    3. ')' → logprob: -9.756997108459473
    4. '       ' → logprob: -9.756997108459473
    5. ',' → logprob: -10.256997108459473
    6. ' ):
' → logprob: -10.256997108459473
    7. '):
' → logprob: -10.256997108459473
    8. ':
' → logprob: -10.506997108459473
    9. '           ' → logprob: -10.881997108459473
    10. '   ' → logprob: -12.381997108459473

Token 435: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022730885073542595
    2. ' line' → logprob: -3.897730827331543
    3. 'line' → logprob: -7.522730827331543
    4. ' parents' → logprob: -7.897730827331543
    5. ' lines' → logprob: -7.897730827331543
    6. ',' → logprob: -8.522730827331543
    7. ' input' → logprob: -9.397730827331543
    8. '   ' → logprob: -9.397730827331543
    9. 'parents' → logprob: -9.522730827331543
    10. '	       ' → logprob: -9.647730827331543

Token 436: ' pi' (ID: 6404)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.8627590537071228
    2. 'p' → logprob: -1.1127591133117676
    3. 'parent' → logprob: -2.3627591133117676
    4. ' parents' → logprob: -2.6127591133117676
    5. ' p' → logprob: -3.7377591133117676
    6. '           ' → logprob: -4.112759113311768
    7. ' line' → logprob: -4.112759113311768
    8. 'line' → logprob: -4.487759113311768
    9. ' parent' → logprob: -5.112759113311768
    10. 'idx' → logprob: -5.487759113311768

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10266650468111038
    2. '=' → logprob: -2.3526666164398193
    3. '_line' → logprob: -6.72766637802124
    4. '=line' → logprob: -7.60266637802124
    5. 'ne' → logprob: -8.102666854858398
    6. '=int' → logprob: -8.602666854858398
    7. 'x' → logprob: -8.977666854858398
    8. 'nt' → logprob: -9.352666854858398
    9. 'line' → logprob: -10.477666854858398
    10. 'n' → logprob: -10.977666854858398

Token 438: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08528311550617218
    2. 'next' → logprob: -2.585283041000366
    3. ' int' → logprob: -5.335283279418945
    4. ' next' → logprob: -6.585283279418945
    5. 'input' → logprob: -8.710283279418945
    6. ' input' → logprob: -11.960283279418945
    7. '   ' → logprob: -13.210283279418945
    8. '<int' → logprob: -15.960283279418945
    9. '    ' → logprob: -16.210283279418945
    10. '
' → logprob: -16.335283279418945

Token 439: '(next' (ID: 28757)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2520497143268585
    2. '(next' → logprob: -1.5020496845245361
    3. 'input' → logprob: -9.752049446105957
    4. 'next' → logprob: -10.127049446105957
    5. '(' → logprob: -10.877049446105957
    6. '((' → logprob: -13.252049446105957
    7. ' next' → logprob: -14.627049446105957
    8. '(line' → logprob: -15.002049446105957
    9. ' input' → logprob: -15.377049446105957
    10. '(
' → logprob: -15.877049446105957

Token 440: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001932205050252378
    2. 'input' → logprob: -6.251932144165039
    3. ' input' → logprob: -13.251932144165039
    4. ')' → logprob: -14.126932144165039
    5. '(' → logprob: -14.626932144165039
    6. ')(' → logprob: -15.376932144165039
    7. ' (' → logprob: -15.876932144165039
    8. ',input' → logprob: -16.50193214416504
    9. '=input' → logprob: -16.62693214416504
    10. '(
' → logprob: -17.25193214416504

Token 441: '_lines' (ID: 42980)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01808321662247181
    2. 'input' → logprob: -4.893083095550537
    3. 'lines' → logprob: -5.018083095550537
    4. '_lines' → logprob: -5.643083095550537
    5. 'line' → logprob: -9.018083572387695
    6. '_line' → logprob: -10.268083572387695
    7. 'Lines' → logprob: -10.643083572387695
    8. '(lines' → logprob: -10.768083572387695
    9. '=input' → logprob: -11.268083572387695
    10. '_input' → logprob: -11.518083572387695

Token 442: '))
' (ID: 2210)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5916251540184021
    2. '())' → logprob: -0.9666251540184021
    3. '))' → logprob: -3.341625213623047
    4. ')' → logprob: -3.841625213623047
    5. '()))
' → logprob: -5.091625213623047
    6. '()).' → logprob: -6.466625213623047
    7. '()' → logprob: -7.466625213623047
    8. ').' → logprob: -7.716625213623047
    9. '().' → logprob: -8.091625213623047
    10. '())
' → logprob: -8.341625213623047

Token 443: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003920655872207135
    2. ')' → logprob: -9.125391960144043
    3. ',' → logprob: -9.250391960144043
    4. '       ' → logprob: -10.375391960144043
    5. '		' → logprob: -10.625391960144043
    6. '<|end|>' → logprob: -10.625391960144043
    7. '               ' → logprob: -10.750391960144043
    8. '	       ' → logprob: -11.000391960144043
    9. 'parents' → logprob: -11.375391960144043
    10. '.' → logprob: -11.500391960144043

Token 444: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' (adapté à ' parents') → logprob: -0.4206465780735016
    2. '           ' → logprob: -1.2956465482711792
    3. ' parents' → logprob: -2.6706466674804688
    4. '.parents' → logprob: -8.170646667480469
    5. '   ' → logprob: -9.670646667480469
    6. 'parent' → logprob: -9.920646667480469
    7. '       ' → logprob: -11.170646667480469
    8. '               ' → logprob: -11.545646667480469
    9. 'par' → logprob: -12.170646667480469
    10. ')' → logprob: -12.170646667480469

Token 445: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0052912733517587185
    2. '.' → logprob: -5.25529146194458
    3. ' .' → logprob: -10.630290985107422
    4. 'append' → logprob: -11.005290985107422
    5. '           ' → logprob: -11.255290985107422
    6. '.app' → logprob: -13.880290985107422
    7. '.ap' → logprob: -14.130290985107422
    8. '       ' → logprob: -14.880290985107422
    9. '.p' → logprob: -15.130290985107422
    10. '.extend' → logprob: -15.255290985107422

Token 446: '(pi' (ID: 128494)
  Prédit: '(pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pi' → logprob: -0.029777921736240387
    2. 'pi' → logprob: -3.529778003692627
    3. ' pi' → logprob: -10.529777526855469
    4. '/pi' → logprob: -14.779777526855469
    5. '.pi' → logprob: -16.15477752685547
    6. '_pi' → logprob: -16.65477752685547
    7. '(p' → logprob: -16.90477752685547
    8. '*pi' → logprob: -17.15477752685547
    9. 'Pi' → logprob: -17.90477752685547
    10. '(' → logprob: -18.27977752685547

Token 447: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ')
' → logprob: -9.375086784362793
    3. ' )' → logprob: -13.375086784362793
    4. ')return' → logprob: -15.000086784362793
    5. '<|end|>' → logprob: -16.87508773803711
    6. '       ' → logprob: -17.00008773803711
    7. ')

' → logprob: -17.12508773803711
    8. '),' → logprob: -17.62508773803711
    9. '
' → logprob: -17.87508773803711
    10. ')
' → logprob: -18.00008773803711

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002863961970433593
    2. '           ' → logprob: -6.502863883972168
    3. '
' → logprob: -7.752863883972168
    4. ' return' → logprob: -7.752863883972168
    5. 'return' → logprob: -7.877863883972168
    6. '   ' → logprob: -9.877863883972168
    7. ')' → logprob: -11.002863883972168
    8. '<|end|>' → logprob: -11.002863883972168
    9. ',' → logprob: -12.377863883972168
    10. ' ' → logprob: -12.502863883972168

Token 449: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.37253648042678833
    2. ' return' → logprob: -1.3725364208221436
    3. '       ' → logprob: -2.8725364208221436
    4. '           ' → logprob: -7.872536659240723
    5. '   ' → logprob: -8.247536659240723
    6. '	return' → logprob: -9.372536659240723
    7. 'yield' → logprob: -9.372536659240723
    8. '
' → logprob: -9.747536659240723
    9. ' for' → logprob: -10.122536659240723
    10. ' yield' → logprob: -10.497536659240723

Token 450: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.006721876095980406
    2. ' parents' → logprob: -5.0067219734191895
    3. 'parent' → logprob: -12.756721496582031
    4. 'par' → logprob: -13.131721496582031
    5. '[' → logprob: -14.256721496582031
    6. '.parents' → logprob: -14.381721496582031
    7. 'paren' → logprob: -16.00672149658203
    8. 'p' → logprob: -16.25672149658203
    9. '   ' → logprob: -17.13172149658203
    10. 'Parents' → logprob: -17.50672149658203

Token 451: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17583292722702026
    2. '<|end|>' → logprob: -1.925832986831665
    3. 'def' → logprob: -4.925832748413086
    4. ' def' → logprob: -5.800832748413086
    5. '<|end|>' → logprob: -5.800832748413086
    6. '
' → logprob: -7.050832748413086
    7. '    
' → logprob: -8.300832748413086
    8. ' ' → logprob: -8.550832748413086
    9. 'class' → logprob: -8.800832748413086
    10. '       ' → logprob: -9.300832748413086

Token 453: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001801801408873871
    2. ' def' → logprob: -9.1251802444458
    3. '   ' → logprob: -9.6251802444458
    4. 'for' → logprob: -12.5001802444458
    5. 'class' → logprob: -14.8751802444458
    6. ' ' → logprob: -15.2501802444458
    7. '
' → logprob: -15.5001802444458
    8. '#' → logprob: -16.000179290771484
    9. '	def' → logprob: -16.125179290771484
    10. 'return' → logprob: -16.250179290771484

Token 454: ' read' (ID: 1729)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.7201406359672546
    2. 'read' → logprob: -0.8451406359672546
    3. ' process' → logprob: -2.7201406955718994
    4. ' read' → logprob: -4.84514045715332
    5. 'parse' → logprob: -5.47014045715332
    6. 'generate' → logprob: -6.34514045715332
    7. 'input' → logprob: -7.09514045715332
    8. 'mark' → logprob: -7.59514045715332
    9. 'get' → logprob: -8.09514045715332
    10. ' input' → logprob: -8.22014045715332

Token 455: '_operations' (ID: 148404)
  Prédit: '_queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_queries' → logprob: -1.0858718156814575
    2. '_query' → logprob: -1.4608718156814575
    3. '_lines' → logprob: -2.210871696472168
    4. '_input' → logprob: -2.335871696472168
    5. 'input' → logprob: -2.710871696472168
    6. '_line' → logprob: -3.335871696472168
    7. '_commands' → logprob: -3.460871696472168
    8. 'query' → logprob: -3.585871696472168
    9. 'lines' → logprob: -4.210871696472168
    10. 'line' → logprob: -4.835871696472168

Token 456: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018514160765334964
    2. '(' → logprob: -6.376851558685303
    3. 'self' → logprob: -9.001851081848145
    4. '   ' → logprob: -11.001851081848145
    5. ' (' → logprob: -12.626851081848145
    6. '(
' → logprob: -12.626851081848145
    7. 'def' → logprob: -14.376851081848145
    8. '       ' → logprob: -14.501851081848145
    9. '(s' → logprob: -14.876851081848145
    10. ' self' → logprob: -15.501851081848145

Token 457: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00029947367147542536
    2. '(' → logprob: -9.125299453735352
    3. 'self' → logprob: -9.625299453735352
    4. ',' → logprob: -10.250299453735352
    5. '_lines' → logprob: -10.375299453735352
    6. '   ' → logprob: -11.000299453735352
    7. ')' → logprob: -11.250299453735352
    8. ')(' → logprob: -11.375299453735352
    9. ' (' → logprob: -11.875299453735352
    10. '       ' → logprob: -13.000299453735352

Token 458: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7623078227043152
    2. 'self' → logprob: -1.01230788230896
    3. ' n' → logprob: -2.01230788230896
    4. ' self' → logprob: -3.38730788230896
    5. 'q' → logprob: -7.012307643890381
    6. '   ' → logprob: -7.512307643890381
    7. 'input' → logprob: -7.887307643890381
    8. ' q' → logprob: -8.137308120727539
    9. '       ' → logprob: -8.887308120727539
    10. ' input' → logprob: -9.012308120727539

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18681353330612183
    2. '):
' → logprob: -1.8118135929107666
    3. '):' → logprob: -5.3118133544921875
    4. '       ' → logprob: -6.8118133544921875
    5. ',input' → logprob: -7.9368133544921875
    6. '   ' → logprob: -8.436813354492188
    7. 'self' → logprob: -8.936813354492188
    8. '_lines' → logprob: -9.561813354492188
    9. ' ,' → logprob: -10.061813354492188
    10. '):
' → logprob: -10.311813354492188

Token 460: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02352299727499485
    2. ' input' → logprob: -3.7735230922698975
    3. 'self' → logprob: -8.273523330688477
    4. '   ' → logprob: -11.398523330688477
    5. ' self' → logprob: -12.023523330688477
    6. '       ' → logprob: -14.148523330688477
    7. '	input' → logprob: -14.148523330688477
    8. ',input' → logprob: -14.398523330688477
    9. '    ' → logprob: -14.773523330688477
    10. '_input' → logprob: -14.898523330688477

Token 461: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.896309739408025e-07
    2. '_line' → logprob: -14.875000953674316
    3. ')_' → logprob: -15.875000953674316
    4. 'lines' → logprob: -16.0
    5. '_lin' → logprob: -17.375
    6. 's' → logprob: -17.875
    7. '_LINES' → logprob: -18.25
    8. '_strings' → logprob: -18.375
    9. ' _' → logprob: -18.375
    10. ')' → logprob: -18.375

Token 462: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6210675239562988
    2. '):
' → logprob: -0.8710675239562988
    3. '       ' → logprob: -3.371067523956299
    4. ':' → logprob: -4.996067523956299
    5. '():
' → logprob: -7.121067523956299
    6. '():' → logprob: -7.496067523956299
    7. '(self' → logprob: -7.746067523956299
    8. ':
' → logprob: -7.871067523956299
    9. '   ' → logprob: -7.996067523956299
    10. '):
' → logprob: -8.62106704711914

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007000347133725882
    2. ' for' → logprob: -5.25700044631958
    3. 'for' → logprob: -6.38200044631958
    4. '   ' → logprob: -10.006999969482422
    5. '           ' → logprob: -11.381999969482422
    6. '      ' → logprob: -13.131999969482422
    7. '```' → logprob: -13.131999969482422
    8. ',' → logprob: -13.256999969482422
    9. '     ' → logprob: -13.381999969482422
    10. '        
' → logprob: -13.506999969482422

Token 464: ' ops' (ID: 26973)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1483292281627655
    2. 'ops' (adapté à ' ops') → logprob: -2.398329257965088
    3. '       ' → logprob: -3.523329257965088
    4. 'operations' → logprob: -4.148329257965088
    5. ' for' → logprob: -6.523329257965088
    6. ' ops' → logprob: -8.64832878112793
    7. '_ops' → logprob: -11.02332878112793
    8. ' operations' → logprob: -11.64832878112793
    9. 'op' → logprob: -12.02332878112793
    10. 'results' → logprob: -12.77332878112793

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20179833471775055
    2. '=' → logprob: -1.7017983198165894
    3. '_' → logprob: -8.951798439025879
    4. '=[]
' → logprob: -9.076798439025879
    5. '=[]' → logprob: -9.451798439025879
    6. '   ' → logprob: -10.326798439025879
    7. '_lines' → logprob: -10.951798439025879
    8. '       ' → logprob: -12.576798439025879
    9. '_list' → logprob: -12.826798439025879
    10. 's' → logprob: -13.826798439025879

Token 466: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.495315819978714
    2. '[]' → logprob: -0.9953157901763916
    3. '[' → logprob: -3.9953157901763916
    4. '[list' → logprob: -7.370316028594971
    5. '[q' → logprob: -7.620316028594971
    6. '[next' → logprob: -7.995316028594971
    7. '[line' → logprob: -8.120315551757812
    8. '[int' → logprob: -8.620315551757812
    9. '[input' → logprob: -8.620315551757812
    10. ' []' → logprob: -8.870315551757812

Token 467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3428528308868408
    2. 'for' → logprob: -1.3428528308868408
    3. ' for' → logprob: -3.967852830886841
    4. '(' → logprob: -6.092852592468262
    5. '=' → logprob: -6.342852592468262
    6. ' =' → logprob: -6.842852592468262
    7. '()
' → logprob: -7.092852592468262
    8. ':' → logprob: -7.217852592468262
    9. '           ' → logprob: -7.342852592468262
    10. '   ' → logprob: -7.342852592468262

Token 468: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003032881941180676
    2. '       ' → logprob: -8.250303268432617
    3. ' for' → logprob: -10.250303268432617
    4. '
' → logprob: -12.250303268432617
    5. '           ' → logprob: -13.375303268432617
    6. '   ' → logprob: -14.875303268432617
    7. '	for' → logprob: -16.750303268432617
    8. '               ' → logprob: -19.125303268432617
    9. ' ' → logprob: -19.750303268432617
    10. '```' → logprob: -21.375303268432617

Token 469: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.9153885558771435e-06
    2. ' _' → logprob: -12.250005722045898
    3. '_range' → logprob: -14.875005722045898
    4. '_i' → logprob: -15.375005722045898
    5. '_in' → logprob: -15.500005722045898
    6. '_q' → logprob: -16.6250057220459
    7. '_
' → logprob: -16.7500057220459
    8. '_=' → logprob: -16.7500057220459
    9. '_

' → logprob: -17.3750057220459
    10. ' in' → logprob: -18.5000057220459

Token 470: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.9153885558771435e-06
    2. ' _' → logprob: -12.250005722045898
    3. 'range' → logprob: -14.750005722045898
    4. ' range' → logprob: -14.875005722045898
    5. '_range' → logprob: -15.500005722045898
    6. ' in' → logprob: -17.0000057220459
    7. '_
' → logprob: -17.2500057220459
    8. '_

' → logprob: -17.2500057220459
    9. 'in' → logprob: -19.3750057220459
    10. '_=' → logprob: -19.6250057220459

Token 471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003372502396814525
    2. ' range' → logprob: -8.000337600708008
    3. '_' → logprob: -14.000337600708008
    4. '_range' → logprob: -14.500337600708008
    5. '(range' → logprob: -16.125337600708008
    6. '
' → logprob: -16.500337600708008
    7. '	range' → logprob: -16.500337600708008
    8. 'q' → logprob: -16.750337600708008
    9. 'r' → logprob: -16.875337600708008
    10. 'rang' → logprob: -17.250337600708008

Token 472: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.014262582175433636
    2. 'q' → logprob: -4.264262676239014
    3. ' q' → logprob: -9.889262199401855
    4. '(' → logprob: -10.264262199401855
    5. ' (' → logprob: -11.514262199401855
    6. '       ' → logprob: -13.014262199401855
    7. '   ' → logprob: -14.389262199401855
    8. '	q' → logprob: -14.764262199401855
    9. '(
' → logprob: -16.264263153076172
    10. ',' → logprob: -16.639263153076172

Token 473: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01419324241578579
    2. '):' → logprob: -4.389193058013916
    3. '           ' → logprob: -7.014193058013916
    4. '       ' → logprob: -8.014193534851074
    5. '):
' → logprob: -8.264193534851074
    6. ',' → logprob: -9.389193534851074
    7. ')' → logprob: -9.639193534851074
    8. '   ' → logprob: -11.014193534851074
    9. ':
' → logprob: -11.389193534851074
    10. '():
' → logprob: -12.514193534851074

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05165492370724678
    2. ' line' → logprob: -3.301654815673828
    3. 'line' → logprob: -4.426654815673828
    4. 'op' → logprob: -7.426654815673828
    5. ' op' → logprob: -7.801654815673828
    6. '   ' → logprob: -9.051654815673828
    7. '       ' → logprob: -9.051654815673828
    8. ' lines' → logprob: -9.551654815673828
    9. 'input' → logprob: -9.926654815673828
    10. '(line' → logprob: -10.801654815673828

Token 475: ' parts' (ID: 7881)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5275235176086426
    2. 'ops' → logprob: -1.7775235176086426
    3. 'op' → logprob: -1.9025235176086426
    4. 'parts' (adapté à ' parts') → logprob: -2.5275235176086426
    5. '           ' → logprob: -4.652523517608643
    6. '       ' → logprob: -7.027523517608643
    7. 'l' → logprob: -8.277523040771484
    8. 's' → logprob: -8.527523040771484
    9. 'tokens' → logprob: -8.527523040771484
    10. 'operation' → logprob: -8.777523040771484

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.201435849070549
    2. ' =' → logprob: -1.7014358043670654
    3. '=line' → logprob: -11.076436042785645
    4. '           ' → logprob: -13.326436042785645
    5. '(' → logprob: -13.451436042785645
    6. '[' → logprob: -13.576436042785645
    7. '   ' → logprob: -13.951436042785645
    8. '=
' → logprob: -15.451436042785645
    9. ',' → logprob: -15.576436042785645
    10. '.append' → logprob: -15.701436042785645

Token 477: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.006731830071657896
    2. ' next' → logprob: -5.006731986999512
    3. 'list' → logprob: -11.381731986999512
    4. '[next' → logprob: -12.756731986999512
    5. '(next' → logprob: -13.631731986999512
    6. 'input' → logprob: -14.131731986999512
    7. ' list' → logprob: -16.506731033325195
    8. '.next' → logprob: -17.006731033325195
    9. '	next' → logprob: -17.131731033325195
    10. '   ' → logprob: -17.131731033325195

Token 478: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.1637164789135568e-05
    2. '(' → logprob: -11.750011444091797
    3. 'input' → logprob: -12.625011444091797
    4. '(
' → logprob: -16.000011444091797
    5. '=input' → logprob: -16.125011444091797
    6. ' (' → logprob: -16.500011444091797
    7. ' input' → logprob: -16.875011444091797
    8. '(inputs' → logprob: -17.375011444091797
    9. ',input' → logprob: -17.750011444091797
    10. '[input' → logprob: -18.500011444091797

Token 479: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.004462400916963816
    2. 'lines' → logprob: -5.504462242126465
    3. 'ines' → logprob: -8.129462242126465
    4. 's' → logprob: -10.129462242126465
    5. '(lines' → logprob: -10.754462242126465
    6. 'Lines' → logprob: -11.129462242126465
    7. ')' → logprob: -13.379462242126465
    8. ' lines' → logprob: -13.629462242126465
    9. '_LINES' → logprob: -13.629462242126465
    10. '(input' → logprob: -13.754462242126465

Token 480: ').' (ID: 741)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0682215765118599
    2. '()' → logprob: -3.3182215690612793
    3. '()).' → logprob: -3.8182215690612793
    4. ').' → logprob: -5.193221569061279
    5. '()
' → logprob: -6.568221569061279
    6. '(' → logprob: -7.568221569061279
    7. ' ()' → logprob: -9.068222045898438
    8. ')' → logprob: -10.068222045898438
    9. ' ().' → logprob: -10.193222045898438
    10. '())' → logprob: -10.318222045898438

Token 481: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.47407716512680054
    2. 'strip' → logprob: -0.9740771651268005
    3. ' split' → logprob: -16.474077224731445
    4. 'rstrip' → logprob: -16.474077224731445
    5. ' strip' → logprob: -17.724077224731445
    6. 'spl' → logprob: -18.099077224731445
    7. '(split' → logprob: -21.099077224731445
    8. '.strip' → logprob: -21.599077224731445
    9. 'str' → logprob: -21.974077224731445
    10. '_split' → logprob: -22.224077224731445

Token 482: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005258660763502121
    2. '()
' → logprob: -5.505258560180664
    3. '(' → logprob: -6.755258560180664
    4. '(
' → logprob: -12.005258560180664
    5. '()]' → logprob: -13.255258560180664
    6. '())' → logprob: -13.755258560180664
    7. '()\' → logprob: -13.880258560180664
    8. '('' → logprob: -14.005258560180664
    9. '()

' → logprob: -14.130258560180664
    10. '()[' → logprob: -14.505258560180664

Token 483: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 484: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.036136824637651443
    2. 'op' → logprob: -4.161136627197266
    3. ' ops' → logprob: -4.286136627197266
    4. '           ' → logprob: -5.286136627197266
    5. ' op' → logprob: -7.661136627197266
    6. 'if' → logprob: -7.911136627197266
    7. ' if' → logprob: -9.536136627197266
    8. '       ' → logprob: -9.661136627197266
    9. '	op' → logprob: -10.661136627197266
    10. '_ops' → logprob: -11.036136627197266

Token 485: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004762380383908749
    2. '.' → logprob: -5.379762172698975
    3. '=' → logprob: -9.754762649536133
    4. ' .' → logprob: -10.379762649536133
    5. '.ap' → logprob: -11.254762649536133
    6. ' =' → logprob: -11.504762649536133
    7. '.extend' → logprob: -11.754762649536133
    8. '.app' → logprob: -11.879762649536133
    9. 'append' → logprob: -12.254762649536133
    10. ',' → logprob: -13.129762649536133

Token 486: '((' (ID: 2054)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.006227744743227959
    2. 'parts' → logprob: -5.756227970123291
    3. '((' → logprob: -6.381227970123291
    4. '(tuple' → logprob: -6.631227970123291
    5. 'tuple' → logprob: -10.756227493286133
    6. '(' → logprob: -11.756227493286133
    7. ' parts' → logprob: -13.381227493286133
    8. '(list' → logprob: -13.506227493286133
    9. '(
' → logprob: -14.131227493286133
    10. '([' → logprob: -14.756227493286133

Token 487: 'parts' (ID: 34761)
  Prédit: 'parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.001563185011036694
    2. ' parts' → logprob: -6.50156307220459
    3. 'int' → logprob: -10.12656307220459
    4. '           ' → logprob: -11.75156307220459
    5. ')' → logprob: -12.50156307220459
    6. '
' → logprob: -12.75156307220459
    7. '(parts' → logprob: -12.87656307220459
    8. '   ' → logprob: -13.37656307220459
    9. '               ' → logprob: -14.87656307220459
    10. 'str' → logprob: -14.87656307220459

Token 488: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004577174549922347
    2. '0' → logprob: -7.750457763671875
    3. ')' → logprob: -11.125457763671875
    4. '
' → logprob: -12.625457763671875
    5. '[
' → logprob: -12.625457763671875
    6. ',' → logprob: -13.000457763671875
    7. '))' → logprob: -13.625457763671875
    8. ' [' → logprob: -14.000457763671875
    9. ')]' → logprob: -15.500457763671875
    10. ')}' → logprob: -15.750457763671875

Token 489: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.526570384972729e-05
    2. '1' → logprob: -10.750055313110352
    3. ' ' → logprob: -11.000055313110352
    4. '[' → logprob: -11.500055313110352
    5. ')' → logprob: -13.250055313110352
    6. ''' → logprob: -13.500055313110352
    7. '   ' → logprob: -14.187555313110352
    8. ':' → logprob: -14.312555313110352
    9. ']' → logprob: -14.937555313110352
    10. '
' → logprob: -15.187555313110352

Token 490: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004179667681455612
    2. '[' → logprob: -6.12917947769165
    3. ' ,' → logprob: -7.12917947769165
    4. '],' → logprob: -7.75417947769165
    5. '',' → logprob: -7.87917947769165
    6. '),' → logprob: -8.504179954528809
    7. ',
' → logprob: -9.879179954528809
    8. ',),' → logprob: -10.129179954528809
    9. '','' → logprob: -11.379179954528809
    10. ',len' → logprob: -11.504179954528809

Token 491: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.007925883866846561
    2. ' int' → logprob: -4.882925987243652
    3. '[int' → logprob: -8.632925987243652
    4. 'parts' → logprob: -9.132925987243652
    5. ')' → logprob: -11.632925987243652
    6. 'list' → logprob: -11.632925987243652
    7. ' parts' → logprob: -11.882925987243652
    8. '*' → logprob: -12.132925987243652
    9. '(int' → logprob: -13.507925987243652
    10. 'ints' → logprob: -14.132925987243652

Token 492: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -1.5570885807392187e-05
    2. 'parts' → logprob: -11.375015258789062
    3. '(' → logprob: -12.500015258789062
    4. '(
' → logprob: -15.625015258789062
    5. ' (' → logprob: -16.125015258789062
    6. ' parts' → logprob: -16.500015258789062
    7. '(part' → logprob: -19.375015258789062
    8. '(points' → logprob: -19.750015258789062
    9. '(

' → logprob: -20.375015258789062
    10. '
' → logprob: -20.625015258789062

Token 493: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002159898867830634
    2. '(parts' → logprob: -6.37716007232666
    3. '(' → logprob: -8.00216007232666
    4. 'parts' → logprob: -9.25216007232666
    5. '1' → logprob: -10.75216007232666
    6. ' parts' → logprob: -13.00216007232666
    7. '_parts' → logprob: -14.12716007232666
    8. '
' → logprob: -14.25216007232666
    9. ')' → logprob: -14.50216007232666
    10. '   ' → logprob: -15.12716007232666

Token 494: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.125000953674316
    3. '[' → logprob: -15.750000953674316
    4. '
' → logprob: -16.125
    5. 'parts' → logprob: -16.5
    6. '(parts' → logprob: -16.5
    7. '   ' → logprob: -17.375
    8. '(' → logprob: -17.875
    9. ')' → logprob: -19.25
    10. ' parts' → logprob: -19.25

Token 495: '])))
' (ID: 146875)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.009721972979605198
    2. ']))' → logprob: -5.009721755981445
    3. ')))' → logprob: -6.509721755981445
    4. '])))
' → logprob: -7.009721755981445
    5. '))))' → logprob: -8.009721755981445
    6. ')]' → logprob: -8.634721755981445
    7. ']' → logprob: -9.509721755981445
    8. '[' → logprob: -11.634721755981445
    9. ')' → logprob: -12.634721755981445
    10. ']),' → logprob: -12.884721755981445

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2996278405189514
    2. '<|end|>' → logprob: -1.9246277809143066
    3. '           ' → logprob: -2.5496277809143066
    4. 'return' → logprob: -4.924627780914307
    5. '   ' → logprob: -5.424627780914307
    6. ')' → logprob: -5.549627780914307
    7. '<|end|>' → logprob: -5.924627780914307
    8. '
' → logprob: -5.924627780914307
    9. '	' → logprob: -6.049627780914307
    10. '	return' → logprob: -6.174627780914307

Token 497: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034513965249061584
    2. 'return' (adapté à ' return') → logprob: -3.5345139503479004
    3. ' return' → logprob: -6.5345139503479
    4. '           ' → logprob: -6.5345139503479
    5. '   ' → logprob: -7.1595139503479
    6. '
' → logprob: -7.5345139503479
    7. '<|end|>' → logprob: -8.284514427185059
    8. ')' → logprob: -9.659514427185059
    9. '```' → logprob: -10.159514427185059
    10. '      ' → logprob: -10.784514427185059

Token 498: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -2.339278580620885e-06
    2. ' ops' → logprob: -13.125001907348633
    3. 'op' → logprob: -16.250001907348633
    4. 'opts' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.125001907348633
    6. 'ots' → logprob: -19.125001907348633
    7. 'operations' → logprob: -19.875001907348633
    8. '.ops' → logprob: -20.125001907348633
    9. '[' → logprob: -20.250001907348633
    10. 'os' → logprob: -20.500001907348633

Token 499: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7697519063949585
    2. '   ' → logprob: -1.0197519063949585
    3. '<|end|>' → logprob: -1.8947519063949585
    4. 'class' → logprob: -4.269752025604248
    5. '<|end|>' → logprob: -5.394752025604248
    6. '```' → logprob: -6.519752025604248
    7. 'input' → logprob: -6.644752025604248
    8. '#' → logprob: -6.894752025604248
    9. '       ' → logprob: -7.644752025604248
    10. '
' → logprob: -7.769752025604248

Token 501: ' Mark' (ID: 5070)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.4448941648006439
    2. 'Solver' → logprob: -2.0698940753936768
    3. ' Solution' → logprob: -2.6948940753936768
    4. 'Tree' → logprob: -2.8198940753936768
    5. 'Runner' → logprob: -3.5698940753936768
    6. ' Solver' → logprob: -3.6948940753936768
    7. ' Tree' → logprob: -4.069894313812256
    8. 'Processor' → logprob: -4.319894313812256
    9. 'Main' → logprob: -4.319894313812256
    10. 'Executor' → logprob: -6.194894313812256

Token 502: 'ed' (ID: 295)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.037473492324352264
    2. 'ed' → logprob: -3.912473440170288
    3. 'Manager' → logprob: -4.537473678588867
    4. 'ing' → logprob: -5.912473678588867
    5. 'down' → logprob: -6.662473678588867
    6. 'Down' → logprob: -7.162473678588867
    7. 'able' → logprob: -7.162473678588867
    8. 'Tree' → logprob: -8.912473678588867
    9. ':' → logprob: -9.537473678588867
    10. 'et' → logprob: -9.787473678588867

Token 503: 'Ancestor' (ID: 130381)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.021461987867951393
    2. 'Manager' → logprob: -4.6464619636535645
    3. 'Node' → logprob: -5.6464619636535645
    4. 'er' → logprob: -6.0214619636535645
    5. 'ed' → logprob: -6.2714619636535645
    6. 'Nodes' → logprob: -6.5214619636535645
    7. 'Handler' → logprob: -7.5214619636535645
    8. ' Tree' → logprob: -8.271462440490723
    9. 'Processor' → logprob: -8.521462440490723
    10. 'Trie' → logprob: -8.771462440490723

Token 504: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2503550052642822
    2. 'Finder' → logprob: -1.6253550052642822
    3. ':
' → logprob: -4.625354766845703
    4. '(' → logprob: -5.375354766845703
    5. '{' → logprob: -5.875354766845703
    6. 'Searcher' → logprob: -6.000354766845703
    7. 'Trie' → logprob: -6.250354766845703
    8. 'Tree' → logprob: -7.250354766845703
    9. 'Retriever' → logprob: -7.875354766845703
    10. 'Query' → logprob: -8.250354766845703

Token 505: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009552901610732079
    2. ':
' → logprob: -7.000955104827881
    3. '(' → logprob: -10.750955581665039
    4. ' :' → logprob: -11.875955581665039
    5. '():' → logprob: -12.125955581665039
    6. ':def' → logprob: -13.000955581665039
    7. '):' → logprob: -13.250955581665039
    8. '>:' → logprob: -13.750955581665039
    9. '<|end|>' → logprob: -14.125955581665039
    10. ':

' → logprob: -14.250955581665039

Token 506: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004146068822592497
    2. ' def' → logprob: -5.504146099090576
    3. 'def' → logprob: -9.879145622253418
    4. ' class' → logprob: -12.254145622253418
    5. 'class' → logprob: -12.879145622253418
    6. '	def' → logprob: -13.004145622253418
    7. '    
' → logprob: -13.254145622253418
    8. '```' → logprob: -14.254145622253418
    9. '   ' → logprob: -14.379145622253418
    10. '(' → logprob: -14.504145622253418

Token 507: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20202501118183136
    2. 'def' (adapté à ' def') → logprob: -1.702025055885315
    3. '   ' → logprob: -7.452024936676025
    4. ' __' → logprob: -10.702025413513184
    5. '__' → logprob: -11.827025413513184
    6. '	def' → logprob: -13.952025413513184
    7. 'class' → logprob: -14.952025413513184
    8. ' ' → logprob: -15.327025413513184
    9. '```' → logprob: -17.327024459838867
    10. '    ' → logprob: -17.827024459838867

Token 508: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029994724318385124
    2. '__' → logprob: -3.5299947261810303
    3. ' def' → logprob: -9.15499496459961
    4. '_init' → logprob: -9.27999496459961
    5. 'init' → logprob: -10.90499496459961
    6. 'def' → logprob: -11.40499496459961
    7. ' _' → logprob: -11.65499496459961
    8. ' init' → logprob: -12.15499496459961
    9. '_' → logprob: -14.15499496459961
    10. '___' → logprob: -15.15499496459961

Token 509: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.848420551046729e-05
    2. '__' → logprob: -10.6250581741333
    3. '_init' → logprob: -10.6250581741333
    4. 'nit' → logprob: -12.3750581741333
    5. 'it' → logprob: -13.3750581741333
    6. ' init' → logprob: -13.5000581741333
    7. 'int' → logprob: -13.6250581741333
    8. '```' → logprob: -14.5000581741333
    9. '_' → logprob: -14.6250581741333
    10. 'def' → logprob: -16.000059127807617

Token 510: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10891429334878922
    2. '(self' → logprob: -2.733914375305176
    3. '(' → logprob: -3.983914375305176
    4. ' (' → logprob: -4.233914375305176
    5. '__(
' → logprob: -6.233914375305176
    6. '__' → logprob: -6.358914375305176
    7. ')(' → logprob: -7.608914375305176
    8. ',' → logprob: -8.108914375305176
    9. '(
' → logprob: -8.858914375305176
    10. '__((' → logprob: -9.108914375305176

Token 511: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.145118848304264e-05
    2. ')' → logprob: -10.375051498413086
    3. ' self' → logprob: -11.000051498413086
    4. '
' → logprob: -13.250051498413086
    5. '   ' → logprob: -14.125051498413086
    6. '       ' → logprob: -14.750051498413086
    7. '(self' → logprob: -15.625051498413086
    8. '):
' → logprob: -15.625051498413086
    9. 'n' → logprob: -15.875051498413086
    10. ',' → logprob: -16.750051498413086

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008484598365612328
    2. 'self' → logprob: -7.750848293304443
    3. ' ,' → logprob: -8.000848770141602
    4. '(self' → logprob: -10.750848770141602
    5. ' (' → logprob: -11.000848770141602
    6. ',
' → logprob: -11.875848770141602
    7. '       ' → logprob: -11.875848770141602
    8. ',self' → logprob: -12.125848770141602
    9. ')' → logprob: -12.250848770141602
    10. '   ' → logprob: -12.375848770141602

Token 513: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2412176132202148
    2. '):
' → logprob: -1.2412176132202148
    3. '):' → logprob: -1.2412176132202148
    4. 'n' → logprob: -2.116217613220215
    5. ' self' → logprob: -5.991217613220215
    6. ')' → logprob: -6.241217613220215
    7. '
' → logprob: -6.366217613220215
    8. ' n' → logprob: -6.741217613220215
    9. ' ):' → logprob: -6.741217613220215
    10. 'input' → logprob: -6.866217613220215

Token 514: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4746793508529663
    2. '):' → logprob: -0.9746793508529663
    3. ')' → logprob: -8.224678993225098
    4. ',' → logprob: -8.599678993225098
    5. '       ' → logprob: -9.474678993225098
    6. '   ' → logprob: -10.099678993225098
    7. '):
' → logprob: -10.849678993225098
    8. ' ):' → logprob: -12.349678993225098
    9. '):

' → logprob: -12.724678993225098
    10. ' ):
' → logprob: -13.224678993225098

Token 515: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.4421655237674713
    2. 'ops' → logprob: -1.442165493965149
    3. 'operations' → logprob: -2.9421656131744385
    4. ' parents' → logprob: -3.5671656131744385
    5. 'edges' → logprob: -4.317165374755859
    6. 'q' → logprob: -4.942165374755859
    7. 'input' → logprob: -5.192165374755859
    8. 'parent' → logprob: -6.067165374755859
    9. ')' → logprob: -6.317165374755859
    10. ' edges' → logprob: -6.567165374755859

Token 516: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38701415061950684
    2. '):' → logprob: -1.1370141506195068
    3. '):
' → logprob: -9.762014389038086
    4. ')' → logprob: -10.387014389038086
    5. '       ' → logprob: -10.387014389038086
    6. '   ' → logprob: -11.262014389038086
    7. '):

' → logprob: -12.887014389038086
    8. ',' → logprob: -12.887014389038086
    9. ' ):' → logprob: -13.637014389038086
    10. '_list' → logprob: -13.887014389038086

Token 517: ' operations' (ID: 12084)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.3451597988605499
    2. 'operations' → logprob: -1.5951597690582275
    3. ' ops' → logprob: -2.9701597690582275
    4. ' operations' → logprob: -3.3451597690582275
    5. 'marked' → logprob: -7.595160007476807
    6. ')' → logprob: -7.970160007476807
    7. '   ' → logprob: -7.970160007476807
    8. ' marked' → logprob: -8.220159530639648
    9. 'nodes' → logprob: -8.220159530639648
    10. ' nodes' → logprob: -8.970159530639648

Token 518: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4741365313529968
    2. '):
' → logprob: -0.9741365313529968
    3. '):
' → logprob: -10.224136352539062
    4. ')' → logprob: -11.599136352539062
    5. '   ' → logprob: -12.349136352539062
    6. '       ' → logprob: -12.474136352539062
    7. '):

' → logprob: -13.099136352539062
    8. ',' → logprob: -13.724136352539062
    9. ':' → logprob: -14.224136352539062
    10. ' ):' → logprob: -14.349136352539062

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.635164754698053e-05
    2. 'self' → logprob: -10.500066757202148
    3. ' self' → logprob: -11.375066757202148
    4. '   ' → logprob: -11.750066757202148
    5. '):
' → logprob: -11.750066757202148
    6. ',' → logprob: -12.125066757202148
    7. ':' → logprob: -13.000066757202148
    8. ':
' → logprob: -13.625066757202148
    9. '      ' → logprob: -14.750066757202148
    10. '
' → logprob: -14.875066757202148

Token 520: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.032838527113199234
    2. ' self' → logprob: -3.5328385829925537
    3. '       ' → logprob: -5.782838344573975
    4. '   ' → logprob: -13.407838821411133
    5. 'class' → logprob: -14.282838821411133
    6. '	self' → logprob: -14.907838821411133
    7. '        ' → logprob: -15.782838821411133
    8. 'super' → logprob: -15.907838821411133
    9. '(self' → logprob: -16.282838821411133
    10. ' ' → logprob: -16.532838821411133

Token 521: '.tree' (ID: 49211)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.015401618555188179
    2. '.nodes' → logprob: -4.515401840209961
    3. 'n' → logprob: -6.015401840209961
    4. '.tree' → logprob: -6.515401840209961
    5. ' .' → logprob: -9.015401840209961
    6. '   ' → logprob: -9.390401840209961
    7. 'nodes' → logprob: -9.515401840209961
    8. '.' → logprob: -9.515401840209961
    9. ' n' → logprob: -10.640401840209961
    10. ',n' → logprob: -11.265401840209961

Token 522: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932017803192139
    2. ' =' → logprob: -0.6932017803192139
    3. '   ' → logprob: -10.818202018737793
    4. '       ' → logprob: -10.943202018737793
    5. '=
' → logprob: -12.318202018737793
    6. '.' → logprob: -12.943202018737793
    7. ' =
' → logprob: -13.068202018737793
    8. '=n' → logprob: -13.318202018737793
    9. '    ' → logprob: -13.443202018737793
    10. '=self' → logprob: -13.693202018737793

Token 523: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.47407862544059753
    2. ' Tree' → logprob: -0.9740786552429199
    3. '	Tree' → logprob: -13.974078178405762
    4. '(Tree' → logprob: -14.724078178405762
    5. '   ' → logprob: -15.599078178405762
    6. '<Tree' → logprob: -15.724078178405762
    7. '.Tree' → logprob: -17.849079132080078
    8. '       ' → logprob: -18.224079132080078
    9. ' ' → logprob: -18.724079132080078
    10. '    ' → logprob: -18.849079132080078

Token 524: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00011033779446734115
    2. '(' → logprob: -9.125110626220703
    3. 'n' → logprob: -13.750110626220703
    4. '(
' → logprob: -15.500110626220703
    5. '       ' → logprob: -16.750110626220703
    6. ' (' → logprob: -17.375110626220703
    7. '
' → logprob: -18.250110626220703
    8. '```' → logprob: -18.625110626220703
    9. '   ' → logprob: -18.750110626220703
    10. '((' → logprob: -19.750110626220703

Token 525: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16023682057857513
    2. ')' → logprob: -1.9102368354797363
    3. '       ' → logprob: -12.160236358642578
    4. ')
' → logprob: -12.660236358642578
    5. ')

' → logprob: -12.785236358642578
    6. ' )
' → logprob: -13.910236358642578
    7. '   ' → logprob: -15.285236358642578
    8. ' )' → logprob: -16.410236358642578
    9. '),' → logprob: -17.160236358642578
    10. '
' → logprob: -17.410236358642578

Token 526: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026287293061614037
    2. ' for' → logprob: -4.276287078857422
    3. 'for' → logprob: -4.901287078857422
    4. '<|end|>' → logprob: -5.401287078857422
    5. '
' → logprob: -10.026287078857422
    6. '<|end|>' → logprob: -10.901287078857422
    7. ',' → logprob: -11.651287078857422
    8. '   ' → logprob: -12.026287078857422
    9. '	for' → logprob: -12.401287078857422
    10. ')' → logprob: -12.526287078857422

Token 527: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003758575767278671
    2. '       ' → logprob: -8.000375747680664
    3. ' for' → logprob: -10.125375747680664
    4. '#' → logprob: -15.750375747680664
    5. '	for' → logprob: -16.625375747680664
    6. '```' → logprob: -16.625375747680664
    7. '   ' → logprob: -16.750375747680664
    8. '           ' → logprob: -19.000375747680664
    9. 'self' → logprob: -19.125375747680664
    10. '        
' → logprob: -19.500375747680664

Token 528: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23713849484920502
    2. 'child' → logprob: -1.7371385097503662
    3. ' i' → logprob: -3.737138509750366
    4. ' child' → logprob: -4.487138271331787
    5. 'idx' → logprob: -11.237138748168945
    6. 'v' → logprob: -13.112138748168945
    7. 'index' → logprob: -13.862138748168945
    8. ' idx' → logprob: -13.862138748168945
    9. 'node' → logprob: -14.112138748168945
    10. 'c' → logprob: -14.612138748168945

Token 529: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02976784110069275
    2. 'in' → logprob: -3.5297677516937256
    3. ',' → logprob: -11.404767990112305
    4. 'range' → logprob: -12.529767990112305
    5. ' ' → logprob: -14.154767990112305
    6. '   ' → logprob: -14.279767990112305
    7. '
' → logprob: -14.654767990112305
    8. '	in' → logprob: -15.404767990112305
    9. 'n' → logprob: -15.904767990112305
    10. '1' → logprob: -16.404767990112305

Token 530: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002394170151092112
    2. 'pi' → logprob: -9.250239372253418
    3. ' p' → logprob: -9.375239372253418
    4. 'parent' → logprob: -9.750239372253418
    5. ' parent' → logprob: -16.500240325927734
    6. 'pid' → logprob: -16.875240325927734
    7. ' pi' → logprob: -17.625240325927734
    8. '`' → logprob: -18.625240325927734
    9. '   ' → logprob: -18.875240325927734
    10. '```' → logprob: -19.125240325927734

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043033670634031296
    2. 'in' → logprob: -3.1680335998535156
    3. ')' → logprob: -11.043033599853516
    4. 'n' → logprob: -11.543033599853516
    5. '	in' → logprob: -13.168033599853516
    6. ' ' → logprob: -13.418033599853516
    7. 'i' → logprob: -14.043033599853516
    8. ',' → logprob: -14.418033599853516
    9. '
' → logprob: -14.543033599853516
    10. '   ' → logprob: -15.043033599853516

Token 532: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.014175384305417538
    2. ' enumerate' → logprob: -4.2641754150390625
    3. 'range' → logprob: -11.639175415039062
    4. '
' → logprob: -13.014175415039062
    5. '   ' → logprob: -15.139175415039062
    6. '(' → logprob: -15.139175415039062
    7. 'zip' → logprob: -16.014175415039062
    8. '```' → logprob: -16.889175415039062
    9. 'enum' → logprob: -17.139175415039062
    10. ' ' → logprob: -18.139175415039062

Token 533: '(par' (ID: 34455)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0031395703554153442
    2. 'range' → logprob: -5.878139495849609
    3. '(' → logprob: -8.12813949584961
    4. ' range' → logprob: -10.50313949584961
    5. ' (' → logprob: -12.00313949584961
    6. ',' → logprob: -12.75313949584961
    7. '(par' → logprob: -14.25313949584961
    8. '((' → logprob: -14.50313949584961
    9. '(children' → logprob: -14.62813949584961
    10. '(parent' → logprob: -14.75313949584961

Token 534: 'ents' (ID: 1094)
  Prédit: 'ents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -0.009498230181634426
    2. 'ent' → logprob: -4.759498119354248
    3. 'range' → logprob: -7.884498119354248
    4. 'nts' → logprob: -8.634498596191406
    5. 'ange' → logprob: -9.134498596191406
    6. '[' → logprob: -9.134498596191406
    7. '   ' → logprob: -10.759498596191406
    8. '(' → logprob: -11.009498596191406
    9. '(range' → logprob: -11.759498596191406
    10. 'ints' → logprob: -11.759498596191406

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012628522235900164
    2. ' ,' → logprob: -7.126262664794922
    3. '   ' → logprob: -8.001262664794922
    4. '):
' → logprob: -10.126262664794922
    5. '       ' → logprob: -10.501262664794922
    6. '           ' → logprob: -11.501262664794922
    7. '):' → logprob: -11.626262664794922
    8. '+' → logprob: -11.751262664794922
    9. ',start' → logprob: -12.001262664794922
    10. '1' → logprob: -12.376262664794922

Token 536: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.022925838828086853
    2. ' start' → logprob: -4.522925853729248
    3. '1' → logprob: -4.647925853729248
    4. '2' → logprob: -6.272925853729248
    5. '   ' → logprob: -8.64792537689209
    6. ' ' → logprob: -9.02292537689209
    7. 'i' → logprob: -10.27292537689209
    8. '       ' → logprob: -12.77292537689209
    9. '  ' → logprob: -13.39792537689209
    10. '           ' → logprob: -14.02292537689209

Token 537: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00014656837447546422
    2. '(' → logprob: -8.875146865844727
    3. '1' → logprob: -12.625146865844727
    4. '2' → logprob: -12.875146865844727
    5. '=
' → logprob: -14.625146865844727
    6. ' =' → logprob: -16.000146865844727
    7. '(
' → logprob: -16.250146865844727
    8. ')' → logprob: -16.625146865844727
    9. '   ' → logprob: -17.375146865844727
    10. '=(' → logprob: -18.000146865844727

Token 538: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.75
    4. '  ' → logprob: -21.0
    5. 'range' → logprob: -21.25
    6. '```' → logprob: -21.875
    7. ')' → logprob: -22.0
    8. '۲' → logprob: -22.25
    9. '
' → logprob: -22.3125
    10. '=' → logprob: -22.8125

Token 539: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05512148141860962
    2. '):' → logprob: -2.930121421813965
    3. '):
' → logprob: -8.555121421813965
    4. '       ' → logprob: -10.680121421813965
    5. ':' → logprob: -12.055121421813965
    6. ')' → logprob: -12.055121421813965
    7. ' ):
' → logprob: -12.555121421813965
    8. ':
' → logprob: -13.305121421813965
    9. '           ' → logprob: -13.305121421813965
    10. '   ' → logprob: -13.430121421813965

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05256788060069084
    2. 'self' → logprob: -3.677567958831787
    3. ' self' → logprob: -3.677567958831787
    4. '   ' → logprob: -7.802567958831787
    5. '       ' → logprob: -8.927567481994629
    6. ' ' → logprob: -10.677567481994629
    7. '          ' → logprob: -10.802567481994629
    8. '               ' → logprob: -11.427567481994629
    9. '	       ' → logprob: -11.677567481994629
    10. '	self' → logprob: -11.677567481994629

Token 541: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01606885716319084
    2. ' self' → logprob: -4.141068935394287
    3. '           ' → logprob: -11.141068458557129
    4. '               ' → logprob: -11.266068458557129
    5. '	self' → logprob: -13.016068458557129
    6. '   ' → logprob: -13.516068458557129
    7. '       ' → logprob: -14.016068458557129
    8. '(self' → logprob: -14.266068458557129
    9. '[self' → logprob: -14.266068458557129
    10. '```' → logprob: -14.516068458557129

Token 542: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.01871684566140175
    2. 'tree' → logprob: -4.018716812133789
    3. '.add' → logprob: -7.893716812133789
    4. '.' → logprob: -9.268716812133789
    5. '.mark' → logprob: -10.518716812133789
    6. ' .' → logprob: -10.893716812133789
    7. ' tree' → logprob: -11.393716812133789
    8. 'add' → logprob: -11.643716812133789
    9. ').' → logprob: -11.643716812133789
    10. '	tree' → logprob: -12.268716812133789

Token 543: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.7491250875755213e-05
    2. '.' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.625027656555176
    4. 'add' → logprob: -13.750027656555176
    5. ' .' → logprob: -14.125027656555176
    6. ').' → logprob: -16.87502670288086
    7. '.mark' → logprob: -17.50002670288086
    8. ':add' → logprob: -17.50002670288086
    9. '       ' → logprob: -17.75002670288086
    10. ')add' → logprob: -17.87502670288086

Token 544: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.8789383830153383e-05
    2. '_child' → logprob: -11.000019073486328
    3. '_node' → logprob: -13.625019073486328
    4. 'edge' → logprob: -15.250019073486328
    5. '_' → logprob: -15.375019073486328
    6. '_edges' → logprob: -16.500019073486328
    7. '_ed' → logprob: -16.500019073486328
    8. '_line' → logprob: -17.750019073486328
    9. '_tree' → logprob: -17.875019073486328
    10. '(' → logprob: -17.875019073486328

Token 545: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.375008583068848
    3. 'i' → logprob: -12.625008583068848
    4. ' (' → logprob: -14.875008583068848
    5. '(
' → logprob: -15.500008583068848
    6. '((' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.62500762939453
    8. ' i' → logprob: -17.00000762939453
    9. '
' → logprob: -18.37500762939453
    10. ')' → logprob: -19.12500762939453

Token 546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014574182219803333
    2. ',p' → logprob: -4.26457405090332
    3. ' ,' → logprob: -7.88957405090332
    4. 'p' → logprob: -10.76457405090332
    5. ',
' → logprob: -11.51457405090332
    6. '(p' → logprob: -13.76457405090332
    7. '
' → logprob: -14.63957405090332
    8. ' p' → logprob: -14.63957405090332
    9. ')' → logprob: -14.88957405090332
    10. '`,' → logprob: -15.51457405090332

Token 547: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008045066497288644
    2. ' p' → logprob: -7.125804424285889
    3. '   ' → logprob: -17.625804901123047
    4. ')p' → logprob: -17.625804901123047
    5. '
' → logprob: -18.000804901123047
    6. ')' → logprob: -18.250804901123047
    7. '           ' → logprob: -18.625804901123047
    8. ' ' → logprob: -18.750804901123047
    9. '```' → logprob: -19.125804901123047
    10. '	p' → logprob: -19.375804901123047

Token 548: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ')
' → logprob: -12.375006675720215
    3. ' )' → logprob: -13.500006675720215
    4. '       ' → logprob: -14.000006675720215
    5. '))' → logprob: -16.75000762939453
    6. ')

' → logprob: -16.75000762939453
    7. '<|end|>' → logprob: -16.87500762939453
    8. '   ' → logprob: -17.75000762939453
    9. '           ' → logprob: -17.75000762939453
    10. ')#' → logprob: -17.87500762939453

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4706958532333374
    2. '<|end|>' → logprob: -1.3456958532333374
    3. '
' → logprob: -2.970695972442627
    4. '   ' → logprob: -3.095695972442627
    5. 'for' → logprob: -4.845695972442627
    6. ' for' → logprob: -5.220695972442627
    7. '<|end|>' → logprob: -5.970695972442627
    8. 'def' → logprob: -6.970695972442627
    9. '```' → logprob: -7.345695972442627
    10. ')' → logprob: -7.470695972442627

Token 550: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04200856387615204
    2. ' for' → logprob: -3.667008638381958
    3. 'self' (adapté à ' self') → logprob: -4.917008399963379
    4. '       ' → logprob: -5.042008399963379
    5. '   ' → logprob: -6.542008399963379
    6. 'def' → logprob: -8.292008399963379
    7. ' self' → logprob: -9.542008399963379
    8. '```' → logprob: -11.042008399963379
    9. '#' → logprob: -11.667008399963379
    10. ' ' → logprob: -12.542008399963379

Token 551: '.operations' (ID: 176416)
  Prédit: '.tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.6735869646072388
    2. '.operations' → logprob: -1.0485869646072388
    3. '.ops' → logprob: -2.173586845397949
    4. 'operations' → logprob: -5.048586845397949
    5. '._' → logprob: -5.298586845397949
    6. '.' → logprob: -5.673586845397949
    7. 'ops' → logprob: -5.798586845397949
    8. 'tree' → logprob: -6.298586845397949
    9. '.mark' → logprob: -6.673586845397949
    10. 'for' → logprob: -6.798586845397949

Token 552: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576299786567688
    2. ' =' → logprob: -0.826299786567688
    3. '.extend' → logprob: -8.576299667358398
    4. '.append' → logprob: -8.951299667358398
    5. '=[]' → logprob: -11.826299667358398
    6. '_' → logprob: -12.201299667358398
    7. '   ' → logprob: -12.201299667358398
    8. '.' → logprob: -12.326299667358398
    9. '.setdefault' → logprob: -12.826299667358398
    10. ' =
' → logprob: -13.201299667358398

Token 553: ' operations' (ID: 12084)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -1.6240566083070007e-06
    2. ' operations' → logprob: -13.500001907348633
    3. 'ops' → logprob: -16.625001907348633
    4. '[' → logprob: -18.875001907348633
    5. 'operators' → logprob: -19.625001907348633
    6. 'oper' → logprob: -20.500001907348633
    7. '.operations' → logprob: -20.500001907348633
    8. '[(' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.500001907348633
    10. 'operation' → logprob: -22.250001907348633

Token 554: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20731067657470703
    2. '<|end|>' → logprob: -1.957310676574707
    3. '   ' → logprob: -3.207310676574707
    4. '<|end|>' → logprob: -6.082310676574707
    5. 'def' → logprob: -6.332310676574707
    6. '    
' → logprob: -7.457310676574707
    7. '

' → logprob: -8.457310676574707
    8. '  
' → logprob: -9.207310676574707
    9. ' def' → logprob: -9.332310676574707
    10. ',' → logprob: -9.707310676574707

Token 555: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3252035677433014
    2. '
' → logprob: -1.325203537940979
    3. 'def' → logprob: -4.8252034187316895
    4. '<|end|>' → logprob: -6.0752034187316895
    5. ' def' → logprob: -7.3252034187316895
    6. '    
' → logprob: -7.4502034187316895
    7. '<|end|>' → logprob: -9.450203895568848
    8. '

' → logprob: -9.575203895568848
    9. '        
' → logprob: -10.075203895568848
    10. '       ' → logprob: -10.200203895568848

Token 556: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5568186044692993
    2. 'self' (adapté à ' self') → logprob: -0.9318186044692993
    3. '
' → logprob: -3.6818184852600098
    4. ' self' → logprob: -6.18181848526001
    5. ' def' → logprob: -6.30681848526001
    6. '   ' → logprob: -6.55681848526001
    7. 'for' → logprob: -6.93181848526001
    8. '       ' → logprob: -7.18181848526001
    9. '

' → logprob: -8.056818962097168
    10. '```' → logprob: -8.806818962097168

Token 557: '.output' (ID: 27521)
  Prédit: '.results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.8094357848167419
    2. '.' → logprob: -1.1844358444213867
    3. '.result' → logprob: -2.9344358444213867
    4. '.output' → logprob: -3.1844358444213867
    5. ' .' → logprob: -3.4344358444213867
    6. '.mark' → logprob: -3.5594358444213867
    7. '.answer' → logprob: -4.059435844421387
    8. '.answers' → logprob: -4.184435844421387
    9. 'results' → logprob: -4.309435844421387
    10. '.outputs' → logprob: -5.309435844421387

Token 558: '_sum' (ID: 29859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1134871244430542
    2. ' =' → logprob: -2.2384872436523438
    3. '=[]' → logprob: -7.488487243652344
    4. '_' → logprob: -9.738487243652344
    5. 's' → logprob: -11.113487243652344
    6. '   ' → logprob: -12.113487243652344
    7. '=[]
' → logprob: -12.113487243652344
    8. '[' → logprob: -12.613487243652344
    9. ' ' → logprob: -12.738487243652344
    10. '_lines' → logprob: -12.863487243652344

Token 559: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150446891784668
    2. '=' → logprob: -1.7015044689178467
    3. ' +=' → logprob: -10.076504707336426
    4. '_' → logprob: -10.326504707336426
    5. '+=' → logprob: -12.451504707336426
    6. '   ' → logprob: -12.826504707336426
    7. 's' → logprob: -12.951504707336426
    8. ')' → logprob: -13.576504707336426
    9. ',' → logprob: -13.701504707336426
    10. ' ' → logprob: -13.701504707336426

Token 560: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011708177626132965
    2. ' ' → logprob: -6.751170635223389
    3. '   ' → logprob: -14.501171112060547
    4. '  ' → logprob: -16.563671112060547
    5. '=' → logprob: -18.126171112060547
    6. '(' → logprob: -18.126171112060547
    7. ' ' → logprob: -18.126171112060547
    8. '۰' → logprob: -18.126171112060547
    9. '```' → logprob: -18.251171112060547
    10. '
' → logprob: -18.376171112060547

Token 561: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.312528610229492
    4. '۰' → logprob: -18.000028610229492
    5. 'int' → logprob: -18.062528610229492
    6. '[]' → logprob: -18.250028610229492
    7. 'None' → logprob: -18.875028610229492
    8. '=' → logprob: -19.125028610229492
    9. '000' → logprob: -19.187528610229492
    10. 'sum' → logprob: -19.187528610229492

Token 562: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026157576590776443
    2. '
' → logprob: -3.7761576175689697
    3. 'def' → logprob: -6.151157379150391
    4. '<|end|>' → logprob: -8.15115737915039
    5. '    
' → logprob: -8.65115737915039
    6. ' def' → logprob: -8.77615737915039
    7. '	def' → logprob: -9.40115737915039
    8. '<|end|>' → logprob: -10.90115737915039
    9. '

' → logprob: -11.27615737915039
    10. '       ' → logprob: -11.52615737915039

Token 563: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004171833395957947
    2. 'def' → logprob: -5.629171848297119
    3. ' def' → logprob: -7.754171848297119
    4. '
' → logprob: -10.004171371459961
    5. ' ' → logprob: -10.129171371459961
    6. '    
' → logprob: -10.379171371459961
    7. '	def' → logprob: -11.629171371459961
    8. '<|end|>' → logprob: -12.254171371459961
    9. '  ' → logprob: -12.879171371459961
    10. '       ' → logprob: -13.004171371459961

Token 564: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.984787902794778e-05
    2. '   ' → logprob: -9.375100135803223
    3. ' def' → logprob: -11.125100135803223
    4. '
' → logprob: -16.625099182128906
    5. '	def' → logprob: -16.750099182128906
    6. 'de' → logprob: -17.750099182128906
    7. ' ' → logprob: -18.000099182128906
    8. '  ' → logprob: -18.750099182128906
    9. '    
' → logprob: -18.875099182128906
    10. '       ' → logprob: -19.375099182128906

Token 565: ' initialize' (ID: 18400)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.5966707468032837
    2. 'solve' → logprob: -1.5966707468032837
    3. 'run' → logprob: -2.346670627593994
    4. ' process' → logprob: -2.346670627593994
    5. ' run' → logprob: -3.096670627593994
    6. ' solve' → logprob: -4.596670627593994
    7. 'execute' → logprob: -9.096671104431152
    8. ' execute' → logprob: -11.221671104431152
    9. 'perform' → logprob: -13.471671104431152
    10. 'handle' → logprob: -14.346671104431152

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036543605383485556
    2. '(' → logprob: -6.628654479980469
    3. '_mark' → logprob: -6.753654479980469
    4. '_marks' → logprob: -7.753654479980469
    5. '()' → logprob: -8.128654479980469
    6. '_nodes' → logprob: -9.128654479980469
    7. '_' → logprob: -9.378654479980469
    8. '_tree' → logprob: -10.003654479980469
    9. 'marked' → logprob: -10.253654479980469
    10. 'self' → logprob: -10.378654479980469

Token 567: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20708313584327698
    2. '):
' → logprob: -1.7070831060409546
    3. 'self' → logprob: -6.207083225250244
    4. '_' → logprob: -6.707083225250244
    5. '_mark' → logprob: -7.707083225250244
    6. ')' → logprob: -7.957083225250244
    7. ',' → logprob: -7.957083225250244
    8. '(self' → logprob: -8.207082748413086
    9. ')_' → logprob: -8.457082748413086
    10. '_marks' → logprob: -8.457082748413086

Token 568: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073538897559046745
    2. ' for' → logprob: -5.007353782653809
    3. 'for' → logprob: -7.382353782653809
    4. '   ' → logprob: -12.007353782653809
    5. 'self' → logprob: -12.632353782653809
    6. '```' → logprob: -13.757353782653809
    7. ' self' → logprob: -14.132353782653809
    8. '#' → logprob: -14.382353782653809
    9. '
' → logprob: -14.382353782653809
    10. ',' → logprob: -14.382353782653809

Token 569: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.035852666944265366
    2. '       ' → logprob: -3.5358526706695557
    3. ' for' → logprob: -5.285852432250977
    4. '#' (adapté à ' #') → logprob: -7.535852432250977
    5. 'self' → logprob: -7.785852432250977
    6. 'pass' → logprob: -10.035852432250977
    7. '   ' → logprob: -11.910852432250977
    8. 'root' → logprob: -12.410852432250977
    9. '```' → logprob: -12.660852432250977
    10. 'import' → logprob: -12.660852432250977

Token 570: ' Initially' (ID: 96924)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006012460216879845
    2. '#' → logprob: -5.131012439727783
    3. 'root' → logprob: -10.506012916564941
    4. 'from' → logprob: -11.006012916564941
    5. ' for' → logprob: -11.256012916564941
    6. 'self' → logprob: -11.506012916564941
    7. 'pass' → logprob: -12.006012916564941
    8. '       ' → logprob: -12.756012916564941
    9. 'import' → logprob: -12.756012916564941
    10. 'all' → logprob: -13.506012916564941

Token 571: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.161036878824234
    2. ',' → logprob: -2.786036968231201
    3. ' for' → logprob: -3.286036968231201
    4. 'for' → logprob: -3.661036968231201
    5. 'self' → logprob: -4.036036968231201
    6. '   ' → logprob: -6.411036968231201
    7. '#' → logprob: -6.661036968231201
    8. ' self' → logprob: -7.536036968231201
    9. 'pass' → logprob: -7.536036968231201
    10. ' all' → logprob: -7.911036968231201

Token 572: ' root' (ID: 6577)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.39200344681739807
    2. 'self' → logprob: -1.3920034170150757
    3. 'root' → logprob: -3.1420035362243652
    4. 'the' → logprob: -3.5170035362243652
    5. ' node' → logprob: -6.142003536224365
    6. 'mark' → logprob: -8.392003059387207
    7. 'marked' → logprob: -9.142003059387207
    8. '1' → logprob: -9.392003059387207
    9. ' self' → logprob: -9.642003059387207
    10. ' the' → logprob: -9.892003059387207

Token 573: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7777619361877441
    2. '.mark' → logprob: -1.4027619361877441
    3. ' self' → logprob: -2.402761936187744
    4. 'self' → logprob: -2.777761936187744
    5. '.' → logprob: -2.902761936187744
    6. ' is' → logprob: -4.277761936187744
    7. '   ' → logprob: -4.277761936187744
    8. '(self' → logprob: -4.277761936187744
    9. ' marked' → logprob: -4.652761936187744
    10. ' =' → logprob: -5.027761936187744

Token 574: '(' (ID: 7)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5943530797958374
    2. ' is' → logprob: -1.0943530797958374
    3. 'self' → logprob: -2.969353199005127
    4. ' self' → logprob: -2.969353199005127
    5. '(self' → logprob: -5.844353199005127
    6. 'is' → logprob: -5.844353199005127
    7. ' has' → logprob: -6.219353199005127
    8. '           ' → logprob: -7.844353199005127
    9. ',' → logprob: -7.969353199005127
    10. ' marked' → logprob: -7.969353199005127

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6443484425544739
    2. ')' → logprob: -0.7693484425544739
    3. ' ' → logprob: -5.269348621368408
    4. '=' → logprob: -5.769348621368408
    5. 'self' → logprob: -6.769348621368408
    6. '(' → logprob: -8.01934814453125
    7. ' =' → logprob: -8.26934814453125
    8. ' is' → logprob: -8.26934814453125
    9. ',' → logprob: -8.39434814453125
    10. 'marked' → logprob: -8.51934814453125

Token 576: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047833603457547724
    2. ')is' → logprob: -8.875478744506836
    3. ')
' → logprob: -9.125478744506836
    4. ' is' → logprob: -9.375478744506836
    5. ' )' → logprob: -9.750478744506836
    6. ').' → logprob: -10.250478744506836
    7. '       ' → logprob: -11.250478744506836
    8. 'self' → logprob: -11.375478744506836
    9. '),' → logprob: -12.625478744506836
    10. '   ' → logprob: -12.625478744506836

Token 577: ' marked' (ID: 20779)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6474756002426147
    2. '       ' → logprob: -1.2724756002426147
    3. 'self' → logprob: -2.1474757194519043
    4. 'is' → logprob: -3.5224757194519043
    5. ' self' → logprob: -4.022475719451904
    6. '
' → logprob: -4.147475719451904
    7. '(self' → logprob: -5.022475719451904
    8. ' has' → logprob: -6.147475719451904
    9. ' marked' → logprob: -6.522475719451904
    10. 'marked' → logprob: -6.522475719451904

Token 578: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001562596415169537
    2. '
' → logprob: -7.376562595367432
    3. 'self' → logprob: -7.751562595367432
    4. ',' → logprob: -8.12656307220459
    5. ' self' → logprob: -9.00156307220459
    6. ' and' → logprob: -11.00156307220459
    7. '(self' → logprob: -11.00156307220459
    8. '   ' → logprob: -11.37656307220459
    9. '        
' → logprob: -11.87656307220459
    10. ' for' → logprob: -12.37656307220459

Token 579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000285530521068722
    2. 'self' → logprob: -8.375285148620605
    3. '
' → logprob: -10.125285148620605
    4. ' self' → logprob: -11.625285148620605
    5. ',' → logprob: -12.625285148620605
    6. '   ' → logprob: -13.625285148620605
    7. '        
' → logprob: -14.625285148620605
    8. ' for' → logprob: -15.375285148620605
    9. '(self' → logprob: -15.500285148620605
    10. '           ' → logprob: -15.625285148620605

Token 580: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010535058565437794
    2. ' self' → logprob: -5.13553524017334
    3. '       ' → logprob: -5.38553524017334
    4. 'for' → logprob: -12.26053524017334
    5. '   ' → logprob: -12.38553524017334
    6. ' ' → logprob: -13.76053524017334
    7. ' for' → logprob: -14.26053524017334
    8. '	self' → logprob: -14.38553524017334
    9. '```' → logprob: -15.01053524017334
    10. '
' → logprob: -15.13553524017334

Token 581: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0011546281166374683
    2. '.mark' → logprob: -7.00115442276001
    3. 'tree' → logprob: -8.626154899597168
    4. '.' → logprob: -10.126154899597168
    5. ' .' → logprob: -11.626154899597168
    6. '   ' → logprob: -12.876154899597168
    7. '	tree' → logprob: -12.876154899597168
    8. 'mark' → logprob: -13.751154899597168
    9. '.table' → logprob: -14.001154899597168
    10. '\.' → logprob: -14.251154899597168

Token 582: '.mark' (ID: 32834)
  Prédit: '.mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mark' → logprob: -2.7252845029579476e-05
    2. '.' → logprob: -10.750027656555176
    3. ' .' → logprob: -12.625027656555176
    4. '\.' → logprob: -14.625027656555176
    5. '.Mark' → logprob: -14.875027656555176
    6. 'mark' → logprob: -15.000027656555176
    7. '.mar' → logprob: -15.500027656555176
    8. '`.' → logprob: -15.750027656555176
    9. ').' → logprob: -15.875027656555176
    10. '.marker' → logprob: -16.00002670288086

Token 583: 'ed' (ID: 295)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -12.75000286102295
    3. '(
' → logprob: -15.12500286102295
    4. ' (' → logprob: -16.625003814697266
    5. '((' → logprob: -20.125003814697266
    6. '[' → logprob: -20.500003814697266
    7. 's' → logprob: -20.625003814697266
    8. '```' → logprob: -20.875003814697266
    9. '(

' → logprob: -21.125003814697266
    10. 'def' → logprob: -21.250003814697266

Token 584: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.930552313453518e-05
    2. '=' → logprob: -11.000049591064453
    3. ' =' → logprob: -11.000049591064453
    4. '=[' → logprob: -12.000049591064453
    5. ' [' → logprob: -12.250049591064453
    6. '(' → logprob: -13.250049591064453
    7. '1' → logprob: -14.125049591064453
    8. ')[' → logprob: -14.750049591064453
    9. '\[' → logprob: -14.750049591064453
    10. '[
' → logprob: -15.125049591064453

Token 585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -12.250011444091797
    3. ']' → logprob: -12.750011444091797
    4. ' ' → logprob: -12.875011444091797
    5. '][' → logprob: -14.375011444091797
    6. '(' → logprob: -14.500011444091797
    7. '
' → logprob: -15.625011444091797
    8. ')' → logprob: -16.250011444091797
    9. '   ' → logprob: -17.000011444091797
    10. '

' → logprob: -17.625011444091797

Token 586: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001375089050270617
    2. ']=' → logprob: -9.125137329101562
    3. ' ]' → logprob: -10.500137329101562
    4. 'True' → logprob: -14.875137329101562
    5. '=' → logprob: -15.125137329101562
    6. ' =' → logprob: -15.625137329101562
    7. ']
' → logprob: -15.750137329101562
    8. '=True' → logprob: -16.000137329101562
    9. '[' → logprob: -17.375137329101562
    10. '']' → logprob: -17.500137329101562

Token 587: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16031897068023682
    2. ' =' → logprob: -1.9103189706802368
    3. '=True' → logprob: -9.285319328308105
    4. 'True' → logprob: -14.535319328308105
    5. '[' → logprob: -15.035319328308105
    6. '=
' → logprob: -15.285319328308105
    7. '   ' → logprob: -15.535319328308105
    8. ']=' → logprob: -15.910319328308105
    9. ' =
' → logprob: -16.16031837463379
    10. ']' → logprob: -16.28531837463379

Token 588: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -17.751502990722656
    4. '=True' → logprob: -18.126502990722656
    5. 'False' → logprob: -18.626502990722656
    6. '1' → logprob: -20.126502990722656
    7. '[' → logprob: -20.126502990722656
    8. '
' → logprob: -20.126502990722656
    9. 'Tr' → logprob: -20.626502990722656
    10. 'T' → logprob: -20.751502990722656

Token 589: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43608683347702026
    2. '       ' → logprob: -1.061086893081665
    3. '<|end|>' → logprob: -5.186086654663086
    4. 'self' → logprob: -6.686086654663086
    5. '```' → logprob: -9.186086654663086
    6. '   ' → logprob: -9.436086654663086
    7. '
' → logprob: -9.561086654663086
    8. '	' → logprob: -9.936086654663086
    9. ' self' → logprob: -10.186086654663086
    10. '<|end|>' → logprob: -10.186086654663086

Token 590: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04752609506249428
    2. '
' → logprob: -3.2975261211395264
    3. 'self' → logprob: -4.922525882720947
    4. '<|end|>' → logprob: -7.172525882720947
    5. ' self' → logprob: -7.797525882720947
    6. '   ' → logprob: -7.797525882720947
    7. '           ' → logprob: -8.797526359558105
    8. '	' → logprob: -9.047526359558105
    9. '	self' → logprob: -9.547526359558105
    10. '        
' → logprob: -10.047526359558105

Token 591: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.034573379904031754
    2. '       ' → logprob: -3.9095733165740967
    3. ' self' → logprob: -4.284573554992676
    4. '```' → logprob: -9.284573554992676
    5. '   ' → logprob: -10.409573554992676
    6. '
' → logprob: -12.034573554992676
    7. '           ' → logprob: -12.034573554992676
    8. '	self' → logprob: -12.159573554992676
    9. ' ' → logprob: -12.659573554992676
    10. '        
' → logprob: -13.534573554992676

Token 592: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.31557726860046387
    2. '.uf' → logprob: -1.3155772686004639
    3. '.' → logprob: -7.065577507019043
    4. 'tree' → logprob: -7.690577507019043
    5. 'uf' → logprob: -7.690577507019043
    6. ' .' → logprob: -8.315577507019043
    7. '._' → logprob: -9.190577507019043
    8. '..' → logprob: -9.440577507019043
    9. '	tree' → logprob: -11.440577507019043
    10. '.
' → logprob: -11.440577507019043

Token 593: '.uf' (ID: 131293)
  Prédit: '.uf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.uf' → logprob: -2.6537622034084052e-05
    2. '.mark' → logprob: -10.87502670288086
    3. ' .' → logprob: -12.75002670288086
    4. '   ' → logprob: -14.62502670288086
    5. '.ud' → logprob: -14.62502670288086
    6. '.ub' → logprob: -14.62502670288086
    7. '.um' → logprob: -14.75002670288086
    8. '.uc' → logprob: -14.87502670288086
    9. '.uk' → logprob: -15.00002670288086
    10. '._' → logprob: -15.00002670288086

Token 594: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -2.45848218582978e-06
    2. 'parent' → logprob: -13.87500286102295
    3. '_par' → logprob: -14.00000286102295
    4. '_' → logprob: -15.00000286102295
    5. '_p' → logprob: -16.750001907348633
    6. '[_' → logprob: -17.000001907348633
    7. ' _' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '_PARENT' → logprob: -17.500001907348633
    10. 'Parent' → logprob: -17.750001907348633

Token 595: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0683535037969705e-05
    2. '=' → logprob: -11.62501049041748
    3. '1' → logprob: -14.12501049041748
    4. ' =' → logprob: -14.87501049041748
    5. '=[' → logprob: -15.12501049041748
    6. ' [' → logprob: -15.50001049041748
    7. '```' → logprob: -16.375011444091797
    8. '
' → logprob: -17.000011444091797
    9. '

' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.625011444091797

Token 596: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.800739018013701e-05
    2. '[' → logprob: -10.1250581741333
    3. ' ' → logprob: -11.6250581741333
    4. '
' → logprob: -12.3750581741333
    5. ']' → logprob: -12.8750581741333
    6. ' [' → logprob: -13.8750581741333
    7. '   ' → logprob: -15.0000581741333
    8. '(' → logprob: -15.7500581741333
    9. ')' → logprob: -16.250057220458984
    10. '```' → logprob: -16.375057220458984

Token 597: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01579268090426922
    2. '=' → logprob: -4.5157928466796875
    3. ']=' → logprob: -5.8907928466796875
    4. ' =' → logprob: -6.5157928466796875
    5. ' ]' → logprob: -7.6407928466796875
    6. ')' → logprob: -12.265792846679688
    7. '[' → logprob: -13.265792846679688
    8. ']
' → logprob: -14.515792846679688
    9. '
' → logprob: -15.140792846679688
    10. '   ' → logprob: -15.265792846679688

Token 598: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178782993927598
    2. ' =' → logprob: -5.753178596496582
    3. '=
' → logprob: -13.753178596496582
    4. '=

' → logprob: -17.6281795501709
    5. ' =
' → logprob: -17.7531795501709
    6. '   ' → logprob: -18.6281795501709
    7. ')=' → logprob: -18.7531795501709
    8. '[' → logprob: -18.8781795501709
    9. ' ' → logprob: -19.0031795501709
    10. '	' → logprob: -19.1281795501709

Token 599: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '```' → logprob: -20.750001907348633
    5. '`' → logprob: -21.500001907348633
    6. '  ' → logprob: -21.625001907348633
    7. '[' → logprob: -21.875001907348633
    8. '
' → logprob: -22.500001907348633
    9. ' ' → logprob: -22.875001907348633
    10. '۱' → logprob: -23.312501907348633

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.5000057220459
    4. '۱' → logprob: -19.6250057220459
    5. '
' → logprob: -19.7500057220459
    6. '[' → logprob: -19.7500057220459
    7. '```' → logprob: -19.8750057220459
    8. '  ' → logprob: -20.9375057220459
    9. '１' → logprob: -20.9375057220459
    10. '`' → logprob: -21.1875057220459

Token 601: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.972596287727356
    2. '       ' → logprob: -0.972596287727356
    3. '<|end|>' → logprob: -1.472596287727356
    4. '   ' → logprob: -4.722596168518066
    5. ' for' → logprob: -6.222596168518066
    6. 'for' → logprob: -6.972596168518066
    7. '<|end|>' → logprob: -7.347596168518066
    8. '```' → logprob: -7.472596168518066
    9. '  
' → logprob: -8.222596168518066
    10. '	' → logprob: -8.722596168518066

Token 602: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22677500545978546
    2. '<|end|>' → logprob: -1.851775050163269
    3. '       ' → logprob: -3.8517749309539795
    4. ' for' → logprob: -4.601775169372559
    5. 'for' → logprob: -4.851775169372559
    6. ' ' → logprob: -5.976775169372559
    7. '```' → logprob: -6.351775169372559
    8. 'def' → logprob: -7.476775169372559
    9. '<|end|>' → logprob: -7.476775169372559
    10. '  ' → logprob: -7.851775169372559

Token 603: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07417977601289749
    2. '   ' → logprob: -2.9491798877716064
    3. ' def' → logprob: -4.074179649353027
    4. 'for' → logprob: -6.699179649353027
    5. ' for' → logprob: -7.699179649353027
    6. '	def' → logprob: -8.199179649353027
    7. '```' → logprob: -10.074179649353027
    8. '       ' → logprob: -10.074179649353027
    9. ' ' → logprob: -10.949179649353027
    10. '<|end|>' → logprob: -11.449179649353027

Token 604: ' solve' (ID: 17722)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -1.0265891551971436
    2. 'run' → logprob: -1.2765891551971436
    3. ' process' → logprob: -1.6515891551971436
    4. ' run' → logprob: -2.4015891551971436
    5. 'solve' → logprob: -2.7765891551971436
    6. 'def' → logprob: -4.776589393615723
    7. ' solve' → logprob: -5.026589393615723
    8. ' def' → logprob: -5.901589393615723
    9. 'execute' → logprob: -8.401589393615723
    10. '   ' → logprob: -9.526589393615723

Token 605: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.77627644513268e-06
    2. '(' → logprob: -12.250008583068848
    3. ' (' → logprob: -12.750008583068848
    4. '   ' → logprob: -14.875008583068848
    5. 'self' → logprob: -15.500008583068848
    6. '():
' → logprob: -15.875008583068848
    7. '():' → logprob: -16.250009536743164
    8. '       ' → logprob: -16.500009536743164
    9. '(
' → logprob: -16.750009536743164
    10. '(sel' → logprob: -16.875009536743164

Token 606: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5000364780426025
    2. '):
' → logprob: -1.0000364780426025
    3. 'self' → logprob: -3.8750364780426025
    4. ',' → logprob: -5.625036239624023
    5. '(self' → logprob: -7.500036239624023
    6. ')' → logprob: -8.500036239624023
    7. '       ' → logprob: -8.750036239624023
    8. '   ' → logprob: -9.000036239624023
    9. '):
' → logprob: -9.000036239624023
    10. '
' → logprob: -10.000036239624023

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002353640884393826
    2. ' for' → logprob: -9.000235557556152
    3. '
' → logprob: -9.500235557556152
    4. 'for' → logprob: -10.500235557556152
    5. '   ' → logprob: -12.250235557556152
    6. '```' → logprob: -12.500235557556152
    7. '        
' → logprob: -14.875235557556152
    8. '           ' → logprob: -16.250234603881836
    9. 'self' → logprob: -16.375234603881836
    10. ',' → logprob: -16.750234603881836

Token 608: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4225999116897583
    2. ' for' → logprob: -1.7975999116897583
    3. 'for' → logprob: -1.7975999116897583
    4. 'self' (adapté à ' self') → logprob: -4.547599792480469
    5. '
' → logprob: -7.047599792480469
    6. ' self' → logprob: -7.047599792480469
    7. '   ' → logprob: -7.672599792480469
    8. 'result' → logprob: -8.297599792480469
    9. 'output' → logprob: -9.422599792480469
    10. '```' → logprob: -10.172599792480469

Token 609: '.initialize' (ID: 49492)
  Prédit: '.initialize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initialize' → logprob: -0.026849733665585518
    2. '.' → logprob: -4.651849746704102
    3. '   ' → logprob: -4.776849746704102
    4. '.output' → logprob: -5.151849746704102
    5. 'initialize' → logprob: -7.401849746704102
    6. '.mark' → logprob: -7.401849746704102
    7. '._' → logprob: -7.526849746704102
    8. '_initialize' → logprob: -8.401849746704102
    9. ' .' → logprob: -8.776849746704102
    10. '_output' → logprob: -9.401849746704102

Token 610: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022194819524884224
    2. '
' → logprob: -3.8971948623657227
    3. '()
' → logprob: -7.397194862365723
    4. 'for' → logprob: -7.522194862365723
    5. ' for' → logprob: -8.272194862365723
    6. '()' → logprob: -8.897194862365723
    7. '   ' → logprob: -9.897194862365723
    8. '        
' → logprob: -11.147194862365723
    9. '<|end|>' → logprob: -11.647194862365723
    10. '```' → logprob: -11.772194862365723

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14222243428230286
    2. '
' → logprob: -2.1422224044799805
    3. ' for' → logprob: -4.3922224044799805
    4. 'for' → logprob: -6.5172224044799805
    5. '   ' → logprob: -7.6422224044799805
    6. '        
' → logprob: -7.6422224044799805
    7. '  
' → logprob: -9.14222240447998
    8. '```' → logprob: -9.89222240447998
    9. '    
' → logprob: -10.01722240447998
    10. '<|end|>' → logprob: -10.14222240447998

Token 612: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03873061388731003
    2. ' for' → logprob: -3.2887306213378906
    3. '       ' → logprob: -7.288730621337891
    4. '
' → logprob: -13.03873062133789
    5. '   ' → logprob: -13.16373062133789
    6. '	for' → logprob: -13.66373062133789
    7. 'result' → logprob: -15.78873062133789
    8. '```' → logprob: -16.03873062133789
    9. 'output' → logprob: -16.41373062133789
    10. 'results' → logprob: -16.66373062133789

Token 613: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.062024593353271484
    2. ' op' → logprob: -2.8120245933532715
    3. '(op' → logprob: -9.93702507019043
    4. '   ' → logprob: -12.43702507019043
    5. 'cmd' → logprob: -13.31202507019043
    6. '	op' → logprob: -13.43702507019043
    7. 'opt' → logprob: -15.06202507019043
    8. 'opr' → logprob: -15.18702507019043
    9. '_op' → logprob: -15.93702507019043
    10. 'opcode' → logprob: -15.93702507019043

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43846753239631653
    2. ' in' → logprob: -1.3134675025939941
    3. '[' → logprob: -2.813467502593994
    4. ' ,' → logprob: -4.063467502593994
    5. 'in' → logprob: -5.813467502593994
    6. '_type' → logprob: -6.063467502593994
    7. '_' → logprob: -6.563467502593994
    8. '_,' → logprob: -7.438467502593994
    9. ' ' → logprob: -7.688467502593994
    10. ' (' → logprob: -8.438467979431152

Token 615: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005715019651688635
    2. ' v' → logprob: -7.5005717277526855
    3. 'x' → logprob: -11.750571250915527
    4. 'node' → logprob: -12.375571250915527
    5. 'val' → logprob: -12.500571250915527
    6. 'value' → logprob: -13.250571250915527
    7. 'arg' → logprob: -14.625571250915527
    8. '   ' → logprob: -15.375571250915527
    9. ' node' → logprob: -16.625572204589844
    10. ' ' → logprob: -16.625572204589844

Token 616: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06995032727718353
    2. 'in' → logprob: -2.6949503421783447
    3. 'v' → logprob: -11.944950103759766
    4. '	in' → logprob: -13.069950103759766
    5. '   ' → logprob: -13.569950103759766
    6. '       ' → logprob: -13.819950103759766
    7. ' ' → logprob: -14.819950103759766
    8. ')' → logprob: -14.819950103759766
    9. ',' → logprob: -15.069950103759766
    10. '  ' → logprob: -15.194950103759766

Token 617: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0012733275070786476
    2. ' self' → logprob: -6.876273155212402
    3. 'op' → logprob: -8.376273155212402
    4. '(self' → logprob: -11.751273155212402
    5. '[self' → logprob: -14.251273155212402
    6. '
' → logprob: -15.126273155212402
    7. '	self' → logprob: -15.251273155212402
    8. '   ' → logprob: -15.751273155212402
    9. 'ops' → logprob: -15.751273155212402
    10. '[' → logprob: -15.876273155212402

Token 618: '.operations' (ID: 176416)
  Prédit: '.operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.operations' → logprob: -0.2423325479030609
    2. '.tree' → logprob: -2.4923324584960938
    3. 'operations' → logprob: -2.7423324584960938
    4. '.ops' → logprob: -3.8673324584960938
    5. '.' → logprob: -4.117332458496094
    6. 'tree' → logprob: -5.367332458496094
    7. 'ops' → logprob: -5.617332458496094
    8. 'op' → logprob: -5.617332458496094
    9. '[' → logprob: -5.617332458496094
    10. '_operations' → logprob: -6.242332458496094

Token 619: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023256894201040268
    2. ':
' → logprob: -3.773256778717041
    3. '):
' → logprob: -12.6482572555542
    4. ':
' → logprob: -13.1482572555542
    5. ' :' → logprob: -13.5232572555542
    6. ':

' → logprob: -13.6482572555542
    7. '):' → logprob: -13.6482572555542
    8. '       ' → logprob: -14.1482572555542
    9. ',' → logprob: -14.7732572555542
    10. '   ' → logprob: -14.8982572555542

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010469821281731129
    2. '       ' → logprob: -5.260469913482666
    3. '<|end|>' → logprob: -6.760469913482666
    4. ' if' → logprob: -7.135469913482666
    5. '```' → logprob: -7.135469913482666
    6. '   ' → logprob: -7.385469913482666
    7. ':' → logprob: -8.010469436645508
    8. ':
' → logprob: -8.385469436645508
    9. ' ' → logprob: -8.635469436645508
    10. '            
' → logprob: -8.885469436645508

Token 621: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5976987481117249
    2. ' if' → logprob: -0.8476987481117249
    3. '           ' → logprob: -3.84769868850708
    4. '   ' → logprob: -8.847699165344238
    5. '               ' → logprob: -10.347699165344238
    6. '       ' → logprob: -11.097699165344238
    7. '  ' → logprob: -13.597699165344238
    8. '    ' → logprob: -13.847699165344238
    9. ' ' → logprob: -13.972699165344238
    10. '	if' → logprob: -14.597699165344238

Token 622: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.0021860685665160418
    2. 'op' → logprob: -6.127186298370361
    3. '(op' → logprob: -14.127185821533203
    4. '	op' → logprob: -15.752185821533203
    5. '_op' → logprob: -17.377185821533203
    6. '.op' → logprob: -17.377185821533203
    7. ' ' → logprob: -17.877185821533203
    8. 'space' → logprob: -18.252185821533203
    9. ' ' → logprob: -18.502185821533203
    10. ' оп' → logprob: -18.627185821533203

Token 623: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026996629312634468
    2. '==' → logprob: -3.651996612548828
    3. '=' → logprob: -7.651996612548828
    4. ' =' → logprob: -9.026996612548828
    5. '[' → logprob: -10.026996612548828
    6. ' ===' → logprob: -11.026996612548828
    7. ' ' → logprob: -11.651996612548828
    8. ' =='' → logprob: -11.901996612548828
    9. '===' → logprob: -12.151996612548828
    10. '=='' → logprob: -12.151996612548828

Token 624: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024844646453857422
    2. '"' → logprob: -3.7748446464538574
    3. ' '' → logprob: -6.774844646453857
    4. ''M' → logprob: -8.399845123291016
    5. ''m' → logprob: -9.149845123291016
    6. ' "' → logprob: -10.399845123291016
    7. ''A' → logprob: -10.774845123291016
    8. ''a' → logprob: -11.274845123291016
    9. ''I' → logprob: -11.774845123291016
    10. '`' → logprob: -11.899845123291016

Token 625: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018390359356999397
    2. 'A' → logprob: -5.01839017868042
    3. 'mark' → logprob: -5.51839017868042
    4. ''M' → logprob: -6.26839017868042
    5. ''' → logprob: -6.89339017868042
    6. 'Mark' → logprob: -7.01839017868042
    7. 'C' → logprob: -7.39339017868042
    8. 'P' → logprob: -7.64339017868042
    9. 'Q' → logprob: -7.89339017868042
    10. '"M' → logprob: -8.143390655517578

Token 626: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07862932235002518
    2. '':
' → logprob: -2.9536292552948
    3. 'ark' → logprob: -3.9536292552948
    4. ''' → logprob: -6.453629493713379
    5. '':
' → logprob: -6.453629493713379
    6. 'ARK' → logprob: -7.078629493713379
    7. 'a' → logprob: -8.703629493713379
    8. '':

' → logprob: -10.078629493713379
    9. ''):
' → logprob: -11.328629493713379
    10. 'A' → logprob: -11.328629493713379

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004000753629952669
    2. '           ' → logprob: -6.254000663757324
    3. '(self' → logprob: -7.504000663757324
    4. ':
' → logprob: -7.879000663757324
    5. ' self' → logprob: -8.129000663757324
    6. ':' → logprob: -8.379000663757324
    7. '                
' → logprob: -8.629000663757324
    8. 'self' → logprob: -9.254000663757324
    9. '              ' → logprob: -9.504000663757324
    10. '                   ' → logprob: -10.129000663757324

Token 628: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25208938121795654
    2. ' self' → logprob: -1.5020893812179565
    3. '               ' → logprob: -8.752089500427246
    4. '                   ' → logprob: -14.002089500427246
    5. '	self' → logprob: -14.627089500427246
    6. '   ' → logprob: -14.752089500427246
    7. '           ' → logprob: -15.002089500427246
    8. '
' → logprob: -16.25208854675293
    9. ' ' → logprob: -17.00208854675293
    10. ' ' → logprob: -17.37708854675293

Token 629: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.006982237100601196
    2. '.mark' → logprob: -5.381982326507568
    3. 'tree' → logprob: -6.256982326507568
    4. '.' → logprob: -7.881982326507568
    5. ' .' → logprob: -10.75698184967041
    6. 'mark' → logprob: -11.63198184967041
    7. '	tree' → logprob: -11.75698184967041
    8. ' tree' → logprob: -12.38198184967041
    9. '   ' → logprob: -12.50698184967041
    10. 'ree' → logprob: -12.63198184967041

Token 630: '.mark' (ID: 32834)
  Prédit: '.mark'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mark' → logprob: -0.00020663968462031335
    2. '.' → logprob: -8.50020694732666
    3. ' .' → logprob: -13.12520694732666
    4. 'mark' → logprob: -15.00020694732666
    5. '.mar' → logprob: -15.00020694732666
    6. '.Mark' → logprob: -16.375205993652344
    7. '.marker' → logprob: -16.375205993652344
    8. '.m' → logprob: -16.500205993652344
    9. '\.' → logprob: -17.625205993652344
    10. '.
' → logprob: -17.875205993652344

Token 631: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -10.750022888183594
    3. 'ed' → logprob: -14.000022888183594
    4. ' (' → logprob: -14.500022888183594
    5. '((' → logprob: -17.125022888183594
    6. '(
' → logprob: -17.875022888183594
    7. '(k' → logprob: -17.875022888183594
    8. ' ' → logprob: -18.750022888183594
    9. 'ing' → logprob: -19.250022888183594
    10. 'v' → logprob: -19.375022888183594

Token 632: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865923896431923
    2. ')
' → logprob: -3.048659324645996
    3. '()' → logprob: -10.173659324645996
    4. '())' → logprob: -11.173659324645996
    5. '())
' → logprob: -12.173659324645996
    6. ')
' → logprob: -12.173659324645996
    7. '()
' → logprob: -12.298659324645996
    8. ')

' → logprob: -13.048659324645996
    9. ' )' → logprob: -14.298659324645996
    10. '))' → logprob: -14.923659324645996

Token 633: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031850787345319986
    2. 'elif' → logprob: -6.003185272216797
    3. '
' → logprob: -8.128185272216797
    4. ' elif' → logprob: -9.003185272216797
    5. '```' → logprob: -9.253185272216797
    6. '<|end|>' → logprob: -9.503185272216797
    7. 'else' → logprob: -9.753185272216797
    8. '               ' → logprob: -10.628185272216797
    9. ' else' → logprob: -11.378185272216797
    10. '            
' → logprob: -12.003185272216797

Token 634: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.046440593898296356
    2. '           ' → logprob: -3.796440601348877
    3. 'else' (adapté à ' else') → logprob: -3.796440601348877
    4. ' elif' → logprob: -7.671440601348877
    5. ' else' → logprob: -11.546440124511719
    6. '	elif' → logprob: -13.921440124511719
    7. '               ' → logprob: -14.796440124511719
    8. 'elseif' → logprob: -15.171440124511719
    9. '		' → logprob: -15.671440124511719
    10. '       ' → logprob: -16.54644012451172

Token 635: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3655690848827362
    2. ' if' → logprob: -2.1155691146850586
    3. ':
' → logprob: -2.4905691146850586
    4. '           ' → logprob: -2.6155691146850586
    5. ' :' → logprob: -4.240569114685059
    6. 'if' → logprob: -5.240569114685059
    7. ' :
' → logprob: -6.490569114685059
    8. ' ' → logprob: -6.615569114685059
    9. ' (' → logprob: -6.740569114685059
    10. '            ' → logprob: -6.865569114685059

Token 636: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17260132730007172
    2. '           ' → logprob: -1.922601342201233
    3. ' self' → logprob: -4.922601222991943
    4. ' ' → logprob: -6.797601222991943
    5. 'self' → logprob: -7.172601222991943
    6. '
' → logprob: -7.547601222991943
    7. '   ' → logprob: -7.672601222991943
    8. '       ' → logprob: -8.547601699829102
    9. '            ' → logprob: -8.547601699829102
    10. ' return' → logprob: -8.672601699829102

Token 637: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7581120729446411
    2. '               ' → logprob: -2.3831119537353516
    3. '           ' → logprob: -2.5081119537353516
    4. 'res' → logprob: -2.7581119537353516
    5. '#' → logprob: -3.1331119537353516
    6. 'r' → logprob: -3.1331119537353516
    7. 'ans' → logprob: -3.2581119537353516
    8. 'result' → logprob: -3.3831119537353516
    9. ' self' → logprob: -4.008111953735352
    10. ' #' → logprob: -4.008111953735352

Token 638: ' op' (ID: 991)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.08969353139400482
    2. ''' → logprob: -3.089693546295166
    3. ' Q' → logprob: -3.964693546295166
    4. '           ' → logprob: -5.964693546295166
    5. ' '' → logprob: -5.964693546295166
    6. ' op' → logprob: -6.339693546295166
    7. 'op' → logprob: -6.339693546295166
    8. 'if' → logprob: -6.339693546295166
    9. ' ' → logprob: -6.714693546295166
    10. ':' → logprob: -6.839693546295166

Token 639: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5760202407836914
    2. '==' → logprob: -0.8260202407836914
    3. '=' → logprob: -10.076020240783691
    4. '=='' → logprob: -10.451020240783691
    5. ' =' → logprob: -12.451020240783691
    6. '===' → logprob: -12.826020240783691
    7. '==
' → logprob: -13.701020240783691
    8. '=="' → logprob: -14.201020240783691
    9. ' =='' → logprob: -15.451020240783691
    10. ')==' → logprob: -15.451020240783691

Token 640: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0124862315133214
    2. 'Q' → logprob: -5.137486457824707
    3. ' '' → logprob: -5.512486457824707
    4. ' Q' → logprob: -6.512486457824707
    5. ' ' → logprob: -8.387486457824707
    6. ''q' → logprob: -8.637486457824707
    7. ''S' → logprob: -9.137486457824707
    8. '"' → logprob: -9.262486457824707
    9. ''U' → logprob: -9.262486457824707
    10. '   ' → logprob: -9.887486457824707

Token 641: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0006819340633228421
    2. ''' → logprob: -7.3756818771362305
    3. ' Q' → logprob: -10.37568187713623
    4. 'F' → logprob: -12.00068187713623
    5. ''q' → logprob: -12.37568187713623
    6. 'A' → logprob: -13.00068187713623
    7. '"' → logprob: -13.12568187713623
    8. 'q' → logprob: -13.37568187713623
    9. ''?' → logprob: -13.37568187713623
    10. 'S' → logprob: -14.25068187713623

Token 642: ''
' (ID: 2207)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8845946192741394
    2. ':
' → logprob: -2.009594678878784
    3. ''' → logprob: -2.259594678878784
    4. '):
' → logprob: -2.509594678878784
    5. ')' → logprob: -2.634594678878784
    6. '':
' → logprob: -3.009594678878784
    7. ')
' → logprob: -3.134594678878784
    8. ''
' → logprob: -3.259594678878784
    9. ''):
' → logprob: -4.134594440460205
    10. '           ' → logprob: -4.259594440460205

Token 643: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21046830713748932
    2. 'result' → logprob: -2.710468292236328
    3. '           ' → logprob: -3.335468292236328
    4. ' result' → logprob: -3.960468292236328
    5. 'res' → logprob: -4.085468292236328
    6. 'answer' → logprob: -4.460468292236328
    7. ' res' → logprob: -4.585468292236328
    8. 'self' → logprob: -4.835468292236328
    9. ' self' → logprob: -5.210468292236328
    10. 'print' → logprob: -5.335468292236328

Token 644: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.7373197078704834
    2. 'ans' → logprob: -1.7373197078704834
    3. 'self' → logprob: -1.8623197078704834
    4. ' res' → logprob: -2.1123197078704834
    5. ' ans' → logprob: -3.6123197078704834
    6. ' self' → logprob: -3.6123197078704834
    7. 'ancestor' → logprob: -5.2373199462890625
    8. 'nearest' → logprob: -5.9873199462890625
    9. 'result' → logprob: -6.1123199462890625
    10. ' nearest' → logprob: -6.7373199462890625

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196948140859604
    2. '=' → logprob: -2.811969518661499
    3. '=self' → logprob: -14.686969757080078
    4. ' ' → logprob: -14.811969757080078
    5. '=int' → logprob: -15.936969757080078
    6. 's' → logprob: -16.061969757080078
    7. '   ' → logprob: -16.186969757080078
    8. '=_' → logprob: -16.311969757080078
    9. ',' → logprob: -16.811969757080078
    10. '  ' → logprob: -16.936969757080078

Token 646: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02975974604487419
    2. ' self' → logprob: -3.529759645462036
    3. '               ' → logprob: -11.779759407043457
    4. '                   ' → logprob: -13.904759407043457
    5. '(self' → logprob: -14.654759407043457
    6. '
' → logprob: -16.154760360717773
    7. '[self' → logprob: -17.029760360717773
    8. '=self' → logprob: -17.404760360717773
    9. '	self' → logprob: -18.154760360717773
    10. '           ' → logprob: -18.654760360717773

Token 647: '.tree' (ID: 49211)
  Prédit: '.tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tree' → logprob: -0.0007260137936100364
    2. 'tree' → logprob: -7.250726222991943
    3. '.' → logprob: -11.500725746154785
    4. '	tree' → logprob: -13.250725746154785
    5. ' .' → logprob: -13.625725746154785
    6. '.output' → logprob: -14.625725746154785
    7. ' tree' → logprob: -14.750725746154785
    8. '(tree' → logprob: -14.750725746154785
    9. '.query' → logprob: -14.875725746154785
    10. '   ' → logprob: -15.500725746154785

Token 648: '.query' (ID: 7608)
  Prédit: '.query'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.query' → logprob: -1.3425219549390022e-05
    2. 'query' → logprob: -11.25001335144043
    3. '.' → logprob: -15.12501335144043
    4. '.find' → logprob: -17.87501335144043
    5. ' .' → logprob: -18.00001335144043
    6. ' query' → logprob: -18.12501335144043
    7. '	query' → logprob: -18.37501335144043
    8. '.question' → logprob: -18.87501335144043
    9. '.mark' → logprob: -19.00001335144043
    10. '=query' → logprob: -19.12501335144043

Token 649: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -2.5107177862082608e-05
    2. '(' → logprob: -10.625024795532227
    3. 'v' → logprob: -14.625024795532227
    4. ' (' → logprob: -16.125024795532227
    5. '(res' → logprob: -16.125024795532227
    6. '(
' → logprob: -16.875024795532227
    7. '((' → logprob: -17.750024795532227
    8. '[v' → logprob: -18.750024795532227
    9. '```' → logprob: -18.875024795532227
    10. '
' → logprob: -19.625024795532227

Token 650: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023483289405703545
    2. ')' → logprob: -3.7734832763671875
    3. '               ' → logprob: -8.773483276367188
    4. ')
' → logprob: -9.523483276367188
    5. '           ' → logprob: -11.773483276367188
    6. ')

' → logprob: -13.773483276367188
    7. '                   ' → logprob: -14.648483276367188
    8. ' )
' → logprob: -15.523483276367188
    9. '                ' → logprob: -16.148483276367188
    10. '       ' → logprob: -16.398483276367188

Token 651: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12918271124362946
    2. '               ' → logprob: -2.254182815551758
    3. 'self' → logprob: -4.379182815551758
    4. ' self' → logprob: -6.254182815551758
    5. '(self' → logprob: -7.254182815551758
    6. '                   ' → logprob: -8.504182815551758
    7. '```' → logprob: -8.879182815551758
    8. '[self' → logprob: -9.129182815551758
    9. '<|end|>' → logprob: -9.129182815551758
    10. '
' → logprob: -9.129182815551758

Token 652: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0033054545056074858
    2. ' self' → logprob: -5.753305435180664
    3. '               ' → logprob: -9.003305435180664
    4. '                   ' → logprob: -12.753305435180664
    5. '	self' → logprob: -13.878305435180664
    6. '           ' → logprob: -14.503305435180664
    7. '
' → logprob: -15.878305435180664
    8. '   ' → logprob: -17.253305435180664
    9. '(self' → logprob: -17.253305435180664
    10. '=self' → logprob: -17.878305435180664

Token 653: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.00017076305812224746
    2. 'output' → logprob: -9.000170707702637
    3. '.' → logprob: -10.125170707702637
    4. '.user' → logprob: -12.750170707702637
    5. '._' → logprob: -13.375170707702637
    6. '```' → logprob: -14.125170707702637
    7. '
' → logprob: -14.625170707702637
    8. '.
' → logprob: -14.750170707702637
    9. '_output' → logprob: -15.375170707702637
    10. '`.' → logprob: -15.625170707702637

Token 654: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.537868779967539e-06
    2. '_s' → logprob: -12.000008583068848
    3. '=_' → logprob: -14.875008583068848
    4. 's' → logprob: -15.500008583068848
    5. ')_' → logprob: -15.750008583068848
    6. 'sum' → logprob: -16.12500762939453
    7. '##_' → logprob: -16.12500762939453
    8. '\' → logprob: -16.25000762939453
    9. '._' → logprob: -16.25000762939453
    10. '.append' → logprob: -16.50000762939453

Token 655: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07891347259283066
    2. ' +=' → logprob: -2.578913450241089
    3. '+' → logprob: -11.703913688659668
    4. ']+=' → logprob: -11.703913688659668
    5. ' ^=' → logprob: -12.578913688659668
    6. '+=(' → logprob: -14.078913688659668
    7. '=' → logprob: -14.453913688659668
    8. '^' → logprob: -14.703913688659668
    9. '+="' → logprob: -14.828913688659668
    10. ' ' → logprob: -14.953913688659668

Token 656: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00015860427811276168
    2. ' res' → logprob: -8.750158309936523
    3. 'r' → logprob: -18.000158309936523
    4. '
' → logprob: -18.625158309936523
    5. 'int' → logprob: -18.625158309936523
    6. 're' → logprob: -19.000158309936523
    7. '(res' → logprob: -19.875158309936523
    8. '	res' → logprob: -20.625158309936523
    9. ' ' → logprob: -20.750158309936523
    10. ' ' → logprob: -20.875158309936523

Token 657: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03013342060148716
    2. '<|end|>' → logprob: -3.5301334857940674
    3. '\n' → logprob: -9.030133247375488
    4. '<|end|>' → logprob: -9.530133247375488
    5. '
' → logprob: -9.780133247375488
    6. ' 
' → logprob: -10.405133247375488
    7. '  
' → logprob: -10.905133247375488
    8. 'newline' → logprob: -11.155133247375488
    9. '    
' → logprob: -11.405133247375488
    10. '```' → logprob: -11.530133247375488

Token 658: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12628363072872162
    2. 'return' (adapté à ' return') → logprob: -2.751283645629883
    3. '<|end|>' → logprob: -3.126283645629883
    4. '   ' → logprob: -5.251283645629883
    5. ' return' → logprob: -6.626283645629883
    6. 'def' → logprob: -6.626283645629883
    7. '
' → logprob: -6.626283645629883
    8. '	return' → logprob: -7.126283645629883
    9. '	' → logprob: -7.876283645629883
    10. '```' → logprob: -9.251283645629883

Token 660: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889111340045929
    2. ' self' → logprob: -2.5788910388946533
    3. 'str' → logprob: -13.703890800476074
    4. ' str' → logprob: -16.45389175415039
    5. '   ' → logprob: -16.95389175415039
    6. '(self' → logprob: -17.20389175415039
    7. ' ' → logprob: -17.32889175415039
    8. '	self' → logprob: -17.32889175415039
    9. ' ' → logprob: -17.57889175415039
    10. '
' → logprob: -18.95389175415039

Token 661: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0028633661568164825
    2. '<|end|>' → logprob: -6.37786340713501
    3. 'output' → logprob: -6.87786340713501
    4. '.' → logprob: -10.252862930297852
    5. '_output' → logprob: -10.502862930297852
    6. '<|end|>' → logprob: -10.627862930297852
    7. '$output' → logprob: -11.377862930297852
    8. '	output' → logprob: -11.627862930297852
    9. '
' → logprob: -12.252862930297852
    10. '.outputs' → logprob: -12.252862930297852

Token 662: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.309382373117842e-05
    2. '_s' → logprob: -10.500033378601074
    3. '_' → logprob: -12.750033378601074
    4. ' _' → logprob: -13.875033378601074
    5. '_put' → logprob: -13.875033378601074
    6. '_output' → logprob: -15.625033378601074
    7. '__' → logprob: -15.875033378601074
    8. '_val' → logprob: -17.125032424926758
    9. '_set' → logprob: -17.375032424926758
    10. '\' → logprob: -17.750032424926758

Token 663: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026621423661708832
    2. 'import' → logprob: -3.9016213417053223
    3. 'if' → logprob: -5.651621341705322
    4. '<|end|>' → logprob: -7.026621341705322
    5. '```' → logprob: -7.276621341705322
    6. '#' → logprob: -7.526621341705322
    7. '
' → logprob: -8.15162181854248
    8. '   ' → logprob: -10.15162181854248
    9. ' def' → logprob: -10.52662181854248
    10. '<|end|>' → logprob: -11.27662181854248

Token 664: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031278617680072784
    2. 'if' → logprob: -3.531278610229492
    3. 'import' → logprob: -6.656278610229492
    4. '#' → logprob: -9.031278610229492
    5. '```' → logprob: -9.281278610229492
    6. ' if' → logprob: -11.531278610229492
    7. '<|end|>' → logprob: -11.656278610229492
    8. ' def' → logprob: -12.531278610229492
    9. 'from' → logprob: -13.156278610229492
    10. '   ' → logprob: -13.906278610229492

Token 665: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.021252647042274475
    2. ' def' → logprob: -4.146252632141113
    3. 'def' → logprob: -6.521252632141113
    4. ' process' → logprob: -6.646252632141113
    5. ' run' → logprob: -7.146252632141113
    6. ' __' → logprob: -7.146252632141113
    7. 'main' → logprob: -7.521252632141113
    8. ' solve' → logprob: -9.146252632141113
    9. '__' → logprob: -9.646252632141113
    10. ' input' → logprob: -10.396252632141113

Token 666: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.2576454335358e-05
    2. '():
' → logprob: -9.375092506408691
    3. ' ():' → logprob: -11.875092506408691
    4. '()' → logprob: -14.375092506408691
    5. '():
' → logprob: -15.875092506408691
    6. ':' → logprob: -17.375093460083008
    7. '(' → logprob: -18.125093460083008
    8. '():

' → logprob: -18.875093460083008
    9. '_' → logprob: -19.750093460083008
    10. '()>' → logprob: -20.250093460083008

Token 667: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0025143080856651068
    2. 'import' → logprob: -6.377514362335205
    3. '   ' → logprob: -7.377514362335205
    4. ' input' → logprob: -8.752513885498047
    5. '	import' → logprob: -10.627513885498047
    6. '```' → logprob: -12.752513885498047
    7. ' from' → logprob: -13.877513885498047
    8. 'input' → logprob: -15.752513885498047
    9. '   ' → logprob: -16.127513885498047
    10. ' imports' → logprob: -16.502513885498047

Token 668: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.00672211404889822
    2. ' import' → logprob: -5.0067219734191895
    3. 'input' → logprob: -12.006722450256348
    4. '   ' → logprob: -14.756722450256348
    5. 'from' → logprob: -15.881722450256348
    6. ' input' → logprob: -16.75672149658203
    7. '	import' → logprob: -18.25672149658203
    8. '```' → logprob: -19.13172149658203
    9. 'def' → logprob: -20.13172149658203
    10. ' ' → logprob: -20.75672149658203

Token 669: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.493430894101039e-05
    2. ' sys' → logprob: -9.500075340270996
    3. '=sys' → logprob: -20.25007438659668
    4. '	sys' → logprob: -21.62507438659668
    5. 'io' → logprob: -21.87507438659668
    6. '_sys' → logprob: -22.12507438659668
    7. '(sys' → logprob: -22.62507438659668
    8. 'stdin' → logprob: -23.62507438659668
    9. '.sys' → logprob: -24.12507438659668
    10. '
' → logprob: -24.87507438659668

Token 670: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3384178578853607
    2. ' input' → logprob: -2.2134177684783936
    3. 'input' → logprob: -2.3384177684783936
    4. '   ' → logprob: -2.5884177684783936
    5. '    
' → logprob: -6.088418006896973
    6. '	input' → logprob: -6.088418006896973
    7. ' lines' → logprob: -7.213418006896973
    8. '_input' → logprob: -7.588418006896973
    9. ',input' → logprob: -9.838418006896973
    10. '	lines' → logprob: -10.088418006896973

Token 671: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47643786668777466
    2. 'input' → logprob: -0.9764378666877747
    3. '   ' → logprob: -6.101438045501709
    4. ' lines' → logprob: -10.10143756866455
    5. '_input' → logprob: -10.22643756866455
    6. '	input' → logprob: -10.47643756866455
    7. 'lines' → logprob: -12.35143756866455
    8. '```' → logprob: -13.10143756866455
    9. 'def' → logprob: -13.47643756866455
    10. ',input' → logprob: -14.22643756866455

Token 672: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.02333678863942623
    2. ' input' → logprob: -3.773336887359619
    3. '   ' → logprob: -9.398336410522461
    4. '
' → logprob: -12.648336410522461
    5. 'lines' → logprob: -13.273336410522461
    6. 'def' → logprob: -13.398336410522461
    7. '_input' → logprob: -14.273336410522461
    8. 'data' → logprob: -15.148336410522461
    9. ' lines' → logprob: -15.148336410522461
    10. '    
' → logprob: -15.398336410522461

Token 673: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.006084510590881109
    2. '_' → logprob: -5.131084442138672
    3. '()' → logprob: -9.131084442138672
    4. '_line' → logprob: -11.006084442138672
    5. '_data' → logprob: -12.006084442138672
    6. ' =' → logprob: -12.381084442138672
    7. 'lines' → logprob: -12.756084442138672
    8. '=' → logprob: -13.131084442138672
    9. ' _' → logprob: -13.256084442138672
    10. '_stream' → logprob: -13.506084442138672

Token 674: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022564470767975
    2. ' =' → logprob: -1.9102256298065186
    3. '   ' → logprob: -14.160225868225098
    4. '=
' → logprob: -15.410225868225098
    5. '=sys' → logprob: -15.660225868225098
    6. '＝' → logprob: -15.785225868225098
    7. '=line' → logprob: -16.41022491455078
    8. '=input' → logprob: -16.66022491455078
    9. '=open' → logprob: -17.16022491455078
    10. ' =
' → logprob: -17.28522491455078

Token 675: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0061429147608578205
    2. '(iter' → logprob: -5.256143093109131
    3. ' iter' → logprob: -7.006143093109131
    4. 'map' → logprob: -13.756142616271973
    5. 'sys' → logprob: -13.881142616271973
    6. '(sys' → logprob: -15.756142616271973
    7. ' (' → logprob: -16.75614356994629
    8. '(' → logprob: -16.88114356994629
    9. '	iter' → logprob: -16.88114356994629
    10. '
' → logprob: -17.13114356994629

Token 676: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -4.127333340875339e-06
    2. 'sys' → logprob: -12.500003814697266
    3. '=sys' → logprob: -15.375003814697266
    4. ' sys' → logprob: -17.000003814697266
    5. '	sys' → logprob: -18.250003814697266
    6. '(' → logprob: -18.375003814697266
    7. '(Sys' → logprob: -19.500003814697266
    8. '(system' → logprob: -19.875003814697266
    9. '(input' → logprob: -20.000003814697266
    10. '/sys' → logprob: -20.500003814697266

Token 677: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.128163257315464e-07
    2. '.argv' → logprob: -16.125
    3. '.stdout' → logprob: -16.625
    4. 'stdin' → logprob: -16.875
    5. '.std' → logprob: -18.375
    6. '.' → logprob: -19.5
    7. ' .' → logprob: -19.5
    8. '(stdin' → logprob: -19.875
    9. ').' → logprob: -20.625
    10. ' stdin' → logprob: -20.875

Token 678: '.read' (ID: 7211)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3912881910800934
    2. '.readline' → logprob: -1.141288161277771
    3. '.readlines' → logprob: -5.5162882804870605
    4. '())' → logprob: -8.391287803649902
    5. ')
' → logprob: -9.516287803649902
    6. '.' → logprob: -10.141287803649902
    7. '()' → logprob: -11.266287803649902
    8. '.read' → logprob: -11.391287803649902
    9. ' readline' → logprob: -11.891287803649902
    10. '.__' → logprob: -12.391287803649902

Token 679: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.3213025744771585e-05
    2. '()' → logprob: -10.375033378601074
    3. 'lines' → logprob: -14.000033378601074
    4. '(' → logprob: -14.875033378601074
    5. '('\' → logprob: -15.250033378601074
    6. '()\' → logprob: -15.250033378601074
    7. '())' → logprob: -15.625033378601074
    8. '()
' → logprob: -16.500032424926758
    9. ' ().' → logprob: -16.875032424926758
    10. 'line' → logprob: -17.250032424926758

Token 680: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.38695862889289856
    2. 'strip' → logprob: -1.1369585990905762
    3. 'decode' → logprob: -9.386959075927734
    4. 'rstrip' → logprob: -13.011959075927734
    5. 'read' → logprob: -13.386959075927734
    6. ' split' → logprob: -17.386959075927734
    7. 'str' → logprob: -18.386959075927734
    8. '(split' → logprob: -18.886959075927734
    9. 'lines' → logprob: -19.261959075927734
    10. 'spl' → logprob: -19.886959075927734

Token 681: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.18402327597141266
    2. '()' → logprob: -1.9340232610702515
    3. '('\' → logprob: -3.934023380279541
    4. '())' → logprob: -5.684023380279541
    5. '()\' → logprob: -7.559023380279541
    6. '()
' → logprob: -10.684022903442383
    7. '()]' → logprob: -12.559022903442383
    8. '("\' → logprob: -13.684022903442383
    9. '()

' → logprob: -14.059022903442383
    10. '(' → logprob: -14.059022903442383

Token 682: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0003442832676228136
    2. ')' → logprob: -8.625344276428223
    3. '()' → logprob: -8.750344276428223
    4. ' ())' → logprob: -12.375344276428223
    5. '())
' → logprob: -13.500344276428223
    6. '(' → logprob: -14.875344276428223
    7. '()))' → logprob: -16.37534523010254
    8. '()]' → logprob: -17.00034523010254
    9. '();)' → logprob: -17.50034523010254
    10. ' )' → logprob: -17.62534523010254

Token 683: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008615515194833279
    2. 'while' → logprob: -5.258615493774414
    3. ' while' → logprob: -6.008615493774414
    4. 'for' → logprob: -7.758615493774414
    5. ' for' → logprob: -8.133615493774414
    6. '```' → logprob: -9.258615493774414
    7. '    
' → logprob: -9.383615493774414
    8. '
' → logprob: -11.133615493774414
    9. '<|end|>' → logprob: -14.508615493774414
    10. '``' → logprob: -14.508615493774414

Token 684: ' ip' (ID: 7993)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12710174918174744
    2. 'while' → logprob: -2.1271016597747803
    3. '   ' → logprob: -9.12710189819336
    4. ' for' → logprob: -10.00210189819336
    5. ' while' → logprob: -11.37710189819336
    6. 'try' → logprob: -12.12710189819336
    7. '    
' → logprob: -13.75210189819336
    8. '
' → logprob: -14.00210189819336
    9. 'def' → logprob: -14.50210189819336
    10. 'line' → logprob: -15.50210189819336

Token 685: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869488537311554
    2. '=' → logprob: -1.136948823928833
    3. 'rocess' → logprob: -10.511948585510254
    4. 'u' → logprob: -10.886948585510254
    5. '_' → logprob: -11.136948585510254
    6. '=
' → logprob: -12.386948585510254
    7. '_=' → logprob: -12.636948585510254
    8. ' =
' → logprob: -13.011948585510254
    9. 'r' → logprob: -13.386948585510254
    10. '_processor' → logprob: -13.761948585510254

Token 686: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.00033558503491804004
    2. ' Input' → logprob: -8.000335693359375
    3. '	Input' → logprob: -16.375335693359375
    4. '_Input' → logprob: -17.875335693359375
    5. '_input' → logprob: -18.125335693359375
    6. '\Input' → logprob: -18.625335693359375
    7. '<Input' → logprob: -19.125335693359375
    8. 'Inp' → logprob: -19.750335693359375
    9. 'input' → logprob: -19.875335693359375
    10. '.Input' → logprob: -20.125335693359375

Token 687: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -3.128163257315464e-07
    2. '_processor' → logprob: -16.375
    3. 'processor' → logprob: -16.625
    4. 'Process' → logprob: -18.875
    5. ' Processor' → logprob: -19.75
    6. 'Processors' → logprob: -20.75
    7. 'Proces' → logprob: -21.875
    8. 'Provider' → logprob: -22.375
    9. 'PROCESS' → logprob: -22.625
    10. 'Lines' → logprob: -22.625

Token 688: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42284318804740906
    2. 'for' → logprob: -1.1728432178497314
    3. 'while' → logprob: -4.172842979431152
    4. '
' → logprob: -4.297842979431152
    5. ' for' → logprob: -5.422842979431152
    6. '    
' → logprob: -6.797842979431152
    7. 'def' → logprob: -7.922842979431152
    8. '<|end|>' → logprob: -9.047842979431152
    9. ' while' → logprob: -9.172842979431152
    10. '  ' → logprob: -9.672842979431152

Token 689: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004812799859791994
    2. 'while' → logprob: -6.129812717437744
    3. 'for' → logprob: -6.754812717437744
    4. '    
' → logprob: -7.129812717437744
    5. ' while' → logprob: -8.004813194274902
    6. '
' → logprob: -8.754813194274902
    7. ' for' → logprob: -8.879813194274902
    8. '```' → logprob: -10.879813194274902
    9. '  
' → logprob: -13.504813194274902
    10. ' 
' → logprob: -13.754813194274902

Token 690: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.47412800788879395
    2. 'for' → logprob: -0.974128007888794
    3. '   ' → logprob: -10.599127769470215
    4. ' while' → logprob: -11.099127769470215
    5. ' for' → logprob: -12.099127769470215
    6. '
' → logprob: -12.974127769470215
    7. 'try' → logprob: -13.474127769470215
    8. '```' → logprob: -13.849127769470215
    9. '    
' → logprob: -14.599127769470215
    10. '  
' → logprob: -17.34912872314453

Token 691: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12703698873519897
    2. ' True' → logprob: -2.1270370483398438
    3. '(True' → logprob: -9.252037048339844
    4. '   ' → logprob: -11.377037048339844
    5. '
' → logprob: -14.002037048339844
    6. '1' → logprob: -14.752037048339844
    7. ' ' → logprob: -16.502037048339844
    8. '  ' → logprob: -16.877037048339844
    9. '=True' → logprob: -17.252037048339844
    10. '    
' → logprob: -17.377037048339844

Token 692: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05589376017451286
    2. '       ' → logprob: -3.305893659591675
    3. ':
' → logprob: -4.055893898010254
    4. '   ' → logprob: -9.305893898010254
    5. ',' → logprob: -9.430893898010254
    6. '<|end|>' → logprob: -10.430893898010254
    7. '(line' → logprob: -10.680893898010254
    8. ' :' → logprob: -10.930893898010254
    9. '():' → logprob: -10.930893898010254
    10. '):
' → logprob: -11.055893898010254

Token 693: '       ' (ID: 309)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.17522290349006653
    2. '       ' → logprob: -1.9252228736877441
    3. ' try' → logprob: -4.300222873687744
    4. '   ' → logprob: -6.675222873687744
    5. ' line' → logprob: -11.300223350524902
    6. 'line' → logprob: -11.425223350524902
    7. '	try' → logprob: -11.800223350524902
    8. 'n' → logprob: -11.925223350524902
    9. 't' → logprob: -12.050223350524902
    10. '```' → logprob: -12.050223350524902

Token 694: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.014253417029976845
    2. 'line' → logprob: -4.514253616333008
    3. 'n' → logprob: -6.139253616333008
    4. 'data' → logprob: -7.639253616333008
    5. ' try' → logprob: -8.889253616333008
    6. '       ' → logprob: -9.264253616333008
    7. '           ' → logprob: -10.014253616333008
    8. 'result' → logprob: -10.139253616333008
    9. 'lines' → logprob: -10.139253616333008
    10. 't' → logprob: -10.264253616333008

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13590766489505768
    2. '           ' → logprob: -2.7609076499938965
    3. ':
' → logprob: -2.7609076499938965
    4. '       ' → logprob: -8.010908126831055
    5. ' line' → logprob: -10.010908126831055
    6. 'line' → logprob: -10.135908126831055
    7. ' :' → logprob: -10.260908126831055
    8. 'n' → logprob: -10.260908126831055
    9. '(line' → logprob: -10.635908126831055
    10. '[line' → logprob: -11.010908126831055

Token 696: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002111597452312708
    2. 'n' → logprob: -6.252111434936523
    3. ' line' → logprob: -9.377111434936523
    4. 'line' → logprob: -9.752111434936523
    5. ' n' → logprob: -10.752111434936523
    6. '#line' → logprob: -12.002111434936523
    7. '       ' → logprob: -12.377111434936523
    8. '   ' → logprob: -13.377111434936523
    9. '(n' → logprob: -13.502111434936523
    10. '		' → logprob: -13.627111434936523

Token 697: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008585774339735508
    2. ' n' → logprob: -7.125858783721924
    3. '           ' → logprob: -10.500858306884766
    4. '               ' → logprob: -10.750858306884766
    5. 'line' (adapté à ' line') → logprob: -12.750858306884766
    6. '(n' → logprob: -13.500858306884766
    7. '   ' → logprob: -14.375858306884766
    8. '	n' → logprob: -15.625858306884766
    9. '                   ' → logprob: -16.375858306884766
    10. '                       ' → logprob: -16.875858306884766

Token 698: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002098023891449
    2. '=' → logprob: -2.3502097129821777
    3. '=line' → logprob: -13.850210189819336
    4. '   ' → logprob: -13.975210189819336
    5. ' ' → logprob: -14.850210189819336
    6. '    ' → logprob: -14.850210189819336
    7. '        ' → logprob: -15.725210189819336
    8. '	' → logprob: -16.475210189819336
    9. ' =
' → logprob: -16.600210189819336
    10. ' ' → logprob: -16.725210189819336

Token 699: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.12692853808403015
    2. ' next' → logprob: -2.1269285678863525
    3. '(next' → logprob: -14.751928329467773
    4. '	next' → logprob: -17.251928329467773
    5. '
' → logprob: -18.126928329467773
    6. 'input' → logprob: -19.001928329467773
    7. '[next' → logprob: -19.751928329467773
    8. '   ' → logprob: -20.001928329467773
    9. '.next' → logprob: -20.126928329467773
    10. '_next' → logprob: -20.501928329467773

Token 700: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10021379590034485
    2. 'input' → logprob: -2.3502137660980225
    3. ' input' → logprob: -11.975214004516602
    4. '(' → logprob: -14.725214004516602
    5. '(
' → logprob: -15.975214004516602
    6. 'line' → logprob: -16.1002140045166
    7. '=input' → logprob: -16.1002140045166
    8. '(line' → logprob: -16.8502140045166
    9. ',input' → logprob: -17.4752140045166
    10. '_input' → logprob: -17.7252140045166

Token 701: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.320199877838604e-07
    2. '(input' → logprob: -15.75
    3. 'lines' → logprob: -16.625
    4. 'Lines' → logprob: -16.875
    5. '_LINES' → logprob: -17.0
    6. '(lines' → logprob: -17.875
    7. ')' → logprob: -19.0
    8. '_line' → logprob: -19.25
    9. ' lines' → logprob: -19.625
    10. '\' → logprob: -19.875

Token 702: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007615509908646345
    2. '()' → logprob: -5.757615566253662
    3. ')
' → logprob: -6.132615566253662
    4. ').' → logprob: -6.257615566253662
    5. '())' → logprob: -8.132615089416504
    6. '()
' → logprob: -11.007615089416504
    7. ' )' → logprob: -11.632615089416504
    8. '())
' → logprob: -11.757615089416504
    9. '       ' → logprob: -12.507615089416504
    10. '   ' → logprob: -12.882615089416504

Token 703: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030987201258540154
    2. '       ' → logprob: -3.65598726272583
    3. '<|end|>' → logprob: -5.65598726272583
    4. '            
' → logprob: -7.78098726272583
    5. '	       ' → logprob: -8.905986785888672
    6. '<|end|>' → logprob: -9.155986785888672
    7. '        ' → logprob: -9.280986785888672
    8. ' ' → logprob: -9.780986785888672
    9. 'except' → logprob: -10.155986785888672
    10. '        
' → logprob: -10.155986785888672

Token 704: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025246452540159225
    2. '       ' → logprob: -4.150246620178223
    3. 'except' (adapté à ' except') → logprob: -5.400246620178223
    4. ' except' → logprob: -5.775246620178223
    5. '<|end|>' → logprob: -7.025246620178223
    6. '	       ' → logprob: -8.025246620178223
    7. '            
' → logprob: -9.650246620178223
    8. '        ' → logprob: -10.025246620178223
    9. '<|end|>' → logprob: -10.025246620178223
    10. ',' → logprob: -10.400246620178223

Token 705: ' Stop' (ID: 22535)
  Prédit: 'Stop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stop' → logprob: -9.968312951968983e-06
    2. ' Stop' → logprob: -12.000009536743164
    3. 'EOF' → logprob: -13.000009536743164
    4. 'Break' → logprob: -14.250009536743164
    5. '_Stop' → logprob: -14.750009536743164
    6. '_stop' → logprob: -15.750009536743164
    7. 'STOP' → logprob: -16.125009536743164
    8. '(' → logprob: -16.875009536743164
    9. 'Stopping' → logprob: -17.500009536743164
    10. 'End' → logprob: -17.625009536743164

Token 706: 'Iteration' (ID: 77823)
  Prédit: 'Iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iteration' → logprob: -5.512236498361744e-07
    2. 'Iterator' → logprob: -15.375000953674316
    3. 'Async' → logprob: -15.750000953674316
    4. 'Error' → logprob: -16.625
    5. 'iteration' → logprob: -16.75
    6. ' iteration' → logprob: -18.5
    7. 'Exception' → logprob: -18.5
    8. 'Token' → logprob: -18.625
    9. 'Iter' → logprob: -18.75
    10. 'Iterations' → logprob: -18.75

Token 707: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5828583836555481
    2. ':' → logprob: -0.8328583836555481
    3. ':
' → logprob: -5.332858562469482
    4. '       ' → logprob: -6.957858562469482
    5. '   ' → logprob: -7.332858562469482
    6. '               ' → logprob: -8.582858085632324
    7. ' ' → logprob: -9.832858085632324
    8. '		' → logprob: -10.082858085632324
    9. '<|end|>' → logprob: -10.332858085632324
    10. '          ' → logprob: -10.707858085632324

Token 708: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040540905320085585
    2. '       ' → logprob: -8.000405311584473
    3. '               ' → logprob: -10.250405311584473
    4. '   ' → logprob: -12.000405311584473
    5. '          ' → logprob: -12.250405311584473
    6. '                   ' → logprob: -12.375405311584473
    7. '         ' → logprob: -12.500405311584473
    8. '		' → logprob: -13.000405311584473
    9. '	       ' → logprob: -13.000405311584473
    10. ' ' → logprob: -13.125405311584473

Token 709: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017381247598677874
    2. '       ' → logprob: -6.87673807144165
    3. '               ' → logprob: -7.37673807144165
    4. '   ' → logprob: -10.376738548278809
    5. '		' → logprob: -11.126738548278809
    6. '                   ' → logprob: -11.751738548278809
    7. 'break' (adapté à ' break') → logprob: -12.001738548278809
    8. '
' → logprob: -12.126738548278809
    9. ' break' → logprob: -13.126738548278809
    10. '            
' → logprob: -13.626738548278809

Token 710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11148237437009811
    2. '
' → logprob: -2.8614823818206787
    3. '<|end|>' → logprob: -3.1114823818206787
    4. '        
' → logprob: -5.9864821434021
    5. '<|end|>' → logprob: -8.486482620239258
    6. '  
' → logprob: -8.611482620239258
    7. ' 
' → logprob: -8.861482620239258
    8. '#' → logprob: -9.111482620239258
    9. '           ' → logprob: -9.236482620239258
    10. '    
' → logprob: -9.236482620239258

Token 711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005344442906789482
    2. '<|end|>' → logprob: -7.875534534454346
    3. '        
' → logprob: -9.250534057617188
    4. '
' → logprob: -10.125534057617188
    5. '           ' → logprob: -11.500534057617188
    6. '   ' → logprob: -13.250534057617188
    7. '<|end|>' → logprob: -13.375534057617188
    8. ' if' → logprob: -13.750534057617188
    9. '  
' → logprob: -14.375534057617188
    10. '```' → logprob: -14.375534057617188

Token 712: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024452158249914646
    2. ' if' → logprob: -6.377445220947266
    3. 'if' (adapté à ' if') → logprob: -7.377445220947266
    4. 'n' → logprob: -10.252445220947266
    5. '        
' → logprob: -10.377445220947266
    6. '   ' → logprob: -11.127445220947266
    7. '           ' → logprob: -11.502445220947266
    8. ' n' → logprob: -11.752445220947266
    9. '<|end|>' → logprob: -12.752445220947266
    10. '	' → logprob: -13.252445220947266

Token 713: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12697136402130127
    2. 'not' → logprob: -2.1269712448120117
    3. ' line' → logprob: -10.626971244812012
    4. 'line' → logprob: -10.876971244812012
    5. ' ' → logprob: -16.876972198486328
    6. '(not' → logprob: -17.501972198486328
    7. 'n' → logprob: -18.001972198486328
    8. '	not' → logprob: -18.126972198486328
    9. '(line' → logprob: -18.876972198486328
    10. 'n't' → logprob: -19.626972198486328

Token 714: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07888989895582199
    2. ' line' → logprob: -2.578889846801758
    3. '(line' → logprob: -15.828889846801758
    4. '[line' → logprob: -18.578889846801758
    5. '=line' → logprob: -18.703889846801758
    6. '	line' → logprob: -19.703889846801758
    7. '#line' → logprob: -20.453889846801758
    8. '
' → logprob: -21.953889846801758
    9. '_line' → logprob: -22.578889846801758
    10. ',line' → logprob: -23.203889846801758

Token 715: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.25198087096214294
    2. '.' → logprob: -1.5019809007644653
    3. ' .' → logprob: -11.251980781555176
    4. ':' → logprob: -11.251980781555176
    5. '.startswith' → logprob: -11.501980781555176
    6. '.rstrip' → logprob: -12.626980781555176
    7. '.trim' → logprob: -12.751980781555176
    8. ':
' → logprob: -13.501980781555176
    9. 'strip' → logprob: -13.751980781555176
    10. '.readline' → logprob: -14.001980781555176

Token 716: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.12807749211788177
    2. '():
' → logprob: -2.128077507019043
    3. ':' → logprob: -6.878077507019043
    4. '()' → logprob: -9.628077507019043
    5. ':
' → logprob: -10.753077507019043
    6. '():
' → logprob: -10.878077507019043
    7. 'continue' → logprob: -11.628077507019043
    8. '           ' → logprob: -13.378077507019043
    9. '():

' → logprob: -13.878077507019043
    10. '       ' → logprob: -15.003077507019043

Token 717: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011853496544063091
    2. 'continue' → logprob: -7.126185417175293
    3. ' continue' → logprob: -8.001185417175293
    4. '               ' → logprob: -10.751185417175293
    5. ':' → logprob: -11.751185417175293
    6. ':
' → logprob: -12.001185417175293
    7. '		' → logprob: -12.751185417175293
    8. ' continued' → logprob: -13.126185417175293
    9. '_continue' → logprob: -13.501185417175293
    10. '	       ' → logprob: -13.876185417175293

Token 718: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4931887984275818
    2. 'continue' (adapté à ' continue') → logprob: -0.9931887984275818
    3. ' continue' → logprob: -3.9931888580322266
    4. '               ' → logprob: -7.868188858032227
    5. '   ' → logprob: -9.493188858032227
    6. '       ' → logprob: -10.993188858032227
    7. '	continue' → logprob: -11.743188858032227
    8. '_continue' → logprob: -12.368188858032227
    9. '		' → logprob: -14.368188858032227
    10. '
' → logprob: -14.493188858032227

Token 719: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034173477441072464
    2. 'n' → logprob: -3.4091734886169434
    3. '   ' → logprob: -8.159173011779785
    4. ' n' → logprob: -8.534173011779785
    5. '```' → logprob: -10.409173011779785
    6. '           ' → logprob: -12.034173011779785
    7. '
' → logprob: -13.284173011779785
    8. '        
' → logprob: -13.534173011779785
    9. ',n' → logprob: -13.659173011779785
    10. '	n' → logprob: -13.784173011779785

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000373950315406546
    2. 'n' → logprob: -8.000373840332031
    3. '   ' → logprob: -10.625373840332031
    4. ' n' → logprob: -12.250373840332031
    5. '        
' → logprob: -12.875373840332031
    6. '           ' → logprob: -13.125373840332031
    7. '```' → logprob: -13.625373840332031
    8. '<|end|>' → logprob: -13.625373840332031
    9. '
' → logprob: -14.500373840332031
    10. ',' → logprob: -14.750373840332031

Token 721: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -9.088346359931165e-07
    2. ' n' → logprob: -14.875000953674316
    3. '           ' → logprob: -15.250000953674316
    4. '       ' → logprob: -15.250000953674316
    5. '   ' → logprob: -17.5
    6. '	n' → logprob: -18.125
    7. '```' → logprob: -19.0
    8. 'parts' → logprob: -20.375
    9. '_n' → logprob: -20.375
    10. '(n' → logprob: -21.125

Token 722: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.027225754223764e-05
    2. ',q' → logprob: -10.500060081481934
    3. ' ,' → logprob: -10.625060081481934
    4. ',n' → logprob: -13.250060081481934
    5. ',v' → logprob: -13.500060081481934
    6. '=' → logprob: -13.750060081481934
    7. ',
' → logprob: -14.750060081481934
    8. '<|end|>' → logprob: -14.750060081481934
    9. ',int' → logprob: -14.875060081481934
    10. ',...' → logprob: -14.875060081481934

Token 723: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023250484839081764
    2. ' q' → logprob: -3.7732505798339844
    3. '<|end|>' → logprob: -12.398250579833984
    4. ' ' → logprob: -14.648250579833984
    5. '	q' → logprob: -15.273250579833984
    6. ',q' → logprob: -16.648250579833984
    7. '_q' → logprob: -17.148250579833984
    8. '*q' → logprob: -17.273250579833984
    9. '?q' → logprob: -17.898250579833984
    10. '=' → logprob: -17.898250579833984

Token 724: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024137025699019432
    2. ' =' → logprob: -3.774137020111084
    3. ',' → logprob: -7.024137020111084
    4. ')' → logprob: -15.524137496948242
    5. '   ' → logprob: -15.774137496948242
    6. '       ' → logprob: -15.899137496948242
    7. '<|end|>' → logprob: -15.899137496948242
    8. '=
' → logprob: -16.024137496948242
    9. ')=' → logprob: -16.899137496948242
    10. '=int' → logprob: -17.149137496948242

Token 725: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03804194927215576
    2. ' map' → logprob: -3.2880420684814453
    3. 'line' → logprob: -15.538042068481445
    4. '	map' → logprob: -16.163042068481445
    5. 'list' → logprob: -16.163042068481445
    6. 'm' → logprob: -16.413042068481445
    7. 'tuple' → logprob: -17.413042068481445
    8. '_map' → logprob: -17.538042068481445
    9. '(map' → logprob: -17.788042068481445
    10. '    ' → logprob: -17.913042068481445

Token 726: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.995397365652025e-05
    2. 'int' → logprob: -9.625089645385742
    3. '(' → logprob: -11.250089645385742
    4. '(str' → logprob: -11.625089645385742
    5. '[int' → logprob: -13.750089645385742
    6. '(
' → logprob: -15.000089645385742
    7. '(lambda' → logprob: -15.500089645385742
    8. '=int' → logprob: -15.875089645385742
    9. '<int' → logprob: -16.750089645385742
    10. '(tuple' → logprob: -16.875089645385742

Token 727: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.04979328438639641
    2. 'line' → logprob: -3.049793243408203
    3. ')' → logprob: -7.424793243408203
    4. ',line' → logprob: -7.924793243408203
    5. ',' → logprob: -8.924793243408203
    6. '=line' → logprob: -9.799793243408203
    7. ' line' → logprob: -10.299793243408203
    8. '(' → logprob: -11.299793243408203
    9. '[line' → logprob: -11.674793243408203
    10. '#line' → logprob: -12.799793243408203

Token 728: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -3.547789674485102e-05
    2. ' line' → logprob: -10.250035285949707
    3. '(line' → logprob: -18.500036239624023
    4. '=line' → logprob: -19.750036239624023
    5. '[line' → logprob: -20.125036239624023
    6. '#line' → logprob: -20.500036239624023
    7. '_line' → logprob: -22.250036239624023
    8. '	line' → logprob: -22.250036239624023
    9. '           ' → logprob: -22.375036239624023
    10. 'li' → logprob: -22.875036239624023

Token 729: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.004053348209708929
    2. '.strip' → logprob: -5.754053115844727
    3. '.' → logprob: -7.379053115844727
    4. '().' → logprob: -8.629053115844727
    5. 'split' → logprob: -10.254053115844727
    6. ' .' → logprob: -10.379053115844727
    7. '.readline' → logprob: -12.629053115844727
    8. '(split' → logprob: -14.379053115844727
    9. '.rstrip' → logprob: -14.629053115844727
    10. ').' → logprob: -15.254053115844727

Token 730: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015408541075885296
    2. '())' → logprob: -4.265408515930176
    3. '()' → logprob: -6.765408515930176
    4. ')
' → logprob: -9.640408515930176
    5. '(' → logprob: -11.390408515930176
    6. '())
' → logprob: -11.390408515930176
    7. ' )' → logprob: -13.890408515930176
    8. '))' → logprob: -14.015408515930176
    9. ')`' → logprob: -14.765408515930176
    10. '()
' → logprob: -15.015408515930176

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046332005877047777
    2. '<|end|>' → logprob: -7.750463485717773
    3. '```' → logprob: -11.250463485717773
    4. '           ' → logprob: -12.000463485717773
    5. '<|end|>' → logprob: -12.500463485717773
    6. '   ' → logprob: -12.750463485717773
    7. ' if' → logprob: -12.750463485717773
    8. 'if' → logprob: -12.875463485717773
    9. '      ' → logprob: -15.000463485717773
    10. '               ' → logprob: -15.250463485717773

Token 732: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013687985949218273
    2. '       ' → logprob: -4.888688087463379
    3. ' if' → logprob: -5.138688087463379
    4. 'parents' → logprob: -9.263688087463379
    5. 'tree' → logprob: -10.138688087463379
    6. 'for' → logprob: -10.513688087463379
    7. 'break' → logprob: -11.388688087463379
    8. 'parent' → logprob: -11.888688087463379
    9. 'trees' → logprob: -12.013688087463379
    10. ' parents' → logprob: -13.013688087463379

Token 733: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1269325166940689
    2. ' n' → logprob: -2.1269326210021973
    3. '(n' → logprob: -12.876932144165039
    4. '0' → logprob: -13.876932144165039
    5. '   ' → logprob: -14.626932144165039
    6. '       ' → logprob: -14.751932144165039
    7. ' (' → logprob: -16.50193214416504
    8. '	n' → logprob: -16.87693214416504
    9. ' ' → logprob: -17.62693214416504
    10. '           ' → logprob: -18.37693214416504

Token 734: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931624412536621
    2. ' ==' → logprob: -0.6931624412536621
    3. '=' → logprob: -11.81816291809082
    4. ' ' → logprob: -13.06816291809082
    5. '===' → logprob: -13.56816291809082
    6. ',' → logprob: -13.56816291809082
    7. '==
' → logprob: -14.19316291809082
    8. ')==' → logprob: -14.69316291809082
    9. '```' → logprob: -14.94316291809082
    10. ' =' → logprob: -15.31816291809082

Token 735: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '=' → logprob: -19.250045776367188
    4. '<|end|>' → logprob: -19.500045776367188
    5. '۰' → logprob: -20.125045776367188
    6. '```' → logprob: -20.750045776367188
    7. '  ' → logprob: -21.125045776367188
    8. 'q' → logprob: -21.250045776367188
    9. '==' → logprob: -21.500045776367188
    10. '(' → logprob: -21.625045776367188

Token 736: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '۰' → logprob: -20.0
    4. 'q' → logprob: -21.25
    5. 'o' → logprob: -22.0
    6. '00' → logprob: -22.25
    7. '০' → logprob: -22.25
    8. '```' → logprob: -22.25
    9. '０' → logprob: -22.5625
    10. '=' → logprob: -22.625

Token 737: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693241238594055
    2. 'and' → logprob: -2.126932382583618
    3. '&&' → logprob: -13.626932144165039
    4. ',' → logprob: -14.001932144165039
    5. '<|end|>' → logprob: -14.876932144165039
    6. ' ' → logprob: -14.876932144165039
    7. '           ' → logprob: -15.126932144165039
    8. '0' → logprob: -15.126932144165039
    9. ' и' → logprob: -15.376932144165039
    10. ' &&' → logprob: -15.626932144165039

Token 738: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023245595395565033
    2. ' q' → logprob: -3.7732455730438232
    3. '       ' → logprob: -16.273244857788086
    4. '	q' → logprob: -18.023244857788086
    5. '           ' → logprob: -19.273244857788086
    6. '   ' → logprob: -20.023244857788086
    7. ' ' → logprob: -20.648244857788086
    8. '        ' → logprob: -20.898244857788086
    9. '    ' → logprob: -21.398244857788086
    10. '     ' → logprob: -21.773244857788086

Token 739: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16023580729961395
    2. '==' → logprob: -1.9102357625961304
    3. ' ' → logprob: -12.410235404968262
    4. '0' → logprob: -13.410235404968262
    5. '=' → logprob: -13.535235404968262
    6. ')==' → logprob: -13.660235404968262
    7. '<|end|>' → logprob: -14.035235404968262
    8. ' =' → logprob: -14.410235404968262
    9. '===' → logprob: -14.535235404968262
    10. ' ===' → logprob: -14.785235404968262

Token 740: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -20.000051498413086
    4. '۰' → logprob: -20.875051498413086
    5. '  ' → logprob: -21.500051498413086
    6. '<|end|>' → logprob: -21.500051498413086
    7. '```' → logprob: -21.625051498413086
    8. ' ' → logprob: -22.625051498413086
    9. '    ' → logprob: -23.875051498413086
    10. '[' → logprob: -23.875051498413086

Token 741: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -19.5000057220459
    4. '```' → logprob: -21.2500057220459
    5. '  ' → logprob: -21.7500057220459
    6. '   ' → logprob: -22.1250057220459
    7. '০' → logprob: -22.2500057220459
    8. '<|end|>' → logprob: -22.3750057220459
    9. '00' → logprob: -22.5625057220459
    10. '०' → logprob: -22.5625057220459

Token 742: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4482772648334503
    2. '           ' → logprob: -1.073277235031128
    3. ':
' → logprob: -3.948277235031128
    4. '               ' → logprob: -10.448277473449707
    5. '       ' → logprob: -10.698277473449707
    6. ':return' → logprob: -11.198277473449707
    7. '          ' → logprob: -11.448277473449707
    8. '		' → logprob: -12.323277473449707
    9. ',' → logprob: -12.698277473449707
    10. '   ' → logprob: -12.948277473449707

Token 743: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.895480277715251e-06
    2. '               ' → logprob: -12.000008583068848
    3. '       ' → logprob: -13.750008583068848
    4. 'break' → logprob: -14.500008583068848
    5. '   ' → logprob: -14.875008583068848
    6. '		' → logprob: -15.125008583068848
    7. ' break' → logprob: -15.250008583068848
    8. '          ' → logprob: -16.500009536743164
    9. '	       ' → logprob: -16.750009536743164
    10. '                   ' → logprob: -16.875009536743164

Token 744: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05802373215556145
    2. '           ' → logprob: -3.308023691177368
    3. 'return' → logprob: -4.558023929595947
    4. ' break' → logprob: -4.808023929595947
    5. '               ' → logprob: -6.808023929595947
    6. ' return' → logprob: -10.558023452758789
    7. '	break' → logprob: -12.183023452758789
    8. '_break' → logprob: -15.058023452758789
    9. '       ' → logprob: -15.308023452758789
    10. '```' → logprob: -15.683023452758789

Token 745: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.386147626675665e-05
    2. '```' → logprob: -10.500073432922363
    3. '<|end|>' → logprob: -11.375073432922363
    4. '        
' → logprob: -11.375073432922363
    5. '
' → logprob: -11.750073432922363
    6. '   ' → logprob: -11.750073432922363
    7. '           ' → logprob: -12.625073432922363
    8. 'n' → logprob: -13.875073432922363
    9. ',' → logprob: -14.625073432922363
    10. '​' → logprob: -15.125073432922363

Token 746: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.983476436696947e-05
    2. '```' → logprob: -10.250089645385742
    3. '   ' → logprob: -10.500089645385742
    4. '        
' → logprob: -11.500089645385742
    5. '<|end|>' → logprob: -12.000089645385742
    6. '           ' → logprob: -12.500089645385742
    7. '
' → logprob: -12.875089645385742
    8. ',' → logprob: -14.375089645385742
    9. 'n' → logprob: -14.875089645385742
    10. '#' → logprob: -14.875089645385742

Token 747: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' (adapté à ' parents') → logprob: -0.035657018423080444
    2. '       ' → logprob: -3.7856569290161133
    3. ' parents' → logprob: -4.410656929016113
    4. 'parent' → logprob: -9.410656929016113
    5. '   ' → logprob: -9.910656929016113
    6. '.parents' → logprob: -10.410656929016113
    7. 'par' → logprob: -11.160656929016113
    8. '```' → logprob: -12.535656929016113
    9. 'Parents' → logprob: -12.910656929016113
    10. '           ' → logprob: -13.535656929016113

Token 748: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023312099277973175
    2. ' =' → logprob: -3.7733120918273926
    3. ',' → logprob: -9.64831256866455
    4. '=[]' → logprob: -13.77331256866455
    5. '=line' → logprob: -14.89831256866455
    6. '       ' → logprob: -15.64831256866455
    7. '   ' → logprob: -15.77331256866455
    8. '<|end|>' → logprob: -16.648311614990234
    9. '＝' → logprob: -16.773311614990234
    10. '=[],' → logprob: -17.148311614990234

Token 749: ' [' (ID: 723)
  Prédit: '[ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ip' → logprob: -0.4233037829399109
    2. '[' → logprob: -1.2983038425445557
    3. '[]' → logprob: -3.2983038425445557
    4. ' [' → logprob: -3.9233038425445557
    5. '[input' → logprob: -5.048303604125977
    6. '[]
' → logprob: -5.423303604125977
    7. '[self' → logprob: -6.048303604125977
    8. ' []' → logprob: -6.923303604125977
    9. 'ip' → logprob: -7.923303604125977
    10. '[class' → logprob: -8.923303604125977

Token 750: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.003178901970386505
    2. 'next' → logprob: -5.75317907333374
    3. ' int' → logprob: -14.503178596496582
    4. '(int' → logprob: -15.378178596496582
    5. '           ' → logprob: -16.1281795501709
    6. '<int' → logprob: -16.3781795501709
    7. '
' → logprob: -16.7531795501709
    8. '```' → logprob: -16.7531795501709
    9. ']int' → logprob: -16.8781795501709
    10. '[int' → logprob: -17.0031795501709

Token 751: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0001242772996192798
    2. 'next' → logprob: -9.000123977661133
    3. '[next' → logprob: -14.875123977661133
    4. '(' → logprob: -15.625123977661133
    5. '(line' → logprob: -15.625123977661133
    6. '(x' → logprob: -16.375123977661133
    7. ']' → logprob: -16.875123977661133
    8. ' next' → logprob: -17.500123977661133
    9. 'a' → logprob: -17.875123977661133
    10. '(p' → logprob: -18.500123977661133

Token 752: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20143157243728638
    2. 'input' → logprob: -1.7014315128326416
    3. ' input' → logprob: -11.201431274414062
    4. ',input' → logprob: -13.201431274414062
    5. '=input' → logprob: -13.201431274414062
    6. '_input' → logprob: -14.951431274414062
    7. '	input' → logprob: -15.201431274414062
    8. '<input' → logprob: -15.326431274414062
    9. '[input' → logprob: -16.076431274414062
    10. '(' → logprob: -17.701431274414062

Token 753: '_lines' (ID: 42980)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.076625756919384
    2. '_lines' → logprob: -3.2016258239746094
    3. '(input' → logprob: -3.4516258239746094
    4. 'lines' → logprob: -6.701625823974609
    5. '=input' → logprob: -9.82662582397461
    6. ' input' → logprob: -10.45162582397461
    7. '[input' → logprob: -10.95162582397461
    8. ',input' → logprob: -11.20162582397461
    9. '_input' → logprob: -11.45162582397461
    10. ')' → logprob: -11.70162582397461

Token 754: '))' (ID: 915)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015340241370722651
    2. ')' → logprob: -6.6265339851379395
    3. '()' → logprob: -9.626534461975098
    4. '())
' → logprob: -9.751534461975098
    5. '()))' → logprob: -10.251534461975098
    6. ')]' → logprob: -10.626534461975098
    7. ' ())' → logprob: -11.501534461975098
    8. '()]' → logprob: -11.626534461975098
    9. '))' → logprob: -13.751534461975098
    10. '()),' → logprob: -14.126534461975098

Token 755: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3923119306564331
    2. 'for' → logprob: -1.142311930656433
    3. '()' → logprob: -5.392312049865723
    4. '       ' → logprob: -8.017312049865723
    5. ')' → logprob: -8.517312049865723
    6. '           ' → logprob: -8.767312049865723
    7. ']' → logprob: -9.767312049865723
    8. '	for' → logprob: -10.017312049865723
    9. '<|end|>' → logprob: -10.142312049865723
    10. '()]' → logprob: -11.642312049865723

Token 756: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0016557788476347923
    2. '_range' → logprob: -6.626655578613281
    3. 'range' → logprob: -8.876655578613281
    4. '_i' → logprob: -9.251655578613281
    5. ' range' → logprob: -10.251655578613281
    6. ' _' → logprob: -10.876655578613281
    7. '_in' → logprob: -11.126655578613281
    8. '_children' → logprob: -11.751655578613281
    9. '_r' → logprob: -12.501655578613281
    10. '_ranges' → logprob: -13.001655578613281

Token 757: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02022464945912361
    2. ' in' → logprob: -4.270224571228027
    3. ' range' → logprob: -5.645224571228027
    4. 'in' → logprob: -6.020224571228027
    5. '_range' → logprob: -10.020224571228027
    6. '_' → logprob: -11.270224571228027
    7. ' ' → logprob: -11.895224571228027
    8. 'i' → logprob: -12.145224571228027
    9. '(range' → logprob: -12.395224571228027
    10. '	range' → logprob: -13.020224571228027

Token 758: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.054500666621607e-06
    2. ' range' → logprob: -12.87500286102295
    3. '(range' → logprob: -14.87500286102295
    4. '	range' → logprob: -16.625003814697266
    5. '
' → logprob: -16.750003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '_range' → logprob: -18.750003814697266
    8. 'r' → logprob: -19.125003814697266
    9. 'rang' → logprob: -19.125003814697266
    10. '_' → logprob: -19.375003814697266

Token 759: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014170913025736809
    2. 'n' → logprob: -4.264171123504639
    3. ' n' → logprob: -12.26417064666748
    4. '(' → logprob: -13.13917064666748
    5. ' (' → logprob: -14.26417064666748
    6. '1' → logprob: -18.264171600341797
    7. ',n' → logprob: -18.264171600341797
    8. '   ' → logprob: -18.514171600341797
    9. ')n' → logprob: -18.639171600341797
    10. '<n' → logprob: -18.639171600341797

Token 760: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.25194457173347473
    2. ' -' → logprob: -1.5019445419311523
    3. ')' → logprob: -11.751944541931152
    4. '   ' → logprob: -12.876944541931152
    5. '<|end|>' → logprob: -13.501944541931152
    6. '<|end|>' → logprob: -13.751944541931152
    7. ' ' → logprob: -14.126944541931152
    8. '       ' → logprob: -14.126944541931152
    9. '1' → logprob: -15.501944541931152
    10. ' ' → logprob: -15.751944541931152

Token 761: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.0
    4. ')' → logprob: -17.125
    5. '
' → logprob: -18.5
    6. '```' → logprob: -19.25
    7. '۱' → logprob: -19.75
    8. '<|end|>' → logprob: -20.125
    9. '১' → logprob: -20.625
    10. '१' → logprob: -21.0

Token 762: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '<|end|>' → logprob: -18.75
    4. '   ' → logprob: -19.125
    5. '```' → logprob: -20.125
    6. '۱' → logprob: -20.5
    7. '<|end|>' → logprob: -20.625
    8. '১' → logprob: -20.75
    9. ')' → logprob: -21.0
    10. '
' → logprob: -21.3125

Token 763: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002613944001495838
    2. ')]' → logprob: -6.0026140213012695
    3. ' ]' → logprob: -9.62761402130127
    4. ')' → logprob: -10.25261402130127
    5. ']
' → logprob: -10.62761402130127
    6. '       ' → logprob: -11.62761402130127
    7. '()]' → logprob: -13.12761402130127
    8. '`]' → logprob: -14.12761402130127
    9. '   ' → logprob: -15.25261402130127
    10. '']' → logprob: -15.62761402130127

Token 764: '       ' (ID: 309)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.41739845275878906
    2. '       ' → logprob: -1.292398452758789
    3. 'ops' → logprob: -2.792398452758789
    4. ' operations' → logprob: -5.917398452758789
    5. '```' → logprob: -6.417398452758789
    6. ' ops' → logprob: -8.417398452758789
    7. 'operators' → logprob: -8.542398452758789
    8. '<|end|>' → logprob: -8.792398452758789
    9. '           ' → logprob: -9.042398452758789
    10. 'op' → logprob: -9.042398452758789

Token 765: ' operations' (ID: 12084)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2706329822540283
    2. 'ops' → logprob: -1.6456329822540283
    3. 'operations' (adapté à ' operations') → logprob: -3.2706329822540283
    4. 't' → logprob: -5.770632743835449
    5. 'marked' → logprob: -7.770632743835449
    6. 'solver' → logprob: -7.770632743835449
    7. 'trees' → logprob: -7.770632743835449
    8. '       ' → logprob: -8.02063274383545
    9. '   ' → logprob: -8.14563274383545
    10. '```' → logprob: -8.27063274383545

Token 766: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193002820014954
    2. '=' → logprob: -1.5019299983978271
    3. ' +=' → logprob: -15.501930236816406
    4. ' =
' → logprob: -15.626930236816406
    5. '<|end|>' → logprob: -16.251930236816406
    6. '=[]' → logprob: -16.376930236816406
    7. ',' → logprob: -16.751930236816406
    8. '+=' → logprob: -16.876930236816406
    9. ' =[' → logprob: -17.001930236816406
    10. '＝' → logprob: -17.126930236816406

Token 767: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5354756712913513
    2. '[ip' → logprob: -1.035475730895996
    3. '[(' → logprob: -2.910475730895996
    4. '[]' → logprob: -5.785475730895996
    5. '[input' → logprob: -7.035475730895996
    6. 'ip' → logprob: -8.035475730895996
    7. ' [' → logprob: -8.410475730895996
    8. '[self' → logprob: -9.035475730895996
    9. 'Input' → logprob: -9.285475730895996
    10. '[
' → logprob: -9.410475730895996

Token 768: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6052873730659485
    2. 'tuple' → logprob: -0.9802873730659485
    3. '(next' → logprob: -2.6052873134613037
    4. '(tuple' → logprob: -5.355287551879883
    5. '(' → logprob: -8.980287551879883
    6. 'str' → logprob: -9.980287551879883
    7. ' tuple' → logprob: -10.355287551879883
    8. ' next' → logprob: -10.855287551879883
    9. 'input' → logprob: -10.980287551879883
    10. '(str' → logprob: -12.105287551879883

Token 769: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00030436101951636374
    2. 'input' → logprob: -8.125304222106934
    3. '=input' → logprob: -12.750304222106934
    4. '(' → logprob: -13.500304222106934
    5. '_input' → logprob: -13.875304222106934
    6. ',input' → logprob: -14.000304222106934
    7. ' input' → logprob: -14.375304222106934
    8. '(
' → logprob: -14.875304222106934
    9. '[input' → logprob: -15.000304222106934
    10. '<input' → logprob: -15.500304222106934

Token 770: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.3856492842023727e-06
    2. 'lines' → logprob: -14.500000953674316
    3. '_operations' → logprob: -14.750000953674316
    4. '(lines' → logprob: -15.000000953674316
    5. 'Lines' → logprob: -16.125001907348633
    6. 's' → logprob: -17.125001907348633
    7. '```' → logprob: -17.375001907348633
    8. '_LINES' → logprob: -17.875001907348633
    9. '_line' → logprob: -18.500001907348633
    10. '(_' → logprob: -19.000001907348633

Token 771: ').' (ID: 741)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5020750164985657
    2. '().' → logprob: -1.252074956893921
    3. '()).' → logprob: -2.377074956893921
    4. ').' → logprob: -4.7520751953125
    5. '())' → logprob: -5.7520751953125
    6. ')' → logprob: -6.3770751953125
    7. ' ()' → logprob: -6.8770751953125
    8. 'for' → logprob: -7.6270751953125
    9. '()].' → logprob: -8.1270751953125
    10. ' for' → logprob: -8.8770751953125

Token 772: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.511406809295295e-06
    2. 'strip' → logprob: -12.000006675720215
    3. ' split' → logprob: -15.250006675720215
    4. 'rstrip' → logprob: -17.5000057220459
    5. '(split' → logprob: -19.6250057220459
    6. 'spl' → logprob: -20.8750057220459
    7. '.split' → logprob: -22.0000057220459
    8. '_split' → logprob: -23.6250057220459
    9. 'rs' → logprob: -24.5000057220459
    10. '
' → logprob: -24.6250057220459

Token 773: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14748622477054596
    2. '()]' → logprob: -2.1474862098693848
    3. '()[' → logprob: -4.897486209869385
    4. '()
' → logprob: -5.272486209869385
    5. '(' → logprob: -5.397486209869385
    6. '())' → logprob: -6.647486209869385
    7. '(),' → logprob: -7.522486209869385
    8. '('' → logprob: -7.897486209869385
    9. '()][' → logprob: -8.022486686706543
    10. '()]
' → logprob: -9.022486686706543

Token 774: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8276094198226929
    2. 'for' → logprob: -1.3276094198226929
    3. ')' → logprob: -2.0776095390319824
    4. '()' → logprob: -3.0776095390319824
    5. '       ' → logprob: -3.5776095390319824
    6. '           ' → logprob: -3.7026095390319824
    7. '[' → logprob: -3.9526095390319824
    8. ']' → logprob: -4.452609539031982
    9. '(' → logprob: -4.952609539031982
    10. '<|end|>' → logprob: -4.952609539031982

Token 775: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.438573680294212e-06
    2. ' _' → logprob: -12.500005722045898
    3. ' range' → logprob: -13.500005722045898
    4. '_range' → logprob: -16.1250057220459
    5. 'range' → logprob: -16.7500057220459
    6. ' in' → logprob: -17.0000057220459
    7. '_=' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.3750057220459
    9. '=' → logprob: -17.7500057220459
    10. '_
' → logprob: -18.3750057220459

Token 776: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029019029811024666
    2. ' in' → logprob: -4.029018878936768
    3. 'in' → logprob: -4.654018878936768
    4. 'range' → logprob: -7.029018878936768
    5. ' range' → logprob: -8.154019355773926
    6. ' _' → logprob: -9.904019355773926
    7. '0' → logprob: -10.154019355773926
    8. '_range' → logprob: -11.654019355773926
    9. '_in' → logprob: -12.779019355773926
    10. '
' → logprob: -12.779019355773926

Token 777: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.639096970204264e-05
    2. ' range' → logprob: -9.250096321105957
    3. '_' → logprob: -16.000097274780273
    4. '_range' → logprob: -16.625097274780273
    5. '(range' → logprob: -17.500097274780273
    6. '
' → logprob: -18.875097274780273
    7. '	range' → logprob: -18.875097274780273
    8. '   ' → logprob: -20.625097274780273
    9. '[' → logprob: -21.125097274780273
    10. '.range' → logprob: -21.250097274780273

Token 778: '(q' (ID: 21479)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003216095734387636
    2. ' q' → logprob: -5.75321626663208
    3. '(q' → logprob: -10.378215789794922
    4. 'range' → logprob: -12.003215789794922
    5. ' range' → logprob: -14.253215789794922
    6. '   ' → logprob: -15.128215789794922
    7. '	q' → logprob: -15.878215789794922
    8. '(' → logprob: -17.253215789794922
    9. '[q' → logprob: -17.253215789794922
    10. ' (' → logprob: -17.378215789794922

Token 779: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31672874093055725
    2. ')]' → logprob: -1.3167287111282349
    3. ']
' → logprob: -6.566728591918945
    4. '()]' → logprob: -6.941728591918945
    5. ' ]' → logprob: -7.816728591918945
    6. '       ' → logprob: -8.316728591918945
    7. ')' → logprob: -8.316728591918945
    8. ')]
' → logprob: -9.066728591918945
    9. '   ' → logprob: -10.441728591918945
    10. '           ' → logprob: -11.066728591918945

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025503388606011868
    2. '<|end|>' → logprob: -6.37755012512207
    3. '   ' → logprob: -8.12755012512207
    4. ' for' → logprob: -8.87755012512207
    5. 'operations' → logprob: -8.87755012512207
    6. '
' → logprob: -9.50255012512207
    7. 'for' → logprob: -10.25255012512207
    8. ' operations' → logprob: -10.37755012512207
    9. '           ' → logprob: -10.50255012512207
    10. '```' → logprob: -10.62755012512207

Token 781: ' operations' (ID: 12084)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' (adapté à ' operations') → logprob: -0.6894930005073547
    2. '       ' → logprob: -1.81449294090271
    3. 'for' → logprob: -1.81449294090271
    4. 'solver' → logprob: -2.68949294090271
    5. 'ops' → logprob: -2.93949294090271
    6. ' for' → logprob: -3.56449294090271
    7. ' operations' → logprob: -4.689493179321289
    8. '   ' → logprob: -5.689493179321289
    9. 'marked' → logprob: -5.814493179321289
    10. 's' → logprob: -6.564493179321289

Token 782: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06204308196902275
    2. ' =' → logprob: -2.8120431900024414
    3. '=[' → logprob: -9.937043190002441
    4. '=[]' → logprob: -11.187043190002441
    5. '<|end|>' → logprob: -11.937043190002441
    6. '<|end|>' → logprob: -13.812043190002441
    7. '[' → logprob: -13.937043190002441
    8. '=
' → logprob: -14.062043190002441
    9. '=[[' → logprob: -14.562043190002441
    10. '```' → logprob: -14.812043190002441

Token 783: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.3915141355246305e-05
    2. ' [(' → logprob: -10.75002384185791
    3. '[((' → logprob: -13.25002384185791
    4. '[' → logprob: -14.50002384185791
    5. '([(' → logprob: -16.875024795532227
    6. '[
' → logprob: -17.125024795532227
    7. '[list' → logprob: -18.625024795532227
    8. '[[' → logprob: -19.500024795532227
    9. 'list' → logprob: -20.250024795532227
    10. '   ' → logprob: -20.875024795532227

Token 784: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.033993277698755264
    2. 'parts' → logprob: -4.033993244171143
    3. 'ops' → logprob: -4.533993244171143
    4. 'o' → logprob: -5.908993244171143
    5. 'lambda' → logprob: -7.033993244171143
    6. 'x' → logprob: -7.658993244171143
    7. 's' → logprob: -8.7839937210083
    8. '_' → logprob: -9.0339937210083
    9. '(op' → logprob: -9.5339937210083
    10. '_,' → logprob: -9.7839937210083

Token 785: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002445317804813385
    2. 'op' → logprob: -9.375244140625
    3. 'parts' → logprob: -10.375244140625
    4. ',' → logprob: -10.500244140625
    5. '(op' → logprob: -10.875244140625
    6. 'ops' → logprob: -10.875244140625
    7. '(' → logprob: -11.250244140625
    8. 's' → logprob: -11.625244140625
    9. '0' → logprob: -11.750244140625
    10. '_parts' → logprob: -12.250244140625

Token 786: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.318681188422488e-05
    2. ' int' → logprob: -11.25001335144043
    3. '[int' → logprob: -16.25001335144043
    4. '(int' → logprob: -17.25001335144043
    5. '<int' → logprob: -18.62501335144043
    6. '=int' → logprob: -19.75001335144043
    7. ']int' → logprob: -20.25001335144043
    8. '
' → logprob: -21.12501335144043
    9. ':int' → logprob: -21.75001335144043
    10. '   ' → logprob: -21.75001335144043

Token 787: '(v' (ID: 6932)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.3069286346435547
    2. '(parts' → logprob: -1.9319286346435547
    3. '(' → logprob: -2.4319286346435547
    4. 'op' → logprob: -4.431928634643555
    5. '(tok' → logprob: -5.556928634643555
    6. '(arg' → logprob: -6.056928634643555
    7. '(t' → logprob: -6.306928634643555
    8. '(v' → logprob: -6.306928634643555
    9. '(x' → logprob: -6.431928634643555
    10. 'parts' → logprob: -6.431928634643555

Token 788: '))' (ID: 915)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9500438570976257
    2. ')]' → logprob: -1.5750439167022705
    3. '))' → logprob: -1.8250439167022705
    4. '(v' → logprob: -1.9500439167022705
    5. 'v' → logprob: -2.5750439167022705
    6. ')' → logprob: -4.075043678283691
    7. ')v' → logprob: -4.950043678283691
    8. '(' → logprob: -6.450043678283691
    9. '[v' → logprob: -7.200043678283691
    10. '])' → logprob: -9.075043678283691

Token 789: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4051554799079895
    2. ' for' → logprob: -1.7801554203033447
    3. 'for' → logprob: -2.1551554203033447
    4. '(op' → logprob: -3.1551554203033447
    5. '[' → logprob: -5.905155658721924
    6. ']' → logprob: -6.280155658721924
    7. '(' → logprob: -7.155155658721924
    8. 'op' → logprob: -8.530155181884766
    9. ' )' → logprob: -9.405155181884766
    10. ')]' → logprob: -9.405155181884766

Token 790: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.676292231422849e-05
    2. '(op' → logprob: -11.250017166137695
    3. ' op' → logprob: -12.500017166137695
    4. '_op' → logprob: -21.375017166137695
    5. '(' → logprob: -22.125017166137695
    6. '	op' → logprob: -22.125017166137695
    7. ' (' → logprob: -22.250017166137695
    8. '[' → logprob: -22.750017166137695
    9. '
' → logprob: -22.875017166137695
    10. 'opf' → logprob: -23.375017166137695

Token 791: ',' (ID: 11)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.48895159363746643
    2. 'op' → logprob: -0.988951563835144
    3. ' op' → logprob: -4.363951683044434
    4. ',' → logprob: -7.113951683044434
    5. ' in' → logprob: -7.363951683044434
    6. ' (' → logprob: -8.238951683044434
    7. 'in' → logprob: -8.863951683044434
    8. '_op' → logprob: -9.363951683044434
    9. '[' → logprob: -9.738951683044434
    10. '	op' → logprob: -10.738951683044434

Token 792: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.534558552724775e-05
    2. ' v' → logprob: -10.750025749206543
    3. 'op' → logprob: -12.500025749206543
    4. '(v' → logprob: -16.000024795532227
    5. '*v' → logprob: -17.500024795532227
    6. '[v' → logprob: -18.375024795532227
    7. '_v' → logprob: -18.875024795532227
    8. ' op' → logprob: -18.875024795532227
    9. '[' → logprob: -19.000024795532227
    10. '(op' → logprob: -19.125024795532227

Token 793: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015303671360016
    2. 'in' → logprob: -1.7015303373336792
    3. ')' → logprob: -9.451530456542969
    4. ']' → logprob: -11.326530456542969
    5. '<|end|>' → logprob: -12.201530456542969
    6. 'import' → logprob: -12.326530456542969
    7. 'n' → logprob: -12.826530456542969
    8. '
' → logprob: -13.076530456542969
    9. '_in' → logprob: -13.201530456542969
    10. 'In' → logprob: -13.326530456542969

Token 794: ' operations' (ID: 12084)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -2.8444881536415778e-05
    2. ' operations' → logprob: -10.500028610229492
    3. 'operation' → logprob: -14.250028610229492
    4. 'operators' → logprob: -17.125028610229492
    5. '.operations' → logprob: -17.875028610229492
    6. 'oper' → logprob: -18.250028610229492
    7. 'op' → logprob: -18.500028610229492
    8. '[' → logprob: -19.000028610229492
    9. '(' → logprob: -20.000028610229492
    10. 'ops' → logprob: -20.625028610229492

Token 795: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.3319124011322856e-05
    2. '       ' → logprob: -11.000022888183594
    3. ' ]' → logprob: -12.750022888183594
    4. '<|end|>' → logprob: -13.750022888183594
    5. ']
' → logprob: -14.125022888183594
    6. ')]' → logprob: -14.625022888183594
    7. ')' → logprob: -14.750022888183594
    8. '()]' → logprob: -15.500022888183594
    9. ']()' → logprob: -15.500022888183594
    10. '<|end|>' → logprob: -15.625022888183594

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010140403173863888
    2. 'solver' → logprob: -5.260140419006348
    3. '   ' → logprob: -5.510140419006348
    4. ' solver' → logprob: -7.635140419006348
    5. '        
' → logprob: -9.260140419006348
    6. 's' → logprob: -9.760140419006348
    7. '
' → logprob: -9.885140419006348
    8. 'ts' → logprob: -9.885140419006348
    9. 't' → logprob: -10.260140419006348
    10. '    
' → logprob: -11.385140419006348

Token 797: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.09221566468477249
    2. ' solver' → logprob: -3.3422157764434814
    3. '       ' → logprob: -3.4672157764434814
    4. 'mas' → logprob: -4.467215538024902
    5. 'ms' → logprob: -5.967215538024902
    6. 's' → logprob: -6.217215538024902
    7. '   ' → logprob: -6.217215538024902
    8. 'sol' → logprob: -6.217215538024902
    9. 'solution' → logprob: -7.717215538024902
    10. ' mas' → logprob: -8.217215538024902

Token 798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.638777494430542
    2. ' =' → logprob: -0.763777494430542
    3. '.' → logprob: -5.138777732849121
    4. '.=' → logprob: -8.388777732849121
    5. '.solve' → logprob: -10.263777732849121
    6. '   ' → logprob: -12.513777732849121
    7. '.s' → logprob: -12.888777732849121
    8. '=
' → logprob: -13.013777732849121
    9. '.py' → logprob: -13.263777732849121
    10. ')' → logprob: -13.388777732849121

Token 799: ' Mark' (ID: 5070)
  Prédit: 'Marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Marked' → logprob: -7.465036105713807e-06
    2. ' Mark' → logprob: -11.875007629394531
    3. 'Mark' → logprob: -15.125007629394531
    4. ' marked' → logprob: -16.75000762939453
    5. 'Highlighted' → logprob: -17.25000762939453
    6. 'Markup' → logprob: -17.50000762939453
    7. 'marked' → logprob: -17.87500762939453
    8. 'Masked' → logprob: -18.50000762939453
    9. 'Named' → logprob: -19.00000762939453
    10. 'Tagged' → logprob: -19.37500762939453

Token 800: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -4.36574100604048e-06
    2. 'Marked' → logprob: -12.375004768371582
    3. 'e' → logprob: -17.625003814697266
    4. 'ked' → logprob: -18.375003814697266
    5. 'ED' → logprob: -18.500003814697266
    6. 'edf' → logprob: -19.000003814697266
    7. 'eded' → logprob: -19.250003814697266
    8. 'edas' → logprob: -19.500003814697266
    9. 'edin' → logprob: -19.750003814697266
    10. 'edis' → logprob: -20.125003814697266

Token 801: 'Ancestor' (ID: 130381)
  Prédit: 'Ancestor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ancestor' → logprob: -1.0280383548888494e-06
    2. 'Anc' → logprob: -14.750000953674316
    3. ' Anc' → logprob: -15.500000953674316
    4. 'ancestor' → logprob: -15.625000953674316
    5. ' ancestor' → logprob: -16.375001907348633
    6. 'An' → logprob: -16.750001907348633
    7. 'A' → logprob: -17.000001907348633
    8. '_' → logprob: -17.125001907348633
    9. 'Ante' → logprob: -18.875001907348633
    10. '
' → logprob: -19.250001907348633

Token 802: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -4.36574100604048e-06
    2. 'solver' → logprob: -13.125004768371582
    3. 'Solved' → logprob: -13.375004768371582
    4. ' Solver' → logprob: -15.625004768371582
    5. '(' → logprob: -15.875004768371582
    6. 'Solve' → logprob: -15.875004768371582
    7. '_solver' → logprob: -16.500003814697266
    8. '(n' → logprob: -16.500003814697266
    9. 'Marked' → logprob: -17.000003814697266
    10. ' solver' → logprob: -17.125003814697266

Token 803: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00224577309563756
    2. '(' → logprob: -6.127245903015137
    3. '(
' → logprob: -10.752245903015137
    4. '(Tree' → logprob: -10.752245903015137
    5. ' (' → logprob: -11.877245903015137
    6. '(T' → logprob: -12.502245903015137
    7. '(tree' → logprob: -13.377245903015137
    8. '   ' → logprob: -13.627245903015137
    9. 'n' → logprob: -13.627245903015137
    10. '(s' → logprob: -13.752245903015137

Token 804: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012976066500414163
    2. ' ,' → logprob: -9.500129699707031
    3. ',parent' → logprob: -10.625129699707031
    4. '       ' → logprob: -11.250129699707031
    5. ',n' → logprob: -11.875129699707031
    6. ',
' → logprob: -12.750129699707031
    7. ',p' → logprob: -13.500129699707031
    8. '   ' → logprob: -13.875129699707031
    9. ')' → logprob: -14.375129699707031
    10. '(' → logprob: -14.375129699707031

Token 805: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.004083385691046715
    2. ' parents' → logprob: -5.504083156585693
    3. 'parent' → logprob: -13.379083633422852
    4. '       ' → logprob: -13.504083633422852
    5. '.parents' → logprob: -14.629083633422852
    6. 'par' → logprob: -14.879083633422852
    7. '   ' → logprob: -15.129083633422852
    8. '           ' → logprob: -15.379083633422852
    9. '```' → logprob: -15.879083633422852
    10. 'Parents' → logprob: -16.37908363342285

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.153795766294934e-06
    2. ' ,' → logprob: -12.125005722045898
    3. '       ' → logprob: -14.375005722045898
    4. ',
' → logprob: -17.3750057220459
    5. '   ' → logprob: -18.6250057220459
    6. '           ' → logprob: -18.8750057220459
    7. '‌,' → logprob: -19.3750057220459
    8. '      ' → logprob: -19.3750057220459
    9. ')' → logprob: -19.6250057220459
    10. '<|end|>' → logprob: -19.8750057220459

Token 807: ' operations' (ID: 12084)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.0005535095697268844
    2. ' operations' → logprob: -7.500553607940674
    3. '       ' → logprob: -16.125553131103516
    4. '.operations' → logprob: -16.125553131103516
    5. '           ' → logprob: -16.375553131103516
    6. 'ops' → logprob: -16.500553131103516
    7. '   ' → logprob: -17.625553131103516
    8. '               ' → logprob: -17.750553131103516
    9. 'operators' → logprob: -18.000553131103516
    10. '_operations' → logprob: -18.250553131103516

Token 808: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013828840106725693
    2. '       ' → logprob: -4.638828754425049
    3. ').' → logprob: -6.138828754425049
    4. '<|end|>' → logprob: -6.513828754425049
    5. ')
' → logprob: -8.388829231262207
    6. '<|end|>' → logprob: -9.263829231262207
    7. '   ' → logprob: -11.013829231262207
    8. ').__' → logprob: -11.513829231262207
    9. ')\
' → logprob: -12.013829231262207
    10. '),' → logprob: -12.013829231262207

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005694755236618221
    2. '   ' → logprob: -8.125569343566895
    3. 'solver' → logprob: -8.250569343566895
    4. '           ' → logprob: -12.875569343566895
    5. '
' → logprob: -13.000569343566895
    6. '```' → logprob: -13.125569343566895
    7. '_solver' → logprob: -13.625569343566895
    8. '        
' → logprob: -13.750569343566895
    9. '<|end|>' → logprob: -13.750569343566895
    10. '<|end|>' → logprob: -14.875569343566895

Token 810: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3922267258167267
    2. 'result' → logprob: -1.1422266960144043
    3. 'res' → logprob: -5.892226696014404
    4. 'output' → logprob: -6.142226696014404
    5. '       ' → logprob: -8.267227172851562
    6. 'answer' → logprob: -9.892227172851562
    7. '   ' → logprob: -10.392227172851562
    8. 'ans' → logprob: -10.642227172851562
    9. 'for' → logprob: -10.892227172851562
    10. '           ' → logprob: -10.892227172851562

Token 811: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00024870390188880265
    2. 'solver' → logprob: -8.375248908996582
    3. '(' → logprob: -11.000248908996582
    4. '(sol' → logprob: -14.000248908996582
    5. '(solution' → logprob: -15.000248908996582
    6. '(
' → logprob: -16.125247955322266
    7. ' solver' → logprob: -16.375247955322266
    8. '_solver' → logprob: -17.125247955322266
    9. 'sol' → logprob: -17.750247955322266
    10. '((' → logprob: -18.500247955322266

Token 812: 'olver' (ID: 13941)
  Prédit: 'olver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olver' → logprob: -3.650518920039758e-06
    2. 'solver' → logprob: -12.875003814697266
    3. '(' → logprob: -14.750003814697266
    4. 'olve' → logprob: -15.125003814697266
    5. 'oler' → logprob: -15.375003814697266
    6. 'ol' → logprob: -16.500003814697266
    7. 'over' → logprob: -17.000003814697266
    8. 'olved' → logprob: -18.625003814697266
    9. '(s' → logprob: -19.000003814697266
    10. 'olvers' → logprob: -19.250003814697266

Token 813: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.500001907348633
    3. ').' → logprob: -15.250001907348633
    4. ' .' → logprob: -15.625001907348633
    5. '.run' → logprob: -16.875001907348633
    6. 'solve' → logprob: -17.125001907348633
    7. '.sol' → logprob: -17.625001907348633
    8. '.
' → logprob: -18.500001907348633
    9. ')' → logprob: -18.625001907348633
    10. '.resolve' → logprob: -18.750001907348633

Token 814: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06197597458958626
    2. '()' → logprob: -2.8119759559631348
    3. '())
' → logprob: -12.436976432800293
    4. '(),' → logprob: -13.561976432800293
    5. '()
' → logprob: -13.811976432800293
    6. ' ())' → logprob: -13.936976432800293
    7. '(' → logprob: -15.311976432800293
    8. '()]' → logprob: -15.936976432800293
    9. '().' → logprob: -15.936976432800293
    10. '()`' → logprob: -16.061975479125977

Token 815: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.047043878585100174
    2. '<|end|>' → logprob: -3.297043800354004
    3. '```' → logprob: -5.547043800354004
    4. ' if' → logprob: -6.172043800354004
    5. '
' → logprob: -6.422043800354004
    6. '#' → logprob: -6.922043800354004
    7. '<|end|>' → logprob: -8.922043800354004
    8. ')' → logprob: -9.797043800354004
    9. '__' → logprob: -9.922043800354004
    10. 'main' → logprob: -10.297043800354004

Token 816: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0380479171872139
    2. '__' → logprob: -3.288048028945923
    3. '_' → logprob: -13.413047790527344
    4. '_name' → logprob: -13.538047790527344
    5. '___' → logprob: -14.038047790527344
    6. ' _' → logprob: -14.288047790527344
    7. ' ' → logprob: -14.413047790527344
    8. '```' → logprob: -14.663047790527344
    9. ' ' → logprob: -15.538047790527344
    10. ' ___' → logprob: -15.788047790527344

Token 817: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0032656495459377766
    2. ' ==' → logprob: -6.503265857696533
    3. '==' → logprob: -6.753265857696533
    4. ' __' → logprob: -8.128265380859375
    5. '.__' → logprob: -9.378265380859375
    6. '__.__' → logprob: -9.878265380859375
    7. '=="' → logprob: -10.628265380859375
    8. '_' → logprob: -10.628265380859375
    9. '[' → logprob: -10.878265380859375
    10. '__.' → logprob: -11.003265380859375

Token 818: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015779515961185098
    2. '__.__' → logprob: -6.501577854156494
    3. '==' → logprob: -10.126578330993652
    4. '__["' → logprob: -11.126578330993652
    5. '__.' → logprob: -11.876578330993652
    6. '__[' → logprob: -12.376578330993652
    7. '__('' → logprob: -13.126578330993652
    8. '=="' → logprob: -13.251578330993652
    9. '__
' → logprob: -13.751578330993652
    10. '__":
' → logprob: -14.001578330993652

Token 819: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.650741696357727
    2. '__' → logprob: -1.025741696357727
    3. ' ==' → logprob: -2.1507415771484375
    4. '=="' → logprob: -5.9007415771484375
    5. '.__' → logprob: -8.400741577148438
    6. '__.__' → logprob: -8.525741577148438
    7. '=='' → logprob: -9.275741577148438
    8. '==
' → logprob: -10.025741577148438
    9. '=' → logprob: -11.275741577148438
    10. '.' → logprob: -11.525741577148438

Token 820: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2014257162809372
    2. ''' → logprob: -1.7014256715774536
    3. '__' → logprob: -11.326425552368164
    4. ' "__' → logprob: -15.451425552368164
    5. ''"' → logprob: -17.076425552368164
    6. '"user' → logprob: -17.076425552368164
    7. '"name' → logprob: -17.701425552368164
    8. '`' → logprob: -17.826425552368164
    9. '"class' → logprob: -17.826425552368164
    10. ' '__' → logprob: -18.076425552368164

Token 821: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0004985823179595172
    2. '__' → logprob: -8.00049877166748
    3. 'name' → logprob: -9.37549877166748
    4. 'built' → logprob: -9.75049877166748
    5. '__.' → logprob: -11.87549877166748
    6. '__':
' → logprob: -12.75049877166748
    7. '_main' → logprob: -13.00049877166748
    8. 'builtin' → logprob: -13.12549877166748
    9. 'python' → logprob: -13.50049877166748
    10. 'if' → logprob: -13.50049877166748

Token 822: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.28152069449424744
    2. '__' → logprob: -1.4065207242965698
    3. '__":
' → logprob: -8.78152084350586
    4. '__:' → logprob: -9.15652084350586
    5. '_' → logprob: -10.53152084350586
    6. ':' → logprob: -10.53152084350586
    7. '':' → logprob: -11.03152084350586
    8. '('__' → logprob: -11.15652084350586
    9. ''' → logprob: -12.15652084350586
    10. '__.' → logprob: -12.40652084350586

Token 823: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.320199877838604e-07
    2. ' main' → logprob: -14.875
    3. '	main' → logprob: -18.25
    4. '   ' → logprob: -19.875
    5. '_main' → logprob: -20.375
    6. '(main' → logprob: -21.5
    7. '__' → logprob: -21.625
    8. 'run' → logprob: -22.125
    9. '```' → logprob: -22.125
    10. '.main' → logprob: -22.25

Token 824: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -22.625
    4. '   ' → logprob: -23.75
    5. '(main' → logprob: -26.25
    6. 'mai' → logprob: -26.375
    7. '.main' → logprob: -26.375
    8. '_main' → logprob: -26.75
    9. 'import' → logprob: -27.625
    10. 'ma' → logprob: -27.625

Token 825: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 823
Tokens correctement prédits (1ère position, stricte): 354
Tokens correctement prédits (1ère position, avec adaptation): 404
Tokens correctement prédits (top 10): 714
Précision stricte (1ère position): 43.01%
Précision adaptée (1ère position): 49.09%
Précision (top 10): 86.76%
================================================================================
