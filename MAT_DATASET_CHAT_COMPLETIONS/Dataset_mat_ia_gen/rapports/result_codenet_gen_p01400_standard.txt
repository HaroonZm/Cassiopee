================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

def dijkstra(graph, start):
    dist = {node: float('inf') for node in graph}
    dist[start] = 0.0
    heap = [(0.0, start)]
    while heap:
        curr_d, u = heapq.heappop(heap)
        if dist[u] < curr_d:
            continue
        for v, time in graph[u]:
            nd = curr_d + time
            if dist[v] > nd:
                dist[v] = nd
                heapq.heappush(heap, (nd, v))
    return dist

input=sys.stdin.readline
while True:
    n,m=map(int,input().split())
    if n==0 and m==0:
        break
    s,p,g=input().split()
    graph = {}
    nodes = set()
    for _ in range(m):
        a,b,d,t=input().split()
        d=int(d)
        t=int(t)
        time = d/40 + t
        if a not in graph:
            graph[a] = []
        if b not in graph:
            graph[b] = []
        graph[a].append((b, time))
        graph[b].append((a, time))
        nodes.add(a)
        nodes.add(b)
    # Dijkstra s->p
    dist_s = dijkstra(graph, s)
    # Dijkstra p->g
    dist_p = dijkstra(graph, p)
    ans = dist_s[p] + dist_p[g]
    print(int(ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5945609211921692
    2. '.' → logprob: -0.9695609211921692
    3. 'import' → logprob: -3.8445608615875244
    4. 'newline' → logprob: -4.2195611000061035
    5. '\' → logprob: -4.7195611000061035
    6. '<|end|>' → logprob: -4.8445611000061035
    7. '```' → logprob: -5.3445611000061035
    8. '
' → logprob: -5.7195611000061035
    9. '<|end|>' → logprob: -6.4695611000061035
    10. '' → logprob: -6.4695611000061035

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9385402993066236e-05
    2. '#' → logprob: -11.500019073486328
    3. '.' → logprob: -12.375019073486328
    4. '_' → logprob: -13.875019073486328
    5. '=' → logprob: -14.250019073486328
    6. 'ify' → logprob: -14.500019073486328
    7. ')' → logprob: -15.000019073486328
    8. 'i' → logprob: -15.125019073486328
    9. 'u' → logprob: -15.250019073486328
    10. 'p' → logprob: -15.500019073486328

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21790528297424316
    2. '
' → logprob: -2.467905282974243
    3. '\n' → logprob: -3.217905282974243
    4. '\' → logprob: -3.592905282974243
    5. '<|end|>' → logprob: -4.592905044555664
    6. '.
' → logprob: -4.967905044555664
    7. '

' → logprob: -4.967905044555664
    8. 'import' → logprob: -5.342905044555664
    9. '' → logprob: -5.467905044555664
    10. '```' → logprob: -5.717905044555664

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4816220998764038
    2. '
' → logprob: -1.9816220998764038
    3. '\' → logprob: -2.7316222190856934
    4. '\n' → logprob: -2.8566222190856934
    5. 'def' → logprob: -3.1066222190856934
    6. '```' → logprob: -3.6066222190856934
    7. '.
' → logprob: -4.231622219085693
    8. 'import' → logprob: -4.356622219085693
    9. '' → logprob: -5.481622219085693
    10. 'from' → logprob: -5.481622219085693

Token 8: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016182884573936462
    2. ' a' → logprob: -7.126618385314941
    3. ' find' → logprob: -8.501618385314941
    4. ' space' → logprob: -9.126618385314941
    5. '_' → logprob: -9.501618385314941
    6. ' ' → logprob: -10.001618385314941
    7. ' process' → logprob: -10.126618385314941
    8. ' heap' → logprob: -10.126618385314941
    9. ' A' → logprob: -10.376618385314941
    10. ' merge' → logprob: -10.501618385314941

Token 9: 'ijkstra' (ID: 124290)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.030939120799303055
    2. 'ijkstra' → logprob: -3.9059391021728516
    3. 'i' → logprob: -4.780939102172852
    4. 'ijk' → logprob: -7.030939102172852
    5. 'ij' → logprob: -7.405939102172852
    6. '_e' → logprob: -8.655939102172852
    7. 'ef' → logprob: -9.155939102172852
    8. 'f' → logprob: -9.780939102172852
    9. '_' → logprob: -10.155939102172852
    10. '	e' → logprob: -10.655939102172852

Token 10: '(graph' (ID: 51300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000667640648316592
    2. '_' → logprob: -7.750667572021484
    3. ' (' → logprob: -9.500667572021484
    4. '(
' → logprob: -10.375667572021484
    5. '<|end|>' → logprob: -10.500667572021484
    6. '```' → logprob: -11.125667572021484
    7. '('' → logprob: -12.000667572021484
    8. '<|end|>' → logprob: -12.000667572021484
    9. '("("' → logprob: -12.125667572021484
    10. ''s' → logprob: -12.250667572021484

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4185371398925781
    2. '(' → logprob: -1.5435371398925781
    3. '[' → logprob: -2.168537139892578
    4. ',' → logprob: -4.668537139892578
    5. '<|end|>' → logprob: -6.168537139892578
    6. '<|end|>' → logprob: -7.418537139892578
    7. '```' → logprob: -8.168537139892578
    8. '.' → logprob: -8.418537139892578
    9. '(
' → logprob: -8.793537139892578
    10. '[node' → logprob: -8.793537139892578

Token 12: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.18453723192214966
    2. ' source' → logprob: -2.059537172317505
    3. 'start' → logprob: -3.309537172317505
    4. 'source' → logprob: -5.434537410736084
    5. ' src' → logprob: -10.184536933898926
    6. 'src' → logprob: -10.434536933898926
    7. ' ' → logprob: -11.434536933898926
    8. '```' → logprob: -12.059536933898926
    9. '[start' → logprob: -12.309536933898926
    10. ' starting' → logprob: -12.684536933898926

Token 13: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3873337209224701
    2. '):' → logprob: -1.1373337507247925
    3. ')' → logprob: -7.887333869934082
    4. ':' → logprob: -10.637333869934082
    5. '):
' → logprob: -11.637333869934082
    6. ' ,' → logprob: -11.762333869934082
    7. ' ):' → logprob: -11.762333869934082
    8. ''):' → logprob: -12.137333869934082
    9. ',node' → logprob: -12.137333869934082
    10. ',:' → logprob: -12.262333869934082

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001455832039937377
    2. 'dist' → logprob: -7.376455783843994
    3. ' distances' → logprob: -7.751455783843994
    4. ' dist' → logprob: -9.126456260681152
    5. '```' → logprob: -9.251456260681152
    6. '    
' → logprob: -10.126456260681152
    7. ' ' → logprob: -10.501456260681152
    8. 'distance' → logprob: -10.626456260681152
    9. '   ' → logprob: -10.751456260681152
    10. '	dist' → logprob: -11.001456260681152

Token 15: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03285640478134155
    2. 'dist' (adapté à ' dist') → logprob: -4.032856464385986
    3. ' dist' → logprob: -4.657856464385986
    4. ' distances' → logprob: -5.782856464385986
    5. '```' → logprob: -7.782856464385986
    6. 'visited' → logprob: -7.907856464385986
    7. ' visited' → logprob: -7.907856464385986
    8. '    ' → logprob: -7.907856464385986
    9. 'distance' → logprob: -8.407855987548828
    10. ' distance' → logprob: -9.657855987548828

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7410865426063538
    2. ' =' → logprob: -1.491086483001709
    3. 'ances' → logprob: -2.116086483001709
    4. '[' → logprob: -2.116086483001709
    5. 'ance' → logprob: -3.116086483001709
    6. '   ' → logprob: -5.241086483001709
    7. ' ' → logprob: -6.491086483001709
    8. ',' → logprob: -6.991086483001709
    9. '=[]' → logprob: -7.241086483001709
    10. 'ANCE' → logprob: -7.366086483001709

Token 17: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.09602516889572144
    2. '{}' → logprob: -2.596025228500366
    3. ' {' → logprob: -4.096024990081787
    4. ' {}' → logprob: -7.971024990081787
    5. ' ' → logprob: -13.596025466918945
    6. ' defaultdict' → logprob: -13.846025466918945
    7. '[' → logprob: -14.346025466918945
    8. '{})' → logprob: -15.221025466918945
    9. '{"' → logprob: -15.346025466918945
    10. '{i' → logprob: -15.346025466918945

Token 18: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.10692852735519409
    2. 'vertex' → logprob: -3.481928586959839
    3. 'start' → logprob: -3.606928586959839
    4. ' node' → logprob: -3.731928586959839
    5. '}' → logprob: -4.23192834854126
    6. 'v' → logprob: -5.85692834854126
    7. ' vertex' → logprob: -7.10692834854126
    8. ' }' → logprob: -7.48192834854126
    9. ' start' → logprob: -7.48192834854126
    10. ' v' → logprob: -9.856928825378418

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.897412822581828e-05
    2. ' :' → logprob: -9.625068664550781
    3. '```' → logprob: -13.750068664550781
    4. '   ' → logprob: -14.625068664550781
    5. ':int' → logprob: -15.875068664550781
    6. ':max' → logprob: -16.12506866455078
    7. ':return' → logprob: -16.37506866455078
    8. ':min' → logprob: -16.50006866455078
    9. ':index' → logprob: -16.62506866455078
    10. ':init' → logprob: -16.87506866455078

Token 20: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.048592709004879
    2. ' float' → logprob: -3.0485928058624268
    3. 'sys' → logprob: -13.298592567443848
    4. ' sys' → logprob: -13.423592567443848
    5. '   ' → logprob: -13.798592567443848
    6. ' ' → logprob: -15.048592567443848
    7. '	float' → logprob: -15.673592567443848
    8. 'int' → logprob: -15.798592567443848
    9. '(float' → logprob: -15.798592567443848
    10. ',float' → logprob: -16.173593521118164

Token 21: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.5577775128767826e-06
    2. '(' → logprob: -12.375005722045898
    3. '("' → logprob: -14.000005722045898
    4. ''' → logprob: -15.625005722045898
    5. '(in' → logprob: -16.5000057220459
    6. ''in' → logprob: -16.5000057220459
    7. '('+' → logprob: -16.7500057220459
    8. '}' → logprob: -17.5000057220459
    9. '   ' → logprob: -17.8750057220459
    10. 'inf' → logprob: -18.1250057220459

Token 22: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -6.869017852295656e-06
    2. 'in' → logprob: -12.375006675720215
    3. 'i' → logprob: -13.875006675720215
    4. ''' → logprob: -15.000006675720215
    5. 'info' → logprob: -15.250006675720215
    6. ''in' → logprob: -15.375006675720215
    7. '-inf' → logprob: -15.375006675720215
    8. '∞' → logprob: -15.625006675720215
    9. '')' → logprob: -16.25000762939453
    10. 'Inf' → logprob: -16.50000762939453

Token 23: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269591897726059
    2. '')' → logprob: -2.1269590854644775
    3. '}' → logprob: -10.626958847045898
    4. ')}' → logprob: -13.126958847045898
    5. '')}' → logprob: -13.501958847045898
    6. '}')' → logprob: -13.876958847045898
    7. '),' → logprob: -14.126958847045898
    8. ' ')' → logprob: -14.876958847045898
    9. ' )' → logprob: -15.001958847045898
    10. '")' → logprob: -15.251958847045898

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4942565858364105
    2. ',' → logprob: -0.9942566156387329
    3. '}' → logprob: -4.744256496429443
    4. 'for' → logprob: -4.869256496429443
    5. ' ' → logprob: -5.994256496429443
    6. ')' → logprob: -7.619256496429443
    7. '   ' → logprob: -8.244256973266602
    8. ' }' → logprob: -8.744256973266602
    9. ' ,' → logprob: -9.119256973266602
    10. '  ' → logprob: -10.744256973266602

Token 25: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.00041637211688794196
    2. ' ' → logprob: -9.12541675567627
    3. ' graph' → logprob: -9.12541675567627
    4. 'node' → logprob: -9.12541675567627
    5. '	node' → logprob: -9.50041675567627
    6. '  ' → logprob: -12.75041675567627
    7. '<|end|>' → logprob: -12.75041675567627
    8. '<|end|>' → logprob: -13.50041675567627
    9. ' nodes' → logprob: -13.62541675567627
    10. '=node' → logprob: -13.62541675567627

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006136395502835512
    2. 'in' → logprob: -5.131136417388916
    3. '<|end|>' → logprob: -9.256135940551758
    4. '<|end|>' → logprob: -9.256135940551758
    5. 's' → logprob: -11.881135940551758
    6. ' ' → logprob: -12.256135940551758
    7. '	in' → logprob: -14.193635940551758
    8. '}' → logprob: -14.256135940551758
    9. ')' → logprob: -14.756135940551758
    10. 'to' → logprob: -15.693635940551758

Token 27: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04858941584825516
    2. ' graph' → logprob: -3.0485894680023193
    3. '	graph' → logprob: -13.548589706420898
    4. '(graph' → logprob: -14.923589706420898
    5. 'raph' → logprob: -16.1735897064209
    6. '```' → logprob: -17.2985897064209
    7. 'Graph' → logprob: -17.5485897064209
    8. ')' → logprob: -17.7985897064209
    9. 'graphql' → logprob: -17.7985897064209
    10. 'range' → logprob: -17.7985897064209

Token 28: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -8.77627644513268e-06
    2. ')' → logprob: -13.000008583068848
    3. ' }' → logprob: -13.250008583068848
    4. ',' → logprob: -13.375008583068848
    5. '}
' → logprob: -13.625008583068848
    6. '   ' → logprob: -13.750008583068848
    7. ')}' → logprob: -14.875008583068848
    8. '})' → logprob: -15.375008583068848
    9. '```' → logprob: -16.375009536743164
    10. '       ' → logprob: -17.375009536743164

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05460882931947708
    2. '    
' → logprob: -3.3046088218688965
    3. '}' → logprob: -4.8046088218688965
    4. '
' → logprob: -5.6796088218688965
    5. 'dist' → logprob: -7.0546088218688965
    6. '[' → logprob: -7.3046088218688965
    7. '\' → logprob: -7.5546088218688965
    8. ',' → logprob: -7.5546088218688965
    9. ' ' → logprob: -8.054609298706055
    10. '\n' → logprob: -8.179609298706055

Token 30: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.07844395935535431
    2. '   ' → logprob: -3.203444004058838
    3. '}' → logprob: -3.828444004058838
    4. ' dist' → logprob: -4.578444004058838
    5. ' ' → logprob: -7.328444004058838
    6. '[' → logprob: -7.828444004058838
    7. '_dist' → logprob: -7.953444004058838
    8. '    
' → logprob: -8.07844352722168
    9. ' }' → logprob: -8.07844352722168
    10. '	dist' → logprob: -8.95344352722168

Token 31: '[start' (ID: 62179)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3133527636528015
    2. '[start' → logprob: -1.3133528232574463
    3. '[node' → logprob: -11.063352584838867
    4. '[data' → logprob: -11.438352584838867
    5. '[user' → logprob: -11.563352584838867
    6. '```' → logprob: -11.688352584838867
    7. '[end' → logprob: -11.938352584838867
    8. '[src' → logprob: -12.063352584838867
    9. '[current' → logprob: -12.438352584838867
    10. '\[' → logprob: -12.438352584838867

Token 32: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.196732960641384e-05
    2. ' ]' → logprob: -9.875082015991211
    3. '}' → logprob: -10.750082015991211
    4. ']=' → logprob: -11.875082015991211
    5. ']}' → logprob: -13.875082015991211
    6. '']' → logprob: -14.125082015991211
    7. ' }' → logprob: -16.25008201599121
    8. '   ' → logprob: -16.37508201599121
    9. '`]' → logprob: -17.00008201599121
    10. '"]' → logprob: -17.12508201599121

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168089255690575
    2. '=' → logprob: -4.2641682624816895
    3. ' ' → logprob: -13.639167785644531
    4. ')' → logprob: -13.764167785644531
    5. ']' → logprob: -14.139167785644531
    6. ' =)' → logprob: -14.514167785644531
    7. '    ' → logprob: -15.014167785644531
    8. ' =
' → logprob: -15.764167785644531
    9. '   ' → logprob: -16.01416778564453
    10. ' )' → logprob: -16.63916778564453

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.383615493774414
    4. '   ' → logprob: -17.633615493774414
    5. '۰' → logprob: -18.758615493774414
    6. '  ' → logprob: -19.008615493774414
    7. '```' → logprob: -19.758615493774414
    8. '00' → logprob: -20.196115493774414
    9. '1' → logprob: -20.383615493774414
    10. '０' → logprob: -21.258615493774414

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.000001907348633
    4. '```' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.750001907348633
    6. '０' → logprob: -20.562501907348633
    7. '٠' → logprob: -20.812501907348633
    8. '00' → logprob: -20.812501907348633
    9. '000' → logprob: -21.062501907348633
    10. ' ' → logprob: -21.062501907348633

Token 36: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0033984826877713203
    2. '   ' → logprob: -7.003398418426514
    3. '    
' → logprob: -7.128398418426514
    4. '' → logprob: -7.128398418426514
    5. '\n' → logprob: -7.753398418426514
    6. ' 
' → logprob: -8.503398895263672
    7. '  
' → logprob: -9.378398895263672
    8. ' ' → logprob: -10.503398895263672
    9. '   
' → logprob: -10.628398895263672
    10. '
' → logprob: -10.753398895263672

Token 37: '0' (ID: 15)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0129014253616333
    2. '0' → logprob: -1.1379014253616333
    3. 'heap' → logprob: -1.3879014253616333
    4. '    
' → logprob: -4.262901306152344
    5. ' ' → logprob: -4.512901306152344
    6. '  
' → logprob: -4.887901306152344
    7. '   ' → logprob: -4.887901306152344
    8. 'he' → logprob: -5.137901306152344
    9. 'import' → logprob: -5.512901306152344
    10. 'queue' → logprob: -5.637901306152344

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00042567000491544604
    2. '\n' → logprob: -9.125425338745117
    3. '' → logprob: -9.250425338745117
    4. '    
' → logprob: -9.500425338745117
    5. ' 
' → logprob: -9.875425338745117
    6. '   ' → logprob: -10.750425338745117
    7. '
' → logprob: -10.875425338745117
    8. '<|end|>' → logprob: -11.000425338745117
    9. '  
' → logprob: -11.375425338745117
    10. '\' → logprob: -11.875425338745117

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03315040096640587
    2. '\n' → logprob: -3.7831504344940186
    3. '   ' → logprob: -5.4081501960754395
    4. '    
' → logprob: -5.6581501960754395
    5. '  
' → logprob: -7.9081501960754395
    6. '\' → logprob: -7.9081501960754395
    7. '' → logprob: -8.158150672912598
    8. ' 
' → logprob: -8.158150672912598
    9. ',' → logprob: -9.158150672912598
    10. 'newline' → logprob: -9.533150672912598

Token 40: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.45837756991386414
    2. '   ' → logprob: -1.7083775997161865
    3. 'pq' → logprob: -2.8333775997161865
    4. ' heap' → logprob: -3.0833775997161865
    5. 'queue' → logprob: -3.0833775997161865
    6. 'priority' → logprob: -3.7083775997161865
    7. '    
' → logprob: -5.708377361297607
    8. 'import' → logprob: -5.958377361297607
    9. 'hq' → logprob: -6.583377361297607
    10. ' queue' → logprob: -6.583377361297607

Token 41: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.23007407784461975
    2. '.' → logprob: -2.230074167251587
    3. ' =' → logprob: -2.730074167251587
    4. '=' → logprob: -3.980074167251587
    5. '.push' → logprob: -5.730073928833008
    6. '=[]' → logprob: -5.730073928833008
    7. ')' → logprob: -5.855073928833008
    8. ' ' → logprob: -6.980073928833008
    9. ' .' → logprob: -7.355073928833008
    10. '[' → logprob: -7.355073928833008

Token 42: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.16595642268657684
    2. '[(' → logprob: -2.415956497192383
    3. ' []' → logprob: -2.915956497192383
    4. '[]' → logprob: -4.665956497192383
    5. ' [' → logprob: -9.790956497192383
    6. '[' → logprob: -11.415956497192383
    7. ' ' → logprob: -13.165956497192383
    8. '([(' → logprob: -14.165956497192383
    9. ' []
' → logprob: -14.415956497192383
    10. '[:]' → logprob: -14.790956497192383

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018416560487821698
    2. 'start' → logprob: -6.7518415451049805
    3. 'dist' → logprob: -8.00184154510498
    4. ' ' → logprob: -8.25184154510498
    5. '(start' → logprob: -10.37684154510498
    6. '(' → logprob: -11.50184154510498
    7. '   ' → logprob: -11.75184154510498
    8. ' start' → logprob: -11.87684154510498
    9. ' dist' → logprob: -12.12684154510498
    10. '(dist' → logprob: -12.12684154510498

Token 44: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4272752852994017e-05
    2. ' ,' → logprob: -12.00002384185791
    3. ',)' → logprob: -12.12502384185791
    4. ')' → logprob: -12.37502384185791
    5. '.' → logprob: -13.87502384185791
    6. '<|end|>' → logprob: -13.87502384185791
    7. ',node' → logprob: -14.00002384185791
    8. ',start' → logprob: -14.00002384185791
    9. ',None' → logprob: -14.62502384185791
    10. ',[' → logprob: -14.75002384185791

Token 45: '0' (ID: 15)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002521561225876212
    2. '0' → logprob: -6.752521514892578
    3. '[start' → logprob: -6.752521514892578
    4. ' start' → logprob: -9.252521514892578
    5. ')' → logprob: -10.752521514892578
    6. ',start' → logprob: -11.127521514892578
    7. '(start' → logprob: -11.252521514892578
    8. '=start' → logprob: -11.627521514892578
    9. ':start' → logprob: -12.252521514892578
    10. ',' → logprob: -12.502521514892578

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7755875129951164e-05
    2. '<|end|>' → logprob: -11.50004768371582
    3. ' ,' → logprob: -11.62504768371582
    4. ')' → logprob: -11.87504768371582
    5. ',
' → logprob: -12.00004768371582
    6. ',start' → logprob: -12.25004768371582
    7. ',)' → logprob: -13.12504768371582
    8. ',node' → logprob: -13.50004768371582
    9. '),' → logprob: -13.87504768371582
    10. ')]' → logprob: -14.12504768371582

Token 47: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.14268910884857178
    2. ' start' → logprob: -2.0176892280578613
    3. '[start' → logprob: -12.142688751220703
    4. ' ' → logprob: -12.642688751220703
    5. ')' → logprob: -13.392688751220703
    6. '(start' → logprob: -13.892688751220703
    7. '```' → logprob: -14.642688751220703
    8. '=start' → logprob: -14.767688751220703
    9. 'star' → logprob: -14.892688751220703
    10. ',start' → logprob: -14.892688751220703

Token 48: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16031642258167267
    2. ')' → logprob: -1.9103164672851562
    3. ')])' → logprob: -9.785316467285156
    4. ']' → logprob: -11.285316467285156
    5. '),' → logprob: -11.910316467285156
    6. '))' → logprob: -12.035316467285156
    7. ' )' → logprob: -12.535316467285156
    8. ')}' → logprob: -12.910316467285156
    9. ')
' → logprob: -13.035316467285156
    10. ')],' → logprob: -14.535316467285156

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1442064642906189
    2. '   ' → logprob: -2.2692065238952637
    3. '    
' → logprob: -4.269206523895264
    4. ')' → logprob: -5.394206523895264
    5. 'while' → logprob: -5.894206523895264
    6. '  
' → logprob: -6.394206523895264
    7. '\n' → logprob: -6.394206523895264
    8. ' while' → logprob: -6.769206523895264
    9. '   
' → logprob: -6.894206523895264
    10. ' 
' → logprob: -6.894206523895264

Token 50: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05680723488330841
    2. 'while' (adapté à ' while') → logprob: -3.306807279586792
    3. ' while' → logprob: -4.556807041168213
    4. '   ' → logprob: -6.431807041168213
    5. '    
' → logprob: -6.431807041168213
    6. ' 
' → logprob: -6.431807041168213
    7. '  
' → logprob: -6.681807041168213
    8. '\n' → logprob: -7.931807041168213
    9. '' → logprob: -8.056807518005371
    10. '   
' → logprob: -8.306807518005371

Token 51: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.0016531638102605939
    2. 'heap' → logprob: -6.50165319442749
    3. ' ' → logprob: -9.126652717590332
    4. '(heap' → logprob: -10.501652717590332
    5. ' len' → logprob: -11.751652717590332
    6. '.heap' → logprob: -12.751652717590332
    7. ' he' → logprob: -13.501652717590332
    8. '_heap' → logprob: -14.126652717590332
    9. '  ' → logprob: -14.251652717590332
    10. ' ' → logprob: -15.376652717590332

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006504826596938074
    2. '):' → logprob: -7.500650405883789
    3. ':**' → logprob: -9.750650405883789
    4. '>:' → logprob: -11.375650405883789
    5. '[' → logprob: -11.625650405883789
    6. ',' → logprob: -12.125650405883789
    7. ']:' → logprob: -13.125650405883789
    8. ':
' → logprob: -13.375650405883789
    9. '<|end|>' → logprob: -13.875650405883789
    10. ')' → logprob: -14.000650405883789

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6372878551483154
    2. ',' → logprob: -0.7622878551483154
    3. ' ,' → logprob: -6.5122880935668945
    4. '   ' → logprob: -7.3872880935668945
    5. ',
' → logprob: -7.6372880935668945
    6. ' heap' → logprob: -8.137288093566895
    7. 'heap' → logprob: -8.262288093566895
    8. ')' → logprob: -8.637288093566895
    9. ':' → logprob: -8.637288093566895
    10. '(heap' → logprob: -9.012288093566895

Token 54: ' curr' (ID: 10495)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.3590209484100342
    2. 'dist' → logprob: -1.8590209484100342
    3. '   ' → logprob: -2.234020948410034
    4. '       ' → logprob: -2.359020948410034
    5. ' (' → logprob: -2.734020948410034
    6. ' cost' → logprob: -3.234020948410034
    7. 'current' → logprob: -3.484020948410034
    8. ',' → logprob: -3.609020948410034
    9. 'd' → logprob: -3.734020948410034
    10. '(' → logprob: -3.734020948410034

Token 55: '_d' (ID: 1565)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.005238856188952923
    2. '_distance' → logprob: -5.880239009857178
    3. '_cost' → logprob: -6.630239009857178
    4. '_' → logprob: -7.755239009857178
    5. '_d' → logprob: -7.755239009857178
    6. 'dist' → logprob: -8.38023853302002
    7. 'Dist' → logprob: -12.13023853302002
    8. '[' → logprob: -12.38023853302002
    9. '_dis' → logprob: -12.50523853302002
    10. '_val' → logprob: -13.00523853302002

Token 56: ',' (ID: 11)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.0686752200126648
    2. ',' → logprob: -3.1936752796173096
    3. 'istance' → logprob: -3.6936752796173096
    4. 'is' → logprob: -8.06867504119873
    5. ' ,' → logprob: -10.31867504119873
    6. 'ista' → logprob: -10.56867504119873
    7. 'istan' → logprob: -10.56867504119873
    8. '=' → logprob: -11.69367504119873
    9. 'e' → logprob: -11.81867504119873
    10. '```' → logprob: -11.81867504119873

Token 57: ' u' (ID: 337)
  Prédit: ' curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.7762101292610168
    2. 'curr' → logprob: -1.151210069656372
    3. ' u' → logprob: -2.401210069656372
    4. ' node' → logprob: -2.651210069656372
    5. 'u' → logprob: -3.151210069656372
    6. 'node' → logprob: -4.276210308074951
    7. ' current' → logprob: -5.526210308074951
    8. 'current' → logprob: -6.651210308074951
    9. ' ' → logprob: -9.151209831237793
    10. '	curr' → logprob: -9.776209831237793

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2372961938381195
    2. '=' → logprob: -1.987296223640442
    3. ')' → logprob: -2.6122961044311523
    4. ')=' → logprob: -7.487296104431152
    5. ' )' → logprob: -9.612296104431152
    6. ']' → logprob: -9.862296104431152
    7. ' ' → logprob: -9.862296104431152
    8. ',' → logprob: -10.862296104431152
    9. ' =)' → logprob: -11.112296104431152
    10. '   ' → logprob: -11.487296104431152

Token 59: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.00341332470998168
    2. 'heap' → logprob: -6.128413200378418
    3. ' he' → logprob: -6.753413200378418
    4. ' ' → logprob: -10.503413200378418
    5. 'he' → logprob: -10.628413200378418
    6. '(heap' → logprob: -13.003413200378418
    7. '.heap' → logprob: -13.128413200378418
    8. ' h' → logprob: -13.878413200378418
    9. '```' → logprob: -14.628413200378418
    10. ' hea' → logprob: -14.815913200378418

Token 60: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00021366903092712164
    2. '[' → logprob: -8.625213623046875
    3. 'p' → logprob: -11.750213623046875
    4. '.pop' → logprob: -11.750213623046875
    5. '.' → logprob: -12.000213623046875
    6. '.he' → logprob: -13.000213623046875
    7. '   ' → logprob: -13.250213623046875
    8. '```' → logprob: -13.500213623046875
    9. ')' → logprob: -13.625213623046875
    10. 'pop' → logprob: -13.750213623046875

Token 61: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0006558468448929489
    2. '.' → logprob: -7.375655651092529
    3. '.pop' → logprob: -11.250656127929688
    4. '.heap' → logprob: -11.625656127929688
    5. '.h' → logprob: -13.000656127929688
    6. ' .' → logprob: -13.375656127929688
    7. 'he' → logprob: -13.875656127929688
    8. '.p' → logprob: -14.250656127929688
    9. '.q' → logprob: -15.000656127929688
    10. ' he' → logprob: -15.125656127929688

Token 62: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.570319702499546e-05
    2. 'ap' → logprob: -10.625025749206543
    3. 'pp' → logprob: -13.875025749206543
    4. '```' → logprob: -16.500024795532227
    5. 'pop' → logprob: -16.625024795532227
    6. '[' → logprob: -16.875024795532227
    7. 'a' → logprob: -17.125024795532227
    8. ' app' → logprob: -17.750024795532227
    9. '(app' → logprob: -18.500024795532227
    10. 'appen' → logprob: -18.625024795532227

Token 63: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.38703179359436035
    2. 'ush' → logprob: -1.1370317935943604
    3. 'le' → logprob: -8.887031555175781
    4. 'push' → logprob: -11.887031555175781
    5. 'uf' → logprob: -12.387031555175781
    6. 'p' → logprob: -13.137031555175781
    7. 'pop' → logprob: -13.262031555175781
    8. 'u' → logprob: -13.262031555175781
    9. 'ut' → logprob: -13.887031555175781
    10. 'ort' → logprob: -14.387031555175781

Token 64: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0003827676991932094
    2. '(' → logprob: -7.875382900238037
    3. '(queue' → logprob: -13.750382423400879
    4. '(h' → logprob: -14.125382423400879
    5. ' (' → logprob: -14.750382423400879
    6. 'heap' → logprob: -16.125383377075195
    7. '(
' → logprob: -16.500383377075195
    8. '(graph' → logprob: -16.750383377075195
    9. ')' → logprob: -16.875383377075195
    10. '(

' → logprob: -17.250383377075195

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.886803359724581e-05
    2. ')
' → logprob: -9.500079154968262
    3. ' )' → logprob: -13.000079154968262
    4. '):' → logprob: -13.750079154968262
    5. '   ' → logprob: -16.125078201293945
    6. ')

' → logprob: -16.250078201293945
    7. '       ' → logprob: -16.250078201293945
    8. ')
' → logprob: -16.750078201293945
    9. ':' → logprob: -17.000078201293945
    10. '):
' → logprob: -17.375078201293945

Token 66: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15662570297718048
    2. '       ' → logprob: -2.281625747680664
    3. '<|end|>' → logprob: -3.406625747680664
    4. '        
' → logprob: -5.531625747680664
    5. ' 
' → logprob: -6.781625747680664
    6. ':' → logprob: -6.906625747680664
    7. '  
' → logprob: -7.156625747680664
    8. '    
' → logprob: -7.531625747680664
    9. '   ' → logprob: -7.781625747680664
    10. ')' → logprob: -8.156625747680664

Token 67: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 68: ' dist' (ID: 3601)
  Prédit: ' curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.06332520395517349
    2. 'curr' → logprob: -3.0633251667022705
    3. ' dist' → logprob: -4.31332540512085
    4. 'dist' → logprob: -6.81332540512085
    5. '	curr' → logprob: -9.063324928283691
    6. '(curr' → logprob: -11.938324928283691
    7. '[curr' → logprob: -12.563324928283691
    8. '	dist' → logprob: -12.563324928283691
    9. '   ' → logprob: -12.813324928283691
    10. ' ' → logprob: -13.063324928283691

Token 69: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9623810658231378e-05
    2. '[' → logprob: -11.000020027160645
    3. 'u' → logprob: -13.000020027160645
    4. '<u' → logprob: -15.625020027160645
    5. '[curr' → logprob: -15.875020027160645
    6. '```' → logprob: -16.250019073486328
    7. ' u' → logprob: -16.875019073486328
    8. '[node' → logprob: -17.625019073486328
    9. '	u' → logprob: -17.875019073486328
    10. ' [' → logprob: -18.125019073486328

Token 70: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.004266796633601189
    2. ' ' → logprob: -6.129266738891602
    3. '<' → logprob: -6.629266738891602
    4. '<u' → logprob: -8.629266738891602
    5. '  ' → logprob: -9.004266738891602
    6. '<|end|>' → logprob: -9.254266738891602
    7. ')' → logprob: -9.879266738891602
    8. ']' → logprob: -10.129266738891602
    9. '```' → logprob: -10.254266738891602
    10. ')<' → logprob: -10.629266738891602

Token 71: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.010111365467309952
    2. '<' → logprob: -4.760111331939697
    3. '<u' → logprob: -7.385111331939697
    4. ' ' → logprob: -7.885111331939697
    5. '<v' → logprob: -9.510111808776855
    6. '<c' → logprob: -9.760111808776855
    7. '<|end|>' → logprob: -9.885111808776855
    8. '<int' → logprob: -10.260111808776855
    9. '  ' → logprob: -10.635111808776855
    10. '<p' → logprob: -10.760111808776855

Token 72: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.6328113675117493
    2. 'curr' → logprob: -0.7578113675117493
    3. ' ' → logprob: -9.007811546325684
    4. '	curr' → logprob: -9.757811546325684
    5. '(curr' → logprob: -11.757811546325684
    6. '_curr' → logprob: -12.007811546325684
    7. '[curr' → logprob: -12.132811546325684
    8. 'Curr' → logprob: -12.632811546325684
    9. '.curr' → logprob: -13.507811546325684
    10. 'c' → logprob: -13.507811546325684

Token 73: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.735893965815194e-05
    2. '_' → logprob: -11.000017166137695
    3. 'd' → logprob: -14.375017166137695
    4. ' _' → logprob: -18.375017166137695
    5. '_c' → logprob: -18.625017166137695
    6. '\' → logprob: -18.750017166137695
    7. '_u' → logprob: -18.875017166137695
    8. '__' → logprob: -19.000017166137695
    9. ')' → logprob: -19.125017166137695
    10. '_dist' → logprob: -19.125017166137695

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038138532545417547
    2. ':
' → logprob: -5.628813743591309
    3. '       ' → logprob: -8.878813743591309
    4. ' continue' → logprob: -10.253813743591309
    5. 'continue' → logprob: -11.003813743591309
    6. '           ' → logprob: -11.753813743591309
    7. ' :' → logprob: -12.128813743591309
    8. ' continues' → logprob: -13.128813743591309
    9. '	continue' → logprob: -13.378813743591309
    10. '   ' → logprob: -13.878813743591309

Token 75: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05107976496219635
    2. ' continue' → logprob: -3.426079750061035
    3. '           ' → logprob: -4.301079750061035
    4. 'continue' → logprob: -5.926079750061035
    5. ':' → logprob: -7.676079750061035
    6. '	continue' → logprob: -8.676079750061035
    7. ' continues' → logprob: -8.926079750061035
    8. '_continue' → logprob: -9.301079750061035
    9. '   ' → logprob: -9.426079750061035
    10. '
' → logprob: -10.301079750061035

Token 76: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2866876721382141
    2. 'continue' (adapté à ' continue') → logprob: -1.5366876125335693
    3. '       ' → logprob: -4.036687850952148
    4. '           ' → logprob: -4.161687850952148
    5. '	continue' → logprob: -7.411687850952148
    6. '_continue' → logprob: -8.661687850952148
    7. 'contin' → logprob: -9.911687850952148
    8. '   ' → logprob: -10.036687850952148
    9. '               ' → logprob: -10.536687850952148
    10. 'continu' → logprob: -11.661687850952148

Token 77: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3011106848716736
    2. '        
' → logprob: -1.9261107444763184
    3. '
' → logprob: -2.3011107444763184
    4. '<|end|>' → logprob: -4.426110744476318
    5. '        ' → logprob: -7.176110744476318
    6. ' 
' → logprob: -8.42611026763916
    7. '            
' → logprob: -8.80111026763916
    8. ' for' → logprob: -9.17611026763916
    9. '         
' → logprob: -9.17611026763916
    10. '       
' → logprob: -9.17611026763916

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6750174760818481
    2. '
' → logprob: -0.9250174760818481
    3. '        
' → logprob: -2.4250173568725586
    4. '<|end|>' → logprob: -5.550017356872559
    5. ' 
' → logprob: -7.425017356872559
    6. '  
' → logprob: -7.675017356872559
    7. '            
' → logprob: -8.550017356872559
    8. '    
' → logprob: -9.425017356872559
    9. '       
' → logprob: -9.550017356872559
    10. '' → logprob: -9.800017356872559

Token 79: ' for' (ID: 395)
  Prédit: '        
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        
' → logprob: -1.2591665983200073
    2. '       ' → logprob: -1.3841665983200073
    3. ' for' → logprob: -2.134166717529297
    4. '
' → logprob: -2.259166717529297
    5. ' 
' → logprob: -2.509166717529297
    6. '    
' → logprob: -2.634166717529297
    7. 'for' (adapté à ' for') → logprob: -3.134166717529297
    8. '   ' → logprob: -4.509166717529297
    9. '\n' → logprob: -4.509166717529297
    10. '   
' → logprob: -5.134166717529297

Token 80: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.040932249277830124
    2. 'v' → logprob: -3.2909321784973145
    3. 'neighbor' → logprob: -6.2909321784973145
    4. ' neighbor' → logprob: -6.9159321784973145
    5. ' ' → logprob: -11.540932655334473
    6. '	v' → logprob: -11.540932655334473
    7. ',' → logprob: -12.040932655334473
    8. 'neighbors' → logprob: -13.040932655334473
    9. '(v' → logprob: -13.290932655334473
    10. ' node' → logprob: -13.540932655334473

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002851729223039001
    2. ' ,' → logprob: -8.250285148620605
    3. ' in' → logprob: -11.125285148620605
    4. '<|end|>' → logprob: -12.500285148620605
    5. ',v' → logprob: -13.125285148620605
    6. '‌,' → logprob: -14.250285148620605
    7. ' ' → logprob: -14.500285148620605
    8. ',node' → logprob: -14.750285148620605
    9. ')' → logprob: -15.375285148620605
    10. ',u' → logprob: -15.625285148620605

Token 82: ' time' (ID: 1058)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.307888388633728
    2. ' weight' → logprob: -1.932888388633728
    3. 'w' → logprob: -2.5578885078430176
    4. 'weight' → logprob: -3.1828885078430176
    5. ' cost' → logprob: -7.307888507843018
    6. 'cost' → logprob: -8.30788803100586
    7. ' ' → logprob: -8.80788803100586
    8. ' wt' → logprob: -9.30788803100586
    9. '   ' → logprob: -9.43288803100586
    10. 'wt' → logprob: -10.43288803100586

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021000059321522713
    2. '_cost' → logprob: -4.020999908447266
    3. 'cost' → logprob: -6.645999908447266
    4. ',' → logprob: -7.520999908447266
    5. '_time' → logprob: -8.770999908447266
    6. 'in' → logprob: -9.020999908447266
    7. '_' → logprob: -9.020999908447266
    8. ')' → logprob: -9.395999908447266
    9. 's' → logprob: -9.520999908447266
    10. '_taken' → logprob: -9.770999908447266

Token 84: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.0017204000614583492
    2. 'graph' → logprob: -6.376720428466797
    3. '	graph' → logprob: -11.251720428466797
    4. ' ' → logprob: -12.376720428466797
    5. '(graph' → logprob: -14.001720428466797
    6. '_graph' → logprob: -17.001720428466797
    7. 'raph' → logprob: -17.126720428466797
    8. '.graph' → logprob: -17.501720428466797
    9. ' ' → logprob: -17.876720428466797
    10. ')' → logprob: -18.376720428466797

Token 85: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.4736459888808895e-05
    2. '[' → logprob: -11.375014305114746
    3. 'u' → logprob: -14.000014305114746
    4. '[node' → logprob: -14.875014305114746
    5. '[s' → logprob: -15.250014305114746
    6. '[v' → logprob: -15.500014305114746
    7. '.' → logprob: -15.500014305114746
    8. '```' → logprob: -15.500014305114746
    9. '[(' → logprob: -15.625014305114746
    10. ' [' → logprob: -15.750014305114746

Token 86: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05293358862400055
    2. '):' → logprob: -3.177933692932129
    3. ']' → logprob: -5.427933692932129
    4. '].' → logprob: -5.927933692932129
    5. '.items' → logprob: -7.177933692932129
    6. ':' → logprob: -7.427933692932129
    7. '}:' → logprob: -7.677933692932129
    8. ')' → logprob: -8.302933692932129
    9. ']):' → logprob: -8.302933692932129
    10. ']:
' → logprob: -9.052933692932129

Token 87: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7250450849533081
    2. '<|end|>' → logprob: -1.100045084953308
    3. ':' → logprob: -1.850045084953308
    4. '<|end|>' → logprob: -5.100045204162598
    5. '       ' → logprob: -5.225045204162598
    6. '):' → logprob: -5.600045204162598
    7. ',' → logprob: -5.850045204162598
    8. ' :' → logprob: -6.475045204162598
    9. ')' → logprob: -6.600045204162598
    10. '        ' → logprob: -6.725045204162598

Token 88: ' nd' (ID: 5914)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.766703188419342
    2. '<|end|>' → logprob: -1.1417031288146973
    3. '               ' → logprob: -2.7667031288146973
    4. ' 
' → logprob: -2.7667031288146973
    5. '           ' → logprob: -3.1417031288146973
    6. ')' → logprob: -4.641703128814697
    7. '
' → logprob: -5.141703128814697
    8. '  
' → logprob: -5.141703128814697
    9. '            ' → logprob: -6.016703128814697
    10. '<|end|>' → logprob: -6.016703128814697

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2036478519439697
    2. '=' → logprob: -1.8286478519439697
    3. 'ew' → logprob: -1.8286478519439697
    4. 'ext' → logprob: -2.0786478519439697
    5. 'e' → logprob: -2.3286478519439697
    6. 'w' → logprob: -2.8286478519439697
    7. '_' → logprob: -3.2036478519439697
    8. 'ist' → logprob: -4.078647613525391
    9. 'ex' → logprob: -4.328647613525391
    10. 't' → logprob: -4.828647613525391

Token 90: ' curr' (ID: 10495)
  Prédit: ' curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' curr' → logprob: -0.1435627043247223
    2. 'curr' → logprob: -2.0185627937316895
    3. ' dist' → logprob: -7.3935627937316895
    4. ' ' → logprob: -9.393562316894531
    5. '	curr' → logprob: -10.018562316894531
    6. '(curr' → logprob: -10.143562316894531
    7. 'dist' → logprob: -10.143562316894531
    8. '[curr' → logprob: -10.268562316894531
    9. 'Curr' → logprob: -11.518562316894531
    10. ' cur' → logprob: -12.518562316894531

Token 91: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.00018244501552544534
    2. '_' → logprob: -8.625182151794434
    3. ' _' → logprob: -13.875182151794434
    4. '+' → logprob: -14.250182151794434
    5. 'd' → logprob: -14.875182151794434
    6. '+d' → logprob: -15.500182151794434
    7. '_t' → logprob: -15.750182151794434
    8. 't' → logprob: -16.50018310546875
    9. ' ' → logprob: -16.50018310546875
    10. '._' → logprob: -16.87518310546875

Token 92: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889595627784729
    2. '+' → logprob: -2.5788960456848145
    3. '<|end|>' → logprob: -12.703895568847656
    4. ' ' → logprob: -13.578895568847656
    5. ' ' → logprob: -13.828895568847656
    6. ' plus' → logprob: -14.828895568847656
    7. '+xml' → logprob: -15.828895568847656
    8. '＋' → logprob: -15.953895568847656
    9. '<|end|>' → logprob: -16.828895568847656
    10. '[' → logprob: -17.078895568847656

Token 93: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3132653534412384
    2. 'time' → logprob: -1.313265323638916
    3. ' ' → logprob: -13.563265800476074
    4. '	time' → logprob: -14.313265800476074
    5. '(time' → logprob: -14.563265800476074
    6. '"time' → logprob: -14.563265800476074
    7. '1' → logprob: -15.563265800476074
    8. ' t' → logprob: -15.813265800476074
    9. ' ' → logprob: -15.938265800476074
    10. '=time' → logprob: -17.063264846801758

Token 94: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7383611798286438
    2. '<|end|>' → logprob: -0.7383611798286438
    3. '<|end|>' → logprob: -4.488361358642578
    4. ' 
' → logprob: -4.613361358642578
    5. ')' → logprob: -5.113361358642578
    6. '  
' → logprob: -5.363361358642578
    7. '           ' → logprob: -5.613361358642578
    8. '            
' → logprob: -6.363361358642578
    9. '' → logprob: -6.613361358642578
    10. ' if' → logprob: -6.738361358642578

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10468335449695587
    2. '
' → logprob: -2.4796833992004395
    3. '<|end|>' → logprob: -4.6046833992004395
    4. '       ' → logprob: -5.8546833992004395
    5. '            
' → logprob: -7.2296833992004395
    6. '               ' → logprob: -7.3546833992004395
    7. ')' → logprob: -8.229682922363281
    8. '<|end|>' → logprob: -8.354682922363281
    9. ' 
' → logprob: -8.604682922363281
    10. '  
' → logprob: -8.729682922363281

Token 96: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6213977932929993
    2. '           ' → logprob: -1.1213977336883545
    3. ' 
' → logprob: -3.1213977336883545
    4. ' if' → logprob: -3.3713977336883545
    5. '<|end|>' → logprob: -3.9963977336883545
    6. '  
' → logprob: -4.746397972106934
    7. ' ' → logprob: -4.996397972106934
    8. '               ' → logprob: -5.121397972106934
    9. '            
' → logprob: -5.121397972106934
    10. 'if' (adapté à ' if') → logprob: -5.746397972106934

Token 97: ' dist' (ID: 3601)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.00699952058494091
    2. ' dist' → logprob: -5.006999492645264
    3. 'nd' → logprob: -8.256999969482422
    4. '(nd' → logprob: -11.631999969482422
    5. 'dist' → logprob: -12.256999969482422
    6. ' ndo' → logprob: -13.256999969482422
    7. '_nd' → logprob: -13.881999969482422
    8. ' ' → logprob: -13.881999969482422
    9. ' nda' → logprob: -13.881999969482422
    10. ' ndim' → logprob: -14.194499969482422

Token 98: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -11.875007629394531
    3. '[u' → logprob: -14.750007629394531
    4. 'v' → logprob: -16.62500762939453
    5. '<|end|>' → logprob: -16.75000762939453
    6. '[V' → logprob: -17.00000762939453
    7. '[node' → logprob: -17.37500762939453
    8. '	v' → logprob: -17.62500762939453
    9. '[val' → logprob: -17.75000762939453
    10. '[value' → logprob: -17.87500762939453

Token 99: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0059470487758517265
    2. '>' → logprob: -5.130947113037109
    3. ' ' → logprob: -11.75594711303711
    4. ']' → logprob: -12.25594711303711
    5. ')' → logprob: -13.00594711303711
    6. '[' → logprob: -14.00594711303711
    7. '">' → logprob: -14.50594711303711
    8. ']>' → logprob: -14.88094711303711
    9. '   ' → logprob: -15.00594711303711
    10. ')>' → logprob: -15.13094711303711

Token 100: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.054892994463443756
    2. '>' → logprob: -2.9298930168151855
    3. ' ' → logprob: -12.179892539978027
    4. '">' → logprob: -13.804892539978027
    5. '[' → logprob: -14.304892539978027
    6. '.' → logprob: -14.429892539978027
    7. ' >
' → logprob: -14.554892539978027
    8. '   ' → logprob: -14.804892539978027
    9. ' >

' → logprob: -15.179892539978027
    10. '>`' → logprob: -15.179892539978027

Token 101: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.0007130279554985464
    2. 'nd' → logprob: -7.250712871551514
    3. ' ' → logprob: -13.375713348388672
    4. '(nd' → logprob: -14.250713348388672
    5. '_nd' → logprob: -15.250713348388672
    6. ' ' → logprob: -15.500713348388672
    7. ' nde' → logprob: -16.000713348388672
    8. ' ndo' → logprob: -16.875713348388672
    9. '  ' → logprob: -17.000713348388672
    10. ' nda' → logprob: -17.625713348388672

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024918261915445328
    2. ':
' → logprob: -6.0024919509887695
    3. ' :' → logprob: -11.87749195098877
    4. '):' → logprob: -12.37749195098877
    5. '):
' → logprob: -13.00249195098877
    6. ' :
' → logprob: -14.37749195098877
    7. ':

' → logprob: -14.75249195098877
    8. ':
' → logprob: -14.75249195098877
    9. '<|end|>' → logprob: -14.75249195098877
    10. '           ' → logprob: -15.25249195098877

Token 103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.281719833612442
    2. ':' → logprob: -1.6567198038101196
    3. ':
' → logprob: -3.031719923019409
    4. '           ' → logprob: -6.53171968460083
    5. ' :
' → logprob: -6.65671968460083
    6. ' :' → logprob: -6.78171968460083
    7. '):
' → logprob: -7.03171968460083
    8. '<|end|>' → logprob: -8.031720161437988
    9. ',' → logprob: -8.406720161437988
    10. '              ' → logprob: -8.781720161437988

Token 104: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.12818509340286255
    2. '               ' → logprob: -2.3781850337982178
    3. 'dist' (adapté à ' dist') → logprob: -4.003185272216797
    4. '                   ' → logprob: -4.878185272216797
    5. '                ' → logprob: -7.253185272216797
    6. '	dist' → logprob: -8.128185272216797
    7. ' ' → logprob: -8.628185272216797
    8. '
' → logprob: -9.128185272216797
    9. '   ' → logprob: -9.378185272216797
    10. '           ' → logprob: -9.503185272216797

Token 105: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.5107177862082608e-05
    2. '[' → logprob: -10.875024795532227
    3. 'v' → logprob: -13.375024795532227
    4. '=v' → logprob: -14.250024795532227
    5. '	v' → logprob: -14.750024795532227
    6. ',v' → logprob: -14.750024795532227
    7. ' v' → logprob: -14.750024795532227
    8. '```' → logprob: -15.125024795532227
    9. '][' → logprob: -15.250024795532227
    10. ' [' → logprob: -15.250024795532227

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21360431611537933
    2. ' =' → logprob: -1.7136043310165405
    3. '=' → logprob: -4.83860445022583
    4. ' ]' → logprob: -5.71360445022583
    5. ']=' → logprob: -7.08860445022583
    6. ')' → logprob: -10.463603973388672
    7. '               ' → logprob: -11.588603973388672
    8. '                   ' → logprob: -12.213603973388672
    9. ')]' → logprob: -12.463603973388672
    10. ' ' → logprob: -12.588603973388672

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00015943869948387146
    2. '=' → logprob: -8.75015926361084
    3. ' =
' → logprob: -14.50015926361084
    4. '<|end|>' → logprob: -15.00015926361084
    5. ' ' → logprob: -16.625160217285156
    6. ' =)' → logprob: -17.500160217285156
    7. ',' → logprob: -18.625160217285156
    8. ' =
' → logprob: -19.125160217285156
    9. '.' → logprob: -19.125160217285156
    10. ')' → logprob: -19.375160217285156

Token 108: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.0017037445213645697
    2. 'nd' → logprob: -6.37670373916626
    3. '(nd' → logprob: -14.376704216003418
    4. '_nd' → logprob: -15.376704216003418
    5. ' ' → logprob: -15.501704216003418
    6. ' ndo' → logprob: -15.626704216003418
    7. ' ' → logprob: -15.876704216003418
    8. ' nde' → logprob: -16.2517032623291
    9. ' nb' → logprob: -17.1267032623291
    10. ' 
' → logprob: -17.2517032623291

Token 109: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002383441897109151
    2. 'heap' → logprob: -9.000238418579102
    3. ' heap' → logprob: -9.625238418579102
    4. '<|end|>' → logprob: -11.125238418579102
    5. '(heap' → logprob: -11.625238418579102
    6. '
' → logprob: -12.000238418579102
    7. ',' → logprob: -12.125238418579102
    8. '           ' → logprob: -12.500238418579102
    9. '              ' → logprob: -13.000238418579102
    10. '                   ' → logprob: -13.750238418579102

Token 110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002293471246957779
    2. 'heap' → logprob: -6.877293586730957
    3. ' heap' → logprob: -7.002293586730957
    4. '                
' → logprob: -8.502293586730957
    5. '<|end|>' → logprob: -10.127293586730957
    6. '(heap' → logprob: -10.627293586730957
    7. '           ' → logprob: -10.877293586730957
    8. '
' → logprob: -11.127293586730957
    9. '              ' → logprob: -11.627293586730957
    10. '```' → logprob: -11.877293586730957

Token 111: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.2595755159854889
    2. ' heap' → logprob: -1.5095754861831665
    3. '               ' → logprob: -4.884575366973877
    4. 'he' → logprob: -10.384575843811035
    5. '(heap' → logprob: -11.509575843811035
    6. ' he' → logprob: -12.509575843811035
    7. '.heap' → logprob: -12.759575843811035
    8. '           ' → logprob: -12.759575843811035
    9. '                   ' → logprob: -12.884575843811035
    10. '_heap' → logprob: -14.384575843811035

Token 112: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.173704271830502e-06
    2. 'p' → logprob: -13.25000286102295
    3. '.push' → logprob: -14.50000286102295
    4. 'push' → logprob: -14.75000286102295
    5. 'qp' → logprob: -16.750003814697266
    6. '.he' → logprob: -16.875003814697266
    7. '.q' → logprob: -17.000003814697266
    8. '_push' → logprob: -17.250003814697266
    9. '               ' → logprob: -17.250003814697266
    10. '```' → logprob: -17.375003814697266

Token 113: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -6.76628842484206e-05
    2. '.heap' → logprob: -9.875067710876465
    3. '.' → logprob: -11.625067710876465
    4. '.push' → logprob: -12.500067710876465
    5. 'he' → logprob: -13.000067710876465
    6. ' he' → logprob: -14.875067710876465
    7. ' .' → logprob: -16.37506675720215
    8. 'push' → logprob: -16.37506675720215
    9. '.h' → logprob: -16.50006675720215
    10. '_he' → logprob: -16.62506675720215

Token 114: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.955703818472102e-05
    2. 'ap' → logprob: -9.750059127807617
    3. 'pp' → logprob: -13.875059127807617
    4. 'push' → logprob: -16.750059127807617
    5. 'p' → logprob: -16.875059127807617
    6. 'ап' → logprob: -17.375059127807617
    7. '```' → logprob: -17.375059127807617
    8. 'a' → logprob: -17.500059127807617
    9. 'appen' → logprob: -17.500059127807617
    10. 'App' → logprob: -18.375059127807617

Token 115: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.8624639324116288e-06
    2. 'push' → logprob: -13.500001907348633
    3. '```' → logprob: -15.500001907348633
    4. '   ' → logprob: -16.000001907348633
    5. 'sh' → logprob: -16.000001907348633
    6. 'op' → logprob: -18.000001907348633
    7. 'USH' → logprob: -18.500001907348633
    8. 'u' → logprob: -19.000001907348633
    9. '

' → logprob: -19.000001907348633
    10. '[' → logprob: -19.250001907348633

Token 116: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.125006675720215
    3. ' (' → logprob: -13.750006675720215
    4. '```' → logprob: -16.50000762939453
    5. ' heap' → logprob: -17.37500762939453
    6. '(
' → logprob: -18.00000762939453
    7. 'heap' → logprob: -18.25000762939453
    8. '(h' → logprob: -18.75000762939453
    9. '.heap' → logprob: -18.87500762939453
    10. '(hit' → logprob: -19.12500762939453

Token 117: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0002456046058796346
    2. ',' → logprob: -9.500246047973633
    3. 'heap' → logprob: -9.625246047973633
    4. ')' → logprob: -9.875246047973633
    5. 'q' → logprob: -10.875246047973633
    6. ' (' → logprob: -11.000246047973633
    7. ' heap' → logprob: -11.750246047973633
    8. '(' → logprob: -12.750246047973633
    9. ',(' → logprob: -13.125246047973633
    10. '```' → logprob: -13.750246047973633

Token 118: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2707962393760681
    2. '(nd' → logprob: -1.520796298980713
    3. '(' → logprob: -4.270796298980713
    4. '(n' → logprob: -5.395796298980713
    5. '(nt' → logprob: -9.895795822143555
    6. '(v' → logprob: -10.270795822143555
    7. '(nn' → logprob: -10.395795822143555
    8. '(ns' → logprob: -10.895795822143555
    9. '(nx' → logprob: -11.270795822143555
    10. '(next' → logprob: -11.520795822143555

Token 119: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0016286444151774049
    2. ' nd' → logprob: -6.626628875732422
    3. '(nd' → logprob: -8.126628875732422
    4. ')' → logprob: -13.626628875732422
    5. '_nd' → logprob: -14.001628875732422
    6. '```' → logprob: -14.001628875732422
    7. '   ' → logprob: -14.376628875732422
    8. ' ' → logprob: -14.626628875732422
    9. 'nds' → logprob: -14.751628875732422
    10. '(' → logprob: -14.751628875732422

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7252845029579476e-05
    2. ',v' → logprob: -11.125027656555176
    3. ' ,' → logprob: -11.375027656555176
    4. ')' → logprob: -14.250027656555176
    5. '<|end|>' → logprob: -16.00002670288086
    6. 'v' → logprob: -16.37502670288086
    7. ',
' → logprob: -17.25002670288086
    8. '```' → logprob: -17.37502670288086
    9. '),' → logprob: -18.00002670288086
    10. '   ' → logprob: -18.37502670288086

Token 121: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.026302389800548553
    2. ' v' → logprob: -3.6513023376464844
    3. ')v' → logprob: -13.526302337646484
    4. '	v' → logprob: -14.651302337646484
    5. ')' → logprob: -16.401302337646484
    6. 'vq' → logprob: -17.401302337646484
    7. ' ' → logprob: -17.526302337646484
    8. '```' → logprob: -17.651302337646484
    9. '[v' → logprob: -17.776302337646484
    10. ' 
' → logprob: -17.776302337646484

Token 122: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2520162761211395
    2. ')' → logprob: -1.502016305923462
    3. '))
' → logprob: -9.502016067504883
    4. ')
' → logprob: -11.877016067504883
    5. ')))' → logprob: -12.502016067504883
    6. ' ))' → logprob: -14.252016067504883
    7. ' )' → logprob: -14.752016067504883
    8. '       ' → logprob: -15.502016067504883
    9. '   ' → logprob: -16.377016067504883
    10. '))
' → logprob: -16.752016067504883

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02795414999127388
    2. '
' → logprob: -3.9029541015625
    3. 'return' → logprob: -5.2779541015625
    4. ' return' → logprob: -6.9029541015625
    5. '<|end|>' → logprob: -7.2779541015625
    6. '    
' → logprob: -8.4029541015625
    7. ')' → logprob: -9.0279541015625
    8. '	return' → logprob: -10.2779541015625
    9. ':return' → logprob: -10.4029541015625
    10. 'def' → logprob: -10.4029541015625

Token 124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04309442266821861
    2. '   ' → logprob: -3.2930943965911865
    3. ' return' → logprob: -5.293094635009766
    4. '
' → logprob: -11.543094635009766
    5. ' ' → logprob: -13.168094635009766
    6. '	return' → logprob: -14.168094635009766
    7. '    
' → logprob: -14.293094635009766
    8. '  ' → logprob: -15.043094635009766
    9. '```' → logprob: -15.168094635009766
    10. '       ' → logprob: -15.543094635009766

Token 125: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31326746940612793
    2. ' dist' → logprob: -1.313267469406128
    3. '(dist' → logprob: -12.313267707824707
    4. '	dist' → logprob: -13.813267707824707
    5. '_dist' → logprob: -16.18826675415039
    6. ' ' → logprob: -17.56326675415039
    7. '.dist' → logprob: -17.93826675415039
    8. 'Dist' → logprob: -17.93826675415039
    9. ' ' → logprob: -18.18826675415039
    10. '```' → logprob: -19.56326675415039

Token 126: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7541086673736572
    2. '<|end|>' → logprob: -0.7541086673736572
    3. 'def' → logprob: -3.1291086673736572
    4. '

' → logprob: -5.004108428955078
    5. '#' → logprob: -6.004108428955078
    6. '\n' → logprob: -6.379108428955078
    7. '<|end|>' → logprob: -6.379108428955078
    8. '```' → logprob: -6.879108428955078
    9. 'n' → logprob: -8.129108428955078
    10. '[' → logprob: -8.254108428955078

Token 127: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06165234372019768
    2. '
' → logprob: -3.061652421951294
    3. 'n' → logprob: -5.436652183532715
    4. '<|end|>' → logprob: -5.686652183532715
    5. '#' → logprob: -6.311652183532715
    6. 'if' → logprob: -7.061652183532715
    7. '\n' → logprob: -7.311652183532715
    8. '```' → logprob: -7.686652183532715
    9. 'graph' → logprob: -7.936652183532715
    10. 'import' → logprob: -8.436652183532715

Token 128: '=sys' (ID: 149200)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.054819997400045395
    2. '(' → logprob: -4.0548200607299805
    3. ' =' → logprob: -4.0548200607299805
    4. '=' → logprob: -5.5548200607299805
    5. '_data' → logprob: -5.5548200607299805
    6. '.' → logprob: -5.6798200607299805
    7. '_' → logprob: -6.0548200607299805
    8. '().' → logprob: -6.5548200607299805
    9. '_lines' → logprob: -6.8048200607299805
    10. 's' → logprob: -7.0548200607299805

Token 129: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17174769937992096
    2. '.stdin' → logprob: -1.9217476844787598
    3. '.readline' → logprob: -4.92174768447876
    4. '<|end|>' → logprob: -6.92174768447876
    5. '.input' → logprob: -7.17174768447876
    6. ' .' → logprob: -7.54674768447876
    7. '.stdout' → logprob: -8.046748161315918
    8. 'import' → logprob: -8.171748161315918
    9. 'stdin' → logprob: -8.171748161315918
    10. '[' → logprob: -8.421748161315918

Token 130: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.039096273481845856
    2. '.read' → logprob: -3.2890963554382324
    3. '.readlines' → logprob: -7.664096355438232
    4. '.' → logprob: -7.789096355438232
    5. 'read' → logprob: -8.789095878601074
    6. '_read' → logprob: -11.664095878601074
    7. '.buffer' → logprob: -13.039095878601074
    8. '_reader' → logprob: -13.164095878601074
    9. '.Read' → logprob: -14.039095878601074
    10. ' .' → logprob: -14.414095878601074

Token 131: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04954724386334419
    2. '()
' → logprob: -3.1745471954345703
    3. '
' → logprob: -5.79954719543457
    4. '().' → logprob: -7.04954719543457
    5. '()\' → logprob: -7.17454719543457
    6. '()

' → logprob: -7.54954719543457
    7. '(' → logprob: -7.79954719543457
    8. 'n' → logprob: -7.92454719543457
    9. 'def' → logprob: -9.17454719543457
    10. 'line' → logprob: -9.42454719543457

Token 132: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24777771532535553
    2. '
' → logprob: -1.7477777004241943
    3. 'N' → logprob: -3.4977777004241943
    4. 't' → logprob: -4.997777938842773
    5. 'def' → logprob: -5.622777938842773
    6. 'T' → logprob: -6.372777938842773
    7. 'V' → logprob: -6.872777938842773
    8. 'num' → logprob: -7.747777938842773
    9. 'Q' → logprob: -7.872777938842773
    10. 'v' → logprob: -8.747777938842773

Token 133: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.006746042985469103
    2. 'True' → logprob: -5.0067458152771
    3. '(True' → logprob: -11.131746292114258
    4. ' ' → logprob: -11.256746292114258
    5. '1' → logprob: -13.506746292114258
    6. '=True' → logprob: -14.381746292114258
    7. ' Tru' → logprob: -14.381746292114258
    8. ' true' → logprob: -16.131746292114258
    9. ' T' → logprob: -16.256746292114258
    10. ' (' → logprob: -16.631746292114258

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02684915065765381
    2. '():' → logprob: -3.6518492698669434
    3. ' :' → logprob: -7.651849269866943
    4. ':
' → logprob: -10.151848793029785
    5. '):' → logprob: -11.151848793029785
    6. ':**' → logprob: -12.026848793029785
    7. '():
' → logprob: -12.276848793029785
    8. '(' → logprob: -12.526848793029785
    9. ' ():' → logprob: -12.526848793029785
    10. '()' → logprob: -14.651848793029785

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07414799928665161
    2. ' line' → logprob: -2.824147939682007
    3. ' try' → logprob: -4.574148178100586
    4. 'line' → logprob: -7.324148178100586
    5. 'try' → logprob: -7.574148178100586
    6. '    
' → logprob: -8.574148178100586
    7. '	line' → logprob: -8.824148178100586
    8. 'n' → logprob: -9.574148178100586
    9. ' n' → logprob: -10.199148178100586
    10. ' s' → logprob: -10.449148178100586

Token 136: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.30250194668769836
    2. ' line' → logprob: -2.427501916885376
    3. 'N' → logprob: -2.552501916885376
    4. 'line' → logprob: -3.052501916885376
    5. ' n' → logprob: -3.302501916885376
    6. '   ' → logprob: -5.427502155303955
    7. ' N' → logprob: -6.177502155303955
    8. 'w' → logprob: -7.177502155303955
    9. 'l' → logprob: -7.302502155303955
    10. 'h' → logprob: -7.552502155303955

Token 137: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7322744131088257
    2. ',' → logprob: -0.9822744131088257
    3. ' =' → logprob: -1.9822744131088257
    4. ' ,' → logprob: -6.232274532318115
    5. '=int' → logprob: -6.232274532318115
    6. ',m' → logprob: -6.607274532318115
    7. ',n' → logprob: -8.357274055480957
    8. ',b' → logprob: -8.607274055480957
    9. ',s' → logprob: -8.732274055480957
    10. ',p' → logprob: -8.857274055480957

Token 138: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14348722994327545
    2. ' =' → logprob: -2.0184872150421143
    3. '=input' → logprob: -7.268487453460693
    4. '=line' → logprob: -10.018486976623535
    5. '=int' → logprob: -10.643486976623535
    6. ',' → logprob: -11.643486976623535
    7. '=n' → logprob: -12.018486976623535
    8. '=list' → logprob: -12.143486976623535
    9. '=sys' → logprob: -12.893486976623535
    10. ',n' → logprob: -13.143486976623535

Token 139: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6327939033508301
    2. ' map' → logprob: -0.7577939033508301
    3. 'input' → logprob: -9.257793426513672
    4. '[' → logprob: -10.632793426513672
    5. 'list' → logprob: -10.882793426513672
    6. ' input' → logprob: -11.257793426513672
    7. '(map' → logprob: -11.507793426513672
    8. '	map' → logprob: -11.507793426513672
    9. ' list' → logprob: -12.132793426513672
    10. ' ' → logprob: -12.257793426513672

Token 140: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008017662912607193
    2. '(' → logprob: -5.258017539978027
    3. '(str' → logprob: -6.383017539978027
    4. '(input' → logprob: -7.008017539978027
    5. '(lambda' → logprob: -9.258017539978027
    6. 'int' → logprob: -9.633017539978027
    7. '(list' → logprob: -12.008017539978027
    8. ' (' → logprob: -12.383017539978027
    9. '[int' → logprob: -13.133017539978027
    10. 'str' → logprob: -13.508017539978027

Token 141: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2828235924243927
    2. ',' → logprob: -1.4078235626220703
    3. '(),' → logprob: -7.15782356262207
    4. '().' → logprob: -7.40782356262207
    5. ',int' → logprob: -9.78282356262207
    6. 'input' → logprob: -10.15782356262207
    7. '(input' → logprob: -10.53282356262207
    8. '(' → logprob: -10.53282356262207
    9. '()' → logprob: -10.65782356262207
    10. '(sys' → logprob: -10.90782356262207

Token 142: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.127333340875339e-06
    2. '()' → logprob: -12.625003814697266
    3. ' ().' → logprob: -14.250003814697266
    4. '())' → logprob: -18.625003814697266
    5. '(' → logprob: -19.000003814697266
    6. '()
' → logprob: -19.000003814697266
    7. ')' → logprob: -19.875003814697266
    8. '.' → logprob: -21.000003814697266
    9. '().'' → logprob: -21.000003814697266
    10. '('').' → logprob: -21.000003814697266

Token 143: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10157229006290436
    2. 'strip' → logprob: -2.351572275161743
    3. 'rstrip' → logprob: -6.601572513580322
    4. 'read' → logprob: -12.226572036743164
    5. ')' → logprob: -14.476572036743164
    6. '(split' → logprob: -14.726572036743164
    7. ' split' → logprob: -14.976572036743164
    8. 'decode' → logprob: -15.851572036743164
    9. '().' → logprob: -16.601572036743164
    10. ' strip' → logprob: -16.851572036743164

Token 144: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30449843406677246
    2. '())' → logprob: -1.4294984340667725
    3. '()' → logprob: -3.9294984340667725
    4. '))' → logprob: -5.929498672485352
    5. '(' → logprob: -8.429498672485352
    6. '(),' → logprob: -8.679498672485352
    7. '()))' → logprob: -8.929498672485352
    8. '())
' → logprob: -9.429498672485352
    9. ')
' → logprob: -10.429498672485352
    10. ',' → logprob: -10.554498672485352

Token 145: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.035550713539123535
    2. ' if' → logprob: -3.910550594329834
    3. '<|end|>' → logprob: -4.410550594329834
    4. '
' → logprob: -6.660550594329834
    5. '   ' → logprob: -7.535550594329834
    6. '0' → logprob: -8.285551071166992
    7. 'n' → logprob: -8.535551071166992
    8. '    ' → logprob: -9.035551071166992
    9. ' ' → logprob: -9.285551071166992
    10. '  ' → logprob: -9.535551071166992

Token 147: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.014178793877363205
    2. 'n' → logprob: -4.26417875289917
    3. ' not' → logprob: -11.889179229736328
    4. ' (' → logprob: -12.139179229736328
    5. '(n' → logprob: -13.639179229736328
    6. '	n' → logprob: -14.139179229736328
    7. ' ' → logprob: -14.264179229736328
    8. '(' → logprob: -15.389179229736328
    9. ' ' → logprob: -15.764179229736328
    10. '0' → logprob: -17.014179229736328

Token 148: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17987726628780365
    2. ' ==' → logprob: -1.8048772811889648
    3. ' ' → logprob: -9.804877281188965
    4. '=' → logprob: -10.054877281188965
    5. ',' → logprob: -11.554877281188965
    6. '0' → logprob: -11.804877281188965
    7. ')==' → logprob: -12.179877281188965
    8. '==
' → logprob: -12.554877281188965
    9. ']==' → logprob: -13.179877281188965
    10. '===' → logprob: -13.304877281188965

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018232580623589456
    2. ' ' → logprob: -8.625182151794434
    3. 'm' → logprob: -13.000182151794434
    4. '۰' → logprob: -16.12518310546875
    5. '```' → logprob: -16.18768310546875
    6. '０' → logprob: -16.75018310546875
    7. ' m' → logprob: -17.00018310546875
    8. 'and' → logprob: -17.31268310546875
    9. '   ' → logprob: -17.62518310546875
    10. 'o' → logprob: -17.62518310546875

Token 150: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3868865668773651
    2. ' and' → logprob: -1.1368865966796875
    3. ' ' → logprob: -12.261886596679688
    4. ' or' → logprob: -12.386886596679688
    5. ':' → logprob: -12.761886596679688
    6. '	and' → logprob: -12.886886596679688
    7. 'or' → logprob: -14.511886596679688
    8. '<|end|>' → logprob: -15.011886596679688
    9. '0' → logprob: -15.511886596679688
    10. '```' → logprob: -16.761886596679688

Token 151: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6931540966033936
    2. ' m' → logprob: -0.6931540966033936
    3. '   ' → logprob: -12.568154335021973
    4. '	m' → logprob: -12.693154335021973
    5. ' ' → logprob: -15.818154335021973
    6. '  ' → logprob: -16.193153381347656
    7. '    ' → logprob: -16.318153381347656
    8. ' ' → logprob: -16.318153381347656
    9. ',m' → logprob: -18.068153381347656
    10. '0' → logprob: -19.068153381347656

Token 152: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005342144053429365
    2. ' ==' → logprob: -5.25534200668335
    3. '0' → logprob: -9.380342483520508
    4. '=' → logprob: -11.380342483520508
    5. ' ' → logprob: -12.255342483520508
    6. ')==' → logprob: -13.130342483520508
    7. '<|end|>' → logprob: -13.255342483520508
    8. '()==' → logprob: -13.630342483520508
    9. ']==' → logprob: -14.130342483520508
    10. '==
' → logprob: -14.380342483520508

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '<|end|>' → logprob: -15.500710487365723
    4. '  ' → logprob: -16.250709533691406
    5. '   ' → logprob: -16.875709533691406
    6. '۰' → logprob: -17.250709533691406
    7. '```' → logprob: -18.313209533691406
    8. ' ' → logprob: -19.250709533691406
    9. '<|end|>' → logprob: -19.250709533691406
    10. '০' → logprob: -19.563209533691406

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034553684294223785
    2. ':
' → logprob: -3.4095537662506104
    3. '   ' → logprob: -7.034553527832031
    4. '       ' → logprob: -10.909553527832031
    5. '	break' → logprob: -12.909553527832031
    6. ':
' → logprob: -13.784553527832031
    7. ':return' → logprob: -13.784553527832031
    8. '.' → logprob: -14.159553527832031
    9. ' :' → logprob: -14.284553527832031
    10. ',' → logprob: -14.659553527832031

Token 155: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3010227382183075
    2. '       ' → logprob: -1.9260227680206299
    3. ':' → logprob: -2.17602276802063
    4. ':
' → logprob: -7.426022529602051
    5. '	break' → logprob: -9.55102252960205
    6. ' break' → logprob: -11.42602252960205
    7. ' ' → logprob: -12.05102252960205
    8. ',' → logprob: -12.17602252960205
    9. '   ' → logprob: -12.30102252960205
    10. '    ' → logprob: -12.30102252960205

Token 156: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5559280514717102
    2. 'break' (adapté à ' break') → logprob: -1.0559279918670654
    3. '   ' → logprob: -2.8059279918670654
    4. '	break' → logprob: -4.6809282302856445
    5. '       ' → logprob: -4.8059282302856445
    6. '
' → logprob: -7.6809282302856445
    7. '           ' → logprob: -8.680928230285645
    8. '    
' → logprob: -11.180928230285645
    9. '_break' → logprob: -11.305928230285645
    10. '```' → logprob: -11.305928230285645

Token 157: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5973695516586304
    2. '   ' → logprob: -1.4723695516586304
    3. '
' → logprob: -1.9723695516586304
    4. '    
' → logprob: -2.84736967086792
    5. ' graph' → logprob: -5.59736967086792
    6. 'edges' → logprob: -5.84736967086792
    7. 'dist' → logprob: -6.22236967086792
    8. '  
' → logprob: -6.22236967086792
    9. 'distance' → logprob: -6.59736967086792
    10. 's' → logprob: -6.84736967086792

Token 158: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3924964666366577
    2. 'graph' → logprob: -1.5174964666366577
    3. '   ' → logprob: -2.7674965858459473
    4. ' graph' → logprob: -3.8924965858459473
    5. '    
' → logprob: -4.267496585845947
    6. '	graph' → logprob: -6.142496585845947
    7. 'edges' → logprob: -6.642496585845947
    8. 'distance' → logprob: -7.017496585845947
    9. '  
' → logprob: -7.267496585845947
    10. '   
' → logprob: -8.142496109008789

Token 159: ' s' (ID: 265)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0177927128970623
    2. '   ' → logprob: -4.517792701721191
    3. ' graph' → logprob: -5.392792701721191
    4. 'edges' → logprob: -7.767792701721191
    5. '    
' → logprob: -7.892792701721191
    6. 'times' → logprob: -8.392792701721191
    7. 's' (adapté à ' s') → logprob: -8.517792701721191
    8. '
' → logprob: -9.142792701721191
    9. 'start' → logprob: -9.517792701721191
    10. 'g' → logprob: -10.267792701721191

Token 160: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26060283184051514
    2. ',t' → logprob: -1.5106028318405151
    3. ',p' → logprob: -5.385602951049805
    4. ',d' → logprob: -7.385602951049805
    5. ',a' → logprob: -7.760602951049805
    6. ',u' → logprob: -8.010602951049805
    7. ',e' → logprob: -8.010602951049805
    8. ' ,' → logprob: -8.135602951049805
    9. ',start' → logprob: -8.260602951049805
    10. ',end' → logprob: -8.385602951049805

Token 161: ',g' (ID: 44461)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18896862864494324
    2. ',' → logprob: -2.4389686584472656
    3. ',u' → logprob: -4.063968658447266
    4. ',q' → logprob: -4.188968658447266
    5. ',c' → logprob: -4.688968658447266
    6. ',r' → logprob: -4.813968658447266
    7. ',l' → logprob: -5.188968658447266
    8. ',d' → logprob: -5.313968658447266
    9. ',t' → logprob: -5.438968658447266
    10. ',a' → logprob: -5.563968658447266

Token 162: '=input' (ID: 87911)
  Prédit: ',p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.4954952895641327
    2. ',r' → logprob: -2.245495319366455
    3. '=' → logprob: -2.745495319366455
    4. ',s' → logprob: -3.245495319366455
    5. ',' → logprob: -3.745495319366455
    6. ',o' → logprob: -3.745495319366455
    7. ',t' → logprob: -3.870495319366455
    8. ',h' → logprob: -3.870495319366455
    9. ',l' → logprob: -4.120495319366455
    10. ',e' → logprob: -4.370495319366455

Token 163: '().' (ID: 1454)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7931216955184937
    2. '=' → logprob: -1.6681216955184937
    3. '().' → logprob: -2.043121814727783
    4. '.split' → logprob: -2.668121814727783
    5. ' =' → logprob: -3.293121814727783
    6. ')' → logprob: -3.293121814727783
    7. '.' → logprob: -3.293121814727783
    8. 'split' → logprob: -4.418121814727783
    9. 's' → logprob: -5.043121814727783
    10. '()' → logprob: -5.293121814727783

Token 164: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.02330324426293373
    2. 'strip' → logprob: -3.773303270339966
    3. 'rstrip' → logprob: -9.773303031921387
    4. ' split' → logprob: -14.398303031921387
    5. 'spl' → logprob: -16.273303985595703
    6. 'rs' → logprob: -16.398303985595703
    7. '_split' → logprob: -17.773303985595703
    8. '(split' → logprob: -18.148303985595703
    9. ' strip' → logprob: -18.898303985595703
    10. 'plit' → logprob: -18.898303985595703

Token 165: '()
' (ID: 1234)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26354333758354187
    2. '<|end|>' → logprob: -2.6385433673858643
    3. '()' → logprob: -2.7635433673858643
    4. '=' → logprob: -3.1385433673858643
    5. ' =' → logprob: -3.6385433673858643
    6. '    ' → logprob: -5.138543128967285
    7. '   ' → logprob: -5.138543128967285
    8. '<|end|>' → logprob: -5.638543128967285
    9. '(),' → logprob: -5.888543128967285
    10. ')' → logprob: -6.013543128967285

Token 166: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4256313443183899
    2. ',n' → logprob: -1.9256312847137451
    3. '=' → logprob: -3.050631284713745
    4. 'n' → logprob: -3.300631284713745
    5. '
' → logprob: -3.300631284713745
    6. ',' → logprob: -3.675631284713745
    7. '<|end|>' → logprob: -4.300631523132324
    8. '   ' → logprob: -5.175631523132324
    9. ',p' → logprob: -5.550631523132324
    10. 'p' → logprob: -5.925631523132324

Token 167: ' graph' (ID: 7465)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6797727346420288
    2. 'graph' (adapté à ' graph') → logprob: -1.0547727346420288
    3. ' graph' → logprob: -3.4297728538513184
    4. '   ' → logprob: -3.4297728538513184
    5. ' s' → logprob: -4.054772853851318
    6. 'n' → logprob: -4.054772853851318
    7. 'nodes' → logprob: -4.054772853851318
    8. 'g' → logprob: -4.429772853851318
    9. 'p' → logprob: -5.429772853851318
    10. 'adj' → logprob: -6.429772853851318

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1444660872220993
    2. ' =' → logprob: -2.0194661617279053
    3. '={}' → logprob: -6.394465923309326
    4. '={' → logprob: -9.269466400146484
    5. ' ={' → logprob: -11.519466400146484
    6. '=[]' → logprob: -12.394466400146484
    7. ',' → logprob: -13.144466400146484
    8. '={'' → logprob: -13.394466400146484
    9. '{' → logprob: -13.644466400146484
    10. '={}
' → logprob: -13.769466400146484

Token 169: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0009761215187609196
    2. '{}' → logprob: -7.250976085662842
    3. ' {' → logprob: -8.2509765625
    4. 'default' → logprob: -12.8759765625
    5. '{name' → logprob: -14.1259765625
    6. '{
' → logprob: -14.2509765625
    7. '{}
' → logprob: -14.6259765625
    8. '{}

' → logprob: -15.5009765625
    9. '{return' → logprob: -16.2509765625
    10. '{id' → logprob: -16.2509765625

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6831086874008179
    2. 'for' → logprob: -1.1831086874008179
    3. ' for' → logprob: -1.6831086874008179
    4. '
' → logprob: -6.933108806610107
    5. '	for' → logprob: -7.058108806610107
    6. '<|end|>' → logprob: -7.433108806610107
    7. '    
' → logprob: -8.55810832977295
    8. ' ' → logprob: -9.18310832977295
    9. '  ' → logprob: -10.43310832977295
    10. '    ' → logprob: -11.30810832977295

Token 171: ' nodes' (ID: 15749)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01815333589911461
    2. ' for' → logprob: -4.018153190612793
    3. '	for' → logprob: -13.143153190612793
    4. '   ' → logprob: -13.643153190612793
    5. 'from' → logprob: -16.14315414428711
    6. '
' → logprob: -16.26815414428711
    7. ' 
' → logprob: -16.51815414428711
    8. ' ' → logprob: -17.01815414428711
    9. '```' → logprob: -17.39315414428711
    10. '    
' → logprob: -17.64315414428711

Token 172: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4288732409477234
    2. ' =' → logprob: -1.0538733005523682
    3. '<|end|>' → logprob: -10.553873062133789
    4. '=[]' → logprob: -10.678873062133789
    5. '={}' → logprob: -10.678873062133789
    6. '=set' → logprob: -10.928873062133789
    7. 'for' → logprob: -10.928873062133789
    8. '   ' → logprob: -11.178873062133789
    9. ':' → logprob: -11.678873062133789
    10. '<|end|>' → logprob: -12.178873062133789

Token 173: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6467852592468262
    2. ' set' → logprob: -0.7717852592468262
    3. '{}' → logprob: -4.896785259246826
    4. '{' → logprob: -6.146785259246826
    5. '[]' → logprob: -6.521785259246826
    6. ' {' → logprob: -7.021785259246826
    7. ' []' → logprob: -7.271785259246826
    8. ' [' → logprob: -7.521785259246826
    9. ' {}' → logprob: -7.646785259246826
    10. '[' → logprob: -9.021785736083984

Token 174: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000719818810466677
    2. '()
' → logprob: -7.250720024108887
    3. '([' → logprob: -11.875720024108887
    4. '()

' → logprob: -13.375720024108887
    5. '([]' → logprob: -15.000720024108887
    6. '()\' → logprob: -15.500720024108887
    7. '()
' → logprob: -15.875720024108887
    8. '()]' → logprob: -16.12571907043457
    9. ' ()' → logprob: -16.25071907043457
    10. '();' → logprob: -16.37571907043457

Token 175: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10331570357084274
    2. ' for' → logprob: -2.603315591812134
    3. '   ' → logprob: -3.728315591812134
    4. '
' → logprob: -10.103315353393555
    5. '	for' → logprob: -10.853315353393555
    6. '<|end|>' → logprob: -10.853315353393555
    7. '    
' → logprob: -11.353315353393555
    8. ' 
' → logprob: -13.978315353393555
    9. 'nodes' → logprob: -14.228315353393555
    10. '  ' → logprob: -14.603315353393555

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07985405623912811
    2. ' for' → logprob: -2.5798540115356445
    3. '   ' → logprob: -6.9548540115356445
    4. '	for' → logprob: -11.829854011535645
    5. '
' → logprob: -13.704854011535645
    6. '    
' → logprob: -14.079854011535645
    7. ' ' → logprob: -15.579854011535645
    8. ' 
' → logprob: -15.829854011535645
    9. '  ' → logprob: -16.45485496520996
    10. '```' → logprob: -16.57985496520996

Token 177: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.575943648815155
    2. ' _' → logprob: -0.825943648815155
    3. '_i' → logprob: -12.700943946838379
    4. ' i' → logprob: -14.075943946838379
    5. ' ' → logprob: -15.825943946838379
    6. '_=' → logprob: -15.825943946838379
    7. ' __' → logprob: -17.200942993164062
    8. 'i' → logprob: -17.825942993164062
    9. ' ' → logprob: -17.950942993164062
    10. '__' → logprob: -18.700942993164062

Token 178: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006859705317765474
    2. 'in' → logprob: -5.00685977935791
    3. 'range' → logprob: -9.38185977935791
    4. ' ' → logprob: -10.00685977935791
    5. '  ' → logprob: -12.13185977935791
    6. '```' → logprob: -12.63185977935791
    7. '    ' → logprob: -13.88185977935791
    8. 'n' → logprob: -13.88185977935791
    9. ' range' → logprob: -14.00685977935791
    10. 'm' → logprob: -14.50685977935791

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.718606891809031e-05
    2. ' range' → logprob: -9.625066757202148
    3. '(range' → logprob: -15.000066757202148
    4. '	range' → logprob: -15.375066757202148
    5. 'ange' → logprob: -15.875066757202148
    6. 'rang' → logprob: -15.875066757202148
    7. 'r' → logprob: -16.50006675720215
    8. ' ' → logprob: -17.12506675720215
    9. '```' → logprob: -17.25006675720215
    10. '_' → logprob: -17.25006675720215

Token 180: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3878170847892761
    2. '(m' → logprob: -1.137817144393921
    3. ' m' → logprob: -7.012816905975342
    4. '   ' → logprob: -10.6378173828125
    5. '	m' → logprob: -11.1378173828125
    6. '(' → logprob: -13.7628173828125
    7. ' (' → logprob: -13.8878173828125
    8. '(int' → logprob: -14.0128173828125
    9. '_m' → logprob: -14.2628173828125
    10. '[m' → logprob: -14.5128173828125

Token 181: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016569748520851135
    2. '):
' → logprob: -4.1415696144104
    3. ':' → logprob: -7.8915696144104
    4. ' ):' → logprob: -9.391570091247559
    5. '   ' → logprob: -10.516570091247559
    6. '):
' → logprob: -10.516570091247559
    7. ')' → logprob: -11.266570091247559
    8. ' ):
' → logprob: -13.391570091247559
    9. '():' → logprob: -13.516570091247559
    10. ':
' → logprob: -13.641570091247559

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01448854897171259
    2. ' u' → logprob: -5.139488697052002
    3. '   ' → logprob: -5.514488697052002
    4. 'u' → logprob: -5.764488697052002
    5. '<|end|>' → logprob: -7.889488697052002
    6. 'a' → logprob: -8.389488220214844
    7. ' line' → logprob: -8.889488220214844
    8. 'v' → logprob: -9.139488220214844
    9. '	u' → logprob: -9.889488220214844
    10. 'x' → logprob: -10.014488220214844

Token 183: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.2339639961719513
    2. 'u' → logprob: -1.608963966369629
    3. 'x' → logprob: -5.233963966369629
    4. ' a' → logprob: -6.733963966369629
    5. ' u' → logprob: -7.108963966369629
    6. 'f' → logprob: -7.233963966369629
    7. 'U' → logprob: -8.733963966369629
    8. 'c' → logprob: -9.233963966369629
    9. 'A' → logprob: -10.108963966369629
    10. '   ' → logprob: -10.858963966369629

Token 184: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.030427061021327972
    2. ',' → logprob: -3.5304269790649414
    3. 'b' → logprob: -7.530426979064941
    4. ' ,' → logprob: -9.655426979064941
    5. ',v' → logprob: -10.655426979064941
    6. ' b' → logprob: -11.155426979064941
    7. ',p' → logprob: -11.655426979064941
    8. ',s' → logprob: -12.280426979064941
    9. ',d' → logprob: -12.405426979064941
    10. ',n' → logprob: -12.655426979064941

Token 185: ',d' (ID: 26159)
  Prédit: ',t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.144254669547081
    2. ',time' → logprob: -2.144254684448242
    3. ',c' → logprob: -4.769254684448242
    4. ',w' → logprob: -5.269254684448242
    5. ',' → logprob: -6.394254684448242
    6. 't' → logprob: -6.519254684448242
    7. ',d' → logprob: -9.394254684448242
    8. 'time' → logprob: -9.644254684448242
    9. ',l' → logprob: -9.769254684448242
    10. ',p' → logprob: -10.269254684448242

Token 186: ',t' (ID: 26927)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005424073897302151
    2. ',time' → logprob: -5.8804240226745605
    3. ' =' → logprob: -6.1304240226745605
    4. ',map' → logprob: -8.630424499511719
    5. '=time' → logprob: -9.130424499511719
    6. ',' → logprob: -10.005424499511719
    7. ',p' → logprob: -11.380424499511719
    8. '=sys' → logprob: -11.380424499511719
    9. ',t' → logprob: -11.505424499511719
    10. 'ist' → logprob: -11.505424499511719

Token 187: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025943268556147814
    2. ' =' → logprob: -6.002594470977783
    3. 'ime' → logprob: -10.252593994140625
    4. '=line' → logprob: -10.627593994140625
    5. 'map' → logprob: -11.252593994140625
    6. '=input' → logprob: -11.627593994140625
    7. '=sys' → logprob: -11.752593994140625
    8. 'okens' → logprob: -12.252593994140625
    9. '=int' → logprob: -12.252593994140625
    10. 'imes' → logprob: -12.377593994140625

Token 188: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.8444881536415778e-05
    2. '()' → logprob: -10.500028610229492
    3. ' ().' → logprob: -14.125028610229492
    4. '()
' → logprob: -17.625028610229492
    5. '.' → logprob: -17.625028610229492
    6. '(' → logprob: -17.750028610229492
    7. '=' → logprob: -17.875028610229492
    8. '.split' → logprob: -18.625028610229492
    9. 'split' → logprob: -19.500028610229492
    10. '>().' → logprob: -20.000028610229492

Token 189: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00033677343162707984
    2. 'strip' → logprob: -8.000336647033691
    3. 'rstrip' → logprob: -13.875336647033691
    4. ' split' → logprob: -15.375336647033691
    5. '(split' → logprob: -16.750337600708008
    6. 'spl' → logprob: -16.875337600708008
    7. 's' → logprob: -19.625337600708008
    8. 'plit' → logprob: -20.250337600708008
    9. '.split' → logprob: -20.750337600708008
    10. 'sp' → logprob: -20.875337600708008

Token 190: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012179839424788952
    2. '<|end|>' → logprob: -5.137179851531982
    3. '   ' → logprob: -5.637179851531982
    4. 'a' → logprob: -6.637179851531982
    5. ' a' → logprob: -7.887179851531982
    6. ',' → logprob: -8.262179374694824
    7. 'd' → logprob: -8.387179374694824
    8. '        
' → logprob: -9.137179374694824
    9. '
' → logprob: -9.387179374694824
    10. '<|end|>' → logprob: -10.387179374694824

Token 192: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.42696473002433777
    2. 'a' → logprob: -1.1769647598266602
    3. 'if' → logprob: -3.67696475982666
    4. 'time' → logprob: -5.05196475982666
    5. 't' → logprob: -5.67696475982666
    6. '   ' → logprob: -5.67696475982666
    7. ' if' → logprob: -8.42696475982666
    8. ' d' → logprob: -8.80196475982666
    9. ' a' → logprob: -9.17696475982666
    10. '       ' → logprob: -9.92696475982666

Token 193: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5538367033004761
    2. '=int' → logprob: -1.053836703300476
    3. ' =' → logprob: -2.8038368225097656
    4. '=float' → logprob: -4.553836822509766
    5. ',' → logprob: -5.928836822509766
    6. 'istance' → logprob: -6.428836822509766
    7. ',d' → logprob: -7.678836822509766
    8. '=d' → logprob: -8.053836822509766
    9. ',int' → logprob: -9.428836822509766
    10. 'd' → logprob: -9.928836822509766

Token 194: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.875027656555176
    3. 'd' → logprob: -11.875027656555176
    4. ')d' → logprob: -13.875027656555176
    5. '(t' → logprob: -14.625027656555176
    6. ',d' → logprob: -15.500027656555176
    7. '(
' → logprob: -16.250028610229492
    8. '	d' → logprob: -16.250028610229492
    9. '()' → logprob: -16.375028610229492
    10. '((' → logprob: -16.875028610229492

Token 195: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11592043191194534
    2. ')' → logprob: -2.2409205436706543
    3. ')t' → logprob: -5.990920543670654
    4. ')
' → logprob: -7.740920543670654
    5. ' )
' → logprob: -9.365920066833496
    6. 't' → logprob: -10.740920066833496
    7. ')d' → logprob: -11.365920066833496
    8. ')

' → logprob: -11.865920066833496
    9. ' )' → logprob: -12.115920066833496
    10. ');' → logprob: -12.240920066833496

Token 196: '       ' (ID: 309)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11409226059913635
    2. ' t' → logprob: -2.2390923500061035
    3. '   ' → logprob: -7.6140923500061035
    4. 'time' → logprob: -8.114091873168945
    5. ' time' → logprob: -8.739091873168945
    6. ' if' → logprob: -8.739091873168945
    7. 'if' → logprob: -9.489091873168945
    8. '    ' → logprob: -11.114091873168945
    9. '       ' → logprob: -11.114091873168945
    10. '
' → logprob: -11.614091873168945

Token 197: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0007984309340827167
    2. 'time' → logprob: -7.625798225402832
    3. 'if' → logprob: -8.750798225402832
    4. ' t' → logprob: -9.125798225402832
    5. '   ' → logprob: -10.500798225402832
    6. 'int' → logprob: -12.250798225402832
    7. 'float' → logprob: -12.500798225402832
    8. ' if' → logprob: -13.125798225402832
    9. ' time' → logprob: -13.500798225402832
    10. 'times' → logprob: -14.500798225402832

Token 198: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.1259089857339859
    2. '=' → logprob: -2.2509090900421143
    3. '=float' → logprob: -4.875908851623535
    4. ' =' → logprob: -5.250908851623535
    5. '=t' → logprob: -9.875908851623535
    6. 'int' → logprob: -10.500908851623535
    7. 't' → logprob: -11.500908851623535
    8. '=_' → logprob: -11.625908851623535
    9. '=str' → logprob: -12.000908851623535
    10. '==' → logprob: -12.375908851623535

Token 199: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0011801084037870169
    2. 't' → logprob: -6.751180171966553
    3. '(' → logprob: -11.626179695129395
    4. '	t' → logprob: -15.001179695129395
    5. ' (' → logprob: -15.126179695129395
    6. ')' → logprob: -16.12618064880371
    7. ' t' → logprob: -16.50118064880371
    8. ')t' → logprob: -17.00118064880371
    9. '(
' → logprob: -17.12618064880371
    10. ' ' → logprob: -17.50118064880371

Token 200: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741652309894562
    2. ')
' → logprob: -0.9741652011871338
    3. ')
' → logprob: -9.474164962768555
    4. ')

' → logprob: -12.224164962768555
    5. '       ' → logprob: -13.224164962768555
    6. '   ' → logprob: -14.349164962768555
    7. ' )
' → logprob: -14.599164962768555
    8. ' )' → logprob: -14.724164962768555
    9. '<|end|>' → logprob: -14.724164962768555
    10. ')d' → logprob: -15.099164962768555

Token 201: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0349917858839035
    2. 'if' → logprob: -3.78499174118042
    3. 'nodes' → logprob: -4.65999174118042
    4. 'for' → logprob: -6.40999174118042
    5. ' if' → logprob: -8.034992218017578
    6. 'a' → logprob: -9.659992218017578
    7. ' nodes' → logprob: -9.784992218017578
    8. 'graph' → logprob: -9.909992218017578
    9. 'time' → logprob: -10.784992218017578
    10. ' for' → logprob: -11.284992218017578

Token 202: ' time' (ID: 1058)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14787660539150238
    2. 'nodes' → logprob: -2.397876501083374
    3. 'for' → logprob: -3.647876501083374
    4. 'graph' → logprob: -4.397876739501953
    5. '   ' → logprob: -4.897876739501953
    6. 'time' (adapté à ' time') → logprob: -7.647876739501953
    7. '#' → logprob: -10.022876739501953
    8. ' if' → logprob: -10.272876739501953
    9. 'edges' → logprob: -10.522876739501953
    10. 'a' → logprob: -10.772876739501953

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25197115540504456
    2. ' =' → logprob: -1.5019711256027222
    3. 's' → logprob: -11.001971244812012
    4. '=time' → logprob: -11.876971244812012
    5. '=None' → logprob: -12.376971244812012
    6. '=int' → logprob: -13.376971244812012
    7. ' ' → logprob: -13.876971244812012
    8. ',' → logprob: -13.876971244812012
    9. '=
' → logprob: -14.001971244812012
    10. ')' → logprob: -14.001971244812012

Token 204: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05765099450945854
    2. 't' → logprob: -3.1826510429382324
    3. ' d' → logprob: -5.182651042938232
    4. 'float' → logprob: -6.057651042938232
    5. '0' → logprob: -6.182651042938232
    6. '(d' → logprob: -6.807651042938232
    7. ' t' → logprob: -7.182651042938232
    8. '1' → logprob: -7.307651042938232
    9. '(' → logprob: -7.432651042938232
    10. '2' → logprob: -8.432650566101074

Token 205: '/' (ID: 14)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2311646193265915
    2. '/' → logprob: -2.3561646938323975
    3. '*' → logprob: -2.9811646938323975
    4. 'if' → logprob: -3.2311646938323975
    5. ' /' → logprob: -4.231164455413818
    6. '/t' → logprob: -5.981164455413818
    7. ' *' → logprob: -6.356164455413818
    8. '
' → logprob: -6.481164455413818
    9. '*t' → logprob: -8.481164932250977
    10. '/(' → logprob: -9.106164932250977

Token 206: '40' (ID: 1723)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08061319589614868
    2. '(' → logprob: -2.830613136291504
    3. '50' → logprob: -5.705613136291504
    4. '100' → logprob: -5.955613136291504
    5. '(t' → logprob: -5.955613136291504
    6. '10' → logprob: -6.580613136291504
    7. '5' → logprob: -6.705613136291504
    8. '60' → logprob: -6.955613136291504
    9. '20' → logprob: -6.955613136291504
    10. '1' → logprob: -7.080613136291504

Token 207: ' +' (ID: 659)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03443277254700661
    2. 'if' → logprob: -3.409432888031006
    3. '0' → logprob: -7.659432888031006
    4. '.' → logprob: -8.909432411193848
    5. '*' → logprob: -10.284432411193848
    6. ' ' → logprob: -10.534432411193848
    7. '       ' → logprob: -10.659432411193848
    8. '	if' → logprob: -10.909432411193848
    9. '
' → logprob: -11.159432411193848
    10. '+' → logprob: -11.159432411193848

Token 208: ' t' (ID: 260)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1224724054336548
    2. '(t' → logprob: -1.2474724054336548
    3. 't' → logprob: -1.3724724054336548
    4. '(d' → logprob: -3.6224722862243652
    5. '1' → logprob: -3.8724722862243652
    6. 'd' → logprob: -4.497472286224365
    7. '0' → logprob: -4.622472286224365
    8. '10' → logprob: -4.872472286224365
    9. '((' → logprob: -4.872472286224365
    10. ' (' → logprob: -4.997472286224365

Token 209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21878460049629211
    2. '
' → logprob: -1.9687845706939697
    3. ' if' → logprob: -3.0937845706939697
    4. 'if' → logprob: -4.593784809112549
    5. '
' → logprob: -7.718784809112549
    6. '    
' → logprob: -8.21878433227539
    7. ' ' → logprob: -8.59378433227539
    8. '  ' → logprob: -9.59378433227539
    9. '  
' → logprob: -9.84378433227539
    10. '	if' → logprob: -10.09378433227539

Token 210: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5889972448348999
    2. '
' → logprob: -1.0889972448349
    3. '       ' → logprob: -2.3389973640441895
    4. ' if' → logprob: -4.5889973640441895
    5. 'if' → logprob: -6.5889973640441895
    6. '
' → logprob: -8.838996887207031
    7. 'nodes' → logprob: -8.838996887207031
    8. '    
' → logprob: -9.213996887207031
    9. ' nodes' → logprob: -9.963996887207031
    10. 'a' → logprob: -10.588996887207031

Token 211: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6481208801269531
    2. 'nodes' → logprob: -1.5231208801269531
    3. ' if' → logprob: -2.273120880126953
    4. 'for' → logprob: -2.398120880126953
    5. ' nodes' → logprob: -3.523120880126953
    6. '   ' → logprob: -4.023120880126953
    7. ' for' → logprob: -4.273120880126953
    8. '
' → logprob: -5.898120880126953
    9. 'graph' → logprob: -7.148120880126953
    10. ' graph' → logprob: -10.023120880126953

Token 212: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01976367086172104
    2. ' a' → logprob: -4.019763469696045
    3. '(a' → logprob: -6.644763469696045
    4. ' (' → logprob: -8.519763946533203
    5. 's' → logprob: -10.269763946533203
    6. '(s' → logprob: -10.769763946533203
    7. '(' → logprob: -10.894763946533203
    8. 'b' → logprob: -11.394763946533203
    9. ' s' → logprob: -11.394763946533203
    10. '(p' → logprob: -12.769763946533203

Token 213: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0029475127812474966
    2. 'not' → logprob: -5.8779473304748535
    3. ' in' → logprob: -9.502947807312012
    4. '==' → logprob: -10.127947807312012
    5. 'in' → logprob: -11.377947807312012
    6. '!=' → logprob: -11.877947807312012
    7. ' ==' → logprob: -12.127947807312012
    8. ' !=' → logprob: -13.627947807312012
    9. ' no' → logprob: -13.752947807312012
    10. ' ' → logprob: -13.752947807312012

Token 214: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.201422318816185
    2. 'in' → logprob: -1.7014223337173462
    3. ' not' → logprob: -12.701422691345215
    4. ' ' → logprob: -13.701422691345215
    5. '<|end|>' → logprob: -13.826422691345215
    6. 'not' → logprob: -14.076422691345215
    7. 'graph' → logprob: -14.201422691345215
    8. ')' → logprob: -14.826422691345215
    9. 'a' → logprob: -15.201422691345215
    10. '(graph' → logprob: -15.326422691345215

Token 215: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00043257648940198123
    2. ' graph' → logprob: -7.75043249130249
    3. '	graph' → logprob: -13.375432968139648
    4. '(graph' → logprob: -15.875432968139648
    5. '   ' → logprob: -16.37543296813965
    6. 'graphs' → logprob: -17.00043296813965
    7. 'graphql' → logprob: -17.62543296813965
    8. 'nodes' → logprob: -17.87543296813965
    9. ' ' → logprob: -17.87543296813965
    10. 'graphic' → logprob: -18.75043296813965

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043092940002679825
    2. ':
' → logprob: -3.168092966079712
    3. '.setdefault' → logprob: -9.543092727661133
    4. ':

' → logprob: -11.668092727661133
    5. '<|end|>' → logprob: -12.418092727661133
    6. '   ' → logprob: -13.418092727661133
    7. ':
' → logprob: -13.918092727661133
    8. '{
' → logprob: -14.043092727661133
    9. '{' → logprob: -14.293092727661133
    10. '):
' → logprob: -14.418092727661133

Token 217: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07537519931793213
    2. '   ' → logprob: -2.8253750801086426
    3. ':' → logprob: -5.700375080108643
    4. ':
' → logprob: -5.950375080108643
    5. '           ' → logprob: -6.075375080108643
    6. '<|end|>' → logprob: -6.700375080108643
    7. '	graph' → logprob: -6.825375080108643
    8. '{
' → logprob: -6.950375080108643
    9. '(graph' → logprob: -7.825375080108643
    10. '[' → logprob: -8.0753755569458

Token 218: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.014176792465150356
    2. ' graph' → logprob: -4.264176845550537
    3. '	graph' → logprob: -11.264176368713379
    4. '   ' → logprob: -15.139176368713379
    5. '           ' → logprob: -16.139177322387695
    6. '(graph' → logprob: -16.264177322387695
    7. ' ' → logprob: -16.764177322387695
    8. '       ' → logprob: -18.014177322387695
    9. 'graphql' → logprob: -18.514177322387695
    10. '.graph' → logprob: -19.139177322387695

Token 219: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.125
    3. '.setdefault' → logprob: -17.375
    4. '[' → logprob: -17.875
    5. '\[' → logprob: -19.875
    6. '```' → logprob: -20.375
    7. '[A' → logprob: -20.5
    8. '
' → logprob: -21.125
    9. '=a' → logprob: -21.25
    10. '[
' → logprob: -21.5

Token 220: ']' (ID: 60)
  Prédit: ']='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.6449151635169983
    2. ']' → logprob: -0.8949151635169983
    3. '[a' → logprob: -2.8949151039123535
    4. ']={' → logprob: -4.5199151039123535
    5. '=' → logprob: -8.144915580749512
    6. 'a' → logprob: -9.144915580749512
    7. '][' → logprob: -10.394915580749512
    8. '=a' → logprob: -12.144915580749512
    9. '=[' → logprob: -12.769915580749512
    10. '={' → logprob: -12.894915580749512

Token 221: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003546502848621458
    2. ' =' → logprob: -8.500354766845703
    3. '=[]' → logprob: -9.500354766845703
    4. '={}' → logprob: -9.500354766845703
    5. '={' → logprob: -14.375354766845703
    6. ']=' → logprob: -14.750354766845703
    7. '=set' → logprob: -15.375354766845703
    8. ']' → logprob: -16.125354766845703
    9. '=[' → logprob: -17.125354766845703
    10. '={}
' → logprob: -17.250354766845703

Token 222: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.451116051815916e-05
    2. ' []' → logprob: -10.750024795532227
    3. '[]}' → logprob: -13.625024795532227
    4. '[(' → logprob: -14.000024795532227
    5. '[]
' → logprob: -14.125024795532227
    6. '[]

' → logprob: -16.125024795532227
    7. '[]>' → logprob: -16.250024795532227
    8. '[' → logprob: -17.375024795532227
    9. '[])' → logprob: -17.750024795532227
    10. '[],' → logprob: -18.000024795532227

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005425135139375925
    2. '<|end|>' → logprob: -5.255424976348877
    3. '   ' → logprob: -9.380425453186035
    4. ',' → logprob: -9.630425453186035
    5. '<|end|>' → logprob: -10.880425453186035
    6. '[' → logprob: -11.755425453186035
    7. '           ' → logprob: -12.380425453186035
    8. '        
' → logprob: -13.005425453186035
    9. ')' → logprob: -13.505425453186035
    10. ' ' → logprob: -13.630425453186035

Token 224: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03882739692926407
    2. ' graph' → logprob: -3.913827419281006
    3. '       ' → logprob: -4.163827419281006
    4. '   ' → logprob: -6.038827419281006
    5. '	graph' → logprob: -8.788826942443848
    6. 'if' (adapté à ' if') → logprob: -10.913826942443848
    7. '(graph' → logprob: -11.413826942443848
    8. ' if' → logprob: -13.163826942443848
    9. '           ' → logprob: -14.038826942443848
    10. '_graph' → logprob: -14.538826942443848

Token 225: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.14271338284015656
    2. 'b' → logprob: -2.0177133083343506
    3. ' ' → logprob: -11.51771354675293
    4. 'a' → logprob: -11.51771354675293
    5. ' a' → logprob: -11.76771354675293
    6. ' g' → logprob: -13.20521354675293
    7. ' s' → logprob: -13.39271354675293
    8. 's' → logprob: -13.64271354675293
    9. '(b' → logprob: -13.83021354675293
    10. 'g' → logprob: -14.08021354675293

Token 226: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01416738796979189
    2. 'not' → logprob: -4.264167308807373
    3. ' in' → logprob: -12.639167785644531
    4. '	not' → logprob: -15.014167785644531
    5. 'in' → logprob: -15.514167785644531
    6. '   ' → logprob: -17.51416778564453
    7. 'a' → logprob: -18.63916778564453
    8. '[' → logprob: -19.01416778564453
    9. ' ' → logprob: -19.26416778564453
    10. ')' → logprob: -19.26416778564453

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07214400172233582
    2. 'in' → logprob: -2.697144031524658
    3. 'graph' → logprob: -6.572144031524658
    4. ' graph' → logprob: -7.197144031524658
    5. ' not' → logprob: -11.3221435546875
    6. ' ' → logprob: -11.4471435546875
    7. '(graph' → logprob: -11.6971435546875
    8. '   ' → logprob: -12.0721435546875
    9. 'not' → logprob: -12.0721435546875
    10. '	graph' → logprob: -12.5721435546875

Token 228: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.038128238171339035
    2. ' graph' → logprob: -3.288128137588501
    3. '	graph' → logprob: -9.913127899169922
    4. '(graph' → logprob: -10.288127899169922
    5. 'raph' → logprob: -14.163127899169922
    6. ' ' → logprob: -14.538127899169922
    7. 'graphql' → logprob: -14.788127899169922
    8. 'Graph' → logprob: -14.913127899169922
    9. '.graph' → logprob: -15.163127899169922
    10. '_graph' → logprob: -15.788127899169922

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2382151335477829
    2. '[a' → logprob: -2.238215208053589
    3. ':
' → logprob: -2.488215208053589
    4. '           ' → logprob: -5.23821496963501
    5. '[b' → logprob: -5.23821496963501
    6. 'a' → logprob: -5.61321496963501
    7. ']' → logprob: -5.98821496963501
    8. '   ' → logprob: -6.36321496963501
    9. '       ' → logprob: -7.36321496963501
    10. '{
' → logprob: -7.61321496963501

Token 230: '           ' (ID: 352)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6742117404937744
    2. '           ' → logprob: -1.1742117404937744
    3. '[b' → logprob: -2.0492117404937744
    4. 'a' → logprob: -4.174211502075195
    5. '   ' → logprob: -4.174211502075195
    6. '       ' → logprob: -4.424211502075195
    7. 'b' → logprob: -5.799211502075195
    8. ' a' → logprob: -6.049211502075195
    9. '{
' → logprob: -6.924211502075195
    10. '[' → logprob: -7.174211502075195

Token 231: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.4291662871837616
    2. 'graph' (adapté à ' graph') → logprob: -1.054166316986084
    3. '	graph' → logprob: -7.929166316986084
    4. '(graph' → logprob: -9.679165840148926
    5. 'b' → logprob: -11.054165840148926
    6. '<|end|>' → logprob: -11.429165840148926
    7. '.graph' → logprob: -12.554165840148926
    8. ' ' → logprob: -12.679165840148926
    9. ' b' → logprob: -13.179165840148926
    10. '           ' → logprob: -13.554165840148926

Token 232: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.676981345459353e-06
    2. '[a' → logprob: -12.625005722045898
    3. 'b' → logprob: -13.000005722045898
    4. '=b' → logprob: -19.1250057220459
    5. '[' → logprob: -19.3750057220459
    6. ' [' → logprob: -20.1250057220459
    7. '	b' → logprob: -20.2500057220459
    8. '```' → logprob: -20.3750057220459
    9. '.setdefault' → logprob: -20.7500057220459
    10. '>b' → logprob: -21.0000057220459

Token 233: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027027614414691925
    2. ']=' → logprob: -4.027027606964111
    3. '=' → logprob: -4.902027606964111
    4. ' =' → logprob: -6.777027606964111
    5. ' ]' → logprob: -8.90202808380127
    6. ')' → logprob: -10.65202808380127
    7. '].' → logprob: -10.77702808380127
    8. '=[]' → logprob: -10.77702808380127
    9. '']' → logprob: -11.27702808380127
    10. '   ' → logprob: -11.65202808380127

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31372496485710144
    2. '=' → logprob: -1.3137249946594238
    3. '=[]' → logprob: -7.688724994659424
    4. '=[]
' → logprob: -13.688724517822266
    5. '<|end|>' → logprob: -13.938724517822266
    6. '   ' → logprob: -14.563724517822266
    7. ' ' → logprob: -14.688724517822266
    8. '.append' → logprob: -14.813724517822266
    9. '={}' → logprob: -14.813724517822266
    10. '           ' → logprob: -15.313724517822266

Token 235: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0010020858608186245
    2. ' []' → logprob: -7.001002311706543
    3. '[]
' → logprob: -9.376002311706543
    4. '[]}' → logprob: -12.751002311706543
    5. '[]

' → logprob: -13.501002311706543
    6. '[])' → logprob: -14.251002311706543
    7. '=[]' → logprob: -15.251002311706543
    8. '[]>' → logprob: -15.376002311706543
    9. '([]' → logprob: -15.501002311706543
    10. ' ' → logprob: -16.126001358032227

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015499753644689918
    2. '
' → logprob: -6.876550197601318
    3. '   ' → logprob: -8.12654972076416
    4. '<|end|>' → logprob: -9.75154972076416
    5. ' graph' → logprob: -9.87654972076416
    6. '        
' → logprob: -10.12654972076416
    7. 'graph' → logprob: -11.12654972076416
    8. '	graph' → logprob: -11.50154972076416
    9. ',' → logprob: -11.75154972076416
    10. '(graph' → logprob: -12.12654972076416

Token 237: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2599881887435913
    2. 'graph' (adapté à ' graph') → logprob: -2.134988307952881
    3. '       ' → logprob: -2.259988307952881
    4. '   ' → logprob: -5.384988307952881
    5. '	graph' → logprob: -7.134988307952881
    6. ' if' → logprob: -7.384988307952881
    7. 'if' → logprob: -9.259987831115723
    8. '
' → logprob: -9.884987831115723
    9. '(graph' → logprob: -10.009987831115723
    10. '```' → logprob: -10.259987831115723

Token 238: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.9361264946837764e-07
    2. 'a' → logprob: -16.0
    3. '[b' → logprob: -19.0
    4. '[s' → logprob: -20.25
    5. '```' → logprob: -20.25
    6. '[' → logprob: -20.75
    7. '[u' → logprob: -20.875
    8. '[c' → logprob: -21.625
    9. '.setdefault' → logprob: -22.375
    10. '[A' → logprob: -22.375

Token 239: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.008774581365287304
    2. '.append' → logprob: -4.758774757385254
    3. '.' → logprob: -9.133774757385254
    4. ').' → logprob: -10.633774757385254
    5. ''].' → logprob: -12.008774757385254
    6. ' ].' → logprob: -12.258774757385254
    7. '.setdefault' → logprob: -12.383774757385254
    8. ']' → logprob: -12.508774757385254
    9. '   ' → logprob: -13.008774757385254
    10. '[' → logprob: -13.258774757385254

Token 240: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.5776860184123507e-06
    2. '.append' → logprob: -13.50000286102295
    3. ' append' → logprob: -13.75000286102295
    4. '_append' → logprob: -19.125001907348633
    5. '	append' → logprob: -19.375001907348633
    6. 'appen' → logprob: -20.250001907348633
    7. 'app' → logprob: -20.875001907348633
    8. 'Append' → logprob: -21.000001907348633
    9. 'push' → logprob: -21.875001907348633
    10. '```' → logprob: -21.875001907348633

Token 241: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0008127244072966278
    2. '(b' → logprob: -7.750812530517578
    3. '(' → logprob: -7.875812530517578
    4. ' (' → logprob: -14.000812530517578
    5. ' ((' → logprob: -14.875812530517578
    6. '(B' → logprob: -15.000812530517578
    7. '   ' → logprob: -15.375812530517578
    8. '[(' → logprob: -15.375812530517578
    9. '(('' → logprob: -16.500812530517578
    10. '<|end|>' → logprob: -16.750812530517578

Token 242: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0280383548888494e-06
    2. ' b' → logprob: -13.875000953674316
    3. ')b' → logprob: -16.750001907348633
    4. '<|end|>' → logprob: -18.250001907348633
    5. ''b' → logprob: -18.625001907348633
    6. '   ' → logprob: -18.750001907348633
    7. '
' → logprob: -19.375001907348633
    8. ' ' → logprob: -20.375001907348633
    9. ')' → logprob: -20.500001907348633
    10. '>b' → logprob: -21.000001907348633

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069701592437922955
    2. ',time' → logprob: -5.006969928741455
    3. ' ,' → logprob: -8.381970405578613
    4. 'time' → logprob: -10.631970405578613
    5. ',
' → logprob: -14.131970405578613
    6. ' time' → logprob: -14.506970405578613
    7. ',float' → logprob: -16.381969451904297
    8. ',t' → logprob: -16.756969451904297
    9. '(time' → logprob: -16.881969451904297
    10. '),' → logprob: -16.881969451904297

Token 244: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.16022716462612152
    2. ' time' → logprob: -1.9102271795272827
    3. ')' → logprob: -13.410226821899414
    4. '"time' → logprob: -15.035226821899414
    5. '	time' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.785226821899414
    7. '(time' → logprob: -15.910226821899414
    8. '
' → logprob: -16.160226821899414
    9. '0' → logprob: -16.285226821899414
    10. '1' → logprob: -16.535226821899414

Token 245: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.21542920172214508
    2. '))
' → logprob: -1.7154291868209839
    3. ')' → logprob: -4.590429306030273
    4. ')
' → logprob: -5.590429306030273
    5. '       ' → logprob: -11.465429306030273
    6. ' ))' → logprob: -11.715429306030273
    7. '))

' → logprob: -11.965429306030273
    8. ' ))
' → logprob: -12.465429306030273
    9. '))
' → logprob: -13.090429306030273
    10. '   ' → logprob: -13.340429306030273

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002084277366520837
    2. '<|end|>' → logprob: -9.250208854675293
    3. '	graph' → logprob: -10.125208854675293
    4. '   ' → logprob: -10.125208854675293
    5. 'graph' → logprob: -11.125208854675293
    6. ' graph' → logprob: -11.625208854675293
    7. '	' → logprob: -12.875208854675293
    8. '(graph' → logprob: -13.125208854675293
    9. '[' → logprob: -14.250208854675293
    10. '```' → logprob: -14.500208854675293

Token 247: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.049840234220027924
    2. ' graph' → logprob: -3.049840211868286
    3. '	graph' → logprob: -6.924840450286865
    4. '       ' → logprob: -8.549839973449707
    5. '   ' → logprob: -9.924839973449707
    6. '(graph' → logprob: -11.299839973449707
    7. 'if' → logprob: -12.299839973449707
    8. ' if' → logprob: -13.174839973449707
    9. '.graph' → logprob: -14.049839973449707
    10. 'Graph' → logprob: -14.049839973449707

Token 248: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.941850526549388e-06
    2. '[a' → logprob: -11.750007629394531
    3. 'b' → logprob: -16.87500762939453
    4. '[' → logprob: -20.00000762939453
    5. '[c' → logprob: -20.62500762939453
    6. '[g' → logprob: -20.62500762939453
    7. '```' → logprob: -20.87500762939453
    8. '[u' → logprob: -21.00000762939453
    9. '[s' → logprob: -21.12500762939453
    10. '[p' → logprob: -21.75000762939453

Token 249: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.02430807426571846
    2. '.' → logprob: -4.524308204650879
    3. '.append' → logprob: -5.024308204650879
    4. ').' → logprob: -5.024308204650879
    5. '}.' → logprob: -12.149308204650879
    6. '.app' → logprob: -12.524308204650879
    7. ']' → logprob: -12.649308204650879
    8. ' ].' → logprob: -13.024308204650879
    9. '   ' → logprob: -13.524308204650879
    10. '       ' → logprob: -14.024308204650879

Token 250: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.339278580620885e-06
    2. '.append' → logprob: -13.125001907348633
    3. ' append' → logprob: -15.625001907348633
    4. 'appen' → logprob: -16.500001907348633
    5. 'app' → logprob: -17.750001907348633
    6. '	append' → logprob: -18.375001907348633
    7. 'Append' → logprob: -19.375001907348633
    8. 'a' → logprob: -20.500001907348633
    9. 'add' → logprob: -20.875001907348633
    10. '_append' → logprob: -21.125001907348633

Token 251: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.531315314830863e-06
    2. '(a' → logprob: -12.750003814697266
    3. ' ((' → logprob: -14.625003814697266
    4. ' (' → logprob: -16.125003814697266
    5. '(' → logprob: -17.125003814697266
    6. '(
' → logprob: -18.125003814697266
    7. '[(' → logprob: -18.625003814697266
    8. ' ' → logprob: -18.875003814697266
    9. ')((' → logprob: -19.500003814697266
    10. '<|end|>' → logprob: -19.625003814697266

Token 252: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.033719129860401154
    2. '(a' → logprob: -3.408719062805176
    3. ' a' → logprob: -10.033719062805176
    4. ' (' → logprob: -10.908719062805176
    5. ')' → logprob: -12.658719062805176
    6. '(' → logprob: -13.408719062805176
    7. '<|end|>' → logprob: -13.408719062805176
    8. ')a' → logprob: -13.533719062805176
    9. ',a' → logprob: -14.283719062805176
    10. '[a' → logprob: -14.283719062805176

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.191489642835222e-05
    2. ' ,' → logprob: -10.125041961669922
    3. ',time' → logprob: -13.875041961669922
    4. '),' → logprob: -14.875041961669922
    5. ',
' → logprob: -15.000041961669922
    6. 'time' → logprob: -16.875041961669922
    7. '`,' → logprob: -17.625041961669922
    8. '‌,' → logprob: -17.875041961669922
    9. '```' → logprob: -17.875041961669922
    10. '<|end|>' → logprob: -18.000041961669922

Token 254: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.2014147937297821
    2. 'time' → logprob: -1.7014148235321045
    3. '"time' → logprob: -14.576415061950684
    4. ')' → logprob: -14.826415061950684
    5. '	time' → logprob: -15.326415061950684
    6. ' ' → logprob: -15.826415061950684
    7. ' ' → logprob: -16.576414108276367
    8. '(time' → logprob: -16.576414108276367
    9. 'Time' → logprob: -17.576414108276367
    10. 't' → logprob: -17.576414108276367

Token 255: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0010241165291517973
    2. '))
' → logprob: -7.00102424621582
    3. ')' → logprob: -9.12602424621582
    4. '       ' → logprob: -13.62602424621582
    5. ' ))' → logprob: -13.75102424621582
    6. '   ' → logprob: -14.37602424621582
    7. ')
' → logprob: -14.62602424621582
    8. '))

' → logprob: -15.50102424621582
    9. ')))' → logprob: -16.00102424621582
    10. '))
' → logprob: -16.00102424621582

Token 256: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16429945826530457
    2. 's' → logprob: -3.289299488067627
    3. '   ' → logprob: -3.289299488067627
    4. ' dist' → logprob: -3.789299488067627
    5. 'start' → logprob: -4.414299488067627
    6. 'if' → logprob: -4.414299488067627
    7. 'for' → logprob: -5.414299488067627
    8. 'ds' → logprob: -5.664299488067627
    9. 'd' → logprob: -5.914299488067627
    10. ' if' → logprob: -6.289299488067627

Token 257: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.18475744128227234
    2. ' nodes' → logprob: -2.1847574710845947
    3. '   ' → logprob: -2.9347574710845947
    4. '	nodes' → logprob: -7.059757232666016
    5. '
' → logprob: -7.184757232666016
    6. '<|end|>' → logprob: -7.684757232666016
    7. '(nodes' → logprob: -8.309757232666016
    8. ')' → logprob: -9.309757232666016
    9. 'time' → logprob: -9.309757232666016
    10. '.nodes' → logprob: -9.559757232666016

Token 258: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003654837142676115
    2. '.update' → logprob: -6.003654956817627
    3. '.' → logprob: -6.753654956817627
    4. ' .' → logprob: -11.378654479980469
    5. '.setdefault' → logprob: -15.753654479980469
    6. 'add' → logprob: -16.37865447998047
    7. ').' → logprob: -17.62865447998047
    8. '>.' → logprob: -18.00365447998047
    9. '.dis' → logprob: -18.00365447998047
    10. '.union' → logprob: -18.12865447998047

Token 259: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.246537173457909e-06
    2. 'a' → logprob: -12.375003814697266
    3. '(' → logprob: -19.125003814697266
    4. '((' → logprob: -21.875003814697266
    5. '(b' → logprob: -22.625003814697266
    6. '(s' → logprob: -23.000003814697266
    7. '```' → logprob: -23.375003814697266
    8. '(n' → logprob: -23.625003814697266
    9. 's' → logprob: -23.750003814697266
    10. '(i' → logprob: -23.875003814697266

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759680867195129
    2. ')
' → logprob: -0.8259680867195129
    3. ')b' → logprob: -11.075967788696289
    4. ' )
' → logprob: -11.950967788696289
    5. ')a' → logprob: -13.450967788696289
    6. ' )' → logprob: -13.575967788696289
    7. ')
' → logprob: -13.575967788696289
    8. ')

' → logprob: -13.950967788696289
    9. ');' → logprob: -14.825967788696289
    10. ');
' → logprob: -15.075967788696289

Token 261: '       ' (ID: 309)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.7088156342506409
    2. '   ' → logprob: -1.333815574645996
    3. ' nodes' → logprob: -1.583815574645996
    4. '       ' → logprob: -3.583815574645996
    5. '	nodes' → logprob: -5.083815574645996
    6. '(nodes' → logprob: -6.458815574645996
    7. 'b' → logprob: -6.833815574645996
    8. ' ' → logprob: -7.083815574645996
    9. '<|end|>' → logprob: -7.458815574645996
    10. '.nodes' → logprob: -7.833815574645996

Token 262: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.00010270876373397186
    2. 'b' → logprob: -9.500102996826172
    3. ' nodes' → logprob: -10.500102996826172
    4. '   ' → logprob: -16.125102996826172
    5. '	nodes' → logprob: -16.375102996826172
    6. '       ' → logprob: -17.625102996826172
    7. '(nodes' → logprob: -18.000102996826172
    8. '.nodes' → logprob: -18.375102996826172
    9. '        
' → logprob: -21.875102996826172
    10. '           ' → logprob: -21.875102996826172

Token 263: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.32392441527918e-05
    2. '.' → logprob: -9.875053405761719
    3. 'add' → logprob: -13.375053405761719
    4. ' .' → logprob: -16.50005340576172
    5. '.Add' → logprob: -18.00005340576172
    6. '.update' → logprob: -18.00005340576172
    7. ')add' → logprob: -18.37505340576172
    8. '.remove' → logprob: -18.62505340576172
    9. '```' → logprob: -18.62505340576172
    10. '<|end|>' → logprob: -18.62505340576172

Token 264: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.2729995988775045e-06
    2. 'b' → logprob: -12.375006675720215
    3. '(' → logprob: -13.125006675720215
    4. '(a' → logprob: -19.2500057220459
    5. '(
' → logprob: -19.8750057220459
    6. ' (' → logprob: -20.1250057220459
    7. '(B' → logprob: -20.2500057220459
    8. ' b' → logprob: -21.1250057220459
    9. ')b' → logprob: -22.0000057220459
    10. 'a' → logprob: -22.2500057220459

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005911595653742552
    2. ')
' → logprob: -7.500591278076172
    3. '   ' → logprob: -10.375591278076172
    4. '
' → logprob: -13.375591278076172
    5. ' )' → logprob: -13.500591278076172
    6. '<|end|>' → logprob: -13.500591278076172
    7. ')

' → logprob: -13.625591278076172
    8. ')n' → logprob: -15.125591278076172
    9. '```' → logprob: -15.375591278076172
    10. ')}' → logprob: -16.000591278076172

Token 266: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5124130249023438
    2. 'if' → logprob: -1.5124130249023438
    3. 'dist' → logprob: -1.6374130249023438
    4. 's' → logprob: -2.0124130249023438
    5. 'dp' → logprob: -3.7624130249023438
    6. 'start' → logprob: -3.7624130249023438
    7. ' if' → logprob: -3.8874130249023438
    8. 'for' → logprob: -4.387413024902344
    9. '    
' → logprob: -4.387413024902344
    10. 'f' → logprob: -4.387413024902344

Token 267: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07286155223846436
    2. 'if' → logprob: -3.572861671447754
    3. 'start' → logprob: -4.822861671447754
    4. 'for' → logprob: -5.822861671447754
    5. 'dp' → logprob: -5.822861671447754
    6. 'd' → logprob: -5.822861671447754
    7. 'short' → logprob: -6.447861671447754
    8. 's' → logprob: -6.447861671447754
    9. '#' (adapté à ' #') → logprob: -6.822861671447754
    10. 'dest' → logprob: -6.947861671447754

Token 268: ' D' (ID: 415)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11198172718286514
    2. ' dist' → logprob: -2.7369816303253174
    3. 'start' → logprob: -4.9869818687438965
    4. 'd' → logprob: -4.9869818687438965
    5. 's' → logprob: -5.7369818687438965
    6. 'short' → logprob: -5.7369818687438965
    7. 'ds' → logprob: -5.9869818687438965
    8. 'sp' → logprob: -6.7369818687438965
    9. 'try' → logprob: -7.0494818687438965
    10. 'best' → logprob: -7.0494818687438965

Token 269: 'ijkstra' (ID: 124290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4449496865272522
    2. 'ist' → logprob: -1.4449496269226074
    3. 'start' → logprob: -2.8199496269226074
    4. 'ists' → logprob: -3.5699496269226074
    5. 's' → logprob: -4.194949626922607
    6. 'ijkstra' → logprob: -4.944949626922607
    7. '#' → logprob: -5.569949626922607
    8. 'istance' → logprob: -6.194949626922607
    9. ' dist' → logprob: -6.444949626922607
    10. '```' → logprob: -7.319949626922607

Token 270: ' s' (ID: 265)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15890787541866302
    2. 's' → logprob: -3.283907890319824
    3. 'short' → logprob: -3.783907890319824
    4. ' dist' → logprob: -4.158907890319824
    5. 'start' → logprob: -4.283907890319824
    6. '_dist' → logprob: -4.783907890319824
    7. '_short' → logprob: -5.158907890319824
    8. 'from' → logprob: -5.658907890319824
    9. 'distance' → logprob: -5.658907890319824
    10. '_s' → logprob: -5.783907890319824

Token 271: '->' (ID: 609)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7102324962615967
    2. 'dist' → logprob: -0.8352324962615967
    3. '_to' → logprob: -3.0852324962615967
    4. 'ist' → logprob: -4.085232734680176
    5. 'to' → logprob: -5.210232734680176
    6. 'd' → logprob: -6.210232734680176
    7. ' =' → logprob: -6.710232734680176
    8. '_s' → logprob: -7.710232734680176
    9. '_start' → logprob: -7.835232734680176
    10. 's' → logprob: -7.835232734680176

Token 272: 'p' (ID: 79)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4751376509666443
    2. 'p' → logprob: -0.9751376509666443
    3. 's' → logprob: -7.225137710571289
    4. ' p' → logprob: -8.850137710571289
    5. ' g' → logprob: -9.100137710571289
    6. 'dist' → logprob: -11.537637710571289
    7. '```' → logprob: -11.725137710571289
    8. '   ' → logprob: -12.162637710571289
    9. ' ' → logprob: -12.225137710571289
    10. 'all' → logprob: -12.287637710571289

Token 273: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002671853406354785
    2. '   ' → logprob: -6.627671718597412
    3. 'd' → logprob: -7.752671718597412
    4. ' dist' → logprob: -8.62767219543457
    5. '    
' → logprob: -8.62767219543457
    6. 'start' → logprob: -9.37767219543457
    7. 's' → logprob: -9.50267219543457
    8. 'distance' → logprob: -9.50267219543457
    9. '
' → logprob: -9.62767219543457
    10. 'ds' → logprob: -10.00267219543457

Token 274: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008048519492149353
    2. '   ' → logprob: -5.0080485343933105
    3. ' dist' → logprob: -8.008048057556152
    4. 'd' → logprob: -8.008048057556152
    5. '    
' → logprob: -8.883048057556152
    6. 's' → logprob: -9.133048057556152
    7. '
' → logprob: -9.383048057556152
    8. '```' → logprob: -9.508048057556152
    9. 'start' → logprob: -9.758048057556152
    10. 'distance' → logprob: -10.008048057556152

Token 275: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0010150644229725003
    2. 'd' → logprob: -7.8760151863098145
    3. 'ds' → logprob: -8.376014709472656
    4. ' dist' → logprob: -8.876014709472656
    5. 'dp' → logprob: -9.751014709472656
    6. 'sp' → logprob: -10.376014709472656
    7. 'start' → logprob: -10.501014709472656
    8. '```' → logprob: -10.501014709472656
    9. 'distance' → logprob: -11.001014709472656
    10. 'time' → logprob: -11.126014709472656

Token 276: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3225279152393341
    2. ' =' → logprob: -2.1975278854370117
    3. '_sp' → logprob: -2.4475278854370117
    4. 's' → logprob: -3.1975278854370117
    5. '1' → logprob: -3.8225278854370117
    6. '=' → logprob: -4.697527885437012
    7. 'sp' → logprob: -5.447527885437012
    8. '_start' → logprob: -7.072527885437012
    9. 'SP' → logprob: -7.697527885437012
    10. '_from' → logprob: -8.572527885437012

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2532899081707001
    2. ' =' → logprob: -1.5032899379730225
    3. '=s' → logprob: -6.753289699554443
    4. 's' → logprob: -8.878290176391602
    5. '[s' → logprob: -10.878290176391602
    6. '=p' → logprob: -11.128290176391602
    7. '_s' → logprob: -12.128290176391602
    8. 'p' → logprob: -12.503290176391602
    9. ',' → logprob: -13.003290176391602
    10. ' s' → logprob: -13.253290176391602

Token 278: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000488110730657354
    2. ' d' → logprob: -7.62548828125
    3. ')d' → logprob: -17.75048828125
    4. '	d' → logprob: -18.25048828125
    5. '   ' → logprob: -19.12548828125
    6. '(d' → logprob: -19.50048828125
    7. '{' → logprob: -19.75048828125
    8. 'dist' → logprob: -19.75048828125
    9. 'dj' → logprob: -20.62548828125
    10. ' ' → logprob: -20.62548828125

Token 279: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -2.3319124011322856e-05
    2. 'ijk' → logprob: -10.750022888183594
    3. 'ij' → logprob: -14.375022888183594
    4. 'ijks' → logprob: -15.000022888183594
    5. '```' → logprob: -15.125022888183594
    6. 'jik' → logprob: -15.875022888183594
    7. '[i' → logprob: -16.875022888183594
    8. '(s' → logprob: -16.875022888183594
    9. 's' → logprob: -17.500022888183594
    10. 'ist' → logprob: -17.625022888183594

Token 280: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'graph' → logprob: -16.625
    4. '(
' → logprob: -18.125
    5. ' (' → logprob: -18.375
    6. '(gr' → logprob: -19.0
    7. '(game' → logprob: -19.0
    8. '(grammar' → logprob: -19.125
    9. '	graph' → logprob: -19.625
    10. '(Graph' → logprob: -19.875

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029986200388520956
    2. ',s' → logprob: -5.8779988288879395
    3. ' ,' → logprob: -8.627998352050781
    4. ',p' → logprob: -11.252998352050781
    5. 's' → logprob: -13.877998352050781
    6. ',n' → logprob: -16.12799835205078
    7. ',start' → logprob: -16.12799835205078
    8. ' ' → logprob: -16.37799835205078
    9. ' s' → logprob: -16.50299835205078
    10. '(s' → logprob: -16.62799835205078

Token 282: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014167038723826408
    2. ' s' → logprob: -4.264166831970215
    3. ')' → logprob: -13.264166831970215
    4. ''s' → logprob: -14.264166831970215
    5. ')s' → logprob: -15.264166831970215
    6. '   ' → logprob: -15.389166831970215
    7. '`s' → logprob: -15.639166831970215
    8. ' ' → logprob: -15.639166831970215
    9. '[s' → logprob: -15.764166831970215
    10. '(s' → logprob: -16.13916778564453

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144470036029816
    2. ')
' → logprob: -1.7014447450637817
    3. ')
' → logprob: -11.451444625854492
    4. ')[' → logprob: -11.701444625854492
    5. '   ' → logprob: -12.326444625854492
    6. ')

' → logprob: -12.576444625854492
    7. ')p' → logprob: -13.326444625854492
    8. ' )' → logprob: -13.576444625854492
    9. ' )
' → logprob: -13.826444625854492
    10. ')#' → logprob: -15.576444625854492

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08270914107561111
    2. 'dist' → logprob: -2.8327090740203857
    3. ' dist' → logprob: -4.332709312438965
    4. '
' → logprob: -5.457709312438965
    5. '    
' → logprob: -6.332709312438965
    6. '	dist' → logprob: -7.457709312438965
    7. '.dist' → logprob: -8.707709312438965
    8. '_dist' → logprob: -8.832709312438965
    9. '#' → logprob: -9.332709312438965
    10. ' if' → logprob: -9.582709312438965

Token 285: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02024894393980503
    2. '   ' → logprob: -4.145248889923096
    3. ' dist' → logprob: -5.520248889923096
    4. '```' → logprob: -9.770249366760254
    5. 'if' → logprob: -10.020249366760254
    6. '	dist' → logprob: -10.645249366760254
    7. '#' (adapté à ' #') → logprob: -11.270249366760254
    8. 'time' → logprob: -11.645249366760254
    9. 'distance' → logprob: -11.895249366760254
    10. '    
' → logprob: -11.895249366760254

Token 286: ' D' (ID: 415)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.043345242738723755
    2. ' dist' → logprob: -3.1683452129364014
    3. '#' → logprob: -8.79334545135498
    4. '   ' → logprob: -9.04334545135498
    5. 'd' → logprob: -11.04334545135498
    6. 'Dist' → logprob: -11.66834545135498
    7. 'p' → logprob: -11.98084545135498
    8. '	dist' → logprob: -12.29334545135498
    9. '
' → logprob: -12.54334545135498
    10. 'if' → logprob: -12.73084545135498

Token 287: 'ijkstra' (ID: 124290)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.3604252338409424
    2. 'dist' → logprob: -1.3604252338409424
    3. 'ijkstra' → logprob: -3.8604252338409424
    4. ' dist' → logprob: -3.9854252338409424
    5. 'p' → logprob: -5.610424995422363
    6. '_dist' → logprob: -7.110424995422363
    7. 'istance' → logprob: -7.860424995422363
    8. '   ' → logprob: -8.235424995422363
    9. 'g' → logprob: -8.360424995422363
    10. 'ists' → logprob: -8.735424995422363

Token 288: ' p' (ID: 275)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.48210808634757996
    2. 'dist' → logprob: -1.1071081161499023
    3. 'p' → logprob: -3.6071081161499023
    4. ' p' → logprob: -4.607108116149902
    5. 'g' → logprob: -4.732108116149902
    6. ' g' → logprob: -6.357108116149902
    7. '_dist' → logprob: -6.732108116149902
    8. '_p' → logprob: -6.732108116149902
    9. '_g' → logprob: -7.607108116149902
    10. ' =' → logprob: -7.857108116149902

Token 289: '->' (ID: 609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2765200436115265
    2. 'dist' → logprob: -2.526520013809204
    3. '=' → logprob: -2.776520013809204
    4. ' dist' → logprob: -3.901520013809204
    5. ' to' → logprob: -4.026520252227783
    6. 'g' → logprob: -4.526520252227783
    7. '_dist' → logprob: -4.526520252227783
    8. '_g' → logprob: -4.776520252227783
    9. '   ' → logprob: -4.776520252227783
    10. ',' → logprob: -4.901520252227783

Token 290: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0005542247672565281
    2. ' g' → logprob: -7.500554084777832
    3. '<|end|>' → logprob: -15.125554084777832
    4. '	g' → logprob: -15.750554084777832
    5. ' ' → logprob: -15.750554084777832
    6. '[g' → logprob: -15.875554084777832
    7. 's' → logprob: -16.00055503845215
    8. 'p' → logprob: -16.25055503845215
    9. '#g' → logprob: -16.25055503845215
    10. '_g' → logprob: -16.37555503845215

Token 291: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4436385929584503
    2. '
' → logprob: -1.693638563156128
    3. 'dist' → logprob: -1.818638563156128
    4. ' dist' → logprob: -4.568638801574707
    5. '    
' → logprob: -7.068638801574707
    6. '	dist' → logprob: -8.193638801574707
    7. '```' → logprob: -8.443638801574707
    8. '_dist' → logprob: -9.318638801574707
    9. '.dist' → logprob: -9.318638801574707
    10. ',
' → logprob: -9.568638801574707

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6456661820411682
    2. 'dist' → logprob: -1.0206661224365234
    3. '
' → logprob: -2.2706661224365234
    4. ' dist' → logprob: -4.645666122436523
    5. '	dist' → logprob: -6.895666122436523
    6. '    
' → logprob: -7.270666122436523
    7. '```' → logprob: -8.395666122436523
    8. '_dist' → logprob: -8.520666122436523
    9. '.dist' → logprob: -9.270666122436523
    10. '(dist' → logprob: -9.645666122436523

Token 293: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.043635375797748566
    2. ' dist' → logprob: -3.168635368347168
    3. '   ' → logprob: -7.418635368347168
    4. '
' → logprob: -10.668635368347168
    5. '	dist' → logprob: -12.293635368347168
    6. '```' → logprob: -12.918635368347168
    7. '_dist' → logprob: -13.543635368347168
    8. '    
' → logprob: -13.918635368347168
    9. '.dist' → logprob: -14.418635368347168
    10. '(dist' → logprob: -14.543635368347168

Token 294: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.002277054125443101
    2. '_' → logprob: -6.37727689743042
    3. '_g' → logprob: -7.50227689743042
    4. '=' → logprob: -11.752277374267578
    5. ' =' → logprob: -11.877277374267578
    6. '_s' → logprob: -12.377277374267578
    7. '_=' → logprob: -13.252277374267578
    8. 'p' → logprob: -14.127277374267578
    9. ' _' → logprob: -14.502277374267578
    10. 'g' → logprob: -14.752277374267578

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519303858280182
    2. ' =' → logprob: -1.5019303560256958
    3. '=d' → logprob: -14.001930236816406
    4. ' ' → logprob: -15.376930236816406
    5. '=g' → logprob: -16.501930236816406
    6. '=p' → logprob: -16.876930236816406
    7. '＝' → logprob: -17.376930236816406
    8. '=
' → logprob: -17.626930236816406
    9. '=D' → logprob: -17.876930236816406
    10. '=

' → logprob: -18.001930236816406

Token 296: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00671584764495492
    2. ' d' → logprob: -5.006715774536133
    3. 'dist' → logprob: -16.131715774536133
    4. '(d' → logprob: -16.506715774536133
    5. ')d' → logprob: -16.631715774536133
    6. '   ' → logprob: -16.756715774536133
    7. '	d' → logprob: -16.881715774536133
    8. '```' → logprob: -18.256715774536133
    9. ' dist' → logprob: -18.381715774536133
    10. '{' → logprob: -18.506715774536133

Token 297: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -4.127333340875339e-06
    2. 'ijk' → logprob: -12.500003814697266
    3. 'ij' → logprob: -15.250003814697266
    4. 'jik' → logprob: -16.625003814697266
    5. 'ijks' → logprob: -17.250003814697266
    6. '```' → logprob: -18.125003814697266
    7. 'jk' → logprob: -18.625003814697266
    8. 'ijkl' → logprob: -18.625003814697266
    9. '{' → logprob: -18.750003814697266
    10. 'graph' → logprob: -18.875003814697266

Token 298: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -6.704273118884885e-07
    2. 'graph' → logprob: -14.375000953674316
    3. '	graph' → logprob: -17.75
    4. ' graph' → logprob: -18.5
    5. '```' → logprob: -19.375
    6. '(grammar' → logprob: -20.875
    7. 'raph' → logprob: -20.875
    8. '(game' → logprob: -21.25
    9. '(heap' → logprob: -21.375
    10. '(Graph' → logprob: -21.375

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019405345665290952
    2. '(graph' → logprob: -6.251940727233887
    3. 'graph' → logprob: -12.126940727233887
    4. ' ,' → logprob: -12.626940727233887
    5. ' graph' → logprob: -12.751940727233887
    6. ',
' → logprob: -16.12693977355957
    7. ')' → logprob: -16.25193977355957
    8. ',g' → logprob: -17.12693977355957
    9. '),' → logprob: -17.50193977355957
    10. '	graph' → logprob: -17.87693977355957

Token 300: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08223272860050201
    2. ' p' → logprob: -2.707232713699341
    3. 'graph' → logprob: -4.70723295211792
    4. ' graph' → logprob: -5.83223295211792
    5. 'g' → logprob: -8.332232475280762
    6. ' g' → logprob: -11.457232475280762
    7. '(graph' → logprob: -12.457232475280762
    8. ' ' → logprob: -13.582232475280762
    9. '   ' → logprob: -14.332232475280762
    10. '	graph' → logprob: -14.707232475280762

Token 301: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20769087970256805
    2. ')' → logprob: -1.7076908349990845
    3. ')
' → logprob: -5.082690715789795
    4. 'g' → logprob: -11.082691192626953
    5. '
' → logprob: -11.832691192626953
    6. '    
' → logprob: -11.957691192626953
    7. '(graph' → logprob: -12.207691192626953
    8. '#' → logprob: -12.957691192626953
    9. '[g' → logprob: -12.957691192626953
    10. '(g' → logprob: -12.957691192626953

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6967600584030151
    2. 'dist' → logprob: -0.6967600584030151
    3. ' dist' → logprob: -6.321760177612305
    4. '	dist' → logprob: -7.071760177612305
    5. 'if' → logprob: -8.196760177612305
    6. '```' → logprob: -8.571760177612305
    7. '    
' → logprob: -9.196760177612305
    8. '<|end|>' → logprob: -9.196760177612305
    9. '_dist' → logprob: -9.321760177612305
    10. 'distance' → logprob: -10.196760177612305

Token 303: ' ans' (ID: 3345)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.20719721913337708
    2. '   ' → logprob: -1.7071971893310547
    3. 'if' → logprob: -6.082197189331055
    4. ' dist' → logprob: -6.582197189331055
    5. '```' → logprob: -7.957197189331055
    6. 'result' → logprob: -8.332197189331055
    7. 'print' → logprob: -8.582197189331055
    8. 'answer' → logprob: -8.707197189331055
    9. '	dist' → logprob: -8.707197189331055
    10. 'distance' → logprob: -8.957197189331055

Token 304: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144608616828918
    2. ' =' → logprob: -1.7014460563659668
    3. '_' → logprob: -10.701446533203125
    4. '_=' → logprob: -13.576446533203125
    5. '_s' → logprob: -13.701446533203125
    6. ',' → logprob: -13.826446533203125
    7. '＝' → logprob: -13.951446533203125
    8. 's' → logprob: -14.201446533203125
    9. 'if' → logprob: -14.201446533203125
    10. '=[]' → logprob: -14.326446533203125

Token 305: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.023385819047689438
    2. 'float' → logprob: -4.273386001586914
    3. 'min' → logprob: -5.898386001586914
    4. ' dist' → logprob: -6.023386001586914
    5. '"' → logprob: -6.273386001586914
    6. 'int' → logprob: -6.523386001586914
    7. 'round' → logprob: -8.523386001586914
    8. '0' → logprob: -9.148386001586914
    9. '"{' → logprob: -9.773386001586914
    10. '(dist' → logprob: -10.023386001586914

Token 306: '_s' (ID: 1278)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.13663125038146973
    2. '_g' → logprob: -2.3866312503814697
    3. '_s' → logprob: -3.6366312503814697
    4. '[p' → logprob: -5.136631011962891
    5. '[s' → logprob: -6.261631011962891
    6. '_p' → logprob: -6.511631011962891
    7. 'g' → logprob: -9.01163101196289
    8. 's' → logprob: -11.76163101196289
    9. '[' → logprob: -12.01163101196289
    10. '[u' → logprob: -13.13663101196289

Token 307: '[p' (ID: 23234)
  Prédit: '[g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -0.0769716277718544
    2. '.get' → logprob: -2.9519715309143066
    3. '[p' → logprob: -3.8269715309143066
    4. 'g' → logprob: -9.951972007751465
    5. 'get' → logprob: -11.576972007751465
    6. '[get' → logprob: -11.951972007751465
    7. '.g' → logprob: -12.951972007751465
    8. 'p' → logprob: -13.326972007751465
    9. '[s' → logprob: -14.576972007751465
    10. '[' → logprob: -14.951972007751465

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009997127577662468
    2. ']+' → logprob: -4.6349968910217285
    3. ']
' → logprob: -8.384997367858887
    4. ' ]' → logprob: -11.884997367858887
    5. '+' → logprob: -13.259997367858887
    6. ']

' → logprob: -13.759997367858887
    7. 'if' → logprob: -13.884997367858887
    8. ')' → logprob: -15.009997367858887
    9. ']*' → logprob: -15.134997367858887
    10. ']+=' → logprob: -15.259997367858887

Token 309: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01059450302273035
    2. ' +' → logprob: -4.635594367980957
    3. 'if' → logprob: -7.260594367980957
    4. ' if' → logprob: -9.135594367980957
    5. '
' → logprob: -11.635594367980957
    6. '+p' → logprob: -12.010594367980957
    7. '+
' → logprob: -12.260594367980957
    8. '+d' → logprob: -13.010594367980957
    9. '+t' → logprob: -14.135594367980957
    10. '+i' → logprob: -14.260594367980957

Token 310: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.009759512729942799
    2. ' dist' → logprob: -4.634759426116943
    3. '(dist' → logprob: -13.009759902954102
    4. '   ' → logprob: -14.634759902954102
    5. '	dist' → logprob: -14.759759902954102
    6. '.dist' → logprob: -16.2597599029541
    7. ' ' → logprob: -16.2597599029541
    8. '
' → logprob: -16.5097599029541
    9. '  ' → logprob: -17.0097599029541
    10. 'd' → logprob: -17.0097599029541

Token 311: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.014174672774970531
    2. '_g' → logprob: -4.264174461364746
    3. '[g' → logprob: -11.514174461364746
    4. '_' → logprob: -15.139174461364746
    5. 'g' → logprob: -15.264174461364746
    6. '_s' → logprob: -15.764174461364746
    7. '_pg' → logprob: -15.889174461364746
    8. ' _' → logprob: -16.264175415039062
    9. '_[' → logprob: -16.514175415039062
    10. '```' → logprob: -16.514175415039062

Token 312: '[g' (ID: 80396)
  Prédit: '[g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[g' → logprob: -4.842555426876061e-06
    2. 'g' → logprob: -12.375004768371582
    3. '.get' → logprob: -15.375004768371582
    4. ' [' → logprob: -15.875004768371582
    5. '```' → logprob: -16.5000057220459
    6. '
' → logprob: -17.6250057220459
    7. '[' → logprob: -17.6250057220459
    8. '	g' → logprob: -17.7500057220459
    9. '[get' → logprob: -18.7500057220459
    10. ' g' → logprob: -18.7500057220459

Token 313: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.606130838394165
    2. '
' → logprob: -1.356130838394165
    3. ')
' → logprob: -2.106130838394165
    4. ' if' → logprob: -3.106130838394165
    5. '   ' → logprob: -4.481130599975586
    6. 'if' → logprob: -4.856130599975586
    7. ']' → logprob: -4.981130599975586
    8. 'print' → logprob: -6.231130599975586
    9. ']
' → logprob: -6.856130599975586
    10. '<|end|>' → logprob: -7.356130599975586

Token 314: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015501867979764938
    2. '   ' → logprob: -4.765501976013184
    3. 'print' → logprob: -5.140501976013184
    4. ' print' → logprob: -8.390501976013184
    5. '```' → logprob: -8.390501976013184
    6. ' if' → logprob: -8.640501976013184
    7. '
' → logprob: -9.015501976013184
    8. 'if' → logprob: -9.140501976013184
    9. '\n' → logprob: -9.640501976013184
    10. '    
' → logprob: -10.140501976013184

Token 315: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.21242599189281464
    2. '   ' → logprob: -2.212425947189331
    3. '
' → logprob: -2.587425947189331
    4. 'if' → logprob: -5.21242618560791
    5. ' print' → logprob: -7.46242618560791
    6. '```' → logprob: -7.83742618560791
    7. ' if' → logprob: -8.46242618560791
    8. '    
' → logprob: -10.21242618560791
    9. '
' → logprob: -10.96242618560791
    10. '#print' → logprob: -11.33742618560791

Token 316: '(int' (ID: 2742)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4280000329017639
    2. '(ans' → logprob: -1.1779999732971191
    3. '(round' → logprob: -3.677999973297119
    4. '(int' → logprob: -4.302999973297119
    5. '("{' → logprob: -6.802999973297119
    6. '("%.' → logprob: -8.678000450134277
    7. '(' → logprob: -9.303000450134277
    8. '(format' → logprob: -9.803000450134277
    9. '('{' → logprob: -10.678000450134277
    10. '(float' → logprob: -10.803000450134277

Token 317: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0011759399203583598
    2. '(round' → logprob: -6.751175880432129
    3. 'ans' → logprob: -12.876175880432129
    4. '(' → logprob: -13.126175880432129
    5. '(abs' → logprob: -14.376175880432129
    6. ' (' → logprob: -15.876175880432129
    7. '((' → logprob: -16.126176834106445
    8. '(answer' → logprob: -16.376176834106445
    9. '	ans' → logprob: -16.501176834106445
    10. 'round' → logprob: -16.876176834106445

Token 318: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20148758590221405
    2. '))' → logprob: -1.7014875411987305
    3. ')))' → logprob: -9.82648754119873
    4. '())' → logprob: -11.70148754119873
    5. '+' → logprob: -11.95148754119873
    6. ' )' → logprob: -13.20148754119873
    7. ')+' → logprob: -14.20148754119873
    8. '()' → logprob: -14.70148754119873
    9. '})' → logprob: -14.70148754119873
    10. ')")' → logprob: -14.70148754119873


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 316
Tokens correctement prédits (1ère position, stricte): 140
Tokens correctement prédits (1ère position, avec adaptation): 158
Tokens correctement prédits (top 10): 284
Précision stricte (1ère position): 44.30%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 89.87%
================================================================================
