================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

ops = {
    '+': lambda a, b: a + b,
    '-': lambda a, b: a - b,
    '*': lambda a, b: a * b,
    '/': lambda a, b: a / b,
}

for line in sys.stdin:
    line = line.strip()
    if not line:
        continue
    stack = []
    for token in line.split():
        if token in ops:
            b = stack.pop()
            a = stack.pop()
            stack.append(ops[token](a, b))
        else:
            stack.append(float(token))
    print(f"{stack[0]:.6f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'ops' (ID: 4645)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00033081689616665244
    2. ' .' → logprob: -8.750330924987793
    3. '=' → logprob: -9.750330924987793
    4. '[' → logprob: -10.125330924987793
    5. ' =' → logprob: -10.250330924987793
    6. 'import' → logprob: -12.000330924987793
    7. ' ' → logprob: -12.500330924987793
    8. ')' → logprob: -12.500330924987793
    9. '.)' → logprob: -12.875330924987793
    10. '.=' → logprob: -12.875330924987793

Token 5: ' {
' (ID: 405)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.709103524684906
    2. ' []' → logprob: -1.4591035842895508
    3. '{}' → logprob: -1.8341035842895508
    4. ' {}' → logprob: -3.209103584289551
    5. '['' → logprob: -3.459103584289551
    6. '{' → logprob: -4.209103584289551
    7. ' {' → logprob: -4.459103584289551
    8. '[' → logprob: -5.084103584289551
    9. '["' → logprob: -5.584103584289551
    10. ' ['' → logprob: -5.709103584289551

Token 6: '   ' (ID: 271)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.03426114469766617
    2. ''' → logprob: -3.6592612266540527
    3. '"+' → logprob: -5.034261226654053
    4. '   ' → logprob: -7.284261226654053
    5. ''*' → logprob: -7.909261226654053
    6. '"' → logprob: -8.534260749816895
    7. '"+"' → logprob: -9.284260749816895
    8. ''s' → logprob: -11.034260749816895
    9. ''}' → logprob: -11.534260749816895
    10. ' '+' → logprob: -12.034260749816895

Token 7: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6464394330978394
    2. ''+' (adapté à ' '+') → logprob: -0.7714394330978394
    3. '"' → logprob: -5.521439552307129
    4. ''*' → logprob: -5.771439552307129
    5. '"+' → logprob: -5.896439552307129
    6. ''s' → logprob: -5.896439552307129
    7. '"+"' → logprob: -8.396439552307129
    8. ''import' → logprob: -9.021439552307129
    9. ''\' → logprob: -9.521439552307129
    10. ''a' → logprob: -9.646439552307129

Token 8: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.14607016742229462
    2. ''' → logprob: -2.0210702419281006
    3. ':' → logprob: -6.7710700035095215
    4. ' ':' → logprob: -6.8960700035095215
    5. '':'' → logprob: -7.6460700035095215
    6. ''s' → logprob: -8.52107048034668
    7. ''}' → logprob: -9.14607048034668
    8. ''+' → logprob: -9.64607048034668
    9. ' '' → logprob: -9.64607048034668
    10. '')' → logprob: -9.64607048034668

Token 9: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.014214749448001385
    2. 'lambda' → logprob: -4.264214515686035
    3. '(lambda' → logprob: -9.889214515686035
    4. ' (' → logprob: -15.014214515686035
    5. '   ' → logprob: -16.01421546936035
    6. '=lambda' → logprob: -16.13921546936035
    7. ''' → logprob: -17.88921546936035
    8. ' lamb' → logprob: -18.01421546936035
    9. '    ' → logprob: -18.01421546936035
    10. ' ' → logprob: -18.26421546936035

Token 10: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.09786665439605713
    2. ' a' → logprob: -2.8478665351867676
    3. 'x' → logprob: -3.5978665351867676
    4. 'a' → logprob: -4.847866535186768
    5. ' ' → logprob: -10.347867012023926
    6. ' lambda' → logprob: -14.097867012023926
    7. '	x' → logprob: -14.597867012023926
    8. ' l' → logprob: -14.972867012023926
    9. '  ' → logprob: -15.347867012023926
    10. 'l' → logprob: -15.347867012023926

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14276713132858276
    2. ' ,' → logprob: -2.0177671909332275
    3. ',b' → logprob: -9.767766952514648
    4. ' ' → logprob: -10.392766952514648
    5. ',a' → logprob: -14.267766952514648
    6. ' a' → logprob: -14.392766952514648
    7. '_,' → logprob: -14.767766952514648
    8. '   ' → logprob: -15.142766952514648
    9. '    ' → logprob: -15.267766952514648
    10. '  ' → logprob: -15.392766952514648

Token 12: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3133207857608795
    2. 'b' → logprob: -1.3133207559585571
    3. ' ' → logprob: -9.813321113586426
    4. ' ' → logprob: -12.688321113586426
    5. '	b' → logprob: -15.063321113586426
    6. 'a' → logprob: -15.813321113586426
    7. '    ' → logprob: -15.813321113586426
    8. '   ' → logprob: -16.06332015991211
    9. '  ' → logprob: -16.18832015991211
    10. ' б' → logprob: -16.43832015991211

Token 13: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04963935911655426
    2. ' :' → logprob: -3.0496394634246826
    3. ',' → logprob: -6.9246392250061035
    4. ' ,' → logprob: -10.049639701843262
    5. ' a' → logprob: -11.299639701843262
    6. ' ' → logprob: -12.299639701843262
    7. 'a' → logprob: -12.674639701843262
    8. ':a' → logprob: -13.424639701843262
    9. ',a' → logprob: -13.674639701843262
    10. ' ' → logprob: -14.674639701843262

Token 14: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.31326353549957275
    2. 'a' → logprob: -1.3132635354995728
    3. '	a' → logprob: -13.813263893127441
    4. ' ' → logprob: -15.563263893127441
    5. ' ' → logprob: -15.813263893127441
    6. '    ' → logprob: -15.813263893127441
    7. '   ' → logprob: -16.688262939453125
    8. '_a' → logprob: -16.938262939453125
    9. ')a' → logprob: -16.938262939453125
    10. '(a' → logprob: -17.063262939453125

Token 15: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07893650233745575
    2. '+' → logprob: -2.5789365768432617
    3. ' ' → logprob: -10.703936576843262
    4. '+b' → logprob: -10.828936576843262
    5. ' ' → logprob: -13.453936576843262
    6. ' plus' → logprob: -13.828936576843262
    7. '<|end|>' → logprob: -14.828936576843262
    8. ' ,' → logprob: -15.203936576843262
    9. '[' → logprob: -15.578936576843262
    10. '_' → logprob: -16.078935623168945

Token 16: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0790376216173172
    2. 'b' → logprob: -2.579037666320801
    3. ' ' → logprob: -8.8290376663208
    4. ' ' → logprob: -14.5790376663208
    5. ' б' → logprob: -15.0790376663208
    6. '	b' → logprob: -15.3290376663208
    7. '1' → logprob: -16.079036712646484
    8. '<|end|>' → logprob: -16.079036712646484
    9. '    ' → logprob: -16.829036712646484
    10. '  ' → logprob: -17.579036712646484

Token 17: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011645879596471786
    2. ',
' → logprob: -4.511645793914795
    3. '}' → logprob: -7.636645793914795
    4. '   ' → logprob: -9.636646270751953
    5. ',
' → logprob: -10.636646270751953
    6. ',

' → logprob: -11.136646270751953
    7. ' ,' → logprob: -12.136646270751953
    8. ' ' → logprob: -13.261646270751953
    9. '',' → logprob: -13.511646270751953
    10. ',\' → logprob: -14.136646270751953

Token 18: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6959092617034912
    2. '   ' → logprob: -0.6959092617034912
    3. ''*' → logprob: -6.57090950012207
    4. '}' → logprob: -7.69590950012207
    5. ''+' → logprob: -8.32090950012207
    6. ''s' → logprob: -8.94590950012207
    7. ''-' → logprob: -9.19590950012207
    8. ''b' → logprob: -9.82090950012207
    9. ' '' → logprob: -9.82090950012207
    10. ''\' → logprob: -9.94590950012207

Token 19: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' (adapté à ' '-') → logprob: -0.13714969158172607
    2. ''' → logprob: -2.7621498107910156
    3. ''*' → logprob: -3.1371498107910156
    4. '   ' → logprob: -3.8871498107910156
    5. ' '-' → logprob: -8.012149810791016
    6. ' ' → logprob: -8.387149810791016
    7. ''s' → logprob: -8.887149810791016
    8. '}' → logprob: -9.137149810791016
    9. ' '' → logprob: -9.762149810791016
    10. ' '*' → logprob: -10.387149810791016

Token 20: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.330981969833374
    2. ':' → logprob: -1.580981969833374
    3. ' :' → logprob: -2.955981969833374
    4. ' ':' → logprob: -3.955981969833374
    5. ''' → logprob: -5.455982208251953
    6. '   ' → logprob: -8.705982208251953
    7. ' '' → logprob: -8.955982208251953
    8. ' lambda' → logprob: -9.080982208251953
    9. 'lambda' → logprob: -9.830982208251953
    10. '":' → logprob: -10.830982208251953

Token 21: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.0015159345930442214
    2. 'lambda' → logprob: -6.501515865325928
    3. '=lambda' → logprob: -12.126516342163086
    4. '(lambda' → logprob: -12.376516342163086
    5. ' lamb' → logprob: -13.001516342163086
    6. ' ' → logprob: -13.626516342163086
    7. ' λ' → logprob: -15.876516342163086
    8. '.lambda' → logprob: -16.126516342163086
    9. '_lambda' → logprob: -16.626516342163086
    10. ' ' → logprob: -16.751516342163086

Token 22: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07313936948776245
    2. ' ' → logprob: -2.8231394290924072
    3. 'a' → logprob: -4.573139190673828
    4. '<|end|>' → logprob: -7.448139190673828
    5. ' ' → logprob: -8.823139190673828
    6. '<|end|>' → logprob: -10.823139190673828
    7. 's' → logprob: -11.323139190673828
    8. '	a' → logprob: -12.823139190673828
    9. 'b' → logprob: -13.010639190673828
    10. ')' → logprob: -13.010639190673828

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06198437884449959
    2. ' ,' → logprob: -2.8119843006134033
    3. ' ' → logprob: -11.686984062194824
    4. ',b' → logprob: -12.061984062194824
    5. ' a' → logprob: -13.936984062194824
    6. ' b' → logprob: -14.686984062194824
    7. '‌,' → logprob: -15.311984062194824
    8. 'a' → logprob: -15.436984062194824
    9. ' ' → logprob: -15.811984062194824
    10. '   ' → logprob: -16.18698501586914

Token 24: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.012580878101289272
    2. 'b' → logprob: -4.387580871582031
    3. ' ' → logprob: -9.637580871582031
    4. ' ' → logprob: -12.262580871582031
    5. ',' → logprob: -15.262580871582031
    6. ' б' → logprob: -15.387580871582031
    7. '	b' → logprob: -15.387580871582031
    8. ' a' → logprob: -15.637580871582031
    9. ',b' → logprob: -16.13758087158203
    10. 'a' → logprob: -17.13758087158203

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004229527898132801
    2. ' :' → logprob: -5.504229545593262
    3. ',' → logprob: -9.004229545593262
    4. '   ' → logprob: -11.504229545593262
    5. ' a' → logprob: -11.879229545593262
    6. ' ' → logprob: -12.254229545593262
    7. ' ,' → logprob: -12.754229545593262
    8. '    ' → logprob: -14.504229545593262
    9. 'a' → logprob: -14.629229545593262
    10. '-' → logprob: -15.129229545593262

Token 26: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.043014150112867355
    2. 'a' → logprob: -3.1680140495300293
    3. ' ' → logprob: -11.668014526367188
    4. ' b' → logprob: -13.043014526367188
    5. ' ' → logprob: -13.168014526367188
    6. 'b' → logprob: -13.543014526367188
    7. '	a' → logprob: -14.418014526367188
    8. ')' → logprob: -16.168014526367188
    9. '    ' → logprob: -16.668014526367188
    10. ')a' → logprob: -16.668014526367188

Token 27: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0030125302728265524
    2. '-' → logprob: -6.128012657165527
    3. ' ' → logprob: -7.128012657165527
    4. ' ' → logprob: -10.878012657165527
    5. ' +' → logprob: -13.003012657165527
    6. '  ' → logprob: -14.253012657165527
    7. ')' → logprob: -14.628012657165527
    8. ',' → logprob: -14.878012657165527
    9. '.' → logprob: -15.003012657165527
    10. ' ,' → logprob: -15.128012657165527

Token 28: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.008622024208307266
    2. 'b' → logprob: -4.758622169494629
    3. ' ' → logprob: -11.883622169494629
    4. ' ' → logprob: -15.508622169494629
    5. '<|end|>' → logprob: -16.133621215820312
    6. ' б' → logprob: -16.258621215820312
    7. '	b' → logprob: -16.883621215820312
    8. 's' → logprob: -17.258621215820312
    9. ')' → logprob: -17.258621215820312
    10. '_b' → logprob: -17.383621215820312

Token 29: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001997631276026368
    2. ',
' → logprob: -6.251997470855713
    3. '}' → logprob: -9.751997947692871
    4. '   ' → logprob: -11.876997947692871
    5. ',

' → logprob: -13.126997947692871
    6. ',
' → logprob: -13.751997947692871
    7. '},' → logprob: -14.876997947692871
    8. ' ,' → logprob: -15.876997947692871
    9. ' ' → logprob: -16.876996994018555
    10. ',...' → logprob: -17.251996994018555

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0130470497533679
    2. ''' → logprob: -4.513047218322754
    3. ''+' → logprob: -7.013047218322754
    4. '}' → logprob: -7.138047218322754
    5. ''*' → logprob: -8.888047218322754
    6. ''}' → logprob: -9.138047218322754
    7. '',' → logprob: -11.388047218322754
    8. ' '' → logprob: -11.513047218322754
    9. '  ' → logprob: -12.263047218322754
    10. '    ' → logprob: -12.388047218322754

Token 31: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' (adapté à ' '*') → logprob: -0.31734028458595276
    2. '   ' → logprob: -2.31734037399292
    3. ''+' → logprob: -2.31734037399292
    4. ''' → logprob: -2.81734037399292
    5. '}' → logprob: -5.19234037399292
    6. ''}' → logprob: -5.56734037399292
    7. '',' → logprob: -5.56734037399292
    8. '','' → logprob: -6.94234037399292
    9. ''/' → logprob: -8.692339897155762
    10. ' ' → logprob: -8.692339897155762

Token 32: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.024433495476841927
    2. ''' → logprob: -4.524433612823486
    3. ' ':' → logprob: -5.274433612823486
    4. 'a' → logprob: -5.774433612823486
    5. ':' → logprob: -5.899433612823486
    6. ' a' → logprob: -7.149433612823486
    7. '',' → logprob: -7.274433612823486
    8. '<|end|>' → logprob: -8.399433135986328
    9. ',' → logprob: -9.149433135986328
    10. ' :' → logprob: -9.649433135986328

Token 33: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.011049585416913033
    2. 'lambda' → logprob: -4.511049747467041
    3. '(lambda' → logprob: -13.761049270629883
    4. ' lamb' → logprob: -14.886049270629883
    5. '=lambda' → logprob: -15.261049270629883
    6. ' a' → logprob: -16.761049270629883
    7. ' λ' → logprob: -17.761049270629883
    8. 'a' → logprob: -18.136049270629883
    9. ' ' → logprob: -19.136049270629883
    10. '_lambda' → logprob: -19.386049270629883

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.050897497683763504
    2. 'a' → logprob: -3.0508975982666016
    3. ' ' → logprob: -6.300897598266602
    4. '<|end|>' → logprob: -7.800897598266602
    5. ' ' → logprob: -10.300897598266602
    6. '	a' → logprob: -12.050897598266602
    7. ')' → logprob: -12.300897598266602
    8. '<|end|>' → logprob: -12.550897598266602
    9. 'space' → logprob: -12.800897598266602
    10. '  ' → logprob: -12.925897598266602

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006015895400196314
    2. ' ,' → logprob: -5.131015777587891
    3. ' ' → logprob: -10.63101577758789
    4. ' a' → logprob: -10.63101577758789
    5. 'a' → logprob: -11.00601577758789
    6. ',a' → logprob: -12.00601577758789
    7. ',b' → logprob: -12.13101577758789
    8. '*' → logprob: -12.13101577758789
    9. '*,' → logprob: -12.63101577758789
    10. ' b' → logprob: -14.63101577758789

Token 36: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.36334341764450073
    2. ' ' → logprob: -1.3633434772491455
    3. 'b' → logprob: -3.2383434772491455
    4. '<|end|>' → logprob: -4.988343238830566
    5. ' ' → logprob: -6.738343238830566
    6. ' a' → logprob: -6.863343238830566
    7. 'a' → logprob: -8.238343238830566
    8. ' lambda' → logprob: -9.238343238830566
    9. ')' → logprob: -10.238343238830566
    10. 'lambda' → logprob: -10.488343238830566

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007176732178777456
    2. ' :' → logprob: -7.250717639923096
    3. '**' → logprob: -12.875718116760254
    4. ':**' → logprob: -12.875718116760254
    5. ',' → logprob: -13.750718116760254
    6. ' ' → logprob: -14.625718116760254
    7. '*' → logprob: -15.500718116760254
    8. '*:' → logprob: -15.750718116760254
    9. ':return' → logprob: -15.875718116760254
    10. '):' → logprob: -16.375717163085938

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0232557263225317
    2. 'a' → logprob: -3.7732558250427246
    3. ' lambda' → logprob: -12.398255348205566
    4. ' ' → logprob: -12.648255348205566
    5. 'lambda' → logprob: -13.148255348205566
    6. '	a' → logprob: -15.148255348205566
    7. ' ' → logprob: -15.398255348205566
    8. '<|end|>' → logprob: -15.773255348205566
    9. ')' → logprob: -16.648256301879883
    10. '    ' → logprob: -17.023256301879883

Token 39: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3925304412841797
    2. '*' → logprob: -1.1425304412841797
    3. ' ' → logprob: -5.64253044128418
    4. '+' → logprob: -6.76753044128418
    5. ' +' → logprob: -7.14253044128418
    6. ' **' → logprob: -9.51753044128418
    7. '**' → logprob: -11.14253044128418
    8. ' ' → logprob: -11.26753044128418
    9. '-' → logprob: -11.39253044128418
    10. '.' → logprob: -12.01753044128418

Token 40: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.28135058283805847
    2. 'b' → logprob: -1.4063506126403809
    3. '<|end|>' → logprob: -9.156350135803223
    4. ' ' → logprob: -9.281350135803223
    5. ' б' → logprob: -14.906350135803223
    6. ' ' → logprob: -15.031350135803223
    7. '<|end|>' → logprob: -15.531350135803223
    8. '_b' → logprob: -15.781350135803223
    9. ')b' → logprob: -15.781350135803223
    10. 's' → logprob: -16.53135108947754

Token 41: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003544118662830442
    2. ',
' → logprob: -8.000354766845703
    3. '}' → logprob: -11.375354766845703
    4. ',

' → logprob: -12.750354766845703
    5. ' ,' → logprob: -13.250354766845703
    6. '   ' → logprob: -13.750354766845703
    7. ',
' → logprob: -14.625354766845703
    8. '',' → logprob: -14.875354766845703
    9. '},' → logprob: -15.000354766845703
    10. ' ' → logprob: -15.375354766845703

Token 42: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3489153981208801
    2. ''*' → logprob: -1.7239153385162354
    3. '   ' → logprob: -2.4739153385162354
    4. ' '' → logprob: -4.7239155769348145
    5. ''}' → logprob: -5.0989155769348145
    6. ' ' → logprob: -5.4739155769348145
    7. '',' → logprob: -5.7239155769348145
    8. '}' → logprob: -5.9739155769348145
    9. ''+' → logprob: -6.0989155769348145
    10. ' '*'' → logprob: -6.4739155769348145

Token 43: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' (adapté à ' '/') → logprob: -0.230892613530159
    2. ''' → logprob: -1.6058926582336426
    3. '/' → logprob: -5.980892658233643
    4. '   ' → logprob: -6.605892658233643
    5. ' '/'' → logprob: -7.230892658233643
    6. '"/' → logprob: -8.480892181396484
    7. ''}' → logprob: -8.730892181396484
    8. '}' → logprob: -8.980892181396484
    9. ' ' → logprob: -8.980892181396484
    10. ' '/' → logprob: -9.980892181396484

Token 44: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01795828714966774
    2. ' ':' → logprob: -4.642958164215088
    3. ''' → logprob: -4.892958164215088
    4. ':' → logprob: -7.392958164215088
    5. '':'' → logprob: -11.017958641052246
    6. ' :' → logprob: -11.517958641052246
    7. '',' → logprob: -12.392958641052246
    8. ' '' → logprob: -12.392958641052246
    9. ',' → logprob: -12.767958641052246
    10. '":' → logprob: -12.767958641052246

Token 45: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.009768722578883171
    2. 'lambda' → logprob: -4.634768486022949
    3. '(lambda' → logprob: -11.50976848602295
    4. ' lamb' → logprob: -13.13476848602295
    5. '=lambda' → logprob: -15.38476848602295
    6. ' (' → logprob: -15.50976848602295
    7. '   ' → logprob: -16.884769439697266
    8. ' ' → logprob: -17.134769439697266
    9. ' la' → logprob: -17.259769439697266
    10. ' l' → logprob: -17.509769439697266

Token 46: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.043779145926237106
    2. 'a' → logprob: -3.168779134750366
    3. ' lambda' → logprob: -7.418779373168945
    4. ' ' → logprob: -9.168779373168945
    5. 'lambda' → logprob: -9.543779373168945
    6. ' ' → logprob: -13.793779373168945
    7. '  ' → logprob: -14.043779373168945
    8. '<|end|>' → logprob: -15.043779373168945
    9. ',' → logprob: -15.418779373168945
    10. '	a' → logprob: -15.668779373168945

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.317555695772171
    2. ' ,' → logprob: -1.3175556659698486
    3. ' b' → logprob: -5.942555904388428
    4. ' ' → logprob: -6.692555904388428
    5. ',b' → logprob: -8.81755542755127
    6. ' /' → logprob: -9.06755542755127
    7. 'b' → logprob: -9.44255542755127
    8. ' a' → logprob: -9.94255542755127
    9. 'a' → logprob: -11.44255542755127
    10. ' if' → logprob: -13.31755542755127

Token 48: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.030357321724295616
    2. 'b' → logprob: -3.5303573608398438
    3. ' ' → logprob: -8.155357360839844
    4. ' lambda' → logprob: -8.280357360839844
    5. 'lambda' → logprob: -9.905357360839844
    6. '2' → logprob: -12.280357360839844
    7. ' a' → logprob: -12.530357360839844
    8. '1' → logprob: -12.655357360839844
    9. 'a' → logprob: -13.905357360839844
    10. '0' → logprob: -13.905357360839844

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2021767646074295
    2. ' :' → logprob: -1.702176809310913
    3. ' if' → logprob: -7.202176570892334
    4. 'if' → logprob: -12.702177047729492
    5. ',' → logprob: -12.827177047729492
    6. ' ' → logprob: -13.077177047729492
    7. ' and' → logprob: -13.077177047729492
    8. '   ' → logprob: -13.327177047729492
    9. '/:' → logprob: -14.327177047729492
    10. ':return' → logprob: -14.327177047729492

Token 50: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519470453262329
    2. 'a' → logprob: -1.501947045326233
    3. '0' → logprob: -12.251947402954102
    4. 'b' → logprob: -12.751947402954102
    5. ' b' → logprob: -13.001947402954102
    6. 'int' → logprob: -13.126947402954102
    7. ' None' → logprob: -13.376947402954102
    8. ' int' → logprob: -13.751947402954102
    9. 'None' → logprob: -13.876947402954102
    10. ' ' → logprob: -14.001947402954102

Token 51: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.14038166403770447
    2. ' and' → logprob: -2.2653815746307373
    3. ' ' → logprob: -4.515381813049316
    4. ' if' → logprob: -4.765381813049316
    5. '/' → logprob: -5.015381813049316
    6. 'and' → logprob: -7.515381813049316
    7. 'if' → logprob: -8.140381813049316
    8. ' or' → logprob: -9.140381813049316
    9. ' +' → logprob: -10.515381813049316
    10. ' !=' → logprob: -10.515381813049316

Token 52: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47407716512680054
    2. 'b' → logprob: -0.9740771651268005
    3. ' ' → logprob: -15.974077224731445
    4. ')b' → logprob: -18.474077224731445
    5. ' б' → logprob: -18.724077224731445
    6. 'B' → logprob: -18.724077224731445
    7. '_b' → logprob: -18.849077224731445
    8. '(b' → logprob: -18.849077224731445
    9. ' (' → logprob: -19.224077224731445
    10. '	b' → logprob: -19.349077224731445

Token 53: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08070138841867447
    2. '}' → logprob: -2.5807013511657715
    3. ',
' → logprob: -6.3307013511657715
    4. '   ' → logprob: -10.95570182800293
    5. '},' → logprob: -11.58070182800293
    6. ' }' → logprob: -13.95570182800293
    7. ',
' → logprob: -14.45570182800293
    8. ',

' → logprob: -15.08070182800293
    9. '}
' → logprob: -15.95570182800293
    10. ',\' → logprob: -16.58070182800293

Token 54: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0038904573302716017
    2. ''}' → logprob: -5.753890514373779
    3. ''' → logprob: -7.878890514373779
    4. '   ' → logprob: -8.378890037536621
    5. ' }' → logprob: -9.878890037536621
    6. ''*' → logprob: -11.628890037536621
    7. '"}' → logprob: -12.003890037536621
    8. ''s' → logprob: -12.128890037536621
    9. '},' → logprob: -12.253890037536621
    10. '}
' → logprob: -12.753890037536621

Token 55: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003908487968146801
    2. '[' → logprob: -7.628908634185791
    3. 'for' → logprob: -7.753908634185791
    4. '```' → logprob: -7.878908634185791
    5. '\n' → logprob: -8.003908157348633
    6. '(' → logprob: -8.128908157348633
    7. 'print' → logprob: -8.253908157348633
    8. ''' → logprob: -8.378908157348633
    9. '#' → logprob: -8.503908157348633
    10. ')' → logprob: -8.753908157348633

Token 56: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0019056665478274226
    2. ' i' → logprob: -7.12690544128418
    3. ' token' → logprob: -7.62690544128418
    4. ' line' → logprob: -8.25190544128418
    5. '  ' → logprob: -9.00190544128418
    6. ' var' → logprob: -9.87690544128418
    7. ' a' → logprob: -10.50190544128418
    8. ' space' → logprob: -10.75190544128418
    9. ' item' → logprob: -11.50190544128418
    10. ' s' → logprob: -11.62690544128418

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033361420035362244
    2. 'in' → logprob: -3.7833614349365234
    3. ' ' → logprob: -4.658361434936523
    4. ' i' → logprob: -7.783361434936523
    5. '<|end|>' → logprob: -9.908361434936523
    6. '  ' → logprob: -10.158361434936523
    7. 's' → logprob: -11.533361434936523
    8. 'i' → logprob: -11.658361434936523
    9. ' ,' → logprob: -11.908361434936523
    10. '   ' → logprob: -12.033361434936523

Token 58: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.20143896341323853
    2. 'sys' → logprob: -1.7014389038085938
    3. '	sys' → logprob: -11.326438903808594
    4. '=sys' → logprob: -11.826438903808594
    5. '(sys' → logprob: -12.201438903808594
    6. 's' → logprob: -14.951438903808594
    7. 'stdin' → logprob: -15.326438903808594
    8. 'input' → logprob: -15.826438903808594
    9. ' iter' → logprob: -15.826438903808594
    10. 'iter' → logprob: -16.201438903808594

Token 59: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00021474185632541776
    2. '.' → logprob: -8.750214576721191
    3. 'stdin' → logprob: -10.375214576721191
    4. '.argv' → logprob: -11.750214576721191
    5. ' stdin' → logprob: -12.125214576721191
    6. '.stdout' → logprob: -12.375214576721191
    7. '.readline' → logprob: -12.375214576721191
    8. '(stdin' → logprob: -14.000214576721191
    9. '.input' → logprob: -14.250214576721191
    10. ' .' → logprob: -14.750214576721191

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036982715129852295
    2. '.readline' → logprob: -3.411982774734497
    3. '.strip' → logprob: -6.161982536315918
    4. '.' → logprob: -7.036982536315918
    5. '.rstrip' → logprob: -9.286982536315918
    6. '.readlines' → logprob: -9.661982536315918
    7. ':
' → logprob: -10.286982536315918
    8. 'strip' → logprob: -10.286982536315918
    9. ' readline' → logprob: -10.411982536315918
    10. 'rstrip' → logprob: -11.036982536315918

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031380318105220795
    2. '    
' → logprob: -5.878138065338135
    3. '    ' → logprob: -8.378137588500977
    4. ' readline' → logprob: -10.628137588500977
    5. '    

' → logprob: -11.628137588500977
    6. '     
' → logprob: -11.753137588500977
    7. '.strip' → logprob: -11.753137588500977
    8. '    
    
' → logprob: -11.753137588500977
    9. ' line' → logprob: -11.878137588500977
    10. ' tokens' → logprob: -12.128137588500977

Token 62: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2443339228630066
    2. ' tokens' → logprob: -2.1193339824676514
    3. ' line' → logprob: -2.6193339824676514
    4. 'tokens' → logprob: -4.494333744049072
    5. ' parts' → logprob: -4.619333744049072
    6. 'line' (adapté à ' line') → logprob: -6.994333744049072
    7. '    
' → logprob: -7.494333744049072
    8. ' stripped' → logprob: -7.869333744049072
    9. ' expr' → logprob: -8.86933422088623
    10. ' expression' → logprob: -8.99433422088623

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7025372982025146
    2. ' =' → logprob: -0.7025372982025146
    3. '.strip' → logprob: -4.827537536621094
    4. '.' → logprob: -6.827537536621094
    5. 's' → logprob: -8.952537536621094
    6. '.rstrip' → logprob: -10.077537536621094
    7. ' =
' → logprob: -10.452537536621094
    8. '.split' → logprob: -11.077537536621094
    9. '=line' → logprob: -11.452537536621094
    10. ' ' → logprob: -12.452537536621094

Token 64: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2519353926181793
    2. 'line' → logprob: -1.501935362815857
    3. '	line' → logprob: -13.251935005187988
    4. '#line' → logprob: -13.501935005187988
    5. ' ' → logprob: -13.876935005187988
    6. '=line' → logprob: -13.876935005187988
    7. '(line' → logprob: -14.376935005187988
    8. '   ' → logprob: -15.126935005187988
    9. '[line' → logprob: -15.876935005187988
    10. ' lin' → logprob: -17.001935958862305

Token 65: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0006151011912152171
    2. '.' → logprob: -8.000615119934082
    3. '.rstrip' → logprob: -8.250615119934082
    4. '.split' → logprob: -11.000615119934082
    5. ' .' → logprob: -13.625615119934082
    6. 'strip' → logprob: -14.500615119934082
    7. '.trim' → logprob: -16.625614166259766
    8. '.replace' → logprob: -17.125614166259766
    9. '.str' → logprob: -17.125614166259766
    10. ' strip' → logprob: -17.375614166259766

Token 66: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008550984784960747
    2. '(' → logprob: -4.883551120758057
    3. '('' → logprob: -7.258551120758057
    4. '().' → logprob: -9.258550643920898
    5. ''' → logprob: -10.508550643920898
    6. '"' → logprob: -10.883550643920898
    7. '("("' → logprob: -10.883550643920898
    8. '("' → logprob: -11.508550643920898
    9. '()`' → logprob: -11.758550643920898
    10. ' parentheses' → logprob: -12.008550643920898

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02854136750102043
    2. ' if' → logprob: -3.778541326522827
    3. 'if' → logprob: -5.528541564941406
    4. '<|end|>' → logprob: -7.528541564941406
    5. '    
' → logprob: -7.903541564941406
    6. ' ' → logprob: -8.403541564941406
    7. '    ' → logprob: -10.028541564941406
    8. ',' → logprob: -10.403541564941406
    9. ' 
' → logprob: -10.903541564941406
    10. '  ' → logprob: -11.028541564941406

Token 68: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0041435761377215385
    2. ' if' → logprob: -6.129143714904785
    3. 'tokens' → logprob: -6.504143714904785
    4. '   ' → logprob: -8.129143714904785
    5. 'parts' → logprob: -8.879143714904785
    6. ' tokens' → logprob: -11.379143714904785
    7. ' parts' → logprob: -12.379143714904785
    8. 'i' → logprob: -12.879143714904785
    9. '```' → logprob: -13.254143714904785
    10. '    
' → logprob: -13.379143714904785

Token 69: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.007479907013475895
    2. 'not' → logprob: -5.007480144500732
    3. ' line' → logprob: -7.382480144500732
    4. ' ' → logprob: -9.257479667663574
    5. 'line' → logprob: -10.132479667663574
    6. ' len' → logprob: -12.507479667663574
    7. 'len' → logprob: -14.382479667663574
    8. '	not' → logprob: -14.382479667663574
    9. ' ' → logprob: -14.632479667663574
    10. 'n't' → logprob: -14.882479667663574

Token 70: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.014189005829393864
    2. 'line' → logprob: -4.26418924331665
    3. ' ' → logprob: -10.639188766479492
    4. ' lin' → logprob: -14.389188766479492
    5. '	line' → logprob: -15.139188766479492
    6. ' len' → logprob: -15.764188766479492
    7. ' lines' → logprob: -16.014188766479492
    8. ' ' → logprob: -16.264188766479492
    9. '(line' → logprob: -16.264188766479492
    10. ' l' → logprob: -16.639188766479492

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06354091316461563
    2. ' :' → logprob: -3.0635409355163574
    3. ' or' → logprob: -4.313540935516357
    4. '.startswith' → logprob: -7.563540935516357
    5. '<|end|>' → logprob: -8.1885404586792
    6. ':
' → logprob: -8.5635404586792
    7. ' .' → logprob: -8.9385404586792
    8. ':return' → logprob: -9.3135404586792
    9. '.split' → logprob: -9.9385404586792
    10. '<|end|>' → logprob: -10.3135404586792

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3790664076805115
    2. '   ' → logprob: -1.5040664672851562
    3. ':' → logprob: -2.7540664672851562
    4. ' continue' → logprob: -3.6290664672851562
    5. 'continue' → logprob: -6.754066467285156
    6. '    ' → logprob: -7.379066467285156
    7. '	continue' → logprob: -8.004066467285156
    8. '.' → logprob: -8.254066467285156
    9. ':
' → logprob: -8.504066467285156
    10. ' continues' → logprob: -9.129066467285156

Token 73: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.016573382541537285
    2. ' continue' → logprob: -4.266573429107666
    3. 'break' → logprob: -6.141573429107666
    4. 'continue' (adapté à ' continue') → logprob: -9.016572952270508
    5. '    ' → logprob: -9.891572952270508
    6. '   ' → logprob: -10.016572952270508
    7. ' ' → logprob: -11.016572952270508
    8. '	break' → logprob: -11.391572952270508
    9. ' continu' → logprob: -13.391572952270508
    10. '       ' → logprob: -13.641572952270508

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14467808604240417
    2. '    
' → logprob: -2.0196781158447266
    3. '   
' → logprob: -7.644678115844727
    4. ' 
' → logprob: -7.894678115844727
    5. '    ' → logprob: -8.519678115844727
    6. '     
' → logprob: -8.769678115844727
    7. ' ' → logprob: -8.894678115844727
    8. '    
    
' → logprob: -8.894678115844727
    9. '  
' → logprob: -9.394678115844727
    10. '        
' → logprob: -9.769678115844727

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030215544626116753
    2. '    
' → logprob: -3.5302155017852783
    3. '
' → logprob: -8.5302152633667
    4. 'tokens' → logprob: -8.7802152633667
    5. '   
' → logprob: -10.0302152633667
    6. '  
' → logprob: -10.7802152633667
    7. ' tokens' → logprob: -11.0302152633667
    8. '    

' → logprob: -12.0302152633667
    9. '        
' → logprob: -12.2802152633667
    10. '```' → logprob: -12.4052152633667

Token 76: ' stack' (ID: 10825)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.4595218002796173
    2. 'parts' → logprob: -1.209521770477295
    3. ' parts' → logprob: -3.459521770477295
    4. '   ' → logprob: -4.209521770477295
    5. 'try' → logprob: -4.334521770477295
    6. ' tokens' → logprob: -4.584521770477295
    7. ' try' → logprob: -8.834522247314453
    8. '    
' → logprob: -8.834522247314453
    9. 'args' → logprob: -10.084522247314453
    10. 'token' → logprob: -10.084522247314453

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0004951290902681649
    2. '=' → logprob: -7.625494956970215
    3. ' ' → logprob: -13.125494956970215
    4. '.' → logprob: -13.125494956970215
    5. '.append' → logprob: -14.500494956970215
    6. ' .=' → logprob: -14.500494956970215
    7. '=[]' → logprob: -14.625494956970215
    8. ' =[' → logprob: -14.750494956970215
    9. '_' → logprob: -15.625494956970215
    10. ' .' → logprob: -15.750494956970215

Token 78: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16026505827903748
    2. ' []' → logprob: -1.9102650880813599
    3. '[]}' → logprob: -11.03526496887207
    4. '[]>' → logprob: -11.28526496887207
    5. '[' → logprob: -11.66026496887207
    6. '[]
' → logprob: -13.28526496887207
    7. ' [];' → logprob: -14.91026496887207
    8. ' []
' → logprob: -15.16026496887207
    9. '=[]' → logprob: -15.41026496887207
    10. ' ' → logprob: -15.66026496887207

Token 79: '   ' (ID: 271)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.4858705699443817
    2. '   ' → logprob: -1.235870599746704
    3. ' tokens' → logprob: -3.360870599746704
    4. ' for' → logprob: -3.485870599746704
    5. 'for' → logprob: -3.610870599746704
    6. '    
' → logprob: -7.610870361328125
    7. '_tokens' → logprob: -7.610870361328125
    8. ' parts' → logprob: -8.110870361328125
    9. '<|end|>' → logprob: -8.860870361328125
    10. 'parts' → logprob: -9.110870361328125

Token 80: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07929522544145584
    2. 'tokens' → logprob: -2.5792951583862305
    3. 'parts' → logprob: -7.9542951583862305
    4. ' for' → logprob: -10.45429515838623
    5. ' tokens' → logprob: -11.20429515838623
    6. '   ' → logprob: -11.57929515838623
    7. 'words' → logprob: -14.20429515838623
    8. 'token' → logprob: -14.20429515838623
    9. '_tokens' → logprob: -14.95429515838623
    10. 'Tokens' → logprob: -15.07929515838623

Token 81: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.28814467787742615
    2. ' token' → logprob: -1.4131447076797485
    3. ' part' → logprob: -5.788144588470459
    4. 'part' → logprob: -6.663144588470459
    5. 't' → logprob: -7.663144588470459
    6. 'c' → logprob: -7.663144588470459
    7. 'tok' → logprob: -7.788144588470459
    8. ' c' → logprob: -8.163145065307617
    9. ' tok' → logprob: -8.288145065307617
    10. ' char' → logprob: -8.663145065307617

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02988898940384388
    2. 'in' → logprob: -3.5298891067504883
    3. ' ' → logprob: -9.529889106750488
    4. '<|end|>' → logprob: -10.279889106750488
    5. '	in' → logprob: -11.404889106750488
    6. ' i' → logprob: -12.529889106750488
    7. 's' → logprob: -12.779889106750488
    8. '<|end|>' → logprob: -12.779889106750488
    9. ' ,' → logprob: -13.029889106750488
    10. ',' → logprob: -13.279889106750488

Token 83: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05502749979496002
    2. 'line' → logprob: -2.930027484893799
    3. '	line' → logprob: -9.430027961730957
    4. ' ' → logprob: -10.180027961730957
    5. '[line' → logprob: -11.930027961730957
    6. '   ' → logprob: -11.930027961730957
    7. '#line' → logprob: -12.305027961730957
    8. '(line' → logprob: -12.805027961730957
    9. '    ' → logprob: -13.055027961730957
    10. '=line' → logprob: -13.430027961730957

Token 84: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.005911731161177158
    2. '.' → logprob: -5.380911827087402
    3. ' .' → logprob: -7.005911827087402
    4. '.strip' → logprob: -7.880911827087402
    5. '.rstrip' → logprob: -12.755911827087402
    6. 'split' → logprob: -13.505911827087402
    7. '.s' → logprob: -14.630911827087402
    8. '   ' → logprob: -15.005911827087402
    9. ' split' → logprob: -15.005911827087402
    10. '().' → logprob: -15.255911827087402

Token 85: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30059123039245605
    2. '('' → logprob: -1.550591230392456
    3. '(' → logprob: -3.050591230392456
    4. ''' → logprob: -9.175591468811035
    5. '("' → logprob: -11.550591468811035
    6. '()='' → logprob: -11.550591468811035
    7. '("("' → logprob: -11.925591468811035
    8. ' ()' → logprob: -12.300591468811035
    9. '()?>' → logprob: -12.425591468811035
    10. '())' → logprob: -12.800591468811035

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03424812853336334
    2. '<|end|>' → logprob: -3.909248113632202
    3. '    ' → logprob: -4.909248352050781
    4. ' ' → logprob: -6.159248352050781
    5. '   ' → logprob: -6.659248352050781
    6. '        ' → logprob: -6.784248352050781
    7. '        
' → logprob: -7.659248352050781
    8. ' if' → logprob: -8.284248352050781
    9. ',' → logprob: -8.784248352050781
    10. 'if' → logprob: -8.909248352050781

Token 87: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08397515118122101
    2. ' if' → logprob: -2.958975076675415
    3. '       ' → logprob: -3.708975076675415
    4. '<|end|>' → logprob: -5.583975315093994
    5. '           ' → logprob: -8.708974838256836
    6. '<|end|>' → logprob: -9.333974838256836
    7. '        ' → logprob: -9.458974838256836
    8. '   ' → logprob: -10.833974838256836
    9. '    ' → logprob: -11.208974838256836
    10. 'elif' → logprob: -11.708974838256836

Token 88: ' token' (ID: 6602)
  Prédit: ' token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.08899552375078201
    2. 'token' → logprob: -2.4639954566955566
    3. '	token' → logprob: -10.088995933532715
    4. '(token' → logprob: -11.588995933532715
    5. ' ' → logprob: -12.838995933532715
    6. '[token' → logprob: -14.088995933532715
    7. ' t' → logprob: -14.463995933532715
    8. ' isinstance' → logprob: -15.213995933532715
    9. 't' → logprob: -15.213995933532715
    10. 'to' → logprob: -15.588995933532715

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.557384192943573
    2. '.is' → logprob: -0.932384192943573
    3. 'in' → logprob: -4.057384014129639
    4. 'isdigit' → logprob: -4.182384014129639
    5. '.' → logprob: -7.182384014129639
    6. 'is' → logprob: -8.807384490966797
    7. ' .' → logprob: -9.307384490966797
    8. ' ' → logprob: -10.182384490966797
    9. '<|end|>' → logprob: -10.307384490966797
    10. '.in' → logprob: -10.932384490966797

Token 90: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0021961715538054705
    2. ' ops' → logprob: -6.127196311950684
    3. 'op' → logprob: -11.877196311950684
    4. '.ops' → logprob: -12.877196311950684
    5. ' ' → logprob: -14.502196311950684
    6. '_ops' → logprob: -15.127196311950684
    7. '   ' → logprob: -15.752196311950684
    8. 'aps' → logprob: -16.377195358276367
    9. 'operations' → logprob: -16.502195358276367
    10. '['' → logprob: -16.752195358276367

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029355064034461975
    2. ' :' → logprob: -5.877935409545898
    3. '):' → logprob: -9.377935409545898
    4. ':**' → logprob: -10.377935409545898
    5. ':
' → logprob: -12.127935409545898
    6. '():' → logprob: -13.377935409545898
    7. '：' → logprob: -13.627935409545898
    8. '[' → logprob: -13.752935409545898
    9. '[:]' → logprob: -13.752935409545898
    10. ']:' → logprob: -13.877935409545898

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29032430052757263
    2. '<|end|>' → logprob: -2.0403242111206055
    3. ':' → logprob: -3.0403242111206055
    4. '(stack' → logprob: -3.1653242111206055
    5. '       ' → logprob: -4.2903242111206055
    6. '        ' → logprob: -5.2903242111206055
    7. '<|end|>' → logprob: -5.7903242111206055
    8. 'stack' → logprob: -5.9153242111206055
    9. ' stack' → logprob: -6.2903242111206055
    10. ' :' → logprob: -7.4153242111206055

Token 93: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06206347420811653
    2. 'b' (adapté à ' b') → logprob: -2.812063455581665
    3. ' ' → logprob: -10.062063217163086
    4. '    ' → logprob: -10.187063217163086
    5. 'a' → logprob: -12.312063217163086
    6. ' a' → logprob: -12.312063217163086
    7. '        ' → logprob: -13.562063217163086
    8. ' stack' → logprob: -14.062063217163086
    9. ')' → logprob: -14.687063217163086
    10. ' if' → logprob: -15.062063217163086

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007842497900128365
    2. '=' → logprob: -4.882842540740967
    3. ' ' → logprob: -9.132842063903809
    4. ')' → logprob: -9.257842063903809
    5. ',' → logprob: -11.882842063903809
    6. '<|end|>' → logprob: -12.257842063903809
    7. 'stack' → logprob: -12.632842063903809
    8. '.' → logprob: -12.757842063903809
    9. ' )' → logprob: -13.007842063903809
    10. ' =
' → logprob: -13.132842063903809

Token 95: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.25198671221733093
    2. 'stack' → logprob: -1.5019867420196533
    3. '	stack' → logprob: -10.376986503601074
    4. ' ' → logprob: -11.751986503601074
    5. '(stack' → logprob: -11.751986503601074
    6. '<|end|>' → logprob: -11.876986503601074
    7. '.stack' → logprob: -12.876986503601074
    8. 'stackoverflow' → logprob: -14.876986503601074
    9. '_stack' → logprob: -15.626986503601074
    10. 'Stack' → logprob: -15.876986503601074

Token 96: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00016587569552939385
    2. '.' → logprob: -8.750165939331055
    3. 'pop' → logprob: -11.875165939331055
    4. ' .' → logprob: -15.125165939331055
    5. '.Pop' → logprob: -16.625165939331055
    6. ' pop' → logprob: -17.000165939331055
    7. '.p' → logprob: -17.875165939331055
    8. 'Pop' → logprob: -18.250165939331055
    9. '	pop' → logprob: -18.250165939331055
    10. '-pop' → logprob: -18.750165939331055

Token 97: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.286852345103398e-05
    2. '()
' → logprob: -10.875042915344238
    3. '(' → logprob: -11.000042915344238
    4. ' ()' → logprob: -12.500042915344238
    5. '()

' → logprob: -13.750042915344238
    6. ')' → logprob: -14.625042915344238
    7. '(),' → logprob: -15.000042915344238
    8. '()`' → logprob: -15.125042915344238
    9. '())' → logprob: -15.250042915344238
    10. '();' → logprob: -15.250042915344238

Token 98: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.040458858013153076
    2. ' ' → logprob: -3.665458917617798
    3. '<|end|>' → logprob: -5.165458679199219
    4. '
' → logprob: -6.540458679199219
    5. '     
' → logprob: -6.790458679199219
    6. '       ' → logprob: -6.790458679199219
    7. '[' → logprob: -7.415458679199219
    8. ' )' → logprob: -7.540458679199219
    9. '           ' → logprob: -7.665458679199219
    10. '  
' → logprob: -7.915458679199219

Token 99: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04294769838452339
    2. ' 
' → logprob: -3.417947769165039
    3. '<|end|>' → logprob: -5.542947769165039
    4. ' )' → logprob: -5.917947769165039
    5. ' ' → logprob: -7.542947769165039
    6. ')' → logprob: -8.167947769165039
    7. ' 

' → logprob: -8.417947769165039
    8. ' a' → logprob: -8.667947769165039
    9. '```' → logprob: -9.042947769165039
    10. '32' → logprob: -9.042947769165039

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004082793369889259
    2. '=' → logprob: -5.504082679748535
    3. ' ' → logprob: -12.379082679748535
    4. ' =
' → logprob: -16.00408363342285
    5. ' ' → logprob: -17.62908363342285
    6. '<|end|>' → logprob: -17.62908363342285
    7. ')' → logprob: -17.87908363342285
    8. '.' → logprob: -17.87908363342285
    9. '    ' → logprob: -17.87908363342285
    10. ' =)' → logprob: -18.25408363342285

Token 101: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.16036701202392578
    2. 'stack' → logprob: -1.9103670120239258
    3. '(stack' → logprob: -9.660367012023926
    4. '	stack' → logprob: -9.660367012023926
    5. '.stack' → logprob: -11.785367012023926
    6. ' ' → logprob: -13.035367012023926
    7. '<|end|>' → logprob: -13.160367012023926
    8. 'Stack' → logprob: -13.910367012023926
    9. '_stack' → logprob: -14.035367012023926
    10. 'stackoverflow' → logprob: -14.535367012023926

Token 102: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0016430460382252932
    2. '.' → logprob: -6.501643180847168
    3. 'pop' → logprob: -8.876643180847168
    4. '.append' → logprob: -14.876643180847168
    5. '-pop' → logprob: -15.876643180847168
    6. '	pop' → logprob: -15.876643180847168
    7. ' .' → logprob: -16.12664222717285
    8. ' pop' → logprob: -16.25164222717285
    9. '.p' → logprob: -16.25164222717285
    10. '.Pop' → logprob: -16.62664222717285

Token 103: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4498052223643754e-05
    2. '()
' → logprob: -11.375014305114746
    3. '()]' → logprob: -14.000014305114746
    4. '(' → logprob: -14.750014305114746
    5. ' ()' → logprob: -14.750014305114746
    6. '()

' → logprob: -14.875014305114746
    7. '(),' → logprob: -15.500014305114746
    8. '())' → logprob: -15.875014305114746
    9. '()`' → logprob: -15.875014305114746
    10. '()\' → logprob: -16.500015258789062

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00881227757781744
    2. '       ' → logprob: -5.133812427520752
    3. ' 
' → logprob: -6.383812427520752
    4. '<|end|>' → logprob: -8.383811950683594
    5. '            
' → logprob: -8.508811950683594
    6. ')' → logprob: -8.758811950683594
    7. 'stack' → logprob: -9.633811950683594
    8. '            ' → logprob: -9.758811950683594
    9. '        
' → logprob: -9.758811950683594
    10. '   ' → logprob: -9.883811950683594

Token 105: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.3592134118080139
    2. 'stack' (adapté à ' stack') → logprob: -1.3592133522033691
    3. ' result' → logprob: -3.734213352203369
    4. 'result' → logprob: -4.234213352203369
    5. '           ' → logprob: -5.109213352203369
    6. '	stack' → logprob: -9.109213829040527
    7. '(stack' → logprob: -9.734213829040527
    8. '            ' → logprob: -9.859213829040527
    9. ')' → logprob: -10.359213829040527
    10. 'op' → logprob: -10.609213829040527

Token 106: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07891964167356491
    2. '.' → logprob: -2.5789196491241455
    3. '.push' → logprob: -11.328919410705566
    4. '.app' → logprob: -11.703919410705566
    5. 'append' → logprob: -12.578919410705566
    6. ' .' → logprob: -13.453919410705566
    7. '.Append' → logprob: -13.828919410705566
    8. ').' → logprob: -13.953919410705566
    9. '.ap' → logprob: -14.203919410705566
    10. '.extend' → logprob: -14.578919410705566

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.727905979962088e-05
    2. '(op' → logprob: -10.00004768371582
    3. 'ops' → logprob: -13.87504768371582
    4. '(
' → logprob: -14.75004768371582
    5. '((' → logprob: -15.00004768371582
    6. ' (' → logprob: -16.00004768371582
    7. '(os' → logprob: -17.75004768371582
    8. '(eval' → logprob: -18.50004768371582
    9. '(opts' → logprob: -18.62504768371582
    10. ' ops' → logprob: -18.75004768371582

Token 108: 'ops' (ID: 4645)
  Prédit: 'ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -6.392202976712724e-06
    2. ' ops' → logprob: -12.000006675720215
    3. 'op' → logprob: -15.500006675720215
    4. '.ops' → logprob: -18.7500057220459
    5. '   ' → logprob: -18.8750057220459
    6. ')' → logprob: -19.5000057220459
    7. '_ops' → logprob: -19.8750057220459
    8. 'opts' → logprob: -20.3750057220459
    9. 'aps' → logprob: -20.5000057220459
    10. ' ' → logprob: -20.6250057220459

Token 109: '[token' (ID: 138013)
  Prédit: '[token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[token' → logprob: -0.001708732801489532
    2. '[' → logprob: -6.376708507537842
    3. '[t' → logprob: -12.501708984375
    4. ' [' → logprob: -14.376708984375
    5. '[to' → logprob: -14.626708984375
    6. ')' → logprob: -14.876708984375
    7. 'token' → logprob: -15.001708984375
    8. ')[' → logprob: -15.376708984375
    9. '(token' → logprob: -15.376708984375
    10. '[
' → logprob: -15.626708984375

Token 110: '](' (ID: 20614)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.013039988465607166
    2. '(' → logprob: -4.888040065765381
    3. '](' → logprob: -5.263040065765381
    4. ' (' → logprob: -8.763039588928223
    5. ')(' → logprob: -10.138039588928223
    6. ']' → logprob: -10.263039588928223
    7. ')' → logprob: -12.388039588928223
    8. '(
' → logprob: -12.763039588928223
    9. 'a' → logprob: -14.388039588928223
    10. ' ' → logprob: -15.013039588928223

Token 111: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ' a' → logprob: -14.000000953674316
    3. '	a' → logprob: -18.75
    4. ')a' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. 'а' → logprob: -20.625
    7. ')' → logprob: -20.625
    8. ' ' → logprob: -21.375
    9. '    ' → logprob: -22.375
    10. '(a' → logprob: -22.5

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00423665065318346
    2. ',b' → logprob: -5.629236698150635
    3. ' ,' → logprob: -7.379236698150635
    4. 'b' → logprob: -11.379236221313477
    5. ' ' → logprob: -15.004236221313477
    6. ',
' → logprob: -15.379236221313477
    7. ' b' → logprob: -15.754236221313477
    8. '‌,' → logprob: -17.004236221313477
    9. '<|end|>' → logprob: -17.754236221313477
    10. ')' → logprob: -18.129236221313477

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16022422909736633
    2. ' b' → logprob: -1.910224199295044
    3. ')b' → logprob: -16.66022491455078
    4. ' ' → logprob: -18.03522491455078
    5. '	b' → logprob: -19.28522491455078
    6. ' б' → logprob: -20.16022491455078
    7. ')' → logprob: -20.78522491455078
    8. ' ' → logprob: -20.91022491455078
    9. '<|end|>' → logprob: -21.16022491455078
    10. '_b' → logprob: -22.03522491455078

Token 114: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195541977882385
    2. '))' → logprob: -1.5019553899765015
    3. ')
' → logprob: -10.876955032348633
    4. '))
' → logprob: -12.001955032348633
    5. ' )' → logprob: -14.251955032348633
    6. ')))' → logprob: -14.876955032348633
    7. ' ))' → logprob: -15.626955032348633
    8. '),' → logprob: -17.001955032348633
    9. '   ' → logprob: -17.626955032348633
    10. '       ' → logprob: -17.876955032348633

Token 115: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004659149795770645
    2. 'else' → logprob: -5.754659175872803
    3. ' else' → logprob: -6.754659175872803
    4. '   ' → logprob: -8.879658699035645
    5. 'elif' → logprob: -9.379658699035645
    6. '```' → logprob: -9.379658699035645
    7. ' elif' → logprob: -12.629658699035645
    8. '<|end|>' → logprob: -14.129658699035645
    9. '	' → logprob: -14.379658699035645
    10. '      ' → logprob: -14.629658699035645

Token 116: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.4891399145126343
    2. '       ' → logprob: -0.9891399145126343
    3. ' else' → logprob: -4.239140033721924
    4. '   ' → logprob: -7.864140033721924
    5. 'elif' → logprob: -8.864139556884766
    6. '	else' → logprob: -12.864139556884766
    7. ' elif' → logprob: -14.364139556884766
    8. '```' → logprob: -14.614139556884766
    9. '	' → logprob: -15.614139556884766
    10. '      ' → logprob: -15.989139556884766

Token 117: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023555360734462738
    2. ':
' → logprob: -3.773555278778076
    3. '       ' → logprob: -9.023555755615234
    4. ' :' → logprob: -9.523555755615234
    5. '   ' → logprob: -10.398555755615234
    6. '           ' → logprob: -10.523555755615234
    7. ' :
' → logprob: -10.523555755615234
    8. ':

' → logprob: -11.648555755615234
    9. '<|end|>' → logprob: -12.398555755615234
    10. '        ' → logprob: -12.648555755615234

Token 118: '           ' (ID: 352)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.19635725021362305
    2. '   ' → logprob: -1.946357250213623
    3. ' stack' → logprob: -3.446357250213623
    4. '       ' → logprob: -5.946357250213623
    5. '           ' → logprob: -7.196357250213623
    6. '	stack' → logprob: -8.321357727050781
    7. '.stack' → logprob: -11.696357727050781
    8. '_stack' → logprob: -13.071357727050781
    9. '(stack' → logprob: -13.071357727050781
    10. ' ' → logprob: -13.571357727050781

Token 119: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.25194790959358215
    2. ' stack' → logprob: -1.5019478797912598
    3. '   ' → logprob: -11.501948356628418
    4. '	stack' → logprob: -12.001948356628418
    5. '           ' → logprob: -13.751948356628418
    6. '.stack' → logprob: -14.251948356628418
    7. '       ' → logprob: -15.376948356628418
    8. '_stack' → logprob: -15.751948356628418
    9. '(stack' → logprob: -16.0019474029541
    10. '
' → logprob: -16.1269474029541

Token 120: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017259917221963406
    2. '.' → logprob: -6.376726150512695
    3. '.push' → logprob: -11.626726150512695
    4. ' .' → logprob: -11.876726150512695
    5. 'append' → logprob: -12.626726150512695
    6. '.app' → logprob: -13.501726150512695
    7. '.Append' → logprob: -13.876726150512695
    8. ').' → logprob: -14.001726150512695
    9. '.extend' → logprob: -14.626726150512695
    10. '.setdefault' → logprob: -14.751726150512695

Token 121: '(float' (ID: 17830)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013813448138535023
    2. '(float' → logprob: -4.763813495635986
    3. '(' → logprob: -5.263813495635986
    4. 'int' → logprob: -11.638813018798828
    5. ' (' → logprob: -15.138813018798828
    6. 'float' → logprob: -15.513813018798828
    7. ' int' → logprob: -15.763813018798828
    8. '(

' → logprob: -15.888813018798828
    9. '(
' → logprob: -16.013813018798828
    10. '(in' → logprob: -16.388813018798828

Token 122: '(token' (ID: 23460)
  Prédit: '(token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(token' → logprob: -0.0002142650482710451
    2. '(' → logprob: -8.500214576721191
    3. 'token' → logprob: -11.500214576721191
    4. ' token' → logprob: -15.125214576721191
    5. ')' → logprob: -15.750214576721191
    6. ' (' → logprob: -15.875214576721191
    7. '(tokens' → logprob: -17.375213623046875
    8. '(
' → logprob: -17.625213623046875
    9. ')(' → logprob: -18.000213623046875
    10. '[token' → logprob: -18.125213623046875

Token 123: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008618000894784927
    2. '))' → logprob: -4.758617877960205
    3. ' )' → logprob: -12.758618354797363
    4. ')))' → logprob: -14.883618354797363
    5. ')
' → logprob: -15.383618354797363
    6. ' ))' → logprob: -16.633617401123047
    7. '())' → logprob: -17.883617401123047
    8. '))
' → logprob: -18.258617401123047
    9. ')`' → logprob: -18.633617401123047
    10. ')}' → logprob: -18.758617401123047

Token 124: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019442226039245725
    2. ' print' → logprob: -6.376944065093994
    3. '   ' → logprob: -8.376944541931152
    4. '    
' → logprob: -12.751944541931152
    5. '```' → logprob: -13.251944541931152
    6. ')' → logprob: -13.376944541931152
    7. '#' → logprob: -14.251944541931152
    8. '  
' → logprob: -14.376944541931152
    9. 'result' → logprob: -14.501944541931152
    10. 'if' → logprob: -14.501944541931152

Token 125: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002075933152809739
    2. ' print' → logprob: -8.500207901000977
    3. '   ' → logprob: -12.500207901000977
    4. '    
' → logprob: -15.625207901000977
    5. 'if' → logprob: -15.875207901000977
    6. '```' → logprob: -17.250207901000977
    7. '
' → logprob: -17.375207901000977
    8. '	print' → logprob: -17.875207901000977
    9. '  
' → logprob: -18.250207901000977
    10. ' 
' → logprob: -19.625207901000977

Token 126: '(f' (ID: 1526)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.06197473779320717
    2. '(' → logprob: -2.8119747638702393
    3. '('' → logprob: -12.31197452545166
    4. '(Stack' → logprob: -14.18697452545166
    5. 'stack' → logprob: -14.43697452545166
    6. '()' → logprob: -14.81197452545166
    7. '(space' → logprob: -14.93697452545166
    8. ' (' → logprob: -15.43697452545166
    9. '(
' → logprob: -16.186975479125977
    10. ' stack' → logprob: -16.811975479125977

Token 127: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.6192178726196289
    2. '{' → logprob: -0.8692178726196289
    3. ''{' → logprob: -3.369217872619629
    4. '{}' → logprob: -5.869217872619629
    5. '"' → logprob: -6.369217872619629
    6. '{})' → logprob: -6.744217872619629
    7. '(stack' → logprob: -6.744217872619629
    8. 'stack' → logprob: -7.744217872619629
    9. ')' → logprob: -8.619217872619629
    10. ' stack' → logprob: -9.369217872619629

Token 128: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -3.5597102396423e-05
    2. ' stack' → logprob: -10.250035285949707
    3. '	stack' → logprob: -16.625036239624023
    4. '(stack' → logprob: -17.500036239624023
    5. '.stack' → logprob: -17.750036239624023
    6. '-stack' → logprob: -19.250036239624023
    7. '   ' → logprob: -19.375036239624023
    8. ' ' → logprob: -19.625036239624023
    9. 'Stack' → logprob: -21.000036239624023
    10. '}' → logprob: -21.125036239624023

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008816886693239212
    2. '[-' → logprob: -4.758816719055176
    3. '.pop' → logprob: -8.508816719055176
    4. '0' → logprob: -14.883816719055176
    5. '.' → logprob: -16.258817672729492
    6. 'pop' → logprob: -16.508817672729492
    7. '-' → logprob: -18.258817672729492
    8. '```' → logprob: -19.383817672729492
    9. '[
' → logprob: -20.383817672729492
    10. '   ' → logprob: -20.633817672729492

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.633853652398102e-05
    2. '-' → logprob: -9.875056266784668
    3. ' ' → logprob: -12.375056266784668
    4. '[' → logprob: -14.875056266784668
    5. ' -' → logprob: -15.250056266784668
    6. '   ' → logprob: -17.500057220458984
    7. '[-' → logprob: -17.875057220458984
    8. '```' → logprob: -17.875057220458984
    9. '۰' → logprob: -18.375057220458984
    10. '
' → logprob: -18.625057220458984

Token 131: ']:' (ID: 12433)
  Prédit: ':.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.2511180639266968
    2. '}")' → logprob: -2.1261181831359863
    3. ':' → logprob: -2.3761181831359863
    4. '}' → logprob: -4.751118183135986
    5. ':e' → logprob: -7.626118183135986
    6. ' }' → logprob: -8.751117706298828
    7. ':f' → logprob: -9.001117706298828
    8. ']}' → logprob: -9.376117706298828
    9. ' :.' → logprob: -9.501117706298828
    10. ']' → logprob: -9.751117706298828

Token 132: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.650518920039758e-06
    2. '".' → logprob: -13.250003814697266
    3. ' .' → logprob: -14.125003814697266
    4. '}' → logprob: -14.500003814697266
    5. '0' → logprob: -15.250003814697266
    6. ''.' → logprob: -15.625003814697266
    7. 'g' → logprob: -16.375003814697266
    8. '}".' → logprob: -16.750003814697266
    9. 'f' → logprob: -16.875003814697266
    10. '}.' → logprob: -17.875003814697266

Token 133: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.20649093389511108
    2. '2' → logprob: -1.7064909934997559
    3. '4' → logprob: -5.956490993499756
    4. '5' → logprob: -6.581490993499756
    5. '3' → logprob: -7.206490993499756
    6. '8' → logprob: -8.456490516662598
    7. '10' → logprob: -9.206490516662598
    8. '1' → logprob: -11.331490516662598
    9. '7' → logprob: -11.706490516662598
    10. '9' → logprob: -11.956490516662598

Token 134: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.1008713702030946e-06
    2. 'g' → logprob: -13.125001907348633
    3. 'e' → logprob: -18.000001907348633
    4. '}' → logprob: -18.000001907348633
    5. ' f' → logprob: -18.000001907348633
    6. ''f' → logprob: -18.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. '	f' → logprob: -19.125001907348633
    9. '
' → logprob: -19.250001907348633
    10. '{' → logprob: -19.375001907348633

Token 135: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0004282851587049663
    2. '")' → logprob: -7.875428199768066
    3. ')")' → logprob: -10.625428199768066
    4. '}")
' → logprob: -11.125428199768066
    5. '}' → logprob: -12.375428199768066
    6. ' }' → logprob: -12.625428199768066
    7. '})' → logprob: -14.375428199768066
    8. '}"' → logprob: -14.750428199768066
    9. '}")

' → logprob: -15.375428199768066
    10. '}")
' → logprob: -16.250429153442383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 133
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 90
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 60.90%
Précision adaptée (1ère position): 67.67%
Précision (top 10): 93.23%
================================================================================
