================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
print(1<<(N.bit_length()-1))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4811895489692688
    2. '(' → logprob: -0.9811895489692688
    3. '()' → logprob: -5.356189727783203
    4. '())' → logprob: -6.731189727783203
    5. '(
' → logprob: -8.356189727783203
    6. '[' → logprob: -8.356189727783203
    7. '```' → logprob: -8.981189727783203
    8. '`)' → logprob: -9.231189727783203
    9. '')' → logprob: -9.606189727783203
    10. '")' → logprob: -9.856189727783203

Token 4: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0348544120788574
    2. '\n' → logprob: -2.0348544120788574
    3. '*' → logprob: -2.4098544120788574
    4. 's' → logprob: -2.4098544120788574
    5. '#' → logprob: -2.5348544120788574
    6. '```' → logprob: -3.1598544120788574
    7. '`' → logprob: -3.6598544120788574
    8. ''' → logprob: -3.6598544120788574
    9. 'a' → logprob: -3.7848544120788574
    10. ')' → logprob: -4.034854412078857

Token 5: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00219866749830544
    2. '('' → logprob: -6.252198696136475
    3. '("("' → logprob: -8.252198219299316
    4. '()' → logprob: -12.627198219299316
    5. '("""' → logprob: -13.502198219299316
    6. '(
' → logprob: -13.752198219299316
    7. '(f' → logprob: -14.377198219299316
    8. '("")' → logprob: -14.502198219299316
    9. '(`' → logprob: -14.627198219299316
    10. '((' → logprob: -14.752198219299316

Token 6: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0006765736034139991
    2. ')' → logprob: -7.50067663192749
    3. ''N' → logprob: -10.000676155090332
    4. '"' → logprob: -10.750676155090332
    5. '"N' → logprob: -11.500676155090332
    6. ''' → logprob: -11.500676155090332
    7. 'n' → logprob: -11.875676155090332
    8. '")' → logprob: -11.875676155090332
    9. 'f' → logprob: -12.000676155090332
    10. '(' → logprob: -12.375676155090332

Token 7: '<<(' (ID: 82331)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011538989841938019
    2. '+' → logprob: -4.886538982391357
    3. '*' → logprob: -5.636538982391357
    4. '+)' → logprob: -9.011539459228516
    5. '*)' → logprob: -9.136539459228516
    6. ' )' → logprob: -10.011539459228516
    7. ',' → logprob: -10.761539459228516
    8. '**' → logprob: -11.136539459228516
    9. '`)' → logprob: -11.761539459228516
    10. ',)' → logprob: -11.761539459228516

Token 8: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.4974866644479334e-05
    2. ' N' → logprob: -11.375015258789062
    3. '31' → logprob: -13.750015258789062
    4. '1' → logprob: -14.625015258789062
    5. '(N' → logprob: -14.875015258789062
    6. '30' → logprob: -15.000015258789062
    7. '(' → logprob: -15.125015258789062
    8. '29' → logprob: -15.500015258789062
    9. '32' → logprob: -15.875015258789062
    10. '10' → logprob: -15.875015258789062

Token 9: '.bit' (ID: 61866)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3435421288013458
    2. ')' → logprob: -1.5935420989990234
    3. '))' → logprob: -2.4685420989990234
    4. '*' → logprob: -7.593542098999023
    5. '+' → logprob: -7.593542098999023
    6. '%' → logprob: -7.718542098999023
    7. '>>' → logprob: -8.093542098999023
    8. ')))' → logprob: -8.593542098999023
    9. '-)' → logprob: -8.718542098999023
    10. ' -' → logprob: -8.968542098999023

Token 10: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.1008713702030946e-06
    2. '_l' → logprob: -14.125001907348633
    3. 'length' → logprob: -14.375001907348633
    4. '_' → logprob: -15.500001907348633
    5. '_le' → logprob: -15.625001907348633
    6. '_len' → logprob: -15.750001907348633
    7. '_LENGTH' → logprob: -15.875001907348633
    8. '_Length' → logprob: -17.000001907348633
    9. '_width' → logprob: -17.250001907348633
    10. 'ength' → logprob: -17.875001907348633

Token 11: '()-' (ID: 31850)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.820591151714325
    2. '()' → logprob: -1.3205912113189697
    3. '()-' → logprob: -1.8205912113189697
    4. '())' → logprob: -2.0705912113189697
    5. '(' → logprob: -6.570590972900391
    6. '()+' → logprob: -6.695590972900391
    7. '))' → logprob: -6.695590972900391
    8. ')' → logprob: -7.570590972900391
    9. '-' → logprob: -9.32059097290039
    10. ' ())' → logprob: -9.57059097290039

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.894790981779806e-05
    2. ' ' → logprob: -10.000048637390137
    3. '2' → logprob: -12.625048637390137
    4. '   ' → logprob: -16.625049591064453
    5. '0' → logprob: -18.187549591064453
    6. '１' → logprob: -18.437549591064453
    7. '```' → logprob: -18.625049591064453
    8. ')' → logprob: -18.687549591064453
    9. '۱' → logprob: -18.750049591064453
    10. '  ' → logprob: -18.937549591064453

Token 13: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4741207957267761
    2. ')' → logprob: -0.9741207957267761
    3. ')))' → logprob: -10.09912109375
    4. '))
' → logprob: -14.59912109375
    5. '```' → logprob: -15.09912109375
    6. '`)' → logprob: -15.34912109375
    7. '),' → logprob: -15.34912109375
    8. ''))' → logprob: -15.47412109375
    9. ')>' → logprob: -15.59912109375
    10. ' ))' → logprob: -15.59912109375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 11
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 6
Précision stricte (1ère position): 45.45%
Précision adaptée (1ère position): 45.45%
Précision (top 10): 54.55%
================================================================================
