================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def can_fit(width, shelves, books):
    count = 1
    current_width = 0
    for w in books:
        if w > width:
            return False
        if current_width + w <= width:
            current_width += w
        else:
            count += 1
            current_width = w
            if count > shelves:
                return False
    return True

while True:
    line = input().strip()
    if not line:
        continue
    m, n = map(int, line.split())
    if m == 0 and n == 0:
        break
    books = [int(input()) for _ in range(n)]
    left = max(books)
    right = 1500000
    ans = right
    while left <= right:
        mid = (left + right) // 2
        if can_fit(mid, m, books):
            ans = mid
            right = mid - 1
        else:
            left = mid + 1
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' can' (ID: 665)
  → Token d'amorce (pas de prédiction)

Token 2: '_fit' (ID: 79598)
  → Token d'amorce (pas de prédiction)

Token 3: '(width' (ID: 32972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25360921025276184
    2. '_' → logprob: -1.5036091804504395
    3. ' (' → logprob: -7.1286091804504395
    4. '_space' → logprob: -8.253609657287598
    5. '(space' → logprob: -8.503609657287598
    6. '_(' → logprob: -9.878609657287598
    7. '```' → logprob: -10.503609657287598
    8. '(a' → logprob: -10.503609657287598
    9. '(token' → logprob: -10.878609657287598
    10. '(parent' → logprob: -11.003609657287598

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6173290610313416
    2. '):' → logprob: -0.8673290610313416
    3. ')' → logprob: -3.2423291206359863
    4. '_' → logprob: -7.367329120635986
    5. ',width' → logprob: -8.117328643798828
    6. ':' → logprob: -9.492328643798828
    7. '=' → logprob: -9.617328643798828
    8. '_width' → logprob: -9.742328643798828
    9. '_,' → logprob: -10.242328643798828
    10. '):
' → logprob: -10.242328643798828

Token 5: ' shelves' (ID: 52049)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.02082330919802189
    2. 'height' → logprob: -3.8958232402801514
    3. ' depth' → logprob: -9.27082347869873
    4. ' length' → logprob: -9.39582347869873
    5. ' ' → logprob: -10.89582347869873
    6. '	height' → logprob: -10.89582347869873
    7. ',height' → logprob: -11.27082347869873
    8. '_height' → logprob: -11.39582347869873
    9. 'length' → logprob: -11.77082347869873
    10. ')' → logprob: -11.89582347869873

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18693920969963074
    2. ',' → logprob: -1.8119392395019531
    3. ')' → logprob: -5.061939239501953
    4. 's' → logprob: -7.686939239501953
    5. ':' → logprob: -9.061939239501953
    6. '[' → logprob: -9.311939239501953
    7. '```' → logprob: -10.061939239501953
    8. '):
' → logprob: -10.311939239501953
    9. ''):' → logprob: -11.061939239501953
    10. ' ,' → logprob: -11.686939239501953

Token 7: ' books' (ID: 7187)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.014213686808943748
    2. ' depth' → logprob: -5.139213562011719
    3. ' length' → logprob: -5.514213562011719
    4. ' items' → logprob: -6.389213562011719
    5. 'height' → logprob: -6.389213562011719
    6. ' heights' → logprob: -8.639213562011719
    7. ' capacity' → logprob: -8.889213562011719
    8. ' item' → logprob: -9.514213562011719
    9. ' max' → logprob: -9.764213562011719
    10. ' space' → logprob: -10.014213562011719

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010544737800955772
    2. ')' → logprob: -4.635544776916504
    3. ',' → logprob: -7.260544776916504
    4. ''):' → logprob: -10.885544776916504
    5. '```' → logprob: -10.885544776916504
    6. ':' → logprob: -11.385544776916504
    7. '):
' → logprob: -12.135544776916504
    8. ' ):' → logprob: -12.385544776916504
    9. 's' → logprob: -12.760544776916504
    10. ' ' → logprob: -13.010544776916504

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012223646976053715
    2. '):' → logprob: -4.887223720550537
    3. '   ' → logprob: -5.762223720550537
    4. '':' → logprob: -7.887223720550537
    5. ':
' → logprob: -8.137223243713379
    6. '```' → logprob: -8.137223243713379
    7. '":' → logprob: -8.887223243713379
    8. '`:' → logprob: -9.637223243713379
    9. '():' → logprob: -9.762223243713379
    10. ''' → logprob: -10.387223243713379

Token 10: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38540515303611755
    2. ':' → logprob: -1.76040518283844
    3. '```' → logprob: -2.7604050636291504
    4. ''' → logprob: -3.5104050636291504
    5. ' ' → logprob: -4.13540506362915
    6. '    ' → logprob: -4.38540506362915
    7. '       ' → logprob: -5.26040506362915
    8. '"' → logprob: -5.88540506362915
    9. '[' → logprob: -6.01040506362915
    10. '\' → logprob: -6.01040506362915

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8341832160949707
    2. ' =' → logprob: -0.9591832160949707
    3. '=' → logprob: -1.7091832160949707
    4. ' ' → logprob: -7.334183216094971
    5. '_=' → logprob: -8.584182739257812
    6. '_space' → logprob: -8.709182739257812
    7. ')' → logprob: -8.834182739257812
    8. ' +=' → logprob: -8.834182739257812
    9. 's' → logprob: -9.459182739257812
    10. ',' → logprob: -10.709182739257812

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033716242760419846
    2. '0' → logprob: -3.4087162017822266
    3. ' len' → logprob: -10.158716201782227
    4. '1' → logprob: -10.908716201782227
    5. 's' → logprob: -12.283716201782227
    6. 'len' → logprob: -13.158716201782227
    7. ' books' → logprob: -13.283716201782227
    8. ' shelves' → logprob: -14.033716201782227
    9. 'books' → logprob: -14.283716201782227
    10. ' =' → logprob: -14.721216201782227

Token 13: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014298430643975735
    2. ' ' → logprob: -4.264298439025879
    3. '1' → logprob: -9.139298439025879
    4. 'len' → logprob: -11.514298439025879
    5. ' len' → logprob: -12.139298439025879
    6. 'books' → logprob: -12.514298439025879
    7. 's' → logprob: -12.764298439025879
    8. '   ' → logprob: -12.764298439025879
    9. ' books' → logprob: -14.764298439025879
    10. 'width' → logprob: -14.764298439025879

Token 14: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6444766521453857
    2. '<|end|>' → logprob: -1.0194766521453857
    3. ',' → logprob: -3.3944766521453857
    4. ' for' → logprob: -4.144476890563965
    5. '<|end|>' → logprob: -4.394476890563965
    6. '    ' → logprob: -4.519476890563965
    7. '```' → logprob: -4.894476890563965
    8. '    
' → logprob: -5.269476890563965
    9. ' ' → logprob: -5.519476890563965
    10. '   
' → logprob: -5.894476890563965

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8237204551696777
    2. '<|end|>' → logprob: -1.1987204551696777
    3. ' ' → logprob: -2.5737204551696777
    4. '    ' → logprob: -3.0737204551696777
    5. '```' → logprob: -3.4487204551696777
    6. '<|end|>' → logprob: -4.198720455169678
    7. '     
' → logprob: -4.573720455169678
    8. ' for' → logprob: -4.573720455169678
    9. '\' → logprob: -4.948720455169678
    10. '    
' → logprob: -4.948720455169678

Token 16: ' current' (ID: 2208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.37905845046043396
    2. '   ' → logprob: -1.8790584802627563
    3. ' current' → logprob: -2.629058361053467
    4. '```' → logprob: -4.004058361053467
    5. 'for' → logprob: -4.129058361053467
    6. 'current' (adapté à ' current') → logprob: -4.254058361053467
    7. '`' → logprob: -4.754058361053467
    8. '    ' → logprob: -5.879058361053467
    9. '\n' → logprob: -5.879058361053467
    10. ' ' → logprob: -6.004058361053467

Token 17: '_width' (ID: 17595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7649579644203186
    2. '_width' → logprob: -1.3899579048156738
    3. '_space' → logprob: -2.139957904815674
    4. '_line' → logprob: -2.639957904815674
    5. '_length' → logprob: -3.014957904815674
    6. '_s' → logprob: -3.264957904815674
    7. '_size' → logprob: -5.764957904815674
    8. '_book' → logprob: -6.389957904815674
    9. '_height' → logprob: -6.889957904815674
    10. ' _' → logprob: -6.889957904815674

Token 18: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.028721265494823456
    2. ' =' → logprob: -3.653721332550049
    3. ' <=' → logprob: -7.153721332550049
    4. '=' → logprob: -8.02872085571289
    5. '+=' → logprob: -8.02872085571289
    6. ' >=' → logprob: -8.15372085571289
    7. '_space' → logprob: -8.77872085571289
    8. ' -=' → logprob: -9.02872085571289
    9. '_' → logprob: -9.52872085571289
    10. ' ==' → logprob: -9.52872085571289

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22668957710266113
    2. '0' → logprob: -1.6016895771026611
    3. ' books' → logprob: -7.476689338684082
    4. 'books' → logprob: -7.851689338684082
    5. ' width' → logprob: -8.851689338684082
    6. 'width' → logprob: -9.351689338684082
    7. ' shelves' → logprob: -10.726689338684082
    8. 's' → logprob: -10.976689338684082
    9. ' ' → logprob: -11.164189338684082
    10. '   ' → logprob: -11.976689338684082

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027396122459322214
    2. ' ' → logprob: -6.252739429473877
    3. 'books' → logprob: -7.627739429473877
    4. 'width' → logprob: -8.252739906311035
    5. 's' → logprob: -10.127739906311035
    6. ' width' → logprob: -12.127739906311035
    7. '   ' → logprob: -12.252739906311035
    8. ' books' → logprob: -12.377739906311035
    9. '  ' → logprob: -13.940239906311035
    10. '-' → logprob: -14.065239906311035

Token 21: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09718519449234009
    2. '
' → logprob: -3.8471851348876953
    3. ' for' → logprob: -3.8471851348876953
    4. ' 
' → logprob: -4.597185134887695
    5. '    ' → logprob: -4.847185134887695
    6. ' ' → logprob: -4.847185134887695
    7. '    
' → logprob: -4.847185134887695
    8. '\n' → logprob: -5.597185134887695
    9. '<|end|>' → logprob: -5.722185134887695
    10. '  
' → logprob: -6.097185134887695

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5123840570449829
    2. ' for' → logprob: -1.637384057044983
    3. 'for' → logprob: -2.3873839378356934
    4. '\n' → logprob: -3.2623839378356934
    5. '    ' → logprob: -4.262383937835693
    6. '\' → logprob: -4.387383937835693
    7. ' ' → logprob: -4.512383937835693
    8. ' 
' → logprob: -4.512383937835693
    9. '    
' → logprob: -4.637383937835693
    10. ' \' → logprob: -5.637383937835693

Token 23: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7678244709968567
    2. ' for' → logprob: -0.8928244709968567
    3. 'for' (adapté à ' for') → logprob: -2.392824411392212
    4. '\n' → logprob: -4.142824649810791
    5. '\' → logprob: -5.017824649810791
    6. ' ' → logprob: -5.392824649810791
    7. ' \' → logprob: -6.517824649810791
    8. '```' → logprob: -6.642824649810791
    9. '\t' → logprob: -6.642824649810791
    10. '    ' → logprob: -6.767824649810791

Token 24: ' w' (ID: 286)
  Prédit: ' book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.026819786056876183
    2. ' ' → logprob: -3.6518197059631348
    3. 'book' → logprob: -8.026820182800293
    4. ' b' → logprob: -9.651820182800293
    5. '	book' → logprob: -9.776820182800293
    6. ' ' → logprob: -10.651820182800293
    7. '  ' → logprob: -11.276820182800293
    8. '   ' → logprob: -12.276820182800293
    9. ' shelf' → logprob: -12.776820182800293
    10. ' w' → logprob: -12.776820182800293

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0022907331585884094
    2. ' ' → logprob: -6.127290725708008
    3. '   ' → logprob: -10.377290725708008
    4. '  ' → logprob: -11.002290725708008
    5. 'in' → logprob: -11.252290725708008
    6. 'i' → logprob: -11.502290725708008
    7. 's' → logprob: -12.002290725708008
    8. 'e' → logprob: -12.252290725708008
    9. ',' → logprob: -12.377290725708008
    10. 'w' → logprob: -12.627290725708008

Token 26: ' books' (ID: 7187)
  Prédit: ' books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' books' → logprob: -0.17985107004642487
    2. 'books' → logprob: -1.8048510551452637
    3. ' ' → logprob: -10.554851531982422
    4. ' range' → logprob: -11.054851531982422
    5. '   ' → logprob: -11.304851531982422
    6. 'width' → logprob: -11.804851531982422
    7. 'book' → logprob: -12.054851531982422
    8. '.books' → logprob: -12.054851531982422
    9. ' width' → logprob: -12.242351531982422
    10. '/books' → logprob: -12.304851531982422

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09152349829673767
    2. '       ' → logprob: -2.4665234088897705
    3. ':
' → logprob: -6.84152364730835
    4. ' :' → logprob: -7.84152364730835
    5. '   ' → logprob: -7.96652364730835
    6. '):' → logprob: -8.466523170471191
    7. '<|end|>' → logprob: -9.091523170471191
    8. ',' → logprob: -9.216523170471191
    9. '=' → logprob: -9.591523170471191
    10. '<|end|>' → logprob: -9.966523170471191

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002017974853515625
    2. '        
' → logprob: -7.127017974853516
    3. '<|end|>' → logprob: -7.627017974853516
    4. '    ' → logprob: -8.502017974853516
    5. ':' → logprob: -9.127017974853516
    6. ' if' → logprob: -9.877017974853516
    7. '   ' → logprob: -10.002017974853516
    8. ',' → logprob: -10.002017974853516
    9. ' ' → logprob: -10.002017974853516
    10. '        ' → logprob: -10.127017974853516

Token 29: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3970160186290741
    2. '        ' → logprob: -1.8970160484313965
    3. ' ' → logprob: -2.3970160484313965
    4. '<|end|>' → logprob: -2.8970160484313965
    5. ' if' → logprob: -4.3970160484313965
    6. '<|end|>' → logprob: -5.5220160484313965
    7. '           ' → logprob: -5.7720160484313965
    8. '```' → logprob: -5.8970160484313965
    9. 'if' (adapté à ' if') → logprob: -6.0220160484313965
    10. '    ' → logprob: -6.2720160484313965

Token 30: ' w' (ID: 286)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.01271094474941492
    2. ' w' → logprob: -4.637711048126221
    3. 'current' → logprob: -6.012711048126221
    4. 'w' → logprob: -7.887711048126221
    5. ' width' → logprob: -9.262710571289062
    6. '(current' → logprob: -11.512710571289062
    7. ' ' → logprob: -11.512710571289062
    8. ' (' → logprob: -12.512710571289062
    9. 'width' → logprob: -13.137710571289062
    10. ' ' → logprob: -13.137710571289062

Token 31: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06967006623744965
    2. '>' → logprob: -3.3196699619293213
    3. ' <=' → logprob: -3.6946699619293213
    4. ' +' → logprob: -5.5696702003479
    5. '+' → logprob: -6.1946702003479
    6. '<=' → logprob: -8.194669723510742
    7. ' ' → logprob: -8.944669723510742
    8. ' ' → logprob: -12.444669723510742
    9. '   ' → logprob: -12.819669723510742
    10. '  ' → logprob: -13.069669723510742

Token 32: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.6326999664306641
    2. ' width' → logprob: -0.7576999664306641
    3. ' ' → logprob: -9.507699966430664
    4. '	width' → logprob: -11.882699966430664
    5. '0' → logprob: -12.382699966430664
    6. '   ' → logprob: -12.507699966430664
    7. '(width' → logprob: -12.632699966430664
    8. '  ' → logprob: -13.382699966430664
    9. ' current' → logprob: -13.632699966430664
    10. '```' → logprob: -14.070199966430664

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004879823885858059
    2. ' or' → logprob: -5.504879951477051
    3. ' :' → logprob: -7.629879951477051
    4. ':return' → logprob: -8.50487995147705
    5. ':
' → logprob: -9.87987995147705
    6. ' and' → logprob: -10.75487995147705
    7. '<|end|>' → logprob: -10.75487995147705
    8. '       ' → logprob: -12.25487995147705
    9. '):' → logprob: -12.75487995147705
    10. '<|end|>' → logprob: -13.50487995147705

Token 34: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7610565423965454
    2. ':' → logprob: -1.0110565423965454
    3. ':return' → logprob: -2.511056423187256
    4. ' return' → logprob: -3.511056423187256
    5. '       ' → logprob: -3.886056423187256
    6. ':
' → logprob: -4.011056423187256
    7. ' :' → logprob: -5.261056423187256
    8. 'return' → logprob: -5.511056423187256
    9. ' or' → logprob: -5.636056423187256
    10. ' continue' → logprob: -6.761056423187256

Token 35: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.8134828209877014
    2. ' return' → logprob: -1.0634827613830566
    3. 'return' (adapté à ' return') → logprob: -1.8134827613830566
    4. ' ' → logprob: -3.8134827613830566
    5. '           ' → logprob: -5.438482761383057
    6. '\n' → logprob: -5.813482761383057
    7. 'False' → logprob: -6.188482761383057
    8. ' None' → logprob: -6.563482761383057
    9. ' 

' → logprob: -6.688482761383057
    10. ' False' → logprob: -6.688482761383057

Token 36: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.12695172429084778
    2. 'False' → logprob: -2.1269516944885254
    3. ' None' → logprob: -11.126952171325684
    4. ' ' → logprob: -12.126952171325684
    5. 'None' → logprob: -13.001952171325684
    6. ' True' → logprob: -14.001952171325684
    7. 'True' → logprob: -16.126951217651367
    8. ' false' → logprob: -16.501951217651367
    9. '(False' → logprob: -16.501951217651367
    10. '  ' → logprob: -17.126951217651367

Token 37: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6840393543243408
    2. '        
' → logprob: -1.3090393543243408
    3. '\n' → logprob: -2.684039354324341
    4. '<|end|>' → logprob: -2.684039354324341
    5. ' 
' → logprob: -2.809039354324341
    6. '```' → logprob: -4.934039115905762
    7. '  
' → logprob: -5.309039115905762
    8. '    
' → logprob: -5.559039115905762
    9. '\' → logprob: -6.059039115905762
    10. '`' → logprob: -6.559039115905762

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4889973998069763
    2. '<|end|>' → logprob: -1.363997459411621
    3. '        
' → logprob: -2.363997459411621
    4. ' 
' → logprob: -4.238997459411621
    5. '
' → logprob: -4.488997459411621
    6. '```' → logprob: -5.988997459411621
    7. '\n' → logprob: -6.113997459411621
    8. '  
' → logprob: -6.488997459411621
    9. '    
' → logprob: -6.488997459411621
    10. '<|end|>' → logprob: -6.863997459411621

Token 39: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3528718650341034
    2. '<|end|>' → logprob: -1.7278718948364258
    3. '        
' → logprob: -3.477871894836426
    4. '       ' → logprob: -3.727871894836426
    5. ' ' → logprob: -4.352871894836426
    6. ' if' → logprob: -4.727871894836426
    7. '  
' → logprob: -4.852871894836426
    8. '    
' → logprob: -4.852871894836426
    9. '   
' → logprob: -5.727871894836426
    10. 'if' (adapté à ' if') → logprob: -5.852871894836426

Token 40: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.006722233723849058
    2. 'current' → logprob: -5.006722450256348
    3. '(current' → logprob: -13.256722450256348
    4. ' ' → logprob: -13.506722450256348
    5. '    ' → logprob: -13.881722450256348
    6. ' ' → logprob: -14.006722450256348
    7. '	current' → logprob: -15.256722450256348
    8. ' w' → logprob: -15.256722450256348
    9. '_current' → logprob: -15.256722450256348
    10. '$current' → logprob: -15.381722450256348

Token 41: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0015527134528383613
    2. '_' → logprob: -6.626552581787109
    3. ' _' → logprob: -8.87655258178711
    4. '_w' → logprob: -9.37655258178711
    5. '+' → logprob: -14.50155258178711
    6. '```' → logprob: -15.37655258178711
    7. 'width' → logprob: -15.50155258178711
    8. '_length' → logprob: -15.62655258178711
    9. ' ' → logprob: -15.62655258178711
    10. ' +' → logprob: -15.75155258178711

Token 42: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0889667272567749
    2. '+' → logprob: -2.4639668464660645
    3. '+w' → logprob: -11.588966369628906
    4. ' plus' → logprob: -11.963966369628906
    5. ' ==' → logprob: -13.088966369628906
    6. '==' → logprob: -13.338966369628906
    7. ' ' → logprob: -13.463966369628906
    8. '>' → logprob: -13.963966369628906
    9. ' ' → logprob: -14.088966369628906
    10. '+t' → logprob: -14.713966369628906

Token 43: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07889066636562347
    2. ' w' → logprob: -2.578890562057495
    3. '	w' → logprob: -15.078890800476074
    4. ' ' → logprob: -15.078890800476074
    5. '   ' → logprob: -16.203889846801758
    6. '<w' → logprob: -17.203889846801758
    7. ' ' → logprob: -17.328889846801758
    8. '=w' → logprob: -17.328889846801758
    9. ''w' → logprob: -17.453889846801758
    10. '>w' → logprob: -17.578889846801758

Token 44: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2141081988811493
    2. ' <=' → logprob: -1.7141082286834717
    3. '>' → logprob: -4.464107990264893
    4. '<=' → logprob: -6.964107990264893
    5. '<|end|>' → logprob: -9.58910846710205
    6. ' ' → logprob: -9.71410846710205
    7. '<|end|>' → logprob: -12.08910846710205
    8. ' ' → logprob: -12.71410846710205
    9. '+' → logprob: -12.71410846710205
    10. ' >
' → logprob: -13.46410846710205

Token 45: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.10021087527275085
    2. 'width' → logprob: -2.3502109050750732
    3. '	width' → logprob: -12.975211143493652
    4. ' ' → logprob: -13.725211143493652
    5. '(width' → logprob: -14.975211143493652
    6. ',width' → logprob: -16.225210189819336
    7. ';width' → logprob: -16.600210189819336
    8. '_width' → logprob: -16.725210189819336
    9. '    ' → logprob: -16.725210189819336
    10. '   ' → logprob: -16.850210189819336

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011200665176147595
    2. ':
' → logprob: -10.00011157989502
    3. '<|end|>' → logprob: -10.25011157989502
    4. ' :' → logprob: -11.25011157989502
    5. '):' → logprob: -12.37511157989502
    6. '<|end|>' → logprob: -12.62511157989502
    7. ' and' → logprob: -12.87511157989502
    8. ':**' → logprob: -13.12511157989502
    9. ',' → logprob: -13.37511157989502
    10. '       ' → logprob: -13.50011157989502

Token 47: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06877594441175461
    2. '<|end|>' → logprob: -3.4437758922576904
    3. '       ' → logprob: -3.8187758922576904
    4. ':
' → logprob: -5.3187761306762695
    5. 'current' → logprob: -6.3187761306762695
    6. '           ' → logprob: -6.6937761306762695
    7. '<|end|>' → logprob: -6.6937761306762695
    8. ' current' → logprob: -7.1937761306762695
    9. ' :' → logprob: -7.8187761306762695
    10. ''s' → logprob: -8.06877613067627

Token 48: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.38747283816337585
    2. 'current' (adapté à ' current') → logprob: -1.1374728679656982
    3. ' ' → logprob: -8.137473106384277
    4. '           ' → logprob: -9.137473106384277
    5. '[current' → logprob: -9.887473106384277
    6. '            ' → logprob: -10.137473106384277
    7. '               ' → logprob: -11.012473106384277
    8. ',current' → logprob: -11.012473106384277
    9. ' ' → logprob: -11.262473106384277
    10. '(current' → logprob: -11.512473106384277

Token 49: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0017200425500050187
    2. '_' → logprob: -6.376719951629639
    3. '_w' → logprob: -11.876720428466797
    4. '_line' → logprob: -12.501720428466797
    5. ' _' → logprob: -13.251720428466797
    6. '_height' → logprob: -14.001720428466797
    7. '```' → logprob: -14.126720428466797
    8. '_depth' → logprob: -14.251720428466797
    9. '_length' → logprob: -15.251720428466797
    10. '_WIDTH' → logprob: -15.501720428466797

Token 50: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.001870094332844019
    2. ' +' → logprob: -6.876870155334473
    3. '+=' → logprob: -7.626870155334473
    4. '+' → logprob: -8.001870155334473
    5. '<|end|>' → logprob: -11.751870155334473
    6. ' =' → logprob: -12.751870155334473
    7. ' ' → logprob: -13.001870155334473
    8. ' ' → logprob: -13.751870155334473
    9. '+='' → logprob: -16.001869201660156
    10. '<|end|>' → logprob: -16.126869201660156

Token 51: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6931478977203369
    2. ' w' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.943147659301758
    4. ' ' → logprob: -15.443147659301758
    5. '	w' → logprob: -15.943147659301758
    6. '+w' → logprob: -17.943147659301758
    7. '_w' → logprob: -18.943147659301758
    8. '<w' → logprob: -18.943147659301758
    9. ''w' → logprob: -19.068147659301758
    10. '+' → logprob: -19.068147659301758

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13677015900611877
    2. ' else' → logprob: -2.636770248413086
    3. 'else' → logprob: -2.886770248413086
    4. '<|end|>' → logprob: -8.136770248413086
    5. '        
' → logprob: -9.886770248413086
    6. '
' → logprob: -10.636770248413086
    7. '```' → logprob: -10.886770248413086
    8. '	else' → logprob: -11.261770248413086
    9. 'elif' → logprob: -11.636770248413086
    10. ' 
' → logprob: -11.886770248413086

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13133865594863892
    2. 'else' → logprob: -2.256338596343994
    3. ' else' → logprob: -4.006338596343994
    4. '```' → logprob: -10.006339073181152
    5. '<|end|>' → logprob: -10.381339073181152
    6. 'elif' → logprob: -10.881339073181152
    7. '\n' → logprob: -11.631339073181152
    8. '   ' → logprob: -12.006339073181152
    9. '        
' → logprob: -12.131339073181152
    10. '
' → logprob: -12.256339073181152

Token 54: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5830077528953552
    2. 'else' (adapté à ' else') → logprob: -0.8330077528953552
    3. '       ' → logprob: -4.9580078125
    4. '   ' → logprob: -11.7080078125
    5. '	else' → logprob: -12.2080078125
    6. 'elif' → logprob: -13.9580078125
    7. '```' → logprob: -14.5830078125
    8. '    ' → logprob: -14.7080078125
    9. '_else' → logprob: -14.8330078125
    10. ' elif' → logprob: -14.8330078125

Token 55: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4227246046066284
    2. ':' → logprob: -1.1727246046066284
    3. '
' → logprob: -3.672724723815918
    4. '<|end|>' → logprob: -5.422724723815918
    5. '```' → logprob: -5.922724723815918
    6. '           ' → logprob: -7.297724723815918
    7. '<|end|>' → logprob: -7.422724723815918
    8. '       ' → logprob: -8.172724723815918
    9. '\n' → logprob: -8.422724723815918
    10. 'newline' → logprob: -8.797724723815918

Token 56: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13853177428245544
    2. '
' → logprob: -2.1385316848754883
    3. '       ' → logprob: -5.638531684875488
    4. '\n' → logprob: -5.763531684875488
    5. '```' → logprob: -6.138531684875488
    6. '            
' → logprob: -7.263531684875488
    7. '        
' → logprob: -7.638531684875488
    8. ' 
' → logprob: -7.763531684875488
    9. '  
' → logprob: -8.513531684875488
    10. '    
' → logprob: -8.638531684875488

Token 57: ' count' (ID: 3605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1706707775592804
    2. 'count' (adapté à ' count') → logprob: -2.420670747756958
    3. ' count' → logprob: -3.295670747756958
    4. '\n' → logprob: -3.670670747756958
    5. ' 
' → logprob: -6.170670986175537
    6. '           ' → logprob: -6.295670986175537
    7. 'n' → logprob: -8.045670509338379
    8. '
' → logprob: -8.170670509338379
    9. '```' → logprob: -8.420670509338379
    10. '            
' → logprob: -9.045670509338379

Token 58: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.00012809180771000683
    2. '+=' → logprob: -9.125127792358398
    3. ' +' → logprob: -11.375127792358398
    4. '+' → logprob: -11.875127792358398
    5. ' =' → logprob: -15.000127792358398
    6. '<|end|>' → logprob: -15.375127792358398
    7. ' ' → logprob: -16.6251277923584
    8. ' ' → logprob: -17.0001277923584
    9. ' |=' → logprob: -17.1251277923584
    10. ' -=' → logprob: -17.1251277923584

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -19.250804901123047
    4. '```' → logprob: -19.375804901123047
    5. ' ' → logprob: -19.750804901123047
    6. '<|end|>' → logprob: -20.250804901123047
    7. '۱' → logprob: -21.563304901123047
    8. '１' → logprob: -21.875804901123047
    9. '`' → logprob: -22.063304901123047
    10. '  ' → logprob: -22.188304901123047

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -18.625
    4. '```' → logprob: -20.0
    5. '۱' → logprob: -20.5
    6. '   ' → logprob: -21.1875
    7. 'def' → logprob: -21.3125
    8. '१' → logprob: -21.5
    9. '`' → logprob: -21.5

Token 61: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.45876067876815796
    2. '           ' → logprob: -1.4587607383728027
    3. '\n' → logprob: -2.9587607383728027
    4. '
' → logprob: -3.5837607383728027
    5. '            
' → logprob: -3.8337607383728027
    6. ' current' → logprob: -4.958760738372803
    7. 'current' → logprob: -4.958760738372803
    8. '<|end|>' → logprob: -5.083760738372803
    9. '  
' → logprob: -5.333760738372803
    10. '```' → logprob: -6.208760738372803

Token 62: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5385996103286743
    2. '           ' → logprob: -1.2885996103286743
    3. '
' → logprob: -3.4135994911193848
    4. '<|end|>' → logprob: -3.4135994911193848
    5. '\n' → logprob: -3.6635994911193848
    6. '            
' → logprob: -3.9135994911193848
    7. '  
' → logprob: -4.663599491119385
    8. '```' → logprob: -5.038599491119385
    9. '    
' → logprob: -5.538599491119385
    10. '       ' → logprob: -6.288599491119385

Token 63: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -1.0564331205387134e-05
    2. ' current' → logprob: -11.50001049041748
    3. 'w' → logprob: -15.37501049041748
    4. '           ' → logprob: -16.000011444091797
    5. '            
' → logprob: -18.000011444091797
    6. '```' → logprob: -18.000011444091797
    7. '
' → logprob: -18.375011444091797
    8. '	current' → logprob: -18.750011444091797
    9. '`' → logprob: -19.375011444091797
    10. 'Current' → logprob: -19.500011444091797

Token 64: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -3.8889261304575484e-06
    2. '_' → logprob: -12.750003814697266
    3. '_w' → logprob: -14.125003814697266
    4. 'width' → logprob: -16.375003814697266
    5. ' _' → logprob: -17.250003814697266
    6. '```' → logprob: -17.250003814697266
    7. '_line' → logprob: -17.500003814697266
    8. '_WIDTH' → logprob: -18.250003814697266
    9. 'Width' → logprob: -18.375003814697266
    10. '\' → logprob: -19.125003814697266

Token 65: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740784466266632
    2. ' =' → logprob: -0.9740784168243408
    3. '=w' → logprob: -13.849078178405762
    4. '<|end|>' → logprob: -15.349078178405762
    5. ' ' → logprob: -16.349079132080078
    6. '＝' → logprob: -16.849079132080078
    7. 'w' → logprob: -17.349079132080078
    8. '=
' → logprob: -17.974079132080078
    9. '=

' → logprob: -17.974079132080078
    10. 's' → logprob: -18.474079132080078

Token 66: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233763717114925
    2. ' w' → logprob: -5.2552337646484375
    3. '<w' → logprob: -20.880233764648438
    4. '	w' → logprob: -21.005233764648438
    5. '+w' → logprob: -21.255233764648438
    6. '=w' → logprob: -21.880233764648438
    7. ''w' → logprob: -22.380233764648438
    8. '*w' → logprob: -22.505233764648438
    9. ' ' → logprob: -22.630233764648438
    10. '_w' → logprob: -22.755233764648438

Token 67: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3412591814994812
    2. '
' → logprob: -1.591259241104126
    3. '   ' → logprob: -3.716259241104126
    4. '  
' → logprob: -4.466259002685547
    5. '```' → logprob: -4.466259002685547
    6. '<|end|>' → logprob: -4.591259002685547
    7. '\n' → logprob: -4.841259002685547
    8. '    
' → logprob: -5.341259002685547
    9. '           ' → logprob: -5.466259002685547
    10. '        
' → logprob: -5.591259002685547

Token 68: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17548421025276184
    2. '
' → logprob: -2.4254841804504395
    3. '   ' → logprob: -3.6754841804504395
    4. '```' → logprob: -3.6754841804504395
    5. '  
' → logprob: -5.3004841804504395
    6. '<|end|>' → logprob: -5.5504841804504395
    7. ' 
' → logprob: -5.8004841804504395
    8. '    
' → logprob: -6.1754841804504395
    9. '        
' → logprob: -6.3004841804504395
    10. '           ' → logprob: -6.4254841804504395

Token 69: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39200353622436523
    2. ' if' → logprob: -1.1420035362243652
    3. '           ' → logprob: -5.392003536224365
    4. '   ' → logprob: -7.642003536224365
    5. '       ' → logprob: -10.017004013061523
    6. '```' → logprob: -10.642004013061523
    7. 'return' → logprob: -11.767004013061523
    8. ' ' → logprob: -11.892004013061523
    9. ' return' → logprob: -13.142004013061523
    10. 'count' → logprob: -14.142004013061523

Token 70: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.02324594371020794
    2. 'count' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.523245811462402
    4. '	count' → logprob: -16.02324676513672
    5. ' counts' → logprob: -16.77324676513672
    6. '(count' → logprob: -16.89824676513672
    7. '$count' → logprob: -17.52324676513672
    8. '<count' → logprob: -17.89824676513672
    9. '   ' → logprob: -18.89824676513672
    10. '[count' → logprob: -18.89824676513672

Token 71: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16023977100849152
    2. '>' → logprob: -1.910239815711975
    3. '>s' → logprob: -11.785240173339844
    4. ' ' → logprob: -12.410240173339844
    5. ' ' → logprob: -12.910240173339844
    6. 's' → logprob: -14.785240173339844
    7. '>end' → logprob: -15.035240173339844
    8. '&gt' → logprob: -15.535240173339844
    9. '">' → logprob: -15.910240173339844
    10. '<|end|>' → logprob: -16.410240173339844

Token 72: ' shelves' (ID: 52049)
  Prédit: ' shelves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelves' → logprob: -0.0040862360037863255
    2. 's' → logprob: -5.504086017608643
    3. 'helves' → logprob: -12.1290864944458
    4. ' shel' → logprob: -13.6290864944458
    5. '	s' → logprob: -15.1290864944458
    6. ' ' → logprob: -15.5040864944458
    7. ' s' → logprob: -15.8790864944458
    8. ' shelters' → logprob: -15.8790864944458
    9. ' shelf' → logprob: -16.004085540771484
    10. '_s' → logprob: -16.379085540771484

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009525391273200512
    2. ':return' → logprob: -4.759525299072266
    3. ':
' → logprob: -7.134525299072266
    4. ' :' → logprob: -9.384525299072266
    5. '):' → logprob: -11.009525299072266
    6. '   ' → logprob: -12.884525299072266
    7. ')' → logprob: -13.134525299072266
    8. '<|end|>' → logprob: -13.259525299072266
    9. '           ' → logprob: -13.884525299072266
    10. ':def' → logprob: -14.259525299072266

Token 74: '               ' (ID: 506)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8049421310424805
    2. '               ' → logprob: -0.9299421310424805
    3. '           ' → logprob: -2.0549421310424805
    4. 'return' → logprob: -3.5549421310424805
    5. '       ' → logprob: -6.8049421310424805
    6. ':return' → logprob: -8.67994213104248
    7. '```' → logprob: -8.67994213104248
    8. '   ' → logprob: -10.05494213104248
    9. ' ' → logprob: -10.17994213104248
    10. '	return' → logprob: -10.92994213104248

Token 75: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21065376698970795
    2. 'return' (adapté à ' return') → logprob: -1.7106537818908691
    3. '               ' → logprob: -4.710653781890869
    4. '                   ' → logprob: -8.710653305053711
    5. '           ' → logprob: -10.835653305053711
    6. '```' → logprob: -12.085653305053711
    7. '   ' → logprob: -12.835653305053711
    8. ':return' → logprob: -13.085653305053711
    9. '	return' → logprob: -13.210653305053711
    10. '
' → logprob: -14.835653305053711

Token 76: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5759394764900208
    2. ' False' → logprob: -0.8259394764900208
    3. '(False' → logprob: -16.450939178466797
    4. '=False' → logprob: -18.700939178466797
    5. '_false' → logprob: -19.200939178466797
    6. ' True' → logprob: -19.325939178466797
    7. 'True' → logprob: -19.575939178466797
    8. ' ' → logprob: -19.575939178466797
    9. ' ' → logprob: -20.575939178466797
    10. '.False' → logprob: -20.825939178466797

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004519719630479813
    2. 'return' → logprob: -6.004519939422607
    3. '
' → logprob: -6.379519939422607
    4. ' return' → logprob: -8.87951946258545
    5. 'True' → logprob: -9.62951946258545
    6. '```' → logprob: -9.75451946258545
    7. '    
' → logprob: -10.25451946258545
    8. '       ' → logprob: -10.75451946258545
    9. '	return' → logprob: -11.25451946258545
    10. '  
' → logprob: -12.87951946258545

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011527208844199777
    2. 'return' → logprob: -7.001152515411377
    3. '
' → logprob: -9.001152992248535
    4. '```' → logprob: -9.376152992248535
    5. 'True' → logprob: -11.251152992248535
    6. '    
' → logprob: -11.501152992248535
    7. ' return' → logprob: -11.876152992248535
    8. '       ' → logprob: -13.501152992248535
    9. '	return' → logprob: -14.251152992248535
    10. 'true' → logprob: -15.001152992248535

Token 79: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10231907665729523
    2. '   ' → logprob: -2.3523190021514893
    3. 'True' → logprob: -6.977319240570068
    4. ' return' → logprob: -7.477319240570068
    5. '```' → logprob: -8.22731876373291
    6. '	return' → logprob: -8.60231876373291
    7. '    
' → logprob: -9.35231876373291
    8. '
' → logprob: -10.60231876373291
    9. '  
' → logprob: -11.47731876373291
    10. 'eturn' → logprob: -11.60231876373291

Token 80: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12692810595035553
    2. 'True' → logprob: -2.1269280910491943
    3. '(True' → logprob: -17.376928329467773
    4. ' ' → logprob: -17.626928329467773
    5. ' Tru' → logprob: -19.751928329467773
    6. '=True' → logprob: -20.251928329467773
    7. ' ' → logprob: -20.251928329467773
    8. '   ' → logprob: -20.501928329467773
    9. ' true' → logprob: -21.001928329467773
    10. 'False' → logprob: -21.626928329467773

Token 81: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1299781799316406
    2. '```' → logprob: -2.1299781799316406
    3. '
' → logprob: -2.2549781799316406
    4. ':' → logprob: -2.2549781799316406
    5. ' ' → logprob: -2.3799781799316406
    6. '#' → logprob: -2.3799781799316406
    7. ' 
' → logprob: -3.1299781799316406
    8. '<|end|>' → logprob: -3.5049781799316406
    9. '_' → logprob: -4.129978179931641
    10. 'd' → logprob: -4.879978179931641

Token 83: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.02011985331773758
    2. 'True' → logprob: -4.270119667053223
    3. ' can' → logprob: -6.020119667053223
    4. ' not' → logprob: -6.270119667053223
    5. ' books' → logprob: -7.270119667053223
    6. ' shelves' → logprob: -7.770119667053223
    7. '(True' → logprob: -8.645119667053223
    8. ' width' → logprob: -9.145119667053223
    9. ' len' → logprob: -9.520119667053223
    10. ' count' → logprob: -10.145119667053223

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001397260813973844
    2. ' :' → logprob: -6.626397132873535
    3. ':
' → logprob: -10.001397132873535
    4. '():' → logprob: -11.001397132873535
    5. '   ' → logprob: -13.251397132873535
    6. ':def' → logprob: -13.751397132873535
    7. ':

' → logprob: -13.876397132873535
    8. ':**' → logprob: -13.876397132873535
    9. '):' → logprob: -14.626397132873535
    10. ',' → logprob: -14.626397132873535

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0375923290848732
    2. ' ' → logprob: -4.03759241104126
    3. ' input' → logprob: -5.16259241104126
    4. ' try' → logprob: -5.28759241104126
    5. '    
' → logprob: -5.91259241104126
    6. '    ' → logprob: -6.28759241104126
    7. '<|end|>' → logprob: -7.28759241104126
    8. 'input' → logprob: -7.78759241104126
    9. '  ' → logprob: -7.78759241104126
    10. ' 
' → logprob: -8.037591934204102

Token 86: ' line' (ID: 2543)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.5821232795715332
    2. '   ' → logprob: -0.9571232795715332
    3. 'try' → logprob: -3.082123279571533
    4. ' line' → logprob: -4.582123279571533
    5. ' width' → logprob: -7.957123279571533
    6. ' s' → logprob: -8.957122802734375
    7. ' user' → logprob: -8.957122802734375
    8. 'line' (adapté à ' line') → logprob: -9.457122802734375
    9. ' input' → logprob: -9.457122802734375
    10. '   ' → logprob: -9.457122802734375

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024764856789261103
    2. '=' → logprob: -6.002476692199707
    3. ' ' → logprob: -15.002476692199707
    4. 's' → logprob: -15.127476692199707
    5. '=line' → logprob: -17.12747573852539
    6. '   ' → logprob: -17.62747573852539
    7. '=input' → logprob: -17.75247573852539
    8. '_' → logprob: -18.25247573852539
    9. ' =
' → logprob: -18.37747573852539
    10. '.' → logprob: -18.75247573852539

Token 88: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.575939953327179
    2. ' input' → logprob: -0.825939953327179
    3. '=input' → logprob: -14.950940132141113
    4. '	input' → logprob: -16.825939178466797
    5. '   ' → logprob: -17.075939178466797
    6. '```' → logprob: -17.075939178466797
    7. '<input' → logprob: -17.450939178466797
    8. ' ' → logprob: -17.575939178466797
    9. '_input' → logprob: -17.700939178466797
    10. '(input' → logprob: -17.700939178466797

Token 89: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041732576210051775
    2. '(' → logprob: -8.000417709350586
    3. '().' → logprob: -9.625417709350586
    4. '()>' → logprob: -12.500417709350586
    5. '())' → logprob: -12.875417709350586
    6. '("")' → logprob: -13.000417709350586
    7. '()]' → logprob: -13.750417709350586
    8. '()`' → logprob: -14.125417709350586
    9. '()

' → logprob: -14.250417709350586
    10. '();' → logprob: -14.250417709350586

Token 90: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.024604277219623e-05
    2. 'rstrip' → logprob: -10.250040054321289
    3. 'split' → logprob: -12.250040054321289
    4. ' strip' → logprob: -19.62504005432129
    5. 'str' → logprob: -21.75004005432129
    6. 'startswith' → logprob: -22.00004005432129
    7. 'replace' → logprob: -22.25004005432129
    8. 'stripe' → logprob: -22.37504005432129
    9. '.strip' → logprob: -22.37504005432129
    10. '_strip' → logprob: -23.00004005432129

Token 91: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004935794277116656
    2. '(' → logprob: -7.75049352645874
    3. '('' → logprob: -10.375494003295898
    4. '()
' → logprob: -11.250494003295898
    5. '())' → logprob: -12.625494003295898
    6. '().' → logprob: -12.750494003295898
    7. '("("' → logprob: -13.500494003295898
    8. '()`' → logprob: -13.625494003295898
    9. '()>' → logprob: -13.875494003295898
    10. ''' → logprob: -14.125494003295898

Token 92: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2875695526599884
    2. '<|end|>' → logprob: -1.912569522857666
    3. 'if' (adapté à ' if') → logprob: -2.287569522857666
    4. '<|end|>' → logprob: -7.787569522857666
    5. '   ' → logprob: -9.537569999694824
    6. '...' → logprob: -9.787569999694824
    7. ' ' → logprob: -10.037569999694824
    8. '```' → logprob: -10.037569999694824
    9. '
' → logprob: -11.412569999694824
    10. '=' → logprob: -12.412569999694824

Token 94: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.01173718087375164
    2. ' line' → logprob: -4.51173734664917
    3. ' ' → logprob: -8.011736869812012
    4. 'not' → logprob: -8.011736869812012
    5. 'line' → logprob: -10.636736869812012
    6. '#line' → logprob: -14.261736869812012
    7. ' ' → logprob: -14.636736869812012
    8. '	line' → logprob: -15.136736869812012
    9. '	not' → logprob: -15.511736869812012
    10. '[line' → logprob: -16.136737823486328

Token 95: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38687145709991455
    2. ' line' → logprob: -1.1368714570999146
    3. '	line' → logprob: -15.261871337890625
    4. ' ' → logprob: -16.261871337890625
    5. '(line' → logprob: -16.386871337890625
    6. '#line' → logprob: -17.261871337890625
    7. '[line' → logprob: -17.761871337890625
    8. '=line' → logprob: -18.886871337890625
    9. '<|end|>' → logprob: -19.136871337890625
    10. ' ' → logprob: -19.386871337890625

Token 96: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00413574930280447
    2. ':
' → logprob: -5.504135608673096
    3. '<|end|>' → logprob: -10.629136085510254
    4. ' :' → logprob: -11.004136085510254
    5. ':return' → logprob: -12.004136085510254
    6. ' or' → logprob: -12.754136085510254
    7. '<|end|>' → logprob: -12.879136085510254
    8. '):' → logprob: -13.254136085510254
    9. ':

' → logprob: -14.504136085510254
    10. '):
' → logprob: -14.629136085510254

Token 97: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11859552562236786
    2. ':' → logprob: -2.993595600128174
    3. '       ' → logprob: -2.993595600128174
    4. ':
' → logprob: -4.493595600128174
    5. '<|end|>' → logprob: -9.368595123291016
    6. '    
' → logprob: -9.743595123291016
    7. '   ' → logprob: -9.993595123291016
    8. ',' → logprob: -9.993595123291016
    9. '    ' → logprob: -10.243595123291016
    10. ' break' → logprob: -10.868595123291016

Token 98: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.4275694489479065
    2. '   ' → logprob: -1.4275693893432617
    3. '       ' → logprob: -2.9275693893432617
    4. 'break' → logprob: -3.0525693893432617
    5. '	break' → logprob: -5.177569389343262
    6. '           ' → logprob: -6.552569389343262
    7. ' ' → logprob: -9.802569389343262
    8. '```' → logprob: -10.427569389343262
    9. '
' → logprob: -10.552569389343262
    10. '    ' → logprob: -10.927569389343262

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007509016431868076
    2. '<|end|>' → logprob: -7.37575101852417
    3. '    
' → logprob: -9.375750541687012
    4. '<|end|>' → logprob: -10.875750541687012
    5. ' if' → logprob: -12.000750541687012
    6. ' ' → logprob: -13.125750541687012
    7. 'break' → logprob: -13.500750541687012
    8. '
' → logprob: -13.500750541687012
    9. '```' → logprob: -13.875750541687012
    10. '  ' → logprob: -14.000750541687012

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027285520918667316
    2. '    
' → logprob: -6.377728462219238
    3. 'if' → logprob: -7.627728462219238
    4. ' if' → logprob: -8.377728462219238
    5. '<|end|>' → logprob: -9.002728462219238
    6. '```' → logprob: -9.752728462219238
    7. '
' → logprob: -10.252728462219238
    8. '<|end|>' → logprob: -11.377728462219238
    9. 'break' → logprob: -11.502728462219238
    10. ' ' → logprob: -11.627728462219238

Token 101: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44344818592071533
    2. ' n' → logprob: -1.1934481859207153
    3. '   ' → logprob: -4.443448066711426
    4. ' if' → logprob: -4.568448066711426
    5. 'break' → logprob: -5.193448066711426
    6. ' try' → logprob: -5.443448066711426
    7. ' parts' → logprob: -5.443448066711426
    8. 'try' → logprob: -5.818448066711426
    9. ' break' → logprob: -5.943448066711426
    10. 'if' → logprob: -6.068448066711426

Token 102: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1467919647693634
    2. ',' → logprob: -2.771791934967041
    3. '=' → logprob: -2.771791934967041
    4. '=int' → logprob: -5.021791934967041
    5. 'e' → logprob: -6.896791934967041
    6. '=input' → logprob: -7.146791934967041
    7. 's' → logprob: -7.396791934967041
    8. ' ' → logprob: -7.396791934967041
    9. '=s' → logprob: -8.0217924118042
    10. 'ean' → logprob: -8.7717924118042

Token 103: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30626457929611206
    2. ' n' → logprob: -1.5562646389007568
    3. 's' → logprob: -3.056264638900757
    4. ' s' → logprob: -5.306264400482178
    5. 'k' → logprob: -8.306264877319336
    6. 'b' → logprob: -8.931264877319336
    7. ' k' → logprob: -9.431264877319336
    8. 't' → logprob: -9.806264877319336
    9. ' shelves' → logprob: -9.806264877319336
    10. ' b' → logprob: -10.181264877319336

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016119997948408127
    2. '=' → logprob: -4.141119956970215
    3. ',' → logprob: -9.391119956970215
    4. ' ' → logprob: -13.891119956970215
    5. ')' → logprob: -14.891119956970215
    6. '<|end|>' → logprob: -15.391119956970215
    7. '   ' → logprob: -15.641119956970215
    8. '  ' → logprob: -16.01612091064453
    9. '    ' → logprob: -16.51612091064453
    10. ' ,' → logprob: -16.64112091064453

Token 105: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07931912690401077
    2. 'map' → logprob: -2.5793192386627197
    3. ' line' → logprob: -7.954319000244141
    4. 'line' → logprob: -9.57931900024414
    5. '	map' → logprob: -12.70431900024414
    6. ' ' → logprob: -13.20431900024414
    7. '   ' → logprob: -13.32931900024414
    8. '[' → logprob: -14.32931900024414
    9. 'list' → logprob: -14.70431900024414
    10. ' list' → logprob: -14.70431900024414

Token 106: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008491414599120617
    2. '(' → logprob: -5.008491516113281
    3. '(lambda' → logprob: -6.508491516113281
    4. '(str' → logprob: -8.383491516113281
    5. '(input' → logprob: -10.883491516113281
    6. '[int' → logprob: -11.383491516113281
    7. 'int' → logprob: -12.008491516113281
    8. '<|end|>' → logprob: -12.008491516113281
    9. '<int' → logprob: -12.133491516113281
    10. '(
' → logprob: -12.883491516113281

Token 107: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.037909962236881256
    2. ',' → logprob: -4.162909984588623
    3. ',line' → logprob: -4.287909984588623
    4. '(' → logprob: -5.287909984588623
    5. '(int' → logprob: -6.912909984588623
    6. ' ,' → logprob: -7.412909984588623
    7. '(str' → logprob: -8.162909507751465
    8. ',int' → logprob: -8.412909507751465
    9. '(input' → logprob: -8.662909507751465
    10. ' (' → logprob: -8.912909507751465

Token 108: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10025089234113693
    2. ' line' → logprob: -2.3502509593963623
    3. ')' → logprob: -10.475251197814941
    4. '(line' → logprob: -11.850251197814941
    5. 'input' → logprob: -12.475251197814941
    6. '   ' → logprob: -12.975251197814941
    7. '	line' → logprob: -13.725251197814941
    8. '=line' → logprob: -14.600251197814941
    9. ' ' → logprob: -15.350251197814941
    10. ' input' → logprob: -15.600251197814941

Token 109: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00661317678168416
    2. '.split' → logprob: -5.381613254547119
    3. '()' → logprob: -6.381613254547119
    4. ')' → logprob: -9.006612777709961
    5. '.strip' → logprob: -9.506612777709961
    6. '   ' → logprob: -10.256612777709961
    7. 'split' → logprob: -10.631612777709961
    8. '.' → logprob: -11.631612777709961
    9. '(' → logprob: -11.881612777709961
    10. ' .' → logprob: -11.881612777709961

Token 110: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08558356016874313
    2. '()' → logprob: -3.085583448410034
    3. '('' → logprob: -3.335583448410034
    4. '(','' → logprob: -7.835583686828613
    5. '(' → logprob: -8.710583686828613
    6. ')' → logprob: -9.210583686828613
    7. '())
' → logprob: -10.960583686828613
    8. '(',' → logprob: -11.210583686828613
    9. '()))' → logprob: -11.710583686828613
    10. '("' → logprob: -12.085583686828613

Token 111: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30280792713165283
    2. 'if' → logprob: -2.3028078079223633
    3. '<|end|>' → logprob: -2.5528078079223633
    4. '   ' → logprob: -3.1778078079223633
    5. 's' → logprob: -4.802807807922363
    6. ' 
' → logprob: -5.052807807922363
    7. '    
' → logprob: -5.177807807922363
    8. '
' → logprob: -5.677807807922363
    9. ' max' → logprob: -5.677807807922363
    10. 'max' → logprob: -5.802807807922363

Token 112: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4905705153942108
    2. ' if' → logprob: -0.9905705451965332
    3. 'books' → logprob: -4.865570545196533
    4. ' books' → logprob: -6.115570545196533
    5. 's' → logprob: -6.490570545196533
    6. 'max' → logprob: -6.615570545196533
    7. '   ' → logprob: -6.865570545196533
    8. 'l' → logprob: -7.615570545196533
    9. 'b' → logprob: -8.115570068359375
    10. ' shelves' → logprob: -8.615570068359375

Token 113: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06197473779320717
    2. 'm' → logprob: -2.8119747638702393
    3. ' ' → logprob: -12.31197452545166
    4. ' not' → logprob: -14.56197452545166
    5. ' n' → logprob: -14.68697452545166
    6. '   ' → logprob: -14.81197452545166
    7. ' (' → logprob: -15.18697452545166
    8. ' ' → logprob: -15.18697452545166
    9. '  ' → logprob: -15.43697452545166
    10. '(' → logprob: -15.56197452545166

Token 114: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01740080863237381
    2. '==' → logprob: -4.892400741577148
    3. ' <' → logprob: -5.142400741577148
    4. ' <=' → logprob: -5.642400741577148
    5. ' ' → logprob: -8.892400741577148
    6. '<|end|>' → logprob: -9.142400741577148
    7. ' >=' → logprob: -9.767400741577148
    8. '<=' → logprob: -10.767400741577148
    9. '<' → logprob: -11.017400741577148
    10. ')' → logprob: -12.767400741577148

Token 115: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007611124310642481
    2. ' ' → logprob: -4.882611274719238
    3. 'n' → logprob: -13.132611274719238
    4. '-' → logprob: -14.007611274719238
    5. ' n' → logprob: -14.257611274719238
    6. '   ' → logprob: -14.382611274719238
    7. ' -' → logprob: -15.507611274719238
    8. '  ' → logprob: -15.570111274719238
    9. '۰' → logprob: -15.945111274719238
    10. '```' → logprob: -16.695110321044922

Token 116: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00089442846365273
    2. ' ' → logprob: -7.125894546508789
    3. 'n' → logprob: -10.125894546508789
    4. '-' → logprob: -10.250894546508789
    5. 's' → logprob: -13.000894546508789
    6. 'm' → logprob: -13.250894546508789
    7. 'o' → logprob: -13.313394546508789
    8. '   ' → logprob: -13.438394546508789
    9. ' n' → logprob: -13.500894546508789
    10. ' -' → logprob: -13.625894546508789

Token 117: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03375185653567314
    2. 'and' → logprob: -3.408751964569092
    3. ':' → logprob: -9.283751487731934
    4. ' ' → logprob: -11.533751487731934
    5. '	and' → logprob: -13.408751487731934
    6. '   ' → logprob: -14.908751487731934
    7. '<|end|>' → logprob: -14.908751487731934
    8. ' or' → logprob: -14.908751487731934
    9. ' a' → logprob: -15.283751487731934
    10. '  ' → logprob: -15.783751487731934

Token 118: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47409215569496155
    2. ' n' → logprob: -0.9740921258926392
    3. '   ' → logprob: -11.599092483520508
    4. '	n' → logprob: -12.724092483520508
    5. ' ' → logprob: -13.474092483520508
    6. '  ' → logprob: -13.974092483520508
    7. '    ' → logprob: -14.974092483520508
    8. ' ' → logprob: -15.099092483520508
    9. '0' → logprob: -17.099092483520508
    10. ',n' → logprob: -17.786592483520508

Token 119: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18439072370529175
    2. '==' → logprob: -1.8093907833099365
    3. ' ' → logprob: -6.059390544891357
    4. '<|end|>' → logprob: -6.184390544891357
    5. '0' → logprob: -8.934391021728516
    6. '<|end|>' → logprob: -9.934391021728516
    7. ' =' → logprob: -10.934391021728516
    8. '=' → logprob: -11.309391021728516
    9. ' ' → logprob: -11.809391021728516
    10. '  ' → logprob: -12.309391021728516

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128234788775444
    2. ' ' → logprob: -2.237823486328125
    3. '<|end|>' → logprob: -14.612823486328125
    4. '  ' → logprob: -15.362823486328125
    5. ' ' → logprob: -15.800323486328125
    6. '   ' → logprob: -16.362823486328125
    7. '۰' → logprob: -16.487823486328125
    8. '<|end|>' → logprob: -16.612823486328125
    9. 's' → logprob: -17.175323486328125
    10. '```' → logprob: -17.300323486328125

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.937585830688477
    4. '۰' → logprob: -17.937585830688477
    5. '  ' → logprob: -18.312585830688477
    6. '<|end|>' → logprob: -18.562585830688477
    7. 'o' → logprob: -19.062585830688477
    8. '```' → logprob: -19.125085830688477
    9. ')' → logprob: -19.562585830688477
    10. '-' → logprob: -19.625085830688477

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08452785760164261
    2. ':
' → logprob: -2.8345279693603516
    3. '       ' → logprob: -4.084527969360352
    4. '   ' → logprob: -5.209527969360352
    5. ',' → logprob: -13.084527969360352
    6. '):
' → logprob: -13.459527969360352
    7. '           ' → logprob: -13.834527969360352
    8. ' :' → logprob: -14.084527969360352
    9. '     ' → logprob: -14.209527969360352
    10. ':return' → logprob: -14.209527969360352

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038336371653713286
    2. '   ' → logprob: -8.125383377075195
    3. ':' → logprob: -10.125383377075195
    4. ':
' → logprob: -11.000383377075195
    5. '<|end|>' → logprob: -11.250383377075195
    6. '           ' → logprob: -12.375383377075195
    7. '
' → logprob: -13.250383377075195
    8. ',' → logprob: -13.375383377075195
    9. '      ' → logprob: -13.500383377075195
    10. '        
' → logprob: -13.500383377075195

Token 124: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14197805523872375
    2. ' break' → logprob: -2.2669780254364014
    3. 'break' (adapté à ' break') → logprob: -3.8919780254364014
    4. '   ' → logprob: -4.8919782638549805
    5. '           ' → logprob: -7.5169782638549805
    6. '	break' → logprob: -8.26697826385498
    7. '```' → logprob: -11.89197826385498
    8. ' ' → logprob: -12.39197826385498
    9. '_break' → logprob: -12.76697826385498
    10. '
' → logprob: -12.89197826385498

Token 125: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2786473333835602
    2. '    
' → logprob: -2.0286474227905273
    3. 'books' → logprob: -3.2786474227905273
    4. 's' → logprob: -3.6536474227905273
    5. 'max' → logprob: -4.403647422790527
    6. 'line' → logprob: -5.028647422790527
    7. 'min' → logprob: -5.028647422790527
    8. 'width' → logprob: -5.528647422790527
    9. ' books' → logprob: -5.903647422790527
    10. 'total' → logprob: -5.903647422790527

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4849615693092346
    2. 'books' → logprob: -1.1099615097045898
    3. '    
' → logprob: -3.60996150970459
    4. 'book' → logprob: -4.48496150970459
    5. 'width' → logprob: -5.10996150970459
    6. ' books' → logprob: -5.60996150970459
    7. ' widths' → logprob: -5.98496150970459
    8. 'max' → logprob: -7.23496150970459
    9. 's' → logprob: -7.48496150970459
    10. 'lines' → logprob: -7.48496150970459

Token 127: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' (adapté à ' books') → logprob: -0.019550934433937073
    2. '   ' → logprob: -4.644550800323486
    3. 'width' → logprob: -5.644550800323486
    4. '    
' → logprob: -6.019550800323486
    5. ' widths' → logprob: -6.644550800323486
    6. ' books' → logprob: -6.769550800323486
    7. 'book' → logprob: -7.019550800323486
    8. 'length' → logprob: -8.519551277160645
    9. 'pages' → logprob: -9.769551277160645
    10. 'lines' → logprob: -10.269551277160645

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300239682197571
    2. '=' → logprob: -3.1680023670196533
    3. '=[]' → logprob: -13.668002128601074
    4. '_' → logprob: -13.793002128601074
    5. ' ' → logprob: -15.543002128601074
    6. '   ' → logprob: -15.918002128601074
    7. '_lengths' → logprob: -16.04300308227539
    8. '_width' → logprob: -16.16800308227539
    9. 's' → logprob: -16.29300308227539
    10. ' =[' → logprob: -16.66800308227539

Token 129: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3945884704589844
    2. 'list' → logprob: -1.1445884704589844
    3. '[list' → logprob: -5.519588470458984
    4. '[' → logprob: -6.519588470458984
    5. ' [' → logprob: -6.644588470458984
    6. '[]' → logprob: -7.144588470458984
    7. ' []' → logprob: -9.144588470458984
    8. '[int' → logprob: -13.269588470458984
    9. '[List' → logprob: -13.394588470458984
    10. '=list' → logprob: -14.019588470458984

Token 130: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026646157493814826
    2. ' int' → logprob: -8.250266075134277
    3. '*' → logprob: -12.500266075134277
    4. '   ' → logprob: -14.500266075134277
    5. ']int' → logprob: -14.625266075134277
    6. '<int' → logprob: -16.000267028808594
    7. ' ' → logprob: -16.375267028808594
    8. '  ' → logprob: -16.625267028808594
    9. '(int' → logprob: -16.875267028808594
    10. 'len' → logprob: -17.250267028808594

Token 131: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.009402339346706867
    2. '(' → logprob: -5.009402275085449
    3. '(x' → logprob: -6.009402275085449
    4. '()' → logprob: -9.00940227508545
    5. '(i' → logprob: -9.63440227508545
    6. 'input' → logprob: -11.13440227508545
    7. '(
' → logprob: -11.63440227508545
    8. ']' → logprob: -12.25940227508545
    9. '()]' → logprob: -12.25940227508545
    10. '(

' → logprob: -13.63440227508545

Token 132: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010555591434240341
    2. '().' → logprob: -4.760555744171143
    3. '()' → logprob: -6.260555744171143
    4. '())
' → logprob: -11.260555267333984
    5. ')' → logprob: -12.260555267333984
    6. '()
' → logprob: -12.385555267333984
    7. '()]' → logprob: -12.385555267333984
    8. ' ())' → logprob: -13.135555267333984
    9. '(' → logprob: -15.010555267333984
    10. '())

' → logprob: -15.385555267333984

Token 133: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008137972326949239
    2. '().' → logprob: -7.750813961029053
    3. 'for' → logprob: -8.250813484191895
    4. ' for' → logprob: -9.125813484191895
    5. ' ()' → logprob: -12.125813484191895
    6. ')' → logprob: -12.625813484191895
    7. '(' → logprob: -13.875813484191895
    8. '())' → logprob: -14.125813484191895
    9. '.strip' → logprob: -14.375813484191895
    10. '()
' → logprob: -14.375813484191895

Token 134: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08292103558778763
    2. ' range' → logprob: -2.707921028137207
    3. ' _' → logprob: -4.957921028137207
    4. 'range' → logprob: -5.207921028137207
    5. ' in' → logprob: -7.957921028137207
    6. '_range' → logprob: -10.207921028137207
    7. 'i' → logprob: -12.332921028137207
    8. '(range' → logprob: -12.957921028137207
    9. 'in' → logprob: -13.457921028137207
    10. ' i' → logprob: -13.582921028137207

Token 135: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04974156245589256
    2. ' in' → logprob: -3.549741506576538
    3. ' range' → logprob: -4.049741744995117
    4. 'in' → logprob: -6.049741744995117
    5. '(range' → logprob: -12.674741744995117
    6. '	range' → logprob: -13.049741744995117
    7. 'ange' → logprob: -13.674741744995117
    8. ' xrange' → logprob: -15.799741744995117
    9. ' ' → logprob: -16.049741744995117
    10. ')' → logprob: -16.174741744995117

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -16.50020408630371
    4. '	range' → logprob: -18.50020408630371
    5. '   ' → logprob: -19.50020408630371
    6. 'rang' → logprob: -19.75020408630371
    7. '```' → logprob: -20.00020408630371
    8. '`' → logprob: -20.12520408630371
    9. ' ' → logprob: -20.25020408630371
    10. '  ' → logprob: -20.25020408630371

Token 137: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016861737822182477
    2. 'n' → logprob: -8.750168800354004
    3. ' n' → logprob: -12.375168800354004
    4. ' (' → logprob: -12.500168800354004
    5. '(' → logprob: -13.500168800354004
    6. '	n' → logprob: -14.500168800354004
    7. '   ' → logprob: -15.875168800354004
    8. ')n' → logprob: -16.625167846679688
    9. '<n' → logprob: -16.625167846679688
    10. '_n' → logprob: -18.125167846679688

Token 138: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16101232171058655
    2. ']' → logprob: -1.9110122919082642
    3. ')' → logprob: -7.161012172698975
    4. ' ]' → logprob: -12.036012649536133
    5. '()]' → logprob: -13.286012649536133
    6. ']
' → logprob: -13.911012649536133
    7. '}]' → logprob: -14.036012649536133
    8. '])' → logprob: -14.411012649536133
    9. '`]' → logprob: -14.536012649536133
    10. ' )' → logprob: -15.536012649536133

Token 139: '   ' (ID: 271)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.5471429228782654
    2. 'left' → logprob: -1.1721429824829102
    3. ' low' → logprob: -3.04714298248291
    4. 'min' → logprob: -3.79714298248291
    5. ' left' → logprob: -4.29714298248291
    6. '   ' → logprob: -4.79714298248291
    7. 'lo' → logprob: -5.42214298248291
    8. '```' → logprob: -5.42214298248291
    9. 'max' → logprob: -5.54714298248291
    10. '    
' → logprob: -6.17214298248291

Token 140: ' left' (ID: 3561)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.39056751132011414
    2. 'left' (adapté à ' left') → logprob: -1.1405675411224365
    3. 'lo' → logprob: -5.765567302703857
    4. 'start' → logprob: -8.640567779541016
    5. ' low' → logprob: -8.890567779541016
    6. '```' → logprob: -9.765567779541016
    7. ' left' → logprob: -9.890567779541016
    8. 'min' → logprob: -10.390567779541016
    9. '
' → logprob: -10.515567779541016
    10. 'l' → logprob: -10.515567779541016

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12724421918392181
    2. '=' → logprob: -2.127244234085083
    3. ',' → logprob: -8.127243995666504
    4. '<|end|>' → logprob: -11.002243995666504
    5. ' ,' → logprob: -13.377243995666504
    6. ' ' → logprob: -14.002243995666504
    7. '<|end|>' → logprob: -14.752243995666504
    8. 'space' → logprob: -14.877243995666504
    9. '=int' → logprob: -15.752243995666504
    10. '```' → logprob: -16.12724494934082

Token 142: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10683748126029968
    2. ' max' → logprob: -2.356837511062622
    3. '0' → logprob: -5.731837272644043
    4. '1' → logprob: -5.731837272644043
    5. 'min' → logprob: -9.481837272644043
    6. ' ' → logprob: -10.731837272644043
    7. '(max' → logprob: -11.481837272644043
    8. '=max' → logprob: -11.856837272644043
    9. ' min' → logprob: -11.981837272644043
    10. '	max' → logprob: -13.856837272644043

Token 143: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. '(max' → logprob: -14.750000953674316
    3. '(sum' → logprob: -17.0
    4. 'books' → logprob: -17.0
    5. '(
' → logprob: -18.0
    6. '(book' → logprob: -18.0
    7. ' (' → logprob: -20.0
    8. '((' → logprob: -20.125
    9. '(left' → logprob: -20.25
    10. '(b' → logprob: -20.375

Token 144: 'books' (ID: 20361)
  Prédit: 'books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -4.179569077678025e-05
    2. ' books' → logprob: -10.750041961669922
    3. '(' → logprob: -10.875041961669922
    4. 'book' → logprob: -14.750041961669922
    5. 'b' → logprob: -15.000041961669922
    6. '   ' → logprob: -15.375041961669922
    7. 'max' → logprob: -16.125041961669922
    8. '/books' → logprob: -16.375041961669922
    9. '.books' → logprob: -16.500041961669922
    10. ')' → logprob: -16.500041961669922

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06406433135271072
    2. ' )' → logprob: -2.9390642642974854
    3. ')
' → logprob: -5.3140645027160645
    4. ' )
' → logprob: -6.3140645027160645
    5. '<|end|>' → logprob: -7.0640645027160645
    6. ' ' → logprob: -7.8140645027160645
    7. ',' → logprob: -7.8140645027160645
    8. ' ,' → logprob: -8.189064025878906
    9. ' 
' → logprob: -8.939064025878906
    10. '
' → logprob: -9.939064025878906

Token 146: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.36081662774086
    2. '
' → logprob: -1.6108165979385376
    3. '<|end|>' → logprob: -3.110816717147827
    4. '    
' → logprob: -3.985816717147827
    5. 'right' → logprob: -4.610816478729248
    6. '  
' → logprob: -4.610816478729248
    7. ' right' → logprob: -4.860816478729248
    8. '+' → logprob: -5.985816478729248
    9. '   
' → logprob: -6.110816478729248
    10. '   ' → logprob: -6.110816478729248

Token 147: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.5759465098381042
    2. ' right' → logprob: -0.8259465098381042
    3. ' 
' → logprob: -13.575946807861328
    4. '	right' → logprob: -13.575946807861328
    5. '_right' → logprob: -13.700946807861328
    6. ',right' → logprob: -14.325946807861328
    7. 'Right' → logprob: -14.450946807861328
    8. '    
' → logprob: -14.575946807861328
    9. ',' → logprob: -14.825946807861328
    10. '   ' → logprob: -15.075946807861328

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016034485772252083
    2. '=' → logprob: -4.1410346031188965
    3. ' ' → logprob: -16.766035079956055
    4. ',' → logprob: -17.391035079956055
    5. '=int' → logprob: -17.391035079956055
    6. '=max' → logprob: -18.016035079956055
    7. '<|end|>' → logprob: -18.141035079956055
    8. '=m' → logprob: -18.891035079956055
    9. ' =)' → logprob: -18.891035079956055
    10. 'm' → logprob: -19.016035079956055

Token 149: ' ' (ID: 220)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.1429881751537323
    2. 'sum' → logprob: -2.0179882049560547
    3. ' ' → logprob: -8.767988204956055
    4. ' m' → logprob: -9.642988204956055
    5. 'm' → logprob: -10.142988204956055
    6. ' max' → logprob: -10.892988204956055
    7. '	sum' → logprob: -11.767988204956055
    8. '(sum' → logprob: -11.892988204956055
    9. 'max' → logprob: -12.142988204956055
    10. '=sum' → logprob: -12.767988204956055

Token 150: '150' (ID: 5215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00016671013145241886
    2. ' sum' → logprob: -8.750166893005371
    3. 'max' → logprob: -12.625166893005371
    4. '(sum' → logprob: -13.375166893005371
    5. '10' → logprob: -13.500166893005371
    6. '100' → logprob: -14.500166893005371
    7. '=sum' → logprob: -15.000166893005371
    8. 'su' → logprob: -15.250166893005371
    9. '	sum' → logprob: -15.500166893005371
    10. 'left' → logprob: -15.500166893005371

Token 151: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013580734841525555
    2. '000' → logprob: -4.888580799102783
    3. '00' → logprob: -5.263580799102783
    4. '1' → logprob: -7.638580799102783
    5. '*' → logprob: -8.888580322265625
    6. ' ' → logprob: -10.013580322265625
    7. '_' → logprob: -10.513580322265625
    8. ' *' → logprob: -10.888580322265625
    9. '001' → logprob: -11.013580322265625
    10. '   ' → logprob: -11.263580322265625

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008738311938941479
    2. '1' → logprob: -5.5087385177612305
    3. '000' → logprob: -5.8837385177612305
    4. '00' → logprob: -6.7587385177612305
    5. '+' → logprob: -7.7587385177612305
    6. '
' → logprob: -8.75873851776123
    7. ' +' → logprob: -10.13373851776123
    8. '*' → logprob: -10.50873851776123
    9. ' ' → logprob: -11.63373851776123
    10. '001' → logprob: -11.88373851776123

Token 153: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4674866497516632
    2. '
' → logprob: -1.4674866199493408
    3. ' 
' → logprob: -2.342486619949341
    4. ' +' → logprob: -3.967486619949341
    5. '<|end|>' → logprob: -4.21748685836792
    6. '  
' → logprob: -5.46748685836792
    7. '    
' → logprob: -5.96748685836792
    8. ' ' → logprob: -6.21748685836792
    9. '+
' → logprob: -6.21748685836792
    10. 'while' → logprob: -7.96748685836792

Token 154: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.4258488714694977
    2. 'while' → logprob: -1.5508488416671753
    3. '
' → logprob: -2.300848960876465
    4. '   ' → logprob: -4.675848960876465
    5. '<|end|>' → logprob: -4.675848960876465
    6. '    
' → logprob: -4.925848960876465
    7. ' 
' → logprob: -5.175848960876465
    8. '  
' → logprob: -6.425848960876465
    9. '	while' → logprob: -7.550848960876465
    10. '   
' → logprob: -8.425848960876465

Token 155: ' ans' (ID: 3345)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5888543128967285
    2. ' while' → logprob: -0.8388543128967285
    3. '
' → logprob: -4.4638543128967285
    4. ' 
' → logprob: -6.8388543128967285
    5. '   ' → logprob: -9.21385383605957
    6. '    
' → logprob: -10.21385383605957
    7. ' ' → logprob: -10.46385383605957
    8. '  
' → logprob: -10.96385383605957
    9. 'mid' → logprob: -11.21385383605957
    10. 'result' → logprob: -11.58885383605957

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486382357776165
    2. '=' → logprob: -3.048638343811035
    3. ' ' → logprob: -10.048638343811035
    4. '_' → logprob: -12.673638343811035
    5. ' =
' → logprob: -13.798638343811035
    6. 'space' → logprob: -14.423638343811035
    7. ',' → logprob: -14.548638343811035
    8. ')' → logprob: -14.798638343811035
    9. '  ' → logprob: -14.923638343811035
    10. '_space' → logprob: -15.298638343811035

Token 157: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6949980854988098
    2. 'right' → logprob: -0.6949980854988098
    3. '150' → logprob: -6.319998264312744
    4. '0' → logprob: -10.694997787475586
    5. '	right' → logprob: -11.694997787475586
    6. '[right' → logprob: -12.069997787475586
    7. ' None' → logprob: -12.819997787475586
    8. ' ' → logprob: -13.194997787475586
    9. 'left' → logprob: -13.694997787475586
    10. ':right' → logprob: -13.944997787475586

Token 158: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.882545530796051
    2. '
' → logprob: -0.882545530796051
    3. ' 
' → logprob: -2.0075454711914062
    4. '<|end|>' → logprob: -4.507545471191406
    5. ' +' → logprob: -4.632545471191406
    6. ' ' → logprob: -4.757545471191406
    7. '  
' → logprob: -5.257545471191406
    8. ' while' → logprob: -7.132545471191406
    9. 'while' → logprob: -7.257545471191406
    10. '   
' → logprob: -7.382545471191406

Token 159: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.37720975279808044
    2. 'while' → logprob: -1.5022097826004028
    3. '
' → logprob: -2.7522096633911133
    4. '   ' → logprob: -4.377209663391113
    5. ' 
' → logprob: -4.502209663391113
    6. '    
' → logprob: -6.002209663391113
    7. '<|end|>' → logprob: -6.877209663391113
    8. '  
' → logprob: -8.377209663391113
    9. '	while' → logprob: -9.252209663391113
    10. '   
' → logprob: -9.502209663391113

Token 160: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0067590675316751
    2. ' while' → logprob: -5.006759166717529
    3. '   ' → logprob: -10.256758689880371
    4. '
' → logprob: -11.756758689880371
    5. '    
' → logprob: -14.506758689880371
    6. ' 
' → logprob: -16.506759643554688
    7. '	while' → logprob: -16.631759643554688
    8. '```' → logprob: -16.881759643554688
    9. 'While' → logprob: -17.006759643554688
    10. 'mid' → logprob: -18.256759643554688

Token 161: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.02975292131304741
    2. 'left' → logprob: -3.5297529697418213
    3. '	left' → logprob: -13.404752731323242
    4. '(left' → logprob: -14.154752731323242
    5. ' lef' → logprob: -16.529752731323242
    6. '[left' → logprob: -16.904752731323242
    7. '```' → logprob: -17.029752731323242
    8. '_left' → logprob: -17.154752731323242
    9. ' right' → logprob: -17.404752731323242
    10. 'Left' → logprob: -17.529752731323242

Token 162: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6028959155082703
    2. ' <=' → logprob: -0.8528959155082703
    3. '<' → logprob: -3.852895975112915
    4. ' <' → logprob: -5.227895736694336
    5. ' ' → logprob: -11.977895736694336
    6. ' ' → logprob: -12.727895736694336
    7. '<len' → logprob: -13.727895736694336
    8. ')<=' → logprob: -14.852895736694336
    9. '≤' → logprob: -14.977895736694336
    10. '<int' → logprob: -14.977895736694336

Token 163: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.02975083328783512
    2. ' right' → logprob: -3.5297508239746094
    3. '	right' → logprob: -15.27975082397461
    4. ' ' → logprob: -16.52975082397461
    5. '[right' → logprob: -17.65475082397461
    6. 'ight' → logprob: -17.77975082397461
    7. '(right' → logprob: -18.15475082397461
    8. 'rightness' → logprob: -18.40475082397461
    9. '_right' → logprob: -18.52975082397461
    10. 'rig' → logprob: -19.27975082397461

Token 164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032594730146229267
    2. ':
' → logprob: -5.753259658813477
    3. '   ' → logprob: -10.503259658813477
    4. '<|end|>' → logprob: -10.503259658813477
    5. ' :' → logprob: -10.878259658813477
    6. '       ' → logprob: -12.878259658813477
    7. '<|end|>' → logprob: -13.253259658813477
    8. ':

' → logprob: -14.128259658813477
    9. ' :
' → logprob: -14.253259658813477
    10. ',' → logprob: -14.753259658813477

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43463441729545593
    2. '<|end|>' → logprob: -1.5596344470977783
    3. ' 
' → logprob: -2.5596344470977783
    4. '    ' → logprob: -4.309634208679199
    5. '        
' → logprob: -4.684634208679199
    6. '
' → logprob: -4.809634208679199
    7. ' ' → logprob: -5.059634208679199
    8. '    
' → logprob: -5.184634208679199
    9. '   ' → logprob: -5.309634208679199
    10. ' mid' → logprob: -5.434634208679199

Token 166: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.018161648884415627
    2. 'mid' (adapté à ' mid') → logprob: -4.018161773681641
    3. ' midpoint' → logprob: -12.64316177368164
    4. ' middle' → logprob: -12.76816177368164
    5. '   ' → logprob: -13.64316177368164
    6. '    ' → logprob: -13.64316177368164
    7. '       ' → logprob: -13.76816177368164
    8. '[mid' → logprob: -13.89316177368164
    9. '_mid' → logprob: -15.01816177368164
    10. ' mids' → logprob: -15.51816177368164

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014256003312766552
    2. '=' → logprob: -4.389256000518799
    3. '<|end|>' → logprob: -6.389256000518799
    4. ')' → logprob: -10.514256477355957
    5. ' ' → logprob: -10.889256477355957
    6. '=int' → logprob: -11.639256477355957
    7. '<|end|>' → logprob: -12.264256477355957
    8. '=(' → logprob: -13.639256477355957
    9. ' =
' → logprob: -14.014256477355957
    10. '```' → logprob: -14.139256477355957

Token 168: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.5759626030921936
    2. ' (' → logprob: -0.8259626030921936
    3. 'left' → logprob: -11.700963020324707
    4. ' left' → logprob: -11.825963020324707
    5. '[left' → logprob: -12.325963020324707
    6. '   ' → logprob: -13.700963020324707
    7. ' ' → logprob: -14.575963020324707
    8. '(mid' → logprob: -15.075963020324707
    9. '(right' → logprob: -15.200963020324707
    10. '(lhs' → logprob: -15.825963020324707

Token 169: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.006717863027006388
    2. ' left' → logprob: -5.006717681884766
    3. 'right' → logprob: -13.506717681884766
    4. ' ' → logprob: -14.631717681884766
    5. '	left' → logprob: -14.881717681884766
    6. '   ' → logprob: -16.131717681884766
    7. '(left' → logprob: -16.631717681884766
    8. '[left' → logprob: -17.381717681884766
    9. '_left' → logprob: -17.631717681884766
    10. ' lef' → logprob: -18.006717681884766

Token 170: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141343772411346
    2. '+' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.701414108276367
    4. ' plus' → logprob: -17.701414108276367
    5. ')' → logprob: -18.201414108276367
    6. ' ' → logprob: -18.451414108276367
    7. '```' → logprob: -18.701414108276367
    8. '	' → logprob: -18.826414108276367
    9. ' +
' → logprob: -19.076414108276367
    10. '＋' → logprob: -19.201414108276367

Token 171: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519404888153076
    2. ' right' → logprob: -1.5019404888153076
    3. ' ' → logprob: -11.876940727233887
    4. '	right' → logprob: -13.001940727233887
    5. '   ' → logprob: -13.251940727233887
    6. '  ' → logprob: -15.626940727233887
    7. '[right' → logprob: -16.50193977355957
    8. '_right' → logprob: -16.62693977355957
    9. '(right' → logprob: -16.87693977355957
    10. ')' → logprob: -17.00193977355957

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020735491125378758
    2. ')//' → logprob: -8.62520694732666
    3. ' )' → logprob: -10.50020694732666
    4. ')>>' → logprob: -15.75020694732666
    5. ')
' → logprob: -18.000207901000977
    6. '   ' → logprob: -18.750207901000977
    7. ' ' → logprob: -19.375207901000977
    8. '）' → logprob: -19.625207901000977
    9. '//' → logprob: -20.000207901000977
    10. ']' → logprob: -20.625207901000977

Token 173: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0017132589127868414
    2. '//' → logprob: -6.376713275909424
    3. ')' → logprob: -12.251712799072266
    4. ' ' → logprob: -12.751712799072266
    5. '```' → logprob: -14.001712799072266
    6. '   ' → logprob: -14.251712799072266
    7. ' ' → logprob: -14.376712799072266
    8. '>>' → logprob: -14.626712799072266
    9. ')//' → logprob: -15.001712799072266
    10. '
' → logprob: -15.501712799072266

Token 174: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005234952084720135
    2. ' ' → logprob: -5.255234718322754
    3. '   ' → logprob: -14.130234718322754
    4. '  ' → logprob: -16.00523567199707
    5. '```' → logprob: -16.56773567199707
    6. '۲' → logprob: -17.31773567199707
    7. ' ' → logprob: -17.50523567199707
    8. '=' → logprob: -17.81773567199707
    9. '    ' → logprob: -18.00523567199707
    10. '２' → logprob: -18.06773567199707

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.375011444091797
    4. '   ' → logprob: -17.875011444091797
    5. '۲' → logprob: -18.687511444091797
    6. '２' → logprob: -19.062511444091797
    7. '3' → logprob: -19.687511444091797
    8. '=' → logprob: -20.125011444091797
    9. '  ' → logprob: -20.250011444091797
    10. '२' → logprob: -20.312511444091797

Token 176: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00355326640419662
    2. ' if' → logprob: -6.12855339050293
    3. '<|end|>' → logprob: -7.12855339050293
    4. '
' → logprob: -7.87855339050293
    5. 'if' → logprob: -9.00355339050293
    6. '        
' → logprob: -10.62855339050293
    7. '   ' → logprob: -10.87855339050293
    8. '<|end|>' → logprob: -11.50355339050293
    9. '           ' → logprob: -13.37855339050293
    10. '  
' → logprob: -13.87855339050293

Token 178: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3064095675945282
    2. 'if' (adapté à ' if') → logprob: -1.8064095973968506
    3. '       ' → logprob: -2.3064095973968506
    4. '   ' → logprob: -10.18140983581543
    5. '	if' → logprob: -11.93140983581543
    6. '
' → logprob: -12.43140983581543
    7. ' ' → logprob: -13.80640983581543
    8. '        
' → logprob: -13.93140983581543
    9. 'If' → logprob: -13.93140983581543
    10. '	' → logprob: -14.80640983581543

Token 179: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.31326377391815186
    2. 'can' → logprob: -1.3132637739181519
    3. '	can' → logprob: -13.563263893127441
    4. '(can' → logprob: -14.688263893127441
    5. '   ' → logprob: -15.563263893127441
    6. '_can' → logprob: -15.688263893127441
    7. '.can' → logprob: -17.063262939453125
    8. ' ' → logprob: -17.813262939453125
    9. 'Can' → logprob: -17.813262939453125
    10. ' not' → logprob: -18.438262939453125

Token 180: '_fit' (ID: 79598)
  Prédit: '_fit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_fit' → logprob: -1.8624639324116288e-06
    2. '_f' → logprob: -14.375001907348633
    3. ' _' → logprob: -14.500001907348633
    4. '_' → logprob: -14.625001907348633
    5. '_can' → logprob: -15.375001907348633
    6. '_fill' → logprob: -17.875001907348633
    7. '```' → logprob: -18.750001907348633
    8. 'fit' → logprob: -19.250001907348633
    9. '_find' → logprob: -19.625001907348633
    10. '_fix' → logprob: -19.875001907348633

Token 181: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.125008583068848
    3. ' (' → logprob: -13.250008583068848
    4. '[mid' → logprob: -13.875008583068848
    5. '(m' → logprob: -15.125008583068848
    6. '(mi' → logprob: -16.500009536743164
    7. '(
' → logprob: -16.875009536743164
    8. ' mid' → logprob: -17.750009536743164
    9. '(width' → logprob: -18.625009536743164
    10. '(max' → logprob: -19.250009536743164

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013584480620920658
    2. ' ,' → logprob: -6.751358509063721
    3. ',s' → logprob: -8.751358032226562
    4. ',n' → logprob: -11.376358032226562
    5. ',m' → logprob: -11.626358032226562
    6. ',width' → logprob: -12.376358032226562
    7. '       ' → logprob: -13.626358032226562
    8. '           ' → logprob: -13.626358032226562
    9. '   ' → logprob: -13.876358032226562
    10. ',
' → logprob: -14.126358032226562

Token 183: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0011946328449994326
    2. ' m' → logprob: -6.751194477081299
    3. '   ' → logprob: -10.751194953918457
    4. ' ' → logprob: -13.376194953918457
    5. '  ' → logprob: -14.751194953918457
    6. 's' → logprob: -15.001194953918457
    7. '    ' → logprob: -15.251194953918457
    8. 'n' → logprob: -15.626194953918457
    9. '
' → logprob: -16.25119400024414
    10. '	m' → logprob: -16.37619400024414

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012451570364646614
    2. ' ,' → logprob: -9.00012493133545
    3. 'books' → logprob: -15.62512493133545
    4. 's' → logprob: -15.87512493133545
    5. ' books' → logprob: -16.000123977661133
    6. ',s' → logprob: -16.250123977661133
    7. '   ' → logprob: -16.375123977661133
    8. ',
' → logprob: -16.625123977661133
    9. '```' → logprob: -16.625123977661133
    10. ')' → logprob: -16.750123977661133

Token 185: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.023246755823493004
    2. ' books' → logprob: -3.7732467651367188
    3. 'n' → logprob: -14.898246765136719
    4. '.books' → logprob: -14.898246765136719
    5. '   ' → logprob: -15.273246765136719
    6. 'book' → logprob: -16.39824676513672
    7. '_books' → logprob: -16.39824676513672
    8. ' ' → logprob: -17.52324676513672
    9. '/books' → logprob: -17.64824676513672
    10. 'b' → logprob: -17.89824676513672

Token 186: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06198841333389282
    2. '):' → logprob: -2.811988353729248
    3. ' ):
' → logprob: -11.686988830566406
    4. '):
' → logprob: -12.311988830566406
    5. ':' → logprob: -12.436988830566406
    6. ':
' → logprob: -13.186988830566406
    7. ' ):' → logprob: -13.936988830566406
    8. '   ' → logprob: -14.936988830566406
    9. '       ' → logprob: -15.186988830566406
    10. '):

' → logprob: -15.186988830566406

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1294013261795044
    2. '
' → logprob: -2.629401206970215
    3. '       ' → logprob: -3.504401206970215
    4. ':
' → logprob: -5.004401206970215
    5. 'right' → logprob: -5.129401206970215
    6. ' right' → logprob: -5.379401206970215
    7. '        
' → logprob: -7.254401206970215
    8. '            
' → logprob: -7.629401206970215
    9. ':' → logprob: -8.504401206970215
    10. '):
' → logprob: -9.379401206970215

Token 188: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26768696308135986
    2. ' ans' → logprob: -1.7676869630813599
    3. 'ans' (adapté à ' ans') → logprob: -2.7676868438720703
    4. ' 
' → logprob: -7.01768684387207
    5. ' right' → logprob: -9.01768684387207
    6. '	ans' → logprob: -9.39268684387207
    7. 'right' → logprob: -10.01768684387207
    8. '       ' → logprob: -10.26768684387207
    9. '   ' → logprob: -10.26768684387207
    10. '           ' → logprob: -10.39268684387207

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006715370807796717
    2. '=' → logprob: -5.006715297698975
    3. ' ' → logprob: -17.131715774536133
    4. '＝' → logprob: -20.506715774536133
    5. '   ' → logprob: -20.631715774536133
    6. '=cut' → logprob: -20.631715774536133
    7. ')' → logprob: -20.631715774536133
    8. ' =)' → logprob: -21.006715774536133
    9. '    ' → logprob: -21.131715774536133
    10. '=end' → logprob: -21.256715774536133

Token 190: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.31326204538345337
    2. ' mid' → logprob: -1.3132619857788086
    3. '[mid' → logprob: -15.188261985778809
    4. '(mid' → logprob: -15.938261985778809
    5. '
' → logprob: -18.813262939453125
    6. ' midpoint' → logprob: -19.063262939453125
    7. '_mid' → logprob: -19.438262939453125
    8. '.mid' → logprob: -20.313262939453125
    9. ' ' → logprob: -20.313262939453125
    10. 'min' → logprob: -20.938262939453125

Token 191: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20517653226852417
    2. '
' → logprob: -1.705176591873169
    3. '            
' → logprob: -6.58017635345459
    4. ' 
' → logprob: -7.08017635345459
    5. '    
' → logprob: -7.20517635345459
    6. '       ' → logprob: -7.83017635345459
    7. '        
' → logprob: -8.58017635345459
    8. '  
' → logprob: -9.20517635345459
    9. '
' → logprob: -11.08017635345459
    10. '<|end|>' → logprob: -11.08017635345459

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3917151093482971
    2. '
' → logprob: -1.1417150497436523
    3. 'right' → logprob: -6.266715049743652
    4. '       ' → logprob: -6.516715049743652
    5. ' right' → logprob: -6.641715049743652
    6. ' 
' → logprob: -10.266715049743652
    7. '
' → logprob: -10.641715049743652
    8. '    
' → logprob: -10.641715049743652
    9. '            
' → logprob: -11.016715049743652
    10. '   ' → logprob: -11.016715049743652

Token 193: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.023247109726071358
    2. ' right' → logprob: -3.773247003555298
    3. '           ' → logprob: -14.148246765136719
    4. '   ' → logprob: -15.023246765136719
    5. '
' → logprob: -15.273246765136719
    6. '	right' → logprob: -15.648246765136719
    7. '       ' → logprob: -16.27324676513672
    8. '[right' → logprob: -16.64824676513672
    9. '.right' → logprob: -17.27324676513672
    10. '_right' → logprob: -17.52324676513672

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132645785808563
    2. '=' → logprob: -1.3132646083831787
    3. ' -=' → logprob: -12.813264846801758
    4. ' ' → logprob: -16.438264846801758
    5. '-=' → logprob: -16.813264846801758
    6. '.=' → logprob: -17.188264846801758
    7. '＝' → logprob: -18.313264846801758
    8. ' =
' → logprob: -19.188264846801758
    9. '<|end|>' → logprob: -19.563264846801758
    10. ' .=' → logprob: -19.688264846801758

Token 195: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.07889000326395035
    2. ' mid' → logprob: -2.578890085220337
    3. '[mid' → logprob: -15.828889846801758
    4. '(mid' → logprob: -16.703889846801758
    5. '   ' → logprob: -17.078889846801758
    6. '_mid' → logprob: -18.453889846801758
    7. ' midpoint' → logprob: -19.453889846801758
    8. ' ' → logprob: -19.453889846801758
    9. '.mid' → logprob: -20.078889846801758
    10. 'midt' → logprob: -20.453889846801758

Token 196: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.000718626833986491
    2. ' ' → logprob: -7.750718593597412
    3. '-' → logprob: -8.25071907043457
    4. ' =' → logprob: -11.00071907043457
    5. 'mid' → logprob: -12.25071907043457
    6. ' mid' → logprob: -12.75071907043457
    7. '=' → logprob: -13.25071907043457
    8. '[mid' → logprob: -15.50071907043457
    9. ' ' → logprob: -15.62571907043457
    10. '   ' → logprob: -15.87571907043457

Token 197: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -18.500123977661133
    4. '   ' → logprob: -19.875123977661133
    5. ' ' → logprob: -21.875123977661133
    6. '100' → logprob: -22.375123977661133
    7. '0' → logprob: -22.375123977661133
    8. '[' → logprob: -22.937623977661133
    9. '           ' → logprob: -23.187623977661133
    10. '       ' → logprob: -23.312623977661133

Token 198: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '```' → logprob: -19.500001907348633
    5. '
' → logprob: -21.125001907348633
    6. '       ' → logprob: -21.687501907348633
    7. '100' → logprob: -21.875001907348633
    8. '           ' → logprob: -22.000001907348633
    9. '۱' → logprob: -22.000001907348633
    10. '0' → logprob: -22.125001907348633

Token 199: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007090076804161072
    2. ' else' → logprob: -5.382090091705322
    3. 'else' → logprob: -6.007090091705322
    4. '   ' → logprob: -12.257089614868164
    5. '	else' → logprob: -14.882089614868164
    6. '      ' → logprob: -15.257089614868164
    7. '```' → logprob: -16.507089614868164
    8. '	' → logprob: -17.132089614868164
    9. '
' → logprob: -17.132089614868164
    10. '     ' → logprob: -17.757089614868164

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010785816237330437
    2. 'else' → logprob: -4.8857855796813965
    3. ' else' → logprob: -5.7607855796813965
    4. '   ' → logprob: -10.635786056518555
    5. '	else' → logprob: -13.885786056518555
    6. '	' → logprob: -14.385786056518555
    7. '```' → logprob: -15.385786056518555
    8. '      ' → logprob: -16.260786056518555
    9. '    
' → logprob: -17.635786056518555
    10. '           ' → logprob: -17.635786056518555

Token 201: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.0224045515060425
    2. 'else' (adapté à ' else') → logprob: -1.0224045515060425
    3. '       ' → logprob: -1.2724045515060425
    4. '   ' → logprob: -7.897404670715332
    5. '	else' → logprob: -11.397404670715332
    6. '	' → logprob: -13.897404670715332
    7. '    ' → logprob: -14.772404670715332
    8. ' ' → logprob: -15.022404670715332
    9. '      ' → logprob: -16.147403717041016
    10. '  ' → logprob: -16.772403717041016

Token 202: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020122883841395378
    2. ':
' → logprob: -4.64512300491333
    3. ':' → logprob: -4.89512300491333
    4. ' left' → logprob: -7.14512300491333
    5. ':left' → logprob: -7.27012300491333
    6. 'left' → logprob: -7.64512300491333
    7. '[left' → logprob: -7.77012300491333
    8. '   ' → logprob: -9.145122528076172
    9. '       ' → logprob: -9.395122528076172
    10. '	left' → logprob: -9.645122528076172

Token 203: '           ' (ID: 352)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0671820417046547
    2. ' left' → logprob: -3.0671820640563965
    3. '           ' → logprob: -4.5671820640563965
    4. '       ' → logprob: -5.0671820640563965
    5. '   ' → logprob: -6.4421820640563965
    6. '	left' → logprob: -8.942181587219238
    7. ' ' → logprob: -12.817181587219238
    8. '[left' → logprob: -12.817181587219238
    9. ',left' → logprob: -13.442181587219238
    10. '.left' → logprob: -13.442181587219238

Token 204: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.5763980150222778
    2. ' left' → logprob: -0.8263980150222778
    3. '   ' → logprob: -8.326397895812988
    4. '	left' → logprob: -8.701397895812988
    5. '       ' → logprob: -10.451397895812988
    6. '[left' → logprob: -11.701397895812988
    7. '           ' → logprob: -12.951397895812988
    8. '_left' → logprob: -13.076397895812988
    9. '               ' → logprob: -13.201397895812988
    10. '    ' → logprob: -13.326397895812988

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759395360946655
    2. ' =' → logprob: -0.8259395360946655
    3. ' +=' → logprob: -16.825939178466797
    4. '+=' → logprob: -17.575939178466797
    5. ' ' → logprob: -19.700939178466797
    6. '＝' → logprob: -19.700939178466797
    7. '.=' → logprob: -20.950939178466797
    8. '=}' → logprob: -21.575939178466797
    9. ')' → logprob: -21.950939178466797
    10. '            ' → logprob: -22.325939178466797

Token 206: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.575951099395752
    2. 'mid' → logprob: -0.825951099395752
    3. '(mid' → logprob: -11.825950622558594
    4. '[mid' → logprob: -12.950950622558594
    5. ' midpoint' → logprob: -13.450950622558594
    6. '_mid' → logprob: -14.825950622558594
    7. '.mid' → logprob: -16.825950622558594
    8. ' ' → logprob: -16.950950622558594
    9. '           ' → logprob: -17.450950622558594
    10. '    ' → logprob: -17.575950622558594

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020678490400314
    2. ' +' → logprob: -2.3502068519592285
    3. '＋' → logprob: -16.47520637512207
    4. '```' → logprob: -17.72520637512207
    5. 'mid' → logprob: -18.10020637512207
    6. '           ' → logprob: -18.60020637512207
    7. 'plus' → logprob: -18.85020637512207
    8. '1' → logprob: -18.97520637512207
    9. '   ' → logprob: -19.10020637512207
    10. '+
' → logprob: -19.47520637512207

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009117019944824278
    2. ' ' → logprob: -7.000911712646484
    3. '```' → logprob: -16.000911712646484
    4. '   ' → logprob: -16.875911712646484
    5. '<|end|>' → logprob: -17.125911712646484
    6. '0' → logprob: -17.125911712646484
    7. '           ' → logprob: -18.750911712646484
    8. '       ' → logprob: -18.750911712646484
    9. 'def' → logprob: -19.500911712646484
    10. '=' → logprob: -19.875911712646484

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -16.75000762939453
    4. '   ' → logprob: -18.12500762939453
    5. 'def' → logprob: -19.75000762939453
    6. '0' → logprob: -19.81250762939453
    7. '       ' → logprob: -20.50000762939453
    8. '           ' → logprob: -20.62500762939453
    9. '+' → logprob: -20.75000762939453
    10. '۱' → logprob: -20.81250762939453

Token 210: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5844641327857971
    2. '   ' → logprob: -0.8344641327857971
    3. '
' → logprob: -4.834464073181152
    4. '    
' → logprob: -7.959464073181152
    5. ' print' → logprob: -8.834464073181152
    6. '```' → logprob: -10.459464073181152
    7. '  
' → logprob: -11.959464073181152
    8. '
' → logprob: -13.084464073181152
    9. '        
' → logprob: -13.459464073181152
    10. '	print' → logprob: -14.084464073181152

Token 211: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01120331883430481
    2. '   ' → logprob: -4.511203289031982
    3. '
' → logprob: -9.51120376586914
    4. ' print' → logprob: -9.51120376586914
    5. '```' → logprob: -12.13620376586914
    6. '    
' → logprob: -13.26120376586914
    7. '#print' → logprob: -16.38620376586914
    8. '	print' → logprob: -16.63620376586914
    9. '  
' → logprob: -17.01120376586914
    10. '(print' → logprob: -17.38620376586914

Token 212: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1041145626222715e-05
    2. '   ' → logprob: -12.000011444091797
    3. ' print' → logprob: -12.250011444091797
    4. '```' → logprob: -17.500011444091797
    5. '
' → logprob: -21.250011444091797
    6. '    
' → logprob: -22.000011444091797
    7. '``' → logprob: -22.000011444091797
    8. '	print' → logprob: -22.500011444091797
    9. 'for' → logprob: -23.625011444091797
    10. '`' → logprob: -23.625011444091797

Token 213: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.75
    3. 'ans' → logprob: -17.25
    4. ' (' → logprob: -18.375
    5. '(answer' → logprob: -18.875
    6. '(abs' → logprob: -20.25
    7. '(f' → logprob: -20.5
    8. '	ans' → logprob: -20.875
    9. '()' → logprob: -21.375
    10. '(opt' → logprob: -21.75

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -15.625001907348633
    4. ')`' → logprob: -17.000001907348633
    5. '))' → logprob: -18.500001907348633
    6. '()' → logprob: -18.750001907348633
    7. '())' → logprob: -18.875001907348633
    8. '`)' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.500001907348633
    10. '}' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 212
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 196
Précision stricte (1ère position): 43.40%
Précision adaptée (1ère position): 48.11%
Précision (top 10): 92.45%
================================================================================
