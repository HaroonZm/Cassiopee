================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re

def main():
    weights = {}
    for line in sys.stdin:
        line=line.strip()
        if line=="END_OF_FIRST_PART":
            break
        if not line:
            continue
        symbol, w = line.split()
        weights[symbol] = int(w)

    pattern_atom = r'[A-Z][a-z]?'
    pattern_num = r'\d{1,2}'
    formula_lines = []
    for line in sys.stdin:
        line=line.strip()
        if line=="0":
            break
        formula_lines.append(line)

    for formula in formula_lines:
        try:
            total = parse_formula(formula, weights)
            print(total)
        except:
            print("UNKNOWN")

def parse_formula(formula, weights):
    pos = 0
    n = len(formula)

    def parse_atom():
        nonlocal pos
        if pos>=n:
            raise ValueError
        if not formula[pos].isupper():
            raise ValueError
        sym=formula[pos]
        pos+=1
        if pos<n and formula[pos].islower():
            sym+=formula[pos]
            pos+=1
        return sym

    def parse_num():
        nonlocal pos
        start=pos
        while pos<n and formula[pos].isdigit():
            pos+=1
        if start==pos:
            return 1
        num=int(formula[start:pos])
        if num<2 or num>99:
            raise ValueError
        return num

    def helper():
        nonlocal pos
        subweights = {}
        while pos<n:
            c = formula[pos]
            if c=='(':
                pos+=1
                inner = helper()
                if pos>=n or formula[pos]!=')':
                    raise ValueError
                pos+=1
                m = parse_num()
                for k,v in inner.items():
                    subweights[k] = subweights.get(k,0)+v*m
            elif c==')':
                break
            elif c.isupper():
                sym = parse_atom()
                if sym not in weights:
                    raise ValueError
                m = parse_num()
                subweights[sym] = subweights.get(sym,0)+m
            else:
                raise ValueError
        return subweights

    counts = helper()
    if pos!=n:
        raise ValueError
    total_weight = 0
    for k,v in counts.items():
        total_weight+=weights[k]*v
    return total_weight

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6415063142776489
    2. '.' → logprob: -0.8915063142776489
    3. 'import' → logprob: -4.016506195068359
    4. 'newline' → logprob: -4.266506195068359
    5. '\' → logprob: -4.766506195068359
    6. '<|end|>' → logprob: -4.891506195068359
    7. '```' → logprob: -5.391506195068359
    8. '
' → logprob: -5.766506195068359
    9. '<|end|>' → logprob: -6.516506195068359
    10. '' → logprob: -6.516506195068359

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1981186866760254
    2. '.' → logprob: -2.0731186866760254
    3. '\' → logprob: -4.073118686676025
    4. 'import' → logprob: -4.573118686676025
    5. '[' → logprob: -5.073118686676025
    6. '```' → logprob: -5.323118686676025
    7. ',' → logprob: -5.948118686676025
    8. '
' → logprob: -6.073118686676025
    9. '

' → logprob: -6.073118686676025
    10. 'newline' → logprob: -6.823118686676025

Token 6: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1181093454360962
    2. 'import' → logprob: -1.6181093454360962
    3. 'def' → logprob: -2.1181092262268066
    4. '```' → logprob: -2.2431092262268066
    5. '^' → logprob: -2.8681092262268066
    6. 'pattern' → logprob: -2.9931092262268066
    7. '\' → logprob: -3.3681092262268066
    8. '#' → logprob: -3.6181092262268066
    9. '.' → logprob: -3.9931092262268066
    10. '[' → logprob: -4.368109226226807

Token 7: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5596116185188293
    2. ' process' → logprob: -1.1846115589141846
    3. ' read' → logprob: -3.3096115589141846
    4. ' parse' → logprob: -4.184611797332764
    5. ' tokenize' → logprob: -4.559611797332764
    6. ' analyze' → logprob: -4.684611797332764
    7. ' find' → logprob: -4.809611797332764
    8. ' space' → logprob: -5.184611797332764
    9. '_' → logprob: -5.309611797332764
    10. ' validate' → logprob: -5.684611797332764

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015636618481948972
    2. '():' → logprob: -7.251563549041748
    3. '(:' → logprob: -8.126564025878906
    4. ':' → logprob: -8.126564025878906
    5. ' (' → logprob: -9.876564025878906
    6. '):' → logprob: -10.001564025878906
    7. '(
' → logprob: -10.126564025878906
    8. '```' → logprob: -10.251564025878906
    9. '(`' → logprob: -11.001564025878906
    10. '(":' → logprob: -11.126564025878906

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04257602244615555
    2. '    ' → logprob: -3.9175760746002197
    3. ' ' → logprob: -4.917575836181641
    4. '(' → logprob: -5.042575836181641
    5. '\' → logprob: -5.917575836181641
    6. '    
' → logprob: -6.417575836181641
    7. '  ' → logprob: -7.417575836181641
    8. '(n' → logprob: -8.16757583618164
    9. '\n' → logprob: -8.16757583618164
    10. '()' → logprob: -8.41757583618164

Token 10: ' weights' (ID: 28460)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2126314640045166
    2. 'user' → logprob: -1.8376314640045166
    3. 'n' → logprob: -1.9626314640045166
    4. 'print' → logprob: -2.0876314640045166
    5. ' ' → logprob: -2.9626314640045166
    6. 'input' → logprob: -3.2126314640045166
    7. '    ' → logprob: -3.8376314640045166
    8. 'x' → logprob: -3.9626314640045166
    9. 'pass' → logprob: -4.2126312255859375
    10. 'i' → logprob: -4.2126312255859375

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26759466528892517
    2. '[' → logprob: -1.5175946950912476
    3. '=' → logprob: -4.767594814300537
    4. '.' → logprob: -6.142594814300537
    5. '[:]' → logprob: -6.392594814300537
    6. ' ' → logprob: -6.517594814300537
    7. ')' → logprob: -7.017594814300537
    8. '[]' → logprob: -8.892594337463379
    9. ',' → logprob: -9.392594337463379
    10. '<|end|>' → logprob: -9.517594337463379

Token 12: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.23541805148124695
    2. ' []' → logprob: -1.9854180812835693
    3. '{}' → logprob: -2.9854180812835693
    4. ' [' → logprob: -4.11041784286499
    5. '[]' → logprob: -5.86041784286499
    6. '[' → logprob: -6.98541784286499
    7. ' {' → logprob: -6.98541784286499
    8. ' defaultdict' → logprob: -8.485418319702148
    9. ' ' → logprob: -8.610418319702148
    10. ' {'' → logprob: -8.985418319702148

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02665833570063114
    2. '    
' → logprob: -4.526658535003662
    3. ' ' → logprob: -5.776658535003662
    4. 'w' → logprob: -5.901658535003662
    5. 'for' → logprob: -5.901658535003662
    6. '    ' → logprob: -6.151658535003662
    7. 'n' → logprob: -7.151658535003662
    8. '\' → logprob: -7.276658535003662
    9. '  ' → logprob: -7.401658535003662
    10. '[' → logprob: -7.526658535003662

Token 14: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10234921425580978
    2. 'for' (adapté à ' for') → logprob: -3.477349281311035
    3. 'w' → logprob: -3.602349281311035
    4. ' ' → logprob: -4.102349281311035
    5. 'n' → logprob: -4.977349281311035
    6. '    ' → logprob: -5.727349281311035
    7. ' for' → logprob: -5.727349281311035
    8. 'f' → logprob: -5.852349281311035
    9. '  ' → logprob: -7.102349281311035
    10. '    
' → logprob: -7.102349281311035

Token 15: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5579507946968079
    2. ' line' → logprob: -0.9329507946968079
    3. ' word' → logprob: -4.307950973510742
    4. ' arg' → logprob: -4.932950973510742
    5. ' i' → logprob: -5.182950973510742
    6. ' filename' → logprob: -6.057950973510742
    7. ' item' → logprob: -6.682950973510742
    8. ' file' → logprob: -7.557950973510742
    9. ' sys' → logprob: -7.557950973510742
    10. ' _' → logprob: -7.682950973510742

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004744468256831169
    2. 'in' → logprob: -5.379744529724121
    3. ' ' → logprob: -9.379744529724121
    4. '  ' → logprob: -11.629744529724121
    5. '```' → logprob: -12.504744529724121
    6. ' =' → logprob: -12.629744529724121
    7. '    ' → logprob: -12.754744529724121
    8. '[' → logprob: -12.879744529724121
    9. 's' → logprob: -12.879744529724121
    10. 'line' → logprob: -13.004744529724121

Token 17: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5232073664665222
    2. 'sys' → logprob: -0.8982073664665222
    3. '	sys' → logprob: -10.273207664489746
    4. '=sys' → logprob: -10.273207664489746
    5. '(sys' → logprob: -12.398207664489746
    6. '```' → logprob: -12.648207664489746
    7. ' iter' → logprob: -13.460707664489746
    8. ' ' → logprob: -13.585707664489746
    9. 'stdin' → logprob: -13.960707664489746
    10. 'iter' → logprob: -14.148207664489746

Token 18: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0034904275089502335
    2. '.' → logprob: -6.003490447998047
    3. '.readline' → logprob: -7.628490447998047
    4. '.argv' → logprob: -8.003490447998047
    5. '.stdout' → logprob: -9.753490447998047
    6. 'stdin' → logprob: -10.003490447998047
    7. ' .' → logprob: -10.253490447998047
    8. '.readlines' → logprob: -11.003490447998047
    9. ' stdin' → logprob: -12.128490447998047
    10. '(stdin' → logprob: -12.128490447998047

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012850654311478138
    2. '.readline' → logprob: -4.512850761413574
    3. '.' → logprob: -7.762850761413574
    4. '.readlines' → logprob: -8.012850761413574
    5. '):' → logprob: -8.512850761413574
    6. '   ' → logprob: -8.637850761413574
    7. ':
' → logprob: -8.637850761413574
    8. ' :' → logprob: -9.512850761413574
    9. '.rstrip' → logprob: -9.637850761413574
    10. '.strip' → logprob: -9.637850761413574

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15944385528564453
    2. '    ' → logprob: -2.0344438552856445
    3. '   ' → logprob: -4.9094438552856445
    4. ' ' → logprob: -5.1594438552856445
    5. '     ' → logprob: -6.9094438552856445
    6. '        
' → logprob: -7.4094438552856445
    7. '        ' → logprob: -7.6594438552856445
    8. '      ' → logprob: -7.7844438552856445
    9. '    
' → logprob: -8.284443855285645
    10. '     
' → logprob: -8.784443855285645

Token 21: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.10899854451417923
    2. '   ' → logprob: -2.7339985370635986
    3. '       ' → logprob: -4.108998775482178
    4. 'line' (adapté à ' line') → logprob: -4.608998775482178
    5. '    ' → logprob: -5.608998775482178
    6. ' match' → logprob: -5.983998775482178
    7. ' if' → logprob: -6.108998775482178
    8. '           ' → logprob: -7.608998775482178
    9. ' matches' → logprob: -7.733998775482178
    10. ' parts' → logprob: -7.858998775482178

Token 22: '=line' (ID: 192488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1416039764881134
    2. '.strip' → logprob: -2.391603946685791
    3. '=' → logprob: -3.391603946685791
    4. '.rstrip' → logprob: -5.891603946685791
    5. '.' → logprob: -6.391603946685791
    6. '.split' → logprob: -6.391603946685791
    7. '.startswith' → logprob: -8.14160442352295
    8. ' .' → logprob: -9.01660442352295
    9. 'split' → logprob: -9.51660442352295
    10. '=line' → logprob: -9.89160442352295

Token 23: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.007841551676392555
    2. '.' → logprob: -5.50784158706665
    3. '.rstrip' → logprob: -5.63284158706665
    4. '.lower' → logprob: -9.382841110229492
    5. '.split' → logprob: -9.632841110229492
    6. '.replace' → logprob: -10.757841110229492
    7. ' .' → logprob: -12.382841110229492
    8. 'strip' → logprob: -13.632841110229492
    9. '.trim' → logprob: -14.882841110229492
    10. '.l' → logprob: -15.382841110229492

Token 24: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007834223215468228
    2. '(' → logprob: -7.250783443450928
    3. '('' → logprob: -10.12578296661377
    4. '().' → logprob: -11.37578296661377
    5. ' ()' → logprob: -11.87578296661377
    6. '()`' → logprob: -13.00078296661377
    7. '()"' → logprob: -13.25078296661377
    8. '())' → logprob: -13.62578296661377
    9. '()='' → logprob: -13.75078296661377
    10. '()

' → logprob: -14.25078296661377

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3821665048599243
    2. '<|end|>' → logprob: -1.6321665048599243
    3. ' if' → logprob: -2.2571663856506348
    4. '<|end|>' → logprob: -4.882166385650635
    5. 'if' → logprob: -5.757166385650635
    6. ' ' → logprob: -5.882166385650635
    7. '   ' → logprob: -7.132166385650635
    8. ',' → logprob: -7.757166385650635
    9. '        
' → logprob: -7.882166385650635
    10. '.split' → logprob: -7.882166385650635

Token 26: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6094018816947937
    2. 'if' (adapté à ' if') → logprob: -0.8594018816947937
    3. '       ' → logprob: -4.109401702880859
    4. 'match' → logprob: -4.734401702880859
    5. 'matches' → logprob: -5.859401702880859
    6. ' match' → logprob: -6.484401702880859
    7. '   ' → logprob: -7.234401702880859
    8. 'tokens' → logprob: -7.359401702880859
    9. ' matches' → logprob: -7.484401702880859
    10. 'parts' → logprob: -7.609401702880859

Token 27: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011660235933959484
    2. ' line' → logprob: -4.886660099029541
    3. 'not' → logprob: -6.386660099029541
    4. ' re' → logprob: -6.511660099029541
    5. ' ' → logprob: -7.386660099029541
    6. 're' → logprob: -9.6366605758667
    7. ' len' → logprob: -9.6366605758667
    8. 'line' → logprob: -10.1366605758667
    9. ' '' → logprob: -10.6366605758667
    10. '   ' → logprob: -10.8866605758667

Token 28: '=="' (ID: 24027)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.0472666472196579
    2. '==' → logprob: -3.922266721725464
    3. ' ==' → logprob: -4.297266483306885
    4. '.' → logprob: -4.672266483306885
    5. ':' → logprob: -6.547266483306885
    6. '.endswith' → logprob: -7.047266483306885
    7. '.split' → logprob: -8.172266960144043
    8. '<|end|>' → logprob: -8.547266960144043
    9. ' .' → logprob: -8.797266960144043
    10. '.match' → logprob: -8.922266960144043

Token 29: 'END' (ID: 7671)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.028153525665402412
    2. '"' → logprob: -4.028153419494629
    3. '"":' → logprob: -5.028153419494629
    4. '```' → logprob: -6.278153419494629
    5. '""' → logprob: -7.903153419494629
    6. 'END' → logprob: -8.028153419494629
    7. '':' → logprob: -9.278153419494629
    8. 'EOF' → logprob: -9.278153419494629
    9. '"):' → logprob: -9.403153419494629
    10. '#' → logprob: -9.403153419494629

Token 30: '_OF' (ID: 29034)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.00846989918500185
    2. ':' → logprob: -5.633470058441162
    3. '"' → logprob: -5.883470058441162
    4. '":
' → logprob: -6.258470058441162
    5. '":
' → logprob: -9.883469581604004
    6. '"):' → logprob: -10.258469581604004
    7. '   ' → logprob: -11.258469581604004
    8. '```' → logprob: -11.383469581604004
    9. '"):
' → logprob: -11.883469581604004
    10. '__":
' → logprob: -12.383469581604004

Token 31: '_FIRST' (ID: 82933)
  Prédit: '_TEXT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_TEXT' → logprob: -0.28799954056739807
    2. '_INPUT' → logprob: -1.4129995107650757
    3. '_FILE' → logprob: -6.912999629974365
    4. '_' → logprob: -7.037999629974365
    5. '_TRAN' → logprob: -7.162999629974365
    6. '_TRANS' → logprob: -7.537999629974365
    7. '_input' → logprob: -7.912999629974365
    8. '_text' → logprob: -8.037999153137207
    9. '_TX' → logprob: -8.037999153137207
    10. '_MESSAGE' → logprob: -8.037999153137207

Token 32: '_PART' (ID: 64470)
  Prédit: '_PART'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_PART' → logprob: -0.5917817950248718
    2. '_DATA' → logprob: -2.4667818546295166
    3. '_INPUT' → logprob: -2.4667818546295166
    4. '_TEXT' → logprob: -2.8417818546295166
    5. '_SECTION' → logprob: -3.2167818546295166
    6. '_BLOCK' → logprob: -3.3417818546295166
    7. '_PAR' → logprob: -3.4667818546295166
    8. '_WORD' → logprob: -3.7167818546295166
    9. '_T' → logprob: -3.9667818546295166
    10. '_BATCH' → logprob: -4.2167816162109375

Token 33: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.013513828627765179
    2. ':' → logprob: -4.513514041900635
    3. '"' → logprob: -6.263514041900635
    4. '":
' → logprob: -8.263513565063477
    5. '":
' → logprob: -8.888513565063477
    6. '):' → logprob: -9.888513565063477
    7. '"):' → logprob: -10.763513565063477
    8. '   ' → logprob: -11.638513565063477
    9. '```' → logprob: -11.638513565063477
    10. ':"' → logprob: -11.888513565063477

Token 34: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12836912274360657
    2. '       ' → logprob: -2.128369092941284
    3. ' break' → logprob: -7.503369331359863
    4. ':' → logprob: -8.378369331359863
    5. '        ' → logprob: -9.003369331359863
    6. '   ' → logprob: -9.378369331359863
    7. '<|end|>' → logprob: -9.378369331359863
    8. '               ' → logprob: -9.753369331359863
    9. '            ' → logprob: -9.878369331359863
    10. '    ' → logprob: -10.128369331359863

Token 35: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09692123532295227
    2. '           ' → logprob: -2.72192120552063
    3. ' break' → logprob: -3.72192120552063
    4. 'break' (adapté à ' break') → logprob: -6.096921443939209
    5. '   ' → logprob: -9.59692096710205
    6. '               ' → logprob: -9.72192096710205
    7. '	break' → logprob: -10.72192096710205
    8. '```' → logprob: -10.97192096710205
    9. ' ' → logprob: -12.47192096710205
    10. '	       ' → logprob: -12.84692096710205

Token 36: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4536786377429962
    2. '       ' → logprob: -2.078678607940674
    3. '<|end|>' → logprob: -2.328678607940674
    4. '    
' → logprob: -2.953678607940674
    5. '        
' → logprob: -3.203678607940674
    6. '\n' → logprob: -4.203678607940674
    7. '   ' → logprob: -4.578678607940674
    8. ' 
' → logprob: -4.953678607940674
    9. '```' → logprob: -5.328678607940674
    10. '    ' → logprob: -5.828678607940674

Token 37: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6410655975341797
    2. '       ' → logprob: -1.5160655975341797
    3. '    
' → logprob: -2.7660655975341797
    4. '<|end|>' → logprob: -2.8910655975341797
    5. '   ' → logprob: -3.3910655975341797
    6. '        
' → logprob: -3.6410655975341797
    7. ' 
' → logprob: -3.7660655975341797
    8. '\n' → logprob: -4.39106559753418
    9. '' → logprob: -4.64106559753418
    10. '  
' → logprob: -5.14106559753418

Token 38: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27875685691833496
    2. '
' → logprob: -2.778756856918335
    3. ' ' → logprob: -3.153756856918335
    4. ' tokens' → logprob: -3.528756856918335
    5. '        
' → logprob: -3.778756856918335
    6. ' 
' → logprob: -4.153757095336914
    7. '<|end|>' → logprob: -4.278757095336914
    8. '        ' → logprob: -4.403757095336914
    9. '    
' → logprob: -4.778757095336914
    10. 'tokens' → logprob: -5.028757095336914

Token 39: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.619915246963501
    2. ' not' → logprob: -1.744915246963501
    3. ' re' → logprob: -1.994915246963501
    4. '"' → logprob: -2.869915246963501
    5. ' ' → logprob: -3.994915246963501
    6. 're' → logprob: -4.119915008544922
    7. ' '' → logprob: -4.244915008544922
    8. 'line' → logprob: -4.369915008544922
    9. ' "' → logprob: -4.619915008544922
    10. ' len' → logprob: -4.619915008544922

Token 40: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.011474057100713253
    2. 'line' → logprob: -4.761474132537842
    3. ' re' → logprob: -6.011474132537842
    4. 're' → logprob: -8.761473655700684
    5. ' ' → logprob: -8.886473655700684
    6. ' '' → logprob: -11.011473655700684
    7. '	line' → logprob: -11.136473655700684
    8. '  ' → logprob: -11.386473655700684
    9. ' weights' → logprob: -11.511473655700684
    10. '   ' → logprob: -11.511473655700684

Token 41: ':
' (ID: 734)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2385002076625824
    2. '.startswith' → logprob: -1.6135002374649048
    3. '.strip' → logprob: -5.363500118255615
    4. '.endswith' → logprob: -6.113500118255615
    5. ' in' → logprob: -6.363500118255615
    6. '.split' → logprob: -6.488500118255615
    7. ' .' → logprob: -6.863500118255615
    8. ':' → logprob: -7.238500118255615
    9. ' or' → logprob: -7.613500118255615
    10. '<|end|>' → logprob: -9.238500595092773

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9182692766189575
    2. ' continue' → logprob: -0.9182692766189575
    3. '       ' → logprob: -1.6682692766189575
    4. ':' → logprob: -5.543269157409668
    5. ' continues' → logprob: -5.543269157409668
    6. 'continue' → logprob: -6.168269157409668
    7. '<|end|>' → logprob: -7.293269157409668
    8. '	continue' → logprob: -7.418269157409668
    9. '   ' → logprob: -7.668269157409668
    10. ' continued' → logprob: -8.543269157409668

Token 43: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.02879180572926998
    2. 'continue' (adapté à ' continue') → logprob: -3.653791904449463
    3. '       ' → logprob: -6.278791904449463
    4. '	continue' → logprob: -8.528791427612305
    5. '           ' → logprob: -8.653791427612305
    6. '   ' → logprob: -9.653791427612305
    7. ' continues' → logprob: -9.903791427612305
    8. '_continue' → logprob: -10.028791427612305
    9. 'contin' → logprob: -11.028791427612305
    10. ' continu' → logprob: -11.028791427612305

Token 44: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07658622413873672
    2. '<|end|>' → logprob: -3.0765862464904785
    3. '
' → logprob: -3.8265862464904785
    4. '        
' → logprob: -5.5765862464904785
    5. '<|end|>' → logprob: -7.3265862464904785
    6. '   ' → logprob: -7.7015862464904785
    7. '    
' → logprob: -8.20158576965332
    8. ' 
' → logprob: -8.95158576965332
    9. ' ' → logprob: -9.70158576965332
    10. '```' → logprob: -9.82658576965332

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010235740803182125
    2. '        
' → logprob: -5.385235786437988
    3. '<|end|>' → logprob: -5.760235786437988
    4. '   ' → logprob: -6.885235786437988
    5. '    
' → logprob: -7.260235786437988
    6. '
' → logprob: -7.885235786437988
    7. ' 
' → logprob: -9.510235786437988
    8. '<|end|>' → logprob: -10.260235786437988
    9. '            
' → logprob: -10.385235786437988
    10. '```' → logprob: -10.510235786437988

Token 46: ' symbol' (ID: 10038)
  Prédit: ' parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.4391688406467438
    2. '       ' → logprob: -2.064168930053711
    3. ' tokens' → logprob: -2.064168930053711
    4. 'parts' → logprob: -3.189168930053711
    5. 'tokens' → logprob: -3.439168930053711
    6. ' key' → logprob: -5.564168930053711
    7. ' word' → logprob: -5.814168930053711
    8. ' words' → logprob: -5.814168930053711
    9. 'token' → logprob: -5.939168930053711
    10. ' token' → logprob: -5.939168930053711

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002582081826403737
    2. ' ,' → logprob: -7.00258207321167
    3. ',s' → logprob: -7.37758207321167
    4. 's' → logprob: -7.87758207321167
    5. ' =' → logprob: -8.002582550048828
    6. '=' → logprob: -8.252582550048828
    7. ',line' → logprob: -11.502582550048828
    8. ',value' → logprob: -12.002582550048828
    9. '_weights' → logprob: -12.627582550048828
    10. ',w' → logprob: -12.627582550048828

Token 48: ' w' (ID: 286)
  Prédit: ' weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.16211794316768646
    2. 'weight' → logprob: -1.9121179580688477
    3. ' value' → logprob: -6.912117958068848
    4. 'value' → logprob: -7.912117958068848
    5. ' weights' → logprob: -8.662117958068848
    6. ' w' → logprob: -8.787117958068848
    7. ' rest' → logprob: -9.912117958068848
    8. ' ' → logprob: -10.537117958068848
    9. 'weights' → logprob: -10.662117958068848
    10. ' score' → logprob: -11.287117958068848

Token 49: ' =' (ID: 314)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.0009462343878112733
    2. 'e' → logprob: -7.250946044921875
    3. '=' → logprob: -8.875946044921875
    4. ' eight' → logprob: -9.500946044921875
    5. ' =' → logprob: -11.250946044921875
    6. 'ight' → logprob: -13.625946044921875
    7. 'Eight' → logprob: -13.625946044921875
    8. 'eg' → logprob: -14.250946044921875
    9. 'ght' → logprob: -14.250946044921875
    10. 'eig' → logprob: -14.375946044921875

Token 50: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05930234119296074
    2. 'line' → logprob: -2.93430233001709
    3. ' re' → logprob: -5.55930233001709
    4. 're' → logprob: -7.55930233001709
    5. ' ' → logprob: -10.55930233001709
    6. ' map' → logprob: -11.80930233001709
    7. '	line' → logprob: -13.18430233001709
    8. 'map' → logprob: -14.05930233001709
    9. '=line' → logprob: -14.43430233001709
    10. '  ' → logprob: -15.18430233001709

Token 51: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.021056436002254486
    2. ' =' → logprob: -4.021056652069092
    3. '=' → logprob: -6.146056652069092
    4. '.' → logprob: -7.771056652069092
    5. 'split' → logprob: -8.521056175231934
    6. ' split' → logprob: -9.896056175231934
    7. '_split' → logprob: -10.521056175231934
    8. '<|end|>' → logprob: -11.396056175231934
    9. '.strip' → logprob: -11.521056175231934
    10. ',' → logprob: -11.646056175231934

Token 52: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.05811068415641785
    2. '()' → logprob: -3.4331107139587402
    3. '(' → logprob: -4.30811071395874
    4. '("("' → logprob: -5.18311071395874
    5. '(None' → logprob: -5.93311071395874
    6. '("' → logprob: -6.68311071395874
    7. '("="' → logprob: -7.55811071395874
    8. '('\' → logprob: -7.93311071395874
    9. '('='' → logprob: -8.558110237121582
    10. '(',' → logprob: -9.933110237121582

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.40615352988243103
    2. '<|end|>' → logprob: -1.7811535596847534
    3. 'weights' (adapté à ' weights') → logprob: -2.531153440475464
    4. ' ' → logprob: -2.906153440475464
    5. '_weights' → logprob: -4.531153678894043
    6. '<|end|>' → logprob: -4.906153678894043
    7. '   ' → logprob: -5.906153678894043
    8. '=' → logprob: -6.156153678894043
    9. 'Weights' → logprob: -6.531153678894043
    10. ')' → logprob: -6.656153678894043

Token 55: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.10023082792758942
    2. '[' → logprob: -2.3502309322357178
    3. '[...]' → logprob: -11.475231170654297
    4. ' [' → logprob: -12.100231170654297
    5. '[int' → logprob: -12.975231170654297
    6. '[w' → logprob: -13.600231170654297
    7. '[]' → logprob: -13.850231170654297
    8. '[
' → logprob: -14.475231170654297
    9. '\[' → logprob: -14.600231170654297
    10. '[token' → logprob: -14.975231170654297

Token 56: 'ymbol' (ID: 8315)
  Prédit: 'ymbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ymbol' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. 'y' → logprob: -16.000001907348633
    4. '[s' → logprob: -16.250001907348633
    5. 'symbol' → logprob: -17.125001907348633
    6. 'ym' → logprob: -18.125001907348633
    7. '(symbol' → logprob: -18.750001907348633
    8. ' y' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.250001907348633
    10. '```' → logprob: -19.250001907348633

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006764040794223547
    2. ']=' → logprob: -5.256763935089111
    3. ' ]' → logprob: -7.256763935089111
    4. '=' → logprob: -7.506763935089111
    5. ' =' → logprob: -8.88176441192627
    6. ')' → logprob: -9.00676441192627
    7. ')=' → logprob: -12.63176441192627
    8. ')]' → logprob: -12.75676441192627
    9. ']+=' → logprob: -13.00676441192627
    10. ' )' → logprob: -14.13176441192627

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.57607102394104
    2. ' =' → logprob: -0.82607102394104
    3. '=int' → logprob: -9.201070785522461
    4. '=float' → logprob: -10.701070785522461
    5. ' ' → logprob: -13.576070785522461
    6. ']' → logprob: -13.576070785522461
    7. ' +=' → logprob: -13.576070785522461
    8. ')' → logprob: -14.326070785522461
    9. '<|end|>' → logprob: -14.326070785522461
    10. '+=' → logprob: -14.826070785522461

Token 59: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.5776155591011047
    2. ' float' → logprob: -0.8276155591011047
    3. 'int' → logprob: -6.577615737915039
    4. ' int' → logprob: -8.202615737915039
    5. '	float' → logprob: -12.577615737915039
    6. '(float' → logprob: -13.202615737915039
    7. '=float' → logprob: -13.202615737915039
    8. 'flo' → logprob: -13.827615737915039
    9. ' ' → logprob: -14.577615737915039
    10. '<float' → logprob: -15.327615737915039

Token 60: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.008617172949016094
    2. '(' → logprob: -4.758617401123047
    3. 'w' → logprob: -13.133617401123047
    4. ' (' → logprob: -15.258617401123047
    5. '('' → logprob: -16.633617401123047
    6. '(
' → logprob: -17.008617401123047
    7. '	w' → logprob: -17.133617401123047
    8. '(weights' → logprob: -17.383617401123047
    9. '(v' → logprob: -17.508617401123047
    10. '(s' → logprob: -17.758617401123047

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1398757123970427e-05
    2. ')
' → logprob: -11.500011444091797
    3. ' )' → logprob: -14.625011444091797
    4. '<|end|>' → logprob: -15.125011444091797
    5. '}' → logprob: -16.125011444091797
    6. '))' → logprob: -16.625011444091797
    7. ')

' → logprob: -16.750011444091797
    8. ')return' → logprob: -16.875011444091797
    9. '<|end|>' → logprob: -17.500011444091797
    10. '),' → logprob: -17.750011444091797

Token 62: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47955751419067383
    2. '<|end|>' → logprob: -1.4795575141906738
    3. '\n' → logprob: -2.229557514190674
    4. '    
' → logprob: -3.729557514190674
    5. '   ' → logprob: -4.854557514190674
    6. '  
' → logprob: -5.604557514190674
    7. '<|end|>' → logprob: -5.604557514190674
    8. ' 
' → logprob: -6.354557514190674
    9. '```' → logprob: -6.479557514190674
    10. '\' → logprob: -7.229557514190674

Token 63: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0476590394973755
    2. ' ' → logprob: -2.047658920288086
    3. '    
' → logprob: -2.172658920288086
    4. ' 
' → logprob: -2.422658920288086
    5. '\n' → logprob: -2.547658920288086
    6. '
' → logprob: -2.797658920288086
    7. '<|end|>' → logprob: -3.422658920288086
    8. ' for' → logprob: -3.547658920288086
    9. 'for' → logprob: -3.672658920288086
    10. '    ' → logprob: -3.922658920288086

Token 64: '_atom' (ID: 106253)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004669476300477982
    2. '=' → logprob: -5.379669666290283
    3. 's' → logprob: -10.129669189453125
    4. '_' → logprob: -11.879669189453125
    5. ' ' → logprob: -14.254669189453125
    6. '=re' → logprob: -14.379669189453125
    7. ' =)' → logprob: -15.379669189453125
    8. '.' → logprob: -16.254669189453125
    9. ',' → logprob: -16.379669189453125
    10. '  ' → logprob: -16.379669189453125

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3701481521129608
    2. 's' → logprob: -1.2451481819152832
    3. '=' → logprob: -3.870148181915283
    4. ' ' → logprob: -9.120147705078125
    5. '=s' → logprob: -9.245147705078125
    6. '_pattern' → logprob: -9.370147705078125
    7. 'ic' → logprob: -9.495147705078125
    8. '\s' → logprob: -10.120147705078125
    9. '_s' → logprob: -10.120147705078125
    10. '_' → logprob: -10.370147705078125

Token 66: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2127630114555359
    2. 're' → logprob: -2.0877630710601807
    3. ' re' → logprob: -3.0877630710601807
    4. ' r' → logprob: -3.8377630710601807
    5. ' ' → logprob: -8.337762832641602
    6. '   ' → logprob: -8.962762832641602
    7. 'rf' → logprob: -10.212762832641602
    8. '  ' → logprob: -10.337762832641602
    9. '{}' → logprob: -11.212762832641602
    10. '\s' → logprob: -11.212762832641602

Token 67: ''[' (ID: 187291)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7726553678512573
    2. ''\' → logprob: -1.0226553678512573
    3. '"' → logprob: -2.522655487060547
    4. '"\' → logprob: -2.772655487060547
    5. ''[' → logprob: -3.647655487060547
    6. '"[' → logprob: -5.147655487060547
    7. ''(' → logprob: -6.897655487060547
    8. 'r' → logprob: -7.272655487060547
    9. ''<' → logprob: -8.147655487060547
    10. ''^' → logprob: -8.272655487060547

Token 68: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3880876898765564
    2. '\' → logprob: -2.138087749481201
    3. 'a' → logprob: -2.138087749481201
    4. '^\' → logprob: -2.763087749481201
    5. '^' → logprob: -4.388087749481201
    6. '0' → logprob: -6.638087749481201
    7. '\(' → logprob: -6.638087749481201
    8. '\[' → logprob: -6.763087749481201
    9. '\\' → logprob: -7.888087749481201
    10. '\x' → logprob: -7.888087749481201

Token 69: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.04315847158432007
    2. '-Za' → logprob: -3.168158531188965
    3. '-z' → logprob: -9.543158531188965
    4. '-' → logprob: -9.668158531188965
    5. '-H' → logprob: -11.793158531188965
    6. 'Z' → logprob: -12.293158531188965
    7. 'A' → logprob: -13.293158531188965
    8. '_Z' → logprob: -13.293158531188965
    9. '-C' → logprob: -13.418158531188965
    10. '-B' → logprob: -14.480658531188965

Token 70: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013116340152919292
    2. 'a' → logprob: -5.013116359710693
    3. ']' → logprob: -5.138116359710693
    4. '[a' → logprob: -7.763116359710693
    5. ']?' → logprob: -10.513115882873535
    6. ']{' → logprob: -10.888115882873535
    7. 'A' → logprob: -11.138115882873535
    8. '[A' → logprob: -11.513115882873535
    9. '}[' → logprob: -12.888115882873535
    10. '][_' → logprob: -13.138115882873535

Token 71: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.41866585687967e-06
    2. '[a' → logprob: -12.750008583068848
    3. ' a' → logprob: -13.750008583068848
    4. ']' → logprob: -13.875008583068848
    5. '0' → logprob: -14.125008583068848
    6. 'A' → logprob: -15.000008583068848
    7. ''a' → logprob: -15.000008583068848
    8. '	a' → logprob: -15.000008583068848
    9. 'а' → logprob: -15.750008583068848
    10. '_a' → logprob: -15.875008583068848

Token 72: '-z' (ID: 16826)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.968384861946106
    2. '-z' → logprob: -1.718384861946106
    3. '-' → logprob: -1.968384861946106
    4. '[a' → logprob: -2.2183847427368164
    5. ']' → logprob: -2.8433847427368164
    6. '[' → logprob: -3.4683847427368164
    7. ']?' → logprob: -3.4683847427368164
    8. ']*' → logprob: -3.7183847427368164
    9. '-Za' → logprob: -4.593384742736816
    10. 'r' → logprob: -4.718384742736816

Token 73: ']?' (ID: 137309)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.15812698006629944
    2. ']' → logprob: -2.1581270694732666
    3. ']?' → logprob: -3.6581270694732666
    4. '?' → logprob: -5.4081268310546875
    5. ']{' → logprob: -8.783126831054688
    6. '*' → logprob: -9.408126831054688
    7. ']+' → logprob: -9.408126831054688
    8. '']' → logprob: -10.783126831054688
    9. ']*)' → logprob: -10.783126831054688
    10. 'a' → logprob: -10.908126831054688

Token 74: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2556153535842896
    2. '<|end|>' → logprob: -1.5056153535842896
    3. '[' → logprob: -1.7556153535842896
    4. '\d' → logprob: -2.755615234375
    5. ''' → logprob: -3.005615234375
    6. '')' → logprob: -3.130615234375
    7. '|' → logprob: -3.505615234375
    8. '[A' → logprob: -3.880615234375
    9. '[a' → logprob: -4.130615234375
    10. '|\' → logprob: -4.130615234375

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6841516494750977
    2. '*' → logprob: -1.5591516494750977
    3. '<|end|>' → logprob: -1.6841516494750977
    4. '\' → logprob: -4.184151649475098
    5. '|' → logprob: -4.434151649475098
    6. ')' → logprob: -4.434151649475098
    7. ',' → logprob: -4.934151649475098
    8. '(' → logprob: -4.934151649475098
    9. '+' → logprob: -4.934151649475098
    10. '[' → logprob: -5.059151649475098

Token 76: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5683239698410034
    2. 'pattern' (adapté à ' pattern') → logprob: -1.8183239698410034
    3. ' pattern' → logprob: -3.193324089050293
    4. '*' → logprob: -3.818324089050293
    5. 'tokens' → logprob: -3.943324089050293
    6. 'formula' → logprob: -4.068324089050293
    7. ' formula' → logprob: -4.318324089050293
    8. ' tokens' → logprob: -4.443324089050293
    9. 'atom' → logprob: -4.568324089050293
    10. 'token' → logprob: -4.568324089050293

Token 77: '_num' (ID: 9834)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1471162587404251
    2. '_' → logprob: -2.397116184234619
    3. '_atom' → logprob: -4.022116184234619
    4. '=' → logprob: -4.397116184234619
    5. '_atoms' → logprob: -5.147116184234619
    6. '<|end|>' → logprob: -5.897116184234619
    7. '_token' → logprob: -6.272116184234619
    8. 's' → logprob: -7.147116184234619
    9. ' ' → logprob: -7.147116184234619
    10. '_=' → logprob: -7.397116184234619

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3896580636501312
    2. '=' → logprob: -1.1396580934524536
    3. '=r' → logprob: -6.389657974243164
    4. ' ' → logprob: -7.639657974243164
    5. '   ' → logprob: -8.514657974243164
    6. '  ' → logprob: -8.514657974243164
    7. 'ber' → logprob: -9.514657974243164
    8. 'r' → logprob: -10.014657974243164
    9. '    ' → logprob: -10.264657974243164
    10. 's' → logprob: -10.264657974243164

Token 79: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03396182879805565
    2. ' r' → logprob: -3.408961772918701
    3. '   ' → logprob: -9.15896224975586
    4. ' ' → logprob: -9.15896224975586
    5. '  ' → logprob: -10.15896224975586
    6. '\d' → logprob: -11.15896224975586
    7. ''\' → logprob: -11.28396224975586
    8. '	r' → logprob: -12.03396224975586
    9. '[r' → logprob: -12.28396224975586
    10. '    ' → logprob: -12.40896224975586

Token 80: ''\' (ID: 36853)
  Prédit: ''\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.05690036714076996
    2. '\d' → logprob: -3.0569002628326416
    3. ''[' → logprob: -5.181900501251221
    4. ''' → logprob: -6.181900501251221
    5. 'r' → logprob: -8.306900024414062
    6. '[' → logprob: -9.306900024414062
    7. '=\' → logprob: -10.181900024414062
    8. '='\' → logprob: -10.306900024414062
    9. '"\' → logprob: -10.431900024414062
    10. '=' → logprob: -10.556900024414062

Token 81: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026569070294499397
    2. '\d' → logprob: -3.651569128036499
    3. '[' → logprob: -8.276569366455078
    4. ' d' → logprob: -12.276569366455078
    5. '[d' → logprob: -12.901569366455078
    6. '(\' → logprob: -13.401569366455078
    7. '\\' → logprob: -13.526569366455078
    8. '[\' → logprob: -13.901569366455078
    9. ' \' → logprob: -14.026569366455078
    10. '-' → logprob: -14.901569366455078

Token 82: '{' (ID: 90)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16054672002792358
    2. '+'' → logprob: -2.1605467796325684
    3. '*' → logprob: -3.4105467796325684
    4. '+\' → logprob: -10.91054630279541
    5. '+"' → logprob: -11.91054630279541
    6. '+'\' → logprob: -13.41054630279541
    7. '+')' → logprob: -13.53554630279541
    8. '+
' → logprob: -13.53554630279541
    9. '*\' → logprob: -13.66054630279541
    10. '+#' → logprob: -14.16054630279541

Token 83: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3165931701660156
    2. '1' → logprob: -1.3165931701660156
    3. '0' → logprob: -6.941593170166016
    4. '2' → logprob: -6.941593170166016
    5. '3' → logprob: -7.441593170166016
    6. '+' → logprob: -8.316593170166016
    7. '}' → logprob: -8.566593170166016
    8. ' ' → logprob: -9.441593170166016
    9. '4' → logprob: -9.566593170166016
    10. ',+' → logprob: -9.816593170166016

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. '}' → logprob: -12.125016212463379
    3. '3' → logprob: -12.500016212463379
    4. '2' → logprob: -12.875016212463379
    5. ' ,' → logprob: -13.000016212463379
    6. '1' → logprob: -14.375016212463379
    7. '4' → logprob: -15.000016212463379
    8. '5' → logprob: -15.125016212463379
    9. '6' → logprob: -15.375016212463379
    10. ' ' → logprob: -15.375016212463379

Token 85: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8278620839118958
    2. '2' → logprob: -0.9528620839118958
    3. '4' → logprob: -2.577862024307251
    4. '}' → logprob: -2.577862024307251
    5. '9' → logprob: -4.57786226272583
    6. '5' → logprob: -5.20286226272583
    7. '}'' → logprob: -5.45286226272583
    8. ',' → logprob: -6.32786226272583
    9. '1' → logprob: -6.82786226272583
    10. '6' → logprob: -7.57786226272583

Token 86: '}'
' (ID: 96587)
  Prédit: '}''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}'' → logprob: -0.012585700489580631
    2. '}' → logprob: -4.387585639953613
    3. ''' → logprob: -11.012585639953613
    4. ')'' → logprob: -11.137585639953613
    5. ' }' → logprob: -11.387585639953613
    6. ''}' → logprob: -11.637585639953613
    7. '}')' → logprob: -12.012585639953613
    8. '}'
' → logprob: -12.512585639953613
    9. '7' → logprob: -13.012585639953613
    10. '})' → logprob: -13.137585639953613

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6679930686950684
    2. '<|end|>' → logprob: -1.1679930686950684
    3. '
' → logprob: -1.9179930686950684
    4. '    
' → logprob: -4.417993068695068
    5. '<|end|>' → logprob: -4.667993068695068
    6. '```' → logprob: -7.167993068695068
    7. 'def' → logprob: -7.167993068695068
    8. '\' → logprob: -7.292993068695068
    9. '\n' → logprob: -7.292993068695068
    10. '  
' → logprob: -7.417993068695068

Token 88: ' formula' (ID: 20690)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2915184795856476
    2. '
' → logprob: -2.041518449783325
    3. 'def' → logprob: -3.541518449783325
    4. '    
' → logprob: -3.916518449783325
    5. '<|end|>' → logprob: -4.291518688201904
    6. '\' → logprob: -4.791518688201904
    7. '#' → logprob: -5.166518688201904
    8. '\n' → logprob: -5.166518688201904
    9. ':' → logprob: -5.166518688201904
    10. ' ' → logprob: -5.416518688201904

Token 89: '_lines' (ID: 42980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018990937620401382
    2. '=' → logprob: -4.018990993499756
    3. 's' → logprob: -7.768990993499756
    4. '_parts' → logprob: -8.268990516662598
    5. '_' → logprob: -9.518990516662598
    6. '_tokens' → logprob: -10.143990516662598
    7. '_pattern' → logprob: -11.143990516662598
    8. ' ' → logprob: -11.518990516662598
    9. '_matches' → logprob: -13.018990516662598
    10. '   ' → logprob: -13.018990516662598

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008740204386413097
    2. '=' → logprob: -4.758740425109863
    3. '=[]' → logprob: -9.258740425109863
    4. ' ' → logprob: -11.883740425109863
    5. '[]' → logprob: -12.008740425109863
    6. '.append' → logprob: -12.008740425109863
    7. '[:]' → logprob: -13.258740425109863
    8. ':' → logprob: -13.383740425109863
    9. ' =[' → logprob: -13.883740425109863
    10. '.' → logprob: -14.133740425109863

Token 91: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07909081876277924
    2. '[]' → logprob: -2.5790908336639404
    3. ' []
' → logprob: -8.82909107208252
    4. ' [' → logprob: -10.82909107208252
    5. '[]
' → logprob: -11.32909107208252
    6. ' sys' → logprob: -11.32909107208252
    7. 'sys' → logprob: -12.45409107208252
    8. '[' → logprob: -12.95409107208252
    9. '   ' → logprob: -13.45409107208252
    10. ' []

' → logprob: -13.70409107208252

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010941818356513977
    2. 'for' → logprob: -5.010941982269287
    3. ' for' → logprob: -6.260941982269287
    4. 'while' → logprob: -6.510941982269287
    5. '<|end|>' → logprob: -7.385941982269287
    6. ' while' → logprob: -8.760941505432129
    7. '<|end|>' → logprob: -11.260941505432129
    8. '    
' → logprob: -11.635941505432129
    9. '
' → logprob: -11.635941505432129
    10. '	while' → logprob: -12.385941505432129

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04497578740119934
    2. ' for' → logprob: -3.794975757598877
    3. 'while' → logprob: -4.169975757598877
    4. '   ' → logprob: -5.169975757598877
    5. ' while' → logprob: -8.294976234436035
    6. '
' → logprob: -10.419976234436035
    7. '<|end|>' → logprob: -10.794976234436035
    8. '```' → logprob: -11.294976234436035
    9. ' ' → logprob: -11.794976234436035
    10. '    
' → logprob: -11.919976234436035

Token 94: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.00041243841405957937
    2. 'line' → logprob: -8.500411987304688
    3. ' _' → logprob: -8.875411987304688
    4. '	line' → logprob: -9.875411987304688
    5. '_' → logprob: -12.000411987304688
    6. ' ' → logprob: -12.375411987304688
    7. ' l' → logprob: -12.750411987304688
    8. ' ' → logprob: -14.000411987304688
    9. '```' → logprob: -14.125411987304688
    10. '_line' → logprob: -14.250411987304688

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015718759968876839
    2. 'in' → logprob: -6.5015716552734375
    3. '	in' → logprob: -10.126571655273438
    4. ' ' → logprob: -11.251571655273438
    5. '   ' → logprob: -12.376571655273438
    6. '  ' → logprob: -12.626571655273438
    7. 's' → logprob: -13.876571655273438
    8. '_in' → logprob: -13.876571655273438
    9. '<|end|>' → logprob: -14.126571655273438
    10. '    ' → logprob: -14.126571655273438

Token 96: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.47417473793029785
    2. ' sys' → logprob: -0.9741747379302979
    3. '=sys' → logprob: -9.849174499511719
    4. '	sys' → logprob: -10.349174499511719
    5. '(sys' → logprob: -11.724174499511719
    6. ' ' → logprob: -13.724174499511719
    7. '_sys' → logprob: -13.974174499511719
    8. 's' → logprob: -14.099174499511719
    9. 'stdin' → logprob: -14.724174499511719
    10. '```' → logprob: -14.724174499511719

Token 97: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00036406738217920065
    2. 'stdin' → logprob: -8.375364303588867
    3. '.stdout' → logprob: -9.375364303588867
    4. '.' → logprob: -10.250364303588867
    5. '.argv' → logprob: -12.500364303588867
    6. '(stdin' → logprob: -12.625364303588867
    7. '.std' → logprob: -12.875364303588867
    8. 'in' → logprob: -14.000364303588867
    9. 'import' → logprob: -14.250364303588867
    10. '.readline' → logprob: -14.250364303588867

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016233421862125397
    2. ':
' → logprob: -4.391233444213867
    3. '<|end|>' → logprob: -5.891233444213867
    4. '<|end|>' → logprob: -8.016233444213867
    5. '.rstrip' → logprob: -8.891233444213867
    6. '.strip' → logprob: -9.141233444213867
    7. '.readline' → logprob: -9.266233444213867
    8. '.readlines' → logprob: -9.641233444213867
    9. '       ' → logprob: -10.141233444213867
    10. '.' → logprob: -10.766233444213867

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18445277214050293
    2. '<|end|>' → logprob: -1.809452772140503
    3. '<|end|>' → logprob: -5.559453010559082
    4. '   ' → logprob: -7.809453010559082
    5. ' line' → logprob: -8.684453010559082
    6. '#line' → logprob: -10.184453010559082
    7. '[line' → logprob: -10.309453010559082
    8. ' ' → logprob: -10.434453010559082
    9. '	line' → logprob: -10.934453010559082
    10. '        
' → logprob: -10.934453010559082

Token 100: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13035492599010468
    2. ' line' → logprob: -2.255354881286621
    3. '       ' → logprob: -4.380354881286621
    4. 'line' (adapté à ' line') → logprob: -5.630354881286621
    5. '	line' → logprob: -7.380354881286621
    6. ' formula' → logprob: -8.255354881286621
    7. 'formula' → logprob: -9.130354881286621
    8. '#line' → logprob: -9.380354881286621
    9. '    ' → logprob: -9.755354881286621
    10. '```' → logprob: -10.630354881286621

Token 101: '=line' (ID: 192488)
  Prédit: '=line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=line' → logprob: -0.005400476977229118
    2. '=' → logprob: -5.505400657653809
    3. ' =' → logprob: -6.630400657653809
    4. '.strip' → logprob: -15.505400657653809
    5. '=form' → logprob: -15.505400657653809
    6. '#line' → logprob: -16.130399703979492
    7. '=
' → logprob: -16.380399703979492
    8. 'line' → logprob: -16.755399703979492
    9. '[line' → logprob: -16.755399703979492
    10. '	line' → logprob: -16.755399703979492

Token 102: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0006682366947643459
    2. 'strip' → logprob: -7.375668048858643
    3. '.rstrip' → logprob: -10.3756685256958
    4. '.' → logprob: -12.5006685256958
    5. '_strip' → logprob: -12.8756685256958
    6. ' strip' → logprob: -13.3756685256958
    7. ' .' → logprob: -14.0006685256958
    8. '-strip' → logprob: -14.5006685256958
    9. '(strip' → logprob: -14.6256685256958
    10. '=line' → logprob: -15.1256685256958

Token 103: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001601539261173457
    2. '()
' → logprob: -8.750160217285156
    3. '()`' → logprob: -14.875160217285156
    4. '()

' → logprob: -15.125160217285156
    5. '()]' → logprob: -15.625160217285156
    6. '()
' → logprob: -15.625160217285156
    7. '())' → logprob: -15.875160217285156
    8. '()>' → logprob: -15.875160217285156
    9. '()</' → logprob: -16.000160217285156
    10. '()<' → logprob: -16.125160217285156

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011018721852451563
    2. '<|end|>' → logprob: -7.501101970672607
    3. '   ' → logprob: -8.25110149383545
    4. 'if' → logprob: -8.75110149383545
    5. ' if' → logprob: -9.12610149383545
    6. '<|end|>' → logprob: -11.62610149383545
    7. '           ' → logprob: -12.37610149383545
    8. ' ' → logprob: -13.75110149383545
    9. '```' → logprob: -13.87610149383545
    10. '      ' → logprob: -14.12610149383545

Token 105: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6159376502037048
    2. '       ' → logprob: -0.8659376502037048
    3. ' if' → logprob: -3.2409377098083496
    4. '   ' → logprob: -9.740937232971191
    5. '	if' → logprob: -11.115937232971191
    6. '<|end|>' → logprob: -13.240937232971191
    7. '<|end|>' → logprob: -13.490937232971191
    8. 'formula' → logprob: -13.490937232971191
    9. '```' → logprob: -14.115937232971191
    10. ' ' → logprob: -14.615937232971191

Token 106: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5797905325889587
    2. 'line' → logprob: -1.4547905921936035
    3. ' not' → logprob: -1.8297905921936035
    4. 'not' → logprob: -3.0797905921936035
    5. ' ' → logprob: -10.579790115356445
    6. '	line' → logprob: -10.704790115356445
    7. '#line' → logprob: -10.954790115356445
    8. '=line' → logprob: -11.204790115356445
    9. '(line' → logprob: -11.329790115356445
    10. '[line' → logprob: -11.954790115356445

Token 107: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03993508219718933
    2. '=="' → logprob: -3.2899351119995117
    3. ' ==' → logprob: -6.289935111999512
    4. '=='' → logprob: -10.664935111999512
    5. '==
' → logprob: -11.914935111999512
    6. '=' → logprob: -13.039935111999512
    7. ' =="' → logprob: -13.789935111999512
    8. ')==' → logprob: -13.914935111999512
    9. '==="' → logprob: -14.289935111999512
    10. '.startswith' → logprob: -14.789935111999512

Token 108: '0' (ID: 15)
  Prédit: 'END'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'END' → logprob: -0.0019300628919154406
    2. '"' → logprob: -6.626930236816406
    3. ''' → logprob: -7.501930236816406
    4. '''' → logprob: -11.126930236816406
    5. '""' → logprob: -11.626930236816406
    6. ' END' → logprob: -11.876930236816406
    7. '.END' → logprob: -12.626930236816406
    8. 'end' → logprob: -13.001930236816406
    9. ''end' → logprob: -13.001930236816406
    10. '_END' → logprob: -13.126930236816406

Token 109: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.09389858692884445
    2. '":' → logprob: -2.4688985347747803
    3. '"' → logprob: -5.718898773193359
    4. '":
' → logprob: -7.218898773193359
    5. ':
' → logprob: -7.593898773193359
    6. '"):
' → logprob: -8.21889877319336
    7. ':' → logprob: -9.96889877319336
    8. '":

' → logprob: -10.59389877319336
    9. '   ' → logprob: -10.84389877319336
    10. '0' → logprob: -10.96889877319336

Token 110: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007430446334183216
    2. '       ' → logprob: -5.007430553436279
    3. ':' → logprob: -8.132430076599121
    4. ':
' → logprob: -8.757430076599121
    5. '   ' → logprob: -8.882430076599121
    6. '<|end|>' → logprob: -10.632430076599121
    7. '	       ' → logprob: -10.632430076599121
    8. ' break' → logprob: -10.882430076599121
    9. '          ' → logprob: -11.507430076599121
    10. '
' → logprob: -11.507430076599121

Token 111: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19869543612003326
    2. ' break' → logprob: -2.448695421218872
    3. 'break' (adapté à ' break') → logprob: -2.948695421218872
    4. '       ' → logprob: -3.198695421218872
    5. '               ' → logprob: -8.573695182800293
    6. '   ' → logprob: -8.573695182800293
    7. '	break' → logprob: -8.698695182800293
    8. '	       ' → logprob: -12.448695182800293
    9. '
' → logprob: -12.573695182800293
    10. '		' → logprob: -12.823695182800293

Token 112: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014334988372866064
    2. '<|end|>' → logprob: -9.750143051147461
    3. '   ' → logprob: -10.375143051147461
    4. '
' → logprob: -10.750143051147461
    5. '<|end|>' → logprob: -12.125143051147461
    6. 'formula' → logprob: -12.250143051147461
    7. ',' → logprob: -12.375143051147461
    8. '```' → logprob: -12.375143051147461
    9. ' formula' → logprob: -12.500143051147461
    10. '           ' → logprob: -12.625143051147461

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.412610233994201e-05
    2. '   ' → logprob: -9.875094413757324
    3. '<|end|>' → logprob: -10.750094413757324
    4. '```' → logprob: -11.875094413757324
    5. 'formula' → logprob: -12.375094413757324
    6. '<|end|>' → logprob: -12.500094413757324
    7. '           ' → logprob: -13.375094413757324
    8. ' formula' → logprob: -13.750094413757324
    9. ',' → logprob: -13.875094413757324
    10. '
' → logprob: -14.375094413757324

Token 114: ' formula' (ID: 20690)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006966847460716963
    2. '   ' → logprob: -5.256967067718506
    3. ' formula' → logprob: -6.631967067718506
    4. 'formula' (adapté à ' formula') → logprob: -7.881967067718506
    5. '<|end|>' → logprob: -11.756966590881348
    6. 'form' → logprob: -12.131966590881348
    7. '<|end|>' → logprob: -12.131966590881348
    8. '	form' → logprob: -12.381966590881348
    9. '           ' → logprob: -13.131966590881348
    10. '_formula' → logprob: -13.131966590881348

Token 115: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0018019152339547873
    2. ' =' → logprob: -7.12680196762085
    3. '=' → logprob: -7.37680196762085
    4. 's' → logprob: -9.001801490783691
    5. '=_' → logprob: -9.001801490783691
    6. '_line' → logprob: -10.001801490783691
    7. '_' → logprob: -10.626801490783691
    8. '=line' → logprob: -10.626801490783691
    9. '=form' → logprob: -11.251801490783691
    10. '_parts' → logprob: -12.751801490783691

Token 116: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021188464597798884
    2. '.' → logprob: -8.500211715698242
    3. ' .' → logprob: -12.500211715698242
    4. '.extend' → logprob: -12.875211715698242
    5. '.app' → logprob: -13.375211715698242
    6. '.ap' → logprob: -14.750211715698242
    7. 'append' → logprob: -16.125211715698242
    8. '.setdefault' → logprob: -17.875211715698242
    9. '_append' → logprob: -18.000211715698242
    10. '.push' → logprob: -18.000211715698242

Token 117: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. 'line' → logprob: -17.875001907348633
    4. '=line' → logprob: -18.125001907348633
    5. '(Line' → logprob: -18.125001907348633
    6. '[line' → logprob: -18.375001907348633
    7. ' (' → logprob: -19.375001907348633
    8. ' line' → logprob: -19.500001907348633
    9. '(lines' → logprob: -19.625001907348633
    10. ',line' → logprob: -19.625001907348633

Token 118: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7888184528565034e-05
    2. ')
' → logprob: -10.6250581741333
    3. ' )' → logprob: -10.8750581741333
    4. '   ' → logprob: -12.0000581741333
    5. '       ' → logprob: -12.2500581741333
    6. '))' → logprob: -13.8750581741333
    7. '`)' → logprob: -14.2500581741333
    8. '+)' → logprob: -15.0000581741333
    9. '')' → logprob: -15.0000581741333
    10. ')

' → logprob: -15.0000581741333

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21151253581047058
    2. '
' → logprob: -1.961512565612793
    3. 'def' → logprob: -4.086512565612793
    4. '    
' → logprob: -4.211512565612793
    5. '<|end|>' → logprob: -4.211512565612793
    6. ' for' → logprob: -6.961512565612793
    7. 'for' → logprob: -7.086512565612793
    8. '<|end|>' → logprob: -7.711512565612793
    9. ')' → logprob: -7.836512565612793
    10. '  
' → logprob: -8.836512565612793

Token 120: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04874485358595848
    2. 'results' → logprob: -3.9237449169158936
    3. 'result' → logprob: -4.9237446784973145
    4. 'total' → logprob: -5.0487446784973145
    5. 'for' (adapté à ' for') → logprob: -5.2987446784973145
    6. '
' → logprob: -6.1737446784973145
    7. ' def' → logprob: -6.4237446784973145
    8. '   ' → logprob: -6.6737446784973145
    9. 'weights' → logprob: -7.2987446784973145
    10. ' for' → logprob: -7.5487446784973145

Token 121: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.013467836193740368
    2. ' line' → logprob: -4.763467788696289
    3. ' ' → logprob: -6.388467788696289
    4. 'formula' → logprob: -6.388467788696289
    5. '_formula' → logprob: -6.638467788696289
    6. ' form' → logprob: -9.763467788696289
    7. '_' → logprob: -10.388467788696289
    8. ' formule' → logprob: -10.513467788696289
    9. ' _' → logprob: -10.638467788696289
    10. 'line' → logprob: -12.138467788696289

Token 122: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018270393833518028
    2. 'in' → logprob: -4.018270492553711
    3. '_in' → logprob: -9.393270492553711
    4. '_' → logprob: -11.518270492553711
    5. ' ' → logprob: -11.768270492553711
    6. ',' → logprob: -12.393270492553711
    7. '   ' → logprob: -12.643270492553711
    8. ':' → logprob: -12.768270492553711
    9. '	in' → logprob: -13.393270492553711
    10. '  ' → logprob: -13.518270492553711

Token 123: ' formula' (ID: 20690)
  Prédit: ' formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' formula' → logprob: -0.16022524237632751
    2. 'formula' → logprob: -1.91022527217865
    3. 'form' → logprob: -14.535224914550781
    4. ' formulas' → logprob: -15.660224914550781
    5. '_formula' → logprob: -15.660224914550781
    6. ' formule' → logprob: -15.910224914550781
    7. '(form' → logprob: -16.03522491455078
    8. ' fórmula' → logprob: -17.41022491455078
    9. '   ' → logprob: -17.78522491455078
    10. ' ' → logprob: -17.91022491455078

Token 124: '_lines' (ID: 42980)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006718054646626115
    2. ':
' → logprob: -7.375671863555908
    3. '.split' → logprob: -11.00067138671875
    4. ' :' → logprob: -11.37567138671875
    5. '[:]' → logprob: -12.25067138671875
    6. '):' → logprob: -12.37567138671875
    7. '[' → logprob: -13.50067138671875
    8. '[:' → logprob: -14.25067138671875
    9. ':**' → logprob: -14.62567138671875
    10. ':

' → logprob: -14.62567138671875

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015730679733678699
    2. ':
' → logprob: -6.501573085784912
    3. '):' → logprob: -10.876572608947754
    4. ',' → logprob: -11.001572608947754
    5. ' :' → logprob: -11.376572608947754
    6. '       ' → logprob: -12.376572608947754
    7. '   ' → logprob: -12.501572608947754
    8. '():' → logprob: -12.501572608947754
    9. '<|end|>' → logprob: -12.626572608947754
    10. ':

' → logprob: -13.626572608947754

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25740379095077515
    2. ':' → logprob: -1.88240385055542
    3. ' :' → logprob: -3.50740385055542
    4. ' ' → logprob: -4.25740385055542
    5. '        ' → logprob: -4.63240385055542
    6. '    ' → logprob: -4.88240385055542
    7. '        
' → logprob: -5.75740385055542
    8. ':
' → logprob: -5.88240385055542
    9. ',' → logprob: -6.38240385055542
    10. '   ' → logprob: -7.25740385055542

Token 127: ' try' (ID: 2075)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.37935104966163635
    2. 'total' → logprob: -1.879351019859314
    3. ' weight' → logprob: -2.6293511390686035
    4. 'weight' → logprob: -3.2543511390686035
    5. ' result' → logprob: -4.1293511390686035
    6. 'result' → logprob: -5.0043511390686035
    7. ' pos' → logprob: -5.0043511390686035
    8. ' mass' → logprob: -5.2543511390686035
    9. '       ' → logprob: -5.5043511390686035
    10. ' stack' → logprob: -6.1293511390686035

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01865880750119686
    2. ':
' → logprob: -4.018658638000488
    3. '           ' → logprob: -7.643658638000488
    4. ' :' → logprob: -11.393658638000488
    5. '       ' → logprob: -11.768658638000488
    6. '):' → logprob: -13.018658638000488
    7. '        ' → logprob: -13.143658638000488
    8. ':

' → logprob: -13.643658638000488
    9. '():' → logprob: -14.268658638000488
    10. '):
' → logprob: -14.393658638000488

Token 129: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03595422953367233
    2. ':' → logprob: -3.410954236984253
    3. ':
' → logprob: -6.410953998565674
    4. '       ' → logprob: -8.535954475402832
    5. '        ' → logprob: -9.285954475402832
    6. '          ' → logprob: -9.910954475402832
    7. '            ' → logprob: -9.910954475402832
    8. '            
' → logprob: -10.160954475402832
    9. ' :' → logprob: -10.285954475402832
    10. '	       ' → logprob: -10.285954475402832

Token 130: ' total' (ID: 3609)
  Prédit: ' tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.8028774261474609
    2. ' pattern' → logprob: -1.927877426147461
    3. '           ' → logprob: -2.302877426147461
    4. ' import' → logprob: -2.427877426147461
    5. ' parser' → logprob: -3.552877426147461
    6. ' match' → logprob: -3.552877426147461
    7. '            ' → logprob: -3.802877426147461
    8. ' result' → logprob: -3.802877426147461
    9. 'tokens' → logprob: -4.052877426147461
    10. ' pos' → logprob: -4.427877426147461

Token 131: ' =' (ID: 314)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.05338156595826149
    2. '_' → logprob: -3.1783816814422607
    3. '_weights' → logprob: -5.303381443023682
    4. ' =' → logprob: -5.678381443023682
    5. '=' → logprob: -6.678381443023682
    6. '_w' → logprob: -8.80338191986084
    7. ' _' → logprob: -9.05338191986084
    8. '_score' → logprob: -9.05338191986084
    9. 'weight' → logprob: -9.55338191986084
    10. '_mass' → logprob: -9.80338191986084

Token 132: ' parse' (ID: 8420)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4495123624801636
    2. ' ' → logprob: -1.0745123624801636
    3. ' calculate' → logprob: -5.199512481689453
    4. ' parse' → logprob: -5.324512481689453
    5. 'calculate' → logprob: -5.824512481689453
    6. 'parse' → logprob: -6.074512481689453
    7. ' compute' → logprob: -6.199512481689453
    8. ' weights' → logprob: -7.199512481689453
    9. 'compute' → logprob: -7.449512481689453
    10. ' sum' → logprob: -7.949512481689453

Token 133: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -0.9611358046531677
    2. '(' → logprob: -1.2111358642578125
    3. '(form' → logprob: -1.3361358642578125
    4. 'formula' → logprob: -2.9611358642578125
    5. '_' → logprob: -6.9611358642578125
    6. ')' → logprob: -7.0861358642578125
    7. '_atom' → logprob: -7.2111358642578125
    8. ' (' → logprob: -7.8361358642578125
    9. '_token' → logprob: -8.086135864257812
    10. ' formula' → logprob: -8.211135864257812

Token 134: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -0.026351740583777428
    2. '(' → logprob: -3.6513516902923584
    3. ' (' → logprob: -10.276351928710938
    4. '(
' → logprob: -11.901351928710938
    5. '(token' → logprob: -12.651351928710938
    6. '(f' → logprob: -13.401351928710938
    7. '(tokens' → logprob: -14.526351928710938
    8. '(`' → logprob: -14.651351928710938
    9. '<|end|>' → logprob: -14.651351928710938
    10. 'formula' → logprob: -14.901351928710938

Token 135: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -5.512236498361744e-07
    2. '           ' → logprob: -15.625000953674316
    3. 'ule' → logprob: -16.625
    4. '       ' → logprob: -17.0
    5. '   ' → logprob: -17.375
    6. 'ul' → logprob: -17.5
    7. '               ' → logprob: -17.75
    8. 'formula' → logprob: -17.75
    9. 'ула' → logprob: -18.0
    10. ' formula' → logprob: -18.0

Token 136: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28206515312194824
    2. ',' → logprob: -1.4070651531219482
    3. '       ' → logprob: -7.782065391540527
    4. ')
' → logprob: -8.157065391540527
    5. '   ' → logprob: -9.907065391540527
    6. ' ,' → logprob: -10.157065391540527
    7. ' )' → logprob: -10.282065391540527
    8. ',
' → logprob: -10.907065391540527
    9. '[' → logprob: -11.907065391540527
    10. '           ' → logprob: -12.032065391540527

Token 137: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.050333015620708466
    2. ' weights' → logprob: -3.050333023071289
    3. '0' → logprob: -6.425333023071289
    4. 'pattern' → logprob: -9.425333023071289
    5. ' ' → logprob: -11.300333023071289
    6. '   ' → logprob: -11.550333023071289
    7. '(weights' → logprob: -12.175333023071289
    8. ' pattern' → logprob: -12.300333023071289
    9. '1' → logprob: -13.050333023071289
    10. 'weight' → logprob: -13.175333023071289

Token 138: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002851729223039001
    2. ',' → logprob: -8.875285148620605
    3. ')
' → logprob: -9.250285148620605
    4. '       ' → logprob: -10.125285148620605
    5. ' )' → logprob: -12.000285148620605
    6. '   ' → logprob: -13.625285148620605
    7. ')[' → logprob: -15.375285148620605
    8. ')

' → logprob: -15.375285148620605
    9. '           ' → logprob: -15.875285148620605
    10. '),' → logprob: -16.000286102294922

Token 139: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7070785164833069
    2. '       ' → logprob: -0.8320785164833069
    3. '[' → logprob: -3.832078456878662
    4. '<|end|>' → logprob: -4.082078456878662
    5. '           ' → logprob: -4.707078456878662
    6. '.' → logprob: -4.832078456878662
    7. '               ' → logprob: -5.457078456878662
    8. ':' → logprob: -5.707078456878662
    9. '   ' → logprob: -6.457078456878662
    10. '<|end|>' → logprob: -6.957078456878662

Token 140: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28193098306655884
    2. 'print' (adapté à ' print') → logprob: -1.531930923461914
    3. ' print' → logprob: -3.531930923461914
    4. '       ' → logprob: -8.531930923461914
    5. ')' → logprob: -9.906930923461914
    6. '
' → logprob: -11.156930923461914
    7. '               ' → logprob: -11.406930923461914
    8. '            
' → logprob: -11.656930923461914
    9. '<|end|>' → logprob: -12.031930923461914
    10. '(print' → logprob: -12.781930923461914

Token 141: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.002518703928217292
    2. '(' → logprob: -6.002518653869629
    3. '(f' → logprob: -10.127518653869629
    4. '('' → logprob: -13.627518653869629
    5. ' (' → logprob: -14.127518653869629
    6. '("' → logprob: -14.627518653869629
    7. 'total' → logprob: -14.752518653869629
    8. '(int' → logprob: -16.002519607543945
    9. '(round' → logprob: -16.502519607543945
    10. '(t' → logprob: -17.252519607543945

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ' )' → logprob: -12.50001049041748
    3. ')
' → logprob: -12.50001049041748
    4. ')`' → logprob: -13.87501049041748
    5. '))' → logprob: -14.50001049041748
    6. '`)' → logprob: -14.62501049041748
    7. '()' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.250009536743164
    9. '')' → logprob: -16.625009536743164
    10. '())' → logprob: -16.750009536743164

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03641504421830177
    2. ')' → logprob: -3.5364151000976562
    3. '<|end|>' → logprob: -6.161415100097656
    4. 'except' → logprob: -6.786415100097656
    5. '()' → logprob: -7.286415100097656
    6. '(' → logprob: -7.536415100097656
    7. 'else' → logprob: -7.661415100097656
    8. ' except' → logprob: -8.161415100097656
    9. ':' → logprob: -8.286415100097656
    10. ' else' → logprob: -8.661415100097656

Token 144: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46660783886909485
    2. ' except' → logprob: -1.2166078090667725
    3. 'except' (adapté à ' except') → logprob: -2.5916078090667725
    4. '	except' → logprob: -6.841608047485352
    5. '
' → logprob: -7.591608047485352
    6. '   ' → logprob: -9.466608047485352
    7. ':' → logprob: -10.716608047485352
    8. ')' → logprob: -10.716608047485352
    9. ':
' → logprob: -10.966608047485352
    10. '           ' → logprob: -12.341608047485352

Token 145: ':
' (ID: 734)
  Prédit: ' Exception'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Exception' → logprob: -0.0608011819422245
    2. ' Key' → logprob: -3.5608012676239014
    3. ' Value' → logprob: -4.560801029205322
    4. '(Exception' → logprob: -4.685801029205322
    5. '(Key' → logprob: -5.435801029205322
    6. 'Exception' → logprob: -5.560801029205322
    7. ' (' → logprob: -7.435801029205322
    8. '(' → logprob: -7.685801029205322
    9. '<|end|>' → logprob: -7.935801029205322
    10. 'Key' → logprob: -8.06080150604248

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003966317046433687
    2. ' ' → logprob: -6.378966331481934
    3. ' pass' → logprob: -7.253966331481934
    4. ' ' → logprob: -7.503966331481934
    5. ' print' → logprob: -8.503966331481934
    6. '            ' → logprob: -9.378966331481934
    7. '()' → logprob: -9.628966331481934
    8. ' Exception' → logprob: -9.628966331481934
    9. ' continue' → logprob: -9.753966331481934
    10. '       ' → logprob: -9.753966331481934

Token 147: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6387955546379089
    2. ' print' → logprob: -0.7637955546379089
    3. '           ' → logprob: -5.263795375823975
    4. '       ' → logprob: -7.138795375823975
    5. '0' → logprob: -9.138795852661133
    6. ' continue' → logprob: -10.638795852661133
    7. '    ' → logprob: -10.763795852661133
    8. '        ' → logprob: -11.013795852661133
    9. '   ' → logprob: -11.138795852661133
    10. ' ' → logprob: -11.638795852661133

Token 148: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36379730701446533
    2. '("' → logprob: -1.3637973070144653
    3. '('' → logprob: -3.113797187805176
    4. '(-' → logprob: -5.863797187805176
    5. '()' → logprob: -6.863797187805176
    6. '0' → logprob: -7.363797187805176
    7. '"' → logprob: -9.613797187805176
    8. '("?' → logprob: -9.863797187805176
    9. ' (' → logprob: -9.988797187805176
    10. ' ' → logprob: -10.488797187805176

Token 149: 'UNKNOWN' (ID: 129344)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ERROR' → logprob: -0.6902336478233337
    2. 'Error' → logprob: -1.9402337074279785
    3. 'INVALID' → logprob: -2.3152337074279785
    4. '-' → logprob: -2.5652337074279785
    5. '0' → logprob: -2.9402337074279785
    6. 'ERR' → logprob: -3.4402337074279785
    7. 'NA' → logprob: -3.5652337074279785
    8. 'error' → logprob: -3.9402337074279785
    9. 'UNKNOWN' → logprob: -4.3152337074279785
    10. 'Invalid' → logprob: -4.6902337074279785

Token 150: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00021867557370569557
    2. ')")' → logprob: -9.000218391418457
    3. ')' → logprob: -9.500218391418457
    4. '_TOKEN' → logprob: -12.375218391418457
    5. '_SYMBOL' → logprob: -12.375218391418457
    6. '")
' → logprob: -12.625218391418457
    7. '}")' → logprob: -13.250218391418457
    8. '_ERROR' → logprob: -13.500218391418457
    9. 'TOKEN' → logprob: -13.875218391418457
    10. 'ATOM' → logprob: -14.250218391418457

Token 151: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4510378837585449
    2. '
' → logprob: -1.701037883758545
    3. '(' → logprob: -3.201037883758545
    4. '\' → logprob: -3.451037883758545
    5. '    
' → logprob: -3.826037883758545
    6. '(
' → logprob: -3.951037883758545
    7. '   ' → logprob: -3.951037883758545
    8. ' 
' → logprob: -4.201037883758545
    9. '_' → logprob: -4.701037883758545
    10. '  
' → logprob: -5.326037883758545

Token 152: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.0012114259880036116
    2. '_parse' → logprob: -6.876211643218994
    3. 'parse' → logprob: -9.876211166381836
    4. '_' → logprob: -10.126211166381836
    5. ' ' → logprob: -10.751211166381836
    6. ' def' → logprob: -10.751211166381836
    7. ' _' → logprob: -10.876211166381836
    8. '_parser' → logprob: -11.376211166381836
    9. ' parser' → logprob: -12.126211166381836
    10. '(parse' → logprob: -12.376211166381836

Token 153: '_formula' (ID: 188631)
  Prédit: '_formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formula' → logprob: -0.0005880602402612567
    2. '_' → logprob: -7.7505879402160645
    3. '_form' → logprob: -8.875588417053223
    4. '_token' → logprob: -11.125588417053223
    5. '_atom' → logprob: -14.000588417053223
    6. '_factor' → logprob: -14.625588417053223
    7. '_format' → logprob: -15.125588417053223
    8. '_parse' → logprob: -15.250588417053223
    9. '_function' → logprob: -15.375588417053223
    10. ' _' → logprob: -15.750588417053223

Token 154: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -0.0069490838795900345
    2. '(' → logprob: -5.006948947906494
    3. ' (' → logprob: -8.381949424743652
    4. '(f' → logprob: -13.506949424743652
    5. '(s' → logprob: -14.006949424743652
    6. '(line' → logprob: -14.631949424743652
    7. '(expression' → logprob: -15.256949424743652
    8. '(for' → logprob: -15.381949424743652
    9. 'formula' → logprob: -15.506949424743652
    10. '(fmt' → logprob: -15.631949424743652

Token 155: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.00040362097206525505
    2. ')' → logprob: -8.37540340423584
    3. '(' → logprob: -9.50040340423584
    4. 'at' → logprob: -10.37540340423584
    5. '(form' → logprob: -10.75040340423584
    6. '(at' → logprob: -12.00040340423584
    7. 'ura' → logprob: -12.37540340423584
    8. 'ation' → logprob: -12.37540340423584
    9. 'ule' → logprob: -12.50040340423584
    10. 'la' → logprob: -12.50040340423584

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015431294741574675
    2. ' ,' → logprob: -8.875154495239258
    3. '):' → logprob: -12.000154495239258
    4. ',index' → logprob: -12.375154495239258
    5. ',f' → logprob: -14.125154495239258
    6. ',s' → logprob: -14.375154495239258
    7. ',input' → logprob: -14.875154495239258
    8. ',
' → logprob: -15.000154495239258
    9. ',line' → logprob: -15.250154495239258
    10. ',start' → logprob: -15.375154495239258

Token 157: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.3869563639163971
    2. ' weights' → logprob: -1.1369563341140747
    3. ')' → logprob: -10.886956214904785
    4. '(weights' → logprob: -11.386956214904785
    5. ' formula' → logprob: -12.011956214904785
    6. '_weights' → logprob: -12.136956214904785
    7. 'formula' → logprob: -12.136956214904785
    8. ' ' → logprob: -12.386956214904785
    9. 'pos' → logprob: -12.386956214904785
    10. 'weight' → logprob: -12.386956214904785

Token 158: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03434131294488907
    2. '):' → logprob: -3.409341335296631
    3. '):
' → logprob: -7.534341335296631
    4. ' ,' → logprob: -9.034340858459473
    5. ' ):' → logprob: -10.909340858459473
    6. ')' → logprob: -12.159340858459473
    7. '):

' → logprob: -12.534340858459473
    8. ',index' → logprob: -12.659340858459473
    9. '   ' → logprob: -13.034340858459473
    10. '):
' → logprob: -13.409340858459473

Token 159: '   ' (ID: 271)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.55522221326828
    2. '   ' → logprob: -1.1802222728729248
    3. ' import' → logprob: -2.680222272872925
    4. 'import' → logprob: -4.680222034454346
    5. ' stack' → logprob: -4.805222034454346
    6. ' i' → logprob: -4.805222034454346
    7. ' tokens' → logprob: -4.805222034454346
    8. 'pos' → logprob: -5.180222034454346
    9. ' def' → logprob: -5.930222034454346
    10. '    ' → logprob: -6.180222034454346

Token 160: ' pos' (ID: 1253)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -1.2897528409957886
    2. ' pos' → logprob: -1.5397528409957886
    3. ' stack' → logprob: -1.5397528409957886
    4. 'import' → logprob: -2.039752960205078
    5. 'stack' → logprob: -2.914752960205078
    6. '   ' → logprob: -3.289752960205078
    7. 'pos' (adapté à ' pos') → logprob: -3.789752960205078
    8. 'def' → logprob: -4.039752960205078
    9. ' tokens' → logprob: -4.414752960205078
    10. ' def' → logprob: -5.039752960205078

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11619671434164047
    2. '=' → logprob: -2.241196632385254
    3. ' +=' → logprob: -6.991196632385254
    4. ' ' → logprob: -7.491196632385254
    5. '<|end|>' → logprob: -7.616196632385254
    6. '   ' → logprob: -7.741196632385254
    7. ')' → logprob: -8.241196632385254
    8. '_' → logprob: -8.741196632385254
    9. '0' → logprob: -8.741196632385254
    10. '  ' → logprob: -9.866196632385254

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017049367306753993
    2. ' ' → logprob: -6.376705169677734
    3. '[' → logprob: -12.876705169677734
    4. ' [' → logprob: -16.126705169677734
    5. '1' → logprob: -17.126705169677734
    6. '   ' → logprob: -17.626705169677734
    7. '{' → logprob: -17.876705169677734
    8. '  ' → logprob: -18.626705169677734
    9. '```' → logprob: -19.251705169677734
    10. '<|end|>' → logprob: -19.564205169677734

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.0536883615423e-05
    2. '[' → logprob: -9.750080108642578
    3. ' ' → logprob: -10.750080108642578
    4. '{' → logprob: -14.250080108642578
    5. ' [' → logprob: -16.250080108642578
    6. '1' → logprob: -17.625080108642578
    7. '(' → logprob: -18.250080108642578
    8. '   ' → logprob: -18.500080108642578
    9. '```' → logprob: -18.750080108642578
    10. '{'' → logprob: -18.875080108642578

Token 164: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3032945394515991
    2. '<|end|>' → logprob: -1.8032945394515991
    3. '
' → logprob: -2.8032946586608887
    4. '    ' → logprob: -4.803294658660889
    5. 'def' → logprob: -4.928294658660889
    6. '    
' → logprob: -5.053294658660889
    7. ' ' → logprob: -5.053294658660889
    8. ' def' → logprob: -6.178294658660889
    9. ' 
' → logprob: -6.428294658660889
    10. ',' → logprob: -6.928294658660889

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01622626557946205
    2. '    
' → logprob: -5.141226291656494
    3. '
' → logprob: -5.266226291656494
    4. 'def' → logprob: -6.016226291656494
    5. '    ' → logprob: -7.266226291656494
    6. ' def' → logprob: -7.266226291656494
    7. ',' → logprob: -8.516225814819336
    8. '<|end|>' → logprob: -8.891225814819336
    9. ' 
' → logprob: -9.016225814819336
    10. 'tokens' → logprob: -9.266225814819336

Token 166: ' n' (ID: 297)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2206040620803833
    2. 'length' → logprob: -2.5956039428710938
    3. ' def' → logprob: -2.8456039428710938
    4. ' length' → logprob: -3.2206039428710938
    5. 'stack' → logprob: -4.095603942871094
    6. ' stack' → logprob: -5.595603942871094
    7. 'tokens' → logprob: -6.470603942871094
    8. 'n' (adapté à ' n') → logprob: -6.845603942871094
    9. ' tokens' → logprob: -7.470603942871094
    10. 'token' → logprob: -7.595603942871094

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006818377412855625
    2. '=' → logprob: -5.0068182945251465
    3. '   ' → logprob: -9.756818771362305
    4. ' ' → logprob: -10.256818771362305
    5. '=len' → logprob: -12.131818771362305
    6. '  ' → logprob: -13.006818771362305
    7. ',' → logprob: -13.381818771362305
    8. 'def' → logprob: -15.381818771362305
    9. '    ' → logprob: -15.881818771362305
    10. ' =
' → logprob: -16.756818771362305

Token 168: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.008614926598966122
    2. ' len' → logprob: -4.758615016937256
    3. '(len' → logprob: -15.258614540100098
    4. '   ' → logprob: -16.133615493774414
    5. '[len' → logprob: -18.133615493774414
    6. '=len' → logprob: -18.258615493774414
    7. ' ' → logprob: -19.758615493774414
    8. '	len' → logprob: -20.383615493774414
    9. ',len' → logprob: -20.508615493774414
    10. '  ' → logprob: -20.633615493774414

Token 169: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -0.0001025895617203787
    2. 'formula' → logprob: -9.375102996826172
    3. '(' → logprob: -11.250102996826172
    4. ' (' → logprob: -13.125102996826172
    5. ' formula' → logprob: -13.250102996826172
    6. '=form' → logprob: -14.500102996826172
    7. '_formula' → logprob: -15.750102996826172
    8. '$form' → logprob: -16.375102996826172
    9. 'form' → logprob: -16.375102996826172
    10. '<form' → logprob: -17.250102996826172

Token 170: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -6.134509021649137e-05
    2. ')' → logprob: -10.87506103515625
    3. 'a' → logprob: -11.00006103515625
    4. 'formula' → logprob: -11.25006103515625
    5. ' formula' → logprob: -12.87506103515625
    6. '```' → logprob: -13.25006103515625
    7. '(form' → logprob: -13.37506103515625
    8. 'ула' → logprob: -13.62506103515625
    9. '}' → logprob: -14.00006103515625
    10. '_formula' → logprob: -14.12506103515625

Token 171: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007980733062140644
    2. ')
' → logprob: -7.375798225402832
    3. '   ' → logprob: -9.125798225402832
    4. ' )' → logprob: -10.000798225402832
    5. '<|end|>' → logprob: -11.875798225402832
    6. '
' → logprob: -12.250798225402832
    7. ',' → logprob: -14.125798225402832
    8. ' ' → logprob: -14.250798225402832
    9. '')' → logprob: -14.500798225402832
    10. 'def' → logprob: -14.625798225402832

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3512019217014313
    2. 'def' → logprob: -1.6012018918991089
    3. ' def' → logprob: -2.6012020111083984
    4. '    
' → logprob: -5.226202011108398
    5. ' while' → logprob: -5.351202011108398
    6. ' stack' → logprob: -5.726202011108398
    7. ' 
' → logprob: -6.851202011108398
    8. ' tokens' → logprob: -6.976202011108398
    9. ' token' → logprob: -7.226202011108398
    10. 'stack' → logprob: -7.351202011108398

Token 173: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.016877710819244385
    2. 'stack' → logprob: -5.0168776512146
    3. '   ' → logprob: -5.2668776512146
    4. ' def' → logprob: -5.3918776512146
    5. '
' → logprob: -8.516878128051758
    6. '    
' → logprob: -8.891878128051758
    7. ' stack' → logprob: -9.891878128051758
    8. 'tokens' → logprob: -13.266878128051758
    9. ' 
' → logprob: -13.516878128051758
    10. 'token' → logprob: -14.016878128051758

Token 174: ' parse' (ID: 8420)
  Prédit: ' parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.009918407537043095
    2. 'parse' → logprob: -4.634918212890625
    3. ' next' → logprob: -9.759918212890625
    4. ' get' → logprob: -10.509918212890625
    5. '_parse' → logprob: -10.759918212890625
    6. ' tokenize' → logprob: -10.884918212890625
    7. ' consume' → logprob: -11.009918212890625
    8. 'next' → logprob: -12.884918212890625
    9. 'consume' → logprob: -12.884918212890625
    10. 'token' → logprob: -13.009918212890625

Token 175: '_atom' (ID: 106253)
  Prédit: '_atom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_atom' → logprob: -0.4046861231327057
    2. '_token' → logprob: -1.9046860933303833
    3. '_element' → logprob: -1.9046860933303833
    4. '_group' → logprob: -3.404686212539673
    5. '_' → logprob: -7.529685974121094
    6. '_symbol' → logprob: -7.904685974121094
    7. '_factor' → logprob: -8.404685974121094
    8. '_unit' → logprob: -8.529685974121094
    9. '_formula' → logprob: -8.779685974121094
    10. '_term' → logprob: -9.154685974121094

Token 176: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.005284626968204975
    2. '():
' → logprob: -5.255284786224365
    3. '()' → logprob: -10.130284309387207
    4. ' ():' → logprob: -11.505284309387207
    5. '():

' → logprob: -14.630284309387207
    6. '(' → logprob: -15.630284309387207
    7. '():
' → logprob: -15.880284309387207
    8. '(),' → logprob: -17.880285263061523
    9. ':' → logprob: -18.130285263061523
    10. '   ' → logprob: -18.130285263061523

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03523245081305504
    2. ' if' → logprob: -4.4102325439453125
    3. '   ' → logprob: -5.2852325439453125
    4. '    ' → logprob: -5.5352325439453125
    5. '[' → logprob: -5.6602325439453125
    6. ' match' → logprob: -6.0352325439453125
    7. ' ' → logprob: -6.6602325439453125
    8. 'if' → logprob: -6.7852325439453125
    9. '[A' → logprob: -7.5352325439453125
    10. ' [' → logprob: -7.6602325439453125

Token 178: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8355029821395874
    2. 'm' → logprob: -1.5855029821395874
    3. ' if' → logprob: -1.9605029821395874
    4. 'match' → logprob: -2.085503101348877
    5. ' m' → logprob: -3.710503101348877
    6. '       ' → logprob: -3.960503101348877
    7. ' match' → logprob: -3.960503101348877
    8. 'non' (adapté à ' non') → logprob: -4.085503101348877
    9. ' non' → logprob: -4.710503101348877
    10. '   ' → logprob: -5.210503101348877

Token 179: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.04103454574942589
    2. '   ' → logprob: -3.666034460067749
    3. '       ' → logprob: -4.541034698486328
    4. 'def' → logprob: -6.416034698486328
    5. ' local' → logprob: -7.166034698486328
    6. 'pos' → logprob: -8.041034698486328
    7. '           ' → logprob: -8.666034698486328
    8. '[' → logprob: -8.916034698486328
    9. 'space' → logprob: -8.916034698486328
    10. 'match' → logprob: -8.916034698486328

Token 180: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.0002680112374946475
    2. ' pos' → logprob: -8.25026798248291
    3. 'formula' → logprob: -12.00026798248291
    4. ' formula' → logprob: -14.75026798248291
    5. ' ' → logprob: -16.250268936157227
    6. 'form' → logprob: -17.000268936157227
    7. '   ' → logprob: -17.375268936157227
    8. 'position' → logprob: -17.750268936157227
    9. '	pos' → logprob: -18.875268936157227
    10. '  ' → logprob: -19.125268936157227

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001905319862999022
    2. '
' → logprob: -7.37690544128418
    3. '        
' → logprob: -8.12690544128418
    4. ',' → logprob: -8.25190544128418
    5. '   ' → logprob: -8.50190544128418
    6. '  
' → logprob: -9.00190544128418
    7. '    
' → logprob: -9.00190544128418
    8. 'if' → logprob: -10.12690544128418
    9. '      ' → logprob: -10.37690544128418
    10. '    ' → logprob: -10.50190544128418

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16667897999286652
    2. ' if' → logprob: -2.7916789054870605
    3. 'if' → logprob: -3.1666789054870605
    4. 'm' → logprob: -3.7916789054870605
    5. 'match' → logprob: -4.2916789054870605
    6. '   ' → logprob: -4.9166789054870605
    7. ' match' → logprob: -5.7916789054870605
    8. ' m' → logprob: -6.0416789054870605
    9. 'import' → logprob: -7.7916789054870605
    10. '    ' → logprob: -8.916679382324219

Token 183: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.003973126411438
    2. 'match' → logprob: -1.378973126411438
    3. 'm' → logprob: -1.503973126411438
    4. ' if' → logprob: -2.1289730072021484
    5. ' match' → logprob: -3.8789730072021484
    6. '   ' → logprob: -4.753973007202148
    7. '       ' → logprob: -5.003973007202148
    8. ' m' → logprob: -5.503973007202148
    9. '           ' → logprob: -9.128973007202148
    10. '    ' → logprob: -9.503973007202148

Token 184: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.25203266739845276
    2. 'pos' → logprob: -1.5020326375961304
    3. ' not' → logprob: -10.002032279968262
    4. '   ' → logprob: -10.627032279968262
    5. ' ' → logprob: -10.752032279968262
    6. '	pos' → logprob: -11.877032279968262
    7. ' formula' → logprob: -13.127032279968262
    8. 'not' → logprob: -13.627032279968262
    9. '  ' → logprob: -13.752032279968262
    10. '(pos' → logprob: -14.752032279968262

Token 185: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07066847383975983
    2. ' >=' → logprob: -2.6956684589385986
    3. '+' → logprob: -7.445668697357178
    4. '==' → logprob: -10.07066822052002
    5. '<' → logprob: -10.32066822052002
    6. '<len' → logprob: -10.69566822052002
    7. '=' → logprob: -11.44566822052002
    8. '[' → logprob: -11.82066822052002
    9. ' <' → logprob: -11.82066822052002
    10. '>' → logprob: -11.82066822052002

Token 186: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0043617598712444305
    2. ' n' → logprob: -5.754361629486084
    3. 'len' → logprob: -6.754361629486084
    4. ' len' → logprob: -11.129362106323242
    5. '0' → logprob: -13.379362106323242
    6. '1' → logprob: -14.629362106323242
    7. '	n' → logprob: -15.004362106323242
    8. '   ' → logprob: -15.254362106323242
    9. ' ' → logprob: -15.879362106323242
    10. '<n' → logprob: -16.754362106323242

Token 187: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2153557687997818
    2. ':' → logprob: -2.46535587310791
    3. ':
' → logprob: -2.84035587310791
    4. '       ' → logprob: -3.59035587310791
    5. ':return' → logprob: -4.46535587310791
    6. 'or' → logprob: -4.59035587310791
    7. '           ' → logprob: -7.34035587310791
    8. 'return' → logprob: -8.46535587310791
    9. '   ' → logprob: -8.59035587310791
    10. ' and' → logprob: -10.34035587310791

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05841848999261856
    2. 'return' → logprob: -3.5584185123443604
    3. ' return' → logprob: -4.058418273925781
    4. '       ' → logprob: -4.558418273925781
    5. ' or' → logprob: -9.183418273925781
    6. ':return' → logprob: -9.433418273925781
    7. '               ' → logprob: -9.683418273925781
    8. '        ' → logprob: -10.058418273925781
    9. '
' → logprob: -10.558418273925781
    10. ' None' → logprob: -10.683418273925781

Token 189: ' raise' (ID: 9338)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5908788442611694
    2. 'return' → logprob: -0.8408788442611694
    3. 'None' → logprob: -4.715878963470459
    4. ' None' → logprob: -5.590878963470459
    5. '           ' → logprob: -6.965878963470459
    6. '       ' → logprob: -7.340878963470459
    7. '''' → logprob: -8.0908784866333
    8. '''
' → logprob: -8.9658784866333
    9. '   ' → logprob: -10.5908784866333
    10. ''' → logprob: -10.8408784866333

Token 190: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.365811288356781
    2. ' Value' → logprob: -1.3658113479614258
    3. 'Index' → logprob: -3.115811347961426
    4. ' Index' → logprob: -5.615811347961426
    5. 'EOF' → logprob: -6.990811347961426
    6. ' Exception' → logprob: -7.115811347961426
    7. 'Stop' → logprob: -7.365811347961426
    8. 'Exception' → logprob: -7.365811347961426
    9. 'Runtime' → logprob: -9.865811347961426
    10. ' EOF' → logprob: -9.990811347961426

Token 191: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.688212614681106e-05
    2. 'rror' → logprob: -11.000017166137695
    3. 'Index' → logprob: -16.250017166137695
    4. ' Error' → logprob: -18.250017166137695
    5. '```' → logprob: -19.000017166137695
    6. 'error' → logprob: -19.125017166137695
    7. '	Error' → logprob: -19.750017166137695
    8. 'SError' → logprob: -20.250017166137695
    9. '
' → logprob: -20.625017166137695
    10. '.Error' → logprob: -20.750017166137695

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002921018283814192
    2. '
' → logprob: -6.502921104431152
    3. '('' → logprob: -8.002921104431152
    4. '   ' → logprob: -8.252921104431152
    5. '        
' → logprob: -8.627921104431152
    6. ',' → logprob: -9.252921104431152
    7. '(' → logprob: -9.252921104431152
    8. ''' → logprob: -10.002921104431152
    9. '(
' → logprob: -10.127921104431152
    10. '()' → logprob: -10.252921104431152

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010783689096570015
    2. '
' → logprob: -5.010783672332764
    3. '        
' → logprob: -6.510783672332764
    4. '  
' → logprob: -7.260783672332764
    5. '<|end|>' → logprob: -7.885783672332764
    6. ' 
' → logprob: -8.010784149169922
    7. '    
' → logprob: -8.260784149169922
    8. '   ' → logprob: -8.385784149169922
    9. '[' → logprob: -9.385784149169922
    10. ',' → logprob: -9.510784149169922

Token 194: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3118796348571777
    2. 'match' → logprob: -1.4368796348571777
    3. ' m' → logprob: -1.8118796348571777
    4. ' if' → logprob: -2.0618796348571777
    5. ' match' → logprob: -2.0618796348571777
    6. 'if' (adapté à ' if') → logprob: -2.8118796348571777
    7. '   ' → logprob: -4.811879634857178
    8. '       ' → logprob: -5.561879634857178
    9. 'token' → logprob: -7.561879634857178
    10. 'res' → logprob: -7.686879634857178

Token 195: ' not' (ID: 625)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.9397364854812622
    2. 'not' → logprob: -1.0647364854812622
    3. 're' → logprob: -1.6897364854812622
    4. ' not' → logprob: -2.9397363662719727
    5. 'pos' → logprob: -3.8147363662719727
    6. ' formula' → logprob: -5.939736366271973
    7. ' re' → logprob: -6.439736366271973
    8. 'form' → logprob: -8.064736366271973
    9. 'A' → logprob: -9.064736366271973
    10. ' pos' → logprob: -9.814736366271973

Token 196: ' formula' (ID: 20690)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8247307538986206
    2. ' re' → logprob: -1.1997307538986206
    3. 'formula' → logprob: -1.5747307538986206
    4. ' formula' → logprob: -2.94973087310791
    5. '(re' → logprob: -7.69973087310791
    6. '(form' → logprob: -8.19973087310791
    7. 'form' → logprob: -9.44973087310791
    8. ' ' → logprob: -9.82473087310791
    9. ' (' → logprob: -10.32473087310791
    10. '  ' → logprob: -11.19973087310791

Token 197: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.45848218582978e-06
    2. '.startswith' → logprob: -13.50000286102295
    3. '[' → logprob: -14.37500286102295
    4. '```' → logprob: -16.125001907348633
    5. 'pos' → logprob: -16.250001907348633
    6. '[
' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '[position' → logprob: -17.500001907348633
    9. '\[' → logprob: -18.125001907348633
    10. ',pos' → logprob: -18.875001907348633

Token 198: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.45045992732048035
    2. '.is' → logprob: -1.2004599571228027
    3. '.' → logprob: -3.0754599571228027
    4. 'is' → logprob: -5.075459957122803
    5. ':].' → logprob: -5.825459957122803
    6. '.match' → logprob: -6.200459957122803
    7. '[' → logprob: -6.325459957122803
    8. ' .' → logprob: -7.450459957122803
    9. ':' → logprob: -8.075459480285645
    10. ' ].' → logprob: -8.325459480285645

Token 199: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -4.961759259458631e-06
    2. 'isal' → logprob: -12.875004768371582
    3. 'isdigit' → logprob: -13.625004768371582
    4. 'ist' → logprob: -14.125004768371582
    5. 'match' → logprob: -14.875004768371582
    6. 'iss' → logprob: -16.7500057220459
    7. '.is' → logprob: -17.3750057220459
    8. 'isas' → logprob: -17.6250057220459
    9. ' is' → logprob: -18.8750057220459
    10. 'isl' → logprob: -20.1250057220459

Token 200: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.20141372084617615
    2. 'alpha' → logprob: -1.7014137506484985
    3. 'uppercase' → logprob: -15.076414108276367
    4. ' upper' → logprob: -16.451414108276367
    5. '.upper' → logprob: -17.576414108276367
    6. 'ascii' → logprob: -17.951414108276367
    7. 'up' → logprob: -18.076414108276367
    8. '_upper' → logprob: -18.326414108276367
    9. ' alpha' → logprob: -18.326414108276367
    10. 'al' → logprob: -18.451414108276367

Token 201: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04868433251976967
    2. '()' → logprob: -3.0486843585968018
    3. '():
' → logprob: -9.298684120178223
    4. '(' → logprob: -13.173684120178223
    5. '():

' → logprob: -14.173684120178223
    6. ' ():' → logprob: -14.423684120178223
    7. '()==' → logprob: -14.923684120178223
    8. '()>' → logprob: -15.173684120178223
    9. '())' → logprob: -15.673684120178223
    10. '()">' → logprob: -15.673684120178223

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030252210795879364
    2. ':' → logprob: -4.280251979827881
    3. '       ' → logprob: -5.030251979827881
    4. ':
' → logprob: -5.280251979827881
    5. ':return' → logprob: -7.030251979827881
    6. '<|end|>' → logprob: -7.155251979827881
    7. '               ' → logprob: -7.530251979827881
    8. ' return' → logprob: -7.905251979827881
    9. 'return' → logprob: -7.905251979827881
    10. '            ' → logprob: -8.155252456665039

Token 203: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8512697219848633
    2. ' raise' → logprob: -1.2262697219848633
    3. ' return' → logprob: -1.6012697219848633
    4. 'raise' (adapté à ' raise') → logprob: -3.2262697219848633
    5. 'return' → logprob: -3.3512697219848633
    6. '            ' → logprob: -6.726269721984863
    7. '        ' → logprob: -6.851269721984863
    8. ' pos' → logprob: -7.851269721984863
    9. '       ' → logprob: -7.976269721984863
    10. 'pos' → logprob: -8.351269721984863

Token 204: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0031793788075447083
    2. ' Value' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.878179550170898
    4. '	Value' → logprob: -14.878179550170898
    5. '   ' → logprob: -15.878179550170898
    6. '  ' → logprob: -16.2531795501709
    7. '(Value' → logprob: -17.0031795501709
    8. '_value' → logprob: -17.0031795501709
    9. 'Syntax' → logprob: -17.1281795501709
    10. 'value' → logprob: -17.1281795501709

Token 205: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.10021551698446274
    2. 'rror' → logprob: -2.350215435028076
    3. 'ror' → logprob: -12.100215911865234
    4. 'n' → logprob: -13.475215911865234
    5. 'LError' → logprob: -14.850215911865234
    6. 'alue' → logprob: -15.225215911865234
    7. 'error' → logprob: -15.225215911865234
    8. 'r' → logprob: -15.475215911865234
    9. 'l' → logprob: -15.725215911865234
    10. 'Value' → logprob: -15.975215911865234

Token 206: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013761118054389954
    2. '
' → logprob: -4.388761043548584
    3. '        
' → logprob: -8.513761520385742
    4. '<|end|>' → logprob: -8.763761520385742
    5. ' 
' → logprob: -8.888761520385742
    6. '[pos' → logprob: -9.138761520385742
    7. '\n' → logprob: -9.388761520385742
    8. '  
' → logprob: -9.513761520385742
    9. '[' → logprob: -9.513761520385742
    10. '   ' → logprob: -9.638761520385742

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001249925117008388
    2. 'pos' → logprob: -10.37512493133545
    3. '<|end|>' → logprob: -10.87512493133545
    4. '           ' → logprob: -11.00012493133545
    5. '   ' → logprob: -11.25012493133545
    6. '        
' → logprob: -11.50012493133545
    7. ' pos' → logprob: -11.75012493133545
    8. 'token' → logprob: -12.00012493133545
    9. ' token' → logprob: -12.00012493133545
    10. '
' → logprob: -13.00012493133545

Token 208: ' sym' (ID: 5357)
  Prédit: 'atom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atom' → logprob: -0.570732057094574
    2. 'token' → logprob: -1.5707321166992188
    3. 'pos' → logprob: -2.3207321166992188
    4. 'start' → logprob: -2.6957321166992188
    5. '   ' → logprob: -3.9457321166992188
    6. 'symbol' → logprob: -4.320732116699219
    7. '       ' → logprob: -4.445732116699219
    8. 'result' → logprob: -5.195732116699219
    9. 'res' → logprob: -5.195732116699219
    10. ' atom' → logprob: -6.445732116699219

Token 209: '=form' (ID: 120076)
  Prédit: 'bol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bol' → logprob: -0.003733925987035036
    2. '=' → logprob: -5.878734111785889
    3. ' =' → logprob: -8.12873363494873
    4. 'ol' → logprob: -8.62873363494873
    5. '   ' → logprob: -9.12873363494873
    6. 'b' → logprob: -9.37873363494873
    7. 'mol' → logprob: -9.75373363494873
    8. 'pol' → logprob: -10.00373363494873
    9. ' ' → logprob: -10.50373363494873
    10. 'bold' → logprob: -10.62873363494873

Token 210: 'ula' (ID: 3419)
  Prédit: 'ula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ula' → logprob: -0.010008337907493114
    2. 'la' → logprob: -4.635008335113525
    3. 'a' → logprob: -9.760008811950684
    4. '```' → logprob: -10.385008811950684
    5. 'formula' → logprob: -10.385008811950684
    6. '[' → logprob: -10.635008811950684
    7. 'orm' → logprob: -10.885008811950684
    8. '   ' → logprob: -11.010008811950684
    9. 'form' → logprob: -11.260008811950684
    10. 'ola' → logprob: -11.510008811950684

Token 211: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.8889261304575484e-06
    2. 'pos' → logprob: -13.250003814697266
    3. '[' → logprob: -14.875003814697266
    4. '```' → logprob: -14.875003814697266
    5. '[
' → logprob: -15.125003814697266
    6. '       ' → logprob: -15.250003814697266
    7. ' [' → logprob: -15.375003814697266
    8. '   ' → logprob: -15.500003814697266
    9. ',pos' → logprob: -15.875003814697266
    10. '_pos' → logprob: -16.875003814697266

Token 212: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5846144556999207
    2. ']' → logprob: -0.8346144556999207
    3. '+' → logprob: -5.584614276885986
    4. ')
' → logprob: -6.459614276885986
    5. '
' → logprob: -7.084614276885986
    6. ')' → logprob: -7.209614276885986
    7. ':' → logprob: -7.334614276885986
    8. 'pos' → logprob: -7.459614276885986
    9. '])
' → logprob: -9.084614753723145
    10. '[pos' → logprob: -9.584614753723145

Token 213: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.31448984146118164
    2. '       ' → logprob: -1.3144898414611816
    3. ' pos' → logprob: -7.439489841461182
    4. '[pos' → logprob: -8.314489364624023
    5. ',pos' → logprob: -8.689489364624023
    6. '           ' → logprob: -9.439489364624023
    7. '	pos' → logprob: -9.439489364624023
    8. '(pos' → logprob: -11.189489364624023
    9. '<|end|>' → logprob: -11.314489364624023
    10. '   ' → logprob: -11.564489364624023

Token 214: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0067312344908714294
    2. '       ' → logprob: -5.256731033325195
    3. ' pos' → logprob: -6.506731033325195
    4. '	pos' → logprob: -13.381731033325195
    5. '   ' → logprob: -14.256731033325195
    6. '[pos' → logprob: -15.631731033325195
    7. '           ' → logprob: -15.756731033325195
    8. ',pos' → logprob: -15.756731033325195
    9. '.pos' → logprob: -16.506731033325195
    10. '_pos' → logprob: -16.631731033325195

Token 215: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0034746285527944565
    2. ' +=' → logprob: -5.753474712371826
    3. '+' → logprob: -8.128474235534668
    4. ']+=' → logprob: -13.878474235534668
    5. '=' → logprob: -15.128474235534668
    6. '+='' → logprob: -15.378474235534668
    7. '```' → logprob: -16.128475189208984
    8. '+="' → logprob: -16.253475189208984
    9. '++' → logprob: -16.753475189208984
    10. '   ' → logprob: -17.378475189208984

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -19.875
    4. '```' → logprob: -19.875
    5. '１' → logprob: -21.5
    6. '۱' → logprob: -21.8125
    7. '
' → logprob: -22.25
    8. '१' → logprob: -22.5
    9. '১' → logprob: -22.875
    10. '  ' → logprob: -23.0

Token 217: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4032214879989624
    2. 'if' → logprob: -1.5282214879989624
    3. ' if' → logprob: -3.153221607208252
    4. '<|end|>' → logprob: -3.403221607208252
    5. '   ' → logprob: -3.528221607208252
    6. 'while' → logprob: -5.028221607208252
    7. ' while' → logprob: -7.778221607208252
    8. '	if' → logprob: -8.028221130371094
    9. '           ' → logprob: -8.028221130371094
    10. '    ' → logprob: -8.278221130371094

Token 218: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.259110689163208
    2. '       ' → logprob: -2.259110689163208
    3. ' if' → logprob: -2.884110689163208
    4. '   ' → logprob: -3.009110689163208
    5. 'while' → logprob: -4.259110450744629
    6. '<|end|>' → logprob: -5.634110450744629
    7. ' while' → logprob: -7.759110450744629
    8. '	if' → logprob: -8.759110450744629
    9. ' ' → logprob: -10.384110450744629
    10. '           ' → logprob: -10.509110450744629

Token 219: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00011653638648567721
    2. ' if' → logprob: -9.250116348266602
    3. 'while' → logprob: -10.875116348266602
    4. '       ' → logprob: -13.875116348266602
    5. '   ' → logprob: -14.875116348266602
    6. '	if' → logprob: -17.6251163482666
    7. 'If' → logprob: -18.0001163482666
    8. ' while' → logprob: -19.2501163482666
    9. '```' → logprob: -19.8751163482666
    10. '#' → logprob: -20.5001163482666

Token 220: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.02975071594119072
    2. ' pos' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.65475082397461
    4. '(pos' → logprob: -16.27975082397461
    5. '	pos' → logprob: -16.77975082397461
    6. '   ' → logprob: -17.27975082397461
    7. ' ' → logprob: -18.40475082397461
    8. '.pos' → logprob: -20.02975082397461
    9. ' formula' → logprob: -20.27975082397461
    10. '  ' → logprob: -20.40475082397461

Token 221: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.004285553470253944
    2. '<' → logprob: -6.2542853355407715
    3. '<len' → logprob: -6.2542853355407715
    4. ' <' → logprob: -7.7542853355407715
    5. '<num' → logprob: -13.12928581237793
    6. 'n' → logprob: -14.87928581237793
    7. '<size' → logprob: -15.12928581237793
    8. '<ll' → logprob: -16.12928581237793
    9. '<p' → logprob: -16.62928581237793
    10. '<int' → logprob: -17.00428581237793

Token 222: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.126930832862854
    2. ' and' → logprob: -2.1269307136535645
    3. ' ' → logprob: -13.251931190490723
    4. '   ' → logprob: -14.001931190490723
    5. '	and' → logprob: -17.251930236816406
    6. '1' → logprob: -17.251930236816406
    7. '>' → logprob: -17.876930236816406
    8. '<n' → logprob: -17.876930236816406
    9. '           ' → logprob: -18.001930236816406
    10. '       ' → logprob: -18.001930236816406

Token 223: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.004085524007678032
    2. ' formula' → logprob: -5.504085540771484
    3. 'form' → logprob: -11.879085540771484
    4. ' ' → logprob: -16.879085540771484
    5. ''' → logprob: -16.879085540771484
    6. 'formular' → logprob: -18.004085540771484
    7. '_formula' → logprob: -18.129085540771484
    8. '   ' → logprob: -19.254085540771484
    9. '(form' → logprob: -19.504085540771484
    10. ' formule' → logprob: -19.879085540771484

Token 224: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.00020473242329899222
    2. 'pos' → logprob: -8.500205039978027
    3. '```' → logprob: -14.750205039978027
    4. '	pos' → logprob: -15.375205039978027
    5. '[' → logprob: -15.750205039978027
    6. '[
' → logprob: -16.50020408630371
    7. ',pos' → logprob: -16.75020408630371
    8. '(pos' → logprob: -17.12520408630371
    9. '[position' → logprob: -17.37520408630371
    10. 'is' → logprob: -17.62520408630371

Token 225: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.371981680393219
    2. '.is' → logprob: -1.6219816207885742
    3. 'isl' → logprob: -2.871981620788574
    4. '.' → logprob: -4.496981620788574
    5. ''].' → logprob: -4.746981620788574
    6. '>' → logprob: -4.746981620788574
    7. '>.' → logprob: -4.871981620788574
    8. '>=' → logprob: -5.121981620788574
    9. ').' → logprob: -5.371981620788574
    10. '```' → logprob: -6.121981620788574

Token 226: 'isl' (ID: 13495)
  Prédit: 'isl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isl' → logprob: -6.153795766294934e-06
    2. 'is' → logprob: -12.250005722045898
    3. 'isdigit' → logprob: -14.000005722045898
    4. ' is' → logprob: -16.2500057220459
    5. 'isal' → logprob: -16.3750057220459
    6. '```' → logprob: -16.3750057220459
    7. 'isas' → logprob: -16.3750057220459
    8. 'ist' → logprob: -16.5000057220459
    9. '-' → logprob: -17.2500057220459
    10. 'str' → logprob: -18.0000057220459

Token 227: 'ower' (ID: 1611)
  Prédit: 'ower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ower' → logprob: -0.00012415809032972902
    2. 'ow' → logprob: -9.000123977661133
    3. 'owe' → logprob: -14.375123977661133
    4. '[' → logprob: -17.125123977661133
    5. 'OWER' → logprob: -17.250123977661133
    6. 'wer' → logprob: -17.250123977661133
    7. 'owered' → logprob: -17.500123977661133
    8. 'o' → logprob: -17.875123977661133
    9. 'owel' → logprob: -18.500123977661133
    10. 'a' → logprob: -19.375123977661133

Token 228: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2018226981163025
    2. '()' → logprob: -1.7018227577209473
    3. '():
' → logprob: -7.826822757720947
    4. '()==' → logprob: -12.701822280883789
    5. '():

' → logprob: -13.076822280883789
    6. '()>' → logprob: -13.826822280883789
    7. '(' → logprob: -14.451822280883789
    8. '()-' → logprob: -14.701822280883789
    9. '()='' → logprob: -14.951822280883789
    10. '():
' → logprob: -15.076822280883789

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10735177248716354
    2. 'sym' → logprob: -2.982351779937744
    3. ' sym' → logprob: -2.982351779937744
    4. '       ' → logprob: -8.857351303100586
    5. '	       ' → logprob: -9.607351303100586
    6. '<|end|>' → logprob: -9.607351303100586
    7. '   ' → logprob: -10.107351303100586
    8. '(sym' → logprob: -10.732351303100586
    9. '               ' → logprob: -10.857351303100586
    10. '.sym' → logprob: -11.232351303100586

Token 230: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' (adapté à ' sym') → logprob: -0.25207844376564026
    2. ' sym' → logprob: -1.5020784139633179
    3. '           ' → logprob: -8.87707805633545
    4. '       ' → logprob: -13.00207805633545
    5. '.sym' → logprob: -13.25207805633545
    6. '(sym' → logprob: -13.62707805633545
    7. '   ' → logprob: -13.87707805633545
    8. '               ' → logprob: -13.87707805633545
    9. ' ' → logprob: -14.37707805633545
    10. 's' → logprob: -14.62707805633545

Token 231: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00014919086243025959
    2. ' +=' → logprob: -8.87514877319336
    3. ']+=' → logprob: -11.75014877319336
    4. '+='' → logprob: -14.50014877319336
    5. '+' → logprob: -15.00014877319336
    6. '+=(' → logprob: -15.12514877319336
    7. '+="' → logprob: -15.87514877319336
    8. '=' → logprob: -16.00014877319336
    9. '```' → logprob: -16.12514877319336
    10. 'sym' → logprob: -18.25014877319336

Token 232: 'formula' (ID: 157531)
  Prédit: 'formula'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -4.727905979962088e-05
    2. ' formula' → logprob: -10.00004768371582
    3. 'form' → logprob: -13.25004768371582
    4. 'format' → logprob: -19.37504768371582
    5. '_formula' → logprob: -19.50004768371582
    6. 'formular' → logprob: -19.62504768371582
    7. ' ' → logprob: -20.50004768371582
    8. '```' → logprob: -21.00004768371582
    9. 'code' → logprob: -21.62504768371582
    10. '   ' → logprob: -22.12504768371582

Token 233: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.939851037808694e-05
    2. 'pos' → logprob: -10.500029563903809
    3. '[' → logprob: -14.250029563903809
    4. '```' → logprob: -14.375029563903809
    5. '[position' → logprob: -15.125029563903809
    6. '[
' → logprob: -16.125028610229492
    7. ',pos' → logprob: -17.625028610229492
    8. '(pos' → logprob: -18.000028610229492
    9. '\[' → logprob: -18.125028610229492
    10. '	pos' → logprob: -18.250028610229492

Token 234: ']
' (ID: 1592)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5527380108833313
    2. '           ' → logprob: -1.6777379512786865
    3. ']' → logprob: -2.4277379512786865
    4. '
' → logprob: -3.1777379512786865
    5. '       ' → logprob: -3.3027379512786865
    6. ']
' → logprob: -3.5527379512786865
    7. '<|end|>' → logprob: -3.6777379512786865
    8. '<|end|>' → logprob: -5.552738189697266
    9. ' pos' → logprob: -5.802738189697266
    10. ',pos' → logprob: -5.927738189697266

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06352579593658447
    2. 'pos' → logprob: -3.063525676727295
    3. '       ' → logprob: -4.563525676727295
    4. '
' → logprob: -5.563525676727295
    5. '   ' → logprob: -8.188526153564453
    6. ' pos' → logprob: -9.563526153564453
    7. '	pos' → logprob: -10.188526153564453
    8. '```' → logprob: -10.313526153564453
    9. '<|end|>' → logprob: -10.563526153564453
    10. ',pos' → logprob: -10.688526153564453

Token 236: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -6.2729995988775045e-06
    2. ' pos' → logprob: -12.000006675720215
    3. '           ' → logprob: -17.1250057220459
    4. '       ' → logprob: -20.2500057220459
    5. '	pos' → logprob: -21.8750057220459
    6. '_pos' → logprob: -22.2500057220459
    7. '   ' → logprob: -22.3750057220459
    8. 'position' → logprob: -22.7500057220459
    9. '
' → logprob: -23.5000057220459
    10. '```' → logprob: -23.8750057220459

Token 237: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -6.511406809295295e-06
    2. ' +=' → logprob: -12.125006675720215
    3. '+' → logprob: -14.500006675720215
    4. ']+=' → logprob: -14.500006675720215
    5. '```' → logprob: -17.3750057220459
    6. '=' → logprob: -18.0000057220459
    7. '+='' → logprob: -19.5000057220459
    8. '1' → logprob: -20.0000057220459
    9. '+=(' → logprob: -20.1250057220459
    10. '+="' → logprob: -20.2500057220459

Token 238: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -21.0
    5. '2' → logprob: -21.125
    6. '۱' → logprob: -21.875
    7. '<|end|>' → logprob: -22.125
    8. '１' → logprob: -22.25
    9. '१' → logprob: -23.0
    10. '১' → logprob: -23.125

Token 239: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017016702622640878
    2. 'return' → logprob: -9.62516975402832
    3. '<|end|>' → logprob: -10.25016975402832
    4. '   ' → logprob: -10.50016975402832
    5. ' return' → logprob: -10.62516975402832
    6. '           ' → logprob: -11.37516975402832
    7. '
' → logprob: -13.87516975402832
    8. '```' → logprob: -14.12516975402832
    9. '	return' → logprob: -14.25016975402832
    10. ' if' → logprob: -14.37516975402832

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003485745983198285
    2. 'return' → logprob: -8.500349044799805
    3. '   ' → logprob: -9.750349044799805
    4. '           ' → logprob: -10.000349044799805
    5. ' return' → logprob: -10.125349044799805
    6. '	return' → logprob: -15.250349044799805
    7. '      ' → logprob: -15.500349044799805
    8. '               ' → logprob: -16.000349044799805
    9. ' if' → logprob: -16.000349044799805
    10. '	' → logprob: -16.125349044799805

Token 241: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11672871559858322
    2. '       ' → logprob: -2.3667287826538086
    3. ' return' → logprob: -4.116728782653809
    4. '   ' → logprob: -10.116728782653809
    5. 'if' → logprob: -10.366728782653809
    6. ' if' → logprob: -11.616728782653809
    7. '	return' → logprob: -13.116728782653809
    8. '           ' → logprob: -13.491728782653809
    9. '
' → logprob: -13.616728782653809
    10. '```' → logprob: -14.116728782653809

Token 242: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.00861468818038702
    2. ' sym' → logprob: -4.758614540100098
    3. '(sym' → logprob: -16.133615493774414
    4. '   ' → logprob: -20.383615493774414
    5. 's' → logprob: -20.508615493774414
    6. 'symbol' → logprob: -20.633615493774414
    7. '_sym' → logprob: -21.633615493774414
    8. '.sym' → logprob: -21.758615493774414
    9. '	s' → logprob: -22.258615493774414
    10. 'weights' → logprob: -22.633615493774414

Token 243: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 244: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6902794241905212
    2. 'def' (adapté à ' def') → logprob: -0.8152794241905212
    3. '
' → logprob: -3.315279483795166
    4. ' def' → logprob: -5.065279483795166
    5. '    
' → logprob: -5.315279483795166
    6. ' 
' → logprob: -5.940279483795166
    7. '<|end|>' → logprob: -6.190279483795166
    8. '  
' → logprob: -6.565279483795166
    9. '```' → logprob: -7.440279483795166
    10. ' ' → logprob: -8.065279006958008

Token 246: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.02975349873304367
    2. ' parse' → logprob: -3.5297534465789795
    3. '(parse' → logprob: -13.904753684997559
    4. 'skip' → logprob: -14.779753684997559
    5. '_parse' → logprob: -15.279753684997559
    6. 'consume' → logprob: -15.279753684997559
    7. '	parse' → logprob: -15.279753684997559
    8. ' ' → logprob: -15.779753684997559
    9. '=parse' → logprob: -16.279752731323242
    10. 'match' → logprob: -16.529752731323242

Token 247: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.03329811990261078
    2. '_number' → logprob: -3.5332980155944824
    3. '_group' → logprob: -5.783298015594482
    4. '_element' → logprob: -9.03329849243164
    5. '_multiplier' → logprob: -9.03329849243164
    6. '_factor' → logprob: -10.03329849243164
    7. '_m' → logprob: -10.03329849243164
    8. '_term' → logprob: -10.15829849243164
    9. '_unit' → logprob: -10.90829849243164
    10. '_count' → logprob: -11.28329849243164

Token 248: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008618712425231934
    2. '():
' → logprob: -4.7586188316345215
    3. '()' → logprob: -12.633618354797363
    4. '():
' → logprob: -14.758618354797363
    5. ' ():' → logprob: -15.008618354797363
    6. '(' → logprob: -16.50861930847168
    7. '():

' → logprob: -16.63361930847168
    8. '   ' → logprob: -18.25861930847168
    9. ':' → logprob: -19.25861930847168
    10. '()
' → logprob: -19.50861930847168

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1864834427833557
    2. '()' → logprob: -1.811483383178711
    3. '(' → logprob: -5.811483383178711
    4. '   ' → logprob: -6.561483383178711
    5. '()
' → logprob: -6.936483383178711
    6. '<|end|>' → logprob: -8.561483383178711
    7. '()\' → logprob: -8.686483383178711
    8. '():
' → logprob: -8.936483383178711
    9. '\' → logprob: -8.936483383178711
    10. '[' → logprob: -9.186483383178711

Token 250: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.11669637262821198
    2. '       ' → logprob: -2.241696357727051
    3. ' non' → logprob: -5.616696357727051
    4. '(non' → logprob: -8.99169635772705
    5. '   ' → logprob: -9.74169635772705
    6. '_non' → logprob: -10.86669635772705
    7. 'import' → logprob: -12.36669635772705
    8. '```' → logprob: -12.61669635772705
    9. 'Non' → logprob: -12.74169635772705
    10. ' ' → logprob: -12.74169635772705

Token 251: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -9.088346359931165e-07
    2. 'non' → logprob: -14.625000953674316
    3. 'def' → logprob: -15.250000953674316
    4. ' local' → logprob: -16.625
    5. '   ' → logprob: -17.5
    6. 'pos' → logprob: -17.75
    7. 'loc' → logprob: -17.875
    8. 'al' → logprob: -18.25
    9. '(local' → logprob: -18.625
    10. 'token' → logprob: -18.875

Token 252: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.061967797577381134
    2. ' pos' → logprob: -2.8119678497314453
    3. '_pos' → logprob: -16.186967849731445
    4. '	pos' → logprob: -17.061967849731445
    5. '.pos' → logprob: -18.811967849731445
    6. '   ' → logprob: -19.061967849731445
    7. 'Pos' → logprob: -19.186967849731445
    8. '[pos' → logprob: -19.311967849731445
    9. ' ' → logprob: -19.436967849731445
    10. '(pos' → logprob: -19.436967849731445

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021451469510793686
    2. '<|end|>' → logprob: -7.752145290374756
    3. '
' → logprob: -7.877145290374756
    4. 'if' → logprob: -8.002144813537598
    5. '        
' → logprob: -8.252144813537598
    6. '   ' → logprob: -8.502144813537598
    7. '        ' → logprob: -8.877144813537598
    8. ' if' → logprob: -9.252144813537598
    9. '           ' → logprob: -9.877144813537598
    10. ',' → logprob: -10.502144813537598

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0877428874373436
    2. ' if' → logprob: -2.962742805480957
    3. 'if' → logprob: -3.712742805480957
    4. 'num' → logprob: -5.087742805480957
    5. ' num' → logprob: -7.462742805480957
    6. 'start' → logprob: -7.712742805480957
    7. '   ' → logprob: -7.962742805480957
    8. ' start' → logprob: -9.337742805480957
    9. 'count' → logprob: -10.462742805480957
    10. 'value' → logprob: -10.462742805480957

Token 255: ' start' (ID: 1604)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18233753740787506
    2. 'start' (adapté à ' start') → logprob: -1.9323375225067139
    3. ' if' → logprob: -4.432337760925293
    4. 'num' → logprob: -4.682337760925293
    5. ' start' → logprob: -7.432337760925293
    6. '   ' → logprob: -9.432337760925293
    7. 'val' → logprob: -10.557337760925293
    8. 'match' → logprob: -11.932337760925293
    9. ' num' → logprob: -12.307337760925293
    10. 'n' → logprob: -12.682337760925293

Token 256: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003186147892847657
    2. ' =' → logprob: -5.753186225891113
    3. '=int' → logprob: -12.128186225891113
    4. '_pos' → logprob: -13.628186225891113
    5. 'pos' → logprob: -13.878186225891113
    6. '=start' → logprob: -14.878186225891113
    7. '=len' → logprob: -15.253186225891113
    8. '=end' → logprob: -15.753186225891113
    9. '=_' → logprob: -16.878185272216797
    10. '=index' → logprob: -17.378185272216797

Token 257: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.15310683415737e-05
    2. ' pos' → logprob: -10.750021934509277
    3. '	pos' → logprob: -20.75002098083496
    4. '   ' → logprob: -22.00002098083496
    5. '_pos' → logprob: -23.25002098083496
    6. 'position' → logprob: -24.12502098083496
    7. 'Pos' → logprob: -24.62502098083496
    8. '.pos' → logprob: -25.00002098083496
    9. '(pos' → logprob: -25.12502098083496
    10. '0' → logprob: -25.37502098083496

Token 258: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.37398335337638855
    2. '<|end|>' → logprob: -1.873983383178711
    3. '       ' → logprob: -1.998983383178711
    4. ' while' → logprob: -4.248983383178711
    5. '<|end|>' → logprob: -5.498983383178711
    6. '   ' → logprob: -6.123983383178711
    7. '
' → logprob: -6.498983383178711
    8. '	while' → logprob: -8.498983383178711
    9. '        
' → logprob: -9.123983383178711
    10. '=' → logprob: -9.248983383178711

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40516507625579834
    2. 'while' → logprob: -1.1551650762557983
    3. ' while' → logprob: -4.155165195465088
    4. '   ' → logprob: -6.155165195465088
    5. '<|end|>' → logprob: -8.65516471862793
    6. 'if' → logprob: -9.53016471862793
    7. '	while' → logprob: -10.28016471862793
    8. 'While' → logprob: -11.40516471862793
    9. '```' → logprob: -11.90516471862793
    10. ' ' → logprob: -12.15516471862793

Token 260: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0004372254479676485
    2. ' while' → logprob: -7.750437259674072
    3. 'if' → logprob: -12.500436782836914
    4. '   ' → logprob: -13.500436782836914
    5. 'While' → logprob: -13.625436782836914
    6. '	while' → logprob: -15.500436782836914
    7. '       ' → logprob: -16.625436782836914
    8. '```' → logprob: -17.875436782836914
    9. '
' → logprob: -18.875436782836914
    10. ' While' → logprob: -19.125436782836914

Token 261: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.011050531640648842
    2. ' pos' → logprob: -4.511050701141357
    3. '(pos' → logprob: -13.5110502243042
    4. ' ' → logprob: -14.2610502243042
    5. '	pos' → logprob: -15.0110502243042
    6. '   ' → logprob: -15.8860502243042
    7. 'formula' → logprob: -16.386051177978516
    8. '0' → logprob: -17.136051177978516
    9. '.pos' → logprob: -17.511051177978516
    10. '  ' → logprob: -17.636051177978516

Token 262: '<n' (ID: 33872)
  Prédit: '<n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.00796952098608017
    2. '<len' → logprob: -5.132969379425049
    3. '<' → logprob: -6.382969379425049
    4. ' <' → logprob: -8.007969856262207
    5. '<num' → logprob: -12.007969856262207
    6. '<size' → logprob: -12.257969856262207
    7. 'n' → logprob: -13.132969856262207
    8. '<int' → logprob: -14.257969856262207
    9. '<N' → logprob: -14.632969856262207
    10. 'pos' → logprob: -15.007969856262207

Token 263: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740878641605377
    2. 'and' → logprob: -0.9740878343582153
    3. 'pos' → logprob: -12.349087715148926
    4. '<n' → logprob: -12.599087715148926
    5. ' ' → logprob: -13.724087715148926
    6. '   ' → logprob: -14.099087715148926
    7. '<' → logprob: -14.349087715148926
    8. '>=' → logprob: -15.849087715148926
    9. '           ' → logprob: -16.099088668823242
    10. ' <' → logprob: -16.099088668823242

Token 264: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.003179975086823106
    2. ' formula' → logprob: -5.753180027008057
    3. 'form' → logprob: -13.003179550170898
    4. ' formule' → logprob: -19.2531795501709
    5. '_formula' → logprob: -19.8781795501709
    6. 'formular' → logprob: -20.0031795501709
    7. '(form' → logprob: -20.1281795501709
    8. ' ' → logprob: -20.6281795501709
    9. 'isdigit' → logprob: -21.6281795501709
    10. '   ' → logprob: -21.6281795501709

Token 265: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -9.088346359931165e-07
    2. 'pos' → logprob: -14.375000953674316
    3. '[' → logprob: -15.875000953674316
    4. '[position' → logprob: -16.75
    5. '```' → logprob: -17.0
    6. ' [' → logprob: -18.375
    7. '\[' → logprob: -19.125
    8. 'isdigit' → logprob: -19.25
    9. '[idx' → logprob: -19.5
    10. '[prop' → logprob: -19.625

Token 266: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.03967927396297455
    2. '].' → logprob: -4.289679050445557
    3. 'isdigit' → logprob: -4.289679050445557
    4. '.' → logprob: -4.539679050445557
    5. '>.' → logprob: -8.414679527282715
    6. ').' → logprob: -8.914679527282715
    7. ' .' → logprob: -9.039679527282715
    8. '>=' → logprob: -9.664679527282715
    9. '().' → logprob: -9.789679527282715
    10. '```' → logprob: -9.789679527282715

Token 267: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: 0.0
    2. 'digit' → logprob: -17.25
    3. 'isd' → logprob: -19.25
    4. 'is' → logprob: -19.375
    5. 'isal' → logprob: -20.75
    6. ' is' → logprob: -21.5
    7. '```' → logprob: -21.75
    8. 'd' → logprob: -22.0
    9. '`' → logprob: -22.625
    10. 'iss' → logprob: -22.875

Token 268: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.32142892479896545
    2. '():
' → logprob: -1.321428894996643
    3. '()' → logprob: -4.8214287757873535
    4. '():

' → logprob: -10.071429252624512
    5. '()==' → logprob: -11.071429252624512
    6. '():
' → logprob: -11.696429252624512
    7. '()):
' → logprob: -12.571429252624512
    8. ':' → logprob: -12.821429252624512
    9. ' ():' → logprob: -13.571429252624512
    10. '()>' → logprob: -13.571429252624512

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020779751241207123
    2. '       ' → logprob: -4.020779609680176
    3. '   ' → logprob: -6.645779609680176
    4. ' pos' → logprob: -7.270779609680176
    5. 'pos' → logprob: -7.895779609680176
    6. '	       ' → logprob: -9.395779609680176
    7. '               ' → logprob: -9.645779609680176
    8. '	   ' → logprob: -10.645779609680176
    9. ',pos' → logprob: -11.020779609680176
    10. '	pos' → logprob: -11.145779609680176

Token 270: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.00318294414319098
    2. ' pos' → logprob: -5.753182888031006
    3. '           ' → logprob: -13.003183364868164
    4. '   ' → logprob: -13.503183364868164
    5. '	pos' → logprob: -13.503183364868164
    6. '       ' → logprob: -16.378183364868164
    7. '
' → logprob: -17.253183364868164
    8. '_pos' → logprob: -17.628183364868164
    9. '[pos' → logprob: -17.753183364868164
    10. ',pos' → logprob: -17.753183364868164

Token 271: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00026169343618676066
    2. ' +=' → logprob: -8.250261306762695
    3. ']+=' → logprob: -14.875261306762695
    4. '+' → logprob: -17.375261306762695
    5. '+='' → logprob: -18.125261306762695
    6. '++' → logprob: -18.625261306762695
    7. '+=(' → logprob: -19.500261306762695
    8. '+="' → logprob: -19.750261306762695
    9. '=' → logprob: -19.750261306762695
    10. '```' → logprob: -19.875261306762695

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -20.500001907348633
    4. '```' → logprob: -20.500001907348633
    5. '１' → logprob: -21.250001907348633
    6. '۱' → logprob: -21.625001907348633
    7. '
' → logprob: -22.812501907348633
    8. '১' → logprob: -23.437501907348633
    9. '१' → logprob: -23.500001907348633
    10. '0' → logprob: -23.625001907348633

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001576521317474544
    2. ' if' → logprob: -7.3765764236450195
    3. '   ' → logprob: -7.5015764236450195
    4. 'if' → logprob: -8.37657642364502
    5. '
' → logprob: -10.25157642364502
    6. '           ' → logprob: -10.50157642364502
    7. 'return' → logprob: -10.62657642364502
    8. '<|end|>' → logprob: -10.75157642364502
    9. ' return' → logprob: -11.87657642364502
    10. '      ' → logprob: -12.25157642364502

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6129699945449829
    2. ' if' → logprob: -0.8629699945449829
    3. 'if' → logprob: -3.3629698753356934
    4. '   ' → logprob: -6.487969875335693
    5. ' number' → logprob: -9.737970352172852
    6. 'num' → logprob: -10.112970352172852
    7. ' num' → logprob: -10.612970352172852
    8. ' return' → logprob: -10.987970352172852
    9. '```' → logprob: -11.237970352172852
    10. '           ' → logprob: -11.862970352172852

Token 275: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4913410246372223
    2. 'if' (adapté à ' if') → logprob: -1.1163409948349
    3. 'num' → logprob: -3.2413411140441895
    4. '       ' → logprob: -4.2413411140441895
    5. ' num' → logprob: -5.1163411140441895
    6. 'return' → logprob: -7.6163411140441895
    7. ' return' → logprob: -8.116340637207031
    8. ' number' → logprob: -8.741340637207031
    9. ' s' → logprob: -9.491340637207031
    10. 'number' → logprob: -9.491340637207031

Token 276: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.16192857921123505
    2. ' start' → logprob: -1.9119285345077515
    3. 'pos' → logprob: -6.536928653717041
    4. ' pos' → logprob: -8.286928176879883
    5. ' ' → logprob: -13.786928176879883
    6. '   ' → logprob: -14.161928176879883
    7. '	start' → logprob: -15.411928176879883
    8. '  ' → logprob: -15.911928176879883
    9. '(start' → logprob: -15.911928176879883
    10. 'post' → logprob: -17.786928176879883

Token 277: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -8.268254896393046e-05
    2. ' ==' → logprob: -9.500082969665527
    3. '>=' → logprob: -12.000082969665527
    4. '<' → logprob: -13.500082969665527
    5. '=' → logprob: -16.62508201599121
    6. '!=' → logprob: -16.75008201599121
    7. '==
' → logprob: -17.62508201599121
    8. '[' → logprob: -18.25008201599121
    9. ')==' → logprob: -19.12508201599121
    10. '==(' → logprob: -19.37508201599121

Token 278: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.320199877838604e-07
    2. ' pos' → logprob: -14.875
    3. '	pos' → logprob: -17.375
    4. 'position' → logprob: -17.75
    5. 'start' → logprob: -17.75
    6. 'npos' → logprob: -18.875
    7. '=' → logprob: -19.875
    8. '_pos' → logprob: -20.25
    9. 'post' → logprob: -20.375
    10. '   ' → logprob: -20.625

Token 279: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03152964636683464
    2. ':
' → logprob: -4.031529426574707
    3. ':return' → logprob: -5.656529426574707
    4. 'return' → logprob: -5.781529426574707
    5. '       ' → logprob: -5.781529426574707
    6. '   ' → logprob: -6.031529426574707
    7. ':' → logprob: -7.031529426574707
    8. ' return' → logprob: -8.281529426574707
    9. ' ' → logprob: -9.906529426574707
    10. '	   ' → logprob: -11.781529426574707

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3022207021713257
    2. 'return' → logprob: -1.5522207021713257
    3. ' return' → logprob: -3.3022208213806152
    4. '   ' → logprob: -4.802220821380615
    5. '       ' → logprob: -5.552220821380615
    6. ' ' → logprob: -9.552220344543457
    7. '	return' → logprob: -10.177220344543457
    8. 'raise' → logprob: -11.302220344543457
    9. '               ' → logprob: -12.052220344543457
    10. '	       ' → logprob: -12.302220344543457

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025743518490344286
    2. ' return' → logprob: -6.002574443817139
    3. '1' → logprob: -10.25257396697998
    4. '   ' → logprob: -10.50257396697998
    5. '           ' → logprob: -11.25257396697998
    6. '       ' → logprob: -11.37757396697998
    7. '
' → logprob: -11.50257396697998
    8. '	return' → logprob: -14.37757396697998
    9. '{return' → logprob: -15.00257396697998
    10. ':return' → logprob: -15.62757396697998

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002967320033349097
    2. ' ' → logprob: -8.125296592712402
    3. 'None' → logprob: -14.375296592712402
    4. '   ' → logprob: -15.625296592712402
    5. ' None' → logprob: -17.25029754638672
    6. '0' → logprob: -18.12529754638672
    7. '  ' → logprob: -19.62529754638672
    8. '`' → logprob: -20.25029754638672
    9. '       ' → logprob: -20.75029754638672
    10. '[' → logprob: -20.75029754638672

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.875003814697266
    4. '0' → logprob: -18.625003814697266
    5. 'None' → logprob: -18.625003814697266
    6. '  ' → logprob: -20.125003814697266
    7. '       ' → logprob: -21.125003814697266
    8. '
' → logprob: -21.375003814697266
    9. '[' → logprob: -21.500003814697266
    10. '    ' → logprob: -22.375003814697266

Token 284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021526420023292303
    2. 'int' → logprob: -6.877152442932129
    3. '
' → logprob: -7.627152442932129
    4. '   ' → logprob: -8.877152442932129
    5. 'return' → logprob: -9.127152442932129
    6. '        
' → logprob: -9.377152442932129
    7. '<|end|>' → logprob: -9.752152442932129
    8. 'num' → logprob: -9.877152442932129
    9. '[int' → logprob: -10.627152442932129
    10. '<int' → logprob: -10.627152442932129

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016802136087790132
    2. 'num' → logprob: -9.625167846679688
    3. '   ' → logprob: -9.875167846679688
    4. 'return' → logprob: -11.125167846679688
    5. 'number' → logprob: -11.875167846679688
    6. 'token' → logprob: -12.000167846679688
    7. ' number' → logprob: -12.250167846679688
    8. '```' → logprob: -12.875167846679688
    9. ' return' → logprob: -13.250167846679688
    10. '
' → logprob: -13.250167846679688

Token 286: ' num' (ID: 2269)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36504051089286804
    2. 'return' → logprob: -1.7400405406951904
    3. 'num' (adapté à ' num') → logprob: -2.1150405406951904
    4. ' return' → logprob: -4.865040302276611
    5. ' num' → logprob: -7.115040302276611
    6. '   ' → logprob: -7.490040302276611
    7. 'number' → logprob: -8.24004077911377
    8. 'count' → logprob: -9.49004077911377
    9. '
' → logprob: -9.99004077911377
    10. 'value' → logprob: -10.24004077911377

Token 287: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05552224442362785
    2. '=int' → logprob: -3.3055222034454346
    3. ' =' → logprob: -4.055522441864014
    4. 'int' → logprob: -13.305521965026855
    5. '=parse' → logprob: -15.180521965026855
    6. 's' → logprob: -16.305522918701172
    7. '＝' → logprob: -16.805522918701172
    8. ' int' → logprob: -16.930522918701172
    9. '_str' → logprob: -17.180522918701172
    10. '   ' → logprob: -17.555522918701172

Token 288: '(form' (ID: 33445)
  Prédit: '(form'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(form' → logprob: -3.225939872208983e-05
    2. '(' → logprob: -11.000032424926758
    3. 'formula' → logprob: -11.125032424926758
    4. ' (' → logprob: -14.875032424926758
    5. ' formula' → logprob: -15.750032424926758
    6. 'form' → logprob: -16.250032424926758
    7. '$form' → logprob: -17.000032424926758
    8. '	form' → logprob: -17.500032424926758
    9. 'Formula' → logprob: -17.875032424926758
    10. '_formula' → logprob: -18.000032424926758

Token 289: 'ula' (ID: 3419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8724247813224792
    2. 'ula' → logprob: -1.372424840927124
    3. '[' → logprob: -1.872424840927124
    4. '(form' → logprob: -2.497424840927124
    5. 'formula' → logprob: -3.372424840927124
    6. '_num' → logprob: -4.122424602508545
    7. ' formula' → logprob: -4.497424602508545
    8. '[start' → logprob: -4.747424602508545
    9. '[num' → logprob: -5.122424602508545
    10. '_formula' → logprob: -5.247424602508545

Token 290: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.021042196080088615
    2. '[' → logprob: -5.146042346954346
    3. 'formula' → logprob: -5.146042346954346
    4. ')' → logprob: -5.521042346954346
    5. '[pos' → logprob: -6.146042346954346
    6. ' formula' → logprob: -6.646042346954346
    7. '[num' → logprob: -7.521042346954346
    8. '(form' → logprob: -8.021041870117188
    9. '_formula' → logprob: -8.396041870117188
    10. '[from' → logprob: -9.146041870117188

Token 291: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038653970696032047
    2. ',pos' → logprob: -6.2538652420043945
    3. 'pos' → logprob: -6.6288652420043945
    4. '[pos' → logprob: -8.128865242004395
    5. ',' → logprob: -8.753865242004395
    6. '	pos' → logprob: -9.628865242004395
    7. ' :' → logprob: -10.253865242004395
    8. ':semicolon' → logprob: -11.378865242004395
    9. '   ' → logprob: -11.753865242004395
    10. ':end' → logprob: -11.753865242004395

Token 292: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: 0.0
    2. ' pos' → logprob: -16.75
    3. '	pos' → logprob: -22.75
    4. '   ' → logprob: -23.125
    5. '_pos' → logprob: -23.875
    6. '.pos' → logprob: -24.625
    7. '(pos' → logprob: -25.0
    8. ' ' → logprob: -25.625
    9. 'Pos' → logprob: -25.75
    10. 'position' → logprob: -25.875

Token 293: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1271856278181076
    2. ')' → logprob: -2.127185583114624
    3. '])
' → logprob: -9.252185821533203
    4. ')
' → logprob: -9.627185821533203
    5. ']' → logprob: -10.252185821533203
    6. ')])' → logprob: -11.127185821533203
    7. ')]' → logprob: -11.252185821533203
    8. ' )' → logprob: -11.877185821533203
    9. ' ])' → logprob: -12.377185821533203
    10. '))' → logprob: -12.377185821533203

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007129086880013347
    2. 'return' → logprob: -7.375712871551514
    3. ' return' → logprob: -9.750713348388672
    4. '   ' → logprob: -11.000713348388672
    5. '           ' → logprob: -11.625713348388672
    6. '	return' → logprob: -13.500713348388672
    7. '	   ' → logprob: -15.125713348388672
    8. '<|end|>' → logprob: -15.125713348388672
    9. '	' → logprob: -15.375713348388672
    10. '      ' → logprob: -16.125713348388672

Token 295: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3015049397945404
    2. 'return' → logprob: -1.5515049695968628
    3. ' return' → logprob: -3.4265048503875732
    4. ' if' → logprob: -4.426505088806152
    5. 'if' (adapté à ' if') → logprob: -5.551505088806152
    6. '           ' → logprob: -11.301505088806152
    7. '   ' → logprob: -11.551505088806152
    8. '	return' → logprob: -12.426505088806152
    9. ':return' → logprob: -13.801505088806152
    10. '      ' → logprob: -14.926505088806152

Token 296: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.05852721631526947
    2. ' num' → logprob: -2.9335272312164307
    3. ' not' → logprob: -5.808526992797852
    4. 'not' → logprob: -7.433526992797852
    5. '1' → logprob: -11.058526992797852
    6. ' ' → logprob: -11.308526992797852
    7. '	num' → logprob: -12.058526992797852
    8. '(num' → logprob: -12.183526992797852
    9. '0' → logprob: -13.183526992797852
    10. '   ' → logprob: -13.433526992797852

Token 297: '<' (ID: 27)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5342812538146973
    2. ' >' → logprob: -2.0342812538146973
    3. '<' → logprob: -2.1592812538146973
    4. '<=' → logprob: -2.1592812538146973
    5. ' <=' → logprob: -3.5342812538146973
    6. ' <' → logprob: -4.159281253814697
    7. '==' → logprob: -5.034281253814697
    8. ' ==' → logprob: -7.034281253814697
    9. '>=' → logprob: -10.909280776977539
    10. '```' → logprob: -11.159280776977539

Token 298: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013474960578605533
    2. '=' → logprob: -6.751347541809082
    3. ' ' → logprob: -9.251347541809082
    4. '2' → logprob: -9.501347541809082
    5. ' =' → logprob: -12.626347541809082
    6. '```' → logprob: -13.876347541809082
    7. '0' → logprob: -14.126347541809082
    8. '>' → logprob: -14.876347541809082
    9. ')' → logprob: -15.376347541809082
    10. '   ' → logprob: -16.001346588134766

Token 299: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11445337533950806
    2. ':
' → logprob: -2.4894533157348633
    3. ':' → logprob: -4.489453315734863
    4. ':return' → logprob: -4.989453315734863
    5. 'or' → logprob: -5.114453315734863
    6. '       ' → logprob: -7.114453315734863
    7. '   ' → logprob: -8.489453315734863
    8. '           ' → logprob: -9.614453315734863
    9. ' ' → logprob: -11.239453315734863
    10. '0' → logprob: -11.364453315734863

Token 300: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.003300101263448596
    2. ' num' → logprob: -5.753300189971924
    3. '100' → logprob: -10.003299713134766
    4. '99' → logprob: -10.128299713134766
    5. 'pos' → logprob: -10.878299713134766
    6. '10' → logprob: -12.128299713134766
    7. 'int' → logprob: -12.753299713134766
    8. '	num' → logprob: -13.253299713134766
    9. '   ' → logprob: -13.628299713134766
    10. 'len' → logprob: -13.628299713134766

Token 301: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.004625699482858181
    2. ' >' → logprob: -5.3796257972717285
    3. '()>' → logprob: -13.00462532043457
    4. 'num' → logprob: -14.50462532043457
    5. '>end' → logprob: -14.87962532043457
    6. '0' → logprob: -15.12962532043457
    7. '```' → logprob: -15.25462532043457
    8. '1' → logprob: -15.25462532043457
    9. ' ' → logprob: -15.37962532043457
    10. '10' → logprob: -15.62962532043457

Token 302: '99' (ID: 2058)
  Prédit: '99'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.0031741487327963114
    2. '20' → logprob: -6.003174304962158
    3. '10' → logprob: -7.753174304962158
    4. '100' → logprob: -9.128173828125
    5. '15' → logprob: -9.878173828125
    6. ' ' → logprob: -10.378173828125
    7. '30' → logprob: -10.503173828125
    8. '50' → logprob: -10.878173828125
    9. '9' → logprob: -11.253173828125
    10. '12' → logprob: -12.503173828125

Token 303: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04425790160894394
    2. ':' → logprob: -3.794257879257202
    3. '           ' → logprob: -3.919257879257202
    4. '       ' → logprob: -7.294258117675781
    5. ':return' → logprob: -9.044258117675781
    6. '):
' → logprob: -9.919258117675781
    7. '               ' → logprob: -10.544258117675781
    8. '   ' → logprob: -10.794258117675781
    9. '          ' → logprob: -11.294258117675781
    10. ' :
' → logprob: -12.294258117675781

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005701126996427774
    2. ' raise' → logprob: -5.255701065063477
    3. 'raise' → logprob: -7.755701065063477
    4. '               ' → logprob: -11.380701065063477
    5. '       ' → logprob: -11.880701065063477
    6. ' return' → logprob: -12.255701065063477
    7. '            ' → logprob: -12.380701065063477
    8. '	raise' → logprob: -12.755701065063477
    9. '          ' → logprob: -13.005701065063477
    10. '   ' → logprob: -13.505701065063477

Token 305: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.20200924575328827
    2. 'raise' (adapté à ' raise') → logprob: -1.7020092010498047
    3. '           ' → logprob: -7.452009201049805
    4. '	raise' → logprob: -11.577009201049805
    5. 'Raise' → logprob: -13.327009201049805
    6. ' return' → logprob: -13.577009201049805
    7. 'return' → logprob: -13.827009201049805
    8. '            ' → logprob: -13.827009201049805
    9. '   ' → logprob: -14.577009201049805
    10. '       ' → logprob: -15.202009201049805

Token 306: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.001170460251159966
    2. ' Value' → logprob: -6.751170635223389
    3. '_value' → logprob: -16.626171112060547
    4. '	Value' → logprob: -16.876171112060547
    5. '_Value' → logprob: -18.126171112060547
    6. '(Value' → logprob: -18.126171112060547
    7. '.Value' → logprob: -18.376171112060547
    8. '<Value' → logprob: -18.751171112060547
    9. 'value' → logprob: -20.126171112060547
    10. ' ' → logprob: -20.626171112060547

Token 307: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -2.2200749754119897e-06
    2. 'rror' → logprob: -13.125001907348633
    3. 'Value' → logprob: -15.875001907348633
    4. 'error' → logprob: -19.875001907348633
    5. '_Error' → logprob: -19.875001907348633
    6. 'LError' → logprob: -20.125001907348633
    7. 'SError' → logprob: -20.250001907348633
    8. '_error' → logprob: -20.875001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '```' → logprob: -21.750001907348633

Token 308: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019102399528492242
    2. 'return' → logprob: -9.000190734863281
    3. '   ' → logprob: -10.250190734863281
    4. ' return' → logprob: -10.875190734863281
    5. ',' → logprob: -12.625190734863281
    6. '<|end|>' → logprob: -12.625190734863281
    7. '           ' → logprob: -13.000190734863281
    8. ')' → logprob: -13.625190734863281
    9. '	' → logprob: -13.875190734863281
    10. '	return' → logprob: -14.375190734863281

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005934244254603982
    2. '   ' → logprob: -7.750593662261963
    3. 'return' → logprob: -9.125593185424805
    4. ' return' → logprob: -10.750593185424805
    5. '           ' → logprob: -10.875593185424805
    6. '<|end|>' → logprob: -12.375593185424805
    7. '	' → logprob: -13.125593185424805
    8. '
' → logprob: -13.375593185424805
    9. '	return' → logprob: -13.500593185424805
    10. '```' → logprob: -13.875593185424805

Token 310: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03060084581375122
    2. 'return' (adapté à ' return') → logprob: -3.5306007862091064
    3. '   ' → logprob: -7.5306010246276855
    4. ' return' → logprob: -8.155600547790527
    5. '	return' → logprob: -11.280600547790527
    6. '           ' → logprob: -11.405600547790527
    7. '
' → logprob: -14.405600547790527
    8. '	' → logprob: -14.405600547790527
    9. '```' → logprob: -14.905600547790527
    10. '	   ' → logprob: -15.030600547790527

Token 311: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011047814972698689
    2. ' num' → logprob: -4.511047840118408
    3. '(num' → logprob: -19.01104736328125
    4. '	num' → logprob: -19.13604736328125
    5. '[num' → logprob: -20.01104736328125
    6. '$num' → logprob: -21.01104736328125
    7. '<num' → logprob: -21.13604736328125
    8. '   ' → logprob: -21.63604736328125
    9. 'int' → logprob: -21.63604736328125
    10. '=num' → logprob: -21.76104736328125

Token 312: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4502268135547638
    2. '<|end|>' → logprob: -1.0752267837524414
    3. '
' → logprob: -4.325226783752441
    4. '    
' → logprob: -5.575226783752441
    5. '<|end|>' → logprob: -6.325226783752441
    6. '```' → logprob: -6.950226783752441
    7. '  
' → logprob: -8.075226783752441
    8. 'def' → logprob: -8.325226783752441
    9. '

' → logprob: -8.450226783752441
    10. 'newline' → logprob: -9.325226783752441

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17797240614891052
    2. '
' → logprob: -2.4279723167419434
    3. '<|end|>' → logprob: -2.8029723167419434
    4. '    
' → logprob: -4.677972316741943
    5. 'def' → logprob: -6.677972316741943
    6. ' 
' → logprob: -7.177972316741943
    7. '<|end|>' → logprob: -7.427972316741943
    8. '  
' → logprob: -7.427972316741943
    9. '```' → logprob: -7.552972316741943
    10. ')' → logprob: -8.427972793579102

Token 314: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47777578234672546
    2. '   ' → logprob: -0.9777758121490479
    3. ' def' → logprob: -6.227775573730469
    4. '    
' → logprob: -7.352775573730469
    5. '
' → logprob: -7.727775573730469
    6. 'if' → logprob: -8.227775573730469
    7. 'token' → logprob: -8.727775573730469
    8. ' if' → logprob: -9.727775573730469
    9. ' 
' → logprob: -10.477775573730469
    10. 'while' → logprob: -10.727775573730469

Token 315: ' helper' (ID: 25246)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.22543174028396606
    2. ' parse' → logprob: -1.6004316806793213
    3. 'factor' → logprob: -12.225431442260742
    4. 'def' → logprob: -12.850431442260742
    5. '_parse' → logprob: -12.850431442260742
    6. '(parse' → logprob: -13.475431442260742
    7. ' factor' → logprob: -13.600431442260742
    8. 'consume' → logprob: -13.850431442260742
    9. 'multiply' → logprob: -14.475431442260742
    10. '	parse' → logprob: -14.600431442260742

Token 316: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0033389562740921974
    2. '():
' → logprob: -6.128338813781738
    3. '(' → logprob: -6.878338813781738
    4. ' ():' → logprob: -9.378338813781738
    5. '()' → logprob: -10.503338813781738
    6. '():

' → logprob: -12.878338813781738
    7. ':' → logprob: -13.253338813781738
    8. '(token' → logprob: -13.628338813781738
    9. '(pos' → logprob: -13.878338813781738
    10. '   ' → logprob: -14.253338813781738

Token 317: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035662539303302765
    2. 'non' → logprob: -3.5356626510620117
    3. ' non' → logprob: -5.285662651062012
    4. '   ' → logprob: -7.160662651062012
    5. '     ' → logprob: -11.160662651062012
    6. 'token' → logprob: -11.535662651062012
    7. ' ' → logprob: -11.535662651062012
    8. '    ' → logprob: -11.910662651062012
    9. '(non' → logprob: -12.660662651062012
    10. '      ' → logprob: -13.035662651062012

Token 318: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' (adapté à ' non') → logprob: -0.046069201081991196
    2. ' non' → logprob: -3.1710691452026367
    3. '       ' → logprob: -6.046069145202637
    4. 'total' → logprob: -7.671069145202637
    5. '   ' → logprob: -8.671069145202637
    6. 'result' → logprob: -11.171069145202637
    7. ' total' → logprob: -11.296069145202637
    8. '    ' → logprob: -11.546069145202637
    9. ' ' → logprob: -12.421069145202637
    10. '     ' → logprob: -12.796069145202637

Token 319: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -9.353008499601856e-05
    2. 'ocal' → logprob: -9.875093460083008
    3. '   ' → logprob: -10.750093460083008
    4. ' local' → logprob: -11.000093460083008
    5. 'def' → logprob: -13.000093460083008
    6. '       ' → logprob: -14.500093460083008
    7. 'token' → logprob: -15.750093460083008
    8. 'al' → logprob: -16.000093460083008
    9. '(local' → logprob: -16.125093460083008
    10. '_local' → logprob: -16.125093460083008

Token 320: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07889044284820557
    2. ' pos' → logprob: -2.578890323638916
    3. '   ' → logprob: -14.953890800476074
    4. '	pos' → logprob: -16.453889846801758
    5. ' ' → logprob: -16.828889846801758
    6. '_pos' → logprob: -16.953889846801758
    7. '(pos' → logprob: -18.078889846801758
    8. 'p' → logprob: -18.578889846801758
    9. '.pos' → logprob: -18.703889846801758
    10. '[pos' → logprob: -18.953889846801758

Token 321: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3235689699649811
    2. 'total' → logprob: -1.4485689401626587
    3. ' total' → logprob: -3.9485690593719482
    4. ' if' → logprob: -4.573568820953369
    5. 'if' → logprob: -5.573568820953369
    6. 'value' → logprob: -6.698568820953369
    7. 'result' → logprob: -6.823568820953369
    8. 'sum' → logprob: -7.073568820953369
    9. '        
' → logprob: -7.198568820953369
    10. '   ' → logprob: -7.198568820953369

Token 322: '       ' (ID: 309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6158996224403381
    2. '       ' → logprob: -1.3658995628356934
    3. ' total' → logprob: -1.7408995628356934
    4. 'result' → logprob: -4.865899562835693
    5. '   ' → logprob: -5.115899562835693
    6. 'res' → logprob: -5.365899562835693
    7. ' res' → logprob: -5.865899562835693
    8. ' if' → logprob: -5.990899562835693
    9. ' result' → logprob: -6.365899562835693
    10. 'if' → logprob: -6.865899562835693

Token 323: ' sub' (ID: 1543)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1373801976442337
    2. ' total' → logprob: -2.7623801231384277
    3. 'res' → logprob: -3.1373801231384277
    4. 'result' → logprob: -4.137380123138428
    5. ' res' → logprob: -5.887380123138428
    6. ' result' → logprob: -7.137380123138428
    7. '   ' → logprob: -7.637380123138428
    8. 'if' → logprob: -8.012380599975586
    9. 'value' → logprob: -8.137380599975586
    10. ' if' → logprob: -8.262380599975586

Token 324: 'weights' (ID: 29630)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.01972077414393425
    2. '_total' → logprob: -5.144720554351807
    3. 'result' → logprob: -5.769720554351807
    4. 'expr' → logprob: -5.894720554351807
    5. 'exp' → logprob: -6.894720554351807
    6. ' =' → logprob: -6.894720554351807
    7. 'pos' → logprob: -6.894720554351807
    8. 'formula' → logprob: -7.144720554351807
    9. 'weight' → logprob: -7.519720554351807
    10. '=' → logprob: -7.644720554351807

Token 325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017444670200348
    2. ' =' → logprob: -1.7017444372177124
    3. '={}' → logprob: -8.326744079589844
    4. '   ' → logprob: -10.201744079589844
    5. ',' → logprob: -10.326744079589844
    6. '=[]' → logprob: -11.326744079589844
    7. '       ' → logprob: -13.826744079589844
    8. '={}
' → logprob: -14.076744079589844
    9. '=sum' → logprob: -14.076744079589844
    10. '={},' → logprob: -14.201744079589844

Token 326: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.050796542316675186
    2. '0' → logprob: -3.0507965087890625
    3. '{}
' → logprob: -6.1757965087890625
    4. 'default' → logprob: -10.675796508789062
    5. '[]' → logprob: -10.800796508789062
    6. '{}

' → logprob: -10.800796508789062
    7. ' {}' → logprob: -10.925796508789062
    8. '{' → logprob: -11.050796508789062
    9. 'dict' → logprob: -11.800796508789062
    10. ' ' → logprob: -11.925796508789062

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010531761683523655
    2. 'if' → logprob: -5.760531902313232
    3. '   ' → logprob: -6.260531902313232
    4. 'while' → logprob: -6.510531902313232
    5. ' if' → logprob: -6.510531902313232
    6. '<|end|>' → logprob: -6.760531902313232
    7. 'token' → logprob: -7.885531902313232
    8. ' while' → logprob: -8.010531425476074
    9. '        
' → logprob: -8.885531425476074
    10. '    ' → logprob: -9.010531425476074

Token 328: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.04344203695654869
    2. '       ' → logprob: -3.2934420108795166
    3. ' while' → logprob: -5.543442249298096
    4. '   ' → logprob: -7.043442249298096
    5. 'if' → logprob: -7.543442249298096
    6. '	while' → logprob: -9.793441772460938
    7. 'While' → logprob: -13.043441772460938
    8. '        
' → logprob: -13.293441772460938
    9. ' if' → logprob: -13.293441772460938
    10. ' ' → logprob: -13.293441772460938

Token 329: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1295090913772583
    2. ' pos' → logprob: -2.1295089721679688
    3. 'True' → logprob: -6.754508972167969
    4. ' True' → logprob: -6.754508972167969
    5. '   ' → logprob: -8.879508972167969
    6. ' formula' → logprob: -10.129508972167969
    7. 'formula' → logprob: -10.879508972167969
    8. '       ' → logprob: -11.129508972167969
    9. ' ' → logprob: -11.754508972167969
    10. '    ' → logprob: -12.004508972167969

Token 330: '<n' (ID: 33872)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5007956027984619
    2. ' <' → logprob: -1.000795602798462
    3. '<n' → logprob: -4.125795364379883
    4. '<len' → logprob: -4.625795364379883
    5. '<int' → logprob: -9.500795364379883
    6. '<num' → logprob: -9.625795364379883
    7. '<p' → logprob: -10.125795364379883
    8. '<size' → logprob: -10.625795364379883
    9. '<|end|>' → logprob: -10.625795364379883
    10. '<ll' → logprob: -11.125795364379883

Token 331: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6389491558074951
    2. ':' → logprob: -1.3889491558074951
    3. ':
' → logprob: -1.6389491558074951
    4. '       ' → logprob: -4.138949394226074
    5. 'and' → logprob: -5.138949394226074
    6. '           ' → logprob: -5.138949394226074
    7. '<|end|>' → logprob: -7.388949394226074
    8. '<|end|>' → logprob: -9.013949394226074
    9. ',' → logprob: -10.013949394226074
    10. '   ' → logprob: -10.388949394226074

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7998489141464233
    2. '       ' → logprob: -1.1748489141464233
    3. ' if' → logprob: -1.9248489141464233
    4. 'if' → logprob: -3.424849033355713
    5. 'token' → logprob: -3.674849033355713
    6. ' c' → logprob: -4.174849033355713
    7. 'c' → logprob: -4.674849033355713
    8. 'ch' → logprob: -5.174849033355713
    9. '   ' → logprob: -5.924849033355713
    10. 'char' → logprob: -6.049849033355713

Token 333: ' c' (ID: 274)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6564316153526306
    2. ' c' → logprob: -1.9064316749572754
    3. 'if' → logprob: -2.0314316749572754
    4. 'c' (adapté à ' c') → logprob: -2.7814316749572754
    5. '           ' → logprob: -3.0314316749572754
    6. 'ch' → logprob: -3.6564316749572754
    7. 'char' → logprob: -3.7814316749572754
    8. ' char' → logprob: -4.031431674957275
    9. 'token' → logprob: -4.281431674957275
    10. ' ch' → logprob: -5.156431674957275

Token 334: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48721203207969666
    2. '=' → logprob: -0.987212061882019
    3. '=form' → logprob: -4.362212181091309
    4. '=line' → logprob: -9.362212181091309
    5. 'if' → logprob: -9.612212181091309
    6. '=
' → logprob: -10.362212181091309
    7. '   ' → logprob: -10.362212181091309
    8. '=c' → logprob: -10.862212181091309
    9. '       ' → logprob: -10.987212181091309
    10. '=sys' → logprob: -11.487212181091309

Token 335: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.061973292380571365
    2. ' formula' → logprob: -2.8119733333587646
    3. 'form' → logprob: -12.186973571777344
    4. ' ' → logprob: -15.686973571777344
    5. ' formule' → logprob: -15.936973571777344
    6. '   ' → logprob: -16.061973571777344
    7. '_formula' → logprob: -16.561973571777344
    8. 'formular' → logprob: -17.186973571777344
    9. 'Formula' → logprob: -18.311973571777344
    10. 'format' → logprob: -18.436973571777344

Token 336: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -5.12127808178775e-05
    2. 'pos' → logprob: -10.625051498413086
    3. '           ' → logprob: -11.000051498413086
    4. '[' → logprob: -12.250051498413086
    5. '       ' → logprob: -12.875051498413086
    6. '[
' → logprob: -13.625051498413086
    7. ' [' → logprob: -15.000051498413086
    8. '            
' → logprob: -15.000051498413086
    9. '   ' → logprob: -16.000051498413086
    10. '[position' → logprob: -16.125051498413086

Token 337: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7045013308525085
    2. ']' → logprob: -0.8295013308525085
    3. ']
' → logprob: -3.4545013904571533
    4. '
' → logprob: -4.579501152038574
    5. '<|end|>' → logprob: -4.704501152038574
    6. '       ' → logprob: -5.204501152038574
    7. '            
' → logprob: -5.829501152038574
    8. ')' → logprob: -5.954501152038574
    9. 'if' → logprob: -6.079501152038574
    10. ' if' → logprob: -6.204501152038574

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6648826599121094
    2. ' if' → logprob: -1.4148826599121094
    3. '       ' → logprob: -2.0398826599121094
    4. 'if' → logprob: -2.6648826599121094
    5. '<|end|>' → logprob: -3.2898826599121094
    6. '   ' → logprob: -6.914882659912109
    7. '<|end|>' → logprob: -6.914882659912109
    8. ' ' → logprob: -7.164882659912109
    9. '        ' → logprob: -7.164882659912109
    10. '            
' → logprob: -7.289882659912109

Token 339: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7640112042427063
    2. ' if' → logprob: -0.7640112042427063
    3. '           ' → logprob: -2.7640111446380615
    4. '       ' → logprob: -5.514011383056641
    5. 'pos' → logprob: -7.639011383056641
    6. '        ' → logprob: -8.13901138305664
    7. '            ' → logprob: -8.51401138305664
    8. '    ' → logprob: -9.13901138305664
    9. '   ' → logprob: -9.26401138305664
    10. '            
' → logprob: -10.01401138305664

Token 340: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4923732876777649
    2. 'c' → logprob: -0.9923732876777649
    3. ' formula' → logprob: -4.742373466491699
    4. 'formula' → logprob: -5.367373466491699
    5. ' (' → logprob: -6.117373466491699
    6. '(' → logprob: -6.492373466491699
    7. ' '('' → logprob: -8.4923734664917
    8. ' sym' → logprob: -8.4923734664917
    9. ' ' → logprob: -8.7423734664917
    10. ''' → logprob: -9.2423734664917

Token 341: '=='' (ID: 20651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8587316870689392
    2. ' ==' → logprob: -0.9837316870689392
    3. '=='' → logprob: -1.608731746673584
    4. 'is' → logprob: -7.483731746673584
    5. '=="' → logprob: -7.483731746673584
    6. ' =='' → logprob: -7.733731746673584
    7. ' in' → logprob: -7.858731746673584
    8. '==
' → logprob: -9.108731269836426
    9. 'in' → logprob: -9.858731269836426
    10. ''' → logprob: -10.233731269836426

Token 342: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0018673599697649479
    2. '(':' → logprob: -6.376867294311523
    3. '(' → logprob: -8.751867294311523
    4. '(';' → logprob: -13.001867294311523
    5. '('{' → logprob: -14.126867294311523
    6. ''' → logprob: -14.251867294311523
    7. '('?' → logprob: -14.251867294311523
    8. '(('' → logprob: -15.126867294311523
    9. '('"' → logprob: -15.251867294311523
    10. '(',' → logprob: -15.376867294311523

Token 343: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.047376710921525955
    2. ':' → logprob: -3.1723766326904297
    3. ' or' → logprob: -5.92237663269043
    4. '):
' → logprob: -6.79737663269043
    5. '           ' → logprob: -8.67237663269043
    6. ')' → logprob: -9.29737663269043
    7. '
' → logprob: -9.54737663269043
    8. '               ' → logprob: -9.67237663269043
    9. '       ' → logprob: -9.92237663269043
    10. '):' → logprob: -10.29737663269043

Token 344: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7577751874923706
    2. '               ' → logprob: -0.7577751874923706
    3. 'pos' → logprob: -3.13277530670166
    4. '
' → logprob: -4.50777530670166
    5. '       ' → logprob: -5.88277530670166
    6. '   ' → logprob: -6.00777530670166
    7. '<|end|>' → logprob: -7.88277530670166
    8. ' pos' → logprob: -8.00777530670166
    9. '```' → logprob: -8.00777530670166
    10. '	       ' → logprob: -8.25777530670166

Token 345: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.0006875330000184476
    2. '               ' → logprob: -7.875687599182129
    3. '           ' → logprob: -8.750687599182129
    4. ' pos' → logprob: -8.875687599182129
    5. '   ' → logprob: -12.375687599182129
    6. '	pos' → logprob: -13.250687599182129
    7. '                   ' → logprob: -13.375687599182129
    8. '       ' → logprob: -14.250687599182129
    9. '
' → logprob: -14.875687599182129
    10. '(pos' → logprob: -15.375687599182129

Token 346: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -7.505351095460355e-05
    2. ' +=' → logprob: -9.500075340270996
    3. ']+=' → logprob: -15.500075340270996
    4. '+=(' → logprob: -21.62507438659668
    5. '=' → logprob: -21.75007438659668
    6. '+='' → logprob: -21.75007438659668
    7. '+="' → logprob: -22.12507438659668
    8. '+' → logprob: -22.62507438659668
    9. '   ' → logprob: -23.25007438659668
    10. '	' → logprob: -24.00007438659668

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -19.125
    5. '
' → logprob: -20.25
    6. '１' → logprob: -21.125
    7. '           ' → logprob: -21.25
    8. '۱' → logprob: -21.3125
    9. '       ' → logprob: -21.5
    10. '१' → logprob: -21.9375

Token 348: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3395790755748749
    2. '           ' → logprob: -1.4645791053771973
    3. 'sub' → logprob: -3.5895791053771973
    4. '       ' → logprob: -4.214579105377197
    5. 'weight' → logprob: -5.589579105377197
    6. 'result' → logprob: -6.214579105377197
    7. ' sub' → logprob: -6.464579105377197
    8. ')' → logprob: -6.714579105377197
    9. '
' → logprob: -6.714579105377197
    10. 'stack' → logprob: -6.839579105377197

Token 349: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6353921890258789
    2. '           ' → logprob: -1.635392189025879
    3. 'sub' → logprob: -1.635392189025879
    4. '       ' → logprob: -3.635392189025879
    5. 'stack' → logprob: -4.385392189025879
    6. 'weight' → logprob: -4.510392189025879
    7. 'result' → logprob: -5.010392189025879
    8. 'weights' → logprob: -5.135392189025879
    9. ' sub' → logprob: -5.510392189025879
    10. 'group' → logprob: -5.885392189025879

Token 350: ' inner' (ID: 12694)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5991196632385254
    2. 'group' → logprob: -1.4741196632385254
    3. 'inner' (adapté à ' inner') → logprob: -1.5991196632385254
    4. 'subs' → logprob: -5.599119663238525
    5. 'nested' → logprob: -5.724119663238525
    6. 'grp' → logprob: -6.099119663238525
    7. 'inside' → logprob: -6.349119663238525
    8. 'temp' → logprob: -6.599119663238525
    9. 'tmp' → logprob: -6.724119663238525
    10. '           ' → logprob: -6.724119663238525

Token 351: ' =' (ID: 314)
  Prédit: '_weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weights' → logprob: -0.3558322489261627
    2. '_weight' → logprob: -2.23083233833313
    3. '_w' → logprob: -2.60583233833313
    4. 'weights' → logprob: -3.23083233833313
    5. '_sub' → logprob: -3.48083233833313
    6. 'w' → logprob: -3.60583233833313
    7. 'weight' → logprob: -4.480832099914551
    8. 'sub' → logprob: -5.605832099914551
    9. ' =' → logprob: -5.980832099914551
    10. '=' → logprob: -6.980832099914551

Token 352: ' helper' (ID: 25246)
  Prédit: 'helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helper' → logprob: -7.505351095460355e-05
    2. ' helper' → logprob: -9.500075340270996
    3. 'help' → logprob: -17.00007438659668
    4. '(helper' → logprob: -17.12507438659668
    5. 'Helper' → logprob: -17.62507438659668
    6. '   ' → logprob: -19.75007438659668
    7. 'helpers' → logprob: -20.50007438659668
    8. '.helper' → logprob: -20.75007438659668
    9. 'handler' → logprob: -20.75007438659668
    10. '_helper' → logprob: -21.12507438659668

Token 353: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3132844567298889
    2. '()
' → logprob: -1.3132843971252441
    3. '()
' → logprob: -11.188284873962402
    4. '()

' → logprob: -11.938284873962402
    5. '()\' → logprob: -14.063284873962402
    6. ' ()' → logprob: -15.313284873962402
    7. '())' → logprob: -15.313284873962402
    8. '()`' → logprob: -15.563284873962402
    9. '|()
' → logprob: -15.938284873962402
    10. ')' → logprob: -16.188283920288086

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03315005451440811
    2. '<|end|>' → logprob: -4.1581501960754395
    3. '           ' → logprob: -4.9081501960754395
    4. ')' → logprob: -5.5331501960754395
    5. '                   ' → logprob: -6.2831501960754395
    6. '       ' → logprob: -6.4081501960754395
    7. '
' → logprob: -6.9081501960754395
    8. '                ' → logprob: -7.6581501960754395
    9. '                
' → logprob: -9.283149719238281
    10. '<|end|>' → logprob: -9.533149719238281

Token 355: ' if' (ID: 538)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.5836483836174011
    2. 'num' → logprob: -1.583648443222046
    3. 'pos' → logprob: -2.208648443222046
    4. 'mul' → logprob: -3.083648443222046
    5. '               ' → logprob: -3.708648443222046
    6. 'factor' → logprob: -3.833648443222046
    7. 'if' (adapté à ' if') → logprob: -4.208648204803467
    8. '           ' → logprob: -5.333648204803467
    9. 'count' → logprob: -5.958648204803467
    10. 'for' → logprob: -6.083648204803467

Token 356: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.12475708872079849
    2. ' pos' → logprob: -2.7497570514678955
    3. 'formula' → logprob: -3.3747570514678955
    4. ' formula' → logprob: -4.249757289886475
    5. '           ' → logprob: -5.749757289886475
    6. 'form' → logprob: -7.999757289886475
    7. '                   ' → logprob: -8.249756813049316
    8. '   ' → logprob: -8.624756813049316
    9. ' not' → logprob: -8.624756813049316
    10. 'c' → logprob: -8.749756813049316

Token 357: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0044843582436442375
    2. '==' → logprob: -5.504484176635742
    3. ' >=' → logprob: -7.879484176635742
    4. ')>=' → logprob: -11.379484176635742
    5. ']>=' → logprob: -11.879484176635742
    6. '>' → logprob: -12.379484176635742
    7. ' ==' → logprob: -12.629484176635742
    8. '≥' → logprob: -14.629484176635742
    9. '<' → logprob: -15.379484176635742
    10. '```' → logprob: -15.504484176635742

Token 358: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005913979839533567
    2. ' n' → logprob: -8.125591278076172
    3. 'len' → logprob: -8.250591278076172
    4. '1' → logprob: -10.875591278076172
    5. '   ' → logprob: -12.250591278076172
    6. ')' → logprob: -12.750591278076172
    7. '           ' → logprob: -13.625591278076172
    8. ' len' → logprob: -13.750591278076172
    9. ' ' → logprob: -14.000591278076172
    10. '<|end|>' → logprob: -14.000591278076172

Token 359: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.02742505818605423
    2. 'or' → logprob: -3.6524250507354736
    3. '           ' → logprob: -7.402425289154053
    4. ':
' → logprob: -8.277424812316895
    5. '               ' → logprob: -8.527424812316895
    6. '                   ' → logprob: -10.027424812316895
    7. '	or' → logprob: -12.152424812316895
    8. ':' → logprob: -12.277424812316895
    9. '   ' → logprob: -13.277424812316895
    10. '       ' → logprob: -13.777424812316895

Token 360: ' formula' (ID: 20690)
  Prédit: 'formula'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formula' → logprob: -0.005926547572016716
    2. ' formula' → logprob: -5.255926609039307
    3. '                   ' → logprob: -8.005926132202148
    4. 'form' → logprob: -8.380926132202148
    5. ')' → logprob: -9.380926132202148
    6. '               ' → logprob: -11.380926132202148
    7. '           ' → logprob: -11.380926132202148
    8. '')' → logprob: -12.005926132202148
    9. '_formula' → logprob: -12.130926132202148
    10. '                       ' → logprob: -12.380926132202148

Token 361: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.45848218582978e-06
    2. 'pos' → logprob: -13.00000286102295
    3. '```' → logprob: -16.500001907348633
    4. '[' → logprob: -17.000001907348633
    5. '[position' → logprob: -18.500001907348633
    6. ' [' → logprob: -18.500001907348633
    7. '\[' → logprob: -18.750001907348633
    8. ' pos' → logprob: -19.250001907348633
    9. '	pos' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.875001907348633

Token 362: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.41197308897972107
    2. '!=' → logprob: -1.6619731187820435
    3. ']' → logprob: -2.161972999572754
    4. '']' → logprob: -3.786972999572754
    5. ' !=' → logprob: -5.161972999572754
    6. ']!='' → logprob: -6.036972999572754
    7. ')!=' → logprob: -7.286972999572754
    8. ']==' → logprob: -7.661972999572754
    9. '!='' → logprob: -7.786972999572754
    10. ' ]' → logprob: -9.161972999572754

Token 363: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00021057340200059116
    2. ')' → logprob: -8.500210762023926
    3. ' ')' → logprob: -12.750210762023926
    4. '")' → logprob: -12.875210762023926
    5. ' ')'' → logprob: -13.750210762023926
    6. '   ' → logprob: -15.125210762023926
    7. '`)' → logprob: -16.12520980834961
    8. '']' → logprob: -16.25020980834961
    9. '       ' → logprob: -18.37520980834961
    10. '  ' → logprob: -18.50020980834961

Token 364: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05622275546193123
    2. '                   ' → logprob: -3.181222677230835
    3. '):
' → logprob: -5.306222915649414
    4. '               ' → logprob: -5.306222915649414
    5. ':' → logprob: -5.931222915649414
    6. ')' → logprob: -8.806222915649414
    7. '           ' → logprob: -9.056222915649414
    8. '):' → logprob: -9.306222915649414
    9. ''):
' → logprob: -10.556222915649414
    10. ':return' → logprob: -10.556222915649414

Token 365: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02504383958876133
    2. '               ' → logprob: -3.9000437259674072
    3. 'pos' → logprob: -6.275043964385986
    4. '
' → logprob: -7.025043964385986
    5. ')' → logprob: -7.400043964385986
    6. '           ' → logprob: -8.025043487548828
    7. '                       ' → logprob: -8.400043487548828
    8. '):
' → logprob: -9.025043487548828
    9. ':
' → logprob: -9.025043487548828
    10. ')
' → logprob: -9.400043487548828

Token 366: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.9464350342750549
    2. 'pos' → logprob: -1.1964349746704102
    3. '                   ' → logprob: -1.4464349746704102
    4. ' raise' → logprob: -2.94643497467041
    5. ' pos' → logprob: -4.44643497467041
    6. '                    ' → logprob: -5.69643497467041
    7. '               ' → logprob: -5.82143497467041
    8. '                       ' → logprob: -5.82143497467041
    9. ')' → logprob: -8.57143497467041
    10. '                ' → logprob: -8.82143497467041

Token 367: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0002615742268972099
    2. ' Value' → logprob: -8.250261306762695
    3. '_value' → logprob: -16.500261306762695
    4. '.Value' → logprob: -16.875261306762695
    5. '	Value' → logprob: -17.125261306762695
    6. '(Value' → logprob: -17.500261306762695
    7. '_Value' → logprob: -17.625261306762695
    8. ')' → logprob: -18.875261306762695
    9. 'Val' → logprob: -18.875261306762695
    10. 'Syntax' → logprob: -19.125261306762695

Token 368: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0005535095697268844
    2. 'rror' → logprob: -7.500553607940674
    3. 'error' → logprob: -15.375553131103516
    4. 'Value' → logprob: -16.000553131103516
    5. 'r' → logprob: -17.000553131103516
    6. 'ror' → logprob: -17.500553131103516
    7. 'SError' → logprob: -17.875553131103516
    8. '_Error' → logprob: -18.125553131103516
    9. 'alue' → logprob: -18.250553131103516
    10. 'LError' → logprob: -18.250553131103516

Token 369: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018365412252023816
    2. '<|end|>' → logprob: -6.626836776733398
    3. '
' → logprob: -8.501836776733398
    4. '           ' → logprob: -9.251836776733398
    5. 'pos' → logprob: -9.251836776733398
    6. '       ' → logprob: -10.001836776733398
    7. ')' → logprob: -10.751836776733398
    8. '                   ' → logprob: -10.876836776733398
    9. '```' → logprob: -11.376836776733398
    10. '<|end|>' → logprob: -12.251836776733398

Token 370: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004287573043256998
    2. 'pos' → logprob: -5.6292877197265625
    3. '<|end|>' → logprob: -8.629287719726562
    4. '                   ' → logprob: -8.754287719726562
    5. '
' → logprob: -9.004287719726562
    6. '           ' → logprob: -9.254287719726562
    7. '       ' → logprob: -10.004287719726562
    8. '```' → logprob: -10.004287719726562
    9. ')' → logprob: -11.129287719726562
    10. ' pos' → logprob: -11.754287719726562

Token 371: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.03057633340358734
    2. '               ' → logprob: -3.530576229095459
    3. ' pos' → logprob: -7.530576229095459
    4. '
' → logprob: -8.280576705932617
    5. '                   ' → logprob: -11.155576705932617
    6. '           ' → logprob: -11.530576705932617
    7. '                
' → logprob: -12.780576705932617
    8. '	pos' → logprob: -12.780576705932617
    9. ',pos' → logprob: -13.530576705932617
    10. '[pos' → logprob: -14.155576705932617

Token 372: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -2.069664333248511e-05
    2. ' +=' → logprob: -11.125020980834961
    3. ']+=' → logprob: -12.125020980834961
    4. '+' → logprob: -15.125020980834961
    5. '```' → logprob: -17.12502098083496
    6. '   ' → logprob: -17.12502098083496
    7. '++' → logprob: -17.50002098083496
    8. '           ' → logprob: -18.00002098083496
    9. '+='' → logprob: -18.00002098083496
    10. '+=(' → logprob: -18.25002098083496

Token 373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.125001907348633
    5. '
' → logprob: -19.750001907348633
    6. '１' → logprob: -20.125001907348633
    7. '۱' → logprob: -20.125001907348633
    8. '`' → logprob: -21.000001907348633
    9. '१' → logprob: -21.125001907348633
    10. '0' → logprob: -21.187501907348633

Token 374: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019712194334715605
    2. '
' → logprob: -6.501971244812012
    3. '                
' → logprob: -8.126971244812012
    4. '			' → logprob: -10.626971244812012
    5. 'inner' → logprob: -10.751971244812012
    6. 'token' → logprob: -10.876971244812012
    7. '```' → logprob: -10.876971244812012
    8. '           ' → logprob: -11.001971244812012
    9. '<|end|>' → logprob: -11.251971244812012
    10. ')' → logprob: -11.876971244812012

Token 375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023632787633687258
    2. '```' → logprob: -7.002363204956055
    3. '
' → logprob: -7.502363204956055
    4. '                
' → logprob: -7.752363204956055
    5. 'num' → logprob: -8.752363204956055
    6. 'inner' → logprob: -9.127363204956055
    7. 'multip' → logprob: -10.002363204956055
    8. '``' → logprob: -10.377363204956055
    9. 'token' → logprob: -10.752363204956055
    10. '<|end|>' → logprob: -11.002363204956055

Token 376: ' m' (ID: 284)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.29896774888038635
    2. 'num' → logprob: -1.798967719078064
    3. 'count' → logprob: -3.0489678382873535
    4. 'mul' → logprob: -3.4239678382873535
    5. 'm' (adapté à ' m') → logprob: -5.4239678382873535
    6. 'cnt' → logprob: -5.7989678382873535
    7. 'multip' → logprob: -6.1739678382873535
    8. '   ' → logprob: -6.9239678382873535
    9. 'factor' → logprob: -7.2989678382873535
    10. 'times' → logprob: -8.048967361450195

Token 377: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35768407583236694
    2. 'ult' → logprob: -1.8576841354370117
    3. 'ultip' → logprob: -2.2326841354370117
    4. ' =' → logprob: -3.4826841354370117
    5. 'ul' → logprob: -5.357684135437012
    6. 'ultiply' → logprob: -6.982684135437012
    7. '=parse' → logprob: -8.357684135437012
    8. '   ' → logprob: -8.482684135437012
    9. '=num' → logprob: -8.607684135437012
    10. 'ultiple' → logprob: -8.732684135437012

Token 378: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0007102862582542002
    2. ' parse' → logprob: -7.250710487365723
    3. '(parse' → logprob: -15.750710487365723
    4. 'helper' → logprob: -16.125709533691406
    5. '	parse' → logprob: -16.375709533691406
    6. '=parse' → logprob: -17.500709533691406
    7. '   ' → logprob: -18.000709533691406
    8. ' ' → logprob: -18.500709533691406
    9. '.parse' → logprob: -19.750709533691406
    10. '_parse' → logprob: -19.750709533691406

Token 379: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -6.153795766294934e-06
    2. 'num' → logprob: -12.125005722045898
    3. '_' → logprob: -14.375005722045898
    4. '_n' → logprob: -17.8750057220459
    5. '_NUM' → logprob: -18.8750057220459
    6. '_number' → logprob: -19.3750057220459
    7. ' num' → logprob: -20.1250057220459
    8. '_nums' → logprob: -20.1250057220459
    9. 'Num' → logprob: -20.2500057220459
    10. '	num' → logprob: -20.7500057220459

Token 380: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.36574100604048e-06
    2. '()
' → logprob: -13.000004768371582
    3. ' ()' → logprob: -14.000004768371582
    4. '())' → logprob: -15.375004768371582
    5. '()]' → logprob: -15.500004768371582
    6. '(' → logprob: -16.000003814697266
    7. '()`' → logprob: -16.250003814697266
    8. '();' → logprob: -16.250003814697266
    9. '()>' → logprob: -16.500003814697266
    10. '（）' → logprob: -16.500003814697266

Token 381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017968006432056427
    2. ' for' → logprob: -6.626796722412109
    3. '           ' → logprob: -8.12679672241211
    4. '       ' → logprob: -10.12679672241211
    5. 'for' → logprob: -10.50179672241211
    6. '		       ' → logprob: -10.87679672241211
    7. '	           ' → logprob: -11.12679672241211
    8. '                
' → logprob: -11.25179672241211
    9. '<|end|>' → logprob: -11.37679672241211
    10. ' inner' → logprob: -11.75179672241211

Token 382: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.718112051486969
    2. ' for' → logprob: -1.0931119918823242
    3. 'for' (adapté à ' for') → logprob: -1.9681119918823242
    4. '               ' → logprob: -3.343111991882324
    5. '       ' → logprob: -6.343111991882324
    6. '   ' → logprob: -8.843111991882324
    7. '	       ' → logprob: -9.343111991882324
    8. '	for' → logprob: -10.718111991882324
    9. ' ' → logprob: -10.843111991882324
    10. '          ' → logprob: -10.968111991882324

Token 383: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5560352206230164
    2. 'key' → logprob: -1.1810352802276611
    3. 'elem' → logprob: -2.931035280227661
    4. 'sym' → logprob: -3.931035280227661
    5. ' key' → logprob: -4.181035041809082
    6. ' sym' → logprob: -4.806035041809082
    7. 'atom' → logprob: -5.056035041809082
    8. ' k' → logprob: -5.056035041809082
    9. 'element' → logprob: -5.181035041809082
    10. 'el' → logprob: -6.056035041809082

Token 384: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8186559677124023
    2. ' in' → logprob: -1.0686559677124023
    3. ',v' → logprob: -1.6936559677124023
    4. 'in' → logprob: -3.5686559677124023
    5. ',in' → logprob: -6.568655967712402
    6. ' ,' → logprob: -6.568655967712402
    7. ',val' → logprob: -8.318655967712402
    8. 'v' → logprob: -8.568655967712402
    9. ',value' → logprob: -8.943655967712402
    10. ',key' → logprob: -11.068655967712402

Token 385: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804963827133179
    2. 'in' → logprob: -3.2880496978759766
    3. '   ' → logprob: -12.413049697875977
    4. ' ' → logprob: -13.663049697875977
    5. '	in' → logprob: -14.288049697875977
    6. ',' → logprob: -14.413049697875977
    7. ',in' → logprob: -15.163049697875977
    8. 'import' → logprob: -15.163049697875977
    9. '    ' → logprob: -15.413049697875977
    10. '  ' → logprob: -15.788049697875977

Token 386: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.0015186689561232924
    2. ' inner' → logprob: -6.501518726348877
    3. '(inner' → logprob: -11.626518249511719
    4. 'inners' → logprob: -12.126518249511719
    5. 'm' → logprob: -13.626518249511719
    6. '.inner' → logprob: -15.626518249511719
    7. '   ' → logprob: -15.751518249511719
    8. 'v' → logprob: -16.50151824951172
    9. 'internal' → logprob: -17.00151824951172
    10. 'outer' → logprob: -17.00151824951172

Token 387: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -3.845798710244708e-05
    2. 'items' → logprob: -11.125038146972656
    3. '.' → logprob: -11.250038146972656
    4. ' .' → logprob: -11.500038146972656
    5. '.iteritems' → logprob: -15.000038146972656
    6. ' items' → logprob: -16.125038146972656
    7. '.Items' → logprob: -16.125038146972656
    8. '   ' → logprob: -18.000038146972656
    9. '.keys' → logprob: -18.375038146972656
    10. '       ' → logprob: -19.125038146972656

Token 388: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.028024058789014816
    2. '():' → logprob: -3.6530239582061768
    3. '()' → logprob: -6.528024196624756
    4. '():
' → logprob: -9.278023719787598
    5. '():

' → logprob: -9.403023719787598
    6. '()):
' → logprob: -9.528023719787598
    7. '()}' → logprob: -12.653023719787598
    8. '()}
' → logprob: -13.653023719787598
    9. '()`' → logprob: -13.903023719787598
    10. '()>' → logprob: -13.903023719787598

Token 389: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6040666699409485
    2. '               ' → logprob: -0.8540666699409485
    3. '                       ' → logprob: -4.729066848754883
    4. '```' → logprob: -4.729066848754883
    5. '           ' → logprob: -4.979066848754883
    6. ':
' → logprob: -6.854066848754883
    7. ',' → logprob: -7.979066848754883
    8. '
' → logprob: -8.229066848754883
    9. '``' → logprob: -8.479066848754883
    10. '<|end|>' → logprob: -8.604066848754883

Token 390: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.7224328517913818
    2. '                   ' → logprob: -1.3474328517913818
    3. '                       ' → logprob: -2.222432851791382
    4. '               ' → logprob: -2.847432851791382
    5. 'sub' (adapté à ' sub') → logprob: -2.972432851791382
    6. ' if' → logprob: -3.722432851791382
    7. ' ' → logprob: -5.972433090209961
    8. '           ' → logprob: -6.472433090209961
    9. '   ' → logprob: -6.597433090209961
    10. 'if' → logprob: -6.847433090209961

Token 391: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -1.6166903151315637e-05
    2. '_weights' → logprob: -11.125016212463379
    3. '(weights' → logprob: -14.000016212463379
    4. ' weights' → logprob: -15.000016212463379
    5. 'weight' → logprob: -16.750015258789062
    6. '.weights' → logprob: -16.875015258789062
    7. '           ' → logprob: -18.375015258789062
    8. '       ' → logprob: -19.125015258789062
    9. 'weig' → logprob: -19.125015258789062
    10. '[' → logprob: -19.250015258789062

Token 392: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -9.088346359931165e-07
    2. '=k' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.625000953674316
    4. '[' → logprob: -16.125
    5. 'k' → logprob: -17.125
    6. '                   ' → logprob: -17.375
    7. '[v' → logprob: -17.5
    8. '           ' → logprob: -18.125
    9. '.setdefault' → logprob: -18.25
    10. ' k' → logprob: -18.625

Token 393: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25638091564178467
    2. ']+=' → logprob: -1.5063809156417847
    3. ']=' → logprob: -5.756381034851074
    4. ' ]' → logprob: -7.381381034851074
    5. ']*' → logprob: -8.131381034851074
    6. '+=' → logprob: -9.256381034851074
    7. '=' → logprob: -9.381381034851074
    8. '*=' → logprob: -9.756381034851074
    9. ' +=' → logprob: -10.506381034851074
    10. '        ' → logprob: -10.881381034851074

Token 394: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08961299806833267
    2. '+=' → logprob: -2.5896129608154297
    3. ' =' → logprob: -4.83961296081543
    4. ' +=' → logprob: -6.08961296081543
    5. '*=' → logprob: -7.96461296081543
    6. ']+=' → logprob: -8.96461296081543
    7. '=sub' → logprob: -12.46461296081543
    8. '=v' → logprob: -12.83961296081543
    9. ' *=' → logprob: -13.71461296081543
    10. '   ' → logprob: -14.08961296081543

Token 395: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0011722482740879059
    2. ' sub' → logprob: -6.751172065734863
    3. '   ' → logprob: -14.001172065734863
    4. '	sub' → logprob: -14.251172065734863
    5. '(sub' → logprob: -16.00117301940918
    6. ' ' → logprob: -16.25117301940918
    7. '           ' → logprob: -16.37617301940918
    8. '       ' → logprob: -16.75117301940918
    9. '.sub' → logprob: -16.87617301940918
    10. '
' → logprob: -17.00117301940918

Token 396: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -3.128163257315464e-07
    2. '_weights' → logprob: -16.0
    3. ' weights' → logprob: -17.0
    4. '       ' → logprob: -17.5
    5. 'weight' → logprob: -17.75
    6. '(weights' → logprob: -17.75
    7. '.weights' → logprob: -17.875
    8. 'weig' → logprob: -18.25
    9. '   ' → logprob: -19.375
    10. 'w' → logprob: -20.25

Token 397: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -2.7491250875755213e-05
    2. 'get' → logprob: -11.125027656555176
    3. '.' → logprob: -11.375027656555176
    4. ' .' → logprob: -13.875027656555176
    5. 'k' → logprob: -16.50002670288086
    6. '                   ' → logprob: -17.25002670288086
    7. '   ' → logprob: -17.62502670288086
    8. '.setdefault' → logprob: -17.87502670288086
    9. '+k' → logprob: -18.50002670288086
    10. '           ' → logprob: -18.50002670288086

Token 398: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.0
    3. 'k' → logprob: -16.625
    4. ' k' → logprob: -17.25
    5. ' (' → logprob: -17.75
    6. ',k' → logprob: -19.375
    7. '(
' → logprob: -19.5
    8. '(key' → logprob: -19.75
    9. '[k' → logprob: -20.125
    10. '```' → logprob: -20.25

Token 399: ',' (ID: 11)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.07945654541254044
    2. ',' → logprob: -2.5794565677642822
    3. ' ,' → logprob: -7.954456329345703
    4. 'k' → logprob: -8.954456329345703
    5. ')' → logprob: -10.329456329345703
    6. '(k' → logprob: -10.454456329345703
    7. ' k' → logprob: -11.204456329345703
    8. ',c' → logprob: -12.704456329345703
    9. ',v' → logprob: -12.704456329345703
    10. ')+' → logprob: -13.204456329345703

Token 400: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. ')' → logprob: -18.000001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '           ' → logprob: -22.125001907348633
    6. '۰' → logprob: -22.250001907348633
    7. '                   ' → logprob: -22.375001907348633
    8. '                       ' → logprob: -22.625001907348633
    9. ',' → logprob: -22.750001907348633
    10. '  ' → logprob: -22.875001907348633

Token 401: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07899422198534012
    2. ')+' → logprob: -2.5789942741394043
    3. ' )' → logprob: -9.328993797302246
    4. '+' → logprob: -11.953993797302246
    5. ')+(' → logprob: -12.578993797302246
    6. ']+' → logprob: -13.578993797302246
    7. '+)' → logprob: -14.203993797302246
    8. ',' → logprob: -14.578993797302246
    9. '')' → logprob: -14.578993797302246
    10. '")+' → logprob: -14.828993797302246

Token 402: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00524075236171484
    2. ' v' → logprob: -5.2552409172058105
    3. '   ' → logprob: -12.130240440368652
    4. ' ' → logprob: -14.630240440368652
    5. '	v' → logprob: -15.255240440368652
    6. '(v' → logprob: -15.380240440368652
    7. '  ' → logprob: -15.880240440368652
    8. '                   ' → logprob: -16.00524139404297
    9. '    ' → logprob: -16.25524139404297
    10. '           ' → logprob: -16.38024139404297

Token 403: '*m' (ID: 85049)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7823138236999512
    2. '*m' → logprob: -0.7823138236999512
    3. '*' → logprob: -2.532313823699951
    4. '*v' → logprob: -5.157313823699951
    5. '*k' → logprob: -9.65731430053711
    6. '*q' → logprob: -13.40731430053711
    7. '*n' → logprob: -13.90731430053711
    8. '*s' → logprob: -14.15731430053711
    9. '*c' → logprob: -14.40731430053711
    10. '*w' → logprob: -14.40731430053711

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41355660557746887
    2. '<|end|>' → logprob: -1.4135565757751465
    3. '
' → logprob: -3.1635565757751465
    4. '               ' → logprob: -3.6635565757751465
    5. '           ' → logprob: -4.1635565757751465
    6. '<|end|>' → logprob: -5.1635565757751465
    7. '```' → logprob: -6.1635565757751465
    8. '   ' → logprob: -6.7885565757751465
    9. 'return' → logprob: -6.9135565757751465
    10. ')' → logprob: -7.4135565757751465

Token 405: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23349840939044952
    2. '           ' → logprob: -1.608498454093933
    3. '       ' → logprob: -4.983498573303223
    4. '<|end|>' → logprob: -7.733498573303223
    5. '                   ' → logprob: -8.108498573303223
    6. ' return' → logprob: -9.358498573303223
    7. '```' → logprob: -9.483498573303223
    8. 'return' → logprob: -9.858498573303223
    9. '
' → logprob: -10.233498573303223
    10. '   ' → logprob: -10.608498573303223

Token 406: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.3495716452598572
    2. '           ' → logprob: -1.349571704864502
    3. ' elif' → logprob: -3.349571704864502
    4. 'else' → logprob: -7.849571704864502
    5. '       ' → logprob: -9.099571228027344
    6. '	elif' → logprob: -10.724571228027344
    7. ' else' → logprob: -10.974571228027344
    8. '   ' → logprob: -11.849571228027344
    9. '		' → logprob: -12.349571228027344
    10. '```' → logprob: -12.974571228027344

Token 407: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39617612957954407
    2. ' c' → logprob: -1.1461760997772217
    3. '')' → logprob: -4.771176338195801
    4. ''' → logprob: -8.5211763381958
    5. '   ' → logprob: -8.6461763381958
    6. ' ')' → logprob: -9.1461763381958
    7. ' ' → logprob: -9.6461763381958
    8. ' ')'' → logprob: -10.1461763381958
    9. ')c' → logprob: -10.3961763381958
    10. '    ' → logprob: -10.5211763381958

Token 408: '==' (ID: 560)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.4940341114997864
    2. '==' → logprob: -0.9940341114997864
    3. ' ==' → logprob: -4.119034290313721
    4. 'is' → logprob: -6.619034290313721
    5. '.is' → logprob: -6.744034290313721
    6. ' =='' → logprob: -7.869034290313721
    7. '=' → logprob: -8.744033813476562
    8. '==
' → logprob: -8.744033813476562
    9. ''' → logprob: -9.119033813476562
    10. '='' → logprob: -9.369033813476562

Token 409: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0010775875998660922
    2. ')' → logprob: -7.501077651977539
    3. ''' → logprob: -7.626077651977539
    4. ''H' → logprob: -11.376077651977539
    5. ''A' → logprob: -11.751077651977539
    6. ' ')' → logprob: -12.251077651977539
    7. '")' → logprob: -12.751077651977539
    8. ''O' → logprob: -13.376077651977539
    9. '']' → logprob: -13.501077651977539
    10. ''.' → logprob: -13.626077651977539

Token 410: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4013999402523041
    2. ':' → logprob: -1.6513999700546265
    3. '               ' → logprob: -2.026399850845337
    4. '           ' → logprob: -6.401400089263916
    5. '):
' → logprob: -6.401400089263916
    6. '       ' → logprob: -6.651400089263916
    7. ')' → logprob: -7.151400089263916
    8. '<|end|>' → logprob: -8.151399612426758
    9. ' or' → logprob: -8.276399612426758
    10. '   ' → logprob: -8.526399612426758

Token 411: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4205373525619507
    2. '               ' → logprob: -1.1705373525619507
    3. 'break' → logprob: -3.9205374717712402
    4. 'pos' → logprob: -5.17053747177124
    5. '
' → logprob: -5.79553747177124
    6. 'return' → logprob: -6.17053747177124
    7. ' break' → logprob: -6.79553747177124
    8. '            
' → logprob: -8.045536994934082
    9. '       ' → logprob: -8.795536994934082
    10. ' pos' → logprob: -9.170536994934082

Token 412: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.32694587111473083
    2. 'return' → logprob: -2.0769457817077637
    3. '               ' → logprob: -2.5769457817077637
    4. '           ' → logprob: -2.8269457817077637
    5. ' break' → logprob: -4.076945781707764
    6. ' return' → logprob: -6.826945781707764
    7. 'pos' → logprob: -8.326946258544922
    8. '       ' → logprob: -9.951946258544922
    9. '   ' → logprob: -11.326946258544922
    10. '	break' → logprob: -11.826946258544922

Token 413: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0049005853943526745
    2. '<|end|>' → logprob: -6.3799004554748535
    3. '
' → logprob: -7.0049004554748535
    4. '            
' → logprob: -7.2549004554748535
    5. '               ' → logprob: -7.3799004554748535
    6. '<|end|>' → logprob: -8.379900932312012
    7. '       ' → logprob: -8.754900932312012
    8. '	       ' → logprob: -9.129900932312012
    9. ' else' → logprob: -9.754900932312012
    10. 'else' → logprob: -9.754900932312012

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008492941851727664
    2. 'else' → logprob: -8.625849723815918
    3. 'elif' → logprob: -8.625849723815918
    4. '            
' → logprob: -8.750849723815918
    5. ' else' → logprob: -8.750849723815918
    6. '       ' → logprob: -9.625849723815918
    7. ' elif' → logprob: -10.250849723815918
    8. '		' → logprob: -11.500849723815918
    9. '	       ' → logprob: -11.625849723815918
    10. '          ' → logprob: -11.750849723815918

Token 415: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04237151890993118
    2. ' else' → logprob: -4.04237174987793
    3. 'else' → logprob: -4.29237174987793
    4. '       ' → logprob: -5.16737174987793
    5. 'pos' → logprob: -6.16737174987793
    6. 'elif' (adapté à ' elif') → logprob: -7.04237174987793
    7. '   ' → logprob: -7.54237174987793
    8. ' elif' → logprob: -7.91737174987793
    9. '	       ' → logprob: -8.91737174987793
    10. ' pos' → logprob: -9.04237174987793

Token 416: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07712150365114212
    2. ' c' → logprob: -3.0771214962005615
    3. 'formula' → logprob: -3.7021214962005615
    4. ' formula' → logprob: -6.827121734619141
    5. '   ' → logprob: -6.952121734619141
    6. ' ' → logprob: -7.702121734619141
    7. 're' → logprob: -8.82712173461914
    8. ' not' → logprob: -8.82712173461914
    9. 'not' → logprob: -9.07712173461914
    10. 'True' → logprob: -9.20212173461914

Token 417: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.24690783023834229
    2. '==' → logprob: -1.8719078302383423
    3. 'is' → logprob: -3.9969077110290527
    4. '.' → logprob: -4.121907711029053
    5. '=='' → logprob: -4.621907711029053
    6. '=' → logprob: -4.871907711029053
    7. '=is' → logprob: -4.871907711029053
    8. ' ==' → logprob: -6.246907711029053
    9. ' .' → logprob: -6.621907711029053
    10. 'import' → logprob: -7.246907711029053

Token 418: 'upper' (ID: 26119)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.3868715465068817
    2. 'upper' → logprob: -1.136871576309204
    3. 'uppercase' → logprob: -15.886871337890625
    4. ' upper' → logprob: -16.261871337890625
    5. ' alpha' → logprob: -16.261871337890625
    6. 'al' → logprob: -16.261871337890625
    7. 'alphabet' → logprob: -17.511871337890625
    8. '(alpha' → logprob: -18.011871337890625
    9. 'a' → logprob: -18.011871337890625
    10. '.upper' → logprob: -18.261871337890625

Token 419: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24135178327560425
    2. '():
' → logprob: -1.741351842880249
    3. '()' → logprob: -3.241351842880249
    4. '():
' → logprob: -11.366352081298828
    5. '():

' → logprob: -11.741352081298828
    6. '()):
' → logprob: -11.991352081298828
    7. ':' → logprob: -12.241352081298828
    8. '(' → logprob: -13.491352081298828
    9. ' ():' → logprob: -13.491352081298828
    10. '()
' → logprob: -13.491352081298828

Token 420: '               ' (ID: 506)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -1.2631022930145264
    2. '               ' → logprob: -1.5131022930145264
    3. ' sym' → logprob: -1.6381022930145264
    4. '       ' → logprob: -2.0131022930145264
    5. '           ' → logprob: -2.2631022930145264
    6. 'atom' → logprob: -3.1381022930145264
    7. 'token' → logprob: -4.6381025314331055
    8. ' atom' → logprob: -4.7631025314331055
    9. 'symbol' → logprob: -6.3881025314331055
    10. ' token' → logprob: -7.2631025314331055

Token 421: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' (adapté à ' sym') → logprob: -0.23948581516742706
    2. 'atom' → logprob: -1.6144858598709106
    3. ' sym' → logprob: -4.489485740661621
    4. 'symbol' → logprob: -6.489485740661621
    5. ' atom' → logprob: -7.364485740661621
    6. '               ' → logprob: -7.739485740661621
    7. 'token' → logprob: -9.489485740661621
    8. '           ' → logprob: -10.364485740661621
    9. 'elem' → logprob: -11.489485740661621
    10. 'try' → logprob: -11.614485740661621

Token 422: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023693446069955826
    2. ' =' → logprob: -3.773693561553955
    3. '+=' → logprob: -8.523693084716797
    4. '=parse' → logprob: -8.773693084716797
    5. '=form' → logprob: -10.523693084716797
    6. ')' → logprob: -10.648693084716797
    7. ' +=' → logprob: -11.773693084716797
    8. '<|end|>' → logprob: -11.773693084716797
    9. '=create' → logprob: -12.273693084716797
    10. '=get' → logprob: -12.398693084716797

Token 423: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.005233882926404476
    2. ' parse' → logprob: -5.2552337646484375
    3. '	parse' → logprob: -18.130233764648438
    4. '(parse' → logprob: -18.880233764648438
    5. '   ' → logprob: -19.755233764648438
    6. '               ' → logprob: -20.380233764648438
    7. ' ' → logprob: -20.380233764648438
    8. '_parse' → logprob: -21.005233764648438
    9. '.parse' → logprob: -21.130233764648438
    10. '           ' → logprob: -21.255233764648438

Token 424: '_atom' (ID: 106253)
  Prédit: '_atom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_atom' → logprob: -1.7432603272027336e-06
    2. 'atom' → logprob: -13.625001907348633
    3. '_symbol' → logprob: -15.500001907348633
    4. '_atomic' → logprob: -16.500001907348633
    5. '_' → logprob: -17.125001907348633
    6. '_token' → logprob: -17.250001907348633
    7. ' atom' → logprob: -17.750001907348633
    8. '_sym' → logprob: -18.250001907348633
    9. 'Atom' → logprob: -18.375001907348633
    10. '_at' → logprob: -18.625001907348633

Token 425: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07905039936304092
    2. '()
' → logprob: -2.579050302505493
    3. '               ' → logprob: -9.704050064086914
    4. '<|end|>' → logprob: -10.079050064086914
    5. '()

' → logprob: -10.829050064086914
    6. '       ' → logprob: -11.704050064086914
    7. '()\' → logprob: -11.954050064086914
    8. '()
' → logprob: -12.454050064086914
    9. ' ()' → logprob: -12.579050064086914
    10. '<|end|>' → logprob: -12.954050064086914

Token 426: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023334693163633347
    2. '                
' → logprob: -4.273334503173828
    3. '
' → logprob: -5.898334503173828
    4. 'num' → logprob: -6.773334503173828
    5. '<|end|>' → logprob: -7.273334503173828
    6. ' 
' → logprob: -7.398334503173828
    7. '  
' → logprob: -7.398334503173828
    8. 'm' → logprob: -7.648334503173828
    9. '       ' → logprob: -7.898334503173828
    10. 'token' → logprob: -7.898334503173828

Token 427: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0233866348862648
    2. 'w' → logprob: -4.523386478424072
    3. 'num' → logprob: -4.773386478424072
    4. ' m' → logprob: -6.273386478424072
    5. 'cnt' → logprob: -6.773386478424072
    6. 'count' → logprob: -7.773386478424072
    7. '               ' → logprob: -9.39838695526123
    8. 'c' → logprob: -9.64838695526123
    9. ' w' → logprob: -9.89838695526123
    10. ' num' → logprob: -10.27338695526123

Token 428: ' sym' (ID: 5357)
  Prédit: 'sym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sym' → logprob: -0.4741029739379883
    2. ' sym' → logprob: -0.9741029739379883
    3. '   ' → logprob: -10.849102973937988
    4. ' ' → logprob: -13.224102973937988
    5. '  ' → logprob: -14.099102973937988
    6. '(sym' → logprob: -14.099102973937988
    7. '    ' → logprob: -14.349102973937988
    8. 'pos' → logprob: -14.724102973937988
    9. '       ' → logprob: -14.849102973937988
    10. ' not' → logprob: -14.974102973937988

Token 429: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011050770990550518
    2. 'not' → logprob: -4.511050701141357
    3. ')' → logprob: -13.636051177978516
    4. ' in' → logprob: -14.136051177978516
    5. '	not' → logprob: -14.261051177978516
    6. '[' → logprob: -16.136051177978516
    7. ' ' → logprob: -16.886051177978516
    8. '<|end|>' → logprob: -17.011051177978516
    9. ']' → logprob: -17.386051177978516
    10. '=' → logprob: -17.386051177978516

Token 430: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34957754611968994
    2. 'weights' → logprob: -1.84957754611969
    3. ' weights' → logprob: -2.5995774269104004
    4. 'in' → logprob: -2.8495774269104004
    5. '(weights' → logprob: -5.3495774269104
    6. '_weights' → logprob: -7.3495774269104
    7. '.weights' → logprob: -9.349577903747559
    8. '   ' → logprob: -11.099577903747559
    9. '<|end|>' → logprob: -11.974577903747559
    10. 'Weights' → logprob: -12.099577903747559

Token 431: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.0005530327325686812
    2. ' weights' → logprob: -7.500553131103516
    3. '(weights' → logprob: -18.625553131103516
    4. 'weight' → logprob: -19.375553131103516
    5. '.weights' → logprob: -20.375553131103516
    6. '   ' → logprob: -21.375553131103516
    7. '_weights' → logprob: -21.625553131103516
    8. '
' → logprob: -22.000553131103516
    9. '```' → logprob: -22.000553131103516
    10. 'keys' → logprob: -23.125553131103516

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4742729365825653
    2. ':
' → logprob: -0.9742729663848877
    3. '           ' → logprob: -9.474272727966309
    4. '                   ' → logprob: -10.099272727966309
    5. '               ' → logprob: -10.849272727966309
    6. ':return' → logprob: -10.974272727966309
    7. ':

' → logprob: -11.349272727966309
    8. '):
' → logprob: -11.724272727966309
    9. '   ' → logprob: -12.099272727966309
    10. ':
' → logprob: -12.474272727966309

Token 433: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031698683742433786
    2. '               ' → logprob: -6.253170013427734
    3. ' raise' → logprob: -8.003170013427734
    4. '                       ' → logprob: -8.628170013427734
    5. '           ' → logprob: -9.378170013427734
    6. ':
' → logprob: -9.378170013427734
    7. ' return' → logprob: -9.503170013427734
    8. '   ' → logprob: -9.503170013427734
    9. 'raise' → logprob: -9.878170013427734
    10. '                    
' → logprob: -10.253170013427734

Token 434: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.6983431577682495
    2. 'raise' (adapté à ' raise') → logprob: -0.6983431577682495
    3. '                   ' → logprob: -5.448343276977539
    4. '	raise' → logprob: -7.323343276977539
    5. '                       ' → logprob: -8.573343276977539
    6. '                    ' → logprob: -11.698343276977539
    7. '   ' → logprob: -12.073343276977539
    8. '               ' → logprob: -12.573343276977539
    9. '                    
' → logprob: -13.198343276977539
    10. '
' → logprob: -13.323343276977539

Token 435: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00010247035970678553
    2. 'Key' → logprob: -9.500102043151855
    3. ' Value' → logprob: -10.500102043151855
    4. '	Value' → logprob: -17.000102996826172
    5. '_value' → logprob: -18.125102996826172
    6. '.Value' → logprob: -18.375102996826172
    7. '(Value' → logprob: -18.500102996826172
    8. '<Value' → logprob: -18.625102996826172
    9. '_Value' → logprob: -19.250102996826172
    10. ' ' → logprob: -19.625102996826172

Token 436: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.133198283147067e-05
    2. 'Value' → logprob: -10.000051498413086
    3. 'alue' → logprob: -12.125051498413086
    4. 'rror' → logprob: -15.500051498413086
    5. 'error' → logprob: -16.125051498413086
    6. 'al' → logprob: -16.375051498413086
    7. 'ate' → logprob: -16.750051498413086
    8. 'ator' → logprob: -17.000051498413086
    9. 'e' → logprob: -17.875051498413086
    10. 'ation' → logprob: -18.750051498413086

Token 437: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012135679135099053
    2. '<|end|>' → logprob: -7.001213550567627
    3. '                
' → logprob: -8.751214027404785
    4. '                ' → logprob: -10.251214027404785
    5. '              ' → logprob: -10.376214027404785
    6. '
' → logprob: -10.876214027404785
    7. ')' → logprob: -11.001214027404785
    8. '           ' → logprob: -11.251214027404785
    9. '                   ' → logprob: -12.001214027404785
    10. '			' → logprob: -12.876214027404785

Token 438: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016150808660313487
    2. '                
' → logprob: -7.001615047454834
    3. '                   ' → logprob: -8.751615524291992
    4. '                ' → logprob: -9.001615524291992
    5. '              ' → logprob: -9.501615524291992
    6. '  
' → logprob: -9.751615524291992
    7. '               
' → logprob: -10.251615524291992
    8. '<|end|>' → logprob: -10.376615524291992
    9. '           ' → logprob: -10.501615524291992
    10. ' 
' → logprob: -10.626615524291992

Token 439: ' m' (ID: 284)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4707833230495453
    2. 'm' (adapté à ' m') → logprob: -1.5957833528518677
    3. ' num' → logprob: -2.970783233642578
    4. 'w' → logprob: -2.970783233642578
    5. ' m' → logprob: -3.470783233642578
    6. '               ' → logprob: -4.095783233642578
    7. 'count' → logprob: -5.095783233642578
    8. ' w' → logprob: -5.970783233642578
    9. 'pos' → logprob: -6.095783233642578
    10. '                   ' → logprob: -6.220783233642578

Token 440: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31345272064208984
    2. ' =' → logprob: -1.3134527206420898
    3. '=parse' → logprob: -8.56345272064209
    4. '   ' → logprob: -17.438453674316406
    5. '=int' → logprob: -17.563453674316406
    6. ' ' → logprob: -17.688453674316406
    7. '=

' → logprob: -18.313453674316406
    8. '＝' → logprob: -18.688453674316406
    9. '=m' → logprob: -18.813453674316406
    10. ' ' → logprob: -19.438453674316406

Token 441: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.038042180240154266
    2. ' parse' → logprob: -3.2880420684814453
    3. '	parse' → logprob: -14.913042068481445
    4. '(parse' → logprob: -15.038042068481445
    5. '=parse' → logprob: -16.538042068481445
    6. '.parse' → logprob: -18.163042068481445
    7. '_parse' → logprob: -18.163042068481445
    8. ' ' → logprob: -18.163042068481445
    9. '   ' → logprob: -19.163042068481445
    10. 'par' → logprob: -20.163042068481445

Token 442: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -3.173704271830502e-06
    2. '_atom' → logprob: -12.87500286102295
    3. 'num' → logprob: -14.37500286102295
    4. '_number' → logprob: -18.750003814697266
    5. '_' → logprob: -19.750003814697266
    6. '_n' → logprob: -19.875003814697266
    7. 'Num' → logprob: -19.875003814697266
    8. '_int' → logprob: -20.375003814697266
    9. '_sym' → logprob: -21.000003814697266
    10. '_NUM' → logprob: -21.125003814697266

Token 443: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08972187340259552
    2. '()
' → logprob: -2.464721918106079
    3. '               ' → logprob: -7.9647216796875
    4. '       ' → logprob: -8.0897216796875
    5. '<|end|>' → logprob: -9.9647216796875
    6. '           ' → logprob: -10.5897216796875
    7. '()

' → logprob: -11.9647216796875
    8. '
' → logprob: -11.9647216796875
    9. '()
' → logprob: -12.0897216796875
    10. '())' → logprob: -12.3397216796875

Token 444: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.723973582556937e-05
    2. '           ' → logprob: -12.500017166137695
    3. '                   ' → logprob: -12.625017166137695
    4. '                
' → logprob: -12.625017166137695
    5. '<|end|>' → logprob: -12.625017166137695
    6. '              ' → logprob: -14.375017166137695
    7. '
' → logprob: -14.500017166137695
    8. '       ' → logprob: -14.625017166137695
    9. '	           ' → logprob: -14.625017166137695
    10. '		       ' → logprob: -15.250017166137695

Token 445: ' sub' (ID: 1543)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005856798379682004
    2. 'sub' (adapté à ' sub') → logprob: -8.250585556030273
    3. 'if' → logprob: -8.750585556030273
    4. '           ' → logprob: -9.625585556030273
    5. 'for' → logprob: -10.250585556030273
    6. ' if' → logprob: -10.625585556030273
    7. '                   ' → logprob: -11.250585556030273
    8. '       ' → logprob: -11.250585556030273
    9. ' for' → logprob: -12.375585556030273
    10. '   ' → logprob: -12.875585556030273

Token 446: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -1.981667537620524e-06
    2. '_weights' → logprob: -13.250001907348633
    3. '(weights' → logprob: -16.250001907348633
    4. ' weights' → logprob: -17.375001907348633
    5. '.weights' → logprob: -17.875001907348633
    6. '[' → logprob: -18.000001907348633
    7. 'values' → logprob: -20.000001907348633
    8. 'weight' → logprob: -20.625001907348633
    9. '   ' → logprob: -21.125001907348633
    10. '       ' → logprob: -21.250001907348633

Token 447: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0036155125126242638
    2. '[k' → logprob: -5.628615379333496
    3. '[' → logprob: -12.253615379333496
    4. 'sym' → logprob: -12.503615379333496
    5. '.setdefault' → logprob: -13.128615379333496
    6. ' [' → logprob: -13.253615379333496
    7. ' sym' → logprob: -13.628615379333496
    8. '(sym' → logprob: -14.253615379333496
    9. '[key' → logprob: -14.878615379333496
    10. '=s' → logprob: -15.003615379333496

Token 448: 'ym' (ID: 1818)
  Prédit: 'ym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ym' → logprob: -0.0032176414970308542
    2. 'sym' → logprob: -6.003217697143555
    3. '(sym' → logprob: -7.378217697143555
    4. 'ymbol' → logprob: -10.503217697143555
    5. 'y' → logprob: -10.628217697143555
    6. '[' → logprob: -10.628217697143555
    7. '.get' → logprob: -11.128217697143555
    8. ' sym' → logprob: -11.253217697143555
    9. '[s' → logprob: -12.253217697143555
    10. '   ' → logprob: -13.378217697143555

Token 449: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014529668726027012
    2. ']=' → logprob: -4.264529705047607
    3. '=' → logprob: -8.01452922821045
    4. ' =' → logprob: -11.13952922821045
    5. ' ]' → logprob: -11.26452922821045
    6. ')' → logprob: -12.01452922821045
    7. ']+=' → logprob: -14.13952922821045
    8. ')=' → logprob: -14.26452922821045
    9. '       ' → logprob: -15.63952922821045
    10. '']=' → logprob: -15.76452922821045

Token 450: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002485884353518486
    2. ' =' → logprob: -6.002485752105713
    3. '=sub' → logprob: -11.502486228942871
    4. '+=' → logprob: -17.377485275268555
    5. '[sub' → logprob: -18.127485275268555
    6. '   ' → logprob: -19.127485275268555
    7. '=
' → logprob: -19.252485275268555
    8. ' +=' → logprob: -19.627485275268555
    9. '[' → logprob: -19.877485275268555
    10. '=subprocess' → logprob: -20.002485275268555

Token 451: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.25193047523498535
    2. ' sub' → logprob: -1.5019304752349854
    3. '	sub' → logprob: -14.626930236816406
    4. '(sub' → logprob: -15.251930236816406
    5. ' ' → logprob: -15.376930236816406
    6. '.sub' → logprob: -15.876930236816406
    7. '   ' → logprob: -15.876930236816406
    8. '=sub' → logprob: -16.626930236816406
    9. '  ' → logprob: -17.501930236816406
    10. '_sub' → logprob: -17.876930236816406

Token 452: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -5.037835580878891e-05
    2. '.get' → logprob: -10.50005054473877
    3. '_weights' → logprob: -11.12505054473877
    4. '.weights' → logprob: -12.87505054473877
    5. '(weights' → logprob: -13.50005054473877
    6. 'weig' → logprob: -13.50005054473877
    7. 'weight' → logprob: -13.62505054473877
    8. 'get' → logprob: -15.37505054473877
    9. '   ' → logprob: -15.37505054473877
    10. ' weights' → logprob: -15.50005054473877

Token 453: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.00011355629976605996
    2. 'get' → logprob: -9.500113487243652
    3. '.' → logprob: -10.500113487243652
    4. ' .' → logprob: -11.500113487243652
    5. '   ' → logprob: -14.250113487243652
    6. '       ' → logprob: -16.87511444091797
    7. '  ' → logprob: -17.12511444091797
    8. '
' → logprob: -17.37511444091797
    9. ' ' → logprob: -18.12511444091797
    10. '```' → logprob: -18.12511444091797

Token 454: '(sym' (ID: 143899)
  Prédit: '(sym'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sym' → logprob: -0.5760546326637268
    2. '(s' → logprob: -0.8260546326637268
    3. 'sym' → logprob: -9.326054573059082
    4. '(symbol' → logprob: -11.201054573059082
    5. ' sym' → logprob: -12.076054573059082
    6. '(' → logprob: -12.076054573059082
    7. '(k' → logprob: -14.576054573059082
    8. ' (' → logprob: -14.826054573059082
    9. '.sym' → logprob: -16.4510555267334
    10. '_sym' → logprob: -16.7010555267334

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.434434175491333
    2. ',s' → logprob: -1.184434175491333
    3. '(sym' → logprob: -3.559434175491333
    4. ' sym' → logprob: -4.309433937072754
    5. 'sym' → logprob: -5.684433937072754
    6. ' ,' → logprob: -6.809433937072754
    7. ',k' → logprob: -11.434433937072754
    8. '_sym' → logprob: -11.559433937072754
    9. '(s' → logprob: -11.684433937072754
    10. ')' → logprob: -12.559433937072754

Token 456: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009337326046079397
    2. 'sym' → logprob: -7.000933647155762
    3. ' sym' → logprob: -11.250933647155762
    4. ' ' → logprob: -11.625933647155762
    5. '(sym' → logprob: -15.750933647155762
    6. 's' → logprob: -16.125934600830078
    7. '   ' → logprob: -16.875934600830078
    8. '       ' → logprob: -18.250934600830078
    9. 'symbol' → logprob: -18.375934600830078
    10. ')' → logprob: -18.750934600830078

Token 457: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12719225883483887
    2. ')+' → logprob: -2.127192258834839
    3. ',' → logprob: -8.377192497253418
    4. ')+(' → logprob: -11.377192497253418
    5. ' )' → logprob: -11.877192497253418
    6. ']+' → logprob: -11.877192497253418
    7. '+' → logprob: -13.127192497253418
    8. '   ' → logprob: -13.377192497253418
    9. ']' → logprob: -14.127192497253418
    10. '}+' → logprob: -14.252192497253418

Token 458: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00016551809676457196
    2. 'weights' → logprob: -9.500165939331055
    3. ' m' → logprob: -9.750165939331055
    4. 'w' → logprob: -10.500165939331055
    5. 'v' → logprob: -12.500165939331055
    6. ' weights' → logprob: -14.875165939331055
    7. '
' → logprob: -15.500165939331055
    8. '   ' → logprob: -15.500165939331055
    9. 'weight' → logprob: -15.875165939331055
    10. '(m' → logprob: -16.875165939331055

Token 459: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4903252124786377
    2. '<|end|>' → logprob: -1.4903252124786377
    3. '               ' → logprob: -2.2403252124786377
    4. '<|end|>' → logprob: -4.240324974060059
    5. '
' → logprob: -4.490324974060059
    6. '           ' → logprob: -4.490324974060059
    7. ' return' → logprob: -4.865324974060059
    8. 'return' → logprob: -5.490324974060059
    9. '```' → logprob: -6.115324974060059
    10. '   ' → logprob: -6.115324974060059

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17992796003818512
    2. '               ' → logprob: -1.804927945137024
    3. 'else' → logprob: -9.679927825927734
    4. '```' → logprob: -10.179927825927734
    5. '       ' → logprob: -10.429927825927734
    6. ' else' → logprob: -10.679927825927734
    7. 'return' → logprob: -11.929927825927734
    8. '                   ' → logprob: -12.179927825927734
    9. '	       ' → logprob: -12.554927825927734
    10. '<|end|>' → logprob: -12.804927825927734

Token 461: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7525472044944763
    2. 'else' (adapté à ' else') → logprob: -1.377547264099121
    3. ' else' → logprob: -1.377547264099121
    4. '       ' → logprob: -3.752547264099121
    5. '<|end|>' → logprob: -8.127547264099121
    6. '	else' → logprob: -8.627547264099121
    7. '   ' → logprob: -8.752547264099121
    8. '	       ' → logprob: -9.752547264099121
    9. 'elif' → logprob: -10.127547264099121
    10. '<|end|>' → logprob: -10.127547264099121

Token 462: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32884377241134644
    2. '           ' → logprob: -1.5788438320159912
    3. '            ' → logprob: -3.328843832015991
    4. ' raise' → logprob: -3.828843832015991
    5. 'raise' → logprob: -5.578843593597412
    6. '                ' → logprob: -5.953843593597412
    7. '   ' → logprob: -6.203843593597412
    8. '       ' → logprob: -6.328843593597412
    9. '              ' → logprob: -7.328843593597412
    10. ' 
' → logprob: -7.578843593597412

Token 463: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23150384426116943
    2. 'raise' → logprob: -2.231503963470459
    3. ' raise' → logprob: -2.481503963470459
    4. '           ' → logprob: -4.481503963470459
    5. '   ' → logprob: -5.606503963470459
    6. '       ' → logprob: -7.481503963470459
    7. '	raise' → logprob: -9.7315034866333
    8. ' ' → logprob: -10.6065034866333
    9. '              ' → logprob: -11.2315034866333
    10. 'pos' → logprob: -11.8565034866333

Token 464: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.048592932522296906
    2. ' raise' → logprob: -3.048593044281006
    3. '   ' → logprob: -12.423592567443848
    4. 'pos' → logprob: -14.173592567443848
    5. 'break' → logprob: -14.673592567443848
    6. '	raise' → logprob: -15.423592567443848
    7. '    ' → logprob: -17.423593521118164
    8. ' pos' → logprob: -17.548593521118164
    9. '                   ' → logprob: -17.923593521118164
    10. ' break' → logprob: -18.048593521118164

Token 465: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0005547016044147313
    2. ' Value' → logprob: -7.50055456161499
    3. 'Syntax' → logprob: -14.125555038452148
    4. '_value' → logprob: -14.375555038452148
    5. '_Value' → logprob: -15.500555038452148
    6. ' ' → logprob: -16.87555503845215
    7. '	Value' → logprob: -17.12555503845215
    8. 'value' → logprob: -18.25055503845215
    9. '.Value' → logprob: -18.37555503845215
    10. '<Value' → logprob: -18.50055503845215

Token 466: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.20169368386268616
    2. 'rror' → logprob: -1.7016936540603638
    3. 'ror' → logprob: -8.201693534851074
    4. 'or' → logprob: -12.701693534851074
    5. 'r' → logprob: -13.826693534851074
    6. 'Token' → logprob: -14.076693534851074
    7. 'error' → logprob: -15.076693534851074
    8. 'SError' → logprob: -15.326693534851074
    9. ' Error' → logprob: -15.451693534851074
    10. '_error' → logprob: -15.826693534851074

Token 467: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5835911631584167
    2. '           ' → logprob: -1.0835912227630615
    3. '<|end|>' → logprob: -3.4585912227630615
    4. '
' → logprob: -3.5835912227630615
    5. '   ' → logprob: -4.333590984344482
    6. 'return' → logprob: -4.583590984344482
    7. '    
' → logprob: -4.833590984344482
    8. '<|end|>' → logprob: -5.083590984344482
    9. '        
' → logprob: -5.958590984344482
    10. '            
' → logprob: -6.833590984344482

Token 468: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3201608955860138
    2. '       ' → logprob: -1.3201608657836914
    3. 'return' → logprob: -5.820160865783691
    4. '   ' → logprob: -6.570160865783691
    5. ' return' → logprob: -6.820160865783691
    6. '<|end|>' → logprob: -7.695160865783691
    7. '```' → logprob: -7.695160865783691
    8. '
' → logprob: -8.570160865783691
    9. '<|end|>' → logprob: -9.570160865783691
    10. '    
' → logprob: -9.695160865783691

Token 469: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027793198823928833
    2. 'return' (adapté à ' return') → logprob: -6.002779483795166
    3. '   ' → logprob: -8.252779006958008
    4. ' return' → logprob: -10.127779006958008
    5. '	return' → logprob: -13.127779006958008
    6. '           ' → logprob: -14.127779006958008
    7. '{return' → logprob: -16.127779006958008
    8. ' ' → logprob: -16.377779006958008
    9. '      ' → logprob: -16.877779006958008
    10. '
' → logprob: -16.877779006958008

Token 470: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0015031944494694471
    2. ' sub' → logprob: -6.501502990722656
    3. '{sub' → logprob: -14.376502990722656
    4. '(sub' → logprob: -15.126502990722656
    5. '[sub' → logprob: -17.126502990722656
    6. '	sub' → logprob: -18.376502990722656
    7. '=sub' → logprob: -18.876502990722656
    8. '_sub' → logprob: -19.251502990722656
    9. '.sub' → logprob: -19.626502990722656
    10. ' ' → logprob: -19.751502990722656

Token 471: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -1.9361264946837764e-07
    2. '_weights' → logprob: -16.0
    3. ' weights' → logprob: -19.0
    4. 'weig' → logprob: -19.875
    5. '.weights' → logprob: -20.625
    6. 'weight' → logprob: -20.625
    7. '(weights' → logprob: -21.125
    8. 'we' → logprob: -22.0
    9. 'wei' → logprob: -23.0
    10. 'ights' → logprob: -23.875

Token 472: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008022868074476719
    2. '<|end|>' → logprob: -4.883022785186768
    3. '    
' → logprob: -9.008023262023926
    4. 'return' → logprob: -9.258023262023926
    5. '<|end|>' → logprob: -9.508023262023926
    6. '
' → logprob: -10.258023262023926
    7. '       ' → logprob: -10.258023262023926
    8. 'tokens' → logprob: -11.508023262023926
    9. ')' → logprob: -11.633023262023926
    10. ' return' → logprob: -11.758023262023926

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007721390575170517
    2. 'return' → logprob: -5.007721424102783
    3. ' return' → logprob: -7.382721424102783
    4. '    
' → logprob: -8.757720947265625
    5. '<|end|>' → logprob: -9.257720947265625
    6. '
' → logprob: -10.507720947265625
    7. ')' → logprob: -10.882720947265625
    8. 'pos' → logprob: -11.007720947265625
    9. 'result' → logprob: -11.132720947265625
    10. 'tokens' → logprob: -11.507720947265625

Token 474: ' counts' (ID: 28991)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2963016629219055
    2. 'result' → logprob: -1.7963016033172607
    3. ' return' → logprob: -3.1713016033172607
    4. 'weights' → logprob: -3.7963016033172607
    5. '   ' → logprob: -4.17130184173584
    6. ' result' → logprob: -5.17130184173584
    7. 'res' → logprob: -6.04630184173584
    8. ' weights' → logprob: -6.42130184173584
    9. 'sub' → logprob: -7.67130184173584
    10. 'total' → logprob: -8.79630184173584

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868800103664398
    2. '=' → logprob: -1.1368800401687622
    3. '=sub' → logprob: -12.511879920959473
    4. ',' → logprob: -12.886879920959473
    5. '={}' → logprob: -14.011879920959473
    6. '=parse' → logprob: -14.261879920959473
    7. '()' → logprob: -14.886879920959473
    8. '   ' → logprob: -14.886879920959473
    9. ' ' → logprob: -16.13688087463379
    10. '  ' → logprob: -16.63688087463379

Token 476: ' helper' (ID: 25246)
  Prédit: 'helper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'helper' → logprob: -0.038042180240154266
    2. ' helper' → logprob: -3.2880420684814453
    3. '(helper' → logprob: -14.538042068481445
    4. 'help' → logprob: -16.288042068481445
    5. '   ' → logprob: -16.413042068481445
    6. 'Helper' → logprob: -16.663042068481445
    7. ' ' → logprob: -17.663042068481445
    8. '/helper' → logprob: -18.163042068481445
    9. 'helpers' → logprob: -18.288042068481445
    10. 'handler' → logprob: -18.413042068481445

Token 477: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.988221684878226e-06
    2. '()
' → logprob: -12.000006675720215
    3. '(' → logprob: -15.500006675720215
    4. ' ()' → logprob: -15.500006675720215
    5. '()

' → logprob: -15.875006675720215
    6. '()`' → logprob: -16.50000762939453
    7. '()]' → logprob: -17.00000762939453
    8. '()"' → logprob: -17.50000762939453
    9. '()
' → logprob: -18.00000762939453
    10. '()\' → logprob: -18.00000762939453

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02197710983455181
    2. 'if' → logprob: -4.521976947784424
    3. ' if' → logprob: -4.521976947784424
    4. '<|end|>' → logprob: -14.396977424621582
    5. ' ' → logprob: -14.771977424621582
    6. '    
' → logprob: -14.896977424621582
    7. '	if' → logprob: -14.896977424621582
    8. '
' → logprob: -15.021977424621582
    9. '  ' → logprob: -15.646977424621582
    10. 'return' → logprob: -16.271976470947266

Token 479: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012959620915353298
    2. 'return' → logprob: -5.3879594802856445
    3. ' if' → logprob: -5.5129594802856445
    4. 'total' → logprob: -5.7629594802856445
    5. 'for' → logprob: -7.1379594802856445
    6. '   ' → logprob: -8.137959480285645
    7. ' total' → logprob: -11.262959480285645
    8. 'result' → logprob: -12.012959480285645
    9. 'weight' → logprob: -12.137959480285645
    10. '	if' → logprob: -12.637959480285645

Token 480: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.10021249949932098
    2. 'pos' → logprob: -2.350212574005127
    3. ' counts' → logprob: -12.475212097167969
    4. ' not' → logprob: -14.225212097167969
    5. ' len' → logprob: -14.600212097167969
    6. '(pos' → logprob: -14.975212097167969
    7. 'counts' → logprob: -15.475212097167969
    8. ' ' → logprob: -15.725212097167969
    9. '	pos' → logprob: -16.35021209716797
    10. ' sum' → logprob: -16.60021209716797

Token 481: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1569501906633377
    2. '==' → logprob: -2.4069502353668213
    3. ' !=' → logprob: -3.0319502353668213
    4. ' ==' → logprob: -5.281949996948242
    5. '<|end|>' → logprob: -7.281949996948242
    6. '>=' → logprob: -7.406949996948242
    7. '<len' → logprob: -8.031949996948242
    8. '<' → logprob: -9.531949996948242
    9. '=' → logprob: -9.656949996948242
    10. ' <' → logprob: -11.156949996948242

Token 482: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020580526324920356
    2. ' n' → logprob: -8.500205993652344
    3. 'len' → logprob: -13.000205993652344
    4. '   ' → logprob: -17.375205993652344
    5. ' ' → logprob: -19.000205993652344
    6. ' len' → logprob: -19.125205993652344
    7. '	n' → logprob: -19.250205993652344
    8. '
' → logprob: -21.125205993652344
    9. '  ' → logprob: -22.000205993652344
    10. 'length' → logprob: -23.000205993652344

Token 483: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1830011010169983
    2. ':' → logprob: -1.8080010414123535
    3. '       ' → logprob: -5.8080010414123535
    4. '   ' → logprob: -8.558001518249512
    5. ':return' → logprob: -11.058001518249512
    6. 'raise' → logprob: -11.433001518249512
    7. '           ' → logprob: -12.058001518249512
    8. '):
' → logprob: -12.183001518249512
    9. ' or' → logprob: -12.808001518249512
    10. ' :
' → logprob: -13.058001518249512

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16122864186763763
    2. ' raise' → logprob: -1.9112286567687988
    3. 'raise' → logprob: -7.161228656768799
    4. '   ' → logprob: -8.78622817993164
    5. '    ' → logprob: -9.91122817993164
    6. '	raise' → logprob: -11.28622817993164
    7. '```' → logprob: -13.16122817993164
    8. '     ' → logprob: -13.41122817993164
    9. '           ' → logprob: -13.41122817993164
    10. ' ' → logprob: -13.53622817993164

Token 485: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.2519705891609192
    2. ' raise' → logprob: -1.5019705295562744
    3. '   ' → logprob: -10.251970291137695
    4. '       ' → logprob: -12.626970291137695
    5. '	raise' → logprob: -13.251970291137695
    6. '    ' → logprob: -13.751970291137695
    7. 'raises' → logprob: -17.376970291137695
    8. 'Raise' → logprob: -17.376970291137695
    9. 'return' → logprob: -17.751970291137695
    10. '_raise' → logprob: -19.126970291137695

Token 486: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00020473242329899222
    2. ' Value' → logprob: -8.500205039978027
    3. '_value' → logprob: -14.375205039978027
    4. '_Value' → logprob: -15.125205039978027
    5. '	Value' → logprob: -15.875205039978027
    6. ' ' → logprob: -16.50020408630371
    7. '.Value' → logprob: -16.87520408630371
    8. 'value' → logprob: -17.62520408630371
    9. 'Syntax' → logprob: -17.75020408630371
    10. '(Value' → logprob: -18.25020408630371

Token 487: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'Value' → logprob: -15.25
    3. 'rror' → logprob: -17.5
    4. 'LError' → logprob: -20.0
    5. 'Token' → logprob: -20.75
    6. 'SError' → logprob: -21.0
    7. '_Error' → logprob: -21.25
    8. 'error' → logprob: -21.875
    9. ' Error' → logprob: -22.375
    10. '_error' → logprob: -22.625

Token 488: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0519847646355629
    2. '
' → logprob: -3.8019847869873047
    3. 'total' → logprob: -4.426984786987305
    4. ' total' → logprob: -4.551984786987305
    5. 'return' → logprob: -6.176984786987305
    6. '    
' → logprob: -6.551984786987305
    7. ' return' → logprob: -6.676984786987305
    8. '+' → logprob: -8.176984786987305
    9. '```' → logprob: -8.426984786987305
    10. '<|end|>' → logprob: -9.176984786987305

Token 489: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.4226873219013214
    2. '   ' → logprob: -1.422687292098999
    3. 'return' → logprob: -2.797687292098999
    4. ' total' → logprob: -3.297687292098999
    5. ' return' → logprob: -6.172687530517578
    6. 'result' → logprob: -6.547687530517578
    7. '
' → logprob: -6.547687530517578
    8. 'sum' → logprob: -8.297687530517578
    9. '```' → logprob: -8.547687530517578
    10. '    
' → logprob: -9.172687530517578

Token 490: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.013826489448547363
    2. ' total' → logprob: -4.388826370239258
    3. 'return' → logprob: -7.263826370239258
    4. '   ' → logprob: -7.763826370239258
    5. 'result' → logprob: -8.763826370239258
    6. ' return' → logprob: -11.513826370239258
    7. '```' → logprob: -11.638826370239258
    8. '
' → logprob: -12.388826370239258
    9. 'weight' → logprob: -12.513826370239258
    10. ' result' → logprob: -13.263826370239258

Token 491: '_weight' (ID: 34711)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252054363489151
    2. ' =' → logprob: -1.5020543336868286
    3. '=sum' → logprob: -9.002054214477539
    4. '   ' → logprob: -13.877054214477539
    5. '=
' → logprob: -14.752054214477539
    6. ' ' → logprob: -15.252054214477539
    7. 'sum' → logprob: -15.877054214477539
    8. '=

' → logprob: -16.87705421447754
    9. '  ' → logprob: -17.50205421447754
    10. ' ' → logprob: -17.50205421447754

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1613546460866928
    2. ' =' → logprob: -1.911354660987854
    3. '=sum' → logprob: -6.7863545417785645
    4. '   ' → logprob: -16.161354064941406
    5. 's' → logprob: -16.161354064941406
    6. 'sum' → logprob: -16.411354064941406
    7. '=int' → logprob: -16.411354064941406
    8. '=s' → logprob: -16.536354064941406
    9. ' ' → logprob: -16.661354064941406
    10. '=

' → logprob: -16.911354064941406

Token 493: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011911796173080802
    2. 'sum' → logprob: -6.751191139221191
    3. ' ' → logprob: -11.126191139221191
    4. ' sum' → logprob: -12.126191139221191
    5. '   ' → logprob: -14.251191139221191
    6. '```' → logprob: -19.126192092895508
    7. '  ' → logprob: -19.251192092895508
    8. 'Sum' → logprob: -21.001192092895508
    9. '	sum' → logprob: -21.001192092895508
    10. ' ' → logprob: -21.126192092895508

Token 494: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009137284359894693
    2. 'sum' → logprob: -7.000913619995117
    3. ' ' → logprob: -13.625913619995117
    4. ' sum' → logprob: -14.125913619995117
    5. '   ' → logprob: -15.375913619995117
    6. '```' → logprob: -19.000913619995117
    7. '  ' → logprob: -20.500913619995117
    8. '
' → logprob: -21.125913619995117
    9. '``' → logprob: -21.125913619995117
    10. '	sum' → logprob: -21.625913619995117

Token 495: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1723490059375763
    2. '
' → logprob: -1.922348976135254
    3. '<|end|>' → logprob: -4.672348976135254
    4. ' for' → logprob: -6.547348976135254
    5. '    
' → logprob: -8.047348976135254
    6. '+' → logprob: -8.297348976135254
    7. 'for' → logprob: -8.547348976135254
    8. '<|end|>' → logprob: -9.422348976135254
    9. ' +' → logprob: -9.547348976135254
    10. ' 
' → logprob: -9.797348976135254

Token 496: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08393185585737228
    2. ' for' → logprob: -2.8339319229125977
    3. 'for' → logprob: -4.583931922912598
    4. '
' → logprob: -5.208931922912598
    5. '<|end|>' → logprob: -5.458931922912598
    6. '    
' → logprob: -8.333931922912598
    7. ' ' → logprob: -8.458931922912598
    8. '	for' → logprob: -8.583931922912598
    9. '+' → logprob: -8.583931922912598
    10. ',' → logprob: -9.208931922912598

Token 497: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009175926446914673
    2. ' for' → logprob: -5.009175777435303
    3. '   ' → logprob: -6.009175777435303
    4. ' ' → logprob: -14.259176254272461
    5. '	for' → logprob: -14.759176254272461
    6. '
' → logprob: -14.884176254272461
    7. '```' → logprob: -16.75917625427246
    8. '  ' → logprob: -16.88417625427246
    9. '       ' → logprob: -17.38417625427246
    10. '    
' → logprob: -18.25917625427246

Token 498: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5184611082077026
    2. 'sym' → logprob: -1.8934611082077026
    3. 'atom' → logprob: -2.393461227416992
    4. 'symbol' → logprob: -2.768461227416992
    5. 'elem' → logprob: -3.143461227416992
    6. ' sym' → logprob: -3.268461227416992
    7. 'element' → logprob: -5.268461227416992
    8. 'key' → logprob: -5.518461227416992
    9. ' k' → logprob: -5.768461227416992
    10. ' atom' → logprob: -6.018461227416992

Token 499: ',v' (ID: 30680)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09196049720048904
    2. ',' → logprob: -2.4669604301452637
    3. 'in' → logprob: -6.716960430145264
    4. ' ,' → logprob: -6.716960430145264
    5. ',v' → logprob: -8.966960906982422
    6. ',in' → logprob: -8.966960906982422
    7. '   ' → logprob: -9.216960906982422
    8. ',count' → logprob: -9.966960906982422
    9. ',s' → logprob: -10.341960906982422
    10. ',w' → logprob: -10.466960906982422

Token 500: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009849820286035538
    2. 'in' → logprob: -4.634850025177002
    3. ',' → logprob: -9.759849548339844
    4. '   ' → logprob: -10.384849548339844
    5. ',in' → logprob: -13.384849548339844
    6. ' ' → logprob: -14.384849548339844
    7. 'import' → logprob: -14.384849548339844
    8. '  ' → logprob: -14.759849548339844
    9. '	in' → logprob: -15.009849548339844
    10. '```' → logprob: -15.259849548339844

Token 501: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.04915226250886917
    2. 'weights' → logprob: -3.049152374267578
    3. ' counts' → logprob: -7.549152374267578
    4. ' weights' → logprob: -10.174152374267578
    5. '(weights' → logprob: -17.549152374267578
    6. '```' → logprob: -18.424152374267578
    7. '   ' → logprob: -18.424152374267578
    8. ' ' → logprob: -18.799152374267578
    9. 'count' → logprob: -19.049152374267578
    10. '_counts' → logprob: -19.674152374267578

Token 502: '.items' (ID: 19607)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.850945234298706
    2. ':
' → logprob: -0.975945234298706
    3. '   ' → logprob: -2.475945234298706
    4. 'items' → logprob: -3.350945234298706
    5. ' in' → logprob: -3.475945234298706
    6. '.items' → logprob: -3.975945234298706
    7. ',' → logprob: -4.350945472717285
    8. '       ' → logprob: -5.225945472717285
    9. ' items' → logprob: -6.225945472717285
    10. 'in' → logprob: -6.475945472717285

Token 503: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.0011777279432862997
    2. '():' → logprob: -6.876177787780762
    3. '()' → logprob: -8.876177787780762
    4. '():
' → logprob: -12.876177787780762
    5. '():

' → logprob: -13.626177787780762
    6. '       ' → logprob: -14.501177787780762
    7. '   ' → logprob: -15.001177787780762
    8. '()):
' → logprob: -15.126177787780762
    9. '()
' → logprob: -15.626177787780762
    10. '(),' → logprob: -16.376176834106445

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007962852250784636
    2. ' total' → logprob: -7.875796318054199
    3. 'total' → logprob: -8.2507963180542
    4. '
' → logprob: -9.3757963180542
    5. '   ' → logprob: -9.8757963180542
    6. '(total' → logprob: -12.1257963180542
    7. '```' → logprob: -12.8757963180542
    8. ',' → logprob: -13.0007963180542
    9. ',total' → logprob: -13.0007963180542
    10. '	total' → logprob: -13.5007963180542

Token 505: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.13642388582229614
    2. '       ' → logprob: -2.6364238262176514
    3. ' total' → logprob: -2.8864238262176514
    4. 'if' → logprob: -9.26142406463623
    5. '   ' → logprob: -11.01142406463623
    6. ' if' → logprob: -11.13642406463623
    7. '	total' → logprob: -12.63642406463623
    8. '           ' → logprob: -12.88642406463623
    9. '(total' → logprob: -13.38642406463623
    10. ',total' → logprob: -14.26142406463623

Token 506: '_weight' (ID: 34711)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06876036524772644
    2. '_weight' → logprob: -3.193760395050049
    3. ' +=' → logprob: -3.693760395050049
    4. '+' → logprob: -8.19375991821289
    5. '   ' → logprob: -8.94375991821289
    6. '+=(' → logprob: -9.56875991821289
    7. 'weight' → logprob: -10.44375991821289
    8. '_weights' → logprob: -11.06875991821289
    9. ']+=' → logprob: -11.19375991821289
    10. '       ' → logprob: -12.19375991821289

Token 507: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12696202099323273
    2. ' +=' → logprob: -2.1269619464874268
    3. '   ' → logprob: -10.876961708068848
    4. '+=(' → logprob: -11.501961708068848
    5. '+' → logprob: -12.626961708068848
    6. ']+=' → logprob: -13.751961708068848
    7. '=' → logprob: -15.501961708068848
    8. '+="' → logprob: -16.001962661743164
    9. '    ' → logprob: -16.001962661743164
    10. '+='' → logprob: -16.376962661743164

Token 508: 'weights' (ID: 29630)
  Prédit: 'weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.0018392755882814527
    2. 'v' → logprob: -6.5018391609191895
    3. ' weights' → logprob: -8.001839637756348
    4. ' v' → logprob: -13.626839637756348
    5. '   ' → logprob: -14.501839637756348
    6. '(weights' → logprob: -16.00183868408203
    7. 'weight' → logprob: -16.87683868408203
    8. '       ' → logprob: -17.00183868408203
    9. 'values' → logprob: -17.12683868408203
    10. '           ' → logprob: -17.25183868408203

Token 509: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: 0.0
    2. 'k' → logprob: -18.0
    3. '(k' → logprob: -18.25
    4. '.get' → logprob: -18.625
    5. '[key' → logprob: -19.75
    6. '[s' → logprob: -21.0
    7. ' [' → logprob: -21.875
    8. '[v' → logprob: -22.125
    9. '{k' → logprob: -22.375
    10. '[c' → logprob: -22.75

Token 510: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.20142006874084473
    2. ']' → logprob: -1.7014200687408447
    3. '*' → logprob: -12.826419830322266
    4. '*v' → logprob: -13.076419830322266
    5. ' ]' → logprob: -13.326419830322266
    6. ' *' → logprob: -15.326419830322266
    7. '']' → logprob: -16.451419830322266
    8. '"]' → logprob: -17.076419830322266
    9. ']*(' → logprob: -17.326419830322266
    10. '*k' → logprob: -18.451419830322266

Token 511: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.2729995988775045e-06
    2. ' v' → logprob: -12.000006675720215
    3. '	v' → logprob: -22.2500057220459
    4. '*v' → logprob: -22.6250057220459
    5. ')v' → logprob: -23.1250057220459
    6. '   ' → logprob: -23.6250057220459
    7. '```' → logprob: -24.8750057220459
    8. '       ' → logprob: -24.8750057220459
    9. '
' → logprob: -25.3750057220459
    10. '$v' → logprob: -25.5000057220459

Token 512: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005237233126536012
    2. '
' → logprob: -8.125523567199707
    3. ' return' → logprob: -9.125523567199707
    4. 'return' → logprob: -9.125523567199707
    5. '    
' → logprob: -12.375523567199707
    6. '       ' → logprob: -13.000523567199707
    7. '<|end|>' → logprob: -13.375523567199707
    8. '	return' → logprob: -13.625523567199707
    9. '```' → logprob: -15.250523567199707
    10. ':return' → logprob: -16.500524520874023

Token 513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006893210811540484
    2. '
' → logprob: -7.750689506530762
    3. ' return' → logprob: -9.000689506530762
    4. 'return' → logprob: -9.250689506530762
    5. '    
' → logprob: -10.625689506530762
    6. '	return' → logprob: -12.500689506530762
    7. '       ' → logprob: -12.750689506530762
    8. '<|end|>' → logprob: -12.750689506530762
    9. '```' → logprob: -12.875689506530762
    10. '  
' → logprob: -14.250689506530762

Token 514: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006980225909501314
    2. 'return' (adapté à ' return') → logprob: -5.0069804191589355
    3. ' return' → logprob: -8.256979942321777
    4. '	return' → logprob: -12.256979942321777
    5. '       ' → logprob: -14.881979942321777
    6. '
' → logprob: -16.256980895996094
    7. '    
' → logprob: -16.381980895996094
    8. ':return' → logprob: -16.381980895996094
    9. '```' → logprob: -17.131980895996094
    10. 'eturn' → logprob: -18.506980895996094

Token 515: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00861456897109747
    2. ' total' → logprob: -4.758614540100098
    3. '(total' → logprob: -20.383615493774414
    4. '	total' → logprob: -22.008615493774414
    5. '   ' → logprob: -22.883615493774414
    6. ' ' → logprob: -23.133615493774414
    7. '_total' → logprob: -23.508615493774414
    8. '$total' → logprob: -23.633615493774414
    9. 'tot' → logprob: -24.258615493774414
    10. '.total' → logprob: -24.383615493774414

Token 516: '_weight' (ID: 34711)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.52983558177948
    2. '<|end|>' → logprob: -1.02983558177948
    3. '\n' → logprob: -3.1548357009887695
    4. '```' → logprob: -5.9048357009887695
    5. '\' → logprob: -6.1548357009887695
    6. ')' → logprob: -6.1548357009887695
    7. 'newline' → logprob: -6.2798357009887695
    8. '#' → logprob: -7.9048357009887695
    9. '' → logprob: -8.02983570098877
    10. '<|end|>' → logprob: -8.15483570098877

Token 517: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003913830034434795
    2. 'main' → logprob: -6.378913879394531
    3. '<|end|>' → logprob: -6.378913879394531
    4. '```' → logprob: -8.253913879394531
    5. ' if' → logprob: -9.003913879394531
    6. '#' → logprob: -9.753913879394531
    7. '<|end|>' → logprob: -10.378913879394531
    8. '
' → logprob: -12.128913879394531
    9. '__' → logprob: -12.378913879394531
    10. '(main' → logprob: -12.503913879394531

Token 519: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.31329411268234253
    2. '__' → logprob: -1.3132941722869873
    3. 'name' → logprob: -10.438294410705566
    4. '_name' → logprob: -13.813294410705566
    5. '___' → logprob: -14.313294410705566
    6. ' ' → logprob: -14.688294410705566
    7. ' ' → logprob: -15.188294410705566
    8. ' "__' → logprob: -15.438294410705566
    9. ''' → logprob: -16.06329345703125
    10. '.__' → logprob: -16.31329345703125

Token 520: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013176114298403263
    2. 'name' → logprob: -5.263175964355469
    3. '.__' → logprob: -5.513175964355469
    4. '==' → logprob: -6.138175964355469
    5. ' ==' → logprob: -7.388175964355469
    6. ' __' → logprob: -7.513175964355469
    7. '__.' → logprob: -8.513175964355469
    8. '.name' → logprob: -8.888175964355469
    9. '__.__' → logprob: -9.013175964355469
    10. '[' → logprob: -11.013175964355469

Token 521: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.676981345459353e-06
    2. '__.__' → logprob: -12.875005722045898
    3. 'name' → logprob: -13.500005722045898
    4. '==' → logprob: -13.875005722045898
    5. '__.' → logprob: -15.375005722045898
    6. '=="' → logprob: -15.750005722045898
    7. '___' → logprob: -16.5000057220459
    8. ' ==' → logprob: -16.6250057220459
    9. '```' → logprob: -17.0000057220459
    10. '__["' → logprob: -17.2500057220459

Token 522: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018748663365840912
    2. '=="' → logprob: -4.393748760223389
    3. '==' → logprob: -5.268748760223389
    4. ' ==' → logprob: -6.893748760223389
    5. '=='' → logprob: -10.14374828338623
    6. '__.__' → logprob: -11.51874828338623
    7. '__["' → logprob: -13.39374828338623
    8. '___' → logprob: -14.26874828338623
    9. '__.' → logprob: -14.26874828338623
    10. '==="' → logprob: -14.39374828338623

Token 523: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005248344969004393
    2. ''' → logprob: -5.255248546600342
    3. ' "__' → logprob: -11.255248069763184
    4. '__' → logprob: -13.505248069763184
    5. ' '__' → logprob: -15.630248069763184
    6. ''"' → logprob: -17.6302490234375
    7. '("__' → logprob: -17.8802490234375
    8. '"user' → logprob: -17.8802490234375
    9. '"name' → logprob: -18.0052490234375
    10. '"'' → logprob: -18.3802490234375

Token 524: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16238491237163544
    2. '__' → logprob: -1.9123848676681519
    3. '"' → logprob: -6.412384986877441
    4. 'name' → logprob: -7.662384986877441
    5. ''' → logprob: -11.037384986877441
    6. '__":
' → logprob: -11.662384986877441
    7. '_main' → logprob: -12.162384986877441
    8. '```' → logprob: -12.162384986877441
    9. 'm' → logprob: -13.162384986877441
    10. '==' → logprob: -13.912384986877441

Token 525: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.005356956273317337
    2. '__' → logprob: -5.255356788635254
    3. '__':
' → logprob: -9.005356788635254
    4. '__.' → logprob: -15.005356788635254
    5. '__["' → logprob: -16.88035774230957
    6. '__.__' → logprob: -17.25535774230957
    7. '__
' → logprob: -18.13035774230957
    8. '_' → logprob: -18.75535774230957
    9. '__:' → logprob: -19.25535774230957
    10. '.' → logprob: -19.25535774230957

Token 526: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0059443251229822636
    2. ' main' → logprob: -5.25594425201416
    3. 'main' → logprob: -7.75594425201416
    4. '	main' → logprob: -8.50594425201416
    5. '    
' → logprob: -9.88094425201416
    6. '(main' → logprob: -11.88094425201416
    7. '   ' → logprob: -12.25594425201416
    8. '<|end|>' → logprob: -12.38094425201416
    9. '```' → logprob: -12.38094425201416
    10. '_main' → logprob: -12.75594425201416

Token 527: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.1472419600977446e-06
    2. ' main' → logprob: -13.750000953674316
    3. '   ' → logprob: -18.250001907348633
    4. '	main' → logprob: -20.250001907348633
    5. 'import' → logprob: -23.125001907348633
    6. '(main' → logprob: -24.500001907348633
    7. '.main' → logprob: -24.750001907348633
    8. 'sys' → logprob: -25.000001907348633
    9. '_main' → logprob: -25.875001907348633
    10. 'try' → logprob: -26.750001907348633

Token 528: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 526
Tokens correctement prédits (1ère position, stricte): 243
Tokens correctement prédits (1ère position, avec adaptation): 274
Tokens correctement prédits (top 10): 477
Précision stricte (1ère position): 46.20%
Précision adaptée (1ère position): 52.09%
Précision (top 10): 90.68%
================================================================================
