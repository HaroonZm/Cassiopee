================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n, r = map(int, input().split())
    if n == 0 and r == 0:
        break
    deck = list(range(1, n + 1))
    for _ in range(r):
        p, c = map(int, input().split())
        cut = deck[-p:-p + c]
        del deck[-p:-p + c]
        deck.extend(cut)
    print(deck[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.612176239490509
    2. '    ' → logprob: -2.2371761798858643
    3. '    
' → logprob: -2.6121761798858643
    4. '\' → logprob: -2.8621761798858643
    5. '\n' → logprob: -2.8621761798858643
    6. '```' → logprob: -3.2371761798858643
    7. ' ' → logprob: -3.3621761798858643
    8. ' 
' → logprob: -3.6121761798858643
    9. '  
' → logprob: -4.112176418304443
    10. '     
' → logprob: -4.237176418304443

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30723127722740173
    2. '    ' → logprob: -1.6822313070297241
    3. '```' → logprob: -3.5572311878204346
    4. ' ' → logprob: -3.8072311878204346
    5. '       ' → logprob: -4.807231426239014
    6. '    
' → logprob: -5.932231426239014
    7. '  ' → logprob: -6.182231426239014
    8. '\' → logprob: -6.182231426239014
    9. '\n' → logprob: -6.682231426239014
    10. '\t' → logprob: -6.807231426239014

Token 5: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9284094572067261
    2. 'u' → logprob: -1.553409457206726
    3. '=' → logprob: -2.1784095764160156
    4. '+' → logprob: -2.3034095764160156
    5. 'o' → logprob: -2.8034095764160156
    6. '   ' → logprob: -3.5534095764160156
    7. '_' → logprob: -4.178409576416016
    8. '.' → logprob: -4.428409576416016
    9. '%' → logprob: -4.553409576416016
    10. ' =' → logprob: -4.928409576416016

Token 6: ' r' (ID: 428)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3814447522163391
    2. ' =' → logprob: -2.1314446926116943
    3. 'input' → logprob: -2.7564446926116943
    4. ' s' → logprob: -3.2564446926116943
    5. 's' → logprob: -3.6314446926116943
    6. '=' → logprob: -3.8814446926116943
    7. ' ' → logprob: -4.006444931030273
    8. '=input' → logprob: -4.256444931030273
    9. ' n' → logprob: -4.881444931030273
    10. '"' → logprob: -7.006444931030273

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5233997702598572
    2. ' =' → logprob: -0.8983997702598572
    3. ',' → logprob: -8.523399353027344
    4. ' ' → logprob: -9.648399353027344
    5. ')' → logprob: -11.648399353027344
    6. '  ' → logprob: -13.648399353027344
    7. ' ,' → logprob: -13.898399353027344
    8. ' =
' → logprob: -14.773399353027344
    9. '>' → logprob: -15.148399353027344
    10. '=

' → logprob: -15.398399353027344

Token 8: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.370607852935791
    2. ' input' → logprob: -1.995607852935791
    3. 'map' → logprob: -2.120607852935791
    4. 'input' → logprob: -2.995607852935791
    5. '0' → logprob: -6.745607852935791
    6. ' ' → logprob: -6.995607852935791
    7. ' int' → logprob: -7.245607852935791
    8. 'int' → logprob: -8.120607376098633
    9. ' n' → logprob: -8.620607376098633
    10. ' [' → logprob: -9.245607376098633

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003976528067141771
    2. '(' → logprob: -5.753976345062256
    3. 'int' → logprob: -7.378976345062256
    4. '(str' → logprob: -9.628976821899414
    5. '(input' → logprob: -10.003976821899414
    6. ' int' → logprob: -10.503976821899414
    7. '<int' → logprob: -11.128976821899414
    8. '(lambda' → logprob: -11.753976821899414
    9. '[int' → logprob: -12.378976821899414
    10. '=int' → logprob: -13.253976821899414

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.8087804913520813
    2. ')' → logprob: -0.9337804913520813
    3. 'input' → logprob: -1.9337804317474365
    4. ' input' → logprob: -4.683780670166016
    5. '(' → logprob: -5.433780670166016
    6. ',input' → logprob: -6.558780670166016
    7. ',' → logprob: -7.058780670166016
    8. '(str' → logprob: -9.058780670166016
    9. '=input' → logprob: -9.183780670166016
    10. '[input' → logprob: -9.308780670166016

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03372454270720482
    2. ' input' → logprob: -3.408724546432495
    3. ')' → logprob: -9.658724784851074
    4. '(input' → logprob: -11.533724784851074
    5. '=input' → logprob: -14.033724784851074
    6. ' )' → logprob: -14.158724784851074
    7. ',input' → logprob: -14.283724784851074
    8. '```' → logprob: -14.283724784851074
    9. ' ' → logprob: -14.408724784851074
    10. '	input' → logprob: -14.658724784851074

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8627439737319946
    2. '())' → logprob: -0.8627439737319946
    3. '().' → logprob: -1.8627439737319946
    4. '());' → logprob: -8.737744331359863
    5. '()))' → logprob: -8.737744331359863
    6. '('' → logprob: -9.112744331359863
    7. ')' → logprob: -9.362744331359863
    8. '(' → logprob: -9.737744331359863
    9. '()`' → logprob: -10.862744331359863
    10. ' ())' → logprob: -10.862744331359863

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005607772618532181
    2. 'strip' → logprob: -7.500560760498047
    3. 'rstrip' → logprob: -12.000560760498047
    4. ' split' → logprob: -13.500560760498047
    5. '(split' → logprob: -15.500560760498047
    6. 'spl' → logprob: -17.625560760498047
    7. 'read' → logprob: -18.000560760498047
    8. 'replace' → logprob: -18.500560760498047
    9. ')' → logprob: -18.625560760498047
    10. '```' → logprob: -18.750560760498047

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15989328920841217
    2. '))' → logprob: -2.034893274307251
    3. '())' → logprob: -4.15989351272583
    4. '()))' → logprob: -7.28489351272583
    5. '()' → logprob: -7.40989351272583
    6. '),' → logprob: -9.159893035888672
    7. ')))' → logprob: -11.159893035888672
    8. '(' → logprob: -11.909893035888672
    9. '`)' → logprob: -11.909893035888672
    10. '')' → logprob: -12.409893035888672

Token 15: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5854830741882324
    2. ':' → logprob: -0.9604830741882324
    3. ' if' → logprob: -3.3354830741882324
    4. ')' → logprob: -4.960483074188232
    5. ' ' → logprob: -5.460483074188232
    6. ',' → logprob: -5.960483074188232
    7. '):' → logprob: -6.085483074188232
    8. ' and' → logprob: -6.335483074188232
    9. '  ' → logprob: -6.710483074188232
    10. '    ' → logprob: -6.835483074188232

Token 16: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.501010000705719
    2. ' if' → logprob: -1.2510099411010742
    3. 'if' (adapté à ' if') → logprob: -3.501009941101074
    4. ' ' → logprob: -3.751009941101074
    5. ':' → logprob: -4.001009941101074
    6. '    ' → logprob: -5.126009941101074
    7. '```' → logprob: -5.126009941101074
    8. ')' → logprob: -5.251009941101074
    9. ' i' → logprob: -5.501009941101074
    10. 'i' → logprob: -5.751009941101074

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0049922894686460495
    2. ' not' → logprob: -5.754992485046387
    3. 'n' → logprob: -6.754992485046387
    4. ' r' → logprob: -7.504992485046387
    5. ' ' → logprob: -9.629992485046387
    6. 'not' → logprob: -11.254992485046387
    7. 'r' → logprob: -11.379992485046387
    8. ' ' → logprob: -12.254992485046387
    9. ' (' → logprob: -13.754992485046387
    10. '(n' → logprob: -14.004992485046387

Token 18: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.1446270942687988
    2. ' <=' → logprob: -1.1446270942687988
    3. ' ==' → logprob: -1.3946270942687988
    4. '==' → logprob: -3.019627094268799
    5. '<' → logprob: -3.144627094268799
    6. '<=' → logprob: -4.144627094268799
    7. ' >' → logprob: -6.144627094268799
    8. ' ' → logprob: -6.394627094268799
    9. '>' → logprob: -6.644627094268799
    10. ' >=' → logprob: -6.769627094268799

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5240584015846252
    2. ' ' → logprob: -0.8990584015846252
    3. 'r' → logprob: -7.2740583419799805
    4. ' r' → logprob: -8.39905834197998
    5. '-' → logprob: -12.64905834197998
    6. ' -' → logprob: -12.71155834197998
    7. '  ' → logprob: -13.39905834197998
    8. '   ' → logprob: -13.58655834197998
    9. '1' → logprob: -13.83655834197998
    10. '```' → logprob: -14.08655834197998

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025628148578107357
    2. ' ' → logprob: -6.002562999725342
    3. 'r' → logprob: -9.627562522888184
    4. '-' → logprob: -11.377562522888184
    5. ' r' → logprob: -13.190062522888184
    6. '   ' → logprob: -13.627562522888184
    7. '  ' → logprob: -13.690062522888184
    8. '```' → logprob: -13.815062522888184
    9. ' -' → logprob: -14.377562522888184
    10. '1' → logprob: -14.440062522888184

Token 21: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5310817956924438
    2. ':' → logprob: -0.9060817956924438
    3. 'and' → logprob: -5.156081676483154
    4. ' or' → logprob: -6.656081676483154
    5. '   ' → logprob: -7.656081676483154
    6. ' :' → logprob: -8.656082153320312
    7. ' ' → logprob: -8.781082153320312
    8. ':
' → logprob: -10.531082153320312
    9. '    ' → logprob: -11.406082153320312
    10. '  ' → logprob: -11.781082153320312

Token 22: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.2014201581478119
    2. 'r' → logprob: -1.7014201879501343
    3. '	r' → logprob: -12.576419830322266
    4. ' ' → logprob: -13.326419830322266
    5. '   ' → logprob: -14.826419830322266
    6. '<|end|>' → logprob: -14.826419830322266
    7. ' ' → logprob: -15.326419830322266
    8. '_r' → logprob: -15.576419830322266
    9. '    ' → logprob: -16.076419830322266
    10. 'n' → logprob: -16.451419830322266

Token 23: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.021231984719634056
    2. '==' → logprob: -3.8962318897247314
    3. ' ' → logprob: -7.6462321281433105
    4. '=' → logprob: -9.146231651306152
    5. '<|end|>' → logprob: -10.146231651306152
    6. '  ' → logprob: -10.896231651306152
    7. ' =' → logprob: -10.896231651306152
    8. '0' → logprob: -12.021231651306152
    9. ' ' → logprob: -12.396231651306152
    10. ')' → logprob: -12.646231651306152

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300417259335518
    2. ' ' → logprob: -3.6513004302978516
    3. '۰' → logprob: -17.40130043029785
    4. '  ' → logprob: -17.65130043029785
    5. '   ' → logprob: -17.65130043029785
    6. '<|end|>' → logprob: -17.90130043029785
    7. ' ' → logprob: -18.71380043029785
    8. '<|end|>' → logprob: -18.90130043029785
    9. '1' → logprob: -19.77630043029785
    10. '০' → logprob: -20.33880043029785

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011705794604495168
    2. ' ' → logprob: -6.751170635223389
    3. '  ' → logprob: -15.75117015838623
    4. '   ' → logprob: -16.251171112060547
    5. '۰' → logprob: -16.876171112060547
    6. '1' → logprob: -17.438671112060547
    7. '```' → logprob: -17.688671112060547
    8. '০' → logprob: -18.876171112060547
    9. ' ' → logprob: -18.876171112060547
    10. '०' → logprob: -19.001171112060547

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011522514978423715
    2. ':
' → logprob: -9.375115394592285
    3. '   ' → logprob: -11.125115394592285
    4. '       ' → logprob: -11.250115394592285
    5. ' :' → logprob: -14.125115394592285
    6. '):' → logprob: -14.250115394592285
    7. ':return' → logprob: -14.250115394592285
    8. ',' → logprob: -15.875115394592285
    9. '.' → logprob: -16.25011444091797
    10. '():' → logprob: -17.00011444091797

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024870390188880265
    2. '   ' → logprob: -8.625248908996582
    3. ':' → logprob: -10.375248908996582
    4. ' break' → logprob: -11.500248908996582
    5. '\n' → logprob: -12.000248908996582
    6. '     ' → logprob: -12.250248908996582
    7. '    ' → logprob: -13.000248908996582
    8. ' ' → logprob: -13.125248908996582
    9. '      ' → logprob: -13.125248908996582
    10. '\t' → logprob: -13.250248908996582

Token 28: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03841783106327057
    2. '       ' → logprob: -3.4134178161621094
    3. 'break' (adapté à ' break') → logprob: -5.413417816162109
    4. '   ' → logprob: -8.41341781616211
    5. '	break' → logprob: -9.53841781616211
    6. '_break' → logprob: -12.91341781616211
    7. '           ' → logprob: -13.53841781616211
    8. '\n' → logprob: -13.66341781616211
    9. 'Break' → logprob: -13.78841781616211
    10. ' ' → logprob: -14.41341781616211

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03590086102485657
    2. ':' → logprob: -4.285901069641113
    3. '\n' → logprob: -4.285901069641113
    4. '    
' → logprob: -5.410901069641113
    5. ')' → logprob: -7.535901069641113
    6. '       ' → logprob: -7.910901069641113
    7. '<|end|>' → logprob: -8.160901069641113
    8. '  ' → logprob: -8.160901069641113
    9. ' ' → logprob: -8.285901069641113
    10. '\' → logprob: -8.535901069641113

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03186490759253502
    2. '    
' → logprob: -3.656864881515503
    3. '\n' → logprob: -6.281865119934082
    4. '```' → logprob: -6.281865119934082
    5. '
' → logprob: -8.406865119934082
    6. 'n' → logprob: -8.531865119934082
    7. '<|end|>' → logprob: -8.656865119934082
    8. 'print' → logprob: -8.906865119934082
    9. ')' → logprob: -8.906865119934082
    10. '        
' → logprob: -9.031865119934082

Token 31: ' deck' (ID: 16942)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038779936730861664
    2. '    
' → logprob: -4.1637797355651855
    3. '    ' → logprob: -4.4137797355651855
    4. ' ' → logprob: -5.6637797355651855
    5. '```' → logprob: -6.7887797355651855
    6. '     
' → logprob: -7.2887797355651855
    7. '  ' → logprob: -7.4137797355651855
    8. ' 
' → logprob: -7.4137797355651855
    9. '
' → logprob: -7.4137797355651855
    10. '   
' → logprob: -7.4137797355651855

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5148292183876038
    2. '=' → logprob: -1.389829158782959
    3. '[' → logprob: -2.389829158782959
    4. '.' → logprob: -3.264829158782959
    5. '[:]' → logprob: -4.514829158782959
    6. '_' → logprob: -5.139829158782959
    7. '=[]' → logprob: -6.014829158782959
    8. 's' → logprob: -6.889829158782959
    9. '.append' → logprob: -7.389829158782959
    10. ')' → logprob: -7.639829158782959

Token 33: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.728580892086029
    2. ' [' → logprob: -0.978580892086029
    3. 'list' → logprob: -2.728580951690674
    4. '[' → logprob: -3.478580951690674
    5. ' []' → logprob: -4.228580951690674
    6. '[list' → logprob: -4.353580951690674
    7. '[]' → logprob: -4.978580951690674
    8. ' ['' → logprob: -5.353580951690674
    9. '['' → logprob: -5.853580951690674
    10. '[n' → logprob: -6.853580951690674

Token 34: '(range' (ID: 50017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5252557396888733
    2. '(range' → logprob: -0.9002557396888733
    3. '(map' → logprob: -7.0252556800842285
    4. '(deck' → logprob: -7.4002556800842285
    5. '()' → logprob: -8.150256156921387
    6. '(int' → logprob: -9.025256156921387
    7. '(set' → logprob: -10.650256156921387
    8. '(
' → logprob: -10.775256156921387
    9. '(

' → logprob: -10.900256156921387
    10. '(str' → logprob: -10.900256156921387

Token 35: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004622137639671564
    2. '(n' → logprob: -5.379621982574463
    3. ' (' → logprob: -13.754622459411621
    4. '1' → logprob: -14.379622459411621
    5. ')' → logprob: -15.879622459411621
    6. '(
' → logprob: -16.379621505737305
    7. ' ' → logprob: -17.129621505737305
    8. '(r' → logprob: -17.379621505737305
    9. ')n' → logprob: -17.879621505737305
    10. 'n' → logprob: -18.129621505737305

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0404975563287735
    2. 'n' → logprob: -3.4154975414276123
    3. ' ' → logprob: -5.665497779846191
    4. ' n' → logprob: -5.915497779846191
    5. '52' → logprob: -7.665497779846191
    6. '(' → logprob: -9.790497779846191
    7. '   ' → logprob: -10.415497779846191
    8. '(n' → logprob: -10.915497779846191
    9. '2' → logprob: -11.165497779846191
    10. '0' → logprob: -11.290497779846191

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001367857912555337
    2. ',n' → logprob: -7.126368045806885
    3. ' ,' → logprob: -7.501368045806885
    4. '   ' → logprob: -12.501367568969727
    5. 'n' → logprob: -13.126367568969727
    6. ' ' → logprob: -13.876367568969727
    7. '6' → logprob: -14.251367568969727
    8. ',
' → logprob: -14.376367568969727
    9. '1' → logprob: -14.501367568969727
    10. '‌,' → logprob: -14.876367568969727

Token 38: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5932106971740723
    2. ' n' → logprob: -0.8432106971740723
    3. ' ' → logprob: -4.468210697174072
    4. '53' → logprob: -5.968210697174072
    5. '52' → logprob: -7.093210697174072
    6. '   ' → logprob: -7.843210697174072
    7. ')' → logprob: -8.343210220336914
    8. '51' → logprob: -8.468210220336914
    9. '2' → logprob: -8.593210220336914
    10. '49' → logprob: -8.968210220336914

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141500234603882
    2. ' +' → logprob: -1.7014150619506836
    3. ' +
' → logprob: -14.451415061950684
    4. ' ' → logprob: -15.451415061950684
    5. '+n' → logprob: -15.451415061950684
    6. '+
' → logprob: -16.076414108276367
    7. '   ' → logprob: -16.076414108276367
    8. '＋' → logprob: -16.326414108276367
    9. ')' → logprob: -16.451414108276367
    10. '1' → logprob: -16.701414108276367

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007608040235936642
    2. ' ' → logprob: -4.882607936859131
    3. '   ' → logprob: -14.007608413696289
    4. '2' → logprob: -15.445108413696289
    5. '  ' → logprob: -15.882608413696289
    6. '    ' → logprob: -16.00760841369629
    7. '```' → logprob: -16.32010841369629
    8. ' ' → logprob: -16.50760841369629
    9. ' n' → logprob: -17.19510841369629
    10. ')' → logprob: -17.25760841369629

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002646735229063779
    2. ' ' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.812765121459961
    4. '2' → logprob: -14.750265121459961
    5. '  ' → logprob: -14.937765121459961
    6. '11' → logprob: -16.31276512145996
    7. 'r' → logprob: -16.43776512145996
    8. '51' → logprob: -16.50026512145996
    9. '6' → logprob: -16.75026512145996
    10. '１' → logprob: -16.81276512145996

Token 42: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00396144762635231
    2. ')' → logprob: -5.753961563110352
    3. ' ))' → logprob: -7.378961563110352
    4. '[' → logprob: -10.128961563110352
    5. ')))' → logprob: -10.378961563110352
    6. '   ' → logprob: -11.003961563110352
    7. '))
' → logprob: -11.003961563110352
    8. '),' → logprob: -11.628961563110352
    9. ' ' → logprob: -11.628961563110352
    10. ' )' → logprob: -11.878961563110352

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9113978743553162
    2. '<|end|>' → logprob: -1.286397933959961
    3. ' ' → logprob: -1.661397933959961
    4. '[' → logprob: -3.786397933959961
    5. ' 
' → logprob: -3.911397933959961
    6. ')' → logprob: -4.161397933959961
    7. '    
' → logprob: -4.286397933959961
    8. '  
' → logprob: -4.661397933959961
    9. 'r' → logprob: -4.786397933959961
    10. '   
' → logprob: -5.286397933959961

Token 44: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5353708267211914
    2. 'r' → logprob: -2.0353708267211914
    3. ' ' → logprob: -2.2853708267211914
    4. ' r' → logprob: -3.5353708267211914
    5. 'deck' → logprob: -3.5353708267211914
    6. 'n' → logprob: -3.7853708267211914
    7. '    
' → logprob: -4.285370826721191
    8. '[' → logprob: -4.535370826721191
    9. 's' → logprob: -4.785370826721191
    10. ' for' → logprob: -4.910370826721191

Token 45: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.13468994200229645
    2. '_' → logprob: -2.634690046310425
    3. ' i' → logprob: -3.134690046310425
    4. ' ' → logprob: -5.134689807891846
    5. ' r' → logprob: -5.634689807891846
    6. 'i' → logprob: -7.384689807891846
    7. 'r' → logprob: -8.009690284729004
    8. '_i' → logprob: -8.509690284729004
    9. '_r' → logprob: -9.759690284729004
    10. ' j' → logprob: -10.884690284729004

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04423760622739792
    2. 'in' → logprob: -3.1692376136779785
    3. ' ' → logprob: -7.5442376136779785
    4. 'r' → logprob: -8.16923713684082
    5. 'range' → logprob: -8.29423713684082
    6. ' r' → logprob: -9.66923713684082
    7. '  ' → logprob: -10.04423713684082
    8. '   ' → logprob: -11.41923713684082
    9. ' _' → logprob: -11.79423713684082
    10. '	in' → logprob: -11.91923713684082

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.42892125248908997
    2. 'range' → logprob: -1.0539212226867676
    3. ' r' → logprob: -9.303921699523926
    4. 'r' → logprob: -9.553921699523926
    5. '(range' → logprob: -11.553921699523926
    6. ' ' → logprob: -11.803921699523926
    7. '	range' → logprob: -12.053921699523926
    8. '   ' → logprob: -12.428921699523926
    9. 'rang' → logprob: -12.553921699523926
    10. 'ran' → logprob: -12.553921699523926

Token 48: '(r' (ID: 4729)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.697502076625824
    2. '(r' → logprob: -0.697502076625824
    3. ' (' → logprob: -5.697502136230469
    4. '(' → logprob: -7.447502136230469
    5. 'r' → logprob: -7.822502136230469
    6. ' ' → logprob: -12.822502136230469
    7. '(n' → logprob: -13.572502136230469
    8. '	r' → logprob: -13.947502136230469
    9. ' ,' → logprob: -14.322502136230469
    10. ',r' → logprob: -14.572502136230469

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06234218552708626
    2. ' ):' → logprob: -2.9373421669006348
    3. '):
' → logprob: -5.062342166900635
    4. ')' → logprob: -7.437342166900635
    5. ' ):
' → logprob: -8.562342643737793
    6. ',' → logprob: -9.312342643737793
    7. ' )' → logprob: -9.687342643737793
    8. ':' → logprob: -10.062342643737793
    9. '):
' → logprob: -10.187342643737793
    10. '   ' → logprob: -10.187342643737793

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3641796112060547
    2. '   ' → logprob: -1.4891796112060547
    3. ' s' → logprob: -3.7391796112060547
    4. 'deck' → logprob: -4.614179611206055
    5. ' a' → logprob: -4.989179611206055
    6. 's' → logprob: -5.114179611206055
    7. 'a' → logprob: -5.114179611206055
    8. ' deck' → logprob: -5.239179611206055
    9. '    ' → logprob: -5.489179611206055
    10. ' ' → logprob: -5.864179611206055

Token 51: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0555599927902222
    2. 'x' → logprob: -1.0555599927902222
    3. ' x' → logprob: -2.1805601119995117
    4. ' a' → logprob: -2.4305601119995117
    5. ' cut' → logprob: -3.9305601119995117
    6. 'i' → logprob: -4.180560111999512
    7. 's' → logprob: -4.180560111999512
    8. 'cut' → logprob: -4.430560111999512
    9. ' i' → logprob: -4.930560111999512
    10. '   ' → logprob: -5.180560111999512

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7888538241386414
    2. ' =' → logprob: -1.1638538837432861
    3. '=' → logprob: -2.413853883743286
    4. '1' → logprob: -3.163853883743286
    5. 'erm' → logprob: -3.788853883743286
    6. ' ' → logprob: -4.288853645324707
    7. 'r' → logprob: -4.413853645324707
    8. ' ,' → logprob: -4.413853645324707
    9. 'ieces' → logprob: -4.663853645324707
    10. 'ermut' → logprob: -5.663853645324707

Token 53: ' c' (ID: 274)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05901885777711868
    2. ' q' → logprob: -3.184018850326538
    3. 's' → logprob: -5.434019088745117
    4. 'c' → logprob: -5.434019088745117
    5. 'm' → logprob: -6.059019088745117
    6. 'k' → logprob: -6.684019088745117
    7. 'l' → logprob: -6.809019088745117
    8. 'a' → logprob: -7.559019088745117
    9. '	q' → logprob: -7.934019088745117
    10. 'b' → logprob: -8.059019088745117

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6445991396903992
    2. ',' → logprob: -1.394599199295044
    3. ' =' → logprob: -1.519599199295044
    4. '1' → logprob: -4.894598960876465
    5. 's' → logprob: -8.519598960876465
    6. ' ,' → logprob: -9.019598960876465
    7. 'ount' → logprob: -9.144598960876465
    8. ' ' → logprob: -9.269598960876465
    9. 'a' → logprob: -10.019598960876465
    10. ',d' → logprob: -10.769598960876465

Token 55: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018282216042280197
    2. 'map' → logprob: -4.018282413482666
    3. ' list' → logprob: -9.393281936645508
    4. ' ' → logprob: -11.393281936645508
    5. 'list' → logprob: -11.893281936645508
    6. '	map' → logprob: -11.893281936645508
    7. '   ' → logprob: -12.268281936645508
    8. '[' → logprob: -12.268281936645508
    9. ' [' → logprob: -12.268281936645508
    10. '  ' → logprob: -12.643281936645508

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0022267408203333616
    2. '(' → logprob: -6.127226829528809
    3. '<int' → logprob: -11.127226829528809
    4. ' (' → logprob: -11.877226829528809
    5. '[int' → logprob: -12.252226829528809
    6. '=int' → logprob: -12.502226829528809
    7. '(lambda' → logprob: -13.002226829528809
    8. 'int' → logprob: -13.252226829528809
    9. '<|end|>' → logprob: -13.627226829528809
    10. '(eval' → logprob: -13.752226829528809

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001853315974585712
    2. ',input' → logprob: -6.3768534660339355
    3. '(' → logprob: -9.501852989196777
    4. '(),' → logprob: -10.001852989196777
    5. ',int' → logprob: -11.376852989196777
    6. ' ,' → logprob: -11.501852989196777
    7. '(input' → logprob: -12.751852989196777
    8. '```' → logprob: -13.251852989196777
    9. 'input' → logprob: -13.751852989196777
    10. '   ' → logprob: -14.001852989196777

Token 58: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14267835021018982
    2. 'input' → logprob: -2.0176782608032227
    3. ')' → logprob: -13.767678260803223
    4. ' ' → logprob: -14.517678260803223
    5. '	input' → logprob: -14.892678260803223
    6. '=input' → logprob: -15.142678260803223
    7. '(input' → logprob: -15.642678260803223
    8. ',input' → logprob: -15.642678260803223
    9. ' ' → logprob: -16.01767921447754
    10. '<input' → logprob: -16.39267921447754

Token 59: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.537868779967539e-06
    2. '()' → logprob: -11.875008583068848
    3. '.' → logprob: -14.250008583068848
    4. ' ().' → logprob: -14.750008583068848
    5. '(' → logprob: -15.750008583068848
    6. '.split' → logprob: -15.875008583068848
    7. ' .' → logprob: -16.87500762939453
    8. ')' → logprob: -17.62500762939453
    9. '   ' → logprob: -18.25000762939453
    10. '().__' → logprob: -18.37500762939453

Token 60: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.392202976712724e-06
    2. ' split' → logprob: -12.125006675720215
    3. 'strip' → logprob: -15.250006675720215
    4. 'spl' → logprob: -15.375006675720215
    5. 'rstrip' → logprob: -15.625006675720215
    6. '(split' → logprob: -15.750006675720215
    7. 'plit' → logprob: -16.8750057220459
    8. ')' → logprob: -17.8750057220459
    9. '.split' → logprob: -17.8750057220459
    10. ' ' → logprob: -18.1250057220459

Token 61: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012783304555341601
    2. ')
' → logprob: -7.251278400421143
    3. '))' → logprob: -7.626278400421143
    4. '()' → logprob: -9.876277923583984
    5. '())' → logprob: -11.751277923583984
    6. '   ' → logprob: -11.876277923583984
    7. ')`' → logprob: -12.626277923583984
    8. ' )' → logprob: -12.751277923583984
    9. ')
' → logprob: -13.501277923583984
    10. '))
' → logprob: -13.626277923583984

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3796609044075012
    2. 'deck' → logprob: -1.7546608448028564
    3. ' deck' → logprob: -3.7546608448028564
    4. '        
' → logprob: -4.0046610832214355
    5. '   ' → logprob: -4.0046610832214355
    6. '<|end|>' → logprob: -4.5046610832214355
    7. ' p' → logprob: -4.6296610832214355
    8. ')' → logprob: -5.1296610832214355
    9. '    
' → logprob: -5.1296610832214355
    10. ' ' → logprob: -5.1296610832214355

Token 63: ' cut' (ID: 6092)
  Prédit: ' deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.5614726543426514
    2. 'deck' → logprob: -1.8114726543426514
    3. ' p' → logprob: -2.5614726543426514
    4. ' temp' → logprob: -2.8114726543426514
    5. 'temp' → logprob: -3.4364726543426514
    6. 'p' → logprob: -3.9364726543426514
    7. ' tmp' → logprob: -4.0614728927612305
    8. 'tmp' → logprob: -4.0614728927612305
    9. ' cut' → logprob: -4.0614728927612305
    10. '   ' → logprob: -5.4364728927612305

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6328458786010742
    2. '=' → logprob: -1.0078458786010742
    3. '_' → logprob: -3.382845878601074
    4. '_start' → logprob: -4.007845878601074
    5. '_index' → logprob: -4.882845878601074
    6. '_size' → logprob: -5.007845878601074
    7. '_pos' → logprob: -5.257845878601074
    8. '_de' → logprob: -5.757845878601074
    9. '_point' → logprob: -5.757845878601074
    10. '=cut' → logprob: -5.882845878601074

Token 65: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.6330043077468872
    2. ' deck' → logprob: -0.7580043077468872
    3. '(deck' → logprob: -8.508004188537598
    4. 'deque' → logprob: -9.883004188537598
    5. '[' → logprob: -10.258004188537598
    6. '[]' → logprob: -10.508004188537598
    7. ' ' → logprob: -10.883004188537598
    8. '.deck' → logprob: -11.258004188537598
    9. ' [' → logprob: -11.445504188537598
    10. ' decks' → logprob: -12.070504188537598

Token 66: '[-' (ID: 17503)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.1714947670698166
    2. '[:' → logprob: -2.296494722366333
    3. '[-' → logprob: -3.046494722366333
    4. '[c' → logprob: -5.296494960784912
    5. '[' → logprob: -5.546494960784912
    6. 'p' → logprob: -8.796494483947754
    7. '[n' → logprob: -9.046494483947754
    8. '[:]' → logprob: -9.671494483947754
    9. '[:-' → logprob: -9.671494483947754
    10. ' [:' → logprob: -10.171494483947754

Token 67: 'p' (ID: 79)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.38698479533195496
    2. 'p' → logprob: -1.1369848251342773
    3. 'cut' → logprob: -10.136984825134277
    4. ' c' → logprob: -10.261984825134277
    5. ' p' → logprob: -11.136984825134277
    6. '(' → logprob: -11.636984825134277
    7. '(p' → logprob: -12.636984825134277
    8. '(c' → logprob: -13.136984825134277
    9. '   ' → logprob: -13.511984825134277
    10. '2' → logprob: -13.511984825134277

Token 68: ':-' (ID: 20118)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.08338451385498047
    2. ':c' → logprob: -2.8333845138549805
    3. ':' → logprob: -3.9583845138549805
    4. '-c' → logprob: -7.2083845138549805
    5. ':p' → logprob: -7.3333845138549805
    6. 'c' → logprob: -8.70838451385498
    7. '-' → logprob: -8.95838451385498
    8. '*c' → logprob: -9.33338451385498
    9. ' :' → logprob: -9.58338451385498
    10. ' :]' → logprob: -9.58338451385498

Token 69: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010861629853025079
    2. 'c' → logprob: -6.876086235046387
    3. '(' → logprob: -10.751086235046387
    4. 'cut' → logprob: -12.063586235046387
    5. '(p' → logprob: -12.126086235046387
    6. '-p' → logprob: -12.188586235046387
    7. ' p' → logprob: -12.938586235046387
    8. '1' → logprob: -13.313586235046387
    9. 'r' → logprob: -14.001086235046387
    10. '(c' → logprob: -14.063586235046387

Token 70: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.15895028412342072
    2. '+' → logprob: -2.0339503288269043
    3. ' +' → logprob: -4.158950328826904
    4. '+p' → logprob: -8.033949851989746
    5. '-' → logprob: -9.658949851989746
    6. ' ' → logprob: -10.408949851989746
    7. '+n' → logprob: -10.908949851989746
    8. '+r' → logprob: -11.033949851989746
    9. '-c' → logprob: -11.283949851989746
    10. '+t' → logprob: -11.783949851989746

Token 71: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002219368703663349
    2. ' c' → logprob: -6.127219200134277
    3. 'cut' → logprob: -10.877219200134277
    4. '2' → logprob: -12.252219200134277
    5. ' ' → logprob: -12.877219200134277
    6. '   ' → logprob: -13.002219200134277
    7. ' cut' → logprob: -13.127219200134277
    8. '1' → logprob: -13.877219200134277
    9. 'p' → logprob: -13.877219200134277
    10. '  ' → logprob: -14.377219200134277

Token 72: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.084206375409849e-05
    2. ' ]' → logprob: -10.250041007995605
    3. ']
' → logprob: -13.000041007995605
    4. '+' → logprob: -13.750041007995605
    5. ':]' → logprob: -14.750041007995605
    6. ']

' → logprob: -15.125041007995605
    7. 'p' → logprob: -15.500041007995605
    8. '])' → logprob: -15.500041007995605
    9. ']]' → logprob: -16.00004005432129
    10. 's' → logprob: -16.12504005432129

Token 73: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27146950364112854
    2. '+' → logprob: -2.0214695930480957
    3. '<|end|>' → logprob: -3.3964695930480957
    4. '       ' → logprob: -4.021469593048096
    5. ')' → logprob: -4.271469593048096
    6. ',' → logprob: -4.896469593048096
    7. '[' → logprob: -5.396469593048096
    8. '   ' → logprob: -5.646469593048096
    9. ' ' → logprob: -5.771469593048096
    10. ' ]' → logprob: -6.021469593048096

Token 74: ' del' (ID: 1083)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.007520858198404312
    2. ' deck' → logprob: -5.50752067565918
    3. '1' → logprob: -6.25752067565918
    4. '   ' → logprob: -7.88252067565918
    5. '(deck' → logprob: -8.00752067565918
    6. ' ' → logprob: -8.88252067565918
    7. '+' → logprob: -8.88252067565918
    8. '0' → logprob: -9.38252067565918
    9. '<|end|>' → logprob: -9.38252067565918
    10. ']' → logprob: -9.63252067565918

Token 75: ' deck' (ID: 16942)
  Prédit: ' deck'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deck' → logprob: -0.0015691416338086128
    2. 'deck' → logprob: -6.5015692710876465
    3. '(deck' → logprob: -10.376568794250488
    4. ' ' → logprob: -10.501568794250488
    5. ' ' → logprob: -13.626568794250488
    6. ' desk' → logprob: -13.814068794250488
    7. ' de' → logprob: -14.314068794250488
    8. ' d' → logprob: -14.501568794250488
    9. '	de' → logprob: -14.626568794250488
    10. 'de' → logprob: -14.751568794250488

Token 76: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0003758575767278671
    2. '[' → logprob: -8.250375747680664
    3. '[:-' → logprob: -9.750375747680664
    4. '[:' → logprob: -10.375375747680664
    5. ' [-' → logprob: -11.625375747680664
    6. '-' → logprob: -12.250375747680664
    7. '   ' → logprob: -12.375375747680664
    8. '[
' → logprob: -12.625375747680664
    9. '`' → logprob: -14.875375747680664
    10. '
' → logprob: -15.125375747680664

Token 77: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00021033499797340482
    2. ' p' → logprob: -8.500210762023926
    3. '-p' → logprob: -12.375210762023926
    4. 'c' → logprob: -13.750210762023926
    5. '_p' → logprob: -14.750210762023926
    6. '(p' → logprob: -15.750210762023926
    7. ''p' → logprob: -15.750210762023926
    8. '+p' → logprob: -16.06270980834961
    9. '   ' → logprob: -16.31270980834961
    10. '1' → logprob: -16.43770980834961

Token 78: ':-' (ID: 20118)
  Prédit: ':c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':c' → logprob: -0.4200165271759033
    2. ':p' → logprob: -1.6700165271759033
    3. ':' → logprob: -2.0450165271759033
    4. ':-' → logprob: -4.295016288757324
    5. ':]' → logprob: -5.045016288757324
    6. '-c' → logprob: -6.295016288757324
    7. '-p' → logprob: -6.420016288757324
    8. '+c' → logprob: -7.295016288757324
    9. '+p' → logprob: -8.170016288757324
    10. ' :' → logprob: -8.420016288757324

Token 79: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010759611177491024
    2. ' p' → logprob: -9.250107765197754
    3. '-p' → logprob: -11.750107765197754
    4. '_p' → logprob: -14.937607765197754
    5. 'c' → logprob: -15.000107765197754
    6. '<p' → logprob: -15.250107765197754
    7. '+p' → logprob: -15.250107765197754
    8. ' -' → logprob: -15.312607765197754
    9. '   ' → logprob: -15.500107765197754
    10. '0' → logprob: -15.562607765197754

Token 80: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7279753088951111
    2. ' +' → logprob: -0.7279753088951111
    3. '+c' → logprob: -3.852975368499756
    4. '+p' → logprob: -4.352975368499756
    5. ' ' → logprob: -8.977974891662598
    6. '   ' → logprob: -11.852974891662598
    7. '＋' → logprob: -13.227974891662598
    8. '  ' → logprob: -13.790474891662598
    9. 'p' → logprob: -13.977974891662598
    10. 'c' → logprob: -14.102974891662598

Token 81: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17974911630153656
    2. ' c' → logprob: -1.8047491312026978
    3. '	c' → logprob: -13.304749488830566
    4. ' ' → logprob: -13.804749488830566
    5. '_c' → logprob: -13.804749488830566
    6. 'с' → logprob: -16.30474853515625
    7. '1' → logprob: -16.42974853515625
    8. '<|end|>' → logprob: -16.42974853515625
    9. ')c' → logprob: -16.67974853515625
    10. '   ' → logprob: -16.67974853515625

Token 82: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031444430351257324
    2. ')' → logprob: -6.003144264221191
    3. ']
' → logprob: -7.878144264221191
    4. '])' → logprob: -8.253144264221191
    5. ' ]' → logprob: -11.753144264221191
    6. ']

' → logprob: -11.878144264221191
    7. ')
' → logprob: -12.503144264221191
    8. ']
' → logprob: -12.628144264221191
    9. ')]' → logprob: -12.878144264221191
    10. '）' → logprob: -13.253144264221191

Token 83: '       ' (ID: 309)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' → logprob: -0.017973745241761208
    2. '       ' → logprob: -4.642973899841309
    3. '   ' → logprob: -5.142973899841309
    4. '+' → logprob: -7.017973899841309
    5. '(deck' → logprob: -7.892973899841309
    6. ' deck' → logprob: -8.142973899841309
    7. '.deck' → logprob: -8.142973899841309
    8. ')' → logprob: -8.642973899841309
    9. '```' → logprob: -9.142973899841309
    10. '<|end|>' → logprob: -9.767973899841309

Token 84: ' deck' (ID: 16942)
  Prédit: 'deck'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deck' (adapté à ' deck') → logprob: -5.097437315271236e-05
    2. ' deck' → logprob: -10.87505054473877
    3. '+' → logprob: -11.62505054473877
    4. '       ' → logprob: -12.00005054473877
    5. '   ' → logprob: -12.50005054473877
    6. '(deck' → logprob: -12.50005054473877
    7. '.deck' → logprob: -12.87505054473877
    8. '```' → logprob: -13.25005054473877
    9. ']' → logprob: -14.00005054473877
    10. 'for' → logprob: -14.12505054473877

Token 85: '.extend' (ID: 34151)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3011774718761444
    2. '.extend' → logprob: -1.4261775016784668
    3. '.' → logprob: -4.926177501678467
    4. '+=' → logprob: -5.426177501678467
    5. '[' → logprob: -5.551177501678467
    6. '[:' → logprob: -6.676177501678467
    7. ' =' → logprob: -7.051177501678467
    8. '[-' → logprob: -7.176177501678467
    9. '.=' → logprob: -8.301177024841309
    10. '.p' → logprob: -8.426177024841309

Token 86: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.796184723294573e-06
    2. '(' → logprob: -12.125005722045898
    3. '=cut' → logprob: -15.625005722045898
    4. '(re' → logprob: -15.750005722045898
    5. 'cut' → logprob: -17.2500057220459
    6. '(de' → logprob: -17.5000057220459
    7. ' (' → logprob: -19.3750057220459
    8. '(C' → logprob: -19.5000057220459
    9. '((' → logprob: -19.6250057220459
    10. '(co' → logprob: -20.2500057220459

Token 87: 'ut' (ID: 339)
  Prédit: 'ut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.00019448090461082757
    2. '=cut' → logprob: -9.500194549560547
    3. '(' → logprob: -10.625194549560547
    4. 'u' → logprob: -10.875194549560547
    5. '```' → logprob: -11.125194549560547
    6. '   ' → logprob: -11.500194549560547
    7. ' ut' → logprob: -11.750194549560547
    8. ' ' → logprob: -12.375194549560547
    9. 'ут' → logprob: -12.750194549560547
    10. '(c' → logprob: -12.875194549560547

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.750436007976532e-05
    2. ')
' → logprob: -10.25003719329834
    3. ' )' → logprob: -13.25003719329834
    4. '   ' → logprob: -15.62503719329834
    5. ')

' → logprob: -16.875038146972656
    6. ')return' → logprob: -17.750038146972656
    7. ')
' → logprob: -17.750038146972656
    8. ')n' → logprob: -18.000038146972656
    9. '）' → logprob: -18.250038146972656
    10. ' ' → logprob: -18.500038146972656

Token 89: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6729281544685364
    2. '<|end|>' → logprob: -0.7979281544685364
    3. ')' → logprob: -4.047928333282471
    4. '```' → logprob: -4.297928333282471
    5. '
' → logprob: -5.797928333282471
    6. '<|end|>' → logprob: -6.547928333282471
    7. '...' → logprob: -6.922928333282471
    8. '#' → logprob: -7.422928333282471
    9. '\' → logprob: -7.797928333282471
    10. 'n' → logprob: -8.047927856445312

Token 90: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003850325592793524
    2. '<|end|>' → logprob: -9.000385284423828
    3. ' print' → logprob: -9.250385284423828
    4. 'for' → logprob: -9.625385284423828
    5. ')' → logprob: -10.125385284423828
    6. '```' → logprob: -10.250385284423828
    7. '   ' → logprob: -12.000385284423828
    8. '#print' → logprob: -12.250385284423828
    9. '[' → logprob: -12.875385284423828
    10. ' for' → logprob: -13.000385284423828

Token 91: '(deck' (ID: 195320)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8467187881469727
    2. '(*' → logprob: -1.5967187881469727
    3. '(deck' → logprob: -1.5967187881469727
    4. '('' → logprob: -2.0967187881469727
    5. '(len' → logprob: -3.2217187881469727
    6. '("' → logprob: -6.346718788146973
    7. '()' → logprob: -6.971718788146973
    8. '(sum' → logprob: -7.721718788146973
    9. '(sorted' → logprob: -9.846718788146973
    10. '(de' → logprob: -10.096718788146973

Token 92: '[-' (ID: 17503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -13.500004768371582
    3. '))' → logprob: -13.875004768371582
    4. ')`' → logprob: -13.875004768371582
    5. ' )' → logprob: -14.375004768371582
    6. ')
' → logprob: -15.875004768371582
    7. '[])' → logprob: -16.125003814697266
    8. '`)' → logprob: -16.250003814697266
    9. '])' → logprob: -16.500003814697266
    10. '})' → logprob: -17.375003814697266

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017158739501610398
    2. '10' → logprob: -7.126715660095215
    3. '5' → logprob: -7.626715660095215
    4. '20' → logprob: -9.126715660095215
    5. 'k' → logprob: -9.626715660095215
    6. '2' → logprob: -10.001715660095215
    7. ' ' → logprob: -10.376715660095215
    8. '3' → logprob: -10.626715660095215
    9. 'c' → logprob: -11.126715660095215
    10. '100' → logprob: -11.251715660095215

Token 94: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. ' )' → logprob: -10.875030517578125
    3. '])' → logprob: -12.250030517578125
    4. '))' → logprob: -12.375030517578125
    5. ')
' → logprob: -13.875030517578125
    6. '`)' → logprob: -14.750030517578125
    7. '）' → logprob: -15.375030517578125
    8. '[' → logprob: -15.750030517578125
    9. ')])' → logprob: -16.000030517578125
    10. '})' → logprob: -16.125030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 45.65%
Précision adaptée (1ère position): 47.83%
Précision (top 10): 85.87%
================================================================================
