================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:23:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n,k = map(int,input().split())
    if n == 0 and k == 0:
        break
    a = [int(input()) for _ in range(n)]
    window_sum = sum(a[:k])
    max_sum = window_sum
    for i in range(k,n):
        window_sum += a[i] - a[i-k]
        if window_sum > max_sum:
            max_sum = window_sum
    print(max_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12724284827709198
    2. 'sys' → logprob: -2.1272428035736084
    3. ' input' → logprob: -8.752243041992188
    4. 'input' → logprob: -8.877243041992188
    5. '	sys' → logprob: -11.877243041992188
    6. '=sys' → logprob: -12.127243041992188
    7. '(sys' → logprob: -12.877243041992188
    8. ' ' → logprob: -13.502243041992188
    9. ' system' → logprob: -15.002243041992188
    10. '_sys' → logprob: -15.627243041992188

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001290454383706674
    2. ' .' → logprob: -10.000128746032715
    3. '.readline' → logprob: -10.375128746032715
    4. '.stdin' → logprob: -11.000128746032715
    5. '.import' → logprob: -12.375128746032715
    6. '.setdefault' → logprob: -12.375128746032715
    7. '.
' → logprob: -12.625128746032715
    8. '[' → logprob: -12.750128746032715
    9. '.​' → logprob: -13.000128746032715
    10. '.get' → logprob: -13.125128746032715

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04071744531393051
    2. '.' → logprob: -3.915717363357544
    3. '.read' → logprob: -3.915717363357544
    4. '.readlines' → logprob: -10.665717124938965
    5. 'read' → logprob: -11.040717124938965
    6. '.Read' → logprob: -12.665717124938965
    7. ' readline' → logprob: -13.915717124938965
    8. '.buffer' → logprob: -14.165717124938965
    9. '```' → logprob: -14.415717124938965
    10. '<|end|>' → logprob: -14.415717124938965

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056260839104652405
    2. '(' → logprob: -3.056260824203491
    3. '()
' → logprob: -5.68126106262207
    4. '(
' → logprob: -6.80626106262207
    5. '().' → logprob: -7.05626106262207
    6. '
' → logprob: -7.43126106262207
    7. '()\' → logprob: -7.43126106262207
    8. '\n' → logprob: -7.55626106262207
    9. '\' → logprob: -8.43126106262207
    10. '()

' → logprob: -9.05626106262207

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5771147012710571
    2. '(' → logprob: -0.8271147012710571
    3. '().' → logprob: -7.827114582061768
    4. 'def' → logprob: -7.952114582061768
    5. '()
' → logprob: -9.577115058898926
    6. '(
' → logprob: -9.577115058898926
    7. '(n' → logprob: -10.202115058898926
    8. '#' → logprob: -10.577115058898926
    9. 'print' → logprob: -10.577115058898926
    10. ')' → logprob: -10.827115058898926

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0101946871727705
    2. ' True' → logprob: -4.635194778442383
    3. '  ' → logprob: -7.885194778442383
    4. ' (' → logprob: -11.135194778442383
    5. 'True' → logprob: -11.510194778442383
    6. ' i' → logprob: -11.885194778442383
    7. '    ' → logprob: -12.385194778442383
    8. ' not' → logprob: -12.385194778442383
    9. '   ' → logprob: -12.885194778442383
    10. ' "' → logprob: -13.010194778442383

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006746663711965084
    2. '():' → logprob: -7.625674724578857
    3. ' :' → logprob: -8.8756742477417
    4. ':**' → logprob: -10.6256742477417
    5. '):' → logprob: -12.2506742477417
    6. ':
' → logprob: -12.7506742477417
    7. '(:' → logprob: -13.0006742477417
    8. ':return' → logprob: -13.0006742477417
    9. '':'' → logprob: -13.6256742477417
    10. ' ():' → logprob: -13.7506742477417

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16543015837669373
    2. '    
' → logprob: -2.0404300689697266
    3. '    ' → logprob: -4.290430068969727
    4. '  
' → logprob: -5.915430068969727
    5. '     
' → logprob: -6.665430068969727
    6. ' 
' → logprob: -6.790430068969727
    7. '    
    
' → logprob: -7.415430068969727
    8. 'input' → logprob: -7.665430068969727
    9. '(' → logprob: -7.665430068969727
    10. ':' → logprob: -7.790430068969727

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.24047908186912537
    2. 'line' → logprob: -1.8654791116714478
    3. 'data' → logprob: -3.365478992462158
    4. '   ' → logprob: -4.365478992462158
    5. 'user' → logprob: -4.990478992462158
    6. ' data' → logprob: -5.990478992462158
    7. ' user' → logprob: -6.740478992462158
    8. 'text' → logprob: -7.740478992462158
    9. 'command' → logprob: -8.990479469299316
    10. ' inp' → logprob: -9.115479469299316

Token 14: ',k' (ID: 35155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1151089295744896
    2. '=' → logprob: -2.6151089668273926
    3. ' ==' → logprob: -3.6151089668273926
    4. ' ' → logprob: -4.990108966827393
    5. ' :=' → logprob: -7.240108966827393
    6. '==' → logprob: -7.865108966827393
    7. '=int' → logprob: -8.615108489990234
    8. '=input' → logprob: -9.240108489990234
    9. ' >' → logprob: -9.740108489990234
    10. '.' → logprob: -9.740108489990234

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1428203582763672
    2. '=' → logprob: -2.017820358276367
    3. ',' → logprob: -9.017820358276367
    4. ' ' → logprob: -11.142820358276367
    5. '=input' → logprob: -12.267820358276367
    6. ' ,' → logprob: -12.767820358276367
    7. ')' → logprob: -15.017820358276367
    8. ' =
' → logprob: -15.142820358276367
    9. '=int' → logprob: -15.142820358276367
    10. ' =
' → logprob: -15.767820358276367

Token 16: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.26182177662849426
    2. 'map' → logprob: -1.5118217468261719
    3. 'input' → logprob: -5.261821746826172
    4. ' input' → logprob: -5.386821746826172
    5. ' list' → logprob: -10.136821746826172
    6. ' ' → logprob: -10.886821746826172
    7. 'list' → logprob: -11.011821746826172
    8. '	map' → logprob: -13.011821746826172
    9. '[' → logprob: -13.511821746826172
    10. '(map' → logprob: -13.761821746826172

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03765144944190979
    2. '(' → logprob: -3.787651538848877
    3. '(str' → logprob: -4.287651538848877
    4. '(lambda' → logprob: -7.912651538848877
    5. '(input' → logprob: -8.662651062011719
    6. '(
' → logprob: -11.912651062011719
    7. '(list' → logprob: -12.287651062011719
    8. 'int' → logprob: -12.787651062011719
    9. ' (' → logprob: -12.912651062011719
    10. '<int' → logprob: -13.162651062011719

Token 18: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2868534028530121
    2. ',input' → logprob: -1.4118534326553345
    3. 'input' → logprob: -6.036853313446045
    4. '(input' → logprob: -6.536853313446045
    5. '(' → logprob: -6.661853313446045
    6. ')' → logprob: -7.786853313446045
    7. ' ,' → logprob: -9.536853790283203
    8. ' input' → logprob: -9.661853790283203
    9. ' (' → logprob: -12.786853790283203
    10. '

' → logprob: -12.911853790283203

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00021951000962872058
    2. '())' → logprob: -8.875219345092773
    3. '()' → logprob: -9.500219345092773
    4. ')' → logprob: -13.125219345092773
    5. ' ().' → logprob: -13.375219345092773
    6. '()))' → logprob: -14.000219345092773
    7. '(' → logprob: -15.750219345092773
    8. '()
' → logprob: -16.750219345092773
    9. ' ())' → logprob: -16.750219345092773
    10. '.readline' → logprob: -18.000219345092773

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.012536372989416122
    2. 'strip' → logprob: -4.512536525726318
    3. 'rstrip' → logprob: -6.512536525726318
    4. ' split' → logprob: -13.63753604888916
    5. '(split' → logprob: -14.38753604888916
    6. 'read' → logprob: -14.51253604888916
    7. ')' → logprob: -14.76253604888916
    8. '```' → logprob: -16.387537002563477
    9. ' strip' → logprob: -17.137537002563477
    10. 'rs' → logprob: -17.262537002563477

Token 21: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04367828741669655
    2. '())' → logprob: -3.2936782836914062
    3. '))' → logprob: -5.668678283691406
    4. '()' → logprob: -6.168678283691406
    5. '()))' → logprob: -10.543678283691406
    6. ')
' → logprob: -10.918678283691406
    7. '())
' → logprob: -11.418678283691406
    8. '(' → logprob: -12.043678283691406
    9. '')' → logprob: -13.168678283691406
    10. '),' → logprob: -13.293678283691406

Token 22: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48840829730033875
    2. '   ' → logprob: -1.2384083271026611
    3. ' ' → logprob: -3.238408327102661
    4. '<|end|>' → logprob: -3.613408327102661
    5. 'if' (adapté à ' if') → logprob: -3.988408327102661
    6. '    ' → logprob: -5.238408088684082
    7. ' 
' → logprob: -5.863408088684082
    8. '  ' → logprob: -6.613408088684082
    9. '\n' → logprob: -7.488408088684082
    10. '```' → logprob: -8.113408088684082

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07131116092205048
    2. ' not' → logprob: -2.6963112354278564
    3. 'n' → logprob: -6.821310997009277
    4. ' ' → logprob: -8.696310997009277
    5. 'not' → logprob: -9.071310997009277
    6. ' ' → logprob: -14.321310997009277
    7. '	n' → logprob: -15.196310997009277
    8. ' k' → logprob: -15.321310997009277
    9. ' (' → logprob: -15.946310997009277
    10. ' н' → logprob: -16.696311950683594

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2259659618139267
    2. '==' → logprob: -1.600965976715088
    3. '=' → logprob: -8.35096549987793
    4. ' ' → logprob: -8.47596549987793
    5. ')' → logprob: -10.60096549987793
    6. ' =' → logprob: -10.60096549987793
    7. ' <' → logprob: -11.10096549987793
    8. '<' → logprob: -11.35096549987793
    9. ')==' → logprob: -12.10096549987793
    10. '0' → logprob: -12.35096549987793

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007639044430106878
    2. ' ' → logprob: -4.882638931274414
    3. 'k' → logprob: -10.632638931274414
    4. ' k' → logprob: -12.632638931274414
    5. '   ' → logprob: -13.257638931274414
    6. '  ' → logprob: -14.382638931274414
    7. '```' → logprob: -14.695138931274414
    8. '    ' → logprob: -14.882638931274414
    9. '-' → logprob: -15.007638931274414
    10. '=' → logprob: -15.507638931274414

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006740703247487545
    2. ' ' → logprob: -7.375674247741699
    3. 'k' → logprob: -10.2506742477417
    4. '   ' → logprob: -13.1881742477417
    5. '  ' → logprob: -13.7506742477417
    6. '```' → logprob: -13.8131742477417
    7. '-' → logprob: -14.0006742477417
    8. ' k' → logprob: -14.3131742477417
    9. '    ' → logprob: -14.6256742477417
    10. 'and' → logprob: -14.6256742477417

Token 28: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06288580596446991
    2. 'and' → logprob: -2.8128857612609863
    3. ' ' → logprob: -7.062885761260986
    4. ':' → logprob: -10.187886238098145
    5. ' or' → logprob: -11.687886238098145
    6. ' a' → logprob: -12.187886238098145
    7. '  ' → logprob: -12.437886238098145
    8. '	and' → logprob: -13.062886238098145
    9. ' ' → logprob: -13.562886238098145
    10. ' an' → logprob: -13.812886238098145

Token 29: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.04300662875175476
    2. 'k' → logprob: -3.168006658554077
    3. ' ' → logprob: -12.293006896972656
    4. '	k' → logprob: -12.918006896972656
    5. ' ' → logprob: -15.293006896972656
    6. '<|end|>' → logprob: -16.793006896972656
    7. ',k' → logprob: -16.918006896972656
    8. ' ‌' → logprob: -17.418006896972656
    9. ' к' → logprob: -17.918006896972656
    10. '   ' → logprob: -18.168006896972656

Token 30: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16138722002506256
    2. '==' → logprob: -1.9113872051239014
    3. ' ' → logprob: -7.6613874435424805
    4. '<|end|>' → logprob: -8.28638744354248
    5. '=' → logprob: -8.66138744354248
    6. '  ' → logprob: -9.53638744354248
    7. '0' → logprob: -9.66138744354248
    8. ' =' → logprob: -10.16138744354248
    9. '<|end|>' → logprob: -10.41138744354248
    10. ' ' → logprob: -10.53638744354248

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023245826363563538
    2. ' ' → logprob: -3.7732458114624023
    3. '   ' → logprob: -16.02324676513672
    4. '  ' → logprob: -16.02324676513672
    5. ' ' → logprob: -16.14824676513672
    6. '<|end|>' → logprob: -18.08574676513672
    7. '۰' → logprob: -18.27324676513672
    8. '<|end|>' → logprob: -19.39824676513672
    9. '```' → logprob: -19.58574676513672
    10. '	' → logprob: -19.77324676513672

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '۰' → logprob: -17.62520408630371
    4. '   ' → logprob: -18.12520408630371
    5. '  ' → logprob: -18.25020408630371
    6. '<|end|>' → logprob: -18.62520408630371
    7. '０' → logprob: -19.50020408630371
    8. '०' → logprob: -19.50020408630371
    9. '০' → logprob: -19.62520408630371
    10. '    ' → logprob: -20.37520408630371

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009654151508584619
    2. ':
' → logprob: -7.125965595245361
    3. '   ' → logprob: -9.125965118408203
    4. '       ' → logprob: -10.125965118408203
    5. ' :' → logprob: -12.500965118408203
    6. ':return' → logprob: -12.500965118408203
    7. '):' → logprob: -13.125965118408203
    8. '.' → logprob: -13.625965118408203
    9. '	break' → logprob: -15.250965118408203
    10. '    ' → logprob: -15.250965118408203

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023626508191227913
    2. ':' → logprob: -4.023626327514648
    3. '   ' → logprob: -5.273626327514648
    4. '\n' → logprob: -8.898626327514648
    5. '	break' → logprob: -10.148626327514648
    6. ' break' → logprob: -10.273626327514648
    7. ':
' → logprob: -10.523626327514648
    8. '<|end|>' → logprob: -10.773626327514648
    9. '
' → logprob: -11.023626327514648
    10. '	' → logprob: -11.523626327514648

Token 35: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6006007194519043
    2. ' break' → logprob: -0.8506007194519043
    3. 'break' (adapté à ' break') → logprob: -3.9756007194519043
    4. '   ' → logprob: -5.350600719451904
    5. '	break' → logprob: -7.100600719451904
    6. '           ' → logprob: -11.850601196289062
    7. '_break' → logprob: -12.100601196289062
    8. '```' → logprob: -13.225601196289062
    9. '\n' → logprob: -13.975601196289062
    10. ' ' → logprob: -13.975601196289062

Token 36: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02421778254210949
    2. '    
' → logprob: -4.27421760559082
    3. '\n' → logprob: -5.52421760559082
    4. '<|end|>' → logprob: -6.02421760559082
    5. ')' → logprob: -6.77421760559082
    6. '    ' → logprob: -7.39921760559082
    7. ' ' → logprob: -7.89921760559082
    8. '  
' → logprob: -8.52421760559082
    9. ' 
' → logprob: -8.52421760559082
    10. '\' → logprob: -8.77421760559082

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04106909781694412
    2. '    
' → logprob: -3.4160690307617188
    3. '```' → logprob: -6.166069030761719
    4. '\n' → logprob: -6.291069030761719
    5. '
' → logprob: -6.791069030761719
    6. '<|end|>' → logprob: -7.791069030761719
    7. '    ' → logprob: -7.916069030761719
    8. '\' → logprob: -8.416069030761719
    9. '  
' → logprob: -8.791069030761719
    10. '   
' → logprob: -8.916069030761719

Token 38: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10374433547258377
    2. '    
' → logprob: -2.6037442684173584
    3. '    ' → logprob: -4.8537445068359375
    4. '<|end|>' → logprob: -5.1037445068359375
    5. ' ' → logprob: -6.1037445068359375
    6. '
' → logprob: -7.1037445068359375
    7. 'n' → logprob: -7.1037445068359375
    8. 'print' → logprob: -7.3537445068359375
    9. '    
    
' → logprob: -7.3537445068359375
    10. '   
' → logprob: -7.6037445068359375

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04562150686979294
    2. '=' → logprob: -3.420621395111084
    3. 'rr' → logprob: -5.170621395111084
    4. ' ' → logprob: -6.295621395111084
    5. 'rray' → logprob: -6.795621395111084
    6. ',' → logprob: -6.920621395111084
    7. ',b' → logprob: -7.170621395111084
    8. ' =[' → logprob: -7.670621395111084
    9. '.' → logprob: -9.170621871948242
    10. '[' → logprob: -9.170621871948242

Token 40: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.20849840342998505
    2. ' list' → logprob: -1.7084983587265015
    3. '[list' → logprob: -5.583498477935791
    4. '[' → logprob: -6.208498477935791
    5. '[]' → logprob: -7.458498477935791
    6. ' [' → logprob: -8.083498001098633
    7. 'sorted' → logprob: -9.208498001098633
    8. '[int' → logprob: -9.208498001098633
    9. '[input' → logprob: -9.708498001098633
    10. ' []' → logprob: -10.583498001098633

Token 41: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00024965754710137844
    2. '0' → logprob: -8.625249862670898
    3. ' int' → logprob: -10.000249862670898
    4. '*' → logprob: -11.250249862670898
    5. ']int' → logprob: -12.125249862670898
    6. 'map' → logprob: -13.250249862670898
    7. 'list' → logprob: -13.375249862670898
    8. ']' → logprob: -13.625249862670898
    9. '[int' → logprob: -14.875249862670898
    10. 'i' → logprob: -14.875249862670898

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0063238246366381645
    2. '(x' → logprob: -5.50632381439209
    3. '(' → logprob: -6.63132381439209
    4. '(i' → logprob: -7.75632381439209
    5. '()' → logprob: -8.25632381439209
    6. '()]' → logprob: -9.38132381439209
    7. ']' → logprob: -9.38132381439209
    8. 'input' → logprob: -9.88132381439209
    9. '(a' → logprob: -12.88132381439209
    10. ',input' → logprob: -12.88132381439209

Token 43: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00044044392416253686
    2. '()]' → logprob: -8.25044059753418
    3. '()' → logprob: -9.12544059753418
    4. '().' → logprob: -10.37544059753418
    5. '()),' → logprob: -10.50044059753418
    6. '())
' → logprob: -12.37544059753418
    7. ')' → logprob: -12.62544059753418
    8. '()))' → logprob: -13.87544059753418
    9. '())

' → logprob: -14.62544059753418
    10. '()
' → logprob: -14.62544059753418

Token 44: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001559258671477437
    2. ')' → logprob: -7.501559257507324
    3. 'for' → logprob: -7.626559257507324
    4. '())' → logprob: -8.251559257507324
    5. '()]' → logprob: -9.251559257507324
    6. ' for' → logprob: -9.626559257507324
    7. '(' → logprob: -9.626559257507324
    8. '().' → logprob: -11.501559257507324
    9. ' ()' → logprob: -12.001559257507324
    10. '   ' → logprob: -12.626559257507324

Token 45: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011850162409245968
    2. ' ' → logprob: -5.636850357055664
    3. 'range' → logprob: -5.636850357055664
    4. '_' → logprob: -5.761850357055664
    5. ' _' → logprob: -6.636850357055664
    6. '	range' → logprob: -9.136850357055664
    7. '_range' → logprob: -9.761850357055664
    8. ' in' → logprob: -11.511850357055664
    9. '(range' → logprob: -11.511850357055664
    10. ' xrange' → logprob: -12.261850357055664

Token 46: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3923254609107971
    2. ' in' → logprob: -1.6423254013061523
    3. ' range' → logprob: -2.5173254013061523
    4. 'in' → logprob: -3.0173254013061523
    5. ' ' → logprob: -6.892325401306152
    6. '  ' → logprob: -8.642325401306152
    7. '   ' → logprob: -9.892325401306152
    8. '	range' → logprob: -10.017325401306152
    9. '_' → logprob: -11.017325401306152
    10. 'n' → logprob: -11.142325401306152

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20142260193824768
    2. ' range' → logprob: -1.7014225721359253
    3. '(range' → logprob: -12.951422691345215
    4. ' ' → logprob: -13.076422691345215
    5. '	range' → logprob: -13.201422691345215
    6. 'rang' → logprob: -14.076422691345215
    7. '  ' → logprob: -14.201422691345215
    8. '   ' → logprob: -14.326422691345215
    9. 'r' → logprob: -15.326422691345215
    10. 'ran' → logprob: -15.951422691345215

Token 48: '(n' (ID: 2406)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3883635401725769
    2. '(n' → logprob: -1.1383635997772217
    3. '(' → logprob: -6.513363361358643
    4. 'k' → logprob: -12.5133638381958
    5. ' (' → logprob: -12.7633638381958
    6. ' k' → logprob: -14.6383638381958
    7. 'n' → logprob: -14.8883638381958
    8. '(a' → logprob: -15.5133638381958
    9. '(s' → logprob: -16.388362884521484
    10. '(
' → logprob: -16.763362884521484

Token 49: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011765929870307446
    2. ']' → logprob: -4.511765956878662
    3. ')' → logprob: -7.261765956878662
    4. '])' → logprob: -11.761765480041504
    5. '])]' → logprob: -13.136765480041504
    6. ')]
' → logprob: -13.886765480041504
    7. ']
' → logprob: -14.011765480041504
    8. ')])' → logprob: -14.261765480041504
    9. '   ' → logprob: -14.636765480041504
    10. ')],' → logprob: -14.761765480041504

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12694920599460602
    2. '
' → logprob: -2.7519493103027344
    3. '    
' → logprob: -3.0019493103027344
    4. '<|end|>' → logprob: -6.251949310302734
    5. '  
' → logprob: -7.126949310302734
    6. 'a' → logprob: -7.501949310302734
    7. '    ' → logprob: -7.751949310302734
    8. '   
' → logprob: -8.001949310302734
    9. ' 
' → logprob: -8.126949310302734
    10. ' ' → logprob: -8.751949310302734

Token 51: ' window' (ID: 5734)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29521670937538147
    2. ' a' → logprob: -2.2952167987823486
    3. '   ' → logprob: -2.6702167987823486
    4. 'answer' → logprob: -4.5452165603637695
    5. 'count' → logprob: -4.5452165603637695
    6. 's' → logprob: -5.0452165603637695
    7. 'result' → logprob: -5.2952165603637695
    8. 'answers' → logprob: -5.5452165603637695
    9. 'indices' → logprob: -5.5452165603637695
    10. 'k' → logprob: -5.6702165603637695

Token 52: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4440423250198364
    2. '_sum' → logprob: -1.3190423250198364
    3. '_size' → logprob: -2.444042205810547
    4. '=' → logprob: -7.069042205810547
    5. '_s' → logprob: -7.069042205810547
    6. 's' → logprob: -7.319042205810547
    7. ' =' → logprob: -7.569042205810547
    8. '_len' → logprob: -7.944042205810547
    9. 'sum' → logprob: -8.069042205810547
    10. '_start' → logprob: -8.194042205810547

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009804493747651577
    2. '=' → logprob: -4.634804725646973
    3. ' ' → logprob: -10.509804725646973
    4. 's' → logprob: -11.384804725646973
    5. '  ' → logprob: -12.509804725646973
    6. ' +=' → logprob: -12.884804725646973
    7. '<|end|>' → logprob: -13.384804725646973
    8. ',' → logprob: -15.009804725646973
    9. '_' → logprob: -15.384804725646973
    10. ')' → logprob: -15.384804725646973

Token 54: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6892328858375549
    2. 'sum' → logprob: -0.8142328858375549
    3. '0' → logprob: -2.93923282623291
    4. ' ' → logprob: -6.18923282623291
    5. 'a' → logprob: -10.31423282623291
    6. ' a' → logprob: -11.06423282623291
    7. '	sum' → logprob: -11.31423282623291
    8. '=sum' → logprob: -11.81423282623291
    9. '   ' → logprob: -11.93923282623291
    10. '  ' → logprob: -12.06423282623291

Token 55: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003811025235336274
    2. '(' → logprob: -7.875380992889404
    3. 'a' → logprob: -15.125381469726562
    4. '(s' → logprob: -15.750381469726562
    5. '()' → logprob: -16.125381469726562
    6. '(ai' → logprob: -16.625381469726562
    7. '(array' → logprob: -16.750381469726562
    8. '(
' → logprob: -16.750381469726562
    9. ' (' → logprob: -17.125381469726562
    10. '(arr' → logprob: -17.500381469726562

Token 56: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.007854561321437359
    2. '[' → logprob: -5.132854461669922
    3. '[k' → logprob: -6.632854461669922
    4. '[i' → logprob: -7.507854461669922
    5. ' [:' → logprob: -11.132854461669922
    6. '[-' → logprob: -11.257854461669922
    7. ')' → logprob: -11.382854461669922
    8. '[n' → logprob: -12.132854461669922
    9. '[:]' → logprob: -12.382854461669922
    10. '   ' → logprob: -12.882854461669922

Token 57: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00016349162615370005
    2. ' k' → logprob: -9.000163078308105
    3. '   ' → logprob: -10.625163078308105
    4. ' ' → logprob: -12.000163078308105
    5. '  ' → logprob: -13.500163078308105
    6. ')' → logprob: -13.875163078308105
    7. '	k' → logprob: -13.875163078308105
    8. '1' → logprob: -14.125163078308105
    9. '    ' → logprob: -14.437663078308105
    10. '5' → logprob: -14.687663078308105

Token 58: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008811923675239086
    2. ')' → logprob: -4.758811950683594
    3. '])
' → logprob: -9.133811950683594
    4. ')])' → logprob: -10.258811950683594
    5. ' ])' → logprob: -11.383811950683594
    6. ')
' → logprob: -11.383811950683594
    7. '   ' → logprob: -11.758811950683594
    8. ')]' → logprob: -12.383811950683594
    9. ' )' → logprob: -12.508811950683594
    10. '))' → logprob: -12.633811950683594

Token 59: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42133915424346924
    2. '   ' → logprob: -1.5463391542434692
    3. '<|end|>' → logprob: -2.2963390350341797
    4. '\n' → logprob: -4.29633903503418
    5. '    
' → logprob: -4.54633903503418
    6. '  
' → logprob: -7.04633903503418
    7. '   
' → logprob: -7.42133903503418
    8. '\' → logprob: -7.42133903503418
    9. '<|end|>' → logprob: -7.42133903503418
    10. ' 
' → logprob: -7.54633903503418

Token 60: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.06938127428293228
    2. ' max' → logprob: -3.5693812370300293
    3. 'result' → logprob: -3.8193812370300293
    4. 'min' → logprob: -5.194381237030029
    5. 'best' → logprob: -5.444381237030029
    6. '   ' → logprob: -6.319381237030029
    7. 'answer' → logprob: -7.194381237030029
    8. ' best' → logprob: -7.194381237030029
    9. ' result' → logprob: -7.319381237030029
    10. '    
' → logprob: -7.444381237030029

Token 61: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.04555386304855347
    2. '_' → logprob: -3.5455539226531982
    3. '_window' → logprob: -4.295553684234619
    4. '_val' → logprob: -6.545553684234619
    5. '_value' → logprob: -7.545553684234619
    6. '_s' → logprob: -10.670554161071777
    7. ' _' → logprob: -11.670554161071777
    8. '_win' → logprob: -11.795554161071777
    9. '_len' → logprob: -12.420554161071777
    10. '_windows' → logprob: -12.420554161071777

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038051363080739975
    2. '=' → logprob: -3.2880513668060303
    3. ',' → logprob: -11.91305160522461
    4. ' ' → logprob: -12.91305160522461
    5. '=max' → logprob: -15.16305160522461
    6. '  ' → logprob: -15.66305160522461
    7. ' ,' → logprob: -16.16305160522461
    8. ' =
' → logprob: -16.78805160522461
    9. ' ' → logprob: -16.91305160522461
    10. '   ' → logprob: -17.28805160522461

Token 63: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.3484838902950287
    2. 'window' → logprob: -1.223483920097351
    3. ' max' → logprob: -11.47348403930664
    4. '	window' → logprob: -11.47348403930664
    5. 'max' → logprob: -12.34848403930664
    6. ' ' → logprob: -12.84848403930664
    7. 'windows' → logprob: -12.84848403930664
    8. '   ' → logprob: -13.22348403930664
    9. ' windows' → logprob: -13.47348403930664
    10. '0' → logprob: -13.72348403930664

Token 64: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.618001053633634e-05
    2. '_' → logprob: -11.125025749206543
    3. '_s' → logprob: -12.250025749206543
    4. 'sum' → logprob: -12.375025749206543
    5. '_max' → logprob: -13.750025749206543
    6. 'Sum' → logprob: -15.500025749206543
    7. ' _' → logprob: -15.750025749206543
    8. '_window' → logprob: -16.12502670288086
    9. '_SUM' → logprob: -16.50002670288086
    10. 'a' → logprob: -16.75002670288086

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006791632156819105
    2. '<|end|>' → logprob: -5.881791591644287
    3. '   ' → logprob: -6.506791591644287
    4. '    
' → logprob: -6.881791591644287
    5. '
' → logprob: -7.131791591644287
    6. '\n' → logprob: -8.131792068481445
    7. '  
' → logprob: -8.631792068481445
    8. '<|end|>' → logprob: -9.881792068481445
    9. ' 
' → logprob: -10.131792068481445
    10. '

' → logprob: -10.506792068481445

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0283304452896118
    2. '   ' → logprob: -1.0283304452896118
    3. '\n' → logprob: -2.0283303260803223
    4. '    
' → logprob: -2.9033303260803223
    5. ' for' → logprob: -3.2783303260803223
    6. '<|end|>' → logprob: -3.5283303260803223
    7. '  
' → logprob: -5.028330326080322
    8. '   
' → logprob: -5.153330326080322
    9. '```' → logprob: -5.278330326080322
    10. ' 
' → logprob: -5.278330326080322

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8824840188026428
    2. 'for' (adapté à ' for') → logprob: -1.382483959197998
    3. '   ' → logprob: -2.132483959197998
    4. '
' → logprob: -2.507483959197998
    5. '\n' → logprob: -2.632483959197998
    6. '    
' → logprob: -3.132483959197998
    7. '  
' → logprob: -5.132483959197998
    8. ' 
' → logprob: -5.382483959197998
    9. '   
' → logprob: -5.757483959197998
    10. '<|end|>' → logprob: -5.882483959197998

Token 68: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20165100693702698
    2. 'i' → logprob: -1.7016509771347046
    3. ' ' → logprob: -8.451650619506836
    4. '	i' → logprob: -11.201650619506836
    5. '   ' → logprob: -12.076650619506836
    6. '  ' → logprob: -12.701650619506836
    7. '```' → logprob: -14.701650619506836
    8. '    ' → logprob: -14.951650619506836
    9. '_i' → logprob: -15.326650619506836
    10. ' ' → logprob: -15.451650619506836

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004890023730695248
    2. 'in' → logprob: -5.379889965057373
    3. ' ' → logprob: -8.754890441894531
    4. '  ' → logprob: -9.754890441894531
    5. '	in' → logprob: -11.129890441894531
    6. '   ' → logprob: -11.254890441894531
    7. 'range' → logprob: -11.504890441894531
    8. 'n' → logprob: -12.629890441894531
    9. ' i' → logprob: -13.379890441894531
    10. ' k' → logprob: -13.379890441894531

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931559443473816
    2. 'range' → logprob: -0.6931559443473816
    3. ' ' → logprob: -12.318156242370605
    4. '	range' → logprob: -12.943156242370605
    5. '   ' → logprob: -14.068156242370605
    6. '  ' → logprob: -14.568156242370605
    7. '(range' → logprob: -15.068156242370605
    8. ' xrange' → logprob: -15.818156242370605
    9. 'r' → logprob: -17.31815528869629
    10. 'rang' → logprob: -17.69315528869629

Token 71: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.05980415269732475
    2. '(' → logprob: -3.0598042011260986
    3. ' k' → logprob: -4.5598039627075195
    4. ' (' → logprob: -7.6848039627075195
    5. '1' → logprob: -9.05980396270752
    6. 'k' → logprob: -9.68480396270752
    7. ' ' → logprob: -10.80980396270752
    8. '	k' → logprob: -10.93480396270752
    9. '<|end|>' → logprob: -12.43480396270752
    10. '(n' → logprob: -12.43480396270752

Token 72: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01828537881374359
    2. ',n' → logprob: -4.018285274505615
    3. ' ,' → logprob: -9.393285751342773
    4. ',len' → logprob: -10.143285751342773
    5. ',k' → logprob: -12.143285751342773
    6. ',num' → logprob: -12.643285751342773
    7. '   ' → logprob: -13.143285751342773
    8. ',length' → logprob: -14.518285751342773
    9. ',i' → logprob: -14.893285751342773
    10. ',
' → logprob: -15.268285751342773

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06211904063820839
    2. '):
' → logprob: -2.8121190071105957
    3. '):
' → logprob: -9.937119483947754
    4. ' ):' → logprob: -9.937119483947754
    5. ')' → logprob: -10.437119483947754
    6. ':' → logprob: -11.562119483947754
    7. '   ' → logprob: -12.062119483947754
    8. '-' → logprob: -12.437119483947754
    9. ' ):
' → logprob: -12.687119483947754
    10. '):

' → logprob: -13.687119483947754

Token 74: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12253948301076889
    2. '<|end|>' → logprob: -3.122539520263672
    3. ' 
' → logprob: -3.872539520263672
    4. ' ' → logprob: -4.122539520263672
    5. '    
' → logprob: -4.372539520263672
    6. ' window' → logprob: -4.747539520263672
    7. '    ' → logprob: -5.247539520263672
    8. '       ' → logprob: -5.372539520263672
    9. '     
' → logprob: -7.247539520263672
    10. '   
' → logprob: -7.747539520263672

Token 75: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.06334175914525986
    2. 'window' (adapté à ' window') → logprob: -2.8133418560028076
    3. '   ' → logprob: -6.9383416175842285
    4. '       ' → logprob: -8.188342094421387
    5. '	window' → logprob: -9.188342094421387
    6. '    ' → logprob: -11.938342094421387
    7. '_window' → logprob: -12.938342094421387
    8. '
' → logprob: -13.313342094421387
    9. '```' → logprob: -13.313342094421387
    10. 'indow' → logprob: -13.313342094421387

Token 76: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00022713904036208987
    2. '_s' → logprob: -9.375226974487305
    3. '_' → logprob: -9.500226974487305
    4. ' _' → logprob: -11.500226974487305
    5. ''_' → logprob: -11.500226974487305
    6. ')_' → logprob: -11.875226974487305
    7. '```' → logprob: -11.875226974487305
    8. '>' → logprob: -12.250226974487305
    9. ']_' → logprob: -12.750226974487305
    10. '"_' → logprob: -13.000226974487305

Token 77: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47648608684539795
    2. '+=' → logprob: -1.226486086845398
    3. '=' → logprob: -2.8514862060546875
    4. ' =' → logprob: -3.6014862060546875
    5. ' -=' → logprob: -7.4764862060546875
    6. '-=' → logprob: -9.226486206054688
    7. '+=(' → logprob: -12.101486206054688
    8. ']+=' → logprob: -13.601486206054688
    9. ' ' → logprob: -13.851486206054688
    10. ' +' → logprob: -14.351486206054688

Token 78: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.69321608543396
    2. ' a' → logprob: -0.69321608543396
    3. '-a' → logprob: -10.318216323852539
    4. '	a' → logprob: -11.443216323852539
    5. '   ' → logprob: -11.818216323852539
    6. ' -' → logprob: -12.068216323852539
    7. ' ' → logprob: -12.693216323852539
    8. '(a' → logprob: -12.818216323852539
    9. '-' → logprob: -12.943216323852539
    10. '    ' → logprob: -13.693216323852539

Token 79: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.250014305114746
    3. '```' → logprob: -15.250014305114746
    4. 'i' → logprob: -15.500014305114746
    5. '[
' → logprob: -16.37501335144043
    6. ' [' → logprob: -16.37501335144043
    7. '[I' → logprob: -16.62501335144043
    8. '\[' → logprob: -16.75001335144043
    9. '[int' → logprob: -18.00001335144043
    10. '[idx' → logprob: -18.00001335144043

Token 80: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012430864153429866
    2. ']-' → logprob: -7.0012431144714355
    3. ' ]' → logprob: -8.376242637634277
    4. '-' → logprob: -9.501242637634277
    5. ' -' → logprob: -10.876242637634277
    6. ')' → logprob: -12.126242637634277
    7. ']
' → logprob: -13.626242637634277
    8. '   ' → logprob: -15.251242637634277
    9. ' ' → logprob: -15.626242637634277
    10. '"]' → logprob: -16.376243591308594

Token 81: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07895555347204208
    2. '-' → logprob: -2.57895565032959
    3. ' ' → logprob: -10.57895565032959
    4. '-k' → logprob: -10.70395565032959
    5. '-window' → logprob: -12.07895565032959
    6. '   ' → logprob: -13.20395565032959
    7. '-i' → logprob: -13.70395565032959
    8. '    ' → logprob: -14.20395565032959
    9. '-ex' → logprob: -14.32895565032959
    10. '-input' → logprob: -14.32895565032959

Token 82: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031781906727701426
    2. ' a' → logprob: -5.753178119659424
    3. '	a' → logprob: -14.753178596496582
    4. '   ' → logprob: -17.128177642822266
    5. ' ' → logprob: -17.253177642822266
    6. '<|end|>' → logprob: -18.628177642822266
    7. '>a' → logprob: -18.628177642822266
    8. '_a' → logprob: -19.003177642822266
    9. '  ' → logprob: -19.128177642822266
    10. '#a' → logprob: -19.253177642822266

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.875001907348633
    3. '```' → logprob: -14.375001907348633
    4. '{i' → logprob: -16.375001907348633
    5. 'i' → logprob: -16.500001907348633
    6. 'a' → logprob: -17.000001907348633
    7. '\[' → logprob: -17.125001907348633
    8. '[j' → logprob: -17.500001907348633
    9. '[a' → logprob: -17.500001907348633
    10. '[index' → logprob: -17.625001907348633

Token 84: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.10214365273714066
    2. '-' → logprob: -2.4771437644958496
    3. ' -' → logprob: -4.35214376449585
    4. '-K' → logprob: -8.602143287658691
    5. '-kar' → logprob: -11.977143287658691
    6. '-kit' → logprob: -12.352143287658691
    7. '-key' → logprob: -12.477143287658691
    8. '-к' → logprob: -12.477143287658691
    9. ']' → logprob: -12.727143287658691
    10. '-window' → logprob: -12.977143287658691

Token 85: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002519061556085944
    2. ']' → logprob: -6.377519130706787
    3. ')
' → logprob: -7.127519130706787
    4. '   ' → logprob: -12.252518653869629
    5. ')]' → logprob: -13.252518653869629
    6. '])' → logprob: -13.627518653869629
    7. '）' → logprob: -13.752518653869629
    8. ']
' → logprob: -13.877518653869629
    9. ' )' → logprob: -14.002518653869629
    10. '<|end|>' → logprob: -14.127518653869629

Token 86: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39006951451301575
    2. '
' → logprob: -1.5150694847106934
    3. '    
' → logprob: -2.3900694847106934
    4. '       ' → logprob: -5.265069484710693
    5. '<|end|>' → logprob: -6.265069484710693
    6. '   
' → logprob: -6.390069484710693
    7. '        
' → logprob: -7.265069484710693
    8. '  
' → logprob: -7.265069484710693
    9. ' 
' → logprob: -7.390069484710693
    10. '\n' → logprob: -8.515069961547852

Token 87: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16357193887233734
    2. 'max' → logprob: -2.288571834564209
    3. ' if' → logprob: -3.038571834564209
    4. ' max' → logprob: -6.663571834564209
    5. '   ' → logprob: -8.413572311401367
    6. '       ' → logprob: -9.663572311401367
    7. '
' → logprob: -11.913572311401367
    8. ' ' → logprob: -12.663572311401367
    9. '           ' → logprob: -13.538572311401367
    10. '  ' → logprob: -13.663572311401367

Token 88: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.000555416801944375
    2. 'window' → logprob: -7.500555515289307
    3. ' ' → logprob: -13.750555038452148
    4. ' ' → logprob: -14.375555038452148
    5. '	window' → logprob: -14.875555038452148
    6. ' max' → logprob: -15.750555038452148
    7. '(window' → logprob: -15.875555038452148
    8. '   ' → logprob: -17.12555503845215
    9. '  ' → logprob: -18.62555503845215
    10. ' a' → logprob: -19.37555503845215

Token 89: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.876193169271573e-05
    2. '_' → logprob: -9.875088691711426
    3. '_s' → logprob: -10.875088691711426
    4. 'sum' → logprob: -11.625088691711426
    5. ' _' → logprob: -12.250088691711426
    6. '>' → logprob: -13.125088691711426
    7. '_max' → logprob: -13.625088691711426
    8. '__' → logprob: -15.625088691711426
    9. 's' → logprob: -15.875088691711426
    10. '```' → logprob: -15.875088691711426

Token 90: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03811665624380112
    2. '>' → logprob: -3.288116693496704
    3. ' ' → logprob: -9.538116455078125
    4. '   ' → logprob: -13.788116455078125
    5. ' ' → logprob: -13.913116455078125
    6. ' >

' → logprob: -14.913116455078125
    7. '  ' → logprob: -15.538116455078125
    8. '.' → logprob: -16.163116455078125
    9. ' >
' → logprob: -16.288116455078125
    10. '">' → logprob: -16.413116455078125

Token 91: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.10020861029624939
    2. ' max' → logprob: -2.3502085208892822
    3. '   ' → logprob: -14.100208282470703
    4. '	max' → logprob: -14.100208282470703
    5. ' ' → logprob: -15.600208282470703
    6. '_max' → logprob: -16.850208282470703
    7. '=max' → logprob: -16.975208282470703
    8. '(max' → logprob: -17.225208282470703
    9. '[max' → logprob: -17.600208282470703
    10. '```' → logprob: -17.850208282470703

Token 92: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00011272187111899257
    2. '_max' → logprob: -9.125112533569336
    3. '_' → logprob: -13.250112533569336
    4. '_s' → logprob: -13.500112533569336
    5. 'sum' → logprob: -16.000112533569336
    6. ' _' → logprob: -16.250112533569336
    7. '_sub' → logprob: -16.625112533569336
    8. 'max' → logprob: -17.500112533569336
    9. '_SUM' → logprob: -17.625112533569336
    10. ')_' → logprob: -17.750112533569336

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.286852345103398e-05
    2. '       ' → logprob: -11.125042915344238
    3. ':
' → logprob: -11.625042915344238
    4. '           ' → logprob: -12.000042915344238
    5. ' :' → logprob: -12.375042915344238
    6. '):' → logprob: -13.125042915344238
    7. '=' → logprob: -13.125042915344238
    8. ':max' → logprob: -13.250042915344238
    9. '<|end|>' → logprob: -14.250042915344238
    10. '   ' → logprob: -14.875042915344238

Token 94: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1837928742170334
    2. ' max' → logprob: -1.9337928295135498
    3. 'max' → logprob: -3.80879282951355
    4. '       ' → logprob: -7.683793067932129
    5. '        ' → logprob: -9.183793067932129
    6. '            
' → logprob: -9.558793067932129
    7. '<|end|>' → logprob: -9.683793067932129
    8. '(max' → logprob: -9.933793067932129
    9. '```' → logprob: -10.058793067932129
    10. '            ' → logprob: -10.183793067932129

Token 95: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.14364098012447357
    2. 'max' (adapté à ' max') → logprob: -2.0186409950256348
    3. '           ' → logprob: -7.143640995025635
    4. '               ' → logprob: -10.018640518188477
    5. '       ' → logprob: -10.143640518188477
    6. '_max' → logprob: -10.268640518188477
    7. '   ' → logprob: -10.643640518188477
    8. '	max' → logprob: -12.018640518188477
    9. '[max' → logprob: -12.143640518188477
    10. '(max' → logprob: -12.143640518188477

Token 96: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.27099974633893e-05
    2. '_s' → logprob: -11.750012397766113
    3. '_' → logprob: -13.125012397766113
    4. '_max' → logprob: -13.750012397766113
    5. ' _' → logprob: -14.125012397766113
    6. 'sum' → logprob: -15.000012397766113
    7. '_score' → logprob: -16.12501335144043
    8. '_val' → logprob: -16.75001335144043
    9. '_set' → logprob: -16.87501335144043
    10. '_space' → logprob: -17.00001335144043

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.633615493774414
    4. ' =)' → logprob: -17.258615493774414
    5. ' =
' → logprob: -17.383615493774414
    6. ' =
' → logprob: -19.133615493774414
    7. '<|end|>' → logprob: -19.383615493774414
    8. ' +=' → logprob: -19.508615493774414
    9. ' ' → logprob: -19.633615493774414
    10. '＝' → logprob: -19.758615493774414

Token 98: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.061967913061380386
    2. 'window' → logprob: -2.8119678497314453
    3. '	window' → logprob: -15.561967849731445
    4. '(window' → logprob: -16.936967849731445
    5. '.window' → logprob: -18.686967849731445
    6. ' ' → logprob: -18.936967849731445
    7. 'indow' → logprob: -19.186967849731445
    8. '_window' → logprob: -19.436967849731445
    9. '```' → logprob: -19.561967849731445
    10. '    ' → logprob: -20.311967849731445

Token 99: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.4736459888808895e-05
    2. 'sum' → logprob: -11.375014305114746
    3. '_' → logprob: -13.000014305114746
    4. '_s' → logprob: -14.500014305114746
    5. ' _' → logprob: -15.375014305114746
    6. '```' → logprob: -17.375015258789062
    7. ''_' → logprob: -17.625015258789062
    8. 'Sum' → logprob: -17.750015258789062
    9. '_max' → logprob: -18.125015258789062
    10. '"_' → logprob: -18.125015258789062

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32132795453071594
    2. 'print' → logprob: -1.6963279247283936
    3. '
' → logprob: -2.5713279247283936
    4. '    
' → logprob: -4.696328163146973
    5. '\n' → logprob: -5.946328163146973
    6. '<|end|>' → logprob: -6.071328163146973
    7. ' print' → logprob: -7.696328163146973
    8. '  
' → logprob: -9.071328163146973
    9. 'newline' → logprob: -9.321328163146973
    10. '```' → logprob: -9.446328163146973

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15574681758880615
    2. 'print' → logprob: -2.1557469367980957
    3. '\n' → logprob: -4.280746936798096
    4. '    
' → logprob: -4.530746936798096
    5. '
' → logprob: -6.155746936798096
    6. '<|end|>' → logprob: -7.530746936798096
    7. ' print' → logprob: -8.155746459960938
    8. '  
' → logprob: -8.280746459960938
    9. '```' → logprob: -8.530746459960938
    10. '       ' → logprob: -9.405746459960938

Token 102: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1285703033208847
    2. '   ' → logprob: -2.128570318222046
    3. ' print' → logprob: -6.503570079803467
    4. '    
' → logprob: -9.378570556640625
    5. '
' → logprob: -10.628570556640625
    6. '```' → logprob: -11.003570556640625
    7. '\n' → logprob: -11.378570556640625
    8. '  
' → logprob: -13.878570556640625
    9. '	print' → logprob: -14.128570556640625
    10. ' 
' → logprob: -14.253570556640625

Token 103: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0009126556105911732
    2. '(' → logprob: -7.000912666320801
    3. 'max' → logprob: -14.0009126663208
    4. ' (' → logprob: -15.6259126663208
    5. ' max' → logprob: -17.375911712646484
    6. '(m' → logprob: -17.875911712646484
    7. '(min' → logprob: -18.125911712646484
    8. '()' → logprob: -18.500911712646484
    9. '(ma' → logprob: -18.625911712646484
    10. '((' → logprob: -18.875911712646484

Token 104: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.816093228830141e-06
    2. '_s' → logprob: -14.12500286102295
    3. ')' → logprob: -14.25000286102295
    4. '_max' → logprob: -14.37500286102295
    5. ')_' → logprob: -14.37500286102295
    6. '_' → logprob: -15.87500286102295
    7. 'sum' → logprob: -16.750001907348633
    8. '(_' → logprob: -17.750001907348633
    9. ' _' → logprob: -17.750001907348633
    10. '_set' → logprob: -17.875001907348633

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.125000953674316
    4. ')`' → logprob: -17.625
    5. '))' → logprob: -18.75
    6. '')' → logprob: -18.75
    7. '`)' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. ')}' → logprob: -19.875
    10. '")' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 103
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 58.25%
Précision adaptée (1ère position): 61.17%
Précision (top 10): 90.29%
================================================================================
