================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:25:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Optional, Iterator

class PlayerSymbol(str):
    O = 'o'
    X = 'x'
    S = 's'  # space/empty

class GameResult(str):
    O_WIN = 'o'
    X_WIN = 'x'
    DRAW = 'd'

class Board:
    SIZE = 3

    def __init__(self, cells: List[List[PlayerSymbol]]):
        if len(cells) != self.SIZE or any(len(row) != self.SIZE for row in cells):
            raise ValueError("Board must be 3x3.")
        self._cells = cells

    @classmethod
    def from_string(cls, s: str) -> 'Board':
        if len(s) != cls.SIZE * cls.SIZE:
            raise ValueError(f"Input string length must be {cls.SIZE * cls.SIZE}.")
        cells: List[List[PlayerSymbol]] = []
        for r in range(cls.SIZE):
            row = list(s[r*cls.SIZE:(r+1)*cls.SIZE])
            # Validate characters
            for c in row:
                if c not in (PlayerSymbol.O, PlayerSymbol.X, PlayerSymbol.S):
                    raise ValueError(f"Invalid cell character '{c}' found.")
            cells.append(row)
        return cls(cells)

    def get_cell(self, row: int, col: int) -> PlayerSymbol:
        return self._cells[row][col]

    def lines(self) -> Iterator[List[PlayerSymbol]]:
        # Rows
        for r in range(self.SIZE):
            yield [self._cells[r][c] for c in range(self.SIZE)]
        # Columns
        for c in range(self.SIZE):
            yield [self._cells[r][c] for r in range(self.SIZE)]
        # Diagonals
        yield [self._cells[i][i] for i in range(self.SIZE)]
        yield [self._cells[i][self.SIZE - 1 - i] for i in range(self.SIZE)]

class WinConditionChecker(ABC):
    @abstractmethod
    def check(self, board: Board) -> Optional[GameResult]:
        pass

class ThreeInLineChecker(WinConditionChecker):
    def __init__(self, symbol: PlayerSymbol):
        self._symbol = symbol

    def check(self, board: Board) -> Optional[GameResult]:
        for line in board.lines():
            if all(cell == self._symbol for cell in line):
                if self._symbol == PlayerSymbol.O:
                    return GameResult.O_WIN
                elif self._symbol == PlayerSymbol.X:
                    return GameResult.X_WIN
        return None

class GameEvaluator:
    def __init__(self, checkers: List[WinConditionChecker]):
        self._checkers = checkers

    def evaluate(self, board: Board) -> GameResult:
        for checker in self._checkers:
            result = checker.check(board)
            if result is not None:
                return result
        return GameResult.DRAW

class InputLoader:
    def __init__(self, max_datasets:int = 50):
        self._max_datasets = max_datasets

    def load_boards(self) -> Iterator[Board]:
        count = 0
        while count < self._max_datasets:
            try:
                line = input()
            except EOFError:
                break
            line = line.strip()
            if not line:
                continue
            yield Board.from_string(line)
            count += 1

class TicTacToeApplication:
    def __init__(self):
        self._board_loader = InputLoader()
        self._evaluator = GameEvaluator([
            ThreeInLineChecker(PlayerSymbol.O),
            ThreeInLineChecker(PlayerSymbol.X)
        ])

    def run(self) -> None:
        for board in self._board_loader.load_boards():
            result = self._evaluator.evaluate(board)
            print(result)

if __name__ == '__main__':
    app = TicTacToeApplication()
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.3346010148525238
    2. 'ABC' → logprob: -1.4596010446548462
    3. ' ' → logprob: -3.2096009254455566
    4. ' ' → logprob: -5.834600925445557
    5. 'import' → logprob: -6.084600925445557
    6. 'abc' → logprob: -6.209600925445557
    7. 'space' → logprob: -6.584600925445557
    8. 'ABCDE' → logprob: -7.459600925445557
    9. ' abc' → logprob: -8.084601402282715
    10. 'abstract' → logprob: -8.084601402282715

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -9.805981972021982e-05
    2. 'classmethod' → logprob: -10.00009822845459
    3. 'm' → logprob: -11.00009822845459
    4. '_method' → logprob: -12.00009822845459
    5. 'meth' → logprob: -12.00009822845459
    6. 'staticmethod' → logprob: -12.25009822845459
    7. ' method' → logprob: -12.50009822845459
    8. 'abstract' → logprob: -12.75009822845459
    9. 'import' → logprob: -13.37509822845459
    10. 'ethod' → logprob: -13.37509822845459

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19592909514904022
    2. '```' → logprob: -2.4459290504455566
    3. '

' → logprob: -3.3209290504455566
    4. '\n' → logprob: -4.195929050445557
    5. 'class' → logprob: -4.570929050445557
    6. '
' → logprob: -4.820929050445557
    7. '' → logprob: -5.320929050445557
    8. '\' → logprob: -5.445929050445557
    9. '``' → logprob: -5.445929050445557
    10. '<|end|>' → logprob: -6.570929050445557

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1726326197385788
    2. '

' → logprob: -2.1726326942443848
    3. '```' → logprob: -3.5476326942443848
    4. 'class' → logprob: -4.422632694244385
    5. '' → logprob: -7.047632694244385
    6. '
' → logprob: -7.047632694244385
    7. '\n' → logprob: -7.672632694244385
    8. '``' → logprob: -7.672632694244385
    9. ' 

' → logprob: -8.297632217407227
    10. '
 
' → logprob: -8.672632217407227

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07068723440170288
    2. 'import' → logprob: -2.6956872940063477
    3. '.' → logprob: -8.445687294006348
    4. '<|end|>' → logprob: -9.070687294006348
    5. '```' → logprob: -9.195687294006348
    6. ' ' → logprob: -9.320687294006348
    7. '_import' → logprob: -10.070687294006348
    8. '.import' → logprob: -10.195687294006348
    9. ' as' → logprob: -10.570687294006348
    10. '	import' → logprob: -10.820687294006348

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.5475577116012573
    2. ' Union' → logprob: -1.6725577116012573
    3. ' List' → logprob: -2.047557830810547
    4. 'Any' → logprob: -2.547557830810547
    5. ' Optional' → logprob: -5.047557830810547
    6. ' Callable' → logprob: -5.172557830810547
    7. 'Union' → logprob: -5.797557830810547
    8. 'List' → logprob: -5.797557830810547
    9. ' Protocol' → logprob: -6.047557830810547
    10. ' ' → logprob: -6.047557830810547

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9252783060073853
    2. '

' → logprob: -1.0502783060073853
    3. 'class' → logprob: -1.4252783060073853
    4. '```' → logprob: -4.675278186798096
    5. '
' → logprob: -6.800278186798096
    6. '\n' → logprob: -7.050278186798096
    7. '


' → logprob: -7.425278186798096
    8. '``' → logprob: -7.675278186798096
    9. ' class' → logprob: -8.175278663635254
    10. '<|end|>' → logprob: -8.925278663635254

Token 13: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23825469613075256
    2. '
' → logprob: -2.1132547855377197
    3. 'class' → logprob: -2.4882547855377197
    4. '```' → logprob: -5.238254547119141
    5. '\n' → logprob: -6.613254547119141
    6. '


' → logprob: -7.238254547119141
    7. '``' → logprob: -8.48825454711914
    8. '
' → logprob: -8.73825454711914
    9. ' class' → logprob: -9.11325454711914
    10. '`

' → logprob: -9.23825454711914

Token 15: ' Iterator' (ID: 41994)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.12378653138875961
    2. ' Callable' → logprob: -3.623786449432373
    3. ' Dict' → logprob: -3.748786449432373
    4. ' Tuple' → logprob: -3.873786449432373
    5. 'Union' → logprob: -3.998786449432373
    6. ' Any' → logprob: -4.873786449432373
    7. 'Tuple' → logprob: -5.498786449432373
    8. ' Protocol' → logprob: -5.623786449432373
    9. 'Dict' → logprob: -5.748786449432373
    10. 'Any' → logprob: -6.373786449432373

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9082058668136597
    2. 'class' → logprob: -0.9082058668136597
    3. '

' → logprob: -1.6582058668136597
    4. '```' → logprob: -6.283205986022949
    5. '


' → logprob: -8.03320598602295
    6. '\n' → logprob: -8.15820598602295
    7. '
' → logprob: -8.78320598602295
    8. ' class' → logprob: -9.15820598602295
    9. 'import' → logprob: -9.78320598602295
    10. '``' → logprob: -9.90820598602295

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0014048750745132565
    2. '
' → logprob: -7.001404762268066
    3. '```' → logprob: -7.751404762268066
    4. 'c' → logprob: -11.126404762268066
    5. '\n' → logprob: -11.501404762268066
    6. ' class' → logprob: -11.751404762268066
    7. '"class' → logprob: -11.751404762268066
    8. '<class' → logprob: -11.876404762268066
    9. '``' → logprob: -11.876404762268066
    10. 'clas' → logprob: -13.126404762268066

Token 18: ' Player' (ID: 12487)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0957508236169815
    2. ' Abstract' → logprob: -2.5957508087158203
    3. ' Base' → logprob: -5.22075080871582
    4. ' Space' → logprob: -5.59575080871582
    5. ' Basic' → logprob: -6.59575080871582
    6. ' My' → logprob: -6.97075080871582
    7. ' Shape' → logprob: -7.47075080871582
    8. ' Serializer' → logprob: -7.47075080871582
    9. ' Parser' → logprob: -7.59575080871582
    10. ' Iterable' → logprob: -7.59575080871582

Token 19: 'Symbol' (ID: 17416)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3491295576095581
    2. '(' → logprob: -1.224129557609558
    3. '(Abstract' → logprob: -7.474129676818848
    4. '():' → logprob: -10.099129676818848
    5. ' :' → logprob: -10.474129676818848
    6. '(:' → logprob: -11.724129676818848
    7. '(object' → logprob: -12.224129676818848
    8. '```' → logprob: -12.224129676818848
    9. '<|end|>' → logprob: -12.974129676818848
    10. ':
' → logprob: -12.974129676818848

Token 20: '(str' (ID: 7946)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043224576860666275
    2. '(' → logprob: -3.168224573135376
    3. '(Abstract' → logprob: -9.293224334716797
    4. '(:' → logprob: -9.918224334716797
    5. ' :' → logprob: -10.293224334716797
    6. '(Enum' → logprob: -10.793224334716797
    7. '():' → logprob: -10.918224334716797
    8. ':**' → logprob: -12.918224334716797
    9. '):' → logprob: -13.168224334716797
    10. ',' → logprob: -13.543224334716797

Token 21: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007757226470857859
    2. ')' → logprob: -4.882757186889648
    3. '):
' → logprob: -9.507757186889648
    4. ',' → logprob: -9.632757186889648
    5. ':' → logprob: -11.882757186889648
    6. ' ):' → logprob: -13.007757186889648
    7. '):

' → logprob: -13.757757186889648
    8. '),' → logprob: -14.632757186889648
    9. '<|end|>' → logprob: -16.00775718688965
    10. ')：' → logprob: -16.50775718688965

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031569264829158783
    2. '):' → logprob: -6.128157138824463
    3. '   ' → logprob: -7.753157138824463
    4. ')' → logprob: -8.378156661987305
    5. ' :' → logprob: -8.753156661987305
    6. ':
' → logprob: -10.003156661987305
    7. ',' → logprob: -10.378156661987305
    8. '<|end|>' → logprob: -10.628156661987305
    9. '(' → logprob: -10.878156661987305
    10. '  ' → logprob: -11.878156661987305

Token 23: ' O' (ID: 532)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12394072115421295
    2. '   ' → logprob: -2.4989407062530518
    3. 'pass' → logprob: -3.9989407062530518
    4. ' pass' → logprob: -4.373940944671631
    5. '(' → logprob: -6.873940944671631
    6. 'Pass' → logprob: -7.748940944671631
    7. ':
' → logprob: -7.998940944671631
    8. ' :' → logprob: -8.373940467834473
    9. 'class' → logprob: -8.623940467834473
    10. '
' → logprob: -8.873940467834473

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.675737738609314
    2. ' =' → logprob: -1.925737738609314
    3. ''' → logprob: -2.1757378578186035
    4. '   ' → logprob: -3.4257378578186035
    5. '  ' → logprob: -3.5507378578186035
    6. ')' → logprob: -3.6757378578186035
    7. 'O' → logprob: -4.0507378578186035
    8. ':' → logprob: -4.3007378578186035
    9. '()' → logprob: -4.3007378578186035
    10. 'X' → logprob: -4.8007378578186035

Token 25: ' '' (ID: 461)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.5495498180389404
    2. '"O' → logprob: -1.0495498180389404
    3. ''' → logprob: -3.6745498180389404
    4. ' '' → logprob: -3.7995498180389404
    5. '"' → logprob: -4.0495500564575195
    6. ' "' → logprob: -4.9245500564575195
    7. ' ' → logprob: -9.17455005645752
    8. ''o' → logprob: -10.17455005645752
    9. '’O' → logprob: -10.54955005645752
    10. '  ' → logprob: -11.04955005645752

Token 26: 'o' (ID: 78)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.0004976287018507719
    2. ''O' → logprob: -7.875497817993164
    3. 'o' → logprob: -9.750497817993164
    4. 'X' → logprob: -10.625497817993164
    5. ''' → logprob: -11.375497817993164
    6. '"O' → logprob: -11.625497817993164
    7. '0' → logprob: -12.000497817993164
    8. ''o' → logprob: -13.250497817993164
    9. ' O' → logprob: -13.500497817993164
    10. 'О' → logprob: -14.000497817993164

Token 27: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005577972042374313
    2. ''
' → logprob: -7.500557899475098
    3. ''

' → logprob: -13.250557899475098
    4. 'b' → logprob: -14.125557899475098
    5. ''
' → logprob: -14.125557899475098
    6. '"' → logprob: -14.875557899475098
    7. ''o' → logprob: -15.500557899475098
    8. '')' → logprob: -15.625557899475098
    9. 'r' → logprob: -15.875557899475098
    10. ''O' → logprob: -16.12555694580078

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13461293280124664
    2. ' ' → logprob: -2.759613037109375
    3. '<|end|>' → logprob: -3.384613037109375
    4. 'A' → logprob: -4.384613037109375
    5. '  ' → logprob: -4.884613037109375
    6. '    
' → logprob: -5.759613037109375
    7. 'P' → logprob: -6.884613037109375
    8. 'class' → logprob: -7.259613037109375
    9. '<|end|>' → logprob: -7.259613037109375
    10. ''' → logprob: -7.509613037109375

Token 29: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.0006906322669237852
    2. ' X' → logprob: -7.500690460205078
    3. 'x' → logprob: -9.875690460205078
    4. ''' → logprob: -10.000690460205078
    5. '   ' → logprob: -11.875690460205078
    6. 'class' → logprob: -11.875690460205078
    7. '```' → logprob: -12.000690460205078
    8. 'I' → logprob: -12.750690460205078
    9. '`' → logprob: -13.688190460205078
    10. ' ' → logprob: -13.750690460205078

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06650009006261826
    2. '=' → logprob: -2.941500186920166
    3. ''' → logprob: -4.691500186920166
    4. ' ' → logprob: -7.066500186920166
    5. '   ' → logprob: -7.816500186920166
    6. ' ='' → logprob: -8.066499710083008
    7. '='' → logprob: -8.066499710083008
    8. '<|end|>' → logprob: -8.191499710083008
    9. '  ' → logprob: -9.691499710083008
    10. ' '' → logprob: -10.316499710083008

Token 31: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12132076174020767
    2. ''x' → logprob: -2.3713207244873047
    3. ' '' → logprob: -3.8713207244873047
    4. 'x' → logprob: -10.246320724487305
    5. ' x' → logprob: -11.871320724487305
    6. ' ' → logprob: -12.121320724487305
    7. ''s' → logprob: -12.246320724487305
    8. ''o' → logprob: -12.996320724487305
    9. '   ' → logprob: -13.621320724487305
    10. '"' → logprob: -13.621320724487305

Token 32: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16059038043022156
    2. ''x' → logprob: -1.910590410232544
    3. '"x' → logprob: -8.285590171813965
    4. ''' → logprob: -9.410590171813965
    5. ' x' → logprob: -10.910590171813965
    6. '')' → logprob: -12.660590171813965
    7. '	x' → logprob: -13.660590171813965
    8. 'X' → logprob: -13.660590171813965
    9. '_x' → logprob: -13.785590171813965
    10. '''' → logprob: -13.910590171813965

Token 33: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.8889261304575484e-06
    2. ''
' → logprob: -12.875003814697266
    3. ''''' → logprob: -14.250003814697266
    4. '"' → logprob: -15.375003814697266
    5. ''

' → logprob: -15.875003814697266
    6. ' '' → logprob: -16.500003814697266
    7. '```' → logprob: -17.375003814697266
    8. '')' → logprob: -17.750003814697266
    9. '<|end|>' → logprob: -17.750003814697266
    10. ''value' → logprob: -18.375003814697266

Token 34: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3257528245449066
    2. '<|end|>' → logprob: -1.825752854347229
    3. 'class' → logprob: -2.5757527351379395
    4. '   ' → logprob: -4.2007527351379395
    5. '```' → logprob: -4.7007527351379395
    6. '<|end|>' → logprob: -5.3257527351379395
    7. '

' → logprob: -5.7007527351379395
    8. '    
' → logprob: -5.9507527351379395
    9. ':' → logprob: -6.8257527351379395
    10. ' ' → logprob: -7.0757527351379395

Token 35: ' S' (ID: 336)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3691008388996124
    2. 'class' → logprob: -1.61910080909729
    3. '   ' → logprob: -2.99410080909729
    4. '```' → logprob: -4.369101047515869
    5. '

' → logprob: -4.744101047515869
    6. ':' → logprob: -4.744101047515869
    7. '    
' → logprob: -4.994101047515869
    8. '\n' → logprob: -4.994101047515869
    9. '
    
' → logprob: -5.619101047515869
    10. '@' → logprob: -6.244101047515869

Token 36: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1753024458885193
    2. ''s' → logprob: -2.425302505493164
    3. ' '' → logprob: -2.800302505493164
    4. ''o' → logprob: -5.425302505493164
    5. ''p' → logprob: -6.675302505493164
    6. ''x' → logprob: -6.800302505493164
    7. ''t' → logprob: -7.800302505493164
    8. ''a' → logprob: -7.800302505493164
    9. '"' → logprob: -7.925302505493164
    10. ''u' → logprob: -8.175302505493164

Token 38: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41310545802116394
    2. ''' → logprob: -1.6631054878234863
    3. 'x' → logprob: -3.1631054878234863
    4. '')' → logprob: -3.1631054878234863
    5. 'o' → logprob: -3.5381054878234863
    6. ' ')' → logprob: -4.663105487823486
    7. ''s' → logprob: -5.163105487823486
    8. ' '' → logprob: -5.163105487823486
    9. 't' → logprob: -5.913105487823486
    10. '?' → logprob: -6.288105487823486

Token 39: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.060365608893335e-05
    2. ''
' → logprob: -10.250041007995605
    3. ''

' → logprob: -12.875041007995605
    4. ''''' → logprob: -13.750041007995605
    5. '"' → logprob: -14.500041007995605
    6. ' '' → logprob: -15.375041007995605
    7. '```' → logprob: -15.875041007995605
    8. ''
' → logprob: -16.00004005432129
    9. '"'' → logprob: -16.37504005432129
    10. ''s' → logprob: -16.37504005432129

Token 40: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5109489560127258
    2. '   ' → logprob: -1.135948896408081
    3. 'class' → logprob: -3.510948896408081
    4. ':' → logprob: -4.63594913482666
    5. '    
' → logprob: -4.76094913482666
    6. '```' → logprob: -4.76094913482666
    7. '<|end|>' → logprob: -5.13594913482666
    8. ',' → logprob: -5.76094913482666
    9. '
    
' → logprob: -5.88594913482666
    10. '@' → logprob: -6.26094913482666

Token 42: ' space' (ID: 4918)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.224125862121582
    2. '<|end|>' → logprob: -2.099125862121582
    3. 'pecial' → logprob: -2.474125862121582
    4. 'ymbol' → logprob: -2.474125862121582
    5. ''s' → logprob: -2.724125862121582
    6. 't' → logprob: -3.474125862121582
    7. ')' → logprob: -3.599125862121582
    8. 'e' → logprob: -3.724125862121582
    9. '...' → logprob: -3.974125862121582
    10. 'uper' → logprob: -3.974125862121582

Token 43: '/' (ID: 14)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.842182993888855
    2. '
' → logprob: -1.092182993888855
    3. '<|end|>' → logprob: -1.967182993888855
    4. 'class' → logprob: -3.9671831130981445
    5. '```' → logprob: -4.2171831130981445
    6. ' ' → logprob: -4.2171831130981445
    7. '    
' → logprob: -4.5921831130981445
    8. '<|end|>' → logprob: -4.8421831130981445
    9. '
    
' → logprob: -5.2171831130981445
    10. '

' → logprob: -5.4671831130981445

Token 44: 'empty' (ID: 6857)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8027127981185913
    2. '

' → logprob: -1.0527127981185913
    3. 'class' → logprob: -1.9277127981185913
    4. '   ' → logprob: -4.177712917327881
    5. '```' → logprob: -4.177712917327881
    6. '
    
' → logprob: -4.677712917327881
    7. '<|end|>' → logprob: -5.302712917327881
    8. ':' → logprob: -6.302712917327881
    9. '<|end|>' → logprob: -6.427712917327881
    10. '    

' → logprob: -6.802712917327881

Token 46: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47543248534202576
    2. '

' → logprob: -1.4754325151443481
    3. 'class' → logprob: -2.1004323959350586
    4. ':' → logprob: -4.225432395935059
    5. '
    
' → logprob: -5.975432395935059
    6. '```' → logprob: -6.225432395935059
    7. '   ' → logprob: -6.600432395935059
    8. '
' → logprob: -6.725432395935059
    9. '<|end|>' → logprob: -6.975432395935059
    10. ':

' → logprob: -7.100432395935059

Token 47: ' Game' (ID: 7022)
  Prédit: ' Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.4822950065135956
    2. ' Board' → logprob: -2.107295036315918
    3. ' ABC' → logprob: -2.232295036315918
    4. ' Game' → logprob: -2.732295036315918
    5. ' Abstract' → logprob: -3.232295036315918
    6. ' Tic' → logprob: -3.732295036315918
    7. ' ' → logprob: -4.982295036315918
    8. 'Board' → logprob: -5.607295036315918
    9. 'Player' → logprob: -5.982295036315918
    10. 'ABC' → logprob: -6.232295036315918

Token 48: 'Result' (ID: 2769)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5908822417259216
    2. ':' → logprob: -0.8408822417259216
    3. 'State' → logprob: -4.465882301330566
    4. '():' → logprob: -6.340882301330566
    5. '(Abstract' → logprob: -7.090882301330566
    6. '(Board' → logprob: -8.840882301330566
    7. 'Board' → logprob: -9.215882301330566
    8. 'Logic' → logprob: -9.590882301330566
    9. 'States' → logprob: -9.715882301330566
    10. '(object' → logprob: -9.715882301330566

Token 49: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018693095073103905
    2. ':' → logprob: -4.143692970275879
    3. '(Enum' → logprob: -6.018692970275879
    4. '(enum' → logprob: -9.268692970275879
    5. '(Abstract' → logprob: -9.393692970275879
    6. '(str' → logprob: -10.518692970275879
    7. '():' → logprob: -11.893692970275879
    8. ':
' → logprob: -12.518692970275879
    9. '(Exception' → logprob: -12.893692970275879
    10. '(:' → logprob: -13.643692970275879

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024351163301616907
    2. ')' → logprob: -6.127435207366943
    3. ':' → logprob: -8.377434730529785
    4. '):
' → logprob: -11.127434730529785
    5. ',' → logprob: -12.627434730529785
    6. '>:' → logprob: -14.752434730529785
    7. ' ):' → logprob: -15.002434730529785
    8. ':)' → logprob: -15.127434730529785
    9. '>):' → logprob: -15.502434730529785
    10. '>' → logprob: -15.502434730529785

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07751937955617905
    2. ''' → logprob: -2.702519416809082
    3. '"' → logprob: -6.327519416809082
    4. 'class' → logprob: -7.202519416809082
    5. 'WIN' → logprob: -7.327519416809082
    6. ' '' → logprob: -7.577519416809082
    7. ''O' → logprob: -7.952519416809082
    8. 'Win' → logprob: -7.952519416809082
    9. '  ' → logprob: -8.202519416809082
    10. 'None' → logprob: -8.327519416809082

Token 52: ' O' (ID: 532)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8392420411109924
    2. 'DRAW' → logprob: -1.7142419815063477
    3. 'WIN' → logprob: -1.9642419815063477
    4. 'O' (adapté à ' O') → logprob: -2.4642419815063477
    5. 'D' → logprob: -3.2142419815063477
    6. 'draw' → logprob: -3.5892419815063477
    7. '   ' → logprob: -4.464241981506348
    8. 'win' → logprob: -4.464241981506348
    9. 'ONGO' → logprob: -4.589241981506348
    10. 'T' → logprob: -4.839241981506348

Token 53: '_WIN' (ID: 85616)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.0035160779953003
    2. ''' → logprob: -1.8785160779953003
    3. 'W' → logprob: -1.8785160779953003
    4. '_W' → logprob: -2.37851619720459
    5. ' =' → logprob: -2.62851619720459
    6. '_WIN' → logprob: -2.87851619720459
    7. '_win' → logprob: -3.62851619720459
    8. '_' → logprob: -4.00351619720459
    9. 'WIN' → logprob: -4.37851619720459
    10. '=' → logprob: -4.37851619720459

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31568482518196106
    2. ' =' → logprob: -1.3156847953796387
    3. '   ' → logprob: -6.315684795379639
    4. '  ' → logprob: -8.065685272216797
    5. ' ' → logprob: -8.690685272216797
    6. '_' → logprob: -10.315685272216797
    7. '='' → logprob: -10.565685272216797
    8. ',' → logprob: -10.815685272216797
    9. ''' → logprob: -11.065685272216797
    10. '    ' → logprob: -11.565685272216797

Token 55: ' '' (ID: 461)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.006941506639122963
    2. ' '' → logprob: -5.131941318511963
    3. ''' → logprob: -7.006941318511963
    4. ''O' → logprob: -9.756941795349121
    5. '"' → logprob: -11.131941795349121
    6. ''ol' → logprob: -11.131941795349121
    7. ' ' → logprob: -12.506941795349121
    8. '   ' → logprob: -12.631941795349121
    9. ''ok' → logprob: -13.256941795349121
    10. ' o' → logprob: -13.256941795349121

Token 56: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0012192860012874007
    2. 'O' → logprob: -6.876219272613525
    3. ''o' → logprob: -9.376219749450684
    4. '_o' → logprob: -10.376219749450684
    5. 'о' → logprob: -11.001219749450684
    6. '{o' → logprob: -11.626219749450684
    7. ' o' → logprob: -12.376219749450684
    8. ''' → logprob: -12.376219749450684
    9. '0' → logprob: -12.376219749450684
    10. '[o' → logprob: -12.376219749450684

Token 57: ''
' (ID: 2207)
  Prédit: '_win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.4669658839702606
    2. ''' → logprob: -1.091965913772583
    3. 'win' → logprob: -4.466965675354004
    4. '_w' → logprob: -4.466965675354004
    5. '_'' → logprob: -5.341965675354004
    6. ''_' → logprob: -5.341965675354004
    7. '_' → logprob: -5.716965675354004
    8. '')' → logprob: -7.966965675354004
    9. '-win' → logprob: -8.091965675354004
    10. 'w' → logprob: -8.091965675354004

Token 58: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5089771747589111
    2. '<|end|>' → logprob: -1.3839771747589111
    3. '   ' → logprob: -2.883977174758911
    4. '_WIN' → logprob: -4.008976936340332
    5. 'X' → logprob: -4.008976936340332
    6. 'WIN' → logprob: -4.133976936340332
    7. '<|end|>' → logprob: -4.758976936340332
    8. '
' → logprob: -4.883976936340332
    9. ' ' → logprob: -5.133976936340332
    10. '  ' → logprob: -5.258976936340332

Token 59: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.25635674595832825
    2. 'x' → logprob: -1.5063567161560059
    3. ' X' → logprob: -6.131356716156006
    4. ' x' → logprob: -7.006356716156006
    5. ' ' → logprob: -7.381356716156006
    6. '_x' → logprob: -8.631357192993164
    7. ''' → logprob: -9.131357192993164
    8. '_' → logprob: -9.381357192993164
    9. ''x' → logprob: -9.631357192993164
    10. '  ' → logprob: -9.756357192993164

Token 60: '_WIN' (ID: 85616)
  Prédit: '_win'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -0.44676655530929565
    2. '_WIN' → logprob: -1.0717666149139404
    3. '_' → logprob: -4.071766376495361
    4. '_w' → logprob: -7.821766376495361
    5. ''_' → logprob: -8.69676685333252
    6. ' _' → logprob: -9.82176685333252
    7. '<|end|>' → logprob: -9.82176685333252
    8. 'WIN' → logprob: -9.94676685333252
    9. 'win' → logprob: -10.44676685333252
    10. '_W' → logprob: -10.94676685333252

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619983896613121
    2. '=' → logprob: -2.8119983673095703
    3. '='' → logprob: -11.43699836730957
    4. '   ' → logprob: -11.81199836730957
    5. ' ='' → logprob: -11.93699836730957
    6. ' ' → logprob: -12.81199836730957
    7. ''' → logprob: -13.18699836730957
    8. '  ' → logprob: -15.06199836730957
    9. '<|end|>' → logprob: -15.18699836730957
    10. ''=' → logprob: -15.81199836730957

Token 62: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1274612545967102
    2. ''x' → logprob: -2.3774611949920654
    3. ' '' → logprob: -3.6274611949920654
    4. ' x' → logprob: -8.627461433410645
    5. 'x' → logprob: -9.627461433410645
    6. ' ' → logprob: -10.127461433410645
    7. '`' → logprob: -12.127461433410645
    8. ''s' → logprob: -12.252461433410645
    9. '"x' → logprob: -13.252461433410645
    10. '"' → logprob: -13.752461433410645

Token 63: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00012415809032972902
    2. ''x' → logprob: -9.000123977661133
    3. '"x' → logprob: -15.000123977661133
    4. ' x' → logprob: -15.500123977661133
    5. '	x' → logprob: -16.250123977661133
    6. ''' → logprob: -17.875123977661133
    7. '

' → logprob: -18.375123977661133
    8. '<x' → logprob: -19.375123977661133
    9. '```' → logprob: -19.375123977661133
    10. ')x' → logprob: -19.500123977661133

Token 64: ''
' (ID: 2207)
  Prédit: ''
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''
' → logprob: -0.5763119459152222
    2. ''' → logprob: -0.8263119459152222
    3. '   ' → logprob: -8.701312065124512
    4. '<|end|>' → logprob: -9.826312065124512
    5. ''
' → logprob: -9.951312065124512
    6. '')' → logprob: -10.701312065124512
    7. '
' → logprob: -10.826312065124512
    8. ')' → logprob: -11.326312065124512
    9. '')
' → logprob: -11.951312065124512
    10. '"' → logprob: -11.951312065124512

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006943760439753532
    2. 'DRAW' → logprob: -5.131943702697754
    3. 'T' → logprob: -7.506943702697754
    4. 'D' → logprob: -8.381943702697754
    5. ' DRAW' → logprob: -10.131943702697754
    6. ' ' → logprob: -10.256943702697754
    7. '_DRAW' → logprob: -10.381943702697754
    8. 'class' → logprob: -11.131943702697754
    9. '	D' → logprob: -11.256943702697754
    10. '  ' → logprob: -11.381943702697754

Token 66: ' DRAW' (ID: 150813)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -1.0361814498901367
    2. 'D' → logprob: -1.1611814498901367
    3. 'DRAW' (adapté à ' DRAW') → logprob: -1.2861814498901367
    4. 'S' → logprob: -4.161181449890137
    5. ''D' → logprob: -4.911181449890137
    6. ' DRAW' → logprob: -5.161181449890137
    7. 'N' → logprob: -5.536181449890137
    8. '_' → logprob: -5.661181449890137
    9. ''T' → logprob: -6.161181449890137
    10. '_DRAW' → logprob: -6.161181449890137

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892129570245743
    2. '=' → logprob: -2.578921318054199
    3. ' ' → logprob: -11.2039213180542
    4. ' ='' → logprob: -11.4539213180542
    5. '='' → logprob: -12.9539213180542
    6. '   ' → logprob: -13.2039213180542
    7. ''' → logprob: -13.4539213180542
    8. '  ' → logprob: -14.3289213180542
    9. ':' → logprob: -14.7039213180542
    10. ')' → logprob: -15.9539213180542

Token 68: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.21663326025009155
    2. ''s' → logprob: -2.2166333198547363
    3. ''' → logprob: -2.4666333198547363
    4. ''S' → logprob: -8.591632843017578
    5. ''d' → logprob: -8.591632843017578
    6. ''o' → logprob: -8.716632843017578
    7. ' '-'' → logprob: -9.591632843017578
    8. ''y' → logprob: -10.216632843017578
    9. ''n' → logprob: -10.216632843017578
    10. ' ' → logprob: -10.341632843017578

Token 69: 'd' (ID: 67)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.04017605260014534
    2. 'd' → logprob: -3.2901761531829834
    3. ''' → logprob: -6.540175914764404
    4. 'draw' → logprob: -8.040176391601562
    5. ''-' → logprob: -8.790176391601562
    6. ''s' → logprob: -9.415176391601562
    7. ''n' → logprob: -10.540176391601562
    8. '-' → logprob: -10.915176391601562
    9. ''o' → logprob: -11.415176391601562
    10. ''y' → logprob: -11.665176391601562

Token 70: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00016599490481894463
    2. ''
' → logprob: -8.750165939331055
    3. ' '' → logprob: -13.500165939331055
    4. '"' → logprob: -13.875165939331055
    5. ''d' → logprob: -14.000165939331055
    6. ''''' → logprob: -14.250165939331055
    7. ''

' → logprob: -14.250165939331055
    8. ')'' → logprob: -14.750165939331055
    9. ''
' → logprob: -14.875165939331055
    10. '')' → logprob: -15.500165939331055

Token 71: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0316401831805706
    2. '
' → logprob: -3.6566402912139893
    3. '

' → logprob: -5.28164005279541
    4. ' class' → logprob: -9.40664005279541
    5. '
' → logprob: -9.65664005279541
    6. '


' → logprob: -10.15664005279541
    7. '  
' → logprob: -11.40664005279541
    8. ' 

' → logprob: -11.78164005279541
    9. '  

' → logprob: -11.90664005279541
    10. '```' → logprob: -12.03164005279541

Token 72: ' Board' (ID: 10837)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.8962807059288025
    2. ' Tic' → logprob: -0.8962807059288025
    3. ' Board' → logprob: -1.8962807655334473
    4. ' Player' → logprob: -5.021280765533447
    5. ' ABC' → logprob: -5.021280765533447
    6. ' ' → logprob: -5.146280765533447
    7. 'Game' → logprob: -5.271280765533447
    8. 'Board' → logprob: -5.521280765533447
    9. ' Abstract' → logprob: -5.896280765533447
    10. ' Connect' → logprob: -7.396280765533447

Token 73: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06267208606004715
    2. '(' → logprob: -2.8126721382141113
    3. ':
' → logprob: -7.812672138214111
    4. '(List' → logprob: -8.937671661376953
    5. '(Abstract' → logprob: -9.562671661376953
    6. '(list' → logprob: -10.062671661376953
    7. '():' → logprob: -10.187671661376953
    8. '(object' → logprob: -12.312671661376953
    9. ' :' → logprob: -12.812671661376953
    10. '```' → logprob: -13.312671661376953

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23506340384483337
    2. ':' → logprob: -1.6100634336471558
    3. '    ' → logprob: -6.235063552856445
    4. ' def' → logprob: -6.360063552856445
    5. 'def' → logprob: -6.860063552856445
    6. ' :' → logprob: -7.235063552856445
    7. ' ' → logprob: -7.235063552856445
    8. '(' → logprob: -7.360063552856445
    9. '    
' → logprob: -7.610063552856445
    10. '  ' → logprob: -7.610063552856445

Token 75: ' SIZE' (ID: 51412)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3622668385505676
    2. 'def' → logprob: -1.2372667789459229
    3. '   ' → logprob: -4.737267017364502
    4. ' ' → logprob: -5.612267017364502
    5. '    ' → logprob: -7.862267017364502
    6. ' size' → logprob: -8.362266540527344
    7. 'size' → logprob: -9.362266540527344
    8. 'BOARD' → logprob: -9.362266540527344
    9. ' BOARD' → logprob: -9.362266540527344
    10. '_' → logprob: -9.612266540527344

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036822594702243805
    2. '=' → logprob: -5.6286821365356445
    3. '   ' → logprob: -9.628682136535645
    4. ' ' → logprob: -11.753682136535645
    5. ':' → logprob: -12.503682136535645
    6. '  ' → logprob: -12.503682136535645
    7. ' :' → logprob: -15.253682136535645
    8. '    ' → logprob: -15.253682136535645
    9. ' =)' → logprob: -15.503682136535645
    10. ' ==' → logprob: -16.25368309020996

Token 77: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05517325922846794
    2. '3' → logprob: -2.93017315864563
    3. '9' → logprob: -8.68017292022705
    4. '5' → logprob: -9.80517292022705
    5. '6' → logprob: -10.30517292022705
    6. '7' → logprob: -10.80517292022705
    7. '4' → logprob: -11.80517292022705
    8. '10' → logprob: -13.30517292022705
    9. ' ' → logprob: -14.55517292022705
    10. '8' → logprob: -14.55517292022705

Token 78: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01856941543519497
    2. ' ' → logprob: -4.268569469451904
    3. '5' → logprob: -6.268569469451904
    4. '9' → logprob: -6.268569469451904
    5. '4' → logprob: -8.643568992614746
    6. '6' → logprob: -8.768568992614746
    7. '10' → logprob: -8.893568992614746
    8. '7' → logprob: -9.893568992614746
    9. '15' → logprob: -10.143568992614746
    10. '8' → logprob: -10.393568992614746

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8421378135681152
    2. '<|end|>' → logprob: -1.2171378135681152
    3. ':' → logprob: -2.3421378135681152
    4. '    
' → logprob: -3.0921378135681152
    5. '   ' → logprob: -3.2171378135681152
    6. 'def' → logprob: -3.4671378135681152
    7. '    ' → logprob: -4.217137813568115
    8. '```' → logprob: -4.592137813568115
    9. '<|end|>' → logprob: -4.717137813568115
    10. '

' → logprob: -5.217137813568115

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3097859025001526
    2. ':' → logprob: -2.309785842895508
    3. '
' → logprob: -2.809785842895508
    4. '    
' → logprob: -3.184785842895508
    5. 'def' → logprob: -3.309785842895508
    6. ' def' → logprob: -3.809785842895508
    7. '```' → logprob: -6.434785842895508
    8. ':
' → logprob: -6.809785842895508
    9. '  
' → logprob: -6.934785842895508
    10. '   
' → logprob: -7.309785842895508

Token 81: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006178933195769787
    2. ' def' → logprob: -5.131178855895996
    3. '   ' → logprob: -8.506178855895996
    4. '```' → logprob: -11.131178855895996
    5. 'de' → logprob: -11.506178855895996
    6. ' ' → logprob: -11.506178855895996
    7. '...' → logprob: -12.756178855895996
    8. '__' → logprob: -13.131178855895996
    9. '_' → logprob: -13.381178855895996
    10. '  ' → logprob: -14.131178855895996

Token 82: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00025633294717408717
    2. ' ' → logprob: -8.500256538391113
    3. '__' → logprob: -10.625256538391113
    4. ' _' → logprob: -11.625256538391113
    5. '_init' → logprob: -11.875256538391113
    6. ' ```' → logprob: -12.125256538391113
    7. ' `' → logprob: -13.250256538391113
    8. ' ___' → logprob: -13.375256538391113
    9. ' init' → logprob: -13.375256538391113
    10. ' def' → logprob: -14.250256538391113

Token 83: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'ini' → logprob: -15.125000953674316
    3. 'in' → logprob: -15.750000953674316
    4. ' init' → logprob: -18.5
    5. 'innit' → logprob: -18.75
    6. 'inite' → logprob: -19.125
    7. 'int' → logprob: -19.75
    8. 'iter' → logprob: -20.0
    9. 'getitem' → logprob: -20.125
    10. 'i' → logprob: -20.375

Token 84: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014242718927562237
    2. '__' → logprob: -4.264242649078369
    3. '__(
' → logprob: -9.639243125915527
    4. '__('' → logprob: -12.014243125915527
    5. '__((' → logprob: -12.014243125915527
    6. '___' → logprob: -14.389243125915527
    7. '__(*' → logprob: -14.764243125915527
    8. '__("' → logprob: -15.014243125915527
    9. '_(' → logprob: -15.514243125915527
    10. '(self' → logprob: -15.764243125915527

Token 85: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007399422465823591
    2. ')' → logprob: -7.500740051269531
    3. ' self' → logprob: -8.625740051269531
    4. '):
' → logprob: -12.250740051269531
    5. ' ' → logprob: -14.000740051269531
    6. '):' → logprob: -14.625740051269531
    7. '),' → logprob: -14.625740051269531
    8. '):

' → logprob: -15.250740051269531
    9. '
' → logprob: -15.500740051269531
    10. '(self' → logprob: -15.625740051269531

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05829783156514168
    2. ' ,' → logprob: -2.933297872543335
    3. '):' → logprob: -5.933297634124756
    4. ')' → logprob: -7.808297634124756
    5. ' ):' → logprob: -8.433298110961914
    6. ' ' → logprob: -9.933298110961914
    7. ' )' → logprob: -10.183298110961914
    8. 'self' → logprob: -10.683298110961914
    9. '  ' → logprob: -12.808298110961914
    10. ',self' → logprob: -13.058298110961914

Token 87: ' cells' (ID: 11242)
  Prédit: ' board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -1.355151891708374
    2. ' cells' → logprob: -1.355151891708374
    3. ' self' → logprob: -1.980151891708374
    4. 'self' → logprob: -2.230151891708374
    5. ')' → logprob: -2.730151891708374
    6. 'cells' → logprob: -3.105151891708374
    7. ' ' → logprob: -3.605151891708374
    8. ' grid' → logprob: -4.480152130126953
    9. 'board' → logprob: -4.480152130126953
    10. '):' → logprob: -4.480152130126953

Token 88: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00040910433745011687
    2. '=None' → logprob: -8.375409126281738
    3. '=' → logprob: -9.500409126281738
    4. '):' → logprob: -9.875409126281738
    5. ' :' → logprob: -10.000409126281738
    6. ' =' → logprob: -12.750409126281738
    7. ')' → logprob: -13.125409126281738
    8. ' ):' → logprob: -13.875409126281738
    9. '=[]' → logprob: -14.750409126281738
    10. ':list' → logprob: -15.500409126281738

Token 89: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5310283303260803
    2. ' List' → logprob: -1.5310282707214355
    3. 'Optional' → logprob: -2.1560282707214355
    4. ' Optional' → logprob: -2.5310282707214355
    5. ' ' → logprob: -8.781028747558594
    6. '   ' → logprob: -9.656028747558594
    7. ')' → logprob: -10.031028747558594
    8. '[List' → logprob: -10.781028747558594
    9. '	List' → logprob: -11.531028747558594
    10. ' list' → logprob: -12.031028747558594

Token 90: '[List' (ID: 113982)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.4512651860713959
    2. '[List' → logprob: -1.3262652158737183
    3. '[' → logprob: -2.3262650966644287
    4. ')' → logprob: -10.826265335083008
    5. '[
' → logprob: -11.451265335083008
    6. '[int' → logprob: -11.576265335083008
    7. '[[' → logprob: -12.701265335083008
    8. ' [' → logprob: -13.201265335083008
    9. '```' → logprob: -13.576265335083008
    10. ' ' → logprob: -13.826265335083008

Token 91: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.008693399839103222
    2. '[' → logprob: -4.758693218231201
    3. '[int' → logprob: -9.50869369506836
    4. '[
' → logprob: -13.63369369506836
    5. 'str' → logprob: -14.00869369506836
    6. ' [' → logprob: -14.13369369506836
    7. ']' → logprob: -14.63369369506836
    8. '[List' → logprob: -14.63369369506836
    9. '```' → logprob: -15.25869369506836
    10. 'Optional' → logprob: -15.50869369506836

Token 92: 'Player' (ID: 5896)
  Prédit: 'Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.24673637747764587
    2. 'Optional' → logprob: -1.9967364072799683
    3. 'str' → logprob: -2.4967362880706787
    4. ' Player' → logprob: -7.871736526489258
    5. ' str' → logprob: -9.871736526489258
    6. ' Optional' → logprob: -10.121736526489258
    7. '	Player' → logprob: -11.871736526489258
    8. '[str' → logprob: -12.246736526489258
    9. 'player' → logprob: -12.371736526489258
    10. '   ' → logprob: -12.496736526489258

Token 93: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -5.676981345459353e-06
    2. '[str' → logprob: -12.625005722045898
    3. '[' → logprob: -14.500005722045898
    4. ' Symbol' → logprob: -15.000005722045898
    5. ']]' → logprob: -15.125005722045898
    6. ']' → logprob: -15.250005722045898
    7. '_symbol' → logprob: -15.375005722045898
    8. 'symbol' → logprob: -15.500005722045898
    9. ']])' → logprob: -16.2500057220459
    10. '_SYMBOL' → logprob: -16.5000057220459

Token 94: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.2521152198314667
    2. ']])' → logprob: -1.502115249633789
    3. ']' → logprob: -9.377115249633789
    4. ']):' → logprob: -10.002115249633789
    5. ']]]' → logprob: -10.627115249633789
    6. ']],' → logprob: -12.002115249633789
    7. '])' → logprob: -12.127115249633789
    8. ' ]' → logprob: -12.502115249633789
    9. ']])
' → logprob: -12.627115249633789
    10. '[' → logprob: -12.627115249633789

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04957594349980354
    2. ')' → logprob: -3.0495760440826416
    3. '=' → logprob: -7.5495758056640625
    4. ' ):' → logprob: -8.799575805664062
    5. ':' → logprob: -8.924575805664062
    6. ' =' → logprob: -9.424575805664062
    7. '[' → logprob: -10.549575805664062
    8. '):
' → logprob: -10.674575805664062
    9. '=None' → logprob: -10.799575805664062
    10. ']:' → logprob: -11.924575805664062

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003664404503069818
    2. 'self' → logprob: -8.6253662109375
    3. '<|end|>' → logprob: -9.8753662109375
    4. ':' → logprob: -10.0003662109375
    5. ' self' → logprob: -10.2503662109375
    6. ')' → logprob: -10.8753662109375
    7. ',' → logprob: -11.1253662109375
    8. '...' → logprob: -12.8753662109375
    9. '      ' → logprob: -13.0003662109375
    10. '   ' → logprob: -13.1253662109375

Token 97: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23017427325248718
    2. ' self' → logprob: -2.1051743030548096
    3. 'self' → logprob: -2.4801743030548096
    4. ' ' → logprob: -10.60517406463623
    5. '   ' → logprob: -11.60517406463623
    6. '	self' → logprob: -12.10517406463623
    7. ' ' → logprob: -12.85517406463623
    8. '      ' → logprob: -13.23017406463623
    9. '        ' → logprob: -13.48017406463623
    10. '	' → logprob: -13.48017406463623

Token 98: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.40493300557136536
    2. ' not' → logprob: -1.779932975769043
    3. ' cells' → logprob: -1.904932975769043
    4. 'len' → logprob: -4.654932975769043
    5. ' any' → logprob: -5.779932975769043
    6. 'cells' → logprob: -6.154932975769043
    7. 'not' → logprob: -7.654932975769043
    8. ' all' → logprob: -8.654932975769043
    9. ' ' → logprob: -9.904932975769043
    10. 'any' → logprob: -10.154932975769043

Token 99: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002477796748280525
    2. '(' → logprob: -6.002477645874023
    3. '(cell' → logprob: -13.502477645874023
    4. '(
' → logprob: -14.877477645874023
    5. '(self' → logprob: -16.502477645874023
    6. ' cells' → logprob: -16.627477645874023
    7. '(rows' → logprob: -16.752477645874023
    8. '(s' → logprob: -16.877477645874023
    9. ' (' → logprob: -17.752477645874023
    10. '(

' → logprob: -18.002477645874023

Token 100: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.0017619287827983499
    2. 'cells' → logprob: -7.0017619132995605
    3. ' ' → logprob: -8.126762390136719
    4. '   ' → logprob: -8.751762390136719
    5. '(c' → logprob: -9.251762390136719
    6. 'ell' → logprob: -9.501762390136719
    7. '```' → logprob: -10.126762390136719
    8. 'els' → logprob: -10.501762390136719
    9. ' cells' → logprob: -10.501762390136719
    10. '(' → logprob: -11.001762390136719

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01835057884454727
    2. ' )' → logprob: -4.518350601196289
    3. ')!=' → logprob: -5.268350601196289
    4. ' !=' → logprob: -6.393350601196289
    5. '[' → logprob: -8.393350601196289
    6. '!=' → logprob: -8.518350601196289
    7. ')==' → logprob: -11.518350601196289
    8. '```' → logprob: -13.018350601196289
    9. '   ' → logprob: -13.268350601196289
    10. ' ' → logprob: -13.518350601196289

Token 102: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.04317183047533035
    2. '!=' → logprob: -3.1681718826293945
    3. ' ==' → logprob: -9.668171882629395
    4. ' not' → logprob: -10.293171882629395
    5. '==' → logprob: -10.793171882629395
    6. '[' → logprob: -11.043171882629395
    7. ')' → logprob: -11.168171882629395
    8. ' ' → logprob: -11.793171882629395
    9. ')!=' → logprob: -11.793171882629395
    10. ' <' → logprob: -12.918171882629395

Token 103: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3162062168121338
    2. ' self' → logprob: -1.3162062168121338
    3. 'Board' → logprob: -6.066205978393555
    4. ' Board' → logprob: -7.441205978393555
    5. '3' → logprob: -11.316205978393555
    6. ' ' → logprob: -11.566205978393555
    7. '	self' → logprob: -12.441205978393555
    8. '0' → logprob: -13.441205978393555
    9. '(self' → logprob: -13.566205978393555
    10. '=self' → logprob: -14.316205978393555

Token 104: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.016216423362493515
    2. '.' → logprob: -4.391216278076172
    3. '.S' → logprob: -5.641216278076172
    4. ' .' → logprob: -8.891216278076172
    5. 'SIZE' → logprob: -12.391216278076172
    6. ' ' → logprob: -13.141216278076172
    7. ').' → logprob: -13.391216278076172
    8. '.NUM' → logprob: -14.266216278076172
    9. '.LENGTH' → logprob: -14.391216278076172
    10. '

' → logprob: -14.391216278076172

Token 105: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001085566938854754
    2. 'or' → logprob: -6.8760857582092285
    3. ' ' → logprob: -10.25108528137207
    4. ':' → logprob: -11.25108528137207
    5. '    ' → logprob: -14.50108528137207
    6. '  ' → logprob: -14.50108528137207
    7. '   ' → logprob: -14.50108528137207
    8. '        ' → logprob: -14.87608528137207
    9. ' and' → logprob: -14.87608528137207
    10. ' :' → logprob: -15.12608528137207

Token 106: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.01417032815515995
    2. 'any' → logprob: -4.264170169830322
    3. ' not' → logprob: -12.26417064666748
    4. ' len' → logprob: -13.51417064666748
    5. 'len' → logprob: -14.63917064666748
    6. '(any' → logprob: -16.264169692993164
    7. 'not' → logprob: -16.389169692993164
    8. '<any' → logprob: -19.764169692993164
    9. '```' → logprob: -19.889169692993164
    10. ' cualquier' → logprob: -20.139169692993164

Token 107: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0019392271060496569
    2. 'len' → logprob: -6.251939296722412
    3. ' len' → logprob: -11.626938819885254
    4. '(' → logprob: -14.376938819885254
    5. '(not' → logprob: -15.251938819885254
    6. '	len' → logprob: -15.251938819885254
    7. '   ' → logprob: -15.626938819885254
    8. 'row' → logprob: -16.25193977355957
    9. '<len' → logprob: -16.50193977355957
    10. '```' → logprob: -16.62693977355957

Token 108: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0011823695385828614
    2. 'row' → logprob: -6.751182556152344
    3. '(' → logprob: -12.376182556152344
    4. ' row' → logprob: -12.501182556152344
    5. '```' → logprob: -13.251182556152344
    6. '(r' → logprob: -14.251182556152344
    7. '	row' → logprob: -14.626182556152344
    8. '(c' → logprob: -14.751182556152344
    9. '(line' → logprob: -15.126182556152344
    10. '=row' → logprob: -15.876182556152344

Token 109: ')' (ID: 8)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3443313539028168
    2. '!=' → logprob: -1.4693313837051392
    3. ')' → logprob: -3.7193312644958496
    4. ')!=' → logprob: -3.8443312644958496
    5. '(row' → logprob: -4.84433126449585
    6. '()!=' → logprob: -5.59433126449585
    7. '(cell' → logprob: -6.09433126449585
    8. '(c' → logprob: -7.09433126449585
    9. '()' → logprob: -8.094331741333008
    10. ']!=' → logprob: -8.844331741333008

Token 110: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.07631102204322815
    2. '!=' → logprob: -2.7013111114501953
    3. '()!=' → logprob: -5.201311111450195
    4. ')!=' → logprob: -7.326311111450195
    5. '()' → logprob: -9.326311111450195
    6. ')' → logprob: -9.701311111450195
    7. ']!=' → logprob: -11.826311111450195
    8. '!=(' → logprob: -11.826311111450195
    9. ' ' → logprob: -12.326311111450195
    10. ' not' → logprob: -12.451311111450195

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759441256523132
    2. 'self' → logprob: -0.8259441256523132
    3. ' ' → logprob: -12.950943946838379
    4. '(self' → logprob: -13.575943946838379
    5. '3' → logprob: -15.200943946838379
    6. '	self' → logprob: -15.450943946838379
    7. '=self' → logprob: -15.700943946838379
    8. '
' → logprob: -15.950943946838379
    9. '<|end|>' → logprob: -16.700944900512695
    10. '[self' → logprob: -17.450944900512695

Token 112: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.0010390023235231638
    2. '.' → logprob: -7.626039028167725
    3. 'SIZE' → logprob: -7.751039028167725
    4. ' .' → logprob: -9.126038551330566
    5. '
' → logprob: -12.501038551330566
    6. '   ' → logprob: -13.001038551330566
    7. ' ' → logprob: -13.626038551330566
    8. ' SIZE' → logprob: -13.876038551330566
    9. '       ' → logprob: -14.251038551330566
    10. '```' → logprob: -14.376038551330566

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0010209017200395465
    2. 'for' → logprob: -7.001020908355713
    3. ' ' → logprob: -9.251020431518555
    4. ' or' → logprob: -11.751020431518555
    5. ')' → logprob: -12.376020431518555
    6. '    ' → logprob: -14.751020431518555
    7. '   ' → logprob: -15.751020431518555
    8. '  ' → logprob: -16.001020431518555
    9. ' )' → logprob: -16.001020431518555
    10. '           ' → logprob: -16.376020431518555

Token 114: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -4.2987729102605954e-05
    2. 'row' → logprob: -10.875042915344238
    3. ' ' → logprob: -11.625042915344238
    4. '	row' → logprob: -12.000042915344238
    5. ' cell' → logprob: -12.500042915344238
    6. '(row' → logprob: -12.875042915344238
    7. ' cells' → logprob: -13.375042915344238
    8. '<|end|>' → logprob: -15.250042915344238
    9. '<|end|>' → logprob: -15.375042915344238
    10. ',row' → logprob: -15.500042915344238

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001428928691893816
    2. 'in' → logprob: -6.626429080963135
    3. ' cells' → logprob: -9.501428604125977
    4. 'cells' → logprob: -11.251428604125977
    5. ' ' → logprob: -11.751428604125977
    6. ')' → logprob: -13.251428604125977
    7. 'row' → logprob: -13.876428604125977
    8. '.cells' → logprob: -13.876428604125977
    9. ' row' → logprob: -14.001428604125977
    10. '(row' → logprob: -14.251428604125977

Token 116: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.3869049549102783
    2. ' cells' → logprob: -1.1369049549102783
    3. 'rows' → logprob: -11.1369047164917
    4. 'row' → logprob: -12.0119047164917
    5. '.cells' → logprob: -12.5119047164917
    6. ' ' → logprob: -13.2619047164917
    7. ' row' → logprob: -13.2619047164917
    8. 'cell' → logprob: -13.3869047164917
    9. ')' → logprob: -14.0119047164917
    10. '```' → logprob: -14.3869047164917

Token 117: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00998662132769823
    2. '):
' → logprob: -5.384986400604248
    3. ' ):' → logprob: -5.384986400604248
    4. ':' → logprob: -7.509986400604248
    5. ')' → logprob: -9.384986877441406
    6. '       ' → logprob: -10.009986877441406
    7. ' or' → logprob: -10.259986877441406
    8. ' ):
' → logprob: -10.509986877441406
    9. '   ' → logprob: -11.134986877441406
    10. '           ' → logprob: -12.634986877441406

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3275279700756073
    2. ':' → logprob: -1.3275279998779297
    3. ':
' → logprob: -4.57752799987793
    4. '):' → logprob: -6.07752799987793
    5. '       ' → logprob: -7.95252799987793
    6. ' :' → logprob: -8.07752799987793
    7. ' raise' → logprob: -8.57752799987793
    8. '):
' → logprob: -8.70252799987793
    9. ',' → logprob: -9.32752799987793
    10. ':return' → logprob: -9.32752799987793

Token 119: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4960944354534149
    2. '           ' → logprob: -0.9960944652557373
    3. 'raise' (adapté à ' raise') → logprob: -5.121094226837158
    4. '            ' → logprob: -5.246094226837158
    5. ' ' → logprob: -5.621094226837158
    6. ' 
' → logprob: -5.871094226837158
    7. '            
' → logprob: -6.496094226837158
    8. '               ' → logprob: -7.621094226837158
    9. ' ' → logprob: -8.121094703674316
    10. ')' → logprob: -8.121094703674316

Token 120: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -4.870950215263292e-05
    2. ' ' → logprob: -10.125048637390137
    3. 'Value' → logprob: -12.250048637390137
    4. ' Val' → logprob: -12.625048637390137
    5. '	Value' → logprob: -14.875048637390137
    6. ' ' → logprob: -16.375049591064453
    7. ' Va' → logprob: -16.625049591064453
    8. ' value' → logprob: -16.750049591064453
    9. '(Value' → logprob: -17.500049591064453
    10. '_Value' → logprob: -18.250049591064453

Token 121: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.014194886200129986
    2. 'rror' → logprob: -4.264194965362549
    3. 'Argument' → logprob: -11.51419448852539
    4. 'n' → logprob: -11.51419448852539
    5. 'Value' → logprob: -12.13919448852539
    6. 'ror' → logprob: -12.38919448852539
    7. 'r' → logprob: -14.51419448852539
    8. 'LError' → logprob: -15.01419448852539
    9. 'tor' → logprob: -15.38919448852539
    10. 'nit' → logprob: -15.63919448852539

Token 122: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.013643765822052956
    2. '(' → logprob: -4.388643741607666
    3. '('' → logprob: -7.013643741607666
    4. '(
' → logprob: -8.388644218444824
    5. '(f' → logprob: -13.263644218444824
    6. '       ' → logprob: -13.388644218444824
    7. '   ' → logprob: -14.013644218444824
    8. '"' → logprob: -14.013644218444824
    9. ' ' → logprob: -14.638644218444824
    10. '           ' → logprob: -15.013644218444824

Token 123: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.6764424443244934
    2. ' Board' → logprob: -1.1764423847198486
    3. 'Invalid' → logprob: -1.8014423847198486
    4. ' Invalid' → logprob: -4.801442623138428
    5. 'Cells' → logprob: -5.676442623138428
    6. '"' → logprob: -5.801442623138428
    7. 'Incorrect' → logprob: -7.676442623138428
    8. ' cells' → logprob: -7.801442623138428
    9. ''' → logprob: -7.801442623138428
    10. ' Cells' → logprob: -7.926442623138428

Token 124: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.677939772605896
    2. ' size' → logprob: -1.427939772605896
    3. ' dimensions' → logprob: -1.677939772605896
    4. ' cells' → logprob: -2.8029398918151855
    5. ' ' → logprob: -5.8029398918151855
    6. ' dimension' → logprob: -7.3029398918151855
    7. ' rows' → logprob: -7.6779398918151855
    8. ' is' → logprob: -8.052939414978027
    9. ' sizes' → logprob: -8.552939414978027
    10. 'size' → logprob: -8.677939414978027

Token 125: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08620677888393402
    2. ' have' → logprob: -2.5862066745758057
    3. 'have' → logprob: -5.461206912994385
    4. 'be' → logprob: -5.961206912994385
    5. ' ' → logprob: -8.461206436157227
    6. ' contain' → logprob: -9.336206436157227
    7. ' consist' → logprob: -9.586206436157227
    8. '<|end|>' → logprob: -10.586206436157227
    9. ' always' → logprob: -10.711206436157227
    10. '_have' → logprob: -11.086206436157227

Token 126: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6059027910232544
    2. ' ' → logprob: -0.8559027910232544
    3. '3' → logprob: -4.105902671813965
    4. 'a' → logprob: -4.605902671813965
    5. ' of' → logprob: -5.980902671813965
    6. ' exactly' → logprob: -8.480902671813965
    7. ' square' → logprob: -9.605902671813965
    8. 'of' → logprob: -9.605902671813965
    9. '9' → logprob: -10.355902671813965
    10. '  ' → logprob: -10.355902671813965

Token 127: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.49854356050491333
    2. 'a' → logprob: -1.1235435009002686
    3. 'square' → logprob: -3.3735435009002686
    4. ' a' → logprob: -4.123543739318848
    5. ' ' → logprob: -4.998543739318848
    6. 'of' → logprob: -5.373543739318848
    7. '9' → logprob: -6.248543739318848
    8. ' square' → logprob: -6.498543739318848
    9. ' of' → logprob: -6.873543739318848
    10. 'size' → logprob: -7.623543739318848

Token 128: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.12738075852394104
    2. ' x' → logprob: -2.127380847930908
    3. ' ' → logprob: -7.877380847930908
    4. ' by' → logprob: -9.62738037109375
    5. ')x' → logprob: -12.87738037109375
    6. '-by' → logprob: -13.87738037109375
    7. ' rows' → logprob: -14.12738037109375
    8. 'by' → logprob: -14.50238037109375
    9. ' in' → logprob: -14.62738037109375
    10. '```' → logprob: -15.12738037109375

Token 129: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.008617408573627472
    2. ' ' → logprob: -4.758617401123047
    3. ' ")' → logprob: -14.258617401123047
    4. '   ' → logprob: -14.633617401123047
    5. '")' → logprob: -15.008617401123047
    6. '    ' → logprob: -15.696117401123047
    7. '  ' → logprob: -15.821117401123047
    8. ' )' → logprob: -15.821117401123047
    9. ')' → logprob: -15.821117401123047
    10. ' three' → logprob: -16.133617401123047

Token 130: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.04768601432442665
    2. ' cells' → logprob: -3.9226861000061035
    3. '.")' → logprob: -3.9226861000061035
    4. '")
' → logprob: -5.4226861000061035
    5. ' grid' → logprob: -7.1726861000061035
    6. ' ")' → logprob: -7.6726861000061035
    7. ' matrix' → logprob: -8.172685623168945
    8. '.")
' → logprob: -9.047685623168945
    9. ' boards' → logprob: -9.172685623168945
    10. '.' → logprob: -9.172685623168945

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01637369394302368
    2. '
' → logprob: -4.766373634338379
    3. '<|end|>' → logprob: -5.016373634338379
    4. '        
' → logprob: -7.266373634338379
    5. ' 
' → logprob: -9.516373634338379
    6. '   ' → logprob: -9.766373634338379
    7. ' ' → logprob: -10.016373634338379
    8. '  
' → logprob: -10.141373634338379
    9. '    
' → logprob: -10.766373634338379
    10. '        ' → logprob: -10.766373634338379

Token 132: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08972655236721039
    2. 'self' (adapté à ' self') → logprob: -3.089726448059082
    3. ' self' → logprob: -3.214726448059082
    4. '
' → logprob: -9.464726448059082
    5. '   ' → logprob: -10.589726448059082
    6. '           ' → logprob: -11.714726448059082
    7. '        
' → logprob: -12.089726448059082
    8. ' ' → logprob: -12.089726448059082
    9. '	self' → logprob: -12.214726448059082
    10. '      ' → logprob: -12.589726448059082

Token 133: '._' (ID: 2697)
  Prédit: '.cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cells' → logprob: -0.013052232563495636
    2. '.' → logprob: -4.388052463531494
    3. '._' → logprob: -7.888052463531494
    4. ' .' → logprob: -9.013051986694336
    5. '.cell' → logprob: -11.388051986694336
    6. '.c' → logprob: -11.763051986694336
    7. '.Cells' → logprob: -11.888051986694336
    8. 'cells' → logprob: -12.763051986694336
    9. '.rows' → logprob: -13.138051986694336
    10. '.data' → logprob: -13.513051986694336

Token 134: 'cells' (ID: 86975)
  Prédit: 'cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -3.380904672667384e-05
    2. '_cells' → logprob: -10.750033378601074
    3. ' cells' → logprob: -12.000033378601074
    4. '.cells' → logprob: -12.625033378601074
    5. 'board' → logprob: -13.875033378601074
    6. 'rows' → logprob: -13.875033378601074
    7. 'cell' → logprob: -14.625033378601074
    8. 'grid' → logprob: -16.50003433227539
    9. 'cel' → logprob: -16.75003433227539
    10. '```' → logprob: -17.00003433227539

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0703948512673378
    2. '=' → logprob: -2.69539475440979
    3. ' ' → logprob: -7.695394992828369
    4. ' =[' → logprob: -13.695394515991211
    5. '  ' → logprob: -14.070394515991211
    6. '<|end|>' → logprob: -15.070394515991211
    7. '[:]' → logprob: -15.320394515991211
    8. ' =
' → logprob: -15.945394515991211
    9. '[' → logprob: -16.07039451599121
    10. ',' → logprob: -16.07039451599121

Token 136: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.16428659856319427
    2. ' cells' → logprob: -2.9142866134643555
    3. ' [' → logprob: -3.2892866134643555
    4. '[c' → logprob: -3.4142866134643555
    5. '[' → logprob: -3.6642866134643555
    6. '[cell' → logprob: -7.0392866134643555
    7. '[
' → logprob: -8.289286613464355
    8. '[[' → logprob: -9.164286613464355
    9. '.cells' → logprob: -9.539286613464355
    10. '[i' → logprob: -10.789286613464355

Token 137: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 138: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33070334792137146
    2. '<|end|>' → logprob: -1.7057033777236938
    3. '   ' → logprob: -3.3307032585144043
    4. '    
' → logprob: -3.4557032585144043
    5. '<|end|>' → logprob: -4.955703258514404
    6. '

' → logprob: -5.080703258514404
    7. ' 
' → logprob: -5.580703258514404
    8. '[' → logprob: -5.705703258514404
    9. '@property' → logprob: -5.705703258514404
    10. '  
' → logprob: -6.080703258514404

Token 139: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2592640221118927
    2. '@property' → logprob: -1.8842639923095703
    3. ' def' → logprob: -2.6342639923095703
    4. '   ' → logprob: -5.63426399230957
    5. ' ' → logprob: -7.13426399230957
    6. ' @' → logprob: -8.88426399230957
    7. '@' (adapté à ' @') → logprob: -9.38426399230957
    8. '    
' → logprob: -10.75926399230957
    9. '```' → logprob: -11.13426399230957
    10. '    ' → logprob: -11.50926399230957

Token 140: 'classmethod' (ID: 64680)
  Prédit: 'property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -8.268254896393046e-05
    2. 'staticmethod' → logprob: -9.875082969665527
    3. 'abstract' → logprob: -11.000082969665527
    4. 'classmethod' → logprob: -11.250082969665527
    5. 'proper' → logprob: -14.125082969665527
    6. 'pro' → logprob: -14.875082969665527
    7. ' property' → logprob: -15.125082969665527
    8. '@property' → logprob: -16.87508201599121
    9. 'prop' → logprob: -17.87508201599121
    10. 'Property' → logprob: -19.00008201599121

Token 141: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007417201995849609
    2. ' def' → logprob: -5.13241720199585
    3. '
' → logprob: -7.25741720199585
    4. '   ' → logprob: -7.38241720199585
    5. '(' → logprob: -10.257417678833008
    6. '<|end|>' → logprob: -10.632417678833008
    7. '    
' → logprob: -11.007417678833008
    8. '(def' → logprob: -11.132417678833008
    9. '	def' → logprob: -11.132417678833008
    10. '('' → logprob: -11.382417678833008

Token 142: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004410771187394857
    2. '
' → logprob: -5.754410743713379
    3. ' def' → logprob: -6.754410743713379
    4. '    
' → logprob: -11.629410743713379
    5. '	def' → logprob: -11.754410743713379
    6. '   ' → logprob: -11.754410743713379
    7. '(' → logprob: -11.879410743713379
    8. '_def' → logprob: -12.004410743713379
    9. '(def' → logprob: -12.129410743713379
    10. 'ndef' → logprob: -12.379410743713379

Token 143: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.027217423543334007
    2. 'from' → logprob: -3.652217388153076
    3. 'classmethod' → logprob: -7.152217388153076
    4. 'staticmethod' → logprob: -9.652217864990234
    5. '
' → logprob: -10.152217864990234
    6. 'property' → logprob: -11.402217864990234
    7. ' def' → logprob: -11.527217864990234
    8. 'empty' → logprob: -13.027217864990234
    9. '  
' → logprob: -13.777217864990234
    10. 'create' → logprob: -14.027217864990234

Token 144: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8698644042015076
    2. ' empty' → logprob: -1.2448644638061523
    3. 'from' → logprob: -1.4948644638061523
    4. 'empty' → logprob: -2.9948644638061523
    5. ' create' → logprob: -4.119864463806152
    6. 'create' → logprob: -6.869864463806152
    7. ' def' → logprob: -8.119864463806152
    8. ' default' → logprob: -8.869864463806152
    9. 'def' → logprob: -9.119864463806152
    10. 'default' → logprob: -9.369864463806152

Token 145: '_string' (ID: 8609)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.23496219515800476
    2. '_' → logprob: -1.9849622249603271
    3. '_lists' → logprob: -3.234962224960327
    4. '_cells' → logprob: -4.234961986541748
    5. '_empty' → logprob: -4.609961986541748
    6. '_array' → logprob: -5.734961986541748
    7. '_flat' → logprob: -7.109961986541748
    8. '_arrays' → logprob: -7.234961986541748
    9. '_matrix' → logprob: -7.609961986541748
    10. '_iter' → logprob: -7.984961986541748

Token 146: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00016218038217630237
    2. '(' → logprob: -8.750162124633789
    3. '(
' → logprob: -13.375162124633789
    4. 'cls' → logprob: -13.750162124633789
    5. ' (' → logprob: -14.500162124633789
    6. ' cls' → logprob: -15.125162124633789
    7. '(cl' → logprob: -15.375162124633789
    8. '(clazz' → logprob: -16.25016212463379
    9. '   ' → logprob: -17.50016212463379
    10. '(c' → logprob: -18.50016212463379

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2819201946258545
    2. '(cls' → logprob: -1.4069201946258545
    3. ' ,' → logprob: -8.281920433044434
    4. '   ' → logprob: -8.531920433044434
    5. 'cls' → logprob: -9.156920433044434
    6. ' (' → logprob: -9.281920433044434
    7. ' cls' → logprob: -10.031920433044434
    8. ')(' → logprob: -10.656920433044434
    9. ')' → logprob: -10.781920433044434
    10. '(' → logprob: -11.656920433044434

Token 148: ' s' (ID: 265)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -1.1768606901168823
    2. ' board' → logprob: -1.3018606901168823
    3. 'board' → logprob: -1.6768606901168823
    4. ' cls' → logprob: -1.6768606901168823
    5. 's' → logprob: -3.801860809326172
    6. ' s' → logprob: -4.301860809326172
    7. 'string' → logprob: -5.676860809326172
    8. ' string' → logprob: -6.426860809326172
    9. '(cls' → logprob: -6.551860809326172
    10. ' cells' → logprob: -6.926860809326172

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12897160649299622
    2. '):' → logprob: -2.128971576690674
    3. ' :' → logprob: -7.628971576690674
    4. ')' → logprob: -7.628971576690674
    5. ':str' → logprob: -7.878971576690674
    6. ' ):' → logprob: -8.128972053527832
    7. '):
' → logprob: -8.628972053527832
    8. ',' → logprob: -9.253972053527832
    9. 'tring' → logprob: -10.378972053527832
    10. 's' → logprob: -11.003972053527832

Token 150: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3816433548927307
    2. ' str' → logprob: -1.256643295288086
    3. ')' → logprob: -3.756643295288086
    4. '"""' → logprob: -5.131643295288086
    5. ' ' → logprob: -7.381643295288086
    6. '"' → logprob: -7.506643295288086
    7. '"""
' → logprob: -7.756643295288086
    8. '[str' → logprob: -8.006643295288086
    9. ''' → logprob: -8.131643295288086
    10. ''s' → logprob: -8.631643295288086

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06212755665183067
    2. '):' → logprob: -2.8121275901794434
    3. ' )' → logprob: -9.312127113342285
    4. ' ):' → logprob: -10.812127113342285
    5. '):
' → logprob: -10.812127113342285
    6. '   ' → logprob: -11.437127113342285
    7. ':' → logprob: -11.812127113342285
    8. ')->' → logprob: -12.312127113342285
    9. ',' → logprob: -12.937127113342285
    10. '):
' → logprob: -13.687127113342285

Token 152: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006265374249778688
    2. ' ->' → logprob: -8.000626564025879
    3. '->' → logprob: -9.000626564025879
    4. ' :' → logprob: -9.750626564025879
    5. '):' → logprob: -10.125626564025879
    6. ')' → logprob: -10.125626564025879
    7. ':
' → logprob: -11.500626564025879
    8. '   ' → logprob: -11.625626564025879
    9. '():' → logprob: -12.875626564025879
    10. '(cls' → logprob: -13.375626564025879

Token 153: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6133835911750793
    2. '"' → logprob: -0.8633835911750793
    3. 'Optional' → logprob: -4.238383769989014
    4. ' "' → logprob: -4.488383769989014
    5. ' '' → logprob: -4.613383769989014
    6. ' Optional' → logprob: -7.988383769989014
    7. 'Board' → logprob: -8.363383293151855
    8. ''s' → logprob: -9.113383293151855
    9. 'List' → logprob: -9.363383293151855
    10. '"class' → logprob: -9.613383293151855

Token 154: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -2.3557529857498594e-05
    2. ' Board' → logprob: -10.75002384185791
    3. 'Game' → logprob: -14.12502384185791
    4. 'Boa' → logprob: -15.25002384185791
    5. 'List' → logprob: -15.37502384185791
    6. '_board' → logprob: -16.000022888183594
    7. '.Board' → logprob: -16.125022888183594
    8. 'B' → logprob: -16.375022888183594
    9. 'board' → logprob: -16.375022888183594
    10. 'Bo' → logprob: -16.500022888183594

Token 155: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.7425096035003662
    2. '):' → logprob: -0.8675096035003662
    3. ''):' → logprob: -2.367509603500366
    4. ')' → logprob: -5.617509841918945
    5. ''' → logprob: -6.742509841918945
    6. ':' → logprob: -6.867509841918945
    7. ''):
' → logprob: -6.867509841918945
    8. '')' → logprob: -6.867509841918945
    9. ')':' → logprob: -7.242509841918945
    10. '):
' → logprob: -7.617509841918945

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014585316239390522
    2. ':' → logprob: -10.50014591217041
    3. '        
' → logprob: -10.62514591217041
    4. ',' → logprob: -10.75014591217041
    5. '      ' → logprob: -11.37514591217041
    6. '        ' → logprob: -11.37514591217041
    7. '   ' → logprob: -11.87514591217041
    8. ')' → logprob: -12.12514591217041
    9. '  
' → logprob: -12.25014591217041
    10. '[' → logprob: -12.75014591217041

Token 157: ' if' (ID: 538)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.14183469116687775
    2. ' cells' → logprob: -2.2668347358703613
    3. 'rows' → logprob: -4.516834735870361
    4. '       ' → logprob: -4.766834735870361
    5. 'lines' → logprob: -5.516834735870361
    6. 'if' (adapté à ' if') → logprob: -5.766834735870361
    7. ' if' → logprob: -6.641834735870361
    8. 'return' → logprob: -8.516834259033203
    9. ' lines' → logprob: -8.891834259033203
    10. 's' → logprob: -8.891834259033203

Token 158: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0019291093340143561
    2. 'len' → logprob: -6.25192928314209
    3. '	len' → logprob: -15.37692928314209
    4. '(len' → logprob: -15.50192928314209
    5. ' not' → logprob: -17.001928329467773
    6. '[len' → logprob: -18.126928329467773
    7. '=len' → logprob: -18.876928329467773
    8. '<len' → logprob: -18.876928329467773
    9. ' ' → logprob: -19.001928329467773
    10. ',len' → logprob: -19.376928329467773

Token 159: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002814624458551407
    2. '(' → logprob: -5.877814769744873
    3. ' (' → logprob: -12.002814292907715
    4. 's' → logprob: -12.627814292907715
    5. '(
' → logprob: -16.25281524658203
    6. '<|end|>' → logprob: -16.25281524658203
    7. ' ' → logprob: -16.37781524658203
    8. '(ss' → logprob: -17.12781524658203
    9. '<|end|>' → logprob: -17.50281524658203
    10. ')' → logprob: -17.50281524658203

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18573112785816193
    2. ' !=' → logprob: -1.9357311725616455
    3. ')!=' → logprob: -4.185730934143066
    4. '!=' → logprob: -4.685730934143066
    5. ' )' → logprob: -8.185730934143066
    6. '()!=' → logprob: -8.560730934143066
    7. '()' → logprob: -8.560730934143066
    8. '<|end|>' → logprob: -10.310730934143066
    9. '!=(' → logprob: -11.810730934143066
    10. ' not' → logprob: -11.810730934143066

Token 161: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.47477173805236816
    2. '!=' → logprob: -0.9747717380523682
    3. ')!=' → logprob: -7.974771499633789
    4. '()!=' → logprob: -8.599771499633789
    5. ')' → logprob: -9.224771499633789
    6. '!=(' → logprob: -10.724771499633789
    7. ' not' → logprob: -11.474771499633789
    8. ' ' → logprob: -11.724771499633789
    9. 'not' → logprob: -11.974771499633789
    10. '```' → logprob: -12.224771499633789

Token 162: ' cls' (ID: 26133)
  Prédit: ' cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cls' → logprob: -0.7528026103973389
    2. 'cls' → logprob: -0.7528026103973389
    3. '9' → logprob: -3.377802610397339
    4. ' ' → logprob: -3.752802610397339
    5. '(cls' → logprob: -8.252802848815918
    6. ' Board' → logprob: -10.377802848815918
    7. '   ' → logprob: -11.127802848815918
    8. 'Board' → logprob: -11.502802848815918
    9. '.cls' → logprob: -12.627802848815918
    10. ' board' → logprob: -12.877802848815918

Token 163: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.023284615948796272
    2. '.' → logprob: -4.273284435272217
    3. '.S' → logprob: -4.773284435272217
    4. ' .' → logprob: -8.398284912109375
    5. ' ' → logprob: -8.898284912109375
    6. '(cls' → logprob: -9.648284912109375
    7. 'SIZE' → logprob: -9.648284912109375
    8. '.B' → logprob: -10.148284912109375
    9. '   ' → logprob: -11.273284912109375
    10. '.Board' → logprob: -11.398284912109375

Token 164: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.7639405131340027
    2. ' **' → logprob: -1.2639405727386475
    3. '**' → logprob: -1.3889405727386475
    4. '*' → logprob: -6.138940334320068
    5. ' ' → logprob: -9.513940811157227
    6. '*self' → logprob: -10.388940811157227
    7. '()' → logprob: -11.638940811157227
    8. 'cls' → logprob: -12.263940811157227
    9. '*object' → logprob: -12.263940811157227
    10. '***' → logprob: -12.888940811157227

Token 165: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0007107630372047424
    2. ' cls' → logprob: -7.250710964202881
    3. 'cl' → logprob: -15.125710487365723
    4. '3' → logprob: -15.250710487365723
    5. '(cls' → logprob: -15.750710487365723
    6. 'classmethod' → logprob: -17.37571144104004
    7. '   ' → logprob: -17.75071144104004
    8. '_cls' → logprob: -17.87571144104004
    9. '.cls' → logprob: -18.12571144104004
    10. ' ' → logprob: -18.25071144104004

Token 166: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.0025524806696921587
    2. 'SIZE' → logprob: -6.252552509307861
    3. '.S' → logprob: -7.752552509307861
    4. '.' → logprob: -8.627552032470703
    5. ' .' → logprob: -11.877552032470703
    6. '_SIZE' → logprob: -13.002552032470703
    7. '   ' → logprob: -13.002552032470703
    8. '().' → logprob: -14.127552032470703
    9. ' ' → logprob: -14.627552032470703
    10. 'S' → logprob: -14.877552032470703

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024668222293257713
    2. ':
' → logprob: -3.7746682167053223
    3. ' :' → logprob: -7.274668216705322
    4. ' or' → logprob: -7.899668216705322
    5. '):' → logprob: -8.77466869354248
    6. ':return' → logprob: -9.14966869354248
    7. ' :
' → logprob: -10.14966869354248
    8. '):
' → logprob: -10.52466869354248
    9. '       ' → logprob: -11.89966869354248
    10. '   ' → logprob: -11.89966869354248

Token 168: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21350079774856567
    2. '       ' → logprob: -1.713500738143921
    3. ':
' → logprob: -4.5885009765625
    4. ' :' → logprob: -7.5885009765625
    5. '           ' → logprob: -8.0885009765625
    6. ' or' → logprob: -8.0885009765625
    7. ':return' → logprob: -8.5885009765625
    8. ' and' → logprob: -8.9635009765625
    9. '        ' → logprob: -9.5885009765625
    10. ' :
' → logprob: -9.7135009765625

Token 169: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.006110213231295347
    2. 'raise' (adapté à ' raise') → logprob: -5.131110191345215
    3. '           ' → logprob: -9.006110191345215
    4. ' ' → logprob: -11.131110191345215
    5. ' 
' → logprob: -11.256110191345215
    6. '            ' → logprob: -11.256110191345215
    7. '	raise' → logprob: -11.506110191345215
    8. ' return' → logprob: -13.631110191345215
    9. '_raise' → logprob: -13.756110191345215
    10. '               ' → logprob: -13.756110191345215

Token 170: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.06196846812963486
    2. ' Value' → logprob: -2.8119685649871826
    3. '	Value' → logprob: -15.186968803405762
    4. ' ' → logprob: -15.311968803405762
    5. 'Length' → logprob: -16.311967849731445
    6. '_Value' → logprob: -16.311967849731445
    7. 'value' → logprob: -16.436967849731445
    8. '_value' → logprob: -17.311967849731445
    9. 'Val' → logprob: -17.436967849731445
    10. ' value' → logprob: -17.686967849731445

Token 171: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00017958412354346365
    2. 'rror' → logprob: -9.375179290771484
    3. 'Value' → logprob: -9.750179290771484
    4. 'alue' → logprob: -10.250179290771484
    5. 'al' → logprob: -14.500179290771484
    6. 'LError' → logprob: -16.000179290771484
    7. 'Length' → logprob: -16.250179290771484
    8. 'ror' → logprob: -16.500179290771484
    9. 'error' → logprob: -16.875179290771484
    10. 'n' → logprob: -17.000179290771484

Token 172: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00045081099960952997
    2. '(' → logprob: -7.750450611114502
    3. '(
' → logprob: -11.00045108795166
    4. '(f' → logprob: -12.62545108795166
    5. '('' → logprob: -17.500450134277344
    6. '(

' → logprob: -17.625450134277344
    7. '("'' → logprob: -19.750450134277344
    8. '(
' → logprob: -20.250450134277344
    9. '("
' → logprob: -20.250450134277344
    10. '()' → logprob: -20.375450134277344

Token 173: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023257708176970482
    2. ' "' → logprob: -4.148257732391357
    3. ' f' → logprob: -5.148257732391357
    4. 'f' → logprob: -7.398257732391357
    5. '("' → logprob: -8.3982572555542
    6. ''' → logprob: -8.3982572555542
    7. '(f' → logprob: -9.0232572555542
    8. '"The' → logprob: -9.5232572555542
    9. ' ' → logprob: -9.7732572555542
    10. '"B' → logprob: -11.2732572555542

Token 174: 'Input' (ID: 3275)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.3505593538284302
    2. 'Input' → logprob: -2.4755592346191406
    3. 'String' → logprob: -2.6005592346191406
    4. '"' → logprob: -2.7255592346191406
    5. 's' → logprob: -3.1005592346191406
    6. 'Invalid' → logprob: -4.225559234619141
    7. 'Length' → logprob: -4.975559234619141
    8. ' Board' → logprob: -6.350559234619141
    9. 'Expected' → logprob: -6.725559234619141
    10. ' s' → logprob: -7.100559234619141

Token 175: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.02327599748969078
    2. ' length' → logprob: -4.148275852203369
    3. ' must' → logprob: -5.273275852203369
    4. 'string' → logprob: -6.398275852203369
    5. ' s' → logprob: -8.273276329040527
    6. 'length' → logprob: -9.398276329040527
    7. ' ' → logprob: -9.898276329040527
    8. ' size' → logprob: -12.023276329040527
    9. ' should' → logprob: -12.273276329040527
    10. 's' → logprob: -12.273276329040527

Token 176: ' length' (ID: 5517)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.00393924443051219
    2. ' length' → logprob: -5.753939151763916
    3. 'must' → logprob: -7.628939151763916
    4. ' should' → logprob: -9.503939628601074
    5. 'length' → logprob: -9.753939628601074
    6. ' does' → logprob: -10.503939628601074
    7. '   ' → logprob: -10.753939628601074
    8. 'len' → logprob: -10.878939628601074
    9. '       ' → logprob: -11.128939628601074
    10. ' len' → logprob: -11.378939628601074

Token 177: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.009084849618375301
    2. ' !=' → logprob: -5.384084701538086
    3. 'must' → logprob: -5.759084701538086
    4. '!=' → logprob: -6.759084701538086
    5. ' does' → logprob: -9.509084701538086
    6. ' is' → logprob: -10.884084701538086
    7. ')' → logprob: -11.134084701538086
    8. ' should' → logprob: -11.259084701538086
    9. ')!=' → logprob: -12.384084701538086
    10. '```' → logprob: -12.884084701538086

Token 178: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.45592615008354187
    2. '=' → logprob: -2.0809261798858643
    3. '==' → logprob: -2.3309261798858643
    4. 'equal' → logprob: -2.7059261798858643
    5. ' equal' → logprob: -2.9559261798858643
    6. '<|end|>' → logprob: -4.705925941467285
    7. ' ==' → logprob: -5.205925941467285
    8. ')' → logprob: -5.955925941467285
    9. 'exact' → logprob: -6.205925941467285
    10. ' exactly' → logprob: -6.455925941467285

Token 179: ' {' (ID: 354)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6625059247016907
    2. 'cls' → logprob: -0.7875059247016907
    3. ' cls' → logprob: -3.662505865097046
    4. ' ' → logprob: -5.662506103515625
    5. '(cls' → logprob: -8.662506103515625
    6. 'classmethod' → logprob: -9.912506103515625
    7. '{' → logprob: -11.037506103515625
    8. 'equal' → logprob: -11.287506103515625
    9. 'exact' → logprob: -11.537506103515625
    10. 'Board' → logprob: -11.662506103515625

Token 180: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.004210651386529207
    2. ' cls' → logprob: -5.504210472106934
    3. '(cls' → logprob: -9.629210472106934
    4. '{' → logprob: -10.379210472106934
    5. '3' → logprob: -11.254210472106934
    6. '9' → logprob: -11.379210472106934
    7. ' ' → logprob: -12.629210472106934
    8. '   ' → logprob: -12.754210472106934
    9. '}' → logprob: -13.754210472106934
    10. 'Board' → logprob: -14.254210472106934

Token 181: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.00024965754710137844
    2. 'SIZE' → logprob: -8.750249862670898
    3. '.' → logprob: -10.125249862670898
    4. '.S' → logprob: -10.250249862670898
    5. ' .' → logprob: -11.375249862670898
    6. '   ' → logprob: -12.875249862670898
    7. '_SIZE' → logprob: -15.000249862670898
    8. ' ' → logprob: -15.125249862670898
    9. '.Size' → logprob: -15.500249862670898
    10. '.LENGTH' → logprob: -15.750249862670898

Token 182: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06243133917450905
    2. '*' → logprob: -2.8124313354492188
    3. '**' → logprob: -8.187431335449219
    4. ' **' → logprob: -8.812431335449219
    5. '*self' → logprob: -10.812431335449219
    6. ' ' → logprob: -11.937431335449219
    7. '*object' → logprob: -12.812431335449219
    8. ' *
' → logprob: -12.937431335449219
    9. '()' → logprob: -13.562431335449219
    10. '()*' → logprob: -13.687431335449219

Token 183: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0033307569101452827
    2. ' cls' → logprob: -5.753330707550049
    3. '3' → logprob: -9.253331184387207
    4. '(cls' → logprob: -9.878331184387207
    5. '9' → logprob: -12.753331184387207
    6. ' ' → logprob: -14.003331184387207
    7. '
' → logprob: -14.253331184387207
    8. '   ' → logprob: -14.753331184387207
    9. 'cl' → logprob: -14.878331184387207
    10. '

' → logprob: -15.878331184387207

Token 184: '.SIZE' (ID: 163232)
  Prédit: 'SIZE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SIZE' → logprob: -0.5830351114273071
    2. '.SIZE' → logprob: -0.8330351114273071
    3. '_SIZE' → logprob: -5.208034992218018
    4. ')' → logprob: -7.833034992218018
    5. '   ' → logprob: -8.083035469055176
    6. '
' → logprob: -8.708035469055176
    7. '.' → logprob: -9.083035469055176
    8. '*' → logprob: -9.083035469055176
    9. 'cls' → logprob: -9.458035469055176
    10. '```' → logprob: -9.958035469055176

Token 185: '}.' (ID: 16255)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.3230622410774231
    2. '}.' → logprob: -1.3230621814727783
    3. '}")
' → logprob: -5.573062419891357
    4. '},' → logprob: -5.698062419891357
    5. '}' → logprob: -6.073062419891357
    6. ' }' → logprob: -8.5730619430542
    7. '")' → logprob: -10.8230619430542
    8. ' }.' → logprob: -11.1980619430542
    9. '}:' → logprob: -11.1980619430542
    10. '.")' → logprob: -11.3230619430542

Token 186: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.22353002429008484
    2. '")' → logprob: -1.7235300540924072
    3. '       ' → logprob: -4.473529815673828
    4. ' ")
' → logprob: -5.223529815673828
    5. ''")
' → logprob: -6.348529815673828
    6. ')")
' → logprob: -6.598529815673828
    7. '")
' → logprob: -7.223529815673828
    8. ')
' → logprob: -8.348529815673828
    9. ')' → logprob: -8.598529815673828
    10. ' ")' → logprob: -8.723529815673828

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012475987896323204
    2. '        
' → logprob: -4.762475967407227
    3. '
' → logprob: -6.012475967407227
    4. '    
' → logprob: -7.887475967407227
    5. '  
' → logprob: -8.137475967407227
    6. '   ' → logprob: -8.637475967407227
    7. 'return' → logprob: -9.387475967407227
    8. 'cells' → logprob: -9.387475967407227
    9. ' 
' → logprob: -9.887475967407227
    10. ' cells' → logprob: -10.012475967407227

Token 188: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.14513452351093292
    2. ' cells' → logprob: -2.020134449005127
    3. '       ' → logprob: -6.270134449005127
    4. 'rows' → logprob: -7.645134449005127
    5. 'return' → logprob: -9.770134925842285
    6. ' rows' → logprob: -12.020134925842285
    7. ' return' → logprob: -12.020134925842285
    8. '.cells' → logprob: -12.395134925842285
    9. 'lines' → logprob: -12.520134925842285
    10. '_cells' → logprob: -12.895134925842285

Token 189: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693262100219727
    2. '=' → logprob: -2.1269326210021973
    3. '=[' → logprob: -13.001932144165039
    4. ' =[' → logprob: -13.876932144165039
    5. '=[[' → logprob: -14.751932144165039
    6. '=[]' → logprob: -14.751932144165039
    7. ' ' → logprob: -15.376932144165039
    8. ':' → logprob: -16.37693214416504
    9. 's' → logprob: -16.75193214416504
    10. ',' → logprob: -16.75193214416504

Token 190: ' List' (ID: 2655)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6938974857330322
    2. '[List' → logprob: -1.4438974857330322
    3. ' [[' → logprob: -2.1938974857330322
    4. ' =' → logprob: -3.1938974857330322
    5. '[' → logprob: -3.1938974857330322
    6. '[[' → logprob: -3.5688974857330322
    7. ' [
' → logprob: -4.193897247314453
    8. ' []' → logprob: -4.818897247314453
    9. '=' → logprob: -5.068897247314453
    10. '[
' → logprob: -5.318897247314453

Token 191: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.750009536743164
    3. '=' → logprob: -14.500009536743164
    4. '[
' → logprob: -14.625009536743164
    5. '<List' → logprob: -15.625009536743164
    6. '[[' → logprob: -16.250009536743164
    7. '[list' → logprob: -17.375009536743164
    8. ' =' → logprob: -18.750009536743164
    9. '
' → logprob: -18.875009536743164
    10. 'List' → logprob: -19.250009536743164

Token 192: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[
' → logprob: -14.375001907348633
    3. '[player' → logprob: -14.875001907348633
    4. ']' → logprob: -15.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. '<Player' → logprob: -16.250001907348633
    7. '[int' → logprob: -16.500001907348633
    8. '
' → logprob: -16.875001907348633
    9. ' [' → logprob: -16.875001907348633
    10. 'Player' → logprob: -16.875001907348633

Token 193: 'Player' (ID: 5896)
  Prédit: 'Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -1.9862216504407115e-05
    2. ' Player' → logprob: -10.875020027160645
    3. 'Optional' → logprob: -14.750020027160645
    4. '	Player' → logprob: -15.000020027160645
    5. 'player' → logprob: -17.000019073486328
    6. '<Player' → logprob: -17.375019073486328
    7. '_Player' → logprob: -17.375019073486328
    8. '   ' → logprob: -18.250019073486328
    9. 'Patient' → logprob: -18.750019073486328
    10. 'User' → logprob: -19.125019073486328

Token 194: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -0.00044092073221690953
    2. '[' → logprob: -7.750441074371338
    3. '[str' → logprob: -12.37544059753418
    4. 'Optional' → logprob: -13.12544059753418
    5. '(Symbol' → logprob: -14.00044059753418
    6. 'Symbols' → logprob: -14.50044059753418
    7. 'Option' → logprob: -14.87544059753418
    8. '[
' → logprob: -15.00044059753418
    9. ' Symbol' → logprob: -15.00044059753418
    10. '[[' → logprob: -15.50044059753418

Token 195: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -1.1160349458805285e-05
    2. ']]=' → logprob: -12.125011444091797
    3. ']' → logprob: -13.250011444091797
    4. ']]
' → logprob: -13.875011444091797
    5. ')]' → logprob: -14.000011444091797
    6. ' ]]' → logprob: -14.125011444091797
    7. ']]]' → logprob: -14.375011444091797
    8. '']]' → logprob: -14.750011444091797
    9. '"]]' → logprob: -15.875011444091797
    10. '[' → logprob: -16.125011444091797

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.600208282470703
    4. '   ' → logprob: -14.725208282470703
    5. '[' → logprob: -15.350208282470703
    6. '=[]' → logprob: -15.475208282470703
    7. ' =[' → logprob: -16.100208282470703
    8. '    ' → logprob: -16.225208282470703
    9. ')' → logprob: -16.475208282470703
    10. ']' → logprob: -16.850208282470703

Token 197: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.1206957995891571
    2. '[
' → logprob: -2.6206958293914795
    3. ' [[' → logprob: -3.3706958293914795
    4. '[' → logprob: -5.6206955909729
    5. ' [
' → logprob: -6.1206955909729
    6. ' [' → logprob: -7.6206955909729
    7. '[]
' → logprob: -8.495696067810059
    8. '[]' → logprob: -10.245696067810059
    9. '[['' → logprob: -11.745696067810059
    10. '[s' → logprob: -12.495696067810059

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022052325308322906
    2. ' for' → logprob: -3.89705228805542
    3. 'for' → logprob: -6.52205228805542
    4. '   ' → logprob: -10.647052764892578
    5. ',' → logprob: -12.897052764892578
    6. '
' → logprob: -13.022052764892578
    7. '	for' → logprob: -13.272052764892578
    8. ')' → logprob: -13.522052764892578
    9. '           ' → logprob: -13.522052764892578
    10. '        
' → logprob: -13.647052764892578

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10356175154447556
    2. ' for' → logprob: -2.3535616397857666
    3. '       ' → logprob: -5.728561878204346
    4. '   ' → logprob: -9.353561401367188
    5. '	for' → logprob: -11.478561401367188
    6. ' ' → logprob: -14.728561401367188
    7. '
' → logprob: -16.228561401367188
    8. 'i' → logprob: -16.228561401367188
    9. '           ' → logprob: -17.103561401367188
    10. '[' → logprob: -17.103561401367188

Token 200: ' r' (ID: 428)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029796656221151352
    2. ' i' → logprob: -3.529796600341797
    3. '   ' → logprob: -10.404796600341797
    4. 'row' → logprob: -11.904796600341797
    5. ' ' → logprob: -12.404796600341797
    6. ' row' → logprob: -12.779796600341797
    7. '_i' → logprob: -13.779796600341797
    8. 'r' → logprob: -15.029796600341797
    9. '  ' → logprob: -15.529796600341797
    10. '	i' → logprob: -15.529796600341797

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003269453067332506
    2. 'in' → logprob: -5.753269672393799
    3. 'ange' → logprob: -10.12826919555664
    4. ' ' → logprob: -10.25326919555664
    5. 'n' → logprob: -11.62826919555664
    6. 'i' → logprob: -13.12826919555664
    7. ' i' → logprob: -13.62826919555664
    8. '   ' → logprob: -13.87826919555664
    9. ',' → logprob: -14.50326919555664
    10. 'range' → logprob: -14.50326919555664

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132841885089874
    2. ' range' → logprob: -1.313284158706665
    3. ' ' → logprob: -11.188283920288086
    4. '   ' → logprob: -12.188283920288086
    5. '	range' → logprob: -13.438283920288086
    6. '  ' → logprob: -13.813283920288086
    7. '(range' → logprob: -14.938283920288086
    8. '    ' → logprob: -15.063283920288086
    9. 's' → logprob: -16.438283920288086
    10. 'rang' → logprob: -16.563283920288086

Token 203: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -8.41129949549213e-05
    2. '(' → logprob: -9.750083923339844
    3. '(Board' → logprob: -11.000083923339844
    4. 'cls' → logprob: -11.750083923339844
    5. '(cl' → logprob: -14.250083923339844
    6. '(
' → logprob: -14.750083923339844
    7. '(B' → logprob: -17.250083923339844
    8. '   ' → logprob: -17.375083923339844
    9. ' cls' → logprob: -17.500083923339844
    10. '(classes' → logprob: -17.625083923339844

Token 204: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.0016224568244069815
    2. 'SIZE' → logprob: -6.501622676849365
    3. '.' → logprob: -9.501622200012207
    4. '.S' → logprob: -10.751622200012207
    5. '   ' → logprob: -11.126622200012207
    6. ' .' → logprob: -12.251622200012207
    7. '
' → logprob: -13.626622200012207
    8. '_SIZE' → logprob: -14.251622200012207
    9. ' ' → logprob: -14.626622200012207
    10. '.
' → logprob: -15.001622200012207

Token 205: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3132933974266052
    2. '):' → logprob: -1.31329345703125
    3. '):
' → logprob: -10.81329345703125
    4. ' ):' → logprob: -12.43829345703125
    5. ' ):
' → logprob: -12.68829345703125
    6. '   ' → logprob: -12.68829345703125
    7. ')' → logprob: -14.43829345703125
    8. ':' → logprob: -15.18829345703125
    9. '):

' → logprob: -15.43829345703125
    10. '       ' → logprob: -15.93829345703125

Token 206: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016776198521256447
    2. '           ' → logprob: -4.391776084899902
    3. ' cells' → logprob: -5.891776084899902
    4. 'cells' → logprob: -7.391776084899902
    5. '        ' → logprob: -8.391776084899902
    6. '<|end|>' → logprob: -8.766776084899902
    7. '.cells' → logprob: -9.516776084899902
    8. '   ' → logprob: -9.516776084899902
    9. '	       ' → logprob: -9.766776084899902
    10. ')' → logprob: -10.016776084899902

Token 207: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.8707990646362305
    2. ' row' → logprob: -1.1207990646362305
    3. '           ' → logprob: -1.3707990646362305
    4. '   ' → logprob: -6.9957990646362305
    5. 'cells' → logprob: -8.87079906463623
    6. ' cells' → logprob: -9.12079906463623
    7. 'rows' → logprob: -9.24579906463623
    8. ' ' → logprob: -9.74579906463623
    9. '	row' → logprob: -9.74579906463623
    10. '       ' → logprob: -10.12079906463623

Token 208: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6948587894439697
    2. ' =' → logprob: -0.6948587894439697
    3. '=[]' → logprob: -6.569858551025391
    4. '.append' → logprob: -9.06985855102539
    5. '_cells' → logprob: -9.19485855102539
    6. 'cells' → logprob: -10.94485855102539
    7. 's' → logprob: -11.06985855102539
    8. ' ' → logprob: -11.31985855102539
    9. ':' → logprob: -11.56985855102539
    10. '_' → logprob: -11.69485855102539

Token 209: ' list' (ID: 1562)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.4133465588092804
    2. '[' → logprob: -1.538346529006958
    3. ' [' → logprob: -2.288346529006958
    4. '[
' → logprob: -5.038346767425537
    5. '[]' → logprob: -5.413346767425537
    6. '[List' → logprob: -5.538346767425537
    7. '[]
' → logprob: -5.788346767425537
    8. '[c' → logprob: -6.288346767425537
    9. '[cell' → logprob: -6.913346767425537
    10. '[list' → logprob: -7.913346767425537

Token 210: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.24057871103286743
    2. '(map' → logprob: -1.6155786514282227
    3. '(Player' → logprob: -4.365578651428223
    4. '(' → logprob: -6.240578651428223
    5. 'map' → logprob: -9.240578651428223
    6. 's' → logprob: -9.240578651428223
    7. '(filter' → logprob: -10.365578651428223
    8. '[' → logprob: -10.490578651428223
    9. '[s' → logprob: -10.740578651428223
    10. '(cls' → logprob: -10.740578651428223

Token 211: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0024014587979763746
    2. '[' → logprob: -6.502401351928711
    3. '[(' → logprob: -7.127401351928711
    4. ')[' → logprob: -10.252401351928711
    5. '[
' → logprob: -10.752401351928711
    6. '(r' → logprob: -11.127401351928711
    7. '   ' → logprob: -11.752401351928711
    8. ')' → logprob: -12.502401351928711
    9. '[s' → logprob: -12.502401351928711
    10. '[c' → logprob: -12.627401351928711

Token 212: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2254529595375061
    2. ' *' → logprob: -1.6004528999328613
    3. '*r' → logprob: -11.22545337677002
    4. '   ' → logprob: -11.72545337677002
    5. '*(' → logprob: -11.85045337677002
    6. '(cls' → logprob: -12.72545337677002
    7. ' ' → logprob: -12.97545337677002
    8. '*self' → logprob: -13.22545337677002
    9. 'cls' → logprob: -13.35045337677002
    10. '(' → logprob: -14.60045337677002

Token 213: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.0014598811976611614
    2. '3' → logprob: -6.626460075378418
    3. '(cls' → logprob: -9.751460075378418
    4. ' cls' → logprob: -9.751460075378418
    5. '
' → logprob: -11.876460075378418
    6. '9' → logprob: -12.126460075378418
    7. '   ' → logprob: -13.501460075378418
    8. 'Board' → logprob: -13.626460075378418
    9. 'cl' → logprob: -14.251460075378418
    10. 'class' → logprob: -15.251460075378418

Token 214: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.08913478255271912
    2. 'SIZE' → logprob: -2.464134693145752
    3. '3' → logprob: -9.71413516998291
    4. '.S' → logprob: -9.96413516998291
    5. '_SIZE' → logprob: -10.08913516998291
    6. '.' → logprob: -10.83913516998291
    7. ' SIZE' → logprob: -11.08913516998291
    8. '.Size' → logprob: -12.46413516998291
    9. '   ' → logprob: -12.96413516998291
    10. '.size' → logprob: -13.83913516998291

Token 215: ':(' (ID: 7990)
  Prédit: ':('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.060108620673418045
    2. ':' → logprob: -3.8101086616516113
    3. ' :' → logprob: -3.8101086616516113
    4. '(r' → logprob: -4.935108661651611
    5. ':r' → logprob: -5.310108661651611
    6. ' :(' → logprob: -6.435108661651611
    7. ' (' → logprob: -8.435108184814453
    8. ' ' → logprob: -10.435108184814453
    9. '   ' → logprob: -10.685108184814453
    10. '(' → logprob: -11.560108184814453

Token 216: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5213274309644476e-05
    2. '(r' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.375015258789062
    4. ' r' → logprob: -16.500015258789062
    5. '_r' → logprob: -17.625015258789062
    6. ' (' → logprob: -18.625015258789062
    7. '	r' → logprob: -18.875015258789062
    8. '```' → logprob: -19.125015258789062
    9. '

' → logprob: -19.500015258789062
    10. '{' → logprob: -19.625015258789062

Token 217: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004960790392942727
    2. ' +' → logprob: -7.875495910644531
    3. '+r' → logprob: -9.500495910644531
    4. '*r' → logprob: -10.625495910644531
    5. 'r' → logprob: -11.250495910644531
    6. ')' → logprob: -13.500495910644531
    7. '*' → logprob: -14.250495910644531
    8. '(r' → logprob: -14.625495910644531
    9. '   ' → logprob: -15.000495910644531
    10. ')*' → logprob: -15.125495910644531

Token 218: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.47934025526046753
    2. '1' → logprob: -0.9793402552604675
    3. 'cls' → logprob: -5.729340076446533
    4. '(r' → logprob: -6.479340076446533
    5. '(' → logprob: -9.104340553283691
    6. '(cls' → logprob: -9.354340553283691
    7. ')' → logprob: -9.479340553283691
    8. '   ' → logprob: -9.729340553283691
    9. ' ' → logprob: -10.479340553283691
    10. ' r' → logprob: -10.854340553283691

Token 219: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.002195933135226369
    2. ')' → logprob: -6.127195835113525
    3. '*' → logprob: -11.877196311950684
    4. ']*' → logprob: -12.752196311950684
    5. ')*(' → logprob: -15.502196311950684
    6. ' ' → logprob: -15.877196311950684
    7. ' )' → logprob: -15.877196311950684
    8. 'cls' → logprob: -16.002195358276367
    9. '(cls' → logprob: -16.127195358276367
    10. '   ' → logprob: -16.252195358276367

Token 220: 'cls' (ID: 36071)
  Prédit: 'cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -3.7697225252486533e-06
    2. ' cls' → logprob: -12.750003814697266
    3. '(cls' → logprob: -14.375003814697266
    4. '.cls' → logprob: -16.500003814697266
    5. 'cl' → logprob: -16.625003814697266
    6. 'class' → logprob: -16.875003814697266
    7. '
' → logprob: -17.125003814697266
    8. '_cls' → logprob: -17.250003814697266
    9. 'classmethod' → logprob: -17.500003814697266
    10. '   ' → logprob: -17.875003814697266

Token 221: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.43064308166503906
    2. 'SIZE' → logprob: -1.055643081665039
    3. '_SIZE' → logprob: -7.305643081665039
    4. '   ' → logprob: -7.805643081665039
    5. ')' → logprob: -8.055643081665039
    6. '.' → logprob: -8.805643081665039
    7. '.S' → logprob: -9.680643081665039
    8. ']' → logprob: -9.680643081665039
    9. '       ' → logprob: -10.180643081665039
    10. '])' → logprob: -10.180643081665039

Token 222: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.013339038006961346
    2. '])
' → logprob: -4.388339042663574
    3. ' ])' → logprob: -7.388339042663574
    4. ']' → logprob: -8.888339042663574
    5. ' ])
' → logprob: -10.763339042663574
    6. '],' → logprob: -10.888339042663574
    7. ')' → logprob: -12.013339042663574
    8. '           ' → logprob: -12.138339042663574
    9. '       ' → logprob: -12.138339042663574
    10. '])
' → logprob: -12.388339042663574

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.575563020305708e-05
    2. ' cells' → logprob: -10.625065803527832
    3. ')' → logprob: -11.000065803527832
    4. ',' → logprob: -11.500065803527832
    5. 'cells' → logprob: -12.375065803527832
    6. '.cells' → logprob: -12.375065803527832
    7. '               ' → logprob: -13.250065803527832
    8. '       ' → logprob: -13.750065803527832
    9. '<|end|>' → logprob: -14.500065803527832
    10. 'Cells' → logprob: -15.250065803527832

Token 224: ' #' (ID: 1069)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.47607582807540894
    2. ' cells' → logprob: -1.1010758876800537
    3. '       ' → logprob: -3.1010758876800537
    4. ' for' → logprob: -7.851075649261475
    5. '.cells' → logprob: -7.976075649261475
    6. 'for' → logprob: -8.226076126098633
    7. '           ' → logprob: -9.351076126098633
    8. '
' → logprob: -9.851076126098633
    9. ' if' → logprob: -10.226076126098633
    10. 'rows' → logprob: -10.476076126098633

Token 225: ' Validate' (ID: 41366)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.5804163813591003
    2. 'cells' → logprob: -0.9554163813591003
    3. ' for' → logprob: -4.080416202545166
    4. 'for' → logprob: -4.080416202545166
    5. '           ' → logprob: -5.080416202545166
    6. '       ' → logprob: -5.205416202545166
    7. 'if' → logprob: -5.330416202545166
    8. ' if' → logprob: -5.455416202545166
    9. 'row' → logprob: -8.455416679382324
    10. '.cells' → logprob: -8.580416679382324

Token 226: ' characters' (ID: 9862)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.041737157851457596
    2. '           ' → logprob: -3.7917370796203613
    3. 'for' → logprob: -4.166737079620361
    4. ' if' → logprob: -5.916737079620361
    5. 'if' → logprob: -10.04173755645752
    6. ' ' → logprob: -10.54173755645752
    7. ')' → logprob: -11.41673755645752
    8. ' that' → logprob: -11.66673755645752
    9. '[' → logprob: -11.91673755645752
    10. '            ' → logprob: -12.54173755645752

Token 227: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013445374555885792
    2. ' for' → logprob: -4.3884453773498535
    3. 'for' → logprob: -7.7634453773498535
    4. ',' → logprob: -8.763444900512695
    5. '       ' → logprob: -9.013444900512695
    6. ' ' → logprob: -9.888444900512695
    7. '<|end|>' → logprob: -9.888444900512695
    8. ')' → logprob: -10.513444900512695
    9. ' if' → logprob: -11.138444900512695
    10. '   ' → logprob: -11.388444900512695

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07397100329399109
    2. ' for' → logprob: -2.6989710330963135
    3. '       ' → logprob: -6.323970794677734
    4. 'for' → logprob: -6.573970794677734
    5. '<|end|>' → logprob: -8.448970794677734
    6. ',' → logprob: -8.573970794677734
    7. ' if' → logprob: -9.073970794677734
    8. ' ' → logprob: -9.698970794677734
    9. '   ' → logprob: -10.198970794677734
    10. '            
' → logprob: -10.573970794677734

Token 229: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.621620774269104
    2. 'for' (adapté à ' for') → logprob: -1.496620774269104
    3. '           ' → logprob: -1.496620774269104
    4. ' if' → logprob: -4.3716206550598145
    5. 'if' → logprob: -5.9966206550598145
    6. '       ' → logprob: -10.871621131896973
    7. 'assert' → logprob: -12.496621131896973
    8. '
' → logprob: -12.746621131896973
    9. '[' → logprob: -12.996621131896973
    10. '   ' → logprob: -13.621621131896973

Token 230: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10901307314634323
    2. 'i' → logprob: -3.109013080596924
    3. ' c' → logprob: -3.234013080596924
    4. 'ch' → logprob: -4.484013080596924
    5. ' i' → logprob: -5.109013080596924
    6. ' ch' → logprob: -6.609013080596924
    7. 'cell' → logprob: -7.859013080596924
    8. ' cell' → logprob: -9.484012603759766
    9. 'idx' → logprob: -9.859012603759766
    10. ' idx' → logprob: -10.984012603759766

Token 231: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04995126649737358
    2. 'in' → logprob: -3.0499513149261475
    3. ' ' → logprob: -6.924951076507568
    4. ',' → logprob: -9.174951553344727
    5. 'n' → logprob: -9.549951553344727
    6. ' i' → logprob: -10.299951553344727
    7. '           ' → logprob: -10.549951553344727
    8. '  ' → logprob: -11.049951553344727
    9. '   ' → logprob: -11.049951553344727
    10. '_' → logprob: -11.174951553344727

Token 232: ' row' (ID: 5225)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6836715340614319
    2. 'row' → logprob: -0.8086715340614319
    3. ' range' → logprob: -3.183671474456787
    4. ' row' → logprob: -4.808671474456787
    5. 'r' → logprob: -9.433671951293945
    6. ' ' → logprob: -9.933671951293945
    7. '   ' → logprob: -11.808671951293945
    8. '
' → logprob: -12.183671951293945
    9. ')' → logprob: -12.558671951293945
    10. ' r' → logprob: -12.621171951293945

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08250509947538376
    2. ':
' → logprob: -2.582504987716675
    3. '               ' → logprob: -6.082505226135254
    4. '           ' → logprob: -7.457505226135254
    5. ' :' → logprob: -8.207505226135254
    6. ' if' → logprob: -9.332505226135254
    7. ' :
' → logprob: -9.582505226135254
    8. ' in' → logprob: -10.082505226135254
    9. '            ' → logprob: -10.207505226135254
    10. ',' → logprob: -10.332505226135254

Token 234: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38018929958343506
    2. '               ' → logprob: -2.1301894187927246
    3. 'if' → logprob: -2.2551894187927246
    4. ' if' → logprob: -2.3801894187927246
    5. '       ' → logprob: -11.255188941955566
    6. 'assert' → logprob: -11.630188941955566
    7. '            ' → logprob: -11.880188941955566
    8. 'raise' → logprob: -12.005188941955566
    9. '	           ' → logprob: -12.130188941955566
    10. '		       ' → logprob: -12.505188941955566

Token 235: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12704633176326752
    2. ' if' → logprob: -2.1270463466644287
    3. '               ' → logprob: -9.627046585083008
    4. '           ' → logprob: -10.002046585083008
    5. 'assert' → logprob: -12.502046585083008
    6. '                   ' → logprob: -13.252046585083008
    7. '   ' → logprob: -14.252046585083008
    8. '	if' → logprob: -15.002046585083008
    9. ' ' → logprob: -15.752046585083008
    10. '
' → logprob: -16.252046585083008

Token 236: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004079589620232582
    2. ' c' → logprob: -5.504079818725586
    3. '               ' → logprob: -14.004079818725586
    4. '                   ' → logprob: -15.504079818725586
    5. '                ' → logprob: -17.004079818725586
    6. ' not' → logprob: -17.504079818725586
    7. 'not' → logprob: -17.629079818725586
    8. '	c' → logprob: -18.879079818725586
    9. '                 ' → logprob: -19.254079818725586
    10. '   ' → logprob: -19.504079818725586

Token 237: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.054885104298591614
    2. 'not' → logprob: -2.929885149002075
    3. ')' → logprob: -13.554884910583496
    4. '	not' → logprob: -14.304884910583496
    5. ' ' → logprob: -15.179884910583496
    6. ']' → logprob: -16.429885864257812
    7. ' )' → logprob: -16.554885864257812
    8. '<|end|>' → logprob: -16.804885864257812
    9. '  ' → logprob: -17.054885864257812
    10. ':not' → logprob: -17.054885864257812

Token 238: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4506300985813141
    2. ' in' → logprob: -1.2006300687789917
    3. '{' → logprob: -3.0756301879882812
    4. ' {' → logprob: -5.325630187988281
    5. ' (' → logprob: -5.700630187988281
    6. '(Player' → logprob: -5.700630187988281
    7. '[' → logprob: -7.200630187988281
    8. '   ' → logprob: -7.700630187988281
    9. '<Player' → logprob: -7.825630187988281
    10. '=' → logprob: -7.825630187988281

Token 239: ' (' (ID: 350)
  Prédit: '(Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Player' → logprob: -0.1596146821975708
    2. '{' → logprob: -2.0346145629882812
    3. 'Player' → logprob: -4.909614562988281
    4. '[' → logprob: -5.409614562988281
    5. ' (' → logprob: -5.659614562988281
    6. ' {' → logprob: -7.284614562988281
    7. ' Player' → logprob: -8.034614562988281
    8. ' [' → logprob: -9.409614562988281
    9. '(player' → logprob: -9.659614562988281
    10. '(Game' → logprob: -9.909614562988281

Token 240: 'Player' (ID: 5896)
  Prédit: 'Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.013532409444451332
    2. '(Player' → logprob: -4.638532638549805
    3. '{' → logprob: -6.013532638549805
    4. ''' → logprob: -7.263532638549805
    5. '[' → logprob: -8.013532638549805
    6. ' Player' → logprob: -8.638532638549805
    7. '{'' → logprob: -11.138532638549805
    8. '<Player' → logprob: -11.138532638549805
    9. '('' → logprob: -11.388532638549805
    10. 'Game' → logprob: -11.763532638549805

Token 241: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -9.639096970204264e-05
    2. ''S' → logprob: -9.875096321105957
    3. ''s' → logprob: -11.875096321105957
    4. 'symbol' → logprob: -12.250096321105957
    5. '.Symbol' → logprob: -12.625096321105957
    6. ''O' → logprob: -12.750096321105957
    7. '.X' → logprob: -12.875096321105957
    8. ')' → logprob: -12.875096321105957
    9. '.' → logprob: -12.875096321105957
    10. '.S' → logprob: -13.250096321105957

Token 242: '.O' (ID: 17193)
  Prédit: '.O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.O' → logprob: -0.013001982122659683
    2. 'O' → logprob: -4.513001918792725
    3. '.X' → logprob: -6.638001918792725
    4. '.S' → logprob: -8.013002395629883
    5. ''O' → logprob: -8.888002395629883
    6. ').' → logprob: -10.138002395629883
    7. '('' → logprob: -10.638002395629883
    8. ')' → logprob: -10.763002395629883
    9. '.' → logprob: -10.888002395629883
    10. 'X' → logprob: -11.263002395629883

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012526008300483227
    2. ' ,' → logprob: -4.387526035308838
    3. ',O' → logprob: -11.88752555847168
    4. ',
' → logprob: -12.38752555847168
    5. 'O' → logprob: -13.38752555847168
    6. '',' → logprob: -13.51252555847168
    7. 'Player' → logprob: -14.76252555847168
    8. ' ' → logprob: -14.88752555847168
    9. ',P' → logprob: -15.26252555847168
    10. ' ,
' → logprob: -15.38752555847168

Token 244: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.018164927139878273
    2. ' Player' → logprob: -4.018165111541748
    3. '	Player' → logprob: -11.89316463470459
    4. '   ' → logprob: -12.64316463470459
    5. '_Player' → logprob: -13.76816463470459
    6. '
' → logprob: -14.76816463470459
    7. '.Player' → logprob: -14.76816463470459
    8. ' ' → logprob: -14.89316463470459
    9. '(Player' → logprob: -14.89316463470459
    10. '<Player' → logprob: -15.01816463470459

Token 245: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -0.004459077958017588
    2. 'X' → logprob: -6.129458904266357
    3. '.X' → logprob: -6.254458904266357
    4. '.S' → logprob: -8.879459381103516
    5. '.Symbol' → logprob: -9.004459381103516
    6. 'S' → logprob: -10.004459381103516
    7. ''S' → logprob: -11.504459381103516
    8. '
' → logprob: -12.504459381103516
    9. ' Symbol' → logprob: -12.629459381103516
    10. '.' → logprob: -12.629459381103516

Token 246: '.X' (ID: 8869)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17901451885700226
    2. '.X' → logprob: -1.9290145635604858
    3. '.S' → logprob: -5.054014682769775
    4. ' ,' → logprob: -5.304014682769775
    5. 'X' → logprob: -5.429014682769775
    6. '.' → logprob: -6.929014682769775
    7. ',X' → logprob: -7.679014682769775
    8. '.,' → logprob: -7.679014682769775
    9. ',
' → logprob: -8.179014205932617
    10. 'S' → logprob: -8.179014205932617

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005572011577896774
    2. ' ,' → logprob: -7.5005574226379395
    3. ',
' → logprob: -12.750556945800781
    4. ')' → logprob: -14.500556945800781
    5. '),' → logprob: -15.625556945800781
    6. '           ' → logprob: -15.875556945800781
    7. '               ' → logprob: -16.37555694580078
    8. ' or' → logprob: -16.62555694580078
    9. ' ' → logprob: -17.25055694580078
    10. ',c' → logprob: -17.50055694580078

Token 248: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.06995844095945358
    2. ' Player' → logprob: -2.694958448410034
    3. '	Player' → logprob: -11.444958686828613
    4. '   ' → logprob: -12.569958686828613
    5. '(Player' → logprob: -13.194958686828613
    6. '_Player' → logprob: -13.569958686828613
    7. '.Player' → logprob: -14.444958686828613
    8. ' ' → logprob: -14.444958686828613
    9. '           ' → logprob: -14.569958686828613
    10. 'Patient' → logprob: -14.944958686828613

Token 249: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -0.0002273774443892762
    2. 'S' → logprob: -8.625226974487305
    3. '.S' → logprob: -10.250226974487305
    4. '.Symbol' → logprob: -12.000226974487305
    5. '.s' → logprob: -13.875226974487305
    6. 's' → logprob: -14.125226974487305
    7. '_SYMBOL' → logprob: -14.125226974487305
    8. ' Symbol' → logprob: -14.125226974487305
    9. ''S' → logprob: -14.500226974487305
    10. 'symbol' → logprob: -15.250226974487305

Token 250: '.S' (ID: 1242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22309814393520355
    2. 'S' → logprob: -1.7230981588363647
    3. '.S' → logprob: -3.973098039627075
    4. '.' → logprob: -6.848098278045654
    5. ' ,' → logprob: -7.223098278045654
    6. ',S' → logprob: -7.473098278045654
    7. ')' → logprob: -9.473097801208496
    8. ',
' → logprob: -9.723097801208496
    9. '),' → logprob: -10.223097801208496
    10. ' S' → logprob: -10.348097801208496

Token 251: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0011304517975077033
    2. '):' → logprob: -6.8761305809021
    3. ' ):
' → logprob: -9.751130104064941
    4. ''):
' → logprob: -11.001130104064941
    5. '):

' → logprob: -11.876130104064941
    6. '           ' → logprob: -12.126130104064941
    7. '               ' → logprob: -13.001130104064941
    8. '):
' → logprob: -13.126130104064941
    9. ',' → logprob: -13.251130104064941
    10. ':
' → logprob: -14.001130104064941

Token 252: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013499957276508212
    2. ':' → logprob: -8.001350402832031
    3. '               ' → logprob: -8.251350402832031
    4. ':
' → logprob: -8.251350402832031
    5. '           ' → logprob: -9.126350402832031
    6. '                       ' → logprob: -9.251350402832031
    7. ' raise' → logprob: -9.501350402832031
    8. ',' → logprob: -9.751350402832031
    9. '                  ' → logprob: -10.251350402832031
    10. '):
' → logprob: -10.376350402832031

Token 253: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.3875325322151184
    2. 'raise' (adapté à ' raise') → logprob: -1.1375324726104736
    3. '                   ' → logprob: -7.512532711029053
    4. '                       ' → logprob: -9.887532234191895
    5. '                    ' → logprob: -10.262532234191895
    6. '	raise' → logprob: -10.762532234191895
    7. '
' → logprob: -13.012532234191895
    8. 'Raise' → logprob: -14.262532234191895
    9. '                     ' → logprob: -14.387532234191895
    10. '_raise' → logprob: -14.512532234191895

Token 254: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.1269291490316391
    2. ' Value' → logprob: -2.1269290447235107
    3. '	Value' → logprob: -14.00192928314209
    4. '_value' → logprob: -16.376928329467773
    5. '_Value' → logprob: -16.501928329467773
    6. ' ' → logprob: -17.376928329467773
    7. 'value' → logprob: -18.001928329467773
    8. '.Value' → logprob: -18.126928329467773
    9. '<Value' → logprob: -18.376928329467773
    10. ' value' → logprob: -18.626928329467773

Token 255: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.386147626675665e-05
    2. 'Value' → logprob: -9.625073432922363
    3. '               ' → logprob: -12.625073432922363
    4. '                   ' → logprob: -13.125073432922363
    5. '                ' → logprob: -14.000073432922363
    6. '           ' → logprob: -14.625073432922363
    7. '                       ' → logprob: -15.125073432922363
    8. 'rror' → logprob: -15.250073432922363
    9. 'error' → logprob: -15.875073432922363
    10. '   ' → logprob: -16.00007438659668

Token 256: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.03374401479959488
    2. '(' → logprob: -3.5337440967559814
    3. '("' → logprob: -5.533743858337402
    4. '(
' → logprob: -10.408743858337402
    5. 'f' → logprob: -12.908743858337402
    6. ' f' → logprob: -14.658743858337402
    7. '()' → logprob: -14.658743858337402
    8. '(F' → logprob: -14.908743858337402
    9. '('' → logprob: -15.283743858337402
    10. '(

' → logprob: -16.40874481201172

Token 257: '"' (ID: 1)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.22696474194526672
    2. 'f' → logprob: -1.6019647121429443
    3. '"' → logprob: -6.851964950561523
    4. 'Invalid' → logprob: -8.226964950561523
    5. ')' → logprob: -9.476964950561523
    6. '
' → logprob: -9.726964950561523
    7. ' Invalid' → logprob: -10.476964950561523
    8. '(f' → logprob: -10.726964950561523
    9. ')
' → logprob: -11.476964950561523
    10. ' "' → logprob: -12.351964950561523

Token 258: 'Invalid' (ID: 12278)
  Prédit: 'Invalid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.0030806250870227814
    2. 'f' → logprob: -6.75308084487915
    3. '"' → logprob: -7.12808084487915
    4. ' Invalid' → logprob: -7.62808084487915
    5. ' f' → logprob: -7.87808084487915
    6. 'Unexpected' → logprob: -9.878080368041992
    7. 'Unknown' → logprob: -10.003080368041992
    8. 'Unsupported' → logprob: -10.128080368041992
    9. 'Illegal' → logprob: -10.503080368041992
    10. ' invalid' → logprob: -10.878080368041992

Token 259: ' cell' (ID: 4206)
  Prédit: ' character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.10071543604135513
    2. ' player' → logprob: -3.350715398788452
    3. 'character' → logprob: -3.475715398788452
    4. ' Player' → logprob: -4.475715637207031
    5. ' symbol' → logprob: -4.975715637207031
    6. 'Player' → logprob: -5.350715637207031
    7. ' cell' → logprob: -5.975715637207031
    8. 'player' → logprob: -6.725715637207031
    9. 'cell' → logprob: -7.100715637207031
    10. 'symbol' → logprob: -7.350715637207031

Token 260: ' character' (ID: 5855)
  Prédit: ' symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.8326727151870728
    2. ' value' → logprob: -1.0826727151870728
    3. ' character' → logprob: -1.7076727151870728
    4. 'symbol' → logprob: -3.332672595977783
    5. 'value' → logprob: -4.957672595977783
    6. 'character' → logprob: -6.457672595977783
    7. ' content' → logprob: -7.707672595977783
    8. ' token' → logprob: -9.082673072814941
    9. ')' → logprob: -9.082673072814941
    10. ':' → logprob: -9.957673072814941

Token 261: ' '{' (ID: 24918)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0287266056984663
    2. '(c' → logprob: -4.403726577758789
    3. ' {' → logprob: -5.278726577758789
    4. '{' → logprob: -5.278726577758789
    5. ' '{' → logprob: -5.653726577758789
    6. ' c' → logprob: -6.528726577758789
    7. ':c' → logprob: -7.903726577758789
    8. ''{' → logprob: -8.278726577758789
    9. 'c' → logprob: -8.903726577758789
    10. '(f' → logprob: -10.028726577758789

Token 262: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018339496455155313
    2. ' c' → logprob: -8.75018310546875
    3. '{' → logprob: -11.37518310546875
    4. '}' → logprob: -12.75018310546875
    5. '   ' → logprob: -12.75018310546875
    6. '}'' → logprob: -13.50018310546875
    7. '
' → logprob: -13.62518310546875
    8. '	c' → logprob: -14.00018310546875
    9. '           ' → logprob: -14.93768310546875
    10. ' ' → logprob: -15.00018310546875

Token 263: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07758678495883942
    2. ''.' → logprob: -2.9525868892669678
    3. ')'' → logprob: -5.327586650848389
    4. '')' → logprob: -5.327586650848389
    5. ''")
' → logprob: -5.577586650848389
    6. '}'' → logprob: -5.827586650848389
    7. '').' → logprob: -5.952586650848389
    8. ''"' → logprob: -6.452586650848389
    9. '}'.' → logprob: -6.827586650848389
    10. '')"' → logprob: -8.577587127685547

Token 264: ' found' (ID: 2491)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3183267116546631
    2. '')' → logprob: -2.318326711654663
    3. ')' → logprob: -2.443326711654663
    4. ')")' → logprob: -3.443326711654663
    5. '")
' → logprob: -3.943326711654663
    6. ')")
' → logprob: -4.443326950073242
    7. '.")' → logprob: -5.318326950073242
    8. '')"' → logprob: -5.318326950073242
    9. ' )' → logprob: -5.568326950073242
    10. ''")
' → logprob: -5.943326950073242

Token 265: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.381205677986145
    2. '")' → logprob: -1.256205677986145
    3. '')' → logprob: -4.5062055587768555
    4. ' in' → logprob: -4.6312055587768555
    5. '.")
' → logprob: -5.5062055587768555
    6. '.' → logprob: -6.0062055587768555
    7. '.')' → logprob: -6.5062055587768555
    8. '")
' → logprob: -7.2562055587768555
    9. ''' → logprob: -7.3812055587768555
    10. ' ")' → logprob: -7.7562055587768555

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006148627726361156
    2. '<|end|>' → logprob: -7.500614643096924
    3. '<|end|>' → logprob: -11.375615119934082
    4. '          ' → logprob: -11.625615119934082
    5. ')' → logprob: -11.750615119934082
    6. '       ' → logprob: -11.750615119934082
    7. '               ' → logprob: -12.000615119934082
    8. '            ' → logprob: -13.000615119934082
    9. '		' → logprob: -13.125615119934082
    10. ',' → logprob: -13.250615119934082

Token 267: ' cells' (ID: 11242)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2716214656829834
    2. ' cells' → logprob: -1.8966214656829834
    3. 'cells' (adapté à ' cells') → logprob: -3.0216214656829834
    4. '       ' → logprob: -3.2716214656829834
    5. '.cells' → logprob: -7.3966217041015625
    6. '<|end|>' → logprob: -8.771621704101562
    7. '_cells' → logprob: -9.146621704101562
    8. ',' → logprob: -10.146621704101562
    9. '   ' → logprob: -10.271621704101562
    10. '               ' → logprob: -10.521621704101562

Token 268: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019293478690087795
    2. '.' → logprob: -6.25192928314209
    3. '.app' → logprob: -15.12692928314209
    4. '.ap' → logprob: -15.75192928314209
    5. '.Append' → logprob: -16.251930236816406
    6. 'append' → logprob: -16.751930236816406
    7. ' .' → logprob: -16.751930236816406
    8. '.extend' → logprob: -18.376930236816406
    9. '_append' → logprob: -19.251930236816406
    10. ').' → logprob: -19.376930236816406

Token 269: '(row' (ID: 15945)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.6000387072563171
    2. 'row' → logprob: -1.475038766860962
    3. '(row' → logprob: -2.225038766860962
    4. '([' → logprob: -2.350038766860962
    5. '[' → logprob: -4.600038528442383
    6. '[list' → logprob: -5.850038528442383
    7. ' [' → logprob: -6.475038528442383
    8. 'list' → logprob: -6.600038528442383
    9. '(list' → logprob: -6.725038528442383
    10. ' row' → logprob: -7.225038528442383

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03110634535551071
    2. '       ' → logprob: -3.6561062335968018
    3. ')
' → logprob: -5.656106472015381
    4. ')return' → logprob: -7.406106472015381
    5. '<|end|>' → logprob: -7.656106472015381
    6. '
' → logprob: -8.906105995178223
    7. 'return' → logprob: -10.281105995178223
    8. ' )' → logprob: -11.531105995178223
    9. '<|end|>' → logprob: -11.781105995178223
    10. ' return' → logprob: -12.781105995178223

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004773824184667319
    2. 'return' → logprob: -7.875477313995361
    3. ' return' → logprob: -9.37547779083252
    4. '<|end|>' → logprob: -11.87547779083252
    5. '           ' → logprob: -13.25047779083252
    6. '   ' → logprob: -13.75047779083252
    7. '      ' → logprob: -15.00047779083252
    8. ')' → logprob: -15.37547779083252
    9. '        ' → logprob: -15.50047779083252
    10. 'eturn' → logprob: -15.62547779083252

Token 272: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.281650573015213
    2. 'return' (adapté à ' return') → logprob: -1.5316505432128906
    3. ' return' → logprob: -3.5316505432128906
    4. '   ' → logprob: -11.53165054321289
    5. '	return' → logprob: -12.15665054321289
    6. '<|end|>' → logprob: -13.28165054321289
    7. ')return' → logprob: -13.40665054321289
    8. '           ' → logprob: -13.53165054321289
    9. ':return' → logprob: -13.65665054321289
    10. '@return' → logprob: -13.78165054321289

Token 273: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.018150178715586662
    2. ' cls' → logprob: -4.018150329589844
    3. 'Board' → logprob: -15.518150329589844
    4. ' Board' → logprob: -16.518150329589844
    5. '(cls' → logprob: -17.143150329589844
    6. '   ' → logprob: -18.768150329589844
    7. 'classmethod' → logprob: -20.393150329589844
    8. 'cl' → logprob: -21.268150329589844
    9. 'super' → logprob: -22.143150329589844
    10. '.cls' → logprob: -22.393150329589844

Token 274: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0007202956476248801
    2. '(' → logprob: -8.000720024108887
    3. '([' → logprob: -8.375720024108887
    4. '(
' → logprob: -9.375720024108887
    5. '(s' → logprob: -10.750720024108887
    6. '(cls' → logprob: -11.500720024108887
    7. 'cells' → logprob: -11.750720024108887
    8. ' (' → logprob: -11.875720024108887
    9. '.cells' → logprob: -12.125720024108887
    10. '(rows' → logprob: -12.500720024108887

Token 275: 'ells' (ID: 9703)
  Prédit: 'ells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ells' → logprob: -0.0007430415134876966
    2. 'els' → logprob: -8.25074291229248
    3. '[' → logprob: -9.12574291229248
    4. ')' → logprob: -9.12574291229248
    5. ' ' → logprob: -9.75074291229248
    6. '```' → logprob: -9.87574291229248
    7. '(' → logprob: -10.12574291229248
    8. 'cells' → logprob: -10.37574291229248
    9. '(c' → logprob: -11.37574291229248
    10. 'ell' → logprob: -11.37574291229248

Token 276: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -14.000004768371582
    4. '   ' → logprob: -15.250004768371582
    5. ' )' → logprob: -15.500004768371582
    6. ')return' → logprob: -15.625004768371582
    7. '       ' → logprob: -17.750003814697266
    8. ' ' → logprob: -17.875003814697266
    9. '
' → logprob: -17.875003814697266
    10. '<|end|>' → logprob: -18.000003814697266

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34932923316955566
    2. '<|end|>' → logprob: -1.3493292331695557
    3. ')' → logprob: -3.5993292331695557
    4. '<|end|>' → logprob: -5.974328994750977
    5. ':' → logprob: -6.849328994750977
    6. '
' → logprob: -6.974328994750977
    7. '    
' → logprob: -7.099328994750977
    8. '```' → logprob: -7.224328994750977
    9. '[' → logprob: -8.099328994750977
    10. 'def' → logprob: -8.099328994750977

Token 278: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09456785023212433
    2. '    
' → logprob: -2.9695677757263184
    3. 'def' (adapté à ' def') → logprob: -4.094567775726318
    4. ' 
' → logprob: -5.344567775726318
    5. ' ' → logprob: -5.844567775726318
    6. '<|end|>' → logprob: -6.094567775726318
    7. ' def' → logprob: -6.344567775726318
    8. '    ' → logprob: -6.469567775726318
    9. '@property' → logprob: -6.594567775726318
    10. ')' → logprob: -6.594567775726318

Token 279: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3755396008491516
    2. ' __' → logprob: -2.250539541244507
    3. 'get' → logprob: -2.500539541244507
    4. '__' → logprob: -3.125539541244507
    5. ' cells' → logprob: -3.500539541244507
    6. '_cells' → logprob: -3.750539541244507
    7. '_get' → logprob: -4.375539779663086
    8. 'cells' → logprob: -4.500539779663086
    9. ' cell' → logprob: -6.750539779663086
    10. ' rows' → logprob: -7.375539779663086

Token 280: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.03867728263139725
    2. '_cells' → logprob: -3.663677215576172
    3. '_row' → logprob: -4.663677215576172
    4. '(self' → logprob: -7.663677215576172
    5. '(' → logprob: -7.788677215576172
    6. ' cell' → logprob: -8.038677215576172
    7. '_symbol' → logprob: -8.163677215576172
    8. '_' → logprob: -8.163677215576172
    9. ' ' → logprob: -8.413677215576172
    10. '_rows' → logprob: -8.663677215576172

Token 281: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22786669433116913
    2. '(self' → logprob: -1.6028666496276855
    3. '(row' → logprob: -6.6028666496276855
    4. '(
' → logprob: -7.7278666496276855
    5. 'self' → logprob: -8.602867126464844
    6. ' (' → logprob: -8.727867126464844
    7. '(r' → logprob: -9.602867126464844
    8. ' ' → logprob: -9.602867126464844
    9. '<|end|>' → logprob: -9.977867126464844
    10. '((' → logprob: -10.602867126464844

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12545765936374664
    2. ')' → logprob: -2.500457763671875
    3. '(row' → logprob: -4.375457763671875
    4. ',row' → logprob: -5.000457763671875
    5. '(' → logprob: -5.375457763671875
    6. 'row' → logprob: -5.750457763671875
    7. ' ' → logprob: -5.750457763671875
    8. '   ' → logprob: -6.750457763671875
    9. '[' → logprob: -7.125457763671875
    10. '[row' → logprob: -7.375457763671875

Token 283: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.11147981882095337
    2. 'row' → logprob: -2.3614797592163086
    3. ' r' → logprob: -5.236479759216309
    4. ' self' → logprob: -5.736479759216309
    5. 'r' → logprob: -6.361479759216309
    6. 'self' → logprob: -7.361479759216309
    7. ')' → logprob: -8.236479759216309
    8. ' ' → logprob: -10.486479759216309
    9. ' )' → logprob: -12.486479759216309
    10. '	row' → logprob: -12.861479759216309

Token 284: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003948072553612292
    2. ' ,' → logprob: -8.500394821166992
    3. ',row' → logprob: -9.250394821166992
    4. ':' → logprob: -9.375394821166992
    5. ':int' → logprob: -12.125394821166992
    6. '   ' → logprob: -13.875394821166992
    7. '[row' → logprob: -14.250394821166992
    8. ',int' → logprob: -14.375394821166992
    9. ' ' → logprob: -14.875394821166992
    10. '][' → logprob: -15.000394821166992

Token 285: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5141832828521729
    2. ' int' → logprob: -1.5141832828521729
    3. ',' → logprob: -2.389183282852173
    4. ' row' → logprob: -3.764183282852173
    5. ')' → logprob: -3.889183282852173
    6. 'row' → logprob: -4.264183044433594
    7. ':int' → logprob: -4.264183044433594
    8. '0' → logprob: -4.514183044433594
    9. ' ,' → logprob: -5.764183044433594
    10. ' ' → logprob: -6.139183044433594

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2233183042553719e-05
    2. ',row' → logprob: -11.625012397766113
    3. ' ,' → logprob: -12.750012397766113
    4. ',int' → logprob: -15.625012397766113
    5. ')' → logprob: -16.375011444091797
    6. ':' → logprob: -17.000011444091797
    7. ',column' → logprob: -17.250011444091797
    8. '   ' → logprob: -18.125011444091797
    9. '[row' → logprob: -18.250011444091797
    10. '][' → logprob: -18.250011444091797

Token 287: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.16026189923286438
    2. 'col' → logprob: -1.910261869430542
    3. ' column' → logprob: -10.660262107849121
    4. 'column' → logprob: -11.160262107849121
    5. '	col' → logprob: -17.910261154174805
    6. ')' → logprob: -18.160261154174805
    7. ' ' → logprob: -18.535261154174805
    8. 'colm' → logprob: -19.285261154174805
    9. '_col' → logprob: -19.785261154174805
    10. '   ' → logprob: -19.785261154174805

Token 288: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012559917755424976
    2. '):' → logprob: -4.38755989074707
    3. '):
' → logprob: -11.01255989074707
    4. ':' → logprob: -11.01255989074707
    5. ' )' → logprob: -11.38755989074707
    6. ':int' → logprob: -13.01255989074707
    7. '   ' → logprob: -13.38755989074707
    8. ' ):' → logprob: -14.38755989074707
    9. ' ' → logprob: -15.13755989074707
    10. '[int' → logprob: -15.63755989074707

Token 289: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08403071016073227
    2. ' int' → logprob: -2.8340306282043457
    3. ')' → logprob: -3.8340306282043457
    4. ':int' → logprob: -8.584031105041504
    5. ' )' → logprob: -11.834031105041504
    6. '[int' → logprob: -13.459031105041504
    7. ':' → logprob: -13.709031105041504
    8. '):' → logprob: -14.209031105041504
    9. '):
' → logprob: -14.709031105041504
    10. ']int' → logprob: -15.209031105041504

Token 290: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008408344583585858
    2. '):' → logprob: -7.125840663909912
    3. ' )' → logprob: -10.25084114074707
    4. '):
' → logprob: -14.75084114074707
    5. ')->' → logprob: -15.00084114074707
    6. ' ):' → logprob: -15.75084114074707
    7. ':' → logprob: -17.00084114074707
    8. '   ' → logprob: -17.62584114074707
    9. ')`' → logprob: -17.62584114074707
    10. ')
' → logprob: -17.87584114074707

Token 291: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001433324534446001
    2. '):' → logprob: -7.501433372497559
    3. ':' → logprob: -7.876433372497559
    4. ' ->' → logprob: -8.251433372497559
    5. ')->' → logprob: -9.001433372497559
    6. '->' → logprob: -9.376433372497559
    7. ' )' → logprob: -10.876433372497559
    8. '   ' → logprob: -12.126433372497559
    9. '):
' → logprob: -12.876433372497559
    10. ']' → logprob: -13.376433372497559

Token 292: ' Player' (ID: 12487)
  Prédit: ' Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Player' → logprob: -0.31352484226226807
    2. 'Player' → logprob: -1.313524842262268
    3. ' self' → logprob: -8.813525199890137
    4. 'self' → logprob: -9.688525199890137
    5. 'Optional' → logprob: -10.438525199890137
    6. ' Optional' → logprob: -10.938525199890137
    7. '	Player' → logprob: -12.688525199890137
    8. ' str' → logprob: -13.688525199890137
    9. '_Player' → logprob: -14.688525199890137
    10. ' player' → logprob: -15.313525199890137

Token 293: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -7.896309739408025e-07
    2. 'Sym' → logprob: -15.375000953674316
    3. ' Symbol' → logprob: -15.500000953674316
    4. 'symbol' → logprob: -15.750000953674316
    5. '(Symbol' → logprob: -16.25
    6. '_symbol' → logprob: -17.875
    7. '[' → logprob: -18.0
    8. '_SYMBOL' → logprob: -18.625
    9. 'ymbol' → logprob: -19.0
    10. '.Symbol' → logprob: -19.125

Token 294: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017996927723288536
    2. '):' → logprob: -4.392996788024902
    3. '   ' → logprob: -6.142996788024902
    4. ':return' → logprob: -6.642996788024902
    5. '():' → logprob: -7.017996788024902
    6. ')' → logprob: -7.892996788024902
    7. '       ' → logprob: -8.642996788024902
    8. '(self' → logprob: -9.142996788024902
    9. '<|end|>' → logprob: -9.267996788024902
    10. ' :' → logprob: -9.767996788024902

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1669810563325882
    2. '   ' → logprob: -2.5419809818267822
    3. ' return' → logprob: -3.1669809818267822
    4. ' ' → logprob: -4.416981220245361
    5. ' 
' → logprob: -4.541981220245361
    6. '    ' → logprob: -5.541981220245361
    7. '<|end|>' → logprob: -6.541981220245361
    8. '    
' → logprob: -6.916981220245361
    9. '        
' → logprob: -7.041981220245361
    10. 'return' → logprob: -7.416981220245361

Token 296: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7639551758766174
    2. ' return' → logprob: -1.0139551162719727
    3. '       ' → logprob: -1.7639551162719727
    4. '	return' → logprob: -11.138955116271973
    5. ' 
' → logprob: -11.763955116271973
    6. '   ' → logprob: -12.888955116271973
    7. '        
' → logprob: -13.013955116271973
    8. ':return' → logprob: -13.263955116271973
    9. '```' → logprob: -14.388955116271973
    10. 'eturn' → logprob: -14.638955116271973

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022422909736633
    2. ' self' → logprob: -1.910224199295044
    3. '(self' → logprob: -17.41022491455078
    4. '	self' → logprob: -18.03522491455078
    5. '       ' → logprob: -18.41022491455078
    6. '[self' → logprob: -20.41022491455078
    7. '   ' → logprob: -20.66022491455078
    8. '=self' → logprob: -20.66022491455078
    9. ' ' → logprob: -21.53522491455078
    10. 'Self' → logprob: -21.53522491455078

Token 298: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9981420336989686e-05
    2. '.' → logprob: -11.000020027160645
    3. ' .' → logprob: -12.875020027160645
    4. ')._' → logprob: -15.250020027160645
    5. ' ' → logprob: -16.000019073486328
    6. ']._' → logprob: -16.625019073486328
    7. '_' → logprob: -17.000019073486328
    8. '.__' → logprob: -17.000019073486328
    9. '   ' → logprob: -17.125019073486328
    10. '.get' → logprob: -17.250019073486328

Token 299: 'cells' (ID: 86975)
  Prédit: 'cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.00018542143516242504
    2. '_cells' → logprob: -8.625185012817383
    3. ' cells' → logprob: -12.625185012817383
    4. '.cells' → logprob: -13.375185012817383
    5. 'cell' → logprob: -14.375185012817383
    6. '_cell' → logprob: -15.375185012817383
    7. 'cel' → logprob: -16.625185012817383
    8. 'get' → logprob: -16.750185012817383
    9. '_get' → logprob: -17.875185012817383
    10. '_' → logprob: -18.625185012817383

Token 300: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -9.849109119386412e-06
    2. ' [' → logprob: -12.250009536743164
    3. '[' → logprob: -12.375009536743164
    4. '[col' → logprob: -15.250009536743164
    5. '[r' → logprob: -15.375009536743164
    6. '[
' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.750009536743164
    8. '\[' → logprob: -17.250009536743164
    9. '```' → logprob: -17.375009536743164
    10. ')[' → logprob: -17.625009536743164

Token 301: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.000374546303646639
    2. ']' → logprob: -8.125374794006348
    3. ' ][' → logprob: -9.625374794006348
    4. '[col' → logprob: -11.375374794006348
    5. '[' → logprob: -15.125374794006348
    6. '][]' → logprob: -15.875374794006348
    7. '"][' → logprob: -16.50037384033203
    8. ')][' → logprob: -16.62537384033203
    9. ',' → logprob: -16.62537384033203
    10. '][_' → logprob: -16.75037384033203

Token 302: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -2.7610454708337784e-05
    2. ' col' → logprob: -10.500027656555176
    3. '	col' → logprob: -21.62502670288086
    4. '[col' → logprob: -22.12502670288086
    5. 'coll' → logprob: -22.25002670288086
    6. '
' → logprob: -22.62502670288086
    7. 'colm' → logprob: -22.87502670288086
    8. '(col' → logprob: -23.00002670288086
    9. 'coln' → logprob: -23.00002670288086
    10. 'cols' → logprob: -23.37502670288086

Token 303: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12493543326854706
    2. ']' → logprob: -2.2499353885650635
    3. '<|end|>' → logprob: -4.499935626983643
    4. '}' → logprob: -7.374935626983643
    5. ' )' → logprob: -8.749935150146484
    6. ' ]' → logprob: -9.624935150146484
    7. '<|end|>' → logprob: -9.874935150146484
    8. '   ' → logprob: -11.999935150146484
    9. ' ' → logprob: -12.124935150146484
    10. ')
' → logprob: -12.374935150146484

Token 304: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.010068176314234734
    2. ' def' → logprob: -5.010067939758301
    3. '   ' → logprob: -5.760067939758301
    4. '    
' → logprob: -9.7600679397583
    5. ' ' → logprob: -10.2600679397583
    6. '@property' → logprob: -10.6350679397583
    7. '@' → logprob: -10.8850679397583
    8. '```' → logprob: -11.0100679397583
    9. ' 
' → logprob: -11.7600679397583
    10. '
' → logprob: -11.8850679397583

Token 306: ' lines' (ID: 8698)
  Prédit: ' set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.7904629111289978
    2. 'set' → logprob: -0.9154629111289978
    3. '__' → logprob: -2.7904629707336426
    4. ' __' → logprob: -3.7904629707336426
    5. 'get' → logprob: -4.540462970733643
    6. 'is' → logprob: -4.665462970733643
    7. ' is' → logprob: -4.790462970733643
    8. ' get' → logprob: -5.040462970733643
    9. ' cells' → logprob: -5.540462970733643
    10. 'cells' → logprob: -5.540462970733643

Token 307: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03654538094997406
    2. '(' → logprob: -3.4115452766418457
    3. '()' → logprob: -5.911545276641846
    4. '(
' → logprob: -9.411545753479004
    5. '_' → logprob: -10.786545753479004
    6. '():' → logprob: -10.911545753479004
    7. '()(' → logprob: -11.286545753479004
    8. 's' → logprob: -11.411545753479004
    9. '_iterator' → logprob: -11.786545753479004
    10. '(s' → logprob: -12.161545753479004

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04330483451485634
    2. '()' → logprob: -4.043304920196533
    3. '):' → logprob: -4.668304920196533
    4. '(self' → logprob: -4.918304920196533
    5. '())' → logprob: -5.168304920196533
    6. '():' → logprob: -6.543304920196533
    7. '):
' → logprob: -7.793304920196533
    8. 'self' → logprob: -8.793304443359375
    9. '()):
' → logprob: -8.793304443359375
    10. '(' → logprob: -9.418304443359375

Token 309: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013547601411119103
    2. '(' → logprob: -6.626354694366455
    3. '()' → logprob: -11.251355171203613
    4. 'self' → logprob: -12.501355171203613
    5. '(
' → logprob: -13.001355171203613
    6. ')' → logprob: -13.001355171203613
    7. '   ' → logprob: -13.001355171203613
    8. '():' → logprob: -13.126355171203613
    9. '       ' → logprob: -13.876355171203613
    10. ':' → logprob: -14.501355171203613

Token 310: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.020035259425640106
    2. ' Iterator' → logprob: -4.270035266876221
    3. 'List' → logprob: -5.145035266876221
    4. ' List' → logprob: -11.520034790039062
    5. '   ' → logprob: -12.020034790039062
    6. '	Iterator' → logprob: -12.145034790039062
    7. 'Iterable' → logprob: -13.270034790039062
    8. ' ' → logprob: -13.895034790039062
    9. 'iterator' → logprob: -13.895034790039062
    10. 'list' → logprob: -14.770034790039062

Token 311: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.000410415610531345
    2. '[' → logprob: -8.125410079956055
    3. '[[' → logprob: -10.125410079956055
    4. '[
' → logprob: -10.250410079956055
    5. '[list' → logprob: -10.250410079956055
    6. ':' → logprob: -12.875410079956055
    7. '[['' → logprob: -15.000410079956055
    8. ':
' → logprob: -15.250410079956055
    9. '<List' → logprob: -15.875410079956055
    10. '[str' → logprob: -16.000410079956055

Token 312: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '[List' → logprob: -12.87500286102295
    3. ' [' → logprob: -15.50000286102295
    4. ']' → logprob: -15.62500286102295
    5. '[player' → logprob: -15.75000286102295
    6. 'Player' → logprob: -16.125003814697266
    7. '```' → logprob: -16.750003814697266
    8. '[
' → logprob: -16.875003814697266
    9. '[int' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.625003814697266

Token 313: 'Player' (ID: 5896)
  Prédit: 'Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.00011033779446734115
    2. '[' → logprob: -9.125110626220703
    3. 'Optional' → logprob: -14.625110626220703
    4. '	Player' → logprob: -14.750110626220703
    5. 'int' → logprob: -15.375110626220703
    6. ' Player' → logprob: -15.500110626220703
    7. 'player' → logprob: -17.125110626220703
    8. ']' → logprob: -17.375110626220703
    9. '<Player' → logprob: -17.625110626220703
    10. '[str' → logprob: -17.750110626220703

Token 314: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -9.782141569303349e-05
    2. '[' → logprob: -9.25009822845459
    3. '[int' → logprob: -14.50009822845459
    4. ']' → logprob: -15.37509822845459
    5. 'symbol' → logprob: -15.75009822845459
    6. 'Symbols' → logprob: -15.75009822845459
    7. '[str' → logprob: -16.250097274780273
    8. ' Symbol' → logprob: -16.375097274780273
    9. '[
' → logprob: -16.625097274780273
    10. '_symbol' → logprob: -16.875097274780273

Token 315: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.07809804379940033
    2. ']:
' → logprob: -2.8280980587005615
    3. ']:' → logprob: -4.453097820281982
    4. ']]' → logprob: -5.578097820281982
    5. ']:
' → logprob: -7.703097820281982
    6. ']' → logprob: -9.70309829711914
    7. '[' → logprob: -10.45309829711914
    8. ']:

' → logprob: -10.95309829711914
    9. ']):
' → logprob: -11.82809829711914
    10. ' ]' → logprob: -13.32809829711914

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015264409012161195
    2. ':' → logprob: -10.000152587890625
    3. '   ' → logprob: -10.000152587890625
    4. 'yield' → logprob: -10.875152587890625
    5. '```' → logprob: -11.000152587890625
    6. '#' → logprob: -11.875152587890625
    7. '        
' → logprob: -12.500152587890625
    8. ' yield' → logprob: -13.125152587890625
    9. '      ' → logprob: -13.750152587890625
    10. ',' → logprob: -13.750152587890625

Token 317: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06906724721193314
    2. '#' (adapté à ' #') → logprob: -3.0690672397613525
    3. 'for' → logprob: -4.444067478179932
    4. 'yield' → logprob: -5.069067478179932
    5. '   ' → logprob: -6.444067478179932
    6. '
' → logprob: -8.069067001342773
    7. '        
' → logprob: -9.069067001342773
    8. ' for' → logprob: -9.569067001342773
    9. ' yield' → logprob: -9.819067001342773
    10. '```' → logprob: -11.069067001342773

Token 318: ' Rows' (ID: 153767)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08418064564466476
    2. ' for' → logprob: -2.9591805934906006
    3. '#' → logprob: -4.08418083190918
    4. 'yield' → logprob: -4.95918083190918
    5. ' yield' → logprob: -6.08418083190918
    6. '   ' → logprob: -6.70918083190918
    7. '       ' → logprob: -6.95918083190918
    8. ' #' → logprob: -8.20918083190918
    9. 'rows' → logprob: -9.20918083190918
    10. 'Yield' → logprob: -9.45918083190918

Token 319: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14480648934841156
    2. '       ' → logprob: -2.894806385040283
    3. '        
' → logprob: -3.894806385040283
    4. '    
' → logprob: -4.019806385040283
    5. 'yield' → logprob: -4.519806385040283
    6. ':' → logprob: -4.769806385040283
    7. '   ' → logprob: -4.894806385040283
    8. ':
' → logprob: -5.269806385040283
    9. 'for' → logprob: -6.019806385040283
    10. '	yield' → logprob: -6.394806385040283

Token 320: '       ' (ID: 309)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.7912251949310303
    2. ' yield' → logprob: -1.5412251949310303
    3. '
' → logprob: -1.6662251949310303
    4. '       ' → logprob: -2.7912251949310303
    5. '        
' → logprob: -3.4162251949310303
    6. '	yield' → logprob: -4.166225433349609
    7. '   ' → logprob: -4.791225433349609
    8. 'for' → logprob: -4.791225433349609
    9. '    
' → logprob: -4.791225433349609
    10. ' for' → logprob: -5.416225433349609

Token 321: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7685322761535645
    2. '       ' → logprob: -1.2685322761535645
    3. 'yield' → logprob: -1.5185322761535645
    4. '
' → logprob: -3.5185322761535645
    5. ' for' → logprob: -5.3935322761535645
    6. ' yield' → logprob: -6.5185322761535645
    7. '   ' → logprob: -8.518531799316406
    8. '        
' → logprob: -9.768531799316406
    9. '```' → logprob: -10.143531799316406
    10. 'from' → logprob: -10.393531799316406

Token 322: ' r' (ID: 428)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6846533417701721
    2. 'r' → logprob: -1.4346532821655273
    3. 'range' → logprob: -2.4346532821655273
    4. 'self' → logprob: -2.5596532821655273
    5. ' row' → logprob: -2.6846532821655273
    6. ' self' → logprob: -4.184653282165527
    7. ' range' → logprob: -5.184653282165527
    8. ' r' → logprob: -5.684653282165527
    9. 'i' → logprob: -10.309653282165527
    10. ' ' → logprob: -10.684653282165527

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01829555630683899
    2. 'in' → logprob: -4.018295764923096
    3. ' ' → logprob: -9.018295288085938
    4. ')' → logprob: -11.518295288085938
    5. ',' → logprob: -12.393295288085938
    6. '  ' → logprob: -13.018295288085938
    7. '   ' → logprob: -13.893295288085938
    8. ' ,' → logprob: -14.018295288085938
    9. 'n' → logprob: -14.268295288085938
    10. '0' → logprob: -14.268295288085938

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.872261317563243e-05
    2. ' range' → logprob: -9.750059127807617
    3. 'self' → logprob: -15.000059127807617
    4. '	range' → logprob: -20.250059127807617
    5. '(range' → logprob: -20.625059127807617
    6. '   ' → logprob: -20.875059127807617
    7. 'Range' → logprob: -21.750059127807617
    8. ' ' → logprob: -22.125059127807617
    9. '0' → logprob: -22.625059127807617
    10. 'row' → logprob: -23.125059127807617

Token 325: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.375040054321289
    3. '(Board' → logprob: -11.750040054321289
    4. 'self' → logprob: -14.125040054321289
    5. '(s' → logprob: -16.62504005432129
    6. ' self' → logprob: -16.62504005432129
    7. '(
' → logprob: -16.75004005432129
    8. '0' → logprob: -17.75004005432129
    9. '3' → logprob: -17.87504005432129
    10. '(sel' → logprob: -18.00004005432129

Token 326: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.004217890091240406
    2. '.' → logprob: -6.129218101501465
    3. 'SIZE' → logprob: -6.254218101501465
    4. '   ' → logprob: -9.879218101501465
    5. ' .' → logprob: -10.504218101501465
    6. '.S' → logprob: -11.504218101501465
    7. '       ' → logprob: -12.129218101501465
    8. ' ' → logprob: -12.879218101501465
    9. '3' → logprob: -13.129218101501465
    10. ').' → logprob: -13.254218101501465

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6329483985900879
    2. '):
' → logprob: -0.7579483985900879
    3. '):
' → logprob: -9.13294792175293
    4. ' ):' → logprob: -9.38294792175293
    5. ')' → logprob: -9.75794792175293
    6. '   ' → logprob: -10.00794792175293
    7. ' ):
' → logprob: -10.25794792175293
    8. '       ' → logprob: -11.50794792175293
    9. ':' → logprob: -12.75794792175293
    10. '):

' → logprob: -13.50794792175293

Token 328: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39154672622680664
    2. ' yield' → logprob: -1.2665467262268066
    3. 'yield' → logprob: -3.2665467262268066
    4. '       ' → logprob: -5.891546726226807
    5. '	yield' → logprob: -7.266546726226807
    6. ':' → logprob: -7.766546726226807
    7. 'Yield' → logprob: -9.641546249389648
    8. ':
' → logprob: -10.391546249389648
    9. '   ' → logprob: -11.516546249389648
    10. '):' → logprob: -11.641546249389648

Token 329: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.023413417860865593
    2. ' yield' → logprob: -3.7734134197235107
    3. '           ' → logprob: -8.77341365814209
    4. '	yield' → logprob: -11.27341365814209
    5. '       ' → logprob: -15.89841365814209
    6. 'Yield' → logprob: -15.89841365814209
    7. 'y' → logprob: -16.648412704467773
    8. '```' → logprob: -17.773412704467773
    9. '   ' → logprob: -17.898412704467773
    10. '               ' → logprob: -19.648412704467773

Token 330: ' [' (ID: 723)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0792725533246994
    2. ' self' → logprob: -2.579272508621216
    3. '[self' → logprob: -7.954272747039795
    4. ' [' → logprob: -10.704272270202637
    5. '[' → logprob: -12.579272270202637
    6. '(self' → logprob: -12.954272270202637
    7. '	self' → logprob: -13.954272270202637
    8. 'list' → logprob: -14.204272270202637
    9. '[
' → logprob: -14.829272270202637
    10. ' ' → logprob: -14.954272270202637

Token 331: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.166338137816638e-05
    2. ' self' → logprob: -10.375031471252441
    3. '(self' → logprob: -15.000031471252441
    4. '   ' → logprob: -17.375032424926758
    5. '           ' → logprob: -18.000032424926758
    6. '       ' → logprob: -18.625032424926758
    7. '	self' → logprob: -19.500032424926758
    8. '            
' → logprob: -19.750032424926758
    9. '[self' → logprob: -19.875032424926758
    10. 'c' → logprob: -20.250032424926758

Token 332: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.1503228396177292
    2. '.get' → logprob: -2.025322914123535
    3. '_get' → logprob: -4.900322914123535
    4. 'get' → logprob: -9.025322914123535
    5. ' _' → logprob: -11.025322914123535
    6. ' .' → logprob: -11.525322914123535
    7. '   ' → logprob: -11.650322914123535
    8. '.' → logprob: -12.025322914123535
    9. ' get' → logprob: -12.275322914123535
    10. ']._' → logprob: -13.775322914123535

Token 333: 'cells' (ID: 86975)
  Prédit: 'cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -2.868328920158092e-05
    2. '_cells' → logprob: -10.875028610229492
    3. ' cells' → logprob: -12.250028610229492
    4. '.cells' → logprob: -12.375028610229492
    5. 'cell' → logprob: -14.875028610229492
    6. 'cel' → logprob: -16.500028610229492
    7. 'get' → logprob: -17.375028610229492
    8. ' ' → logprob: -17.375028610229492
    9. 'r' → logprob: -17.625028610229492
    10. '```' → logprob: -17.750028610229492

Token 334: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -8.061054359131958e-06
    2. 'r' → logprob: -11.750007629394531
    3. ' [' → logprob: -16.00000762939453
    4. ' r' → logprob: -17.50000762939453
    5. '	r' → logprob: -17.87500762939453
    6. '[' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.12500762939453
    8. '][' → logprob: -18.50000762939453
    9. '[row' → logprob: -18.87500762939453
    10. '[
' → logprob: -19.50000762939453

Token 335: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004366863518953323
    2. ']' → logprob: -5.504366874694824
    3. ' ][' → logprob: -8.879366874694824
    4. '])]' → logprob: -9.879366874694824
    5. '])' → logprob: -10.629366874694824
    6. '[col' → logprob: -10.879366874694824
    7. '][:' → logprob: -11.379366874694824
    8. ']]' → logprob: -11.504366874694824
    9. '][_' → logprob: -11.879366874694824
    10. '],' → logprob: -12.504366874694824

Token 336: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6286106983898208e-05
    2. '0' → logprob: -11.625016212463379
    3. 'i' → logprob: -12.875016212463379
    4. 'col' → logprob: -13.000016212463379
    5. ' c' → logprob: -13.250016212463379
    6. '
' → logprob: -14.750016212463379
    7. 'cc' → logprob: -16.250017166137695
    8. '   ' → logprob: -16.500017166137695
    9. ' ' → logprob: -16.875017166137695
    10. ')c' → logprob: -17.625017166137695

Token 337: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.2987729102605954e-05
    2. ' ]' → logprob: -10.375042915344238
    3. 'for' → logprob: -12.250042915344238
    4. 'r' → logprob: -12.875042915344238
    5. ' for' → logprob: -13.000042915344238
    6. ']
' → logprob: -14.625042915344238
    7. ']]' → logprob: -14.625042915344238
    8. ')' → logprob: -14.875042915344238
    9. 'c' → logprob: -15.625042915344238
    10. 's' → logprob: -15.875042915344238

Token 338: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20162004232406616
    2. 'for' → logprob: -1.701620101928711
    3. ']' → logprob: -8.701620101928711
    4. 'c' → logprob: -10.826620101928711
    5. ' c' → logprob: -11.826620101928711
    6. ' ' → logprob: -12.076620101928711
    7. '	for' → logprob: -13.076620101928711
    8. ')' → logprob: -13.576620101928711
    9. '           ' → logprob: -13.701620101928711
    10. '   ' → logprob: -14.576620101928711

Token 339: ' c' (ID: 274)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0619891993701458
    2. 'range' → logprob: -2.8119893074035645
    3. 'c' → logprob: -10.936988830566406
    4. ' c' → logprob: -12.561988830566406
    5. ' ' → logprob: -16.061988830566406
    6. '(range' → logprob: -16.561988830566406
    7. '	range' → logprob: -16.811988830566406
    8. '_range' → logprob: -18.561988830566406
    9. 'Range' → logprob: -18.936988830566406
    10. '   ' → logprob: -20.186988830566406

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049818005412817
    2. 'in' → logprob: -3.2998180389404297
    3. 'range' → logprob: -4.92481803894043
    4. ' range' → logprob: -5.42481803894043
    5. ' ' → logprob: -10.42481803894043
    6. '(range' → logprob: -12.42481803894043
    7. '<|end|>' → logprob: -12.67481803894043
    8. ' xrange' → logprob: -15.79981803894043
    9. '	range' → logprob: -15.92481803894043
    10. '  ' → logprob: -16.04981803894043

Token 341: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014133334159851
    2. ' range' → logprob: -1.7014133930206299
    3. '(range' → logprob: -20.201414108276367
    4. '	range' → logprob: -20.326414108276367
    5. 'Range' → logprob: -20.826414108276367
    6. ' ' → logprob: -21.076414108276367
    7. '   ' → logprob: -21.701414108276367
    8. '_range' → logprob: -22.951414108276367
    9. '.range' → logprob: -23.451414108276367
    10. '  ' → logprob: -23.826414108276367

Token 342: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008295211009681225
    2. 'self' → logprob: -7.125829696655273
    3. '(' → logprob: -11.000829696655273
    4. ' self' → logprob: -11.875829696655273
    5. '3' → logprob: -14.125829696655273
    6. '0' → logprob: -14.875829696655273
    7. '=self' → logprob: -15.500829696655273
    8. '[self' → logprob: -16.500829696655273
    9. '	self' → logprob: -17.125829696655273
    10. ':self' → logprob: -17.875829696655273

Token 343: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.019241098314523697
    2. '.S' → logprob: -4.8942413330078125
    3. 'SIZE' → logprob: -4.8942413330078125
    4. 'self' → logprob: -5.8942413330078125
    5. '(self' → logprob: -7.3942413330078125
    6. ')' → logprob: -8.144241333007812
    7. '.' → logprob: -9.394241333007812
    8. '3' → logprob: -9.394241333007812
    9. ').' → logprob: -10.144241333007812
    10. ' .' → logprob: -10.144241333007812

Token 344: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.10045132786035538
    2. ']' → logprob: -2.3504512310028076
    3. ']
' → logprob: -9.350451469421387
    4. ' ]' → logprob: -10.225451469421387
    5. ')' → logprob: -10.225451469421387
    6. ')]
' → logprob: -10.725451469421387
    7. '       ' → logprob: -10.850451469421387
    8. '])' → logprob: -10.975451469421387
    9. '}]' → logprob: -11.600451469421387
    10. ']]' → logprob: -12.600451469421387

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006050990778021514
    2. '   ' → logprob: -8.125604629516602
    3. '```' → logprob: -9.000604629516602
    4. '
' → logprob: -9.250604629516602
    5. '        
' → logprob: -10.500604629516602
    6. '<|end|>' → logprob: -10.875604629516602
    7. '           ' → logprob: -11.000604629516602
    8. ',' → logprob: -11.750604629516602
    9. ' ' → logprob: -12.750604629516602
    10. '  
' → logprob: -12.875604629516602

Token 346: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001202850602567196
    2. '   ' → logprob: -7.0012030601501465
    3. '#' (adapté à ' #') → logprob: -8.751202583312988
    4. '```' → logprob: -9.376202583312988
    5. ' ' → logprob: -11.501202583312988
    6. '           ' → logprob: -11.626202583312988
    7. '	' → logprob: -11.876202583312988
    8. '        
' → logprob: -12.501202583312988
    9. '
' → logprob: -12.876202583312988
    10. '     ' → logprob: -12.876202583312988

Token 347: ' Columns' (ID: 118291)
  Prédit: 'Columns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Columns' → logprob: -0.17903731763362885
    2. 'Cols' → logprob: -2.05403733253479
    3. '#' → logprob: -3.55403733253479
    4. 'cols' → logprob: -5.929037094116211
    5. 'columns' → logprob: -6.054037094116211
    6. ' Columns' → logprob: -6.679037094116211
    7. 'for' → logprob: -7.804037094116211
    8. ' columns' → logprob: -8.929037094116211
    9. ' #' → logprob: -9.429037094116211
    10. '_columns' → logprob: -9.804037094116211

Token 348: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3378862142562866
    2. '
' → logprob: -1.9628862142562866
    3. '       ' → logprob: -2.587886333465576
    4. 'for' → logprob: -2.712886333465576
    5. '   ' → logprob: -5.712886333465576
    6. '        
' → logprob: -7.087886333465576
    7. '  
' → logprob: -8.712885856628418
    8. '    
' → logprob: -9.087885856628418
    9. '	for' → logprob: -9.837885856628418
    10. '           ' → logprob: -9.962885856628418

Token 349: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7442314624786377
    2. '       ' → logprob: -0.9942314624786377
    3. 'for' → logprob: -1.8692314624786377
    4. '   ' → logprob: -7.494231224060059
    5. '           ' → logprob: -9.994231224060059
    6. '
' → logprob: -11.244231224060059
    7. '        
' → logprob: -11.369231224060059
    8. '	for' → logprob: -11.994231224060059
    9. ' ' → logprob: -12.869231224060059
    10. '     ' → logprob: -12.994231224060059

Token 350: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20346322655677795
    2. ' for' → logprob: -1.7034631967544556
    3. '       ' → logprob: -6.203463077545166
    4. '   ' → logprob: -10.828463554382324
    5. '
' → logprob: -12.453463554382324
    6. ' ' → logprob: -14.703463554382324
    7. '        
' → logprob: -14.953463554382324
    8. '           ' → logprob: -15.203463554382324
    9. '	for' → logprob: -15.203463554382324
    10. '```' → logprob: -16.203462600708008

Token 351: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2052428424358368
    2. 'c' → logprob: -1.7052428722381592
    3. ' range' → logprob: -5.95524263381958
    4. 'range' → logprob: -6.70524263381958
    5. 'r' → logprob: -12.955243110656738
    6. ' r' → logprob: -13.205243110656738
    7. ' ' → logprob: -14.830243110656738
    8. '   ' → logprob: -15.080243110656738
    9. ' in' → logprob: -15.580243110656738
    10. '_c' → logprob: -15.955243110656738

Token 352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009769665077328682
    2. 'in' → logprob: -4.634769439697266
    3. ' ' → logprob: -11.384769439697266
    4. 'range' → logprob: -14.509769439697266
    5. 'n' → logprob: -14.634769439697266
    6. '[' → logprob: -15.384769439697266
    7. '```' → logprob: -15.759769439697266
    8. ')' → logprob: -15.759769439697266
    9. '  ' → logprob: -15.884769439697266
    10. 'import' → logprob: -16.009769439697266

Token 353: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014163628220558167
    2. ' range' → logprob: -4.264163494110107
    3. '(range' → logprob: -16.639163970947266
    4. '	range' → logprob: -21.514163970947266
    5. ' ' → logprob: -22.139163970947266
    6. 'Range' → logprob: -22.389163970947266
    7. '   ' → logprob: -22.514163970947266
    8. '_range' → logprob: -23.389163970947266
    9. '.range' → logprob: -23.764163970947266
    10. '[' → logprob: -24.139163970947266

Token 354: '(self' (ID: 2402)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17897164821624756
    2. ' range' → logprob: -2.428971767425537
    3. '(self' → logprob: -2.678971767425537
    4. '(range' → logprob: -5.428971767425537
    5. 'self' → logprob: -6.178971767425537
    6. '(' → logprob: -7.428971767425537
    7. ' (' → logprob: -10.303971290588379
    8. ' self' → logprob: -10.928971290588379
    9. ' in' → logprob: -13.928971290588379
    10. 'Range' → logprob: -14.053971290588379

Token 355: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.11382877826690674
    2. 'SIZE' → logprob: -2.238828659057617
    3. ')' → logprob: -7.613828659057617
    4. '   ' → logprob: -8.738828659057617
    5. '_SIZE' → logprob: -9.238828659057617
    6. '       ' → logprob: -9.738828659057617
    7. '.S' → logprob: -9.738828659057617
    8. 'range' → logprob: -9.863828659057617
    9. '3' → logprob: -11.363828659057617
    10. ' SIZE' → logprob: -11.363828659057617

Token 356: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20398472249507904
    2. '):
' → logprob: -1.7039847373962402
    3. ':' → logprob: -6.07898473739624
    4. '   ' → logprob: -9.328984260559082
    5. ')' → logprob: -9.703984260559082
    6. ':
' → logprob: -9.828984260559082
    7. ']:' → logprob: -10.703984260559082
    8. ' ):' → logprob: -11.328984260559082
    9. '       ' → logprob: -11.453984260559082
    10. ' ' → logprob: -12.203984260559082

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5495364665985107
    2. ' yield' → logprob: -0.9245364665985107
    3. 'yield' → logprob: -3.6745364665985107
    4. '   ' → logprob: -8.17453670501709
    5. '       ' → logprob: -8.54953670501709
    6. '	yield' → logprob: -8.67453670501709
    7. ' ' → logprob: -10.92453670501709
    8. '         ' → logprob: -11.54953670501709
    9. '```' → logprob: -11.79953670501709
    10. '[' → logprob: -12.29953670501709

Token 358: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.16128942370414734
    2. 'yield' (adapté à ' yield') → logprob: -1.9112894535064697
    3. '           ' → logprob: -6.911289215087891
    4. '	yield' → logprob: -10.28628921508789
    5. '   ' → logprob: -11.28628921508789
    6. '       ' → logprob: -11.78628921508789
    7. '[' → logprob: -12.16128921508789
    8. ' [' → logprob: -12.66128921508789
    9. '         ' → logprob: -13.28628921508789
    10. ' ' → logprob: -14.03628921508789

Token 359: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.5759454369544983
    2. ' [' → logprob: -0.8259454369544983
    3. '[' → logprob: -12.825945854187012
    4. '[c' → logprob: -13.450945854187012
    5. '[r' → logprob: -13.825945854187012
    6. ' ' → logprob: -14.700945854187012
    7. '[this' → logprob: -15.575945854187012
    8. '   ' → logprob: -16.575944900512695
    9. ' ' → logprob: -17.325944900512695
    10. '[row' → logprob: -17.325944900512695

Token 360: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.673547563375905e-05
    2. ' self' → logprob: -9.500086784362793
    3. '[self' → logprob: -11.375086784362793
    4. '(self' → logprob: -15.000086784362793
    5. '	self' → logprob: -18.000085830688477
    6. '   ' → logprob: -18.625085830688477
    7. '
' → logprob: -18.750085830688477
    8. '[' → logprob: -19.500085830688477
    9. '_self' → logprob: -19.875085830688477
    10. '*self' → logprob: -20.000085830688477

Token 361: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0013944036327302456
    2. '_cells' → logprob: -6.876394271850586
    3. '_self' → logprob: -9.001394271850586
    4. 'self' → logprob: -10.001394271850586
    5. ' ' → logprob: -10.126394271850586
    6. ' _' → logprob: -10.126394271850586
    7. '.' → logprob: -10.626394271850586
    8. '.cells' → logprob: -11.001394271850586
    9. ' .' → logprob: -11.251394271850586
    10. '   ' → logprob: -11.251394271850586

Token 362: 'cells' (ID: 86975)
  Prédit: 'cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0013272607466205955
    2. '_cells' → logprob: -6.751327037811279
    3. 'self' → logprob: -9.501327514648438
    4. '.cells' → logprob: -10.001327514648438
    5. ' cells' → logprob: -10.376327514648438
    6. 'cell' → logprob: -13.001327514648438
    7. 'ells' → logprob: -14.751327514648438
    8. '```' → logprob: -14.876327514648438
    9. '[self' → logprob: -15.001327514648438
    10. 'cel' → logprob: -15.001327514648438

Token 363: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.2664456789934775e-06
    2. 'r' → logprob: -14.000000953674316
    3. '[' → logprob: -15.500000953674316
    4. '[row' → logprob: -16.375001907348633
    5. '(r' → logprob: -17.625001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '```' → logprob: -18.625001907348633
    8. ' [' → logprob: -18.875001907348633
    9. '[
' → logprob: -19.375001907348633
    10. '[R' → logprob: -19.500001907348633

Token 364: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4759922921657562
    2. '[c' → logprob: -0.9759923219680786
    3. '[r' → logprob: -6.600992202758789
    4. '[' → logprob: -8.100992202758789
    5. 'for' → logprob: -9.100992202758789
    6. ']' → logprob: -10.100992202758789
    7. 'c' → logprob: -10.350992202758789
    8. ' [' → logprob: -11.100992202758789
    9. ' for' → logprob: -11.850992202758789
    10. '   ' → logprob: -11.975992202758789

Token 365: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.8624639324116288e-06
    2. ' c' → logprob: -13.250001907348633
    3. ')c' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '[c' → logprob: -20.625001907348633
    6. '
' → logprob: -20.875001907348633
    7. 'col' → logprob: -20.875001907348633
    8. ' ' → logprob: -21.250001907348633
    9. '	c' → logprob: -21.500001907348633
    10. '][' → logprob: -22.000001907348633

Token 366: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8622172474861145
    2. ' for' → logprob: -0.8622172474861145
    3. 'for' → logprob: -1.8622171878814697
    4. ' ]' → logprob: -9.48721694946289
    5. 'r' → logprob: -9.73721694946289
    6. ')' → logprob: -9.86221694946289
    7. ' ' → logprob: -11.11221694946289
    8. '           ' → logprob: -11.73721694946289
    9. ' in' → logprob: -13.23721694946289
    10. '[' → logprob: -13.48721694946289

Token 367: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07889155298471451
    2. 'for' → logprob: -2.5788915157318115
    3. ']' → logprob: -13.95389175415039
    4. ')' → logprob: -14.70389175415039
    5. ' ' → logprob: -15.32889175415039
    6. 'r' → logprob: -16.32889175415039
    7. '	for' → logprob: -16.57889175415039
    8. '           ' → logprob: -16.57889175415039
    9. ' in' → logprob: -17.32889175415039
    10. '       ' → logprob: -17.45389175415039

Token 368: ' r' (ID: 428)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029787633568048477
    2. 'range' → logprob: -3.529787540435791
    3. ' r' → logprob: -10.77978801727295
    4. 'r' → logprob: -11.02978801727295
    5. ' ' → logprob: -16.529787063598633
    6. '(range' → logprob: -18.779787063598633
    7. '	range' → logprob: -18.904787063598633
    8. ' rang' → logprob: -19.529787063598633
    9. 'rang' → logprob: -20.904787063598633
    10. ' rango' → logprob: -20.904787063598633

Token 369: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1982833445072174
    2. ' range' → logprob: -1.948283314704895
    3. 'range' → logprob: -3.4482834339141846
    4. 'in' → logprob: -5.1982831954956055
    5. '(range' → logprob: -11.198283195495605
    6. ' ' → logprob: -12.948283195495605
    7. ')' → logprob: -14.573283195495605
    8. '	range' → logprob: -14.948283195495605
    9. '<|end|>' → logprob: -15.323283195495605
    10. '(' → logprob: -16.573284149169922

Token 370: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132616877555847
    2. ' range' → logprob: -1.3132617473602295
    3. '(range' → logprob: -18.688261032104492
    4. '	range' → logprob: -22.063261032104492
    5. 'Range' → logprob: -22.188261032104492
    6. '
' → logprob: -22.813261032104492
    7. ' ' → logprob: -23.188261032104492
    8. '   ' → logprob: -23.188261032104492
    9. 'self' → logprob: -23.813261032104492
    10. '```' → logprob: -24.063261032104492

Token 371: '(self' (ID: 2402)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3133000433444977
    2. ' range' → logprob: -1.3133000135421753
    3. '(range' → logprob: -10.188300132751465
    4. 'self' → logprob: -14.938300132751465
    5. '(self' → logprob: -15.563300132751465
    6. '(' → logprob: -16.31329917907715
    7. ')' → logprob: -16.68829917907715
    8. '	range' → logprob: -17.81329917907715
    9. ' self' → logprob: -18.43829917907715
    10. 'Range' → logprob: -18.56329917907715

Token 372: '.SIZE' (ID: 163232)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017440512776374817
    2. ' range' → logprob: -4.892440319061279
    3. 'SIZE' → logprob: -5.142440319061279
    4. ')' → logprob: -6.642440319061279
    5. 'self' → logprob: -7.142440319061279
    6. '.SIZE' → logprob: -7.517440319061279
    7. 'size' → logprob: -8.017440795898438
    8. 'Board' → logprob: -8.517440795898438
    9. '.range' → logprob: -8.892440795898438
    10. 'Range' → logprob: -8.892440795898438

Token 373: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003855093673337251
    2. ' ]' → logprob: -8.500385284423828
    3. ')]' → logprob: -9.000385284423828
    4. ']
' → logprob: -10.250385284423828
    5. '       ' → logprob: -11.500385284423828
    6. '<|end|>' → logprob: -12.375385284423828
    7. ')' → logprob: -12.625385284423828
    8. '()]' → logprob: -13.250385284423828
    9. '])' → logprob: -14.375385284423828
    10. ']}' → logprob: -14.375385284423828

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010328134521842003
    2. '   ' → logprob: -5.26032829284668
    3. '#' → logprob: -5.38532829284668
    4. '```' → logprob: -8.13532829284668
    5. '        
' → logprob: -10.38532829284668
    6. '<|end|>' → logprob: -10.51032829284668
    7. ' ' → logprob: -10.51032829284668
    8. '
' → logprob: -10.76032829284668
    9. ')' → logprob: -11.38532829284668
    10. '     ' → logprob: -11.38532829284668

Token 375: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.01434637326747179
    2. '       ' → logprob: -4.264346599578857
    3. '   ' → logprob: -8.7643461227417
    4. ' #' → logprob: -10.7643461227417
    5. '```' → logprob: -12.7643461227417
    6. '
' → logprob: -13.7643461227417
    7. ' ' → logprob: -14.3893461227417
    8. '     ' → logprob: -15.6393461227417
    9. '           ' → logprob: -16.014347076416016
    10. '      ' → logprob: -16.264347076416016

Token 376: ' Di' (ID: 9196)
  Prédit: 'Di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Di' → logprob: -0.2804175615310669
    2. '#' → logprob: -1.905417561531067
    3. 'def' → logprob: -3.0304174423217773
    4. 'Diagonal' → logprob: -3.5304174423217773
    5. 'yield' → logprob: -4.530417442321777
    6. ' Di' → logprob: -6.280417442321777
    7. 'di' → logprob: -6.530417442321777
    8. ' yield' → logprob: -6.780417442321777
    9. ' diagon' → logprob: -6.905417442321777
    10. ' def' → logprob: -7.655417442321777

Token 377: 'agon' (ID: 9863)
  Prédit: 'agon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agon' → logprob: -0.008982900530099869
    2. 'agonal' → logprob: -4.758983135223389
    3. 'ag' → logprob: -8.63398265838623
    4. 'gon' → logprob: -8.88398265838623
    5. 'AGON' → logprob: -10.00898265838623
    6. 'g' → logprob: -13.13398265838623
    7. 'ags' → logprob: -13.38398265838623
    8. 'als' → logprob: -13.63398265838623
    9. 'agan' → logprob: -14.50898265838623
    10. '[' → logprob: -15.00898265838623

Token 378: 'als' (ID: 1288)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5760587453842163
    2. 'als' → logprob: -0.8260587453842163
    3. '[' → logprob: -9.826058387756348
    4. '#' → logprob: -10.951058387756348
    5. '```' → logprob: -11.326058387756348
    6. '>' → logprob: -12.326058387756348
    7. '
' → logprob: -12.576058387756348
    8. 'a' → logprob: -12.951058387756348
    9. '{' → logprob: -13.451058387756348
    10. '   ' → logprob: -13.701058387756348

Token 379: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1295330822467804
    2. '       ' → logprob: -2.129533052444458
    3. 'yield' → logprob: -6.379533290863037
    4. '[' → logprob: -8.004532814025879
    5. 'for' → logprob: -9.254532814025879
    6. '()
' → logprob: -9.504532814025879
    7. '
' → logprob: -9.629532814025879
    8. '

' → logprob: -9.879532814025879
    9. ' yield' → logprob: -10.004532814025879
    10. ' for' → logprob: -10.129532814025879

Token 380: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4905996322631836
    2. 'yield' → logprob: -0.9905996322631836
    3. ' yield' → logprob: -4.240599632263184
    4. '
' → logprob: -7.490599632263184
    5. '[' → logprob: -7.615599632263184
    6. '[
' → logprob: -8.115599632263184
    7. '   ' → logprob: -8.240599632263184
    8. '	yield' → logprob: -8.615599632263184
    9. 'for' → logprob: -9.490599632263184
    10. 'Yield' → logprob: -10.990599632263184

Token 381: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.1562812477350235
    2. ' yield' → logprob: -2.0312812328338623
    3. '[' → logprob: -4.906281471252441
    4. ' [' → logprob: -6.156281471252441
    5. '       ' → logprob: -6.406281471252441
    6. '
' → logprob: -6.781281471252441
    7. '[y' → logprob: -7.656281471252441
    8. '[
' → logprob: -7.781281471252441
    9. '	yield' → logprob: -9.156281471252441
    10. '   ' → logprob: -9.406281471252441

Token 382: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.2520151734352112
    2. ' [' → logprob: -1.5020151138305664
    3. '[' → logprob: -10.002015113830566
    4. '[c' → logprob: -11.377015113830566
    5. '[r' → logprob: -11.502015113830566
    6. '[row' → logprob: -12.752015113830566
    7. ' ' → logprob: -13.377015113830566
    8. '[this' → logprob: -13.502015113830566
    9. '[get' → logprob: -13.752015113830566
    10. '[player' → logprob: -13.877015113830566

Token 383: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.9875325708417222e-05
    2. ' self' → logprob: -10.500029563903809
    3. '[self' → logprob: -13.250029563903809
    4. '(self' → logprob: -14.625029563903809
    5. '
' → logprob: -19.500030517578125
    6. '=self' → logprob: -19.625030517578125
    7. '	self' → logprob: -20.125030517578125
    8. '*self' → logprob: -20.750030517578125
    9. ':self' → logprob: -21.250030517578125
    10. '[' → logprob: -22.000030517578125

Token 384: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.7014437364414334e-05
    2. '_cells' → logprob: -11.25002670288086
    3. '_self' → logprob: -12.00002670288086
    4. 'self' → logprob: -12.50002670288086
    5. '.cells' → logprob: -13.62502670288086
    6. ' _' → logprob: -13.75002670288086
    7. '[self' → logprob: -14.00002670288086
    8. '.' → logprob: -15.50002670288086
    9. '.self' → logprob: -15.75002670288086
    10. '.get' → logprob: -16.25002670288086

Token 385: 'cells' (ID: 86975)
  Prédit: 'cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.00012606535165105015
    2. '_cells' → logprob: -9.500125885009766
    3. '.cells' → logprob: -10.000125885009766
    4. ' cells' → logprob: -12.250125885009766
    5. 'self' → logprob: -14.500125885009766
    6. 'cell' → logprob: -15.125125885009766
    7. '
' → logprob: -16.250125885009766
    8. 'c' → logprob: -17.000125885009766
    9. 'cel' → logprob: -17.250125885009766
    10. '[' → logprob: -18.500125885009766

Token 386: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0011843960965052247
    2. '[r' → logprob: -6.751184463500977
    3. 'i' → logprob: -11.251184463500977
    4. '[' → logprob: -14.126184463500977
    5. '[d' → logprob: -14.751184463500977
    6. '[c' → logprob: -18.376184463500977
    7. '(i' → logprob: -18.501184463500977
    8. ' [' → logprob: -18.626184463500977
    9. ' i' → logprob: -19.001184463500977
    10. '[idx' → logprob: -19.376184463500977

Token 387: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009283758117817342
    2. '[i' → logprob: -7.0009284019470215
    3. ' ][' → logprob: -11.125927925109863
    4. 'i' → logprob: -14.250927925109863
    5. ']' → logprob: -14.375927925109863
    6. '[' → logprob: -14.625927925109863
    7. '[I' → logprob: -15.875927925109863
    8. '(i' → logprob: -16.87592887878418
    9. '"][' → logprob: -17.00092887878418
    10. '
' → logprob: -17.00092887878418

Token 388: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. ' i' → logprob: -14.000000953674316
    3. '	i' → logprob: -17.375001907348633
    4. '
' → logprob: -17.750001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '```' → logprob: -19.375001907348633
    7. '{i' → logprob: -19.500001907348633
    8. ',i' → logprob: -19.625001907348633
    9. '[i' → logprob: -19.625001907348633
    10. '(i' → logprob: -19.750001907348633

Token 389: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024877438321709633
    2. ' for' → logprob: -4.024877548217773
    3. 'for' → logprob: -5.024877548217773
    4. '           ' → logprob: -9.899877548217773
    5. ' ]' → logprob: -10.274877548217773
    6. ')' → logprob: -10.899877548217773
    7. '       ' → logprob: -11.024877548217773
    8. '        ' → logprob: -13.024877548217773
    9. '   ' → logprob: -13.024877548217773
    10. ' ' → logprob: -13.149877548217773

Token 390: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014147937297821
    2. 'for' → logprob: -1.7014148235321045
    3. '	for' → logprob: -14.076415061950684
    4. ' ' → logprob: -15.076415061950684
    5. '           ' → logprob: -15.576415061950684
    6. ']' → logprob: -16.451414108276367
    7. '       ' → logprob: -17.076414108276367
    8. '         ' → logprob: -17.326414108276367
    9. '
' → logprob: -17.701414108276367
    10. '   ' → logprob: -17.951414108276367

Token 391: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006811053026467562
    2. ' range' → logprob: -5.006811141967773
    3. 'i' → logprob: -9.256811141967773
    4. '(range' → logprob: -16.506811141967773
    5. ' i' → logprob: -16.756811141967773
    6. '	range' → logprob: -18.506811141967773
    7. ' ' → logprob: -19.506811141967773
    8. '
' → logprob: -20.381811141967773
    9. 'in' → logprob: -20.506811141967773
    10. '   ' → logprob: -20.506811141967773

Token 392: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04878879711031914
    2. 'in' → logprob: -3.0487887859344482
    3. 'range' → logprob: -8.673789024353027
    4. ' range' → logprob: -10.423789024353027
    5. '(range' → logprob: -15.048789024353027
    6. ']' → logprob: -16.04878807067871
    7. ' ' → logprob: -16.42378807067871
    8. ')' → logprob: -16.67378807067871
    9. '
' → logprob: -17.04878807067871
    10. 'import' → logprob: -17.92378807067871

Token 393: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01814994215965271
    2. ' range' → logprob: -4.0181498527526855
    3. '(range' → logprob: -18.393150329589844
    4. '	range' → logprob: -19.018150329589844
    5. '
' → logprob: -20.268150329589844
    6. ' ' → logprob: -20.393150329589844
    7. '   ' → logprob: -21.268150329589844
    8. 'rang' → logprob: -22.393150329589844
    9. '.range' → logprob: -23.143150329589844
    10. '  ' → logprob: -23.268150329589844

Token 394: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.12258882028982e-05
    2. '(' → logprob: -9.75006103515625
    3. 'self' → logprob: -13.00006103515625
    4. '(Board' → logprob: -14.50006103515625
    5. ' self' → logprob: -17.12506103515625
    6. '(s' → logprob: -17.37506103515625
    7. '3' → logprob: -17.37506103515625
    8. '(
' → logprob: -17.50006103515625
    9. ' (' → logprob: -17.62506103515625
    10. '(Self' → logprob: -17.75006103515625

Token 395: '.SIZE' (ID: 163232)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009975641034543514
    2. '(self' → logprob: -5.509975433349609
    3. '3' → logprob: -6.009975433349609
    4. ' self' → logprob: -6.509975433349609
    5. 'SIZE' → logprob: -6.509975433349609
    6. '(' → logprob: -9.13497543334961
    7. 'Board' → logprob: -9.25997543334961
    8. '.SIZE' → logprob: -9.25997543334961
    9. '
' → logprob: -10.38497543334961
    10. '(S' → logprob: -10.50997543334961

Token 396: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4321492612361908
    2. ']' → logprob: -1.1821492910385132
    3. ')]' → logprob: -3.4321491718292236
    4. ')]
' → logprob: -4.432149410247803
    5. ']
' → logprob: -10.682148933410645
    6. ')' → logprob: -11.682148933410645
    7. ']]
' → logprob: -11.932148933410645
    8. '       ' → logprob: -12.057148933410645
    9. ']

' → logprob: -12.182148933410645
    10. ' ]
' → logprob: -12.682148933410645

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36525094509124756
    2. 'yield' → logprob: -1.3652509450912476
    3. ' yield' → logprob: -3.115251064300537
    4. '   ' → logprob: -5.365251064300537
    5. '	yield' → logprob: -6.740251064300537
    6. '
' → logprob: -8.365250587463379
    7. '```' → logprob: -9.490250587463379
    8. '[' → logprob: -10.115250587463379
    9. ' yields' → logprob: -11.490250587463379
    10. 'Yield' → logprob: -11.615250587463379

Token 398: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.18018972873687744
    2. '       ' → logprob: -1.9301897287368774
    3. ' yield' → logprob: -3.930189609527588
    4. '	yield' → logprob: -9.180190086364746
    5. '   ' → logprob: -11.555190086364746
    6. 'Yield' → logprob: -11.680190086364746
    7. '```' → logprob: -12.680190086364746
    8. ' ' → logprob: -13.555190086364746
    9. '[' → logprob: -14.305190086364746
    10. ' ' → logprob: -14.430190086364746

Token 399: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.25193095207214355
    2. '[self' → logprob: -1.5019309520721436
    3. ' ' → logprob: -13.501931190490723
    4. '   ' → logprob: -15.251931190490723
    5. '[' → logprob: -16.876930236816406
    6. '[i' → logprob: -17.001930236816406
    7. ' ' → logprob: -17.001930236816406
    8. '       ' → logprob: -17.376930236816406
    9. '[this' → logprob: -17.501930236816406
    10. '  ' → logprob: -17.626930236816406

Token 400: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.537180211627856e-05
    2. ' self' → logprob: -10.500045776367188
    3. '[self' → logprob: -11.000045776367188
    4. '(self' → logprob: -13.750045776367188
    5. '   ' → logprob: -17.875045776367188
    6. '	self' → logprob: -18.125045776367188
    7. '
' → logprob: -18.250045776367188
    8. '_self' → logprob: -19.375045776367188
    9. '[' → logprob: -19.750045776367188
    10. '0' → logprob: -20.000045776367188

Token 401: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.60414821645827e-06
    2. '_cells' → logprob: -13.500004768371582
    3. '_self' → logprob: -14.000004768371582
    4. ' ' → logprob: -14.875004768371582
    5. '.' → logprob: -15.125004768371582
    6. '   ' → logprob: -15.250004768371582
    7. 'self' → logprob: -15.250004768371582
    8. '.__' → logprob: -15.375004768371582
    9. ' _' → logprob: -15.875004768371582
    10. '_s' → logprob: -16.000003814697266

Token 402: 'cells' (ID: 86975)
  Prédit: 'cells'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0008334511076100171
    2. '_cells' → logprob: -7.250833511352539
    3. '.cells' → logprob: -9.125833511352539
    4. ' cells' → logprob: -11.375833511352539
    5. '
' → logprob: -13.875833511352539
    6. 'size' → logprob: -14.000833511352539
    7. '_size' → logprob: -14.750833511352539
    8. 'self' → logprob: -15.375833511352539
    9. 'SIZE' → logprob: -15.500833511352539
    10. 'range' → logprob: -16.25083351135254

Token 403: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. 'i' → logprob: -15.500000953674316
    4. '(i' → logprob: -15.875000953674316
    5. '{i' → logprob: -18.125
    6. '[j' → logprob: -18.25
    7. '   ' → logprob: -18.375
    8. '
' → logprob: -18.625
    9. ' [' → logprob: -19.0
    10. '```' → logprob: -19.625

Token 404: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -5.1689596148207784e-05
    2. '[i' → logprob: -10.125051498413086
    3. '[self' → logprob: -12.375051498413086
    4. ' ][' → logprob: -13.000051498413086
    5. '][_' → logprob: -13.000051498413086
    6. '[' → logprob: -13.500051498413086
    7. ']' → logprob: -14.250051498413086
    8. 'self' → logprob: -16.125051498413086
    9. '
' → logprob: -16.250051498413086
    10. 'for' → logprob: -16.375051498413086

Token 405: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4974866644479334e-05
    2. '(self' → logprob: -11.750015258789062
    3. '
' → logprob: -12.500015258789062
    4. ' self' → logprob: -13.625015258789062
    5. '(' → logprob: -13.750015258789062
    6. 'i' → logprob: -14.500015258789062
    7. '2' → logprob: -15.750015258789062
    8. '3' → logprob: -16.000015258789062
    9. '   ' → logprob: -16.750015258789062
    10. '[self' → logprob: -16.750015258789062

Token 406: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -1.27099974633893e-05
    2. 'SIZE' → logprob: -11.625012397766113
    3. '
' → logprob: -13.750012397766113
    4. '._' → logprob: -14.125012397766113
    5. '.' → logprob: -14.250012397766113
    6. ' .' → logprob: -15.125012397766113
    7. '.Size' → logprob: -15.500012397766113
    8. '_SIZE' → logprob: -15.750012397766113
    9. '.size' → logprob: -16.00001335144043
    10. '

' → logprob: -16.25001335144043

Token 407: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693093717098236
    2. ' -' → logprob: -2.1269309520721436
    3. '1' → logprob: -13.501931190490723
    4. '-i' → logprob: -13.626931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '   ' → logprob: -17.251930236816406
    7. ' ' → logprob: -17.876930236816406
    8. 'i' → logprob: -18.876930236816406
    9. '−' → logprob: -19.126930236816406
    10. '
' → logprob: -19.126930236816406

Token 408: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049231514334679
    2. 'i' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.886049270629883
    4. ' i' → logprob: -15.011049270629883
    5. '   ' → logprob: -16.511049270629883
    6. '(i' → logprob: -17.011049270629883
    7. '[i' → logprob: -17.636049270629883
    8. '{i' → logprob: -17.761049270629883
    9. '-' → logprob: -18.011049270629883
    10. '
' → logprob: -18.261049270629883

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02324780821800232
    2. 'i' → logprob: -3.773247718811035
    3. ' i' → logprob: -13.648247718811035
    4. ' ' → logprob: -13.898247718811035
    5. '-' → logprob: -16.77324867248535
    6. '   ' → logprob: -16.89824867248535
    7. '(i' → logprob: -17.27324867248535
    8. '
' → logprob: -18.52324867248535
    9. '	i' → logprob: -18.77324867248535
    10. '{i' → logprob: -18.77324867248535

Token 410: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022564470767975
    2. '-' → logprob: -1.9102256298065186
    3. '-i' → logprob: -14.035225868225098
    4. ' ' → logprob: -14.785225868225098
    5. 'i' → logprob: -15.785225868225098
    6. '   ' → logprob: -16.53522491455078
    7. ']' → logprob: -17.28522491455078
    8. '
' → logprob: -18.03522491455078
    9. '```' → logprob: -19.03522491455078
    10. '  ' → logprob: -19.16022491455078

Token 411: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001234428636962548
    2. ' i' → logprob: -9.000123023986816
    3. '	i' → logprob: -17.875123977661133
    4. '   ' → logprob: -18.000123977661133
    5. ')i' → logprob: -20.000123977661133
    6. ' ' → logprob: -20.250123977661133
    7. ']' → logprob: -20.500123977661133
    8. '[i' → logprob: -20.875123977661133
    9. ')' → logprob: -21.500123977661133
    10. ''i' → logprob: -21.875123977661133

Token 412: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3782830137643032e-05
    2. ' ]' → logprob: -11.25001335144043
    3. ')' → logprob: -15.00001335144043
    4. ']]' → logprob: -16.00001335144043
    5. ']
' → logprob: -16.50001335144043
    6. ')]' → logprob: -16.50001335144043
    7. '   ' → logprob: -17.50001335144043
    8. 'i' → logprob: -18.00001335144043
    9. 'for' → logprob: -18.37501335144043
    10. ' ' → logprob: -18.37501335144043

Token 413: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22340628504753113
    2. ']' → logprob: -1.7234063148498535
    3. 'for' → logprob: -3.8484063148498535
    4. ' ]' → logprob: -7.8484063148498535
    5. ')' → logprob: -10.473405838012695
    6. ' ' → logprob: -11.223405838012695
    7. '   ' → logprob: -13.223405838012695
    8. '	for' → logprob: -13.723405838012695
    9. '[i' → logprob: -14.098405838012695
    10. '    ' → logprob: -14.223405838012695

Token 414: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00047940885997377336
    2. ' i' → logprob: -7.750479221343994
    3. 'range' → logprob: -10.000479698181152
    4. ' range' → logprob: -12.625479698181152
    5. '   ' → logprob: -18.500478744506836
    6. ' ' → logprob: -20.375478744506836
    7. '	i' → logprob: -20.500478744506836
    8. '[i' → logprob: -21.000478744506836
    9. 'I' → logprob: -21.125478744506836
    10. '(i' → logprob: -21.125478744506836

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20391501486301422
    2. 'in' → logprob: -1.703914999961853
    3. 'range' → logprob: -6.078915119171143
    4. ' range' → logprob: -8.578914642333984
    5. 'i' → logprob: -11.453914642333984
    6. ' i' → logprob: -11.703914642333984
    7. ' ' → logprob: -14.828914642333984
    8. ')' → logprob: -15.703914642333984
    9. '(range' → logprob: -15.703914642333984
    10. 'import' → logprob: -16.328914642333984

Token 416: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006715370807796717
    2. ' range' → logprob: -5.006715297698975
    3. '(range' → logprob: -17.881715774536133
    4. '
' → logprob: -20.381715774536133
    5. '	range' → logprob: -20.756715774536133
    6. '   ' → logprob: -22.381715774536133
    7. ' ' → logprob: -22.506715774536133
    8. 'Range' → logprob: -23.381715774536133
    9. '```' → logprob: -23.631715774536133
    10. '_range' → logprob: -23.631715774536133

Token 417: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.735893965815194e-05
    2. 'self' → logprob: -11.125017166137695
    3. '(' → logprob: -13.000017166137695
    4. 'range' → logprob: -16.125017166137695
    5. ' (' → logprob: -16.500017166137695
    6. ' self' → logprob: -16.875017166137695
    7. '(s' → logprob: -17.250017166137695
    8. '(
' → logprob: -17.500017166137695
    9. '(range' → logprob: -17.500017166137695
    10. '(sel' → logprob: -18.875017166137695

Token 418: '.SIZE' (ID: 163232)
  Prédit: '.SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.SIZE' → logprob: -0.02982166036963463
    2. 'SIZE' → logprob: -3.5298216342926025
    3. ')' → logprob: -10.029821395874023
    4. '       ' → logprob: -12.529821395874023
    5. '
' → logprob: -12.529821395874023
    6. '_SIZE' → logprob: -12.529821395874023
    7. '.size' → logprob: -12.904821395874023
    8. '```' → logprob: -12.904821395874023
    9. '.S' → logprob: -13.154821395874023
    10. '))' → logprob: -13.279821395874023

Token 419: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001858982432167977
    2. ']' → logprob: -8.6251859664917
    3. ')]
' → logprob: -12.8751859664917
    4. ')' → logprob: -14.1251859664917
    5. '])' → logprob: -14.1251859664917
    6. ']]' → logprob: -14.1251859664917
    7. '])]' → logprob: -14.2501859664917
    8. '')]' → logprob: -15.2501859664917
    9. ' ]' → logprob: -15.6251859664917
    10. '}]' → logprob: -16.125185012817383

Token 420: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.011956889182329178
    2. '   ' → logprob: -4.636956691741943
    3. '
' → logprob: -6.386956691741943
    4. '```' → logprob: -8.136957168579102
    5. ' class' → logprob: -9.136957168579102
    6. '<|end|>' → logprob: -10.261957168579102
    7. 'def' → logprob: -10.386957168579102
    8. '@' → logprob: -11.386957168579102
    9. '    
' → logprob: -11.886957168579102
    10. ' ' → logprob: -12.261957168579102

Token 421: ' Win' (ID: 16436)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.3088780641555786
    2. 'Game' → logprob: -1.4338780641555786
    3. ' Tic' → logprob: -4.058877944946289
    4. ' Abstract' → logprob: -6.433877944946289
    5. ' Player' → logprob: -6.558877944946289
    6. 'Abstract' → logprob: -6.558877944946289
    7. 'ABC' → logprob: -6.683877944946289
    8. ' ABC' → logprob: -6.933877944946289
    9. ' Board' → logprob: -7.308877944946289
    10. 'Player' → logprob: -7.433877944946289

Token 422: 'Condition' (ID: 14232)
  Prédit: 'Checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.5436692833900452
    2. 'Condition' → logprob: -0.9186692833900452
    3. 'Detector' → logprob: -4.5436692237854
    4. 'Check' → logprob: -5.5436692237854
    5. 'Evaluator' → logprob: -6.5436692237854
    6. 'ner' → logprob: -6.7936692237854
    7. 'ning' → logprob: -7.9186692237854
    8. 'Analyzer' → logprob: -8.168669700622559
    9. 'State' → logprob: -8.418669700622559
    10. 'd' → logprob: -8.418669700622559

Token 423: 'Checker' (ID: 39016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007697248365730047
    2. ':' → logprob: -7.62576961517334
    3. 'Checker' → logprob: -8.50076961517334
    4. 'Evaluator' → logprob: -10.37576961517334
    5. ':
' → logprob: -11.00076961517334
    6. '(Abstract' → logprob: -11.87576961517334
    7. 's' → logprob: -12.62576961517334
    8. '(Enum' → logprob: -12.62576961517334
    9. 'Detector' → logprob: -12.75076961517334
    10. '():' → logprob: -13.12576961517334

Token 424: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002087853499688208
    2. ':' → logprob: -8.500208854675293
    3. '(Abstract' → logprob: -12.250208854675293
    4. ':
' → logprob: -15.375208854675293
    5. '(
' → logprob: -16.125207901000977
    6. ' (' → logprob: -16.250207901000977
    7. '():' → logprob: -18.125207901000977
    8. '```' → logprob: -18.625207901000977
    9. '(object' → logprob: -19.000207901000977
    10. '((' → logprob: -19.625207901000977

Token 425: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -7.93448489275761e-05
    2. ' ABC' → logprob: -10.125079154968262
    3. '):
' → logprob: -10.500079154968262
    4. '(' → logprob: -12.250079154968262
    5. ')' → logprob: -12.750079154968262
    6. '):' → logprob: -13.625079154968262
    7. 'AB' → logprob: -13.625079154968262
    8. 'abc' → logprob: -14.875079154968262
    9. 'Abstract' → logprob: -15.000079154968262
    10. '):

' → logprob: -16.125080108642578

Token 426: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029808353632688522
    2. '):
' → logprob: -3.529808282852173
    3. ')' → logprob: -10.654808044433594
    4. '):
' → logprob: -11.154808044433594
    5. ':' → logprob: -11.654808044433594
    6. '):

' → logprob: -11.779808044433594
    7. ' ):' → logprob: -13.404808044433594
    8. ',' → logprob: -14.154808044433594
    9. '   ' → logprob: -14.279808044433594
    10. ']:' → logprob: -16.279808044433594

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037259687669575214
    2. '    
' → logprob: -6.128726005554199
    3. '
' → logprob: -6.878726005554199
    4. ':' → logprob: -8.3787260055542
    5. ' 
' → logprob: -10.0037260055542
    6. '<|end|>' → logprob: -10.0037260055542
    7. '   ' → logprob: -10.8787260055542
    8. ' ind' → logprob: -11.0037260055542
    9. ' indentation' → logprob: -11.0037260055542
    10. ' def' → logprob: -11.1287260055542

Token 428: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28031226992607117
    2. '@' (adapté à ' @') → logprob: -1.5303122997283936
    3. ' @' → logprob: -3.9053122997283936
    4. '
' → logprob: -4.9053120613098145
    5. '    
' → logprob: -7.9053120613098145
    6. ' 
' → logprob: -10.155312538146973
    7. 'def' → logprob: -11.405312538146973
    8. '@property' → logprob: -12.030312538146973
    9. '

' → logprob: -12.530312538146973
    10. 'class' → logprob: -13.405312538146973

Token 429: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.054500666621607e-06
    2. 'staticmethod' → logprob: -13.00000286102295
    3. ' abstract' → logprob: -15.00000286102295
    4. 'property' → logprob: -15.00000286102295
    5. 'classmethod' → logprob: -15.62500286102295
    6. '.abstract' → logprob: -18.500003814697266
    7. 'abc' → logprob: -19.500003814697266
    8. 'ab' → logprob: -19.500003814697266
    9. 'abs' → logprob: -19.625003814697266
    10. 'static' → logprob: -24.625003814697266

Token 430: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.011073531582951546
    2. '_method' → logprob: -4.511073589324951
    3. 'def' → logprob: -11.511073112487793
    4. 'classmethod' → logprob: -11.886073112487793
    5. '.method' → logprob: -12.761073112487793
    6. 'staticmethod' → logprob: -13.511073112487793
    7. '(method' → logprob: -13.636073112487793
    8. ' method' → logprob: -13.761073112487793
    9. 'meth' → logprob: -14.636073112487793
    10. '	method' → logprob: -14.761073112487793

Token 431: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07054216414690018
    2. '
' → logprob: -2.820542097091675
    3. ' def' → logprob: -5.320542335510254
    4. 'method' → logprob: -5.695542335510254
    5. '   ' → logprob: -9.070542335510254
    6. '    
' → logprob: -9.445542335510254
    7. 'classmethod' → logprob: -10.070542335510254
    8. '  
' → logprob: -11.570542335510254
    9. '_method' → logprob: -12.070542335510254
    10. '	def' → logprob: -12.445542335510254

Token 432: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006644560489803553
    2. 'method' → logprob: -5.2566447257995605
    3. '
' → logprob: -6.7566447257995605
    4. ' def' → logprob: -8.506644248962402
    5. 'classmethod' → logprob: -10.756644248962402
    6. '    
' → logprob: -11.881644248962402
    7. '   ' → logprob: -11.881644248962402
    8. '_method' → logprob: -12.256644248962402
    9. ' method' → logprob: -14.131644248962402
    10. 'ethod' → logprob: -14.381644248962402

Token 433: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.43005454540252686
    2. 'method' → logprob: -1.6800545454025269
    3. 'staticmethod' → logprob: -2.5550546646118164
    4. 'classmethod' → logprob: -2.5550546646118164
    5. 'abstract' → logprob: -5.555054664611816
    6. 'property' → logprob: -5.680054664611816
    7. 'call' → logprob: -7.805054664611816
    8. 'abc' → logprob: -10.805054664611816
    9. 'bool' → logprob: -10.930054664611816
    10. 'class' → logprob: -11.180054664611816

Token 434: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.35348254442214966
    2. ' check' → logprob: -1.2284824848175049
    3. 'is' → logprob: -5.853482723236084
    4. ' is' → logprob: -6.478482723236084
    5. 'def' → logprob: -7.853482723236084
    6. ' has' → logprob: -9.853482246398926
    7. 'evaluate' → logprob: -9.853482246398926
    8. 'has' → logprob: -10.478482246398926
    9. ' evaluate' → logprob: -10.728482246398926
    10. ' def' → logprob: -11.353482246398926

Token 435: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002593130338937044
    2. '(' → logprob: -9.125259399414062
    3. '_result' → logprob: -9.500259399414062
    4. 'self' → logprob: -10.250259399414062
    5. '_game' → logprob: -11.625259399414062
    6. ' (' → logprob: -12.000259399414062
    7. '_board' → logprob: -12.250259399414062
    8. '_w' → logprob: -12.625259399414062
    9. '_win' → logprob: -12.750259399414062
    10. '(
' → logprob: -13.125259399414062

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018950698897242546
    2. 'self' → logprob: -4.143950462341309
    3. ')' → logprob: -5.893950462341309
    4. ' ,' → logprob: -9.768950462341309
    5. '):' → logprob: -10.768950462341309
    6. '       ' → logprob: -10.893950462341309
    7. '   ' → logprob: -11.018950462341309
    8. '(self' → logprob: -11.268950462341309
    9. ',self' → logprob: -11.393950462341309
    10. ' self' → logprob: -11.768950462341309

Token 437: ' board' (ID: 6796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31891894340515137
    2. 'board' → logprob: -1.3189189434051514
    3. ' self' → logprob: -5.8189191818237305
    4. ' board' → logprob: -5.9439191818237305
    5. ')' → logprob: -10.94391918182373
    6. '   ' → logprob: -12.06891918182373
    7. '(self' → logprob: -12.19391918182373
    8. 'Board' → logprob: -12.19391918182373
    9. '_board' → logprob: -13.19391918182373
    10. '.board' → logprob: -13.31891918182373

Token 438: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001414426224073395
    2. ')' → logprob: -8.875141143798828
    3. '):' → logprob: -14.125141143798828
    4. ' :' → logprob: -14.625141143798828
    5. '   ' → logprob: -16.000141143798828
    6. '[' → logprob: -16.250141143798828
    7. '  ' → logprob: -16.375141143798828
    8. '```' → logprob: -17.375141143798828
    9. ',' → logprob: -17.500141143798828
    10. ' )' → logprob: -17.625141143798828

Token 439: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.38690900802612305
    2. 'Board' → logprob: -1.136909008026123
    3. ')' → logprob: -10.261909484863281
    4. ' ' → logprob: -13.636909484863281
    5. ' )' → logprob: -14.761909484863281
    6. ' board' → logprob: -15.011909484863281
    7. '.Board' → logprob: -15.511909484863281
    8. '   ' → logprob: -15.636909484863281
    9. '(Board' → logprob: -15.636909484863281
    10. ' ' → logprob: -15.636909484863281

Token 440: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005260203033685684
    2. ',' → logprob: -5.255259990692139
    3. ' )' → logprob: -10.755260467529297
    4. '   ' → logprob: -12.755260467529297
    5. ',)' → logprob: -14.130260467529297
    6. '`)' → logprob: -15.130260467529297
    7. ')->' → logprob: -15.255260467529297
    8. '')' → logprob: -15.505260467529297
    9. ' ,' → logprob: -15.630260467529297
    10. ',
' → logprob: -15.755260467529297

Token 441: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.23994703590869904
    2. ')' → logprob: -1.9899470806121826
    3. '->' → logprob: -2.6149470806121826
    4. ',' → logprob: -6.2399468421936035
    5. ')->' → logprob: -6.8649468421936035
    6. ' )' → logprob: -8.489947319030762
    7. ' )->' → logprob: -8.864947319030762
    8. '   ' → logprob: -9.989947319030762
    9. '[' → logprob: -10.614947319030762
    10. ' ' → logprob: -11.114947319030762

Token 442: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0007686520111747086
    2. ' Optional' → logprob: -7.375768661499023
    3. 'Game' → logprob: -8.875768661499023
    4. '	Optional' → logprob: -13.500768661499023
    5. '(Optional' → logprob: -14.375768661499023
    6. ' Game' → logprob: -16.000768661499023
    7. 'optional' → logprob: -16.625768661499023
    8. '.Optional' → logprob: -17.000768661499023
    9. 'Opt' → logprob: -17.125768661499023
    10. '   ' → logprob: -17.625768661499023

Token 443: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1517960956552997e-05
    2. '[str' → logprob: -11.750011444091797
    3. 'Game' → logprob: -13.875011444091797
    4. '   ' → logprob: -14.125011444091797
    5. '[
' → logprob: -14.250011444091797
    6. ' [' → logprob: -15.000011444091797
    7. '['' → logprob: -15.125011444091797
    8. '[List' → logprob: -15.250011444091797
    9. ' ' → logprob: -16.000011444091797
    10. '<Game' → logprob: -16.500011444091797

Token 444: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.00016957100888248533
    2. 'Player' → logprob: -8.75016975402832
    3. 'str' → logprob: -11.50016975402832
    4. ' Game' → logprob: -14.12516975402832
    5. '[str' → logprob: -17.25016975402832
    6. '	Game' → logprob: -17.50016975402832
    7. '[' → logprob: -18.00016975402832
    8. 'game' → logprob: -18.50016975402832
    9. '(Game' → logprob: -18.75016975402832
    10. '   ' → logprob: -19.25016975402832

Token 445: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -4.320199877838604e-07
    2. '	Result' → logprob: -15.625
    3. 'Res' → logprob: -16.375
    4. ' Result' → logprob: -16.75
    5. 'result' → logprob: -17.125
    6. ')' → logprob: -17.875
    7. 'Results' → logprob: -18.0
    8. '<Result' → logprob: -18.375
    9. '_Result' → logprob: -18.5
    10. '[' → logprob: -18.625

Token 446: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004362471401691437
    2. ')' → logprob: -6.0043625831604
    3. ']:' → logprob: -6.5043625831604
    4. ':' → logprob: -8.629362106323242
    5. '):
' → logprob: -9.129362106323242
    6. ']' → logprob: -10.379362106323242
    7. ']):' → logprob: -10.379362106323242
    8. '   ' → logprob: -10.629362106323242
    9. ' ):' → logprob: -12.754362106323242
    10. '<|end|>' → logprob: -13.129362106323242

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28318047523498535
    2. '<|end|>' → logprob: -2.1581804752349854
    3. '
' → logprob: -2.2831804752349854
    4. '   ' → logprob: -4.783180236816406
    5. ' pass' → logprob: -5.158180236816406
    6. ' ' → logprob: -5.158180236816406
    7. '    ' → logprob: -5.283180236816406
    8. '...' → logprob: -7.158180236816406
    9. 'pass' → logprob: -7.283180236816406
    10. '        ' → logprob: -7.283180236816406

Token 448: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8512941598892212
    2. 'pass' (adapté à ' pass') → logprob: -1.1012941598892212
    3. '...' → logprob: -1.6012941598892212
    4. ' pass' → logprob: -3.3512940406799316
    5. ' ...' → logprob: -5.601294040679932
    6. 'for' → logprob: -9.10129451751709
    7. '   ' → logprob: -9.47629451751709
    8. '
' → logprob: -10.10129451751709
    9. 'raise' → logprob: -10.35129451751709
    10. '    ' → logprob: -10.97629451751709

Token 449: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010614092461764812
    2. 'class' → logprob: -4.760613918304443
    3. '   ' → logprob: -6.635613918304443
    4. '

' → logprob: -7.385613918304443
    5. '    
' → logprob: -11.260614395141602
    6. '<|end|>' → logprob: -11.385614395141602
    7. ' 
' → logprob: -11.635614395141602
    8. '  
' → logprob: -11.885614395141602
    9. '```' → logprob: -11.885614395141602
    10. '
' → logprob: -11.885614395141602

Token 450: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.3134567141532898
    2. '
' → logprob: -1.3134567737579346
    3. '

' → logprob: -9.563456535339355
    4. ' class' → logprob: -10.063456535339355
    5. ' 
' → logprob: -10.438456535339355
    6. '
' → logprob: -10.938456535339355
    7. '  
' → logprob: -11.313456535339355
    8. '   ' → logprob: -12.063456535339355
    9. '<|end|>' → logprob: -12.188456535339355
    10. '    
' → logprob: -12.563456535339355

Token 451: ' Three' (ID: 21877)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Line' → logprob: -1.6218901872634888
    2. 'Row' → logprob: -1.6218901872634888
    3. 'Simple' → logprob: -1.9968901872634888
    4. 'All' → logprob: -2.996890068054199
    5. ' Tic' → logprob: -2.996890068054199
    6. 'Draw' → logprob: -3.121890068054199
    7. ' Row' → logprob: -3.371890068054199
    8. 'T' → logprob: -3.621890068054199
    9. 'Full' → logprob: -3.621890068054199
    10. ' Simple' → logprob: -3.621890068054199

Token 452: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.0009575550211593509
    2. 'in' → logprob: -7.625957489013672
    3. 'Line' → logprob: -8.000957489013672
    4. 'inar' → logprob: -10.500957489013672
    5. '_in' → logprob: -10.625957489013672
    6. 'Ina' → logprob: -10.625957489013672
    7. 'Row' → logprob: -11.375957489013672
    8. 'Of' → logprob: -11.625957489013672
    9. 'Equal' → logprob: -11.875957489013672
    10. 'Inline' → logprob: -12.000957489013672

Token 453: 'Line' (ID: 3665)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12203565984964371
    2. 'AR' → logprob: -2.3720357418060303
    3. 'Row' → logprob: -3.8720357418060303
    4. 'Line' → logprob: -7.872035503387451
    5. 'row' → logprob: -8.37203598022461
    6. '-a' → logprob: -9.87203598022461
    7. 'ar' → logprob: -9.99703598022461
    8. 'A' → logprob: -10.37203598022461
    9. '_a' → logprob: -11.24703598022461
    10. '```' → logprob: -11.99703598022461

Token 454: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.527135968208313
    2. '(' → logprob: -1.152135968208313
    3. 'Win' → logprob: -2.7771358489990234
    4. ':' → logprob: -4.152135848999023
    5. 'Check' → logprob: -4.402135848999023
    6. '():' → logprob: -6.777135848999023
    7. '(W' → logprob: -7.027135848999023
    8. 'Winner' → logprob: -7.777135848999023
    9. 'Condition' → logprob: -8.027135848999023
    10. 'Checking' → logprob: -8.027135848999023

Token 455: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048743605613708496
    2. ':' → logprob: -3.048743724822998
    3. '(W' → logprob: -9.67374324798584
    4. ' :' → logprob: -10.04874324798584
    5. '(Check' → logprob: -10.67374324798584
    6. '():' → logprob: -11.79874324798584
    7. ':
' → logprob: -11.92374324798584
    8. '(Game' → logprob: -12.04874324798584
    9. '(Abstract' → logprob: -13.17374324798584
    10. ' (' → logprob: -13.67374324798584

Token 456: 'Win' (ID: 19224)
  Prédit: 'Win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Win' → logprob: -0.008677328005433083
    2. ')' → logprob: -5.1336774826049805
    3. '):' → logprob: -6.0086774826049805
    4. ' Win' → logprob: -8.75867748260498
    5. 'ABC' → logprob: -9.63367748260498
    6. '):
' → logprob: -9.75867748260498
    7. 'win' → logprob: -13.75867748260498
    8. ' )' → logprob: -14.13367748260498
    9. '):

' → logprob: -14.50867748260498
    10. 'AB' → logprob: -14.63367748260498

Token 457: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -9.491498531133402e-06
    2. 'condition' → logprob: -11.875009536743164
    3. '_condition' → logprob: -14.000009536743164
    4. 'In' → logprob: -14.750009536743164
    5. 'Con' → logprob: -14.750009536743164
    6. ')' → logprob: -15.375009536743164
    7. 'Line' → logprob: -16.000009536743164
    8. 'Cond' → logprob: -16.750009536743164
    9. 'in' → logprob: -16.750009536743164
    10. ' Condition' → logprob: -16.875009536743164

Token 458: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -0.09653066843748093
    2. ')' → logprob: -2.5965306758880615
    3. 'er' → logprob: -4.846530437469482
    4. '):' → logprob: -5.346530437469482
    5. 'checker' → logprob: -5.846530437469482
    6. '):
' → logprob: -6.971530437469482
    7. '   ' → logprob: -8.34653091430664
    8. '_checker' → logprob: -8.47153091430664
    9. ' checker' → logprob: -8.84653091430664
    10. '){' → logprob: -9.22153091430664

Token 459: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03812790662050247
    2. '):
' → logprob: -3.288127899169922
    3. ':' → logprob: -9.788127899169922
    4. ')' → logprob: -10.913127899169922
    5. '   ' → logprob: -12.038127899169922
    6. '):
' → logprob: -12.788127899169922
    7. ':
' → logprob: -13.538127899169922
    8. ' ):' → logprob: -13.663127899169922
    9. '):

' → logprob: -14.913127899169922
    10. 'def' → logprob: -15.663127899169922

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011760273948311806
    2. '
' → logprob: -4.761760234832764
    3. 'def' → logprob: -6.261760234832764
    4. ' def' → logprob: -6.761760234832764
    5. '    
' → logprob: -9.636760711669922
    6. '```' → logprob: -12.386760711669922
    7. '	def' → logprob: -12.636760711669922
    8. '    ' → logprob: -14.636760711669922
    9. '   ' → logprob: -15.011760711669922
    10. '
' → logprob: -15.511760711669922

Token 461: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023310350254178047
    2. ' def' → logprob: -3.773310422897339
    3. '   ' → logprob: -9.648310661315918
    4. '
' → logprob: -15.023310661315918
    5. '	def' → logprob: -17.0233097076416
    6. 'class' → logprob: -18.2733097076416
    7. ' ' → logprob: -19.0233097076416
    8. '    
' → logprob: -19.1483097076416
    9. '    ' → logprob: -19.8983097076416
    10. '  ' → logprob: -20.0233097076416

Token 462: ' __' (ID: 2516)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.0015380734112113714
    2. 'check' → logprob: -7.126538276672363
    3. ' def' → logprob: -7.251538276672363
    4. ' ' → logprob: -11.626538276672363
    5. ' ' → logprob: -11.751538276672363
    6. 'def' → logprob: -12.626538276672363
    7. '_check' → logprob: -12.876538276672363
    8. '_' → logprob: -14.626538276672363
    9. '	check' → logprob: -14.626538276672363
    10. ' _' → logprob: -15.126538276672363

Token 463: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'def' → logprob: -15.375
    3. 'inite' → logprob: -16.25
    4. ' init' → logprob: -16.375
    5. 'name' → logprob: -17.625
    6. '_init' → logprob: -17.875
    7. 'ini' → logprob: -18.375
    8. 'next' → logprob: -18.375
    9. '_' → logprob: -18.625
    10. 'check' → logprob: -19.0

Token 464: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.09228057414293289
    2. '(self' → logprob: -2.467280626296997
    3. '(' → logprob: -6.467280387878418
    4. '__' → logprob: -6.967280387878418
    5. '__(
' → logprob: -7.717280387878418
    6. ' (' → logprob: -8.967280387878418
    7. 'self' → logprob: -9.092280387878418
    8. '_(' → logprob: -9.967280387878418
    9. '()' → logprob: -10.342280387878418
    10. '
' → logprob: -10.967280387878418

Token 465: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005804349202662706
    2. ')' → logprob: -7.500580310821533
    3. ' self' → logprob: -11.250580787658691
    4. '):
' → logprob: -11.750580787658691
    5. '
' → logprob: -12.625580787658691
    6. '   ' → logprob: -13.750580787658691
    7. '),' → logprob: -14.500580787658691
    8. '):' → logprob: -14.875580787658691
    9. ')
' → logprob: -15.125580787658691
    10. '):

' → logprob: -15.125580787658691

Token 466: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.078684963285923
    2. ',' → logprob: -3.0786850452423096
    3. ')' → logprob: -4.0786848068237305
    4. '   ' → logprob: -4.8286848068237305
    5. ' self' → logprob: -6.3286848068237305
    6. '):' → logprob: -6.5786848068237305
    7. '):
' → logprob: -7.3286848068237305
    8. '       ' → logprob: -8.07868480682373
    9. '(self' → logprob: -8.70368480682373
    10. ' ' → logprob: -8.82868480682373

Token 467: ' symbol' (ID: 10038)
  Prédit: 'symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -0.7248112559318542
    2. 'player' → logprob: -0.8498112559318542
    3. 'target' → logprob: -3.099811315536499
    4. ' symbol' → logprob: -3.724811315536499
    5. ' player' → logprob: -4.47481107711792
    6. 'winning' → logprob: -5.59981107711792
    7. 'winner' → logprob: -6.84981107711792
    8. ' target' → logprob: -6.84981107711792
    9. 'symbols' → logprob: -8.099811553955078
    10. 'win' → logprob: -8.599811553955078

Token 468: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.076218025758862e-05
    2. '):' → logprob: -9.750070571899414
    3. ')' → logprob: -11.500070571899414
    4. '_:' → logprob: -14.000070571899414
    5. ' ):' → logprob: -15.000070571899414
    6. ' :' → logprob: -15.000070571899414
    7. 'to' → logprob: -15.750070571899414
    8. '):
' → logprob: -15.875070571899414
    9. '   ' → logprob: -16.250070571899414
    10. 's' → logprob: -16.500070571899414

Token 469: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.03882785886526108
    2. ' Player' → logprob: -3.288827896118164
    3. ')' → logprob: -7.538827896118164
    4. 'str' → logprob: -8.788827896118164
    5. ' str' → logprob: -9.538827896118164
    6. '	Player' → logprob: -10.788827896118164
    7. '):
' → logprob: -12.788827896118164
    8. '   ' → logprob: -13.538827896118164
    9. 'player' → logprob: -13.913827896118164
    10. 'Game' → logprob: -14.163827896118164

Token 470: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -1.0564331205387134e-05
    2. 'symbol' → logprob: -11.75001049041748
    3. ')' → logprob: -13.87501049041748
    4. ' Symbol' → logprob: -14.87501049041748
    5. 'ymbol' → logprob: -15.25001049041748
    6. '(Symbol' → logprob: -15.62501049041748
    7. '_SYMBOL' → logprob: -16.125011444091797
    8. '):
' → logprob: -16.125011444091797
    9. '):' → logprob: -16.250011444091797
    10. '_symbol' → logprob: -16.500011444091797

Token 471: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028196057304739952
    2. ')' → logprob: -4.278195858001709
    3. '):
' → logprob: -4.278195858001709
    4. ':' → logprob: -10.153196334838867
    5. ' ):' → logprob: -10.903196334838867
    6. '):
' → logprob: -12.403196334838867
    7. '   ' → logprob: -12.653196334838867
    8. ' )' → logprob: -14.278196334838867
    9. ' ):
' → logprob: -14.778196334838867
    10. ' ' → logprob: -15.028196334838867

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011216417187824845
    2. 'self' → logprob: -6.876121520996094
    3. ' self' → logprob: -9.751121520996094
    4. '   ' → logprob: -11.251121520996094
    5. ':' → logprob: -12.126121520996094
    6. ',' → logprob: -12.876121520996094
    7. '	' → logprob: -13.126121520996094
    8. '        
' → logprob: -13.626121520996094
    9. '	self' → logprob: -13.751121520996094
    10. ')' → logprob: -14.251121520996094

Token 473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.09778083115816116
    2. ' self' → logprob: -2.84778094291687
    3. '       ' → logprob: -3.34778094291687
    4. '	self' → logprob: -11.59778118133545
    5. '   ' → logprob: -12.09778118133545
    6. 'super' → logprob: -13.72278118133545
    7. ' ' → logprob: -14.72278118133545
    8. '(self' → logprob: -14.97278118133545
    9. ' super' → logprob: -16.222780227661133
    10. '	' → logprob: -16.222780227661133

Token 474: '._' (ID: 2697)
  Prédit: '.symbol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.symbol' → logprob: -0.010187369771301746
    2. '._' → logprob: -5.260187149047852
    3. '.' → logprob: -5.760187149047852
    4. ' .' → logprob: -6.635187149047852
    5. 'symbol' → logprob: -8.385187149047852
    6. '_symbol' → logprob: -9.385187149047852
    7. '   ' → logprob: -9.885187149047852
    8. '.sym' → logprob: -10.135187149047852
    9. ' ' → logprob: -11.135187149047852
    10. ' symbol' → logprob: -11.260187149047852

Token 475: 'symbol' (ID: 33821)
  Prédit: 'symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -2.696889623621246e-06
    2. '_symbol' → logprob: -13.87500286102295
    3. 'player' → logprob: -14.12500286102295
    4. ' symbol' → logprob: -14.25000286102295
    5. 'target' → logprob: -16.000001907348633
    6. 'sym' → logprob: -16.500001907348633
    7. '.symbol' → logprob: -16.875001907348633
    8. '(symbol' → logprob: -17.125001907348633
    9. 'check' → logprob: -18.250001907348633
    10. 's' → logprob: -18.375001907348633

Token 476: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575968325138092
    2. ' =' → logprob: -0.825968325138092
    3. ':' → logprob: -10.575968742370605
    4. ')' → logprob: -13.075968742370605
    5. ' ' → logprob: -14.325968742370605
    6. ',' → logprob: -14.825968742370605
    7. '==' → logprob: -16.32596778869629
    8. ' ==' → logprob: -16.57596778869629
    9. '   ' → logprob: -16.95096778869629
    10. '.' → logprob: -17.45096778869629

Token 477: ' symbol' (ID: 10038)
  Prédit: ' symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' symbol' → logprob: -0.5759411454200745
    2. 'symbol' → logprob: -0.8259411454200745
    3. '(symbol' → logprob: -13.82594108581543
    4. 'Symbol' → logprob: -15.20094108581543
    5. ' symbole' → logprob: -15.82594108581543
    6. '_symbol' → logprob: -16.07594108581543
    7. 'sym' → logprob: -16.45094108581543
    8. ' ' → logprob: -16.57594108581543
    9. ' simbol' → logprob: -17.07594108581543
    10. ' символ' → logprob: -17.32594108581543

Token 478: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22966691851615906
    2. '   ' → logprob: -1.6046669483184814
    3. '    
' → logprob: -6.104666709899902
    4. '  
' → logprob: -7.604666709899902
    5. '<|end|>' → logprob: -7.604666709899902
    6. '

' → logprob: -7.979666709899902
    7. 'def' → logprob: -7.979666709899902
    8. '        
' → logprob: -9.729666709899902
    9. '<|end|>' → logprob: -9.979666709899902
    10. ' ' → logprob: -9.979666709899902

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0042472160421311855
    2. 'def' → logprob: -5.629247188568115
    3. '
' → logprob: -7.504247188568115
    4. ' def' → logprob: -10.004247665405273
    5. '    
' → logprob: -10.254247665405273
    6. '<|end|>' → logprob: -12.254247665405273
    7. '        
' → logprob: -12.754247665405273
    8. '

' → logprob: -13.504247665405273
    9. ' ' → logprob: -13.504247665405273
    10. '```' → logprob: -13.629247665405273

Token 480: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.318681188422488e-05
    2. ' def' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.12501335144043
    4. '
' → logprob: -20.50001335144043
    5. '	def' → logprob: -20.75001335144043
    6. '@' → logprob: -22.12501335144043
    7. '    
' → logprob: -23.87501335144043
    8. 'de' → logprob: -24.50001335144043
    9. '```' → logprob: -24.50001335144043
    10. ':def' → logprob: -24.75001335144043

Token 481: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.00769428675994277
    2. 'check' → logprob: -4.882694244384766
    3. ' def' → logprob: -9.382694244384766
    4. 'def' → logprob: -12.632694244384766
    5. '_check' → logprob: -14.632694244384766
    6. '.check' → logprob: -16.632694244384766
    7. '	check' → logprob: -16.757694244384766
    8. ' ' → logprob: -16.882694244384766
    9. ' ' → logprob: -17.007694244384766
    10. '
' → logprob: -18.257694244384766

Token 482: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1517960956552997e-05
    2. '(' → logprob: -11.500011444091797
    3. ' (' → logprob: -13.625011444091797
    4. '(
' → logprob: -16.250011444091797
    5. '(s' → logprob: -16.750011444091797
    6. 'self' → logprob: -17.125011444091797
    7. ' self' → logprob: -17.750011444091797
    8. '   ' → logprob: -17.750011444091797
    9. '       ' → logprob: -18.750011444091797
    10. '(sel' → logprob: -19.500011444091797

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.318681188422488e-05
    2. ' ,' → logprob: -11.50001335144043
    3. 'self' → logprob: -12.75001335144043
    4. ',self' → logprob: -17.00001335144043
    5. '       ' → logprob: -17.12501335144043
    6. ',
' → logprob: -17.37501335144043
    7. '   ' → logprob: -17.62501335144043
    8. ' self' → logprob: -18.12501335144043
    9. '(self' → logprob: -18.25001335144043
    10. 's' → logprob: -20.50001335144043

Token 484: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.023246875032782555
    2. 'board' → logprob: -3.7732467651367188
    3. '(board' → logprob: -14.648246765136719
    4. '	board' → logprob: -14.773246765136719
    5. 'b' → logprob: -15.523246765136719
    6. '.board' → logprob: -16.02324676513672
    7. 'Board' → logprob: -17.02324676513672
    8. '_board' → logprob: -17.02324676513672
    9. ')' → logprob: -17.27324676513672
    10. ' ' → logprob: -17.77324676513672

Token 485: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014903423143550754
    2. '):' → logprob: -6.876490116119385
    3. ')' → logprob: -7.876490116119385
    4. ',' → logprob: -10.376490592956543
    5. ' :' → logprob: -11.251490592956543
    6. '):
' → logprob: -11.376490592956543
    7. ' ):' → logprob: -11.751490592956543
    8. '   ' → logprob: -12.001490592956543
    9. '       ' → logprob: -12.126490592956543
    10. ' )' → logprob: -13.376490592956543

Token 486: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.014179266057908535
    2. 'Board' → logprob: -4.264179229736328
    3. ' board' → logprob: -11.139179229736328
    4. 'board' → logprob: -14.014179229736328
    5. '(Board' → logprob: -15.889179229736328
    6. ')' → logprob: -16.389179229736328
    7. '_board' → logprob: -16.514179229736328
    8. '.Board' → logprob: -17.014179229736328
    9. ' Boards' → logprob: -18.389179229736328
    10. 'BOARD' → logprob: -18.764179229736328

Token 487: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.52919222577475e-05
    2. ' )' → logprob: -9.750075340270996
    3. '):' → logprob: -11.750075340270996
    4. '   ' → logprob: -12.000075340270996
    5. ':' → logprob: -13.375075340270996
    6. '       ' → logprob: -14.125075340270996
    7. '):
' → logprob: -15.000075340270996
    8. 'self' → logprob: -16.00007438659668
    9. ')->' → logprob: -16.12507438659668
    10. '`)' → logprob: -17.62507438659668

Token 488: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6274826526641846
    2. ')' → logprob: -1.1274826526641846
    3. '->' → logprob: -2.6274826526641846
    4. ':' → logprob: -2.7524826526641846
    5. '       ' → logprob: -6.1274824142456055
    6. ')->' → logprob: -6.2524824142456055
    7. '   ' → logprob: -6.8774824142456055
    8. '(self' → logprob: -7.2524824142456055
    9. '):' → logprob: -9.252482414245605
    10. 'self' → logprob: -9.377482414245605

Token 489: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.16022655367851257
    2. 'Optional' → logprob: -1.910226583480835
    3. '(Optional' → logprob: -13.160226821899414
    4. '	Optional' → logprob: -14.910226821899414
    5. ' optional' → logprob: -16.535226821899414
    6. '   ' → logprob: -17.535226821899414
    7. '_optional' → logprob: -17.660226821899414
    8. ' ' → logprob: -17.910226821899414
    9. 'optional' → logprob: -18.160226821899414
    10. '.Optional' → logprob: -19.285226821899414

Token 490: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '[
' → logprob: -13.750001907348633
    3. ' [' → logprob: -15.500001907348633
    4. 'Game' → logprob: -16.250001907348633
    5. '<Game' → logprob: -17.000001907348633
    6. '[List' → logprob: -17.625001907348633
    7. '[[' → logprob: -17.750001907348633
    8. '\[' → logprob: -18.250001907348633
    9. '[str' → logprob: -18.500001907348633
    10. '(Game' → logprob: -18.500001907348633

Token 491: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -5.676981345459353e-06
    2. ' Game' → logprob: -12.125005722045898
    3. 'Player' → logprob: -16.3750057220459
    4. '(Game' → logprob: -17.0000057220459
    5. '	Game' → logprob: -17.2500057220459
    6. '[' → logprob: -18.0000057220459
    7. '<Game' → logprob: -18.1250057220459
    8. '.Game' → logprob: -18.7500057220459
    9. '   ' → logprob: -19.1250057220459
    10. '_Game' → logprob: -19.3750057220459

Token 492: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: -1.0280383548888494e-06
    2. '	Result' → logprob: -14.625000953674316
    3. '[' → logprob: -15.125000953674316
    4. ' Result' → logprob: -17.375001907348633
    5. '<Result' → logprob: -17.750001907348633
    6. '.Result' → logprob: -17.875001907348633
    7. '_result' → logprob: -18.125001907348633
    8. 'result' → logprob: -18.500001907348633
    9. 'Results' → logprob: -18.750001907348633
    10. '_Result' → logprob: -18.750001907348633

Token 493: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3533875048160553
    2. '):
' → logprob: -1.228387475013733
    3. ':' → logprob: -6.103387355804443
    4. ')' → logprob: -6.353387355804443
    5. '   ' → logprob: -7.853387355804443
    6. '):
' → logprob: -8.228387832641602
    7. '       ' → logprob: -8.853387832641602
    8. '(self' → logprob: -9.978387832641602
    9. 'self' → logprob: -10.103387832641602
    10. ':
' → logprob: -10.228387832641602

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031370002776384354
    2. ' for' → logprob: -3.656369924545288
    3. 'for' → logprob: -5.406370162963867
    4. '
' → logprob: -7.531370162963867
    5. '```' → logprob: -11.156370162963867
    6. '   ' → logprob: -12.156370162963867
    7. '        
' → logprob: -13.156370162963867
    8. ' lines' → logprob: -13.656370162963867
    9. ',' → logprob: -13.906370162963867
    10. ':' → logprob: -13.906370162963867

Token 495: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19676348567008972
    2. ' for' → logprob: -2.196763515472412
    3. '       ' → logprob: -2.696763515472412
    4. '   ' → logprob: -10.571763038635254
    5. '
' → logprob: -13.196763038635254
    6. '	for' → logprob: -14.821763038635254
    7. '      ' → logprob: -14.946763038635254
    8. ' ' → logprob: -15.196763038635254
    9. '```' → logprob: -15.196763038635254
    10. 'result' → logprob: -15.821763038635254

Token 496: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04858941584825516
    2. ' line' → logprob: -3.0485894680023193
    3. 'lines' → logprob: -14.173589706420898
    4. '_line' → logprob: -14.173589706420898
    5. '	line' → logprob: -15.298589706420898
    6. '   ' → logprob: -16.0485897064209
    7. '(line' → logprob: -17.1735897064209
    8. ' lines' → logprob: -17.1735897064209
    9. '[line' → logprob: -17.4235897064209
    10. '=line' → logprob: -17.4235897064209

Token 497: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006716317031532526
    2. 'in' → logprob: -5.006716251373291
    3. '[' → logprob: -15.63171672821045
    4. '	in' → logprob: -15.75671672821045
    5. '   ' → logprob: -16.006715774536133
    6. ' ' → logprob: -16.006715774536133
    7. 'import' → logprob: -16.131715774536133
    8. '_in' → logprob: -16.506715774536133
    9. '       ' → logprob: -17.006715774536133
    10. 'In' → logprob: -17.506715774536133

Token 498: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.004080062732100487
    2. ' board' → logprob: -5.504080295562744
    3. '   ' → logprob: -13.629079818725586
    4. '(board' → logprob: -15.504079818725586
    5. '	board' → logprob: -15.879079818725586
    6. ' ' → logprob: -18.129079818725586
    7. 'b' → logprob: -18.254079818725586
    8. '       ' → logprob: -18.254079818725586
    9. '.board' → logprob: -18.504079818725586
    10. 'list' → logprob: -18.504079818725586

Token 499: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -11.750009536743164
    3. ' .' → logprob: -14.000009536743164
    4. '.line' → logprob: -15.750009536743164
    5. '	lines' → logprob: -16.125009536743164
    6. '(lines' → logprob: -16.750009536743164
    7. '.readlines' → logprob: -17.625009536743164
    8. 'lines' → logprob: -18.250009536743164
    9. ' lines' → logprob: -18.250009536743164
    10. '.linspace' → logprob: -18.500009536743164

Token 500: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004185009747743607
    2. '():
' → logprob: -5.504185199737549
    3. ':' → logprob: -9.50418472290039
    4. '()' → logprob: -11.00418472290039
    5. '():
' → logprob: -11.37918472290039
    6. ' ():' → logprob: -12.50418472290039
    7. '):' → logprob: -16.62918472290039
    8. '():

' → logprob: -17.00418472290039
    9. ':
' → logprob: -17.12918472290039
    10. '       ' → logprob: -17.25418472290039

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005109758349135518
    2. ' if' → logprob: -7.750511169433594
    3. 'if' → logprob: -9.500511169433594
    4. '          ' → logprob: -13.375511169433594
    5. '            
' → logprob: -13.750511169433594
    6. '            ' → logprob: -14.125511169433594
    7. '               ' → logprob: -14.250511169433594
    8. '```' → logprob: -14.875511169433594
    9. '
' → logprob: -15.750511169433594
    10. '       ' → logprob: -15.750511169433594

Token 502: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003428531577810645
    2. '           ' → logprob: -6.2534284591674805
    3. ' if' → logprob: -6.5034284591674805
    4. '               ' → logprob: -14.75342845916748
    5. '   ' → logprob: -16.003429412841797
    6. 'If' → logprob: -16.753429412841797
    7. ' ' → logprob: -17.628429412841797
    8. '```' → logprob: -17.878429412841797
    9. '	if' → logprob: -18.253429412841797
    10. ';if' → logprob: -18.628429412841797

Token 503: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.00524798734113574
    2. ' all' → logprob: -5.255248069763184
    3. 'len' → logprob: -12.255248069763184
    4. '   ' → logprob: -12.380248069763184
    5. ' ' → logprob: -13.630248069763184
    6. 'line' → logprob: -13.755248069763184
    7. '(all' → logprob: -13.880248069763184
    8. '	all' → logprob: -14.505248069763184
    9. '       ' → logprob: -14.630248069763184
    10. '           ' → logprob: -15.005248069763184

Token 504: '(cell' (ID: 46188)
  Prédit: '(cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cell' → logprob: -0.0006121210753917694
    2. '(c' → logprob: -7.500612258911133
    3. 'cell' → logprob: -9.750612258911133
    4. '[cell' → logprob: -14.625612258911133
    5. ' cell' → logprob: -16.000612258911133
    6. '(token' → logprob: -16.125612258911133
    7. '(symbol' → logprob: -16.375612258911133
    8. '(s' → logprob: -16.375612258911133
    9. '(
' → logprob: -17.125612258911133
    10. '(' → logprob: -17.250612258911133

Token 505: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.313264399766922
    2. '==' → logprob: -1.3132643699645996
    3. '=' → logprob: -14.313264846801758
    4. '==
' → logprob: -14.688264846801758
    5. ' ' → logprob: -14.938264846801758
    6. ')==' → logprob: -15.188264846801758
    7. '===' → logprob: -15.313264846801758
    8. ']==' → logprob: -15.563264846801758
    9. '```' → logprob: -15.688264846801758
    10. ' ==
' → logprob: -16.188264846801758

Token 506: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009117019944824278
    2. ' self' → logprob: -7.000911712646484
    3. '(self' → logprob: -15.500911712646484
    4. '=self' → logprob: -17.875911712646484
    5. '[self' → logprob: -18.250911712646484
    6. ' ' → logprob: -19.125911712646484
    7. '   ' → logprob: -19.125911712646484
    8. '`' → logprob: -19.375911712646484
    9. ')' → logprob: -19.500911712646484
    10. '
' → logprob: -19.750911712646484

Token 507: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.15441757265944e-05
    2. '_symbol' → logprob: -11.000031471252441
    3. '.' → logprob: -11.750031471252441
    4. '_' → logprob: -13.125031471252441
    5. '_sym' → logprob: -13.875031471252441
    6. ' .' → logprob: -14.625031471252441
    7. '.symbol' → logprob: -14.750031471252441
    8. '.__' → logprob: -14.750031471252441
    9. ' ' → logprob: -14.875031471252441
    10. ' _' → logprob: -15.250031471252441

Token 508: 'symbol' (ID: 33821)
  Prédit: 'symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -2.8444881536415778e-05
    2. '_symbol' → logprob: -11.125028610229492
    3. ' symbol' → logprob: -11.500028610229492
    4. '.symbol' → logprob: -13.250028610229492
    5. 'sym' → logprob: -14.750028610229492
    6. 'ymbol' → logprob: -15.000028610229492
    7. 'Symbol' → logprob: -15.250028610229492
    8. '(symbol' → logprob: -15.375028610229492
    9. 'token' → logprob: -16.250028610229492
    10. ' символ' → logprob: -16.375028610229492

Token 509: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.010672833770513535
    2. 'for' → logprob: -4.6356730461120605
    3. ' ' → logprob: -7.0106730461120605
    4. ' and' → logprob: -12.135672569274902
    5. ')' → logprob: -12.260672569274902
    6. '            ' → logprob: -14.010672569274902
    7. ' or' → logprob: -14.135672569274902
    8. '    ' → logprob: -14.760672569274902
    9. ' )' → logprob: -14.760672569274902
    10. 'and' → logprob: -15.010672569274902

Token 510: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.16023418307304382
    2. ' cell' → logprob: -1.9102342128753662
    3. 'cel' → logprob: -12.660234451293945
    4. '	cell' → logprob: -13.160234451293945
    5. 'token' → logprob: -13.285234451293945
    6. '(cell' → logprob: -13.910234451293945
    7. '[cell' → logprob: -14.535234451293945
    8. '_cell' → logprob: -14.785234451293945
    9. ' ' → logprob: -14.910234451293945
    10. 'line' → logprob: -15.785234451293945

Token 511: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17981484532356262
    2. 'in' → logprob: -1.8048148155212402
    3. 'line' → logprob: -10.179815292358398
    4. ' line' → logprob: -11.429815292358398
    5. ' ' → logprob: -11.929815292358398
    6. '<|end|>' → logprob: -12.054815292358398
    7. 'cell' → logprob: -12.554815292358398
    8. ')' → logprob: -12.929815292358398
    9. ' cell' → logprob: -13.429815292358398
    10. '<|end|>' → logprob: -15.179815292358398

Token 512: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1269291490316391
    2. ' line' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.37692928314209
    4. '	line' → logprob: -15.25192928314209
    5. '(line' → logprob: -15.75192928314209
    6. '[line' → logprob: -17.001928329467773
    7. '=line' → logprob: -17.251928329467773
    8. '
' → logprob: -17.876928329467773
    9. '#line' → logprob: -18.001928329467773
    10. 'cell' → logprob: -18.126928329467773

Token 513: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035280867014080286
    2. ')' → logprob: -6.128528118133545
    3. '):
' → logprob: -6.753528118133545
    4. ' ):' → logprob: -9.003527641296387
    5. '           ' → logprob: -10.753527641296387
    6. ':' → logprob: -10.878527641296387
    7. '               ' → logprob: -12.253527641296387
    8. ' and' → logprob: -12.753527641296387
    9. '):

' → logprob: -14.003527641296387
    10. '):
' → logprob: -14.253527641296387

Token 514: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003919463779311627
    2. ' return' → logprob: -8.625391960144043
    3. '           ' → logprob: -9.500391960144043
    4. ':' → logprob: -9.750391960144043
    5. ':
' → logprob: -10.375391960144043
    6. 'return' → logprob: -11.125391960144043
    7. ':return' → logprob: -11.125391960144043
    8. ' and' → logprob: -11.250391960144043
    9. ',' → logprob: -13.750391960144043
    10. '              ' → logprob: -13.875391960144043

Token 515: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023928938433527946
    2. ' return' → logprob: -3.7739288806915283
    3. '               ' → logprob: -8.02392864227295
    4. '                   ' → logprob: -8.27392864227295
    5. 'if' (adapté à ' if') → logprob: -10.14892864227295
    6. '
' → logprob: -10.14892864227295
    7. ' if' → logprob: -12.14892864227295
    8. '   ' → logprob: -12.14892864227295
    9. ':return' → logprob: -12.27392864227295
    10. '	return' → logprob: -13.02392864227295

Token 516: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2525206506252289
    2. ' self' → logprob: -1.5025206804275513
    3. '                   ' → logprob: -7.752520561218262
    4. '               ' → logprob: -9.502520561218262
    5. '(self' → logprob: -9.627520561218262
    6. '                ' → logprob: -11.877520561218262
    7. '                       ' → logprob: -12.502520561218262
    8. '	self' → logprob: -13.002520561218262
    9. '                    ' → logprob: -13.627520561218262
    10. '[self' → logprob: -13.627520561218262

Token 517: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.088346359931165e-07
    2. '.' → logprob: -14.750000953674316
    3. ' .' → logprob: -15.500000953674316
    4. ']._' → logprob: -16.375
    5. '->_' → logprob: -17.25
    6. '.__' → logprob: -17.25
    7. '._
' → logprob: -17.375
    8. ')._' → logprob: -17.75
    9. '   ' → logprob: -18.125
    10. '.
' → logprob: -18.75

Token 518: 'symbol' (ID: 33821)
  Prédit: 'symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -6.034592388459714e-06
    2. '_symbol' → logprob: -12.375005722045898
    3. ' symbol' → logprob: -14.000005722045898
    4. '(symbol' → logprob: -14.625005722045898
    5. '.symbol' → logprob: -15.250005722045898
    6. ' ' → logprob: -17.0000057220459
    7. '   ' → logprob: -17.0000057220459
    8. '```' → logprob: -17.1250057220459
    9. 'symbols' → logprob: -17.3750057220459
    10. '
' → logprob: -18.0000057220459

Token 519: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04863050952553749
    2. ' ==' → logprob: -3.048630475997925
    3. '==
' → logprob: -10.423630714416504
    4. 'is' → logprob: -11.923630714416504
    5. '===' → logprob: -12.923630714416504
    6. '=' → logprob: -13.423630714416504
    7. '   ' → logprob: -14.423630714416504
    8. 'in' → logprob: -14.923630714416504
    9. '()==' → logprob: -14.923630714416504
    10. ' is' → logprob: -15.173630714416504

Token 520: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -6.2729995988775045e-06
    2. ' Player' → logprob: -12.000006675720215
    3. '	Player' → logprob: -17.3750057220459
    4. 'Game' → logprob: -18.2500057220459
    5. '(Player' → logprob: -20.0000057220459
    6. 'player' → logprob: -20.1250057220459
    7. 'User' → logprob: -20.6250057220459
    8. 'Patient' → logprob: -20.8750057220459
    9. '_Player' → logprob: -21.0000057220459
    10. '
' → logprob: -21.3750057220459

Token 521: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -4.320199877838604e-07
    2. 'symbol' → logprob: -15.125
    3. '.Symbol' → logprob: -16.875
    4. ' Symbol' → logprob: -17.25
    5. '_symbol' → logprob: -17.75
    6. 'Sym' → logprob: -18.75
    7. '_SYMBOL' → logprob: -18.875
    8. 'ymbol' → logprob: -18.875
    9. 'Symbols' → logprob: -19.375
    10. ''S' → logprob: -19.75

Token 522: '.O' (ID: 17193)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.3586637079715729
    2. '.O' → logprob: -1.2336636781692505
    3. ''O' → logprob: -4.983663558959961
    4. 'X' → logprob: -6.108663558959961
    5. '.X' → logprob: -7.983663558959961
    6. '	O' → logprob: -7.983663558959961
    7. ' O' → logprob: -8.733663558959961
    8. '"O' → logprob: -9.858663558959961
    9. '`' → logprob: -9.983663558959961
    10. '_O' → logprob: -10.358663558959961

Token 523: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1003013476729393
    2. ':
' → logprob: -2.3503012657165527
    3. ':return' → logprob: -9.600301742553711
    4. ':
' → logprob: -10.850301742553711
    5. '):
' → logprob: -13.225301742553711
    6. '           ' → logprob: -13.350301742553711
    7. ' :' → logprob: -13.600301742553711
    8. '   ' → logprob: -13.850301742553711
    9. '):' → logprob: -14.350301742553711
    10. ':

' → logprob: -14.850301742553711

Token 524: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.32848918437957764
    2. 'return' → logprob: -1.7034891843795776
    3. ' return' → logprob: -2.328489303588867
    4. '               ' → logprob: -8.328489303588867
    5. ':return' → logprob: -9.078489303588867
    6. '           ' → logprob: -9.953489303588867
    7. '	return' → logprob: -10.828489303588867
    8. '                       ' → logprob: -10.828489303588867
    9. '		           ' → logprob: -10.953489303588867
    10. '                  ' → logprob: -12.078489303588867

Token 525: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023518456146121025
    2. ' return' → logprob: -3.7735185623168945
    3. '                   ' → logprob: -8.398518562316895
    4. '                       ' → logprob: -10.523518562316895
    5. '	return' → logprob: -11.648518562316895
    6. '   ' → logprob: -12.023518562316895
    7. '               ' → logprob: -12.398518562316895
    8. ':return' → logprob: -14.398518562316895
    9. ' ' → logprob: -14.523518562316895
    10. '       ' → logprob: -15.523518562316895

Token 526: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -2.339278580620885e-06
    2. ' Game' → logprob: -13.000001907348633
    3. '	Game' → logprob: -19.375001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '(Game' → logprob: -23.000001907348633
    6. 'game' → logprob: -23.625001907348633
    7. '<Game' → logprob: -23.625001907348633
    8. '
' → logprob: -23.875001907348633
    9. '_game' → logprob: -24.000001907348633
    10. '.Game' → logprob: -24.125001907348633

Token 527: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: 0.0
    2. '	Result' → logprob: -18.25
    3. '_Result' → logprob: -18.375
    4. 'result' → logprob: -18.625
    5. 'Results' → logprob: -19.375
    6. 'Res' → logprob: -19.375
    7. '_RESULT' → logprob: -19.625
    8. '.Result' → logprob: -19.625
    9. 'RESULT' → logprob: -20.25
    10. ' Result' → logprob: -20.375

Token 528: '.O' (ID: 17193)
  Prédit: '.O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.O' → logprob: -0.44955652952194214
    2. '_O' → logprob: -1.199556589126587
    3. 'O' → logprob: -2.824556589126587
    4. '._' → logprob: -6.824556350708008
    5. '	O' → logprob: -9.074556350708008
    6. '.' → logprob: -9.199556350708008
    7. ''O' → logprob: -10.699556350708008
    8. ' O' → logprob: -11.324556350708008
    9. '   ' → logprob: -11.449556350708008
    10. ' .' → logprob: -11.449556350708008

Token 529: '_WIN' (ID: 85616)
  Prédit: '_WIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_WIN' → logprob: -8.061054359131958e-06
    2. 'WIN' → logprob: -11.750007629394531
    3. '_win' → logprob: -16.87500762939453
    4. '_' → logprob: -18.00000762939453
    5. '.Win' → logprob: -18.12500762939453
    6. '_WRITE' → logprob: -18.50000762939453
    7. ' _' → logprob: -18.62500762939453
    8. 'Win' → logprob: -18.62500762939453
    9. ' WIN' → logprob: -18.87500762939453
    10. '_WAIT' → logprob: -19.00000762939453

Token 530: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06356048583984375
    2. '
' → logprob: -2.8135604858398438
    3. '       ' → logprob: -7.438560485839844
    4. '                
' → logprob: -7.938560485839844
    5. '           ' → logprob: -9.188560485839844
    6. '\
' → logprob: -9.438560485839844
    7. '        
' → logprob: -9.563560485839844
    8. 'elif' → logprob: -9.563560485839844
    9. '<|end|>' → logprob: -9.813560485839844
    10. ' 
' → logprob: -10.188560485839844

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004648696631193161
    2. '                
' → logprob: -8.75046443939209
    3. '
' → logprob: -9.25046443939209
    4. 'elif' → logprob: -9.62546443939209
    5. '       ' → logprob: -10.37546443939209
    6. '                ' → logprob: -10.62546443939209
    7. '\
' → logprob: -11.00046443939209
    8. '           ' → logprob: -11.12546443939209
    9. '			' → logprob: -11.87546443939209
    10. ' 
' → logprob: -12.00046443939209

Token 532: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.4161853492259979
    2. '               ' → logprob: -1.4161853790283203
    3. 'else' → logprob: -3.0411853790283203
    4. ' elif' → logprob: -3.4161853790283203
    5. ' else' → logprob: -4.16618537902832
    6. 'if' → logprob: -6.66618537902832
    7. ' if' → logprob: -8.16618537902832
    8. 'return' → logprob: -9.54118537902832
    9. '                ' → logprob: -10.54118537902832
    10. ' return' → logprob: -11.91618537902832

Token 533: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751067981123924
    2. ' self' → logprob: -3.5297510623931885
    3. '(self' → logprob: -15.27975082397461
    4. '               ' → logprob: -15.90475082397461
    5. 'Player' → logprob: -16.65475082397461
    6. '   ' → logprob: -16.90475082397461
    7. '           ' → logprob: -17.02975082397461
    8. ' ' → logprob: -17.02975082397461
    9. '[self' → logprob: -17.65475082397461
    10. '                   ' → logprob: -17.77975082397461

Token 534: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0023638748098164797
    2. '.' → logprob: -6.752363681793213
    3. '_symbol' → logprob: -7.377363681793213
    4. '_' → logprob: -9.002364158630371
    5. '.symbol' → logprob: -9.377364158630371
    6. ' _' → logprob: -9.752364158630371
    7. '==' → logprob: -10.002364158630371
    8. '.Symbol' → logprob: -10.002364158630371
    9. 'Symbol' → logprob: -10.127364158630371
    10. ' .' → logprob: -10.502364158630371

Token 535: 'symbol' (ID: 33821)
  Prédit: 'symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbol' → logprob: -0.0204643402248621
    2. 'Player' → logprob: -4.5204644203186035
    3. 'Symbol' → logprob: -4.7704644203186035
    4. 'X' → logprob: -7.5204644203186035
    5. '.symbol' → logprob: -9.270463943481445
    6. '_symbol' → logprob: -9.520463943481445
    7. ' symbol' → logprob: -9.895463943481445
    8. 'User' → logprob: -10.270463943481445
    9. 'O' → logprob: -10.645463943481445
    10. 'ymbol' → logprob: -10.895463943481445

Token 536: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519397437572479
    2. '==' → logprob: -1.5019397735595703
    3. '==
' → logprob: -12.37693977355957
    4. ' ' → logprob: -12.62693977355957
    5. '=' → logprob: -13.87693977355957
    6. ' ' → logprob: -14.62693977355957
    7. '===' → logprob: -15.00193977355957
    8. ' ==
' → logprob: -15.37693977355957
    9. '[' → logprob: -15.75193977355957
    10. '.' → logprob: -15.75193977355957

Token 537: ' Player' (ID: 12487)
  Prédit: 'Player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Player' → logprob: -0.0005530327325686812
    2. ' Player' → logprob: -7.500553131103516
    3. '	Player' → logprob: -16.250553131103516
    4. 'Game' → logprob: -18.250553131103516
    5. 'player' → logprob: -18.500553131103516
    6. '_Player' → logprob: -18.500553131103516
    7. '.Player' → logprob: -18.750553131103516
    8. '(Player' → logprob: -19.125553131103516
    9. 'Patient' → logprob: -19.250553131103516
    10. '<Player' → logprob: -19.750553131103516

Token 538: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -9.088346359931165e-07
    2. '.X' → logprob: -14.250000953674316
    3. '.Symbol' → logprob: -16.625
    4. 'X' → logprob: -17.75
    5. 'Symbols' → logprob: -17.75
    6. 'Sym' → logprob: -18.25
    7. 'Player' → logprob: -18.375
    8. '_SYMBOL' → logprob: -19.0
    9. ' Symbol' → logprob: -19.25
    10. '_symbol' → logprob: -19.25

Token 539: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -0.35119539499282837
    2. 'X' → logprob: -1.2261953353881836
    3. 'Player' → logprob: -6.476195335388184
    4. '.' → logprob: -6.851195335388184
    5. 'player' → logprob: -9.476195335388184
    6. '.Player' → logprob: -10.601195335388184
    7. ''' → logprob: -11.601195335388184
    8. ' ' → logprob: -11.726195335388184
    9. ''.' → logprob: -12.226195335388184
    10. ' X' → logprob: -12.601195335388184

Token 540: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2861842215061188
    2. ':' → logprob: -1.5361841917037964
    3. '                   ' → logprob: -3.911184310913086
    4. '==' → logprob: -5.161184310913086
    5. '               ' → logprob: -5.161184310913086
    6. '           ' → logprob: -7.536184310913086
    7. ':return' → logprob: -7.661184310913086
    8. ' ==' → logprob: -8.161184310913086
    9. '                  ' → logprob: -8.411184310913086
    10. '   ' → logprob: -8.786184310913086

Token 541: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027987074106931686
    2. ' return' → logprob: -3.777987003326416
    3. 'return' → logprob: -5.402987003326416
    4. '           ' → logprob: -9.902987480163574
    5. ':return' → logprob: -10.027987480163574
    6. '	return' → logprob: -10.527987480163574
    7. '                    ' → logprob: -11.027987480163574
    8. '		           ' → logprob: -11.527987480163574
    9. ':
' → logprob: -11.652987480163574
    10. '				' → logprob: -11.777987480163574

Token 542: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1271035373210907
    2. 'return' (adapté à ' return') → logprob: -2.127103567123413
    3. ' Game' → logprob: -9.377103805541992
    4. 'Game' → logprob: -9.377103805541992
    5. '                   ' → logprob: -12.377103805541992
    6. 'Return' → logprob: -14.127103805541992
    7. '               ' → logprob: -14.627103805541992
    8. ' ' → logprob: -15.502103805541992
    9. '                    ' → logprob: -16.127103805541992
    10. '                ' → logprob: -16.127103805541992

Token 543: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.011047814972698689
    2. ' Game' → logprob: -4.511047840118408
    3. '	Game' → logprob: -20.26104736328125
    4. '   ' → logprob: -22.63604736328125
    5. '.Game' → logprob: -23.26104736328125
    6. '(Game' → logprob: -23.38604736328125
    7. ' ' → logprob: -23.63604736328125
    8. '<Game' → logprob: -23.63604736328125
    9. '_Game' → logprob: -24.38604736328125
    10. ' game' → logprob: -24.88604736328125

Token 544: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: 0.0
    2. 'result' → logprob: -19.125
    3. 'Results' → logprob: -20.5
    4. '_result' → logprob: -22.25
    5. '	Result' → logprob: -22.25
    6. 'Game' → logprob: -22.625
    7. '.Result' → logprob: -23.0
    8. '_RESULT' → logprob: -23.25
    9. 'Symbol' → logprob: -23.5
    10. 'RESULT' → logprob: -23.5

Token 545: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -0.00016241880075540394
    2. '.' → logprob: -9.125162124633789
    3. 'X' → logprob: -10.125162124633789
    4. '._' → logprob: -12.000162124633789
    5. ' .' → logprob: -12.375162124633789
    6. '.XR' → logprob: -14.250162124633789
    7. '.Xr' → logprob: -14.500162124633789
    8. ' ' → logprob: -14.625162124633789
    9. '   ' → logprob: -14.625162124633789
    10. '_X' → logprob: -15.500162124633789

Token 546: '_WIN' (ID: 85616)
  Prédit: '_WIN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_WIN' → logprob: -3.941161776310764e-05
    2. ' _' → logprob: -11.125039100646973
    3. '_win' → logprob: -11.500039100646973
    4. '_' → logprob: -13.125039100646973
    5. '_UN' → logprob: -13.125039100646973
    6. '_FAIL' → logprob: -13.125039100646973
    7. '_WRITE' → logprob: -13.750039100646973
    8. '_W' → logprob: -14.250039100646973
    9. 'WIN' → logprob: -14.500039100646973
    10. '_WARN' → logprob: -14.500039100646973

Token 547: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06932676583528519
    2. '<|end|>' → logprob: -2.944326877593994
    3. '               ' → logprob: -5.194326877593994
    4. 'return' → logprob: -5.944326877593994
    5. '        ' → logprob: -6.194326877593994
    6. '
' → logprob: -6.444326877593994
    7. 'None' → logprob: -7.194326877593994
    8. ' return' → logprob: -8.069326400756836
    9. ')' → logprob: -8.194326400756836
    10. '	' → logprob: -8.569326400756836

Token 549: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03178476542234421
    2. '       ' → logprob: -3.781784772872925
    3. 'None' → logprob: -5.156784534454346
    4. ' return' → logprob: -5.906784534454346
    5. '   ' → logprob: -11.656785011291504
    6. '	return' → logprob: -12.281785011291504
    7. ' None' → logprob: -12.656785011291504
    8. '
' → logprob: -13.531785011291504
    9. ')' → logprob: -14.031785011291504
    10. 'eturn' → logprob: -14.406785011291504

Token 550: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01416350994259119
    2. ' None' → logprob: -4.264163494110107
    3. '(None' → logprob: -17.514163970947266
    4. 'none' → logprob: -18.014163970947266
    5. '_None' → logprob: -18.889163970947266
    6. 'Game' → logprob: -19.264163970947266
    7. '=None' → logprob: -19.514163970947266
    8. ',None' → logprob: -19.514163970947266
    9. 'No' → logprob: -20.889163970947266
    10. 'null' → logprob: -20.889163970947266

Token 551: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00011713240382960066
    2. '<|end|>' → logprob: -9.375117301940918
    3. ' class' → logprob: -10.625117301940918
    4. '```' → logprob: -12.625117301940918
    5. '
' → logprob: -13.000117301940918
    6. '<class' → logprob: -13.875117301940918
    7. '#' → logprob: -15.000117301940918
    8. '<|end|>' → logprob: -15.500117301940918
    9. '-class' → logprob: -15.625117301940918
    10. 'import' → logprob: -15.625117301940918

Token 553: ' Game' (ID: 7022)
  Prédit: 'Draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Draw' → logprob: -0.12701241672039032
    2. ' Draw' → logprob: -2.2520124912261963
    3. 'Board' → logprob: -5.877012252807617
    4. 'Full' → logprob: -6.252012252807617
    5. 'No' → logprob: -6.877012252807617
    6. 'Three' → logprob: -7.002012252807617
    7. 'All' → logprob: -7.127012252807617
    8. 'Game' → logprob: -7.127012252807617
    9. 'Space' → logprob: -7.127012252807617
    10. 'Empty' → logprob: -7.502012252807617

Token 554: 'Evaluator' (ID: 87172)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13368777930736542
    2. 'Engine' → logprob: -2.508687734603882
    3. 'Manager' → logprob: -4.008687973022461
    4. 'State' → logprob: -4.258687973022461
    5. ':
' → logprob: -4.883687973022461
    6. 'Controller' → logprob: -6.633687973022461
    7. 'Result' → logprob: -7.008687973022461
    8. 'Runner' → logprob: -7.883687973022461
    9. '():' → logprob: -8.008687973022461
    10. 'Logic' → logprob: -8.508687973022461

Token 555: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041740018874406815
    2. '(' → logprob: -3.2917399406433105
    3. ':
' → logprob: -5.6667399406433105
    4. '(Game' → logprob: -9.041740417480469
    5. '(Abstract' → logprob: -10.291740417480469
    6. ' :' → logprob: -10.666740417480469
    7. '():' → logprob: -11.416740417480469
    8. '(
' → logprob: -11.791740417480469
    9. ':

' → logprob: -11.916740417480469
    10. '<|end|>' → logprob: -12.666740417480469

Token 556: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006936123827472329
    2. 'def' → logprob: -7.7506937980651855
    3. ' def' → logprob: -8.250693321228027
    4. '```' → logprob: -14.375693321228027
    5. ':' → logprob: -14.750693321228027
    6. '    
' → logprob: -15.000693321228027
    7. '
' → logprob: -16.000694274902344
    8. '	def' → logprob: -16.375694274902344
    9. 'class' → logprob: -16.375694274902344
    10. ':def' → logprob: -16.625694274902344

Token 557: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.28990116715431213
    2. 'def' (adapté à ' def') → logprob: -1.5399011373519897
    3. '   ' → logprob: -3.2899012565612793
    4. '	def' → logprob: -13.414900779724121
    5. ' ' → logprob: -14.914900779724121
    6. ':def' → logprob: -15.664900779724121
    7. '    ' → logprob: -15.789900779724121
    8. '  ' → logprob: -16.539901733398438
    9. 'de' → logprob: -16.539901733398438
    10. ':' → logprob: -16.539901733398438

Token 558: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2528129518032074
    2. '__' → logprob: -1.5028129816055298
    3. '_init' → logprob: -7.87781286239624
    4. 'init' → logprob: -8.002813339233398
    5. '___' → logprob: -9.127813339233398
    6. 'def' → logprob: -10.627813339233398
    7. ' def' → logprob: -11.502813339233398
    8. '```' → logprob: -11.877813339233398
    9. ' init' → logprob: -12.127813339233398
    10. '**' → logprob: -12.252813339233398

Token 559: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. 'it' → logprob: -13.750001907348633
    3. 'nit' → logprob: -14.750001907348633
    4. 'def' → logprob: -15.000001907348633
    5. 'iter' → logprob: -16.125001907348633
    6. '(init' → logprob: -16.750001907348633
    7. 'inite' → logprob: -16.875001907348633
    8. 'ini' → logprob: -17.000001907348633
    9. '`' → logprob: -17.125001907348633
    10. '__' → logprob: -17.125001907348633

Token 560: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20802778005599976
    2. '__(' → logprob: -1.7080278396606445
    3. '(' → logprob: -5.3330278396606445
    4. ' (' → logprob: -6.7080278396606445
    5. '__(
' → logprob: -8.583027839660645
    6. '   ' → logprob: -9.208027839660645
    7. '(
' → logprob: -9.208027839660645
    8. 'self' → logprob: -9.833027839660645
    9. '
' → logprob: -10.833027839660645
    10. ' ' → logprob: -10.958027839660645

Token 561: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.429896944202483e-05
    2. ')' → logprob: -10.500043869018555
    3. ' self' → logprob: -11.875043869018555
    4. '):
' → logprob: -12.250043869018555
    5. '
' → logprob: -12.750043869018555
    6. '       ' → logprob: -13.875043869018555
    7. '(self' → logprob: -14.875043869018555
    8. '   ' → logprob: -15.125043869018555
    9. '	self' → logprob: -16.125043869018555
    10. 'se' → logprob: -16.375043869018555

Token 562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008559254929423332
    2. 'self' → logprob: -4.883559226989746
    3. '       ' → logprob: -7.883559226989746
    4. '   ' → logprob: -8.758559226989746
    5. ',
' → logprob: -9.508559226989746
    6. ' ,' → logprob: -9.633559226989746
    7. '(self' → logprob: -9.758559226989746
    8. ',self' → logprob: -9.758559226989746
    9. ' self' → logprob: -10.008559226989746
    10. '):
' → logprob: -10.133559226989746

Token 563: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.007609704975038767
    2. ' check' → logprob: -5.257609844207764
    3. 'board' → logprob: -6.757609844207764
    4. 'win' → logprob: -6.882609844207764
    5. 'checker' → logprob: -10.132609367370605
    6. '   ' → logprob: -10.382609367370605
    7. 'symbols' → logprob: -11.007609367370605
    8. ' ' → logprob: -11.007609367370605
    9. 'boards' → logprob: -11.382609367370605
    10. 'checks' → logprob: -11.382609367370605

Token 564: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -3.7697225252486533e-06
    2. '```' → logprob: -13.375003814697266
    3. 's' → logprob: -13.625003814697266
    4. 'er' → logprob: -14.750003814697266
    5. '   ' → logprob: -16.000003814697266
    6. ':' → logprob: -16.250003814697266
    7. ' ers' → logprob: -16.250003814697266
    8. ')' → logprob: -16.875003814697266
    9. '[' → logprob: -16.875003814697266
    10. '=' → logprob: -17.000003814697266

Token 565: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.4121114822482923e-06
    2. '):' → logprob: -12.875003814697266
    3. ' :' → logprob: -14.500003814697266
    4. '_:' → logprob: -15.375003814697266
    5. ':list' → logprob: -17.125003814697266
    6. '=' → logprob: -17.375003814697266
    7. ')' → logprob: -17.375003814697266
    8. '}:' → logprob: -17.875003814697266
    9. ']:' → logprob: -17.875003814697266
    10. '):
' → logprob: -18.625003814697266

Token 566: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00043496055877767503
    2. ' List' → logprob: -7.750434875488281
    3. '[List' → logprob: -12.500434875488281
    4. '   ' → logprob: -15.625434875488281
    5. ')' → logprob: -15.750434875488281
    6. '	List' → logprob: -15.875434875488281
    7. 'Optional' → logprob: -17.00043487548828
    8. 'list' → logprob: -17.37543487548828
    9. '```' → logprob: -17.50043487548828
    10. '       ' → logprob: -18.25043487548828

Token 567: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '[
' → logprob: -14.125001907348633
    3. 'Win' → logprob: -14.250001907348633
    4. '```' → logprob: -16.625001907348633
    5. ')' → logprob: -18.500001907348633
    6. '[Serialize' → logprob: -18.625001907348633
    7. ']' → logprob: -18.875001907348633
    8. '[str' → logprob: -18.875001907348633
    9. '[int' → logprob: -19.000001907348633
    10. '
' → logprob: -19.125001907348633

Token 568: 'Win' (ID: 19224)
  Prédit: 'Win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Win' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.250000953674316
    3. ' Win' → logprob: -15.875000953674316
    4. 'win' → logprob: -20.125
    5. ']' → logprob: -20.75
    6. '.Win' → logprob: -23.75
    7. 'Wins' → logprob: -23.75
    8. '_win' → logprob: -23.875
    9. '   ' → logprob: -24.0
    10. '```' → logprob: -24.0

Token 569: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -5.512236498361744e-07
    2. 'condition' → logprob: -14.875000953674316
    3. ' Condition' → logprob: -16.75
    4. '_condition' → logprob: -16.75
    5. ']' → logprob: -18.25
    6. ' condition' → logprob: -18.75
    7. '[' → logprob: -19.125
    8. '```' → logprob: -19.5
    9. '.Condition' → logprob: -19.625
    10. 'Con' → logprob: -20.0

Token 570: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -2.927930654550437e-05
    2. 'checker' → logprob: -10.500029563903809
    3. 'Check' → logprob: -13.875029563903809
    4. ' Checker' → logprob: -15.375029563903809
    5. ' checker' → logprob: -15.500029563903809
    6. '_checker' → logprob: -15.500029563903809
    7. 'er' → logprob: -17.500028610229492
    8. 'cher' → logprob: -17.625028610229492
    9. 'cker' → logprob: -17.875028610229492
    10. 'Condition' → logprob: -17.875028610229492

Token 571: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20673196017742157
    2. '):
' → logprob: -2.4567320346832275
    3. ')' → logprob: -2.9567320346832275
    4. ']):' → logprob: -3.3317320346832275
    5. ']):
' → logprob: -4.706731796264648
    6. '])' → logprob: -6.206731796264648
    7. ']' → logprob: -6.456731796264648
    8. ']:' → logprob: -8.331731796264648
    9. '   ' → logprob: -9.206731796264648
    10. ' ):' → logprob: -9.206731796264648

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035238542477600276
    2. 'self' → logprob: -8.37535285949707
    3. ' self' → logprob: -9.12535285949707
    4. '   ' → logprob: -11.87535285949707
    5. ':' → logprob: -12.75035285949707
    6. ',' → logprob: -14.12535285949707
    7. '(self' → logprob: -14.37535285949707
    8. ' ' → logprob: -15.25035285949707
    9. '	self' → logprob: -15.25035285949707
    10. '      ' → logprob: -15.37535285949707

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00578409293666482
    2. ' self' → logprob: -5.255784034729004
    3. '       ' → logprob: -7.505784034729004
    4. '	self' → logprob: -15.880784034729004
    5. '   ' → logprob: -16.13078498840332
    6. '(self' → logprob: -18.25578498840332
    7. ' ' → logprob: -19.75578498840332
    8. '[self' → logprob: -19.75578498840332
    9. '           ' → logprob: -20.13078498840332
    10. '        ' → logprob: -20.50578498840332

Token 574: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00014239625306800008
    2. '.check' → logprob: -8.875142097473145
    3. '.' → logprob: -13.375142097473145
    4. '   ' → logprob: -14.750142097473145
    5. '_check' → logprob: -15.000142097473145
    6. '.__' → logprob: -15.875142097473145
    7. ' .' → logprob: -16.12514305114746
    8. ' ' → logprob: -17.37514305114746
    9. '	' → logprob: -18.25014305114746
    10. 'check' → logprob: -18.50014305114746

Token 575: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.9361264946837764e-07
    2. '_check' → logprob: -15.625
    3. ' check' → logprob: -16.75
    4. 'checker' → logprob: -18.875
    5. 'checks' → logprob: -19.75
    6. 'checking' → logprob: -19.75
    7. ' ' → logprob: -19.875
    8. 'che' → logprob: -19.875
    9. '.check' → logprob: -19.875
    10. '	check' → logprob: -20.0

Token 576: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: 0.0
    2. '   ' → logprob: -21.375
    3. ' ers' → logprob: -21.375
    4. 'er' → logprob: -21.5
    5. 'ors' → logprob: -21.5
    6. '```' → logprob: -21.75
    7. 'cers' → logprob: -22.0
    8. 's' → logprob: -22.25
    9. 'lers' → logprob: -22.25
    10. 'kers' → logprob: -22.875

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759425163269043
    2. ' =' → logprob: -0.8259425163269043
    3. ' ' → logprob: -12.825942993164062
    4. ')' → logprob: -15.450942993164062
    5. ' =
' → logprob: -17.450942993164062
    6. '.' → logprob: -17.575942993164062
    7. ':' → logprob: -17.700942993164062
    8. ',' → logprob: -17.825942993164062
    9. ' ' → logprob: -17.825942993164062
    10. '.extend' → logprob: -17.950942993164062

Token 578: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0015024791937321424
    2. ' check' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.501502990722656
    4. '	check' → logprob: -17.376502990722656
    5. '   ' → logprob: -17.501502990722656
    6. '(check' → logprob: -17.626502990722656
    7. '_check' → logprob: -18.126502990722656
    8. 'checker' → logprob: -18.876502990722656
    9. 'chec' → logprob: -19.751502990722656
    10. '  ' → logprob: -20.126502990722656

Token 579: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -3.7697225252486533e-06
    2. 'ck' → logprob: -12.625003814697266
    3. 'check' → logprob: -15.375003814697266
    4. 'cers' → logprob: -16.750003814697266
    5. 'er' → logprob: -17.125003814697266
    6. 'kers' → logprob: -17.125003814697266
    7. '```' → logprob: -17.125003814697266
    8. '_check' → logprob: -18.125003814697266
    9. 'ors' → logprob: -18.250003814697266
    10. '[' → logprob: -18.500003814697266

Token 580: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04211416468024254
    2. '
' → logprob: -3.5421142578125
    3. '    
' → logprob: -5.4171142578125
    4. 'def' → logprob: -5.5421142578125
    5. '<|end|>' → logprob: -5.7921142578125
    6. '<|end|>' → logprob: -8.1671142578125
    7. ' def' → logprob: -8.4171142578125
    8. '```' → logprob: -9.1671142578125
    9. '        
' → logprob: -9.5421142578125
    10. '  
' → logprob: -9.6671142578125

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004140022210776806
    2. 'def' → logprob: -5.5041399002075195
    3. ' def' → logprob: -10.37913990020752
    4. '
' → logprob: -11.00413990020752
    5. '```' → logprob: -11.50413990020752
    6. '    
' → logprob: -13.00413990020752
    7. '<|end|>' → logprob: -13.75413990020752
    8. '	def' → logprob: -15.25413990020752
    9. ' ' → logprob: -16.254140853881836
    10. '<|end|>' → logprob: -17.004140853881836

Token 582: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.2729995988775045e-06
    2. ' def' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.7500057220459
    4. 'from' → logprob: -19.1250057220459
    5. '```' → logprob: -19.8750057220459
    6. '
' → logprob: -20.8750057220459
    7. 'de' → logprob: -21.3750057220459
    8. '	def' → logprob: -21.5000057220459
    9. 'class' → logprob: -22.2500057220459
    10. ' ' → logprob: -22.7500057220459

Token 583: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.02978474460542202
    2. ' evaluate' → logprob: -3.529784679412842
    3. 'def' → logprob: -10.65478515625
    4. 'check' → logprob: -12.02978515625
    5. 'e' → logprob: -13.65478515625
    6. '   ' → logprob: -14.15478515625
    7. ' def' → logprob: -14.27978515625
    8. 'eval' → logprob: -14.40478515625
    9. ' check' → logprob: -14.65478515625
    10. '.evaluate' → logprob: -14.65478515625

Token 584: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. 'self' → logprob: -15.250036239624023
    4. '(
' → logprob: -15.375036239624023
    5. ' (' → logprob: -16.625036239624023
    6. '(board' → logprob: -17.375036239624023
    7. '(sel' → logprob: -17.750036239624023
    8. '(s' → logprob: -18.250036239624023
    9. ' self' → logprob: -19.000036239624023
    10. '   ' → logprob: -19.750036239624023

Token 585: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003268831642344594
    2. 'self' → logprob: -8.625327110290527
    3. '(self' → logprob: -9.125327110290527
    4. ' ,' → logprob: -10.250327110290527
    5. ',self' → logprob: -13.500327110290527
    6. ' self' → logprob: -13.875327110290527
    7. ',
' → logprob: -14.625327110290527
    8. '       ' → logprob: -15.500327110290527
    9. ')' → logprob: -17.25032615661621
    10. '   ' → logprob: -17.37532615661621

Token 586: ' board' (ID: 6796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06790965050458908
    2. 'board' → logprob: -2.8179097175598145
    3. ' self' → logprob: -5.4429097175598145
    4. ' board' → logprob: -6.4429097175598145
    5. '(self' → logprob: -12.942909240722656
    6. ')' → logprob: -13.567909240722656
    7. '       ' → logprob: -14.192909240722656
    8. '_board' → logprob: -14.567909240722656
    9. '   ' → logprob: -15.817909240722656
    10. '.board' → logprob: -16.067909240722656

Token 587: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.758300438988954e-05
    2. ')' → logprob: -9.250097274780273
    3. '):' → logprob: -13.625097274780273
    4. '   ' → logprob: -16.750097274780273
    5. ' :' → logprob: -16.750097274780273
    6. ' )' → logprob: -17.125097274780273
    7. '[' → logprob: -18.000097274780273
    8. '```' → logprob: -18.375097274780273
    9. '       ' → logprob: -18.500097274780273
    10. ',' → logprob: -18.500097274780273

Token 588: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.20141790807247162
    2. 'Board' → logprob: -1.7014179229736328
    3. ')' → logprob: -12.826417922973633
    4. ' board' → logprob: -13.701417922973633
    5. '(Board' → logprob: -15.326417922973633
    6. '_board' → logprob: -15.701417922973633
    7. '.Board' → logprob: -15.826417922973633
    8. ' ' → logprob: -16.076417922973633
    9. 'board' → logprob: -16.201417922973633
    10. '   ' → logprob: -18.076417922973633

Token 589: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ' )' → logprob: -11.750011444091797
    3. '   ' → logprob: -12.875011444091797
    4. ':' → logprob: -15.375011444091797
    5. '):' → logprob: -16.125011444091797
    6. '')' → logprob: -16.250011444091797
    7. '       ' → logprob: -16.500011444091797
    8. ')->' → logprob: -16.750011444091797
    9. '`)' → logprob: -16.875011444091797
    10. ',)' → logprob: -17.250011444091797

Token 590: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.45570823550224304
    2. ')' → logprob: -1.7057082653045654
    3. '->' → logprob: -1.7057082653045654
    4. ')->' → logprob: -5.955708026885986
    5. '   ' → logprob: -9.955708503723145
    6. ':' → logprob: -9.955708503723145
    7. '       ' → logprob: -11.455708503723145
    8. ' )->' → logprob: -11.955708503723145
    9. ' )' → logprob: -12.330708503723145
    10. ' ' → logprob: -13.080708503723145

Token 591: ' Game' (ID: 7022)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.3132993280887604
    2. ' Optional' → logprob: -1.313299298286438
    3. 'Game' → logprob: -10.813299179077148
    4. ' Game' → logprob: -11.688299179077148
    5. '(Optional' → logprob: -11.938299179077148
    6. '	Optional' → logprob: -13.313299179077148
    7. '   ' → logprob: -14.813299179077148
    8. 'optional' → logprob: -15.688299179077148
    9. '_optional' → logprob: -16.31329917907715
    10. '[' → logprob: -16.81329917907715

Token 592: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: 0.0
    2. '	Result' → logprob: -17.75
    3. 'Results' → logprob: -20.0
    4. 'result' → logprob: -20.125
    5. ' Result' → logprob: -20.125
    6. '_result' → logprob: -21.25
    7. 'Response' → logprob: -21.375
    8. '_Result' → logprob: -21.375
    9. '.Result' → logprob: -22.0
    10. '[' → logprob: -22.25

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4029834568500519
    2. ':
' → logprob: -1.7779834270477295
    3. '(self' → logprob: -2.0279834270477295
    4. '       ' → logprob: -3.6529834270477295
    5. '   ' → logprob: -6.027983665466309
    6. '):
' → logprob: -7.027983665466309
    7. '(' → logprob: -8.277983665466309
    8. '(
' → logprob: -8.277983665466309
    9. 'self' → logprob: -8.527983665466309
    10. '<|end|>' → logprob: -8.527983665466309

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003110930323600769
    2. ' for' → logprob: -5.878110885620117
    3. 'for' → logprob: -8.503110885620117
    4. 'result' → logprob: -10.253110885620117
    5. 'cells' → logprob: -11.128110885620117
    6. ' cells' → logprob: -11.253110885620117
    7. '
' → logprob: -11.753110885620117
    8. '        
' → logprob: -12.003110885620117
    9. '```' → logprob: -12.253110885620117
    10. ':' → logprob: -12.878110885620117

Token 595: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023733383044600487
    2. 'results' → logprob: -4.148733615875244
    3. '       ' → logprob: -5.523733615875244
    4. ' for' → logprob: -5.773733615875244
    5. 'result' → logprob: -7.523733615875244
    6. ' results' → logprob: -11.273733139038086
    7. '        
' → logprob: -12.148733139038086
    8. 'found' → logprob: -12.523733139038086
    9. 'possible' → logprob: -13.648733139038086
    10. '#' → logprob: -13.773733139038086

Token 596: ' checker' (ID: 75924)
  Prédit: 'checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checker' → logprob: -0.3132685720920563
    2. ' checker' → logprob: -1.3132685422897339
    3. 'check' → logprob: -12.438268661499023
    4. '   ' → logprob: -13.813268661499023
    5. ' check' → logprob: -14.063268661499023
    6. '_checker' → logprob: -14.438268661499023
    7. 'Checker' → logprob: -15.813268661499023
    8. ' ' → logprob: -16.188268661499023
    9. 'checking' → logprob: -16.688268661499023
    10. '```' → logprob: -16.938268661499023

Token 597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004079828038811684
    2. 'in' → logprob: -5.504079818725586
    3. '	in' → logprob: -14.379079818725586
    4. ' ' → logprob: -15.004079818725586
    5. 's' → logprob: -16.004079818725586
    6. '   ' → logprob: -16.254079818725586
    7. '_in' → logprob: -16.879079818725586
    8. 'import' → logprob: -17.004079818725586
    9. ' ' → logprob: -17.129079818725586
    10. '  ' → logprob: -17.754079818725586

Token 598: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716079078614712
    2. ' self' → logprob: -5.006716251373291
    3. '(self' → logprob: -14.506715774536133
    4. '       ' → logprob: -16.131715774536133
    5. '	self' → logprob: -17.381715774536133
    6. '[self' → logprob: -17.381715774536133
    7. '
' → logprob: -18.381715774536133
    8. '   ' → logprob: -18.631715774536133
    9. '=self' → logprob: -18.756715774536133
    10. '           ' → logprob: -19.381715774536133

Token 599: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -13.625001907348633
    3. '_check' → logprob: -15.875001907348633
    4. '_' → logprob: -15.875001907348633
    5. ' .' → logprob: -16.125001907348633
    6. '.__' → logprob: -17.000001907348633
    7. ']._' → logprob: -17.125001907348633
    8. 's' → logprob: -17.750001907348633
    9. ')._' → logprob: -17.750001907348633
    10. 'e' → logprob: -17.750001907348633

Token 600: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -9.968312951968983e-06
    2. '_check' → logprob: -11.625009536743164
    3. '.check' → logprob: -14.125009536743164
    4. ' check' → logprob: -17.125009536743164
    5. '(check' → logprob: -17.500009536743164
    6. 'checker' → logprob: -17.875009536743164
    7. '_' → logprob: -18.000009536743164
    8. '	check' → logprob: -18.500009536743164
    9. 'checking' → logprob: -19.000009536743164
    10. '   ' → logprob: -19.000009536743164

Token 601: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0014533287612721324
    2. 'ck' → logprob: -7.001453399658203
    3. 'kers' → logprob: -7.751453399658203
    4. 'e' → logprob: -9.501453399658203
    5. '```' → logprob: -11.876453399658203
    6. 'ackers' → logprob: -12.126453399658203
    7. 'er' → logprob: -12.251453399658203
    8. '   ' → logprob: -12.751453399658203
    9. '       ' → logprob: -12.876453399658203
    10. '[' → logprob: -13.251453399658203

Token 602: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5253347158432007
    2. ':
' → logprob: -1.1503347158432007
    3. ' in' → logprob: -2.5253348350524902
    4. '.' → logprob: -6.15033483505249
    5. 'result' → logprob: -6.52533483505249
    6. ',' → logprob: -6.52533483505249
    7. '_result' → logprob: -6.77533483505249
    8. ' result' → logprob: -6.90033483505249
    9. '):
' → logprob: -7.02533483505249
    10. ')' → logprob: -7.15033483505249

Token 603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5530076026916504
    2. 'result' → logprob: -0.9280076026916504
    3. ' result' → logprob: -3.5530076026916504
    4. ':
' → logprob: -8.178007125854492
    5. '_result' → logprob: -8.303007125854492
    6. ',result' → logprob: -9.303007125854492
    7. ':' → logprob: -9.803007125854492
    8. '       ' → logprob: -10.553007125854492
    9. '-result' → logprob: -11.178007125854492
    10. '(result' → logprob: -11.928007125854492

Token 604: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00018613664724398404
    2. ' result' → logprob: -8.7501859664917
    3. '           ' → logprob: -10.5001859664917
    4. 'res' → logprob: -15.8751859664917
    5. '_result' → logprob: -18.000186920166016
    6. '   ' → logprob: -18.875186920166016
    7. '	result' → logprob: -19.125186920166016
    8. '```' → logprob: -19.875186920166016
    9. '               ' → logprob: -20.250186920166016
    10. 'resultado' → logprob: -20.500186920166016

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931548714637756
    2. ' =' → logprob: -0.6931548714637756
    3. ':=' → logprob: -12.818155288696289
    4. '_result' → logprob: -13.068155288696289
    5. ' :=' → logprob: -13.443155288696289
    6. ':' → logprob: -14.443155288696289
    7. '=result' → logprob: -14.568155288696289
    8. ' ' → logprob: -15.693155288696289
    9. 'result' → logprob: -16.31815528869629
    10. '_' → logprob: -16.69315528869629

Token 606: ' checker' (ID: 75924)
  Prédit: 'checker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checker' → logprob: -0.00091217877343297
    2. ' checker' → logprob: -7.000912189483643
    3. 'check' → logprob: -14.250911712646484
    4. '           ' → logprob: -18.125911712646484
    5. '_checker' → logprob: -18.250911712646484
    6. 'checking' → logprob: -18.750911712646484
    7. '               ' → logprob: -18.875911712646484
    8. 'checkpoint' → logprob: -18.875911712646484
    9. 'chec' → logprob: -20.250911712646484
    10. 'checkbox' → logprob: -20.875911712646484

Token 607: '.check' (ID: 12631)
  Prédit: '.check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.check' → logprob: -0.0031790214125066996
    2. '.' → logprob: -5.75317907333374
    3. ' .' → logprob: -14.128178596496582
    4. '.che' → logprob: -14.753178596496582
    5. 'check' → logprob: -16.8781795501709
    6. '.evaluate' → logprob: -16.8781795501709
    7. '.Check' → logprob: -17.7531795501709
    8. '   ' → logprob: -18.6281795501709
    9. ' ' → logprob: -18.8781795501709
    10. '(check' → logprob: -19.1281795501709

Token 608: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. 'board' → logprob: -17.25
    4. '(Board' → logprob: -18.875
    5. '(
' → logprob: -20.375
    6. ' board' → logprob: -20.875
    7. '(b' → logprob: -21.25
    8. '	board' → logprob: -21.375
    9. '```' → logprob: -22.0
    10. '(block' → logprob: -22.125

Token 609: ')
' (ID: 446)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.34218743443489075
    2. ')' → logprob: -1.7171874046325684
    3. ',' → logprob: -2.2171874046325684
    4. ')
' → logprob: -7.217187404632568
    5. 'board' → logprob: -7.967187404632568
    6. ' board' → logprob: -8.717187881469727
    7. '(' → logprob: -11.092187881469727
    8. '	board' → logprob: -11.717187881469727
    9. '.board' → logprob: -12.092187881469727
    10. ' (' → logprob: -12.592187881469727

Token 610: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002038795268163085
    2. '       ' → logprob: -6.877038955688477
    3. ' if' → logprob: -7.627038955688477
    4. '<|end|>' → logprob: -8.377038955688477
    5. '               ' → logprob: -9.502038955688477
    6. ' is' → logprob: -10.377038955688477
    7. '
' → logprob: -10.627038955688477
    8. 'if' → logprob: -10.627038955688477
    9. '            
' → logprob: -10.752038955688477
    10. '          ' → logprob: -10.752038955688477

Token 611: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014285735785961151
    2. ' if' → logprob: -4.264285564422607
    3. '           ' → logprob: -9.014286041259766
    4. '               ' → logprob: -15.389286041259766
    5. 'If' → logprob: -15.889286041259766
    6. '
' → logprob: -16.389286041259766
    7. ';if' → logprob: -16.764286041259766
    8. '            
' → logprob: -16.889286041259766
    9. '	if' → logprob: -17.764286041259766
    10. '                   ' → logprob: -17.889286041259766

Token 612: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2014133334159851
    2. ' result' → logprob: -1.7014133930206299
    3. '           ' → logprob: -18.326414108276367
    4. '	result' → logprob: -19.201414108276367
    5. '(result' → logprob: -19.201414108276367
    6. '   ' → logprob: -19.451414108276367
    7. '               ' → logprob: -20.326414108276367
    8. ' ' → logprob: -20.701414108276367
    9. '$result' → logprob: -21.826414108276367
    10. '
' → logprob: -22.076414108276367

Token 613: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0006544163916260004
    2. 'is' → logprob: -7.625654220581055
    3. ':' → logprob: -8.750654220581055
    4. ' not' → logprob: -12.750654220581055
    5. ' ' → logprob: -13.125654220581055
    6. '!=' → logprob: -14.125654220581055
    7. ')' → logprob: -14.375654220581055
    8. ':
' → logprob: -14.750654220581055
    9. '<|end|>' → logprob: -14.875654220581055
    10. 'not' → logprob: -14.875654220581055

Token 614: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.313277930021286
    2. 'not' → logprob: -1.3132779598236084
    3. '               ' → logprob: -11.313278198242188
    4. '           ' → logprob: -13.313278198242188
    5. '                   ' → logprob: -13.813278198242188
    6. '                ' → logprob: -15.188278198242188
    7. '            ' → logprob: -15.438278198242188
    8. '                       ' → logprob: -15.688278198242188
    9. '	not' → logprob: -15.938278198242188
    10. 'Not' → logprob: -16.438278198242188

Token 615: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029797237366437912
    2. ' None' → logprob: -3.529797315597534
    3. 'none' → logprob: -10.279797554016113
    4. '(None' → logprob: -12.154797554016113
    5. '=None' → logprob: -12.904797554016113
    6. 'Game' → logprob: -13.404797554016113
    7. '_None' → logprob: -13.779797554016113
    8. 'not' → logprob: -14.029797554016113
    9. ' none' → logprob: -15.154797554016113
    10. ' Game' → logprob: -15.279797554016113

Token 616: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022823883220553398
    2. ':
' → logprob: -4.022823810577393
    3. ':return' → logprob: -5.897823810577393
    4. '               ' → logprob: -6.397823810577393
    5. '           ' → logprob: -8.64782428741455
    6. ' return' → logprob: -11.52282428741455
    7. ')' → logprob: -11.52282428741455
    8. ' :' → logprob: -11.64782428741455
    9. '                   ' → logprob: -11.77282428741455
    10. '):' → logprob: -12.02282428741455

Token 617: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03163660317659378
    2. 'return' → logprob: -3.5316367149353027
    3. ' return' → logprob: -6.281636714935303
    4. '           ' → logprob: -11.406636238098145
    5. '                   ' → logprob: -13.781636238098145
    6. '   ' → logprob: -14.281636238098145
    7. '              ' → logprob: -14.781636238098145
    8. ':return' → logprob: -15.406636238098145
    9. '{return' → logprob: -15.531636238098145
    10. '```' → logprob: -15.781636238098145

Token 618: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08342596888542175
    2. ' return' → logprob: -2.583425998687744
    3. '               ' → logprob: -5.583425998687744
    4. '                   ' → logprob: -7.208425998687744
    5. '           ' → logprob: -11.083425521850586
    6. '   ' → logprob: -12.083425521850586
    7. '	return' → logprob: -13.333425521850586
    8. ':return' → logprob: -13.458425521850586
    9. '{return' → logprob: -14.083425521850586
    10. '```' → logprob: -15.083425521850586

Token 619: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0007099286303855479
    2. ' result' → logprob: -7.2507100105285645
    3. '	result' → logprob: -21.875709533691406
    4. '(result' → logprob: -22.250709533691406
    5. ' ' → logprob: -22.500709533691406
    6. '   ' → logprob: -23.625709533691406
    7. '=result' → logprob: -23.750709533691406
    8. 'res' → logprob: -24.875709533691406
    9. '$result' → logprob: -24.875709533691406
    10. 'results' → logprob: -25.000709533691406

Token 620: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027882419526576996
    2. '
' → logprob: -6.002788066864014
    3. '        
' → logprob: -8.502788543701172
    4. '   ' → logprob: -10.252788543701172
    5. '  
' → logprob: -11.127788543701172
    6. '    
' → logprob: -11.377788543701172
    7. ' return' → logprob: -11.502788543701172
    8. 'return' → logprob: -11.877788543701172
    9. ' 
' → logprob: -12.127788543701172
    10. '      ' → logprob: -12.377788543701172

Token 621: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.256334695033729e-05
    2. '
' → logprob: -9.750082969665527
    3. 'return' → logprob: -11.375082969665527
    4. '   ' → logprob: -11.750082969665527
    5. ' return' → logprob: -13.250082969665527
    6. '        
' → logprob: -13.625082969665527
    7. '           ' → logprob: -14.875082969665527
    8. 'd' → logprob: -14.875082969665527
    9. '```' → logprob: -14.875082969665527
    10. '      ' → logprob: -16.00008201599121

Token 622: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001434397418051958
    2. ' return' → logprob: -6.751434326171875
    3. '       ' → logprob: -8.251434326171875
    4. 'if' → logprob: -12.751434326171875
    5. 'raise' → logprob: -15.251434326171875
    6. '	return' → logprob: -16.251434326171875
    7. '
' → logprob: -16.876434326171875
    8. ' if' → logprob: -17.376434326171875
    9. '   ' → logprob: -17.626434326171875
    10. '{return' → logprob: -17.876434326171875

Token 623: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -4.5491004129871726e-05
    2. ' Game' → logprob: -10.000045776367188
    3. '	Game' → logprob: -23.250045776367188
    4. 'game' → logprob: -23.500045776367188
    5. '   ' → logprob: -24.000045776367188
    6. '(Game' → logprob: -25.500045776367188
    7. '.Game' → logprob: -25.875045776367188
    8. '<Game' → logprob: -25.875045776367188
    9. '_game' → logprob: -26.125045776367188
    10. '_Game' → logprob: -26.500045776367188

Token 624: 'Result' (ID: 2769)
  Prédit: 'Result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Result' → logprob: 0.0
    2. 'result' → logprob: -18.625
    3. ' Result' → logprob: -19.25
    4. '	Result' → logprob: -19.25
    5. 'Results' → logprob: -20.375
    6. '.Result' → logprob: -20.75
    7. 'Res' → logprob: -20.875
    8. 'R' → logprob: -21.25
    9. '   ' → logprob: -21.5
    10. '_Result' → logprob: -21.625

Token 625: '.D' (ID: 1696)
  Prédit: '.D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.D' → logprob: -0.00011307948443572968
    2. 'DRAW' → logprob: -9.750113487243652
    3. 'D' → logprob: -10.250113487243652
    4. '.' → logprob: -11.125113487243652
    5. ' .' → logprob: -13.000113487243652
    6. '.Draw' → logprob: -13.875113487243652
    7. '_DRAW' → logprob: -14.000113487243652
    8. ' DRAW' → logprob: -15.750113487243652
    9. '.DOWN' → logprob: -16.000112533569336
    10. '	D' → logprob: -16.375112533569336

Token 626: 'RAW' (ID: 46176)
  Prédit: 'RAW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RAW' → logprob: -0.00018506382184568793
    2. 'R' → logprob: -9.250185012817383
    3. 'RA' → logprob: -9.750185012817383
    4. 'raw' → logprob: -10.500185012817383
    5. 'Raw' → logprob: -12.750185012817383
    6. ' raw' → logprob: -15.875185012817383
    7. '.raw' → logprob: -17.000185012817383
    8. ' RAW' → logprob: -17.125185012817383
    9. '_raw' → logprob: -17.625185012817383
    10. ' R' → logprob: -17.750185012817383

Token 627: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 628: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7919773459434509
    2. '<|end|>' → logprob: -0.7919773459434509
    3. '```' → logprob: -2.9169774055480957
    4. 'class' → logprob: -3.7919774055480957
    5. '<|end|>' → logprob: -5.041977405548096
    6. 'def' → logprob: -5.166977405548096
    7. 'from' → logprob: -6.041977405548096
    8. '[' → logprob: -6.916977405548096
    9. '...' → logprob: -7.541977405548096
    10. 'import' → logprob: -8.416976928710938

Token 629: ' Input' (ID: 10090)
  Prédit: ' Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Game' → logprob: -0.3636074662208557
    2. ' Tic' → logprob: -1.613607406616211
    3. ' Player' → logprob: -2.988607406616211
    4. ' Board' → logprob: -3.613607406616211
    5. 'Game' → logprob: -4.863607406616211
    6. 'T' → logprob: -5.113607406616211
    7. ' T' → logprob: -5.363607406616211
    8. ' AI' → logprob: -6.113607406616211
    9. 'Player' → logprob: -6.738607406616211
    10. 'Board' → logprob: -6.988607406616211

Token 630: 'Loader' (ID: 12189)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.11076467484235764
    2. 'Reader' → logprob: -3.235764741897583
    3. 'Parser' → logprob: -3.360764741897583
    4. 'Provider' → logprob: -4.610764503479004
    5. 'Processor' → logprob: -4.610764503479004
    6. 'Validator' → logprob: -5.360764503479004
    7. 'Player' → logprob: -6.360764503479004
    8. 'Manager' → logprob: -6.985764503479004
    9. 'Checker' → logprob: -7.360764503479004
    10. 'Layer' → logprob: -7.735764503479004

Token 631: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021989059168845415
    2. ':
' → logprob: -6.127198696136475
    3. ':def' → logprob: -11.627199172973633
    4. ' :' → logprob: -13.627199172973633
    5. '():' → logprob: -13.877199172973633
    6. ':

' → logprob: -14.002199172973633
    7. '<|end|>' → logprob: -14.502199172973633
    8. '):' → logprob: -14.752199172973633
    9. '(object' → logprob: -15.752199172973633
    10. '(' → logprob: -15.877199172973633

Token 632: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011105302110081539
    2. ' def' → logprob: -9.750110626220703
    3. 'def' → logprob: -9.875110626220703
    4. 'class' → logprob: -14.625110626220703
    5. 'import' → logprob: -15.375110626220703
    6. '   ' → logprob: -15.625110626220703
    7. '```' → logprob: -16.000110626220703
    8. ')' → logprob: -16.750110626220703
    9. '...' → logprob: -16.875110626220703
    10. ':' → logprob: -17.125110626220703

Token 633: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.34229639172554016
    2. 'def' (adapté à ' def') → logprob: -1.3422963619232178
    3. '@' → logprob: -3.8422963619232178
    4. ' @' → logprob: -4.967296600341797
    5. '   ' → logprob: -8.467296600341797
    6. 'class' → logprob: -16.092296600341797
    7. ' ' → logprob: -16.092296600341797
    8. '@property' → logprob: -16.217296600341797
    9. '
' → logprob: -16.342296600341797
    10. 'import' → logprob: -16.467296600341797

Token 634: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.5289925336837769
    2. ' def' → logprob: -1.0289925336837769
    3. 'def' → logprob: -3.0289926528930664
    4. ' __' → logprob: -5.778992652893066
    5. 'init' → logprob: -7.778992652893066
    6. '__' → logprob: -7.903992652893066
    7. 'classmethod' → logprob: -8.028992652893066
    8. 'put' → logprob: -8.403992652893066
    9. 'nit' → logprob: -8.903992652893066
    10. ' static' → logprob: -9.278992652893066

Token 635: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2961512513575144e-05
    2. 'new' → logprob: -10.750022888183594
    3. 'call' → logprob: -13.750022888183594
    4. 'name' → logprob: -15.875022888183594
    5. 'staticmethod' → logprob: -16.000022888183594
    6. 'def' → logprob: -16.125022888183594
    7. 'ini' → logprob: -17.000022888183594
    8. ' init' → logprob: -17.125022888183594
    9. '_init' → logprob: -18.125022888183594
    10. 'inite' → logprob: -18.125022888183594

Token 636: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003824656829237938
    2. ' (' → logprob: -6.003824710845947
    3. '(' → logprob: -6.753824710845947
    4. 'self' → logprob: -8.878824234008789
    5. '   ' → logprob: -11.378824234008789
    6. '(
' → logprob: -11.378824234008789
    7. ' ' → logprob: -12.378824234008789
    8. '__(' → logprob: -12.628824234008789
    9. ' self' → logprob: -12.753824234008789
    10. '
' → logprob: -13.128824234008789

Token 637: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012320445966906846
    2. ')' → logprob: -9.875123023986816
    3. ' self' → logprob: -10.250123023986816
    4. '       ' → logprob: -10.875123023986816
    5. '):
' → logprob: -11.125123023986816
    6. 'file' → logprob: -14.000123023986816
    7. '   ' → logprob: -14.750123023986816
    8. '
' → logprob: -14.875123023986816
    9. 'input' → logprob: -15.500123023986816
    10. '(self' → logprob: -15.625123023986816

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06657103449106216
    2. '):' → logprob: -3.066570997238159
    3. 'self' → logprob: -4.441571235656738
    4. '):
' → logprob: -5.691571235656738
    5. ')' → logprob: -6.191571235656738
    6. '(self' → logprob: -8.816571235656738
    7. ',self' → logprob: -8.816571235656738
    8. '   ' → logprob: -9.566571235656738
    9. ',file' → logprob: -9.691571235656738
    10. ',input' → logprob: -9.816571235656738

Token 639: ' max' (ID: 2999)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.29973164200782776
    2. 'source' → logprob: -1.5497316122055054
    3. 'lines' → logprob: -3.674731731414795
    4. 'inputs' → logprob: -4.299731731414795
    5. ' input' → logprob: -6.174731731414795
    6. 'data' → logprob: -6.299731731414795
    7. ' source' → logprob: -6.549731731414795
    8. ' lines' → logprob: -7.424731731414795
    9. 'self' → logprob: -7.674731731414795
    10. 'file' → logprob: -7.924731731414795

Token 640: '_d' (ID: 1565)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.2328332662582397
    2. '_moves' → logprob: -1.2328332662582397
    3. '_length' → logprob: -1.3578332662582397
    4. '_turn' → logprob: -2.6078333854675293
    5. '_attempt' → logprob: -3.2328333854675293
    6. '_len' → logprob: -4.482833385467529
    7. '_inputs' → logprob: -5.232833385467529
    8. '_size' → logprob: -5.482833385467529
    9. '_round' → logprob: -5.607833385467529
    10. '_count' → logprob: -5.607833385467529

Token 641: 'atasets' (ID: 105003)
  Prédit: 'ep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ep' → logprob: -0.0048073455691337585
    2. 'ef' → logprob: -6.629807472229004
    3. 'eep' → logprob: -7.004807472229004
    4. 'igits' → logprob: -7.254807472229004
    5. 'ata' → logprob: -7.504807472229004
    6. 'uration' → logprob: -8.379807472229004
    7. 'elay' → logprob: -8.504807472229004
    8. 'e' → logprob: -9.254807472229004
    9. 'eps' → logprob: -9.504807472229004
    10. 'ate' → logprob: -9.629807472229004

Token 642: ':int' (ID: 30362)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027099132421426475
    2. '=' → logprob: -8.62527084350586
    3. ':int' → logprob: -9.37527084350586
    4. '):' → logprob: -13.00027084350586
    5. ' :' → logprob: -13.25027084350586
    6. '):
' → logprob: -14.12527084350586
    7. '   ' → logprob: -14.25027084350586
    8. '_:' → logprob: -14.87527084350586
    9. 'int' → logprob: -15.37527084350586
    10. '=int' → logprob: -15.62527084350586

Token 643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10402632504701614
    2. '):' → logprob: -2.9790263175964355
    3. '):
' → logprob: -3.1040263175964355
    4. ' =' → logprob: -6.2290263175964355
    5. ')' → logprob: -7.7290263175964355
    6. ':' → logprob: -7.8540263175964355
    7. '=None' → logprob: -8.979026794433594
    8. ' ):
' → logprob: -9.979026794433594
    9. '):
' → logprob: -10.104026794433594
    10. ' ):' → logprob: -10.104026794433594

Token 644: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9820072054862976
    2. '100' → logprob: -1.1070072650909424
    3. '1' → logprob: -1.4820072650909424
    4. ' ' → logprob: -2.7320072650909424
    5. '5' → logprob: -6.732007026672363
    6. '20' → logprob: -8.107007026672363
    7. '3' → logprob: -8.232007026672363
    8. '50' → logprob: -8.232007026672363
    9. '   ' → logprob: -8.482007026672363
    10. '2' → logprob: -8.857007026672363

Token 645: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.48848724365234375
    2. '10' → logprob: -1.1134872436523438
    3. '1' → logprob: -2.9884872436523438
    4. '50' → logprob: -6.238487243652344
    5. '5' → logprob: -6.488487243652344
    6. ' ' → logprob: -6.488487243652344
    7. '20' → logprob: -6.863487243652344
    8. '3' → logprob: -8.113487243652344
    9. '200' → logprob: -8.488487243652344
    10. '500' → logprob: -8.488487243652344

Token 646: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05583479255437851
    2. '):
' → logprob: -2.9308347702026367
    3. ')' → logprob: -7.430834770202637
    4. '):
' → logprob: -8.555834770202637
    5. ',' → logprob: -9.305834770202637
    6. ' ):' → logprob: -9.805834770202637
    7. '   ' → logprob: -11.430834770202637
    8. ' ):
' → logprob: -12.430834770202637
    9. '0' → logprob: -13.180834770202637
    10. ':' → logprob: -13.680834770202637

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005181243759579957
    2. ',' → logprob: -8.625517845153809
    3. 'self' → logprob: -9.250517845153809
    4. ':' → logprob: -9.750517845153809
    5. '):
' → logprob: -10.125517845153809
    6. '
' → logprob: -10.250517845153809
    7. '	' → logprob: -10.375517845153809
    8. ')' → logprob: -11.125517845153809
    9. ' self' → logprob: -11.250517845153809
    10. '<|end|>' → logprob: -11.375517845153809

Token 648: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010775440372526646
    2. ' self' → logprob: -5.010775566101074
    3. '       ' → logprob: -5.510775566101074
    4. '	self' → logprob: -11.760775566101074
    5. '   ' → logprob: -14.635775566101074
    6. '(self' → logprob: -16.510774612426758
    7. '
' → logprob: -16.510774612426758
    8. ',self' → logprob: -16.510774612426758
    9. ' ' → logprob: -16.635774612426758
    10. '        ' → logprob: -16.635774612426758

Token 649: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.06230375915765762
    2. '.max' → logprob: -2.8123037815093994
    3. ' .' → logprob: -8.56230354309082
    4. '.' → logprob: -9.56230354309082
    5. '_max' → logprob: -10.18730354309082
    6. 'max' → logprob: -11.06230354309082
    7. '.MAX' → logprob: -12.18730354309082
    8. '.maximum' → logprob: -12.43730354309082
    9. '.__' → logprob: -12.68730354309082
    10. '   ' → logprob: -12.68730354309082

Token 650: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.782141569303349e-05
    2. 'datasets' → logprob: -9.50009822845459
    3. 'lines' → logprob: -12.00009822845459
    4. 'input' → logprob: -12.25009822845459
    5. '_max' → logprob: -12.75009822845459
    6. 'buffer' → logprob: -13.00009822845459
    7. 'remaining' → logprob: -13.12509822845459
    8. 'data' → logprob: -13.62509822845459
    9. 'inputs' → logprob: -13.75009822845459
    10. 'dataset' → logprob: -14.37509822845459

Token 651: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.8193366486229934e-05
    2. 'datasets' → logprob: -11.625018119812012
    3. '_dataset' → logprob: -12.000018119812012
    4. '_' → logprob: -13.625018119812012
    5. '_data' → logprob: -14.375018119812012
    6. '_sets' → logprob: -14.625018119812012
    7. '
' → logprob: -16.250019073486328
    8. ' datasets' → logprob: -16.250019073486328
    9. 'atasets' → logprob: -16.375019073486328
    10. ' _' → logprob: -16.625019073486328

Token 652: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -4.961759259458631e-06
    2. 'ataset' → logprob: -12.750004768371582
    3. 'datasets' → logprob: -13.250004768371582
    4. 'sets' → logprob: -16.3750057220459
    5. 'ata' → logprob: -16.5000057220459
    6. ' datasets' → logprob: -17.6250057220459
    7. 'atas' → logprob: -18.1250057220459
    8. '.datasets' → logprob: -18.8750057220459
    9. 'at' → logprob: -19.1250057220459
    10. 'Datas' → logprob: -19.6250057220459

Token 653: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693126499652863
    2. ' =' → logprob: -2.1269311904907227
    3. ' ' → logprob: -13.126931190490723
    4. ':' → logprob: -14.626931190490723
    5. '=max' → logprob: -14.626931190490723
    6. '=int' → logprob: -15.751931190490723
    7. ')' → logprob: -17.50193214416504
    8. '<|end|>' → logprob: -17.50193214416504
    9. '   ' → logprob: -17.62693214416504
    10. '=None' → logprob: -18.00193214416504

Token 654: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.010444102808833122
    2. '50' → logprob: -5.260444164276123
    3. ' max' → logprob: -5.260444164276123
    4. ' ' → logprob: -12.635443687438965
    5. '	max' → logprob: -15.510443687438965
    6. '(max' → logprob: -15.885443687438965
    7. '   ' → logprob: -15.885443687438965
    8. '
' → logprob: -18.13544464111328
    9. '[max' → logprob: -18.13544464111328
    10. '_max' → logprob: -18.38544464111328

Token 655: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.007705769035965204
    2. 'atasets' → logprob: -4.8827056884765625
    3. 'datasets' → logprob: -9.382705688476562
    4. ' datasets' → logprob: -11.757705688476562
    5. 'ataset' → logprob: -13.007705688476562
    6. '.datasets' → logprob: -13.507705688476562
    7. '_dataset' → logprob: -14.132705688476562
    8. 'Datas' → logprob: -14.257705688476562
    9. ' _' → logprob: -14.757705688476562
    10. '   ' → logprob: -14.757705688476562

Token 656: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -0.0039048073813319206
    2. 'datasets' → logprob: -5.628904819488525
    3. 'sets' → logprob: -8.253904342651367
    4. 'ats' → logprob: -11.128904342651367
    5. 'as' → logprob: -11.628904342651367
    6. 'tas' → logprob: -12.253904342651367
    7. 'ataset' → logprob: -12.378904342651367
    8. 's' → logprob: -12.628904342651367
    9. ' datasets' → logprob: -12.878904342651367
    10. 'atas' → logprob: -13.003904342651367

Token 657: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15479126572608948
    2. '   ' → logprob: -2.0297913551330566
    3. '

' → logprob: -5.404791355133057
    4. 'def' → logprob: -5.654791355133057
    5. '<|end|>' → logprob: -5.779791355133057
    6. '    
' → logprob: -7.279791355133057
    7. ' def' → logprob: -9.029790878295898
    8. '<|end|>' → logprob: -9.279790878295898
    9. '        
' → logprob: -11.404790878295898
    10. '	def' → logprob: -11.529790878295898

Token 658: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12678992748260498
    2. 'def' → logprob: -2.8767900466918945
    3. '
' → logprob: -3.0017900466918945
    4. '<|end|>' → logprob: -4.5017900466918945
    5. '    
' → logprob: -7.1267900466918945
    6. ' def' → logprob: -7.6267900466918945
    7. '<|end|>' → logprob: -7.8767900466918945
    8. '	def' → logprob: -9.126790046691895
    9. '```' → logprob: -9.626790046691895
    10. '

' → logprob: -9.876790046691895

Token 659: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002518031978979707
    2. ' def' → logprob: -8.375251770019531
    3. 'from' → logprob: -10.875251770019531
    4. '
' → logprob: -13.500251770019531
    5. '   ' → logprob: -14.500251770019531
    6. 'import' → logprob: -14.875251770019531
    7. '```' → logprob: -17.62525177001953
    8. 'class' → logprob: -17.87525177001953
    9. ' ' → logprob: -18.12525177001953
    10. 'async' → logprob: -18.25025177001953

Token 660: ' load' (ID: 4700)
  Prédit: 'load'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'load' → logprob: -0.014948884956538677
    2. '__' → logprob: -4.764948844909668
    3. ' load' → logprob: -5.514948844909668
    4. 'read' → logprob: -6.264948844909668
    5. '_load' → logprob: -8.139948844909668
    6. ' __' → logprob: -9.639948844909668
    7. 'from' → logprob: -11.389948844909668
    8. ' read' → logprob: -12.139948844909668
    9. 'def' → logprob: -12.514948844909668
    10. '	load' → logprob: -12.764948844909668

Token 661: '_bo' (ID: 104368)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017028623551595956
    2. 'self' → logprob: -9.375170707702637
    3. '(' → logprob: -10.125170707702637
    4. 's' → logprob: -11.125170707702637
    5. '()' → logprob: -11.375170707702637
    6. 'from' → logprob: -12.375170707702637
    7. '_data' → logprob: -13.000170707702637
    8. '_input' → logprob: -13.000170707702637
    9. '(s' → logprob: -13.000170707702637
    10. 'datasets' → logprob: -13.125170707702637

Token 662: 'ards' (ID: 3098)
  Prédit: 'ards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -0.012542853131890297
    2. 'ard' → logprob: -4.387542724609375
    3. 'ar' → logprob: -10.637542724609375
    4. '   ' → logprob: -13.137542724609375
    5. 'a' → logprob: -13.262542724609375
    6. '_' → logprob: -13.387542724609375
    7. 'ads' → logprob: -13.887542724609375
    8. '
' → logprob: -14.387542724609375
    9. 'arding' → logprob: -14.637542724609375
    10. '#' → logprob: -15.637542724609375

Token 663: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.62501049041748
    3. ' (' → logprob: -14.12501049041748
    4. 'self' → logprob: -14.75001049041748
    5. '()' → logprob: -15.00001049041748
    6. 'from' → logprob: -16.000011444091797
    7. '(iter' → logprob: -17.500011444091797
    8. '   ' → logprob: -18.250011444091797
    9. '(
' → logprob: -18.250011444091797
    10. '(iterator' → logprob: -18.375011444091797

Token 664: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7897409200668335
    2. 'self' → logprob: -1.1647409200668335
    3. ')' → logprob: -2.039741039276123
    4. '(self' → logprob: -2.289741039276123
    5. '   ' → logprob: -6.664741039276123
    6. ' self' → logprob: -7.664741039276123
    7. ')(' → logprob: -8.164740562438965
    8. ',self' → logprob: -8.289740562438965
    9. '       ' → logprob: -8.789740562438965
    10. '
' → logprob: -9.789740562438965

Token 665: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002993544621858746
    2. 'self' → logprob: -8.875299453735352
    3. ' ->' → logprob: -9.375299453735352
    4. '->' → logprob: -9.750299453735352
    5. ')' → logprob: -11.750299453735352
    6. '(' → logprob: -13.000299453735352
    7. '   ' → logprob: -13.125299453735352
    8. '()' → logprob: -13.625299453735352
    9. '       ' → logprob: -13.625299453735352
    10. ' (' → logprob: -14.000299453735352

Token 666: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.024639030918478966
    2. 'Iterator' → logprob: -3.774639129638672
    3. ' List' → logprob: -6.649639129638672
    4. ' Iterator' → logprob: -9.399639129638672
    5. 'Generator' → logprob: -11.399639129638672
    6. '[List' → logprob: -12.774639129638672
    7. 'Iterable' → logprob: -14.149639129638672
    8. '	List' → logprob: -15.399639129638672
    9. '   ' → logprob: -15.774639129638672
    10. ' Generator' → logprob: -16.524639129638672

Token 667: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.002229713834822178
    2. '[' → logprob: -6.252229690551758
    3. '[List' → logprob: -8.127229690551758
    4. '[int' → logprob: -13.627229690551758
    5. '[
' → logprob: -13.627229690551758
    6. '[[' → logprob: -14.002229690551758
    7. ':
' → logprob: -14.002229690551758
    8. ':' → logprob: -14.252229690551758
    9. '[String' → logprob: -15.752229690551758
    10. '[(' → logprob: -16.002229690551758

Token 668: 'Board' (ID: 14558)
  Prédit: 'Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.033688463270664215
    2. 'str' → logprob: -3.408688545227051
    3. ' Board' → logprob: -10.65868854522705
    4. 'List' → logprob: -12.28368854522705
    5. '[str' → logprob: -12.65868854522705
    6. ' str' → logprob: -13.15868854522705
    7. 'Tuple' → logprob: -13.15868854522705
    8. '(Board' → logprob: -13.28368854522705
    9. 'board' → logprob: -13.90868854522705
    10. 'Game' → logprob: -14.03368854522705

Token 669: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4017998278141022
    2. '):
' → logprob: -1.1517997980117798
    3. ')' → logprob: -4.40179967880249
    4. '   ' → logprob: -6.90179967880249
    5. ':' → logprob: -7.40179967880249
    6. '():' → logprob: -7.90179967880249
    7. ']:' → logprob: -8.651800155639648
    8. '():
' → logprob: -9.026800155639648
    9. '):
' → logprob: -9.151800155639648
    10. '       ' → logprob: -9.651800155639648

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020735491125378758
    2. ' for' → logprob: -8.62520694732666
    3. ' while' → logprob: -11.25020694732666
    4. '   ' → logprob: -11.87520694732666
    5. '```' → logprob: -13.75020694732666
    6. 'for' → logprob: -13.87520694732666
    7. ',' → logprob: -14.00020694732666
    8. '    ' → logprob: -14.00020694732666
    9. '      ' → logprob: -14.00020694732666
    10. ' with' → logprob: -14.62520694732666

Token 671: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21996445953845978
    2. ' for' → logprob: -2.5949645042419434
    3. '       ' → logprob: -2.7199645042419434
    4. 'count' (adapté à ' count') → logprob: -2.9699645042419434
    5. 'import' → logprob: -5.469964504241943
    6. ' count' → logprob: -7.219964504241943
    7. 'n' → logprob: -7.969964504241943
    8. 'dataset' → logprob: -9.094964027404785
    9. 'num' → logprob: -9.969964027404785
    10. 'from' → logprob: -10.094964027404785

Token 672: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519303858280182
    2. '=' → logprob: -1.5019303560256958
    3. ' ' → logprob: -14.626930236816406
    4. '_' → logprob: -14.751930236816406
    5. '   ' → logprob: -15.876930236816406
    6. '.' → logprob: -16.626930236816406
    7. ' in' → logprob: -16.876930236816406
    8. '_=' → logprob: -16.876930236816406
    9. ':' → logprob: -17.251930236816406
    10. ')' → logprob: -17.626930236816406

Token 673: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022422909736633
    2. ' ' → logprob: -1.910224199295044
    3. '=' → logprob: -17.03522491455078
    4. '1' → logprob: -18.16022491455078
    5. '`' → logprob: -18.66022491455078
    6. ' ' → logprob: -18.66022491455078
    7. '```' → logprob: -18.72272491455078
    8. '   ' → logprob: -18.72272491455078
    9. '  ' → logprob: -19.16022491455078
    10. '۰' → logprob: -19.59772491455078

Token 674: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '1' → logprob: -17.50020408630371
    4. 'self' → logprob: -17.87520408630371
    5. '=' → logprob: -18.25020408630371
    6. '000' → logprob: -18.93770408630371
    7. '   ' → logprob: -19.25020408630371
    8. '۰' → logprob: -19.25020408630371
    9. '０' → logprob: -20.00020408630371
    10. '00' → logprob: -20.06270408630371

Token 675: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13274414837360382
    2. '       ' → logprob: -2.257744073867798
    3. '        
' → logprob: -4.382744312286377
    4. '		
' → logprob: -6.257744312286377
    5. 'while' → logprob: -6.507744312286377
    6. ' while' → logprob: -7.007744312286377
    7. '<|end|>' → logprob: -7.257744312286377
    8. '  
' → logprob: -7.382744312286377
    9. '	while' → logprob: -8.132743835449219
    10. ' 
' → logprob: -8.382743835449219

Token 676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00755469361320138
    2. ' while' → logprob: -5.757554531097412
    3. 'while' → logprob: -6.007554531097412
    4. '
' → logprob: -6.507554531097412
    5. '   ' → logprob: -8.63255500793457
    6. '	while' → logprob: -8.88255500793457
    7. '	' → logprob: -10.13255500793457
    8. '        
' → logprob: -10.88255500793457
    9. '<|end|>' → logprob: -10.88255500793457
    10. ',' → logprob: -12.63255500793457

Token 677: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6509187817573547
    2. 'while' (adapté à ' while') → logprob: -0.7759187817573547
    3. '       ' → logprob: -4.025918960571289
    4. '
' → logprob: -9.025918960571289
    5. 'import' → logprob: -9.525918960571289
    6. '	while' → logprob: -10.025918960571289
    7. ' for' → logprob: -10.150918960571289
    8. 'for' → logprob: -11.525918960571289
    9. '```' → logprob: -12.150918960571289
    10. '   ' → logprob: -12.775918960571289

Token 678: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.021002165973186493
    2. ' count' → logprob: -3.8960020542144775
    3. 'True' → logprob: -7.771002292633057
    4. ' True' → logprob: -10.396001815795898
    5. '	count' → logprob: -12.271001815795898
    6. '(count' → logprob: -12.896001815795898
    7. 'Count' → logprob: -15.521001815795898
    8. '   ' → logprob: -16.2710018157959
    9. '_count' → logprob: -17.0210018157959
    10. '.count' → logprob: -17.0210018157959

Token 679: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04300491139292717
    2. '<' → logprob: -3.1680049896240234
    3. ' ' → logprob: -13.293004989624023
    4. '<len' → logprob: -14.418004989624023
    5. '<int' → logprob: -14.668004989624023
    6. '<n' → logprob: -14.668004989624023
    7. ' <
' → logprob: -14.793004989624023
    8. '<count' → logprob: -15.043004989624023
    9. '<class' → logprob: -15.293004989624023
    10. '<size' → logprob: -15.293004989624023

Token 680: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038042180240154266
    2. ' self' → logprob: -3.2880420684814453
    3. '50' → logprob: -15.038042068481445
    4. '(self' → logprob: -15.413042068481445
    5. '	self' → logprob: -16.788042068481445
    6. '[self' → logprob: -17.288042068481445
    7. '       ' → logprob: -17.663042068481445
    8. ' ' → logprob: -17.788042068481445
    9. '=self' → logprob: -17.788042068481445
    10. '
' → logprob: -18.663042068481445

Token 681: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00020509003661572933
    2. '_max' → logprob: -8.500205039978027
    3. '.' → logprob: -14.250205039978027
    4. '_' → logprob: -15.750205039978027
    5. ' _' → logprob: -15.750205039978027
    6. 'max' → logprob: -15.750205039978027
    7. '.max' → logprob: -15.875205039978027
    8. '   ' → logprob: -16.125205993652344
    9. '_MAX' → logprob: -16.750205993652344
    10. '       ' → logprob: -16.875205993652344

Token 682: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -4.320199877838604e-07
    2. '_max' → logprob: -15.0
    3. ' max' → logprob: -19.125
    4. '.max' → logprob: -20.25
    5. '	max' → logprob: -21.625
    6. 'Max' → logprob: -23.125
    7. '-max' → logprob: -23.25
    8. '(max' → logprob: -23.75
    9. 'maxlength' → logprob: -23.75
    10. ',max' → logprob: -24.125

Token 683: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -7.896309739408025e-07
    2. 'datasets' → logprob: -14.625000953674316
    3. 'atasets' → logprob: -15.375000953674316
    4. '_dataset' → logprob: -16.75
    5. '
' → logprob: -17.0
    6. ' datasets' → logprob: -17.375
    7. '_' → logprob: -18.0
    8. '\' → logprob: -18.5
    9. '   ' → logprob: -18.75
    10. '_data' → logprob: -18.875

Token 684: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -0.0019707425963133574
    2. 'datasets' → logprob: -6.2519707679748535
    3. 'ataset' → logprob: -10.626970291137695
    4. ' datasets' → logprob: -11.126970291137695
    5. 'at' → logprob: -14.001970291137695
    6. '.datasets' → logprob: -14.251970291137695
    7. 'ata' → logprob: -14.751970291137695
    8. 'atas' → logprob: -15.126970291137695
    9. '_d' → logprob: -15.376970291137695
    10. '_dataset' → logprob: -15.376970291137695

Token 685: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3877778947353363
    2. ':' → logprob: -1.1377779245376587
    3. ' and' → logprob: -7.387777805328369
    4. ' :
' → logprob: -9.262778282165527
    5. '):
' → logprob: -10.012778282165527
    6. 'and' → logprob: -10.387778282165527
    7. ' :' → logprob: -10.387778282165527
    8. '       ' → logprob: -10.637778282165527
    9. '():
' → logprob: -10.887778282165527
    10. ':
' → logprob: -11.262778282165527

Token 686: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000387535837944597
    2. 'try' → logprob: -8.375387191772461
    3. ' line' → logprob: -10.000387191772461
    4. ' try' → logprob: -10.000387191772461
    5. '```' → logprob: -11.000387191772461
    6. 's' → logprob: -11.125387191772461
    7. '   ' → logprob: -11.625387191772461
    8. 'input' → logprob: -11.625387191772461
    9. 'line' → logprob: -11.875387191772461
    10. '            
' → logprob: -12.875387191772461

Token 687: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43989869952201843
    2. 'try' (adapté à ' try') → logprob: -1.8148987293243408
    3. ' try' → logprob: -2.064898729324341
    4. ' line' → logprob: -3.189898729324341
    5. 'line' → logprob: -3.814898729324341
    6. 's' → logprob: -6.189898490905762
    7. ' s' → logprob: -7.439898490905762
    8. '   ' → logprob: -8.189898490905762
    9. '               ' → logprob: -11.189898490905762
    10. '	line' → logprob: -11.189898490905762

Token 688: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2097100466489792
    2. ':' → logprob: -1.7097100019454956
    3. ':
' → logprob: -4.959710121154785
    4. 'input' → logprob: -7.709710121154785
    5. ' input' → logprob: -9.084710121154785
    6. '           ' → logprob: -9.584710121154785
    7. ',' → logprob: -9.709710121154785
    8. ' :' → logprob: -9.959710121154785
    9. ' line' → logprob: -9.959710121154785
    10. '):
' → logprob: -10.084710121154785

Token 689: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014568318612873554
    2. 's' → logprob: -5.139568328857422
    3. 'line' → logprob: -5.639568328857422
    4. ' line' → logprob: -5.639568328857422
    5. 'input' → logprob: -7.264568328857422
    6. ' s' → logprob: -7.389568328857422
    7. ' input' → logprob: -9.764568328857422
    8. '   ' → logprob: -9.764568328857422
    9. '           ' → logprob: -10.514568328857422
    10. '#line' → logprob: -11.764568328857422

Token 690: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.17407038807868958
    2. ' line' → logprob: -1.9240703582763672
    3. '                   ' → logprob: -4.799070358276367
    4. 's' → logprob: -5.424070358276367
    5. ' s' → logprob: -7.299070358276367
    6. '   ' → logprob: -8.174070358276367
    7. 'input' → logprob: -9.174070358276367
    8. 'raw' → logprob: -11.174070358276367
    9. ' ' → logprob: -11.424070358276367
    10. '	line' → logprob: -12.174070358276367

Token 691: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078878089785576
    2. '=' → logprob: -5.5040788650512695
    3. '=input' → logprob: -15.75407886505127
    4. '=line' → logprob: -15.75407886505127
    5. ':' → logprob: -16.629079818725586
    6. ' =
' → logprob: -17.254079818725586
    7. 's' → logprob: -17.379079818725586
    8. ' ' → logprob: -17.379079818725586
    9. ' ' → logprob: -18.879079818725586
    10. '.' → logprob: -19.004079818725586

Token 692: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750484973192215
    2. ' input' → logprob: -3.5297505855560303
    3. '=input' → logprob: -17.65475082397461
    4. '(input' → logprob: -18.40475082397461
    5. '	input' → logprob: -18.65475082397461
    6. '<input' → logprob: -19.02975082397461
    7. '   ' → logprob: -19.40475082397461
    8. '```' → logprob: -20.52975082397461
    9. '
' → logprob: -20.65475082397461
    10. '`' → logprob: -21.02975082397461

Token 693: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3879088759422302
    2. '().' → logprob: -1.137908935546875
    3. '()
' → logprob: -6.887908935546875
    4. '(' → logprob: -11.512908935546875
    5. '()

' → logprob: -12.637908935546875
    6. ' ()' → logprob: -13.137908935546875
    7. '())' → logprob: -14.262908935546875
    8. '.strip' → logprob: -15.262908935546875
    9. '()`' → logprob: -15.512908935546875
    10. '();' → logprob: -15.637908935546875

Token 694: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006441442295908928
    2. '.strip' → logprob: -6.131441593170166
    3. ' if' → logprob: -6.506441593170166
    4. '           ' → logprob: -6.756441593170166
    5. '                
' → logprob: -6.881441593170166
    6. '	           ' → logprob: -9.506441116333008
    7. '.rstrip' → logprob: -9.631441116333008
    8. '.' → logprob: -9.881441116333008
    9. ' ' → logprob: -9.881441116333008
    10. '                   ' → logprob: -10.131441116333008

Token 695: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30610090494155884
    2. '.strip' → logprob: -1.806100845336914
    3. '
' → logprob: -2.806100845336914
    4. ' if' → logprob: -3.931100845336914
    5. '            
' → logprob: -4.806100845336914
    6. '.' → logprob: -6.056100845336914
    7. '.rstrip' → logprob: -6.056100845336914
    8. '               ' → logprob: -6.556100845336914
    9. ' 
' → logprob: -6.556100845336914
    10. '            ' → logprob: -6.806100845336914

Token 696: ' EOF' (ID: 72412)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.16022412478923798
    2. ' EOF' → logprob: -1.9102240800857544
    3. 'Stop' → logprob: -17.78522491455078
    4. 'EO' → logprob: -19.53522491455078
    5. ' Stop' → logprob: -21.03522491455078
    6. ' eof' → logprob: -21.66022491455078
    7. '(' → logprob: -22.16022491455078
    8. 'EOS' → logprob: -22.16022491455078
    9. 'End' → logprob: -22.66022491455078
    10. '
' → logprob: -23.03522491455078

Token 697: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00014036978245712817
    2. ':' → logprob: -8.875140190124512
    3. ':
' → logprob: -15.250140190124512
    4. 'E' → logprob: -16.500141143798828
    5. 'EOF' → logprob: -16.750141143798828
    6. '
' → logprob: -19.000141143798828
    7. '():' → logprob: -19.750141143798828
    8. 'Erro' → logprob: -19.750141143798828
    9. 'Err' → logprob: -19.875141143798828
    10. 'error' → logprob: -20.125141143798828

Token 698: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04977104812860489
    2. ':
' → logprob: -3.1747710704803467
    3. '               ' → logprob: -5.049770832061768
    4. '                   ' → logprob: -8.674771308898926
    5. '           ' → logprob: -9.049771308898926
    6. ':return' → logprob: -11.799771308898926
    7. '                ' → logprob: -12.299771308898926
    8. '   ' → logprob: -12.799771308898926
    9. '	           ' → logprob: -13.049771308898926
    10. ' ' → logprob: -13.174771308898926

Token 699: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.895480277715251e-06
    2. '           ' → logprob: -12.875008583068848
    3. '                
' → logprob: -13.000008583068848
    4. '                   ' → logprob: -13.625008583068848
    5. '   ' → logprob: -13.750008583068848
    6. '	           ' → logprob: -14.375008583068848
    7. '                ' → logprob: -15.625008583068848
    8. '              ' → logprob: -15.750008583068848
    9. ' break' → logprob: -15.875008583068848
    10. ' ' → logprob: -16.000009536743164

Token 700: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.07599177956581116
    2. 'return' → logprob: -3.3259918689727783
    3. ' break' → logprob: -3.5759918689727783
    4. '               ' → logprob: -4.825991630554199
    5. ' return' → logprob: -7.075991630554199
    6. '                   ' → logprob: -7.950991630554199
    7. '	break' → logprob: -10.7009916305542
    8. '           ' → logprob: -12.4509916305542
    9. '   ' → logprob: -13.4509916305542
    10. '
' → logprob: -13.5759916305542

Token 701: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013882013445254415
    2. ' if' → logprob: -10.000139236450195
    3. '            
' → logprob: -10.250139236450195
    4. '
' → logprob: -10.750139236450195
    5. '		' → logprob: -11.500139236450195
    6. '               ' → logprob: -11.750139236450195
    7. '       ' → logprob: -12.250139236450195
    8. ',' → logprob: -12.500139236450195
    9. '<|end|>' → logprob: -12.625139236450195
    10. '.' → logprob: -13.875139236450195

Token 702: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00026622318546287715
    2. '            
' → logprob: -8.750266075134277
    3. '
' → logprob: -10.250266075134277
    4. '<|end|>' → logprob: -10.375266075134277
    5. ' if' → logprob: -11.125266075134277
    6. '               ' → logprob: -12.000266075134277
    7. '       ' → logprob: -12.000266075134277
    8. '		' → logprob: -12.625266075134277
    9. ',' → logprob: -13.375266075134277
    10. '<|end|>' → logprob: -14.000266075134277

Token 703: ' line' (ID: 2543)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23902280628681183
    2. ' if' → logprob: -1.7390228509902954
    3. 'if' → logprob: -3.489022731781006
    4. ' line' → logprob: -5.239022731781006
    5. 'line' (adapté à ' line') → logprob: -6.989022731781006
    6. '=line' → logprob: -10.114023208618164
    7. '            
' → logprob: -10.489023208618164
    8. ' stripped' → logprob: -11.114023208618164
    9. '.strip' → logprob: -11.614023208618164
    10. '               ' → logprob: -11.739023208618164

Token 704: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009434112347662449
    2. ' =' → logprob: -4.759434223175049
    3. '.strip' → logprob: -7.134434223175049
    4. 'strip' → logprob: -12.00943374633789
    5. '=line' → logprob: -12.00943374633789
    6. '_strip' → logprob: -12.63443374633789
    7. '=
' → logprob: -13.13443374633789
    8. '.' → logprob: -13.13443374633789
    9. '==' → logprob: -13.75943374633789
    10. '=str' → logprob: -14.25943374633789

Token 705: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.000553151941858232
    2. ' line' → logprob: -7.500553131103516
    3. '(line' → logprob: -16.000553131103516
    4. '=line' → logprob: -16.625553131103516
    5. '#line' → logprob: -18.500553131103516
    6. '	line' → logprob: -18.625553131103516
    7. '[line' → logprob: -19.500553131103516
    8. '
' → logprob: -20.750553131103516
    9. 'Line' → logprob: -21.000553131103516
    10. 'lin' → logprob: -21.250553131103516

Token 706: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0002226093056378886
    2. '.rstrip' → logprob: -9.000222206115723
    3. '.' → logprob: -9.250222206115723
    4. 'strip' → logprob: -13.125222206115723
    5. '.trim' → logprob: -13.875222206115723
    6. ' .' → logprob: -16.75022315979004
    7. '.l' → logprob: -17.12522315979004
    8. 'rstrip' → logprob: -20.25022315979004
    9. '.readline' → logprob: -20.50022315979004
    10. ' strip' → logprob: -20.75022315979004

Token 707: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033684197813272476
    2. '()
' → logprob: -3.408684253692627
    3. '           ' → logprob: -10.658683776855469
    4. '())' → logprob: -12.533683776855469
    5. '()
' → logprob: -12.908683776855469
    6. '()\' → logprob: -13.033683776855469
    7. '();' → logprob: -14.033683776855469
    8. '<|end|>' → logprob: -14.033683776855469
    9. '()

' → logprob: -14.158683776855469
    10. '():
' → logprob: -14.533683776855469

Token 708: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.008129963040119e-06
    2. '<|end|>' → logprob: -13.500003814697266
    3. '		' → logprob: -14.375003814697266
    4. 'if' → logprob: -14.500003814697266
    5. '            
' → logprob: -14.500003814697266
    6. '               ' → logprob: -15.000003814697266
    7. ' if' → logprob: -15.625003814697266
    8. '	       ' → logprob: -16.000003814697266
    9. '       ' → logprob: -16.375003814697266
    10. '   ' → logprob: -16.375003814697266

Token 709: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016004408244043589
    2. '           ' → logprob: -6.75160026550293
    3. ' if' → logprob: -7.75160026550293
    4. '               ' → logprob: -17.37660026550293
    5. ';if' → logprob: -18.25160026550293
    6. 'If' → logprob: -18.50160026550293
    7. '	if' → logprob: -18.75160026550293
    8. '       ' → logprob: -19.00160026550293
    9. '```' → logprob: -19.50160026550293
    10. '   ' → logprob: -19.50160026550293

Token 710: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.161203071475029
    2. ' not' → logprob: -1.9112030267715454
    3. 'line' → logprob: -7.036202907562256
    4. ' line' → logprob: -9.286203384399414
    5. 'len' → logprob: -12.911203384399414
    6. '!' → logprob: -13.536203384399414
    7. 'no' → logprob: -14.411203384399414
    8. 'n' → logprob: -14.411203384399414
    9. '	not' → logprob: -14.411203384399414
    10. '(not' → logprob: -15.661203384399414

Token 711: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0024756586644798517
    2. ' line' → logprob: -6.002475738525391
    3. '	line' → logprob: -17.62747573852539
    4. '
' → logprob: -18.50247573852539
    5. '(line' → logprob: -19.75247573852539
    6. 'len' → logprob: -20.00247573852539
    7. '#line' → logprob: -20.12747573852539
    8. 'Line' → logprob: -20.75247573852539
    9. '[line' → logprob: -21.37747573852539
    10. '   ' → logprob: -21.62747573852539

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03020629473030567
    2. ':
' → logprob: -3.5302062034606934
    3. ' or' → logprob: -8.030206680297852
    4. 'or' → logprob: -9.905206680297852
    5. '<|end|>' → logprob: -9.905206680297852
    6. ':return' → logprob: -12.030206680297852
    7. '):' → logprob: -12.280206680297852
    8. 'continue' → logprob: -12.280206680297852
    9. '```' → logprob: -12.655206680297852
    10. ' :' → logprob: -13.030206680297852

Token 713: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11499257385730743
    2. ':' → logprob: -2.364992618560791
    3. ':
' → logprob: -4.239992618560791
    4. '           ' → logprob: -9.239992141723633
    5. ' or' → logprob: -9.489992141723633
    6. '                   ' → logprob: -10.364992141723633
    7. 'continue' → logprob: -11.239992141723633
    8. '              ' → logprob: -11.364992141723633
    9. '   ' → logprob: -11.364992141723633
    10. ',' → logprob: -11.864992141723633

Token 714: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7654817700386047
    2. 'break' → logprob: -1.26548171043396
    3. ' break' → logprob: -1.51548171043396
    4. 'continue' (adapté à ' continue') → logprob: -3.89048171043396
    5. ' continue' → logprob: -5.015481948852539
    6. '                   ' → logprob: -5.140481948852539
    7. '   ' → logprob: -9.890481948852539
    8. '           ' → logprob: -10.015481948852539
    9. 'return' → logprob: -10.515481948852539
    10. '	break' → logprob: -11.015481948852539

Token 715: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015347852604463696
    2. '            
' → logprob: -9.250153541564941
    3. '               ' → logprob: -10.750153541564941
    4. '
' → logprob: -11.375153541564941
    5. ',' → logprob: -12.125153541564941
    6. 'try' → logprob: -12.125153541564941
    7. ' try' → logprob: -13.250153541564941
    8. '          ' → logprob: -13.250153541564941
    9. '		' → logprob: -13.500153541564941
    10. '       ' → logprob: -13.875153541564941

Token 716: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010986098641296849
    2. ' try' → logprob: -10.750109672546387
    3. 'try' → logprob: -10.875109672546387
    4. ' if' → logprob: -11.125109672546387
    5. '       ' → logprob: -11.250109672546387
    6. '```' → logprob: -11.375109672546387
    7. '            
' → logprob: -11.875109672546387
    8. '               ' → logprob: -12.500109672546387
    9. 'yield' → logprob: -12.500109672546387
    10. 'if' → logprob: -12.625109672546387

Token 717: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23060952126979828
    2. 'try' → logprob: -2.48060941696167
    3. 'yield' (adapté à ' yield') → logprob: -2.48060941696167
    4. 'board' → logprob: -3.35560941696167
    5. ' yield' → logprob: -6.48060941696167
    6. ' try' → logprob: -7.10560941696167
    7. ' board' → logprob: -7.23060941696167
    8. 'b' → logprob: -7.73060941696167
    9. 'boards' → logprob: -10.105609893798828
    10. 'if' → logprob: -10.605609893798828

Token 718: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.00033546582562848926
    2. ' Board' → logprob: -8.000335693359375
    3. '(Board' → logprob: -16.750335693359375
    4. 'board' → logprob: -19.750335693359375
    5. '   ' → logprob: -21.000335693359375
    6. '_board' → logprob: -21.250335693359375
    7. 'Boards' → logprob: -21.250335693359375
    8. '.Board' → logprob: -21.750335693359375
    9. 'Game' → logprob: -21.875335693359375
    10. 'B' → logprob: -22.125335693359375

Token 719: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0007833030540496111
    2. '.' → logprob: -7.500783443450928
    3. 'from' → logprob: -8.62578296661377
    4. ' .' → logprob: -10.00078296661377
    5. '   ' → logprob: -13.37578296661377
    6. '#from' → logprob: -14.00078296661377
    7. ' from' → logprob: -14.12578296661377
    8. 'From' → logprob: -14.87578296661377
    9. '.From' → logprob: -15.12578296661377
    10. '
' → logprob: -15.12578296661377

Token 720: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -4.60414821645827e-06
    2. 'string' → logprob: -12.375004768371582
    3. 'String' → logprob: -15.625004768371582
    4. '_line' → logprob: -17.000003814697266
    5. '_STRING' → logprob: -17.750003814697266
    6. '```' → logprob: -17.875003814697266
    7. '_str' → logprob: -18.000003814697266
    8. '_' → logprob: -18.000003814697266
    9. '_String' → logprob: -18.125003814697266
    10. '_strings' → logprob: -18.875003814697266

Token 721: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.62501049041748
    3. ' (' → logprob: -13.87501049041748
    4. '(
' → logprob: -15.25001049041748
    5. '#line' → logprob: -15.50001049041748
    6. '[line' → logprob: -15.87501049041748
    7. '(Line' → logprob: -15.87501049041748
    8. '=line' → logprob: -17.125011444091797
    9. ',line' → logprob: -17.875011444091797
    10. '(lines' → logprob: -18.750011444091797

Token 722: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25243914127349854
    2. ')
' → logprob: -1.5024391412734985
    3. '           ' → logprob: -7.627439022064209
    4. ')
' → logprob: -11.627439498901367
    5. '               ' → logprob: -11.877439498901367
    6. ' )' → logprob: -13.252439498901367
    7. ')

' → logprob: -13.377439498901367
    8. '       ' → logprob: -13.502439498901367
    9. ' )
' → logprob: -13.502439498901367
    10. ')`
' → logprob: -14.752439498901367

Token 723: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001777960715116933
    2. '       ' → logprob: -9.375177383422852
    3. '<|end|>' → logprob: -10.000177383422852
    4. '		' → logprob: -11.375177383422852
    5. '               ' → logprob: -11.750177383422852
    6. '            ' → logprob: -12.125177383422852
    7. '          ' → logprob: -12.125177383422852
    8. '<|end|>' → logprob: -12.375177383422852
    9. '   ' → logprob: -12.500177383422852
    10. '            
' → logprob: -13.375177383422852

Token 724: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1003141701221466
    2. 'count' (adapté à ' count') → logprob: -2.350314140319824
    3. ' count' → logprob: -9.475314140319824
    4. '       ' → logprob: -11.475314140319824
    5. '   ' → logprob: -11.600314140319824
    6. '		' → logprob: -11.725314140319824
    7. '	count' → logprob: -13.600314140319824
    8. '               ' → logprob: -14.225314140319824
    9. '	       ' → logprob: -15.225314140319824
    10. ',count' → logprob: -15.600314140319824

Token 725: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07893793284893036
    2. ' +=' → logprob: -2.5789380073547363
    3. '+' → logprob: -9.953937530517578
    4. '+="' → logprob: -15.703937530517578
    5. ']+=' → logprob: -15.703937530517578
    6. '=' → logprob: -16.328937530517578
    7. '++' → logprob: -16.453937530517578
    8. ' +' → logprob: -16.953937530517578
    9. '+='' → logprob: -16.953937530517578
    10. '+=(' → logprob: -17.953937530517578

Token 726: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -21.125804901123047
    4. '   ' → logprob: -21.375804901123047
    5. ' ' → logprob: -21.625804901123047
    6. '１' → logprob: -21.625804901123047
    7. '۱' → logprob: -21.875804901123047
    8. '0' → logprob: -22.813304901123047
    9. '+' → logprob: -23.188304901123047
    10. '`' → logprob: -23.250804901123047

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -23.0
    4. '`' → logprob: -24.0
    5. '１' → logprob: -24.25
    6. '   ' → logprob: -24.5
    7. '۱' → logprob: -25.75
    8. '
' → logprob: -26.125
    9. '0' → logprob: -26.25
    10. 'len' → logprob: -26.5

Token 728: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 729: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.009744282811880112
    2. 'def' → logprob: -5.759744167327881
    3. '<|end|>' → logprob: -5.759744167327881
    4. '
' → logprob: -6.009744167327881
    5. '```' → logprob: -7.509744167327881
    6. 'from' → logprob: -9.134744644165039
    7. '<|end|>' → logprob: -9.509744644165039
    8. ' class' → logprob: -9.634744644165039
    9. '#' → logprob: -10.259744644165039
    10. '@dat' → logprob: -10.884744644165039

Token 730: ' Tic' (ID: 111968)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.30456918478012085
    2. ' Game' → logprob: -1.8045692443847656
    3. 'Main' → logprob: -3.8045692443847656
    4. 'Runner' → logprob: -4.054569244384766
    5. 'Output' → logprob: -4.179569244384766
    6. 'Solution' → logprob: -4.304569244384766
    7. 'Evaluator' → logprob: -4.304569244384766
    8. 'Result' → logprob: -6.179569244384766
    9. 'Solver' → logprob: -6.429569244384766
    10. ' Tic' → logprob: -6.554569244384766

Token 731: 'Tac' (ID: 112548)
  Prédit: 'Tac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tac' → logprob: -2.129266067640856e-05
    2. 'Tak' → logprob: -11.375020980834961
    3. 'T' → logprob: -12.125020980834961
    4. ' Tac' → logprob: -12.750020980834961
    5. '```' → logprob: -14.000020980834961
    6. 'Tok' → logprob: -15.250020980834961
    7. '   ' → logprob: -16.12502098083496
    8. '
' → logprob: -16.50002098083496
    9. 'Toe' → logprob: -16.75002098083496
    10. '`' → logprob: -17.62502098083496

Token 732: 'Toe' (ID: 121312)
  Prédit: 'Toe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Toe' → logprob: -5.300083648762666e-05
    2. 'To' → logprob: -10.375053405761719
    3. 'T' → logprob: -11.125053405761719
    4. 'Tow' → logprob: -13.375053405761719
    5. '   ' → logprob: -13.875053405761719
    6. ' Toe' → logprob: -14.000053405761719
    7. '```' → logprob: -14.000053405761719
    8. ' toe' → logprob: -14.250053405761719
    9. 'Toy' → logprob: -14.625053405761719
    10. 'Tac' → logprob: -14.750053405761719

Token 733: 'Application' (ID: 6817)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5811766386032104
    2. 'Game' → logprob: -0.8311766386032104
    3. 'Solver' → logprob: -6.0811767578125
    4. '():' → logprob: -6.8311767578125
    5. ':
' → logprob: -7.3311767578125
    6. '(Game' → logprob: -7.7061767578125
    7. 'Evaluator' → logprob: -8.3311767578125
    8. 'Runner' → logprob: -8.9561767578125
    9. 'Simulator' → logprob: -9.2061767578125
    10. 'Player' → logprob: -9.8311767578125

Token 734: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005723327049054205
    2. ':
' → logprob: -7.500572204589844
    3. ' :' → logprob: -11.125572204589844
    4. ':def' → logprob: -13.500572204589844
    5. '):' → logprob: -14.500572204589844
    6. '():' → logprob: -14.625572204589844
    7. '(' → logprob: -14.875572204589844
    8. ':

' → logprob: -14.875572204589844
    9. '<|end|>' → logprob: -15.000572204589844
    10. '：' → logprob: -15.250572204589844

Token 735: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015553286066278815
    2. ' def' → logprob: -6.501555442810059
    3. 'def' → logprob: -10.126555442810059
    4. 'class' → logprob: -12.626555442810059
    5. '    ' → logprob: -12.751555442810059
    6. ' class' → logprob: -13.251555442810059
    7. '   ' → logprob: -13.751555442810059
    8. ':' → logprob: -13.876555442810059
    9. '    
' → logprob: -14.251555442810059
    10. ',' → logprob: -15.001555442810059

Token 736: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3153187334537506
    2. 'def' (adapté à ' def') → logprob: -1.3153187036514282
    3. '   ' → logprob: -6.190318584442139
    4. 'MAX' → logprob: -13.690319061279297
    5. ' MAX' → logprob: -13.690319061279297
    6. '	def' → logprob: -14.065319061279297
    7. '    ' → logprob: -14.315319061279297
    8. ' ' → logprob: -14.440319061279297
    9. 'class' → logprob: -14.565319061279297
    10. ' _' → logprob: -15.440319061279297

Token 737: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4770934283733368
    2. ' __' → logprob: -0.9770934581756592
    3. '__' → logprob: -6.47709321975708
    4. 'def' → logprob: -6.60209321975708
    5. ' ' → logprob: -10.102093696594238
    6. '```' → logprob: -11.477093696594238
    7. ' ' → logprob: -11.602093696594238
    8. ' ___' → logprob: -11.602093696594238
    9. '_init' → logprob: -11.727093696594238
    10. '   ' → logprob: -11.977093696594238

Token 738: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.003082524985074997
    2. '__' → logprob: -6.253082752227783
    3. ' init' → logprob: -7.253082752227783
    4. 'def' → logprob: -8.753082275390625
    5. '   ' → logprob: -9.253082275390625
    6. '_init' → logprob: -9.378082275390625
    7. ' __' → logprob: -9.503082275390625
    8. '(init' → logprob: -11.503082275390625
    9. ' def' → logprob: -11.753082275390625
    10. '```' → logprob: -12.378082275390625

Token 739: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2504189610481262
    2. '(' → logprob: -2.5004189014434814
    3. '__(' → logprob: -2.5004189014434814
    4. ' (' → logprob: -2.8754189014434814
    5. '__(
' → logprob: -7.6254191398620605
    6. '   ' → logprob: -8.250418663024902
    7. '(
' → logprob: -9.000418663024902
    8. 'self' → logprob: -10.375418663024902
    9. ' ' → logprob: -10.625418663024902
    10. ',' → logprob: -10.625418663024902

Token 740: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.672236824873835e-05
    2. ' self' → logprob: -10.375076293945312
    3. ')' → logprob: -10.625076293945312
    4. '
' → logprob: -11.375076293945312
    5. '):
' → logprob: -11.750076293945312
    6. '   ' → logprob: -14.250076293945312
    7. '):' → logprob: -14.500076293945312
    8. '       ' → logprob: -15.000076293945312
    9. ' ' → logprob: -16.000076293945312
    10. '),' → logprob: -17.125076293945312

Token 741: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04474031925201416
    2. 'self' → logprob: -3.1697402000427246
    3. '):' → logprob: -7.419740200042725
    4. '):
' → logprob: -7.919740200042725
    5. '(self' → logprob: -8.294740676879883
    6. '   ' → logprob: -8.294740676879883
    7. ' self' → logprob: -9.044740676879883
    8. '       ' → logprob: -9.544740676879883
    9. ' ,' → logprob: -10.544740676879883
    10. ',self' → logprob: -10.669740676879883

Token 742: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001955990679562092
    2. '       ' → logprob: -6.251955986022949
    3. ' self' → logprob: -10.75195598602295
    4. '   ' → logprob: -12.50195598602295
    5. '(self' → logprob: -13.37695598602295
    6. '
' → logprob: -15.12695598602295
    7. '):
' → logprob: -16.126956939697266
    8. '           ' → logprob: -16.251956939697266
    9. '```' → logprob: -16.376956939697266
    10. '	self' → logprob: -17.251956939697266

Token 743: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10686447471380234
    2. '       ' → logprob: -2.3568644523620605
    3. 'symbol' → logprob: -5.9818644523620605
    4. ' self' → logprob: -6.6068644523620605
    5. 'check' → logprob: -6.6068644523620605
    6. 'symbols' → logprob: -6.8568644523620605
    7. 'o' → logprob: -9.481864929199219
    8. '   ' → logprob: -9.731864929199219
    9. 'sym' → logprob: -9.856864929199219
    10. 'x' → logprob: -9.981864929199219

Token 744: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00024382755509577692
    2. '   ' → logprob: -8.375244140625
    3. '.' → logprob: -12.250244140625
    4. '       ' → logprob: -12.875244140625
    5. ')._' → logprob: -13.625244140625
    6. '.e' → logprob: -13.875244140625
    7. ']._' → logprob: -14.125244140625
    8. ' .' → logprob: -14.250244140625
    9. '.__' → logprob: -14.750244140625
    10. 'Evaluator' → logprob: -15.250244140625

Token 745: 'board' (ID: 3935)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.10929972678422928
    2. 'check' → logprob: -2.734299659729004
    3. 'evalu' → logprob: -4.109299659729004
    4. 'checker' → logprob: -4.359299659729004
    5. 'game' → logprob: -5.234299659729004
    6. 'input' → logprob: -5.734299659729004
    7. 'board' → logprob: -8.234299659729004
    8. 'checks' → logprob: -9.359299659729004
    9. 'eval' → logprob: -9.734299659729004
    10. 'evaluate' → logprob: -9.734299659729004

Token 746: '_loader' (ID: 47286)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19869035482406616
    2. '_reader' → logprob: -2.573690414428711
    3. ' =' → logprob: -3.198690414428711
    4. '_loader' → logprob: -3.948690414428711
    5. '=' → logprob: -4.448690414428711
    6. '_lines' → logprob: -4.573690414428711
    7. '<|end|>' → logprob: -5.198690414428711
    8. '_strings' → logprob: -5.823690414428711
    9. '_input' → logprob: -6.073690414428711
    10. ':' → logprob: -6.073690414428711

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132994472980499
    2. ' =' → logprob: -1.3132994174957275
    3. ':' → logprob: -10.188299179077148
    4. '   ' → logprob: -17.31329917907715
    5. 's' → logprob: -17.93829917907715
    6. '  ' → logprob: -17.93829917907715
    7. ' ' → logprob: -18.56329917907715
    8. '＝' → logprob: -19.18829917907715
    9. ',' → logprob: -19.31329917907715
    10. '=create' → logprob: -19.81329917907715

Token 748: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: 0.0
    2. ' Input' → logprob: -17.25
    3. '	Input' → logprob: -23.75
    4. '_input' → logprob: -25.5
    5. 'input' → logprob: -25.5
    6. '_Input' → logprob: -26.75
    7. '<Input' → logprob: -27.0
    8. 'INPUT' → logprob: -27.875
    9. '\Input' → logprob: -28.0
    10. '   ' → logprob: -29.0

Token 749: 'Loader' (ID: 12189)
  Prédit: 'Loader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Loader' → logprob: 0.0
    2. 'Load' → logprob: -18.875
    3. '_loader' → logprob: -19.25
    4. 'loader' → logprob: -19.5
    5. ' Loader' → logprob: -19.625
    6. 'XMLLoader' → logprob: -21.25
    7. 'oader' → logprob: -21.25
    8. '.Loader' → logprob: -22.875
    9. 'Looper' → logprob: -23.375
    10. 'Lo' → logprob: -23.375

Token 750: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08129581063985825
    2. '()
' → logprob: -2.5812957286834717
    3. '       ' → logprob: -6.081295967102051
    4. '(' → logprob: -9.70629596710205
    5. '(self' → logprob: -10.58129596710205
    6. '   ' → logprob: -11.20629596710205
    7. '()

' → logprob: -12.08129596710205
    8. '()
' → logprob: -12.45629596710205
    9. 'self' → logprob: -12.58129596710205
    10. '(),' → logprob: -13.95629596710205

Token 751: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18550339341163635
    2. 'self' → logprob: -1.810503363609314
    3. ' self' → logprob: -5.3105034828186035
    4. '   ' → logprob: -7.4355034828186035
    5. '
' → logprob: -9.435503005981445
    6. 'def' → logprob: -9.435503005981445
    7. '	self' → logprob: -10.810503005981445
    8. '```' → logprob: -11.685503005981445
    9. '(self' → logprob: -12.185503005981445
    10. 'from' → logprob: -12.435503005981445

Token 752: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006137899472378194
    2. '       ' → logprob: -8.250614166259766
    3. 'x' → logprob: -9.250614166259766
    4. 'o' → logprob: -9.625614166259766
    5. 'check' → logprob: -9.875614166259766
    6. 'symbols' → logprob: -9.875614166259766
    7. 'symbol' → logprob: -10.000614166259766
    8. 'e' → logprob: -11.625614166259766
    9. '   ' → logprob: -12.250614166259766
    10. ' self' → logprob: -12.500614166259766

Token 753: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.546478935983032e-05
    2. '.' → logprob: -11.125025749206543
    3. '.e' → logprob: -12.250025749206543
    4. '_e' → logprob: -13.375025749206543
    5. '   ' → logprob: -13.750025749206543
    6. '_game' → logprob: -14.375025749206543
    7. '.evaluate' → logprob: -14.500025749206543
    8. ' .' → logprob: -14.625025749206543
    9. '.game' → logprob: -14.625025749206543
    10. '       ' → logprob: -15.625025749206543

Token 754: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0696958601474762
    2. 'game' → logprob: -2.9446959495544434
    3. 'check' → logprob: -4.694695949554443
    4. 'evalu' → logprob: -5.569695949554443
    5. 'checker' → logprob: -6.444695949554443
    6. 'evaluate' → logprob: -10.319695472717285
    7. 'board' → logprob: -10.319695472717285
    8. 'eval' → logprob: -10.569695472717285
    9. ' evaluator' → logprob: -11.194695472717285
    10. 'result' → logprob: -11.819695472717285

Token 755: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.0028740577399730682
    2. 'valu' → logprob: -5.87787389755249
    3. 'val' → logprob: -9.752874374389648
    4. 'v' → logprob: -12.002874374389648
    5. 'valuer' → logprob: -12.877874374389648
    6. 'va' → logprob: -14.252874374389648
    7. 'valuate' → logprob: -14.877874374389648
    8. 'alu' → logprob: -15.002874374389648
    9. 'value' → logprob: -15.252874374389648
    10. 'evalu' → logprob: -15.252874374389648

Token 756: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.075940132141113
    4. '   ' → logprob: -17.325939178466797
    5. '  ' → logprob: -17.450939178466797
    6. ':' → logprob: -17.700939178466797
    7. ')' → logprob: -18.075939178466797
    8. 's' → logprob: -19.075939178466797
    9. ' =
' → logprob: -19.950939178466797
    10. '＝' → logprob: -19.950939178466797

Token 757: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0015023599844425917
    2. ' Game' → logprob: -6.501502513885498
    3. '   ' → logprob: -17.001502990722656
    4. '	Game' → logprob: -18.251502990722656
    5. '       ' → logprob: -20.376502990722656
    6. ' ' → logprob: -20.501502990722656
    7. '  ' → logprob: -20.751502990722656
    8. '(Game' → logprob: -21.876502990722656
    9. 'game' → logprob: -22.251502990722656
    10. '<Game' → logprob: -22.251502990722656

Token 758: 'Evaluator' (ID: 87172)
  Prédit: 'Evaluator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluator' → logprob: -9.014684110297821e-06
    2. 'valuator' → logprob: -11.625008583068848
    3. 'Enumerator' → logprob: -17.875009536743164
    4. 'Evalu' → logprob: -18.375009536743164
    5. 'Eval' → logprob: -18.625009536743164
    6. 'e' → logprob: -18.875009536743164
    7. 'Evaluate' → logprob: -19.875009536743164
    8. 'Estimator' → logprob: -19.875009536743164
    9. ' evaluator' → logprob: -20.375009536743164
    10. '[' → logprob: -20.500009536743164

Token 759: '([
' (ID: 18206)
  Prédit: '([
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([
' → logprob: -0.20209895074367523
    2. '([' → logprob: -1.7020989656448364
    3. '[' → logprob: -7.827098846435547
    4. '[
' → logprob: -8.327098846435547
    5. '(' → logprob: -10.952098846435547
    6. '(
' → logprob: -11.327098846435547
    7. '(check' → logprob: -11.827098846435547
    8. '       ' → logprob: -12.577098846435547
    9. 'check' → logprob: -13.327098846435547
    10. '   ' → logprob: -13.827098846435547

Token 760: '           ' (ID: 352)
  Prédit: 'Three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Three' → logprob: -0.02326120063662529
    2. '           ' → logprob: -3.773261308670044
    3. ' Three' → logprob: -11.398261070251465
    4. '       ' → logprob: -12.648261070251465
    5. '               ' → logprob: -14.023261070251465
    6. '   ' → logprob: -14.773261070251465
    7. 'Triple' → logprob: -18.64826202392578
    8. '          ' → logprob: -18.77326202392578
    9. 'Th' → logprob: -18.77326202392578
    10. 'Two' → logprob: -18.89826202392578

Token 761: ' Three' (ID: 21877)
  Prédit: 'Three'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Three' (adapté à ' Three') → logprob: -1.2664456789934775e-06
    2. '           ' → logprob: -14.250000953674316
    3. ' Three' → logprob: -14.500000953674316
    4. '               ' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '       ' → logprob: -19.125001907348633
    7. '                   ' → logprob: -22.000001907348633
    8. '3' → logprob: -22.250001907348633
    9. 'Triple' → logprob: -22.750001907348633
    10. '
' → logprob: -22.875001907348633

Token 762: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -1.9361264946837764e-07
    2. 'n' → logprob: -15.75
    3. ' In' → logprob: -17.375
    4. '_in' → logprob: -17.875
    5. 'in' → logprob: -18.125
    6. '...' → logprob: -19.25
    7. '	In' → logprob: -19.875
    8. 'I' → logprob: -20.0
    9. '_In' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 763: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -3.531315314830863e-06
    2. 'In' → logprob: -12.625003814697266
    3. ' Line' → logprob: -17.500003814697266
    4. 'Lin' → logprob: -17.500003814697266
    5. 'line' → logprob: -18.250003814697266
    6. '_line' → logprob: -19.125003814697266
    7. '_LINE' → logprob: -20.125003814697266
    8. 'Symbol' → logprob: -20.250003814697266
    9. '.Line' → logprob: -20.375003814697266
    10. '_Line' → logprob: -20.375003814697266

Token 764: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -1.6240566083070007e-06
    2. '(Player' → logprob: -14.000001907348633
    3. 'checker' → logprob: -14.375001907348633
    4. 'Check' → logprob: -16.750001907348633
    5. 'Player' → logprob: -17.375001907348633
    6. ' Checker' → logprob: -18.500001907348633
    7. '_checker' → logprob: -18.625001907348633
    8. ' checker' → logprob: -18.625001907348633
    9. 'CHECK' → logprob: -20.250001907348633
    10. 'Chess' → logprob: -20.375001907348633

Token 765: '(Player' (ID: 50954)
  Prédit: '(Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Player' → logprob: -9.491498531133402e-06
    2. '(' → logprob: -11.750009536743164
    3. ' (' → logprob: -14.375009536743164
    4. '(P' → logprob: -14.750009536743164
    5. 'Player' → logprob: -15.125009536743164
    6. '(player' → logprob: -15.375009536743164
    7. '(Game' → logprob: -16.625009536743164
    8. '<Player' → logprob: -17.500009536743164
    9. '	Player' → logprob: -18.125009536743164
    10. ' Player' → logprob: -18.375009536743164

Token 766: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -1.8624639324116288e-06
    2. 'symbol' → logprob: -14.125001907348633
    3. 'X' → logprob: -15.250001907348633
    4. ' Symbol' → logprob: -15.375001907348633
    5. '.Symbol' → logprob: -15.500001907348633
    6. '_symbol' → logprob: -17.000001907348633
    7. 'Symbols' → logprob: -17.000001907348633
    8. '.X' → logprob: -17.250001907348633
    9. '.' → logprob: -17.625001907348633
    10. ')' → logprob: -18.000001907348633

Token 767: '.O' (ID: 17193)
  Prédit: '.O'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.O' → logprob: -0.28945502638816833
    2. 'O' → logprob: -1.4144550561904907
    3. '.X' → logprob: -5.539454936981201
    4. ''O' → logprob: -6.164454936981201
    5. 'X' → logprob: -6.289454936981201
    6. '('' → logprob: -8.78945541381836
    7. ')' → logprob: -10.03945541381836
    8. '.' → logprob: -10.41445541381836
    9. '"O' → logprob: -10.41445541381836
    10. '(O' → logprob: -11.16445541381836

Token 768: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.47483277320861816
    2. '),
' → logprob: -0.9748327732086182
    3. '),

' → logprob: -8.099832534790039
    4. '),
' → logprob: -8.349832534790039
    5. ')' → logprob: -9.599832534790039
    6. '   ' → logprob: -9.599832534790039
    7. '       ' → logprob: -9.849832534790039
    8. '           ' → logprob: -10.724832534790039
    9. ' ),
' → logprob: -13.599832534790039
    10. ' ),' → logprob: -14.099832534790039

Token 769: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010325299575924873
    2. 'Three' → logprob: -4.7603254318237305
    3. ' Three' → logprob: -6.3853254318237305
    4. '               ' → logprob: -10.76032543182373
    5. '       ' → logprob: -14.26032543182373
    6. '          ' → logprob: -14.38532543182373
    7. '            ' → logprob: -15.38532543182373
    8. 'Two' → logprob: -15.88532543182373
    9. '   ' → logprob: -16.385324478149414
    10. '		' → logprob: -17.010324478149414

Token 770: ' Three' (ID: 21877)
  Prédit: 'Three'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Three' (adapté à ' Three') → logprob: -0.002441170159727335
    2. '           ' → logprob: -6.50244140625
    3. ' Three' → logprob: -7.00244140625
    4. '               ' → logprob: -10.62744140625
    5. '   ' → logprob: -12.50244140625
    6. '       ' → logprob: -14.62744140625
    7. 'Third' → logprob: -15.87744140625
    8. '                   ' → logprob: -17.00244140625
    9. '            ' → logprob: -17.25244140625
    10. '3' → logprob: -17.62744140625

Token 771: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: 0.0
    2. 'I' → logprob: -17.375
    3. 'in' → logprob: -17.375
    4. 'Line' → logprob: -18.375
    5. 'IN' → logprob: -18.625
    6. ' In' → logprob: -18.75
    7. 'Player' → logprob: -19.0
    8. 'Symbol' → logprob: -19.0
    9. '[' → logprob: -20.0
    10. 'X' → logprob: -20.25

Token 772: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -8.506661833962426e-05
    2. 'In' → logprob: -9.50008487701416
    3. ' Line' → logprob: -11.62508487701416
    4. 'Player' → logprob: -14.12508487701416
    5. 'LINE' → logprob: -16.125085830688477
    6. 'line' → logprob: -16.250085830688477
    7. 'Lin' → logprob: -16.250085830688477
    8. '.Line' → logprob: -16.875085830688477
    9. 'Symbol' → logprob: -17.000085830688477
    10. 'List' → logprob: -17.625085830688477

Token 773: 'Checker' (ID: 39016)
  Prédit: 'Checker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Checker' → logprob: -7.107425062713446e-06
    2. '(Player' → logprob: -12.000006675720215
    3. 'checker' → logprob: -14.875006675720215
    4. 'Player' → logprob: -15.625006675720215
    5. 'Symbol' → logprob: -16.12500762939453
    6. 'Check' → logprob: -16.50000762939453
    7. ' Checker' → logprob: -17.12500762939453
    8. '_checker' → logprob: -17.12500762939453
    9. ')' → logprob: -17.50000762939453
    10. 'X' → logprob: -17.75000762939453

Token 774: '(Player' (ID: 50954)
  Prédit: '(Player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Player' → logprob: -1.747814349073451e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -15.250017166137695
    4. ' (' → logprob: -15.875017166137695
    5. '(player' → logprob: -16.125017166137695
    6. 'Player' → logprob: -16.125017166137695
    7. '(P' → logprob: -17.250017166137695
    8. ' Player' → logprob: -17.500017166137695
    9. '<Player' → logprob: -18.250017166137695
    10. '(Game' → logprob: -18.250017166137695

Token 775: 'Symbol' (ID: 17416)
  Prédit: 'Symbol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Symbol' → logprob: -9.849109119386412e-06
    2. '.X' → logprob: -12.375009536743164
    3. 'Player' → logprob: -13.500009536743164
    4. '.Symbol' → logprob: -13.750009536743164
    5. '.Player' → logprob: -14.000009536743164
    6. '(Player' → logprob: -14.000009536743164
    7. 'symbol' → logprob: -15.000009536743164
    8. 'X' → logprob: -15.250009536743164
    9. '(X' → logprob: -15.375009536743164
    10. ' Symbol' → logprob: -15.625009536743164

Token 776: '.X' (ID: 8869)
  Prédit: '.X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.X' → logprob: -0.31337204575538635
    2. 'X' → logprob: -1.313372015953064
    3. '(X' → logprob: -9.688371658325195
    4. ' X' → logprob: -10.938371658325195
    5. '.Player' → logprob: -11.313371658325195
    6. 'Player' → logprob: -11.563371658325195
    7. '   ' → logprob: -13.313371658325195
    8. '	X' → logprob: -13.313371658325195
    9. '.' → logprob: -13.438371658325195
    10. '(' → logprob: -13.938371658325195

Token 777: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8272724151611328
    2. ')])' → logprob: -1.0772724151611328
    3. '),' → logprob: -1.8272724151611328
    4. '),
' → logprob: -3.452272415161133
    5. '       ' → logprob: -4.077272415161133
    6. ')
' → logprob: -5.077272415161133
    7. ')]' → logprob: -5.202272415161133
    8. '           ' → logprob: -7.577272415161133
    9. ')],' → logprob: -8.452272415161133
    10. ')])
' → logprob: -8.952272415161133

Token 778: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07954065501689911
    2. '])' → logprob: -2.579540729522705
    3. ',' → logprob: -7.704540729522705
    4. ' ])' → logprob: -9.329540252685547
    5. ',
' → logprob: -9.579540252685547
    6. '   ' → logprob: -11.079540252685547
    7. '           ' → logprob: -11.079540252685547
    8. ')' → logprob: -12.329540252685547
    9. '      ' → logprob: -13.454540252685547
    10. ']),' → logprob: -13.829540252685547

Token 779: ' ])

' (ID: 146460)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31346395611763
    2. '       ' → logprob: -1.3134639263153076
    3. '   ' → logprob: -8.938464164733887
    4. ' ])' → logprob: -10.438464164733887
    5. '])
' → logprob: -11.188464164733887
    6. ')' → logprob: -12.063464164733887
    7. ',' → logprob: -12.188464164733887
    8. '      ' → logprob: -12.313464164733887
    9. '           ' → logprob: -12.563464164733887
    10. ')])' → logprob: -12.938464164733887

Token 780: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017255999147892
    2. '
' → logprob: -4.392255783081055
    3. 'def' → logprob: -5.392255783081055
    4. ' def' → logprob: -9.392255783081055
    5. '    
' → logprob: -9.892255783081055
    6. '<|end|>' → logprob: -10.267255783081055
    7. '```' → logprob: -12.392255783081055
    8. '	def' → logprob: -12.892255783081055
    9. '

' → logprob: -13.392255783081055
    10. '        
' → logprob: -13.642255783081055

Token 781: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.061054359131958e-06
    2. ' def' → logprob: -11.750007629394531
    3. '   ' → logprob: -15.625007629394531
    4. '
' → logprob: -19.25000762939453
    5. 'de' → logprob: -19.25000762939453
    6. '	def' → logprob: -20.50000762939453
    7. '    
' → logprob: -20.62500762939453
    8. '```' → logprob: -21.50000762939453
    9. 'd' → logprob: -22.12500762939453
    10. '        
' → logprob: -23.25000762939453

Token 782: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.5759442448616028
    2. ' run' → logprob: -0.8259442448616028
    3. '_run' → logprob: -12.575943946838379
    4. 'process' → logprob: -15.075943946838379
    5. ' main' → logprob: -15.450943946838379
    6. 'main' → logprob: -15.575943946838379
    7. '	run' → logprob: -15.950943946838379
    8. '.run' → logprob: -15.950943946838379
    9. 'start' → logprob: -16.450944900512695
    10. ' process' → logprob: -16.825944900512695

Token 783: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001713590754661709
    2. '(' → logprob: -8.750171661376953
    3. '():' → logprob: -12.125171661376953
    4. 'self' → logprob: -12.375171661376953
    5. '()' → logprob: -13.500171661376953
    6. '   ' → logprob: -14.375171661376953
    7. '       ' → logprob: -14.500171661376953
    8. '(
' → logprob: -14.750171661376953
    9. ' (' → logprob: -15.125171661376953
    10. '():
' → logprob: -17.125171661376953

Token 784: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004713141825050116
    2. '):
' → logprob: -6.12971305847168
    3. ')' → logprob: -6.50471305847168
    4. 'self' → logprob: -7.00471305847168
    5. '(self' → logprob: -9.50471305847168
    6. '():' → logprob: -10.87971305847168
    7. '   ' → logprob: -12.00471305847168
    8. ',' → logprob: -12.12971305847168
    9. ' ):' → logprob: -12.37971305847168
    10. '       ' → logprob: -12.62971305847168

Token 785: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018373284488916397
    2. ':' → logprob: -4.893373489379883
    3. '():' → logprob: -4.893373489379883
    4. '(' → logprob: -6.518373489379883
    5. 'self' → logprob: -7.143373489379883
    6. '       ' → logprob: -7.393373489379883
    7. '):' → logprob: -9.518373489379883
    8. '   ' → logprob: -9.518373489379883
    9. '():
' → logprob: -9.518373489379883
    10. ':
' → logprob: -10.393373489379883

Token 786: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.048592709004879
    2. ' None' → logprob: -3.0485928058624268
    3. '   ' → logprob: -12.423592567443848
    4. ' ' → logprob: -13.923592567443848
    5. '  ' → logprob: -15.548592567443848
    6. ')' → logprob: -17.173593521118164
    7. 'none' → logprob: -17.548593521118164
    8. 'int' → logprob: -17.673593521118164
    9. '    ' → logprob: -17.923593521118164
    10. 'List' → logprob: -18.298593521118164

Token 787: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20865081250667572
    2. '       ' → logprob: -1.958650827407837
    3. ':
' → logprob: -3.083650827407837
    4. '   ' → logprob: -7.458650588989258
    5. '(self' → logprob: -7.583650588989258
    6. '():' → logprob: -8.583650588989258
    7. 'self' → logprob: -9.708650588989258
    8. '):
' → logprob: -9.958650588989258
    9. '):' → logprob: -10.208650588989258
    10. '():
' → logprob: -10.583650588989258

Token 788: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0445127372804563e-05
    2. '   ' → logprob: -12.12501049041748
    3. '```' → logprob: -13.00001049041748
    4. '	   ' → logprob: -14.37501049041748
    5. '    ' → logprob: -14.75001049041748
    6. '           ' → logprob: -15.12501049041748
    7. '	' → logprob: -15.25001049041748
    8. '      ' → logprob: -15.50001049041748
    9. ' while' → logprob: -15.62501049041748
    10. ' for' → logprob: -16.000009536743164

Token 789: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000987200066447258
    2. '       ' → logprob: -7.0009870529174805
    3. ' for' → logprob: -9.50098705291748
    4. 'boards' → logprob: -14.50098705291748
    5. 'while' → logprob: -14.75098705291748
    6. 'board' → logprob: -17.000988006591797
    7. '   ' → logprob: -17.625988006591797
    8. 'try' → logprob: -18.375988006591797
    9. '	for' → logprob: -18.500988006591797
    10. '```' → logprob: -18.625988006591797

Token 790: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.008617646060883999
    2. ' board' → logprob: -4.758617877960205
    3. '   ' → logprob: -13.133617401123047
    4. '	board' → logprob: -14.133617401123047
    5. '       ' → logprob: -15.883617401123047
    6. '_board' → logprob: -16.383617401123047
    7. '(board' → logprob: -17.008617401123047
    8. 'Board' → logprob: -17.133617401123047
    9. 'b' → logprob: -17.508617401123047
    10. ' ' → logprob: -17.508617401123047

Token 791: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018151935189962387
    2. 'in' → logprob: -4.018151760101318
    3. '	in' → logprob: -13.893152236938477
    4. ' ' → logprob: -15.143152236938477
    5. 's' → logprob: -15.518152236938477
    6. ' ' → logprob: -15.893152236938477
    7. ',' → logprob: -16.268152236938477
    8. '   ' → logprob: -16.518152236938477
    9. 'import' → logprob: -16.518152236938477
    10. '_in' → logprob: -16.518152236938477

Token 792: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47410649061203003
    2. 'self' → logprob: -0.97410649061203
    3. '       ' → logprob: -10.474106788635254
    4. '           ' → logprob: -14.849106788635254
    5. '(self' → logprob: -14.974106788635254
    6. '	self' → logprob: -14.974106788635254
    7. '   ' → logprob: -16.224105834960938
    8. ' ' → logprob: -17.599105834960938
    9. '               ' → logprob: -17.599105834960938
    10. 'Self' → logprob: -17.599105834960938

Token 793: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0013646431034430861
    2. '_loader' → logprob: -6.626364707946777
    3. '   ' → logprob: -11.501364707946777
    4. '       ' → logprob: -11.501364707946777
    5. '.' → logprob: -12.751364707946777
    6. '_loaded' → logprob: -13.126364707946777
    7. '_t' → logprob: -13.251364707946777
    8. '_generator' → logprob: -13.751364707946777
    9. ' _' → logprob: -13.876364707946777
    10. ' .' → logprob: -14.001364707946777

Token 794: 'board' (ID: 3935)
  Prédit: 'board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -3.666993507067673e-05
    2. '_board' → logprob: -10.375036239624023
    3. '.board' → logprob: -12.250036239624023
    4. ' board' → logprob: -15.625036239624023
    5. '	board' → logprob: -15.625036239624023
    6. '._' → logprob: -16.625036239624023
    7. 'boards' → logprob: -16.875036239624023
    8. '
' → logprob: -17.125036239624023
    9. '(board' → logprob: -17.625036239624023
    10. '_e' → logprob: -17.625036239624023

Token 795: '_loader' (ID: 47286)
  Prédit: '_loader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_loader' → logprob: -2.2200749754119897e-06
    2. 's' → logprob: -14.000001907348633
    3. 'loader' → logprob: -14.875001907348633
    4. '       ' → logprob: -15.125001907348633
    5. 'oader' → logprob: -15.375001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '_loaded' → logprob: -16.625001907348633
    8. '._' → logprob: -16.625001907348633
    9. 'Loader' → logprob: -17.000001907348633
    10. '.loader' → logprob: -17.375001907348633

Token 796: '.load' (ID: 9383)
  Prédit: '.load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.load' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.250001907348633
    3. 'load' → logprob: -14.875001907348633
    4. ' .' → logprob: -15.750001907348633
    5. '.run' → logprob: -19.000001907348633
    6. ' load' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.250001907348633
    8. '	load' → logprob: -19.375001907348633
    9. '._' → logprob: -20.000001907348633
    10. '.loads' → logprob: -20.375001907348633

Token 797: '_bo' (ID: 104368)
  Prédit: '_bo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bo' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. '_board' → logprob: -19.125
    4. '_BO' → logprob: -19.5
    5. 'boards' → logprob: -21.75
    6. '(_' → logprob: -23.875
    7. 's' → logprob: -23.875
    8. '.bo' → logprob: -24.0
    9. '```' → logprob: -24.25
    10. '\' → logprob: -24.375

Token 798: 'ards' (ID: 3098)
  Prédit: 'ards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ards' → logprob: -5.037835580878891e-05
    2. 'o' → logprob: -11.25005054473877
    3. 'ords' → logprob: -11.62505054473877
    4. '_' → logprob: -11.62505054473877
    5. 'boards' → logprob: -11.62505054473877
    6. 'ads' → logprob: -12.75005054473877
    7. 'ard' → logprob: -12.75005054473877
    8. '_bo' → logprob: -13.12505054473877
    9. 'a' → logprob: -13.62505054473877
    10. 'oard' → logprob: -14.50005054473877

Token 799: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.003049127757549286
    2. ':' → logprob: -6.003048896789551
    3. '():
' → logprob: -7.503048896789551
    4. '()' → logprob: -11.50304889678955
    5. ' ():' → logprob: -11.50304889678955
    6. '):' → logprob: -14.00304889678955
    7. '():
' → logprob: -14.62804889678955
    8. ':
' → logprob: -15.37804889678955
    9. ' :' → logprob: -15.62804889678955
    10. '       ' → logprob: -17.378049850463867

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02156243845820427
    2. 'result' → logprob: -3.896562337875366
    3. ' result' → logprob: -6.896562576293945
    4. '```' → logprob: -12.771562576293945
    5. '            
' → logprob: -13.396562576293945
    6. '_result' → logprob: -13.771562576293945
    7. 'results' → logprob: -13.896562576293945
    8. ',result' → logprob: -14.521562576293945
    9. ':' → logprob: -15.396562576293945
    10. ' results' → logprob: -15.521562576293945

Token 801: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0004353181866463274
    2. ' result' → logprob: -7.7504353523254395
    3. '               ' → logprob: -12.750434875488281
    4. '           ' → logprob: -13.250434875488281
    5. 'print' → logprob: -17.12543487548828
    6. '_result' → logprob: -18.37543487548828
    7. '	result' → logprob: -19.25043487548828
    8. '.result' → logprob: -20.00043487548828
    9. 'Result' → logprob: -20.37543487548828
    10. 'results' → logprob: -20.37543487548828

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ':' → logprob: -17.02975082397461
    4. '   ' → logprob: -18.27975082397461
    5. ' ' → logprob: -18.77975082397461
    6. '    ' → logprob: -18.90475082397461
    7. '           ' → logprob: -19.15475082397461
    8. '=self' → logprob: -19.15475082397461
    9. '=result' → logprob: -19.15475082397461
    10. ' =
' → logprob: -19.27975082397461

Token 803: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858839511871338
    2. ' self' → logprob: -3.048588275909424
    3. '           ' → logprob: -13.923588752746582
    4. '(self' → logprob: -16.548587799072266
    5. '	self' → logprob: -17.923587799072266
    6. '               ' → logprob: -18.298587799072266
    7. '=self' → logprob: -18.923587799072266
    8. '[self' → logprob: -20.548587799072266
    9. '`' → logprob: -21.673587799072266
    10. 'Self' → logprob: -21.798587799072266

Token 804: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.420598219847307e-05
    2. '.evaluate' → logprob: -10.2500638961792
    3. '_e' → logprob: -10.6250638961792
    4. 'evaluate' → logprob: -13.8750638961792
    5. '.' → logprob: -14.1250638961792
    6. '   ' → logprob: -14.5000638961792
    7. '
' → logprob: -14.8750638961792
    8. 'self' → logprob: -15.0000638961792
    9. 'valuate' → logprob: -15.1250638961792
    10. '       ' → logprob: -15.7500638961792

Token 805: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.5716304410016164e-05
    2. '_e' → logprob: -10.375035285949707
    3. 'valuator' → logprob: -12.875035285949707
    4. 'evalu' → logprob: -14.000035285949707
    5. ' evaluator' → logprob: -14.375035285949707
    6. 'evaluate' → logprob: -15.625035285949707
    7. 'eval' → logprob: -16.000036239624023
    8. 'Evaluator' → logprob: -16.250036239624023
    9. 'evaluation' → logprob: -16.625036239624023
    10. '   ' → logprob: -17.625036239624023

Token 806: 'valuator' (ID: 144940)
  Prédit: 'valuator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valuator' → logprob: -0.7345241904258728
    2. 'valuate' → logprob: -1.2345242500305176
    3. 'alu' → logprob: -1.4845242500305176
    4. 'val' → logprob: -6.234524250030518
    5. 'lator' → logprob: -8.10952377319336
    6. 'lu' → logprob: -8.60952377319336
    7. 'al' → logprob: -8.98452377319336
    8. 'v' → logprob: -9.85952377319336
    9. 'valuer' → logprob: -10.98452377319336
    10. 'value' → logprob: -10.98452377319336

Token 807: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -4.246537173457909e-06
    2. '.' → logprob: -12.500003814697266
    3. 'evaluate' → logprob: -15.000003814697266
    4. ' .' → logprob: -15.375003814697266
    5. '.e' → logprob: -18.000003814697266
    6. '.eval' → logprob: -19.125003814697266
    7. '   ' → logprob: -20.125003814697266
    8. '.execute' → logprob: -20.375003814697266
    9. '.run' → logprob: -20.375003814697266
    10. '.validate' → logprob: -22.000003814697266

Token 808: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.0
    3. 'board' → logprob: -17.5
    4. '(Board' → logprob: -18.125
    5. '(
' → logprob: -19.375
    6. ' (' → logprob: -20.25
    7. '	board' → logprob: -20.75
    8. ' board' → logprob: -20.875
    9. '(b' → logprob: -21.375
    10. '(block' → logprob: -21.625

Token 809: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014478212222456932
    2. '(board' → logprob: -4.3894782066345215
    3. ')
' → logprob: -6.8894782066345215
    4. '(result' → logprob: -7.0144782066345215
    5. '           ' → logprob: -11.01447868347168
    6. 'result' → logprob: -11.26447868347168
    7. ' )' → logprob: -11.76447868347168
    8. ').' → logprob: -13.63947868347168
    9. '),' → logprob: -13.63947868347168
    10. ',' → logprob: -13.88947868347168

Token 810: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011760591296479106
    2. 'print' → logprob: -6.751175880432129
    3. ' print' → logprob: -12.251175880432129
    4. '
' → logprob: -14.876175880432129
    5. '		' → logprob: -15.126175880432129
    6. '            
' → logprob: -15.251175880432129
    7. '```' → logprob: -15.501175880432129
    8. '	       ' → logprob: -18.126176834106445
    9. '.print' → logprob: -18.376176834106445
    10. '          ' → logprob: -18.501176834106445

Token 811: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.0802738870552275e-05
    2. ' print' → logprob: -11.75001049041748
    3. '           ' → logprob: -12.75001049041748
    4. '	print' → logprob: -20.500011444091797
    5. '```' → logprob: -21.625011444091797
    6. '
' → logprob: -22.375011444091797
    7. '               ' → logprob: -22.500011444091797
    8. '.print' → logprob: -23.250011444091797
    9. '#print' → logprob: -23.750011444091797
    10. 'println' → logprob: -23.750011444091797

Token 812: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.339278580620885e-06
    2. 'result' → logprob: -13.625001907348633
    3. '(' → logprob: -13.875001907348633
    4. '(f' → logprob: -16.000001907348633
    5. '(str' → logprob: -17.125001907348633
    6. '(
' → logprob: -18.000001907348633
    7. '((' → logprob: -19.250001907348633
    8. '=result' → logprob: -19.750001907348633
    9. ' result' → logprob: -20.625001907348633
    10. '(res' → logprob: -20.875001907348633

Token 813: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.872261317563243e-05
    2. '())' → logprob: -10.250059127807617
    3. '()' → logprob: -10.750059127807617
    4. ')
' → logprob: -13.875059127807617
    5. ' )' → logprob: -14.500059127807617
    6. '")' → logprob: -16.000059127807617
    7. '')' → logprob: -16.125059127807617
    8. ')`' → logprob: -16.625059127807617
    9. '`)' → logprob: -16.625059127807617
    10. '))' → logprob: -17.875059127807617

Token 814: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.546478935983032e-05
    2. ' if' → logprob: -10.875025749206543
    3. '```' → logprob: -12.250025749206543
    4. '#' → logprob: -13.750025749206543
    5. '
' → logprob: -14.875025749206543
    6. 'app' → logprob: -16.125024795532227
    7. '<|end|>' → logprob: -16.125024795532227
    8. 'If' → logprob: -16.625024795532227
    9. 'def' → logprob: -18.000024795532227
    10. '@if' → logprob: -18.000024795532227

Token 815: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048625290393829346
    2. '__' → logprob: -3.0486252307891846
    3. '_' → logprob: -10.798624992370605
    4. '_name' → logprob: -11.548624992370605
    5. '___' → logprob: -12.423624992370605
    6. 'name' → logprob: -13.173624992370605
    7. ' ' → logprob: -14.048624992370605
    8. ' ' → logprob: -15.048624992370605
    9. ' ___' → logprob: -15.923624992370605
    10. '/__' → logprob: -16.173625946044922

Token 816: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1436520218849182
    2. ' __' → logprob: -2.6436519622802734
    3. '.__' → logprob: -2.8936519622802734
    4. ' ==' → logprob: -6.268651962280273
    5. '.py' → logprob: -6.393651962280273
    6. '__.' → logprob: -6.518651962280273
    7. '__.__' → logprob: -6.518651962280273
    8. '.' → logprob: -8.518651962280273
    9. '==' → logprob: -8.643651962280273
    10. 'name' → logprob: -9.643651962280273

Token 817: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.896309739408025e-07
    2. '__.__' → logprob: -15.000000953674316
    3. '==' → logprob: -15.250000953674316
    4. 'name' → logprob: -17.125
    5. '____' → logprob: -17.75
    6. '__
' → logprob: -17.875
    7. '___' → logprob: -18.5
    8. '__.' → logprob: -18.5
    9. ' ==' → logprob: -18.75
    10. '__('' → logprob: -18.875

Token 818: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.055439580231904984
    2. '==' → logprob: -3.0554394721984863
    3. ' ==' → logprob: -5.180439472198486
    4. '=="' → logprob: -6.930439472198486
    5. '=='' → logprob: -8.555439949035645
    6. '=' → logprob: -11.430439949035645
    7. '_' → logprob: -11.680439949035645
    8. '___' → logprob: -12.430439949035645
    9. '__.__' → logprob: -13.055439949035645
    10. '"' → logprob: -13.180439949035645

Token 819: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38693517446517944
    2. ''' → logprob: -1.1369352340698242
    3. ' "__' → logprob: -10.386935234069824
    4. '__' → logprob: -10.636935234069824
    5. ' '__' → logprob: -11.636935234069824
    6. '('__' → logprob: -16.261934280395508
    7. ''"' → logprob: -16.636934280395508
    8. '("__' → logprob: -16.886934280395508
    9. ''name' → logprob: -17.511934280395508
    10. '"name' → logprob: -17.511934280395508

Token 820: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004347159992903471
    2. 'name' → logprob: -5.754347324371338
    3. '__' → logprob: -6.754347324371338
    4. 'm' → logprob: -13.00434684753418
    5. '_main' → logprob: -15.37934684753418
    6. 'ma' → logprob: -15.62934684753418
    7. 'if' → logprob: -16.37934684753418
    8. 'maine' → logprob: -17.12934684753418
    9. '```' → logprob: -17.62934684753418
    10. 'python' → logprob: -17.62934684753418

Token 821: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0143885537981987
    2. '__' → logprob: -4.264388561248779
    3. '__":
' → logprob: -8.764388084411621
    4. '__:' → logprob: -9.764388084411621
    5. '':' → logprob: -12.014388084411621
    6. ':' → logprob: -13.139388084411621
    7. '__.' → logprob: -13.889388084411621
    8. '':
' → logprob: -13.889388084411621
    9. '_' → logprob: -14.639388084411621
    10. '__.__' → logprob: -15.764388084411621

Token 822: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29858535528182983
    2. 'app' → logprob: -1.7985854148864746
    3. ' app' → logprob: -2.9235854148864746
    4. 'T' → logprob: -3.2985854148864746
    5. ' Tic' → logprob: -6.798585414886475
    6. 'App' → logprob: -8.423584938049316
    7. '	app' → logprob: -9.048584938049316
    8. 'application' → logprob: -9.423584938049316
    9. 't' → logprob: -9.548584938049316
    10. ' application' → logprob: -9.548584938049316

Token 823: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.10118602961301804
    2. 'T' → logprob: -2.3511860370635986
    3. 'import' → logprob: -7.6011857986450195
    4. ' app' → logprob: -7.8511857986450195
    5. '   ' → logprob: -9.85118579864502
    6. ' Tic' → logprob: -10.72618579864502
    7. 'game' → logprob: -11.85118579864502
    8. 'application' → logprob: -12.35118579864502
    9. 'App' → logprob: -14.22618579864502
    10. '  ' → logprob: -14.35118579864502

Token 824: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3501416742801666
    2. ' =' → logprob: -1.3501416444778442
    3. '.run' → logprob: -3.975141763687134
    4. '=' → logprob: -4.350141525268555
    5. '_' → logprob: -5.975141525268555
    6. '.app' → logprob: -6.850141525268555
    7. ' .' → logprob: -8.600141525268555
    8. '   ' → logprob: -8.975141525268555
    9. '._' → logprob: -9.100141525268555
    10. ' ' → logprob: -9.100141525268555

Token 825: ' Tic' (ID: 111968)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.029753033071756363
    2. ' Tic' → logprob: -3.5297529697418213
    3. ' T' → logprob: -13.404752731323242
    4. '	T' → logprob: -14.154752731323242
    5. '_T' → logprob: -16.279752731323242
    6. ' ' → logprob: -16.404752731323242
    7. ' ' → logprob: -17.529752731323242
    8. 'Tik' → logprob: -17.529752731323242
    9. 'Tick' → logprob: -17.904752731323242
    10. 'tic' → logprob: -18.904752731323242

Token 826: 'Tac' (ID: 112548)
  Prédit: 'Tac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tac' → logprob: -3.166338137816638e-05
    2. 'T' → logprob: -10.375031471252441
    3. 'ac' → logprob: -15.500031471252441
    4. ' Tac' → logprob: -16.250032424926758
    5. 'Tak' → logprob: -16.625032424926758
    6. 'Tat' → logprob: -17.750032424926758
    7. 'Ta' → logprob: -18.000032424926758
    8. 't' → logprob: -18.250032424926758
    9. 'a' → logprob: -20.000032424926758
    10. '
' → logprob: -20.000032424926758

Token 827: 'Toe' (ID: 121312)
  Prédit: 'Toe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Toe' → logprob: -0.00024048985505942255
    2. 'Tac' → logprob: -8.500240325927734
    3. 'To' → logprob: -10.875240325927734
    4. 'T' → logprob: -11.000240325927734
    5. 'toe' → logprob: -14.000240325927734
    6. 'e' → logprob: -16.375240325927734
    7. 'Tou' → logprob: -17.000240325927734
    8. 'Tom' → logprob: -17.125240325927734
    9. ' Toe' → logprob: -17.250240325927734
    10. 'Tok' → logprob: -17.375240325927734

Token 828: 'Application' (ID: 6817)
  Prédit: 'Application'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Application' → logprob: -4.961759259458631e-06
    2. 'application' → logprob: -12.250004768371582
    3. 'App' → logprob: -16.3750057220459
    4. '	Application' → logprob: -17.0000057220459
    5. '<Application' → logprob: -18.6250057220459
    6. 'Ap' → logprob: -18.6250057220459
    7. '_application' → logprob: -18.8750057220459
    8. 'APPLICATION' → logprob: -19.0000057220459
    9. 'Applic' → logprob: -19.1250057220459
    10. ' application' → logprob: -19.3750057220459

Token 829: '()
' (ID: 1234)
  Prédit: '.run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.04940668120980263
    2. '   ' → logprob: -3.4244067668914795
    3. '.' → logprob: -4.4244065284729
    4. '
' → logprob: -6.2994065284729
    5. '.app' → logprob: -7.0494065284729
    6. 'app' → logprob: -7.5494065284729
    7. '.
' → logprob: -7.9244065284729
    8. '```' → logprob: -11.799407005310059
    9. 'run' → logprob: -12.049407005310059
    10. '    
' → logprob: -12.174407005310059

Token 830: '   ' (ID: 271)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.32392441527918e-05
    2. ' app' → logprob: -10.500053405761719
    3. '   ' → logprob: -10.750053405761719
    4. '	app' → logprob: -12.500053405761719
    5. '
' → logprob: -14.875053405761719
    6. '(app' → logprob: -17.00005340576172
    7. '.app' → logprob: -17.00005340576172
    8. '_app' → logprob: -17.75005340576172
    9. '    
' → logprob: -18.12505340576172
    10. 'ap' → logprob: -19.62505340576172

Token 831: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: 0.0
    2. ' app' → logprob: -19.75
    3. '	app' → logprob: -26.0
    4. '.app' → logprob: -26.75
    5. '(app' → logprob: -27.125
    6. 'ap' → logprob: -27.5
    7. '   ' → logprob: -27.625
    8. '_app' → logprob: -27.75
    9. ''app' → logprob: -28.75
    10. 'a' → logprob: -29.125

Token 832: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.38687822222709656
    2. '.' → logprob: -1.136878252029419
    3. ' .' → logprob: -12.38687801361084
    4. '.
' → logprob: -13.26187801361084
    5. '.Run' → logprob: -15.51187801361084
    6. 'run' → logprob: -15.76187801361084
    7. '.mainloop' → logprob: -15.76187801361084
    8. '.<' → logprob: -15.88687801361084
    9. '.

' → logprob: -16.136878967285156
    10. '.​' → logprob: -16.261878967285156

Token 833: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 831
Tokens correctement prédits (1ère position, stricte): 444
Tokens correctement prédits (1ère position, avec adaptation): 491
Tokens correctement prédits (top 10): 764
Précision stricte (1ère position): 53.43%
Précision adaptée (1ère position): 59.09%
Précision (top 10): 91.94%
================================================================================
