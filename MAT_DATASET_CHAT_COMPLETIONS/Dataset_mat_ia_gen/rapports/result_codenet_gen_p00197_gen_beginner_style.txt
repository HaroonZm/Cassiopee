================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    a, b = map(int, line.split())
    if a == 0 and b == 0:
        break
    x = a
    y = b
    steps = 0
    while y != 0:
        r = x % y
        x = y
        y = r
        steps += 1
    print(x, steps)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26708751916885376
    2. ' ' → logprob: -2.392087459564209
    3. '    ' → logprob: -3.392087459564209
    4. '```' → logprob: -3.517087459564209
    5. '\' → logprob: -3.767087459564209
    6. '    
' → logprob: -4.517087459564209
    7. '\n' → logprob: -4.642087459564209
    8. '<|end|>' → logprob: -5.142087459564209
    9. '`' → logprob: -5.767087459564209
    10. ''' → logprob: -5.767087459564209

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19949382543563843
    2. '=' → logprob: -1.8244938850402832
    3. 's' → logprob: -4.699493885040283
    4. '.' → logprob: -5.824493885040283
    5. '.startswith' → logprob: -6.324493885040283
    6. '_' → logprob: -6.699493885040283
    7. '[' → logprob: -7.449493885040283
    8. '.readline' → logprob: -7.449493885040283
    9. '[:]' → logprob: -7.449493885040283
    10. '   ' → logprob: -7.574493885040283

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08899911493062973
    2. 'input' → logprob: -2.463999032974243
    3. ' ' → logprob: -10.963998794555664
    4. ' f' → logprob: -10.963998794555664
    5. ' file' → logprob: -11.588998794555664
    6. ' readline' → logprob: -12.213998794555664
    7. '=input' → logprob: -12.963998794555664
    8. 'file' → logprob: -12.963998794555664
    9. '(input' → logprob: -14.088998794555664
    10. 'f' → logprob: -14.338998794555664

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003016214817762375
    2. '('' → logprob: -6.378015995025635
    3. '()' → logprob: -7.003015995025635
    4. '("("' → logprob: -8.378016471862793
    5. ''' → logprob: -9.753016471862793
    6. '```' → logprob: -10.128016471862793
    7. ')' → logprob: -11.003016471862793
    8. '("")' → logprob: -11.628016471862793
    9. ''s' → logprob: -11.753016471862793
    10. '(
' → logprob: -12.253016471862793

Token 8: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8667309284210205
    2. ' if' → logprob: -1.4917309284210205
    3. '<|end|>' → logprob: -2.2417309284210205
    4. '.' → logprob: -2.3667309284210205
    5. '   ' → logprob: -3.1167309284210205
    6. '    ' → logprob: -3.2417309284210205
    7. ':' → logprob: -4.366730690002441
    8. 'if' → logprob: -4.741730690002441
    9. '\n' → logprob: -5.116730690002441
    10. '  
' → logprob: -5.116730690002441

Token 9: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2029114067554474
    2. '   ' → logprob: -2.577911376953125
    3. ' ' → logprob: -2.952911376953125
    4. '<|end|>' → logprob: -3.952911376953125
    5. '    ' → logprob: -4.077911376953125
    6. 'if' → logprob: -4.452911376953125
    7. '\n' → logprob: -5.827911376953125
    8. '  ' → logprob: -7.202911376953125
    9. '\r' → logprob: -7.452911376953125
    10. '    
' → logprob: -7.577911376953125

Token 10: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1840859651565552
    2. '=' → logprob: -1.5590859651565552
    3. '.' → logprob: -2.0590858459472656
    4. ' ' → logprob: -2.3090858459472656
    5. '[' → logprob: -2.9340858459472656
    6. '+' → logprob: -3.1840858459472656
    7. 'd' → logprob: -3.1840858459472656
    8. 'p' → logprob: -3.5590858459472656
    9. 'dd' → logprob: -4.184085845947266
    10. 'r' → logprob: -4.309085845947266

Token 11: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3462770879268646
    2. ' ' → logprob: -1.471277117729187
    3. 'b' → logprob: -2.9712769985198975
    4. ' line' → logprob: -4.596277236938477
    5. '=' → logprob: -7.471277236938477
    6. 'line' → logprob: -7.596277236938477
    7. ' =' → logprob: -8.596277236938477
    8. '=line' → logprob: -8.721277236938477
    9. 'space' → logprob: -10.096277236938477
    10. '<|end|>' → logprob: -10.096277236938477

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2600172162055969
    2. '=' → logprob: -1.7600171566009521
    3. ',' → logprob: -2.885017156600952
    4. ' ,' → logprob: -7.010017395019531
    5. ' ' → logprob: -9.885017395019531
    6. ')' → logprob: -10.010017395019531
    7. '[' → logprob: -10.510017395019531
    8. '   ' → logprob: -11.510017395019531
    9. '  ' → logprob: -12.135017395019531
    10. ' =
' → logprob: -12.260017395019531

Token 13: ' map' (ID: 4014)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20886871218681335
    2. 'line' → logprob: -2.3338687419891357
    3. ' map' → logprob: -2.4588687419891357
    4. 'map' → logprob: -5.208868503570557
    5. ' ' → logprob: -7.958868503570557
    6. ' input' → logprob: -9.833868980407715
    7. ' [' → logprob: -9.958868980407715
    8. '[line' → logprob: -10.458868980407715
    9. 'input' → logprob: -11.208868980407715
    10. '[' → logprob: -11.208868980407715

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3796592652797699
    2. '(' → logprob: -1.6296592950820923
    3. '(str' → logprob: -2.1296591758728027
    4. '(lambda' → logprob: -7.629659175872803
    5. 'str' → logprob: -8.754659652709961
    6. '(input' → logprob: -8.879659652709961
    7. '(eval' → logprob: -9.629659652709961
    8. 'int' → logprob: -9.754659652709961
    9. '(list' → logprob: -9.879659652709961
    10. '()' → logprob: -10.754659652709961

Token 15: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.29003918170928955
    2. '(input' → logprob: -1.4150391817092896
    3. '(' → logprob: -5.1650390625
    4. ')' → logprob: -5.9150390625
    5. 'input' → logprob: -8.4150390625
    6. ' line' → logprob: -9.4150390625
    7. 'line' → logprob: -10.1650390625
    8. ' (' → logprob: -10.5400390625
    9. ',input' → logprob: -11.6650390625
    10. '(
' → logprob: -11.7900390625

Token 16: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.38774409890174866
    2. 'line' → logprob: -1.1377440690994263
    3. ' input' → logprob: -7.637743949890137
    4. 'input' → logprob: -8.137743949890137
    5. '(line' → logprob: -10.137743949890137
    6. ')' → logprob: -10.262743949890137
    7. '   ' → logprob: -11.762743949890137
    8. ' ' → logprob: -12.137743949890137
    9. ' )' → logprob: -13.012743949890137
    10. '	line' → logprob: -13.012743949890137

Token 17: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.027177520096302032
    2. '.strip' → logprob: -4.027177333831787
    3. '.' → logprob: -4.902177333831787
    4. '.readline' → logprob: -7.277177333831787
    5. ')' → logprob: -7.777177333831787
    6. '   ' → logprob: -8.902177810668945
    7. ' .' → logprob: -9.277177810668945
    8. '().' → logprob: -9.277177810668945
    9. '.rstrip' → logprob: -9.652177810668945
    10. 'split' → logprob: -10.777177810668945

Token 18: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.24315007030963898
    2. '())' → logprob: -1.6181501150131226
    3. '(' → logprob: -4.493150234222412
    4. '()' → logprob: -5.618150234222412
    5. '()))' → logprob: -6.868150234222412
    6. ')' → logprob: -7.118150234222412
    7. '(','' → logprob: -7.868150234222412
    8. '("' → logprob: -8.618149757385254
    9. '(()' → logprob: -9.618149757385254
    10. '("("' → logprob: -9.743149757385254

Token 19: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.085205316543579
    2. ' if' → logprob: -1.085205316543579
    3. '<|end|>' → logprob: -1.835205316543579
    4. '   ' → logprob: -2.585205316543579
    5. '\n' → logprob: -3.210205316543579
    6. 'if' (adapté à ' if') → logprob: -4.710205078125
    7. '    ' → logprob: -5.085205078125
    8. ' 
' → logprob: -5.460205078125
    9. ')' → logprob: -5.585205078125
    10. '\r' → logprob: -5.710205078125

Token 21: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.01165529154241085
    2. 'a' → logprob: -4.761655330657959
    3. ' not' → logprob: -6.511655330657959
    4. ' b' → logprob: -6.761655330657959
    5. ' ' → logprob: -8.0116548538208
    6. 'b' → logprob: -10.3866548538208
    7. 'not' → logprob: -11.5116548538208
    8. '(a' → logprob: -11.6366548538208
    9. ' ' → logprob: -12.5116548538208
    10. ' (' → logprob: -12.5116548538208

Token 22: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12324012070894241
    2. '==' → logprob: -2.2482402324676514
    3. ' <' → logprob: -5.873239994049072
    4. ' >=' → logprob: -5.998239994049072
    5. ' <=' → logprob: -6.373239994049072
    6. ' ' → logprob: -6.623239994049072
    7. ' >' → logprob: -6.998239994049072
    8. '>' → logprob: -7.998239994049072
    9. '<' → logprob: -8.37324047088623
    10. '>=' → logprob: -8.74824047088623

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1610870063304901
    2. '0' → logprob: -1.9110870361328125
    3. ' b' → logprob: -7.4110870361328125
    4. 'b' → logprob: -8.286087036132812
    5. '-' → logprob: -13.536087036132812
    6. '  ' → logprob: -13.786087036132812
    7. ' -' → logprob: -14.036087036132812
    8. '1' → logprob: -14.536087036132812
    9. '   ' → logprob: -14.723587036132812
    10. '_' → logprob: -15.536087036132812

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013140816241502762
    2. ' ' → logprob: -4.638140678405762
    3. 'b' → logprob: -5.763140678405762
    4. '-' → logprob: -9.138140678405762
    5. ' b' → logprob: -9.138140678405762
    6. ' -' → logprob: -11.388140678405762
    7. '1' → logprob: -12.013140678405762
    8. '  ' → logprob: -13.950640678405762
    9. '   ' → logprob: -14.138140678405762
    10. '```' → logprob: -14.825640678405762

Token 25: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019492128863930702
    2. 'and' → logprob: -4.019492149353027
    3. ' ' → logprob: -7.144492149353027
    4. ' or' → logprob: -7.894492149353027
    5. ':' → logprob: -9.144492149353027
    6. '   ' → logprob: -10.019492149353027
    7. ' a' → logprob: -11.519492149353027
    8. '    ' → logprob: -11.894492149353027
    9. '  ' → logprob: -12.019492149353027
    10. '	and' → logprob: -13.644492149353027

Token 26: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.07889088988304138
    2. 'b' → logprob: -2.578890800476074
    3. ' ' → logprob: -14.453890800476074
    4. '   ' → logprob: -15.203890800476074
    5. '	b' → logprob: -15.328890800476074
    6. '    ' → logprob: -16.07889175415039
    7. ' ' → logprob: -16.45389175415039
    8. '  ' → logprob: -17.07889175415039
    9. ' б' → logprob: -18.82889175415039
    10. '```' → logprob: -19.07889175415039

Token 27: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03843354806303978
    2. '==' → logprob: -3.28843355178833
    3. '<|end|>' → logprob: -8.288433074951172
    4. ' ' → logprob: -9.538433074951172
    5. '<|end|>' → logprob: -10.663433074951172
    6. '=' → logprob: -10.663433074951172
    7. ' ' → logprob: -11.788433074951172
    8. ' =' → logprob: -12.538433074951172
    9. '  ' → logprob: -12.913433074951172
    10. ')' → logprob: -12.913433074951172

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05488397553563118
    2. ' ' → logprob: -2.9298839569091797
    3. '  ' → logprob: -14.30488395690918
    4. ' ' → logprob: -14.61738395690918
    5. '   ' → logprob: -15.49238395690918
    6. '1' → logprob: -16.61738395690918
    7. '<|end|>' → logprob: -16.61738395690918
    8. '۰' → logprob: -16.80488395690918
    9. '```' → logprob: -16.92988395690918
    10. 's' → logprob: -17.24238395690918

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '  ' → logprob: -16.250381469726562
    4. '1' → logprob: -16.687881469726562
    5. '   ' → logprob: -16.812881469726562
    6. '```' → logprob: -17.000381469726562
    7. ' ' → logprob: -17.062881469726562
    8. '۰' → logprob: -17.250381469726562
    9. 'o' → logprob: -18.437881469726562
    10. '    ' → logprob: -18.812881469726562

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025084958178922534
    2. ':
' → logprob: -8.875250816345215
    3. '       ' → logprob: -9.500250816345215
    4. '   ' → logprob: -10.375250816345215
    5. ' :' → logprob: -12.875250816345215
    6. ':return' → logprob: -14.250250816345215
    7. ' break' → logprob: -14.625250816345215
    8. '    ' → logprob: -15.125250816345215
    9. '):' → logprob: -15.500250816345215
    10. '	break' → logprob: -15.500250816345215

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035608073812909424
    2. ' break' → logprob: -8.62535572052002
    3. '   ' → logprob: -8.87535572052002
    4. '\n' → logprob: -11.12535572052002
    5. '```' → logprob: -12.50035572052002
    6. '    ' → logprob: -12.62535572052002
    7. '     ' → logprob: -12.87535572052002
    8. '
' → logprob: -13.25035572052002
    9. ':' → logprob: -13.37535572052002
    10. ' ' → logprob: -13.50035572052002

Token 32: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5982141494750977
    2. ' break' → logprob: -0.8482141494750977
    3. 'break' (adapté à ' break') → logprob: -3.8482141494750977
    4. '   ' → logprob: -7.598214149475098
    5. '	break' → logprob: -8.598214149475098
    6. '           ' → logprob: -11.223214149475098
    7. '_break' → logprob: -13.348214149475098
    8. '```' → logprob: -13.348214149475098
    9. '\n' → logprob: -13.473214149475098
    10. 'Break' → logprob: -13.973214149475098

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029878688976168633
    2. '    
' → logprob: -4.029878616333008
    3. '\n' → logprob: -5.779878616333008
    4. '<|end|>' → logprob: -6.404878616333008
    5. ' ' → logprob: -6.529878616333008
    6. 'print' → logprob: -6.654878616333008
    7. '
' → logprob: -6.779878616333008
    8. ')' → logprob: -7.404878616333008
    9. '#' → logprob: -7.529878616333008
    10. '    ' → logprob: -8.279878616333008

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05834730342030525
    2. '    
' → logprob: -3.308347225189209
    3. '
' → logprob: -4.183347225189209
    4. '\n' → logprob: -6.433347225189209
    5. '<|end|>' → logprob: -6.558347225189209
    6. 'print' → logprob: -7.183347225189209
    7. '  
' → logprob: -8.183347702026367
    8. ')' → logprob: -8.808347702026367
    9. '#' → logprob: -9.058347702026367
    10. '```' → logprob: -9.183347702026367

Token 35: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03422853350639343
    2. 'print' → logprob: -4.159228324890137
    3. ' ' → logprob: -5.284228324890137
    4. ' if' → logprob: -5.909228324890137
    5. '    
' → logprob: -6.034228324890137
    6. 'if' → logprob: -6.409228324890137
    7. '    ' → logprob: -6.659228324890137
    8. 'c' → logprob: -7.284228324890137
    9. ' print' → logprob: -7.409228324890137
    10. '\n' → logprob: -7.534228324890137

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35952338576316833
    2. ',' → logprob: -1.6095234155654907
    3. '=' → logprob: -2.609523296356201
    4. '_' → logprob: -5.484523296356201
    5. ' ,' → logprob: -5.734523296356201
    6. '**' → logprob: -5.859523296356201
    7. ' +=' → logprob: -5.859523296356201
    8. '1' → logprob: -5.984523296356201
    9. ')' → logprob: -6.109523296356201
    10. ' ' → logprob: -6.609523296356201

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03969772532582283
    2. ' a' → logprob: -3.6646976470947266
    3. '(a' → logprob: -5.164697647094727
    4. 'max' → logprob: -6.414697647094727
    5. 'abs' → logprob: -6.914697647094727
    6. 'b' → logprob: -7.289697647094727
    7. 'pow' → logprob: -7.289697647094727
    8. ' (' → logprob: -7.414697647094727
    9. 'min' → logprob: -7.664697647094727
    10. ' abs' → logprob: -7.789697647094727

Token 38: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9878081679344177
    2. '*' → logprob: -1.7378082275390625
    3. ' +' → logprob: -1.7378082275390625
    4. '**' → logprob: -1.9878082275390625
    5. ' %' → logprob: -2.9878082275390625
    6. ' *' → logprob: -3.2378082275390625
    7. '%' → logprob: -3.6128082275390625
    8. ' **' → logprob: -4.9878082275390625
    9. '+b' → logprob: -5.3628082275390625
    10. '-' → logprob: -6.3628082275390625

Token 39: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.462762713432312
    2. ' +' → logprob: -1.712762713432312
    3. '*' → logprob: -2.5877628326416016
    4. ' *' → logprob: -2.9627628326416016
    5. '**' → logprob: -3.2127628326416016
    6. ' **' → logprob: -5.087762832641602
    7. '-' → logprob: -5.212762832641602
    8. ' %' → logprob: -5.837762832641602
    9. '%' → logprob: -6.212762832641602
    10. '<|end|>' → logprob: -6.587762832641602

Token 40: ' y' (ID: 342)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8488178253173828
    2. '**' → logprob: -1.3488178253173828
    3. '*' → logprob: -2.223817825317383
    4. '%' → logprob: -2.848817825317383
    5. ' +' → logprob: -3.723817825317383
    6. '-' → logprob: -3.973817825317383
    7. 'y' (adapté à ' y') → logprob: -4.098817825317383
    8. ' *' → logprob: -4.223817825317383
    9. ' %' → logprob: -4.473817825317383
    10. ',' → logprob: -4.473817825317383

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04334741085767746
    2. '=' → logprob: -3.1683473587036133
    3. '+' → logprob: -9.043347358703613
    4. ' +=' → logprob: -9.168347358703613
    5. ' +' → logprob: -10.168347358703613
    6. ' ' → logprob: -10.418347358703613
    7. ',' → logprob: -10.918347358703613
    8. '<|end|>' → logprob: -11.293347358703613
    9. ' ==' → logprob: -12.418347358703613
    10. '+=' → logprob: -12.793347358703613

Token 42: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011408661492168903
    2. ' b' → logprob: -4.636408805847168
    3. '0' → logprob: -6.761408805847168
    4. 'a' → logprob: -8.136408805847168
    5. ' ' → logprob: -9.761408805847168
    6. '1' → logprob: -9.761408805847168
    7. '-' → logprob: -11.511408805847168
    8. 'x' → logprob: -11.761408805847168
    9. '   ' → logprob: -11.761408805847168
    10. ' -' → logprob: -11.886408805847168

Token 43: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19928260147571564
    2. '<|end|>' → logprob: -2.574282646179199
    3. '+' → logprob: -3.699282646179199
    4. '
' → logprob: -4.449282646179199
    5. '    
' → logprob: -4.699282646179199
    6. ' ' → logprob: -4.699282646179199
    7. '\n' → logprob: -4.949282646179199
    8. ' if' → logprob: -4.949282646179199
    9. '```' → logprob: -5.199282646179199
    10. 'if' → logprob: -5.324282646179199

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6232857704162598
    2. '<|end|>' → logprob: -1.8732857704162598
    3. '\n' → logprob: -2.3732857704162598
    4. ':' → logprob: -3.3732857704162598
    5. '    
' → logprob: -3.6232857704162598
    6. '
' → logprob: -3.6232857704162598
    7. '+' → logprob: -3.7482857704162598
    8. ' 
' → logprob: -3.9982857704162598
    9. '  
' → logprob: -4.49828577041626
    10. ' if' → logprob: -4.62328577041626

Token 45: ' steps' (ID: 10331)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024550052359700203
    2. '=' → logprob: -4.024549961090088
    3. ' +=' → logprob: -5.399549961090088
    4. ' ' → logprob: -6.649549961090088
    5. ' -=' → logprob: -8.399550437927246
    6. '<|end|>' → logprob: -9.399550437927246
    7. ')' → logprob: -9.899550437927246
    8. ',' → logprob: -10.274550437927246
    9. '   ' → logprob: -10.649550437927246
    10. '    ' → logprob: -10.774550437927246

Token 47: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08095493167638779
    2. ' ' → logprob: -2.5809550285339355
    3. '1' → logprob: -6.3309550285339355
    4. '[]' → logprob: -9.830954551696777
    5. ' []' → logprob: -10.080954551696777
    6. 'abs' → logprob: -10.205954551696777
    7. ' abs' → logprob: -10.205954551696777
    8. ' [' → logprob: -10.455954551696777
    9. '[' → logprob: -10.455954551696777
    10. ' x' → logprob: -10.705954551696777

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015503045171499252
    2. 'abs' → logprob: -4.8905029296875
    3. '1' → logprob: -5.5155029296875
    4. '[]' → logprob: -6.3905029296875
    5. 'x' → logprob: -6.8905029296875
    6. '[' → logprob: -8.2655029296875
    7. 'a' → logprob: -8.8905029296875
    8. '[x' → logprob: -9.1405029296875
    9. ' ' → logprob: -9.3905029296875
    10. 'max' → logprob: -9.3905029296875

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8552736043930054
    2. '   ' → logprob: -1.7302736043930054
    3. '<|end|>' → logprob: -1.7302736043930054
    4. '\n' → logprob: -2.605273723602295
    5. ' 
' → logprob: -2.980273723602295
    6. '  
' → logprob: -3.730273723602295
    7. '    
' → logprob: -3.980273723602295
    8. 'if' → logprob: -4.605273723602295
    9. ' if' → logprob: -4.605273723602295
    10. '```' → logprob: -4.730273723602295

Token 52: ' y' (ID: 342)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.38877367973327637
    2. 'x' → logprob: -1.8887736797332764
    3. ' y' → logprob: -1.8887736797332764
    4. 'y' → logprob: -4.7637739181518555
    5. ' (' → logprob: -5.5137739181518555
    6. '(x' → logprob: -6.0137739181518555
    7. ' not' → logprob: -6.2637739181518555
    8. ' ' → logprob: -7.2637739181518555
    9. ' a' → logprob: -7.5137739181518555
    10. '(' → logprob: -7.8887739181518555

Token 53: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.1476380825042725
    2. '>' → logprob: -1.2726380825042725
    3. ' !=' → logprob: -1.2726380825042725
    4. '!=' → logprob: -2.2726380825042725
    5. ':' → logprob: -5.147638320922852
    6. ' %' → logprob: -5.272638320922852
    7. '%' → logprob: -5.397638320922852
    8. ' >=' → logprob: -6.147638320922852
    9. '>=' → logprob: -7.147638320922852
    10. 'and' → logprob: -8.272638320922852

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2322380393743515
    2. ' ' → logprob: -1.6072380542755127
    3. 'x' → logprob: -5.857237815856934
    4. '1' → logprob: -5.982237815856934
    5. ' x' → logprob: -6.732237815856934
    6. 'a' → logprob: -9.357237815856934
    7. ' a' → logprob: -10.107237815856934
    8. '   ' → logprob: -10.107237815856934
    9. '  ' → logprob: -10.857237815856934
    10. ' y' → logprob: -12.419737815856934

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00811971165239811
    2. 'x' → logprob: -5.008119583129883
    3. '1' → logprob: -6.758119583129883
    4. 'a' → logprob: -9.133119583129883
    5. ' ' → logprob: -9.633119583129883
    6. 'y' → logprob: -10.883119583129883
    7. '   ' → logprob: -11.008119583129883
    8. '2' → logprob: -12.258119583129883
    9. '```' → logprob: -12.383119583129883
    10. ' x' → logprob: -12.508119583129883

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01337409857660532
    2. ':
' → logprob: -4.888374328613281
    3. '   ' → logprob: -5.763374328613281
    4. '       ' → logprob: -6.638374328613281
    5. ' and' → logprob: -6.888374328613281
    6. '<|end|>' → logprob: -9.263374328613281
    7. ',' → logprob: -10.013374328613281
    8. ' :' → logprob: -10.388374328613281
    9. '    ' → logprob: -10.763374328613281
    10. 'and' → logprob: -11.138374328613281

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5555511116981506
    2. '<|end|>' → logprob: -1.3055510520935059
    3. '    ' → logprob: -2.555551052093506
    4. '   ' → logprob: -3.180551052093506
    5. ' if' → logprob: -4.555551052093506
    6. ' x' → logprob: -4.930551052093506
    7. 'x' → logprob: -5.805551052093506
    8. ' ' → logprob: -5.930551052093506
    9. '<|end|>' → logprob: -6.055551052093506
    10. ' steps' → logprob: -7.055551052093506

Token 58: ' r' (ID: 428)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.7388802766799927
    2. 'steps' → logprob: -1.3638802766799927
    3. ' q' → logprob: -2.113880157470703
    4. 'q' → logprob: -2.488880157470703
    5. 't' → logprob: -4.488880157470703
    6. ' t' → logprob: -4.613880157470703
    7. 'temp' → logprob: -5.113880157470703
    8. ' quotient' → logprob: -5.113880157470703
    9. ' temp' → logprob: -5.238880157470703
    10. ' if' → logprob: -5.363880157470703

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00796467438340187
    2. ' ' → logprob: -5.382964611053467
    3. '=' → logprob: -5.757964611053467
    4. ',' → logprob: -9.007965087890625
    5. 'e' → logprob: -10.632965087890625
    6. '%' → logprob: -12.132965087890625
    7. '  ' → logprob: -12.507965087890625
    8. ' %=' → logprob: -12.757965087890625
    9. ' ,' → logprob: -12.882965087890625
    10. 'ema' → logprob: -13.132965087890625

Token 60: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760276913642883
    2. ' x' → logprob: -0.8260276913642883
    3. ' ' → logprob: -10.201027870178223
    4. '	x' → logprob: -10.451027870178223
    5. '%x' → logprob: -12.201027870178223
    6. 'y' → logprob: -12.701027870178223
    7. 'a' → logprob: -12.826027870178223
    8. '```' → logprob: -12.826027870178223
    9. ' y' → logprob: -12.951027870178223
    10. '"x' → logprob: -14.138527870178223

Token 61: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12693145871162415
    2. ' %' → logprob: -2.1269314289093018
    3. ' ' → logprob: -12.876931190490723
    4. '%i' → logprob: -14.626931190490723
    5. '%b' → logprob: -16.25193214416504
    6. 'mod' → logprob: -16.37693214416504
    7. '%x' → logprob: -16.37693214416504
    8. 'y' → logprob: -16.37693214416504
    9. '%d' → logprob: -17.25193214416504
    10. '%s' → logprob: -17.75193214416504

Token 62: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013267839094623923
    2. ' y' → logprob: -6.626326560974121
    3. ' ' → logprob: -14.876326560974121
    4. 'x' → logprob: -15.251326560974121
    5. '	y' → logprob: -15.751326560974121
    6. '   ' → logprob: -16.626327514648438
    7. '10' → logprob: -16.876327514648438
    8. '>' → logprob: -16.876327514648438
    9. '  ' → logprob: -17.251327514648438
    10. '7' → logprob: -17.501327514648438

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2576671242713928
    2. '<|end|>' → logprob: -1.507667064666748
    3. '<|end|>' → logprob: -5.632667064666748
    4. '\n' → logprob: -7.382667064666748
    5. '
' → logprob: -7.757667064666748
    6. ' 
' → logprob: -8.257667541503906
    7. '       ' → logprob: -8.632667541503906
    8. '' → logprob: -8.757667541503906
    9. '```' → logprob: -9.257667541503906
    10. 'newline' → logprob: -9.382667541503906

Token 64: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.38762810826301575
    2. ' x' → logprob: -1.1376280784606934
    3. '       ' → logprob: -7.762628078460693
    4. 'steps' → logprob: -9.012628555297852
    5. '	x' → logprob: -9.387628555297852
    6. ' steps' → logprob: -10.262628555297852
    7. 's' → logprob: -10.762628555297852
    8. 'q' → logprob: -11.387628555297852
    9. ' ' → logprob: -11.512628555297852
    10. '```' → logprob: -11.887628555297852

Token 66: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34740951657295227
    2. ' =' → logprob: -1.5974094867706299
    3. '=' → logprob: -2.47240948677063
    4. ' ,' → logprob: -5.097409725189209
    5. ' ' → logprob: -7.597409725189209
    6. ' %=' → logprob: -10.97240924835205
    7. 's' → logprob: -11.84740924835205
    8. '<|end|>' → logprob: -12.09740924835205
    9. ',y' → logprob: -12.40990924835205
    10. '.' → logprob: -12.78490924835205

Token 67: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16022787988185883
    2. ' y' → logprob: -1.91022789478302
    3. '	y' → logprob: -13.28522777557373
    4. '<|end|>' → logprob: -13.66022777557373
    5. ' ' → logprob: -14.66022777557373
    6. ''y' → logprob: -16.035228729248047
    7. 'b' → logprob: -16.660228729248047
    8. '‘y' → logprob: -16.785228729248047
    9. '<|end|>' → logprob: -16.910228729248047
    10. '*y' → logprob: -17.785228729248047

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5364643335342407
    2. '<|end|>' → logprob: -0.9114643335342407
    3. '<|end|>' → logprob: -5.411464214324951
    4. ' 
' → logprob: -5.786464214324951
    5. '
' → logprob: -5.786464214324951
    6. '       ' → logprob: -6.661464214324951
    7. '  
' → logprob: -7.911464214324951
    8. '        
' → logprob: -8.16146469116211
    9. '    
' → logprob: -8.66146469116211
    10. ' ' → logprob: -9.03646469116211

Token 69: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.527296781539917
    2. '       ' → logprob: -1.152296781539917
    3. ' r' → logprob: -3.152296781539917
    4. '        
' → logprob: -4.152297019958496
    5. ' 
' → logprob: -4.777297019958496
    6. '<|end|>' → logprob: -5.027297019958496
    7. '
' → logprob: -5.152297019958496
    8. 'y' → logprob: -5.277297019958496
    9. ' y' → logprob: -5.277297019958496
    10. '  
' → logprob: -6.527297019958496

Token 70: ' y' (ID: 342)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0033030740451067686
    2. ' r' → logprob: -5.753303050994873
    3. 'y' (adapté à ' y') → logprob: -9.128303527832031
    4. '       ' → logprob: -11.378303527832031
    5. ' y' → logprob: -12.503303527832031
    6. ' ' → logprob: -15.003303527832031
    7. '   ' → logprob: -15.253303527832031
    8. '    ' → logprob: -15.253303527832031
    9. '        ' → logprob: -15.378303527832031
    10. '<|end|>' → logprob: -15.503303527832031

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889319956302643
    2. '=' → logprob: -2.5788931846618652
    3. '=r' → logprob: -13.328893661499023
    4. 'r' → logprob: -14.078893661499023
    5. ' ' → logprob: -14.703893661499023
    6. ',' → logprob: -14.703893661499023
    7. '<|end|>' → logprob: -16.703893661499023
    8. ' r' → logprob: -17.203893661499023
    9. 's' → logprob: -17.578893661499023
    10. ' =
' → logprob: -18.578893661499023

Token 72: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010328111238777637
    2. ' r' → logprob: -6.876032829284668
    3. '	r' → logprob: -17.50103187561035
    4. ' ' → logprob: -17.87603187561035
    5. '<|end|>' → logprob: -18.12603187561035
    6. '```' → logprob: -20.00103187561035
    7. '   ' → logprob: -20.62603187561035
    8. 'rstrip' → logprob: -20.62603187561035
    9. '_r' → logprob: -20.68853187561035
    10. ' ' → logprob: -20.81353187561035

Token 73: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03356305882334709
    2. 'steps' → logprob: -3.9085631370544434
    3. '
' → logprob: -5.158563137054443
    4. ' steps' → logprob: -5.408563137054443
    5. '   ' → logprob: -6.283563137054443
    6. '        
' → logprob: -7.283563137054443
    7. '    
' → logprob: -9.783562660217285
    8. '+' → logprob: -10.783562660217285
    9. '  
' → logprob: -11.033562660217285
    10. '```' → logprob: -11.158562660217285

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10418102145195007
    2. 'steps' → logprob: -2.6041810512542725
    3. '
' → logprob: -4.104180812835693
    4. ' steps' → logprob: -5.729180812835693
    5. '   ' → logprob: -5.979180812835693
    6. '        
' → logprob: -6.104180812835693
    7. '    
' → logprob: -8.604181289672852
    8. '```' → logprob: -8.729181289672852
    9. '+' → logprob: -10.354181289672852
    10. '  
' → logprob: -11.229181289672852

Token 75: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' (adapté à ' steps') → logprob: -0.00018149138486478478
    2. ' steps' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.625181198120117
    4. '       ' → logprob: -14.625181198120117
    5. 'step' → logprob: -16.875181198120117
    6. 'esteps' → logprob: -17.000181198120117
    7. ' ' → logprob: -17.500181198120117
    8. 's' → logprob: -18.000181198120117
    9. '+' → logprob: -18.125181198120117
    10. '.steps' → logprob: -18.250181198120117

Token 76: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47472384572029114
    2. '+=' → logprob: -0.9747238159179688
    3. '+' → logprob: -7.474723815917969
    4. '=' → logprob: -9.724723815917969
    5. '++' → logprob: -11.724723815917969
    6. '   ' → logprob: -13.099723815917969
    7. ' =' → logprob: -13.224723815917969
    8. ' ' → logprob: -13.724723815917969
    9. ' +' → logprob: -13.849723815917969
    10. '<|end|>' → logprob: -13.849723815917969

Token 77: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0052342405542731285
    2. ' ' → logprob: -5.255234241485596
    3. '2' → logprob: -15.817733764648438
    4. '+' → logprob: -15.880233764648438
    5. '   ' → logprob: -17.255233764648438
    6. '>' → logprob: -17.442733764648438
    7. '  ' → logprob: -17.755233764648438
    8. '```' → logprob: -18.005233764648438
    9. '１' → logprob: -18.067733764648438
    10. '10' → logprob: -18.067733764648438

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.9160102712921798e-05
    2. ' ' → logprob: -10.625029563903809
    3. '10' → logprob: -14.062529563903809
    4. '+' → logprob: -14.312529563903809
    5. '2' → logprob: -14.437529563903809
    6. 'a' → logprob: -15.312529563903809
    7. '3' → logprob: -15.625029563903809
    8. '5' → logprob: -15.812529563903809
    9. '!' → logprob: -15.937529563903809
    10. '100' → logprob: -16.125028610229492

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7609305381774902
    2. 'print' → logprob: -0.7609305381774902
    3. '
' → logprob: -2.7609305381774902
    4. ' print' → logprob: -6.38593053817749
    5. '    
' → logprob: -8.260931015014648
    6. '<|end|>' → logprob: -8.385931015014648
    7. '```' → logprob: -10.510931015014648
    8. '  
' → logprob: -10.510931015014648
    9. '
' → logprob: -11.010931015014648
    10. '	print' → logprob: -11.135931015014648

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35413214564323425
    2. 'print' → logprob: -1.2291321754455566
    3. ' print' → logprob: -5.229132175445557
    4. '```' → logprob: -8.604131698608398
    5. '<|end|>' → logprob: -9.354131698608398
    6. '    
' → logprob: -11.729131698608398
    7. '
' → logprob: -11.854131698608398
    8. '	print' → logprob: -11.854131698608398
    9. '(print' → logprob: -12.229131698608398
    10. ')' → logprob: -12.229131698608398

Token 81: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04634124040603638
    2. '   ' → logprob: -3.2963411808013916
    3. ' print' → logprob: -4.796341419219971
    4. '```' → logprob: -12.421340942382812
    5. '	print' → logprob: -14.546340942382812
    6. '
' → logprob: -14.546340942382812
    7. '    
' → logprob: -15.921340942382812
    8. '#print' → logprob: -16.546340942382812
    9. '(print' → logprob: -16.671340942382812
    10. '.print' → logprob: -16.671340942382812

Token 82: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016541603952646255
    2. '(x' → logprob: -4.641541481018066
    3. '(f' → logprob: -5.641541481018066
    4. '("' → logprob: -6.516541481018066
    5. '('' → logprob: -6.891541481018066
    6. '(a' → logprob: -8.141541481018066
    7. '((' → logprob: -8.641541481018066
    8. '("("' → logprob: -9.391541481018066
    9. '(abs' → logprob: -10.266541481018066
    10. ' (' → logprob: -10.766541481018066

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003309842897579074
    2. ')' → logprob: -6.128309726715088
    3. ' ,' → logprob: -6.878309726715088
    4. '   ' → logprob: -10.503310203552246
    5. ' )' → logprob: -10.878310203552246
    6. ',)' → logprob: -11.253310203552246
    7. '    ' → logprob: -12.003310203552246
    8. 'steps' → logprob: -12.378310203552246
    9. ',f' → logprob: -12.753310203552246
    10. '  ' → logprob: -12.753310203552246

Token 84: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.00867850799113512
    2. ' steps' → logprob: -4.758678436279297
    3. '"' → logprob: -10.008678436279297
    4. ''' → logprob: -11.508678436279297
    5. 'step' → logprob: -12.008678436279297
    6. ' ' → logprob: -13.258678436279297
    7. ' "' → logprob: -15.258678436279297
    8. 'ste' → logprob: -15.508678436279297
    9. '  ' → logprob: -16.008678436279297
    10. '   ' → logprob: -16.258678436279297

Token 85: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ' )' → logprob: -12.125006675720215
    3. ')
' → logprob: -14.375006675720215
    4. ')`' → logprob: -16.1250057220459
    5. '`)' → logprob: -16.2500057220459
    6. '')' → logprob: -17.0000057220459
    7. '))' → logprob: -17.5000057220459
    8. ')

' → logprob: -18.5000057220459
    9. '")' → logprob: -18.6250057220459
    10. '   ' → logprob: -18.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 83
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 42.17%
Précision adaptée (1ère position): 45.78%
Précision (top 10): 80.72%
================================================================================
