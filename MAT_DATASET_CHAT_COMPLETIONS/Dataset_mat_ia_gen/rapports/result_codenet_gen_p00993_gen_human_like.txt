================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())

def smallest_divisor(x):
    if x % 2 == 0:
        return 2
    i = 3
    while i * i <= x:
        if x % i == 0:
            return i
        i += 2
    return x  # x is prime

start = 2
while True:
    found = True
    divisors = []
    for num in range(start, start + n):
        d = smallest_divisor(num)
        if d == 1 or d == num:
            # number is prime or 1, no divisor other than 1 or itself
            found = False
            break
        divisors.append(d)
    if found:
        print(start)
        for d in divisors:
            print(d)
        break
    start += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03585807606577873
    2. ')' → logprob: -3.660858154296875
    3. '()' → logprob: -4.785858154296875
    4. '(
' → logprob: -7.910858154296875
    5. '())' → logprob: -8.035858154296875
    6. ''' → logprob: -9.660858154296875
    7. '('' → logprob: -9.785858154296875
    8. '```' → logprob: -9.785858154296875
    9. '(

' → logprob: -10.035858154296875
    10. '(()' → logprob: -10.285858154296875

Token 5: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4092439115047455
    2. 'i' → logprob: -1.9092439413070679
    3. 'for' → logprob: -1.9092439413070679
    4. 's' → logprob: -3.5342438220977783
    5. 'f' → logprob: -6.284244060516357
    6. 'x' → logprob: -6.284244060516357
    7. ' if' → logprob: -6.409244060516357
    8. 'total' → logprob: -7.034244060516357
    9. 'result' → logprob: -7.159244060516357
    10. 'sum' → logprob: -7.159244060516357

Token 6: ' smallest' (ID: 42173)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005208970978856087
    2. ' factorial' → logprob: -5.880208969116211
    3. ' space' → logprob: -7.255208969116211
    4. ' f' → logprob: -7.505208969116211
    5. '_' → logprob: -7.880208969116211
    6. ' main' → logprob: -9.130208969116211
    7. ''' → logprob: -9.505208969116211
    8. ' my' → logprob: -9.630208969116211
    9. ' factor' → logprob: -9.755208969116211
    10. ' max' → logprob: -10.130208969116211

Token 7: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0768592581152916
    2. '_div' → logprob: -3.45185923576355
    3. '(' → logprob: -3.57685923576355
    4. '_factor' → logprob: -6.201859474182129
    5. '_space' → logprob: -6.701859474182129
    6. '_word' → logprob: -6.826859474182129
    7. '_prime' → logprob: -7.076859474182129
    8. '_number' → logprob: -7.201859474182129
    9. '_positive' → logprob: -7.326859474182129
    10. '_token' → logprob: -7.451859474182129

Token 8: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.014949003234505653
    2. 'isible' → logprob: -4.764948844909668
    3. '_' → logprob: -5.764948844909668
    4. 'is' → logprob: -6.889948844909668
    5. '-' → logprob: -7.264948844909668
    6. '=' → logprob: -8.139948844909668
    7. 'ider' → logprob: -8.889948844909668
    8. '```' → logprob: -8.889948844909668
    9. '_is' → logprob: -9.014948844909668
    10. ' is' → logprob: -9.014948844909668

Token 9: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011126813478767872
    2. '(n' → logprob: -4.51112699508667
    3. '(a' → logprob: -10.511126518249512
    4. '(x' → logprob: -10.511126518249512
    5. '_' → logprob: -11.886126518249512
    6. '(num' → logprob: -12.136126518249512
    7. ' (' → logprob: -12.386126518249512
    8. '(number' → logprob: -12.511126518249512
    9. 's' → logprob: -14.386126518249512
    10. 'n' → logprob: -14.386126518249512

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004802007228136063
    2. ')' → logprob: -5.379802227020264
    3. ':' → logprob: -8.879801750183105
    4. ' ):' → logprob: -11.004801750183105
    5. '):
' → logprob: -11.629801750183105
    6. '(' → logprob: -12.504801750183105
    7. '():' → logprob: -13.629801750183105
    8. ')：' → logprob: -13.629801750183105
    9. '>):' → logprob: -13.754801750183105
    10. '(x' → logprob: -14.129801750183105

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4419277608394623
    2. '   ' → logprob: -1.1919277906417847
    3. '```' → logprob: -3.566927671432495
    4. ' ' → logprob: -4.566927909851074
    5. ' for' → logprob: -5.191927909851074
    6. ' :' → logprob: -6.316927909851074
    7. '    ' → logprob: -6.441927909851074
    8. ':
' → logprob: -6.816927909851074
    9. ''' → logprob: -6.816927909851074
    10. '`' → logprob: -7.441927909851074

Token 12: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46036213636398315
    2. ' if' → logprob: -1.835362195968628
    3. '   ' → logprob: -2.335362195968628
    4. ' ```' → logprob: -3.085362195968628
    5. ' i' → logprob: -3.460362195968628
    6. ' ' → logprob: -4.085361957550049
    7. '```' → logprob: -4.460361957550049
    8. 'for' → logprob: -5.585361957550049
    9. '    ' → logprob: -6.960361957550049
    10. 'if' (adapté à ' if') → logprob: -7.210361957550049

Token 13: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.019875748082995415
    2. 'x' → logprob: -4.144875526428223
    3. ' ' → logprob: -6.019875526428223
    4. '2' → logprob: -7.019875526428223
    5. '1' → logprob: -7.894875526428223
    6. ' n' → logprob: -9.144875526428223
    7. 'n' → logprob: -11.144875526428223
    8. '	x' → logprob: -12.269875526428223
    9. ' (' → logprob: -12.894875526428223
    10. ' ' → logprob: -13.144875526428223

Token 14: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11359407007694244
    2. ' ==' → logprob: -2.4885940551757812
    3. '%' → logprob: -3.9885940551757812
    4. ' ' → logprob: -5.363594055175781
    5. '==' → logprob: -6.988594055175781
    6. ' <=' → logprob: -8.988594055175781
    7. ' <' → logprob: -9.863594055175781
    8. '1' → logprob: -11.238594055175781
    9. '%i' → logprob: -12.113594055175781
    10. ' ' → logprob: -12.863594055175781

Token 15: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22542013227939606
    2. ' ' → logprob: -1.6004201173782349
    3. '   ' → logprob: -13.225419998168945
    4. 'x' → logprob: -13.350419998168945
    5. 'n' → logprob: -13.725419998168945
    6. 'i' → logprob: -14.225419998168945
    7. '3' → logprob: -14.600419998168945
    8. ' n' → logprob: -14.725419998168945
    9. ' x' → logprob: -14.850419998168945
    10. ' i' → logprob: -15.037919998168945

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001137947037932463
    2. ' ' → logprob: -9.125113487243652
    3. 'n' → logprob: -13.125113487243652
    4. 'x' → logprob: -13.375113487243652
    5. '   ' → logprob: -14.875113487243652
    6. '3' → logprob: -15.000113487243652
    7. 'i' → logprob: -15.375113487243652
    8. '1' → logprob: -16.00011444091797
    9. '7' → logprob: -17.12511444091797
    10. '    ' → logprob: -17.68761444091797

Token 17: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029196424409747124
    2. '==' → logprob: -3.7791965007781982
    3. ' !=' → logprob: -5.154196262359619
    4. '!=' → logprob: -9.529196739196777
    5. ' ' → logprob: -10.154196739196777
    6. ':' → logprob: -10.279196739196777
    7. ' =' → logprob: -12.529196739196777
    8. '=' → logprob: -12.779196739196777
    9. '>' → logprob: -13.404196739196777
    10. ' >' → logprob: -13.529196739196777

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519300878047943
    2. '0' → logprob: -1.5019301176071167
    3. '1' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.501930236816406
    5. '2' → logprob: -16.501930236816406
    6. '  ' → logprob: -16.814430236816406
    7. '=' → logprob: -17.501930236816406
    8. '```' → logprob: -17.689430236816406
    9. '3' → logprob: -18.439430236816406
    10. '   ' → logprob: -18.564430236816406

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324605919420719
    2. ' ' → logprob: -3.7732460498809814
    3. '1' → logprob: -14.648245811462402
    4. '  ' → logprob: -16.46074676513672
    5. ' ' → logprob: -17.21074676513672
    6. '2' → logprob: -17.33574676513672
    7. '   ' → logprob: -17.64824676513672
    8. '۰' → logprob: -17.64824676513672
    9. '```' → logprob: -17.77324676513672
    10. '٠' → logprob: -18.96074676513672

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012713046744465828
    2. ':return' → logprob: -7.6262712478637695
    3. '):' → logprob: -8.00127124786377
    4. ' :' → logprob: -8.37627124786377
    5. ':
' → logprob: -8.50127124786377
    6. '   ' → logprob: -11.87627124786377
    7. ')' → logprob: -12.62627124786377
    8. '):
' → logprob: -14.37627124786377
    9. ':**' → logprob: -14.62627124786377
    10. ' :
' → logprob: -14.87627124786377

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18391190469264984
    2. ' return' → logprob: -2.9339118003845215
    3. '    ' → logprob: -3.3089118003845215
    4. ' ' → logprob: -3.4339118003845215
    5. '   ' → logprob: -3.5589118003845215
    6. 'return' → logprob: -5.1839118003845215
    7. ':return' → logprob: -5.4339118003845215
    8. ':' → logprob: -6.3089118003845215
    9. ' 
' → logprob: -6.5589118003845215
    10. ' :' → logprob: -6.6839118003845215

Token 22: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6555595397949219
    2. 'return' (adapté à ' return') → logprob: -0.7805595397949219
    3. '   ' → logprob: -4.155559539794922
    4. '       ' → logprob: -5.030559539794922
    5. ' ' → logprob: -9.155559539794922
    6. ':return' → logprob: -9.280559539794922
    7. '           ' → logprob: -9.405559539794922
    8. '    ' → logprob: -9.905559539794922
    9. '	return' → logprob: -10.155559539794922
    10. '
' → logprob: -10.780559539794922

Token 23: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759415030479431
    2. '2' → logprob: -0.8259415030479431
    3. ' ' → logprob: -14.07594108581543
    4. '   ' → logprob: -15.07594108581543
    5. '    ' → logprob: -15.82594108581543
    6. '1' → logprob: -16.26344108581543
    7. '`' → logprob: -16.32594108581543
    8. '```' → logprob: -16.76344108581543
    9. '"' → logprob: -16.88844108581543
    10. ''' → logprob: -17.01344108581543

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.37510871887207
    4. '```' → logprob: -18.68760871887207
    5. ' ' → logprob: -19.00010871887207
    6. '۲' → logprob: -19.18760871887207
    7. '22' → logprob: -19.56260871887207
    8. '  ' → logprob: -19.62510871887207
    9. '２' → logprob: -19.75010871887207
    10. '1' → logprob: -19.87510871887207

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24360409379005432
    2. '
' → logprob: -2.2436041831970215
    3. '    
' → logprob: -3.1186041831970215
    4. '\n' → logprob: -3.6186041831970215
    5. 'n' → logprob: -4.1186041831970215
    6. '  
' → logprob: -4.9936041831970215
    7. '```' → logprob: -4.9936041831970215
    8. '   
' → logprob: -5.7436041831970215
    9. ' 
' → logprob: -6.6186041831970215
    10. '<|end|>' → logprob: -6.8686041831970215

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11843151599168777
    2. '    
' → logprob: -2.493431568145752
    3. '
' → logprob: -4.743431568145752
    4. '```' → logprob: -4.868431568145752
    5. '\n' → logprob: -4.993431568145752
    6. '   
' → logprob: -5.993431568145752
    7. '  
' → logprob: -6.868431568145752
    8. 'n' → logprob: -7.243431568145752
    9. ' 
' → logprob: -8.243431091308594
    10. '     
' → logprob: -8.993431091308594

Token 27: ' i' (ID: 575)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2971333861351013
    2. ' i' → logprob: -2.047133445739746
    3. 'for' → logprob: -2.422133445739746
    4. '   ' → logprob: -3.547133445739746
    5. 'i' (adapté à ' i') → logprob: -5.172133445739746
    6. '    
' → logprob: -5.797133445739746
    7. 'n' → logprob: -7.422133445739746
    8. ' ' → logprob: -8.172133445739746
    9. '    ' → logprob: -9.047133445739746
    10. ' 
' → logprob: -9.172133445739746

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08060713857412338
    2. '=' → logprob: -2.5806071758270264
    3. ' ' → logprob: -6.455606937408447
    4. 'n' → logprob: -9.580607414245605
    5. ' +=' → logprob: -9.830607414245605
    6. ' n' → logprob: -12.205607414245605
    7. '  ' → logprob: -12.955607414245605
    8. 'f' → logprob: -13.080607414245605
    9. ' ﻿' → logprob: -13.580607414245605
    10. '<|end|>' → logprob: -13.580607414245605

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11282294243574142
    2. '3' → logprob: -2.237823009490967
    3. ' ' → logprob: -14.737822532653809
    4. '  ' → logprob: -17.612823486328125
    5. '	' → logprob: -17.987823486328125
    6. '```' → logprob: -17.987823486328125
    7. ')' → logprob: -18.050323486328125
    8. '۳' → logprob: -18.550323486328125
    9. '   ' → logprob: -18.612823486328125
    10. '1' → logprob: -18.675323486328125

Token 30: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۳' → logprob: -19.250001907348633
    4. '３' → logprob: -19.500001907348633
    5. '³' → logprob: -20.750001907348633
    6. '   ' → logprob: -21.375001907348633
    7. '٣' → logprob: -21.625001907348633
    8. '३' → logprob: -21.687501907348633
    9. '```' → logprob: -21.687501907348633
    10. '  ' → logprob: -21.750001907348633

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07095755636692047
    2. 'while' (adapté à ' while') → logprob: -3.195957660675049
    3. ' ' → logprob: -4.195957660675049
    4. '<|end|>' → logprob: -5.070957660675049
    5. '   ' → logprob: -5.570957660675049
    6. '```' → logprob: -7.445957660675049
    7. '    ' → logprob: -7.820957660675049
    8. ':' → logprob: -8.07095718383789
    9. '<|end|>' → logprob: -8.19595718383789
    10. '	while' → logprob: -8.32095718383789

Token 34: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018157554790377617
    2. 'i' → logprob: -4.018157482147217
    3. '	i' → logprob: -12.268157958984375
    4. ' ' → logprob: -13.018157958984375
    5. ' ' → logprob: -14.643157958984375
    6. '(i' → logprob: -15.893157958984375
    7. ' (' → logprob: -17.268157958984375
    8. '   ' → logprob: -17.393157958984375
    9. ' True' → logprob: -17.393157958984375
    10. '```' → logprob: -17.643157958984375

Token 35: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.039015449583530426
    2. '*' → logprob: -3.914015531539917
    3. '*i' → logprob: -4.164015293121338
    4. ' <=' → logprob: -5.914015293121338
    5. '**' → logprob: -10.664015769958496
    6. '<=' → logprob: -11.039015769958496
    7. '<|end|>' → logprob: -12.164015769958496
    8. ' ' → logprob: -12.414015769958496
    9. ' **' → logprob: -12.414015769958496
    10. '*object' → logprob: -14.414015769958496

Token 36: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.1424973713001236e-05
    2. ' i' → logprob: -10.375031471252441
    3. '*i' → logprob: -16.375030517578125
    4. ' ' → logprob: -17.000030517578125
    5. '	i' → logprob: -17.375030517578125
    6. '_i' → logprob: -19.125030517578125
    7. '<|end|>' → logprob: -20.500030517578125
    8. '  ' → logprob: -20.625030517578125
    9. '   ' → logprob: -20.750030517578125
    10. '<=' → logprob: -21.000030517578125

Token 37: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03370263800024986
    2. '<=' → logprob: -3.4087026119232178
    3. '<|end|>' → logprob: -9.908702850341797
    4. ' ' → logprob: -12.658702850341797
    5. ')<=' → logprob: -13.533702850341797
    6. ']<=' → logprob: -14.283702850341797
    7. ' <=",' → logprob: -14.283702850341797
    8. '<|end|>' → logprob: -14.908702850341797
    9. '<' → logprob: -15.533702850341797
    10. ' <<=' → logprob: -15.658702850341797

Token 38: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015023599844425917
    2. ' x' → logprob: -6.501502513885498
    3. '	x' → logprob: -18.001502990722656
    4. ' ' → logprob: -18.751502990722656
    5. '   ' → logprob: -19.501502990722656
    6. '(x' → logprob: -20.876502990722656
    7. ')x' → logprob: -21.251502990722656
    8. 'n' → logprob: -22.001502990722656
    9. '```' → logprob: -22.001502990722656
    10. '{x' → logprob: -22.501502990722656

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002913678181357682
    2. ' :' → logprob: -8.62529182434082
    3. ':
' → logprob: -9.25029182434082
    4. ':**' → logprob: -11.87529182434082
    5. '):' → logprob: -12.87529182434082
    6. ' and' → logprob: -12.87529182434082
    7. ':return' → logprob: -14.00029182434082
    8. '+:' → logprob: -14.62529182434082
    9. ':i' → logprob: -14.75029182434082
    10. ':

' → logprob: -14.87529182434082

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39687368273735046
    2. ':' → logprob: -1.1468737125396729
    3. '   ' → logprob: -5.271873474121094
    4. ' :' → logprob: -6.396873474121094
    5. ' ' → logprob: -6.771873474121094
    6. '    ' → logprob: -6.896873474121094
    7. ':
' → logprob: -8.271873474121094
    8. ':return' → logprob: -9.521873474121094
    9. '<|end|>' → logprob: -9.771873474121094
    10. '\' → logprob: -9.771873474121094

Token 41: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8683971762657166
    2. ' if' → logprob: -0.8683971762657166
    3. 'if' (adapté à ' if') → logprob: -1.9933972358703613
    4. ' ' → logprob: -4.368397235870361
    5. '        ' → logprob: -5.868397235870361
    6. '           ' → logprob: -6.243397235870361
    7. '   ' → logprob: -6.243397235870361
    8. '    ' → logprob: -6.368397235870361
    9. '        
' → logprob: -7.118397235870361
    10. ':' → logprob: -7.243397235870361

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.006715967319905758
    2. 'x' → logprob: -5.006715774536133
    3. '	x' → logprob: -15.381715774536133
    4. '(x' → logprob: -15.506715774536133
    5. ' ' → logprob: -16.256715774536133
    6. ' (' → logprob: -16.381715774536133
    7. ' ' → logprob: -17.506715774536133
    8. '"x' → logprob: -19.131715774536133
    9. ')x' → logprob: -19.256715774536133
    10. '   ' → logprob: -19.756715774536133

Token 43: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20143379271030426
    2. '%' → logprob: -1.701433777809143
    3. ' ' → logprob: -10.951434135437012
    4. '%i' → logprob: -13.326434135437012
    5. ' ' → logprob: -14.201434135437012
    6. '%x' → logprob: -15.951434135437012
    7. '<|end|>' → logprob: -16.451433181762695
    8. '   ' → logprob: -16.701433181762695
    9. '%s' → logprob: -16.826433181762695
    10. '％' → logprob: -16.951433181762695

Token 44: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47408074140548706
    2. ' i' → logprob: -0.9740807414054871
    3. '	i' → logprob: -13.224081039428711
    4. ' ' → logprob: -13.599081039428711
    5. '<|end|>' → logprob: -14.724081039428711
    6. ' ' → logprob: -16.47408103942871
    7. '<|end|>' → logprob: -16.47408103942871
    8. '   ' → logprob: -17.09908103942871
    9. '  ' → logprob: -17.72408103942871
    10. '*i' → logprob: -18.22408103942871

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014179493300616741
    2. '==' → logprob: -4.264179706573486
    3. ' ' → logprob: -11.514179229736328
    4. '=' → logprob: -13.014179229736328
    5. ')==' → logprob: -13.514179229736328
    6. ')' → logprob: -14.514179229736328
    7. ']==' → logprob: -14.889179229736328
    8. ' ===' → logprob: -14.889179229736328
    9. '===' → logprob: -15.139179229736328
    10. ' =' → logprob: -15.139179229736328

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. '<|end|>' → logprob: -17.663042068481445
    4. '  ' → logprob: -18.288042068481445
    5. '۰' → logprob: -18.288042068481445
    6. ' ' → logprob: -18.413042068481445
    7. '```' → logprob: -18.413042068481445
    8. '   ' → logprob: -19.663042068481445
    9. '    ' → logprob: -19.663042068481445
    10. '<|end|>' → logprob: -19.788042068481445

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. '```' → logprob: -19.75170135498047
    4. '۰' → logprob: -19.87670135498047
    5. ' ' → logprob: -21.00170135498047
    6. '  ' → logprob: -21.12670135498047
    7. '<|end|>' → logprob: -21.12670135498047
    8. '٠' → logprob: -21.75170135498047
    9. 'i' → logprob: -22.18920135498047
    10. ' ' → logprob: -22.50170135498047

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010272121289744973
    2. ':
' → logprob: -7.7510271072387695
    3. '           ' → logprob: -8.25102710723877
    4. ':return' → logprob: -8.37602710723877
    5. '       ' → logprob: -9.37602710723877
    6. ' :' → logprob: -11.75102710723877
    7. '):' → logprob: -12.37602710723877
    8. '   ' → logprob: -13.25102710723877
    9. ',' → logprob: -13.37602710723877
    10. ' return' → logprob: -14.00102710723877

Token 49: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007835162803530693
    2. ' return' → logprob: -5.507835388183594
    3. 'return' → logprob: -5.632835388183594
    4. '```' → logprob: -9.632835388183594
    5. ' 
' → logprob: -11.007835388183594
    6. '
' → logprob: -11.132835388183594
    7. '               ' → logprob: -11.257835388183594
    8. '       ' → logprob: -11.257835388183594
    9. ' ' → logprob: -11.757835388183594
    10. ':return' → logprob: -12.257835388183594

Token 50: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32510581612586975
    2. 'return' (adapté à ' return') → logprob: -1.9501057863235474
    3. ' return' → logprob: -2.450105905532837
    4. '               ' → logprob: -3.075105905532837
    5. '```' → logprob: -6.825105667114258
    6. ' ' → logprob: -8.075105667114258
    7. '            ' → logprob: -8.075105667114258
    8. ' ' → logprob: -8.825105667114258
    9. '	return' → logprob: -9.200105667114258
    10. ' 
' → logprob: -9.200105667114258

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023245595395565033
    2. ' i' → logprob: -3.7732455730438232
    3. '	i' → logprob: -15.773245811462402
    4. ' ' → logprob: -18.398244857788086
    5. ',i' → logprob: -20.148244857788086
    6. '*i' → logprob: -20.398244857788086
    7. '   ' → logprob: -20.398244857788086
    8. '<|end|>' → logprob: -20.648244857788086
    9. '```' → logprob: -20.898244857788086
    10. ' ' → logprob: -21.023244857788086

Token 52: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008393650874495506
    2. '
' → logprob: -5.50839376449585
    3. '```' → logprob: -6.25839376449585
    4. '	' → logprob: -7.63339376449585
    5. '        
' → logprob: -7.75839376449585
    6. '<|end|>' → logprob: -7.88339376449585
    7. '   ' → logprob: -8.008393287658691
    8. '<|end|>' → logprob: -9.133393287658691
    9. '\' → logprob: -9.258393287658691
    10. 'i' → logprob: -9.508393287658691

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00358451041392982
    2. '   ' → logprob: -7.003584384918213
    3. '```' → logprob: -7.003584384918213
    4. 'i' → logprob: -7.253584384918213
    5. '	' → logprob: -8.253584861755371
    6. '        
' → logprob: -8.503584861755371
    7. '<|end|>' → logprob: -9.253584861755371
    8. ' i' → logprob: -9.253584861755371
    9. ' ' → logprob: -9.378584861755371
    10. '
' → logprob: -9.628584861755371

Token 54: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.759358823299408
    2. ' i' → logprob: -1.7593588829040527
    3. '       ' → logprob: -1.8843588829040527
    4. '```' → logprob: -2.6343588829040527
    5. '   ' → logprob: -3.1343588829040527
    6. '+' → logprob: -3.7593588829040527
    7. '+
' → logprob: -3.8843588829040527
    8. '
' → logprob: -4.259358882904053
    9. ' ' → logprob: -5.259358882904053
    10. '	i' → logprob: -5.509358882904053

Token 55: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.36133861541748047
    2. '+' → logprob: -1.2363386154174805
    3. ' +=' → logprob: -4.3613386154174805
    4. '+='' → logprob: -11.23633861541748
    5. '+="' → logprob: -11.36133861541748
    6. '=' → logprob: -11.48633861541748
    7. '++' → logprob: -12.36133861541748
    8. ' +' → logprob: -12.48633861541748
    9. ' ' → logprob: -13.73633861541748
    10. 'plus' → logprob: -13.98633861541748

Token 56: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. '```' → logprob: -17.878177642822266
    4. '1' → logprob: -18.003177642822266
    5. '   ' → logprob: -19.878177642822266
    6. '۲' → logprob: -20.378177642822266
    7. '  ' → logprob: -20.628177642822266
    8. ' ' → logprob: -20.878177642822266
    9. '6' → logprob: -20.878177642822266
    10. '２' → logprob: -21.065677642822266

Token 57: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -15.500021934509277
    4. '```' → logprob: -17.50002098083496
    5. '۲' → logprob: -18.87502098083496
    6. '２' → logprob: -19.62502098083496
    7. '२' → logprob: -20.00002098083496
    8. '  ' → logprob: -20.25002098083496
    9. '   ' → logprob: -20.25002098083496
    10. '২' → logprob: -20.87502098083496

Token 58: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09855445474386215
    2. '
' → logprob: -3.0985543727874756
    3. '```' → logprob: -3.5985543727874756
    4. 'return' → logprob: -4.723554611206055
    5. ' return' → logprob: -5.473554611206055
    6. '    
' → logprob: -5.598554611206055
    7. '  
' → logprob: -6.473554611206055
    8. '<|end|>' → logprob: -6.973554611206055
    9. '``' → logprob: -7.973554611206055
    10. '   
' → logprob: -7.973554611206055

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035909254103899
    2. 'return' → logprob: -3.7859091758728027
    3. '```' → logprob: -4.910909175872803
    4. '
' → logprob: -5.660909175872803
    5. ' return' → logprob: -7.035909175872803
    6. '    
' → logprob: -7.785909175872803
    7. '  
' → logprob: -9.160909652709961
    8. '``' → logprob: -9.535909652709961
    9. '	return' → logprob: -9.660909652709961
    10. ':return' → logprob: -10.285909652709961

Token 60: ' return' (ID: 622)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1271485835313797
    2. 'return' (adapté à ' return') → logprob: -2.1271486282348633
    3. 'n' → logprob: -9.127148628234863
    4. '   ' → logprob: -9.377148628234863
    5. ' return' → logprob: -10.752148628234863
    6. ' x' → logprob: -13.627148628234863
    7. '```' → logprob: -13.627148628234863
    8. '    
' → logprob: -14.002148628234863
    9. ':return' → logprob: -14.252148628234863
    10. '1' → logprob: -14.377148628234863

Token 61: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0040801819413900375
    2. ' x' → logprob: -5.504080295562744
    3. '1' → logprob: -13.254079818725586
    4. 'n' → logprob: -18.879079818725586
    5. '	x' → logprob: -19.129079818725586
    6. ' ' → logprob: -19.629079818725586
    7. '$x' → logprob: -20.754079818725586
    8. '>x' → logprob: -20.754079818725586
    9. ')x' → logprob: -21.504079818725586
    10. '{x' → logprob: -21.629079818725586

Token 62: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25731220841407776
    2. 'for' → logprob: -2.257312297821045
    3. 'print' → logprob: -2.882312297821045
    4. 'result' → logprob: -3.007312297821045
    5. '
' → logprob: -5.132312297821045
    6. '```' → logprob: -5.382312297821045
    7. ' if' → logprob: -5.882312297821045
    8. 'n' → logprob: -7.382312297821045
    9. ' for' → logprob: -7.757312297821045
    10. 'def' → logprob: -8.007311820983887

Token 63: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.003157138824463
    2. 'print' → logprob: -1.253157138824463
    3. 'result' → logprob: -1.503157138824463
    4. 'for' → logprob: -2.378157138824463
    5. '
' → logprob: -4.253157138824463
    6. '```' → logprob: -5.503157138824463
    7. 'n' → logprob: -5.878157138824463
    8. 'res' → logprob: -6.128157138824463
    9. 'answer' → logprob: -6.753157138824463
    10. 's' → logprob: -6.878157138824463

Token 64: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39107638597488403
    2. '\n' → logprob: -1.6410763263702393
    3. '
' → logprob: -3.7660763263702393
    4. ' 

' → logprob: -3.8910763263702393
    5. '```' → logprob: -4.266076564788818
    6. ' n' → logprob: -4.391076564788818
    7. '\' → logprob: -4.516076564788818
    8. '

' → logprob: -4.766076564788818
    9. '(n' → logprob: -4.891076564788818
    10. 'def' → logprob: -5.016076564788818

Token 65: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.41031259298324585
    2. '<|end|>' → logprob: -1.4103126525878906
    3. ' is' → logprob: -2.4103126525878906
    4. '<|end|>' → logprob: -6.285312652587891
    5. '```' → logprob: -8.28531265258789
    6. ' ' → logprob: -8.41031265258789
    7. 'def' → logprob: -9.41031265258789
    8. '#' → logprob: -9.91031265258789
    9. ' itself' → logprob: -10.53531265258789
    10. '.' → logprob: -10.78531265258789

Token 66: ' prime' (ID: 9197)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.4359265863895416
    2. ' prime' → logprob: -1.1859265565872192
    3. 'a' → logprob: -3.435926675796509
    4. ' a' → logprob: -4.18592643737793
    5. '_prime' → logprob: -8.43592643737793
    6. '1' → logprob: -9.31092643737793
    7. '<|end|>' → logprob: -9.68592643737793
    8. ' ' → logprob: -9.93592643737793
    9. ' itself' → logprob: -11.18592643737793
    10. 'pr' → logprob: -11.68592643737793

Token 67: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33213159441947937
    2. 'if' → logprob: -1.8321316242218018
    3. '
' → logprob: -3.0821316242218018
    4. 'result' → logprob: -3.7071316242218018
    5. 'print' → logprob: -4.332131385803223
    6. '```' → logprob: -4.332131385803223
    7. 'n' → logprob: -5.082131385803223
    8. '<|end|>' → logprob: -5.832131385803223
    9. 'i' → logprob: -6.332131385803223
    10. '    
' → logprob: -6.332131385803223

Token 68: 'start' (ID: 5236)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3294476270675659
    2. 'for' → logprob: -1.704447627067566
    3. 'print' → logprob: -2.7044477462768555
    4. 'result' → logprob: -3.9544477462768555
    5. 'd' → logprob: -5.2044477462768555
    6. 'div' → logprob: -5.7044477462768555
    7. 'answer' → logprob: -6.7044477462768555
    8. 'res' → logprob: -7.7044477462768555
    9. 'while' → logprob: -7.7044477462768555
    10. '```' → logprob: -7.7044477462768555

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.264665812253952
    2. ' =' → logprob: -1.5146658420562744
    3. '_' → logprob: -4.889665603637695
    4. ':' → logprob: -6.514665603637695
    5. '_token' → logprob: -7.514665603637695
    6. 'from' → logprob: -7.764665603637695
    7. 's' → logprob: -7.764665603637695
    8. ' ' → logprob: -7.889665603637695
    9. ',' → logprob: -8.514665603637695
    10. 'ing' → logprob: -8.764665603637695

Token 70: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7044205665588379
    2. ' ' → logprob: -0.7044205665588379
    3. ' n' → logprob: -4.704420566558838
    4. '1' → logprob: -6.829420566558838
    5. 'n' → logprob: -6.954420566558838
    6. ' max' → logprob: -10.07942008972168
    7. '3' → logprob: -10.45442008972168
    8. '10' → logprob: -10.95442008972168
    9. 'max' → logprob: -11.45442008972168
    10. '0' → logprob: -12.32942008972168

Token 71: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006755394395440817
    2. 'n' → logprob: -5.131755352020264
    3. '1' → logprob: -7.506755352020264
    4. '3' → logprob: -8.506755828857422
    5. '10' → logprob: -10.631755828857422
    6. ' ' → logprob: -11.381755828857422
    7. 'max' → logprob: -11.881755828857422
    8. '4' → logprob: -12.131755828857422
    9. '999' → logprob: -12.381755828857422
    10. '11' → logprob: -12.756755828857422

Token 72: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09368486702442169
    2. '<|end|>' → logprob: -2.5936849117279053
    3. '```' → logprob: -5.093684673309326
    4. ' 
' → logprob: -6.343684673309326
    5. '  
' → logprob: -6.468684673309326
    6. '

' → logprob: -6.718684673309326
    7. 'while' → logprob: -6.843684673309326
    8. ' while' → logprob: -7.343684673309326
    9. '<|end|>' → logprob: -7.718684673309326
    10. '*' → logprob: -7.968684673309326

Token 73: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0574769973754883
    2. 'while' → logprob: -1.4324769973754883
    3. '<|end|>' → logprob: -2.1824769973754883
    4. '*' → logprob: -2.3074769973754883
    5. 'for' → logprob: -2.8074769973754883
    6. '+' → logprob: -3.1824769973754883
    7. ' while' → logprob: -3.3074769973754883
    8. '**' → logprob: -3.8074769973754883
    9. '```' → logprob: -4.182476997375488
    10. 'end' → logprob: -5.307476997375488

Token 74: ' True' (ID: 6432)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.03010416030883789
    2. 'start' → logprob: -3.530104160308838
    3. ' ' → logprob: -8.28010368347168
    4. '(start' → logprob: -9.65510368347168
    5. ' ' → logprob: -11.65510368347168
    6. 'n' → logprob: -12.15510368347168
    7. '	start' → logprob: -12.15510368347168
    8. ' n' → logprob: -12.53010368347168
    9. ' (' → logprob: -13.28010368347168
    10. '[start' → logprob: -13.40510368347168

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027897433028556406
    2. ' :' → logprob: -8.250279426574707
    3. ':
' → logprob: -11.125279426574707
    4. ':**' → logprob: -14.125279426574707
    5. '<|end|>' → logprob: -14.500279426574707
    6. '):' → logprob: -14.625279426574707
    7. '   ' → logprob: -15.500279426574707
    8. '():' → logprob: -15.500279426574707
    9. '>:' → logprob: -16.00027847290039
    10. ':

' → logprob: -16.12527847290039

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023519039154052734
    2. ' if' → logprob: -4.023519039154053
    3. '    
' → logprob: -6.523519039154053
    4. ' n' → logprob: -6.648519039154053
    5. '```' → logprob: -7.273519039154053
    6. '<|end|>' → logprob: -8.023519515991211
    7. ' x' → logprob: -8.148519515991211
    8. 'n' → logprob: -8.398519515991211
    9. ' start' → logprob: -8.648519515991211
    10. 'if' → logprob: -8.773519515991211

Token 77: ' found' (ID: 2491)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4390893876552582
    2. ' n' → logprob: -1.8140894174575806
    3. 'if' → logprob: -2.314089298248291
    4. 'n' → logprob: -3.564089298248291
    5. ' start' → logprob: -3.814089298248291
    6. ' smallest' → logprob: -4.064089298248291
    7. 'start' → logprob: -4.939089298248291
    8. '   ' → logprob: -4.939089298248291
    9. ' x' → logprob: -5.189089298248291
    10. 'x' → logprob: -6.689089298248291

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44948485493659973
    2. '_div' → logprob: -1.5744848251342773
    3. '_' → logprob: -2.0744848251342773
    4. '=' → logprob: -3.6994848251342773
    5. '_factor' → logprob: -5.949484825134277
    6. ' ' → logprob: -7.699484825134277
    7. '_=' → logprob: -8.324484825134277
    8. '_d' → logprob: -8.574484825134277
    9. 'div' → logprob: -8.574484825134277
    10. '_found' → logprob: -8.699484825134277

Token 79: ' True' (ID: 6432)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.06253267824649811
    2. 'False' → logprob: -2.812532663345337
    3. ' True' → logprob: -8.062532424926758
    4. ' smallest' → logprob: -8.562532424926758
    5. ' ' → logprob: -11.062532424926758
    6. 'True' → logprob: -11.812532424926758
    7. '(False' → logprob: -11.937532424926758
    8. ' start' → logprob: -12.062532424926758
    9. ' small' → logprob: -12.312532424926758
    10. ' None' → logprob: -12.687532424926758

Token 80: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4549887776374817
    2. '<|end|>' → logprob: -1.204988718032837
    3. '   ' → logprob: -3.204988718032837
    4. '
' → logprob: -4.954988956451416
    5. '<|end|>' → logprob: -5.204988956451416
    6. '    
' → logprob: -5.579988956451416
    7. ' 
' → logprob: -6.204988956451416
    8. '  
' → logprob: -6.454988956451416
    9. '```' → logprob: -6.579988956451416
    10. '\' → logprob: -7.704988956451416

Token 81: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' divis' (ID: 37826)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.13593940436840057
    2. 'for' → logprob: -2.135939359664917
    3. '
' → logprob: -5.385939598083496
    4. '   ' → logprob: -5.885939598083496
    5. ' 
' → logprob: -7.135939598083496
    6. '    
' → logprob: -8.385939598083496
    7. '<|end|>' → logprob: -8.635939598083496
    8. 'n' → logprob: -9.135939598083496
    9. '	for' → logprob: -9.635939598083496
    10. ' ' → logprob: -9.760939598083496

Token 83: 'ors' (ID: 914)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.3135853111743927
    2. 'ors' → logprob: -1.3135852813720703
    3. 'o' → logprob: -8.81358528137207
    4. ' or' → logprob: -9.68858528137207
    5. '=' → logprob: -10.56358528137207
    6. ' =' → logprob: -10.81358528137207
    7. '   ' → logprob: -11.06358528137207
    8. 'iors' → logprob: -11.56358528137207
    9. '	or' → logprob: -12.31358528137207
    10. '[' → logprob: -12.68858528137207

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005508137866854668
    2. '=' → logprob: -5.255507946014404
    3. ' ' → logprob: -9.130508422851562
    4. '[' → logprob: -9.130508422851562
    5. '[]' → logprob: -11.005508422851562
    6. '=[]' → logprob: -11.630508422851562
    7. 's' → logprob: -11.630508422851562
    8. ' =[' → logprob: -12.380508422851562
    9. '[:]' → logprob: -12.505508422851562
    10. '   ' → logprob: -12.630508422851562

Token 85: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0869293063879013
    2. '[]' → logprob: -3.0869293212890625
    3. ' [' → logprob: -3.4619293212890625
    4. '[' → logprob: -5.0869293212890625
    5. ' ' → logprob: -10.586929321289062
    6. ' ['' → logprob: -12.086929321289062
    7. ' []
' → logprob: -12.211929321289062
    8. '['' → logprob: -12.211929321289062
    9. '[:]' → logprob: -12.211929321289062
    10. ' [
' → logprob: -12.836929321289062

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09584905952215195
    2. '
' → logprob: -3.34584903717041
    3. ' for' → logprob: -3.84584903717041
    4. '    
' → logprob: -3.97084903717041
    5. '<|end|>' → logprob: -4.72084903717041
    6. ' 
' → logprob: -5.59584903717041
    7. '   
' → logprob: -7.09584903717041
    8. '  
' → logprob: -7.22084903717041
    9. 'for' → logprob: -7.47084903717041
    10. '    ' → logprob: -7.84584903717041

Token 87: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8391583561897278
    2. '   ' → logprob: -1.089158296585083
    3. 'for' (adapté à ' for') → logprob: -1.464158296585083
    4. '    ' → logprob: -10.089158058166504
    5. '	for' → logprob: -10.339158058166504
    6. ' ' → logprob: -10.339158058166504
    7. '    
' → logprob: -10.714158058166504
    8. '  ' → logprob: -11.339158058166504
    9. '[' → logprob: -13.089158058166504
    10. 'tokens' → logprob: -13.589158058166504

Token 88: ' num' (ID: 2269)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.28068479895591736
    2. ' num' → logprob: -2.15568470954895
    3. ' number' → logprob: -3.28068470954895
    4. ' _' → logprob: -3.28068470954895
    5. 'i' → logprob: -4.405684947967529
    6. ' j' → logprob: -5.155684947967529
    7. ' ' → logprob: -5.280684947967529
    8. '_' → logprob: -5.405684947967529
    9. 'num' → logprob: -5.405684947967529
    10. ' b' → logprob: -5.780684947967529

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04342776909470558
    2. 'in' → logprob: -3.1684277057647705
    3. ' ' → logprob: -8.543427467346191
    4. 's' → logprob: -9.293427467346191
    5. '	in' → logprob: -10.043427467346191
    6. '_in' → logprob: -10.293427467346191
    7. 'range' → logprob: -11.543427467346191
    8. 'In' → logprob: -11.793427467346191
    9. '```' → logprob: -12.043427467346191
    10. '   ' → logprob: -12.105927467346191

Token 90: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.054980333894491196
    2. 'range' → logprob: -2.9299802780151367
    3. '[' → logprob: -10.179980278015137
    4. ' ' → logprob: -11.179980278015137
    5. '(range' → logprob: -11.304980278015137
    6. '	range' → logprob: -11.554980278015137
    7. '   ' → logprob: -11.679980278015137
    8. ' [' → logprob: -12.304980278015137
    9. '  ' → logprob: -13.054980278015137
    10. ' list' → logprob: -13.867480278015137

Token 91: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.01129007339477539
    2. '(' → logprob: -4.511290073394775
    3. '(n' → logprob: -8.636289596557617
    4. ' (' → logprob: -10.261289596557617
    5. 'start' → logprob: -11.261289596557617
    6. '(s' → logprob: -12.511289596557617
    7. '   ' → logprob: -12.636289596557617
    8. ' start' → logprob: -13.511289596557617
    9. '(
' → logprob: -13.636289596557617
    10. '[start' → logprob: -13.761289596557617

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004450889769941568
    2. ' ,' → logprob: -5.629450798034668
    3. ',start' → logprob: -7.504450798034668
    4. '   ' → logprob: -9.004450798034668
    5. 'start' → logprob: -9.504450798034668
    6. '+' → logprob: -10.129450798034668
    7. ' +' → logprob: -10.629450798034668
    8. ' ' → logprob: -11.629450798034668
    9. '```' → logprob: -12.504450798034668
    10. '  ' → logprob: -12.504450798034668

Token 93: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5769518613815308
    2. ' start' → logprob: -0.8269518613815308
    3. ' ' → logprob: -8.07695198059082
    4. '   ' → logprob: -8.32695198059082
    5. 'n' → logprob: -9.07695198059082
    6. '	start' → logprob: -9.70195198059082
    7. '    ' → logprob: -9.70195198059082
    8. ' n' → logprob: -9.70195198059082
    9. '  ' → logprob: -9.95195198059082
    10. '[start' → logprob: -10.57695198059082

Token 94: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.32802873849868774
    2. '+' → logprob: -1.703028678894043
    3. '+n' → logprob: -2.328028678894043
    4. ' ' → logprob: -10.453028678894043
    5. ' ' → logprob: -12.578028678894043
    6. ' n' → logprob: -14.015528678894043
    7. '   ' → logprob: -14.140528678894043
    8. 'n' → logprob: -14.453028678894043
    9. '<n' → logprob: -14.578028678894043
    10. '＋' → logprob: -14.640528678894043

Token 95: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5252643823623657
    2. '11' → logprob: -1.9002643823623657
    3. ' n' → logprob: -2.150264263153076
    4. '10' → logprob: -2.400264263153076
    5. '3' → logprob: -3.150264263153076
    6. ' ' → logprob: -5.775264263153076
    7. '5' → logprob: -6.150264263153076
    8. '4' → logprob: -7.275264263153076
    9. '7' → logprob: -7.525264263153076
    10. '15' → logprob: -7.650264263153076

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08029640465974808
    2. '):
' → logprob: -2.580296516418457
    3. '):
' → logprob: -7.080296516418457
    4. '+' → logprob: -7.830296516418457
    5. ' ):' → logprob: -9.455296516418457
    6. ')' → logprob: -11.205296516418457
    7. '   ' → logprob: -11.455296516418457
    8. ' +' → logprob: -11.455296516418457
    9. ' ):
' → logprob: -11.705296516418457
    10. ':' → logprob: -11.830296516418457

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003653052495792508
    2. ':' → logprob: -6.378653049468994
    3. '<|end|>' → logprob: -7.503653049468994
    4. '   ' → logprob: -7.753653049468994
    5. ' ' → logprob: -8.128653526306152
    6. ',' → logprob: -8.878653526306152
    7. '    ' → logprob: -9.253653526306152
    8. ' if' → logprob: -9.378653526306152
    9. '        
' → logprob: -9.378653526306152
    10. ':
' → logprob: -9.878653526306152

Token 98: ' d' (ID: 272)
  Prédit: ' div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' div' → logprob: -1.469516396522522
    2. '       ' → logprob: -1.594516396522522
    3. ' d' → logprob: -1.719516396522522
    4. ' if' → logprob: -1.844516396522522
    5. ' divis' → logprob: -2.4695162773132324
    6. '<|end|>' → logprob: -3.3445162773132324
    7. ' ' → logprob: -3.4695162773132324
    8. '           ' → logprob: -3.4695162773132324
    9. 'div' → logprob: -5.094516277313232
    10. '   ' → logprob: -5.219516277313232

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02420475147664547
    2. '=' → logprob: -3.774204730987549
    3. 'iv' → logprob: -7.024204730987549
    4. ' ' → logprob: -10.024205207824707
    5. 'ivid' → logprob: -11.274205207824707
    6. 'ivi' → logprob: -12.774205207824707
    7. '   ' → logprob: -13.524205207824707
    8. 'ivs' → logprob: -13.774205207824707
    9. '  ' → logprob: -14.149205207824707
    10. '	' → logprob: -14.399205207824707

Token 100: ' smallest' (ID: 42173)
  Prédit: ' smallest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' smallest' → logprob: -0.05575339123606682
    2. 'small' → logprob: -2.930753469467163
    3. ' small' → logprob: -7.055753231048584
    4. ' ' → logprob: -12.805753707885742
    5. 's' → logprob: -13.180753707885742
    6. 'sm' → logprob: -13.430753707885742
    7. '.small' → logprob: -14.555753707885742
    8. 'd' → logprob: -15.055753707885742
    9. '_small' → logprob: -15.305753707885742
    10. 'n' → logprob: -16.055753707885742

Token 101: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.750004768371582
    3. '_dist' → logprob: -14.750004768371582
    4. 'div' → logprob: -14.875004768371582
    5. '_d' → logprob: -14.875004768371582
    6. '_def' → logprob: -15.750004768371582
    7. '_DIV' → logprob: -15.875004768371582
    8. ' _' → logprob: -16.000003814697266
    9. '<div' → logprob: -17.125003814697266
    10. '_del' → logprob: -17.750003814697266

Token 102: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.011387081816792488
    2. 'is' → logprob: -4.636386871337891
    3. 'or' → logprob: -7.386386871337891
    4. 's' → logprob: -8.26138687133789
    5. 'visor' → logprob: -8.51138687133789
    6. 'esor' → logprob: -9.38638687133789
    7. ' divisor' → logprob: -9.38638687133789
    8. 'os' → logprob: -10.01138687133789
    9. 'isible' → logprob: -10.13638687133789
    10. 'issor' → logprob: -10.26138687133789

Token 103: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -1.6047699318733066e-05
    2. '(' → logprob: -11.375016212463379
    3. ' (' → logprob: -12.500016212463379
    4. '(nums' → logprob: -15.500016212463379
    5. 'num' → logprob: -15.750016212463379
    6. ' num' → logprob: -16.125015258789062
    7. '(n' → logprob: -16.125015258789062
    8. '(d' → logprob: -16.500015258789062
    9. ',num' → logprob: -16.875015258789062
    10. '<num' → logprob: -17.375015258789062

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1453099101781845
    2. ')
' → logprob: -2.0203099250793457
    3. '       ' → logprob: -6.145309925079346
    4. ')
' → logprob: -7.770309925079346
    5. '   ' → logprob: -10.520309448242188
    6. ')`
' → logprob: -11.020309448242188
    7. ' ' → logprob: -12.395309448242188
    8. ')

' → logprob: -12.645309448242188
    9. ')`' → logprob: -12.645309448242188
    10. '):
' → logprob: -13.270309448242188

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028386167832650244
    2. ' if' → logprob: -8.375284194946289
    3. '<|end|>' → logprob: -10.125284194946289
    4. 'div' → logprob: -12.750284194946289
    5. '   ' → logprob: -12.875284194946289
    6. 'if' → logprob: -13.375284194946289
    7. '```' → logprob: -13.750284194946289
    8. ',' → logprob: -14.000284194946289
    9. ' divis' → logprob: -14.125284194946289
    10. ' ' → logprob: -14.250284194946289

Token 106: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11292463541030884
    2. ' if' → logprob: -2.487924575805664
    3. 'if' (adapté à ' if') → logprob: -3.862924575805664
    4. ' divis' → logprob: -6.362924575805664
    5. 'div' → logprob: -7.362924575805664
    6. ' ' → logprob: -8.987924575805664
    7. '   ' → logprob: -8.987924575805664
    8. ' div' → logprob: -10.862924575805664
    9. '	div' → logprob: -11.237924575805664
    10. 'd' → logprob: -11.237924575805664

Token 107: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0036024407017976046
    2. 'd' → logprob: -5.628602504730225
    3. ' ' → logprob: -13.628602027893066
    4. '	d' → logprob: -14.003602027893066
    5. '>d' → logprob: -16.253602981567383
    6. ' not' → logprob: -16.503602981567383
    7. ' ' → logprob: -16.628602981567383
    8. '   ' → logprob: -17.628602981567383
    9. ')d' → logprob: -17.628602981567383
    10. '(d' → logprob: -18.191102981567383

Token 108: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18011753261089325
    2. '==' → logprob: -1.8051174879074097
    3. ' >=' → logprob: -9.3051176071167
    4. '=' → logprob: -9.6801176071167
    5. ' !=' → logprob: -9.9301176071167
    6. ')' → logprob: -10.1801176071167
    7. ' >' → logprob: -10.5551176071167
    8. '>=' → logprob: -10.6801176071167
    9. ' ' → logprob: -10.8051176071167
    10. '>' → logprob: -11.1801176071167

Token 109: ' ' (ID: 220)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.02798568457365036
    2. ' num' → logprob: -4.027985572814941
    3. '1' → logprob: -4.652985572814941
    4. ' ' → logprob: -8.402985572814941
    5. '	num' → logprob: -11.777985572814941
    6. '<num' → logprob: -11.902985572814941
    7. '$num' → logprob: -12.277985572814941
    8. '=num' → logprob: -12.652985572814941
    9. '(num' → logprob: -13.152985572814941
    10. '[num' → logprob: -13.527985572814941

Token 110: '1' (ID: 16)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0005250345566309988
    2. ' num' → logprob: -7.875524997711182
    3. '1' → logprob: -8.87552547454834
    4. ' ' → logprob: -12.87552547454834
    5. 'n' → logprob: -14.12552547454834
    6. 'nu' → logprob: -14.62552547454834
    7. '	num' → logprob: -14.75052547454834
    8. '<num' → logprob: -15.25052547454834
    9. '$num' → logprob: -15.75052547454834
    10. '2' → logprob: -15.87552547454834

Token 111: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.10056916624307632
    2. ':' → logprob: -2.350569248199463
    3. ':
' → logprob: -8.975568771362305
    4. '<|end|>' → logprob: -10.100568771362305
    5. ':return' → logprob: -10.100568771362305
    6. '0' → logprob: -10.225568771362305
    7. ' and' → logprob: -10.350568771362305
    8. ' :' → logprob: -10.600568771362305
    9. 'or' → logprob: -10.725568771362305
    10. ' ' → logprob: -10.850568771362305

Token 112: ' d' (ID: 272)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.14407210052013397
    2. 'd' → logprob: -2.0190720558166504
    3. ' num' → logprob: -6.64407205581665
    4. ' d' → logprob: -9.519072532653809
    5. '1' → logprob: -12.019072532653809
    6. '<num' → logprob: -12.144072532653809
    7. '(num' → logprob: -13.269072532653809
    8. '=num' → logprob: -13.519072532653809
    9. '	num' → logprob: -13.644072532653809
    10. ' ' → logprob: -14.019072532653809

Token 113: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07059426605701447
    2. '==' → logprob: -2.695594310760498
    3. 'num' → logprob: -8.57059383392334
    4. ' ' → logprob: -8.69559383392334
    5. '=' → logprob: -9.32059383392334
    6. ' is' → logprob: -9.57059383392334
    7. 'd' → logprob: -9.82059383392334
    8. 'is' → logprob: -11.44559383392334
    9. ' =' → logprob: -11.69559383392334
    10. '>' → logprob: -11.69559383392334

Token 114: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.002310599898919463
    2. ' num' → logprob: -6.127310752868652
    3. '1' → logprob: -9.252310752868652
    4. 'n' → logprob: -11.627310752868652
    5. '	num' → logprob: -12.627310752868652
    6. ' ' → logprob: -12.752310752868652
    7. '0' → logprob: -12.877310752868652
    8. '2' → logprob: -12.877310752868652
    9. '<num' → logprob: -13.252310752868652
    10. '10' → logprob: -13.627310752868652

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05725076049566269
    2. ':
' → logprob: -2.932250738143921
    3. '       ' → logprob: -6.4322509765625
    4. ' :' → logprob: -8.6822509765625
    5. '):
' → logprob: -8.8072509765625
    6. ' :
' → logprob: -9.4322509765625
    7. '   ' → logprob: -9.4322509765625
    8. ' or' → logprob: -9.5572509765625
    9. '):' → logprob: -9.5572509765625
    10. ':return' → logprob: -10.3072509765625

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09502357989549637
    2. '       ' → logprob: -3.2200236320495605
    3. ' found' → logprob: -3.7200236320495605
    4. 'found' → logprob: -3.8450236320495605
    5. 'Found' → logprob: -6.0950236320495605
    6. '(found' → logprob: -6.4700236320495605
    7. '	found' → logprob: -7.9700236320495605
    8. '```' → logprob: -8.595023155212402
    9. '_found' → logprob: -8.720023155212402
    10. '<|end|>' → logprob: -8.845023155212402

Token 117: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.20871883630752563
    2. ' found' → logprob: -1.7087187767028809
    3. '       ' → logprob: -5.083718776702881
    4. '	found' → logprob: -7.333718776702881
    5. '           ' → logprob: -7.958718776702881
    6. '   ' → logprob: -10.208719253540039
    7. 'Found' → logprob: -10.708719253540039
    8. '(found' → logprob: -11.958719253540039
    9. 'break' → logprob: -12.833719253540039
    10. '_found' → logprob: -12.833719253540039

Token 118: ' number' (ID: 2086)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.061984602361917496
    2. ' found' → logprob: -2.8119845390319824
    3. '	found' → logprob: -12.18698501586914
    4. '   ' → logprob: -12.31198501586914
    5. '
' → logprob: -12.68698501586914
    6. '           ' → logprob: -13.56198501586914
    7. '       ' → logprob: -13.93698501586914
    8. 'Found' → logprob: -14.06198501586914
    9. '(found' → logprob: -14.93698501586914
    10. 'break' → logprob: -15.06198501586914

Token 119: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8555935621261597
    2. '           ' → logprob: -1.7305935621261597
    3. '       ' → logprob: -1.9805935621261597
    4. ' found' → logprob: -2.230593681335449
    5. 'found' → logprob: -3.230593681335449
    6. 'is' → logprob: -3.855593681335449
    7. '   ' → logprob: -3.980593681335449
    8. ' ' → logprob: -4.355593681335449
    9. ' not' → logprob: -4.355593681335449
    10. ' =' → logprob: -4.605593681335449

Token 120: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.5759899020195007
    2. 'prime' → logprob: -0.8259899020195007
    3. '_prime' → logprob: -10.700989723205566
    4. '   ' → logprob: -11.575989723205566
    5. ' a' → logprob: -12.450989723205566
    6. 'not' → logprob: -12.700989723205566
    7. ' not' → logprob: -13.075989723205566
    8. ' ' → logprob: -13.200989723205566
    9. 'a' → logprob: -13.700989723205566
    10. '
' → logprob: -13.825989723205566

Token 121: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11545968800783157
    2. '       ' → logprob: -2.490459680557251
    3. ' found' → logprob: -4.11545991897583
    4. 'found' → logprob: -4.86545991897583
    5. '(found' → logprob: -7.49045991897583
    6. '               ' → logprob: -7.86545991897583
    7. ' or' → logprob: -8.365459442138672
    8. '
' → logprob: -8.740459442138672
    9. ',' → logprob: -8.865459442138672
    10. 'Found' → logprob: -9.115459442138672

Token 122: ' ' (ID: 220)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.0159260034561157
    2. ' ' → logprob: -1.3909260034561157
    3. '1' → logprob: -2.640925884246826
    4. '   ' → logprob: -2.765925884246826
    5. ' has' → logprob: -2.890925884246826
    6. 'com' → logprob: -3.140925884246826
    7. 'not' → logprob: -3.265925884246826
    8. ' composite' → logprob: -3.390925884246826
    9. 'div' → logprob: -3.640925884246826
    10. 'has' → logprob: -5.015925884246826

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9294915199279785
    2. 'com' → logprob: -1.8044915199279785
    3. 'not' → logprob: -1.9294915199279785
    4. 'div' → logprob: -2.6794915199279785
    5. ' ' → logprob: -3.4294915199279785
    6. ' not' → logprob: -3.5544915199279785
    7. 'x' → logprob: -3.5544915199279785
    8. '#' → logprob: -3.9294915199279785
    9. 'prime' → logprob: -3.9294915199279785
    10. 'has' → logprob: -4.1794915199279785

Token 124: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20432548224925995
    2. '       ' → logprob: -1.7043254375457764
    3. ',' → logprob: -7.0793256759643555
    4. ' found' → logprob: -7.4543256759643555
    5. '               ' → logprob: -7.5793256759643555
    6. ':' → logprob: -8.204325675964355
    7. '```' → logprob: -9.079325675964355
    8. '
' → logprob: -9.329325675964355
    9. '(found' → logprob: -9.329325675964355
    10. 'found' → logprob: -9.454325675964355

Token 125: ' no' (ID: 860)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.3559594750404358
    2. '           ' → logprob: -2.230959415435791
    3. 'found' → logprob: -2.230959415435791
    4. '       ' → logprob: -2.480959415435791
    5. 'Found' → logprob: -8.35595989227295
    6. '	found' → logprob: -8.48095989227295
    7. '(found' → logprob: -8.85595989227295
    8. '
' → logprob: -9.10595989227295
    9. '               ' → logprob: -9.10595989227295
    10. '        
' → logprob: -9.73095989227295

Token 126: ' divisor' (ID: 100482)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.31203484535217285
    2. 'found' → logprob: -1.5620348453521729
    3. '       ' → logprob: -4.062034606933594
    4. '
' → logprob: -4.312034606933594
    5. ' found' → logprob: -4.812034606933594
    6. 'div' → logprob: -5.437034606933594
    7. '<|end|>' → logprob: -5.937034606933594
    8. '   ' → logprob: -5.937034606933594
    9. '           ' → logprob: -6.187034606933594
    10. '_found' → logprob: -6.812034606933594

Token 127: ' other' (ID: 1273)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11695345491170883
    2. '       ' → logprob: -2.4919533729553223
    3. ' found' → logprob: -4.366953372955322
    4. '
' → logprob: -5.616953372955322
    5. ',' → logprob: -5.991953372955322
    6. '               ' → logprob: -6.241953372955322
    7. 'found' → logprob: -6.491953372955322
    8. ')' → logprob: -6.616953372955322
    9. '        
' → logprob: -7.116953372955322
    10. '<|end|>' → logprob: -7.616953372955322

Token 128: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.34976115822792053
    2. ' than' → logprob: -1.2247611284255981
    3. 'wise' → logprob: -7.099761009216309
    4. '_than' → logprob: -8.224761009216309
    5. '       ' → logprob: -9.224761009216309
    6. '   ' → logprob: -9.724761009216309
    7. '    ' → logprob: -11.099761009216309
    8. 'Than' → logprob: -11.849761009216309
    9. '           ' → logprob: -11.849761009216309
    10. 'that' → logprob: -12.099761009216309

Token 129: ' ' (ID: 220)
  Prédit: ' itself'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.03554369881749153
    2. 'it' → logprob: -3.41054368019104
    3. '1' → logprob: -7.035543918609619
    4. 'num' → logprob: -7.410543918609619
    5. 'the' → logprob: -8.285543441772461
    6. ' the' → logprob: -9.535543441772461
    7. ' itse' → logprob: -10.410543441772461
    8. ' ' → logprob: -10.660543441772461
    9. ' it' → logprob: -11.535543441772461
    10. 'self' → logprob: -11.785543441772461

Token 130: '1' (ID: 16)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.09306616336107254
    2. ' itself' → logprob: -2.5930662155151367
    3. 'the' → logprob: -4.468066215515137
    4. 'num' → logprob: -6.093066215515137
    5. 'its' → logprob: -8.843066215515137
    6. 'number' → logprob: -9.093066215515137
    7. ' itse' → logprob: -9.968066215515137
    8. 'self' → logprob: -10.718066215515137
    9. ' the' → logprob: -11.593066215515137
    10. '1' → logprob: -12.218066215515137

Token 131: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5720908045768738
    2. '           ' → logprob: -0.9470908045768738
    3. ':' → logprob: -3.6970908641815186
    4. ',' → logprob: -4.1970906257629395
    5. ' or' → logprob: -6.1970906257629395
    6. ':
' → logprob: -6.4470906257629395
    7. '               ' → logprob: -6.8220906257629395
    8. '
' → logprob: -7.5720906257629395
    9. '):' → logprob: -7.8220906257629395
    10. '        
' → logprob: -7.8220906257629395

Token 132: ' itself' (ID: 8807)
  Prédit: ' itself'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itself' → logprob: -0.11850213259458542
    2. 'it' → logprob: -2.243502140045166
    3. 'the' → logprob: -5.743502140045166
    4. 'num' → logprob: -6.118502140045166
    5. ' the' → logprob: -8.993501663208008
    6. 'self' → logprob: -9.743501663208008
    7. 'number' → logprob: -10.118501663208008
    8. ' it' → logprob: -11.368501663208008
    9. ' itse' → logprob: -11.743501663208008
    10. ' num' → logprob: -11.993501663208008

Token 133: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11064451187849045
    2. '       ' → logprob: -2.360644578933716
    3. ' found' → logprob: -4.860644340515137
    4. 'found' → logprob: -7.110644340515137
    5. ',' → logprob: -7.735644340515137
    6. '(found' → logprob: -7.860644340515137
    7. '<|end|>' → logprob: -8.360644340515137
    8. '               ' → logprob: -8.360644340515137
    9. ':
' → logprob: -9.485644340515137
    10. '):
' → logprob: -9.610644340515137

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16079014539718628
    2. '       ' → logprob: -1.910790205001831
    3. ' found' → logprob: -8.16079044342041
    4. ',' → logprob: -9.41079044342041
    5. 'found' → logprob: -9.53579044342041
    6. '               ' → logprob: -10.28579044342041
    7. '<|end|>' → logprob: -10.78579044342041
    8. '(found' → logprob: -10.91079044342041
    9. '        
' → logprob: -11.53579044342041
    10. '   ' → logprob: -11.78579044342041

Token 135: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0040862360037863255
    2. ' found' → logprob: -5.504086017608643
    3. '       ' → logprob: -12.5040864944458
    4. '           ' → logprob: -13.0040864944458
    5. '	found' → logprob: -13.7540864944458
    6. '   ' → logprob: -14.5040864944458
    7. '
' → logprob: -15.2540864944458
    8. '(found' → logprob: -18.004085540771484
    9. 'Found' → logprob: -18.129085540771484
    10. ' ' → logprob: -19.004085540771484

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0307041946798563
    2. '=' → logprob: -3.5307042598724365
    3. '=False' → logprob: -7.030704021453857
    4. ' ' → logprob: -10.280704498291016
    5. ' False' → logprob: -10.530704498291016
    6. 'False' → logprob: -12.280704498291016
    7. '(False' → logprob: -14.280704498291016
    8. '   ' → logprob: -14.655704498291016
    9. '    ' → logprob: -14.655704498291016
    10. ' ==' → logprob: -14.905704498291016

Token 137: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005233763717114925
    2. ' False' → logprob: -5.2552337646484375
    3. '(False' → logprob: -18.255233764648438
    4. '=False' → logprob: -20.130233764648438
    5. 'false' → logprob: -22.255233764648438
    6. '_false' → logprob: -22.755233764648438
    7. 'F' → logprob: -22.880233764648438
    8. '   ' → logprob: -23.130233764648438
    9. '.False' → logprob: -23.130233764648438
    10. 'True' → logprob: -23.505233764648438

Token 138: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.635164754698053e-05
    2. '       ' → logprob: -9.750066757202148
    3. '               ' → logprob: -13.500066757202148
    4. '   ' → logprob: -13.500066757202148
    5. '            
' → logprob: -13.500066757202148
    6. '    
' → logprob: -13.625066757202148
    7. '<|end|>' → logprob: -13.875066757202148
    8. '        
' → logprob: -14.125066757202148
    9. '          ' → logprob: -15.375066757202148
    10. '
' → logprob: -15.875066757202148

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.729906196298543e-06
    2. '       ' → logprob: -11.875009536743164
    3. '   ' → logprob: -14.250009536743164
    4. '          ' → logprob: -14.750009536743164
    5. '<|end|>' → logprob: -14.875009536743164
    6. '	       ' → logprob: -15.125009536743164
    7. '               ' → logprob: -15.125009536743164
    8. ' break' → logprob: -15.625009536743164
    9. ',' → logprob: -16.000009536743164
    10. '            
' → logprob: -16.375009536743164

Token 140: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.041205812245607376
    2. ' break' → logprob: -3.541205883026123
    3. 'break' (adapté à ' break') → logprob: -4.541205883026123
    4. '       ' → logprob: -7.291205883026123
    5. '   ' → logprob: -10.541205406188965
    6. '	break' → logprob: -11.166205406188965
    7. '               ' → logprob: -12.791205406188965
    8. '	       ' → logprob: -13.791205406188965
    9. '          ' → logprob: -13.916205406188965
    10. '		' → logprob: -14.291205406188965

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002028923248872161
    2. '   ' → logprob: -6.752028942108154
    3. '<|end|>' → logprob: -7.377028942108154
    4. ')' → logprob: -9.627028465270996
    5. 'else' → logprob: -10.377028465270996
    6. ',' → logprob: -10.502028465270996
    7. '
' → logprob: -10.502028465270996
    8. ' else' → logprob: -10.752028465270996
    9. '<|end|>' → logprob: -11.627028465270996
    10. ' ' → logprob: -11.877028465270996

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001562119578011334
    2. '<|end|>' → logprob: -7.126562118530273
    3. ')' → logprob: -7.751562118530273
    4. '   ' → logprob: -8.751562118530273
    5. ',' → logprob: -9.626562118530273
    6. 'else' → logprob: -10.126562118530273
    7. ' else' → logprob: -11.501562118530273
    8. '<|end|>' → logprob: -11.626562118530273
    9. 's' → logprob: -12.001562118530273
    10. '```' → logprob: -12.001562118530273

Token 143: ' divis' (ID: 37826)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014770959503948689
    2. '   ' → logprob: -4.764770984649658
    3. 'div' → logprob: -5.139770984649658
    4. 'else' → logprob: -9.0147705078125
    5. '	div' → logprob: -9.0147705078125
    6. '           ' → logprob: -11.5147705078125
    7. ' divis' → logprob: -11.8897705078125
    8. '<|end|>' → logprob: -12.1397705078125
    9. ' else' → logprob: -12.3897705078125
    10. 'd' → logprob: -13.2647705078125

Token 144: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -9.014684110297821e-06
    2. 's' → logprob: -12.250008583068848
    3. 'tors' → logprob: -14.000008583068848
    4. '```' → logprob: -14.125008583068848
    5. 'iors' → logprob: -14.250008583068848
    6. '[' → logprob: -14.500008583068848
    7. 'or' → logprob: -14.875008583068848
    8. '   ' → logprob: -16.000009536743164
    9. 'orsi' → logprob: -16.125009536743164
    10. 'rors' → logprob: -16.250009536743164

Token 145: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.029769696295261383
    2. '.' → logprob: -3.5297696590423584
    3. ' .' → logprob: -11.904769897460938
    4. '.Append' → logprob: -12.779769897460938
    5. '.extend' → logprob: -12.904769897460938
    6. '.ap' → logprob: -13.279769897460938
    7. '.app' → logprob: -13.654769897460938
    8. '.add' → logprob: -13.904769897460938
    9. '.push' → logprob: -14.404769897460938
    10. '.py' → logprob: -14.529769897460938

Token 146: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00671809446066618
    2. '(' → logprob: -5.006718158721924
    3. ' (' → logprob: -13.256717681884766
    4. '('' → logprob: -15.381717681884766
    5. '(
' → logprob: -15.381717681884766
    6. 'd' → logprob: -15.756717681884766
    7. '((' → logprob: -16.131717681884766
    8. '(str' → logprob: -16.131717681884766
    9. '(div' → logprob: -16.381717681884766
    10. '("' → logprob: -17.381717681884766

Token 147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007892532274127007
    2. ')
' → logprob: -5.007892608642578
    3. '   ' → logprob: -6.757892608642578
    4. ' )' → logprob: -11.757892608642578
    5. ')n' → logprob: -13.882892608642578
    6. '
' → logprob: -14.007892608642578
    7. ' ' → logprob: -14.132892608642578
    8. ')

' → logprob: -14.507892608642578
    9. ')return' → logprob: -14.632892608642578
    10. ')
' → logprob: -14.757892608642578

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00019471932318992913
    2. '    
' → logprob: -9.625194549560547
    3. '<|end|>' → logprob: -9.625194549560547
    4. ' if' → logprob: -11.250194549560547
    5. ')' → logprob: -11.250194549560547
    6. '
' → logprob: -11.500194549560547
    7. 'if' → logprob: -12.250194549560547
    8. '  ' → logprob: -12.375194549560547
    9. '       ' → logprob: -12.625194549560547
    10. '  
' → logprob: -13.000194549560547

Token 149: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011749862460419536
    2. 'if' (adapté à ' if') → logprob: -6.8761749267578125
    3. ' if' → logprob: -9.001174926757812
    4. '    
' → logprob: -11.876174926757812
    5. '<|end|>' → logprob: -12.501174926757812
    6. '
' → logprob: -13.126174926757812
    7. '    ' → logprob: -13.626174926757812
    8. ')' → logprob: -13.751174926757812
    9. '  ' → logprob: -14.251174926757812
    10. 'If' → logprob: -14.376174926757812

Token 150: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.018184944987297058
    2. 'found' → logprob: -4.018185138702393
    3. ' not' → logprob: -10.393184661865234
    4. ' ' → logprob: -12.643184661865234
    5. '	found' → logprob: -14.893184661865234
    6. '(found' → logprob: -15.018184661865234
    7. ' ' → logprob: -15.768184661865234
    8. 'not' → logprob: -15.893184661865234
    9. '   ' → logprob: -16.643184661865234
    10. '_found' → logprob: -17.893184661865234

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.387458365177736e-05
    2. ' :' → logprob: -10.000083923339844
    3. ':
' → logprob: -10.375083923339844
    4. ' and' → logprob: -12.500083923339844
    5. '):' → logprob: -13.125083923339844
    6. 'and' → logprob: -14.625083923339844
    7. ':return' → logprob: -15.000083923339844
    8. '():' → logprob: -15.125083923339844
    9. '   ' → logprob: -16.125083923339844
    10. ',' → logprob: -16.375083923339844

Token 152: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006424267310649157
    2. '       ' → logprob: -5.131424427032471
    3. ' print' → logprob: -8.006423950195312
    4. ' break' → logprob: -9.256423950195312
    5. ' for' → logprob: -10.381423950195312
    6. '    ' → logprob: -11.756423950195312
    7. 'print' → logprob: -12.131423950195312
    8. ',' → logprob: -12.381423950195312
    9. '
' → logprob: -12.506423950195312
    10. '```' → logprob: -12.881423950195312

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.8145909309387207
    2. '   ' → logprob: -0.9395909309387207
    3. ' print' → logprob: -3.1895909309387207
    4. 'break' → logprob: -3.1895909309387207
    5. ' break' → logprob: -3.6895909309387207
    6. '       ' → logprob: -3.8145909309387207
    7. 'for' → logprob: -3.9395909309387207
    8. ' for' → logprob: -4.064590930938721
    9. ' ' → logprob: -9.314590454101562
    10. ' if' → logprob: -9.689590454101562

Token 154: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.4469583034515381
    2. '(*' → logprob: -1.071958303451538
    3. '('' → logprob: -4.446958541870117
    4. '("' → logprob: -5.571958541870117
    5. '(div' → logprob: -6.821958541870117
    6. '(' → logprob: -6.946958541870117
    7. 'start' → logprob: -7.946958541870117
    8. '(d' → logprob: -10.071958541870117
    9. 'div' → logprob: -10.696958541870117
    10. '()' → logprob: -11.071958541870117

Token 155: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034674981143325567
    2. ',' → logprob: -6.003467559814453
    3. ' )' → logprob: -7.003467559814453
    4. ')
' → logprob: -9.878467559814453
    5. ',end' → logprob: -11.503467559814453
    6. ' ,' → logprob: -11.878467559814453
    7. ' +' → logprob: -12.503467559814453
    8. '+' → logprob: -12.503467559814453
    9. ')}' → logprob: -13.753467559814453
    10. ',)' → logprob: -14.003467559814453

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027117418125271797
    2. '   ' → logprob: -4.2771172523498535
    3. '
' → logprob: -4.5271172523498535
    4. '<|end|>' → logprob: -7.1521172523498535
    5. ' ' → logprob: -8.152117729187012
    6. '        
' → logprob: -8.402117729187012
    7. ')' → logprob: -8.902117729187012
    8. '    
' → logprob: -9.027117729187012
    9. '  
' → logprob: -9.652117729187012
    10. '<|end|>' → logprob: -9.652117729187012

Token 157: ' for' (ID: 395)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5657128691673279
    2. '       ' → logprob: -1.0657129287719727
    3. ' break' → logprob: -2.4407129287719727
    4. '   ' → logprob: -7.815712928771973
    5. '	break' → logprob: -9.940712928771973
    6. ' ' → logprob: -12.190712928771973
    7. '```' → logprob: -13.065712928771973
    8. 'exit' → logprob: -13.690712928771973
    9. 'b' → logprob: -13.815712928771973
    10. '        
' → logprob: -14.940712928771973

Token 158: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0233012642711401
    2. 'div' → logprob: -3.773301362991333
    3. 'num' → logprob: -10.273301124572754
    4. ' d' → logprob: -11.273301124572754
    5. ' divisor' → logprob: -12.148301124572754
    6. 'dv' → logprob: -13.773301124572754
    7. '_div' → logprob: -14.773301124572754
    8. 'v' → logprob: -15.023301124572754
    9. 'dist' → logprob: -15.148301124572754
    10. 'Div' → logprob: -15.523301124572754

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001373445731587708
    2. 'in' → logprob: -6.626373291015625
    3. ' ' → logprob: -10.001373291015625
    4. 'd' → logprob: -14.001373291015625
    5. 's' → logprob: -15.251373291015625
    6. ' i' → logprob: -15.251373291015625
    7. 'n' → logprob: -15.626373291015625
    8. 'i' → logprob: -15.751373291015625
    9. ',' → logprob: -15.876373291015625
    10. '	in' → logprob: -16.251373291015625

Token 160: ' divis' (ID: 37826)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0067167943343520164
    2. ' divis' → logprob: -5.006716728210449
    3. 'dis' → logprob: -14.25671672821045
    4. '	div' → logprob: -15.00671672821045
    5. ' divers' → logprob: -15.50671672821045
    6. ' div' → logprob: -16.256717681884766
    7. '(div' → logprob: -16.256717681884766
    8. 'di' → logprob: -17.881717681884766
    9. '   ' → logprob: -18.131717681884766
    10. ' ' → logprob: -18.256717681884766

Token 161: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.02135217934846878
    2. 's' → logprob: -3.8963522911071777
    3. 'is' → logprob: -8.02135181427002
    4. 'tors' → logprob: -8.64635181427002
    5. '[' → logprob: -9.52135181427002
    6. 'rs' → logprob: -10.14635181427002
    7. 'ers' → logprob: -10.14635181427002
    8. '   ' → logprob: -10.52135181427002
    9. '       ' → logprob: -11.14635181427002
    10. 'iors' → logprob: -11.27135181427002

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08990515768527985
    2. '   ' → logprob: -3.339905261993408
    3. 'print' → logprob: -3.839905261993408
    4. ' print' → logprob: -4.464905261993408
    5. ',' → logprob: -4.839905261993408
    6. ':
' → logprob: -5.464905261993408
    7. '       ' → logprob: -6.214905261993408
    8. '           ' → logprob: -6.339905261993408
    9. '.print' → logprob: -8.21490478515625
    10. '():' → logprob: -8.33990478515625

Token 163: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42792171239852905
    2. ' print' → logprob: -1.5529217720031738
    3. '   ' → logprob: -2.052921772003174
    4. '           ' → logprob: -5.052921772003174
    5. '       ' → logprob: -6.552921772003174
    6. ' ' → logprob: -9.052921295166016
    7. '	print' → logprob: -9.302921295166016
    8. ':' → logprob: -10.677921295166016
    9. '  ' → logprob: -10.927921295166016
    10. ':
' → logprob: -11.052921295166016

Token 164: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.25344499945640564
    2. 'print' (adapté à ' print') → logprob: -1.503445029258728
    3. '   ' → logprob: -6.503445148468018
    4. '	print' → logprob: -11.50344467163086
    5. ' break' → logprob: -13.75344467163086
    6. '.print' → logprob: -13.75344467163086
    7. '    ' → logprob: -13.87844467163086
    8. ' ' → logprob: -14.00344467163086
    9. '       ' → logprob: -14.37844467163086
    10. ' ' → logprob: -14.37844467163086

Token 165: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0015054593095555902
    2. '(' → logprob: -6.501505374908447
    3. '(f' → logprob: -13.376505851745605
    4. '('' → logprob: -13.501505851745605
    5. '("' → logprob: -16.37650489807129
    6. ' (' → logprob: -16.50150489807129
    7. 'd' → logprob: -16.62650489807129
    8. '()' → logprob: -17.50150489807129
    9. '(
' → logprob: -18.37650489807129
    10. ' d' → logprob: -18.75150489807129

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0067279222421348095
    2. ')
' → logprob: -5.006727695465088
    3. ' )' → logprob: -12.131728172302246
    4. ')d' → logprob: -12.756728172302246
    5. '   ' → logprob: -13.131728172302246
    6. ')
' → logprob: -14.381728172302246
    7. '       ' → logprob: -14.756728172302246
    8. '')' → logprob: -15.131728172302246
    9. ')

' → logprob: -15.881728172302246
    10. ' )
' → logprob: -15.881728172302246

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.5577775128767826e-06
    2. '   ' → logprob: -12.250005722045898
    3. '      ' → logprob: -15.375005722045898
    4. '           ' → logprob: -16.1250057220459
    5. '        
' → logprob: -16.2500057220459
    6. 'break' → logprob: -16.6250057220459
    7. ' ' → logprob: -16.8750057220459
    8. ' break' → logprob: -17.1250057220459
    9. '     ' → logprob: -17.1250057220459
    10. '
' → logprob: -17.2500057220459

Token 168: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22389906644821167
    2. 'break' (adapté à ' break') → logprob: -1.8488991260528564
    3. ' break' → logprob: -3.3488991260528564
    4. '   ' → logprob: -4.848898887634277
    5. '	break' → logprob: -8.473898887634277
    6. ' ' → logprob: -11.223898887634277
    7. '           ' → logprob: -13.098898887634277
    8. '        
' → logprob: -13.598898887634277
    9. 'exit' → logprob: -13.598898887634277
    10. '```' → logprob: -13.723898887634277

Token 169: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011016466654837132
    2. '
' → logprob: -5.261016368865967
    3. '    
' → logprob: -5.386016368865967
    4. ' ' → logprob: -8.261016845703125
    5. ' 
' → logprob: -9.011016845703125
    6. '  ' → logprob: -9.136016845703125
    7. '    ' → logprob: -9.261016845703125
    8. '  
' → logprob: -9.386016845703125
    9. '   
' → logprob: -9.386016845703125
    10. '<|end|>' → logprob: -9.761016845703125

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08747119456529617
    2. '+' → logprob: -3.0874712467193604
    3. '    
' → logprob: -4.337471008300781
    4. '
' → logprob: -4.587471008300781
    5. 'start' → logprob: -5.712471008300781
    6. '[start' → logprob: -6.087471008300781
    7. ' ' → logprob: -6.212471008300781
    8. ':start' → logprob: -6.462471008300781
    9. ' 
' → logprob: -6.712471008300781
    10. '=start' → logprob: -7.462471008300781

Token 171: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3184207081794739
    2. 'start' (adapté à ' start') → logprob: -1.318420648574829
    3. ' start' → logprob: -5.693420886993408
    4. '
' → logprob: -6.443420886993408
    5. '[start' → logprob: -9.44342041015625
    6. '    
' → logprob: -10.06842041015625
    7. ':start' → logprob: -10.81842041015625
    8. '	start' → logprob: -11.19342041015625
    9. '(start' → logprob: -11.69342041015625
    10. '=start' → logprob: -12.19342041015625

Token 172: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05605459585785866
    2. ' +=' → logprob: -2.9310545921325684
    3. '+' → logprob: -6.806054592132568
    4. '=' → logprob: -9.806055068969727
    5. ']+=' → logprob: -13.056055068969727
    6. '++' → logprob: -13.681055068969727
    7. '   ' → logprob: -13.681055068969727
    8. '+='' → logprob: -13.806055068969727
    9. ' ' → logprob: -14.056055068969727
    10. '+="' → logprob: -14.056055068969727

Token 173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.815280696377158e-05
    2. ' ' → logprob: -9.500078201293945
    3. '2' → logprob: -13.250078201293945
    4. 'n' → logprob: -13.750078201293945
    5. '10' → logprob: -15.750078201293945
    6. ' n' → logprob: -16.937578201293945
    7. 's' → logprob: -17.062578201293945
    8. '3' → logprob: -17.437578201293945
    9. '   ' → logprob: -18.312578201293945
    10. '4' → logprob: -18.562578201293945

Token 174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.231182826217264e-05
    2. ' ' → logprob: -10.000072479248047
    3. '2' → logprob: -10.750072479248047
    4. 'n' → logprob: -12.625072479248047
    5. '10' → logprob: -13.875072479248047
    6. 's' → logprob: -15.500072479248047
    7. '3' → logprob: -15.937572479248047
    8. '100' → logprob: -16.437572479248047
    9. '7' → logprob: -16.812572479248047
    10. '4' → logprob: -16.875072479248047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 172
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 43.02%
Précision adaptée (1ère position): 44.77%
Précision (top 10): 87.21%
================================================================================
