================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def to_float64_bits(e, frac):
    # Compose 64-bit string from exponent e and fraction frac
    return format(e, '012b') + format(frac, '052b')

def multiply_significand(frac, n):
    # frac: significand encoded as 52-bit int (without leading 1)
    # n: multiplier integer
    # returns (new_e, new_frac) in format:
    # number = (1 + frac/2^52) * n
    # output in form (e, frac) with 1 <= m < 2, m = 1 + frac/2^52
    total = (1 << 52) + frac
    total *= n  # integer multiplication
    e = total.bit_length() - 53  # shift to make 1 <= m < 2, subtract leading 1 bit
    if e < 0:
        # means total < 2^52, can't happen for n>=1 and original m>=1
        e = 0
    shift = e
    # truncate fraction bits after 52 bits by shifting right
    if shift > 0:
        frac_new = (total >> shift) & ((1 << 52) -1)
    else:
        frac_new = total & ((1 << 52) -1)
    return e, frac_new

def main():
    input = sys.stdin.read().split()
    i = 0
    while True:
        if i >= len(input):
            break
        nstr = input[i]
        i += 1
        if nstr == '0':
            break
        n = int(nstr)
        bits = input[i]
        i +=1
        frac = int(bits, 2)

        # initial a = m * 2^0, m = 1 + frac/(2^52)
        # sum s = n*a
        e, frac_res = multiply_significand(frac, n)
        # output bits: 12 bits exponent + 52 bits fraction
        print(to_float64_bits(e, frac_res))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '_float' (ID: 44505)
  Prédit: 'ken'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ken' → logprob: -0.013159054331481457
    2. '_' → logprob: -4.888159275054932
    3. '_lower' → logprob: -6.388159275054932
    4. 'k' → logprob: -6.763159275054932
    5. 'kens' → logprob: -7.388159275054932
    6. '_upper' → logprob: -8.013158798217773
    7. '_import' → logprob: -8.388158798217773
    8. '_print' → logprob: -8.888158798217773
    9. 'lower' → logprob: -8.888158798217773
    10. 'r' → logprob: -8.888158798217773

Token 6: '64' (ID: 2220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00023250321100931615
    2. '_' → logprob: -9.875232696533203
    3. ' (' → logprob: -10.500232696533203
    4. '("("' → logprob: -10.750232696533203
    5. 's' → logprob: -10.875232696533203
    6. '(:' → logprob: -11.000232696533203
    7. '():' → logprob: -11.250232696533203
    8. '(s' → logprob: -11.500232696533203
    9. '(x' → logprob: -11.625232696533203
    10. '(_:' → logprob: -11.750232696533203

Token 7: '_bits' (ID: 48415)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015347852604463696
    2. '("("' → logprob: -10.250153541564941
    3. ' (' → logprob: -10.750153541564941
    4. '_' → logprob: -11.250153541564941
    5. '(_' → logprob: -11.875153541564941
    6. '(
' → logprob: -11.875153541564941
    7. '('' → logprob: -12.000153541564941
    8. '```' → logprob: -12.000153541564941
    9. '(token' → logprob: -12.125153541564941
    10. '(x' → logprob: -12.375153541564941

Token 8: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020377879263833165
    2. '(:' → logprob: -9.375204086303711
    3. ':' → logprob: -10.750204086303711
    4. '():' → logprob: -10.875204086303711
    5. '_' → logprob: -11.125204086303711
    6. ' (' → logprob: -11.625204086303711
    7. '(x' → logprob: -12.250204086303711
    8. '("("' → logprob: -12.250204086303711
    9. '('' → logprob: -12.500204086303711
    10. 's' → logprob: -12.625204086303711

Token 9: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37595778703689575
    2. '):' → logprob: -2.250957727432251
    3. 'v' → logprob: -2.500957727432251
    4. ')' → logprob: -3.625957727432251
    5. '(x' → logprob: -3.625957727432251
    6. ')x' → logprob: -3.875957727432251
    7. 'p' → logprob: -4.12595796585083
    8. '(' → logprob: -4.25095796585083
    9. 'xp' → logprob: -4.62595796585083
    10. 'm' → logprob: -6.00095796585083

Token 10: ' frac' (ID: 72308)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.3410971462726593
    2. 'm' → logprob: -1.716097116470337
    3. ' f' → logprob: -2.841097116470337
    4. 'f' → logprob: -4.341097354888916
    5. ')' → logprob: -4.966097354888916
    6. ' t' → logprob: -5.091097354888916
    7. ' d' → logprob: -5.591097354888916
    8. 'd' → logprob: -6.091097354888916
    9. ' mant' → logprob: -6.091097354888916
    10. ' n' → logprob: -6.466097354888916

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00889700185507536
    2. 's' → logprob: -5.633896827697754
    3. '):
' → logprob: -5.883896827697754
    4. ')' → logprob: -7.258896827697754
    5. '_bits' → logprob: -7.758896827697754
    6. 'ision' → logprob: -8.133896827697754
    7. '):
' → logprob: -8.383896827697754
    8. 't' → logprob: -8.758896827697754
    9. 'mant' → logprob: -8.758896827697754
    10. '```' → logprob: -8.758896827697754

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38539981842041016
    2. '   ' → logprob: -1.3853998184204102
    3. '):' → logprob: -3.26039981842041
    4. '():' → logprob: -4.38539981842041
    5. ' :' → logprob: -4.38539981842041
    6. '(' → logprob: -6.63539981842041
    7. '`:' → logprob: -7.38539981842041
    8. '```' → logprob: -7.63539981842041
    9. ':return' → logprob: -7.88539981842041
    10. '':' → logprob: -7.88539981842041

Token 13: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15146228671073914
    2. ' return' → logprob: -2.4014623165130615
    3. ' ' → logprob: -4.151462078094482
    4. ':' → logprob: -4.151462078094482
    5. '    ' → logprob: -5.026462078094482
    6. 'return' → logprob: -5.526462078094482
    7. '  ' → logprob: -6.401462078094482
    8. ' :' → logprob: -6.401462078094482
    9. '):' → logprob: -6.901462078094482
    10. '       ' → logprob: -6.901462078094482

Token 14: ' Compose' (ID: 183887)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5486518144607544
    2. ' ' → logprob: -1.4236518144607544
    3. '   ' → logprob: -3.048651695251465
    4. ' pass' → logprob: -3.423651695251465
    5. ' result' → logprob: -4.173651695251465
    6. ' import' → logprob: -4.673651695251465
    7. ' bit' → logprob: -4.673651695251465
    8. 'return' → logprob: -4.673651695251465
    9. ' shift' → logprob: -4.798651695251465
    10. ' exponent' → logprob: -4.923651695251465

Token 15: ' ' (ID: 220)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6853919625282288
    2. ' ' → logprob: -1.310391902923584
    3. ' (' → logprob: -3.060391902923584
    4. 'return' → logprob: -3.435391902923584
    5. '   ' → logprob: -3.560391902923584
    6. '(' → logprob: -3.685391902923584
    7. ' =' → logprob: -3.935391902923584
    8. ' result' → logprob: -4.685391902923584
    9. ' a' → logprob: -5.060391902923584
    10. ' import' → logprob: -5.185391902923584

Token 16: '64' (ID: 2220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9527347087860107
    2. 'return' → logprob: -1.4527347087860107
    3. '((' → logprob: -2.3277347087860107
    4. 'sign' → logprob: -2.5777347087860107
    5. '(e' → logprob: -2.9527347087860107
    6. 'import' → logprob: -3.8277347087860107
    7. '(sign' → logprob: -3.8277347087860107
    8. ' (' → logprob: -3.9527347087860107
    9. 'bits' → logprob: -4.07773494720459
    10. '   ' → logprob: -4.20273494720459

Token 17: '-bit' (ID: 33736)
  Prédit: '-bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.06383821368217468
    2. ' ' → logprob: -3.563838243484497
    3. '-' → logprob: -3.688838243484497
    4. ' bit' → logprob: -5.938838005065918
    5. ' bits' → logprob: -6.563838005065918
    6. 'bit' → logprob: -6.813838005065918
    7. 'bits' → logprob: -6.813838005065918
    8. '   ' → logprob: -7.563838005065918
    9. ' -' → logprob: -7.688838005065918
    10. ')' → logprob: -8.063838005065918

Token 18: ' string' (ID: 1621)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29491567611694336
    2. ' word' → logprob: -2.5449156761169434
    3. ' value' → logprob: -2.7949156761169434
    4. 'return' → logprob: -3.1699156761169434
    5. ' integer' → logprob: -4.419915676116943
    6. ' int' → logprob: -4.419915676116943
    7. 'int' → logprob: -4.544915676116943
    8. ' result' → logprob: -4.794915676116943
    9. 'value' → logprob: -5.294915676116943
    10. ' bits' → logprob: -5.419915676116943

Token 19: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7199599742889404
    2. ' :' → logprob: -1.5949599742889404
    3. ':' → logprob: -1.9699599742889404
    4. '    ' → logprob: -2.8449599742889404
    5. ' ' → logprob: -3.3449599742889404
    6. ' =' → logprob: -3.8449599742889404
    7. ' return' → logprob: -4.5949602127075195
    8. ' s' → logprob: -4.7199602127075195
    9. ' ,' → logprob: -5.0949602127075195
    10. ' )' → logprob: -5.4699602127075195

Token 20: ' exponent' (ID: 51159)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.15424500405788422
    2. ' sign' → logprob: -2.779244899749756
    3. ' the' → logprob: -3.529244899749756
    4. ' exponent' → logprob: -3.904244899749756
    5. 'e' → logprob: -4.029244899749756
    6. 'sign' → logprob: -5.279244899749756
    7. ''e' → logprob: -6.279244899749756
    8. ' '' → logprob: -6.904244899749756
    9. ''' → logprob: -7.154244899749756
    10. ' components' → logprob: -7.404244899749756

Token 21: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11544152349233627
    2. ' :' → logprob: -3.1154415607452393
    3. ':' → logprob: -3.4904415607452393
    4. '    ' → logprob: -4.74044132232666
    5. '):' → logprob: -5.24044132232666
    6. ' =' → logprob: -5.49044132232666
    7. ',' → logprob: -5.86544132232666
    8. ' ' → logprob: -6.11544132232666
    9. '```' → logprob: -6.11544132232666
    10. ' and' → logprob: -6.61544132232666

Token 22: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06758669763803482
    2. ' and' → logprob: -2.942586660385132
    3. ',' → logprob: -4.692586898803711
    4. ':' → logprob: -7.442586898803711
    5. '    ' → logprob: -7.567586898803711
    6. ')' → logprob: -8.067586898803711
    7. 'def' → logprob: -8.442586898803711
    8. ' ,' → logprob: -8.567586898803711
    9. ' =' → logprob: -8.567586898803711
    10. ' ' → logprob: -8.692586898803711

Token 23: ' fraction' (ID: 33763)
  Prédit: ' fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fraction' → logprob: -0.126582071185112
    2. ' mant' → logprob: -2.501582145690918
    3. ' frac' → logprob: -4.126582145690918
    4. 'fraction' → logprob: -4.501582145690918
    5. ' signific' → logprob: -5.376582145690918
    6. ' fractional' → logprob: -5.751582145690918
    7. ' ' → logprob: -7.376582145690918
    8. '   ' → logprob: -7.626582145690918
    9. 'frac' → logprob: -8.751582145690918
    10. '    ' → logprob: -9.376582145690918

Token 24: ' frac' (ID: 72308)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015269549563527107
    2. ':' → logprob: -5.140269756317139
    3. ' return' → logprob: -5.515269756317139
    4. '    ' → logprob: -6.765269756317139
    5. 'return' → logprob: -7.015269756317139
    6. ' bits' → logprob: -7.390269756317139
    7. '_bits' → logprob: -7.640269756317139
    8. ' :' → logprob: -7.765269756317139
    9. '```' → logprob: -7.765269756317139
    10. '):' → logprob: -8.51526927947998

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0663089007139206
    2. ':' → logprob: -2.8163089752197266
    3. '):' → logprob: -6.816308975219727
    4. '    ' → logprob: -6.816308975219727
    5. ' :' → logprob: -6.816308975219727
    6. '```' → logprob: -8.191308975219727
    7. ',' → logprob: -8.816308975219727
    8. ' return' → logprob: -9.316308975219727
    9. ' ' → logprob: -9.316308975219727
    10. '  ' → logprob: -9.816308975219727

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022542787715792656
    2. ':' → logprob: -3.897542715072632
    3. '    ' → logprob: -7.397542953491211
    4. ' :' → logprob: -7.522542953491211
    5. '):' → logprob: -8.147542953491211
    6. ',' → logprob: -9.147542953491211
    7. '```' → logprob: -9.147542953491211
    8. ' return' → logprob: -9.897542953491211
    9. ')' → logprob: -10.272542953491211
    10. 'return' → logprob: -10.272542953491211

Token 27: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03575490415096283
    2. '    ' → logprob: -4.035754680633545
    3. ' return' → logprob: -4.285754680633545
    4. 'return' (adapté à ' return') → logprob: -6.660754680633545
    5. ' ' → logprob: -7.535754680633545
    6. '```' → logprob: -8.035755157470703
    7. ' bit' → logprob: -8.160755157470703
    8. '       ' → logprob: -8.285755157470703
    9. ' bits' → logprob: -9.160755157470703
    10. ':' → logprob: -9.285755157470703

Token 28: ' format' (ID: 6011)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4096204936504364
    2. ' f' → logprob: -2.034620523452759
    3. ' e' → logprob: -2.034620523452759
    4. ' '' → logprob: -3.659620523452759
    5. ' ' → logprob: -4.40962028503418
    6. '(e' → logprob: -5.15962028503418
    7. ''' → logprob: -5.28462028503418
    8. '(' → logprob: -5.28462028503418
    9. 'e' → logprob: -5.65962028503418
    10. '"' → logprob: -5.78462028503418

Token 29: '(e' (ID: 3454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1697644144296646
    2. '(e' → logprob: -2.044764518737793
    3. '((' → logprob: -3.794764518737793
    4. '(int' → logprob: -5.544764518737793
    5. ' (' → logprob: -9.419764518737793
    6. '<|end|>' → logprob: -9.794764518737793
    7. '(pow' → logprob: -9.919764518737793
    8. '(fr' → logprob: -10.669764518737793
    9. '(((' → logprob: -11.169764518737793
    10. 'int' → logprob: -11.169764518737793

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014655368402600288
    2. ' ,' → logprob: -4.264655590057373
    3. ' +' → logprob: -8.764655113220215
    4. ' ' → logprob: -9.014655113220215
    5. '+' → logprob: -9.639655113220215
    6. ')' → logprob: -10.139655113220215
    7. ','' → logprob: -10.264655113220215
    8. '<<' → logprob: -10.764655113220215
    9. '```' → logprob: -11.264655113220215
    10. ',"' → logprob: -11.889655113220215

Token 31: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.062352485954761505
    2. '"' → logprob: -2.812352418899536
    3. ''#' → logprob: -9.312352180480957
    4. ''s' → logprob: -9.687352180480957
    5. ' ' → logprob: -10.187352180480957
    6. 'b' → logprob: -10.312352180480957
    7. ''>' → logprob: -10.687352180480957
    8. '`' → logprob: -11.062352180480957
    9. '#' → logprob: -11.187352180480957
    10. ''b' → logprob: -11.437352180480957

Token 32: '012' (ID: 19267)
  Prédit: '011'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '011' → logprob: -0.012096350081264973
    2. '016' → logprob: -5.262096405029297
    3. '07' → logprob: -6.262096405029297
    4. '064' → logprob: -6.387096405029297
    5. '054' → logprob: -7.137096405029297
    6. 'b' → logprob: -7.262096405029297
    7. '055' → logprob: -8.137096405029297
    8. '11' → logprob: -8.512096405029297
    9. '#' → logprob: -8.512096405029297
    10. '>' → logprob: -8.762096405029297

Token 33: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09388718008995056
    2. '8' → logprob: -2.7188870906829834
    3. 'x' → logprob: -3.9688870906829834
    4. '4' → logprob: -6.0938873291015625
    5. 'd' → logprob: -6.4688873291015625
    6. 'c' → logprob: -7.5938873291015625
    7. '64' → logprob: -8.218887329101562
    8. '')' → logprob: -9.718887329101562
    9. '3' → logprob: -10.718887329101562
    10. '0' → logprob: -11.218887329101562

Token 34: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004819088149815798
    2. ')' → logprob: -5.379818916320801
    3. ''),' → logprob: -9.7548189163208
    4. '}' → logprob: -10.0048189163208
    5. ' ')' → logprob: -10.2548189163208
    6. '")' → logprob: -11.1298189163208
    7. '6' → logprob: -11.6298189163208
    8. '');' → logprob: -12.2548189163208
    9. ''' → logprob: -12.5048189163208
    10. '0' → logprob: -12.7548189163208

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07005625218153
    2. ' +' → logprob: -2.945056200027466
    3. '<|end|>' → logprob: -4.320056438446045
    4. ')' → logprob: -6.945056438446045
    5. ' ' → logprob: -7.695056438446045
    6. '0' → logprob: -9.570055961608887
    7. '<|end|>' → logprob: -10.445055961608887
    8. '}' → logprob: -10.570055961608887
    9. '#' → logprob: -10.820055961608887
    10. '...' → logprob: -10.820055961608887

Token 36: ' format' (ID: 6011)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.5297204256057739
    2. 'format' → logprob: -1.029720425605774
    3. ''' → logprob: -3.2797203063964844
    4. ' frac' → logprob: -4.529720306396484
    5. ' format' → logprob: -5.529720306396484
    6. 'fraction' → logprob: -7.529720306396484
    7. ' '' → logprob: -8.404720306396484
    8. 'fr' → logprob: -8.904720306396484
    9. 'str' → logprob: -8.904720306396484
    10. 'fract' → logprob: -9.029720306396484

Token 37: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -0.01131683960556984
    2. '(' → logprob: -4.511316776275635
    3. '(f' → logprob: -8.261317253112793
    4. '(frm' → logprob: -12.136317253112793
    5. 'frac' → logprob: -13.136317253112793
    6. '(int' → logprob: -14.511317253112793
    7. '(freq' → logprob: -14.511317253112793
    8. '(func' → logprob: -14.761317253112793
    9. '(
' → logprob: -15.511317253112793
    10. '((' → logprob: -15.636317253112793

Token 38: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.00046165118692442775
    2. 'a' → logprob: -8.00046157836914
    3. 'act' → logprob: -10.75046157836914
    4. 'e' → logprob: -11.25046157836914
    5. '1' → logprob: -11.50046157836914
    6. '(' → logprob: -11.50046157836914
    7. '64' → logprob: -11.93796157836914
    8. 'acc' → logprob: -12.25046157836914
    9. '{' → logprob: -12.31296157836914
    10. 'ag' → logprob: -12.62546157836914

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07055572420358658
    2. '(' → logprob: -3.3205556869506836
    3. '',' → logprob: -3.5705556869506836
    4. '(',' → logprob: -6.820555686950684
    5. '('' → logprob: -7.195555686950684
    6. ','' → logprob: -7.570555686950684
    7. ' ,' → logprob: -7.820555686950684
    8. ''' → logprob: -8.070555686950684
    9. ')' → logprob: -8.195555686950684
    10. ''(' → logprob: -9.320555686950684

Token 40: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00020067949662916362
    2. ' '' → logprob: -9.125200271606445
    3. '52' → logprob: -10.375200271606445
    4. ''s' → logprob: -11.500200271606445
    5. '"' → logprob: -11.625200271606445
    6. ''f' → logprob: -11.625200271606445
    7. '53' → logprob: -12.000200271606445
    8. ''+' → logprob: -13.125200271606445
    9. ''e' → logprob: -13.250200271606445
    10. ' ' → logprob: -13.250200271606445

Token 41: '052' (ID: 43083)
  Prédit: '052'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '052' → logprob: -0.0008802578668110073
    2. '52' → logprob: -7.625880241394043
    3. '051' → logprob: -8.000880241394043
    4. ''' → logprob: -10.625880241394043
    5. '`' → logprob: -11.500880241394043
    6. '053' → logprob: -11.625880241394043
    7. '0' → logprob: -12.875880241394043
    8. '``' → logprob: -13.625880241394043
    9. '```' → logprob: -13.625880241394043
    10. '050' → logprob: -13.750880241394043

Token 42: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.9361264946837764e-07
    2. ''b' → logprob: -16.25
    3. ')b' → logprob: -17.625
    4. 's' → logprob: -19.375
    5. '')' → logprob: -19.875
    6. 'bits' → logprob: -20.625
    7. '	b' → logprob: -20.875
    8. 'bit' → logprob: -21.0
    9. 'f' → logprob: -21.25
    10. '```' → logprob: -21.375

Token 43: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16024667024612427
    2. ')' → logprob: -1.9102466106414795
    3. ''' → logprob: -11.535246849060059
    4. '")' → logprob: -12.785246849060059
    5. '   ' → logprob: -12.910246849060059
    6. '}')' → logprob: -13.160246849060059
    7. ')'' → logprob: -14.035246849060059
    8. '#' → logprob: -14.285246849060059
    9. '}' → logprob: -14.285246849060059
    10. ''))' → logprob: -14.535246849060059

Token 44: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3074955344200134
    2. '<|end|>' → logprob: -1.4324955940246582
    3. 'def' → logprob: -5.432495594024658
    4. ':' → logprob: -5.682495594024658
    5. '#' → logprob: -5.682495594024658
    6. '
' → logprob: -5.807495594024658
    7. '```' → logprob: -6.057495594024658
    8. '<|end|>' → logprob: -6.182495594024658
    9. '\n' → logprob: -6.307495594024658
    10. '[' → logprob: -6.557495594024658

Token 45: ' multiply' (ID: 57388)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.029251758009195328
    2. 'to' → logprob: -3.77925181388855
    3. ' float' → logprob: -6.279251575469971
    4. ' convert' → logprob: -6.654251575469971
    5. ' ' → logprob: -6.779251575469971
    6. '_' → logprob: -7.779251575469971
    7. ' space' → logprob: -8.154252052307129
    8. ' _' → logprob: -9.029252052307129
    9. ' calculate' → logprob: -9.029252052307129
    10. ' decode' → logprob: -9.029252052307129

Token 46: '_sign' (ID: 24730)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04039119929075241
    2. '(a' → logprob: -3.290391206741333
    3. '(x' → logprob: -6.415390968322754
    4. '(e' → logprob: -9.790390968322754
    5. '_numbers' → logprob: -9.790390968322754
    6. '_' → logprob: -10.040390968322754
    7. '_vectors' → logprob: -10.040390968322754
    8. '(A' → logprob: -10.165390968322754
    9. ' (' → logprob: -10.290390968322754
    10. '_two' → logprob: -10.415390968322754

Token 47: 'ific' (ID: 1173)
  Prédit: 'ific'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ific' → logprob: -0.5225415229797363
    2. 'al' → logprob: -1.2725415229797363
    3. 'ed' → logprob: -2.6475415229797363
    4. 'if' → logprob: -3.3975415229797363
    5. 'als' → logprob: -5.147541522979736
    6. 'ificant' → logprob: -5.147541522979736
    7. '_bit' → logprob: -6.397541522979736
    8. '_' → logprob: -6.522541522979736
    9. '_bits' → logprob: -6.647541522979736
    10. 'fic' → logprob: -7.147541522979736

Token 48: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.008196213282644749
    2. 'ic' → logprob: -5.1331963539123535
    3. 'cand' → logprob: -6.3831963539123535
    4. 'ands' → logprob: -9.133195877075195
    5. ' and' → logprob: -9.633195877075195
    6. 'end' → logprob: -9.758195877075195
    7. 'an' → logprob: -10.133195877075195
    8. 'ant' → logprob: -10.383195877075195
    9. 'a' → logprob: -10.445695877075195
    10. '```' → logprob: -10.758195877075195

Token 49: '(fr' (ID: 62646)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001880923518911004
    2. '(sign' → logprob: -6.876881122589111
    3. '_sign' → logprob: -8.251880645751953
    4. '(s' → logprob: -8.751880645751953
    5. 's' → logprob: -9.251880645751953
    6. ' (' → logprob: -9.376880645751953
    7. '(e' → logprob: -9.876880645751953
    8. '(a' → logprob: -10.251880645751953
    9. '(_' → logprob: -10.501880645751953
    10. '((' → logprob: -11.251880645751953

Token 50: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.0010378103470429778
    2. 'acs' → logprob: -7.75103759765625
    3. 'acf' → logprob: -8.62603759765625
    4. 'act' → logprob: -8.62603759765625
    5. 'action' → logprob: -9.00103759765625
    6. 'actions' → logprob: -10.62603759765625
    7. 'acc' → logprob: -10.75103759765625
    8. ')' → logprob: -11.00103759765625
    9. 'a' → logprob: -11.00103759765625
    10. 'acz' → logprob: -12.12603759765625

Token 51: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19865037500858307
    2. ',' → logprob: -2.073650360107422
    3. '1' → logprob: -2.948650360107422
    4. ')' → logprob: -7.323650360107422
    5. 's' → logprob: -7.823650360107422
    6. '2' → logprob: -8.823650360107422
    7. 'A' → logprob: -8.948650360107422
    8. 'a' → logprob: -8.948650360107422
    9. ' ):' → logprob: -9.073650360107422
    10. '):
' → logprob: -9.198650360107422

Token 52: ' n' (ID: 297)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' other' → logprob: -1.1447274684906006
    2. 'frac' → logprob: -1.1447274684906006
    3. ' frac' → logprob: -2.1447274684906006
    4. 'other' → logprob: -2.2697274684906006
    5. ' b' → logprob: -3.5197274684906006
    6. 'b' → logprob: -3.5197274684906006
    7. ' multiplier' → logprob: -3.6447274684906006
    8. 'exp' → logprob: -4.64472770690918
    9. 'mult' → logprob: -5.01972770690918
    10. ' mult' → logprob: -5.01972770690918

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0715247094631195
    2. 'um' → logprob: -3.4465246200561523
    3. ')' → logprob: -3.8215246200561523
    4. 'umerator' → logprob: -5.696524620056152
    5. 'umer' → logprob: -6.196524620056152
    6. 'umber' → logprob: -6.196524620056152
    7. '*' → logprob: -6.196524620056152
    8. 'u' → logprob: -6.321524620056152
    9. '_bits' → logprob: -6.696524620056152
    10. ',' → logprob: -7.821524620056152

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13260363042354584
    2. ':' → logprob: -2.257603645324707
    3. '*' → logprob: -5.132603645324707
    4. '(' → logprob: -5.507603645324707
    5. '):' → logprob: -6.007603645324707
    6. ''' → logprob: -6.507603645324707
    7. '    ' → logprob: -6.632603645324707
    8. ')' → logprob: -7.007603645324707
    9. ' ' → logprob: -7.382603645324707
    10. '#' → logprob: -7.632603645324707

Token 55: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28504031896591187
    2. '    ' → logprob: -2.1600403785705566
    3. ' ' → logprob: -2.4100403785705566
    4. ' return' → logprob: -3.6600403785705566
    5. '*' → logprob: -6.285040378570557
    6. ' #' → logprob: -6.535040378570557
    7. 'return' → logprob: -6.535040378570557
    8. ' *' → logprob: -6.535040378570557
    9. ' 
' → logprob: -6.785040378570557
    10. '  ' → logprob: -7.160040378570557

Token 56: ' frac' (ID: 72308)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.829579770565033
    2. 'result' → logprob: -1.0795798301696777
    3. ' #' → logprob: -2.7045798301696777
    4. ' product' → logprob: -3.3295798301696777
    5. ' """' → logprob: -3.9545798301696777
    6. '#' → logprob: -4.079579830169678
    7. ' return' → logprob: -4.204579830169678
    8. 'product' → logprob: -4.329579830169678
    9. '   ' → logprob: -4.704579830169678
    10. 'return' → logprob: -5.329579830169678

Token 57: ':' (ID: 25)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.24572217464447021
    2. ' =' → logprob: -2.1207222938537598
    3. ' >>=' → logprob: -3.1207222938537598
    4. ' &=' → logprob: -4.12072229385376
    5. ')' → logprob: -4.99572229385376
    6. '=' → logprob: -5.12072229385376
    7. ' *=' → logprob: -5.12072229385376
    8. '_bits' → logprob: -5.24572229385376
    9. ',' → logprob: -5.62072229385376
    10. ' *' → logprob: -6.24572229385376

Token 58: ' signific' (ID: 5404)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.46793168783187866
    2. 'int' → logprob: -1.4679317474365234
    3. ' ' → logprob: -2.2179317474365234
    4. ' return' → logprob: -4.967931747436523
    5. '64' → logprob: -5.217931747436523
    6. ' frac' → logprob: -5.342931747436523
    7. ' (' → logprob: -5.967931747436523
    8. ')' → logprob: -6.217931747436523
    9. 'frac' → logprob: -6.342931747436523
    10. ' n' → logprob: -6.592931747436523

Token 59: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.00028374246903695166
    2. 'ant' → logprob: -9.375284194946289
    3. 'a' → logprob: -9.625284194946289
    4. 'ic' → logprob: -9.750284194946289
    5. 'd' → logprob: -10.250284194946289
    6. 'ands' → logprob: -12.000284194946289
    7. ' ' → logprob: -12.375284194946289
    8. '   ' → logprob: -12.625284194946289
    9. ' and' → logprob: -12.750284194946289
    10. 'andt' → logprob: -12.750284194946289

Token 60: ' encoded' (ID: 41096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2702220380306244
    2. '   ' → logprob: -2.8952219486236572
    3. '_bits' → logprob: -3.2702219486236572
    4. ',' → logprob: -3.5202219486236572
    5. '=' → logprob: -3.5202219486236572
    6. ' <<=' → logprob: -3.6452219486236572
    7. ')' → logprob: -4.270222187042236
    8. ' *' → logprob: -4.895222187042236
    9. '[' → logprob: -5.270222187042236
    10. '):' → logprob: -5.395222187042236

Token 61: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23873694241046906
    2. '=' → logprob: -2.363736867904663
    3. ' <<=' → logprob: -2.863736867904663
    4. '<|end|>' → logprob: -4.238737106323242
    5. ',' → logprob: -4.988737106323242
    6. ' (' → logprob: -5.113737106323242
    7. '[' → logprob: -5.238737106323242
    8. ')' → logprob: -5.363737106323242
    9. '<|end|>' → logprob: -5.613737106323242
    10. '_' → logprob: -5.863737106323242

Token 62: ' ' (ID: 220)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.23612235486507416
    2. 'an' → logprob: -2.4861223697662354
    3. 'int' → logprob: -2.6111223697662354
    4. 'a' → logprob: -3.6111223697662354
    5. ' a' → logprob: -4.361122131347656
    6. ' int' → logprob: -5.486122131347656
    7. '52' → logprob: -5.861122131347656
    8. '53' → logprob: -5.986122131347656
    9. 'integer' → logprob: -6.361122131347656
    10. ' integer' → logprob: -6.736122131347656

Token 63: '52' (ID: 6283)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020969824865460396
    2. 'an' → logprob: -4.145969867706299
    3. ' an' → logprob: -6.645969867706299
    4. 'a' → logprob: -6.895969867706299
    5. 'integer' → logprob: -7.270969867706299
    6. ' int' → logprob: -7.645969867706299
    7. 'float' → logprob: -7.645969867706299
    8. '53' → logprob: -7.895969867706299
    9. '52' → logprob: -8.14596939086914
    10. '54' → logprob: -9.64596939086914

Token 64: '-bit' (ID: 33736)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2070187330245972
    2. '<|end|>' → logprob: -1.7070187330245972
    3. ' bits' → logprob: -1.8320187330245972
    4. '-bit' → logprob: -2.0820188522338867
    5. 's' → logprob: -2.7070188522338867
    6. 'bits' → logprob: -3.0820188522338867
    7. '+' → logprob: -3.4570188522338867
    8. '_bits' → logprob: -3.5820188522338867
    9. '<|end|>' → logprob: -3.9570188522338867
    10. 'b' → logprob: -4.082018852233887

Token 65: ' int' (ID: 677)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6595748066902161
    2. ')' → logprob: -1.6595747470855713
    3. ':' → logprob: -1.6595747470855713
    4. ',' → logprob: -3.0345747470855713
    5. '):' → logprob: -4.28457498550415
    6. '*' → logprob: -4.40957498550415
    7. '```' → logprob: -5.40957498550415
    8. '[' → logprob: -5.65957498550415
    9. ' ' → logprob: -5.78457498550415
    10. '<|end|>' → logprob: -6.15957498550415

Token 67: 'without' (ID: 55931)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012601125054061413
    2. ' )' → logprob: -5.262600898742676
    3. '')' → logprob: -6.262600898742676
    4. ''' → logprob: -6.262600898742676
    5. ' ' → logprob: -6.637600898742676
    6. '   ' → logprob: -7.137600898742676
    7. '32' → logprob: -8.637600898742676
    8. '64' → logprob: -9.012600898742676
    9. 'int' → logprob: -9.262600898742676
    10. '  ' → logprob: -9.262600898742676

Token 68: ' leading' (ID: 8117)
  Prédit: ' implicit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implicit' → logprob: -0.5746833682060242
    2. ' the' → logprob: -1.324683427810669
    3. 'implicit' → logprob: -2.824683427810669
    4. 'the' → logprob: -3.324683427810669
    5. ' leading' → logprob: -3.324683427810669
    6. ' hidden' → logprob: -3.824683427810669
    7. 'hidden' → logprob: -4.94968318939209
    8. 'leading' → logprob: -5.07468318939209
    9. '1' → logprob: -6.82468318939209
    10. ' implied' → logprob: -6.94968318939209

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004393324721604586
    2. '<|end|>' → logprob: -5.879393100738525
    3. ' ' → logprob: -7.629393100738525
    4. ' implicit' → logprob: -7.879393100738525
    5. 'implicit' → logprob: -8.254393577575684
    6. ' bit' → logprob: -8.504393577575684
    7. ' one' → logprob: -9.379393577575684
    8. ' hidden' → logprob: -10.379393577575684
    9. 'hidden' → logprob: -10.629393577575684
    10. ' leading' → logprob: -10.754393577575684

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.209963900502771e-05
    2. 'implicit' → logprob: -9.500092506408691
    3. '<|end|>' → logprob: -12.375092506408691
    4. ' implicit' → logprob: -12.625092506408691
    5. 'hidden' → logprob: -12.625092506408691
    6. 'bit' → logprob: -13.250092506408691
    7. ''s' → logprob: -14.000092506408691
    8. ' ' → logprob: -14.000092506408691
    9. ' bit' → logprob: -14.125092506408691
    10. 'one' → logprob: -14.875092506408691

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015942457830533385
    2. ' )' → logprob: -7.001594066619873
    3. '')' → logprob: -7.751594066619873
    4. ')
' → logprob: -9.876594543457031
    5. '*' → logprob: -10.376594543457031
    6. '),' → logprob: -10.376594543457031
    7. '*)' → logprob: -10.376594543457031
    8. ',' → logprob: -10.501594543457031
    9. '   ' → logprob: -11.251594543457031
    10. ')

' → logprob: -11.626594543457031

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070269848220050335
    2. ')' → logprob: -5.1320271492004395
    3. '<|end|>' → logprob: -8.257026672363281
    4. '    ' → logprob: -8.507026672363281
    5. '    
' → logprob: -9.132026672363281
    6. ' ' → logprob: -9.257026672363281
    7. ',' → logprob: -9.632026672363281
    8. '
' → logprob: -9.632026672363281
    9. '  ' → logprob: -10.007026672363281
    10. ' 
' → logprob: -10.007026672363281

Token 73: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06593196839094162
    2. '    ' → logprob: -4.190931797027588
    3. '*' → logprob: -4.440931797027588
    4. ')' → logprob: -4.565931797027588
    5. ' ' → logprob: -4.940931797027588
    6. ' *' → logprob: -5.690931797027588
    7. '    
' → logprob: -6.315931797027588
    8. ' 
' → logprob: -6.315931797027588
    9. '`' → logprob: -6.440931797027588
    10. ' return' → logprob: -6.690931797027588

Token 74: ' n' (ID: 297)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.8086521625518799
    2. 'result' → logprob: -0.9336521625518799
    3. ' product' → logprob: -2.93365216255188
    4. '   ' → logprob: -3.43365216255188
    5. 'product' → logprob: -3.80865216255188
    6. 'carry' → logprob: -4.558651924133301
    7. ' #' → logprob: -4.808651924133301
    8. '#' → logprob: -5.183651924133301
    9. 'prod' → logprob: -5.433651924133301
    10. ' carry' → logprob: -5.433651924133301

Token 75: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -1.6337559223175049
    2. '<|end|>' → logprob: -1.6337559223175049
    3. ':' → logprob: -1.8837559223175049
    4. ')' → logprob: -2.258755922317505
    5. ' *' → logprob: -2.383755922317505
    6. '<|end|>' → logprob: -2.633755922317505
    7. ' =' → logprob: -2.758755922317505
    8. ' ' → logprob: -3.383755922317505
    9. '=' → logprob: -4.008755683898926
    10. '*' → logprob: -4.133755683898926

Token 76: ' multiplier' (ID: 61814)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10080079734325409
    2. 'int' → logprob: -2.3508007526397705
    3. ' an' → logprob: -8.100800514221191
    4. ' ' → logprob: -8.725800514221191
    5. ')' → logprob: -10.850800514221191
    6. '52' → logprob: -11.225800514221191
    7. ' integer' → logprob: -11.350800514221191
    8. '64' → logprob: -11.600800514221191
    9. '32' → logprob: -11.600800514221191
    10. 'n' → logprob: -11.725800514221191

Token 77: ' integer' (ID: 16336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6984851956367493
    2. '):' → logprob: -1.9484851360321045
    3. ':' → logprob: -2.0734851360321045
    4. ')' → logprob: -2.0734851360321045
    5. '
' → logprob: -2.8234851360321045
    6. '):
' → logprob: -3.8234851360321045
    7. '<|end|>' → logprob: -5.198485374450684
    8. ',' → logprob: -5.948485374450684
    9. '  
' → logprob: -6.073485374450684
    10. ' ' → logprob: -6.198485374450684

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2246251404285431
    2. '):' → logprob: -2.2246251106262207
    3. ':' → logprob: -2.8496251106262207
    4. ')' → logprob: -3.9746251106262207
    5. '):
' → logprob: -4.474625110626221
    6. '
' → logprob: -6.349625110626221
    7. ':
' → logprob: -7.474625110626221
    8. ',' → logprob: -7.599625110626221
    9. 'def' → logprob: -7.974625110626221
    10. ' ' → logprob: -8.349625587463379

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004684545565396547
    2. '
' → logprob: -7.1296844482421875
    3. '    
' → logprob: -7.1296844482421875
    4. '    ' → logprob: -7.5046844482421875
    5. ':' → logprob: -8.004684448242188
    6. '<|end|>' → logprob: -8.254684448242188
    7. '```' → logprob: -8.254684448242188
    8. 'result' → logprob: -8.504684448242188
    9. ' ' → logprob: -8.504684448242188
    10. ')' → logprob: -8.504684448242188

Token 80: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47630438208580017
    2. ' result' → logprob: -1.7263044118881226
    3. 'result' → logprob: -2.101304292678833
    4. ' return' → logprob: -3.726304292678833
    5. ' product' → logprob: -3.851304292678833
    6. 'product' → logprob: -5.101304531097412
    7. '    ' → logprob: -5.351304531097412
    8. ' 
' → logprob: -5.351304531097412
    9. 'return' → logprob: -5.726304531097412
    10. ' ' → logprob: -5.726304531097412

Token 81: ' returns' (ID: 7377)
  Prédit: ' product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' product' → logprob: -0.35792091488838196
    2. ' result' → logprob: -1.6079208850860596
    3. 'product' → logprob: -3.3579208850860596
    4. 'result' → logprob: -3.3579208850860596
    5. ' prod' → logprob: -4.232921123504639
    6. '   ' → logprob: -5.232921123504639
    7. 'prod' → logprob: -5.857921123504639
    8. ' res' → logprob: -5.982921123504639
    9. ' return' → logprob: -5.982921123504639
    10. 'return' → logprob: -7.857921123504639

Token 82: ' (' (ID: 350)
  Prédit: ' frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frac' → logprob: -0.11102598160505295
    2. ' (' → logprob: -2.3610260486602783
    3. 'frac' → logprob: -5.111025810241699
    4. ' ' → logprob: -6.986025810241699
    5. '   ' → logprob: -7.361025810241699
    6. ' format' → logprob: -7.611025810241699
    7. ' str' → logprob: -7.986025810241699
    8. ' hex' → logprob: -8.1110258102417
    9. ' '' → logprob: -8.1110258102417
    10. '(' → logprob: -8.3610258102417

Token 83: 'new' (ID: 1389)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.3776266574859619
    2. ' frac' → logprob: -1.502626657485962
    3. ' (' → logprob: -2.877626657485962
    4. '(fr' → logprob: -3.627626657485962
    5. ')' → logprob: -5.752626419067383
    6. '   ' → logprob: -7.127626419067383
    7. 'int' → logprob: -7.127626419067383
    8. ''' → logprob: -7.502626419067383
    9. '(' → logprob: -7.627626419067383
    10. ' ' → logprob: -8.065126419067383

Token 84: '_e' (ID: 4618)
  Prédit: '_frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_frac' → logprob: -0.315767765045166
    2. '_value' → logprob: -2.190767765045166
    3. 'frac' → logprob: -2.440767765045166
    4. ')' → logprob: -3.690767765045166
    5. '_sign' → logprob: -4.315767765045166
    6. '_val' → logprob: -4.440767765045166
    7. 'sign' → logprob: -5.440767765045166
    8. '_fraction' → logprob: -5.565767765045166
    9. 'value' → logprob: -5.690767765045166
    10. '64' → logprob: -6.065767765045166

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035187218338251114
    2. ')' → logprob: -3.535187244415283
    3. 'x' → logprob: -5.410187244415283
    4. ',)' → logprob: -8.160186767578125
    5. '_frac' → logprob: -8.910186767578125
    6. '),' → logprob: -9.285186767578125
    7. ' ,' → logprob: -9.535186767578125
    8. ',e' → logprob: -9.910186767578125
    9. '_bits' → logprob: -10.285186767578125
    10. '_fraction' → logprob: -10.410186767578125

Token 86: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.6833023428916931
    2. ' frac' → logprob: -1.433302402496338
    3. 'frac' → logprob: -2.058302402496338
    4. 'new' → logprob: -2.933302402496338
    5. ' (' → logprob: -3.433302402496338
    6. ')' → logprob: -5.183302402496338
    7. ' n' → logprob: -5.183302402496338
    8. ' ' → logprob: -5.558302402496338
    9. 'format' → logprob: -5.683302402496338
    10. '(fr' → logprob: -5.808302402496338

Token 87: '_frac' (ID: 199597)
  Prédit: '_frac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frac' → logprob: -0.0009774327045306563
    2. 'frac' → logprob: -7.250977516174316
    3. '_' → logprob: -8.625977516174316
    4. '_fr' → logprob: -9.750977516174316
    5. '_fraction' → logprob: -11.500977516174316
    6. '   ' → logprob: -12.125977516174316
    7. '_frag' → logprob: -13.125977516174316
    8. ')' → logprob: -13.125977516174316
    9. 'Frac' → logprob: -14.125977516174316
    10. '_bits' → logprob: -14.250977516174316

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2826117277145386
    2. ',' → logprob: -1.4076117277145386
    3. '):' → logprob: -6.782611846923828
    4. '),' → logprob: -9.282611846923828
    5. '   ' → logprob: -9.657611846923828
    6. ' )' → logprob: -10.407611846923828
    7. '):

' → logprob: -10.657611846923828
    8. ',)' → logprob: -10.782611846923828
    9. ' ,' → logprob: -10.907611846923828
    10. '<|end|>' → logprob: -11.907611846923828

Token 89: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.294095903635025
    2. ':' → logprob: -1.4190958738327026
    3. '<|end|>' → logprob: -5.669095993041992
    4. ' :' → logprob: -6.044095993041992
    5. ' ' → logprob: -6.294095993041992
    6. ',' → logprob: -7.169095993041992
    7. '(' → logprob: -7.169095993041992
    8. '    ' → logprob: -7.544095993041992
    9. '  ' → logprob: -7.544095993041992
    10. '<|end|>' → logprob: -7.919095993041992

Token 90: ' format' (ID: 6011)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.44455236196517944
    2. 'tuple' → logprob: -1.6945524215698242
    3. 't' → logprob: -2.569552421569824
    4. '64' → logprob: -3.194552421569824
    5. ' int' → logprob: -4.069552421569824
    6. ' (' → logprob: -4.569552421569824
    7. 'int' → logprob: -4.694552421569824
    8. ' ' → logprob: -5.319552421569824
    9. 'ternal' → logprob: -6.069552421569824
    10. 'teger' → logprob: -6.319552421569824

Token 91: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3425110578536987
    2. ' (' → logprob: -1.4675110578536987
    3. '(' → logprob: -1.8425110578536987
    4. ' =' → logprob: -2.4675111770629883
    5. ')' → logprob: -3.2175111770629883
    6. '<|end|>' → logprob: -3.4675111770629883
    7. ''' → logprob: -3.5925111770629883
    8. 'def' → logprob: -3.7175111770629883
    9. ',' → logprob: -3.8425111770629883
    10. ':' → logprob: -3.9675111770629883

Token 92: '   ' (ID: 271)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12372037768363953
    2. '(' → logprob: -2.873720407485962
    3. ' ' → logprob: -3.498720407485962
    4. '   ' → logprob: -4.498720169067383
    5. '    ' → logprob: -5.248720169067383
    6. ''' → logprob: -5.373720169067383
    7. '"' → logprob: -6.498720169067383
    8. ' '' → logprob: -6.623720169067383
    9. ')' → logprob: -6.873720169067383
    10. '0' → logprob: -7.748720169067383

Token 93: ' #' (ID: 1069)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4221634268760681
    2. '(' → logprob: -1.672163486480713
    3. '   ' → logprob: -2.797163486480713
    4. ''' → logprob: -3.672163486480713
    5. ')' → logprob: -4.297163486480713
    6. ' ' → logprob: -4.922163486480713
    7. '(int' → logprob: -5.047163486480713
    8. '0' → logprob: -5.297163486480713
    9. 'int' → logprob: -5.422163486480713
    10. '('' → logprob: -5.672163486480713

Token 94: ' number' (ID: 2086)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2052600234746933
    2. '(' → logprob: -2.2052600383758545
    3. '   ' → logprob: -2.9552600383758545
    4. ''' → logprob: -5.080259799957275
    5. ' ' → logprob: -5.580259799957275
    6. '64' → logprob: -6.955259799957275
    7. '0' → logprob: -6.955259799957275
    8. ')' → logprob: -6.955259799957275
    9. ' #' → logprob: -6.955259799957275
    10. '```' → logprob: -7.205259799957275

Token 95: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: ' (' (ID: 350)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9208856225013733
    2. ' (' → logprob: -1.0458855628967285
    3. 'n' → logprob: -2.6708855628967285
    4. 'frac' → logprob: -3.1708855628967285
    5. ' frac' → logprob: -3.4208855628967285
    6. '(n' → logprob: -3.5458855628967285
    7. '(' → logprob: -4.0458855628967285
    8. ' ' → logprob: -4.5458855628967285
    9. ' e' → logprob: -4.6708855628967285
    10. ' new' → logprob: -4.9208855628967285

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7851804494857788
    2. 'frac' → logprob: -1.7851804494857788
    3. '(' → logprob: -2.0351805686950684
    4. ' (' → logprob: -2.4101805686950684
    5. 'n' → logprob: -3.0351805686950684
    6. ')' → logprob: -3.6601805686950684
    7. ' ' → logprob: -3.7851805686950684
    8. ' n' → logprob: -3.9101805686950684
    9. '(n' → logprob: -4.535180568695068
    10. ' frac' → logprob: -4.785180568695068

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.46657782793045044
    2. '+' → logprob: -1.3415777683258057
    3. '.' → logprob: -2.2165777683258057
    4. ')' → logprob: -6.841578006744385
    5. '.)' → logprob: -7.591578006744385
    6. '<<' → logprob: -8.966577529907227
    7. ').' → logprob: -9.091577529907227
    8. ' .' → logprob: -9.216577529907227
    9. ' *' → logprob: -9.341577529907227
    10. '<|end|>' → logprob: -9.591577529907227

Token 99: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.13447539508342743
    2. ' frac' → logprob: -2.3844754695892334
    3. ')' → logprob: -4.509475231170654
    4. ' (' → logprob: -4.884475231170654
    5. ' new' → logprob: -5.009475231170654
    6. 'new' → logprob: -5.884475231170654
    7. '(fr' → logprob: -6.259475231170654
    8. ' n' → logprob: -7.259475231170654
    9. 'n' → logprob: -7.759475231170654
    10. ' ' → logprob: -7.884475231170654

Token 100: '/' (ID: 14)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.32265597581863403
    2. '*' → logprob: -1.8226559162139893
    3. ')' → logprob: -2.4476559162139893
    4. ' +' → logprob: -4.072656154632568
    5. '+' → logprob: -5.447656154632568
    6. 'e' → logprob: -6.947656154632568
    7. ')*' → logprob: -7.197656154632568
    8. ' ' → logprob: -7.322656154632568
    9. '<<' → logprob: -7.322656154632568
    10. '*)' → logprob: -7.322656154632568

Token 101: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021067526191473007
    2. '2' → logprob: -3.8960676193237305
    3. ' (' → logprob: -7.7710676193237305
    4. ')' → logprob: -9.39606761932373
    5. '   ' → logprob: -12.27106761932373
    6. '450' → logprob: -12.39606761932373
    7. '\(' → logprob: -12.64606761932373
    8. ' ' → logprob: -12.89606761932373
    9. ')(' → logprob: -13.39606761932373
    10. '`' → logprob: -14.02106761932373

Token 102: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005506475921720266
    2. '52' → logprob: -5.25550651550293
    3. '^' → logprob: -8.75550651550293
    4. '*' → logprob: -9.38050651550293
    5. '53' → logprob: -11.13050651550293
    6. '```' → logprob: -12.13050651550293
    7. ' **' → logprob: -12.25550651550293
    8. '<|end|>' → logprob: -13.88050651550293
    9. ' ' → logprob: -14.00550651550293
    10. '***' → logprob: -14.13050651550293

Token 103: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.00012606535165105015
    2. '53' → logprob: -9.000125885009766
    3. '5' → logprob: -13.125125885009766
    4. '54' → logprob: -14.875125885009766
    5. ' ' → logprob: -16.375125885009766
    6. '56' → logprob: -17.000125885009766
    7. '55' → logprob: -17.250125885009766
    8. '1' → logprob: -17.562625885009766
    9. '64' → logprob: -17.687625885009766
    10. '63' → logprob: -17.875125885009766

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006373812211677432
    2. ')*' → logprob: -7.500637531280518
    3. ' )' → logprob: -9.50063705444336
    4. '   ' → logprob: -13.75063705444336
    5. '*)' → logprob: -13.75063705444336
    6. '*' → logprob: -13.87563705444336
    7. ')*(' → logprob: -14.25063705444336
    8. '),' → logprob: -14.37563705444336
    9. ')
' → logprob: -14.37563705444336
    10. '')' → logprob: -14.50063705444336

Token 105: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8464169502258301
    2. ')' → logprob: -1.72141695022583
    3. '*' → logprob: -2.34641695022583
    4. ' *' → logprob: -2.47141695022583
    5. 'def' → logprob: -2.72141695022583
    6. '<|end|>' → logprob: -2.72141695022583
    7. ',' → logprob: -3.84641695022583
    8. '<|end|>' → logprob: -4.22141695022583
    9. ':' → logprob: -4.59641695022583
    10. '
' → logprob: -5.09641695022583

Token 106: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.437421053647995
    2. 'n' → logprob: -1.0624210834503174
    3. ' (' → logprob: -5.312420845031738
    4. '(' → logprob: -6.437420845031738
    5. '2' → logprob: -6.937420845031738
    6. '(n' → logprob: -7.062420845031738
    7. ' ' → logprob: -8.312420845031738
    8. '`' → logprob: -10.937420845031738
    9. ')' → logprob: -12.062420845031738
    10. '1' → logprob: -12.187420845031738

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027794167399406433
    2. ')' → logprob: -4.777794361114502
    3. ':' → logprob: -5.277794361114502
    4. '
' → logprob: -5.527794361114502
    5. ' ' → logprob: -6.027794361114502
    6. '<|end|>' → logprob: -6.152794361114502
    7. ' *' → logprob: -6.902794361114502
    8. 'def' → logprob: -7.402794361114502
    9. '*' → logprob: -7.527794361114502
    10. '  ' → logprob: -7.652794361114502

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03081105649471283
    2. ')' → logprob: -4.780810832977295
    3. '<|end|>' → logprob: -4.780810832977295
    4. ' ' → logprob: -5.405810832977295
    5. '
' → logprob: -6.030810832977295
    6. 'def' → logprob: -6.655810832977295
    7. '    ' → logprob: -6.905810832977295
    8. ':' → logprob: -7.030810832977295
    9. '    
' → logprob: -7.530810832977295
    10. '(' → logprob: -7.530810832977295

Token 109: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09908103197813034
    2. '
' → logprob: -3.224081039428711
    3. ')' → logprob: -4.224081039428711
    4. 'result' → logprob: -4.474081039428711
    5. 'def' → logprob: -5.474081039428711
    6. '    
' → logprob: -5.974081039428711
    7. ' ' → logprob: -5.974081039428711
    8. ' result' → logprob: -6.224081039428711
    9. ' if' → logprob: -6.349081039428711
    10. '    ' → logprob: -6.349081039428711

Token 110: ' output' (ID: 4733)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20667922496795654
    2. ' product' → logprob: -2.206679344177246
    3. 'product' → logprob: -3.081679344177246
    4. 'result' → logprob: -4.081679344177246
    5. ' result' → logprob: -5.081679344177246
    6. 'def' → logprob: -6.456679344177246
    7. 'value' → logprob: -6.956679344177246
    8. 'total' → logprob: -7.581679344177246
    9. ' full' → logprob: -7.831679344177246
    10. '
' → logprob: -7.831679344177246

Token 111: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29922807216644287
    2. ' ' → logprob: -2.9242281913757324
    3. '=' → logprob: -3.0492281913757324
    4. ' (' → logprob: -3.2992281913757324
    5. '<|end|>' → logprob: -3.4242281913757324
    6. 'def' → logprob: -3.9242281913757324
    7. ',' → logprob: -4.549228191375732
    8. '   ' → logprob: -4.549228191375732
    9. '<|end|>' → logprob: -4.924228191375732
    10. ':' → logprob: -5.174228191375732

Token 112: ' form' (ID: 1625)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6037163138389587
    2. '(' → logprob: -1.8537163734436035
    3. ' ' → logprob: -3.1037163734436035
    4. ' format' → logprob: -3.1037163734436035
    5. '64' → logprob: -3.6037163734436035
    6. ' e' → logprob: -3.6037163734436035
    7. 'format' → logprob: -3.7287163734436035
    8. ' tuple' → logprob: -4.1037163734436035
    9. 'def' → logprob: -4.3537163734436035
    10. '(e' → logprob: -4.3537163734436035

Token 113: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08625731617212296
    2. '(' → logprob: -3.086257219314575
    3. ' =' → logprob: -4.211257457733154
    4. ' ' → logprob: -5.586257457733154
    5. '   ' → logprob: -5.586257457733154
    6. ' of' → logprob: -5.961257457733154
    7. 'def' → logprob: -6.336257457733154
    8. '('' → logprob: -6.836257457733154
    9. '(e' → logprob: -7.086257457733154
    10. ':' → logprob: -7.086257457733154

Token 114: 'e' (ID: 68)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2711612582206726
    2. ' int' → logprob: -2.5211613178253174
    3. 'e' → logprob: -2.7711613178253174
    4. ' e' → logprob: -3.8961613178253174
    5. ')' → logprob: -4.146161079406738
    6. ' new' → logprob: -4.396161079406738
    7. ' (' → logprob: -4.646161079406738
    8. '(int' → logprob: -4.771161079406738
    9. 'new' → logprob: -4.896161079406738
    10. ',' → logprob: -5.021161079406738

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07060937583446503
    2. '+' → logprob: -3.0706093311309814
    3. ' +' → logprob: -4.1956095695495605
    4. ' ,' → logprob: -6.0706095695495605
    5. ')' → logprob: -6.6956095695495605
    6. '_new' → logprob: -7.1956095695495605
    7. 'new' → logprob: -7.4456095695495605
    8. '-' → logprob: -8.570609092712402
    9. '_,' → logprob: -8.695609092712402
    10. '   ' → logprob: -8.820609092712402

Token 116: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.36027464270591736
    2. ' frac' → logprob: -1.2352746725082397
    3. ')' → logprob: -6.110274791717529
    4. ' ' → logprob: -6.235274791717529
    5. ' new' → logprob: -6.485274791717529
    6. 'new' → logprob: -6.610274791717529
    7. '<|end|>' → logprob: -6.610274791717529
    8. 'fr' → logprob: -6.735274791717529
    9. '   ' → logprob: -7.735274791717529
    10. '<|end|>' → logprob: -8.235274314880371

Token 117: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14651484787464142
    2. ')' → logprob: -2.021514892578125
    3. '):
' → logprob: -5.896514892578125
    4. ',' → logprob: -7.271514892578125
    5. '   ' → logprob: -9.021514892578125
    6. 'def' → logprob: -9.271514892578125
    7. '):

' → logprob: -9.396514892578125
    8. '):
' → logprob: -10.396514892578125
    9. '=' → logprob: -11.271514892578125
    10. ' ):' → logprob: -11.646514892578125

Token 118: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5075731873512268
    2. ':' → logprob: -1.132573127746582
    3. '
' → logprob: -3.757573127746582
    4. '(' → logprob: -4.757573127746582
    5. 'def' → logprob: -5.257573127746582
    6. ')' → logprob: -5.257573127746582
    7. '):' → logprob: -5.257573127746582
    8. '<|end|>' → logprob: -5.382573127746582
    9. ' ' → logprob: -5.507573127746582
    10. ':
' → logprob: -5.757573127746582

Token 119: ' ' (ID: 220)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -1.3517818450927734
    2. ' new' → logprob: -1.6017818450927734
    3. ' e' → logprob: -1.7267818450927734
    4. ' the' → logprob: -2.1017818450927734
    5. ' frac' → logprob: -2.3517818450927734
    6. 'e' → logprob: -2.8517818450927734
    7. ' (' → logprob: -3.9767818450927734
    8. 'new' → logprob: -4.226781845092773
    9. ' ' → logprob: -5.226781845092773
    10. 'def' → logprob: -5.351781845092773

Token 120: '1' (ID: 16)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6414068341255188
    2. 'int' → logprob: -1.641406774520874
    3. 'frac' → logprob: -1.891406774520874
    4. 'new' → logprob: -3.016406774520874
    5. 'def' → logprob: -4.016407012939453
    6. '52' → logprob: -4.141407012939453
    7. '64' → logprob: -5.516407012939453
    8. ' e' → logprob: -5.641407012939453
    9. ')' → logprob: -5.766407012939453
    10. 'n' → logprob: -6.016407012939453

Token 121: ' <=' (ID: 5017)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9671865701675415
    2. 'frac' → logprob: -1.7171865701675415
    3. ' n' → logprob: -1.9671865701675415
    4. 'e' → logprob: -2.217186450958252
    5. 'new' → logprob: -2.967186450958252
    6. ' new' → logprob: -3.092186450958252
    7. ' e' → logprob: -3.467186450958252
    8. ' frac' → logprob: -3.717186450958252
    9. '(' → logprob: -4.342186450958252
    10. ' (' → logprob: -4.342186450958252

Token 123: ' <' (ID: 464)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.2904771566390991
    2. '<' → logprob: -1.9154771566390991
    3. 'e' → logprob: -2.2904772758483887
    4. '<|end|>' → logprob: -2.2904772758483887
    5. 's' → logprob: -2.4154772758483887
    6. '<m' → logprob: -2.5404772758483887
    7. 'agnitude' → logprob: -3.2904772758483887
    8. 'ult' → logprob: -3.7904772758483887
    9. 'an' → logprob: -3.9154772758483887
    10. '_bits' → logprob: -4.290477275848389

Token 124: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003253335307817906
    2. '(' → logprob: -8.375325202941895
    3. '=' → logprob: -9.875325202941895
    4. '204' → logprob: -10.750325202941895
    5. ' ' → logprob: -11.500325202941895
    6. '=(' → logprob: -13.000325202941895
    7. ' (' → logprob: -13.375325202941895
    8. '104' → logprob: -14.000325202941895
    9. '3' → logprob: -14.437825202941895
    10. '209' → logprob: -14.625325202941895

Token 125: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023671327158808708
    2. '(' → logprob: -3.7736713886260986
    3. ' (' → logprob: -8.89867115020752
    4. '204' → logprob: -9.02367115020752
    5. ' ' → logprob: -9.39867115020752
    6. '=' → logprob: -10.27367115020752
    7. '64' → logprob: -11.64867115020752
    8. '=(' → logprob: -11.77367115020752
    9. '(n' → logprob: -12.14867115020752
    10. '
' → logprob: -12.27367115020752

Token 126: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29537466168403625
    2. ':' → logprob: -1.6703746318817139
    3. '<|end|>' → logprob: -3.795374631881714
    4. ')' → logprob: -4.170374870300293
    5. '):' → logprob: -4.795374870300293
    6. '
' → logprob: -5.170374870300293
    7. 'def' → logprob: -5.420374870300293
    8. ' ' → logprob: -6.170374870300293
    9. ',' → logprob: -6.420374870300293
    10. '<|end|>' → logprob: -6.795374870300293

Token 127: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5189065337181091
    2. '<|end|>' → logprob: -1.768906593322754
    3. ' ' → logprob: -2.268906593322754
    4. ')' → logprob: -2.893906593322754
    5. 'def' → logprob: -3.393906593322754
    6. ' 
' → logprob: -5.143906593322754
    7. '    ' → logprob: -5.393906593322754
    8. '
' → logprob: -5.518906593322754
    9. ' def' → logprob: -5.768906593322754
    10. '    
' → logprob: -6.018906593322754

Token 128: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7744953632354736
    2. '(' → logprob: -0.8994953632354736
    3. '1' → logprob: -3.1494953632354736
    4. 'frac' → logprob: -4.0244951248168945
    5. 'number' → logprob: -4.3994951248168945
    6. ' ' → logprob: -4.5244951248168945
    7. ' number' → logprob: -4.6494951248168945
    8. ' n' → logprob: -4.7744951248168945
    9. '(number' → logprob: -5.1494951248168945
    10. '(n' → logprob: -5.3994951248168945

Token 130: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6292408108711243
    2. 'frac' → logprob: -1.6292407512664795
    3. '1' → logprob: -2.1292407512664795
    4. 'n' → logprob: -3.2542407512664795
    5. ' (' → logprob: -3.2542407512664795
    6. 'new' → logprob: -3.3792407512664795
    7. 'number' → logprob: -4.379240989685059
    8. '(n' → logprob: -5.379240989685059
    9. ' n' → logprob: -5.504240989685059
    10. ' new' → logprob: -5.629240989685059

Token 131: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.00941273383796215
    2. ' frac' → logprob: -5.13441276550293
    3. '(fr' → logprob: -6.25941276550293
    4. 'new' → logprob: -7.50941276550293
    5. 'format' → logprob: -7.75941276550293
    6. 'fr' → logprob: -9.00941276550293
    7. ' new' → logprob: -9.25941276550293
    8. ' (' → logprob: -9.63441276550293
    9. 'fraction' → logprob: -9.75941276550293
    10. '_frac' → logprob: -10.00941276550293

Token 133: '/' (ID: 14)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06859485805034637
    2. ':' → logprob: -3.8185949325561523
    3. ')' → logprob: -4.193594932556152
    4. '
' → logprob: -5.068594932556152
    5. '<|end|>' → logprob: -5.193594932556152
    6. '):' → logprob: -5.943594932556152
    7. ' ' → logprob: -6.193594932556152
    8. ',' → logprob: -6.318594932556152
    9. 'def' → logprob: -6.568594932556152
    10. ' *' → logprob: -6.818594932556152

Token 134: '2' (ID: 17)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.75000286102295
    3. '524' → logprob: -14.00000286102295
    4. '(' → logprob: -14.87500286102295
    5. '53' → logprob: -15.87500286102295
    6. ''' → logprob: -16.375001907348633
    7. '520' → logprob: -16.375001907348633
    8. '2' → logprob: -16.500001907348633
    9. '`' → logprob: -17.625001907348633
    10. '525' → logprob: -18.000001907348633

Token 135: '^' (ID: 61)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.02689765766263008
    2. '_' → logprob: -4.026897430419922
    3. '   ' → logprob: -5.526897430419922
    4. ')' → logprob: -6.401897430419922
    5. '53' → logprob: -7.151897430419922
    6. '_bits' → logprob: -7.901897430419922
    7. '_
' → logprob: -8.151897430419922
    8. 'x' → logprob: -8.276897430419922
    9. '^' → logprob: -8.901897430419922
    10. '{' → logprob: -9.276897430419922

Token 136: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -1.1279553291387856e-05
    2. '53' → logprob: -11.625011444091797
    3. ' ' → logprob: -13.750011444091797
    4. '5' → logprob: -15.125011444091797
    5. '54' → logprob: -16.125011444091797
    6. '052' → logprob: -16.687511444091797
    7. '522' → logprob: -16.812511444091797
    8. '64' → logprob: -17.125011444091797
    9. '<|end|>' → logprob: -17.250011444091797
    10. '512' → logprob: -17.250011444091797

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07372753322124481
    2. ':' → logprob: -3.448727607727051
    3. '
' → logprob: -3.698727607727051
    4. ')' → logprob: -5.448727607727051
    5. '    
' → logprob: -6.573727607727051
    6. '<|end|>' → logprob: -6.698727607727051
    7. ':
' → logprob: -6.823727607727051
    8. '):' → logprob: -7.198727607727051
    9. ' ' → logprob: -7.198727607727051
    10. ' 
' → logprob: -7.323727607727051

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009594352915883064
    2. ')' → logprob: -5.509594440460205
    3. '
' → logprob: -6.884594440460205
    4. '    
' → logprob: -7.009594440460205
    5. '    ' → logprob: -7.134594440460205
    6. 'def' → logprob: -7.634594440460205
    7. ' ' → logprob: -8.009593963623047
    8. 'result' → logprob: -8.134593963623047
    9. ':' → logprob: -8.634593963623047
    10. '#' → logprob: -8.634593963623047

Token 139: ' total' (ID: 3609)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7713952660560608
    2. '   ' → logprob: -0.8963952660560608
    3. ' result' → logprob: -3.396395206451416
    4. 'product' → logprob: -3.521395206451416
    5. ' product' → logprob: -4.646395206451416
    6. 'value' → logprob: -4.646395206451416
    7. 'm' → logprob: -4.771395206451416
    8. ' if' → logprob: -5.521395206451416
    9. '    
' → logprob: -5.646395206451416
    10. 'val' → logprob: -5.896395206451416

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147863030433655
    2. '=' → logprob: -1.7014786005020142
    3. '_frac' → logprob: -10.076478958129883
    4. '_bits' → logprob: -11.826478958129883
    5. '_' → logprob: -11.826478958129883
    6. ')' → logprob: -13.576478958129883
    7. ',' → logprob: -13.826478958129883
    8. '=int' → logprob: -13.951478958129883
    9. '_value' → logprob: -13.951478958129883
    10. '_fraction' → logprob: -14.326478958129883

Token 141: ' (' (ID: 350)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.5839332938194275
    2. ' frac' → logprob: -0.8339332938194275
    3. '(fr' → logprob: -5.458933353424072
    4. ' (' → logprob: -5.708933353424072
    5. '(' → logprob: -8.333932876586914
    6. ' ' → logprob: -9.583932876586914
    7. '   ' → logprob: -10.708932876586914
    8. ' int' → logprob: -11.458932876586914
    9. 'int' → logprob: -11.708932876586914
    10. ' n' → logprob: -12.083932876586914

Token 142: '1' (ID: 16)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.3811688721179962
    2. '(' → logprob: -1.3811688423156738
    3. '1' → logprob: -3.256168842315674
    4. '(fr' → logprob: -4.006168842315674
    5. ' (' → logprob: -5.006168842315674
    6. ' frac' → logprob: -7.131168842315674
    7. '   ' → logprob: -8.006169319152832
    8. '((' → logprob: -8.131169319152832
    9. '(n' → logprob: -8.256169319152832
    10. ' ' → logprob: -9.006169319152832

Token 143: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.18260662257671356
    2. ' <<' → logprob: -1.80760657787323
    3. ' +' → logprob: -6.3076066970825195
    4. '+' → logprob: -7.0576066970825195
    5. ')<<' → logprob: -9.43260669708252
    6. ' *' → logprob: -10.05760669708252
    7. '*' → logprob: -10.80760669708252
    8. '<<<' → logprob: -12.05760669708252
    9. '<' → logprob: -12.30760669708252
    10. ')' → logprob: -12.30760669708252

Token 144: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.125000953674316
    3. '53' → logprob: -15.750000953674316
    4. '54' → logprob: -16.625001907348633
    5. '56' → logprob: -18.125001907348633
    6. '052' → logprob: -18.625001907348633
    7. '55' → logprob: -19.500001907348633
    8. '64' → logprob: -19.750001907348633
    9. '522' → logprob: -19.875001907348633
    10. '62' → logprob: -20.125001907348633

Token 145: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -3.128163257315464e-07
    2. '53' → logprob: -15.5
    3. ' ' → logprob: -16.75
    4. '54' → logprob: -18.25
    5. '052' → logprob: -18.875
    6. '56' → logprob: -19.875
    7. '64' → logprob: -20.625
    8. '62' → logprob: -21.0
    9. '55' → logprob: -21.125
    10. '520' → logprob: -21.25

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006198656628839672
    2. ' )' → logprob: -7.875619888305664
    3. ')*' → logprob: -8.375619888305664
    4. '*' → logprob: -11.750619888305664
    5. '*)' → logprob: -14.000619888305664
    6. ' ' → logprob: -15.875619888305664
    7. ' *' → logprob: -16.250619888305664
    8. '   ' → logprob: -16.625619888305664
    9. ' ' → logprob: -17.000619888305664
    10. ')+' → logprob: -17.125619888305664

Token 147: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11284541338682175
    2. '*' → logprob: -2.2378454208374023
    3. ')' → logprob: -11.487845420837402
    4. ' ' → logprob: -11.987845420837402
    5. ' ' → logprob: -12.612845420837402
    6. ')*' → logprob: -13.362845420837402
    7. '<|end|>' → logprob: -14.362845420837402
    8. '   ' → logprob: -15.362845420837402
    9. '*object' → logprob: -15.362845420837402
    10. ',' → logprob: -15.987845420837402

Token 148: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.44236791133880615
    2. ' frac' → logprob: -1.0673679113388062
    3. '(fr' → logprob: -4.692368030548096
    4. ' (' → logprob: -5.567368030548096
    5. '(' → logprob: -8.317367553710938
    6. ' ' → logprob: -8.442367553710938
    7. 'fr' → logprob: -10.192367553710938
    8. '   ' → logprob: -10.879867553710938
    9. '_frac' → logprob: -11.067367553710938
    10. '  ' → logprob: -11.692367553710938

Token 149: '
' (ID: 198)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0010437668533995748
    2. '*' → logprob: -6.876043796539307
    3. '<|end|>' → logprob: -12.876043319702148
    4. '*n' → logprob: -13.126043319702148
    5. ' ' → logprob: -13.251043319702148
    6. '   ' → logprob: -13.501043319702148
    7. ' ' → logprob: -14.626043319702148
    8. '
' → logprob: -14.751043319702148
    9. ',' → logprob: -14.751043319702148
    10. '<|end|>' → logprob: -14.751043319702148

Token 150: '   ' (ID: 271)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01960785873234272
    2. '*' → logprob: -4.019608020782471
    3. '   ' → logprob: -7.519608020782471
    4. '*n' → logprob: -7.894608020782471
    5. 'total' → logprob: -8.519607543945312
    6. '<|end|>' → logprob: -9.144607543945312
    7. '<|end|>' → logprob: -10.019607543945312
    8. '
' → logprob: -10.019607543945312
    9. ' total' → logprob: -10.269607543945312
    10. '    
' → logprob: -10.894607543945312

Token 151: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6341807842254639
    2. 'total' (adapté à ' total') → logprob: -1.2591807842254639
    3. ' *' → logprob: -1.7591807842254639
    4. '*' → logprob: -4.759181022644043
    5. 'result' → logprob: -6.134181022644043
    6. ' result' → logprob: -7.259181022644043
    7. '(total' → logprob: -7.884181022644043
    8. '   ' → logprob: -8.009181022644043
    9. ' ' → logprob: -8.134181022644043
    10. ' multiplied' → logprob: -8.259181022644043

Token 152: ' *=' (ID: 25253)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8122565150260925
    2. '=' → logprob: -1.5622565746307373
    3. ' *' → logprob: -1.9372565746307373
    4. ' *=' → logprob: -2.0622565746307373
    5. '*=' → logprob: -3.0622565746307373
    6. ' =' → logprob: -3.5622565746307373
    7. ' ' → logprob: -11.562256813049316
    8. '   ' → logprob: -11.562256813049316
    9. '#' → logprob: -11.937256813049316
    10. ' ' → logprob: -12.062256813049316

Token 153: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020678490400314
    2. ' n' → logprob: -2.3502068519592285
    3. '	n' → logprob: -16.47520637512207
    4. '   ' → logprob: -18.10020637512207
    5. '(n' → logprob: -18.85020637512207
    6. ' ' → logprob: -19.10020637512207
    7. '
' → logprob: -19.22520637512207
    8. '_n' → logprob: -19.47520637512207
    9. ' ' → logprob: -19.72520637512207
    10. '```' → logprob: -19.72520637512207

Token 154: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011327320709824562
    2. '    
' → logprob: -5.386327266693115
    3. '  
' → logprob: -6.386327266693115
    4. ' 
' → logprob: -6.511327266693115
    5. '   ' → logprob: -6.886327266693115
    6. '\n' → logprob: -7.386327266693115
    7. '
' → logprob: -7.511327266693115
    8. 'total' → logprob: -7.886327266693115
    9. '   
' → logprob: -8.136327743530273
    10. ' total' → logprob: -8.886327743530273

Token 155: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02772761695086956
    2. '   ' → logprob: -4.1527276039123535
    3. '    
' → logprob: -4.7777276039123535
    4. '  
' → logprob: -6.9027276039123535
    5. ' 
' → logprob: -7.0277276039123535
    6. '   
' → logprob: -7.9027276039123535
    7. '
' → logprob: -8.402728080749512
    8. '

' → logprob: -8.652728080749512
    9. '\n' → logprob: -9.402728080749512
    10. 'total' → logprob: -9.652728080749512

Token 156: ' integer' (ID: 16336)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.2127076387405396
    2. ' ' → logprob: -1.8377076387405396
    3. '<|end|>' → logprob: -1.8377076387405396
    4. '
' → logprob: -2.33770751953125
    5. '\n' → logprob: -2.33770751953125
    6. ' if' → logprob: -3.08770751953125
    7. ' total' → logprob: -3.83770751953125
    8. '<|end|>' → logprob: -4.08770751953125
    9. ' return' → logprob: -4.33770751953125
    10. ' 

' → logprob: -4.58770751953125

Token 157: ' multiplication' (ID: 86340)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015036017633974552
    2. '<|end|>' → logprob: -5.390036106109619
    3. '<|end|>' → logprob: -6.015036106109619
    4. '    
' → logprob: -6.140036106109619
    5. '\n' → logprob: -6.640036106109619
    6. '   ' → logprob: -6.640036106109619
    7. ' 
' → logprob: -7.140036106109619
    8. '
' → logprob: -7.640036106109619
    9. '  
' → logprob: -7.890036106109619
    10. 'total' → logprob: -8.640035629272461

Token 158: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024826396256685257
    2. '<|end|>' → logprob: -5.274826526641846
    3. '\n' → logprob: -5.399826526641846
    4. '    
' → logprob: -5.399826526641846
    5. '  
' → logprob: -5.399826526641846
    6. ' 
' → logprob: -6.274826526641846
    7. '   ' → logprob: -6.399826526641846
    8. '<|end|>' → logprob: -7.524826526641846
    9. ',' → logprob: -7.899826526641846
    10. '   
' → logprob: -8.274826049804688

Token 159: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2021428644657135
    2. '\n' → logprob: -2.3271429538726807
    3. '   ' → logprob: -3.5771429538726807
    4. '    
' → logprob: -3.8271429538726807
    5. '  
' → logprob: -3.9521429538726807
    6. ' 
' → logprob: -4.827142715454102
    7. '   
' → logprob: -6.577142715454102
    8. 'total' → logprob: -6.577142715454102
    9. '<|end|>' → logprob: -6.577142715454102
    10. 'n' → logprob: -7.452142715454102

Token 160: ' e' (ID: 319)
  Prédit: ' shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -1.118760347366333
    2. 'shift' → logprob: -1.118760347366333
    3. ' if' → logprob: -1.868760347366333
    4. 'if' → logprob: -2.743760347366333
    5. '   ' → logprob: -2.868760347366333
    6. ' e' → logprob: -3.618760347366333
    7. 'e' (adapté à ' e') → logprob: -4.118760108947754
    8. ' new' → logprob: -4.118760108947754
    9. ' bit' → logprob: -6.618760108947754
    10. '
' → logprob: -6.618760108947754

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026451939716935158
    2. '=' → logprob: -3.651451826095581
    3. ',' → logprob: -9.65145206451416
    4. 'x' → logprob: -9.90145206451416
    5. 'xp' → logprob: -10.90145206451416
    6. '_shift' → logprob: -12.65145206451416
    7. '_bits' → logprob: -13.02645206451416
    8. ' ' → logprob: -13.27645206451416
    9. ' +=' → logprob: -13.40145206451416
    10. 'f' → logprob: -13.40145206451416

Token 162: ' total' (ID: 3609)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9069887399673462
    2. '52' → logprob: -0.9069887399673462
    3. 'total' → logprob: -1.7819887399673462
    4. ' ' → logprob: -4.656988620758057
    5. ' total' → logprob: -5.031988620758057
    6. '53' → logprob: -5.531988620758057
    7. '(total' → logprob: -6.656988620758057
    8. '1' → logprob: -6.906988620758057
    9. '(' → logprob: -7.406988620758057
    10. 'int' → logprob: -8.031989097595215

Token 163: '.bit' (ID: 61866)
  Prédit: '.bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.bit' → logprob: -0.006874741520732641
    2. '.' → logprob: -5.7568745613098145
    3. '>>' → logprob: -5.7568745613098145
    4. '52' → logprob: -8.381875038146973
    5. ' >>' → logprob: -9.256875038146973
    6. '
' → logprob: -9.381875038146973
    7. '53' → logprob: -10.506875038146973
    8. '>' → logprob: -10.756875038146973
    9. ' //' → logprob: -11.131875038146973
    10. '.shift' → logprob: -11.381875038146973

Token 164: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0004988207365386188
    2. 'length' → logprob: -7.6254987716674805
    3. 'ength' → logprob: -11.50049877166748
    4. '_LENGTH' → logprob: -15.12549877166748
    5. '```' → logprob: -16.000499725341797
    6. 'Length' → logprob: -16.250499725341797
    7. 's' → logprob: -16.750499725341797
    8. 'len' → logprob: -17.000499725341797
    9. ' length' → logprob: -17.125499725341797
    10. 'leng' → logprob: -17.500499725341797

Token 165: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004789320519194007
    2. ' ()' → logprob: -8.000478744506836
    3. '()-' → logprob: -9.000478744506836
    4. '(' → logprob: -11.625478744506836
    5. '())' → logprob: -12.000478744506836
    6. '()
' → logprob: -13.375478744506836
    7. ')' → logprob: -14.125478744506836
    8. '()>' → logprob: -14.500478744506836
    9. '()+' → logprob: -14.625478744506836
    10. '-' → logprob: -15.125478744506836

Token 166: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14430885016918182
    2. '-' → logprob: -2.0193088054656982
    3. '()' → logprob: -6.644309043884277
    4. ' ' → logprob: -8.269309043884277
    5. '   ' → logprob: -10.269309043884277
    6. '()-' → logprob: -10.769309043884277
    7. ' ()' → logprob: -11.644309043884277
    8. ')' → logprob: -13.019309043884277
    9. '  ' → logprob: -13.269309043884277
    10. '    ' → logprob: -14.019309043884277

Token 167: ' ' (ID: 220)
  Prédit: '53'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '53' → logprob: -0.07373683154582977
    2. '1' → logprob: -2.8237369060516357
    3. '52' → logprob: -4.448736667633057
    4. '54' → logprob: -12.573737144470215
    5. ' ' → logprob: -12.698737144470215
    6. '(' → logprob: -15.698737144470215
    7. '51' → logprob: -16.8237361907959
    8. '```' → logprob: -17.4487361907959
    9. '`' → logprob: -17.5737361907959
    10. '   ' → logprob: -17.9487361907959

Token 168: '53' (ID: 6798)
  Prédit: '53'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '53' → logprob: -0.1549849659204483
    2. '52' → logprob: -2.029984951019287
    3. '1' → logprob: -4.404984951019287
    4. ' ' → logprob: -11.279985427856445
    5. '54' → logprob: -12.529985427856445
    6. '(' → logprob: -13.654985427856445
    7. '51' → logprob: -15.404985427856445
    8. '>' → logprob: -16.029985427856445
    9. '`' → logprob: -16.842485427856445
    10. '```' → logprob: -16.904985427856445

Token 169: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.043487805873155594
    2. '   ' → logprob: -3.293487787246704
    3. '    
' → logprob: -5.418488025665283
    4. '
' → logprob: -8.543487548828125
    5. '  
' → logprob: -8.543487548828125
    6. '\n' → logprob: -9.168487548828125
    7. '<|end|>' → logprob: -9.168487548828125
    8. '   
' → logprob: -9.418487548828125
    9. ' 
' → logprob: -9.668487548828125
    10. 'total' → logprob: -10.168487548828125

Token 170: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007624849211424589
    2. '   ' → logprob: -5.632624626159668
    3. '    
' → logprob: -6.257624626159668
    4. ' if' → logprob: -7.632624626159668
    5. ' 
' → logprob: -8.007624626159668
    6. '  
' → logprob: -8.132624626159668
    7. 'if' → logprob: -8.507624626159668
    8. '<|end|>' → logprob: -8.507624626159668
    9. 'total' → logprob: -8.882624626159668
    10. '   
' → logprob: -9.382624626159668

Token 171: ' shift' (ID: 12847)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7345917224884033
    2. ' total' → logprob: -0.9845917224884033
    3. ' (' → logprob: -2.6095917224884033
    4. '(total' → logprob: -3.6095917224884033
    5. ' e' → logprob: -4.234591484069824
    6. 'frac' → logprob: -5.234591484069824
    7. 'e' → logprob: -5.234591484069824
    8. 'if' → logprob: -5.734591484069824
    9. '(' → logprob: -5.734591484069824
    10. ' if' → logprob: -5.734591484069824

Token 172: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23193471133708954
    2. 'total' → logprob: -2.7319347858428955
    3. '<|end|>' → logprob: -2.9819347858428955
    4. '   ' → logprob: -3.7319347858428955
    5. ' if' → logprob: -4.106934547424316
    6. '    
' → logprob: -4.856934547424316
    7. ' 
' → logprob: -5.106934547424316
    8. ',' → logprob: -5.481934547424316
    9. '     
' → logprob: -5.481934547424316
    10. ' total' → logprob: -5.606934547424316

Token 173: ' make' (ID: 1520)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2682117521762848
    2. ' e' → logprob: -2.143211841583252
    3. ' adjust' → logprob: -3.768211841583252
    4. ' get' → logprob: -4.018211841583252
    5. 'adjust' → logprob: -4.143211841583252
    6. 'total' → logprob: -5.018211841583252
    7. '1' → logprob: -5.268211841583252
    8. ' keep' → logprob: -5.268211841583252
    9. 'get' → logprob: -5.393211841583252
    10. 'keep' → logprob: -5.643211841583252

Token 174: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6047453284263611
    2. 'total' → logprob: -1.8547453880310059
    3. '(' → logprob: -2.229745388031006
    4. ' total' → logprob: -2.979745388031006
    5. 'e' → logprob: -3.104745388031006
    6. ' e' → logprob: -3.104745388031006
    7. ' (' → logprob: -3.479745388031006
    8. '(total' → logprob: -4.979745388031006
    9. ' ' → logprob: -5.229745388031006
    10. '(e' → logprob: -5.604745388031006

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15573976933956146
    2. 'total' → logprob: -2.6557397842407227
    3. '(' → logprob: -3.2807397842407227
    4. 'e' → logprob: -3.7807397842407227
    5. 'm' → logprob: -5.280739784240723
    6. ' total' → logprob: -6.030739784240723
    7. ' (' → logprob: -6.155739784240723
    8. '(total' → logprob: -6.280739784240723
    9. ' e' → logprob: -7.155739784240723
    10. '(e' → logprob: -7.780739784240723

Token 176: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6502054333686829
    2. '<=' → logprob: -0.7752054333686829
    3. '<|end|>' → logprob: -4.275205612182617
    4. '<<' → logprob: -6.900205612182617
    5. ' <<=' → logprob: -7.775205612182617
    6. '+' → logprob: -7.775205612182617
    7. ' ' → logprob: -8.150205612182617
    8. ' +' → logprob: -8.150205612182617
    9. '<' → logprob: -8.900205612182617
    10. '0' → logprob: -9.275205612182617

Token 177: ' m' (ID: 284)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8339206576347351
    2. ' total' → logprob: -1.0839207172393799
    3. '(total' → logprob: -2.33392071723938
    4. ' (' → logprob: -2.45892071723938
    5. 'm' → logprob: -3.45892071723938
    6. '(' → logprob: -4.708920478820801
    7. ' m' → logprob: -5.833920478820801
    8. '(m' → logprob: -6.708920478820801
    9. '((' → logprob: -8.5839204788208
    10. '(e' → logprob: -10.2089204788208

Token 178: ' <' (ID: 464)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0612157583236694
    2. 'total' → logprob: -1.8112157583236694
    3. ' if' → logprob: -1.9362157583236694
    4. '   ' → logprob: -2.311215877532959
    5. 'if' → logprob: -2.561215877532959
    6. '+' → logprob: -2.561215877532959
    7. ' +' → logprob: -3.561215877532959
    8. ' total' → logprob: -4.186215877532959
    9. '    
' → logprob: -4.436215877532959
    10. ',' → logprob: -4.561215877532959

Token 179: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004450892156455666
    2. ' ' → logprob: -8.375445365905762
    3. '=' → logprob: -8.500445365905762
    4. '1' → logprob: -11.625445365905762
    5. '53' → logprob: -14.625445365905762
    6. ' =' → logprob: -15.000445365905762
    7. '52' → logprob: -15.250445365905762
    8. '   ' → logprob: -15.250445365905762
    9. 'e' → logprob: -15.750445365905762
    10. '3' → logprob: -15.875445365905762

Token 180: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4285862057004124e-05
    2. '54' → logprob: -10.62503433227539
    3. '53' → logprob: -13.00003433227539
    4. '64' → logprob: -13.00003433227539
    5. '1' → logprob: -13.12503433227539
    6. '52' → logprob: -13.87503433227539
    7. ' ' → logprob: -13.87503433227539
    8. '=' → logprob: -14.62503433227539
    9. '62' → logprob: -15.00003433227539
    10. '3' → logprob: -15.62503433227539

Token 181: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44470521807670593
    2. '
' → logprob: -1.0697052478790283
    3. '    
' → logprob: -4.319705009460449
    4. 'total' → logprob: -7.444705009460449
    5. '  
' → logprob: -7.569705009460449
    6. ' if' → logprob: -7.819705009460449
    7. 'if' → logprob: -8.06970500946045
    8. '   
' → logprob: -8.69470500946045
    9. ' 
' → logprob: -9.06970500946045
    10. ' total' → logprob: -9.31970500946045

Token 182: ' subtract' (ID: 71973)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5891590118408203
    2. ' total' → logprob: -1.0891590118408203
    3. '   ' → logprob: -2.9641590118408203
    4. ' if' → logprob: -3.4641590118408203
    5. 'if' → logprob: -4.21415901184082
    6. ' 
' → logprob: -6.08915901184082
    7. 'frac' → logprob: -6.08915901184082
    8. ' new' → logprob: -6.83915901184082
    9. '    
' → logprob: -6.96415901184082
    10. ' frac' → logprob: -7.08915901184082

Token 183: ' leading' (ID: 8117)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '52' → logprob: -0.2863674759864807
    2. '1' → logprob: -1.786367416381836
    3. '53' → logprob: -2.911367416381836
    4. 'e' → logprob: -3.661367416381836
    5. ' ' → logprob: -7.036367416381836
    6. ' e' → logprob: -8.286367416381836
    7. '(' → logprob: -9.036367416381836
    8. '(e' → logprob: -10.161367416381836
    9. '   ' → logprob: -11.161367416381836
    10. '51' → logprob: -11.536367416381836

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040353029035031796
    2. '52' → logprob: -5.629035472869873
    3. ' ' → logprob: -8.379034996032715
    4. '53' → logprob: -8.629034996032715
    5. ' one' → logprob: -10.879034996032715
    6. 'bits' → logprob: -13.754034996032715
    7. '   ' → logprob: -14.254034996032715
    8. '`' → logprob: -14.379034996032715
    9. 'int' → logprob: -14.379034996032715
    10. 'bit' → logprob: -14.504034996032715

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -11.500024795532227
    3. '53' → logprob: -12.000024795532227
    4. '52' → logprob: -12.375024795532227
    5. ' one' → logprob: -13.000024795532227
    6. 'bit' → logprob: -14.125024795532227
    7. 'one' → logprob: -14.375024795532227
    8. 'bits' → logprob: -15.250024795532227
    9. '-' → logprob: -15.875024795532227
    10. 'ones' → logprob: -16.250024795532227

Token 186: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4213978052139282
    2. '
' → logprob: -1.2963978052139282
    3. 'total' → logprob: -2.7963976860046387
    4. '    
' → logprob: -5.421397686004639
    5. ' total' → logprob: -6.671397686004639
    6. ',' → logprob: -6.796397686004639
    7. 'if' → logprob: -7.171397686004639
    8. ' if' → logprob: -7.671397686004639
    9. '  
' → logprob: -8.671398162841797
    10. ',
' → logprob: -8.921398162841797

Token 187: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6676694750785828
    2. '   ' → logprob: -0.7926694750785828
    3. '    
' → logprob: -3.7926695346832275
    4. 'total' → logprob: -5.667669296264648
    5. '  
' → logprob: -6.042669296264648
    6. ',' → logprob: -6.792669296264648
    7. ' 
' → logprob: -6.917669296264648
    8. ' total' → logprob: -7.042669296264648
    9. '   
' → logprob: -7.292669296264648
    10. '     
' → logprob: -7.417669296264648

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34910014271736145
    2. '
' → logprob: -1.474100112915039
    3. '    
' → logprob: -3.349100112915039
    4. 'total' → logprob: -4.599100112915039
    5. ' total' → logprob: -5.099100112915039
    6. '```' → logprob: -5.974100112915039
    7. '  
' → logprob: -6.224100112915039
    8. ' if' → logprob: -6.474100112915039
    9. ' new' → logprob: -6.599100112915039
    10. ' 
' → logprob: -6.849100112915039

Token 189: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0895248651504517
    2. '
' → logprob: -1.4645248651504517
    3. ' total' → logprob: -2.089524745941162
    4. '   ' → logprob: -2.089524745941162
    5. '    
' → logprob: -2.714524745941162
    6. ' if' → logprob: -2.964524745941162
    7. ' 
' → logprob: -3.714524745941162
    8. 'if' (adapté à ' if') → logprob: -4.714524745941162
    9. '  
' → logprob: -4.839524745941162
    10. 'frac' → logprob: -4.964524745941162

Token 190: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.023668531328439713
    2. 'e' → logprob: -3.7736685276031494
    3. ' total' → logprob: -8.14866828918457
    4. ' ' → logprob: -9.77366828918457
    5. 'total' → logprob: -9.89866828918457
    6. ' not' → logprob: -11.14866828918457
    7. '	e' → logprob: -12.64866828918457
    8. '   ' → logprob: -12.77366828918457
    9. '  ' → logprob: -13.02366828918457
    10. ' (' → logprob: -13.89866828918457

Token 191: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6771575808525085
    2. '>' → logprob: -1.5521576404571533
    3. '<' → logprob: -1.6771576404571533
    4. ' >' → logprob: -2.4271576404571533
    5. ' >=' → logprob: -6.302157402038574
    6. ' ==' → logprob: -7.052157402038574
    7. '>=' → logprob: -7.177157402038574
    8. '=' → logprob: -7.802157402038574
    9. '==' → logprob: -8.177157402038574
    10. ' <=' → logprob: -8.177157402038574

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4369758367538452
    2. ' ' → logprob: -1.5619758367538452
    3. '=' → logprob: -1.9369758367538452
    4. ' =' → logprob: -9.061975479125977
    5. '1' → logprob: -10.311975479125977
    6. '   ' → logprob: -14.061975479125977
    7. '>' → logprob: -15.499475479125977
    8. '  ' → logprob: -15.686975479125977
    9. '=
' → logprob: -15.811975479125977
    10. ':' → logprob: -15.999475479125977

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10279902815818787
    2. '=' → logprob: -2.3527989387512207
    3. ' ' → logprob: -5.977798938751221
    4. '1' → logprob: -9.977799415588379
    5. ' =' → logprob: -11.977799415588379
    6. '-' → logprob: -14.352799415588379
    7. '

' → logprob: -15.102799415588379
    8. '=-' → logprob: -15.852799415588379
    9. '
' → logprob: -16.040298461914062
    10. '=None' → logprob: -16.665298461914062

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20524099469184875
    2. ':
' → logprob: -1.7052409648895264
    3. '   ' → logprob: -6.0802412033081055
    4. '       ' → logprob: -7.2052412033081055
    5. ' :' → logprob: -7.9552412033081055
    6. ' :
' → logprob: -9.080241203308105
    7. ',' → logprob: -9.205241203308105
    8. ':return' → logprob: -9.955241203308105
    9. '=' → logprob: -10.080241203308105
    10. '):
' → logprob: -10.205241203308105

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16851724684238434
    2. '0' → logprob: -3.0435173511505127
    3. '    ' → logprob: -3.2935173511505127
    4. ' total' → logprob: -3.6685173511505127
    5. ' ' → logprob: -4.043517112731934
    6. '   ' → logprob: -4.293517112731934
    7. 'total' → logprob: -5.918517112731934
    8. ' return' → logprob: -5.918517112731934
    9. ' e' → logprob: -6.043517112731934
    10. '1' → logprob: -6.418517112731934

Token 196: ' #' (ID: 1069)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.40679821372032166
    2. 'e' → logprob: -2.0317981243133545
    3. '       ' → logprob: -2.4067981243133545
    4. '0' → logprob: -3.1567981243133545
    5. '   ' → logprob: -3.1567981243133545
    6. ' return' → logprob: -4.281798362731934
    7. 'return' → logprob: -5.406798362731934
    8. ' total' → logprob: -5.531798362731934
    9. ' ' → logprob: -5.906798362731934
    10. 'total' → logprob: -7.031798362731934

Token 197: ' means' (ID: 4748)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.7834022641181946
    2. ' return' → logprob: -1.2834022045135498
    3. ' total' → logprob: -2.40840220451355
    4. 'return' → logprob: -3.40840220451355
    5. 'e' → logprob: -3.53340220451355
    6. '   ' → logprob: -3.53340220451355
    7. '       ' → logprob: -3.65840220451355
    8. '    ' → logprob: -4.283402442932129
    9. ' ' → logprob: -4.408402442932129
    10. 'total' → logprob: -4.908402442932129

Token 198: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4729419946670532
    2. '0' → logprob: -1.7229419946670532
    3. ' total' → logprob: -1.9729419946670532
    4. 'total' → logprob: -3.5979418754577637
    5. '1' → logprob: -4.597941875457764
    6. ' return' → logprob: -4.722941875457764
    7. ' e' → logprob: -5.347941875457764
    8. 'return' → logprob: -5.722941875457764
    9. '    ' → logprob: -6.722941875457764
    10. 'e' → logprob: -7.097941875457764

Token 199: ' <' (ID: 464)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.026918189600110054
    2. '<<' → logprob: -4.026918411254883
    3. '=' → logprob: -5.026918411254883
    4. '<' → logprob: -6.776918411254883
    5. ' <' → logprob: -7.401918411254883
    6. ' =' → logprob: -8.901918411254883
    7. ' >>=' → logprob: -9.401918411254883
    8. '==' → logprob: -10.526918411254883
    9. ' <<' → logprob: -10.901918411254883
    10. '<=' → logprob: -10.901918411254883

Token 200: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.58846515417099
    2. ' (' → logprob: -1.3384652137756348
    3. '1' → logprob: -1.7134652137756348
    4. ' ' → logprob: -6.088465213775635
    5. '   ' → logprob: -10.963464736938477
    6. '2' → logprob: -11.463464736938477
    7. '409' → logprob: -11.838464736938477
    8. '
' → logprob: -12.213464736938477
    9. '  ' → logprob: -12.463464736938477
    10. '0' → logprob: -12.588464736938477

Token 201: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02171211875975132
    2. '1' → logprob: -4.271712303161621
    3. ' (' → logprob: -4.896712303161621
    4. '2' → logprob: -11.146712303161621
    5. '409' → logprob: -11.146712303161621
    6. ' ' → logprob: -11.896712303161621
    7. '204' → logprob: -12.646712303161621
    8. '   ' → logprob: -13.021712303161621
    9. '```' → logprob: -13.521712303161621
    10. '104' → logprob: -13.646712303161621

Token 202: '^' (ID: 61)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31768661737442017
    2. '       ' → logprob: -2.5676865577697754
    3. '
' → logprob: -2.9426865577697754
    4. ' ' → logprob: -3.4426865577697754
    5. ' return' → logprob: -3.8176865577697754
    6. ',' → logprob: -4.067686557769775
    7. '0' → logprob: -4.567686557769775
    8. 'return' → logprob: -4.942686557769775
    9. ':
' → logprob: -5.067686557769775
    10. ':' → logprob: -5.192686557769775

Token 203: '52' (ID: 6283)
  Prédit: '53'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '53' → logprob: -0.5763975977897644
    2. '52' → logprob: -0.8263975977897644
    3. ' ' → logprob: -7.70139741897583
    4. 'e' → logprob: -12.701397895812988
    5. '54' → logprob: -13.701397895812988
    6. '(' → logprob: -14.951397895812988
    7. '1' → logprob: -15.451397895812988
    8. '0' → logprob: -15.451397895812988
    9. '63' → logprob: -16.201396942138672
    10. '
' → logprob: -16.201396942138672

Token 204: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7151079177856445
    2. '       ' → logprob: -1.7151079177856445
    3. '
' → logprob: -2.0901079177856445
    4. ':' → logprob: -2.7151079177856445
    5. ':
' → logprob: -2.9651079177856445
    6. ',' → logprob: -3.4651079177856445
    7. ' +' → logprob: -4.0901079177856445
    8. '+' → logprob: -4.8401079177856445
    9. '    
' → logprob: -5.0901079177856445
    10. ',
' → logprob: -5.5901079177856445

Token 205: ' can't' (ID: 8535)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.3950628936290741
    2. '       ' → logprob: -2.0200629234313965
    3. '   ' → logprob: -2.2700629234313965
    4. ' return' → logprob: -2.8950629234313965
    5. 'e' → logprob: -4.1450629234313965
    6. '    ' → logprob: -4.8950629234313965
    7. 'return' → logprob: -5.2700629234313965
    8. ' total' → logprob: -6.1450629234313965
    9. '0' → logprob: -6.3950629234313965
    10. ' ' → logprob: -7.0200629234313965

Token 206: ' happen' (ID: 5659)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.5326465368270874
    2. ' shift' → logprob: -1.0326465368270874
    3. 'return' → logprob: -4.282646656036377
    4. '   ' → logprob: -4.407646656036377
    5. ' return' → logprob: -4.907646656036377
    6. ' <<=' → logprob: -4.907646656036377
    7. 'normalize' → logprob: -5.657646656036377
    8. 'left' → logprob: -5.657646656036377
    9. 'e' → logprob: -6.532646656036377
    10. ' ' → logprob: -6.907646656036377

Token 207: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20819061994552612
    2. ':' → logprob: -2.583190679550171
    3. '       ' → logprob: -3.333190679550171
    4. '\n' → logprob: -3.708190679550171
    5. ')' → logprob: -4.333190441131592
    6. '
' → logprob: -4.458190441131592
    7. ':return' → logprob: -5.208190441131592
    8. ',' → logprob: -5.458190441131592
    9. '    
' → logprob: -5.583190441131592
    10. '):' → logprob: -5.833190441131592

Token 208: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6008375883102417
    2. 'multiply' → logprob: -2.1008377075195312
    3. 'positive' → logprob: -2.2258377075195312
    4. ' positive' → logprob: -2.3508377075195312
    5. ' n' → logprob: -2.6008377075195312
    6. 'multip' → logprob: -2.7258377075195312
    7. ' this' → logprob: -3.1008377075195312
    8. 'non' → logprob: -3.2258377075195312
    9. ' multiply' → logprob: -3.2258377075195312
    10. ' multiplication' → logprob: -3.3508377075195312

Token 209: '>=' (ID: 20974)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2461710274219513
    2. '=' → logprob: -2.996170997619629
    3. ' and' → logprob: -3.496170997619629
    4. ' or' → logprob: -3.746170997619629
    5. '   ' → logprob: -3.871170997619629
    6. ':' → logprob: -3.996170997619629
    7. '):' → logprob: -4.121170997619629
    8. ' if' → logprob: -4.996170997619629
    9. ' else' → logprob: -5.246170997619629
    10. ' unless' → logprob: -5.371170997619629

Token 210: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021912502124905586
    2. '2' → logprob: -3.8969125747680664
    3. ' ' → logprob: -6.646912574768066
    4. '0' → logprob: -10.146912574768066
    5. '   ' → logprob: -11.146912574768066
    6. '```' → logprob: -11.521912574768066
    7. '3' → logprob: -12.896912574768066
    8. '10' → logprob: -13.896912574768066
    9. '    ' → logprob: -14.021912574768066
    10. '       ' → logprob: -14.146912574768066

Token 211: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1043323501944542
    2. '
' → logprob: -3.604332447052002
    3. '       ' → logprob: -3.604332447052002
    4. '    
' → logprob: -4.354332447052002
    5. ':' → logprob: -4.604332447052002
    6. '\n' → logprob: -5.104332447052002
    7. ',' → logprob: -5.479332447052002
    8. ')' → logprob: -5.854332447052002
    9. ' return' → logprob: -6.479332447052002
    10. '        
' → logprob: -6.729332447052002

Token 212: ' original' (ID: 4756)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.16557806730270386
    2. ' frac' → logprob: -2.2905781269073486
    3. 'total' → logprob: -3.5405781269073486
    4. ' total' → logprob: -4.6655778884887695
    5. 'e' → logprob: -5.1655778884887695
    6. ' e' → logprob: -5.9155778884887695
    7. '   ' → logprob: -7.4155778884887695
    8. ' ' → logprob: -7.5405778884887695
    9. '(' → logprob: -7.5405778884887695
    10. '(fr' → logprob: -7.5405778884887695

Token 213: ' m' (ID: 284)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.4443463385105133
    2. ' frac' → logprob: -1.069346308708191
    3. '   ' → logprob: -5.0693464279174805
    4. ' total' → logprob: -5.6943464279174805
    5. 'total' → logprob: -5.9443464279174805
    6. 'fraction' → logprob: -7.3193464279174805
    7. ' code' → logprob: -7.8193464279174805
    8. '    ' → logprob: -7.9443464279174805
    9. ' ' → logprob: -8.06934642791748
    10. '```' → logprob: -8.31934642791748

Token 214: '>=' (ID: 20974)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2339581400156021
    2. ')' → logprob: -2.4839582443237305
    3. '       ' → logprob: -3.3589582443237305
    4. '
' → logprob: -4.2339582443237305
    5. ':return' → logprob: -4.3589582443237305
    6. ',' → logprob: -4.6089582443237305
    7. ' return' → logprob: -4.7339582443237305
    8. ':' → logprob: -4.7339582443237305
    9. '):
' → logprob: -5.3589582443237305
    10. '    ' → logprob: -5.6089582443237305

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0450030192732811
    2. '0' → logprob: -3.1700029373168945
    3. ' ' → logprob: -6.2950029373168945
    4. '52' → logprob: -9.045002937316895
    5. '```' → logprob: -12.107502937316895
    6. '<|end|>' → logprob: -12.170002937316895
    7. '   ' → logprob: -12.357502937316895
    8. '-' → logprob: -12.607502937316895
    9. '(' → logprob: -12.982502937316895
    10. '  ' → logprob: -13.420002937316895

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06142859905958176
    2. ':' → logprob: -4.061428546905518
    3. '    
' → logprob: -4.311428546905518
    4. '
' → logprob: -4.811428546905518
    5. '       ' → logprob: -4.936428546905518
    6. ',' → logprob: -5.061428546905518
    7. ')' → logprob: -6.061428546905518
    8. '        
' → logprob: -7.061428546905518
    9. '):' → logprob: -7.311428546905518
    10. '\n' → logprob: -7.561428546905518

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5900105237960815
    2. '   ' → logprob: -0.8400105237960815
    3. ' return' → logprob: -4.840010643005371
    4. 'return' → logprob: -6.465010643005371
    5. '        
' → logprob: -7.465010643005371
    6. ' total' → logprob: -7.465010643005371
    7. '    ' → logprob: -7.590010643005371
    8. ',' → logprob: -7.590010643005371
    9. '    
' → logprob: -7.715010643005371
    10. ')' → logprob: -8.090010643005371

Token 218: ' e' (ID: 319)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8911575078964233
    2. '       ' → logprob: -1.3911575078964233
    3. ' e' → logprob: -1.8911575078964233
    4. 'return' → logprob: -2.266157627105713
    5. ' raise' → logprob: -3.641157627105713
    6. 'raise' → logprob: -3.766157627105713
    7. 'e' (adapté à ' e') → logprob: -3.891157627105713
    8. '   ' → logprob: -4.766157627105713
    9. ' total' → logprob: -5.391157627105713
    10. ' pass' → logprob: -6.516157627105713

Token 219: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.476275771856308
    2. ' =' → logprob: -0.9762758016586304
    3. ' +=' → logprob: -6.60127592086792
    4. ' -=' → logprob: -7.97627592086792
    5. '+=' → logprob: -8.476275444030762
    6. '=-' → logprob: -9.351275444030762
    7. ',' → logprob: -10.101275444030762
    8. 'return' → logprob: -10.226275444030762
    9. '   ' → logprob: -10.726275444030762
    10. ' return' → logprob: -10.851275444030762

Token 220: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013266648165881634
    2. ' ' → logprob: -6.626326560974121
    3. '-' → logprob: -15.126326560974121
    4. '1' → logprob: -15.251326560974121
    5. ' -' → logprob: -16.251327514648438
    6. '   ' → logprob: -17.813827514648438
    7. '00' → logprob: -18.063827514648438
    8. ' ' → logprob: -18.188827514648438
    9. '<|end|>' → logprob: -18.376327514648438
    10. 's' → logprob: -18.563827514648438

Token 221: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '-' → logprob: -15.750004768371582
    4. '1' → logprob: -16.750003814697266
    5. '   ' → logprob: -18.000003814697266
    6. ' -' → logprob: -18.437503814697266
    7. '۰' → logprob: -18.562503814697266
    8. 's' → logprob: -18.750003814697266
    9. '00' → logprob: -19.187503814697266
    10. '=' → logprob: -19.437503814697266

Token 222: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03728871792554855
    2. '
' → logprob: -3.6622886657714844
    3. ' total' → logprob: -4.912288665771484
    4. 'total' → logprob: -6.037288665771484
    5. ',' → logprob: -7.787288665771484
    6. '    
' → logprob: -7.787288665771484
    7. '<|end|>' → logprob: -9.287288665771484
    8. '	total' → logprob: -9.787288665771484
    9. '  
' → logprob: -10.662288665771484
    10. ',
' → logprob: -10.662288665771484

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037298478186130524
    2. ' total' → logprob: -4.287298679351807
    3. '
' → logprob: -4.537298679351807
    4. 'total' → logprob: -5.162298679351807
    5. '    
' → logprob: -5.412298679351807
    6. '    ' → logprob: -8.037298202514648
    7. ' 
' → logprob: -8.412298202514648
    8. ',' → logprob: -8.412298202514648
    9. '<|end|>' → logprob: -8.787298202514648
    10. '   
' → logprob: -8.912298202514648

Token 224: ' shift' (ID: 12847)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8669453859329224
    2. '   ' → logprob: -1.7419453859329224
    3. ' total' → logprob: -2.241945266723633
    4. 'frac' → logprob: -2.616945266723633
    5. ' new' → logprob: -2.741945266723633
    6. 'new' → logprob: -3.241945266723633
    7. 'shift' (adapté à ' shift') → logprob: -3.241945266723633
    8. ' if' → logprob: -3.616945266723633
    9. 'if' → logprob: -3.991945266723633
    10. ' shifted' → logprob: -4.991945266723633

Token 225: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22604194283485413
    2. ' =' → logprob: -1.6010419130325317
    3. '_left' → logprob: -8.476041793823242
    4. '_amount' → logprob: -8.726041793823242
    5. 'left' → logprob: -9.351041793823242
    6. '   ' → logprob: -9.601041793823242
    7. ' ' → logprob: -10.851041793823242
    8. 'ed' → logprob: -11.101041793823242
    9. '_value' → logprob: -11.476041793823242
    10. 'amount' → logprob: -11.601041793823242

Token 226: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.35430359840393066
    2. ' e' → logprob: -1.2293035984039307
    3. 'max' → logprob: -5.729303359985352
    4. ' max' → logprob: -5.979303359985352
    5. ' ' → logprob: -10.354303359985352
    6. 'total' → logprob: -11.604303359985352
    7. ' total' → logprob: -12.229303359985352
    8. '	e' → logprob: -12.479303359985352
    9. '16' → logprob: -13.729303359985352
    10. '64' → logprob: -13.854303359985352

Token 227: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.106379508972168
    2. '<|end|>' → logprob: -1.231379508972168
    3. ' +' → logprob: -1.481379508972168
    4. ' ' → logprob: -2.856379508972168
    5. '
' → logprob: -2.981379508972168
    6. '<|end|>' → logprob: -4.356379508972168
    7. '*' → logprob: -4.856379508972168
    8. ' *' → logprob: -5.606379508972168
    9. ')' → logprob: -5.981379508972168
    10. ' if' → logprob: -6.356379508972168

Token 228: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5818533301353455
    2. ' total' → logprob: -1.3318533897399902
    3. '   ' → logprob: -1.8318533897399902
    4. '
' → logprob: -4.58185338973999
    5. 'frac' → logprob: -5.83185338973999
    6. ' frac' → logprob: -6.83185338973999
    7. ' if' → logprob: -7.70685338973999
    8. 'result' → logprob: -8.081852912902832
    9. '>>>' → logprob: -8.331852912902832
    10. ' new' → logprob: -8.456852912902832

Token 229: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3890179395675659
    2. ' total' → logprob: -2.1390180587768555
    3. 'new' → logprob: -3.1390180587768555
    4. 'frac' → logprob: -3.1390180587768555
    5. 'if' → logprob: -3.5140180587768555
    6. ' shifted' → logprob: -3.7640180587768555
    7. '   ' → logprob: -3.8890180587768555
    8. ' new' → logprob: -4.0140180587768555
    9. ' if' → logprob: -4.3890180587768555
    10. 'shift' → logprob: -5.1390180587768555

Token 230: ' truncate' (ID: 126309)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7844222784042358
    2. ' total' → logprob: -1.4094222784042358
    3. 'frac' → logprob: -2.2844223976135254
    4. 'if' → logprob: -2.5344223976135254
    5. ' new' → logprob: -3.4094223976135254
    6. ' if' → logprob: -3.5344223976135254
    7. 'new' → logprob: -3.9094223976135254
    8. ' frac' → logprob: -4.409422397613525
    9. ' shifted' → logprob: -5.034422397613525
    10. 'return' → logprob: -5.159422397613525

Token 231: ' fraction' (ID: 33763)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2179194688796997
    2. ' total' → logprob: -1.7179194688796997
    3. ' >>=' → logprob: -5.59291934967041
    4. '(total' → logprob: -5.96791934967041
    5. '>>' → logprob: -6.71791934967041
    6. 'frac' → logprob: -6.71791934967041
    7. ' (' → logprob: -6.96791934967041
    8. ' if' → logprob: -7.09291934967041
    9. '   ' → logprob: -7.34291934967041
    10. ')' → logprob: -7.34291934967041

Token 232: ' bits' (ID: 18189)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7787091135978699
    2. 'frac' → logprob: -1.5287091732025146
    3. ' =' → logprob: -2.1537091732025146
    4. '=' → logprob: -2.7787091732025146
    5. '   ' → logprob: -3.4037091732025146
    6. ' total' → logprob: -3.9037091732025146
    7. '>>' → logprob: -4.1537089347839355
    8. '>>>' → logprob: -4.2787089347839355
    9. ',' → logprob: -4.2787089347839355
    10. ' >>=' → logprob: -4.4037089347839355

Token 233: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3947281837463379
    2. 'total' → logprob: -1.644728183746338
    3. 'frac' → logprob: -2.769728183746338
    4. ' total' → logprob: -3.894728183746338
    5. ' frac' → logprob: -4.519728183746338
    6. ' =' → logprob: -4.519728183746338
    7. '>>>' → logprob: -5.269728183746338
    8. '
' → logprob: -5.519728183746338
    9. '=' → logprob: -5.644728183746338
    10. ' (' → logprob: -6.144728183746338

Token 234: ' ' (ID: 220)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.3467150926589966
    2. ' shift' → logprob: -1.7217150926589966
    3. '52' → logprob: -2.221714973449707
    4. '(' → logprob: -5.721714973449707
    5. ' (' → logprob: -6.721714973449707
    6. ' ' → logprob: -6.971714973449707
    7. '53' → logprob: -8.846714973449707
    8. 'total' → logprob: -9.596714973449707
    9. ' e' → logprob: -9.971714973449707
    10. 'e' → logprob: -9.971714973449707

Token 235: '52' (ID: 6283)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.6395334601402283
    2. '52' → logprob: -0.7645334601402283
    3. '(' → logprob: -5.014533519744873
    4. ' shift' → logprob: -8.514533042907715
    5. '53' → logprob: -10.389533042907715
    6. ' (' → logprob: -11.639533042907715
    7. ' ' → logprob: -12.139533042907715
    8. '(e' → logprob: -12.639533042907715
    9. '```' → logprob: -12.764533042907715
    10. 'max' → logprob: -13.264533042907715

Token 236: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.45633625984191895
    2. ' bits' → logprob: -1.706336259841919
    3. '<|end|>' → logprob: -2.706336259841919
    4. '_bits' → logprob: -3.456336259841919
    5. ',' → logprob: -3.581336259841919
    6. 'total' → logprob: -4.70633602142334
    7. '+' → logprob: -4.83133602142334
    8. ' ' → logprob: -5.33133602142334
    9. '<|end|>' → logprob: -5.58133602142334
    10. 'shift' → logprob: -5.95633602142334

Token 237: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020333636552095413
    2. 'total' → logprob: -4.270333766937256
    3. '
' → logprob: -5.895333766937256
    4. ' total' → logprob: -6.270333766937256
    5. '    
' → logprob: -7.895333766937256
    6. ',' → logprob: -8.645333290100098
    7. '<|end|>' → logprob: -9.020333290100098
    8. ' 
' → logprob: -9.145333290100098
    9. 'frac' → logprob: -9.395333290100098
    10. '    ' → logprob: -9.395333290100098

Token 238: ' shifting' (ID: 53586)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0732693672180176
    2. '(total' → logprob: -1.4482693672180176
    3. 'right' → logprob: -1.6982693672180176
    4. ' total' → logprob: -2.1982693672180176
    5. ' right' → logprob: -2.9482693672180176
    6. ' (' → logprob: -3.0732693672180176
    7. '(' → logprob: -4.073269367218018
    8. ' shifting' → logprob: -4.948269367218018
    9. '>>' → logprob: -5.948269367218018
    10. 'r' → logprob: -7.073269367218018

Token 239: ' right' (ID: 1849)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.039865780621767044
    2. ' total' → logprob: -3.664865732192993
    3. '   ' → logprob: -4.914865970611572
    4. '
' → logprob: -6.164865970611572
    5. 'right' → logprob: -6.539865970611572
    6. '>>' → logprob: -7.289865970611572
    7. '>>>' → logprob: -7.414865970611572
    8. ' >>=' → logprob: -8.289865493774414
    9. '(total' → logprob: -9.164865493774414
    10. 'frac' → logprob: -9.289865493774414

Token 240: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7957618832588196
    2. '   ' → logprob: -0.9207618832588196
    3. ' total' → logprob: -2.295761823654175
    4. 'shift' → logprob: -3.295761823654175
    5. ' shift' → logprob: -5.045762062072754
    6. '(total' → logprob: -6.295762062072754
    7. '>>>' → logprob: -6.920762062072754
    8. ' (' → logprob: -7.670762062072754
    9. ' >>' → logprob: -7.795762062072754
    10. '>>' → logprob: -8.170762062072754

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38822826743125916
    2. 'total' → logprob: -1.2632282972335815
    3. ' total' → logprob: -3.638228178024292
    4. 'return' → logprob: -4.763228416442871
    5. ' return' → logprob: -6.513228416442871
    6. 'frac' → logprob: -6.763228416442871
    7. ' frac' → logprob: -8.013228416442871
    8. '(total' → logprob: -8.013228416442871
    9. '>>>' → logprob: -9.138228416442871
    10. ' (' → logprob: -9.263228416442871

Token 242: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7062487602233887
    2. ' total' → logprob: -0.8312487602233887
    3. '   ' → logprob: -3.3312487602233887
    4. ' new' → logprob: -4.081248760223389
    5. 'new' → logprob: -4.706248760223389
    6. 'frac' → logprob: -6.081248760223389
    7. 'return' → logprob: -6.331248760223389
    8. ' frac' → logprob: -6.456248760223389
    9. 'result' → logprob: -6.956248760223389
    10. ' return' → logprob: -6.956248760223389

Token 243: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.6934254169464111
    2. 'shift' → logprob: -0.6934254169464111
    3. ' e' → logprob: -8.568425178527832
    4. 'e' → logprob: -10.068425178527832
    5. ' total' → logprob: -10.568425178527832
    6. 'total' → logprob: -11.568425178527832
    7. ' ' → logprob: -12.068425178527832
    8. '   ' → logprob: -12.818425178527832
    9. '  ' → logprob: -14.818425178527832
    10. ' (' → logprob: -15.068425178527832

Token 244: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16161268949508667
    2. '>' → logprob: -1.9116127490997314
    3. ' <=' → logprob: -7.036612510681152
    4. ' ==' → logprob: -8.661612510681152
    5. '==' → logprob: -9.411612510681152
    6. ' <' → logprob: -9.411612510681152
    7. ' >=' → logprob: -9.786612510681152
    8. '<=' → logprob: -10.161612510681152
    9. ')' → logprob: -11.661612510681152
    10. ':' → logprob: -11.661612510681152

Token 245: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13561469316482544
    2. ' ' → logprob: -2.1356146335601807
    3. '52' → logprob: -4.76061487197876
    4. '53' → logprob: -9.760614395141602
    5. '=' → logprob: -10.510614395141602
    6. '  ' → logprob: -14.698114395141602
    7. '<|end|>' → logprob: -14.885614395141602
    8. '>' → logprob: -15.198114395141602
    9. '51' → logprob: -15.198114395141602
    10. '

' → logprob: -15.323114395141602

Token 246: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3138037919998169
    2. '52' → logprob: -1.313803791999817
    3. ' ' → logprob: -7.688803672790527
    4. '53' → logprob: -9.813803672790527
    5. '51' → logprob: -11.688803672790527
    6. '54' → logprob: -12.626303672790527
    7. 'shift' → logprob: -12.813803672790527
    8. '=' → logprob: -13.188803672790527
    9. '50' → logprob: -13.251303672790527
    10. '49' → logprob: -13.563803672790527

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1288299262523651
    2. ':
' → logprob: -2.1288299560546875
    3. '   ' → logprob: -6.3788299560546875
    4. '       ' → logprob: -9.003829956054688
    5. ' :' → logprob: -10.128829956054688
    6. ',' → logprob: -11.503829956054688
    7. ':

' → logprob: -11.628829956054688
    8. ' :
' → logprob: -11.878829956054688
    9. '):
' → logprob: -12.378829956054688
    10. ':
' → logprob: -12.503829956054688

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14540237188339233
    2. ' total' → logprob: -2.645402431488037
    3. '   ' → logprob: -2.895402431488037
    4. 'total' → logprob: -4.770402431488037
    5. ' frac' → logprob: -8.520401954650879
    6. '    ' → logprob: -9.145401954650879
    7. ' return' → logprob: -9.395401954650879
    8. 'frac' → logprob: -9.770401954650879
    9. 'return' → logprob: -10.270401954650879
    10. '           ' → logprob: -10.645401954650879

Token 249: ' frac' (ID: 72308)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5767965316772461
    2. ' total' → logprob: -0.8267965316772461
    3. '   ' → logprob: -7.076796531677246
    4. '       ' → logprob: -11.701796531677246
    5. '	total' → logprob: -12.701796531677246
    6. ' ' → logprob: -14.951796531677246
    7. '    ' → logprob: -16.076797485351562
    8. 'return' → logprob: -16.201797485351562
    9. '  ' → logprob: -16.201797485351562
    10. '(total' → logprob: -16.326797485351562

Token 250: '_new' (ID: 13000)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22011281549930573
    2. ' =' → logprob: -1.8451128005981445
    3. ' >>=' → logprob: -3.3451128005981445
    4. '>>' → logprob: -5.4701128005981445
    5. ' <<=' → logprob: -10.345112800598145
    6. ',' → logprob: -10.845112800598145
    7. ' ' → logprob: -11.095112800598145
    8. '>>>' → logprob: -11.595112800598145
    9. '   ' → logprob: -12.345112800598145
    10. '  ' → logprob: -12.970112800598145

Token 251: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313405841588974
    2. ' =' → logprob: -1.3134058713912964
    3. ' >>=' → logprob: -9.063405990600586
    4. '>>' → logprob: -11.063405990600586
    5. ' <<=' → logprob: -11.938405990600586
    6. ' ' → logprob: -13.063405990600586
    7. ',' → logprob: -13.438405990600586
    8. ' +=' → logprob: -14.563405990600586
    9. ' |=' → logprob: -14.938405990600586
    10. '>>>' → logprob: -15.438405990600586

Token 252: ' (' (ID: 350)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.44732585549354553
    2. 'total' → logprob: -1.0723258256912231
    3. '(total' → logprob: -4.197325706481934
    4. ' (' → logprob: -5.697325706481934
    5. '   ' → logprob: -10.072325706481934
    6. ' ' → logprob: -12.322325706481934
    7. '(' → logprob: -12.572325706481934
    8. '	total' → logprob: -12.634825706481934
    9. ',total' → logprob: -13.697325706481934
    10. '$total' → logprob: -13.759825706481934

Token 253: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0024762547109276056
    2. ' total' → logprob: -6.002476215362549
    3. '(total' → logprob: -14.252476692199707
    4. '   ' → logprob: -16.87747573852539
    5. '	total' → logprob: -18.62747573852539
    6. ' ' → logprob: -19.00247573852539
    7. 'tot' → logprob: -19.75247573852539
    8. '$total' → logprob: -20.37747573852539
    9. ',total' → logprob: -20.62747573852539
    10. 'Total' → logprob: -21.12747573852539

Token 254: ' >>' (ID: 6832)
  Prédit: ' >>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >>' → logprob: -0.3870082497596741
    2. '>>' → logprob: -1.1370081901550293
    3. ')' → logprob: -9.387008666992188
    4. ')>>' → logprob: -10.512008666992188
    5. ' >>=' → logprob: -11.137008666992188
    6. '>>>' → logprob: -12.387008666992188
    7. '>>(' → logprob: -12.762008666992188
    8. ' >>>' → logprob: -13.512008666992188
    9. ' ' → logprob: -13.762008666992188
    10. '>>)' → logprob: -14.137008666992188

Token 255: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.0002666999935172498
    2. ' shift' → logprob: -8.250267028808594
    3. '52' → logprob: -12.375267028808594
    4. '(' → logprob: -14.125267028808594
    5. '   ' → logprob: -15.625267028808594
    6. ' ' → logprob: -16.375267028808594
    7. ' (' → logprob: -16.750267028808594
    8. '```' → logprob: -16.750267028808594
    9. '54' → logprob: -17.250267028808594
    10. '53' → logprob: -17.625267028808594

Token 256: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.919942486798391e-05
    2. ' )' → logprob: -9.750059127807617
    3. ')
' → logprob: -14.875059127807617
    4. ')

' → logprob: -16.000059127807617
    5. '')' → logprob: -16.500059127807617
    6. '```' → logprob: -16.500059127807617
    7. ' ' → logprob: -16.750059127807617
    8. ')&' → logprob: -17.250059127807617
    9. '),' → logprob: -17.375059127807617
    10. ')[' → logprob: -18.000059127807617

Token 257: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.35975128412246704
    2. '&' → logprob: -1.3597512245178223
    3. '<|end|>' → logprob: -3.2347512245178223
    4. 'else' → logprob: -6.234751224517822
    5. ' ' → logprob: -6.859751224517822
    6. ' else' → logprob: -6.984751224517822
    7. '&amp' → logprob: -6.984751224517822
    8. ')' → logprob: -8.23475170135498
    9. ')&' → logprob: -8.60975170135498
    10. '&nbsp' → logprob: -8.85975170135498

Token 258: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.003849128494039178
    2. '0' → logprob: -6.003849029541016
    3. ' ((' → logprob: -6.753849029541016
    4. '(' → logprob: -8.503849029541016
    5. ' ' → logprob: -13.128849029541016
    6. '   ' → logprob: -13.753849029541016
    7. '(((' → logprob: -15.878849029541016
    8. '[(' → logprob: -16.128849029541016
    9. '  ' → logprob: -17.003849029541016
    10. ' (' → logprob: -17.253849029541016

Token 259: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008642228320240974
    2. '1' → logprob: -4.758642196655273
    3. ' (' → logprob: -10.508642196655273
    4. '((' → logprob: -15.383642196655273
    5. ')' → logprob: -16.258642196655273
    6. '   ' → logprob: -17.008642196655273
    7. '2' → logprob: -17.508642196655273
    8. '{' → logprob: -18.258642196655273
    9. ' ' → logprob: -18.258642196655273
    10. '```' → logprob: -19.258642196655273

Token 260: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.008741031400859356
    2. ' <<' → logprob: -4.7587409019470215
    3. '<<(' → logprob: -10.00874137878418
    4. ')' → logprob: -11.13374137878418
    5. '```' → logprob: -11.13374137878418
    6. ')<<' → logprob: -11.38374137878418
    7. '(' → logprob: -11.50874137878418
    8. '1' → logprob: -11.88374137878418
    9. '<' → logprob: -12.25874137878418
    10. '>>' → logprob: -12.75874137878418

Token 261: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '53' → logprob: -15.500015258789062
    4. '   ' → logprob: -16.500015258789062
    5. '052' → logprob: -16.500015258789062
    6. '```' → logprob: -17.250015258789062
    7. '  ' → logprob: -17.812515258789062
    8. '`' → logprob: -18.187515258789062
    9. '522' → logprob: -18.312515258789062
    10. '54' → logprob: -18.500015258789062

Token 262: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '53' → logprob: -16.625
    4. '```' → logprob: -17.875
    5. '052' → logprob: -18.25
    6. '(' → logprob: -19.0625
    7. '{' → logprob: -19.25
    8. '   ' → logprob: -19.3125
    9. '`' → logprob: -19.6875
    10. '520' → logprob: -19.8125

Token 263: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020473242329899222
    2. ')-' → logprob: -8.500205039978027
    3. ' )' → logprob: -13.750205039978027
    4. '())' → logprob: -16.25020408630371
    5. '')' → logprob: -17.37520408630371
    6. '-' → logprob: -18.12520408630371
    7. 'b' → logprob: -18.50020408630371
    8. '()' → logprob: -18.62520408630371
    9. '")' → logprob: -18.75020408630371
    10. '   ' → logprob: -19.25020408630371

Token 264: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00081487005809322
    2. ')-' → logprob: -7.125814914703369
    3. '-' → logprob: -12.375814437866211
    4. ' )' → logprob: -12.625814437866211
    5. '')' → logprob: -13.625814437866211
    6. ' -' → logprob: -14.625814437866211
    7. '-)' → logprob: -15.750814437866211
    8. 'None' → logprob: -15.875814437866211
    9. 'b' → logprob: -16.12581443786621
    10. '")' → logprob: -16.12581443786621

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -17.875
    4. '   ' → logprob: -19.0
    5. '0' → logprob: -20.375
    6. ')' → logprob: -21.3125
    7. '2' → logprob: -21.5
    8. '{' → logprob: -21.5625
    9. '52' → logprob: -21.5625
    10. '3' → logprob: -21.8125

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024821963161230087
    2. ')
' → logprob: -6.0024824142456055
    3. ')
' → logprob: -12.877482414245605
    4. ' )' → logprob: -13.127482414245605
    5. '   ' → logprob: -13.752482414245605
    6. ')

' → logprob: -14.502482414245605
    7. '))' → logprob: -16.62748146057129
    8. ' ' → logprob: -17.12748146057129
    9. ')#' → logprob: -17.12748146057129
    10. ' )
' → logprob: -17.37748146057129

Token 267: '   ' (ID: 271)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6730272173881531
    2. '<|end|>' → logprob: -1.5480272769927979
    3. 'else' → logprob: -1.7980272769927979
    4. '   ' → logprob: -2.298027276992798
    5. '	else' → logprob: -5.298027038574219
    6. '<|end|>' → logprob: -6.173027038574219
    7. '
' → logprob: -6.298027038574219
    8. ')' → logprob: -6.673027038574219
    9. '\n' → logprob: -8.548027038574219
    10. ':return' → logprob: -9.423027038574219

Token 268: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.3172856271266937
    2. 'else' (adapté à ' else') → logprob: -1.3172856569290161
    3. '   ' → logprob: -5.567285537719727
    4. '	else' → logprob: -8.692285537719727
    5. '<|end|>' → logprob: -10.817285537719727
    6. '_else' → logprob: -13.567285537719727
    7. '
' → logprob: -14.067285537719727
    8. '<|end|>' → logprob: -14.192285537719727
    9. ' ' → logprob: -14.317285537719727
    10. ')' → logprob: -14.442285537719727

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5107169151306152
    2. ':
' → logprob: -1.0107169151306152
    3. '       ' → logprob: -3.3857169151306152
    4. '   ' → logprob: -6.385716915130615
    5. ' :' → logprob: -8.510717391967773
    6. ' :
' → logprob: -8.885717391967773
    7. ':

' → logprob: -11.135717391967773
    8. '     ' → logprob: -11.385717391967773
    9. '      ' → logprob: -11.385717391967773
    10. '           ' → logprob: -11.635717391967773

Token 270: '       ' (ID: 309)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.8937212228775024
    2. ' frac' → logprob: -1.0187212228775024
    3. '   ' → logprob: -1.6437212228775024
    4. ' (' → logprob: -3.643721103668213
    5. '       ' → logprob: -5.643721103668213
    6. '    ' → logprob: -6.143721103668213
    7. '(' → logprob: -6.518721103668213
    8. '(fr' → logprob: -7.143721103668213
    9. ' ' → logprob: -7.268721103668213
    10. '  ' → logprob: -8.143721580505371

Token 271: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.03396056219935417
    2. ' frac' → logprob: -3.4089605808258057
    3. '   ' → logprob: -8.783960342407227
    4. '(fr' → logprob: -10.283960342407227
    5. '(' → logprob: -10.533960342407227
    6. ' (' → logprob: -10.658960342407227
    7. 'fraction' → logprob: -10.908960342407227
    8. ' ' → logprob: -11.283960342407227
    9. 'fract' → logprob: -11.283960342407227
    10. 'fr' → logprob: -11.408960342407227

Token 272: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -0.0004182793782092631
    2. '=' → logprob: -8.125418663024902
    3. ' =' → logprob: -9.250418663024902
    4. 'new' → logprob: -11.000418663024902
    5. '_' → logprob: -12.500418663024902
    6. 'New' → logprob: -12.750418663024902
    7. '=_' → logprob: -13.250418663024902
    8. '_NEW' → logprob: -15.125418663024902
    9. '   ' → logprob: -15.375418663024902
    10. '_raw' → logprob: -16.375417709350586

Token 273: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. ' ' → logprob: -17.47520637512207
    4. '_' → logprob: -17.97520637512207
    5. '   ' → logprob: -17.97520637512207
    6. ',' → logprob: -18.35020637512207
    7. ')' → logprob: -18.60020637512207
    8. '=

' → logprob: -18.97520637512207
    9. '=_' → logprob: -19.22520637512207
    10. '＝' → logprob: -19.22520637512207

Token 274: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.18055303394794464
    2. ' total' → logprob: -1.8055530786514282
    3. '(total' → logprob: -7.430552959442139
    4. '(' → logprob: -9.180553436279297
    5. ' (' → logprob: -9.180553436279297
    6. '   ' → logprob: -12.930553436279297
    7. ' ' → logprob: -13.180553436279297
    8. 'tot' → logprob: -13.430553436279297
    9. 'frac' → logprob: -14.305553436279297
    10. ' tot' → logprob: -14.430553436279297

Token 275: ' &' (ID: 827)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 276: ' ((' (ID: 3536)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07889308780431747
    2. ' ((' → logprob: -2.5788931846618652
    3. '(' → logprob: -12.828892707824707
    4. ' (' → logprob: -14.828892707824707
    5. ' ' → logprob: -15.328892707824707
    6. '0' → logprob: -17.453893661499023
    7. '(((' → logprob: -18.328893661499023
    8. '[(' → logprob: -18.828893661499023
    9. ')((' → logprob: -19.328893661499023
    10. '   ' → logprob: -19.453893661499023

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018224865198135376
    2. '(' → logprob: -4.018224716186523
    3. ' (' → logprob: -9.518224716186523
    4. '((' → logprob: -14.143224716186523
    5. '   ' → logprob: -14.518224716186523
    6. ' ' → logprob: -15.143224716186523
    7. '{' → logprob: -18.768224716186523
    8. ')' → logprob: -18.768224716186523
    9. '  ' → logprob: -19.268224716186523
    10. '"' → logprob: -19.768224716186523

Token 278: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.5026939511299133
    2. '1' → logprob: -1.0026938915252686
    3. ' <<' → logprob: -3.7526938915252686
    4. '(' → logprob: -5.377694129943848
    5. ' (' → logprob: -9.127694129943848
    6. ' ' → logprob: -11.627694129943848
    7. '<' → logprob: -12.002694129943848
    8. '52' → logprob: -12.627694129943848
    9. '   ' → logprob: -13.002694129943848
    10. '```' → logprob: -13.002694129943848

Token 279: ' ' (ID: 220)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.011063620448112488
    2. ' ' → logprob: -4.511063575744629
    3. '53' → logprob: -11.386063575744629
    4. '   ' → logprob: -13.823563575744629
    5. '  ' → logprob: -13.886063575744629
    6. '54' → logprob: -14.261063575744629
    7. '(' → logprob: -14.636063575744629
    8. '62' → logprob: -15.948563575744629
    9. '052' → logprob: -16.136064529418945
    10. '56' → logprob: -16.198564529418945

Token 280: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -3.054500666621607e-06
    2. '53' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '0' → logprob: -14.62500286102295
    5. '052' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '```' → logprob: -16.500003814697266
    8. '(' → logprob: -17.125003814697266
    9. 'shift' → logprob: -17.312503814697266
    10. '  ' → logprob: -17.562503814697266

Token 281: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008134396048262715
    2. ')-' → logprob: -7.1258134841918945
    3. '')' → logprob: -12.125813484191895
    4. ' )' → logprob: -13.000813484191895
    5. '[' → logprob: -15.500813484191895
    6. '-' → logprob: -15.500813484191895
    7. '())' → logprob: -16.125812530517578
    8. ' -' → logprob: -16.250812530517578
    9. '")' → logprob: -16.500812530517578
    10. '()' → logprob: -16.500812530517578

Token 282: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008846903219819069
    2. ')-' → logprob: -4.758846759796143
    3. '-' → logprob: -8.6338472366333
    4. ' )' → logprob: -10.5088472366333
    5. ' -' → logprob: -10.7588472366333
    6. '-)' → logprob: -13.8838472366333
    7. 'def' → logprob: -14.2588472366333
    8. '')' → logprob: -14.3838472366333
    9. '[' → logprob: -14.5088472366333
    10. '1' → logprob: -14.8838472366333

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009115827269852161
    2. '52' → logprob: -7.000911712646484
    3. '53' → logprob: -15.875911712646484
    4. '0' → logprob: -17.750911712646484
    5. ' ' → logprob: -18.000911712646484
    6. '2' → logprob: -19.000911712646484
    7. '54' → logprob: -19.250911712646484
    8. '56' → logprob: -20.750911712646484
    9. '55' → logprob: -21.375911712646484
    10. '   ' → logprob: -21.750911712646484

Token 284: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.244413766078651e-05
    2. '   ' → logprob: -9.500082015991211
    3. ')
' → logprob: -12.125082015991211
    4. ' )' → logprob: -13.500082015991211
    5. ')return' → logprob: -14.375082015991211
    6. ')

' → logprob: -17.25008201599121
    7. '<|end|>' → logprob: -17.25008201599121
    8. '))' → logprob: -17.37508201599121
    9. ' ' → logprob: -18.12508201599121
    10. ')#' → logprob: -18.12508201599121

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006156971794553101
    2. '	return' → logprob: -8.625616073608398
    3. '<|end|>' → logprob: -8.750616073608398
    4. 'return' → logprob: -8.875616073608398
    5. ' return' → logprob: -9.125616073608398
    6. ':return' → logprob: -11.250616073608398
    7. '    
' → logprob: -12.125616073608398
    8. '<|end|>' → logprob: -13.250616073608398
    9. 'eturn' → logprob: -13.625616073608398
    10. '
' → logprob: -13.875616073608398

Token 286: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002979245036840439
    2. 'return' (adapté à ' return') → logprob: -5.877979278564453
    3. ' return' → logprob: -8.752979278564453
    4. '	return' → logprob: -11.252979278564453
    5. '```' → logprob: -14.127979278564453
    6. '<|end|>' → logprob: -14.377979278564453
    7. ',' → logprob: -14.877979278564453
    8. ')' → logprob: -14.877979278564453
    9. 'eturn' → logprob: -15.252979278564453
    10. ':return' → logprob: -15.377979278564453

Token 287: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.09525185078382492
    2. '(e' → logprob: -3.0952517986297607
    3. ' e' → logprob: -3.2202517986297607
    4. ' (' → logprob: -5.22025203704834
    5. '(' → logprob: -8.47025203704834
    6. '   ' → logprob: -10.47025203704834
    7. ' ' → logprob: -12.97025203704834
    8. '	e' → logprob: -14.97025203704834
    9. '0' → logprob: -15.22025203704834
    10. ',e' → logprob: -16.095251083374023

Token 288: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004778592265211046
    2. '<|end|>' → logprob: -7.8754777908325195
    3. ' ,' → logprob: -10.00047779083252
    4. ',
' → logprob: -10.37547779083252
    5. '<|end|>' → logprob: -11.37547779083252
    6. '','' → logprob: -13.37547779083252
    7. ',...' → logprob: -13.50047779083252
    8. ',None' → logprob: -14.00047779083252
    9. ',new' → logprob: -14.37547779083252
    10. ',

' → logprob: -14.50047779083252

Token 289: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.0028085599187761545
    2. ' frac' → logprob: -5.877808570861816
    3. 'frag' → logprob: -13.252808570861816
    4. 'fract' → logprob: -14.252808570861816
    5. 'fr' → logprob: -14.377808570861816
    6. '_frac' → logprob: -15.377808570861816
    7. '   ' → logprob: -15.752808570861816
    8. 'fraction' → logprob: -16.3778076171875
    9. 'func' → logprob: -16.5028076171875
    10. '```' → logprob: -16.5028076171875

Token 290: '_new' (ID: 13000)
  Prédit: '_new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_new' → logprob: -1.282920129597187e-05
    2. 'New' → logprob: -12.125012397766113
    3. '_' → logprob: -12.625012397766113
    4. 'new' → logprob: -13.375012397766113
    5. '_NEW' → logprob: -13.875012397766113
    6. '_n' → logprob: -15.250012397766113
    7. ' _' → logprob: -15.750012397766113
    8. '```' → logprob: -15.875012397766113
    9. ''_' → logprob: -15.875012397766113
    10. '[' → logprob: -16.00001335144043

Token 291: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' main' (ID: 2758)
  Prédit: ' multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiply' → logprob: -0.6298466324806213
    2. ' add' → logprob: -2.2548465728759766
    3. ' normalize' → logprob: -2.3798465728759766
    4. ' to' → logprob: -2.5048465728759766
    5. ' float' → logprob: -2.8798465728759766
    6. ' main' → logprob: -3.0048465728759766
    7. ' parse' → logprob: -3.6298465728759766
    8. ' decode' → logprob: -5.129846572875977
    9. ' mul' → logprob: -5.129846572875977
    10. ' pow' → logprob: -5.254846572875977

Token 294: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00012701898231171072
    2. ' ():' → logprob: -9.500126838684082
    3. '(' → logprob: -10.500126838684082
    4. '():
' → logprob: -11.250126838684082
    5. '_' → logprob: -12.375126838684082
    6. '()' → logprob: -12.750126838684082
    7. '()>' → logprob: -13.750126838684082
    8. ':' → logprob: -14.250126838684082
    9. '(:' → logprob: -14.375126838684082
    10. '(":' → logprob: -14.625126838684082

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04235300421714783
    2. '():' → logprob: -3.4173529148101807
    3. ':' → logprob: -5.29235315322876
    4. '(' → logprob: -6.66735315322876
    5. '    ' → logprob: -7.91735315322876
    6. '()' → logprob: -8.042352676391602
    7. '    
' → logprob: -8.042352676391602
    8. 'import' → logprob: -8.417352676391602
    9. '```' → logprob: -8.417352676391602
    10. 'def' → logprob: -9.167352676391602

Token 296: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40919429063796997
    2. ' n' → logprob: -1.6591942310333252
    3. ' import' → logprob: -2.409194231033325
    4. 'import' → logprob: -4.034194469451904
    5. 'n' → logprob: -4.284194469451904
    6. ' number' → logprob: -5.659194469451904
    7. ' x' → logprob: -5.784194469451904
    8. ' input' → logprob: -5.784194469451904
    9. ' for' → logprob: -6.034194469451904
    10. ' num' → logprob: -6.284194469451904

Token 297: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5635570287704468
    2. '()' → logprob: -1.0635570287704468
    3. '_data' → logprob: -2.8135571479797363
    4. '_str' → logprob: -4.188557147979736
    5. '_text' → logprob: -5.563557147979736
    6. '_' → logprob: -6.188557147979736
    7. '().' → logprob: -7.188557147979736
    8. '_value' → logprob: -7.188557147979736
    9. '_val' → logprob: -7.313557147979736
    10. '_lines' → logprob: -7.688557147979736

Token 298: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.42898043990135193
    2. ' sys' → logprob: -1.1789804697036743
    3. 'input' → logprob: -3.3039803504943848
    4. 'sys' → logprob: -5.428980350494385
    5. ' ' → logprob: -9.178980827331543
    6. ' int' → logprob: -12.928980827331543
    7. 'int' → logprob: -13.303980827331543
    8. '   ' → logprob: -14.053980827331543
    9. '(sys' → logprob: -14.428980827331543
    10. ' open' → logprob: -15.178980827331543

Token 299: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.05615558102726936
    2. '.' → logprob: -3.0561556816101074
    3. '.argv' → logprob: -5.181155681610107
    4. '.stdout' → logprob: -6.931155681610107
    5. '.readline' → logprob: -7.681155681610107
    6. ' .' → logprob: -8.05615520477295
    7. '.input' → logprob: -9.18115520477295
    8. '.std' → logprob: -10.55615520477295
    9. '.exit' → logprob: -11.55615520477295
    10. '.import' → logprob: -11.80615520477295

Token 300: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008004573755897582
    2. '.read' → logprob: -7.250800609588623
    3. '.readlines' → logprob: -9.875800132751465
    4. 'read' → logprob: -11.000800132751465
    5. '.' → logprob: -11.125800132751465
    6. 'buffer' → logprob: -12.625800132751465
    7. '.buffer' → logprob: -12.875800132751465
    8. '_read' → logprob: -13.875800132751465
    9. '_buffer' → logprob: -15.375800132751465
    10. 'import' → logprob: -16.00080108642578

Token 301: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031769988127052784
    2. '().' → logprob: -5.878177165985107
    3. '(' → logprob: -8.25317668914795
    4. 'line' → logprob: -9.25317668914795
    5. '()\' → logprob: -12.75317668914795
    6. '())' → logprob: -13.00317668914795
    7. '()
' → logprob: -13.12817668914795
    8. '()[' → logprob: -13.62817668914795
    9. 'Line' → logprob: -13.75317668914795
    10. '()

' → logprob: -13.87817668914795

Token 302: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00012773419439326972
    2. 'rstrip' → logprob: -9.000127792358398
    3. 'split' → logprob: -12.750127792358398
    4. ' strip' → logprob: -14.000127792358398
    5. 'read' → logprob: -15.375127792358398
    6. 'decode' → logprob: -16.1251277923584
    7. '(strip' → logprob: -17.1251277923584
    8. '_strip' → logprob: -17.1251277923584
    9. 'replace' → logprob: -17.6251277923584
    10. '()' → logprob: -18.0001277923584

Token 303: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003682285314425826
    2. '(' → logprob: -8.500368118286133
    3. '('' → logprob: -9.000368118286133
    4. '()[' → logprob: -10.875368118286133
    5. '()]' → logprob: -12.250368118286133
    6. '()\' → logprob: -12.625368118286133
    7. '()>' → logprob: -13.125368118286133
    8. '())' → logprob: -13.375368118286133
    9. '()
' → logprob: -13.500368118286133
    10. ' ()' → logprob: -13.875368118286133

Token 304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2287299931049347
    2. 'for' → logprob: -2.7287299633026123
    3. 'n' → logprob: -3.3537299633026123
    4. '[' → logprob: -3.3537299633026123
    5. 'e' → logprob: -3.9787299633026123
    6. '```' → logprob: -4.353730201721191
    7. 'a' → logprob: -4.603730201721191
    8. ' for' → logprob: -4.978730201721191
    9. 'num' → logprob: -4.978730201721191
    10. 'x' → logprob: -5.603730201721191

Token 305: ' i' (ID: 575)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.29190289974212646
    2. 'x' → logprob: -2.166903018951416
    3. 'sign' → logprob: -2.791903018951416
    4. 'n' → logprob: -3.666903018951416
    5. 'a' → logprob: -4.041903018951416
    6. ' e' → logprob: -4.291903018951416
    7. 'base' → logprob: -5.666903018951416
    8. '   ' → logprob: -5.666903018951416
    9. 'value' → logprob: -6.416903018951416
    10. 'num' → logprob: -6.541903018951416

Token 306: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4572899639606476
    2. '=' → logprob: -1.5822899341583252
    3. 'f' → logprob: -2.832289934158325
    4. 'nd' → logprob: -3.082289934158325
    5. ' =' → logprob: -3.457289934158325
    6. 's' → logprob: -4.832290172576904
    7. 'dx' → logprob: -5.332290172576904
    8. 'd' → logprob: -5.707290172576904
    9. '_' → logprob: -5.832290172576904
    10. '0' → logprob: -6.207290172576904

Token 307: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010398367885500193
    2. ' ' → logprob: -6.876039981842041
    3. '1' → logprob: -12.126039505004883
    4. '   ' → logprob: -13.876039505004883
    5. 'int' → logprob: -14.876039505004883
    6. '2' → logprob: -15.876039505004883
    7. '  ' → logprob: -16.376039505004883
    8. '    ' → logprob: -17.813539505004883
    9. '```' → logprob: -18.001039505004883
    10. 'len' → logprob: -18.251039505004883

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5954712075181305e-05
    2. ' ' → logprob: -10.375036239624023
    3. '1' → logprob: -12.375036239624023
    4. 'int' → logprob: -14.875036239624023
    5. '2' → logprob: -16.125036239624023
    6. '   ' → logprob: -17.000036239624023
    7. '  ' → logprob: -18.625036239624023
    8. '```' → logprob: -18.750036239624023
    9. 'input' → logprob: -19.250036239624023
    10. '3' → logprob: -19.562536239624023

Token 309: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6798694133758545
    2. 'while' → logprob: -1.3048694133758545
    3. '<|end|>' → logprob: -1.9298694133758545
    4. ' while' → logprob: -3.1798694133758545
    5. '   ' → logprob: -3.8048694133758545
    6. '<|end|>' → logprob: -5.929869651794434
    7. '```' → logprob: -6.054869651794434
    8. ',' → logprob: -6.804869651794434
    9. 'i' → logprob: -6.804869651794434
    10. ' ' → logprob: -7.054869651794434

Token 310: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4005526006221771
    2. '   ' → logprob: -1.5255526304244995
    3. ' while' → logprob: -2.40055251121521
    4. 'i' → logprob: -4.900552749633789
    5. '<|end|>' → logprob: -5.525552749633789
    6. 'def' → logprob: -5.775552749633789
    7. '
' → logprob: -6.650552749633789
    8. 'n' → logprob: -7.025552749633789
    9. '```' → logprob: -7.025552749633789
    10. ' ' → logprob: -7.025552749633789

Token 311: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3877665102481842
    2. 'n' → logprob: -1.3877664804458618
    3. ' while' → logprob: -2.7627665996551514
    4. 'e' → logprob: -6.012766361236572
    5. '   ' → logprob: -6.512766361236572
    6. ' n' → logprob: -6.512766361236572
    7. 'num' → logprob: -6.887766361236572
    8. 'count' → logprob: -7.137766361236572
    9. 'if' → logprob: -7.887766361236572
    10. 'sign' → logprob: -8.51276683807373

Token 312: ' True' (ID: 6432)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002188925864174962
    2. 'i' → logprob: -6.1271891593933105
    3. ' ' → logprob: -12.752188682556152
    4. '(i' → logprob: -15.377188682556152
    5. ' True' → logprob: -15.377188682556152
    6. 'True' → logprob: -16.25218963623047
    7. '   ' → logprob: -16.37718963623047
    8. '  ' → logprob: -16.62718963623047
    9. '	i' → logprob: -16.87718963623047
    10. ' (' → logprob: -17.25218963623047

Token 313: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012258621864020824
    2. ':
' → logprob: -5.012258529663086
    3. '       ' → logprob: -5.887258529663086
    4. '   ' → logprob: -6.387258529663086
    5. ' and' → logprob: -8.262258529663086
    6. '<|end|>' → logprob: -8.262258529663086
    7. '[' → logprob: -8.512258529663086
    8. ',' → logprob: -9.762258529663086
    9. '<|end|>' → logprob: -9.887258529663086
    10. 'and' → logprob: -10.137258529663086

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07087715715169907
    2. '   ' → logprob: -2.9458770751953125
    3. '    ' → logprob: -5.1958770751953125
    4. '[' → logprob: -5.3208770751953125
    5. 'i' → logprob: -7.1958770751953125
    6. '(' → logprob: -7.1958770751953125
    7. '(i' → logprob: -7.1958770751953125
    8. '      ' → logprob: -7.9458770751953125
    9. ' (' → logprob: -8.070877075195312
    10. '[i' → logprob: -8.195877075195312

Token 315: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4032549560070038
    2. 'if' (adapté à ' if') → logprob: -1.1532549858093262
    3. '   ' → logprob: -4.278254985809326
    4. '       ' → logprob: -6.278254985809326
    5. '    ' → logprob: -8.403254508972168
    6. ' ' → logprob: -9.028254508972168
    7. '  ' → logprob: -10.028254508972168
    8. ' break' → logprob: -10.153254508972168
    9. 'break' → logprob: -10.778254508972168
    10. 'i' → logprob: -11.653254508972168

Token 316: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132629096508026
    2. 'i' → logprob: -1.313262939453125
    3. ' ' → logprob: -13.813262939453125
    4. ' not' → logprob: -16.688262939453125
    5. '   ' → logprob: -17.063262939453125
    6. '	i' → logprob: -17.063262939453125
    7. '(i' → logprob: -17.938262939453125
    8. '  ' → logprob: -18.563262939453125
    9. ' ' → logprob: -18.688262939453125
    10. '_i' → logprob: -20.313262939453125

Token 317: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0072592198848724365
    2. '>=' → logprob: -5.007259368896484
    3. ' <' → logprob: -7.632259368896484
    4. ' ==' → logprob: -10.882259368896484
    5. ' ' → logprob: -11.007259368896484
    6. '<' → logprob: -12.132259368896484
    7. '[' → logprob: -12.132259368896484
    8. '   ' → logprob: -13.257259368896484
    9. ')>=' → logprob: -13.257259368896484
    10. ']>=' → logprob: -13.257259368896484

Token 318: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002475777640938759
    2. ' len' → logprob: -6.002475738525391
    3. '(len' → logprob: -17.25247573852539
    4. '   ' → logprob: -18.50247573852539
    5. '=len' → logprob: -19.75247573852539
    6. '[len' → logprob: -19.87747573852539
    7. '	len' → logprob: -19.87747573852539
    8. ' ' → logprob: -20.37747573852539
    9. '<len' → logprob: -20.62747573852539
    10. ',len' → logprob: -20.87747573852539

Token 319: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03164295479655266
    2. 'input' → logprob: -3.5316429138183594
    3. ' input' → logprob: -6.406642913818359
    4. ' (' → logprob: -8.90664291381836
    5. '(' → logprob: -9.28164291381836
    6. '(
' → logprob: -12.03164291381836
    7. '=input' → logprob: -13.53164291381836
    8. '(sys' → logprob: -13.65664291381836
    9. '   ' → logprob: -14.40664291381836
    10. ' (
' → logprob: -14.90664291381836

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16615864634513855
    2. '):
' → logprob: -1.916158676147461
    3. ')' → logprob: -5.291158676147461
    4. ' or' → logprob: -7.416158676147461
    5. ':' → logprob: -9.041158676147461
    6. '   ' → logprob: -9.291158676147461
    7. ':
' → logprob: -10.666158676147461
    8. '       ' → logprob: -11.041158676147461
    9. ' ):' → logprob: -11.291158676147461
    10. ' ):
' → logprob: -12.166158676147461

Token 321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.394135612528771e-05
    2. ' break' → logprob: -11.000043869018555
    3. 'break' → logprob: -11.750043869018555
    4. ':' → logprob: -12.125043869018555
    5. '       ' → logprob: -12.625043869018555
    6. '		' → logprob: -13.125043869018555
    7. '   ' → logprob: -13.250043869018555
    8. ':
' → logprob: -13.500043869018555
    9. ',' → logprob: -13.500043869018555
    10. '          ' → logprob: -14.125043869018555

Token 322: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.19441378116607666
    2. '           ' → logprob: -2.444413661956787
    3. ' break' → logprob: -2.444413661956787
    4. 'return' → logprob: -6.194413661956787
    5. '       ' → logprob: -6.944413661956787
    6. ' return' → logprob: -9.694414138793945
    7. '	break' → logprob: -10.319414138793945
    8. '   ' → logprob: -10.944414138793945
    9. '               ' → logprob: -12.194414138793945
    10. '_break' → logprob: -12.819414138793945

Token 323: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006062463391572237
    2. '        
' → logprob: -5.8810625076293945
    3. '<|end|>' → logprob: -6.1310625076293945
    4. '
' → logprob: -8.256062507629395
    5. '\n' → logprob: -8.506062507629395
    6. '  
' → logprob: -8.756062507629395
    7. '   ' → logprob: -8.881062507629395
    8. '    
' → logprob: -9.506062507629395
    9. ',' → logprob: -9.506062507629395
    10. '<|end|>' → logprob: -10.131062507629395

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0069487374275922775
    2. '   ' → logprob: -5.381948947906494
    3. '<|end|>' → logprob: -7.006948947906494
    4. '        
' → logprob: -7.756948947906494
    5. '
' → logprob: -7.756948947906494
    6. ',' → logprob: -9.006948471069336
    7. ' ' → logprob: -9.631948471069336
    8. '    
' → logprob: -9.631948471069336
    9. ')' → logprob: -9.756948471069336
    10. '  
' → logprob: -9.881948471069336

Token 325: ' n' (ID: 297)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9061262607574463
    2. ' sign' → logprob: -1.0311262607574463
    3. ' e' → logprob: -2.9061262607574463
    4. 'e' → logprob: -2.9061262607574463
    5. ' op' → logprob: -3.2811262607574463
    6. 'exp' → logprob: -3.6561262607574463
    7. '       ' → logprob: -4.281126022338867
    8. '   ' → logprob: -4.281126022338867
    9. ' exp' → logprob: -4.656126022338867
    10. 's' → logprob: -5.281126022338867

Token 326: 'str' (ID: 689)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10053358227014542
    2. '=' → logprob: -2.3505334854125977
    3. '=int' → logprob: -8.100533485412598
    4. '_str' → logprob: -10.850533485412598
    5. ' ' → logprob: -13.725533485412598
    6. '_token' → logprob: -14.475533485412598
    7. ',' → logprob: -14.850533485412598
    8. '   ' → logprob: -15.100533485412598
    9. 'str' → logprob: -15.100533485412598
    10. 'int' → logprob: -15.600533485412598

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931514739990234
    2. ' =' → logprob: -0.6931514739990234
    3. ' ' → logprob: -13.818151473999023
    4. ',' → logprob: -14.068151473999023
    5. '   ' → logprob: -14.318151473999023
    6. ')' → logprob: -14.443151473999023
    7. '=n' → logprob: -14.693151473999023
    8. '=int' → logprob: -15.943151473999023
    9. '=input' → logprob: -16.068151473999023
    10. ']' → logprob: -16.068151473999023

Token 328: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022463142871857
    2. ' input' → logprob: -1.9102246761322021
    3. '=input' → logprob: -15.410224914550781
    4. 'int' → logprob: -16.78522491455078
    5. '(input' → logprob: -17.16022491455078
    6. '	input' → logprob: -17.66022491455078
    7. 'import' → logprob: -18.03522491455078
    8. ' ' → logprob: -18.03522491455078
    9. 'output' → logprob: -18.16022491455078
    10. '<input' → logprob: -18.41022491455078

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00016313401283696294
    2. '[' → logprob: -8.750163078308105
    3. '[n' → logprob: -12.750163078308105
    4. ' [' → logprob: -14.750163078308105
    5. '```' → logprob: -14.875163078308105
    6. '\[' → logprob: -14.875163078308105
    7. '   ' → logprob: -16.000164031982422
    8. '[I' → logprob: -16.000164031982422
    9. '[
' → logprob: -16.250164031982422
    10. '[s' → logprob: -16.500164031982422

Token 330: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3872554898262024
    2. ']
' → logprob: -1.1372554302215576
    3. '+' → logprob: -8.637255668640137
    4. '];' → logprob: -9.512255668640137
    5. ']
' → logprob: -10.137255668640137
    6. '])' → logprob: -10.387255668640137
    7. ']+' → logprob: -11.512255668640137
    8. ')' → logprob: -11.762255668640137
    9. '[i' → logprob: -11.762255668640137
    10. '])
' → logprob: -11.762255668640137

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16905446350574493
    2. '<|end|>' → logprob: -1.9190545082092285
    3. '<|end|>' → logprob: -5.4190545082092285
    4. '
' → logprob: -6.9190545082092285
    5. 'i' → logprob: -7.0440545082092285
    6. '        
' → logprob: -7.6690545082092285
    7. '[i' → logprob: -7.6690545082092285
    8. ')' → logprob: -7.6690545082092285
    9. ',' → logprob: -8.91905403137207
    10. '#' → logprob: -9.16905403137207

Token 332: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.5821285843849182
    2. ' i' → logprob: -0.8321285843849182
    3. ' 
' → logprob: -6.207128524780273
    4. '
' → logprob: -6.832128524780273
    5. ' ' → logprob: -6.957128524780273
    6. '<|end|>' → logprob: -7.207128524780273
    7. '	i' → logprob: -7.832128524780273
    8. '<|end|>' → logprob: -8.457128524780273
    9. '[i' → logprob: -8.707128524780273
    10. ' if' → logprob: -9.207128524780273

Token 333: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04874088242650032
    2. ' +=' → logprob: -3.048740863800049
    3. '+' → logprob: -8.798741340637207
    4. '=' → logprob: -13.298741340637207
    5. '++' → logprob: -14.798741340637207
    6. '```' → logprob: -15.548741340637207
    7. ']+=' → logprob: -15.548741340637207
    8. '+="' → logprob: -17.04874038696289
    9. ' =' → logprob: -17.92374038696289
    10. '+='' → logprob: -17.92374038696289

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -20.625123977661133
    4. '   ' → logprob: -22.750123977661133
    5. '１' → logprob: -23.625123977661133
    6. '`' → logprob: -24.250123977661133
    7. '0' → logprob: -24.250123977661133
    8. '
' → logprob: -24.375123977661133
    9. ' ' → logprob: -24.500123977661133
    10. '``' → logprob: -25.000123977661133

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -21.25
    4. '   ' → logprob: -21.875
    5. '１' → logprob: -22.375
    6. '
' → logprob: -22.75
    7. '0' → logprob: -22.75
    8. '  ' → logprob: -24.0
    9. '

' → logprob: -24.0625
    10. '``' → logprob: -24.125

Token 336: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03010161593556404
    2. '<|end|>' → logprob: -4.030101776123047
    3. '        
' → logprob: -5.280101776123047
    4. '
' → logprob: -5.530101776123047
    5. '```' → logprob: -7.155101776123047
    6. ',' → logprob: -7.780101776123047
    7. ' if' → logprob: -8.030101776123047
    8. 'if' → logprob: -8.280101776123047
    9. '  
' → logprob: -8.405101776123047
    10. '   ' → logprob: -8.780101776123047

Token 337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018962983042001724
    2. '<|end|>' → logprob: -4.643962860107422
    3. '        
' → logprob: -5.768962860107422
    4. ' if' → logprob: -5.893962860107422
    5. '   ' → logprob: -6.893962860107422
    6. 'n' → logprob: -7.518962860107422
    7. 'if' → logprob: -7.893962860107422
    8. ',' → logprob: -8.518962860107422
    9. ' ' → logprob: -8.643962860107422
    10. ')' → logprob: -9.018962860107422

Token 338: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32815057039260864
    2. ' if' → logprob: -1.8281505107879639
    3. 'exp' → logprob: -2.953150510787964
    4. 'e' → logprob: -3.578150510787964
    5. 'ex' → logprob: -4.703150749206543
    6. ' e' → logprob: -4.828150749206543
    7. 'n' → logprob: -4.953150749206543
    8. ' exponent' → logprob: -5.953150749206543
    9. 'x' → logprob: -6.078150749206543
    10. 'try' → logprob: -6.078150749206543

Token 339: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02387109585106373
    2. 'n' → logprob: -3.7738711833953857
    3. ' not' → logprob: -7.398870944976807
    4. 'not' → logprob: -11.523871421813965
    5. ' ' → logprob: -12.898871421813965
    6. 'n't' → logprob: -14.898871421813965
    7. '	n' → logprob: -15.773871421813965
    8. ' ' → logprob: -15.898871421813965
    9. '(n' → logprob: -16.52387046813965
    10. '  ' → logprob: -16.64887046813965

Token 340: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00041875618626363575
    2. '_str' → logprob: -8.125418663024902
    3. '==' → logprob: -9.250418663024902
    4. ' ==' → logprob: -10.875418663024902
    5. 'tr' → logprob: -12.500418663024902
    6. 'strip' → logprob: -13.750418663024902
    7. 's' → logprob: -14.125418663024902
    8. 'st' → logprob: -14.125418663024902
    9. ' str' → logprob: -14.750418663024902
    10. '=' → logprob: -15.250418663024902

Token 341: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197340786457062
    2. '==' → logprob: -2.8119733333587646
    3. '=='' → logprob: -13.311973571777344
    4. '=' → logprob: -13.561973571777344
    5. ' in' → logprob: -13.936973571777344
    6. ' ' → logprob: -14.311973571777344
    7. ' =' → logprob: -15.061973571777344
    8. ' =='' → logprob: -15.311973571777344
    9. '=="' → logprob: -15.936973571777344
    10. '==
' → logprob: -16.186973571777344

Token 342: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05661540850996971
    2. '"' → logprob: -3.0566153526306152
    3. ''end' → logprob: -5.556615352630615
    4. ''ex' → logprob: -6.431615352630615
    5. '''' → logprob: -6.556615352630615
    6. ''O' → logprob: -8.306615829467773
    7. 'EOF' → logprob: -8.556615829467773
    8. '0' → logprob: -8.681615829467773
    9. ''q' → logprob: -8.806615829467773
    10. 'END' → logprob: -9.431615829467773

Token 343: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004613114986568689
    2. 'END' → logprob: -6.379612922668457
    3. '':' → logprob: -6.629612922668457
    4. ''' → logprob: -7.129612922668457
    5. 'EOF' → logprob: -7.629612922668457
    6. '#' → logprob: -9.379612922668457
    7. 'end' → logprob: -10.004612922668457
    8. '.' → logprob: -10.379612922668457
    9. '''' → logprob: -11.004612922668457
    10. 'q' → logprob: -11.254612922668457

Token 344: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.16230788826942444
    2. '':' → logprob: -1.912307858467102
    3. ''' → logprob: -6.9123077392578125
    4. '':
' → logprob: -7.1623077392578125
    5. '\n' → logprob: -8.162307739257812
    6. ''):
' → logprob: -11.537307739257812
    7. '0' → logprob: -12.162307739257812
    8. ''
' → logprob: -13.287307739257812
    9. '":
' → logprob: -13.412307739257812
    10. '\r' → logprob: -13.537307739257812

Token 345: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9743012671824545e-05
    2. ':' → logprob: -11.500020027160645
    3. '       ' → logprob: -12.500020027160645
    4. '          ' → logprob: -13.000020027160645
    5. '	       ' → logprob: -14.000020027160645
    6. '               ' → logprob: -14.125020027160645
    7. ':
' → logprob: -14.250020027160645
    8. '		' → logprob: -14.750020027160645
    9. ',' → logprob: -15.125020027160645
    10. '<|end|>' → logprob: -15.875020027160645

Token 346: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013908441178500652
    2. 'break' (adapté à ' break') → logprob: -4.763908386230469
    3. ' break' → logprob: -5.263908386230469
    4. 'return' → logprob: -9.888908386230469
    5. '	break' → logprob: -10.888908386230469
    6. '               ' → logprob: -11.638908386230469
    7. '       ' → logprob: -11.638908386230469
    8. ' return' → logprob: -12.263908386230469
    9. '   ' → logprob: -12.388908386230469
    10. '		' → logprob: -12.513908386230469

Token 347: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006970656104385853
    2. '        
' → logprob: -8.250697135925293
    3. '
' → logprob: -8.375697135925293
    4. '<|end|>' → logprob: -9.125697135925293
    5. 'n' → logprob: -10.000697135925293
    6. '   ' → logprob: -10.875697135925293
    7. '  
' → logprob: -11.750697135925293
    8. '```' → logprob: -12.250697135925293
    9. ',' → logprob: -12.500697135925293
    10. '           ' → logprob: -12.625697135925293

Token 348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007723436574451625
    2. '        
' → logprob: -7.875772476196289
    3. '
' → logprob: -8.500772476196289
    4. '<|end|>' → logprob: -9.375772476196289
    5. '   ' → logprob: -10.625772476196289
    6. '```' → logprob: -10.875772476196289
    7. '	' → logprob: -11.125772476196289
    8. 'n' → logprob: -11.500772476196289
    9. '  
' → logprob: -11.625772476196289
    10. '           ' → logprob: -12.250772476196289

Token 349: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.16982094943523407
    2. ' n' → logprob: -2.54482102394104
    3. '       ' → logprob: -2.66982102394104
    4. 'e' → logprob: -5.294820785522461
    5. ' e' → logprob: -5.794820785522461
    6. '```' → logprob: -9.294820785522461
    7. 'ex' → logprob: -9.544820785522461
    8. '   ' → logprob: -9.919820785522461
    9. '``' → logprob: -10.794820785522461
    10. 'num' → logprob: -11.044820785522461

Token 350: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197451800107956
    2. '=' → logprob: -2.81197452545166
    3. '=int' → logprob: -12.56197452545166
    4. ' ' → logprob: -13.18697452545166
    5. ',' → logprob: -14.43697452545166
    6. '_str' → logprob: -15.31197452545166
    7. 'int' → logprob: -15.43697452545166
    8. '   ' → logprob: -15.81197452545166
    9. '_val' → logprob: -16.186973571777344
    10. '_' → logprob: -16.686973571777344

Token 351: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715370807796717
    2. ' int' → logprob: -5.006715297698975
    3. '(int' → logprob: -19.381715774536133
    4. '[int' → logprob: -19.506715774536133
    5. ' ' → logprob: -21.631715774536133
    6. '=int' → logprob: -21.756715774536133
    7. '<int' → logprob: -22.006715774536133
    8. '       ' → logprob: -22.631715774536133
    9. '	int' → logprob: -22.631715774536133
    10. '   ' → logprob: -23.006715774536133

Token 352: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006744974292814732
    2. '(' → logprob: -5.006744861602783
    3. ' (' → logprob: -10.506745338439941
    4. '('' → logprob: -14.131745338439941
    5. '(
' → logprob: -14.506745338439941
    6. 'n' → logprob: -14.631745338439941
    7. ')' → logprob: -16.006744384765625
    8. '(input' → logprob: -16.256744384765625
    9. '(i' → logprob: -16.631744384765625
    10. ' ' → logprob: -16.756744384765625

Token 353: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4223819375038147
    2. ')' → logprob: -1.67238187789917
    3. '(n' → logprob: -1.92238187789917
    4. 'n' → logprob: -5.17238187789917
    5. '[n' → logprob: -5.79738187789917
    6. 's' → logprob: -7.54738187789917
    7. '(' → logprob: -8.297382354736328
    8. ' )' → logprob: -8.922382354736328
    9. '   ' → logprob: -9.172382354736328
    10. ' n' → logprob: -9.297382354736328

Token 354: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ')
' → logprob: -11.250019073486328
    3. ' )' → logprob: -12.125019073486328
    4. '<|end|>' → logprob: -15.375019073486328
    5. '')' → logprob: -16.625019073486328
    6. '[' → logprob: -16.625019073486328
    7. '   ' → logprob: -16.625019073486328
    8. ')

' → logprob: -17.125019073486328
    9. ')}' → logprob: -17.250019073486328
    10. ');' → logprob: -17.375019073486328

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3377396762371063
    2. '<|end|>' → logprob: -1.3377397060394287
    3. '        
' → logprob: -3.9627397060394287
    4. '   ' → logprob: -6.71273946762085
    5. '<|end|>' → logprob: -6.83773946762085
    6. ',' → logprob: -7.46273946762085
    7. ' ' → logprob: -7.58773946762085
    8. '  
' → logprob: -8.087739944458008
    9. '
' → logprob: -8.337739944458008
    10. '        ' → logprob: -8.462739944458008

Token 356: ' bits' (ID: 18189)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4182915985584259
    2. '       ' → logprob: -1.4182915687561035
    3. ' e' → logprob: -3.2932915687561035
    4. 'sign' → logprob: -3.6682915687561035
    5. '#' → logprob: -4.4182915687561035
    6. 'ex' → logprob: -4.7932915687561035
    7. 'exp' → logprob: -4.9182915687561035
    8. 'import' → logprob: -6.2932915687561035
    9. 'if' → logprob: -6.6682915687561035
    10. ' sign' → logprob: -6.7932915687561035

Token 357: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0214591845870018
    2. '=' → logprob: -4.021459102630615
    3. ',' → logprob: -6.146459102630615
    4. '   ' → logprob: -7.396459102630615
    5. '_e' → logprob: -8.521459579467773
    6. ' ' → logprob: -9.521459579467773
    7. '       ' → logprob: -9.896459579467773
    8. ' <<=' → logprob: -10.396459579467773
    9. '=e' → logprob: -10.896459579467773
    10. ')' → logprob: -11.021459579467773

Token 358: ' input' (ID: 3422)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.8187601566314697
    2. ' to' → logprob: -1.3187601566314697
    3. 'multiply' → logprob: -2.5687601566314697
    4. ' multiply' → logprob: -2.8187601566314697
    5. '(' → logprob: -3.0687601566314697
    6. ''' → logprob: -3.3187601566314697
    7. ' (' → logprob: -3.4437601566314697
    8. ' ' → logprob: -4.443759918212891
    9. '0' → logprob: -4.693759918212891
    10. ' format' → logprob: -5.818759918212891

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.500005722045898
    3. '```' → logprob: -14.125005722045898
    4. 'i' → logprob: -14.250005722045898
    5. '(i' → logprob: -15.125005722045898
    6. ' [' → logprob: -15.750005722045898
    7. '[j' → logprob: -16.1250057220459
    8. '[I' → logprob: -16.2500057220459
    9. '       ' → logprob: -17.0000057220459
    10. '   ' → logprob: -17.2500057220459

Token 360: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3869629204273224
    2. ']
' → logprob: -1.136962890625
    3. '[i' → logprob: -10.261962890625
    4. ']
' → logprob: -11.136962890625
    5. ']

' → logprob: -11.886962890625
    6. ' ]' → logprob: -12.011962890625
    7. ' ]
' → logprob: -12.386962890625
    8. ')' → logprob: -12.511962890625
    9. '];' → logprob: -12.511962890625
    10. '   ' → logprob: -12.636962890625

Token 361: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.36210304498672485
    2. '       ' → logprob: -1.36210298538208
    3. ' i' → logprob: -3.61210298538208
    4. '<|end|>' → logprob: -3.98710298538208
    5. '<|end|>' → logprob: -7.48710298538208
    6. '	i' → logprob: -7.48710298538208
    7. ' ' → logprob: -7.73710298538208
    8. '   ' → logprob: -8.362103462219238
    9. '[i' → logprob: -9.612103462219238
    10. '        
' → logprob: -9.987103462219238

Token 363: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023426340892910957
    2. ' +=' → logprob: -3.7734262943267822
    3. '+' → logprob: -8.648426055908203
    4. '++' → logprob: -13.023426055908203
    5. ']+=' → logprob: -13.398426055908203
    6. '=' → logprob: -14.023426055908203
    7. '   ' → logprob: -14.773426055908203
    8. '```' → logprob: -15.273426055908203
    9. '+++' → logprob: -16.148426055908203
    10. '+='' → logprob: -16.523426055908203

Token 364: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -20.625017166137695
    4. '   ' → logprob: -21.250017166137695
    5. '１' → logprob: -22.000017166137695
    6. '0' → logprob: -22.250017166137695
    7. '
' → logprob: -22.250017166137695
    8. '2' → logprob: -22.500017166137695
    9. '+' → logprob: -23.750017166137695
    10. '۱' → logprob: -23.875017166137695

Token 365: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022944116964936256
    2. 'e' → logprob: -4.02294397354126
    3. '        
' → logprob: -6.14794397354126
    4. '
' → logprob: -7.02294397354126
    5. '<|end|>' → logprob: -7.52294397354126
    6. ' e' → logprob: -8.147944450378418
    7. '  
' → logprob: -8.522944450378418
    8. '#' → logprob: -8.647944450378418
    9. ',' → logprob: -9.022944450378418
    10. '   ' → logprob: -9.522944450378418

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004454805050045252
    2. '<|end|>' → logprob: -6.254454612731934
    3. '        
' → logprob: -6.629454612731934
    4. ',' → logprob: -8.004454612731934
    5. '  
' → logprob: -9.004454612731934
    6. 'e' → logprob: -9.004454612731934
    7. '```' → logprob: -9.004454612731934
    8. ' e' → logprob: -9.754454612731934
    9. '#' → logprob: -9.754454612731934
    10. ' ' → logprob: -9.879454612731934

Token 367: ' frac' (ID: 72308)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.11659345775842667
    2. 'sign' → logprob: -2.741593360900879
    3. 'exp' → logprob: -3.866593360900879
    4. '       ' → logprob: -3.866593360900879
    5. 'ex' → logprob: -6.241593360900879
    6. ' e' → logprob: -7.491593360900879
    7. '#' → logprob: -7.616593360900879
    8. 's' → logprob: -7.866593360900879
    9. 'frac' (adapté à ' frac') → logprob: -9.866593360900879
    10. 'import' → logprob: -9.991593360900879

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6705684661865234
    2. ' =' → logprob: -0.7955684661865234
    3. ',' → logprob: -3.2955684661865234
    4. ' ,' → logprob: -9.420568466186523
    5. '_' → logprob: -9.920568466186523
    6. ')' → logprob: -10.670568466186523
    7. '_,' → logprob: -11.545568466186523
    8. ' +=' → logprob: -12.170568466186523
    9. '=int' → logprob: -12.295568466186523
    10. '_=' → logprob: -12.295568466186523

Token 369: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. ' int' → logprob: -9.7500581741333
    3. '(int' → logprob: -16.750059127807617
    4. '       ' → logprob: -20.375059127807617
    5. '   ' → logprob: -21.125059127807617
    6. '	int' → logprob: -21.625059127807617
    7. '0' → logprob: -21.625059127807617
    8. '    ' → logprob: -22.750059127807617
    9. 'bits' → logprob: -22.750059127807617
    10. '=int' → logprob: -23.375059127807617

Token 370: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.75
    3. '(parts' → logprob: -17.0
    4. '(bit' → logprob: -17.0
    5. 'bits' → logprob: -17.75
    6. '(fr' → logprob: -18.0
    7. ' (' → logprob: -18.25
    8. '(bounds' → logprob: -18.75
    9. '(b' → logprob: -19.125
    10. '(tokens' → logprob: -19.125

Token 371: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032188263721764088
    2. '[' → logprob: -5.878218650817871
    3. ' ,' → logprob: -8.378218650817871
    4. ')' → logprob: -9.003218650817871
    5. '(' → logprob: -10.628218650817871
    6. '[-' → logprob: -10.878218650817871
    7. '   ' → logprob: -12.503218650817871
    8. '2' → logprob: -12.753218650817871
    9. '16' → logprob: -13.253218650817871
    10. '[:' → logprob: -13.378218650817871

Token 372: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014171971939504147
    2. '16' → logprob: -4.264172077178955
    3. ' ' → logprob: -11.764171600341797
    4. 'base' → logprob: -14.514171600341797
    5. '   ' → logprob: -15.639171600341797
    6. '```' → logprob: -16.639171600341797
    7. ')' → logprob: -16.764171600341797
    8. '0' → logprob: -17.014171600341797
    9. '  ' → logprob: -18.639171600341797
    10. '
' → logprob: -18.639171600341797

Token 373: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020377879263833165
    2. '16' → logprob: -8.500204086303711
    3. ' ' → logprob: -15.125204086303711
    4. '```' → logprob: -17.50020408630371
    5. 'base' → logprob: -18.87520408630371
    6. '
' → logprob: -19.62520408630371
    7. '   ' → logprob: -20.50020408630371
    8. '

' → logprob: -21.25020408630371
    9. '２' → logprob: -21.37520408630371
    10. '``' → logprob: -21.62520408630371

Token 374: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.416665640543215e-05
    2. '   ' → logprob: -11.00003433227539
    3. ')
' → logprob: -11.37503433227539
    4. ' )' → logprob: -13.37503433227539
    5. '       ' → logprob: -13.62503433227539
    6. '[' → logprob: -13.62503433227539
    7. ' ' → logprob: -14.62503433227539
    8. '<|end|>' → logprob: -15.25003433227539
    9. '  ' → logprob: -15.62503433227539
    10. ')<<' → logprob: -15.75003433227539

Token 375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06652061641216278
    2. '<|end|>' → logprob: -2.8165206909179688
    3. '```' → logprob: -7.066520690917969
    4. '        
' → logprob: -7.066520690917969
    5. 'e' → logprob: -7.441520690917969
    6. '
' → logprob: -7.691520690917969
    7. '   ' → logprob: -7.816520690917969
    8. ')' → logprob: -7.941520690917969
    9. '<|end|>' → logprob: -8.191520690917969
    10. ',' → logprob: -8.566520690917969

Token 376: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2768878638744354
    2. '       ' → logprob: -1.5268878936767578
    3. ' e' → logprob: -3.901887893676758
    4. '```' → logprob: -6.276887893676758
    5. 'sign' → logprob: -7.026887893676758
    6. 'n' → logprob: -8.151887893676758
    7. ',e' → logprob: -8.276887893676758
    8. 'if' → logprob: -8.526887893676758
    9. '   ' → logprob: -9.401887893676758
    10. '
' → logprob: -9.526887893676758

Token 377: ' initial' (ID: 4871)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5566049218177795
    2. ' e' → logprob: -0.9316049218177795
    3. '       ' → logprob: -4.556604862213135
    4. ' new' → logprob: -4.556604862213135
    5. '#' → logprob: -5.556604862213135
    6. 'new' → logprob: -5.931604862213135
    7. ' #' → logprob: -6.806604862213135
    8. ' if' → logprob: -7.556604862213135
    9. ' total' → logprob: -7.681604862213135
    10. 'exp' → logprob: -7.681604862213135

Token 378: ' a' (ID: 261)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.48979219794273376
    2. ' e' → logprob: -1.1147922277450562
    3. '_e' → logprob: -2.8647921085357666
    4. '       ' → logprob: -7.114792346954346
    5. 'exp' → logprob: -7.864792346954346
    6. ' =' → logprob: -8.364791870117188
    7. '_exp' → logprob: -8.739791870117188
    8. '	e' → logprob: -9.114791870117188
    9. '_ex' → logprob: -9.364791870117188
    10. '_sign' → logprob: -9.989791870117188

Token 379: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5989904999732971
    2. '_e' → logprob: -1.4739904403686523
    3. ' =' → logprob: -1.8489904403686523
    4. '=' → logprob: -3.2239904403686523
    5. ' e' → logprob: -4.848990440368652
    6. '=e' → logprob: -5.598990440368652
    7. '_' → logprob: -6.098990440368652
    8. '_sign' → logprob: -6.473990440368652
    9. '_exp' → logprob: -6.848990440368652
    10. '	e' → logprob: -6.973990440368652

Token 380: ' m' (ID: 284)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23863421380519867
    2. '0' → logprob: -2.4886341094970703
    3. ' (' → logprob: -2.4886341094970703
    4. '1' → logprob: -3.4886341094970703
    5. ' ' → logprob: -4.61363410949707
    6. 'frac' → logprob: -5.98863410949707
    7. '((' → logprob: -6.23863410949707
    8. '   ' → logprob: -8.61363410949707
    9. '52' → logprob: -8.86363410949707
    10. '(fr' → logprob: -9.48863410949707

Token 381: ' *' (ID: 425)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1809874176979065
    2. '=' → logprob: -1.8059873580932617
    3. ',' → logprob: -7.055987358093262
    4. '_bits' → logprob: -8.805987358093262
    5. 'e' → logprob: -9.305987358093262
    6. '_frac' → logprob: -10.555987358093262
    7. '1' → logprob: -10.680987358093262
    8. '   ' → logprob: -10.805987358093262
    9. ' ' → logprob: -11.805987358093262
    10. 'bits' → logprob: -11.930987358093262

Token 382: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3421804904937744
    2. '1' → logprob: -2.4671804904937744
    3. 'n' → logprob: -2.5921804904937744
    4. ' (' → logprob: -2.9671804904937744
    5. '2' → logprob: -3.0921804904937744
    6. '0' → logprob: -3.9671804904937744
    7. ' n' → logprob: -4.967180252075195
    8. ' ' → logprob: -5.467180252075195
    9. '(n' → logprob: -6.092180252075195
    10. '   ' → logprob: -8.717180252075195

Token 383: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6340658068656921
    2. '(' → logprob: -1.009065866470337
    3. '1' → logprob: -2.759065866470337
    4. '2' → logprob: -4.009065628051758
    5. '0' → logprob: -4.259065628051758
    6. '(n' → logprob: -5.259065628051758
    7. ' n' → logprob: -6.509065628051758
    8. ' (' → logprob: -6.509065628051758
    9. ' ' → logprob: -8.259065628051758
    10. '   ' → logprob: -8.509065628051758

Token 384: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5770042538642883
    2. '^' → logprob: -1.4520041942596436
    3. '53' → logprob: -1.9520041942596436
    4. '52' → logprob: -3.3270041942596436
    5. '54' → logprob: -4.452004432678223
    6. '0' → logprob: -5.577004432678223
    7. '^{' → logprob: -5.577004432678223
    8. '       ' → logprob: -6.702004432678223
    9. '^(' → logprob: -6.827004432678223
    10. '55' → logprob: -7.827004432678223

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015073712915182114
    2. 'e' → logprob: -4.640073776245117
    3. '(' → logprob: -6.265073776245117
    4. '-' → logprob: -6.265073776245117
    5. '(e' → logprob: -6.890073776245117
    6. '1' → logprob: -8.515073776245117
    7. '102' → logprob: -9.390073776245117
    8. '(n' → logprob: -10.140073776245117
    9. 'n' → logprob: -10.640073776245117
    10. '11' → logprob: -10.890073776245117

Token 386: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: ' m' (ID: 284)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.06642680615186691
    2. ' e' → logprob: -2.8164267539978027
    3. '       ' → logprob: -5.441426753997803
    4. '   ' → logprob: -10.316427230834961
    5. ' ' → logprob: -10.441427230834961
    6. '	e' → logprob: -11.191427230834961
    7. '#' → logprob: -11.566427230834961
    8. '```' → logprob: -12.066427230834961
    9. 'frac' → logprob: -12.941427230834961
    10. '0' → logprob: -12.941427230834961

Token 388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18000055849552155
    2. ' =' → logprob: -1.8050005435943604
    3. '>=' → logprob: -8.555000305175781
    4. ' >=' → logprob: -11.055000305175781
    5. ',' → logprob: -11.680000305175781
    6. '       ' → logprob: -11.805000305175781
    7. '≥' → logprob: -12.180000305175781
    8. '   ' → logprob: -12.305000305175781
    9. '>' → logprob: -12.305000305175781
    10. '=
' → logprob: -13.055000305175781

Token 389: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21664565801620483
    2. '(' → logprob: -1.8416457176208496
    3. 'frac' → logprob: -3.4666457176208496
    4. '0' → logprob: -5.71664571762085
    5. '(fr' → logprob: -7.59164571762085
    6. ' (' → logprob: -7.59164571762085
    7. ' ' → logprob: -8.841645240783691
    8. 'bits' → logprob: -8.841645240783691
    9. 'int' → logprob: -8.966645240783691
    10. '((' → logprob: -9.591645240783691

Token 390: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020764464512467384
    2. '(' → logprob: -3.8957643508911133
    3. 'frac' → logprob: -9.020764350891113
    4. '0' → logprob: -10.895764350891113
    5. '(fr' → logprob: -11.145764350891113
    6. ' (' → logprob: -11.145764350891113
    7. ' ' → logprob: -11.270764350891113
    8. '((' → logprob: -11.520764350891113
    9. '(int' → logprob: -12.020764350891113
    10. 'int' → logprob: -12.020764350891113

Token 391: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5252525210380554
    2. '+' → logprob: -1.1502525806427002
    3. '<<' → logprob: -3.6502525806427
    4. '<|end|>' → logprob: -4.150252342224121
    5. '
' → logprob: -4.525252342224121
    6. '       ' → logprob: -4.650252342224121
    7. '#' → logprob: -5.025252342224121
    8. '000' → logprob: -5.275252342224121
    9. ' (' → logprob: -5.400252342224121
    10. '<|end|>' → logprob: -5.775252342224121

Token 392: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.01627153903245926
    2. ' frac' → logprob: -4.766271591186523
    3. '(fr' → logprob: -5.141271591186523
    4. '0' → logprob: -6.516271591186523
    5. ' (' → logprob: -9.266271591186523
    6. 'fr' → logprob: -9.391271591186523
    7. '(' → logprob: -10.266271591186523
    8. 'fract' → logprob: -10.641271591186523
    9. '_frac' → logprob: -11.016271591186523
    10. ' ' → logprob: -11.016271591186523

Token 393: '/(' (ID: 27334)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.10889644175767899
    2. '<|end|>' → logprob: -3.233896493911743
    3. ' /' → logprob: -4.108896255493164
    4. '       ' → logprob: -4.358896255493164
    5. '<|end|>' → logprob: -4.983896255493164
    6. ',' → logprob: -5.233896255493164
    7. '<<' → logprob: -5.233896255493164
    8. ' (' → logprob: -5.608896255493164
    9. '>>>' → logprob: -5.983896255493164
    10. '>>' → logprob: -6.108896255493164

Token 394: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1721135973930359
    2. '(' → logprob: -2.4221136569976807
    3. '450' → logprob: -2.6721136569976807
    4. '452' → logprob: -9.297113418579102
    5. '1' → logprob: -10.172113418579102
    6. ' (' → logprob: -10.297113418579102
    7. '\(' → logprob: -11.297113418579102
    8. '```' → logprob: -11.297113418579102
    9. '449' → logprob: -11.297113418579102
    10. '`' → logprob: -11.547113418579102

Token 395: '^' (ID: 61)
  Prédit: '52'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -0.0030376052018254995
    2. '**' → logprob: -6.003037452697754
    3. '^' → logprob: -7.753037452697754
    4. '+' → logprob: -9.253037452697754
    5. '#' → logprob: -11.378037452697754
    6. '```' → logprob: -12.128037452697754
    7. '
' → logprob: -12.378037452697754
    8. '>' → logprob: -13.003037452697754
    9. '^{' → logprob: -13.128037452697754
    10. '=' → logprob: -13.253037452697754

Token 396: '52' (ID: 6283)
  Prédit: '52'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '52' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '53' → logprob: -16.5
    4. '052' → logprob: -18.25
    5. '```' → logprob: -18.625
    6. '   ' → logprob: -19.0
    7. '522' → logprob: -19.125
    8. '>' → logprob: -19.5
    9. '{' → logprob: -19.5
    10. '`' → logprob: -19.75

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021826191805303097
    2. '   ' → logprob: -7.127182483673096
    3. ')
' → logprob: -7.252182483673096
    4. '       ' → logprob: -7.502182483673096
    5. ' )' → logprob: -10.502182960510254
    6. '<|end|>' → logprob: -10.502182960510254
    7. '),' → logprob: -10.877182960510254
    8. '#' → logprob: -11.502182960510254
    9. ',' → logprob: -12.377182960510254
    10. '<|end|>' → logprob: -12.502182960510254

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2105564922094345
    2. '<|end|>' → logprob: -2.2105565071105957
    3. '
' → logprob: -2.7105565071105957
    4. '        
' → logprob: -4.710556507110596
    5. '<|end|>' → logprob: -6.335556507110596
    6. '   ' → logprob: -6.835556507110596
    7. '  
' → logprob: -7.710556507110596
    8. '```' → logprob: -7.835556507110596
    9. ',' → logprob: -7.960556507110596
    10. 'e' → logprob: -8.085556030273438

Token 399: ' #' (ID: 1069)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2950015962123871
    2. '       ' → logprob: -1.4200016260147095
    3. ' e' → logprob: -4.42000150680542
    4. '
' → logprob: -7.92000150680542
    5. ',' → logprob: -8.170001983642578
    6. ',e' → logprob: -8.295001983642578
    7. 'new' → logprob: -8.420001983642578
    8. '   ' → logprob: -8.920001983642578
    9. '        
' → logprob: -9.295001983642578
    10. '_e' → logprob: -9.295001983642578

Token 400: ' sum' (ID: 4215)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0256339143961668
    2. ' e' → logprob: -4.025633811950684
    3. '       ' → logprob: -5.150633811950684
    4. 'new' → logprob: -6.900633811950684
    5. '#' → logprob: -8.775633811950684
    6. ' new' → logprob: -9.025633811950684
    7. '
' → logprob: -9.525633811950684
    8. '   ' → logprob: -10.025633811950684
    9. 'm' → logprob: -10.150633811950684
    10. 'ex' → logprob: -10.775633811950684

Token 401: ' s' (ID: 265)
  Prédit: '_e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_e' → logprob: -0.4211946725845337
    2. ' =' → logprob: -1.1711946725845337
    3. '_' → logprob: -4.046194553375244
    4. '_frac' → logprob: -4.796194553375244
    5. '=' → logprob: -5.421194553375244
    6. 'e' → logprob: -6.796194553375244
    7. ' +=' → logprob: -7.921194553375244
    8. '_bits' → logprob: -8.171195030212402
    9. '_a' → logprob: -8.421195030212402
    10. '_sign' → logprob: -8.796195030212402

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14683912694454193
    2. '=' → logprob: -2.021839141845703
    3. ' +=' → logprob: -5.646839141845703
    4. '+=' → logprob: -8.146839141845703
    5. '_' → logprob: -9.271839141845703
    6. '   ' → logprob: -9.396839141845703
    7. ' ' → logprob: -9.771839141845703
    8. ',' → logprob: -9.896839141845703
    9. '_=' → logprob: -11.771839141845703
    10. '  ' → logprob: -11.896839141845703

Token 403: ' n' (ID: 297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0616934709250927
    2. '(' → logprob: -3.0616934299468994
    3. ' ' → logprob: -4.6866936683654785
    4. ' (' → logprob: -5.6866936683654785
    5. '[' → logprob: -9.31169319152832
    6. 'e' → logprob: -9.81169319152832
    7. '(n' → logprob: -9.93669319152832
    8. 'frac' → logprob: -10.06169319152832
    9. 'n' → logprob: -10.31169319152832
    10. '(e' → logprob: -10.43669319152832

Token 404: '*a' (ID: 78448)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24196788668632507
    2. ',' → logprob: -1.9919679164886475
    3. '=' → logprob: -2.7419679164886475
    4. '       ' → logprob: -5.241967678070068
    5. '<|end|>' → logprob: -5.866967678070068
    6. ' ,' → logprob: -6.616967678070068
    7. '<|end|>' → logprob: -6.991967678070068
    8. ' ' → logprob: -7.616967678070068
    9. '        ' → logprob: -7.616967678070068
    10. '   ' → logprob: -7.741967678070068

Token 405: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19306686520576477
    2. '
' → logprob: -2.3180668354034424
    3. '<|end|>' → logprob: -2.8180668354034424
    4. '        
' → logprob: -4.4430670738220215
    5. ',' → logprob: -5.9430670738220215
    6. '<|end|>' → logprob: -6.1930670738220215
    7. '  
' → logprob: -8.693066596984863
    8. 'def' → logprob: -8.943066596984863
    9. '   ' → logprob: -9.068066596984863
    10. ',
' → logprob: -9.193066596984863

Token 406: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13893915712833405
    2. '
' → logprob: -2.763939142227173
    3. '   ' → logprob: -3.638939142227173
    4. '<|end|>' → logprob: -4.013939380645752
    5. 'e' → logprob: -4.638939380645752
    6. '        
' → logprob: -5.013939380645752
    7. '  
' → logprob: -6.263939380645752
    8. ',' → logprob: -6.888939380645752
    9. ' e' → logprob: -7.013939380645752
    10. '    
' → logprob: -7.388939380645752

Token 407: ' e' (ID: 319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40364882349967957
    2. 'e' (adapté à ' e') → logprob: -1.153648853302002
    3. ' e' → logprob: -4.278648853302002
    4. '   ' → logprob: -6.528648853302002
    5. '
' → logprob: -7.278648853302002
    6. '        
' → logprob: -8.653648376464844
    7. ',' → logprob: -9.153648376464844
    8. ',e' → logprob: -9.278648376464844
    9. '	e' → logprob: -9.653648376464844
    10. '_e' → logprob: -10.403648376464844

Token 408: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4643961489200592
    2. ' =' → logprob: -1.4643961191177368
    3. ',' → logprob: -1.9643961191177368
    4. ' ,' → logprob: -10.714396476745605
    5. ',e' → logprob: -13.339396476745605
    6. 's' → logprob: -13.339396476745605
    7. ',n' → logprob: -15.339396476745605
    8. 'e' → logprob: -15.589396476745605
    9. ',s' → logprob: -15.714396476745605
    10. ')' → logprob: -15.839396476745605

Token 409: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.08023654669523239
    2. ' frac' → logprob: -2.5802364349365234
    3. 'f' → logprob: -7.830236434936523
    4. 'fr' → logprob: -8.080236434936523
    5. ' new' → logprob: -8.580236434936523
    6. 'new' → logprob: -8.830236434936523
    7. 'fract' → logprob: -9.705236434936523
    8. '(fr' → logprob: -10.205236434936523
    9. '_frac' → logprob: -10.205236434936523
    10. ' ' → logprob: -10.205236434936523

Token 410: '_res' (ID: 10626)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759449005126953
    2. '=' → logprob: -0.8259449005126953
    3. ',' → logprob: -12.575944900512695
    4. '_new' → logprob: -13.325944900512695
    5. 'new' → logprob: -15.825944900512695
    6. ' ' → logprob: -16.075944900512695
    7. '   ' → logprob: -16.825944900512695
    8. '_' → logprob: -17.075944900512695
    9. ')' → logprob: -17.200944900512695
    10. '＝' → logprob: -17.450944900512695

Token 411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324594371020794
    2. ' =' → logprob: -3.7732460498809814
    3. ',' → logprob: -15.398245811462402
    4. ')' → logprob: -16.27324676513672
    5. ')=' → logprob: -17.39824676513672
    6. '=}' → logprob: -17.77324676513672
    7. '＝' → logprob: -19.02324676513672
    8. '   ' → logprob: -19.27324676513672
    9. '<|end|>' → logprob: -19.64824676513672
    10. ' ' → logprob: -19.64824676513672

Token 412: ' multiply' (ID: 57388)
  Prédit: 'multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiply' → logprob: -0.16022513806819916
    2. ' multiply' → logprob: -1.9102251529693604
    3. 'multip' → logprob: -14.535224914550781
    4. '   ' → logprob: -15.660224914550781
    5. '.multiply' → logprob: -15.785224914550781
    6. 'ultiply' → logprob: -17.03522491455078
    7. ' ' → logprob: -17.16022491455078
    8. 'mul' → logprob: -18.66022491455078
    9. 'Multiply' → logprob: -18.66022491455078
    10. 'm' → logprob: -18.91022491455078

Token 413: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -1.5048530030981055e-06
    2. 'sign' → logprob: -13.500001907348633
    3. 'Sign' → logprob: -16.875001907348633
    4. '_' → logprob: -18.375001907348633
    5. '_s' → logprob: -19.000001907348633
    6. '_SIGN' → logprob: -19.250001907348633
    7. '(sign' → logprob: -19.625001907348633
    8. 'a' → logprob: -19.625001907348633
    9. '_sig' → logprob: -19.625001907348633
    10. 's' → logprob: -19.750001907348633

Token 414: 'ific' (ID: 1173)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5424546003341675
    2. 'sign' → logprob: -1.4174546003341675
    3. '_sign' → logprob: -2.417454719543457
    4. 'frac' → logprob: -3.167454719543457
    5. 'ic' → logprob: -3.667454719543457
    6. 'ific' → logprob: -4.417454719543457
    7. 'sig' → logprob: -6.667454719543457
    8. 'id' → logprob: -7.042454719543457
    9. 'if' → logprob: -7.292454719543457
    10. 'ed' → logprob: -7.417454719543457

Token 415: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -9.088346359931165e-07
    2. 'ed' → logprob: -15.125000953674316
    3. 'ant' → logprob: -15.250000953674316
    4. 'd' → logprob: -16.25
    5. '   ' → logprob: -16.625
    6. 'a' → logprob: -16.625
    7. 't' → logprob: -18.0
    8. 'frac' → logprob: -18.0
    9. 'ad' → logprob: -18.125
    10. 'sign' → logprob: -18.25

Token 416: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -16.0
    3. ' (' → logprob: -16.0
    4. '(frm' → logprob: -17.75
    5. '(fe' → logprob: -18.0
    6. '(func' → logprob: -18.375
    7. 'frac' → logprob: -18.5
    8. '(f' → logprob: -18.875
    9. '(freq' → logprob: -19.375
    10. '((' → logprob: -19.75

Token 417: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.00104614719748497
    2. ',' → logprob: -7.376046180725098
    3. 'ag' → logprob: -8.751046180725098
    4. '   ' → logprob: -9.251046180725098
    5. 'act' → logprob: -9.501046180725098
    6. 'acc' → logprob: -10.751046180725098
    7. 'frac' → logprob: -11.001046180725098
    8. ')' → logprob: -11.501046180725098
    9. '       ' → logprob: -12.126046180725098
    10. 'c' → logprob: -12.251046180725098

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008227337966673076
    2. ',n' → logprob: -7.2508225440979
    3. ' ,' → logprob: -9.125823020935059
    4. 'n' → logprob: -13.125823020935059
    5. '(n' → logprob: -13.500823020935059
    6. ',
' → logprob: -14.750823020935059
    7. '```' → logprob: -16.375822067260742
    8. '   ' → logprob: -16.750822067260742
    9. ' n' → logprob: -17.250822067260742
    10. '(' → logprob: -17.500822067260742

Token 419: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011050059460103512
    2. ' n' → logprob: -4.511050224304199
    3. '(n' → logprob: -13.6360502243042
    4. ')n' → logprob: -14.3860502243042
    5. '	n' → logprob: -15.5110502243042
    6. '   ' → logprob: -16.261049270629883
    7. ')' → logprob: -16.386049270629883
    8. '
' → logprob: -17.011049270629883
    9. '_n' → logprob: -17.386049270629883
    10. '```' → logprob: -17.761049270629883

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325037121772766
    2. ')
' → logprob: -3.7732503414154053
    3. ')
' → logprob: -12.648250579833984
    4. ')

' → logprob: -14.273250579833984
    5. '   ' → logprob: -14.398250579833984
    6. ' )' → logprob: -15.648250579833984
    7. ')`
' → logprob: -17.648250579833984
    8. '       ' → logprob: -17.773250579833984
    9. ')return' → logprob: -17.773250579833984
    10. ')`' → logprob: -17.773250579833984

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.526611328125
    2. '<|end|>' → logprob: -0.901611328125
    3. '   ' → logprob: -6.151611328125
    4. '
' → logprob: -7.776611328125
    5. '```' → logprob: -7.776611328125
    6. '        
' → logprob: -8.651611328125
    7. '<|end|>' → logprob: -8.776611328125
    8. ')' → logprob: -9.151611328125
    9. ',' → logprob: -11.276611328125
    10. '[' → logprob: -11.776611328125

Token 422: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004025481757707894
    2. '<|end|>' → logprob: -8.875402450561523
    3. 'print' → logprob: -9.000402450561523
    4. '   ' → logprob: -9.375402450561523
    5. '```' → logprob: -10.250402450561523
    6. ' print' → logprob: -11.625402450561523
    7. '        
' → logprob: -12.750402450561523
    8. '
' → logprob: -14.125402450561523
    9. '#' (adapté à ' #') → logprob: -14.375402450561523
    10. ' ' → logprob: -14.625402450561523

Token 423: ' output' (ID: 4733)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7441724538803101
    2. 'print' → logprob: -0.9941724538803101
    3. '       ' → logprob: -1.99417245388031
    4. ' result' → logprob: -4.9941725730896
    5. 'result' → logprob: -5.6191725730896
    6. ' res' → logprob: -5.8691725730896
    7. ' if' → logprob: -6.9941725730896
    8. ' output' → logprob: -7.3691725730896
    9. ' bits' → logprob: -7.4941725730896
    10. ' e' → logprob: -7.7441725730896

Token 424: ' bits' (ID: 18189)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011594847775995731
    2. 'print' → logprob: -4.511594772338867
    3. ' print' → logprob: -7.886594772338867
    4. '<|end|>' → logprob: -9.011594772338867
    5. '```' → logprob: -11.386594772338867
    6. ',' → logprob: -11.386594772338867
    7. '#' → logprob: -11.636594772338867
    8. '        
' → logprob: -12.761594772338867
    9. '<|end|>' → logprob: -12.761594772338867
    10. '#print' → logprob: -13.011594772338867

Token 425: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0134318508207798
    2. ',' → logprob: -4.513432025909424
    3. ' =' → logprob: -7.013432025909424
    4. 'print' → logprob: -7.638432025909424
    5. '=' → logprob: -8.013431549072266
    6. ':' → logprob: -8.763431549072266
    7. '        
' → logprob: -9.388431549072266
    8. '
' → logprob: -9.513431549072266
    9. '   ' → logprob: -9.638431549072266
    10. '<|end|>' → logprob: -9.763431549072266

Token 426: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3125952184200287
    2. ' print' → logprob: -1.437595248222351
    3. '       ' → logprob: -3.5625951290130615
    4. 'output' → logprob: -6.562595367431641
    5. ' output' → logprob: -7.937595367431641
    6. 'result' → logprob: -8.56259536743164
    7. 'sign' → logprob: -8.81259536743164
    8. 'out' → logprob: -10.06259536743164
    9. ' result' → logprob: -10.06259536743164
    10. 'e' → logprob: -10.31259536743164

Token 427: '12' (ID: 899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.460291767027229e-05
    2. ' print' → logprob: -10.375094413757324
    3. '       ' → logprob: -10.500094413757324
    4. 'result' → logprob: -11.750094413757324
    5. 'output' → logprob: -12.000094413757324
    6. '
' → logprob: -12.125094413757324
    7. 'bits' → logprob: -12.750094413757324
    8. 'e' → logprob: -13.000094413757324
    9. '000' → logprob: -13.500094413757324
    10. '0' → logprob: -13.500094413757324

Token 428: ' bits' (ID: 18189)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' exponent' (ID: 51159)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6760607361793518
    2. ',' → logprob: -1.551060676574707
    3. '+' → logprob: -2.051060676574707
    4. '<|end|>' → logprob: -2.051060676574707
    5. '       ' → logprob: -5.176060676574707
    6. '   ' → logprob: -5.426060676574707
    7. ')' → logprob: -5.551060676574707
    8. '<|end|>' → logprob: -6.301060676574707
    9. '[' → logprob: -6.551060676574707
    10. ' ' → logprob: -6.801060676574707

Token 431: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3976254463195801
    2. 'format' → logprob: -1.52262544631958
    3. '52' → logprob: -2.89762544631958
    4. ' format' → logprob: -3.14762544631958
    5. ' '' → logprob: -4.77262544631958
    6. ' ' → logprob: -6.14762544631958
    7. '   ' → logprob: -8.022624969482422
    8. '"' → logprob: -8.897624969482422
    9. 'frac' → logprob: -9.397624969482422
    10. '(format' → logprob: -9.647624969482422

Token 432: '52' (ID: 6283)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.10006053000688553
    2. '52' → logprob: -2.97506046295166
    3. ''' → logprob: -3.22506046295166
    4. ' format' → logprob: -5.47506046295166
    5. ''{' → logprob: -9.47506046295166
    6. ' ' → logprob: -9.97506046295166
    7. ' '' → logprob: -10.97506046295166
    8. '53' → logprob: -11.35006046295166
    9. '052' → logprob: -11.35006046295166
    10. 'frac' → logprob: -11.47506046295166

Token 433: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.036423083394765854
    2. ' bits' → logprob: -3.7864229679107666
    3. '_bits' → logprob: -4.411423206329346
    4. 'b' → logprob: -7.161423206329346
    5. 'fr' → logprob: -10.036422729492188
    6. 'frac' → logprob: -10.536422729492188
    7. 'bit' → logprob: -10.536422729492188
    8. '<|end|>' → logprob: -10.536422729492188
    9. 'fract' → logprob: -11.786422729492188
    10. '```' → logprob: -11.786422729492188

Token 434: ' fraction' (ID: 33763)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3397863209247589
    2. '       ' → logprob: -1.5897862911224365
    3. '+' → logprob: -3.7147862911224365
    4. ',' → logprob: -3.8397862911224365
    5. 'output' → logprob: -4.589786529541016
    6. ' +' → logprob: -4.714786529541016
    7. 'result' → logprob: -5.089786529541016
    8. '<|end|>' → logprob: -5.839786529541016
    9. 'bits' → logprob: -5.964786529541016
    10. ' print' → logprob: -6.214786529541016

Token 435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033284336677752435
    2. 'print' → logprob: -8.750332832336426
    3. '<|end|>' → logprob: -8.875332832336426
    4. ',' → logprob: -11.375332832336426
    5. '   ' → logprob: -12.125332832336426
    6. '        
' → logprob: -12.250332832336426
    7. ' print' → logprob: -12.375332832336426
    8. '<|end|>' → logprob: -12.750332832336426
    9. '
' → logprob: -13.625332832336426
    10. '```' → logprob: -14.000332832336426

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028859488666057587
    2. 'print' → logprob: -6.002885818481445
    3. ' print' → logprob: -8.877885818481445
    4. '<|end|>' → logprob: -9.127885818481445
    5. '   ' → logprob: -9.377885818481445
    6. ',' → logprob: -10.377885818481445
    7. '        
' → logprob: -11.377885818481445
    8. '```' → logprob: -11.877885818481445
    9. 'output' → logprob: -12.252885818481445
    10. '<|end|>' → logprob: -12.752885818481445

Token 437: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012835586443543434
    2. '       ' → logprob: -4.887835502624512
    3. ' print' → logprob: -5.262835502624512
    4. 'output' → logprob: -10.637835502624512
    5. 'bits' → logprob: -12.512835502624512
    6. '```' → logprob: -12.637835502624512
    7. 'result' → logprob: -12.887835502624512
    8. ' bits' → logprob: -15.137835502624512
    9. '#print' → logprob: -15.512835502624512
    10. ' output' → logprob: -15.512835502624512

Token 438: '(to' (ID: 24042)
  Prédit: '(format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(format' → logprob: -0.2042730152606964
    2. '(to' → logprob: -1.704272985458374
    3. '(f' → logprob: -5.954273223876953
    4. '(' → logprob: -9.329273223876953
    5. 'to' → logprob: -9.454273223876953
    6. '('' → logprob: -10.079273223876953
    7. '('{' → logprob: -10.579273223876953
    8. 'format' → logprob: -11.454273223876953
    9. '((' → logprob: -12.079273223876953
    10. '("{' → logprob: -12.704273223876953

Token 439: '_float' (ID: 44505)
  Prédit: '_float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_float' → logprob: -3.054500666621607e-06
    2. 'float' → logprob: -12.75000286102295
    3. '_' → logprob: -16.625003814697266
    4. 'Float' → logprob: -17.750003814697266
    5. '_FLOAT' → logprob: -17.750003814697266
    6. '_floor' → logprob: -18.500003814697266
    7. '_uint' → logprob: -18.625003814697266
    8. '_string' → logprob: -20.000003814697266
    9. '_f' → logprob: -20.125003814697266
    10. 'loat' → logprob: -20.250003814697266

Token 440: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: 0.0
    2. '54' → logprob: -18.0
    3. '_' → logprob: -18.125
    4. '6' → logprob: -19.5
    5. '63' → logprob: -20.25
    6. '643' → logprob: -20.5
    7. '646' → logprob: -20.75
    8. '642' → logprob: -20.875
    9. '064' → logprob: -20.875
    10. '65' → logprob: -21.125

Token 441: '_bits' (ID: 48415)
  Prédit: '_bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -4.320199877838604e-07
    2. '_BITS' → logprob: -15.25
    3. 'bits' → logprob: -16.125
    4. '64' → logprob: -17.625
    5. '```' → logprob: -18.375
    6. '(bits' → logprob: -19.125
    7. '_bounds' → logprob: -19.5
    8. '_bytes' → logprob: -19.625
    9. '"_' → logprob: -19.875
    10. 'Bits' → logprob: -20.0

Token 442: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -8.53050296427682e-05
    2. '(' → logprob: -9.87508487701416
    3. 'e' → logprob: -10.75008487701416
    4. ' (' → logprob: -11.75008487701416
    5. ')' → logprob: -13.25008487701416
    6. '(
' → logprob: -14.25008487701416
    7. ')e' → logprob: -14.25008487701416
    8. ' e' → logprob: -14.50008487701416
    9. ',e' → logprob: -14.62508487701416
    10. ')(' → logprob: -15.12508487701416

Token 443: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.464347173576243e-05
    2. ' ,' → logprob: -10.50003433227539
    3. ',
' → logprob: -12.50003433227539
    4. '   ' → logprob: -13.25003433227539
    5. '(fr' → logprob: -15.12503433227539
    6. '<|end|>' → logprob: -15.12503433227539
    7. '‌,' → logprob: -15.50003433227539
    8. ',

' → logprob: -15.75003433227539
    9. '```' → logprob: -16.00003433227539
    10. '`,' → logprob: -16.25003433227539

Token 444: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' → logprob: -0.17977280914783478
    2. ' frac' → logprob: -1.8047728538513184
    3. 'fr' → logprob: -10.92977237701416
    4. 'fract' → logprob: -12.55477237701416
    5. 'frag' → logprob: -12.67977237701416
    6. '_frac' → logprob: -13.67977237701416
    7. ')' → logprob: -14.55477237701416
    8. 'fraction' → logprob: -14.55477237701416
    9. 'fra' → logprob: -15.30477237701416
    10. '(fr' → logprob: -15.42977237701416

Token 445: '_res' (ID: 10626)
  Prédit: '_res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.00035512709291651845
    2. 'res' → logprob: -8.250354766845703
    3. ',' → logprob: -9.375354766845703
    4. ')' → logprob: -12.750354766845703
    5. ',res' → logprob: -13.375354766845703
    6. '),' → logprob: -13.875354766845703
    7. '   ' → logprob: -14.250354766845703
    8. 'Res' → logprob: -14.375354766845703
    9. ',_' → logprob: -15.000354766845703
    10. '_fr' → logprob: -15.250354766845703

Token 446: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931508183479309
    2. '))' → logprob: -0.6931508183479309
    3. ')))' → logprob: -13.318150520324707
    4. '))
' → logprob: -14.568150520324707
    5. ')")' → logprob: -15.068150520324707
    6. ' )' → logprob: -15.443150520324707
    7. ')}' → logprob: -15.568150520324707
    8. ' ))' → logprob: -15.568150520324707
    9. ')
' → logprob: -15.818150520324707
    10. '})' → logprob: -15.943150520324707

Token 447: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04978533461689949
    2. '__' → logprob: -3.0497853755950928
    3. '_' → logprob: -7.174785137176514
    4. ' ' → logprob: -8.299785614013672
    5. ' ' → logprob: -9.299785614013672
    6. '_name' → logprob: -9.924785614013672
    7. ' _' → logprob: -11.299785614013672
    8. '  ' → logprob: -11.924785614013672
    9. ' ' → logprob: -12.174785614013672
    10. 'name' → logprob: -12.674785614013672

Token 449: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6105625629425049
    2. ' ==' → logprob: -0.8605625629425049
    3. '==' → logprob: -3.485562562942505
    4. ' __' → logprob: -6.235562324523926
    5. '.__' → logprob: -7.735562324523926
    6. '=="' → logprob: -8.110562324523926
    7. '__.' → logprob: -8.610562324523926
    8. '__.__' → logprob: -8.610562324523926
    9. ' .' → logprob: -9.610562324523926
    10. '=='' → logprob: -9.860562324523926

Token 450: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0014870046870782971
    2. '==' → logprob: -6.626486778259277
    3. '__.__' → logprob: -9.376486778259277
    4. '=='' → logprob: -10.751486778259277
    5. '__('' → logprob: -10.876486778259277
    6. ' ==' → logprob: -10.876486778259277
    7. '=="' → logprob: -12.501486778259277
    8. '___' → logprob: -12.626486778259277
    9. '===' → logprob: -13.001486778259277
    10. '____' → logprob: -13.251486778259277

Token 451: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07197096943855286
    2. '==' → logprob: -2.6969709396362305
    3. '=='' → logprob: -6.8219709396362305
    4. '__' → logprob: -7.4469709396362305
    5. '=="' → logprob: -8.44697093963623
    6. '=' → logprob: -10.32197093963623
    7. '[' → logprob: -10.94697093963623
    8. '.__' → logprob: -11.32197093963623
    9. ' =' → logprob: -11.57197093963623
    10. '==
' → logprob: -11.57197093963623

Token 452: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6932477355003357
    2. ''' → logprob: -0.6932477355003357
    3. '__' → logprob: -9.44324779510498
    4. ' "__' → logprob: -10.94324779510498
    5. ' '__' → logprob: -12.81824779510498
    6. '"user' → logprob: -14.94324779510498
    7. ''user' → logprob: -16.318246841430664
    8. ''"' → logprob: -16.693246841430664
    9. ''post' → logprob: -16.818246841430664
    10. ''app' → logprob: -16.943246841430664

Token 453: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.843177233240567e-05
    2. '__' → logprob: -11.125018119812012
    3. '_main' → logprob: -13.125018119812012
    4. 'name' → logprob: -13.625018119812012
    5. ' main' → logprob: -14.750018119812012
    6. 'm' → logprob: -17.750019073486328
    7. '_MAIN' → logprob: -17.750019073486328
    8. 'ma' → logprob: -18.500019073486328
    9. '(main' → logprob: -18.875019073486328
    10. '	main' → logprob: -19.000019073486328

Token 454: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.04896180331707001
    2. '__' → logprob: -3.048961877822876
    3. '__":
' → logprob: -8.298961639404297
    4. '_' → logprob: -11.298961639404297
    5. '__.' → logprob: -11.298961639404297
    6. ''>
' → logprob: -11.423961639404297
    7. '.' → logprob: -11.423961639404297
    8. '('__' → logprob: -11.548961639404297
    9. '()' → logprob: -11.798961639404297
    10. ':' → logprob: -11.923961639404297

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5891337394714355
    2. 'main' → logprob: -0.8391337394714355
    3. '	main' → logprob: -4.5891337394714355
    4. ' main' → logprob: -5.8391337394714355
    5. '_main' → logprob: -11.464134216308594
    6. '   ' → logprob: -11.964134216308594
    7. '(main' → logprob: -12.214134216308594
    8. '__' → logprob: -12.339134216308594
    9. '```' → logprob: -12.839134216308594
    10. ' ' → logprob: -13.839134216308594

Token 456: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.0
    3. '	main' → logprob: -21.625
    4. '_main' → logprob: -24.25
    5. '   ' → logprob: -24.625
    6. '.main' → logprob: -25.5
    7. '(main' → logprob: -26.5
    8. 'Main' → logprob: -27.375
    9. '
' → logprob: -27.5
    10. '```' → logprob: -27.875

Token 457: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 455
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 320
Précision stricte (1ère position): 31.65%
Précision adaptée (1ère position): 33.63%
Précision (top 10): 70.33%
================================================================================
