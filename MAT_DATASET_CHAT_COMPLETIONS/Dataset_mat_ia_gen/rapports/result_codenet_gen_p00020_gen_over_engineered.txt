================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TextTransformerInterface:
    def transform(self, text: str) -> str:
        raise NotImplementedError("Subclasses should implement this!")

class CapitalizeTransformer(TextTransformerInterface):
    def transform(self, text: str) -> str:
        return text.upper()

class TextProcessor:
    def __init__(self, transformer: TextTransformerInterface):
        self._transformer = transformer

    def process(self, text: str) -> str:
        if not isinstance(text, str):
            raise TypeError("Input must be a string.")
        if len(text) > 200:
            raise ValueError("Input text exceeds maximum allowed length.")
        return self._transformer.transform(text)

class InputReader:
    def read(self) -> str:
        return input()

class OutputWriter:
    def write(self, text: str) -> None:
        print(text)

class CapitalizeApp:
    def __init__(self):
        self._reader = InputReader()
        self._processor = TextProcessor(CapitalizeTransformer())
        self._writer = OutputWriter()

    def run(self):
        raw_text = self._reader.read()
        transformed_text = self._processor.process(raw_text)
        self._writer.write(transformed_text)

if __name__ == "__main__":
    app = CapitalizeApp()
    app.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Text' (ID: 4564)
  → Token d'amorce (pas de prédiction)

Token 2: 'Transformer' (ID: 48916)
  → Token d'amorce (pas de prédiction)

Token 3: 'Interface' (ID: 7078)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18273194134235382
    2. '.' → logprob: -2.432731866836548
    3. ':' → logprob: -2.557731866836548
    4. '{' → logprob: -6.557732105255127
    5. '[' → logprob: -9.557731628417969
    6. '```' → logprob: -10.182731628417969
    7. ' .' → logprob: -10.307731628417969
    8. '(
' → logprob: -10.307731628417969
    9. '(:' → logprob: -10.682731628417969
    10. ' (' → logprob: -10.807731628417969

Token 4: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6836414337158203
    2. ':' → logprob: -0.9336414337158203
    3. '{' → logprob: -2.3086414337158203
    4. ' {' → logprob: -6.68364143371582
    5. '.' → logprob: -7.18364143371582
    6. '(:' → logprob: -8.55864143371582
    7. ' :' → logprob: -8.93364143371582
    8. ' ' → logprob: -9.18364143371582
    9. '[' → logprob: -9.68364143371582
    10. '(
' → logprob: -10.05864143371582

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02108469232916832
    2. ':
' → logprob: -4.396084785461426
    3. '.' → logprob: -5.521084785461426
    4. '(' → logprob: -6.021084785461426
    5. '```' → logprob: -6.396084785461426
    6. '():' → logprob: -8.396084785461426
    7. '   ' → logprob: -9.771084785461426
    8. '(
' → logprob: -9.896084785461426
    9. '().' → logprob: -10.521084785461426
    10. '
' → logprob: -10.896084785461426

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14886382222175598
    2. '<|end|>' → logprob: -3.2738637924194336
    3. '```' → logprob: -3.6488637924194336
    4. ' ' → logprob: -3.8988637924194336
    5. '\n' → logprob: -4.898863792419434
    6. '_' → logprob: -5.023863792419434
    7. '(' → logprob: -5.273863792419434
    8. ' def' → logprob: -5.398863792419434
    9. '    ' → logprob: -5.523863792419434
    10. '    
' → logprob: -5.523863792419434

Token 7: ' transform' (ID: 7118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015425324440002441
    2. ' __' → logprob: -4.390425205230713
    3. '__' → logprob: -6.640425205230713
    4. '_' → logprob: -8.265425682067871
    5. ' ' → logprob: -8.640425682067871
    6. ' process' → logprob: -8.765425682067871
    7. '  ' → logprob: -8.890425682067871
    8. ' def' → logprob: -9.015425682067871
    9. ' init' → logprob: -9.640425682067871
    10. ' _' → logprob: -9.890425682067871

Token 8: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04848799481987953
    2. '_' → logprob: -3.923487901687622
    3. '(self' → logprob: -4.173488140106201
    4. ' (' → logprob: -4.673488140106201
    5. '_text' → logprob: -6.298488140106201
    6. '_token' → logprob: -8.548487663269043
    7. '(
' → logprob: -8.673487663269043
    8. 'self' → logprob: -9.673487663269043
    9. '<|end|>' → logprob: -9.673487663269043
    10. '_self' → logprob: -9.923487663269043

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005781138781458139
    2. ')' → logprob: -5.755781173706055
    3. '):' → logprob: -6.255781173706055
    4. ',text' → logprob: -8.380781173706055
    5. ' ,' → logprob: -8.630781173706055
    6. '_text' → logprob: -9.630781173706055
    7. 'self' → logprob: -9.755781173706055
    8. '.' → logprob: -10.005781173706055
    9. 's' → logprob: -10.255781173706055
    10. 'text' → logprob: -11.255781173706055

Token 10: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.6860482692718506
    2. ' self' → logprob: -1.1860482692718506
    3. 'self' → logprob: -2.1860482692718506
    4. 'text' → logprob: -2.5610482692718506
    5. ' input' → logprob: -7.56104850769043
    6. ')' → logprob: -7.81104850769043
    7. ' )' → logprob: -8.06104850769043
    8. 'input' → logprob: -9.18604850769043
    9. 'sentence' → logprob: -10.93604850769043
    10. ' data' → logprob: -11.31104850769043

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009242184460163116
    2. ':' → logprob: -5.134242057800293
    3. ')' → logprob: -6.009242057800293
    4. ',' → logprob: -7.509242057800293
    5. '):
' → logprob: -8.384242057800293
    6. 'self' → logprob: -10.759242057800293
    7. ' ):' → logprob: -11.009242057800293
    8. '   ' → logprob: -11.384242057800293
    9. '       ' → logprob: -11.634242057800293
    10. '```' → logprob: -13.009242057800293

Token 12: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.005716658663004637
    2. 'str' → logprob: -5.255716800689697
    3. ')' → logprob: -7.880716800689697
    4. ' )' → logprob: -9.630716323852539
    5. ' text' → logprob: -10.630716323852539
    6. ':str' → logprob: -12.630716323852539
    7. 'text' → logprob: -12.755716323852539
    8. ' ' → logprob: -13.380716323852539
    9. '[str' → logprob: -13.505716323852539
    10. '	str' → logprob: -13.755716323852539

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009365935111418366
    2. '):' → logprob: -7.250936508178711
    3. ')->' → logprob: -8.625936508178711
    4. '   ' → logprob: -10.625936508178711
    5. ' )' → logprob: -11.250936508178711
    6. '):
' → logprob: -12.750936508178711
    7. '`)' → logprob: -13.000936508178711
    8. ',' → logprob: -13.500936508178711
    9. '       ' → logprob: -14.000936508178711
    10. '->' → logprob: -14.750936508178711

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.269400030374527
    2. ')' → logprob: -2.144400119781494
    3. '->' → logprob: -2.644400119781494
    4. ' ->' → logprob: -3.519400119781494
    5. ')->' → logprob: -4.394400119781494
    6. '   ' → logprob: -6.019400119781494
    7. '):' → logprob: -6.269400119781494
    8. '       ' → logprob: -6.894400119781494
    9. ':return' → logprob: -8.894399642944336
    10. ' :' → logprob: -9.144399642944336

Token 15: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0026338035240769386
    2. 'str' → logprob: -6.002633571624756
    3. ' None' → logprob: -9.252634048461914
    4. ' ' → logprob: -10.252634048461914
    5. 'None' → logprob: -12.002634048461914
    6. ' List' → logprob: -12.002634048461914
    7. '   ' → logprob: -12.877634048461914
    8. ' text' → logprob: -13.002634048461914
    9. ' Any' → logprob: -13.377634048461914
    10. ' Text' → logprob: -14.002634048461914

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015705463010817766
    2. ':
' → logprob: -9.000157356262207
    3. ':return' → logprob: -11.000157356262207
    4. '):' → logprob: -12.625157356262207
    5. '():' → logprob: -12.750157356262207
    6. '<|end|>' → logprob: -12.875157356262207
    7. '   ' → logprob: -13.000157356262207
    8. ':**' → logprob: -13.750157356262207
    9. ' :' → logprob: -14.125157356262207
    10. '':' → logprob: -14.625157356262207

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13837899267673492
    2. '   ' → logprob: -2.3883790969848633
    3. '\n' → logprob: -3.7633790969848633
    4. '<|end|>' → logprob: -5.388379096984863
    5. '
' → logprob: -6.513379096984863
    6. '\' → logprob: -6.888379096984863
    7. ' pass' → logprob: -7.013379096984863
    8. '\r' → logprob: -7.013379096984863
    9. '```' → logprob: -7.263379096984863
    10. ':' → logprob: -7.388379096984863

Token 18: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0193463284522295
    2. 'pass' → logprob: -4.144346237182617
    3. 'raise' (adapté à ' raise') → logprob: -6.769346237182617
    4. '   ' → logprob: -7.019346237182617
    5. ' raise' → logprob: -7.894346237182617
    6. ' pass' → logprob: -8.019346237182617
    7. '           ' → logprob: -8.644346237182617
    8. '...' → logprob: -8.769346237182617
    9. '```' → logprob: -9.519346237182617
    10. '#' → logprob: -10.269346237182617

Token 19: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.05503980442881584
    2. 'Not' → logprob: -2.930039882659912
    3. ' ' → logprob: -9.555039405822754
    4. '<|end|>' → logprob: -10.055039405822754
    5. '  ' → logprob: -10.805039405822754
    6. '_Not' → logprob: -11.430039405822754
    7. '_not' → logprob: -12.930039405822754
    8. ' ' → logprob: -13.055039405822754
    9. '(Not' → logprob: -13.305039405822754
    10. ' not' → logprob: -13.680039405822754

Token 20: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -3.106736039626412e-05
    2. 'implemented' → logprob: -11.375031471252441
    3. 'Impl' → logprob: -12.125031471252441
    4. 'Implement' → logprob: -12.250031471252441
    5. 'Imp' → logprob: -12.250031471252441
    6. 'Im' → logprob: -13.000031471252441
    7. 'Found' → logprob: -14.125031471252441
    8. 'Supported' → logprob: -14.375031471252441
    9. 'm' → logprob: -15.000031471252441
    10. 'plement' → logprob: -15.250031471252441

Token 21: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'rror' → logprob: -16.0
    3. 'E' → logprob: -17.0
    4. 'Er' → logprob: -17.25
    5. ' Error' → logprob: -17.5
    6. 'Erro' → logprob: -17.75
    7. '```' → logprob: -18.0
    8. '   ' → logprob: -18.25
    9. 'error' → logprob: -18.375
    10. '  

' → logprob: -19.0

Token 22: '("' (ID: 568)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.588290274143219
    2. '
' → logprob: -1.4632902145385742
    3. '<|end|>' → logprob: -2.213290214538574
    4. '\n' → logprob: -3.338290214538574
    5. '```' → logprob: -3.588290214538574
    6. '' → logprob: -4.338290214538574
    7. '

' → logprob: -5.213290214538574
    8. 'newline' → logprob: -5.463290214538574
    9. ':' → logprob: -5.588290214538574
    10. '\' → logprob: -5.588290214538574

Token 23: 'Sub' (ID: 3638)
  Prédit: 'Implement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Implement' → logprob: -0.5321242809295654
    2. '")' → logprob: -1.1571242809295654
    3. ')' → logprob: -3.0321242809295654
    4. 'Transform' → logprob: -4.5321245193481445
    5. 'This' → logprob: -4.7821245193481445
    6. ')")' → logprob: -4.9071245193481445
    7. 'T' → logprob: -5.1571245193481445
    8. 'Provide' → logprob: -5.4071245193481445
    9. 'Implemented' → logprob: -6.1571245193481445
    10. 'Please' → logprob: -6.6571245193481445

Token 24: 'classes' (ID: 17233)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.015783295035362244
    2. 'classes' → logprob: -4.265783309936523
    3. 'c' → logprob: -7.890783309936523
    4. 'clas' → logprob: -8.265783309936523
    5. 'cl' → logprob: -8.390783309936523
    6. 'cla' → logprob: -8.765783309936523
    7. '<class' → logprob: -8.890783309936523
    8. 'classe' → logprob: -9.015783309936523
    9. 'lass' → logprob: -9.140783309936523
    10. ' class' → logprob: -10.015783309936523

Token 25: ' should' (ID: 1757)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.03447457775473595
    2. ' should' → logprob: -3.4094746112823486
    3. ' need' → logprob: -8.53447437286377
    4. 'must' → logprob: -8.53447437286377
    5. '    ' → logprob: -9.03447437286377
    6. '<|end|>' → logprob: -9.28447437286377
    7. ' ' → logprob: -9.78447437286377
    8. '   ' → logprob: -10.03447437286377
    9. ' .' → logprob: -10.78447437286377
    10. ' )' → logprob: -10.90947437286377

Token 26: ' implement' (ID: 6365)
  Prédit: ' implement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implement' → logprob: -0.000930163892917335
    2. 'implement' → logprob: -7.875930309295654
    3. ' override' → logprob: -8.250929832458496
    4. ' provide' → logprob: -8.625929832458496
    5. ' ' → logprob: -9.500929832458496
    6. '   ' → logprob: -11.375929832458496
    7. 'Implement' → logprob: -11.375929832458496
    8. ' define' → logprob: -13.125929832458496
    9. ' implementar' → logprob: -13.250929832458496
    10. 'override' → logprob: -13.250929832458496

Token 27: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.024319129064679146
    2. ' the' → logprob: -4.399319171905518
    3. ' transform' → logprob: -4.524319171905518
    4. 'transform' → logprob: -7.774319171905518
    5. 'this' → logprob: -8.27431869506836
    6. ' ' → logprob: -9.89931869506836
    7. ' ")' → logprob: -10.14931869506836
    8. ' )' → logprob: -10.27431869506836
    9. ')' → logprob: -10.64931869506836
    10. '")' → logprob: -10.77431869506836

Token 28: '!")

' (ID: 169327)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0024528263602405787
    2. ' method' → logprob: -6.502452850341797
    3. '.")' → logprob: -7.252452850341797
    4. ' interface' → logprob: -10.127452850341797
    5. '!")' → logprob: -10.127452850341797
    6. '")
' → logprob: -10.252452850341797
    7. '()' → logprob: -10.877452850341797
    8. ')' → logprob: -11.002452850341797
    9. '```' → logprob: -11.127452850341797
    10. ' ")' → logprob: -11.252452850341797

Token 29: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08854033797979355
    2. '<|end|>' → logprob: -3.3385403156280518
    3. '.' → logprob: -3.9635403156280518
    4. '

' → logprob: -5.213540554046631
    5. '' → logprob: -5.338540554046631
    6. '\n' → logprob: -5.588540554046631
    7. ' ' → logprob: -5.963540554046631
    8. '   ' → logprob: -6.088540554046631
    9. ' 
' → logprob: -6.338540554046631
    10. 'class' → logprob: -6.338540554046631

Token 30: ' Capital' (ID: 23530)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3082733154296875
    2. ' Text' → logprob: -1.4332733154296875
    3. ' ' → logprob: -4.5582733154296875
    4. ' Basic' → logprob: -5.4332733154296875
    5. ' Space' → logprob: -5.5582733154296875
    6. 'Text' → logprob: -6.8082733154296875
    7. ' Concrete' → logprob: -6.9332733154296875
    8. ' Token' → logprob: -7.1832733154296875
    9. ' Paste' → logprob: -7.1832733154296875
    10. ' Sp' → logprob: -7.6832733154296875

Token 31: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.160967156291008
    2. 'izer' → logprob: -1.9109671115875244
    3. 'ized' → logprob: -7.7859673500061035
    4. ' ' → logprob: -8.410966873168945
    5. 'ization' → logprob: -10.410966873168945
    6. 'Transformer' → logprob: -10.535966873168945
    7. 'Text' → logprob: -10.910966873168945
    8. 'iz' → logprob: -11.785966873168945
    9. '   ' → logprob: -12.160966873168945
    10. 'i' → logprob: -12.285966873168945

Token 32: 'Transformer' (ID: 48916)
  Prédit: 'Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Text' → logprob: -0.1568901687860489
    2. 'T' → logprob: -2.5318901538848877
    3. 'Transformer' → logprob: -3.0318901538848877
    4. 'd' → logprob: -5.156890392303467
    5. 'Word' → logprob: -5.781890392303467
    6. 'Words' → logprob: -5.781890392303467
    7. ' ' → logprob: -7.031890392303467
    8. 'First' → logprob: -7.281890392303467
    9. 'Transform' → logprob: -7.531890392303467
    10. 'C' → logprob: -7.656890392303467

Token 33: '(Text' (ID: 54915)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04895578697323799
    2. '(' → logprob: -3.0489556789398193
    3. ' :' → logprob: -8.923955917358398
    4. '():' → logprob: -9.923955917358398
    5. '   ' → logprob: -10.423955917358398
    6. '(:' → logprob: -10.673955917358398
    7. '(Text' → logprob: -10.673955917358398
    8. '(T' → logprob: -10.798955917358398
    9. '(C' → logprob: -11.548955917358398
    10. '(Base' → logprob: -11.673955917358398

Token 34: 'Transformer' (ID: 48916)
  Prédit: 'Transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -0.02026367001235485
    2. 'Cap' → logprob: -4.395263671875
    3. 'Transform' → logprob: -5.270263671875
    4. 'er' → logprob: -6.770263671875
    5. 'izer' → logprob: -8.020263671875
    6. 'Capital' → logprob: -8.020263671875
    7. 'capitalize' → logprob: -9.020263671875
    8. 'ize' → logprob: -9.270263671875
    9. 'rans' → logprob: -9.395263671875
    10. 'Processor' → logprob: -10.145263671875

Token 35: 'Interface' (ID: 7078)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0020742444321513176
    2. 'Interface' → logprob: -6.627074241638184
    3. ')' → logprob: -7.502074241638184
    4. 'e' → logprob: -10.252074241638184
    5. 'Cap' → logprob: -10.252074241638184
    6. '   ' → logprob: -11.252074241638184
    7. '```' → logprob: -11.252074241638184
    8. 'izer' → logprob: -11.377074241638184
    9. 'erc' → logprob: -11.502074241638184
    10. 'C' → logprob: -11.502074241638184

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043472214019857347
    2. ')' → logprob: -7.875434875488281
    3. ':' → logprob: -10.000434875488281
    4. '):
' → logprob: -12.500434875488281
    5. ' ):' → logprob: -12.625434875488281
    6. '   ' → logprob: -13.375434875488281
    7. ',' → logprob: -15.375434875488281
    8. ' ' → logprob: -15.875434875488281
    9. '():' → logprob: -16.62543487548828
    10. ':)' → logprob: -16.87543487548828

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48453211784362793
    2. '   ' → logprob: -0.9845321178436279
    3. '    
' → logprob: -4.734532356262207
    4. ' def' → logprob: -7.234532356262207
    5. 'def' → logprob: -7.859532356262207
    6. ' 
' → logprob: -8.734532356262207
    7. '    ' → logprob: -8.984532356262207
    8. '```' → logprob: -9.984532356262207
    9. '[' → logprob: -10.484532356262207
    10. '\n' → logprob: -10.859532356262207

Token 38: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07742901891469955
    2. '   ' → logprob: -2.8274290561676025
    3. ' 
' → logprob: -4.952428817749023
    4. '    ' → logprob: -5.702428817749023
    5. 'def' (adapté à ' def') → logprob: -5.952428817749023
    6. ' ' → logprob: -6.452428817749023
    7. '    
' → logprob: -7.827428817749023
    8. '     
' → logprob: -9.077428817749023
    9. '
' → logprob: -9.452428817749023
    10. '  ' → logprob: -10.702428817749023

Token 39: ' transform' (ID: 7118)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6958027482032776
    2. ' transform' → logprob: -0.6958027482032776
    3. 'transform' → logprob: -6.570802688598633
    4. ' capitalize' → logprob: -7.195802688598633
    5. ' t' → logprob: -8.695802688598633
    6. ' __' → logprob: -8.945802688598633
    7. ' transforme' → logprob: -9.945802688598633
    8. ' def' → logprob: -10.570802688598633
    9. ' _' → logprob: -10.945802688598633
    10. ' ' → logprob: -11.195802688598633

Token 40: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014331568963825703
    2. '(self' → logprob: -4.264331340789795
    3. ' (' → logprob: -9.514331817626953
    4. '(
' → logprob: -10.264331817626953
    5. '<|end|>' → logprob: -10.389331817626953
    6. 'self' → logprob: -11.889331817626953
    7. '(s' → logprob: -12.139331817626953
    8. ' ' → logprob: -12.514331817626953
    9. '<|end|>' → logprob: -12.889331817626953
    10. '(

' → logprob: -13.264331817626953

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006116442382335663
    2. ' ,' → logprob: -7.500611782073975
    3. 'self' → logprob: -10.250611305236816
    4. ' ' → logprob: -11.375611305236816
    5. ')' → logprob: -11.875611305236816
    6. ' self' → logprob: -13.625611305236816
    7. 'text' → logprob: -14.000611305236816
    8. 's' → logprob: -14.375611305236816
    9. ',self' → logprob: -14.375611305236816
    10. ',text' → logprob: -14.375611305236816

Token 42: ' text' (ID: 2201)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0609991550445557
    2. ' text' → logprob: -1.0609991550445557
    3. 'self' → logprob: -1.8109991550445557
    4. 'text' → logprob: -1.9359991550445557
    5. '   ' → logprob: -12.560998916625977
    6. '       ' → logprob: -13.185998916625977
    7. ')' → logprob: -14.310998916625977
    8. '{text' → logprob: -14.310998916625977
    9. ' ' → logprob: -14.435998916625977
    10. '	text' → logprob: -14.935998916625977

Token 43: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08032312989234924
    2. '):' → logprob: -2.5803232192993164
    3. ')' → logprob: -7.080323219299316
    4. '.capitalize' → logprob: -8.705323219299316
    5. ' :' → logprob: -8.955323219299316
    6. ':str' → logprob: -9.330323219299316
    7. ' ):' → logprob: -9.580323219299316
    8. '   ' → logprob: -10.330323219299316
    9. '[' → logprob: -11.080323219299316
    10. '):
' → logprob: -11.205323219299316

Token 44: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.019618380814790726
    2. ' ' → logprob: -4.519618511199951
    3. 'str' → logprob: -5.144618511199951
    4. ' )' → logprob: -6.894618511199951
    5. ')' → logprob: -7.019618511199951
    6. '"' → logprob: -7.894618511199951
    7. ' '' → logprob: -8.394618034362793
    8. ' "' → logprob: -9.269618034362793
    9. ''' → logprob: -9.394618034362793
    10. ' text' → logprob: -12.769618034362793

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014231795445084572
    2. '):' → logprob: -4.2642316818237305
    3. '   ' → logprob: -9.88923168182373
    4. ' )' → logprob: -11.51423168182373
    5. '       ' → logprob: -12.88923168182373
    6. ')->' → logprob: -13.01423168182373
    7. '):
' → logprob: -13.63923168182373
    8. ' ):' → logprob: -14.26423168182373
    9. ':' → logprob: -14.88923168182373
    10. ' ' → logprob: -16.639232635498047

Token 46: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01623506471514702
    2. '):' → logprob: -4.891234874725342
    3. ')' → logprob: -5.641234874725342
    4. ':return' → logprob: -6.141234874725342
    5. ' ->' → logprob: -6.766234874725342
    6. '   ' → logprob: -7.391234874725342
    7. '       ' → logprob: -8.0162353515625
    8. '->' → logprob: -8.6412353515625
    9. ' :' → logprob: -8.7662353515625
    10. '.' → logprob: -8.8912353515625

Token 47: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.005476244725286961
    2. ' text' → logprob: -6.005476474761963
    3. 'str' → logprob: -6.005476474761963
    4. ' ' → logprob: -8.005475997924805
    5. '"' → logprob: -9.505475997924805
    6. 'text' → logprob: -10.380475997924805
    7. ''' → logprob: -10.380475997924805
    8. ' "' → logprob: -11.130475997924805
    9. ' return' → logprob: -11.880475997924805
    10. ' Text' → logprob: -12.380475997924805

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025183463003486395
    2. '):' → logprob: -6.252518177032471
    3. '       ' → logprob: -7.877518177032471
    4. ':return' → logprob: -9.127518653869629
    5. ':
' → logprob: -9.627518653869629
    6. '():' → logprob: -11.127518653869629
    7. ' :' → logprob: -11.752518653869629
    8. '):
' → logprob: -12.752518653869629
    9. ')' → logprob: -12.752518653869629
    10. '   ' → logprob: -13.002518653869629

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004378214362077415
    2. ' return' → logprob: -8.37543773651123
    3. 'return' → logprob: -8.50043773651123
    4. '           ' → logprob: -14.12543773651123
    5. '   ' → logprob: -14.12543773651123
    6. '      ' → logprob: -14.37543773651123
    7. '        ' → logprob: -14.62543773651123
    8. 'text' → logprob: -15.12543773651123
    9. '    ' → logprob: -15.50043773651123
    10. '{return' → logprob: -16.125438690185547

Token 50: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45300722122192383
    2. ' return' → logprob: -1.7030072212219238
    3. 'return' (adapté à ' return') → logprob: -1.7030072212219238
    4. 'text' → logprob: -12.328006744384766
    5. '   ' → logprob: -12.578006744384766
    6. '           ' → logprob: -13.453006744384766
    7. '	return' → logprob: -13.953006744384766
    8. '      ' → logprob: -13.953006744384766
    9. ' ' → logprob: -14.078006744384766
    10. ':return' → logprob: -14.328006744384766

Token 51: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.00043102685594931245
    2. 'text' → logprob: -7.750431060791016
    3. '{text' → logprob: -16.375431060791016
    4. '(text' → logprob: -16.875431060791016
    5. ' ' → logprob: -17.000431060791016
    6. '	text' → logprob: -17.250431060791016
    7. ' t' → logprob: -17.500431060791016
    8. ' texto' → logprob: -17.625431060791016
    9. ' self' → logprob: -17.625431060791016
    10. ' ' → logprob: -17.875431060791016

Token 52: '.upper' (ID: 75082)
  Prédit: '.upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.upper' → logprob: -0.5040711164474487
    2. '.' → logprob: -1.5040711164474487
    3. '.capitalize' → logprob: -1.7540711164474487
    4. '.title' → logprob: -7.879071235656738
    5. '.cap' → logprob: -8.629071235656738
    6. '.lower' → logprob: -9.504071235656738
    7. '.Cap' → logprob: -12.129071235656738
    8. '.uc' → logprob: -13.504071235656738
    9. '.to' → logprob: -13.754071235656738
    10. '.strip' → logprob: -14.379071235656738

Token 53: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -9.746380237629637e-05
    2. '(' → logprob: -9.500097274780273
    3. '`()' → logprob: -11.250097274780273
    4. '().' → logprob: -12.875097274780273
    5. ' ()' → logprob: -12.875097274780273
    6. '()`' → logprob: -13.500097274780273
    7. '()(' → logprob: -14.500097274780273
    8. ']()' → logprob: -14.500097274780273
    9. '()
' → logprob: -15.125097274780273
    10. '()]' → logprob: -15.625097274780273

Token 54: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17337702214717865
    2. 'class' → logprob: -2.17337703704834
    3. '

' → logprob: -3.29837703704834
    4. 'c' → logprob: -5.92337703704834
    5. '\n' → logprob: -6.54837703704834
    6. '<|end|>' → logprob: -7.04837703704834
    7. '#' → logprob: -7.29837703704834
    8. ' class' → logprob: -7.54837703704834
    9. 'n' → logprob: -7.67337703704834
    10. '' → logprob: -7.92337703704834

Token 55: ' Text' (ID: 4564)
  Prédit: ' Lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Lower' → logprob: -0.3025627136230469
    2. ' Reverse' → logprob: -1.6775627136230469
    3. ' Text' → logprob: -3.552562713623047
    4. ' ' → logprob: -3.927562713623047
    5. ' Space' → logprob: -4.052562713623047
    6. ' Wh' → logprob: -5.177562713623047
    7. 'Lower' → logprob: -7.677562713623047
    8. ' Add' → logprob: -7.927562713623047
    9. ' Remove' → logprob: -8.052562713623047
    10. ' Strip' → logprob: -8.177562713623047

Token 56: 'Processor' (ID: 22334)
  Prédit: 'Transformer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -0.4152914881706238
    2. 'Re' → logprob: -2.0402915477752686
    3. 'Transform' → logprob: -3.1652915477752686
    4. 'Reverse' → logprob: -3.5402915477752686
    5. 'Splitter' → logprob: -3.6652915477752686
    6. 'Append' → logprob: -3.6652915477752686
    7. 'Appender' → logprob: -4.1652913093566895
    8. 'Normalizer' → logprob: -4.1652913093566895
    9. 'Lower' → logprob: -4.7902913093566895
    10. 'Strip' → logprob: -4.9152913093566895

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12888316810131073
    2. '(' → logprob: -2.128883123397827
    3. '():' → logprob: -7.253883361816406
    4. '):' → logprob: -7.753883361816406
    5. 'Interface' → logprob: -8.003883361816406
    6. ' :' → logprob: -9.628883361816406
    7. '(I' → logprob: -9.878883361816406
    8. '(Text' → logprob: -9.878883361816406
    9. 'Interactor' → logprob: -10.753883361816406
    10. '(":' → logprob: -10.878883361816406

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005860374658368528
    2. ':' → logprob: -8.62558650970459
    3. '    
' → logprob: -8.62558650970459
    4. ' def' → logprob: -9.12558650970459
    5. 'def' → logprob: -10.00058650970459
    6. ':
' → logprob: -11.12558650970459
    7. '(' → logprob: -11.25058650970459
    8. '```' → logprob: -11.62558650970459
    9. '	def' → logprob: -12.25058650970459
    10. '
' → logprob: -12.25058650970459

Token 59: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.01886262372136116
    2. 'def' (adapté à ' def') → logprob: -4.143862724304199
    3. '   ' → logprob: -6.268862724304199
    4. '    ' → logprob: -7.018862724304199
    5. ' __' → logprob: -10.8938627243042
    6. ' ' → logprob: -11.3938627243042
    7. ' _' → logprob: -13.7688627243042
    8. ' de' → logprob: -14.0188627243042
    9. '  ' → logprob: -14.2688627243042
    10. 'de' → logprob: -14.6438627243042

Token 60: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008261485025286674
    2. ' process' → logprob: -4.883261680603027
    3. ' ' → logprob: -8.008261680603027
    4. ' init' → logprob: -8.508261680603027
    5. ' _' → logprob: -10.008261680603027
    6. '__' → logprob: -10.508261680603027
    7. 'process' → logprob: -10.508261680603027
    8. '_process' → logprob: -11.883261680603027
    9. ' transform' → logprob: -12.258261680603027
    10. '_' → logprob: -13.008261680603027

Token 61: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -15.5
    3. 'in' → logprob: -16.875
    4. 'initi' → logprob: -17.5
    5. '   ' → logprob: -17.625
    6. ' init' → logprob: -17.625
    7. 'innit' → logprob: -17.875
    8. '	init' → logprob: -18.0
    9. 'def' → logprob: -18.25
    10. 'i' → logprob: -18.375

Token 62: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5832781195640564
    2. ' (' → logprob: -1.3332781791687012
    3. '__(' → logprob: -2.208278179168701
    4. '(' → logprob: -2.708278179168701
    5. '__(
' → logprob: -7.958278179168701
    6. '_(' → logprob: -8.208277702331543
    7. '<|end|>' → logprob: -8.458277702331543
    8. ')(' → logprob: -8.583277702331543
    9. ')' → logprob: -8.958277702331543
    10. '_' → logprob: -9.208277702331543

Token 63: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0263530146330595
    2. ' self' → logprob: -3.651353120803833
    3. ')' → logprob: -10.026352882385254
    4. 'text' → logprob: -12.151352882385254
    5. '):
' → logprob: -14.026352882385254
    6. ' )' → logprob: -14.651352882385254
    7. '	self' → logprob: -14.776352882385254
    8. '       ' → logprob: -15.026352882385254
    9. '   ' → logprob: -15.151352882385254
    10. ' ' → logprob: -15.276352882385254

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2014770805835724
    2. ' ,' → logprob: -1.70147705078125
    3. ' ' → logprob: -10.45147705078125
    4. ' )' → logprob: -10.82647705078125
    5. 'text' → logprob: -12.32647705078125
    6. ' text' → logprob: -12.45147705078125
    7. ')' → logprob: -13.07647705078125
    8. ',text' → logprob: -13.20147705078125
    9. '  ' → logprob: -13.95147705078125
    10. 'self' → logprob: -14.57647705078125

Token 65: ' transformer' (ID: 59595)
  Prédit: ' transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transformer' → logprob: -0.7114506363868713
    2. ' transformers' → logprob: -0.8364506363868713
    3. 'transform' → logprob: -2.5864505767822266
    4. '   ' → logprob: -9.336450576782227
    5. ' transform' → logprob: -9.711450576782227
    6. ' text' → logprob: -9.711450576782227
    7. ' ' → logprob: -9.711450576782227
    8. ' )' → logprob: -9.836450576782227
    9. 'trans' → logprob: -9.836450576782227
    10. 'text' → logprob: -10.211450576782227

Token 66: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4361163377761841
    2. ':' → logprob: -1.061116337776184
    3. ')' → logprob: -5.4361162185668945
    4. '=None' → logprob: -6.5611162185668945
    5. ' ):' → logprob: -6.5611162185668945
    6. '=' → logprob: -9.311116218566895
    7. '):
' → logprob: -9.936116218566895
    8. ' :' → logprob: -10.936116218566895
    9. ' )' → logprob: -10.936116218566895
    10. '<|end|>' → logprob: -11.311116218566895

Token 67: ' Text' (ID: 4564)
  Prédit: ' Text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Text' → logprob: -0.0011735594598576427
    2. 'Text' → logprob: -6.751173496246338
    3. '	Text' → logprob: -13.126173973083496
    4. ' ' → logprob: -14.001173973083496
    5. ' )' → logprob: -15.876173973083496
    6. ' text' → logprob: -16.25117301940918
    7. ' ' → logprob: -16.62617301940918
    8. '_Text' → logprob: -16.75117301940918
    9. '(Text' → logprob: -16.75117301940918
    10. ')' → logprob: -16.87617301940918

Token 68: 'Transformer' (ID: 48916)
  Prédit: 'Transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -1.5048530030981055e-06
    2. ' Transformer' → logprob: -14.125001907348633
    3. 'Transform' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. 'Processor' → logprob: -17.250001907348633
    6. ' transformer' → logprob: -17.750001907348633
    7. ')' → logprob: -18.625001907348633
    8. ' ' → logprob: -19.125001907348633
    9. 'Tokenizer' → logprob: -20.250001907348633
    10. '_transform' → logprob: -20.250001907348633

Token 69: 'Interface' (ID: 7078)
  Prédit: 'Interface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interface' → logprob: -5.512236498361744e-07
    2. ' Interface' → logprob: -15.125000953674316
    3. ')' → logprob: -16.25
    4. 'interface' → logprob: -16.5
    5. ' interface' → logprob: -18.375
    6. '_interface' → logprob: -18.5
    7. '_INTERFACE' → logprob: -18.875
    8. 'I' → logprob: -18.875
    9. 'Inter' → logprob: -19.0
    10. '_Interface' → logprob: -19.125

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012152367271482944
    2. ')' → logprob: -6.75121545791626
    3. '):
' → logprob: -10.126214981079102
    4. '   ' → logprob: -13.626214981079102
    5. ' ):' → logprob: -13.626214981079102
    6. ':' → logprob: -13.751214981079102
    7. ',' → logprob: -13.751214981079102
    8. '):
' → logprob: -15.876214981079102
    9. ' ' → logprob: -16.5012149810791
    10. '=' → logprob: -17.0012149810791

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014594044769182801
    2. ' self' → logprob: -7.00145959854126
    3. 'self' → logprob: -7.62645959854126
    4. '   ' → logprob: -10.251459121704102
    5. '<|end|>' → logprob: -11.876459121704102
    6. ')' → logprob: -12.001459121704102
    7. '      ' → logprob: -13.001459121704102
    8. '        
' → logprob: -13.126459121704102
    9. '           ' → logprob: -13.751459121704102
    10. '    ' → logprob: -13.751459121704102

Token 72: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1618698537349701
    2. ' self' → logprob: -1.9118698835372925
    3. '       ' → logprob: -6.411870002746582
    4. ' ' → logprob: -13.661870002746582
    5. '   ' → logprob: -14.161870002746582
    6. '	self' → logprob: -15.161870002746582
    7. ' ' → logprob: -15.786870002746582
    8. '_self' → logprob: -16.161869049072266
    9. '     ' → logprob: -17.911869049072266
    10. '        
' → logprob: -18.161869049072266

Token 73: '._' (ID: 2697)
  Prédit: '.transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.transform' → logprob: -0.5777893662452698
    2. '.' → logprob: -0.8277893662452698
    3. ' .' → logprob: -6.702789306640625
    4. '.trans' → logprob: -7.702789306640625
    5. 'transform' → logprob: -9.577789306640625
    6. '.processor' → logprob: -10.577789306640625
    7. '.token' → logprob: -11.577789306640625
    8. '.transforms' → logprob: -11.827789306640625
    9. ' ' → logprob: -12.327789306640625
    10. '.encoder' → logprob: -12.702789306640625

Token 74: 'transform' (ID: 19692)
  Prédit: 'transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -4.842555426876061e-06
    2. '_transform' → logprob: -12.250004768371582
    3. ' transformer' → logprob: -17.1250057220459
    4. '	transform' → logprob: -18.6250057220459
    5. 'trans' → logprob: -19.1250057220459
    6. '(transform' → logprob: -19.7500057220459
    7. '-transform' → logprob: -19.7500057220459
    8. '.transform' → logprob: -20.1250057220459
    9. 'processor' → logprob: -20.5000057220459
    10. 'text' → logprob: -21.3750057220459

Token 75: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: 0.0
    2. '   ' → logprob: -17.25
    3. 'ers' → logprob: -17.625
    4. '_' → logprob: -18.5
    5. '       ' → logprob: -19.125
    6. 'or' → logprob: -19.125
    7. '```' → logprob: -19.25
    8. 'e' → logprob: -19.625
    9. ' er' → logprob: -20.125
    10. 'ер' → logprob: -20.375

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327179074287415
    2. '=' → logprob: -1.3132717609405518
    3. ' ' → logprob: -11.563271522521973
    4. '   ' → logprob: -15.063271522521973
    5. ' =
' → logprob: -16.06327247619629
    6. '    ' → logprob: -16.68827247619629
    7. '  ' → logprob: -16.93827247619629
    8. '.' → logprob: -17.18827247619629
    9. '=

' → logprob: -18.31327247619629
    10. ')' → logprob: -18.31327247619629

Token 77: ' transformer' (ID: 59595)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.1603332906961441
    2. ' transformer' → logprob: -1.910333275794983
    3. ' transform' → logprob: -10.285333633422852
    4. ' ' → logprob: -10.660333633422852
    5. '(transform' → logprob: -11.160333633422852
    6. '	transform' → logprob: -11.410333633422852
    7. ' ' → logprob: -11.910333633422852
    8. '_transform' → logprob: -11.910333633422852
    9. '.transform' → logprob: -12.785333633422852
    10. 'trans' → logprob: -13.285333633422852

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016384243965148926
    2. '<|end|>' → logprob: -4.891384124755859
    3. '   ' → logprob: -5.266384124755859
    4. '    
' → logprob: -6.391384124755859
    5. '  
' → logprob: -7.641384124755859
    6. '

' → logprob: -8.01638412475586
    7. ' 
' → logprob: -8.01638412475586
    8. '<|end|>' → logprob: -8.14138412475586
    9. 'def' → logprob: -8.26638412475586
    10. ' def' → logprob: -9.26638412475586

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05698481574654579
    2. '
' → logprob: -2.9319849014282227
    3. 'def' → logprob: -6.931984901428223
    4. '    
' → logprob: -6.931984901428223
    5. '        
' → logprob: -9.806984901428223
    6. ' def' → logprob: -9.931984901428223
    7. '<|end|>' → logprob: -11.431984901428223
    8. '	def' → logprob: -11.806984901428223
    9. '       ' → logprob: -12.306984901428223
    10. ' 
' → logprob: -12.556984901428223

Token 80: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.310693111619912e-05
    2. '   ' → logprob: -10.750042915344238
    3. ' def' → logprob: -10.750042915344238
    4. '	def' → logprob: -16.000043869018555
    5. ' ' → logprob: -17.750043869018555
    6. 'de' → logprob: -18.375043869018555
    7. 'd' → logprob: -19.500043869018555
    8. '  ' → logprob: -19.625043869018555
    9. '    
' → logprob: -19.625043869018555
    10. '       ' → logprob: -19.750043869018555

Token 81: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.04095834121108055
    2. ' transform' → logprob: -3.2909584045410156
    3. 'process' → logprob: -5.915958404541016
    4. '_process' → logprob: -9.790958404541016
    5. ' ' → logprob: -9.915958404541016
    6. ' proces' → logprob: -10.165958404541016
    7. 'transform' → logprob: -10.165958404541016
    8. ' processing' → logprob: -12.040958404541016
    9. '	process' → logprob: -12.040958404541016
    10. '.process' → logprob: -12.290958404541016

Token 82: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03824011981487274
    2. '(' → logprob: -3.2882401943206787
    3. '_text' → logprob: -8.788240432739258
    4. '(text' → logprob: -10.788240432739258
    5. '(
' → logprob: -11.288240432739258
    6. ' (' → logprob: -11.788240432739258
    7. 'text' → logprob: -13.288240432739258
    8. 'self' → logprob: -13.538240432739258
    9. '(s' → logprob: -14.413240432739258
    10. '<|end|>' → logprob: -14.538240432739258

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003141593188047409
    2. ' ,' → logprob: -6.128141403198242
    3. ')' → logprob: -7.003141403198242
    4. ',text' → logprob: -11.128141403198242
    5. '_text' → logprob: -11.253141403198242
    6. ',
' → logprob: -12.003141403198242
    7. '):' → logprob: -13.128141403198242
    8. '.' → logprob: -13.253141403198242
    9. '_' → logprob: -13.253141403198242
    10. 'text' → logprob: -13.628141403198242

Token 84: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.029753148555755615
    2. 'text' → logprob: -3.5297532081604004
    3. ')' → logprob: -13.654752731323242
    4. ' )' → logprob: -14.154752731323242
    5. ' self' → logprob: -15.279752731323242
    6. ' texto' → logprob: -15.779752731323242
    7. '	text' → logprob: -16.404752731323242
    8. '_text' → logprob: -16.529752731323242
    9. ' ' → logprob: -16.779752731323242
    10. '   ' → logprob: -17.279752731323242

Token 85: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38713306188583374
    2. ':' → logprob: -1.1371331214904785
    3. ')' → logprob: -9.01213264465332
    4. ' ):' → logprob: -9.38713264465332
    5. '):
' → logprob: -10.13713264465332
    6. ',' → logprob: -11.88713264465332
    7. ' :' → logprob: -12.01213264465332
    8. '   ' → logprob: -13.88713264465332
    9. ' ' → logprob: -14.51213264465332
    10. ':str' → logprob: -15.26213264465332

Token 86: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -1.021920084953308
    2. ')' → logprob: -1.146920084953308
    3. ' )' → logprob: -1.146920084953308
    4. 'str' → logprob: -6.146920204162598
    5. ' ' → logprob: -6.271920204162598
    6. ':str' → logprob: -8.021920204162598
    7. ' ):' → logprob: -9.021920204162598
    8. ' "' → logprob: -10.021920204162598
    9. '   ' → logprob: -10.396920204162598
    10. ' ' → logprob: -10.396920204162598

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029764730483293533
    2. '):' → logprob: -3.5297646522521973
    3. ':' → logprob: -11.529765129089355
    4. ' )' → logprob: -13.029765129089355
    5. ')->' → logprob: -13.654765129089355
    6. ' ):' → logprob: -14.779765129089355
    7. '):
' → logprob: -14.904765129089355
    8. '   ' → logprob: -15.404765129089355
    9. ')：' → logprob: -17.77976417541504
    10. '`)' → logprob: -18.15476417541504

Token 88: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037591091822832823
    2. '):' → logprob: -5.628758907318115
    3. ' :' → logprob: -9.628759384155273
    4. ':return' → logprob: -9.878759384155273
    5. '():' → logprob: -10.753759384155273
    6. ')' → logprob: -11.378759384155273
    7. ':
' → logprob: -13.128759384155273
    8. ')->' → logprob: -13.378759384155273
    9. ':**' → logprob: -13.503759384155273
    10. ' ->' → logprob: -13.753759384155273

Token 89: ' str' (ID: 989)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.15148349106311798
    2. ' ' → logprob: -2.0264835357666016
    3. ' ' → logprob: -5.776483535766602
    4. 'self' → logprob: -6.651483535766602
    5. ' "' → logprob: -6.776483535766602
    6. ' text' → logprob: -7.026483535766602
    7. '"' → logprob: -7.151483535766602
    8. ' '' → logprob: -7.526483535766602
    9. ' str' → logprob: -7.901483535766602
    10. ''' → logprob: -7.901483535766602

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039039674447849393
    2. '):' → logprob: -8.12539005279541
    3. ':
' → logprob: -9.37539005279541
    4. ':return' → logprob: -12.50039005279541
    5. '():' → logprob: -12.75039005279541
    6. ':**' → logprob: -13.62539005279541
    7. ' :' → logprob: -14.75039005279541
    8. '):
' → logprob: -14.75039005279541
    9. ':

' → logprob: -16.000391006469727
    10. '>:' → logprob: -16.000391006469727

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013884092681109905
    2. ' return' → logprob: -5.0138840675354
    3. 'return' → logprob: -5.2638840675354
    4. '        
' → logprob: -7.1388840675354
    5. ' 
' → logprob: -7.6388840675354
    6. '   ' → logprob: -8.763884544372559
    7. '
' → logprob: -8.888884544372559
    8. '    
' → logprob: -9.013884544372559
    9. '  
' → logprob: -9.138884544372559
    10. '    ' → logprob: -10.763884544372559

Token 92: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47544679045677185
    2. 'return' → logprob: -0.9754468202590942
    3. '       ' → logprob: -6.600446701049805
    4. 'self' → logprob: -12.975446701049805
    5. '```' → logprob: -13.225446701049805
    6. '   ' → logprob: -13.725446701049805
    7. ' ' → logprob: -13.725446701049805
    8. ' self' → logprob: -13.850446701049805
    9. '
' → logprob: -14.350446701049805
    10. '{return' → logprob: -15.225446701049805

Token 93: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.27714911103248596
    2. ' ' → logprob: -1.7771490812301636
    3. ' self' → logprob: -3.152149200439453
    4. ' text' → logprob: -3.527149200439453
    5. ' len' → logprob: -8.152149200439453
    6. 'not' → logprob: -8.777149200439453
    7. ' ' → logprob: -8.902149200439453
    8. ' isinstance' → logprob: -9.027149200439453
    9. 'self' → logprob: -10.652149200439453
    10. 'text' → logprob: -10.777149200439453

Token 94: ' isinstance' (ID: 25889)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -2.999452772201039e-05
    2. ' isinstance' → logprob: -10.625029563903809
    3. ' ' → logprob: -12.625029563903809
    4. 'text' → logprob: -13.250029563903809
    5. ' ' → logprob: -15.250029563903809
    6. ' hasattr' → logprob: -15.875029563903809
    7. '	text' → logprob: -16.625030517578125
    8. ' self' → logprob: -17.000030517578125
    9. ' tex' → logprob: -18.000030517578125
    10. ' texto' → logprob: -18.125030517578125

Token 95: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0004320996522437781
    2. '(' → logprob: -7.750432014465332
    3. ' text' → logprob: -14.625432014465332
    4. '(
' → logprob: -15.375432014465332
    5. ' (' → logprob: -15.375432014465332
    6. 'text' → logprob: -15.875432014465332
    7. '(self' → logprob: -15.875432014465332
    8. '{text' → logprob: -16.25043296813965
    9. '	text' → logprob: -17.37543296813965
    10. '(the' → logprob: -17.50043296813965

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038074489566497505
    2. ' ,' → logprob: -8.000380516052246
    3. '(' → logprob: -10.500380516052246
    4. ',text' → logprob: -11.375380516052246
    5. '(text' → logprob: -12.125380516052246
    6. 'text' → logprob: -14.375380516052246
    7. ' ' → logprob: -17.125381469726562
    8. '```' → logprob: -17.250381469726562
    9. '<|end|>' → logprob: -17.375381469726562
    10. ')' → logprob: -17.625381469726562

Token 97: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0009145628428086638
    2. 'str' → logprob: -7.000914573669434
    3. '	str' → logprob: -12.875914573669434
    4. '(str' → logprob: -15.625914573669434
    5. ' 
' → logprob: -16.000913619995117
    6. ' ' → logprob: -16.250913619995117
    7. ')' → logprob: -16.875913619995117
    8. ' ' → logprob: -17.250913619995117
    9. '[str' → logprob: -18.125913619995117
    10. '
' → logprob: -18.500913619995117

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015468881465494633
    2. ')' → logprob: -4.265469074249268
    3. '):
' → logprob: -7.015469074249268
    4. ' ):' → logprob: -7.890469074249268
    5. ':' → logprob: -11.14046859741211
    6. ' or' → logprob: -11.76546859741211
    7. ' )' → logprob: -12.26546859741211
    8. '       ' → logprob: -13.26546859741211
    9. '   ' → logprob: -14.01546859741211
    10. ' ' → logprob: -14.39046859741211

Token 99: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09112332761287689
    2. '           ' → logprob: -2.716123342514038
    3. '       ' → logprob: -5.216123104095459
    4. ':
' → logprob: -5.716123104095459
    5. '):' → logprob: -5.841123104095459
    6. ')' → logprob: -6.216123104095459
    7. ':return' → logprob: -6.341123104095459
    8. ' :' → logprob: -6.466123104095459
    9. ' ' → logprob: -7.091123104095459
    10. ' raise' → logprob: -7.716123104095459

Token 100: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.47529441118240356
    2. '           ' → logprob: -1.1002943515777588
    3. 'raise' (adapté à ' raise') → logprob: -3.600294351577759
    4. ' 
' → logprob: -5.350294589996338
    5. '            ' → logprob: -5.350294589996338
    6. ' ' → logprob: -5.725294589996338
    7. '            
' → logprob: -6.600294589996338
    8. ' ' → logprob: -6.975294589996338
    9. '\n' → logprob: -7.100294589996338
    10. '\' → logprob: -7.850294589996338

Token 101: ' Type' (ID: 7003)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.25224965810775757
    2. ' Type' → logprob: -1.5022497177124023
    3. ' ' → logprob: -8.127249717712402
    4. 'Type' → logprob: -11.752249717712402
    5. ' Val' → logprob: -12.127249717712402
    6. 'Value' → logprob: -12.127249717712402
    7. '	Value' → logprob: -12.877249717712402
    8. ' ' → logprob: -13.377249717712402
    9. '	Type' → logprob: -13.877249717712402
    10. '<|end|>' → logprob: -14.002249717712402

Token 102: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.644463479053229e-05
    2. 'rror' → logprob: -10.750046730041504
    3. '   ' → logprob: -11.375046730041504
    4. '       ' → logprob: -11.625046730041504
    5. '    ' → logprob: -12.875046730041504
    6. '           ' → logprob: -14.500046730041504
    7. '        ' → logprob: -15.000046730041504
    8. '     ' → logprob: -15.125046730041504
    9. '	Error' → logprob: -15.750046730041504
    10. ' Error' → logprob: -16.000045776367188

Token 103: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3136729598045349
    2. '(' → logprob: -1.3136730194091797
    3. '(
' → logprob: -8.06367301940918
    4. '('' → logprob: -9.68867301940918
    5. '(":' → logprob: -10.93867301940918
    6. '()' → logprob: -12.93867301940918
    7. '("'' → logprob: -12.93867301940918
    8. '("("' → logprob: -12.93867301940918
    9. '       ' → logprob: -13.31367301940918
    10. '(

' → logprob: -13.43867301940918

Token 104: 'Input' (ID: 3275)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.16553471982479095
    2. 'Input' → logprob: -1.9155347347259521
    3. 'Text' → logprob: -6.040534496307373
    4. ' text' → logprob: -6.290534496307373
    5. 'Expected' → logprob: -7.040534496307373
    6. 'The' → logprob: -9.415534973144531
    7. ' Input' → logprob: -9.915534973144531
    8. 'input' → logprob: -11.040534973144531
    9. 'Invalid' → logprob: -11.165534973144531
    10. 'Argument' → logprob: -11.665534973144531

Token 105: ' must' (ID: 2804)
  Prédit: ' must'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.01058342307806015
    2. ' text' → logprob: -4.760583400726318
    3. ' should' → logprob: -6.260583400726318
    4. ' ' → logprob: -10.135583877563477
    5. 'text' → logprob: -11.760583877563477
    6. 'must' → logprob: -11.760583877563477
    7. ' needs' → logprob: -14.385583877563477
    8. ' to' → logprob: -15.260583877563477
    9. ' data' → logprob: -16.135583877563477
    10. ' debe' → logprob: -16.260583877563477

Token 106: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -10.875036239624023
    3. '<|end|>' → logprob: -11.375036239624023
    4. ' always' → logprob: -13.000036239624023
    5. ' not' → logprob: -14.000036239624023
    6. '	be' → logprob: -14.500036239624023
    7. ' to' → logprob: -14.750036239624023
    8. '  ' → logprob: -15.375036239624023
    9. 'be' → logprob: -15.375036239624023
    10. ' only' → logprob: -15.500036239624023

Token 107: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0012478509452193975
    2. 'a' → logprob: -7.001247882843018
    3. ' str' → logprob: -8.25124740600586
    4. ' ' → logprob: -10.50124740600586
    5. ' of' → logprob: -10.62624740600586
    6. 'str' → logprob: -10.87624740600586
    7. ' an' → logprob: -13.87624740600586
    8. ' text' → logprob: -13.87624740600586
    9. 's' → logprob: -14.00124740600586
    10. ' string' → logprob: -14.12624740600586

Token 108: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.11420392990112305
    2. ' str' → logprob: -2.489203929901123
    3. 'string' → logprob: -3.864203929901123
    4. 'str' → logprob: -5.614203929901123
    5. ' ' → logprob: -8.614204406738281
    6. ' text' → logprob: -10.364204406738281
    7. ' s' → logprob: -10.864204406738281
    8. 'tring' → logprob: -11.114204406738281
    9. 'n' → logprob: -11.364204406738281
    10. ' 
' → logprob: -11.614204406738281

Token 109: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05604412034153938
    2. '")
' → logprob: -2.931044101715088
    3. ')")' → logprob: -7.931044101715088
    4. '.")' → logprob: -8.181044578552246
    5. '")
' → logprob: -8.681044578552246
    6. ')' → logprob: -8.931044578552246
    7. '.")
' → logprob: -9.431044578552246
    8. ')")
' → logprob: -9.681044578552246
    9. '       ' → logprob: -9.931044578552246
    10. '!")' → logprob: -11.431044578552246

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05213300138711929
    2. '        
' → logprob: -3.927133083343506
    3. ' 
' → logprob: -4.052133083343506
    4. '
' → logprob: -4.802133083343506
    5. '    
' → logprob: -6.052133083343506
    6. '  
' → logprob: -6.802133083343506
    7. ' return' → logprob: -8.052132606506348
    8. '   
' → logprob: -8.177132606506348
    9. 'return' → logprob: -8.302132606506348
    10. '           ' → logprob: -8.552132606506348

Token 111: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17190974950790405
    2. 'return' → logprob: -2.171909809112549
    3. ' return' → logprob: -3.171909809112549
    4. '
' → logprob: -6.921909809112549
    5. '        
' → logprob: -7.671909809112549
    6. '   ' → logprob: -8.42190933227539
    7. ' 
' → logprob: -8.54690933227539
    8. '```' → logprob: -10.29690933227539
    9. ' ' → logprob: -10.54690933227539
    10. '    
' → logprob: -10.67190933227539

Token 112: ' len' (ID: 4631)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.3069734573364258
    2. ' not' → logprob: -1.4319734573364258
    3. ' ' → logprob: -4.181973457336426
    4. ' self' → logprob: -5.181973457336426
    5. ' len' → logprob: -5.431973457336426
    6. 'text' → logprob: -8.806973457336426
    7. ' ' → logprob: -10.431973457336426
    8. 'not' → logprob: -10.931973457336426
    9. '	text' → logprob: -10.931973457336426
    10. '  ' → logprob: -12.181973457336426

Token 113: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.009568605571985245
    2. ' (' → logprob: -5.134568691253662
    3. '(' → logprob: -5.634568691253662
    4. ' text' → logprob: -10.509568214416504
    5. ' ' → logprob: -11.759568214416504
    6. '<|end|>' → logprob: -11.884568214416504
    7. 'text' → logprob: -12.009568214416504
    8. '	text' → logprob: -12.009568214416504
    9. '(
' → logprob: -13.759568214416504
    10. '(s' → logprob: -13.759568214416504

Token 114: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3275299370288849
    2. ')' → logprob: -1.3275299072265625
    3. '==' → logprob: -5.2025299072265625
    4. ' )' → logprob: -5.8275299072265625
    5. ' <' → logprob: -5.9525299072265625
    6. ')==' → logprob: -6.4525299072265625
    7. ' >' → logprob: -7.4525299072265625
    8. ' ' → logprob: -7.7025299072265625
    9. '<|end|>' → logprob: -7.9525299072265625
    10. '.strip' → logprob: -10.327529907226562

Token 115: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016306376084685326
    2. '==' → logprob: -5.141306400299072
    3. ' >' → logprob: -5.266306400299072
    4. ' <' → logprob: -5.766306400299072
    5. ' ' → logprob: -6.516306400299072
    6. '<|end|>' → logprob: -7.641306400299072
    7. '<|end|>' → logprob: -11.266305923461914
    8. '>' → logprob: -11.516305923461914
    9. ' <=' → logprob: -11.641305923461914
    10. '  ' → logprob: -12.016305923461914

Token 116: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023862246423959732
    2. '100' → logprob: -3.773862361907959
    3. '50' → logprob: -8.2738618850708
    4. '0' → logprob: -8.7738618850708
    5. '20' → logprob: -9.1488618850708
    6. '10' → logprob: -10.0238618850708
    7. '200' → logprob: -10.7738618850708
    8. '<|end|>' → logprob: -11.7738618850708
    9. '256' → logprob: -12.5238618850708
    10. '255' → logprob: -12.6488618850708

Token 117: '200' (ID: 1179)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10320604592561722
    2. ' ' → logprob: -2.353206157684326
    3. '10' → logprob: -7.103206157684326
    4. '0' → logprob: -7.228206157684326
    5. '50' → logprob: -7.478206157684326
    6. '200' → logprob: -7.853206157684326
    7. '500' → logprob: -8.728205680847168
    8. '256' → logprob: -8.978205680847168
    9. '20' → logprob: -9.603205680847168
    10. '255' → logprob: -9.603205680847168

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027527930215001106
    2. ' :' → logprob: -3.7775280475616455
    3. ':
' → logprob: -5.777527809143066
    4. '):' → logprob: -7.527527809143066
    5. '0' → logprob: -7.652527809143066
    6. ' :
' → logprob: -9.527527809143066
    7. ':return' → logprob: -10.277527809143066
    8. ')' → logprob: -10.902527809143066
    9. ' and' → logprob: -11.652527809143066
    10. ' or' → logprob: -12.152527809143066

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024535046890378
    2. ' ' → logprob: -4.524535179138184
    3. ':' → logprob: -5.774535179138184
    4. '            ' → logprob: -6.149535179138184
    5. '<|end|>' → logprob: -6.274535179138184
    6. ':
' → logprob: -7.274535179138184
    7. '       ' → logprob: -7.274535179138184
    8. '...' → logprob: -7.649535179138184
    9. ' raise' → logprob: -7.649535179138184
    10. ' return' → logprob: -7.774535179138184

Token 120: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.054609619081020355
    2. 'raise' (adapté à ' raise') → logprob: -3.554609537124634
    3. '            ' → logprob: -4.554609775543213
    4. '           ' → logprob: -4.554609775543213
    5. ' return' → logprob: -5.929609775543213
    6. 'return' → logprob: -7.679609775543213
    7. '	raise' → logprob: -8.929609298706055
    8. '        ' → logprob: -9.679609298706055
    9. '            
' → logprob: -10.179609298706055
    10. ' ' → logprob: -10.304609298706055

Token 121: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -1.0564331205387134e-05
    2. 'Value' → logprob: -12.50001049041748
    3. '	Value' → logprob: -12.50001049041748
    4. ' ' → logprob: -13.12501049041748
    5. ' Val' → logprob: -14.37501049041748
    6. ' ' → logprob: -14.87501049041748
    7. ' Length' → logprob: -17.500011444091797
    8. '_Value' → logprob: -17.625011444091797
    9. ' Va' → logprob: -17.750011444091797
    10. '_value' → logprob: -18.125011444091797

Token 122: 'Error' (ID: 2255)
  Prédit: 'rror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rror' → logprob: -0.6987812519073486
    2. 'Error' → logprob: -0.6987812519073486
    3. 'ror' → logprob: -5.1987810134887695
    4. 'r' → logprob: -10.07378101348877
    5. 'Value' → logprob: -10.82378101348877
    6. 'alue' → logprob: -10.94878101348877
    7. 'rs' → logprob: -12.32378101348877
    8. 'ro' → logprob: -12.69878101348877
    9. 'rr' → logprob: -13.32378101348877
    10. 'd' → logprob: -14.07378101348877

Token 123: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002072357019642368
    2. '(' → logprob: -8.50020694732666
    3. '(
' → logprob: -12.50020694732666
    4. '('' → logprob: -17.250207901000977
    5. '(

' → logprob: -17.250207901000977
    6. ' ("' → logprob: -17.875207901000977
    7. '("")' → logprob: -18.000207901000977
    8. ' ' → logprob: -19.375207901000977
    9. '("
' → logprob: -19.375207901000977
    10. '   ' → logprob: -19.500207901000977

Token 124: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.02519681118428707
    2. ' Input' → logprob: -3.9001967906951904
    3. 'Text' → logprob: -5.4001970291137695
    4. ' Text' → logprob: -9.65019702911377
    5. '"' → logprob: -10.90019702911377
    6. ' text' → logprob: -11.27519702911377
    7. 'The' → logprob: -11.65019702911377
    8. 'text' → logprob: -11.90019702911377
    9. '	Input' → logprob: -12.02519702911377
    10. ' The' → logprob: -13.02519702911377

Token 125: ' text' (ID: 2201)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.43666937947273254
    2. ' text' → logprob: -1.6866693496704102
    3. ' ' → logprob: -2.06166934967041
    4. ' string' → logprob: -3.81166934967041
    5. ' too' → logprob: -4.81166934967041
    6. ' must' → logprob: -5.06166934967041
    7. ' exceeds' → logprob: -6.06166934967041
    8. ' cannot' → logprob: -7.31166934967041
    9. ' should' → logprob: -7.56166934967041
    10. ' is' → logprob: -7.68666934967041

Token 126: ' exceeds' (ID: 63152)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7668040990829468
    2. ' exceeds' → logprob: -1.0168040990829468
    3. ' too' → logprob: -2.5168042182922363
    4. ' must' → logprob: -3.3918042182922363
    5. ' ' → logprob: -3.8918042182922363
    6. ' length' → logprob: -4.016804218292236
    7. ' should' → logprob: -4.766804218292236
    8. ' cannot' → logprob: -5.641804218292236
    9. '<|end|>' → logprob: -5.766804218292236
    10. ' )' → logprob: -6.266804218292236

Token 127: ' maximum' (ID: 10562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0012440400896593928
    2. ' the' → logprob: -7.376244068145752
    3. ' length' → logprob: -8.251243591308594
    4. ' maximum' → logprob: -8.376243591308594
    5. '200' → logprob: -10.376243591308594
    6. ' max' → logprob: -10.626243591308594
    7. ' two' → logprob: -10.751243591308594
    8. ' allowed' → logprob: -11.751243591308594
    9. ' a' → logprob: -11.876243591308594
    10. ' maxlength' → logprob: -12.001243591308594

Token 128: ' allowed' (ID: 9279)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.0006345203728415072
    2. ' allowed' → logprob: -7.750634670257568
    3. ' ' → logprob: -8.87563419342041
    4. ' allowable' → logprob: -10.37563419342041
    5. 'length' → logprob: -10.50063419342041
    6. '_length' → logprob: -13.25063419342041
    7. 'allowed' → logprob: -14.25063419342041
    8. ' lenght' → logprob: -14.37563419342041
    9. ' size' → logprob: -15.00063419342041
    10. ' limit' → logprob: -15.12563419342041

Token 129: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.00016158436483237892
    2. ' ' → logprob: -9.125161170959473
    3. 'length' → logprob: -9.875161170959473
    4. ' size' → logprob: -15.000161170959473
    5. ' lenght' → logprob: -15.625161170959473
    6. 'ength' → logprob: -15.875161170959473
    7. ' ' → logprob: -15.875161170959473
    8. ' leng' → logprob: -16.00016212463379
    9. '_length' → logprob: -16.37516212463379
    10. '	length' → logprob: -16.50016212463379

Token 130: '.")
' (ID: 27834)
  Prédit: '.")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.")' → logprob: -0.2513306140899658
    2. ' of' → logprob: -1.7513306140899658
    3. '")' → logprob: -3.751330614089966
    4. '.")
' → logprob: -3.876330614089966
    5. '.' → logprob: -7.001330375671387
    6. ':' → logprob: -7.126330375671387
    7. '")
' → logprob: -7.626330375671387
    8. ' .' → logprob: -7.626330375671387
    9. 'of' → logprob: -8.126330375671387
    10. ' ")' → logprob: -8.126330375671387

Token 131: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22774755954742432
    2. '       ' → logprob: -1.6027475595474243
    3. '        
' → logprob: -6.852747440338135
    4. ' return' → logprob: -7.227747440338135
    5. 'return' → logprob: -8.352747917175293
    6. '
' → logprob: -9.102747917175293
    7. ' 
' → logprob: -9.477747917175293
    8. '  
' → logprob: -10.102747917175293
    9. '    
' → logprob: -10.102747917175293
    10. '   ' → logprob: -11.602747917175293

Token 132: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0158501863479614
    2. 'return' (adapté à ' return') → logprob: -1.2658501863479614
    3. '
' → logprob: -1.3908501863479614
    4. ' return' → logprob: -2.265850067138672
    5. '        
' → logprob: -6.140850067138672
    6. '   ' → logprob: -7.765850067138672
    7. '    
' → logprob: -8.390850067138672
    8. ' 
' → logprob: -8.640850067138672
    9. '  
' → logprob: -9.515850067138672
    10. 'result' → logprob: -9.890850067138672

Token 133: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0008350008283741772
    2. 'self' → logprob: -7.750834941864014
    3. ' ' → logprob: -8.500835418701172
    4. ' ' → logprob: -8.625835418701172
    5. ' f' → logprob: -10.875835418701172
    6. '"' → logprob: -13.625835418701172
    7. '	self' → logprob: -15.125835418701172
    8. ' "' → logprob: -15.375835418701172
    9. ' '' → logprob: -15.500835418701172
    10. ''' → logprob: -15.500835418701172

Token 134: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00010151672904612496
    2. '.' → logprob: -9.500101089477539
    3. ' .' → logprob: -10.750101089477539
    4. ' ' → logprob: -12.625101089477539
    5. ')._' → logprob: -14.375101089477539
    6. '.__' → logprob: -14.500101089477539
    7. ']._' → logprob: -15.750101089477539
    8. '._
' → logprob: -16.12510108947754
    9. '_' → logprob: -16.50010108947754
    10. '   ' → logprob: -16.62510108947754

Token 135: 'transform' (ID: 19692)
  Prédit: 'transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.02975558675825596
    2. '_transform' → logprob: -3.5297555923461914
    3. '.transform' → logprob: -12.904755592346191
    4. ' transformer' → logprob: -13.654755592346191
    5. '(transform' → logprob: -14.779755592346191
    6. '	transform' → logprob: -14.904755592346191
    7. '-transform' → logprob: -15.154755592346191
    8. 'processor' → logprob: -15.154755592346191
    9. '_processor' → logprob: -17.029754638671875
    10. '_trans' → logprob: -17.154754638671875

Token 136: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00047630956396460533
    2. '_' → logprob: -8.625475883483887
    3. '_er' → logprob: -9.500475883483887
    4. 'orm' → logprob: -10.000475883483887
    5. '```' → logprob: -10.250475883483887
    6. 'or' → logprob: -10.375475883483887
    7. '_text' → logprob: -11.250475883483887
    8. '._' → logprob: -11.375475883483887
    9. 'e' → logprob: -11.500475883483887
    10. '_form' → logprob: -11.500475883483887

Token 137: '.transform' (ID: 17849)
  Prédit: '.transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.transform' → logprob: -0.001190225942991674
    2. '.' → logprob: -6.751190185546875
    3. '.process' → logprob: -11.501190185546875
    4. '.trans' → logprob: -12.251190185546875
    5. ' .' → logprob: -12.501190185546875
    6. 'transform' → logprob: -14.626190185546875
    7. '.translate' → logprob: -15.376190185546875
    8. '.Transform' → logprob: -15.501190185546875
    9. '.convert' → logprob: -15.876190185546875
    10. ').' → logprob: -15.876190185546875

Token 138: '(text' (ID: 13414)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931634545326233
    2. '(text' → logprob: -0.6931634545326233
    3. '(
' → logprob: -11.568163871765137
    4. '(Text' → logprob: -13.693163871765137
    5. ' (' → logprob: -13.943163871765137
    6. '(

' → logprob: -13.943163871765137
    7. '(txt' → logprob: -14.068163871765137
    8. '(tex' → logprob: -14.068163871765137
    9. 'text' → logprob: -14.693163871765137
    10. '(t' → logprob: -15.068163871765137

Token 139: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ')
' → logprob: -11.500017166137695
    3. ' )' → logprob: -11.875017166137695
    4. ')

' → logprob: -16.625017166137695
    5. '}' → logprob: -16.750017166137695
    6. ' ' → logprob: -17.250017166137695
    7. '<|end|>' → logprob: -17.250017166137695
    8. ')return' → logprob: -17.375017166137695
    9. '   ' → logprob: -18.375017166137695
    10. ']' → logprob: -18.625017166137695

Token 140: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4848249852657318
    2. '
' → logprob: -1.3598250150680542
    3. 't' → logprob: -2.4848248958587646
    4. 'n' → logprob: -4.859825134277344
    5. '' → logprob: -4.859825134277344
    6. '

' → logprob: -5.359825134277344
    7. 'c' → logprob: -5.484825134277344
    8. '<|end|>' → logprob: -5.609825134277344
    9. '\n' → logprob: -5.859825134277344
    10. ' ' → logprob: -6.484825134277344

Token 141: ' Input' (ID: 10090)
  Prédit: ' Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Text' → logprob: -0.21764661371707916
    2. ' Lower' → logprob: -2.967646598815918
    3. ' ' → logprob: -3.092646598815918
    4. ' Space' → logprob: -3.342646598815918
    5. '_' → logprob: -4.342646598815918
    6. ' Test' → logprob: -5.217646598815918
    7. ' Basic' → logprob: -5.342646598815918
    8. ' User' → logprob: -5.467646598815918
    9. ' Reverse' → logprob: -5.592646598815918
    10. ' Example' → logprob: -5.842646598815918

Token 142: 'Reader' (ID: 7171)
  Prédit: 'Validator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Validator' → logprob: -0.025760911405086517
    2. 'Handler' → logprob: -3.7757608890533447
    3. 'Processor' → logprob: -6.900761127471924
    4. 'Checker' → logprob: -7.525761127471924
    5. 'Text' → logprob: -7.650761127471924
    6. 'Provider' → logprob: -8.150760650634766
    7. 'Data' → logprob: -10.150760650634766
    8. 'Parser' → logprob: -10.400760650634766
    9. 'Field' → logprob: -10.775760650634766
    10. 'Interface' → logprob: -11.025760650634766

Token 143: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013977376511320472
    2. ':
' → logprob: -9.125140190124512
    3. '():' → logprob: -11.500140190124512
    4. ' :' → logprob: -11.750140190124512
    5. '(' → logprob: -11.875140190124512
    6. '):' → logprob: -13.125140190124512
    7. ':def' → logprob: -13.375140190124512
    8. '<|end|>' → logprob: -14.375140190124512
    9. '(object' → logprob: -15.125140190124512
    10. ':

' → logprob: -15.500140190124512

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008865457028150558
    2. ':' → logprob: -5.1338653564453125
    3. ' def' → logprob: -6.5088653564453125
    4. '
' → logprob: -7.5088653564453125
    5. ':
' → logprob: -8.008865356445312
    6. '<|end|>' → logprob: -8.383865356445312
    7. 'def' → logprob: -9.133865356445312
    8. '    
' → logprob: -10.008865356445312
    9. ',' → logprob: -10.383865356445312
    10. '<|end|>' → logprob: -10.633865356445312

Token 145: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.011083188466727734
    2. 'def' (adapté à ' def') → logprob: -4.511083126068115
    3. '   ' → logprob: -10.261083602905273
    4. '	def' → logprob: -15.011083602905273
    5. ' ' → logprob: -18.261083602905273
    6. ' @' → logprob: -18.386083602905273
    7. ':def' → logprob: -18.636083602905273
    8. '    ' → logprob: -18.636083602905273
    9. 'class' → logprob: -18.886083602905273
    10. ' class' → logprob: -18.886083602905273

Token 146: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.6118923425674438
    2. ' def' → logprob: -1.3618923425674438
    3. ' __' → logprob: -2.3618922233581543
    4. ' init' → logprob: -2.7368922233581543
    5. ' ' → logprob: -3.7368922233581543
    6. ' input' → logprob: -5.486892223358154
    7. ' _' → logprob: -5.861892223358154
    8. ' get' → logprob: -6.361892223358154
    9. 'init' → logprob: -6.361892223358154
    10. 'read' → logprob: -6.736892223358154

Token 147: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06367290765047073
    2. '_line' → logprob: -3.3136730194091797
    3. '_text' → logprob: -4.56367301940918
    4. '()' → logprob: -5.06367301940918
    5. '(' → logprob: -5.18867301940918
    6. '_input' → logprob: -6.31367301940918
    7. '_' → logprob: -7.43867301940918
    8. 'self' → logprob: -8.18867301940918
    9. 'line' → logprob: -9.31367301940918
    10. '_self' → logprob: -9.93867301940918

Token 148: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1002127155661583
    2. ')' → logprob: -2.975212812423706
    3. '):
' → logprob: -4.100212574005127
    4. '_text' → logprob: -4.475212574005127
    5. 'put' → logprob: -5.100212574005127
    6. 'text' → logprob: -5.725212574005127
    7. ' ):' → logprob: -6.100212574005127
    8. '_' → logprob: -6.475212574005127
    9. 'self' → logprob: -6.600212574005127
    10. '_input' → logprob: -8.350213050842285

Token 149: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0926208645105362
    2. '(' → logprob: -2.967620849609375
    3. ':' → logprob: -3.592620849609375
    4. 'self' → logprob: -5.217620849609375
    5. '():' → logprob: -5.842620849609375
    6. ' ->' → logprob: -7.967620849609375
    7. '->' → logprob: -8.592620849609375
    8. '(
' → logprob: -8.967620849609375
    9. '   ' → logprob: -9.592620849609375
    10. '_' → logprob: -9.717620849609375

Token 150: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.015003849752247334
    2. 'str' → logprob: -4.765003681182861
    3. ' input' → logprob: -5.390003681182861
    4. ' ' → logprob: -6.640003681182861
    5. 'input' → logprob: -8.39000415802002
    6. ' "' → logprob: -8.76500415802002
    7. ' '' → logprob: -9.76500415802002
    8. '"' → logprob: -10.51500415802002
    9. ''' → logprob: -11.89000415802002
    10. '[str' → logprob: -11.89000415802002

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003419270273298025
    2. ':
' → logprob: -6.003419399261475
    3. '():' → logprob: -7.128419399261475
    4. '):' → logprob: -9.378418922424316
    5. '<|end|>' → logprob: -11.128418922424316
    6. '():
' → logprob: -11.628418922424316
    7. ':return' → logprob: -11.753418922424316
    8. '   ' → logprob: -11.878418922424316
    9. ' :' → logprob: -12.128418922424316
    10. '       ' → logprob: -12.878418922424316

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1956009566783905
    2. ' input' → logprob: -2.570600986480713
    3. 'input' → logprob: -2.695600986480713
    4. ' return' → logprob: -3.945600986480713
    5. 'return' → logprob: -5.195600986480713
    6. '    ' → logprob: -5.820600986480713
    7. ' ' → logprob: -5.945600986480713
    8. '   ' → logprob: -6.445600986480713
    9. '        ' → logprob: -8.195600509643555
    10. '        
' → logprob: -8.320600509643555

Token 153: ' return' (ID: 622)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11219038814306259
    2. 'return' (adapté à ' return') → logprob: -2.7371904850006104
    3. ' input' → logprob: -3.2371904850006104
    4. ' return' → logprob: -6.237190246582031
    5. 'user' → logprob: -10.862190246582031
    6. 'text' → logprob: -10.862190246582031
    7. '""' → logprob: -11.362190246582031
    8. '"' → logprob: -11.612190246582031
    9. 'raise' → logprob: -11.612190246582031
    10. '"""' → logprob: -11.737190246582031

Token 154: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.003821933176368475
    2. 'input' → logprob: -5.628821849822998
    3. ' "' → logprob: -8.628822326660156
    4. '"' → logprob: -10.878822326660156
    5. ' ' → logprob: -10.878822326660156
    6. '(input' → logprob: -14.128822326660156
    7. ' in' → logprob: -14.128822326660156
    8. ' ' → logprob: -14.253822326660156
    9. '	input' → logprob: -14.378822326660156
    10. ' ""' → logprob: -14.503822326660156

Token 155: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39968448877334595
    2. '("("' → logprob: -1.1496844291687012
    3. '()' → logprob: -5.274684429168701
    4. '('' → logprob: -5.524684429168701
    5. '("' → logprob: -6.649684429168701
    6. '("(' → logprob: -6.774684429168701
    7. '("")' → logprob: -7.524684429168701
    8. '```' → logprob: -8.27468490600586
    9. '(
' → logprob: -9.39968490600586
    10. '("""' → logprob: -9.52468490600586

Token 156: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.031239112839102745
    2. 'def' → logprob: -3.7812390327453613
    3. 'if' → logprob: -5.531239032745361
    4. '
' → logprob: -5.906239032745361
    5. 'text' → logprob: -7.156239032745361
    6. '```' → logprob: -9.15623950958252
    7. 'import' → logprob: -9.65623950958252
    8. '#' → logprob: -9.78123950958252
    9. '<|end|>' → logprob: -10.03123950958252
    10. 'processor' → logprob: -10.15623950958252

Token 157: ' Output' (ID: 18315)
  Prédit: ' Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Text' → logprob: -0.12427861243486404
    2. ' Output' → logprob: -2.2492785453796387
    3. 'Text' → logprob: -5.624278545379639
    4. ' Printer' → logprob: -6.749278545379639
    5. '_text' → logprob: -6.874278545379639
    6. 'Output' → logprob: -6.999278545379639
    7. ' main' → logprob: -7.124278545379639
    8. ' Main' → logprob: -7.249278545379639
    9. ' ' → logprob: -7.374278545379639
    10. ' output' → logprob: -7.874278545379639

Token 158: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.0033134082332253456
    2. 'Printer' → logprob: -6.3783135414123535
    3. 'Handler' → logprob: -6.6283135414123535
    4. 'Renderer' → logprob: -8.503313064575195
    5. 'W' → logprob: -10.628313064575195
    6. 'Publisher' → logprob: -11.253313064575195
    7. 'ter' → logprob: -11.503313064575195
    8. 'Processor' → logprob: -11.503313064575195
    9. 'Presenter' → logprob: -11.878313064575195
    10. 'Manager' → logprob: -12.128313064575195

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017529279284644872
    2. ' :' → logprob: -9.750175476074219
    3. ':
' → logprob: -9.750175476074219
    4. '():' → logprob: -10.125175476074219
    5. '):' → logprob: -11.125175476074219
    6. '>:' → logprob: -13.375175476074219
    7. '<|end|>' → logprob: -14.125175476074219
    8. ':**' → logprob: -14.625175476074219
    9. ':

' → logprob: -15.875175476074219
    10. '：' → logprob: -15.875175476074219

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029666495975106955
    2. ' def' → logprob: -5.87796688079834
    3. 'def' → logprob: -9.12796688079834
    4. '    ' → logprob: -10.87796688079834
    5. '
' → logprob: -11.75296688079834
    6. '   ' → logprob: -12.25296688079834
    7. ' ' → logprob: -12.50296688079834
    8. '```' → logprob: -12.62796688079834
    9. '    
' → logprob: -13.00296688079834
    10. '   ' → logprob: -13.12796688079834

Token 161: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20290440320968628
    2. 'def' (adapté à ' def') → logprob: -1.702904462814331
    3. '   ' → logprob: -6.702904224395752
    4. '
' → logprob: -8.70290470123291
    5. 'class' → logprob: -9.95290470123291
    6. '```' → logprob: -10.70290470123291
    7. ' class' → logprob: -11.32790470123291
    8. ' write' → logprob: -11.70290470123291
    9. ' ' → logprob: -13.20290470123291
    10. '	def' → logprob: -13.57790470123291

Token 162: ' write' (ID: 5067)
  Prédit: ' write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.003805899526923895
    2. 'write' → logprob: -6.253806114196777
    3. ' def' → logprob: -6.378806114196777
    4. '_write' → logprob: -9.628806114196777
    5. '.write' → logprob: -9.878806114196777
    6. ' writ' → logprob: -10.128806114196777
    7. ' ' → logprob: -12.253806114196777
    8. ' print' → logprob: -12.378806114196777
    9. ' writes' → logprob: -12.878806114196777
    10. 'def' → logprob: -13.378806114196777

Token 163: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018508559092879295
    2. '(self' → logprob: -4.018508434295654
    3. ' (' → logprob: -8.268508911132812
    4. '(
' → logprob: -10.643508911132812
    5. '(s' → logprob: -10.643508911132812
    6. '<|end|>' → logprob: -11.518508911132812
    7. '(text' → logprob: -11.643508911132812
    8. '('' → logprob: -12.143508911132812
    9. '("""' → logprob: -12.143508911132812
    10. ' ' → logprob: -12.143508911132812

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. ')' → logprob: -10.125048637390137
    3. ' ,' → logprob: -11.750048637390137
    4. ',text' → logprob: -14.250048637390137
    5. '   ' → logprob: -16.750049591064453
    6. ',str' → logprob: -17.625049591064453
    7. 'text' → logprob: -17.875049591064453
    8. ' ' → logprob: -18.625049591064453
    9. ' )' → logprob: -18.875049591064453
    10. 's' → logprob: -18.875049591064453

Token 165: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.06862525641918182
    2. ' output' → logprob: -3.0686252117156982
    3. 'text' → logprob: -4.318625450134277
    4. 'output' → logprob: -5.943625450134277
    5. ' message' → logprob: -6.193625450134277
    6. ' result' → logprob: -7.318625450134277
    7. ' )' → logprob: -7.318625450134277
    8. ')' → logprob: -8.693625450134277
    9. ' s' → logprob: -9.693625450134277
    10. ' out' → logprob: -9.943625450134277

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041518008220009506
    2. '):' → logprob: -8.125414848327637
    3. ':str' → logprob: -9.250414848327637
    4. ')' → logprob: -11.000414848327637
    5. ' :' → logprob: -12.250414848327637
    6. ' ):' → logprob: -13.625414848327637
    7. '):
' → logprob: -15.375414848327637
    8. ' )' → logprob: -15.500414848327637
    9. '   ' → logprob: -18.000415802001953
    10. ' ' → logprob: -18.375415802001953

Token 167: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.01067330688238144
    2. 'str' → logprob: -5.260673522949219
    3. ')' → logprob: -5.510673522949219
    4. ' )' → logprob: -7.010673522949219
    5. ' ' → logprob: -7.760673522949219
    6. ' text' → logprob: -11.635673522949219
    7. ':str' → logprob: -11.760673522949219
    8. ' '' → logprob: -11.885673522949219
    9. '(str' → logprob: -12.010673522949219
    10. '"' → logprob: -12.635673522949219

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20206885039806366
    2. '):' → logprob: -1.70206880569458
    3. '):
' → logprob: -7.45206880569458
    4. ':' → logprob: -10.452069282531738
    5. ')->' → logprob: -10.827069282531738
    6. ' )' → logprob: -11.077069282531738
    7. ' ):' → logprob: -11.952069282531738
    8. '   ' → logprob: -12.827069282531738
    9. '):
' → logprob: -14.077069282531738
    10. '):

' → logprob: -14.452069282531738

Token 169: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02426839806139469
    2. '):' → logprob: -4.149268627166748
    3. ':
' → logprob: -5.024268627166748
    4. ' :' → logprob: -7.524268627166748
    5. '):
' → logprob: -7.774268627166748
    6. '   ' → logprob: -7.774268627166748
    7. '       ' → logprob: -9.14926815032959
    8. ')' → logprob: -10.02426815032959
    9. '():' → logprob: -10.52426815032959
    10. ' :
' → logprob: -11.02426815032959

Token 170: ' None' (ID: 4662)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.03823483735322952
    2. 'print' → logprob: -3.2882349491119385
    3. ' None' → logprob: -8.66323471069336
    4. 'None' → logprob: -11.41323471069336
    5. ' str' → logprob: -12.16323471069336
    6. ')' → logprob: -13.53823471069336
    7. ' ' → logprob: -13.66323471069336
    8. '(print' → logprob: -14.41323471069336
    9. ' )' → logprob: -14.78823471069336
    10. ' prin' → logprob: -15.66323471069336

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004887654446065426
    2. ':
' → logprob: -5.504887580871582
    3. '):' → logprob: -7.379887580871582
    4. '():' → logprob: -9.879887580871582
    5. '):
' → logprob: -10.254887580871582
    6. '       ' → logprob: -10.629887580871582
    7. '<|end|>' → logprob: -10.629887580871582
    8. '   ' → logprob: -11.004887580871582
    9. ' :' → logprob: -11.129887580871582
    10. ')' → logprob: -11.879887580871582

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16529607772827148
    2. ' print' → logprob: -1.9152960777282715
    3. 'print' → logprob: -5.2902960777282715
    4. '   ' → logprob: -11.04029655456543
    5. '```' → logprob: -13.79029655456543
    6. '	print' → logprob: -14.91529655456543
    7. '           ' → logprob: -15.16529655456543
    8. '    ' → logprob: -15.41529655456543
    9. '      ' → logprob: -15.66529655456543
    10. '.print' → logprob: -15.79029655456543

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25195780396461487
    2. ' print' → logprob: -1.5019577741622925
    3. '       ' → logprob: -10.501957893371582
    4. '   ' → logprob: -14.126957893371582
    5. 'pr' → logprob: -15.251957893371582
    6. '	print' → logprob: -17.001956939697266
    7. 'prin' → logprob: -17.126956939697266
    8. ' prin' → logprob: -17.251956939697266
    9. '```' → logprob: -17.876956939697266
    10. '
' → logprob: -18.126956939697266

Token 174: '(text' (ID: 13414)
  Prédit: '(text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(text' → logprob: -0.0031821096781641245
    2. '(' → logprob: -5.7531819343566895
    3. 'text' → logprob: -12.628182411193848
    4. '()' → logprob: -14.878182411193848
    5. ' (' → logprob: -15.753182411193848
    6. '(f' → logprob: -15.878182411193848
    7. '(txt' → logprob: -16.25318145751953
    8. '(Text' → logprob: -16.62818145751953
    9. '(t' → logprob: -16.87818145751953
    10. ' text' → logprob: -17.12818145751953

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.125
    3. ' )' → logprob: -16.0
    4. '()' → logprob: -19.875
    5. ')

' → logprob: -20.0
    6. '")' → logprob: -20.25
    7. '}' → logprob: -20.25
    8. '   ' → logprob: -20.5
    9. '))' → logprob: -20.625
    10. ')`' → logprob: -20.625

Token 176: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.23468118906021118
    2. 'c' → logprob: -1.6096811294555664
    3. 'def' → logprob: -6.359681129455566
    4. '
' → logprob: -6.484681129455566
    5. '

' → logprob: -6.609681129455566
    6. 'if' → logprob: -6.734681129455566
    7. 'i' → logprob: -6.859681129455566
    8. 'd' → logprob: -7.359681129455566
    9. '#' → logprob: -7.484681129455566
    10. 't' → logprob: -8.734681129455566

Token 177: ' Capital' (ID: 23530)
  Prédit: ' Lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Lower' → logprob: -0.4886770248413086
    2. ' Reverse' → logprob: -1.1136770248413086
    3. ' Text' → logprob: -3.2386770248413086
    4. ' Re' → logprob: -4.613677024841309
    5. ' Append' → logprob: -5.863677024841309
    6. ' Repeat' → logprob: -7.488677024841309
    7. ' ' → logprob: -7.613677024841309
    8. ' Wh' → logprob: -7.738677024841309
    9. ' Ex' → logprob: -7.738677024841309
    10. ' Default' → logprob: -8.113677024841309

Token 178: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.00019984507525805384
    2. 'izer' → logprob: -9.125200271606445
    3. 'Case' → logprob: -10.250200271606445
    4. 'ized' → logprob: -10.250200271606445
    5. 'case' → logprob: -11.875200271606445
    6. '```' → logprob: -12.625200271606445
    7. 'aze' → logprob: -13.625200271606445
    8. 'ization' → logprob: -13.625200271606445
    9. 'i' → logprob: -14.000200271606445
    10. 'Text' → logprob: -14.000200271606445

Token 179: 'App' (ID: 2563)
  Prédit: 'Transformer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -1.8624639324116288e-06
    2. 'Transform' → logprob: -14.250001907348633
    3. 'Processor' → logprob: -14.375001907348633
    4. ' Transformer' → logprob: -15.125001907348633
    5. 'Text' → logprob: -15.500001907348633
    6. 'Tokenizer' → logprob: -17.250001907348633
    7. 'Translator' → logprob: -17.875001907348633
    8. 'transform' → logprob: -18.000001907348633
    9. 'Writer' → logprob: -18.125001907348633
    10. 'Trainer' → logprob: -18.125001907348633

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016504127415828407
    2. ':
' → logprob: -8.750164985656738
    3. '(Text' → logprob: -12.625164985656738
    4. '(' → logprob: -13.125164985656738
    5. ':**' → logprob: -15.125164985656738
    6. ' :' → logprob: -15.500164985656738
    7. ':

' → logprob: -15.500164985656738
    8. '():' → logprob: -15.750164985656738
    9. '):' → logprob: -16.500165939331055
    10. ':def' → logprob: -17.125165939331055

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011391390580683947
    2. ' def' → logprob: -9.250113487243652
    3. 'def' → logprob: -11.125113487243652
    4. '	def' → logprob: -13.375113487243652
    5. '
' → logprob: -14.375113487243652
    6. '    
' → logprob: -14.500113487243652
    7. '   ' → logprob: -15.875113487243652
    8. ':' → logprob: -16.62511444091797
    9. '(' → logprob: -17.37511444091797
    10. ',' → logprob: -17.37511444091797

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4743816554546356
    2. ' def' → logprob: -0.974381685256958
    3. '   ' → logprob: -8.099381446838379
    4. ' ' → logprob: -14.724381446838379
    5. '__' → logprob: -15.849381446838379
    6. '	def' → logprob: -16.599382400512695
    7. ' __' → logprob: -16.724382400512695
    8. ':def' → logprob: -16.974382400512695
    9. '  ' → logprob: -17.224382400512695
    10. ':' → logprob: -17.349382400512695

Token 183: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0003936152206733823
    2. '__' → logprob: -8.000393867492676
    3. ' init' → logprob: -10.875393867492676
    4. ' def' → logprob: -11.000393867492676
    5. '_init' → logprob: -11.375393867492676
    6. 'init' → logprob: -12.500393867492676
    7. '_' → logprob: -13.000393867492676
    8. ' ' → logprob: -13.500393867492676
    9. ' _' → logprob: -13.875393867492676
    10. ' ___' → logprob: -14.000393867492676

Token 184: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.4034345187828876e-05
    2. ' init' → logprob: -10.75002384185791
    3. '   ' → logprob: -13.62502384185791
    4. 'def' → logprob: -14.12502384185791
    5. 'ini' → logprob: -15.25002384185791
    6. '  ' → logprob: -15.87502384185791
    7. ' ' → logprob: -16.000024795532227
    8. '	init' → logprob: -16.500024795532227
    9. '    ' → logprob: -17.500024795532227
    10. '_init' → logprob: -17.875024795532227

Token 185: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0017390783177688718
    2. '__' → logprob: -6.376739025115967
    3. '__(
' → logprob: -10.626739501953125
    4. '_(' → logprob: -11.751739501953125
    5. '_' → logprob: -12.751739501953125
    6. '(self' → logprob: -13.626739501953125
    7. '__((' → logprob: -15.501739501953125
    8. '(' → logprob: -15.876739501953125
    9. '__('' → logprob: -16.126739501953125
    10. '___' → logprob: -16.501739501953125

Token 186: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011124740121886134
    2. ' self' → logprob: -6.876112461090088
    3. '       ' → logprob: -10.751112937927246
    4. ')' → logprob: -11.001112937927246
    5. '):
' → logprob: -11.001112937927246
    6. '
' → logprob: -11.501112937927246
    7. '   ' → logprob: -12.001112937927246
    8. '(self' → logprob: -13.001112937927246
    9. '	self' → logprob: -13.126112937927246
    10. '):' → logprob: -13.376112937927246

Token 187: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6444905996322632
    2. ',' → logprob: -1.0194905996322632
    3. '):' → logprob: -2.7694907188415527
    4. ' self' → logprob: -3.6444907188415527
    5. '):
' → logprob: -4.644490718841553
    6. '(self' → logprob: -5.394490718841553
    7. ')' → logprob: -5.644490718841553
    8. '   ' → logprob: -5.894490718841553
    9. '       ' → logprob: -6.769490718841553
    10. '_' → logprob: -7.144490718841553

Token 188: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0061256177723407745
    2. ' self' → logprob: -5.256125450134277
    3. '       ' → logprob: -7.631125450134277
    4. 'Capital' → logprob: -8.756125450134277
    5. ')' → logprob: -9.631125450134277
    6. '   ' → logprob: -10.006125450134277
    7. 'Self' → logprob: -10.381125450134277
    8. 'Cap' → logprob: -10.381125450134277
    9. '
' → logprob: -10.881125450134277
    10. ' Capital' → logprob: -11.006125450134277

Token 189: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13942790031433105
    2. ' self' → logprob: -2.389427900314331
    3. '       ' → logprob: -3.264427900314331
    4. '   ' → logprob: -8.76442813873291
    5. '
' → logprob: -10.76442813873291
    6. ' ' → logprob: -11.26442813873291
    7. '	self' → logprob: -11.63942813873291
    8. 'transform' → logprob: -11.63942813873291
    9. 'def' → logprob: -12.01442813873291
    10. '        
' → logprob: -12.26442813873291

Token 190: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.006083679851144552
    2. ' .' → logprob: -6.1310834884643555
    3. '.processor' → logprob: -6.6310834884643555
    4. '.' → logprob: -6.7560834884643555
    5. '_processor' → logprob: -7.7560834884643555
    6. '_reader' → logprob: -8.006083488464355
    7. '   ' → logprob: -8.631083488464355
    8. '_' → logprob: -9.256083488464355
    9. ' ' → logprob: -9.631083488464355
    10. '.reader' → logprob: -9.756083488464355

Token 191: 'reader' (ID: 22564)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.061110395938158035
    2. 'transform' → logprob: -2.936110496520996
    3. 'reader' → logprob: -5.811110496520996
    4. 'text' → logprob: -5.936110496520996
    5. 'input' → logprob: -7.561110496520996
    6. 'process' → logprob: -11.061110496520996
    7. 'output' → logprob: -11.311110496520996
    8. 'writer' → logprob: -11.811110496520996
    9. ' processor' → logprob: -12.311110496520996
    10. '

' → logprob: -13.561110496520996

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01251329854130745
    2. '=' → logprob: -4.387513160705566
    3. ' ' → logprob: -12.637513160705566
    4. '<|end|>' → logprob: -15.512513160705566
    5. ' =
' → logprob: -16.637514114379883
    6. ':' → logprob: -17.012514114379883
    7. '  ' → logprob: -17.387514114379883
    8. ')' → logprob: -18.137514114379883
    9. ',' → logprob: -18.262514114379883
    10. 'import' → logprob: -19.137514114379883

Token 193: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.07888989895582199
    2. ' Input' → logprob: -2.578889846801758
    3. '	Input' → logprob: -15.703889846801758
    4. ' input' → logprob: -17.453889846801758
    5. 'input' → logprob: -17.828889846801758
    6. '\Input' → logprob: -19.078889846801758
    7. '<Input' → logprob: -19.078889846801758
    8. '_Input' → logprob: -19.203889846801758
    9. '_input' → logprob: -19.328889846801758
    10. 'In' → logprob: -20.078889846801758

Token 194: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. 'reader' → logprob: -17.25
    3. '_reader' → logprob: -18.5
    4. 'Writer' → logprob: -19.125
    5. 'Read' → logprob: -19.25
    6. '.Reader' → logprob: -20.75
    7. ' Reader' → logprob: -20.875
    8. 'Readers' → logprob: -21.375
    9. 'Reading' → logprob: -21.875
    10. '-reader' → logprob: -22.375

Token 195: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.25194576382637024
    2. '()' → logprob: -1.5019457340240479
    3. '()
' → logprob: -11.751945495605469
    4. '()

' → logprob: -12.376945495605469
    5. '()\' → logprob: -12.626945495605469
    6. '       ' → logprob: -14.126945495605469
    7. '(' → logprob: -15.876945495605469
    8. '   ' → logprob: -16.00194549560547
    9. '(
' → logprob: -16.00194549560547
    10. '
' → logprob: -16.62694549560547

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01023550983518362
    2. '
' → logprob: -4.63523530960083
    3. 'self' → logprob: -7.76023530960083
    4. ' self' → logprob: -10.510235786437988
    5. '        
' → logprob: -11.635235786437988
    6. '   ' → logprob: -12.135235786437988
    7. '<|end|>' → logprob: -13.135235786437988
    8. '  
' → logprob: -13.260235786437988
    9. '```' → logprob: -13.260235786437988
    10. '    
' → logprob: -14.010235786437988

Token 197: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005761472275480628
    2. ' self' → logprob: -7.500576019287109
    3. '       ' → logprob: -10.75057601928711
    4. '
' → logprob: -13.37557601928711
    5. '	self' → logprob: -17.25057601928711
    6. '        
' → logprob: -17.75057601928711
    7. '   ' → logprob: -17.87557601928711
    8. '(self' → logprob: -18.62557601928711
    9. '
        
' → logprob: -19.62557601928711
    10. '

' → logprob: -19.75057601928711

Token 198: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0018103641923516989
    2. '.' → logprob: -6.501810550689697
    3. ' .' → logprob: -8.501810073852539
    4. '.processor' → logprob: -10.501810073852539
    5. '   ' → logprob: -11.126810073852539
    6. '.
' → logprob: -11.251810073852539
    7. '_processor' → logprob: -11.376810073852539
    8. '.process' → logprob: -11.751810073852539
    9. ' ' → logprob: -11.751810073852539
    10. '
' → logprob: -12.251810073852539

Token 199: 'processor' (ID: 55600)
  Prédit: 'processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.04872100427746773
    2. 'writer' → logprob: -3.1737210750579834
    3. 'transform' → logprob: -5.173720836639404
    4. 'process' → logprob: -11.048721313476562
    5. '

' → logprob: -12.173721313476562
    6. 'producer' → logprob: -12.548721313476562
    7. ' processor' → logprob: -12.798721313476562
    8. 'worker' → logprob: -13.548721313476562
    9. '.processor' → logprob: -13.673721313476562
    10. 'output' → logprob: -13.673721313476562

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889308780431747
    2. '=' → logprob: -2.5788931846618652
    3. ' ' → logprob: -12.703892707824707
    4. '(' → logprob: -15.703892707824707
    5. ' =
' → logprob: -16.703893661499023
    6. '<|end|>' → logprob: -16.953893661499023
    7. ')' → logprob: -17.078893661499023
    8. '   ' → logprob: -17.703893661499023
    9. '(Text' → logprob: -17.828893661499023
    10. ',' → logprob: -18.078893661499023

Token 201: ' Text' (ID: 4564)
  Prédit: ' Text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Text' → logprob: -0.048587486147880554
    2. 'Text' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.923587799072266
    4. '	Text' → logprob: -16.923587799072266
    5. '_Text' → logprob: -17.798587799072266
    6. ' text' → logprob: -17.923587799072266
    7. '(Text' → logprob: -18.298587799072266
    8. ' ' → logprob: -18.423587799072266
    9. '<Text' → logprob: -18.673587799072266
    10. '   ' → logprob: -19.423587799072266

Token 202: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -1.2664456789934775e-06
    2. 'Transformer' → logprob: -14.250000953674316
    3. 'Process' → logprob: -14.875000953674316
    4. 'processor' → logprob: -16.000001907348633
    5. '_processor' → logprob: -16.375001907348633
    6. 'Proces' → logprob: -17.125001907348633
    7. ' processor' → logprob: -18.125001907348633
    8. ' Processor' → logprob: -18.750001907348633
    9. 'Processing' → logprob: -19.375001907348633
    10. 'Processed' → logprob: -20.625001907348633

Token 203: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.0002875569916795939
    2. '(
' → logprob: -8.250288009643555
    3. '(' → logprob: -10.625288009643555
    4. '(cap' → logprob: -14.000288009643555
    5. '(

' → logprob: -14.500288009643555
    6. ' (' → logprob: -14.625288009643555
    7. 'Cap' → logprob: -16.750288009643555
    8. '((' → logprob: -17.500288009643555
    9. '(
' → logprob: -17.750288009643555
    10. 'Capital' → logprob: -18.125288009643555

Token 204: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.1875571544806007e-05
    2. ' ap' → logprob: -12.250011444091797
    3. 'apit' → logprob: -12.625011444091797
    4. 'apal' → logprob: -13.875011444091797
    5. 'Ap' → logprob: -14.000011444091797
    6. 'apital' → logprob: -14.500011444091797
    7. '_ap' → logprob: -14.875011444091797
    8. '```' → logprob: -15.250011444091797
    9. 'api' → logprob: -15.500011444091797
    10. '(ap' → logprob: -15.500011444091797

Token 205: 'italize' (ID: 66824)
  Prédit: 'italize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'italize' → logprob: -0.0005582740413956344
    2. 'ital' → logprob: -7.500558376312256
    3. 'al' → logprob: -12.750557899475098
    4. 'itize' → logprob: -13.125557899475098
    5. 'ialize' → logprob: -16.000558853149414
    6. 'ita' → logprob: -16.000558853149414
    7. 'itialize' → logprob: -17.000558853149414
    8. 'itali' → logprob: -17.375558853149414
    9. 'ITAL' → logprob: -17.500558853149414
    10. 'it' → logprob: -17.500558853149414

Token 206: 'Transformer' (ID: 48916)
  Prédit: 'Transformer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Transformer' → logprob: -8.2994620242971e-06
    2. 'Transform' → logprob: -12.000008583068848
    3. ' Transformer' → logprob: -13.875008583068848
    4. 'r' → logprob: -14.125008583068848
    5. 'transform' → logprob: -15.125008583068848
    6. 'Trans' → logprob: -17.00000762939453
    7. ' transformer' → logprob: -17.37500762939453
    8. '
' → logprob: -18.00000762939453
    9. 'Translator' → logprob: -18.75000762939453
    10. 'Tran' → logprob: -18.87500762939453

Token 207: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00540521927177906
    2. ')' → logprob: -5.755405426025391
    3. '()' → logprob: -6.130405426025391
    4. '())
' → logprob: -10.13040542602539
    5. ' ())' → logprob: -12.38040542602539
    6. '()
' → logprob: -12.88040542602539
    7. ' )' → logprob: -13.88040542602539
    8. '())

' → logprob: -14.13040542602539
    9. '(' → logprob: -14.63040542602539
    10. '()))' → logprob: -14.88040542602539

Token 208: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08136624842882156
    2. '
' → logprob: -2.5813663005828857
    3. 'def' → logprob: -6.706366062164307
    4. '    
' → logprob: -7.331366062164307
    5. ' def' → logprob: -7.956366062164307
    6. '       ' → logprob: -8.831366539001465
    7. '        
' → logprob: -10.706366539001465
    8. '

' → logprob: -11.081366539001465
    9. '	def' → logprob: -11.206366539001465
    10. '<|end|>' → logprob: -11.206366539001465

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0008183232857845724
    2. ' self' → logprob: -7.500818252563477
    3. '       ' → logprob: -8.250818252563477
    4. '   ' → logprob: -13.125818252563477
    5. '
' → logprob: -13.750818252563477
    6. '	self' → logprob: -14.125818252563477
    7. '(self' → logprob: -14.875818252563477
    8. 'def' → logprob: -16.875818252563477
    9. '_self' → logprob: -16.875818252563477
    10. ' ' → logprob: -17.625818252563477

Token 210: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0004948906716890633
    2. '.' → logprob: -7.875494956970215
    3. ' .' → logprob: -9.250494956970215
    4. '   ' → logprob: -12.250494956970215
    5. ' ' → logprob: -13.000494956970215
    6. '.
' → logprob: -13.000494956970215
    7. '.write' → logprob: -13.625494956970215
    8. '_' → logprob: -13.625494956970215
    9. '._
' → logprob: -13.750494956970215
    10. ']._' → logprob: -13.875494956970215

Token 211: 'writer' (ID: 25263)
  Prédit: 'writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' → logprob: -3.690834273584187e-05
    2. '_writer' → logprob: -10.25003719329834
    3. 'output' → logprob: -14.37503719329834
    4. 'riter' → logprob: -14.62503719329834
    5. ' writer' → logprob: -15.50003719329834
    6. '	writer' → logprob: -15.50003719329834
    7. 'Writer' → logprob: -17.250036239624023
    8. '.writer' → logprob: -17.625036239624023
    9. 'w' → logprob: -17.875036239624023
    10. 'write' → logprob: -18.250036239624023

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5663641691207886
    2. '.write' → logprob: -1.3163641691207886
    3. '=' → logprob: -2.441364288330078
    4. '.' → logprob: -2.566364288330078
    5. ' .' → logprob: -8.566364288330078
    6. '.=' → logprob: -8.691364288330078
    7. ' ' → logprob: -10.191364288330078
    8. ')' → logprob: -11.066364288330078
    9. '.Write' → logprob: -11.316364288330078
    10. ' .=' → logprob: -12.441364288330078

Token 213: ' Output' (ID: 18315)
  Prédit: ' Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Output' → logprob: -0.31326186656951904
    2. 'Output' → logprob: -1.313261866569519
    3. '	Output' → logprob: -15.688261985778809
    4. '_Output' → logprob: -19.938261032104492
    5. '(Output' → logprob: -20.063261032104492
    6. 'Input' → logprob: -20.188261032104492
    7. ' output' → logprob: -20.438261032104492
    8. '.Output' → logprob: -21.813261032104492
    9. ' Input' → logprob: -22.188261032104492
    10. 'output' → logprob: -22.188261032104492

Token 214: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -5.512236498361744e-07
    2. 'Write' → logprob: -15.500000953674316
    3. 'Reader' → logprob: -15.500000953674316
    4. 'Output' → logprob: -16.125
    5. 'writer' → logprob: -18.0
    6. ' Writer' → logprob: -18.0
    7. '_writer' → logprob: -18.75
    8. 'W' → logprob: -19.25
    9. '.Writer' → logprob: -20.75
    10. '   ' → logprob: -20.875

Token 215: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04438791051506996
    2. '()

' → logprob: -3.1693878173828125
    3. '()
' → logprob: -6.7943878173828125
    4. '   ' → logprob: -8.919387817382812
    5. '(' → logprob: -9.419387817382812
    6. 'def' → logprob: -10.419387817382812
    7. '()\' → logprob: -12.294387817382812
    8. ' ()' → logprob: -12.544387817382812
    9. '()

' → logprob: -13.044387817382812
    10. '	def' → logprob: -13.169387817382812

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06540684401988983
    2. '
' → logprob: -2.8154067993164062
    3. '    
' → logprob: -6.315406799316406
    4. 'def' → logprob: -6.690406799316406
    5. ' def' → logprob: -8.565406799316406
    6. ' 
' → logprob: -9.940406799316406
    7. '  
' → logprob: -10.565406799316406
    8. '        
' → logprob: -10.565406799316406
    9. ' ' → logprob: -10.940406799316406
    10. '<|end|>' → logprob: -10.940406799316406

Token 217: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015072436071932316
    2. ' def' → logprob: -6.50150728225708
    3. '   ' → logprob: -12.251506805419922
    4. '	def' → logprob: -16.376506805419922
    5. '
' → logprob: -17.001506805419922
    6. 'de' → logprob: -17.376506805419922
    7. 'd' → logprob: -17.501506805419922
    8. ' ' → logprob: -20.376506805419922
    9. '  ' → logprob: -20.501506805419922
    10. '    
' → logprob: -20.876506805419922

Token 218: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.048593729734420776
    2. 'run' → logprob: -3.048593759536743
    3. '	run' → logprob: -13.423593521118164
    4. '   ' → logprob: -13.798593521118164
    5. ' def' → logprob: -14.048593521118164
    6. ' ' → logprob: -14.298593521118164
    7. '.run' → logprob: -14.423593521118164
    8. ' start' → logprob: -14.423593521118164
    9. '_run' → logprob: -14.923593521118164
    10. ' main' → logprob: -15.423593521118164

Token 219: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005257003009319305
    2. '(' → logprob: -5.2552571296691895
    3. '()' → logprob: -11.755256652832031
    4. 'self' → logprob: -12.005256652832031
    5. '(
' → logprob: -12.380256652832031
    6. ' (' → logprob: -12.505256652832031
    7. '   ' → logprob: -14.255256652832031
    8. '(s' → logprob: -15.880256652832031
    9. '       ' → logprob: -16.00525665283203
    10. ' ' → logprob: -16.13025665283203

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014416756108403206
    2. '):
' → logprob: -5.014416694641113
    3. 'self' → logprob: -5.389416694641113
    4. ')' → logprob: -6.389416694641113
    5. '(self' → logprob: -6.764416694641113
    6. ',' → logprob: -9.014416694641113
    7. '   ' → logprob: -9.514416694641113
    8. '       ' → logprob: -10.389416694641113
    9. '():' → logprob: -11.389416694641113
    10. ' self' → logprob: -11.639416694641113

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008783090859651566
    2. 'text' → logprob: -4.883782863616943
    3. ' text' → logprob: -6.758782863616943
    4. 'input' → logprob: -12.508783340454102
    5. '        
' → logprob: -12.758783340454102
    6. '```' → logprob: -13.258783340454102
    7. '      ' → logprob: -13.383783340454102
    8. '   ' → logprob: -13.883783340454102
    9. '{text' → logprob: -14.008783340454102
    10. '	text' → logprob: -14.258783340454102

Token 222: ' raw' (ID: 11428)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.05521341785788536
    2. 'try' → logprob: -3.555213451385498
    3. ' text' → logprob: -3.805213451385498
    4. '       ' → logprob: -6.430213451385498
    5. ' try' → logprob: -6.930213451385498
    6. 'input' → logprob: -8.43021297454834
    7. 'user' → logprob: -10.43021297454834
    8. 'while' → logprob: -10.80521297454834
    9. ' input' → logprob: -11.30521297454834
    10. 'txt' → logprob: -11.93021297454834

Token 223: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.0038558936212211847
    2. '_' → logprob: -6.1288557052612305
    3. '_input' → logprob: -6.5038557052612305
    4. 'text' → logprob: -8.87885570526123
    5. ' _' → logprob: -11.25385570526123
    6. ' =' → logprob: -11.37885570526123
    7. ' text' → logprob: -13.00385570526123
    8. '_data' → logprob: -13.25385570526123
    9. '_TEXT' → logprob: -14.00385570526123
    10. '_txt' → logprob: -14.12885570526123

Token 224: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049113236367702
    2. '=' → logprob: -4.511049270629883
    3. ' ' → logprob: -13.636049270629883
    4. ' ' → logprob: -17.886049270629883
    5. '   ' → logprob: -18.136049270629883
    6. '_' → logprob: -18.261049270629883
    7. '  ' → logprob: -18.511049270629883
    8. '	' → logprob: -19.261049270629883
    9. ' =
' → logprob: -19.261049270629883
    10. ',' → logprob: -20.386049270629883

Token 225: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740772247314453
    2. 'self' → logprob: -0.9740772247314453
    3. '(self' → logprob: -16.224077224731445
    4. '	self' → logprob: -16.974077224731445
    5. '=self' → logprob: -17.349077224731445
    6. '       ' → logprob: -17.349077224731445
    7. '_self' → logprob: -17.849077224731445
    8. ' 
' → logprob: -18.099077224731445
    9. ' ' → logprob: -18.224077224731445
    10. '
' → logprob: -18.474077224731445

Token 226: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.36574100604048e-06
    2. '.' → logprob: -12.625004768371582
    3. ' .' → logprob: -14.375004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '.\' → logprob: -16.500003814697266
    6. '       ' → logprob: -16.750003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '	' → logprob: -17.875003814697266
    9. '_' → logprob: -18.125003814697266
    10. '.__' → logprob: -18.375003814697266

Token 227: 'reader' (ID: 22564)
  Prédit: 'reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: 0.0
    2. '_reader' → logprob: -18.5
    3. ' reader' → logprob: -20.0
    4. '.reader' → logprob: -20.375
    5. 'writer' → logprob: -21.0
    6. '	reader' → logprob: -21.125
    7. '-reader' → logprob: -22.875
    8. 'receiver' → logprob: -23.0
    9. 'read' → logprob: -23.375
    10. 'runner' → logprob: -23.5

Token 228: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -3.786196975852363e-05
    2. '.' → logprob: -10.250038146972656
    3. ' .' → logprob: -13.375038146972656
    4. 'read' → logprob: -14.000038146972656
    5. '.readline' → logprob: -18.375038146972656
    6. ' read' → logprob: -18.875038146972656
    7. '.write' → logprob: -19.375038146972656
    8. '.Read' → logprob: -21.375038146972656
    9. '	read' → logprob: -21.750038146972656
    10. '_read' → logprob: -22.500038146972656

Token 229: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014191943046171218
    2. '()
' → logprob: -8.875142097473145
    3. '()

' → logprob: -14.125142097473145
    4. '().' → logprob: -14.750142097473145
    5. ')' → logprob: -15.625142097473145
    6. '(' → logprob: -15.750142097473145
    7. ' ()' → logprob: -15.750142097473145
    8. '()
' → logprob: -15.750142097473145
    9. '()\' → logprob: -15.750142097473145
    10. '())' → logprob: -16.875141143798828

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02159755863249302
    2. '
' → logprob: -4.771597385406494
    3. 'processed' → logprob: -4.896597385406494
    4. ' processed' → logprob: -6.396597385406494
    5. 'result' → logprob: -6.521597385406494
    6. 'text' → logprob: -7.271597385406494
    7. '        
' → logprob: -7.271597385406494
    8. 'self' → logprob: -8.146597862243652
    9. 'output' → logprob: -8.521597862243652
    10. 'try' → logprob: -9.146597862243652

Token 231: ' transformed' (ID: 38560)
  Prédit: 'processed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processed' → logprob: -0.5799997448921204
    2. ' processed' → logprob: -1.5799996852874756
    3. 'result' → logprob: -2.4549996852874756
    4. ' result' → logprob: -2.7049996852874756
    5. 'trans' → logprob: -3.0799996852874756
    6. ' transformed' → logprob: -3.4549996852874756
    7. '       ' → logprob: -5.704999923706055
    8. 'output' → logprob: -8.329999923706055
    9. ' output' → logprob: -9.204999923706055
    10. 'try' → logprob: -10.329999923706055

Token 232: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -2.2127087504486553e-05
    2. '_' → logprob: -11.000021934509277
    3. ' =' → logprob: -12.375021934509277
    4. 'text' → logprob: -15.000021934509277
    5. '=' → logprob: -15.750021934509277
    6. '_tex' → logprob: -16.125022888183594
    7. '_Text' → logprob: -16.250022888183594
    8. ' _' → logprob: -16.375022888183594
    9. 'Text' → logprob: -16.625022888183594
    10. '_TEXT' → logprob: -16.875022888183594

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. ' =
' → logprob: -18.224077224731445
    4. ' ' → logprob: -18.599077224731445
    5. '=self' → logprob: -19.224077224731445
    6. '=

' → logprob: -19.349077224731445
    7. ')' → logprob: -20.224077224731445
    8. '=
' → logprob: -20.224077224731445
    9. '＝' → logprob: -20.724077224731445
    10. ' ' → logprob: -20.849077224731445

Token 234: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.023245826363563538
    2. 'self' → logprob: -3.7732458114624023
    3. '	self' → logprob: -16.27324676513672
    4. ' ' → logprob: -16.27324676513672
    5. '(self' → logprob: -16.27324676513672
    6. ' ' → logprob: -16.77324676513672
    7. '       ' → logprob: -16.77324676513672
    8. '
' → logprob: -17.14824676513672
    9. '        ' → logprob: -17.77324676513672
    10. ' 
' → logprob: -18.14824676513672

Token 235: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0005548207554966211
    2. '_processor' → logprob: -7.875555038452148
    3. '.process' → logprob: -8.750555038452148
    4. '_process' → logprob: -11.875555038452148
    5. '.processor' → logprob: -12.625555038452148
    6. '_processed' → logprob: -13.250555038452148
    7. '.' → logprob: -13.500555038452148
    8. ' _' → logprob: -13.625555038452148
    9. ' .' → logprob: -14.125555038452148
    10. '   ' → logprob: -15.500555038452148

Token 236: 'processor' (ID: 55600)
  Prédit: 'processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -1.2664456789934775e-06
    2. 'process' → logprob: -14.125000953674316
    3. '_processor' → logprob: -15.625000953674316
    4. ' processor' → logprob: -16.375001907348633
    5. '.processor' → logprob: -16.625001907348633
    6. 'processed' → logprob: -16.875001907348633
    7. 'rocess' → logprob: -18.375001907348633
    8. 'proces' → logprob: -19.000001907348633
    9. 'proc' → logprob: -19.000001907348633
    10. '_' → logprob: -19.125001907348633

Token 237: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -3.166338137816638e-05
    2. 'process' → logprob: -10.750031471252441
    3. '.' → logprob: -11.750031471252441
    4. '.transform' → logprob: -13.000031471252441
    5. ' .' → logprob: -19.000032424926758
    6. ' process' → logprob: -20.125032424926758
    7. '.
' → logprob: -20.875032424926758
    8. '(process' → logprob: -21.375032424926758
    9. 'transform' → logprob: -21.750032424926758
    10. '.run' → logprob: -21.875032424926758

Token 238: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0007100477814674377
    2. '(' → logprob: -7.2507100105285645
    3. '(
' → logprob: -16.000709533691406
    4. 'raw' → logprob: -18.875709533691406
    5. '(text' → logprob: -19.125709533691406
    6. ' raw' → logprob: -19.625709533691406
    7. '(

' → logprob: -19.750709533691406
    8. ' (' → logprob: -20.875709533691406
    9. '(r' → logprob: -21.125709533691406
    10. '()' → logprob: -22.000709533691406

Token 239: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -2.1008713702030946e-06
    2. 'text' → logprob: -13.500001907348633
    3. '       ' → logprob: -15.125001907348633
    4. '_' → logprob: -16.375001907348633
    5. ')' → logprob: -16.750001907348633
    6. '_txt' → logprob: -17.125001907348633
    7. '_TEXT' → logprob: -17.250001907348633
    8. '   ' → logprob: -17.500001907348633
    9. 'Text' → logprob: -17.625001907348633
    10. '```' → logprob: -17.875001907348633

Token 240: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16760973632335663
    2. ')' → logprob: -1.917609691619873
    3. '       ' → logprob: -4.917609691619873
    4. ')
' → logprob: -10.417610168457031
    5. ' )
' → logprob: -12.167610168457031
    6. ')

' → logprob: -13.292610168457031
    7. '<|end|>' → logprob: -13.542610168457031
    8. '
' → logprob: -14.417610168457031
    9. ' )' → logprob: -14.917610168457031
    10. '   ' → logprob: -14.917610168457031

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015304069966077805
    2. '
' → logprob: -4.640304088592529
    3. 'self' → logprob: -5.265304088592529
    4. ' self' → logprob: -8.390303611755371
    5. '        
' → logprob: -9.390303611755371
    6. '<|end|>' → logprob: -10.640303611755371
    7. '
' → logprob: -12.015303611755371
    8. '```' → logprob: -12.265303611755371
    9. '   ' → logprob: -12.515303611755371
    10. '	self' → logprob: -12.890303611755371

Token 242: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.25237125158309937
    2. '       ' → logprob: -1.7523713111877441
    3. ' self' → logprob: -3.002371311187744
    4. '
' → logprob: -11.752370834350586
    5. '	self' → logprob: -13.127370834350586
    6. ' ' → logprob: -13.877370834350586
    7. '   ' → logprob: -15.127370834350586
    8. ' ' → logprob: -15.377370834350586
    9. '[self' → logprob: -15.377370834350586
    10. '(self' → logprob: -15.877370834350586

Token 243: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.500000953674316
    3. ' .' → logprob: -16.5
    4. ']._' → logprob: -18.0
    5. ')._' → logprob: -18.5
    6. '._
' → logprob: -18.75
    7. '.__' → logprob: -18.875
    8. '_' → logprob: -20.25
    9. '._

' → logprob: -20.25
    10. '."_' → logprob: -20.375

Token 244: 'writer' (ID: 25263)
  Prédit: 'writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'writer' → logprob: -7.493430894101039e-05
    2. '_writer' → logprob: -9.500075340270996
    3. 'write' → logprob: -16.75007438659668
    4. 'w' → logprob: -18.00007438659668
    5. '.writer' → logprob: -18.12507438659668
    6. '	writer' → logprob: -18.87507438659668
    7. ' writer' → logprob: -18.87507438659668
    8. 'worker' → logprob: -18.87507438659668
    9. 'reader' → logprob: -19.50007438659668
    10. 'word' → logprob: -20.37507438659668

Token 245: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -4.1080467781284824e-05
    2. '.' → logprob: -10.125041007995605
    3. ' .' → logprob: -13.875041007995605
    4. 'write' → logprob: -19.125041961669922
    5. '   ' → logprob: -19.875041961669922
    6. '._' → logprob: -20.000041961669922
    7. '.print' → logprob: -20.250041961669922
    8. '.Write' → logprob: -20.625041961669922
    9. ' ' → logprob: -21.000041961669922
    10. '```' → logprob: -21.000041961669922

Token 246: '(trans' (ID: 60636)
  Prédit: '(trans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(trans' → logprob: -0.004086116328835487
    2. '(' → logprob: -5.504086017608643
    3. '(transform' → logprob: -12.5040864944458
    4. '(
' → logprob: -12.8790864944458
    5. ' (' → logprob: -14.2540864944458
    6. '("("' → logprob: -15.7540864944458
    7. 'trans' → logprob: -16.004085540771484
    8. '(tr' → logprob: -16.129085540771484
    9. '()' → logprob: -16.254085540771484
    10. '(t' → logprob: -16.379085540771484

Token 247: 'formed' (ID: 11144)
  Prédit: 'formed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'formed' → logprob: -0.4745345115661621
    2. 'orm' → logprob: -0.9745345115661621
    3. '   ' → logprob: -8.34953498840332
    4. 'form' → logprob: -9.09953498840332
    5. 'ormal' → logprob: -11.22453498840332
    6. 'ored' → logprob: -11.59953498840332
    7. '       ' → logprob: -11.72453498840332
    8. 'ed' → logprob: -11.84953498840332
    9. 'trans' → logprob: -11.84953498840332
    10. 'erged' → logprob: -12.22453498840332

Token 248: '_text' (ID: 9118)
  Prédit: '_text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -4.370294846012257e-05
    2. '_' → logprob: -10.250043869018555
    3. 'ed' → logprob: -13.125043869018555
    4. ')_' → logprob: -13.500043869018555
    5. '_txt' → logprob: -13.750043869018555
    6. '_t' → logprob: -13.875043869018555
    7. '_tex' → logprob: -14.125043869018555
    8. 'text' → logprob: -14.125043869018555
    9. '_te' → logprob: -14.500043869018555
    10. ' _' → logprob: -15.375043869018555

Token 249: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ')
' → logprob: -11.250014305114746
    3. '()' → logprob: -14.125014305114746
    4. ' )' → logprob: -15.375014305114746
    5. '<|end|>' → logprob: -15.750014305114746
    6. '```' → logprob: -16.375015258789062
    7. '())' → logprob: -16.500015258789062
    8. '       ' → logprob: -17.500015258789062
    9. '   ' → logprob: -17.500015258789062
    10. '
' → logprob: -17.750015258789062

Token 250: 'if' (ID: 366)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7452437877655029
    2. 'i' → logprob: -0.9952437877655029
    3. 'if' → logprob: -1.995243787765503
    4. 'app' → logprob: -4.870244026184082
    5. 'c' → logprob: -5.120244026184082
    6. '#' → logprob: -5.620244026184082
    7. '
' → logprob: -6.245244026184082
    8. ' if' → logprob: -9.495244026184082
    9. '\' → logprob: -9.620244026184082
    10. '```' → logprob: -9.745244026184082

Token 251: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03640308976173401
    2. '__' → logprob: -3.411403179168701
    3. ' ' → logprob: -6.036403179168701
    4. '_' → logprob: -8.411402702331543
    5. '_name' → logprob: -9.411402702331543
    6. ' ' → logprob: -10.411402702331543
    7. ' ' → logprob: -10.911402702331543
    8. ' _' → logprob: -12.911402702331543
    9. 'name' → logprob: -13.286402702331543
    10. ' name' → logprob: -13.286402702331543

Token 252: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.026505449786782265
    2. ' __' → logprob: -3.651505470275879
    3. ' ==' → logprob: -8.901505470275879
    4. '_' → logprob: -10.026505470275879
    5. '___' → logprob: -11.901505470275879
    6. '__.' → logprob: -12.151505470275879
    7. '__.__' → logprob: -12.776505470275879
    8. '.__' → logprob: -13.151505470275879
    9. '==' → logprob: -13.401505470275879
    10. '__[' → logprob: -13.776505470275879

Token 253: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02503267116844654
    2. ' ==' → logprob: -4.4000325202941895
    3. '==' → logprob: -4.4000325202941895
    4. '=="' → logprob: -8.775032997131348
    5. ' __' → logprob: -11.775032997131348
    6. '=='' → logprob: -12.650032997131348
    7. '___' → logprob: -15.025032997131348
    8. '"' → logprob: -15.025032997131348
    9. '__.__' → logprob: -15.275032997131348
    10. ' =="' → logprob: -15.275032997131348

Token 254: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5516432523727417
    2. '__' → logprob: -1.1766432523727417
    3. '==' → logprob: -2.1766433715820312
    4. '=="' → logprob: -6.176643371582031
    5. '_' → logprob: -9.676643371582031
    6. '=='' → logprob: -10.301643371582031
    7. '=' → logprob: -10.926643371582031
    8. ' =="' → logprob: -10.926643371582031
    9. ' __' → logprob: -11.301643371582031
    10. ' ' → logprob: -11.676643371582031

Token 255: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.003865992883220315
    2. ''' → logprob: -5.628866195678711
    3. ' "__' → logprob: -8.253866195678711
    4. '__' → logprob: -12.503866195678711
    5. ' "' → logprob: -14.003866195678711
    6. ' '__' → logprob: -14.378866195678711
    7. '"user' → logprob: -15.753866195678711
    8. '"name' → logprob: -15.878866195678711
    9. '"_' → logprob: -16.37886619567871
    10. '"class' → logprob: -17.37886619567871

Token 256: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.6286106983898208e-05
    2. 'name' → logprob: -11.125016212463379
    3. '__' → logprob: -14.375016212463379
    4. '_main' → logprob: -14.875016212463379
    5. ' main' → logprob: -15.375016212463379
    6. 'ma' → logprob: -15.500016212463379
    7. 'built' → logprob: -16.750017166137695
    8. 'm' → logprob: -18.375017166137695
    9. '-main' → logprob: -18.750017166137695
    10. 'py' → logprob: -19.000017166137695

Token 257: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.04861098527908325
    2. '__' → logprob: -3.0486109256744385
    3. '__':
' → logprob: -11.42361068725586
    4. '__:' → logprob: -11.54861068725586
    5. '_' → logprob: -12.79861068725586
    6. '__["' → logprob: -16.67361068725586
    7. '___' → logprob: -17.54861068725586
    8. '":' → logprob: -17.79861068725586
    9. '__",' → logprob: -17.92361068725586
    10. '__.' → logprob: -17.92361068725586

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006202161777764559
    2. '    
' → logprob: -6.631202220916748
    3. ' Cap' → logprob: -7.006202220916748
    4. ' 
' → logprob: -7.131202220916748
    5. ' ' → logprob: -7.381202220916748
    6. '<|end|>' → logprob: -7.381202220916748
    7. '    ' → logprob: -7.506202220916748
    8. '   ' → logprob: -7.631202220916748
    9. '  ' → logprob: -8.75620174407959
    10. ' ' → logprob: -9.13120174407959

Token 259: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: -0.44987085461616516
    2. 'Cap' → logprob: -1.4498708248138428
    3. ' app' → logprob: -2.0748708248138428
    4. 'Capital' → logprob: -6.574871063232422
    5. ' Capital' → logprob: -7.574871063232422
    6. 'App' → logprob: -9.199871063232422
    7. 'Caps' → logprob: -10.449871063232422
    8. ' Cap' → logprob: -10.699871063232422
    9. '   ' → logprob: -11.074871063232422
    10. 'capitalize' → logprob: -11.324871063232422

Token 260: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.040598634630441666
    2. '.run' → logprob: -3.2905986309051514
    3. '_' → logprob: -6.5405988693237305
    4. '=' → logprob: -7.6655988693237305
    5. ' =' → logprob: -7.6655988693237305
    6. '()' → logprob: -10.04059886932373
    7. ' ' → logprob: -10.54059886932373
    8. ')' → logprob: -10.66559886932373
    9. ' .' → logprob: -10.91559886932373
    10. '().' → logprob: -11.16559886932373

Token 261: ' Capital' (ID: 23530)
  Prédit: ' Capital'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Capital' → logprob: -0.01891396753489971
    2. 'Cap' → logprob: -4.268913745880127
    3. 'Capital' → logprob: -5.393913745880127
    4. ' Cap' → logprob: -8.893914222717285
    5. ' Capit' → logprob: -10.393914222717285
    6. ' Capac' → logprob: -11.393914222717285
    7. ' Capitals' → logprob: -11.893914222717285
    8. ' ' → logprob: -13.018914222717285
    9. '.Cap' → logprob: -13.518914222717285
    10. ' capitalize' → logprob: -13.518914222717285

Token 262: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -1.0280383548888494e-06
    2. 'IZE' → logprob: -14.875000953674316
    3. 'iz' → logprob: -15.625000953674316
    4. 'i' → logprob: -16.000001907348633
    5. 'Cap' → logprob: -16.125001907348633
    6. 'iza' → logprob: -17.250001907348633
    7. 'a' → logprob: -17.250001907348633
    8. 'izer' → logprob: -17.625001907348633
    9. 'capitalize' → logprob: -17.625001907348633
    10. 'e' → logprob: -17.750001907348633

Token 263: 'App' (ID: 2563)
  Prédit: 'App'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'App' → logprob: -2.696889623621246e-06
    2. 'app' → logprob: -13.00000286102295
    3. 'Ap' → logprob: -15.12500286102295
    4. ' App' → logprob: -16.875001907348633
    5. 'A' → logprob: -17.125001907348633
    6. '	App' → logprob: -17.125001907348633
    7. '_app' → logprob: -17.375001907348633
    8. '<App' → logprob: -17.375001907348633
    9. 'Appender' → logprob: -17.875001907348633
    10. '\App' → logprob: -18.375001907348633

Token 264: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4623626470565796
    2. '   ' → logprob: -1.0873626470565796
    3. 'app' → logprob: -3.962362766265869
    4. '<|end|>' → logprob: -5.337362766265869
    5. '.' → logprob: -5.587362766265869
    6. '.run' → logprob: -6.837362766265869
    7. '(app' → logprob: -6.837362766265869
    8. '.app' → logprob: -6.962362766265869
    9. '    
' → logprob: -7.462362766265869
    10. '	app' → logprob: -7.587362766265869

Token 265: '   ' (ID: 271)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.005628820043057203
    2. ' app' → logprob: -5.75562858581543
    3. '   ' → logprob: -6.25562858581543
    4. '
' → logprob: -8.00562858581543
    5. '	app' → logprob: -9.50562858581543
    6. '(app' → logprob: -10.00562858581543
    7. '.app' → logprob: -10.50562858581543
    8. ' 
' → logprob: -11.00562858581543
    9. '    
' → logprob: -11.38062858581543
    10. '_' → logprob: -12.38062858581543

Token 266: ' app' (ID: 1053)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' (adapté à ' app') → logprob: 0.0
    2. ' app' → logprob: -16.75
    3. 'run' → logprob: -21.875
    4. '.app' → logprob: -22.25
    5. 'ap' → logprob: -23.375
    6. '(app' → logprob: -23.875
    7. '	app' → logprob: -24.0
    8. 'a' → logprob: -25.125
    9. '$app' → logprob: -26.5
    10. '@app' → logprob: -26.625

Token 267: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.16023488342761993
    2. '.' → logprob: -1.9102349281311035
    3. ' .' → logprob: -11.535234451293945
    4. '.
' → logprob: -14.285234451293945
    5. ' run' → logprob: -16.160234451293945
    6. '.Run' → logprob: -16.410234451293945
    7. ' ' → logprob: -17.410234451293945
    8. '.`' → logprob: -17.410234451293945
    9. '.​' → logprob: -17.410234451293945
    10. 'run' → logprob: -18.035234451293945

Token 268: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029941977933049202
    2. '(' → logprob: -3.529942035675049
    3. '()
' → logprob: -8.77994155883789
    4. '(
' → logprob: -10.27994155883789
    5. '()

' → logprob: -13.77994155883789
    6. '(

' → logprob: -14.27994155883789
    7. '()`' → logprob: -14.90494155883789
    8. ' ()' → logprob: -15.40494155883789
    9. '#' → logprob: -15.40494155883789
    10. '()
' → logprob: -15.52994155883789


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 266
Tokens correctement prédits (1ère position, stricte): 152
Tokens correctement prédits (1ère position, avec adaptation): 163
Tokens correctement prédits (top 10): 242
Précision stricte (1ère position): 57.14%
Précision adaptée (1ère position): 61.28%
Précision (top 10): 90.98%
================================================================================
