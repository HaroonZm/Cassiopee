================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:32:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Nous devons construire une tour en empilant des blocs, chaque étage ayant un certain nombre de blocs horizontalement.
# Chaque bloc supporte un poids maximum correspondant à K blocs.
# Le poids sur un bloc à un étage est égal à la somme des blocs situés au-dessus divisée par le nombre de blocs à cet étage.
# Le but est de maximiser le nombre d'étages de la tour.
# 
# Approche :
# - Notons les étages de haut en bas : étage 1 tout en haut, étage h le plus bas.
# - Soit la configuration des blocs par étage : b1, b2, ..., bh (bi >= 1)
# - La somme des bi est <= N.
# - Le poids sur chaque bloc à l'étage i est le poids total au-dessus (b1 + b2 + ... + b_{i-1}) divisé par bi.
# - Cette valeur doit être <= K.
# 
# Pour maximiser h, on essaye h possible et on vérifie s'il existe une répartition des blocs b1..bh qui respecte les contraintes.
# 
# Observations pour vérifier la faisabilité pour un h donné :
# 1. Au premier étage (tout en haut), il n'y a pas de blocs au-dessus, donc la contrainte est toujours satisfaite.
# 2. Pour chaque étage i > 1 :
#    poids maximal par bloc = K
#    poids total au-dessus = sum(b1 .. b_{i-1})
#    alors poids par bloc i = sum_b_above / bi <= K  => bi >= sum_b_above / K
#
# Stratégie pour minimiser le nombre total de blocs pour h étages :
# - Fixons b1 = 1 (minimiser les blocs du premier étage)
# - Pour i > 1, bi doit être au moins ceil(sum_b_above / K)
# - On calcule b_i selon la contrainte, on somme les blocs et on vérifie que la somme <= N
#
# Algorithme :
# - Testons par dichotomie la hauteur h possible entre 1 et N
# - Pour chaque h testé, on simule la construction :
#    b1 = 1
#    sum_blocks = 1
#    poids_above = 1
#    pour i de 2 à h:
#       bi = ceil(poids_above / K)
#       sum_blocks += bi
#       poids_above += bi
#    Si sum_blocks <= N alors h est faisable sinon non
# 
# La recherche binaire permettra d'optimiser la recherche de la hauteur maximale.

def max_stages(N, K):
    import math

    # Fonction testant si une hauteur h est réalisable avec N blocs et force K
    def can_build(h):
        # b1 = 1 (minimum)
        poids_above = 1  # somme des blocs au-dessus de l'étage i, initialement étage 1 ne porte pas de poids (haut)
        sum_blocks = 1   # nombre total de blocs utilisés
        for i in range(2, h + 1):
            # nombre minimum de blocs à l'étage i pour que poids par bloc <= K
            bi = (poids_above + K - 1) // K  # équivalent à ceil(poids_above / K)
            if bi == 0:
                bi = 1  # au moins un bloc par étage
            sum_blocks += bi
            poids_above += bi
            if sum_blocks > N:
                return False
        return True

    # Recherche binaire pour la hauteur maximale
    left, right = 1, N
    answer = 1
    while left <= right:
        mid = (left + right) // 2
        if can_build(mid):
            answer = mid
            left = mid + 1
        else:
            right = mid - 1

    return answer

# Lecture input
N, K = map(int, input().split())
# Calcul et sortie
print(max_stages(N, K))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Nous' (ID: 20193)
  → Token d'amorce (pas de prédiction)

Token 2: ' devons' (ID: 140218)
  → Token d'amorce (pas de prédiction)

Token 3: ' construire' (ID: 92473)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -1.5720124244689941
    2. ' continuer' → logprob: -1.5720124244689941
    3. 'contin' → logprob: -2.447012424468994
    4. 'mettre' → logprob: -2.447012424468994
    5. ' écrire' → logprob: -2.822012424468994
    6. 'v' → logprob: -3.572012424468994
    7. '```' → logprob: -3.572012424468994
    8. ' vérifier' → logprob: -3.697012424468994
    9. ' mettre' → logprob: -3.822012424468994
    10. ' ' → logprob: -3.822012424468994

Token 4: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05011443793773651
    2. ' un' → logprob: -3.300114393234253
    3. ' une' → logprob: -5.300114631652832
    4. ' ' → logprob: -5.925114631652832
    5. ' l' → logprob: -7.050114631652832
    6. '_' → logprob: -7.175114631652832
    7. ' la' → logprob: -7.175114631652832
    8. ' le' → logprob: -7.675114631652832
    9. '  ' → logprob: -8.050114631652832
    10. ' a' → logprob: -8.300114631652832

Token 5: ' tour' (ID: 6970)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05339445173740387
    2. '_' → logprob: -4.178394317626953
    3. 'fonction' → logprob: -4.303394317626953
    4. ' ' → logprob: -4.928394317626953
    5. ' chaîne' → logprob: -5.303394317626953
    6. ' fonction' → logprob: -6.178394317626953
    7. 'chaine' → logprob: -6.428394317626953
    8. 'f' → logprob: -7.553394317626953
    9. ' chaine' → logprob: -7.553394317626953
    10. ' liste' → logprob: -7.928394317626953

Token 6: ' en' (ID: 469)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26354286074638367
    2. ':' → logprob: -2.013542890548706
    3. '#' → logprob: -3.263542890548706
    4. ',' → logprob: -3.638542890548706
    5. ' ' → logprob: -4.263542652130127
    6. '\' → logprob: -5.888542652130127
    7. '_' → logprob: -6.013542652130127
    8. '```' → logprob: -6.013542652130127
    9. 'e' → logprob: -6.388542652130127
    10. 's' → logprob: -6.388542652130127

Token 7: ' emp' (ID: 4927)
  Prédit: 'bé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bé' → logprob: -1.328576922416687
    2. ' bois' → logprob: -1.453576922416687
    3. 'b' → logprob: -2.0785770416259766
    4. 'p' → logprob: -2.9535770416259766
    5. ' ' → logprob: -3.2035770416259766
    6. ' béton' → logprob: -3.2035770416259766
    7. '```' → logprob: -3.3285770416259766
    8. 'c' → logprob: -3.5785770416259766
    9. 'bo' → logprob: -3.8285770416259766
    10. ' Lego' → logprob: -4.453577041625977

Token 8: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.04798102006316185
    2. 'iler' → logprob: -4.422980785369873
    3. 'ile' → logprob: -4.547980785369873
    4. 'i' → logprob: -5.047980785369873
    5. 'ilent' → logprob: -5.547980785369873
    6. '#' → logprob: -5.797980785369873
    7. '_' → logprob: -7.047980785369873
    8. 'ila' → logprob: -7.547980785369873
    9. '\' → logprob: -7.672980785369873
    10. 'ilan' → logprob: -7.735480785369873

Token 9: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.037199366837739944
    2. 'érant' → logprob: -4.2871994972229
    3. 'è' → logprob: -5.4121994972229
    4. 'çant' → logprob: -5.6621994972229
    5. 'ánt' → logprob: -6.1621994972229
    6. '#' → logprob: -6.2871994972229
    7. 'à' → logprob: -6.2871994972229
    8. 'a' → logprob: -7.0371994972229
    9. '\' → logprob: -7.0371994972229
    10. '�' → logprob: -7.4121994972229

Token 10: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25434020161628723
    2. ' des' → logprob: -1.6293401718139648
    3. 'des' → logprob: -4.504340171813965
    4. '```' → logprob: -5.379340171813965
    5. '#' → logprob: -5.629340171813965
    6. '_' → logprob: -5.879340171813965
    7. ' #' → logprob: -6.629340171813965
    8. 's' → logprob: -7.004340171813965
    9. ' les' → logprob: -7.379340171813965
    10. ' de' → logprob: -7.754340171813965

Token 11: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.7100517153739929
    2. ' blocs' → logprob: -1.8350517749786377
    3. 'b' → logprob: -2.0850517749786377
    4. '```' → logprob: -2.4600517749786377
    5. ' cubes' → logprob: -2.9600517749786377
    6. ' bri' → logprob: -3.8350517749786377
    7. ' b' → logprob: -4.085051536560059
    8. 'c' → logprob: -4.210051536560059
    9. '_bloc' → logprob: -5.585051536560059
    10. '#' → logprob: -5.960051536560059

Token 12: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18359942734241486
    2. '#' → logprob: -2.5585994720458984
    3. ' ' → logprob: -3.9335994720458984
    4. ',' → logprob: -4.183599472045898
    5. ':' → logprob: -4.433599472045898
    6. '```' → logprob: -4.558599472045898
    7. '\' → logprob: -4.683599472045898
    8. 's' → logprob: -4.933599472045898
    9. '_' → logprob: -5.183599472045898
    10. '\n' → logprob: -5.558599472045898

Token 13: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058863550424575806
    2. 's' → logprob: -4.433863639831543
    3. '#' → logprob: -4.558863639831543
    4. '.' → logprob: -4.683863639831543
    5. '_' → logprob: -5.683863639831543
    6. ',' → logprob: -6.058863639831543
    7. '```' → logprob: -6.183863639831543
    8. '\' → logprob: -6.308863639831543
    9. '\n' → logprob: -6.433863639831543
    10. ''' → logprob: -6.433863639831543

Token 14: ' étage' (ID: 125215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8538956642150879
    2. 'bloc' → logprob: -1.228895664215088
    3. '_bloc' → logprob: -2.228895664215088
    4. '\' → logprob: -3.103895664215088
    5. '_' → logprob: -3.103895664215088
    6. '\n' → logprob: -3.728895664215088
    7. ' bloc' → logprob: -4.103895664215088
    8. 'bl' → logprob: -4.978895664215088
    9. ' \' → logprob: -5.603895664215088
    10. '#' → logprob: -5.853895664215088

Token 15: ' ayant' (ID: 45436)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06766112148761749
    2. ' de' → logprob: -4.067661285400391
    3. ' a' → logprob: -4.442661285400391
    4. '_' → logprob: -4.442661285400391
    5. 's' → logprob: -4.817661285400391
    6. ' s' → logprob: -5.442661285400391
    7. ' est' → logprob: -6.192661285400391
    8. ' doit' → logprob: -6.692661285400391
    9. ' d' → logprob: -6.942661285400391
    10. '#' → logprob: -7.067661285400391

Token 16: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.676414966583252
    2. ' une' → logprob: -0.926414966583252
    3. ' ' → logprob: -3.051414966583252
    4. 'une' → logprob: -4.051414966583252
    5. 's' → logprob: -4.301414966583252
    6. 'un' → logprob: -5.051414966583252
    7. ' ' → logprob: -5.426414966583252
    8. ' des' → logprob: -5.801414966583252
    9. '```' → logprob: -7.301414966583252
    10. '_' → logprob: -7.426414966583252

Token 17: ' certain' (ID: 4454)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.9447876214981079
    2. 'es' → logprob: -1.319787621498108
    3. ' nombre' → logprob: -1.444787621498108
    4. 'ha' → logprob: -4.069787502288818
    5. 'niveau' → logprob: -4.194787502288818
    6. '```' → logprob: -4.319787502288818
    7. 'bloc' → logprob: -4.444787502288818
    8. ' espace' → logprob: -4.569787502288818
    9. 'esp' → logprob: -4.694787502288818
    10. ' bloc' → logprob: -5.069787502288818

Token 18: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.7207098603248596
    2. 'nombre' → logprob: -0.7207098603248596
    3. 's' → logprob: -5.220709800720215
    4. 'es' → logprob: -5.220709800720215
    5. '```' → logprob: -5.470709800720215
    6. 'esp' → logprob: -5.845709800720215
    7. 'niveau' → logprob: -6.345709800720215
    8. ' espace' → logprob: -6.470709800720215
    9. ' ' → logprob: -6.595709800720215
    10. '_nombre' → logprob: -7.095709800720215

Token 19: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2539139688014984
    2. ' d' → logprob: -2.0039138793945312
    3. ' de' → logprob: -2.7539138793945312
    4. '_' → logprob: -4.253913879394531
    5. 'd' → logprob: -4.753913879394531
    6. 's' → logprob: -7.378913879394531
    7. ' ' → logprob: -7.503913879394531
    8. '<|end|>' → logprob: -7.878913879394531
    9. '#' → logprob: -8.628913879394531
    10. '_d' → logprob: -8.753913879394531

Token 20: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.14520961046218872
    2. 'b' → logprob: -3.020209550857544
    3. 'esp' → logprob: -3.395209550857544
    4. 'bloc' → logprob: -3.395209550857544
    5. '_' → logprob: -5.645209789276123
    6. '```' → logprob: -5.770209789276123
    7. '_bloc' → logprob: -6.020209789276123
    8. 'blo' → logprob: -6.395209789276123
    9. ' blocs' → logprob: -6.520209789276123
    10. 'spaces' → logprob: -6.770209789276123

Token 21: ' horizontal' (ID: 25511)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20917317271232605
    2. '#' → logprob: -2.7091732025146484
    3. ',' → logprob: -3.2091732025146484
    4. '_' → logprob: -3.7091732025146484
    5. ':' → logprob: -4.209173202514648
    6. ' ' → logprob: -4.709173202514648
    7. '```' → logprob: -4.709173202514648
    8. '\' → logprob: -5.584173202514648
    9. 'b' → logprob: -5.584173202514648
    10. 'e' → logprob: -5.584173202514648

Token 22: 'ement' (ID: 962)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04870886728167534
    2. '_' → logprob: -3.673708915710449
    3. '#' → logprob: -4.923708915710449
    4. ',' → logprob: -5.298708915710449
    5. 'e' → logprob: -5.423708915710449
    6. '.' → logprob: -5.798708915710449
    7. ' ' → logprob: -7.798708915710449
    8. 'es' → logprob: -7.923708915710449
    9. '```' → logprob: -8.17370891571045
    10. '=' → logprob: -8.42370891571045

Token 23: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3989717662334442
    2. '#' → logprob: -1.8989717960357666
    3. ',' → logprob: -3.0239717960357666
    4. '_' → logprob: -3.5239717960357666
    5. ':' → logprob: -3.6489717960357666
    6. '```' → logprob: -3.8989717960357666
    7. '\' → logprob: -4.1489715576171875
    8. 'n' → logprob: -4.7739715576171875
    9. '\n' → logprob: -4.7739715576171875
    10. 'b' → logprob: -5.7739715576171875

Token 24: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40424638986587524
    2. 'b' → logprob: -2.2792463302612305
    3. 'def' → logprob: -2.5292463302612305
    4. '\' → logprob: -2.9042463302612305
    5. 'n' → logprob: -3.2792463302612305
    6. 'd' → logprob: -4.0292463302612305
    7. '```' → logprob: -4.1542463302612305
    8. '.' → logprob: -5.2792463302612305
    9. '\n' → logprob: -5.7792463302612305
    10. 'e' → logprob: -5.7792463302612305

Token 25: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4871547222137451
    2. 'd' → logprob: -1.4871547222137451
    3. 'n' → logprob: -1.7371547222137451
    4. ' ' → logprob: -2.112154722213745
    5. 'def' → logprob: -2.362154722213745
    6. 't' → logprob: -2.862154722213745
    7. 'b' → logprob: -3.737154722213745
    8. ' #' → logprob: -3.862154722213745
    9. 'e' → logprob: -4.237154960632324
    10. 'T' → logprob: -4.737154960632324

Token 26: ' bloc' (ID: 51218)
  Prédit: ' étage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.039965201169252396
    2. 'ét' → logprob: -4.2899651527404785
    3. 'bloc' → logprob: -5.0399651527404785
    4. 'niveau' → logprob: -5.1649651527404785
    5. ' bloc' → logprob: -5.9149651527404785
    6. 'é' → logprob: -6.1649651527404785
    7. '#' → logprob: -6.5399651527404785
    8. ' ' → logprob: -6.6649651527404785
    9. 'ligne' → logprob: -6.6649651527404785
    10. ' niveau' → logprob: -7.4149651527404785

Token 27: ' support' (ID: 2498)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6350858211517334
    2. ' a' → logprob: -1.3850858211517334
    3. ' ' → logprob: -2.0100858211517334
    4. 'a' → logprob: -3.8850858211517334
    5. ' représente' → logprob: -4.2600860595703125
    6. 'est' → logprob: -4.3850860595703125
    7. ' doit' → logprob: -4.6350860595703125
    8. ' ' → logprob: -4.7600860595703125
    9. 's' → logprob: -5.2600860595703125
    10. ' peut' → logprob: -5.6350860595703125

Token 28: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04214833676815033
    2. 'ant' → logprob: -3.4171483516693115
    3. 'é' → logprob: -5.417148113250732
    4. 'era' → logprob: -5.917148113250732
    5. 'ent' → logprob: -7.292148113250732
    6. 'er' → logprob: -8.66714859008789
    7. '#' → logprob: -9.04214859008789
    8. 'a' → logprob: -9.54214859008789
    9. '```' → logprob: -10.04214859008789
    10. 'le' → logprob: -10.04214859008789

Token 29: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9702997803688049
    2. ' une' → logprob: -1.0952997207641602
    3. 'une' → logprob: -2.09529972076416
    4. 'un' → logprob: -2.72029972076416
    5. ' ' → logprob: -3.59529972076416
    6. ' exactement' → logprob: -4.34529972076416
    7. ' jusqu' → logprob: -4.84529972076416
    8. 'le' → logprob: -5.22029972076416
    9. 'jus' → logprob: -5.22029972076416
    10. ' le' → logprob: -5.47029972076416

Token 30: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.8083235621452332
    2. ' nombre' → logprob: -1.933323621749878
    3. 'certain' → logprob: -2.683323621749878
    4. 'po' → logprob: -2.933323621749878
    5. ' bloc' → logprob: -2.933323621749878
    6. 'nombre' → logprob: -3.058323621749878
    7. ' maximum' → logprob: -3.183323621749878
    8. 'se' → logprob: -3.558323621749878
    9. ' certain' → logprob: -3.558323621749878
    10. 'bloc' → logprob: -3.808323621749878

Token 31: ' maximum' (ID: 10562)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0855146124958992
    2. ' ' → logprob: -3.085514545440674
    3. ',' → logprob: -3.710514545440674
    4. ' ,' → logprob: -5.835514545440674
    5. '.' → logprob: -5.960514545440674
    6. ' _' → logprob: -6.585514545440674
    7. 's' → logprob: -6.710514545440674
    8. '=' → logprob: -7.335514545440674
    9. ' )' → logprob: -7.460514545440674
    10. '#' → logprob: -7.460514545440674

Token 32: ' correspondant' (ID: 146058)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08996213972568512
    2. ',' → logprob: -3.2149622440338135
    3. ' ' → logprob: -3.4649622440338135
    4. '.' → logprob: -4.839962005615234
    5. ' ,' → logprob: -6.339962005615234
    6. '#' → logprob: -6.714962005615234
    7. ' _' → logprob: -7.214962005615234
    8. 's' → logprob: -7.214962005615234
    9. '_max' → logprob: -7.714962005615234
    10. '=' → logprob: -8.589962005615234

Token 33: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06368789076805115
    2. 'à' → logprob: -3.438687801361084
    3. ' au' → logprob: -4.188687801361084
    4. ' ' → logprob: -5.063687801361084
    5. 'au' → logprob: -5.563687801361084
    6. '_' → logprob: -6.563687801361084
    7. ' a' → logprob: -7.063687801361084
    8. 's' → logprob: -7.813687801361084
    9. '<|end|>' → logprob: -7.813687801361084
    10. '  ' → logprob: -7.938687801361084

Token 34: ' K' (ID: 658)
  Prédit: 'son'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'son' → logprob: -1.25736665725708
    2. ' son' → logprob: -1.25736665725708
    3. ' sa' → logprob: -1.38236665725708
    4. 'sa' → logprob: -2.38236665725708
    5. ' la' → logprob: -4.00736665725708
    6. 'un' → logprob: -4.25736665725708
    7. 'la' → logprob: -4.50736665725708
    8. ' une' → logprob: -4.75736665725708
    9. ' un' → logprob: -4.75736665725708
    10. 'une' → logprob: -4.88236665725708

Token 35: ' blocs' (ID: 182599)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8547662496566772
    2. '.' → logprob: -0.8547662496566772
    3. ',' → logprob: -2.229766368865967
    4. ':' → logprob: -4.354766368865967
    5. ' ' → logprob: -5.104766368865967
    6. '\' → logprob: -5.229766368865967
    7. '_' → logprob: -5.354766368865967
    8. '```' → logprob: -6.479766368865967
    9. 'def' → logprob: -6.729766368865967
    10. 'n' → logprob: -6.979766368865967

Token 36: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7594374418258667
    2. '.' → logprob: -1.3844374418258667
    3. ',' → logprob: -1.6344374418258667
    4. '_' → logprob: -3.7594375610351562
    5. ':' → logprob: -4.134437561035156
    6. 'def' → logprob: -4.634437561035156
    7. '```' → logprob: -4.884437561035156
    8. '\' → logprob: -5.259437561035156
    9. ' ' → logprob: -5.509437561035156
    10. ''' → logprob: -6.134437561035156

Token 37: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11545363813638687
    2. 'def' → logprob: -2.7404537200927734
    3. '.' → logprob: -4.365453720092773
    4. ',' → logprob: -4.990453720092773
    5. '```' → logprob: -5.240453720092773
    6. '_' → logprob: -5.615453720092773
    7. ':' → logprob: -6.240453720092773
    8. '\' → logprob: -6.365453720092773
    9. ' ' → logprob: -6.365453720092773
    10. '-' → logprob: -6.615453720092773

Token 38: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3913938105106354
    2. '#' → logprob: -1.266393780708313
    3. '\' → logprob: -4.766393661499023
    4. ' #' → logprob: -4.891393661499023
    5. ' def' → logprob: -5.266393661499023
    6. ' 
' → logprob: -5.641393661499023
    7. 'n' → logprob: -5.766393661499023
    8. ' ' → logprob: -5.891393661499023
    9. 'd' → logprob: -6.516393661499023
    10. '```' → logprob: -6.641393661499023

Token 39: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -1.0941425561904907
    2. 'po' → logprob: -1.9691425561904907
    3. ' but' → logprob: -2.344142436981201
    4. ' code' → logprob: -2.594142436981201
    5. ' nombre' → logprob: -2.594142436981201
    6. 'bloc' → logprob: -2.594142436981201
    7. 'nombre' → logprob: -2.844142436981201
    8. ' bloc' → logprob: -3.094142436981201
    9. 'but' → logprob: -4.344142436981201
    10. '#' → logprob: -4.469142436981201

Token 40: ' sur' (ID: 1512)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.2403560876846313
    2. 'total' → logprob: -1.2403560876846313
    3. ' maximum' → logprob: -2.240355968475342
    4. ' des' → logprob: -2.865355968475342
    5. ' support' → logprob: -3.115355968475342
    6. ' maximal' → logprob: -3.115355968475342
    7. 'support' → logprob: -3.615355968475342
    8. ' correspond' → logprob: -3.615355968475342
    9. 'maximum' → logprob: -3.615355968475342
    10. ' est' → logprob: -4.115355968475342

Token 41: ' un' (ID: 537)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.1991266012191772
    2. ' le' → logprob: -1.4491266012191772
    3. ' un' → logprob: -1.9491266012191772
    4. 'le' → logprob: -1.9491266012191772
    5. 'un' → logprob: -2.699126720428467
    6. ' lui' → logprob: -2.949126720428467
    7. 'l' → logprob: -4.074126720428467
    8. 'cha' → logprob: -4.824126720428467
    9. ' ce' → logprob: -4.824126720428467
    10. 'les' → logprob: -5.324126720428467

Token 42: ' bloc' (ID: 51218)
  Prédit: ' bloc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bloc' → logprob: -0.6316741108894348
    2. 'bloc' → logprob: -0.8816741108894348
    3. ' étage' → logprob: -3.88167405128479
    4. 'bl' → logprob: -4.506674289703369
    5. ' même' → logprob: -5.256674289703369
    6. ' ' → logprob: -5.381674289703369
    7. '```' → logprob: -6.631674289703369
    8. '_bloc' → logprob: -6.756674289703369
    9. 'block' → logprob: -6.881674289703369
    10. 'es' → logprob: -7.131674289703369

Token 43: ' à' (ID: 1221)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.7710535526275635
    2. ' correspond' → logprob: -0.7710535526275635
    3. ' doit' → logprob: -4.271053314208984
    4. 'cor' → logprob: -4.646053314208984
    5. ' correspondant' → logprob: -4.646053314208984
    6. '#' → logprob: -4.771053314208984
    7. 'est' → logprob: -5.021053314208984
    8. ' ' → logprob: -5.771053314208984
    9. ' corresponds' → logprob: -5.771053314208984
    10. ' =' → logprob: -6.021053314208984

Token 44: ' un' (ID: 537)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32595860958099365
    2. 'la' → logprob: -2.325958728790283
    3. ' l' → logprob: -3.200958728790283
    4. 'pe' → logprob: -3.700958728790283
    5. 'une' → logprob: -3.950958728790283
    6. '#' → logprob: -4.200958728790283
    7. 'part' → logprob: -4.700958728790283
    8. ' la' → logprob: -4.950958728790283
    9. 'p' → logprob: -5.075958728790283
    10. 'un' → logprob: -5.450958728790283

Token 45: ' étage' (ID: 125215)
  Prédit: 'certain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'certain' → logprob: -1.2067078351974487
    2. ' étage' → logprob: -1.3317078351974487
    3. ' instant' → logprob: -1.8317078351974487
    4. ' given' → logprob: -2.8317079544067383
    5. ' certain' → logprob: -2.9567079544067383
    6. 'niveau' → logprob: -3.2067079544067383
    7. 'instant' → logprob: -3.9567079544067383
    8. ' niveau' → logprob: -4.081707954406738
    9. ' donné' → logprob: -4.206707954406738
    10. ' #' → logprob: -4.706707954406738

Token 46: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.143819808959961
    2. ' donné' → logprob: -1.143819808959961
    3. ' est' → logprob: -2.018819808959961
    4. ' correspond' → logprob: -2.518819808959961
    5. ' =' → logprob: -3.393819808959961
    6. '=' → logprob: -3.518819808959961
    7. ',' → logprob: -4.893819808959961
    8. ' inférieur' → logprob: -4.893819808959961
    9. ' n' → logprob: -5.268819808959961
    10. ' s' → logprob: -5.393819808959961

Token 47: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.621898353099823
    2. ' la' → logprob: -1.1218984127044678
    3. ' le' → logprob: -2.8718984127044678
    4. ' ég' → logprob: -3.6218984127044678
    5. ' ' → logprob: -4.121898174285889
    6. ' l' → logprob: -4.621898174285889
    7. ' =' → logprob: -4.871898174285889
    8. ' équ' → logprob: -5.371898174285889
    9. 'le' → logprob: -5.746898174285889
    10. ' donné' → logprob: -6.121898174285889

Token 48: ' à' (ID: 1221)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.240369513630867
    2. ' à' → logprob: -1.7403695583343506
    3. 'au' → logprob: -3.6153695583343506
    4. 'à' → logprob: -4.8653693199157715
    5. ' ' → logprob: -5.7403693199157715
    6. '  ' → logprob: -9.11536979675293
    7. ' aux' → logprob: -9.49036979675293
    8. ' ' → logprob: -10.11536979675293
    9. ' a' → logprob: -10.49036979675293
    10. ''au' → logprob: -10.49036979675293

Token 49: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8956708908081055
    2. ' le' → logprob: -1.6456708908081055
    3. ' l' → logprob: -2.0206708908081055
    4. 'le' → logprob: -2.2706708908081055
    5. ' ' → logprob: -2.7706708908081055
    6. 'la' → logprob: -3.2706708908081055
    7. 'l' → logprob: -3.2706708908081055
    8. ' celui' → logprob: -5.1456708908081055
    9. 'the' → logprob: -5.5206708908081055
    10. '```' → logprob: -5.8956708908081055

Token 50: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9314814805984497
    2. 'nombre' → logprob: -1.4314814805984497
    3. ' somme' → logprob: -1.5564814805984497
    4. ' nombre' → logprob: -1.9314814805984497
    5. ' ' → logprob: -5.93148136138916
    6. '#' → logprob: -6.05648136138916
    7. ' #' → logprob: -6.68148136138916
    8. 'som' → logprob: -6.93148136138916
    9. ' som' → logprob: -7.80648136138916
    10. ' poids' → logprob: -8.05648136138916

Token 51: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.010809747502207756
    2. '<|end|>' → logprob: -5.010809898376465
    3. 'des' → logprob: -6.260809898376465
    4. ' du' → logprob: -6.760809898376465
    5. ' de' → logprob: -8.010809898376465
    6. ' ' → logprob: -8.135809898376465
    7. ' of' → logprob: -10.010809898376465
    8. ' )' → logprob: -10.010809898376465
    9. '_des' → logprob: -10.135809898376465
    10. '  ' → logprob: -10.135809898376465

Token 52: ' blocs' (ID: 182599)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.4545436501502991
    2. 'bl' → logprob: -1.4545435905456543
    3. ' blocs' → logprob: -2.3295435905456543
    4. 'po' → logprob: -4.079543590545654
    5. ' tous' → logprob: -5.704543590545654
    6. 't' → logprob: -6.204543590545654
    7. ' nombres' → logprob: -6.704543590545654
    8. '#' → logprob: -6.704543590545654
    9. 'les' → logprob: -6.829543590545654
    10. ' des' → logprob: -7.079543590545654

Token 53: ' situ' (ID: 4581)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2764242887496948
    2. ' de' → logprob: -2.6514244079589844
    3. ' du' → logprob: -3.0264244079589844
    4. 'des' → logprob: -3.1514244079589844
    5. ' au' → logprob: -4.026424407958984
    6. ' emp' → logprob: -4.276424407958984
    7. 'de' → logprob: -4.776424407958984
    8. ' présents' → logprob: -5.026424407958984
    9. '_' → logprob: -5.651424407958984
    10. ' ' → logprob: -5.776424407958984

Token 54: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.00027945113833993673
    2. 'é' → logprob: -8.250279426574707
    3. 'es' → logprob: -11.500279426574707
    4. '#' → logprob: -12.000279426574707
    5. 'ées' → logprob: -14.625279426574707
    6. 'ÉS' → logprob: -15.500279426574707
    7. 'ès' → logprob: -15.625279426574707
    8. '\xc2' → logprob: -15.875279426574707
    9. 'à' → logprob: -16.000280380249023
    10. 'É' → logprob: -16.375280380249023

Token 55: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.23455910384655
    2. ' en' → logprob: -2.4845590591430664
    3. ' directement' → logprob: -2.6095590591430664
    4. ' juste' → logprob: -4.609559059143066
    5. 'au' → logprob: -4.609559059143066
    6. 'direct' → logprob: -4.859559059143066
    7. ' dessous' → logprob: -4.859559059143066
    8. ' sur' → logprob: -5.484559059143066
    9. ' dessus' → logprob: -5.484559059143066
    10. 'en' → logprob: -6.109559059143066

Token 56: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.3247268795967102
    2. '-dessus' → logprob: -1.4497268199920654
    3. ' dessus' → logprob: -3.4497268199920654
    4. '-dessous' → logprob: -4.8247270584106445
    5. ' dessous' → logprob: -6.4497270584106445
    6. 'niveau' → logprob: -6.9497270584106445
    7. '-' → logprob: -9.199727058410645
    8. 'd' → logprob: -9.824727058410645
    9. ' ' → logprob: -10.574727058410645
    10. 'ét' → logprob: -10.699727058410645

Token 57: ' divis' (ID: 37826)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26793065667152405
    2. ',' → logprob: -2.017930746078491
    3. 's' → logprob: -3.142930746078491
    4. ' ,' → logprob: -3.642930746078491
    5. ' ' → logprob: -4.017930507659912
    6. '```' → logprob: -5.642930507659912
    7. ' .' → logprob: -6.142930507659912
    8. ' ' → logprob: -6.267930507659912
    9. '_' → logprob: -6.767930507659912
    10. 'e' → logprob: -6.892930507659912

Token 58: 'ée' (ID: 2894)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.5231611728668213
    2. 'é' → logprob: -1.6481611728668213
    3. 's' → logprob: -2.0231611728668213
    4. 'ée' → logprob: -2.6481611728668213
    5. 'd' → logprob: -5.398160934448242
    6. 'dé' → logprob: -6.148160934448242
    7. 'dés' → logprob: -6.898160934448242
    8. 'sé' → logprob: -6.898160934448242
    9. 'ées' → logprob: -7.523160934448242
    10. 'ant' → logprob: -7.648160934448242

Token 59: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.5255488753318787
    2. ' par' → logprob: -0.9005488753318787
    3. ' ' → logprob: -6.900548934936523
    4. '```' → logprob: -7.525548934936523
    5. '_par' → logprob: -8.025548934936523
    6. 'sur' → logprob: -8.525548934936523
    7. '(par' → logprob: -9.650548934936523
    8. 'au' → logprob: -9.900548934936523
    9. '`' → logprob: -10.775548934936523
    10. '  ' → logprob: -10.900548934936523

Token 60: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3140176236629486
    2. ' ' → logprob: -2.1890175342559814
    3. ' la' → logprob: -2.5640175342559814
    4. 'le' → logprob: -3.6890175342559814
    5. '2' → logprob: -3.6890175342559814
    6. ' les' → logprob: -4.4390177726745605
    7. ' len' → logprob: -4.5640177726745605
    8. ' l' → logprob: -5.6890177726745605
    9. ' nombre' → logprob: -6.9390177726745605
    10. 'l' → logprob: -7.0640177726745605

Token 61: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.07106026262044907
    2. 'nombre' → logprob: -2.8210601806640625
    3. ' ' → logprob: -5.0710601806640625
    4. ' number' → logprob: -7.1960601806640625
    5. ' nb' → logprob: -7.5710601806640625
    6. '2' → logprob: -7.6960601806640625
    7. ' nombres' → logprob: -7.9460601806640625
    8. ' bloc' → logprob: -8.696060180664062
    9. ' Nombre' → logprob: -9.071060180664062
    10. '_nombre' → logprob: -9.446060180664062

Token 62: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.047379665076732635
    2. 'de' → logprob: -3.422379732131958
    3. ' d' → logprob: -4.797379493713379
    4. ' des' → logprob: -6.297379493713379
    5. ' ' → logprob: -7.047379493713379
    6. '<|end|>' → logprob: -7.047379493713379
    7. ' total' → logprob: -8.047379493713379
    8. 'total' → logprob: -8.047379493713379
    9. 'd' → logprob: -8.172379493713379
    10. '_de' → logprob: -8.297379493713379

Token 63: ' blocs' (ID: 182599)
  Prédit: ' blocs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocs' → logprob: -0.0834212526679039
    2. 'bl' → logprob: -2.583421230316162
    3. ' blocks' → logprob: -6.333421230316162
    4. 'blocks' → logprob: -7.083421230316162
    5. ' bloques' → logprob: -7.958421230316162
    6. 'bloc' → logprob: -8.08342170715332
    7. ' bl' → logprob: -8.08342170715332
    8. ' bloc' → logprob: -8.45842170715332
    9. '_bloc' → logprob: -8.58342170715332
    10. ' ' → logprob: -9.20842170715332

Token 64: ' à' (ID: 1221)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5275917053222656
    2. ' ' → logprob: -2.5275917053222656
    3. ' s' → logprob: -2.6525917053222656
    4. '_' → logprob: -2.6525917053222656
    5. 's' → logprob: -3.0275917053222656
    6. ' ```' → logprob: -3.6525917053222656
    7. ' ' → logprob: -4.277591705322266
    8. ' au' → logprob: -4.527591705322266
    9. ' horizontal' → logprob: -4.777591705322266
    10. ' à' → logprob: -4.777591705322266

Token 65: ' cet' (ID: 19505)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.49757036566734314
    2. ' l' → logprob: -0.9975703954696655
    3. 'cet' → logprob: -4.622570514678955
    4. ' cet' → logprob: -5.372570514678955
    5. '<|end|>' → logprob: -5.747570514678955
    6. ' ce' → logprob: -6.747570514678955
    7. ' étage' → logprob: -7.247570514678955
    8. 'support' → logprob: -7.247570514678955
    9. ' ' → logprob: -8.122570037841797
    10. 'c' → logprob: -8.247570037841797

Token 66: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.039965320378541946
    2. 'ét' → logprob: -3.6649653911590576
    3. '<|end|>' → logprob: -4.7899651527404785
    4. 'é' → logprob: -6.5399651527404785
    5. 'm' → logprob: -7.7899651527404785
    6. 'et' → logprob: -7.7899651527404785
    7. 'niveau' → logprob: -7.9149651527404785
    8. '```' → logprob: -8.289965629577637
    9. 'éta' → logprob: -8.414965629577637
    10. 'âge' → logprob: -8.414965629577637

Token 67: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5016210079193115
    2. '.' → logprob: -2.0016210079193115
    3. ',' → logprob: -2.2516210079193115
    4. ':' → logprob: -3.7516210079193115
    5. 'd' → logprob: -3.7516210079193115
    6. 'def' → logprob: -3.8766210079193115
    7. 'n' → logprob: -4.001621246337891
    8. '```' → logprob: -4.501621246337891
    9. '\' → logprob: -4.626621246337891
    10. 'e' → logprob: -4.876621246337891

Token 68: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16211438179016113
    2. '.' → logprob: -2.537114381790161
    3. ',' → logprob: -3.912114381790161
    4. 'def' → logprob: -4.037114143371582
    5. '\' → logprob: -4.912114143371582
    6. '```' → logprob: -5.412114143371582
    7. 'n' → logprob: -6.037114143371582
    8. 's' → logprob: -6.162114143371582
    9. ' 
' → logprob: -6.412114143371582
    10. ':' → logprob: -6.537114143371582

Token 69: ' Le' (ID: 2018)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6888647675514221
    2. 'def' → logprob: -1.8138647079467773
    3. '.' → logprob: -2.0638647079467773
    4. ':' → logprob: -2.4388647079467773
    5. ',' → logprob: -2.9388647079467773
    6. '\' → logprob: -4.563864707946777
    7. '```' → logprob: -4.688864707946777
    8. '
' → logprob: -5.188864707946777
    9. 'd' → logprob: -5.313864707946777
    10. 'n' → logprob: -5.438864707946777

Token 70: ' but' (ID: 889)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.9468055367469788
    2. ' nombre' → logprob: -1.446805477142334
    3. 'po' → logprob: -1.821805477142334
    4. 'nombre' → logprob: -1.946805477142334
    5. ' code' → logprob: -3.446805477142334
    6. '#' → logprob: -5.071805477142334
    7. 's' → logprob: -5.446805477142334
    8. 'bloc' → logprob: -5.446805477142334
    9. ' po' → logprob: -5.696805477142334
    10. ' bloc' → logprob: -5.946805477142334

Token 71: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.027377966791391373
    2. ' de' → logprob: -4.277378082275391
    3. ' ' → logprob: -5.152378082275391
    4. ' d' → logprob: -5.527378082275391
    5. ' ' → logprob: -6.652378082275391
    6. 'est' → logprob: -6.652378082275391
    7. ' is' → logprob: -8.40237808227539
    8. '_' → logprob: -9.27737808227539
    9. 'd' → logprob: -9.27737808227539
    10. ':' → logprob: -9.52737808227539

Token 72: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.19813069701194763
    2. 'de' → logprob: -1.94813072681427
    3. ' d' → logprob: -3.9481306076049805
    4. 'd' → logprob: -4.0731306076049805
    5. '_de' → logprob: -8.19813060760498
    6. ' donc' → logprob: -8.94813060760498
    7. ' ' → logprob: -9.07313060760498
    8. ' que' → logprob: -9.19813060760498
    9. 'don' → logprob: -9.82313060760498
    10. '_d' → logprob: -10.19813060760498

Token 73: ' maxim' (ID: 29045)
  Prédit: ' construire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construire' → logprob: -1.0015404224395752
    2. 'v' → logprob: -1.7515404224395752
    3. 'con' → logprob: -1.7515404224395752
    4. 'emp' → logprob: -3.001540422439575
    5. 'respect' → logprob: -3.001540422439575
    6. ' vérifier' → logprob: -3.251540422439575
    7. 'min' → logprob: -3.501540422439575
    8. 'max' → logprob: -3.876540422439575
    9. ' maxim' → logprob: -4.626540184020996
    10. 'p' → logprob: -4.626540184020996

Token 74: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.18983714282512665
    2. 'ser' → logprob: -1.814837098121643
    3. '#' → logprob: -5.0648369789123535
    4. '```' → logprob: -7.3148369789123535
    5. 'er' → logprob: -7.8148369789123535
    6. '=' → logprob: -7.8148369789123535
    7. 'user' → logprob: -7.8148369789123535
    8. '?' → logprob: -8.064837455749512
    9. '\' → logprob: -8.564837455749512
    10. 'eser' → logprob: -9.064837455749512

Token 75: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3019949197769165
    2. 'le' → logprob: -1.8019949197769165
    3. ' la' → logprob: -3.176994800567627
    4. ' l' → logprob: -3.426994800567627
    5. ' ' → logprob: -5.301994800567627
    6. 'l' → logprob: -5.301994800567627
    7. ' ' → logprob: -5.676994800567627
    8. 'la' → logprob: -6.301994800567627
    9. '<|end|>' → logprob: -6.551994800567627
    10. '_le' → logprob: -7.051994800567627

Token 76: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.048784367740154266
    2. ' nombre' → logprob: -3.0487842559814453
    3. 'n' → logprob: -9.173784255981445
    4. 'ha' → logprob: -10.923784255981445
    5. ' hauteur' → logprob: -10.923784255981445
    6. 'nb' → logprob: -11.298784255981445
    7. ' nombres' → logprob: -11.298784255981445
    8. '_nombre' → logprob: -11.548784255981445
    9. 'Nombre' → logprob: -12.423784255981445
    10. 'nom' → logprob: -12.673784255981445

Token 77: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0331762321293354
    2. 'd' → logprob: -4.283176422119141
    3. ' de' → logprob: -4.408176422119141
    4. ' ' → logprob: -5.533176422119141
    5. '_' → logprob: -6.033176422119141
    6. '_d' → logprob: -9.28317642211914
    7. ' total' → logprob: -9.40817642211914
    8. '_de' → logprob: -10.65817642211914
    9. 'de' → logprob: -10.90817642211914
    10. '  ' → logprob: -11.28317642211914

Token 78: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.44961562752723694
    2. ''' → logprob: -1.4496155977249146
    3. ''é' → logprob: -2.324615716934204
    4. 'e' → logprob: -3.699615716934204
    5. '’ét' → logprob: -5.949615478515625
    6. 'é' → logprob: -6.699615478515625
    7. ''e' → logprob: -8.074615478515625
    8. '_' → logprob: -8.824615478515625
    9. '’é' → logprob: -8.949615478515625
    10. ''è' → logprob: -8.949615478515625

Token 79: 'ages' (ID: 1461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2832450270652771
    2. 'ages' → logprob: -1.4082450866699219
    3. 'ag' → logprob: -6.658245086669922
    4. 'age' → logprob: -7.283245086669922
    5. 'agés' → logprob: -9.908245086669922
    6. 'ا' → logprob: -10.408245086669922
    7. 'а' → logprob: -11.408245086669922
    8. 'agé' → logprob: -12.158245086669922
    9. 'ager' → logprob: -12.533245086669922
    10. 'agement' → logprob: -12.908245086669922

Token 80: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6579633355140686
    2. ':' → logprob: -1.2829632759094238
    3. '#' → logprob: -2.407963275909424
    4. 'd' → logprob: -2.782963275909424
    5. '\' → logprob: -4.157963275909424
    6. ',' → logprob: -4.532963275909424
    7. '```' → logprob: -4.907963275909424
    8. 'de' → logprob: -5.782963275909424
    9. 'n' → logprob: -5.782963275909424
    10. '.' → logprob: -5.907963275909424

Token 81: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.049718648195266724
    2. 'la' → logprob: -3.0497186183929443
    3. 's' → logprob: -8.674718856811523
    4. ' ' → logprob: -8.674718856811523
    5. ' tour' → logprob: -9.049718856811523
    6. ' hauteur' → logprob: -9.299718856811523
    7. ' l' → logprob: -9.549718856811523
    8. 'tour' → logprob: -9.549718856811523
    9. 'l' → logprob: -9.924718856811523
    10. 't' → logprob: -10.174718856811523

Token 82: ' tour' (ID: 6970)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.11761849373579025
    2. ' tour' → logprob: -2.2426185607910156
    3. 'tower' → logprob: -6.117618560791016
    4. 't' → logprob: -6.617618560791016
    5. 'tou' → logprob: -8.117618560791016
    6. ' tower' → logprob: -8.617618560791016
    7. 'tor' → logprob: -8.867618560791016
    8. '#' → logprob: -8.992618560791016
    9. '```' → logprob: -9.117618560791016
    10. 'to' → logprob: -9.367618560791016

Token 83: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9195871949195862
    2. 'def' → logprob: -1.1695871353149414
    3. ':' → logprob: -1.6695871353149414
    4. 'd' → logprob: -3.7945871353149414
    5. 'n' → logprob: -3.9195871353149414
    6. ',' → logprob: -4.044587135314941
    7. '```' → logprob: -4.544587135314941
    8. '\' → logprob: -4.669587135314941
    9. '_' → logprob: -5.419587135314941
    10. '.' → logprob: -5.919587135314941

Token 84: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.732129693031311
    2. 'def' → logprob: -1.607129693031311
    3. ':' → logprob: -1.982129693031311
    4. 'd' → logprob: -2.7321295738220215
    5. '```' → logprob: -3.2321295738220215
    6. '\' → logprob: -3.7321295738220215
    7. 'n' → logprob: -3.7321295738220215
    8. ',' → logprob: -4.9821295738220215
    9. '
' → logprob: -5.9821295738220215
    10. '.' → logprob: -6.1071295738220215

Token 85: ' 
' (ID: 793)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10847149044275284
    2. '#' → logprob: -2.983471393585205
    3. 'def' → logprob: -3.108471393585205
    4. 'n' → logprob: -5.608471393585205
    5. 'b' → logprob: -7.358471393585205
    6. 'de' → logprob: -7.483471393585205
    7. '```' → logprob: -7.608471393585205
    8. 'import' → logprob: -7.733471393585205
    9. 'i' → logprob: -7.858471393585205
    10. '\' → logprob: -7.858471393585205

Token 86: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11143471300601959
    2. 'def' → logprob: -2.6114346981048584
    3. '#' → logprob: -3.6114346981048584
    4. 'n' → logprob: -5.8614349365234375
    5. 'b' → logprob: -7.4864349365234375
    6. 'import' → logprob: -7.8614349365234375
    7. 'de' → logprob: -8.486434936523438
    8. 'i' → logprob: -8.861434936523438
    9. 'D' → logprob: -8.986434936523438
    10. '\' → logprob: -9.111434936523438

Token 87: ' Appro' (ID: 24145)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.777264416217804
    2. 'def' → logprob: -0.777264416217804
    3. '#' → logprob: -2.652264356613159
    4. 'n' → logprob: -5.152264595031738
    5. 'de' → logprob: -7.027264595031738
    6. '```' → logprob: -7.277264595031738
    7. 'import' → logprob: -7.402264595031738
    8. 'K' → logprob: -7.777264595031738
    9. 'D' → logprob: -7.902264595031738
    10. '\' → logprob: -8.402264595031738

Token 88: 'che' (ID: 926)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6811336874961853
    2. 'che' → logprob: -1.18113374710083
    3. '#' → logprob: -3.18113374710083
    4. 'ch' → logprob: -3.30613374710083
    5. 'xim' → logprob: -3.55613374710083
    6. 'xi' → logprob: -3.68113374710083
    7. 'fond' → logprob: -3.80613374710083
    8. 'f' → logprob: -4.43113374710083
    9. 'ches' → logprob: -4.68113374710083
    10. 'cher' → logprob: -5.55613374710083

Token 89: ' :
' (ID: 10039)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6003468036651611
    2. ':' → logprob: -1.7253468036651611
    3. 'def' → logprob: -2.225346803665161
    4. ' :' → logprob: -2.975346803665161
    5. ' ' → logprob: -3.475346803665161
    6. 'd' → logprob: -3.475346803665161
    7. ' #' → logprob: -4.225346565246582
    8. ' ' → logprob: -4.600346565246582
    9. 'n' → logprob: -5.600346565246582
    10. '_' → logprob: -5.725346565246582

Token 90: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16699455678462982
    2. 'def' → logprob: -2.166994571685791
    3. ' #' → logprob: -3.791994571685791
    4. 'd' → logprob: -5.166994571685791
    5. 'n' → logprob: -5.541994571685791
    6. ' 
' → logprob: -7.041994571685791
    7. ' def' → logprob: -7.416994571685791
    8. '```' → logprob: -7.416994571685791
    9. 'On' → logprob: -7.666994571685791
    10. 'dé' → logprob: -7.916994571685791

Token 91: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.270433634519577
    2. 'def' → logprob: -1.6454336643218994
    3. 'from' → logprob: -4.14543342590332
    4. ' #' → logprob: -4.39543342590332
    5. ' def' → logprob: -5.52043342590332
    6. ' on' → logprob: -6.02043342590332
    7. 'On' → logprob: -6.52043342590332
    8. ' from' → logprob: -6.77043342590332
    9. 'import' → logprob: -6.77043342590332
    10. ' On' → logprob: -7.02043342590332

Token 92: ' Not' (ID: 4037)
  Prédit: 'Util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Util' → logprob: -0.8955800533294678
    2. 'On' → logprob: -1.8955800533294678
    3. ' Util' → logprob: -2.1455800533294678
    4. ' On' → logprob: -3.2705800533294678
    5. ' utiliser' → logprob: -3.3955800533294678
    6. 'Dé' → logprob: -3.3955800533294678
    7. 'Calcul' → logprob: -3.5205800533294678
    8. '#' → logprob: -3.5205800533294678
    9. 'D' → logprob: -3.7705800533294678
    10. ' Calcul' → logprob: -4.145580291748047

Token 93: 'ons' (ID: 1808)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020233409479260445
    2. 'é' → logprob: -4.645233631134033
    3. 'er' → logprob: -5.270233631134033
    4. 'amment' → logprob: -5.895233631134033
    5. ' e' → logprob: -6.770233631134033
    6. 'es' → logprob: -7.145233631134033
    7. 'ebooks' → logprob: -9.020233154296875
    8. 'a' → logprob: -9.270233154296875
    9. 'am' → logprob: -9.770233154296875
    10. 're' → logprob: -9.895233154296875

Token 94: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.1460553407669067
    2. 'n' → logprob: -1.8960553407669067
    3. ' i' → logprob: -2.646055221557617
    4. ' x' → logprob: -2.771055221557617
    5. ' la' → logprob: -3.021055221557617
    6. ' h' → logprob: -3.146055221557617
    7. 'x' → logprob: -3.271055221557617
    8. ' ' → logprob: -3.271055221557617
    9. ' K' → logprob: -4.021055221557617
    10. ' le' → logprob: -4.021055221557617

Token 95: ' ét' (ID: 4976)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -1.5721440315246582
    2. ' blocs' → logprob: -1.5721440315246582
    3. ' poids' → logprob: -2.572144031524658
    4. ' h' → logprob: -2.822144031524658
    5. ' n' → logprob: -2.947144031524658
    6. 'n' → logprob: -3.072144031524658
    7. ' nombre' → logprob: -3.447144031524658
    8. ' nb' → logprob: -3.447144031524658
    9. ' N' → logprob: -3.697144031524658
    10. 'nombre' → logprob: -3.947144031524658

Token 96: 'ages' (ID: 1461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4993892312049866
    2. 'ages' → logprob: -0.9993892312049866
    3. 'ag' → logprob: -3.749389171600342
    4. 'age' → logprob: -7.124389171600342
    5. 'agés' → logprob: -8.2493896484375
    6. 'а' → logprob: -9.2493896484375
    7. '#' → logprob: -9.4993896484375
    8. 'á' → logprob: -10.6243896484375
    9. 'agé' → logprob: -10.7493896484375
    10. 'apes' → logprob: -10.8743896484375

Token 97: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3855578899383545
    2. ' ' → logprob: -2.8855578899383545
    3. ' rest' → logprob: -3.1355578899383545
    4. 's' → logprob: -3.5105578899383545
    5. ' des' → logprob: -3.7605578899383545
    6. ' possibles' → logprob: -3.7605578899383545
    7. '_rest' → logprob: -4.385558128356934
    8. '_' → logprob: -4.510558128356934
    9. '[i' → logprob: -4.885558128356934
    10. '1' → logprob: -5.010558128356934

Token 98: ' haut' (ID: 28223)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2993814945220947
    2. ' ' → logprob: -2.0493814945220947
    3. '1' → logprob: -2.1743814945220947
    4. ' i' → logprob: -4.924381256103516
    5. 'l' → logprob: -5.924381256103516
    6. ' l' → logprob: -6.424381256103516
    7. ' la' → logprob: -6.799381256103516
    8. 'i' → logprob: -7.049381256103516
    9. ' bas' → logprob: -7.549381256103516
    10. 'bas' → logprob: -7.924381256103516

Token 99: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.23053643107414246
    2. 'en' → logprob: -1.6055364608764648
    3. ' ' → logprob: -6.230536460876465
    4. '-' → logprob: -6.480536460876465
    5. '-en' → logprob: -6.730536460876465
    6. ' à' → logprob: -8.855536460876465
    7. '-bas' → logprob: -9.105536460876465
    8. 'à' → logprob: -10.855536460876465
    9. ' vers' → logprob: -11.230536460876465
    10. '   ' → logprob: -11.230536460876465

Token 100: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.01778627187013626
    2. 'part' → logprob: -4.267786502838135
    3. '#' → logprob: -6.892786502838135
    4. ' ' → logprob: -7.267786502838135
    5. '-' → logprob: -7.517786502838135
    6. 'base' → logprob: -7.642786502838135
    7. 'b' → logprob: -8.017786026000977
    8. '1' → logprob: -9.017786026000977
    9. '  ' → logprob: -9.267786026000977
    10. '_bas' → logprob: -9.517786026000977

Token 101: ' :' (ID: 712)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6488814949989319
    2. '
' → logprob: -1.523881435394287
    3. 'n' → logprob: -2.023881435394287
    4. '\' → logprob: -3.523881435394287
    5. '\n' → logprob: -4.023881435394287
    6. 'def' → logprob: -4.148881435394287
    7. '.' → logprob: -4.523881435394287
    8. ',' → logprob: -5.023881435394287
    9. 's' → logprob: -5.273881435394287
    10. '

' → logprob: -5.398881435394287

Token 102: ' étage' (ID: 125215)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.97386234998703
    2. 'n' → logprob: -1.2238624095916748
    3. ' ' → logprob: -2.848862409591675
    4. ' #' → logprob: -3.098862409591675
    5. '0' → logprob: -3.223862409591675
    6. '1' → logprob: -3.473862409591675
    7. '#' → logprob: -3.473862409591675
    8. ' étage' → logprob: -3.973862409591675
    9. 'niveau' → logprob: -3.973862409591675
    10. '
' → logprob: -4.598862171173096

Token 103: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3173735439777374
    2. ' ' → logprob: -2.067373514175415
    3. '1' → logprob: -2.817373514175415
    4. '_' → logprob: -3.192373514175415
    5. '0' → logprob: -3.942373514175415
    6. ' =' → logprob: -3.942373514175415
    7. ' s' → logprob: -5.817373752593994
    8. '_s' → logprob: -7.067373752593994
    9. 'es' → logprob: -7.817373752593994
    10. ' n' → logprob: -8.317373275756836

Token 104: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5242427587509155
    2. '0' → logprob: -1.3992427587509155
    3. 's' → logprob: -2.649242877960205
    4. '1' → logprob: -2.774242877960205
    5. ' n' → logprob: -4.524242877960205
    6. ' i' → logprob: -5.274242877960205
    7. ' =' → logprob: -5.524242877960205
    8. '_' → logprob: -5.649242877960205
    9. ' par' → logprob: -6.899242877960205
    10. ' s' → logprob: -7.274242877960205

Token 105: ' tout' (ID: 5501)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3085912764072418
    2. '#' → logprob: -2.433591365814209
    3. ' ,' → logprob: -2.558591365814209
    4. ' (' → logprob: -3.558591365814209
    5. ' ' → logprob: -4.183591365814209
    6. '.' → logprob: -4.433591365814209
    7. ' et' → logprob: -4.683591365814209
    8. '
' → logprob: -5.183591365814209
    9. ' #' → logprob: -5.308591365814209
    10. ' =' → logprob: -6.058591365814209

Token 106: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.001358209759928286
    2. ' en' → logprob: -6.8763580322265625
    3. 'au' → logprob: -8.126358032226562
    4. 'd' → logprob: -11.251358032226562
    5. 'à' → logprob: -11.501358032226562
    6. '```' → logprob: -13.626358032226562
    7. 'haut' → logprob: -14.376358032226562
    8. ' ' → logprob: -14.626358032226562
    9. 'tout' → logprob: -14.751358032226562
    10. ''en' → logprob: -14.751358032226562

Token 107: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.002610259922221303
    2. ' haut' → logprob: -6.752610206604004
    3. '#' → logprob: -7.877610206604004
    4. 'bas' → logprob: -7.877610206604004
    5. ' ' → logprob: -8.377610206604004
    6. 'dess' → logprob: -8.502610206604004
    7. 'ha' → logprob: -9.127610206604004
    8. '```' → logprob: -10.877610206604004
    9. '   ' → logprob: -11.127610206604004
    10. '	' → logprob: -11.377610206604004

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.293401837348938
    2. '#' → logprob: -1.543401837348938
    3. '.' → logprob: -4.043401718139648
    4. ' ,' → logprob: -4.918401718139648
    5. ',
' → logprob: -5.543401718139648
    6. '
' → logprob: -6.043401718139648
    7. 'def' → logprob: -6.668401718139648
    8. '```' → logprob: -6.793401718139648
    9. ' #' → logprob: -7.043401718139648
    10. ' et' → logprob: -7.043401718139648

Token 109: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.33239248394966125
    2. '#' → logprob: -1.5823924541473389
    3. ' #' → logprob: -2.582392454147339
    4. ' ' → logprob: -7.082392692565918
    5. ' et' → logprob: -8.332392692565918
    6. 'ét' → logprob: -8.707392692565918
    7. 'et' → logprob: -9.332392692565918
    8. ' étape' → logprob: -9.457392692565918
    9. ',' → logprob: -10.332392692565918
    10. '
' → logprob: -10.832392692565918

Token 110: ' h' (ID: 312)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14297938346862793
    2. '2' → logprob: -2.017979383468628
    3. '0' → logprob: -8.767979621887207
    4. '1' → logprob: -9.892979621887207
    5. ' ' → logprob: -10.392979621887207
    6. ' n' → logprob: -10.517979621887207
    7. '  ' → logprob: -11.892979621887207
    8. ' deux' → logprob: -12.017979621887207
    9. '<|end|>' → logprob: -12.142979621887207
    10. ' #' → logprob: -12.392979621887207

Token 111: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2904845178127289
    2. '2' → logprob: -2.1654844284057617
    3. 'e' → logprob: -2.9154844284057617
    4. '1' → logprob: -2.9154844284057617
    5. 'u' → logprob: -4.915484428405762
    6. '+' → logprob: -5.040484428405762
    7. '=' → logprob: -5.915484428405762
    8. 'au' → logprob: -5.915484428405762
    9. ' =' → logprob: -6.040484428405762
    10. ' e' → logprob: -6.665484428405762

Token 112: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.43914005160331726
    2. ' plus' → logprob: -1.0641400814056396
    3. 'bas' → logprob: -5.3141398429870605
    4. '#' → logprob: -6.1891398429870605
    5. 'dern' → logprob: -6.5641398429870605
    6. ' bas' → logprob: -6.9391398429870605
    7. '+' → logprob: -7.5641398429870605
    8. ' ' → logprob: -9.564140319824219
    9. ' dernier' → logprob: -9.814140319824219
    10. 'tout' → logprob: -9.939140319824219

Token 113: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.0005176475970074534
    2. '#' → logprob: -8.875517845153809
    3. 'b' → logprob: -9.000517845153809
    4. ' ' → logprob: -9.125517845153809
    5. '```' → logprob: -10.500517845153809
    6. 'haut' → logprob: -11.000517845153809
    7. 'en' → logprob: -11.000517845153809
    8. '
' → logprob: -11.250517845153809
    9. '   ' → logprob: -11.750517845153809
    10. '  
' → logprob: -12.000517845153809

Token 114: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.641331672668457
    2. 'def' → logprob: -1.016331672668457
    3. '
' → logprob: -2.391331672668457
    4. 'n' → logprob: -4.891331672668457
    5. 'import' → logprob: -5.641331672668457
    6. 'h' → logprob: -6.641331672668457
    7. '```' → logprob: -6.891331672668457
    8. ' 
' → logprob: -7.016331672668457
    9. ',' → logprob: -7.391331672668457
    10. 'from' → logprob: -7.516331672668457

Token 115: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4920654594898224
    2. '#' → logprob: -0.9920654296875
    3. 'n' → logprob: -4.9920654296875
    4. 'import' → logprob: -5.3670654296875
    5. 'h' → logprob: -6.4920654296875
    6. '```' → logprob: -6.9920654296875
    7. 'from' → logprob: -7.4920654296875
    8. 'K' → logprob: -7.4920654296875
    9. '\' → logprob: -7.6170654296875
    10. 'b' → logprob: -8.2420654296875

Token 116: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35177895426750183
    2. '#' → logprob: -1.3517789840698242
    3. 'n' → logprob: -3.851778984069824
    4. 'import' → logprob: -5.101778984069824
    5. ' 
' → logprob: -6.101778984069824
    6. 'h' → logprob: -6.601778984069824
    7. '
' → logprob: -6.726778984069824
    8. 'K' → logprob: -7.101778984069824
    9. '\' → logprob: -7.101778984069824
    10. ' #' → logprob: -7.476778984069824

Token 117: ' So' (ID: 2632)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8063953518867493
    2. '#' → logprob: -1.3063952922821045
    3. 'On' → logprob: -1.5563952922821045
    4. 'Pour' → logprob: -4.306395530700684
    5. ' On' → logprob: -4.556395530700684
    6. 'Nous' → logprob: -5.056395530700684
    7. ' on' → logprob: -5.181395530700684
    8. 'Constru' → logprob: -5.306395530700684
    9. 'from' → logprob: -5.431395530700684
    10. 'Dé' → logprob: -5.806395530700684

Token 118: 'it' (ID: 278)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038924410939216614
    2. 'u' → logprob: -3.6639244556427
    3. 'us' → logprob: -4.788924217224121
    4. 'l' → logprob: -5.913924217224121
    5. ' n' → logprob: -7.413924217224121
    6. 'nt' → logprob: -9.288924217224121
    7. 'r' → logprob: -9.288924217224121
    8. '#' → logprob: -9.288924217224121
    9. 'm' → logprob: -9.413924217224121
    10. '_' → logprob: -9.413924217224121

Token 119: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.157536119222641
    2. 'h' → logprob: -3.407536029815674
    3. ' n' → logprob: -3.532536029815674
    4. ' la' → logprob: -4.532536029815674
    5. ' dp' → logprob: -4.782536029815674
    6. ' def' → logprob: -4.907536029815674
    7. ' f' → logprob: -5.282536029815674
    8. ' x' → logprob: -5.282536029815674
    9. ' hauteur' → logprob: -5.407536029815674
    10. 'def' → logprob: -5.532536029815674

Token 120: ' configuration' (ID: 12282)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.8124775290489197
    2. 'def' → logprob: -1.5624775886535645
    3. ' poids' → logprob: -2.3124775886535645
    4. ' def' → logprob: -2.5624775886535645
    5. 'nombre' → logprob: -3.4374775886535645
    6. '#' → logprob: -3.6874775886535645
    7. ' liste' → logprob: -3.9374775886535645
    8. 's' → logprob: -4.3124775886535645
    9. 'n' → logprob: -4.3124775886535645
    10. ' tableau' → logprob: -4.6874775886535645

Token 121: ' des' (ID: 731)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.4641466736793518
    2. ' actuelle' → logprob: -2.589146614074707
    3. ' de' → logprob: -2.839146614074707
    4. ' ' → logprob: -2.964146614074707
    5. ' :' → logprob: -3.089146614074707
    6. ' =' → logprob: -3.214146614074707
    7. ':' → logprob: -3.839146614074707
    8. '[' → logprob: -4.589146614074707
    9. ' des' → logprob: -4.714146614074707
    10. '[]' → logprob: -4.964146614074707

Token 122: ' blocs' (ID: 182599)
  Prédit: ' blocs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocs' → logprob: -0.12098177522420883
    2. ' ét' → logprob: -2.4959816932678223
    3. 'ét' → logprob: -4.745981693267822
    4. 'bl' → logprob: -4.745981693267822
    5. ' nombres' → logprob: -5.995981693267822
    6. ' tailles' → logprob: -6.370981693267822
    7. ' blocks' → logprob: -6.745981693267822
    8. ' ' → logprob: -7.495981693267822
    9. ''ét' → logprob: -7.495981693267822
    10. ' haute' → logprob: -7.495981693267822

Token 123: ' par' (ID: 686)
  Prédit: ' suivante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.2828438878059387
    2. '[' → logprob: -2.782843828201294
    3. ' =' → logprob: -3.532843828201294
    4. ' :' → logprob: -3.657843828201294
    5. ' des' → logprob: -4.032844066619873
    6. ' de' → logprob: -4.032844066619873
    7. '[]' → logprob: -4.157844066619873
    8. ' actuelle' → logprob: -4.532844066619873
    9. '_possible' → logprob: -4.907844066619873
    10. ' ' → logprob: -5.157844066619873

Token 124: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.055723175406455994
    2. 'ét' → logprob: -3.180723190307617
    3. 'niveau' → logprob: -5.680723190307617
    4. ' niveau' → logprob: -5.930723190307617
    5. 'et' → logprob: -6.305723190307617
    6. '#' → logprob: -6.680723190307617
    7. ' #' → logprob: -7.430723190307617
    8. 'h' → logprob: -7.430723190307617
    9. ' ' → logprob: -7.930723190307617
    10. 'ligne' → logprob: -8.305723190307617

Token 125: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231875777244568
    2. '[' → logprob: -1.8981876373291016
    3. 's' → logprob: -1.8981876373291016
    4. ' :' → logprob: -3.3981876373291016
    5. ' suivante' → logprob: -4.523187637329102
    6. ':' → logprob: -4.773187637329102
    7. '[]' → logprob: -5.023187637329102
    8. '_bloc' → logprob: -5.273187637329102
    9. '=' → logprob: -5.523187637329102
    10. ',' → logprob: -5.523187637329102

Token 126: ' b' (ID: 287)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8191797733306885
    2. ' [' → logprob: -1.3191797733306885
    3. 'blocks' → logprob: -2.3191797733306885
    4. 'layers' → logprob: -3.5691797733306885
    5. ' blocks' → logprob: -3.8191797733306885
    6. 'levels' → logprob: -3.9441797733306885
    7. 'tower' → logprob: -4.069179534912109
    8. ' blocs' → logprob: -4.069179534912109
    9. ' L' → logprob: -4.819179534912109
    10. ' tower' → logprob: -4.819179534912109

Token 127: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4755256772041321
    2. '_' → logprob: -1.6005256175994873
    3. 's' → logprob: -2.9755256175994873
    4. 'es' → logprob: -3.6005256175994873
    5. '=' → logprob: -3.7255256175994873
    6. 'locks' → logprob: -3.9755256175994873
    7. '_par' → logprob: -4.475525856018066
    8. '[]' → logprob: -4.600525856018066
    9. '_l' → logprob: -5.475525856018066
    10. 'l' → logprob: -5.475525856018066

Token 128: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44051042199134827
    2. ',' → logprob: -1.3155103921890259
    3. '=' → logprob: -2.6905105113983154
    4. ' ,' → logprob: -4.440510272979736
    5. 's' → logprob: -5.190510272979736
    6. ' ' → logprob: -7.065510272979736
    7. '[' → logprob: -7.315510272979736
    8. '=[' → logprob: -8.690510749816895
    9. ' =[' → logprob: -8.690510749816895
    10. '=[]' → logprob: -8.815510749816895

Token 129: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.029832525178790092
    2. 'b' → logprob: -3.529832601547241
    3. ' ,' → logprob: -10.40483283996582
    4. ' ' → logprob: -10.65483283996582
    5. ',' → logprob: -11.02983283996582
    6. ' ' → logprob: -11.90483283996582
    7. '...' → logprob: -13.77983283996582
    8. '#' → logprob: -14.02983283996582
    9. ' #' → logprob: -14.27983283996582
    10. '<|end|>' → logprob: -14.52983283996582

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.15441757265944e-05
    2. '_' → logprob: -10.500031471252441
    3. '₂' → logprob: -12.625031471252441
    4. ' ' → logprob: -15.500031471252441
    5. ',' → logprob: -15.750031471252441
    6. 'b' → logprob: -16.000032424926758
    7. '+' → logprob: -17.000032424926758
    8. '1' → logprob: -18.000032424926758
    9. 'u' → logprob: -18.125032424926758
    10. '-' → logprob: -18.500032424926758

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0075181275606155396
    2. ' ,' → logprob: -5.132518291473389
    3. ' =' → logprob: -7.007518291473389
    4. '=' → logprob: -8.00751781463623
    5. 'b' → logprob: -9.25751781463623
    6. '<|end|>' → logprob: -9.63251781463623
    7. ')' → logprob: -10.00751781463623
    8. ',b' → logprob: -10.13251781463623
    9. ',...' → logprob: -10.50751781463623
    10. ',
' → logprob: -11.63251781463623

Token 132: ' ...,' (ID: 126708)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.0414605438709259
    2. 'b' → logprob: -3.2914605140686035
    3. '...' → logprob: -5.7914605140686035
    4. ',' → logprob: -9.041460990905762
    5. ' ' → logprob: -9.541460990905762
    6. ' ...' → logprob: -9.791460990905762
    7. '...,' → logprob: -10.291460990905762
    8. ' ,' → logprob: -10.541460990905762
    9. '#' → logprob: -11.041460990905762
    10. 's' → logprob: -11.541460990905762

Token 133: ' bh' (ID: 11387)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.25624749064445496
    2. 'b' → logprob: -2.1312475204467773
    3. ' h' → logprob: -3.1312475204467773
    4. '...' → logprob: -3.7562475204467773
    5. ' bh' → logprob: -4.381247520446777
    6. 'bh' → logprob: -4.756247520446777
    7. 'h' → logprob: -5.381247520446777
    8. ' bn' → logprob: -5.506247520446777
    9. ' n' → logprob: -5.631247520446777
    10. 'bn' → logprob: -6.131247520446777

Token 134: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.20005495846271515
    2. ',' → logprob: -2.575054883956909
    3. '```' → logprob: -3.825054883956909
    4. '
' → logprob: -3.950054883956909
    5. ',
' → logprob: -4.075055122375488
    6. 'b' → logprob: -4.450055122375488
    7. ' =' → logprob: -4.700055122375488
    8. '.' → logprob: -5.700055122375488
    9. ' #' → logprob: -5.825055122375488
    10. ' ' → logprob: -5.825055122375488

Token 135: 'bi' (ID: 6738)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07853620499372482
    2. ').' → logprob: -3.07853627204895
    3. ' )' → logprob: -4.203536033630371
    4. '),' → logprob: -5.328536033630371
    5. ',' → logprob: -5.453536033630371
    6. ')
' → logprob: -6.953536033630371
    7. '#' → logprob: -7.453536033630371
    8. 'b' → logprob: -7.453536033630371
    9. '):' → logprob: -7.453536033630371
    10. ')...' → logprob: -7.578536033630371

Token 136: ' >=' (ID: 5064)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.263018250465393
    2. ' =' → logprob: -1.513018250465393
    3. ')' → logprob: -1.888018250465393
    4. ' >=' → logprob: -2.5130181312561035
    5. ',' → logprob: -2.6380181312561035
    6. ' )' → logprob: -3.6380181312561035
    7. '=' → logprob: -3.6380181312561035
    8. '_' → logprob: -3.7630181312561035
    9. '[' → logprob: -3.7630181312561035
    10. ' ≥' → logprob: -3.7630181312561035

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21991612017154694
    2. 'b' → logprob: -1.9699161052703857
    3. ' b' → logprob: -3.4699161052703857
    4. ' ' → logprob: -4.094916343688965
    5. 'bi' → logprob: -4.719916343688965
    6. 'bj' → logprob: -7.594916343688965
    7. ' bi' → logprob: -7.969916343688965
    8. '0' → logprob: -8.469916343688965
    9. ' bj' → logprob: -9.844916343688965
    10. '2' → logprob: -9.969916343688965

Token 138: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5920266509056091
    2. '1' → logprob: -0.9670266509056091
    3. 'bi' → logprob: -2.842026710510254
    4. ' b' → logprob: -5.467026710510254
    5. 'bj' → logprob: -5.842026710510254
    6. ' ' → logprob: -7.342026710510254
    7. '0' → logprob: -8.342026710510254
    8. ' bi' → logprob: -8.967026710510254
    9. 'bk' → logprob: -10.467026710510254
    10. '2' → logprob: -10.717026710510254

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10973801463842392
    2. ',' → logprob: -2.3597381114959717
    3. ' )' → logprob: -5.109737873077393
    4. '),' → logprob: -6.484737873077393
    5. ',)' → logprob: -7.359737873077393
    6. '):' → logprob: -7.484737873077393
    7. ' ,' → logprob: -8.23473834991455
    8. '#' → logprob: -8.98473834991455
    9. ').' → logprob: -9.60973834991455
    10. ',
' → logprob: -10.35973834991455

Token 140: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0089192390441895
    2. '
' → logprob: -1.7589192390441895
    3. ' 
' → logprob: -2.0089192390441895
    4. ',' → logprob: -2.3839192390441895
    5. '\' → logprob: -2.7589192390441895
    6. '```' → logprob: -2.7589192390441895
    7. ' ' → logprob: -3.6339192390441895
    8. ',
' → logprob: -4.0089192390441895
    9. 'b' → logprob: -4.5089192390441895
    10. 'def' → logprob: -4.6339192390441895

Token 141: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6872871518135071
    2. ',' → logprob: -2.0622870922088623
    3. '```' → logprob: -2.1872870922088623
    4. 'b' → logprob: -3.1872870922088623
    5. ' ' → logprob: -3.3122870922088623
    6. ' b' → logprob: -3.4372870922088623
    7. '\' → logprob: -3.4372870922088623
    8. '[' → logprob: -3.5622870922088623
    9. ' =' → logprob: -4.812287330627441
    10. ' 
' → logprob: -4.937287330627441

Token 142: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7964560389518738
    2. 'def' → logprob: -1.5464560985565186
    3. ' On' → logprob: -2.6714560985565186
    4. 'On' → logprob: -2.7964560985565186
    5. 'for' → logprob: -3.0464560985565186
    6. ' #' → logprob: -3.1714560985565186
    7. ' for' → logprob: -3.5464560985565186
    8. ' def' → logprob: -3.5464560985565186
    9. 'Pour' → logprob: -4.7964558601379395
    10. ' b' → logprob: -5.1714558601379395

Token 143: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.6155140995979309
    2. 's' → logprob: -1.3655140399932861
    3. ' contr' → logprob: -1.8655140399932861
    4. ' condition' → logprob: -4.365514278411865
    5. ' masse' → logprob: -4.490514278411865
    6. 'condition' → logprob: -4.990514278411865
    7. '#' → logprob: -5.490514278411865
    8. 'contr' → logprob: -6.240514278411865
    9. ' suite' → logprob: -6.865514278411865
    10. 'po' → logprob: -7.115514278411865

Token 144: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11378856748342514
    2. 'des' → logprob: -3.238788604736328
    3. '_des' → logprob: -3.363788604736328
    4. '_' → logprob: -4.488788604736328
    5. ' totale' → logprob: -5.113788604736328
    6. ' b' → logprob: -5.738788604736328
    7. '_b' → logprob: -5.738788604736328
    8. 'b' → logprob: -6.238788604736328
    9. ' =' → logprob: -6.363788604736328
    10. ' de' → logprob: -6.488788604736328

Token 145: ' bi' (ID: 4424)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8625713586807251
    2. 'b' → logprob: -1.237571358680725
    3. 'bi' → logprob: -1.487571358680725
    4. ' bi' → logprob: -3.1125712394714355
    5. ' blocs' → logprob: -5.2375712394714355
    6. 'bl' → logprob: -5.6125712394714355
    7. 'bj' → logprob: -5.9875712394714355
    8. ' bj' → logprob: -6.4875712394714355
    9. 'bloc' → logprob: -7.2375712394714355
    10. ' poids' → logprob: -7.3625712394714355

Token 146: ' est' (ID: 893)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6770048141479492
    2. ' ' → logprob: -2.052004814147949
    3. ' est' → logprob: -2.052004814147949
    4. '<|end|>' → logprob: -3.302004814147949
    5. ' >=' → logprob: -3.677004814147949
    6. ' ' → logprob: -3.802004814147949
    7. ' <=' → logprob: -3.802004814147949
    8. ' =' → logprob: -4.177004814147949
    9. ' doit' → logprob: -4.302004814147949
    10. '>=' → logprob: -4.552004814147949

Token 147: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.1687414646148682
    2. ' <=' → logprob: -1.6687414646148682
    3. ' inf' → logprob: -1.9187414646148682
    4. 'n' → logprob: -2.543741464614868
    5. ' n' → logprob: -2.543741464614868
    6. ' ' → logprob: -3.293741464614868
    7. ' ég' → logprob: -3.418741464614868
    8. 'inf' → logprob: -3.668741464614868
    9. ' N' → logprob: -3.918741464614868
    10. ' au' → logprob: -4.043741226196289

Token 148: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.242751955986023
    2. ' K' → logprob: -1.367751955986023
    3. 'N' → logprob: -1.867751955986023
    4. ' N' → logprob: -2.2427520751953125
    5. ' n' → logprob: -2.3677520751953125
    6. 'n' → logprob: -2.3677520751953125
    7. ' ' → logprob: -5.9927520751953125
    8. 'S' → logprob: -6.8677520751953125
    9. ' S' → logprob: -6.9927520751953125
    10. 'B' → logprob: -7.8677520751953125

Token 149: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9595778584480286
    2. ',' → logprob: -1.3345777988433838
    3. '```' → logprob: -2.209577798843384
    4. ' ' → logprob: -2.709577798843384
    5. 'def' → logprob: -3.084577798843384
    6. ' b' → logprob: -3.834577798843384
    7. 'b' → logprob: -3.959577798843384
    8. '.' → logprob: -3.959577798843384
    9. ' ,' → logprob: -4.209578037261963
    10. '\' → logprob: -4.709578037261963

Token 150: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3109650611877441
    2. '#' → logprob: -1.4359650611877441
    3. 'def' → logprob: -1.8109650611877441
    4. ',' → logprob: -2.185965061187744
    5. ' ' → logprob: -2.810965061187744
    6. '```' → logprob: -2.935965061187744
    7. ' b' → logprob: -3.560965061187744
    8. '\' → logprob: -4.310965061187744
    9. ' 
' → logprob: -4.560965061187744
    10. '[' → logprob: -4.935965061187744

Token 151: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8289192914962769
    2. '#' → logprob: -1.4539192914962769
    3. 'def' → logprob: -1.7039192914962769
    4. '```' → logprob: -3.0789194107055664
    5. ',' → logprob: -3.9539194107055664
    6. ' ```' → logprob: -4.328919410705566
    7. ' #' → logprob: -4.578919410705566
    8. ' b' → logprob: -4.578919410705566
    9. 'b' → logprob: -4.703919410705566
    10. '[' → logprob: -5.453919410705566

Token 152: ' Le' (ID: 2018)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5248976945877075
    2. 'def' → logprob: -1.6498976945877075
    3. '#' → logprob: -1.8998976945877075
    4. ' b' → logprob: -2.274897575378418
    5. 'On' → logprob: -2.524897575378418
    6. 'for' → logprob: -2.649897575378418
    7. 'b' → logprob: -3.274897575378418
    8. ' for' → logprob: -3.649897575378418
    9. 'import' → logprob: -3.899897575378418
    10. ' def' → logprob: -4.149897575378418

Token 153: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.08511486649513245
    2. ' code' → logprob: -3.0851149559020996
    3. ' bloc' → logprob: -5.3351149559021
    4. ' po' → logprob: -5.5851149559021
    5. '#' → logprob: -5.7101149559021
    6. 'po' → logprob: -6.0851149559021
    7. ' problème' → logprob: -6.2101149559021
    8. ' passage' → logprob: -6.3351149559021
    9. ' but' → logprob: -6.5851149559021
    10. 's' → logprob: -6.5851149559021

Token 154: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.6834394335746765
    2. 'sur' → logprob: -2.0584394931793213
    3. '_sur' → logprob: -2.1834394931793213
    4. '_' → logprob: -2.4334394931793213
    5. ' ' → logprob: -2.8084394931793213
    6. ' des' → logprob: -2.8084394931793213
    7. ' ' → logprob: -4.933439254760742
    8. ' maximal' → logprob: -4.933439254760742
    9. '_total' → logprob: -5.308439254760742
    10. ' maximum' → logprob: -5.683439254760742

Token 155: ' chaque' (ID: 21194)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.382866233587265
    2. 'le' → logprob: -1.7578662633895874
    3. ' chaque' → logprob: -3.132866144180298
    4. 'l' → logprob: -3.257866144180298
    5. ' l' → logprob: -3.507866144180298
    6. ' un' → logprob: -4.632866382598877
    7. 'b' → logprob: -4.882866382598877
    8. ' b' → logprob: -5.507866382598877
    9. ' les' → logprob: -5.757866382598877
    10. 'un' → logprob: -5.757866382598877

Token 156: ' bloc' (ID: 51218)
  Prédit: ' bloc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bloc' → logprob: -0.8889489769935608
    2. 'bloc' → logprob: -1.138948917388916
    3. ' étage' → logprob: -1.388948917388916
    4. ' b' → logprob: -5.513948917388916
    5. '_bloc' → logprob: -5.763948917388916
    6. 'b' → logprob: -5.888948917388916
    7. 'ét' → logprob: -6.638948917388916
    8. 'block' → logprob: -6.763948917388916
    9. 'bl' → logprob: -6.763948917388916
    10. ' block' → logprob: -6.888948917388916

Token 157: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.10662437975406647
    2. ' est' → logprob: -3.4816243648529053
    3. ' ' → logprob: -3.8566243648529053
    4. ' =' → logprob: -4.356624603271484
    5. ' de' → logprob: -4.731624603271484
    6. 'à' → logprob: -5.481624603271484
    7. ' des' → logprob: -5.606624603271484
    8. ' at' → logprob: -5.731624603271484
    9. ' au' → logprob: -5.981624603271484
    10. '<|end|>' → logprob: -6.356624603271484

Token 158: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1612282544374466
    2. ' l' → logprob: -1.9112282991409302
    3. ' étage' → logprob: -8.28622817993164
    4. ' chaque' → logprob: -8.53622817993164
    5. 'i' → logprob: -9.41122817993164
    6. '```' → logprob: -9.41122817993164
    7. ' i' → logprob: -10.16122817993164
    8. '	l' → logprob: -10.16122817993164
    9. ' ' → logprob: -10.16122817993164
    10. ' un' → logprob: -10.41122817993164

Token 159: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.10047030448913574
    2. 'ét' → logprob: -2.6004703044891357
    3. ' étage' → logprob: -3.9754703044891357
    4. '’ét' → logprob: -7.475470542907715
    5. 'a' → logprob: -7.725470542907715
    6. ''' → logprob: -8.350470542907715
    7. '#' → logprob: -8.475470542907715
    8. 'éta' → logprob: -8.725470542907715
    9. ''é' → logprob: -8.850470542907715
    10. ''intérieur' → logprob: -9.225470542907715

Token 160: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0025736368261277676
    2. 'ag' → logprob: -6.377573490142822
    3. 'a' → logprob: -8.37757396697998
    4. 'at' → logprob: -8.62757396697998
    5. '#' → logprob: -8.87757396697998
    6. 'âge' → logprob: -9.37757396697998
    7. 'agé' → logprob: -9.62757396697998
    8. 'tage' → logprob: -9.62757396697998
    9. 'aget' → logprob: -11.62757396697998
    10. 'ages' → logprob: -11.75257396697998

Token 161: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23230239748954773
    2. 'i' → logprob: -1.6073024272918701
    3. ' h' → logprob: -5.357302188873291
    4. 'h' → logprob: -6.607302188873291
    5. '_i' → logprob: -8.48230266571045
    6. ' (' → logprob: -8.60730266571045
    7. ' ' → logprob: -9.35730266571045
    8. '1' → logprob: -9.35730266571045
    9. ' suivante' → logprob: -9.73230266571045
    10. ' ' → logprob: -10.48230266571045

Token 162: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.10824481397867203
    2. ' i' → logprob: -4.108244895935059
    3. '-' → logprob: -4.233244895935059
    4. ' doit' → logprob: -4.358244895935059
    5. ' =' → logprob: -4.483244895935059
    6. ' ' → logprob: -4.608244895935059
    7. '+' → logprob: -4.733244895935059
    8. 'i' → logprob: -4.858244895935059
    9. '=' → logprob: -5.108244895935059
    10. ',' → logprob: -5.733244895935059

Token 163: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1192018911242485
    2. ' b' → logprob: -2.994201898574829
    3. '(' → logprob: -3.869201898574829
    4. 'b' → logprob: -5.11920166015625
    5. '(b' → logprob: -5.11920166015625
    6. '```' → logprob: -5.24420166015625
    7. ' max' → logprob: -5.36920166015625
    8. ' ' → logprob: -5.61920166015625
    9. ' K' → logprob: -6.61920166015625
    10. ' \' → logprob: -6.74420166015625

Token 164: ' poids' (ID: 56058)
  Prédit: ' poids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -0.6392300724983215
    2. ' nombre' → logprob: -1.8892300128936768
    3. ' maximum' → logprob: -2.0142300128936768
    4. ' sum' → logprob: -2.6392300128936768
    5. ' max' → logprob: -2.8892300128936768
    6. ' somme' → logprob: -3.6392300128936768
    7. 'sum' → logprob: -5.014230251312256
    8. 's' → logprob: -5.014230251312256
    9. 'max' → logprob: -5.264230251312256
    10. 'po' → logprob: -5.514230251312256

Token 165: ' total' (ID: 3609)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11006835848093033
    2. ' sur' → logprob: -3.6100683212280273
    3. ' de' → logprob: -4.610068321228027
    4. ' suivant' → logprob: -4.735068321228027
    5. ' au' → logprob: -4.860068321228027
    6. ' total' → logprob: -4.860068321228027
    7. '[i' → logprob: -5.235068321228027
    8. ' du' → logprob: -5.235068321228027
    9. ' précédent' → logprob: -5.485068321228027
    10. 'sur' → logprob: -5.985068321228027

Token 166: ' au' (ID: 2791)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.03793521225452423
    2. '_' → logprob: -5.537935256958008
    3. ' de' → logprob: -5.662935256958008
    4. 'des' → logprob: -5.662935256958008
    5. ' au' → logprob: -5.662935256958008
    6. ' ' → logprob: -5.912935256958008
    7. '[i' → logprob: -6.287935256958008
    8. ' sur' → logprob: -6.287935256958008
    9. '_des' → logprob: -6.412935256958008
    10. '(i' → logprob: -6.412935256958008

Token 167: '-dessus' (ID: 74812)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8569968342781067
    2. '-dessus' → logprob: -1.106996774673462
    3. ' dessus' → logprob: -1.856996774673462
    4. ' i' → logprob: -2.981996774673462
    5. 'ét' → logprob: -4.606997013092041
    6. ' étage' → logprob: -4.731997013092041
    7. '(i' → logprob: -4.856997013092041
    8. ' (' → logprob: -5.856997013092041
    9. '+' → logprob: -6.231997013092041
    10. ' ' → logprob: -6.356997013092041

Token 168: ' (' (ID: 350)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9589566588401794
    2. ' i' → logprob: -1.7089567184448242
    3. ' /' → logprob: -1.8339567184448242
    4. 'i' → logprob: -2.583956718444824
    5. '*' → logprob: -3.333956718444824
    6. '(i' → logprob: -3.708956718444824
    7. ' ' → logprob: -3.833956718444824
    8. ' +' → logprob: -4.208956718444824
    9. ' multip' → logprob: -4.208956718444824
    10. '[i' → logprob: -4.333956718444824

Token 169: 'b' (ID: 65)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1153833866119385
    2. ' /' → logprob: -1.1153833866119385
    3. ' i' → logprob: -1.9903833866119385
    4. ' *' → logprob: -2.6153833866119385
    5. ')' → logprob: -3.4903833866119385
    6. '*' → logprob: -3.8653833866119385
    7. '[i' → logprob: -4.365383148193359
    8. '/' → logprob: -4.615383148193359
    9. 'div' → logprob: -4.615383148193359
    10. '+' → logprob: -4.740383148193359

Token 170: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013667525723576546
    2. '_{' → logprob: -5.138667583465576
    3. '[i' → logprob: -5.388667583465576
    4. '{i' → logprob: -6.763667583465576
    5. '_i' → logprob: -6.888667583465576
    6. '(i' → logprob: -7.513667583465576
    7. ' i' → logprob: -8.013667106628418
    8. '_' → logprob: -11.263667106628418
    9. '_(' → logprob: -11.388667106628418
    10. 's' → logprob: -11.513667106628418

Token 171: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12853319942951202
    2. '+' → logprob: -2.128533124923706
    3. ' *' → logprob: -6.878533363342285
    4. '*' → logprob: -8.253533363342285
    5. ')' → logprob: -9.878533363342285
    6. ' plus' → logprob: -10.128533363342285
    7. 's' → logprob: -10.503533363342285
    8. '-' → logprob: -10.503533363342285
    9. ' -' → logprob: -10.753533363342285
    10. '1' → logprob: -10.878533363342285

Token 172: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7383476495742798
    2. ' b' → logprob: -1.2383476495742798
    3. '...' → logprob: -1.8633476495742798
    4. ' ...' → logprob: -2.6133475303649902
    5. ' +' → logprob: -6.61334753036499
    6. '1' → logprob: -6.98834753036499
    7. '+' → logprob: -7.73834753036499
    8. ' ' → logprob: -7.98834753036499
    9. '...
' → logprob: -8.738348007202148
    10. ' (' → logprob: -8.988348007202148

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4604658782482147
    2. 'i' → logprob: -1.085465908050537
    3. '+' → logprob: -3.710465908050537
    4. '1' → logprob: -5.960465908050537
    5. ' i' → logprob: -6.835465908050537
    6. '[i' → logprob: -7.460465908050537
    7. ' ' → logprob: -7.585465908050537
    8. '[' → logprob: -7.835465908050537
    9. '```' → logprob: -8.460465431213379
    10. ' +' → logprob: -8.835465431213379

Token 174: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4751908779144287
    2. '+' → logprob: -0.9751908779144287
    3. ')' → logprob: -6.975191116333008
    4. ' )' → logprob: -9.475191116333008
    5. '-' → logprob: -10.850191116333008
    6. '+)' → logprob: -10.975191116333008
    7. ')+' → logprob: -11.225191116333008
    8. '*' → logprob: -11.600191116333008
    9. '...' → logprob: -11.725191116333008
    10. '+b' → logprob: -12.350191116333008

Token 175: ' ...' (ID: 2550)
  Prédit: ' ...'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ...' → logprob: -1.1256028413772583
    2. ' +' → logprob: -1.3756028413772583
    3. ' b' → logprob: -1.8756028413772583
    4. '+' → logprob: -2.1256027221679688
    5. '...' → logprob: -2.5006027221679688
    6. 'b' → logprob: -2.7506027221679688
    7. ' ' → logprob: -6.125602722167969
    8. 'i' → logprob: -7.750602722167969
    9. ')' → logprob: -7.875602722167969
    10. ' i' → logprob: -8.125602722167969

Token 176: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5872483253479004
    2. '+' → logprob: -0.8372483253479004
    3. 'i' → logprob: -5.0872483253479
    4. ')' → logprob: -5.9622483253479
    5. '...' → logprob: -7.8372483253479
    6. ' i' → logprob: -7.9622483253479
    7. '_i' → logprob: -8.087247848510742
    8. ' )' → logprob: -8.337247848510742
    9. ',' → logprob: -8.587247848510742
    10. '-' → logprob: -8.712247848510742

Token 177: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012552506290376186
    2. ' b' → logprob: -4.512552738189697
    3. 'bi' → logprob: -6.512552738189697
    4. ' bi' → logprob: -11.012552261352539
    5. 'i' → logprob: -13.762552261352539
    6. ' ' → logprob: -14.887552261352539
    7. '   ' → logprob: -15.137552261352539
    8. ' i' → logprob: -15.262552261352539
    9. ' ' → logprob: -15.637552261352539
    10. '	b' → logprob: -15.887552261352539

Token 178: '_{' (ID: 22305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.056991688907146454
    2. '+' → logprob: -3.5569915771484375
    3. '-' → logprob: -4.1819915771484375
    4. ')' → logprob: -5.0569915771484375
    5. '1' → logprob: -5.6819915771484375
    6. ' i' → logprob: -7.4319915771484375
    7. ')i' → logprob: -8.306991577148438
    8. '_i' → logprob: -9.056991577148438
    9. '+)' → logprob: -9.181991577148438
    10. '(i' → logprob: -9.306991577148438

Token 179: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.65101717156358e-05
    2. '{i' → logprob: -9.750096321105957
    3. ' i' → logprob: -10.500096321105957
    4. '(i' → logprob: -11.625096321105957
    5. 'j' → logprob: -14.625096321105957
    6. '
' → logprob: -15.250096321105957
    7. '{' → logprob: -16.000097274780273
    8. '   ' → logprob: -16.000097274780273
    9. '_{' → logprob: -16.000097274780273
    10. '```' → logprob: -16.125097274780273

Token 180: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4314533472061157
    2. '-' → logprob: -1.0564533472061157
    3. ')' → logprob: -7.306453227996826
    4. '1' → logprob: -7.556453227996826
    5. ' +' → logprob: -7.556453227996826
    6. 'plus' → logprob: -8.056453704833984
    7. '+)' → logprob: -8.181453704833984
    8. ' -' → logprob: -8.931453704833984
    9. '−' → logprob: -9.056453704833984
    10. '-)' → logprob: -10.431453704833984

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ')' → logprob: -12.000014305114746
    3. ' ' → logprob: -12.375014305114746
    4. 'i' → logprob: -13.375014305114746
    5. '2' → logprob: -13.750014305114746
    6. '```' → logprob: -14.875014305114746
    7. '4' → logprob: -15.500014305114746
    8. '0' → logprob: -15.500014305114746
    9. '`)' → logprob: -16.000015258789062
    10. '+' → logprob: -16.625015258789062

Token 182: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006620162166655064
    2. ' )' → logprob: -5.131619930267334
    3. ')/' → logprob: -8.131620407104492
    4. '-' → logprob: -9.756620407104492
    5. '+' → logprob: -9.756620407104492
    6. '")' → logprob: -9.881620407104492
    7. '})' → logprob: -10.006620407104492
    8. '`)' → logprob: -10.506620407104492
    9. '}' → logprob: -10.756620407104492
    10. '')' → logprob: -11.006620407104492

Token 183: ' div' (ID: 4223)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.21728329360485077
    2. '/' → logprob: -1.7172832489013672
    3. 'div' → logprob: -4.717283248901367
    4. ')' → logprob: -6.717283248901367
    5. '#' → logprob: -6.842283248901367
    6. ' ' → logprob: -6.967283248901367
    7. ' ' → logprob: -7.092283248901367
    8. ' #' → logprob: -7.467283248901367
    9. ' //' → logprob: -8.217283248901367
    10. ' *' → logprob: -8.342283248901367

Token 184: 'isé' (ID: 30065)
  Prédit: 'isé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.0002550217031966895
    2. 'isés' → logprob: -9.12525463104248
    3. 'isée' → logprob: -9.37525463104248
    4. 'is' → logprob: -10.12525463104248
    5. 'isées' → logprob: -11.62525463104248
    6. 'ise' → logprob: -12.87525463104248
    7. '_' → logprob: -13.75025463104248
    8. 'id' → logprob: -13.87525463104248
    9. 'i' → logprob: -14.37525463104248
    10. 'idé' → logprob: -14.50025463104248

Token 185: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.48073020577430725
    2. 'par' → logprob: -0.9807301759719849
    3. 'by' → logprob: -5.355730056762695
    4. ' by' → logprob: -7.230730056762695
    5. ' b' → logprob: -7.980730056762695
    6. 'b' → logprob: -8.730730056762695
    7. ' (' → logprob: -9.105730056762695
    8. ' ' → logprob: -9.605730056762695
    9. ')' → logprob: -9.730730056762695
    10. 'sur' → logprob: -9.855730056762695

Token 186: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.3599150776863098
    2. 'b' → logprob: -1.859915018081665
    3. ' bi' → logprob: -2.234915018081665
    4. ' b' → logprob: -3.234915018081665
    5. '```' → logprob: -9.859914779663086
    6. ' ' → logprob: -10.109914779663086
    7. ' ' → logprob: -10.484914779663086
    8. '`' → logprob: -11.484914779663086
    9. ' bii' → logprob: -11.484914779663086
    10. ' (' → logprob: -11.734914779663086

Token 187: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0080088376998901
    2. '#' → logprob: -1.1330088376998901
    3. '.' → logprob: -2.1330089569091797
    4. '
' → logprob: -2.7580089569091797
    5. ',
' → logprob: -3.5080089569091797
    6. 'def' → logprob: -3.6330089569091797
    7. 'import' → logprob: -4.13300895690918
    8. 'b' → logprob: -4.75800895690918
    9. '\' → logprob: -4.88300895690918
    10. '```' → logprob: -5.25800895690918

Token 188: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.934981644153595
    2. '\' → logprob: -1.6849815845489502
    3. ',' → logprob: -1.8099815845489502
    4. 'b' → logprob: -2.93498158454895
    5. '\n' → logprob: -3.05998158454895
    6. 'i' → logprob: -3.18498158454895
    7. '.' → logprob: -3.55998158454895
    8. ',
' → logprob: -4.434981822967529
    9. '_' → logprob: -4.434981822967529
    10. '```' → logprob: -4.809981822967529

Token 189: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.855300784111023
    2. ',' → logprob: -2.2303009033203125
    3. 'b' → logprob: -2.2303009033203125
    4. 'def' → logprob: -2.3553009033203125
    5. ' ' → logprob: -2.9803009033203125
    6. 'i' → logprob: -3.3553009033203125
    7. '_' → logprob: -3.6053009033203125
    8. ' b' → logprob: -3.9803009033203125
    9. ' 
' → logprob: -4.1053009033203125
    10. ')' → logprob: -4.3553009033203125

Token 190: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0348024368286133
    2. '#' → logprob: -1.1598024368286133
    3. 'for' → logprob: -1.7848024368286133
    4. 'On' → logprob: -2.6598024368286133
    5. 'Pour' → logprob: -3.9098024368286133
    6. ' for' → logprob: -4.534802436828613
    7. ' def' → logprob: -4.659802436828613
    8. 'b' → logprob: -4.659802436828613
    9. ' On' → logprob: -4.909802436828613
    10. 'from' → logprob: -5.034802436828613

Token 191: ' valeur' (ID: 41664)
  Prédit: ' contr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contr' → logprob: -0.09275634586811066
    2. ' condition' → logprob: -3.3427562713623047
    3. 'contr' → logprob: -3.8427562713623047
    4. 'condition' → logprob: -4.967756271362305
    5. 's' → logprob: -5.717756271362305
    6. ' somme' → logprob: -5.967756271362305
    7. 'po' → logprob: -6.217756271362305
    8. 'pression' → logprob: -6.342756271362305
    9. ' poids' → logprob: -6.467756271362305
    10. 'div' → logprob: -7.092756271362305

Token 192: ' doit' (ID: 21822)
  Prédit: ' doit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.08473411202430725
    2. ' <=' → logprob: -2.7097342014312744
    3. ' must' → logprob: -4.709733963012695
    4. ' ne' → logprob: -6.709733963012695
    5. '<=' → logprob: -7.084733963012695
    6. ' est' → logprob: -7.459733963012695
    7. 'must' → logprob: -7.459733963012695
    8. ' ' → logprob: -7.584733963012695
    9. ' ≤' → logprob: -7.709733963012695
    10. 'do' → logprob: -7.834733963012695

Token 193: ' être' (ID: 9104)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5898115634918213
    2. ' être' → logprob: -1.2148115634918213
    3. '<=' → logprob: -2.0898115634918213
    4. 'être' → logprob: -4.089811325073242
    5. ' etre' → logprob: -6.214811325073242
    6. '_' → logprob: -7.214811325073242
    7. ' <' → logprob: -7.339811325073242
    8. '=' → logprob: -7.339811325073242
    9. ' be' → logprob: -7.464811325073242
    10. ' ' → logprob: -7.464811325073242

Token 194: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.015511970035731792
    2. ' <=' → logprob: -4.640511989593506
    3. 'inf' → logprob: -5.265511989593506
    4. '<' → logprob: -8.140511512756348
    5. '≤' → logprob: -8.890511512756348
    6. ' inf' → logprob: -9.515511512756348
    7. 'infer' → logprob: -10.390511512756348
    8. '```' → logprob: -11.140511512756348
    9. '\' → logprob: -11.890511512756348
    10. ' inférieur' → logprob: -13.515511512756348

Token 195: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3868943452835083
    2. ' K' → logprob: -1.1368943452835083
    3. ' ' → logprob: -11.136894226074219
    4. ' ' → logprob: -12.011894226074219
    5. 'k' → logprob: -13.511894226074219
    6. ''' → logprob: -14.386894226074219
    7. '	K' → logprob: -15.761894226074219
    8. '"' → logprob: -15.886894226074219
    9. '`' → logprob: -15.886894226074219
    10. ' k' → logprob: -16.51189422607422

Token 196: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06594089418649673
    2. '
' → logprob: -2.9409408569335938
    3. '```' → logprob: -5.565940856933594
    4. 'import' → logprob: -6.065940856933594
    5. '\' → logprob: -6.565940856933594
    6. '#' → logprob: -7.190940856933594
    7. 'from' → logprob: -7.190940856933594
    8. ' 
' → logprob: -7.440940856933594
    9. '

' → logprob: -7.940940856933594
    10. 'n' → logprob: -8.065940856933594

Token 197: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0736788511276245
    2. '#' → logprob: -1.3236788511276245
    3. '
' → logprob: -1.5736788511276245
    4. ' 
' → logprob: -2.573678970336914
    5. 'b' → logprob: -2.823678970336914
    6. '\' → logprob: -4.073678970336914
    7. 'n' → logprob: -4.573678970336914
    8. '

' → logprob: -5.823678970336914
    9. '```' → logprob: -5.823678970336914
    10. '\n' → logprob: -5.948678970336914

Token 198: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4084562361240387
    2. '
' → logprob: -1.4084562063217163
    3. ' 
' → logprob: -3.283456325531006
    4. '#' → logprob: -4.158456325531006
    5. 'b' → logprob: -4.408456325531006
    6. '\' → logprob: -4.783456325531006
    7. 'n' → logprob: -4.908456325531006
    8. '

' → logprob: -5.908456325531006
    9. '```' → logprob: -6.033456325531006
    10. '\n' → logprob: -7.033456325531006

Token 199: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0021263493690639734
    2. '#' → logprob: -6.252126216888428
    3. 'from' → logprob: -10.002126693725586
    4. 'b' → logprob: -10.127126693725586
    5. 'n' → logprob: -10.127126693725586
    6. 'import' → logprob: -10.127126693725586
    7. 'N' → logprob: -11.127126693725586
    8. '```' → logprob: -11.502126693725586
    9. ' def' → logprob: -13.627126693725586
    10. '\' → logprob: -13.627126693725586

Token 200: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.794061770662665e-05
    2. 'from' → logprob: -9.50009822845459
    3. '#' → logprob: -11.12509822845459
    4. 'import' → logprob: -12.87509822845459
    5. 'N' → logprob: -13.00009822845459
    6. ' def' → logprob: -13.25009822845459
    7. '```' → logprob: -13.87509822845459
    8. 'n' → logprob: -14.37509822845459
    9. ' 
' → logprob: -16.750097274780273
    10. '
' → logprob: -17.375097274780273

Token 201: ' maxim' (ID: 29045)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.2610715627670288
    2. ' construire' → logprob: -2.3860716819763184
    3. ' trouver' → logprob: -3.5110716819763184
    4. ' résoudre' → logprob: -3.5110716819763184
    5. ' poursuivre' → logprob: -4.136071681976318
    6. ' compléter' → logprob: -4.761071681976318
    7. 'contin' → logprob: -4.761071681976318
    8. ' maxim' → logprob: -5.011071681976318
    9. 'con' → logprob: -5.136071681976318
    10. '#' → logprob: -5.261071681976318

Token 202: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.01892285980284214
    2. 'er' → logprob: -4.643922805786133
    3. '#' → logprob: -5.393922805786133
    4. 'ser' → logprob: -5.643922805786133
    5. 'is' → logprob: -8.018922805786133
    6. 'al' → logprob: -8.518922805786133
    7. 'um' → logprob: -9.018922805786133
    8. '```' → logprob: -9.393922805786133
    9. '_' → logprob: -9.518922805786133
    10. 'izer' → logprob: -10.143922805786133

Token 203: ' h' (ID: 312)
  Prédit: '_le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_le' → logprob: -0.8393895030021667
    2. 'le' → logprob: -2.2143895626068115
    3. ' la' → logprob: -2.3393895626068115
    4. ' le' → logprob: -2.4643895626068115
    5. '_' → logprob: -2.5893895626068115
    6. ' ' → logprob: -2.8393895626068115
    7. ' ' → logprob: -3.3393895626068115
    8. '_h' → logprob: -3.3393895626068115
    9. '_la' → logprob: -3.5893895626068115
    10. ' h' → logprob: -4.714389324188232

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004360690712928772
    2. ' ,' → logprob: -5.629360675811768
    3. ':' → logprob: -8.004361152648926
    4. '#' → logprob: -8.754361152648926
    5. 'def' → logprob: -8.879361152648926
    6. ' :' → logprob: -10.254361152648926
    7. ',
' → logprob: -11.004361152648926
    8. ',#' → logprob: -11.254361152648926
    9. ',n' → logprob: -11.629361152648926
    10. ' =' → logprob: -11.879361152648926

Token 205: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.654878556728363
    2. 'on' → logprob: -1.9048786163330078
    3. ' il' → logprob: -2.029878616333008
    4. 'il' → logprob: -2.154878616333008
    5. '#' → logprob: -2.904878616333008
    6. ' nous' → logprob: -4.154878616333008
    7. 'nous' → logprob: -4.404878616333008
    8. ' #' → logprob: -7.279878616333008
    9. ' continu' → logprob: -7.904878616333008
    10. 'n' → logprob: -9.654878616333008

Token 206: ' essay' (ID: 9635)
  Prédit: ' peut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.7777578234672546
    2. ' doit' → logprob: -1.5277578830718994
    3. ' va' → logprob: -2.2777578830718994
    4. ' cherche' → logprob: -2.2777578830718994
    5. ' veut' → logprob: -3.9027578830718994
    6. ' ajoute' → logprob: -4.40275764465332
    7. ' chois' → logprob: -4.52775764465332
    8. ' commence' → logprob: -4.65275764465332
    9. 'def' → logprob: -4.77775764465332
    10. ' construit' → logprob: -4.90275764465332

Token 207: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00510556111112237
    2. 'n' → logprob: -6.380105495452881
    3. 'nt' → logprob: -6.505105495452881
    4. 'er' → logprob: -7.505105495452881
    5. 't' → logprob: -8.005105972290039
    6. '#' → logprob: -8.130105972290039
    7. 'ra' → logprob: -9.005105972290039
    8. 'ent' → logprob: -9.255105972290039
    9. 'era' → logprob: -9.380105972290039
    10. 'r' → logprob: -9.505105972290039

Token 208: ' h' (ID: 312)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6972107291221619
    2. ' de' → logprob: -1.4472107887268066
    3. 'd' → logprob: -1.6972107887268066
    4. 'de' → logprob: -2.5722107887268066
    5. ':' → logprob: -5.447210788726807
    6. ' ' → logprob: -7.197210788726807
    7. ' ' → logprob: -7.697210788726807
    8. ' une' → logprob: -8.197210311889648
    9. ' progressivement' → logprob: -8.197210311889648
    10. 'une' → logprob: -9.197210311889648

Token 209: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09645024687051773
    2. '=' → logprob: -2.5964503288269043
    3. ' +=' → logprob: -4.096450328826904
    4. '+=' → logprob: -7.346450328826904
    5. ' ' → logprob: -10.346449851989746
    6. ' +' → logprob: -10.721449851989746
    7. '+' → logprob: -10.846449851989746
    8. ',' → logprob: -11.096449851989746
    9. 'possible' → logprob: -11.721449851989746
    10. ' possible' → logprob: -12.221449851989746

Token 210: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.611293613910675
    2. 's' → logprob: -0.986293613910675
    3. '=' → logprob: -3.2362935543060303
    4. ' s' → logprob: -3.8612935543060303
    5. ' possible' → logprob: -4.986293792724609
    6. 'possible' → logprob: -5.111293792724609
    7. '_possible' → logprob: -5.861293792724609
    8. ',' → logprob: -6.736293792724609
    9. '_h' → logprob: -6.986293792724609
    10. '_' → logprob: -7.236293792724609

Token 211: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2550707459449768
    2. ' on' → logprob: -1.630070686340332
    3. 'v' → logprob: -4.380070686340332
    4. ' vér' → logprob: -4.380070686340332
    5. 'b' → logprob: -7.255070686340332
    6. 'ver' → logprob: -7.380070686340332
    7. ' vérifier' → logprob: -8.130070686340332
    8. 'binary' → logprob: -8.380070686340332
    9. 'test' → logprob: -8.755070686340332
    10. ' binary' → logprob: -8.755070686340332

Token 212: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.1970117688179016
    2. ' teste' → logprob: -1.9470117092132568
    3. ' essa' → logprob: -4.822011947631836
    4. ' test' → logprob: -5.197011947631836
    5. ' cherche' → logprob: -5.572011947631836
    6. 'v' → logprob: -5.572011947631836
    7. ' peut' → logprob: -6.197011947631836
    8. 'teste' → logprob: -6.197011947631836
    9. ' essay' → logprob: -6.697011947631836
    10. ' continue' → logprob: -6.697011947631836

Token 213: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00010819212911883369
    2. 'if' → logprob: -9.500107765197754
    3. 'ifier' → logprob: -11.125107765197754
    4. 'ifié' → logprob: -12.250107765197754
    5. 'ife' → logprob: -12.625107765197754
    6. 'i' → logprob: -12.750107765197754
    7. 'ifi' → logprob: -12.875107765197754
    8. 'ifiez' → logprob: -13.125107765197754
    9. 'ifiant' → logprob: -13.500107765197754
    10. 'ification' → logprob: -15.125107765197754

Token 214: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.18526461720466614
    2. ' if' → logprob: -2.1852645874023438
    3. ' s' → logprob: -3.1852645874023438
    4. ' ' → logprob: -4.935264587402344
    5. ' la' → logprob: -5.935264587402344
    6. 's' → logprob: -6.935264587402344
    7. ' ' → logprob: -7.185264587402344
    8. '```' → logprob: -7.435264587402344
    9. 'si' → logprob: -7.560264587402344
    10. '  
' → logprob: -7.935264587402344

Token 215: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.41542527079582214
    2. 'i' → logprob: -1.1654253005981445
    3. ''' → logprob: -4.1654253005981445
    4. ''i' → logprob: -4.7904253005981445
    5. 'u' → logprob: -6.0404253005981445
    6. '’il' → logprob: -7.2904253005981445
    7. 'a' → logprob: -8.915425300598145
    8. 'il' → logprob: -8.915425300598145
    9. 'e' → logprob: -9.290425300598145
    10. ''''' → logprob: -9.415425300598145

Token 216: ' existe' (ID: 19498)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.3634175956249237
    2. 'est' → logprob: -2.113417625427246
    3. ' est' → logprob: -2.488417625427246
    4. 'possible' → logprob: -3.488417625427246
    5. ''est' → logprob: -3.613417625427246
    6. '_possible' → logprob: -3.988417625427246
    7. ' existe' → logprob: -4.863417625427246
    8. ' y' → logprob: -5.488417625427246
    9. ''ex' → logprob: -5.738417625427246
    10. 'es' → logprob: -5.988417625427246

Token 217: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4081474542617798
    2. ' un' → logprob: -1.4081474542617798
    3. ' des' → logprob: -2.7831473350524902
    4. ' ' → logprob: -4.15814733505249
    5. 'une' → logprob: -5.03314733505249
    6. 'un' → logprob: -5.28314733505249
    7. ' ' → logprob: -7.28314733505249
    8. 'des' → logprob: -8.783147811889648
    9. '```' → logprob: -8.783147811889648
    10. '_' → logprob: -9.033147811889648

Token 218: ' ré' (ID: 3146)
  Prédit: ' configuration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' configuration' → logprob: -0.3166743516921997
    2. 'configuration' → logprob: -1.3166743516921997
    3. 'config' → logprob: -6.81667423248291
    4. 'distribution' → logprob: -7.19167423248291
    5. 'suite' → logprob: -7.56667423248291
    6. ' distribution' → logprob: -8.56667423248291
    7. ' suite' → logprob: -9.06667423248291
    8. 'conf' → logprob: -9.56667423248291
    9. ' config' → logprob: -9.69167423248291
    10. ' ' → logprob: -9.69167423248291

Token 219: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.010316693224012852
    2. 'part' → logprob: -5.135316848754883
    3. 'ponse' → logprob: -6.135316848754883
    4. 'solution' → logprob: -6.885316848754883
    5. 'al' → logprob: -7.260316848754883
    6. 'é' → logprob: -9.010316848754883
    7. 'p' → logprob: -9.510316848754883
    8. 'e' → logprob: -10.635316848754883
    9. 'alité' → logprob: -10.760316848754883
    10. 'union' → logprob: -10.760316848754883

Token 220: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.37154027819633484
    2. ' de' → logprob: -1.9965403079986572
    3. ' possible' → logprob: -2.2465403079986572
    4. ' ' → logprob: -3.7465403079986572
    5. 'possible' → logprob: -4.621540069580078
    6. 'des' → logprob: -5.246540069580078
    7. '_possible' → logprob: -5.246540069580078
    8. 'de' → logprob: -5.371540069580078
    9. ' d' → logprob: -5.871540069580078
    10. ' qui' → logprob: -5.996540069580078

Token 221: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.14082692563533783
    2. ' blocs' → logprob: -2.890826940536499
    3. 'b' → logprob: -3.390826940536499
    4. ' b' → logprob: -3.640826940536499
    5. 'bloc' → logprob: -5.01582670211792
    6. 'bi' → logprob: -5.39082670211792
    7. 'blocks' → logprob: -6.51582670211792
    8. ' bl' → logprob: -6.51582670211792
    9. ' bloc' → logprob: -7.26582670211792
    10. 'blo' → logprob: -8.515827178955078

Token 222: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42087307572364807
    2. ' possible' → logprob: -2.2958731651306152
    3. ' qui' → logprob: -3.4208731651306152
    4. ' des' → logprob: -3.4208731651306152
    5. 'possible' → logprob: -3.6708731651306152
    6. ' ,' → logprob: -3.7958731651306152
    7. '```' → logprob: -4.045873165130615
    8. ',' → logprob: -4.170873165130615
    9. '_possible' → logprob: -4.295873165130615
    10. 's' → logprob: -4.420873165130615

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44900059700012207
    2. '_' → logprob: -1.824000597000122
    3. '_i' → logprob: -2.199000597000122
    4. 'i' → logprob: -2.449000597000122
    5. ' ' → logprob: -6.949000358581543
    6. ' i' → logprob: -7.074000358581543
    7. ' _' → logprob: -7.199000358581543
    8. '_{' → logprob: -8.699000358581543
    9. '```' → logprob: -9.324000358581543
    10. ',' → logprob: -10.574000358581543

Token 224: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06581532955169678
    2. ' ,' → logprob: -2.8158154487609863
    3. ',b' → logprob: -7.315815448760986
    4. '1' → logprob: -7.440815448760986
    5. ' ' → logprob: -8.065814971923828
    6. 'i' → logprob: -8.190814971923828
    7. '_,' → logprob: -8.315814971923828
    8. ',...' → logprob: -8.440814971923828
    9. '_i' → logprob: -8.565814971923828
    10. '_' → logprob: -8.690814971923828

Token 225: 'bh' (ID: 22631)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22143122553825378
    2. ' ,' → logprob: -1.7214312553405762
    3. ',...' → logprob: -5.346431255340576
    4. ' b' → logprob: -5.846431255340576
    5. ' h' → logprob: -5.846431255340576
    6. ' ' → logprob: -6.596431255340576
    7. '_,' → logprob: -6.846431255340576
    8. '...' → logprob: -6.971431255340576
    9. '_' → logprob: -7.096431255340576
    10. 'i' → logprob: -7.221431255340576

Token 226: ' qui' (ID: 2780)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.235500454902649
    2. 's' → logprob: -1.735500454902649
    3. ' telle' → logprob: -2.1105003356933594
    4. ' ' → logprob: -2.7355003356933594
    5. ' such' → logprob: -2.9855003356933594
    6. ' ,' → logprob: -3.1105003356933594
    7. '.' → logprob: -3.2355003356933594
    8. ' possible' → logprob: -3.2355003356933594
    9. '```' → logprob: -3.3605003356933594
    10. ' qui' → logprob: -3.7355003356933594

Token 227: ' respecte' (ID: 140483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026795880869030952
    2. ' satisfait' → logprob: -4.776795864105225
    3. ' vér' → logprob: -4.901795864105225
    4. ' respecte' → logprob: -5.151795864105225
    5. ' satisf' → logprob: -5.901795864105225
    6. 'v' → logprob: -7.276795864105225
    7. 'respect' → logprob: -7.776795864105225
    8. 'sat' → logprob: -7.776795864105225
    9. ' satisfy' → logprob: -9.151796340942383
    10. ' satisfies' → logprob: -9.276796340942383

Token 228: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2607893645763397
    2. ' les' → logprob: -2.385789394378662
    3. 'la' → logprob: -2.635789394378662
    4. 'les' → logprob: -2.885789394378662
    5. ' cette' → logprob: -5.135789394378662
    6. 'le' → logprob: -6.135789394378662
    7. ' ' → logprob: -7.635789394378662
    8. 'ces' → logprob: -8.010788917541504
    9. ' ' → logprob: -8.510788917541504
    10. '_' → logprob: -9.010788917541504

Token 229: ' contraintes' (ID: 167366)
  Prédit: ' contraintes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contraintes' → logprob: -0.0013642854755744338
    2. 'contra' → logprob: -7.376364231109619
    3. 'constraints' → logprob: -8.126364707946777
    4. ' constraints' → logprob: -8.626364707946777
    5. 'contr' → logprob: -9.001364707946777
    6. 'conditions' → logprob: -10.126364707946777
    7. ' conditions' → logprob: -10.626364707946777
    8. 'con' → logprob: -11.126364707946777
    9. ' contra' → logprob: -11.376364707946777
    10. ' contr' → logprob: -11.376364707946777

Token 230: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4064200818538666
    2. ' ' → logprob: -1.406420111656189
    3. ' def' → logprob: -3.0314199924468994
    4. ':' → logprob: -4.7814202308654785
    5. '
' → logprob: -5.0314202308654785
    6. '#' → logprob: -5.4064202308654785
    7. '_' → logprob: -5.4064202308654785
    8. ' 
' → logprob: -5.7814202308654785
    9. '```' → logprob: -5.7814202308654785
    10. ',' → logprob: -6.2814202308654785

Token 231: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1514998823404312
    2. '#' → logprob: -2.9014999866485596
    3. ':' → logprob: -4.0264997482299805
    4. '_' → logprob: -4.2764997482299805
    5. '
' → logprob: -4.5264997482299805
    6. ' ' → logprob: -4.6514997482299805
    7. ',' → logprob: -4.9014997482299805
    8. ' 
' → logprob: -5.0264997482299805
    9. ' def' → logprob: -5.1514997482299805
    10. '\' → logprob: -5.7764997482299805

Token 232: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00808789860457182
    2. '
' → logprob: -5.258088111877441
    3. ' 
' → logprob: -7.008088111877441
    4. '#' → logprob: -7.133088111877441
    5. ' def' → logprob: -7.633088111877441
    6. ':' → logprob: -8.758088111877441
    7. '\' → logprob: -9.133088111877441
    8. 'import' → logprob: -9.383088111877441
    9. '```' → logprob: -9.633088111877441
    10. '

' → logprob: -9.758088111877441

Token 233: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00013929695705883205
    2. '#' → logprob: -9.125139236450195
    3. 'import' → logprob: -11.000139236450195
    4. 'from' → logprob: -11.875139236450195
    5. ' def' → logprob: -12.750139236450195
    6. '```' → logprob: -12.875139236450195
    7. 'for' → logprob: -14.625139236450195
    8. 'Dé' → logprob: -15.000139236450195
    9. 'Def' → logprob: -15.750139236450195
    10. 'Pour' → logprob: -16.500139236450195

Token 234: ' Observ' (ID: 54666)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001884015218820423
    2. 'import' → logprob: -9.125188827514648
    3. 'from' → logprob: -10.250188827514648
    4. ' def' → logprob: -10.250188827514648
    5. '#' → logprob: -12.625188827514648
    6. '```' → logprob: -12.750188827514648
    7. 'for' → logprob: -13.625188827514648
    8. ' 
' → logprob: -14.375188827514648
    9. 'n' → logprob: -15.500188827514648
    10. '
' → logprob: -15.875188827514648

Token 235: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.09457793086767197
    2. 'er' → logprob: -2.5945780277252197
    3. 'ations' → logprob: -4.344577789306641
    4. '#' → logprob: -6.344577789306641
    5. 'ateur' → logprob: -8.59457778930664
    6. 'e' → logprob: -8.84457778930664
    7. 'vation' → logprob: -9.09457778930664
    8. 'ervation' → logprob: -9.34457778930664
    9. 'ons' → logprob: -9.46957778930664
    10. 'erv' → logprob: -9.59457778930664

Token 236: ' pour' (ID: 1930)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.9863659143447876
    2. '#' → logprob: -1.3613659143447876
    3. ':' → logprob: -1.3613659143447876
    4. ' :
' → logprob: -2.611365795135498
    5. ':
' → logprob: -3.861365795135498
    6. ' #' → logprob: -4.111365795135498
    7. ' =' → logprob: -6.736365795135498
    8. ' :

' → logprob: -7.861365795135498
    9. ' ' → logprob: -7.861365795135498
    10. '#
' → logprob: -7.986365795135498

Token 237: ' vérifier' (ID: 93671)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.628274917602539
    2. ' continuer' → logprob: -1.628274917602539
    3. 'contin' → logprob: -1.878274917602539
    4. ' l' → logprob: -2.753274917602539
    5. ' résoudre' → logprob: -2.878274917602539
    6. ' la' → logprob: -3.128274917602539
    7. ' poursuivre' → logprob: -3.378274917602539
    8. 'la' → logprob: -3.378274917602539
    9. 'h' → logprob: -3.753274917602539
    10. 'impl' → logprob: -3.878274917602539

Token 238: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.82239830493927
    2. ' si' → logprob: -1.32239830493927
    3. 'la' → logprob: -2.8223981857299805
    4. ':' → logprob: -3.4473981857299805
    5. 'les' → logprob: -3.5723981857299805
    6. ' l' → logprob: -3.5723981857299805
    7. ' ' → logprob: -3.6973981857299805
    8. 'si' → logprob: -4.4473981857299805
    9. 'de' → logprob: -4.5723981857299805
    10. 'que' → logprob: -4.6973981857299805

Token 239: ' fais' (ID: 24376)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'suite' → logprob: -1.425681710243225
    2. 'h' → logprob: -1.550681710243225
    3. 'poss' → logprob: -2.3006815910339355
    4. ' suite' → logprob: -2.8006815910339355
    5. ' h' → logprob: -3.0506815910339355
    6. 'ha' → logprob: -3.0506815910339355
    7. ' prochaine' → logprob: -3.3006815910339355
    8. 'su' → logprob: -3.4256815910339355
    9. ' prochain' → logprob: -3.6756815910339355
    10. 'possible' → logprob: -3.6756815910339355

Token 240: 'abilité' (ID: 49097)
  Prédit: 'abilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abilité' → logprob: -0.013763939030468464
    2. 'abil' → logprob: -5.263763904571533
    3. 'ibilité' → logprob: -5.763763904571533
    4. 'ability' → logprob: -6.388763904571533
    5. 'able' → logprob: -6.513763904571533
    6. 'ance' → logprob: -7.138763904571533
    7. 's' → logprob: -7.638763904571533
    8. '_' → logprob: -8.388764381408691
    9. 'ation' → logprob: -8.638764381408691
    10. 'e' → logprob: -8.763764381408691

Token 241: ' pour' (ID: 1930)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.5279985666275024
    2. ':' → logprob: -0.9029985666275024
    3. ' :
' → logprob: -6.277998447418213
    4. ':
' → logprob: -7.027998447418213
    5. ',' → logprob: -7.152998447418213
    6. ' ' → logprob: -7.152998447418213
    7. 's' → logprob: -9.152998924255371
    8. ' :

' → logprob: -9.527998924255371
    9. ' =' → logprob: -9.652998924255371
    10. '#' → logprob: -9.777998924255371

Token 242: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9213584661483765
    2. ' h' → logprob: -1.4213584661483765
    3. 'h' → logprob: -1.7963584661483765
    4. 'un' → logprob: -2.296358585357666
    5. ' l' → logprob: -3.171358585357666
    6. 'l' → logprob: -4.046358585357666
    7. ' une' → logprob: -4.171358585357666
    8. 'une' → logprob: -5.296358585357666
    9. ' le' → logprob: -5.546358585357666
    10. 'le' → logprob: -5.671358585357666

Token 243: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.3256429135799408
    2. 'certain' → logprob: -1.9506429433822632
    3. ' étage' → logprob: -3.5756428241729736
    4. 'ét' → logprob: -3.7006428241729736
    5. 'nombre' → logprob: -3.9506428241729736
    6. ' certain' → logprob: -4.200643062591553
    7. ' h' → logprob: -4.575643062591553
    8. 'ent' → logprob: -4.825643062591553
    9. ' nombre' → logprob: -5.200643062591553
    10. 'niveau' → logprob: -5.325643062591553

Token 244: ' donné' (ID: 52079)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13351090252399445
    2. ' :' → logprob: -2.1335108280181885
    3. ':
' → logprob: -5.758511066436768
    4. ' ' → logprob: -6.508511066436768
    5. '#' → logprob: -7.133511066436768
    6. ' :
' → logprob: -7.258511066436768
    7. ':

' → logprob: -9.13351058959961
    8. ',' → logprob: -9.50851058959961
    9. ' #' → logprob: -9.88351058959961
    10. ' :

' → logprob: -10.13351058959961

Token 245: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1906147003173828
    2. ' :' → logprob: -1.8156147003173828
    3. '#' → logprob: -5.565614700317383
    4. ':
' → logprob: -5.565614700317383
    5. ' :
' → logprob: -6.940614700317383
    6. ' ' → logprob: -6.940614700317383
    7. ',' → logprob: -7.440614700317383
    8. ' #' → logprob: -8.065614700317383
    9. ':

' → logprob: -9.190614700317383
    10. ':\' → logprob: -10.315614700317383

Token 246: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.026182429865002632
    2. ' #' → logprob: -3.9011824131011963
    3. 'Pour' → logprob: -6.651182651519775
    4. ' 
' → logprob: -6.901182651519775
    5. 'for' → logprob: -7.276182651519775
    6. 'def' → logprob: -7.401182651519775
    7. 'On' → logprob: -7.901182651519775
    8. ' for' → logprob: -8.526182174682617
    9. '```' → logprob: -8.776182174682617
    10. '
' → logprob: -8.776182174682617

Token 247: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.002339377533644438
    2. ' #' → logprob: -6.7523393630981445
    3. 'Pour' → logprob: -7.3773393630981445
    4. 'On' → logprob: -8.377339363098145
    5. '-' → logprob: -9.127339363098145
    6. 'for' → logprob: -9.752339363098145
    7. '1' → logprob: -10.752339363098145
    8. '
' → logprob: -10.877339363098145
    9. ' -' → logprob: -10.877339363098145
    10. 'from' → logprob: -11.252339363098145

Token 248: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12780477106571198
    2. 'Pour' → logprob: -2.627804756164551
    3. 'On' → logprob: -3.502804756164551
    4. ' #' → logprob: -5.502804756164551
    5. 'Si' → logprob: -5.627804756164551
    6. 'for' → logprob: -5.627804756164551
    7. 'def' → logprob: -6.377804756164551
    8. 'Il' → logprob: -7.002804756164551
    9. ' Pour' → logprob: -7.502804756164551
    10. '
' → logprob: -7.627804756164551

Token 249: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.33333951234817505
    2. '#' → logprob: -1.5833394527435303
    3. '-' → logprob: -3.3333394527435303
    4. ')' → logprob: -3.9583394527435303
    5. ' ' → logprob: -4.958339691162109
    6. ' #' → logprob: -5.083339691162109
    7. ':' → logprob: -6.833339691162109
    8. ' -' → logprob: -6.833339691162109
    9. 'On' → logprob: -6.833339691162109
    10. 'Pour' → logprob: -6.958339691162109

Token 250: ' Au' (ID: 18016)
  Prédit: 'Pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pour' → logprob: -1.0295757055282593
    2. ' b' → logprob: -1.2795757055282593
    3. 'On' → logprob: -2.029575824737549
    4. ' Pour' → logprob: -2.404575824737549
    5. 'b' → logprob: -3.029575824737549
    6. ' On' → logprob: -3.279575824737549
    7. 'Il' → logprob: -4.154575824737549
    8. '#' → logprob: -4.404575824737549
    9. ' Il' → logprob: -5.029575824737549
    10. 'Le' → logprob: -6.154575824737549

Token 251: ' premier' (ID: 15506)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.19659653306007385
    2. ' moins' → logprob: -1.8215965032577515
    3. 'jourd' → logprob: -4.946596622467041
    4. ' moindre' → logprob: -6.571596622467041
    5. 'mo' → logprob: -6.821596622467041
    6. ' départ' → logprob: -7.321596622467041
    7. '#' → logprob: -7.446596622467041
    8. 'n' → logprob: -7.446596622467041
    9. 'c' → logprob: -7.571596622467041
    10. '   ' → logprob: -7.696596622467041

Token 252: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.6707004904747009
    2. 'ét' → logprob: -0.9207004904747009
    3. 'niveau' → logprob: -2.5457005500793457
    4. ' ' → logprob: -5.545700550079346
    5. ' ' → logprob: -6.545700550079346
    6. 'é' → logprob: -6.670700550079346
    7. ' niveau' → logprob: -6.795700550079346
    8. '=' → logprob: -7.670700550079346
    9. 'h' → logprob: -7.670700550079346
    10. 'ligne' → logprob: -7.670700550079346

Token 253: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13551287353038788
    2. ' (' → logprob: -2.7605128288269043
    3. 'b' → logprob: -3.0105128288269043
    4. ' b' → logprob: -5.010512828826904
    5. ':' → logprob: -5.635512828826904
    6. ' ,' → logprob: -6.260512828826904
    7. ' =' → logprob: -8.135513305664062
    8. '1' → logprob: -8.260513305664062
    9. 'i' → logprob: -8.510513305664062
    10. '=' → logprob: -8.510513305664062

Token 254: 'tout' (ID: 191666)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6729653477668762
    2. '1' → logprob: -0.9229653477668762
    3. ' i' → logprob: -3.4229652881622314
    4. ')' → logprob: -3.6729652881622314
    5. '=' → logprob: -4.5479655265808105
    6. 'h' → logprob: -4.6729655265808105
    7. ' ' → logprob: -5.4229655265808105
    8. '),' → logprob: -5.9229655265808105
    9. ',' → logprob: -6.6729655265808105
    10. ' =' → logprob: -6.7979655265808105

Token 255: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.5689337253570557
    2. ' =' → logprob: -1.8189337253570557
    3. 'en' → logprob: -2.0689337253570557
    4. ' à' → logprob: -3.3189337253570557
    5. '=' → logprob: -3.4439337253570557
    6. ' au' → logprob: -3.4439337253570557
    7. 'au' → logprob: -4.443933486938477
    8. '_' → logprob: -4.943933486938477
    9. 'à' → logprob: -4.943933486938477
    10. 'est' → logprob: -5.818933486938477

Token 256: ' haut' (ID: 28223)
  Prédit: 'haut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'haut' → logprob: -0.02456529252231121
    2. '1' → logprob: -5.27456521987915
    3. 'dess' → logprob: -5.27456521987915
    4. 'bas' → logprob: -5.39956521987915
    5. 'l' → logprob: -5.89956521987915
    6. 'b' → logprob: -6.64956521987915
    7. 'h' → logprob: -6.64956521987915
    8. 'ha' → logprob: -6.89956521987915
    9. ' ' → logprob: -7.27456521987915
    10. 't' → logprob: -7.52456521987915

Token 257: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0109173022210598
    2. ' ),' → logprob: -5.0109171867370605
    3. ')' → logprob: -6.0109171867370605
    4. ',' → logprob: -6.6359171867370605
    5. '):' → logprob: -8.510917663574219
    6. '#' → logprob: -9.885917663574219
    7. ' )' → logprob: -10.010917663574219
    8. ' ' → logprob: -11.010917663574219
    9. 'b' → logprob: -11.135917663574219
    10. ',),' → logprob: -11.260917663574219

Token 258: ' il' (ID: 1793)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11389824748039246
    2. ' b' → logprob: -2.363898277282715
    3. ' on' → logprob: -4.613898277282715
    4. ' il' → logprob: -6.238898277282715
    5. 'on' → logprob: -6.988898277282715
    6. ' le' → logprob: -7.738898277282715
    7. 'il' → logprob: -8.988898277282715
    8. ' la' → logprob: -9.988898277282715
    9. ' nous' → logprob: -9.988898277282715
    10. 'le' → logprob: -10.113898277282715

Token 259: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9045816659927368
    2. ' faut' → logprob: -1.0295816659927368
    3. 'f' → logprob: -2.1545815467834473
    4. ' doit' → logprob: -2.6545815467834473
    5. 'n' → logprob: -3.2795815467834473
    6. '=' → logprob: -5.654581546783447
    7. ' suffit' → logprob: -6.279581546783447
    8. 'est' → logprob: -6.279581546783447
    9. ' must' → logprob: -6.904581546783447
    10. 's' → logprob: -7.029581546783447

Token 260: ''y' (ID: 27913)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6029929518699646
    2. ''y' → logprob: -1.2279930114746094
    3. 'est' → logprob: -2.2279930114746094
    4. 'a' → logprob: -3.2279930114746094
    5. 'f' → logprob: -5.477993011474609
    6. ' y' → logprob: -5.602993011474609
    7. '’y' → logprob: -6.852993011474609
    8. ''est' → logprob: -6.977993011474609
    9. ''a' → logprob: -7.352993011474609
    10. 'n' → logprob: -7.477993011474609

Token 261: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12709735333919525
    2. ' a' → logprob: -2.1270973682403564
    3. ''a' → logprob: -9.752097129821777
    4. ' pas' → logprob: -10.127097129821777
    5. 'pas' → logprob: -10.627097129821777
    6. 'y' → logprob: -11.377097129821777
    7. '#' → logprob: -11.877097129821777
    8. ' y' → logprob: -12.002097129821777
    9. '_a' → logprob: -12.002097129821777
    10. 'est' → logprob: -12.252097129821777

Token 262: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.598904550075531
    2. 'pas' → logprob: -1.9739046096801758
    3. '1' → logprob: -2.723904609680176
    4. ' ' → logprob: -2.848904609680176
    5. ' aucune' → logprob: -2.973904609680176
    6. 'auc' → logprob: -3.098904609680176
    7. ' aucun' → logprob: -3.598904609680176
    8. ' au' → logprob: -4.223904609680176
    9. 'au' → logprob: -4.348904609680176
    10. ' que' → logprob: -4.723904609680176

Token 263: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6331494450569153
    2. 'de' → logprob: -0.7581494450569153
    3. '_de' → logprob: -8.383149147033691
    4. 'd' → logprob: -9.133149147033691
    5. '#' → logprob: -9.633149147033691
    6. ' ' → logprob: -10.508149147033691
    7. 'dep' → logprob: -10.758149147033691
    8. ' ' → logprob: -11.008149147033691
    9. 'po' → logprob: -11.258149147033691
    10. ' #' → logprob: -11.508149147033691

Token 264: ' blocs' (ID: 182599)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.14762559533119202
    2. ' poids' → logprob: -2.022625684738159
    3. 'bloc' → logprob: -6.14762544631958
    4. ' bloc' → logprob: -6.89762544631958
    5. ' blocs' → logprob: -7.02262544631958
    6. 'blocks' → logprob: -9.147625923156738
    7. ' ' → logprob: -9.522625923156738
    8. 'contr' → logprob: -9.647625923156738
    9. 'bl' → logprob: -9.647625923156738
    10. 'charge' → logprob: -9.772625923156738

Token 265: ' au' (ID: 2791)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7101004719734192
    2. ',' → logprob: -1.0851004123687744
    3. ' ,' → logprob: -2.0851004123687744
    4. ' .' → logprob: -3.9601004123687744
    5. ' ' → logprob: -4.7101006507873535
    6. ' (' → logprob: -5.3351006507873535
    7. 's' → logprob: -5.7101006507873535
    8. '_' → logprob: -6.0851006507873535
    9. ':' → logprob: -6.8351006507873535
    10. ' =' → logprob: -6.9601006507873535

Token 266: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.018191028386354446
    2. '-dessus' → logprob: -4.018190860748291
    3. ' dessus' → logprob: -10.26819133758545
    4. '-' → logprob: -13.14319133758545
    5. 'des' → logprob: -13.14319133758545
    6. 'd' → logprob: -13.64319133758545
    7. '-dessous' → logprob: -15.01819133758545
    8. '#' → logprob: -15.76819133758545
    9. 'Dess' → logprob: -15.89319133758545
    10. '-dess' → logprob: -15.89319133758545

Token 267: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29473182559013367
    2. ',' → logprob: -1.544731855392456
    3. ':' → logprob: -4.294731616973877
    4. ' (' → logprob: -4.794731616973877
    5. ',
' → logprob: -5.544731616973877
    6. '2' → logprob: -5.669731616973877
    7. '.
' → logprob: -5.794731616973877
    8. ' ,' → logprob: -6.294731616973877
    9. '#' → logprob: -6.544731616973877
    10. '
' → logprob: -6.669731616973877

Token 268: ' donc' (ID: 14206)
  Prédit: ' donc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donc' → logprob: -0.006967796944081783
    2. ' b' → logprob: -5.381968021392822
    3. ' il' → logprob: -7.631968021392822
    4. 'don' → logprob: -7.881968021392822
    5. ' 
' → logprob: -8.006967544555664
    6. '  
' → logprob: -8.381967544555664
    7. ',' → logprob: -8.756967544555664
    8. '\n' → logprob: -8.881967544555664
    9. 'b' → logprob: -9.131967544555664
    10. ' ' → logprob: -9.256967544555664

Token 269: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3246736526489258
    2. ' le' → logprob: -1.8246736526489258
    3. 'po' → logprob: -2.949673652648926
    4. 'b' → logprob: -3.699673652648926
    5. 'pas' → logprob: -4.449673652648926
    6. '0' → logprob: -4.949673652648926
    7. 'la' → logprob: -5.074673652648926
    8. ' b' → logprob: -5.699673652648926
    9. ' poids' → logprob: -6.074673652648926
    10. ' la' → logprob: -6.199673652648926

Token 270: ' contr' (ID: 6030)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.3290899693965912
    2. 'charge' → logprob: -2.329089879989624
    3. 'contr' → logprob: -2.704089879989624
    4. ' contr' → logprob: -3.079089879989624
    5. ' charge' → logprob: -3.579089879989624
    6. 'b' → logprob: -4.954090118408203
    7. 'pression' → logprob: -4.954090118408203
    8. 's' → logprob: -5.579090118408203
    9. ' poids' → logprob: -5.704090118408203
    10. 'weight' → logprob: -5.829090118408203

Token 271: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.006103101186454296
    2. 'a' → logprob: -5.131103038787842
    3. 'aint' → logprob: -9.506103515625
    4. '#' → logprob: -10.506103515625
    5. 'ain' → logprob: -11.006103515625
    6. 'aine' → logprob: -11.256103515625
    7. 'ôle' → logprob: -11.381103515625
    8. '\' → logprob: -12.006103515625
    9. 'ai' → logprob: -12.631103515625
    10. 'aise' → logprob: -12.756103515625

Token 272: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.1942022442817688
    2. ' =' → logprob: -2.569202184677124
    3. ' de' → logprob: -3.319202184677124
    4. ' d' → logprob: -4.194202423095703
    5. ' vaut' → logprob: -4.444202423095703
    6. ' s' → logprob: -4.819202423095703
    7. 's' → logprob: -4.819202423095703
    8. 'est' → logprob: -5.569202423095703
    9. '=' → logprob: -5.819202423095703
    10. 'de' → logprob: -6.069202423095703

Token 273: ' toujours' (ID: 16867)
  Prédit: 'tou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tou' → logprob: -0.7162803411483765
    2. 'autom' → logprob: -0.9662803411483765
    3. ' toujours' → logprob: -2.966280460357666
    4. 's' → logprob: -3.341280460357666
    5. 'v' → logprob: -3.716280460357666
    6. ' automatiquement' → logprob: -5.216280460357666
    7. 'always' → logprob: -5.716280460357666
    8. 'respect' → logprob: -6.466280460357666
    9. 'tr' → logprob: -6.466280460357666
    10. '   ' → logprob: -6.716280460357666

Token 274: ' satis' (ID: 56317)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.41217267513275146
    2. 's' → logprob: -1.2871726751327515
    3. 'respect' → logprob: -3.162172794342041
    4. ' vér' → logprob: -5.162172794342041
    5. 'true' → logprob: -5.537172794342041
    6. '
' → logprob: -5.787172794342041
    7. 'ver' → logprob: -6.537172794342041
    8. ' vraie' → logprob: -7.037172794342041
    9. '```' → logprob: -7.162172794342041
    10. ' respect' → logprob: -7.287172794342041

Token 275: 'faite' (ID: 69848)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4815625250339508
    2. 'e' → logprob: -2.106562614440918
    3. '2' → logprob: -2.731562614440918
    4. '.' → logprob: -2.731562614440918
    5. 'u' → logprob: -3.606562614440918
    6. '\n' → logprob: -4.481562614440918
    7. ',' → logprob: -4.606562614440918
    8. '  
' → logprob: -4.731562614440918
    9. 'n' → logprob: -4.856562614440918
    10. 'ction' → logprob: -4.981562614440918

Token 276: '.
' (ID: 558)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05249378830194473
    2. '#' → logprob: -3.9274938106536865
    3. '.' → logprob: -3.9274938106536865
    4. ',' → logprob: -5.052493572235107
    5. ' ' → logprob: -5.677493572235107
    6. ',
' → logprob: -8.302494049072266
    7. 'b' → logprob: -8.302494049072266
    8. '\' → logprob: -8.552494049072266
    9. 'def' → logprob: -8.802494049072266
    10. ' #' → logprob: -8.927494049072266

Token 277: '#' (ID: 2)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06572414189577103
    2. '#' → logprob: -3.0657241344451904
    3. ' ' → logprob: -4.5657243728637695
    4. 'def' → logprob: -6.5657243728637695
    5. ',' → logprob: -6.9407243728637695
    6. 'b' → logprob: -6.9407243728637695
    7. '\' → logprob: -7.3157243728637695
    8. ' b' → logprob: -7.6907243728637695
    9. '  
' → logprob: -8.31572437286377
    10. ' ' → logprob: -8.31572437286377

Token 278: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21218931674957275
    2. '#' → logprob: -2.587189197540283
    3. ' ' → logprob: -2.712189197540283
    4. 'def' → logprob: -4.337189197540283
    5. 'b' → logprob: -4.462189197540283
    6. ' b' → logprob: -5.337189197540283
    7. ',' → logprob: -5.462189197540283
    8. ' 
' → logprob: -5.462189197540283
    9. ' ' → logprob: -5.712189197540283
    10. '  
' → logprob: -6.087189197540283

Token 279: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04460420459508896
    2. '#' → logprob: -3.1696043014526367
    3. 'def' → logprob: -6.544604301452637
    4. 'b' → logprob: -10.419604301452637
    5. ' ' → logprob: -10.544604301452637
    6. 'import' → logprob: -10.919604301452637
    7. 'for' → logprob: -10.919604301452637
    8. 'Pour' → logprob: -10.919604301452637
    9. 'from' → logprob: -11.544604301452637
    10. ' #' → logprob: -11.794604301452637

Token 280: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.194110756041482e-05
    2. '#' → logprob: -10.000061988830566
    3. ' .' → logprob: -12.000061988830566
    4. 'def' → logprob: -12.500061988830566
    5. '.
' → logprob: -13.500061988830566
    6. '\.' → logprob: -14.375061988830566
    7. ' ' → logprob: -14.500061988830566
    8. ')' → logprob: -14.750061988830566
    9. 'import' → logprob: -14.875061988830566
    10. '.

' → logprob: -15.125061988830566

Token 281: ' Pour' (ID: 13931)
  Prédit: 'Pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pour' → logprob: -0.22998230159282684
    2. ' Pour' → logprob: -2.229982376098633
    3. 'On' → logprob: -2.979982376098633
    4. ' On' → logprob: -4.729982376098633
    5. 'À' → logprob: -4.729982376098633
    6. 'Au' → logprob: -5.104982376098633
    7. '#' → logprob: -5.479982376098633
    8. 'Le' → logprob: -5.979982376098633
    9. 'La' → logprob: -6.104982376098633
    10. ' À' → logprob: -6.354982376098633

Token 282: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6586392521858215
    2. ' l' → logprob: -1.6586391925811768
    3. ' chaque' → logprob: -2.0336391925811768
    4. 'i' → logprob: -2.4086391925811768
    5. 'l' → logprob: -3.2836391925811768
    6. ' tout' → logprob: -4.283639430999756
    7. 'tout' → logprob: -4.783639430999756
    8. 'cha' → logprob: -5.033639430999756
    9. 't' → logprob: -6.783639430999756
    10. ' un' → logprob: -7.283639430999756

Token 283: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.11565626412630081
    2. ' i' → logprob: -2.8656563758850098
    3. 'i' → logprob: -3.1156563758850098
    4. 'ét' → logprob: -4.99065637588501
    5. ' ' → logprob: -7.86565637588501
    6. ' ' → logprob: -7.86565637588501
    7. ' étape' → logprob: -9.115655899047852
    8. 'niveau' → logprob: -10.240655899047852
    9. 'é' → logprob: -10.615655899047852
    10. ' niveau' → logprob: -10.865655899047852

Token 284: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.020710403099656105
    2. 'i' → logprob: -3.8957104682922363
    3. ' suivante' → logprob: -9.645709991455078
    4. '_i' → logprob: -10.145709991455078
    5. ' ' → logprob: -10.645709991455078
    6. ' suivant' → logprob: -10.895709991455078
    7. ',' → logprob: -11.895709991455078
    8. ' ' → logprob: -12.145709991455078
    9. ' ,' → logprob: -12.520709991455078
    10. '	i' → logprob: -13.520709991455078

Token 285: ' >' (ID: 1424)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6037718653678894
    2. ' >=' → logprob: -1.9787719249725342
    3. ' in' → logprob: -2.728771924972534
    4. '>=' → logprob: -2.853771924972534
    5. '=' → logprob: -3.228771924972534
    6. ' =' → logprob: -3.478771924972534
    7. ' (' → logprob: -3.603771924972534
    8. ' ' → logprob: -3.853771924972534
    9. ' ,' → logprob: -3.978771924972534
    10. '>' → logprob: -4.103771686553955

Token 286: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3870767652988434
    2. '1' → logprob: -1.137076735496521
    3. '=' → logprob: -8.637076377868652
    4. ' ' → logprob: -11.262076377868652
    5. ' =' → logprob: -12.012076377868652
    6. '0' → logprob: -12.512076377868652
    7. ' i' → logprob: -12.512076377868652
    8. '  ' → logprob: -14.012076377868652
    9. 'i' → logprob: -15.137076377868652
    10. '   ' → logprob: -15.262076377868652

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. ' ' → logprob: -8.875142097473145
    3. '=' → logprob: -13.250142097473145
    4. 'i' → logprob: -15.500142097473145
    5. '0' → logprob: -15.625142097473145
    6. '   ' → logprob: -16.87514305114746
    7. ' ' → logprob: -17.12514305114746
    8. ' =' → logprob: -17.62514305114746
    9. '2' → logprob: -17.75014305114746
    10. '  ' → logprob: -17.75014305114746

Token 288: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014626589603722095
    2. ':' → logprob: -4.389626502990723
    3. ' ,' → logprob: -6.514626502990723
    4. ' :' → logprob: -7.639626502990723
    5. ' ' → logprob: -9.389626502990723
    6. '#' → logprob: -10.639626502990723
    7. ' ' → logprob: -11.889626502990723
    8. ':
' → logprob: -12.139626502990723
    9. ':,' → logprob: -12.139626502990723
    10. ',
' → logprob: -12.389626502990723

Token 289: '#' (ID: 2)
  Prédit: ' poids'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' poids' → logprob: -1.383906364440918
    2. ' b' → logprob: -2.008906364440918
    3. ' weight' → logprob: -2.508906364440918
    4. ' Le' → logprob: -2.633906364440918
    5. ' #' → logprob: -2.758906364440918
    6. '#' → logprob: -3.008906364440918
    7. ' ' → logprob: -3.258906364440918
    8. ' ' → logprob: -3.258906364440918
    9. ' Pour' → logprob: -3.383906364440918
    10. 'Pour' → logprob: -3.508906364440918

Token 290: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5636225938796997
    2. ' #' → logprob: -1.3136225938796997
    3. ' poids' → logprob: -2.56362247467041
    4. ' Le' → logprob: -3.56362247467041
    5. ' weight' → logprob: -3.81362247467041
    6. ' ' → logprob: -4.93862247467041
    7. ' le' → logprob: -5.43862247467041
    8. 'Le' → logprob: -6.06362247467041
    9. 'Pour' → logprob: -6.18862247467041
    10. ' b' → logprob: -6.43862247467041

Token 291: ' poids' (ID: 56058)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3124730587005615
    2. ' b' → logprob: -2.6874730587005615
    3. '   ' → logprob: -2.9374730587005615
    4. 'On' → logprob: -3.4374730587005615
    5. 'Pour' → logprob: -3.9374730587005615
    6. 'Le' → logprob: -4.437473297119141
    7. ' (' → logprob: -4.562473297119141
    8. '#' → logprob: -4.812473297119141
    9. '(b' → logprob: -5.062473297119141
    10. ' on' → logprob: -5.312473297119141

Token 292: ' maximal' (ID: 65414)
  Prédit: '_sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.05767282471060753
    2. '_' → logprob: -3.0576727390289307
    3. ' =' → logprob: -5.68267297744751
    4. 'sur' → logprob: -5.93267297744751
    5. '_total' → logprob: -6.43267297744751
    6. '_max' → logprob: -7.93267297744751
    7. '_on' → logprob: -8.432672500610352
    8. '_des' → logprob: -8.807672500610352
    9. '_sup' → logprob: -9.182672500610352
    10. '_=' → logprob: -9.432672500610352

Token 293: ' par' (ID: 686)
  Prédit: '_sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.703265368938446
    2. ' =' → logprob: -1.9532654285430908
    3. 'sur' → logprob: -2.078265428543091
    4. '_' → logprob: -2.328265428543091
    5. '_max' → logprob: -3.203265428543091
    6. ' sur' → logprob: -3.703265428543091
    7. ' <=' → logprob: -4.078265190124512
    8. '=' → logprob: -4.578265190124512
    9. '_i' → logprob: -4.703265190124512
    10. '[i' → logprob: -5.078265190124512

Token 294: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.18616129457950592
    2. ' bloc' → logprob: -1.9361612796783447
    3. 'bl' → logprob: -4.686161518096924
    4. 'un' → logprob: -5.561161518096924
    5. 'block' → logprob: -5.686161518096924
    6. ' un' → logprob: -5.811161518096924
    7. ' ' → logprob: -5.936161518096924
    8. ' étage' → logprob: -7.061161518096924
    9. ' block' → logprob: -7.436161518096924
    10. 'blo' → logprob: -8.061161041259766

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2628035545349121
    2. '=' → logprob: -1.887803554534912
    3. ' <=' → logprob: -2.762803554534912
    4. '<=' → logprob: -4.762803554534912
    5. ' ≤' → logprob: -6.387803554534912
    6. '_i' → logprob: -6.512803554534912
    7. ' i' → logprob: -7.012803554534912
    8. ' ' → logprob: -7.512803554534912
    9. '[i' → logprob: -7.762803554534912
    10. '_' → logprob: -8.01280403137207

Token 296: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01846947893500328
    2. ' K' → logprob: -4.018469333648682
    3. '(K' → logprob: -9.39346981048584
    4. ' (' → logprob: -9.64346981048584
    5. '(' → logprob: -10.26846981048584
    6. '   ' → logprob: -10.39346981048584
    7. ' ' → logprob: -10.39346981048584
    8. ' ' → logprob: -10.76846981048584
    9. '((' → logprob: -11.89346981048584
    10. '`' → logprob: -12.26846981048584

Token 297: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4645192623138428
    2. ' *' → logprob: -1.4645192623138428
    3. ',' → logprob: -1.5895192623138428
    4. '.' → logprob: -1.9645192623138428
    5. '*' → logprob: -2.9645192623138428
    6. '  
' → logprob: -3.0895192623138428
    7. '#' → logprob: -3.9645192623138428
    8. ' ,' → logprob: -4.339519500732422
    9. '   ' → logprob: -4.714519500732422
    10. '    
' → logprob: -4.839519500732422

Token 298: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2835421562194824
    2. ',' → logprob: -1.4085421562194824
    3. '.' → logprob: -1.9085421562194824
    4. '   ' → logprob: -2.4085421562194824
    5. ' =' → logprob: -3.2835421562194824
    6. ' i' → logprob: -3.5335421562194824
    7. ' #' → logprob: -3.6585421562194824
    8. '=' → logprob: -3.9085421562194824
    9. ' et' → logprob: -3.9085421562194824
    10. ' ' → logprob: -3.9085421562194824

Token 299: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.40150025486946106
    2. '   ' → logprob: -1.4015002250671387
    3. ' #' → logprob: -3.6515002250671387
    4. ' i' → logprob: -3.7765002250671387
    5. 'i' → logprob: -5.026500225067139
    6. 'for' → logprob: -5.901500225067139
    7. ' ' → logprob: -5.901500225067139
    8. ',' → logprob: -5.901500225067139
    9. ' for' → logprob: -6.026500225067139
    10. 'Pour' → logprob: -6.026500225067139

Token 300: ' poids' (ID: 56058)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.3788338899612427
    2. ' b' → logprob: -1.3788338899612427
    3. ' poids' → logprob: -1.5038338899612427
    4. 'po' → logprob: -2.378833770751953
    5. '#' → logprob: -3.503833770751953
    6. '   ' → logprob: -3.628833770751953
    7. 'On' → logprob: -3.878833770751953
    8. 'Pour' → logprob: -3.878833770751953
    9. ' somme' → logprob: -4.753833770751953
    10. ' On' → logprob: -4.878833770751953

Token 301: ' total' (ID: 3609)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.1308482885360718
    2. ' maximal' → logprob: -1.1308482885360718
    3. '_max' → logprob: -2.0058484077453613
    4. ' total' → logprob: -2.7558484077453613
    5. ' max' → logprob: -3.1308484077453613
    6. ' =' → logprob: -3.5058484077453613
    7. '_' → logprob: -4.005848407745361
    8. ' maximum' → logprob: -4.005848407745361
    9. '_sur' → logprob: -4.380848407745361
    10. 'max' → logprob: -4.630848407745361

Token 302: ' au' (ID: 2791)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7732468843460083
    2. '_max' → logprob: -1.2732468843460083
    3. '_sur' → logprob: -2.6482467651367188
    4. 'sur' → logprob: -3.5232467651367188
    5. 'max' → logprob: -3.5232467651367188
    6. 'au' → logprob: -3.5232467651367188
    7. ' =' → logprob: -3.6482467651367188
    8. '_total' → logprob: -4.023246765136719
    9. ' au' → logprob: -4.273246765136719
    10. ' maximal' → logprob: -4.398246765136719

Token 303: '-dessus' (ID: 74812)
  Prédit: '-dessus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-dessus' → logprob: -0.19848187267780304
    2. 'dess' → logprob: -1.8234819173812866
    3. ' dessus' → logprob: -4.323482036590576
    4. 'sur' → logprob: -6.448482036590576
    5. 'sup' → logprob: -7.323482036590576
    6. '-' → logprob: -7.448482036590576
    7. 'su' → logprob: -7.698482036590576
    8. '   ' → logprob: -7.698482036590576
    9. 's' → logprob: -8.073481559753418
    10. ' ' → logprob: -8.198481559753418

Token 304: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10876429080963135
    2. ' =' → logprob: -2.858764171600342
    3. ' (' → logprob: -4.858764171600342
    4. ' <=' → logprob: -4.983764171600342
    5. ' +' → logprob: -4.983764171600342
    6. '*' → logprob: -5.108764171600342
    7. '=' → logprob: -5.608764171600342
    8. ' /' → logprob: -5.983764171600342
    9. '   ' → logprob: -6.108764171600342
    10. ' ' → logprob: -6.483764171600342

Token 305: ' sum' (ID: 4215)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5852276682853699
    2. 'b' → logprob: -0.9602276682853699
    3. ' sum' → logprob: -3.7102277278900146
    4. 'sum' → logprob: -4.0852274894714355
    5. ' (' → logprob: -4.3352274894714355
    6. '(b' → logprob: -6.5852274894714355
    7. ' i' → logprob: -6.7102274894714355
    8. 'i' → logprob: -7.4602274894714355
    9. ' ' → logprob: -7.7102274894714355
    10. '(sum' → logprob: -7.9602274894714355

Token 306: '(b' (ID: 3229)
  Prédit: '_{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_{' → logprob: -0.4710095226764679
    2. 'b' → logprob: -1.5960094928741455
    3. '(b' → logprob: -2.3460094928741455
    4. ' b' → logprob: -3.9710094928741455
    5. '_' → logprob: -4.096009731292725
    6. '_b' → logprob: -4.221009731292725
    7. '(' → logprob: -4.971009731292725
    8. '(i' → logprob: -5.096009731292725
    9. ' (' → logprob: -5.471009731292725
    10. '_(' → logprob: -5.846009731292725

Token 307: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7411758899688721
    2. '_{' → logprob: -1.116175889968872
    3. '1' → logprob: -2.366175889968872
    4. '_j' → logprob: -2.616175889968872
    5. '[' → logprob: -4.991175651550293
    6. 'j' → logprob: -4.991175651550293
    7. 's' → logprob: -6.241175651550293
    8. '_i' → logprob: -6.241175651550293
    9. '[j' → logprob: -6.491175651550293
    10. 'i' → logprob: -6.616175651550293

Token 308: ' ..' (ID: 8548)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4876452684402466
    2. '+' → logprob: -1.9876452684402466
    3. ' +' → logprob: -1.9876452684402466
    4. '_{' → logprob: -3.487645149230957
    5. ')' → logprob: -3.987645149230957
    6. 's' → logprob: -4.112645149230957
    7. '[i' → logprob: -4.237645149230957
    8. '[' → logprob: -5.112645149230957
    9. '_plus' → logprob: -5.487645149230957
    10. '   ' → logprob: -5.487645149230957

Token 309: ' b' (ID: 287)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15878553688526154
    2. '_{' → logprob: -2.033785581588745
    3. '{i' → logprob: -4.908785343170166
    4. '_i' → logprob: -5.533785343170166
    5. '_' → logprob: -6.408785343170166
    6. ' i' → logprob: -6.533785343170166
    7. '^{' → logprob: -7.033785343170166
    8. '(i' → logprob: -8.658785820007324
    9. '{' → logprob: -9.533785820007324
    10. '_(' → logprob: -9.533785820007324

Token 310: '_{' (ID: 22305)
  Prédit: '_{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_{' → logprob: -0.08906105905771255
    2. 'i' → logprob: -2.8390610218048096
    3. '{i' → logprob: -4.339061260223389
    4. '_i' → logprob: -4.714061260223389
    5. '_' → logprob: -5.464061260223389
    6. '{' → logprob: -8.21406078338623
    7. '_(' → logprob: -9.58906078338623
    8. '(i' → logprob: -10.21406078338623
    9. '^{' → logprob: -10.96406078338623
    10. '}_{' → logprob: -11.08906078338623

Token 311: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.225939872208983e-05
    2. ' i' → logprob: -11.000032424926758
    3. '{i' → logprob: -11.250032424926758
    4. '   ' → logprob: -13.625032424926758
    5. '(i' → logprob: -14.375032424926758
    6. '_i' → logprob: -15.000032424926758
    7. '
' → logprob: -15.500032424926758
    8. '_{' → logprob: -17.000032424926758
    9. ' ' → logprob: -17.125032424926758
    10. '{' → logprob: -17.125032424926758

Token 312: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002836232597474009
    2. ' -' → logprob: -8.875283241271973
    3. '−' → logprob: -9.375283241271973
    4. '_' → logprob: -10.500283241271973
    5. '_minus' → logprob: -10.750283241271973
    6. 'minus' → logprob: -13.375283241271973
    7. 'i' → logprob: -13.750283241271973
    8. ' ' → logprob: -14.000283241271973
    9. '1' → logprob: -14.125283241271973
    10. '\-' → logprob: -14.250283241271973

Token 313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001805377542041242
    2. '2' → logprob: -8.8751802444458
    3. '-' → logprob: -10.8751802444458
    4. 'i' → logprob: -11.2501802444458
    5. ' ' → logprob: -12.1251802444458
    6. '   ' → logprob: -13.7501802444458
    7. '```' → logprob: -14.2501802444458
    8. ')' → logprob: -14.6251802444458
    9. '}' → logprob: -14.8751802444458
    10. '{' → logprob: -16.125181198120117

Token 314: '})
' (ID: 6795)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00341072422452271
    2. ' )' → logprob: -5.878410816192627
    3. ')+' → logprob: -8.753410339355469
    4. ')
' → logprob: -9.128410339355469
    5. '})' → logprob: -9.753410339355469
    6. '-' → logprob: -10.128410339355469
    7. '))' → logprob: -10.503410339355469
    8. ')}' → logprob: -10.628410339355469
    9. '}' → logprob: -10.753410339355469
    10. '_)' → logprob: -10.878410339355469

Token 315: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9119948744773865
    2. ',' → logprob: -2.1619949340820312
    3. ' ' → logprob: -2.5369949340820312
    4. '.' → logprob: -2.9119949340820312
    5. '3' → logprob: -3.0369949340820312
    6. 'i' → logprob: -3.1619949340820312
    7. ' i' → logprob: -3.1619949340820312
    8. ')' → logprob: -3.4119949340820312
    9. '   ' → logprob: -3.6619949340820312
    10. ' #' → logprob: -3.7869949340820312

Token 316: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.182256281375885
    2. '3' → logprob: -3.3072562217712402
    3. ' #' → logprob: -3.4322562217712402
    4. '   ' → logprob: -3.8072562217712402
    5. ' ' → logprob: -4.18225622177124
    6. 'def' → logprob: -4.18225622177124
    7. ' i' → logprob: -4.30725622177124
    8. 'i' → logprob: -4.80725622177124
    9. 'from' → logprob: -5.43225622177124
    10. ',' → logprob: -5.80725622177124

Token 317: ' alors' (ID: 17971)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0750850439071655
    2. ' b' → logprob: -1.2000850439071655
    3. 'bi' → logprob: -2.200085163116455
    4. '   ' → logprob: -2.325085163116455
    5. ' bi' → logprob: -3.450085163116455
    6. 'On' → logprob: -4.075085163116455
    7. '#' → logprob: -4.325085163116455
    8. 'La' → logprob: -4.575085163116455
    9. 'po' → logprob: -4.575085163116455
    10. 'Pour' → logprob: -4.700085163116455

Token 318: ' poids' (ID: 56058)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8344128727912903
    2. 'b' → logprob: -1.3344128131866455
    3. ' bi' → logprob: -1.9594128131866455
    4. 'bi' → logprob: -2.0844128131866455
    5. '   ' → logprob: -3.7094128131866455
    6. ' sum' → logprob: -5.834413051605225
    7. ' ' → logprob: -5.959413051605225
    8. '    ' → logprob: -6.209413051605225
    9. ' ' → logprob: -6.209413051605225
    10. '  ' → logprob: -6.709413051605225

Token 319: ' par' (ID: 686)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.13201317191123962
    2. ' total' → logprob: -3.2570130825042725
    3. '_max' → logprob: -3.3820130825042725
    4. 'total' → logprob: -4.507013320922852
    5. '_' → logprob: -4.632013320922852
    6. ' maximal' → logprob: -4.632013320922852
    7. ' par' → logprob: -5.257013320922852
    8. ' <=' → logprob: -5.882013320922852
    9. '_par' → logprob: -6.257013320922852
    10. ' /' → logprob: -6.382013320922852

Token 320: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.43346744775772095
    2. ' bloc' → logprob: -1.0584673881530762
    3. 'bl' → logprob: -6.433467388153076
    4. '_bloc' → logprob: -6.558467388153076
    5. 'block' → logprob: -7.558467388153076
    6. ' ' → logprob: -8.308467864990234
    7. 'b' → logprob: -8.433467864990234
    8. ' block' → logprob: -8.683467864990234
    9. ' b' → logprob: -8.933467864990234
    10. ' ' → logprob: -8.933467864990234

Token 321: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6346086859703064
    2. '=' → logprob: -1.1346087455749512
    3. ' <=' → logprob: -2.134608745574951
    4. '<=' → logprob: -3.634608745574951
    5. ' ≤' → logprob: -6.134608745574951
    6. ' ' → logprob: -8.009608268737793
    7. '≤' → logprob: -8.509608268737793
    8. ' ' → logprob: -8.884608268737793
    9. '[i' → logprob: -9.009608268737793
    10. '_i' → logprob: -9.134608268737793

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888008654117584
    2. '=' → logprob: -2.8288800716400146
    3. ' <=' → logprob: -4.328880310058594
    4. '<=' → logprob: -6.578880310058594
    5. '_i' → logprob: -7.703880310058594
    6. 'i' → logprob: -7.828880310058594
    7. ' ' → logprob: -8.203880310058594
    8. ' ' → logprob: -8.328880310058594
    9. '_' → logprob: -8.453880310058594
    10. ' >=' → logprob: -8.703880310058594

Token 323: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.1004311665892601
    2. 'sum' → logprob: -2.725431203842163
    3. ' (' → logprob: -4.225430965423584
    4. ' poids' → logprob: -4.975430965423584
    5. '(sum' → logprob: -5.225430965423584
    6. ' weight' → logprob: -6.725430965423584
    7. ' ' → logprob: -7.975430965423584
    8. 'po' → logprob: -8.475431442260742
    9. ' ' → logprob: -8.600431442260742
    10. 'weight' → logprob: -8.600431442260742

Token 324: '_b' (ID: 1535)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0024019356351345778
    2. 'b' → logprob: -6.502401828765869
    3. '_b' → logprob: -7.877401828765869
    4. '(' → logprob: -8.627402305603027
    5. ' (' → logprob: -8.877402305603027
    6. '_{' → logprob: -9.752402305603027
    7. '_' → logprob: -10.252402305603027
    8. '({' → logprob: -11.127402305603027
    9. '_(' → logprob: -11.252402305603027
    10. '{' → logprob: -11.377402305603027

Token 325: '_ab' (ID: 53632)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1141664981842041
    2. '{' → logprob: -3.489166498184204
    3. '_{' → logprob: -3.614166498184204
    4. '_' → logprob: -3.739166498184204
    5. '[' → logprob: -5.114166259765625
    6. '[i' → logprob: -5.239166259765625
    7. '(' → logprob: -5.614166259765625
    8. '(i' → logprob: -5.739166259765625
    9. '_(' → logprob: -5.989166259765625
    10. '[:' → logprob: -6.364166259765625

Token 326: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.0033908796031028032
    2. 'ov' → logprob: -6.628390789031982
    3. 's' → logprob: -7.878390789031982
    4. 've' → logprob: -7.878390789031982
    5. '1' → logprob: -8.37839126586914
    6. '{' → logprob: -8.37839126586914
    7. 'oves' → logprob: -8.50339126586914
    8. 'sol' → logprob: -8.87839126586914
    9. 'v' → logprob: -9.12839126586914
    10. '#' → logprob: -10.12839126586914

Token 327: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.16356191039085388
    2. '_' → logprob: -2.2885618209838867
    3. '/' → logprob: -3.7885618209838867
    4. '_b' → logprob: -5.038561820983887
    5. ' //' → logprob: -5.413561820983887
    6. ' _' → logprob: -5.913561820983887
    7. ' *' → logprob: -6.288561820983887
    8. '_i' → logprob: -6.288561820983887
    9. ' ' → logprob: -6.413561820983887
    10. '   ' → logprob: -6.913561820983887

Token 328: ' bi' (ID: 4424)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07574216276407242
    2. ' b' → logprob: -3.200742244720459
    3. 'bi' → logprob: -3.450742244720459
    4. ' bi' → logprob: -7.700742244720459
    5. '   ' → logprob: -11.5757417678833
    6. ' ' → logprob: -11.5757417678833
    7. ' ' → logprob: -12.7007417678833
    8. 'bl' → logprob: -13.3257417678833
    9. '```' → logprob: -13.3257417678833
    10. '	b' → logprob: -13.5757417678833

Token 329: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11574949324131012
    2. 'i' → logprob: -3.8657495975494385
    3. ' \' → logprob: -3.8657495975494385
    4. '<=' → logprob: -3.8657495975494385
    5. ' >=' → logprob: -4.490749359130859
    6. ' i' → logprob: -4.615749359130859
    7. '_i' → logprob: -4.865749359130859
    8. '\' → logprob: -5.615749359130859
    9. ' ≤' → logprob: -6.115749359130859
    10. '_' → logprob: -6.615749359130859

Token 330: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0889623686671257
    2. ' K' → logprob: -2.4639623165130615
    3. ' ' → logprob: -11.46396255493164
    4. ''' → logprob: -12.21396255493164
    5. ' ' → logprob: -12.21396255493164
    6. '`' → logprob: -13.58896255493164
    7. '"' → logprob: -14.33896255493164
    8. ' '' → logprob: -15.83896255493164
    9. ' ' → logprob: -16.33896255493164
    10. '  ' → logprob: -16.46396255493164

Token 331: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5982765555381775
    2. 'i' → logprob: -1.3482766151428223
    3. 'def' → logprob: -2.8482766151428223
    4. 'b' → logprob: -3.9732766151428223
    5. '\' → logprob: -4.473276615142822
    6. ',' → logprob: -4.598276615142822
    7. '=' → logprob: -4.848276615142822
    8. '```' → logprob: -4.848276615142822
    9. ' ' → logprob: -4.973276615142822
    10. ' i' → logprob: -4.973276615142822

Token 332: ' =>' (ID: 871)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.45223167538642883
    2. 'if' → logprob: -1.8272316455841064
    3. '  
' → logprob: -3.2022316455841064
    4. '   ' → logprob: -4.0772318840026855
    5. ',' → logprob: -4.0772318840026855
    6. '=' → logprob: -4.2022318840026855
    7. ' =' → logprob: -4.3272318840026855
    8. '
' → logprob: -4.4522318840026855
    9. '#' → logprob: -4.4522318840026855
    10. ',
' → logprob: -4.8272318840026855

Token 333: ' bi' (ID: 4424)
  Prédit: ' bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bi' → logprob: -0.38731104135513306
    2. 'bi' → logprob: -1.1373109817504883
    3. ' ' → logprob: -7.887310981750488
    4. 'b' → logprob: -10.387310981750488
    5. ' ' → logprob: -10.887310981750488
    6. '   ' → logprob: -12.262310981750488
    7. ' b' → logprob: -12.387310981750488
    8. ' ' → logprob: -13.387310981750488
    9. '	b' → logprob: -13.762310981750488
    10. '  ' → logprob: -14.137310981750488

Token 334: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.07793981581926346
    2. '>=' → logprob: -2.702939748764038
    3. ' =' → logprob: -5.577939987182617
    4. '=' → logprob: -6.202939987182617
    5. ' ≥' → logprob: -7.202939987182617
    6. '≥' → logprob: -7.327939987182617
    7. ' ' → logprob: -7.577939987182617
    8. ' ' → logprob: -8.952939987182617
    9. '[' → logprob: -10.077939987182617
    10. '>' → logprob: -11.077939987182617

Token 335: ' sum' (ID: 4215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.32213228940963745
    2. '(sum' → logprob: -1.9471323490142822
    3. 'sum' → logprob: -2.6971323490142822
    4. ' sum' → logprob: -2.8221323490142822
    5. '(s' → logprob: -6.572132110595703
    6. '(math' → logprob: -6.697132110595703
    7. ' math' → logprob: -6.947132110595703
    8. '(' → logprob: -7.447132110595703
    9. ' ' → logprob: -7.572132110595703
    10. 'math' → logprob: -8.322132110595703

Token 336: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.013657055795192719
    2. '_' → logprob: -4.388657093048096
    3. '(b' → logprob: -7.638657093048096
    4. '(' → logprob: -8.013656616210938
    5. '(_' → logprob: -8.513656616210938
    6. '_ab' → logprob: -9.638656616210938
    7. 's' → logprob: -10.888656616210938
    8. '_(' → logprob: -11.388656616210938
    9. '_{' → logprob: -11.763656616210938
    10. '_i' → logprob: -12.138656616210938

Token 337: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.11541593819856644
    2. '_' → logprob: -2.2404160499572754
    3. '_a' → logprob: -6.740416049957275
    4. '_b' → logprob: -6.740416049957275
    5. '_{' → logprob: -9.365415573120117
    6. '_i' → logprob: -10.115415573120117
    7. ' _' → logprob: -10.490415573120117
    8. 's' → logprob: -11.240415573120117
    9. 'above' → logprob: -11.865415573120117
    10. '_at' → logprob: -12.115415573120117

Token 338: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -1.1875571544806007e-05
    2. 'ov' → logprob: -12.500011444091797
    3. '_' → logprob: -12.750011444091797
    4. 'ouve' → logprob: -13.875011444091797
    5. 've' → logprob: -14.125011444091797
    6. 'oves' → logprob: -14.250011444091797
    7. 'OVE' → logprob: -14.500011444091797
    8. '#' → logprob: -15.000011444091797
    9. '{' → logprob: -15.625011444091797
    10. 'ive' → logprob: -15.875011444091797

Token 339: ' /' (ID: 820)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.1913365125656128
    2. '  
' → logprob: -2.1913366317749023
    3. ',' → logprob: -2.4413366317749023
    4. '[i' → logprob: -2.6913366317749023
    5. 'i' → logprob: -2.8163366317749023
    6. '_i' → logprob: -3.0663366317749023
    7. '
' → logprob: -3.1913366317749023
    8. '#' → logprob: -3.3163366317749023
    9. '```' → logprob: -3.5663366317749023
    10. ' 
' → logprob: -3.8163366317749023

Token 340: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.01815052703022957
    2. ' K' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.393150329589844
    4. 'k' → logprob: -17.143150329589844
    5. ' ' → logprob: -19.393150329589844
    6. '   ' → logprob: -19.643150329589844
    7. '`' → logprob: -19.643150329589844
    8. '(' → logprob: -20.018150329589844
    9. '(K' → logprob: -20.018150329589844
    10. '	K' → logprob: -20.643150329589844

Token 341: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.8056396842002869
    2. '\n' → logprob: -2.4306397438049316
    3. ' ' → logprob: -2.8056397438049316
    4. ',' → logprob: -2.8056397438049316
    5. ' 
' → logprob: -2.9306397438049316
    6. 'def' → logprob: -3.3056397438049316
    7. '  
' → logprob: -3.3056397438049316
    8. '_' → logprob: -3.4306397438049316
    9. '
' → logprob: -3.5556397438049316
    10. '#' → logprob: -3.5556397438049316

Token 342: '#
' (ID: 11240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5169694423675537
    2. '\' → logprob: -2.0169694423675537
    3. ' ' → logprob: -2.7669694423675537
    4. '#' → logprob: -3.1419694423675537
    5. ',' → logprob: -3.1419694423675537
    6. '[' → logprob: -3.7669694423675537
    7. ' 
' → logprob: -4.266969680786133
    8. 'def' → logprob: -4.391969680786133
    9. '\n' → logprob: -4.766969680786133
    10. ')' → logprob: -4.766969680786133

Token 343: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6936208009719849
    2. '#' → logprob: -0.8186208009719849
    3. '\' → logprob: -3.9436206817626953
    4. 'import' → logprob: -4.318620681762695
    5. ' def' → logprob: -4.818620681762695
    6. ' 
' → logprob: -5.443620681762695
    7. ' ' → logprob: -5.443620681762695
    8. '```' → logprob: -6.193620681762695
    9. ' #' → logprob: -6.443620681762695
    10. 'b' → logprob: -7.068620681762695

Token 344: ' Str' (ID: 5641)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003837374970316887
    2. 'import' → logprob: -6.378837585449219
    3. '#' → logprob: -6.503837585449219
    4. 'from' → logprob: -7.753837585449219
    5. ' def' → logprob: -8.878837585449219
    6. '```' → logprob: -11.128837585449219
    7. ' 
' → logprob: -11.253837585449219
    8. 'b' → logprob: -12.128837585449219
    9. '\' → logprob: -12.378837585449219
    10. 'for' → logprob: -12.628837585449219

Token 345: 'atég' (ID: 25440)
  Prédit: 'atég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atég' → logprob: -0.21750660240650177
    2. 'ict' → logprob: -2.0925066471099854
    3. 'ategy' → logprob: -2.8425066471099854
    4. 'ic' → logprob: -5.342506408691406
    5. 'ing' → logprob: -6.092506408691406
    6. 'uct' → logprob: -6.342506408691406
    7. 'at' → logprob: -6.342506408691406
    8. 'e' → logprob: -7.467506408691406
    9. 'ateg' → logprob: -7.592506408691406
    10. 'a' → logprob: -7.842506408691406

Token 346: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.004986116662621498
    2. 'e' → logprob: -5.50498628616333
    3. 'é' → logprob: -7.25498628616333
    4. 'y' → logprob: -8.629985809326172
    5. 'ié' → logprob: -11.254985809326172
    6. 'è' → logprob: -12.754985809326172
    7. ' ie' → logprob: -13.129985809326172
    8. 'ée' → logprob: -13.879985809326172
    9. 'i' → logprob: -14.254985809326172
    10. '#' → logprob: -14.504985809326172

Token 347: ' pour' (ID: 1930)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4494820833206177
    2. ':' → logprob: -1.6994820833206177
    3. ' =' → logprob: -1.8244820833206177
    4. ' :
' → logprob: -4.324481964111328
    5. ':
' → logprob: -6.074481964111328
    6. '=' → logprob: -7.199481964111328
    7. ' ' → logprob: -7.574481964111328
    8. ' :

' → logprob: -7.824481964111328
    9. ' ' → logprob: -7.949481964111328
    10. ':

' → logprob: -9.449481964111328

Token 348: ' minim' (ID: 23874)
  Prédit: ' construire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.6082639098167419
    2. ' i' → logprob: -1.7332639694213867
    3. ' trouver' → logprob: -2.2332639694213867
    4. ' tester' → logprob: -3.4832639694213867
    5. ' vérifier' → logprob: -3.6082639694213867
    6. 'i' → logprob: -3.7332639694213867
    7. ' calcul' → logprob: -4.233263969421387
    8. ' choisir' → logprob: -4.233263969421387
    9. 'impl' → logprob: -4.358263969421387
    10. ' déterminer' → logprob: -4.733263969421387

Token 349: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.00029828163678757846
    2. 'm' → logprob: -9.000298500061035
    3. 'iser' → logprob: -9.375298500061035
    4. 's' → logprob: -9.750298500061035
    5. '#' → logprob: -11.500298500061035
    6. 'se' → logprob: -11.750298500061035
    7. '_' → logprob: -13.125298500061035
    8. '```' → logprob: -13.375298500061035
    9. 'set' → logprob: -13.750298500061035
    10. 'n' → logprob: -14.250298500061035

Token 350: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8197324872016907
    2. ' la' → logprob: -0.8197324872016907
    3. ' les' → logprob: -2.569732427597046
    4. ' l' → logprob: -3.569732427597046
    5. 'le' → logprob: -5.069732666015625
    6. 'la' → logprob: -5.944732666015625
    7. 'l' → logprob: -6.069732666015625
    8. 'les' → logprob: -6.069732666015625
    9. ' b' → logprob: -8.569732666015625
    10. ' ' → logprob: -9.069732666015625

Token 351: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.6781664490699768
    2. 'nombre' → logprob: -0.9281664490699768
    3. 'b' → logprob: -2.678166389465332
    4. ' b' → logprob: -4.553166389465332
    5. ' nombres' → logprob: -5.053166389465332
    6. 'po' → logprob: -6.178166389465332
    7. 'sum' → logprob: -6.553166389465332
    8. 'bi' → logprob: -6.678166389465332
    9. 'bloc' → logprob: -6.803166389465332
    10. ' sum' → logprob: -7.053166389465332

Token 352: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06391381472349167
    2. ' d' → logprob: -3.3139138221740723
    3. ' total' → logprob: -4.813913822174072
    4. 'de' → logprob: -5.188913822174072
    5. '_de' → logprob: -5.188913822174072
    6. '_b' → logprob: -6.688913822174072
    7. '_total' → logprob: -6.688913822174072
    8. '_' → logprob: -6.813913822174072
    9. 'total' → logprob: -7.188913822174072
    10. ' des' → logprob: -7.813913822174072

Token 353: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.020699305459856987
    2. ' d' → logprob: -4.770699501037598
    3. '_' → logprob: -5.270699501037598
    4. ' des' → logprob: -6.145699501037598
    5. '_de' → logprob: -6.145699501037598
    6. ' ' → logprob: -6.770699501037598
    7. 'de' → logprob: -7.645699501037598
    8. '_b' → logprob: -7.645699501037598
    9. '_d' → logprob: -9.395699501037598
    10. ' b' → logprob: -9.395699501037598

Token 354: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.005824991036206484
    2. ' blocs' → logprob: -6.005825042724609
    3. 'bloc' → logprob: -6.880825042724609
    4. 'ét' → logprob: -6.880825042724609
    5. 'b' → logprob: -7.380825042724609
    6. 'blocks' → logprob: -8.63082504272461
    7. ' bl' → logprob: -8.88082504272461
    8. ' ' → logprob: -9.38082504272461
    9. 'blo' → logprob: -9.63082504272461
    10. ' ' → logprob: -9.75582504272461

Token 355: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1058528423309326
    2. ':' → logprob: -1.4808528423309326
    3. ' :' → logprob: -1.7308528423309326
    4. ' =' → logprob: -2.6058528423309326
    5. ' ' → logprob: -3.3558528423309326
    6. 'def' → logprob: -3.6058528423309326
    7. 's' → logprob: -4.105853080749512
    8. 'i' → logprob: -4.355853080749512
    9. ' i' → logprob: -4.730853080749512
    10. ',' → logprob: -4.730853080749512

Token 356: ' h' (ID: 312)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.4045494496822357
    2. ' i' → logprob: -1.904549479484558
    3. 'i' → logprob: -3.2795493602752686
    4. ' construire' → logprob: -3.4045493602752686
    5. ' l' → logprob: -3.6545493602752686
    6. ' garantir' → logprob: -4.529549598693848
    7. 'cha' → logprob: -4.779549598693848
    8. 'l' → logprob: -4.904549598693848
    9. ' respecter' → logprob: -4.904549598693848
    10. ' remplir' → logprob: -5.279549598693848

Token 357: ' ét' (ID: 4976)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.6701055765151978
    2. ':' → logprob: -1.1701055765151978
    3. ' =' → logprob: -2.170105457305908
    4. '=' → logprob: -3.420105457305908
    5. ' i' → logprob: -5.045105457305908
    6. ' ' → logprob: -5.795105457305908
    7. ' minimale' → logprob: -5.920105457305908
    8. ',' → logprob: -6.045105457305908
    9. '_' → logprob: -6.045105457305908
    10. ' minimal' → logprob: -6.545105457305908

Token 358: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.575637698173523
    2. 'age' → logprob: -1.450637698173523
    3. 'ape' → logprob: -2.0756378173828125
    4. 'apes' → logprob: -2.9506378173828125
    5. 'agé' → logprob: -4.8256378173828125
    6. 'agés' → logprob: -5.5756378173828125
    7. 'agée' → logprob: -5.5756378173828125
    8. 'ap' → logprob: -5.7006378173828125
    9. 'apé' → logprob: -5.9506378173828125
    10. 'ag' → logprob: -6.0756378173828125

Token 359: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43958723545074463
    2. ' :' → logprob: -1.0645872354507446
    3. ':
' → logprob: -5.314587116241455
    4. ' :
' → logprob: -5.939587116241455
    5. ',' → logprob: -6.689587116241455
    6. ' =' → logprob: -7.564587116241455
    7. '#' → logprob: -8.189587593078613
    8. ' ' → logprob: -8.439587593078613
    9. ':

' → logprob: -8.564587593078613
    10. '=' → logprob: -8.939587593078613

Token 360: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2626495659351349
    2. 'b' → logprob: -2.2626495361328125
    3. ' b' → logprob: -3.2626495361328125
    4. 'On' → logprob: -4.0126495361328125
    5. ' #' → logprob: -4.2626495361328125
    6. ' On' → logprob: -4.5126495361328125
    7. '
' → logprob: -4.5126495361328125
    8. 'def' → logprob: -4.8876495361328125
    9. 'i' → logprob: -5.7626495361328125
    10. 'sum' → logprob: -5.8876495361328125

Token 361: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7044619917869568
    2. 'b' → logprob: -1.3294620513916016
    3. 'On' → logprob: -1.5794620513916016
    4. ' b' → logprob: -4.704462051391602
    5. 'Pour' → logprob: -5.079462051391602
    6. ' On' → logprob: -5.829462051391602
    7. 'def' → logprob: -6.204462051391602
    8. 'all' → logprob: -6.204462051391602
    9. ' #' → logprob: -6.204462051391602
    10. 'Initial' → logprob: -6.579462051391602

Token 362: ' Fix' (ID: 36564)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9832261800765991
    2. 'On' → logprob: -0.9832261800765991
    3. ' b' → logprob: -1.9832261800765991
    4. '#' → logprob: -3.7332262992858887
    5. 'Pour' → logprob: -3.7332262992858887
    6. 'Initial' → logprob: -3.9832262992858887
    7. ' On' → logprob: -4.483226299285889
    8. 'Pos' → logprob: -4.983226299285889
    9. 'All' → logprob: -4.983226299285889
    10. 'initial' → logprob: -6.233226299285889

Token 363: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.025289347395300865
    2. 'ons' → logprob: -4.275289535522461
    3. 'e' → logprob: -4.650289535522461
    4. 'é' → logprob: -6.775289535522461
    5. 'ant' → logprob: -8.900289535522461
    6. '#' → logprob: -8.900289535522461
    7. '=' → logprob: -10.400289535522461
    8. 'on' → logprob: -11.150289535522461
    9. 'ez' → logprob: -11.150289535522461
    10. 'ée' → logprob: -11.650289535522461

Token 364: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7027053833007812
    2. ' b' → logprob: -0.7027053833007812
    3. ' ' → logprob: -6.327705383300781
    4. ' les' → logprob: -6.577705383300781
    5. ' le' → logprob: -6.702705383300781
    6. ' la' → logprob: -6.702705383300781
    7. 'bi' → logprob: -6.827705383300781
    8. ' bi' → logprob: -6.952705383300781
    9. '   ' → logprob: -7.952705383300781
    10. ' une' → logprob: -8.577705383300781

Token 365: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01871567592024803
    2. ' ' → logprob: -4.518715858459473
    3. ' =' → logprob: -5.518715858459473
    4. '_' → logprob: -5.893715858459473
    5. 'h' → logprob: -8.018715858459473
    6. '=' → logprob: -8.018715858459473
    7. '[' → logprob: -9.768715858459473
    8. ' h' → logprob: -9.768715858459473
    9. '_h' → logprob: -10.893715858459473
    10. ' _' → logprob: -11.143715858459473

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519405782222748
    2. '=' → logprob: -1.5019406080245972
    3. '1' → logprob: -11.751940727233887
    4. ' ' → logprob: -13.001940727233887
    5. ' ' → logprob: -14.251940727233887
    6. ',' → logprob: -15.001940727233887
    7. 'def' → logprob: -16.75193977355957
    8. 'b' → logprob: -16.87693977355957
    9. 's' → logprob: -17.00193977355957
    10. '=int' → logprob: -17.12693977355957

Token 367: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.706686690449715e-05
    2. ' ' → logprob: -9.625066757202148
    3. 'h' → logprob: -14.000066757202148
    4. '   ' → logprob: -16.00006675720215
    5. 'N' → logprob: -18.37506675720215
    6. '```' → logprob: -18.62506675720215
    7. ' ' → logprob: -18.62506675720215
    8. '  ' → logprob: -18.87506675720215
    9. 'max' → logprob: -19.12506675720215
    10. ' h' → logprob: -19.56256675720215

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.875003814697266
    3. 'N' → logprob: -14.000003814697266
    4. 'h' → logprob: -14.750003814697266
    5. 'max' → logprob: -15.750003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '0' → logprob: -17.500003814697266
    8. '[' → logprob: -17.500003814697266
    9. '```' → logprob: -17.500003814697266
    10. '#' → logprob: -17.500003814697266

Token 369: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0069557190872728825
    2. 'b' → logprob: -6.131955623626709
    3. '
' → logprob: -6.506955623626709
    4. '  
' → logprob: -7.006955623626709
    5. '\n' → logprob: -7.256955623626709
    6. ',' → logprob: -7.881955623626709
    7. ',
' → logprob: -8.006956100463867
    8. ' 
' → logprob: -8.256956100463867
    9. '.
' → logprob: -9.006956100463867
    10. '```' → logprob: -9.006956100463867

Token 370: 'min' (ID: 1493)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43173345923423767
    2. ')
' → logprob: -1.55673348903656
    3. '
' → logprob: -2.1817333698272705
    4. '\n' → logprob: -4.68173360824585
    5. ' )' → logprob: -5.68173360824585
    6. ' )
' → logprob: -6.43173360824585
    7. 'b' → logprob: -6.43173360824585
    8. '#' → logprob: -6.55673360824585
    9. '  
' → logprob: -6.68173360824585
    10. '1' → logprob: -6.80673360824585

Token 371: 'im' (ID: 321)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05592092499136925
    2. '=' → logprob: -3.8059208393096924
    3. ' )' → logprob: -4.1809210777282715
    4. ' =' → logprob: -4.5559210777282715
    5. 'imum' → logprob: -6.3059210777282715
    6. '),' → logprob: -7.4309210777282715
    7. '_b' → logprob: -7.5559210777282715
    8. 'e' → logprob: -7.9309210777282715
    9. '
' → logprob: -7.9309210777282715
    10. ',' → logprob: -8.055920600891113

Token 372: 'iser' (ID: 7466)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.0006943239714019
    2. 'al' → logprob: -8.000694274902344
    3. 'un' → logprob: -8.500694274902344
    4. '#' → logprob: -9.375694274902344
    5. 'ale' → logprob: -10.625694274902344
    6. '```' → logprob: -11.625694274902344
    7. '   ' → logprob: -12.125694274902344
    8. 'e' → logprob: -12.250694274902344
    9. 'u' → logprob: -12.250694274902344
    10. 'a' → logprob: -13.375694274902344

Token 373: ' les' (ID: 1341)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.665348470211029
    2. ')' → logprob: -1.6653485298156738
    3. ' la' → logprob: -2.040348529815674
    4. 'le' → logprob: -2.540348529815674
    5. ' )' → logprob: -3.665348529815674
    6. ' l' → logprob: -3.915348529815674
    7. ' les' → logprob: -4.165348529815674
    8. ' b' → logprob: -5.415348529815674
    9. ' au' → logprob: -5.915348529815674
    10. ' ' → logprob: -6.040348529815674

Token 374: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.2838362455368042
    2. 'nombre' → logprob: -2.6588363647460938
    3. ' blocs' → logprob: -2.6588363647460938
    4. 'bloc' → logprob: -3.4088363647460938
    5. ' )' → logprob: -3.6588363647460938
    6. ' ' → logprob: -4.283836364746094
    7. 'esp' → logprob: -4.783836364746094
    8. ')' → logprob: -5.158836364746094
    9. '1' → logprob: -5.783836364746094
    10. 'b' → logprob: -5.908836364746094

Token 375: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22273816168308258
    2. '
' → logprob: -2.472738265991211
    3. ' )' → logprob: -3.347738265991211
    4. ',' → logprob: -3.847738265991211
    5. '  
' → logprob: -4.472738265991211
    6. ' ,' → logprob: -4.972738265991211
    7. ')
' → logprob: -4.972738265991211
    8. '),' → logprob: -5.097738265991211
    9. '\' → logprob: -5.597738265991211
    10. ' ' → logprob: -5.722738265991211

Token 376: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.3449602425098419
    2. 'haut' → logprob: -2.4699602127075195
    3. ' premier' → logprob: -2.9699602127075195
    4. '1' → logprob: -2.9699602127075195
    5. ' étage' → logprob: -3.7199602127075195
    6. ' ' → logprob: -3.9699602127075195
    7. 'ét' → logprob: -4.8449602127075195
    8. ' haut' → logprob: -4.8449602127075195
    9. 'tout' → logprob: -5.0949602127075195
    10. 'bas' → logprob: -5.0949602127075195

Token 377: ' étage' (ID: 125215)
  Prédit: ' étage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' étage' → logprob: -0.49643540382385254
    2. 'ét' → logprob: -1.3714354038238525
    3. ' )' → logprob: -2.8714354038238525
    4. ')' → logprob: -3.4964354038238525
    5. '_' → logprob: -3.4964354038238525
    6. ' ' → logprob: -4.871435165405273
    7. 'niveau' → logprob: -5.746435165405273
    8. 'é' → logprob: -6.371435165405273
    9. 'et' → logprob: -6.496435165405273
    10. '```' → logprob: -6.871435165405273

Token 378: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027697235345840454
    2. '  
' → logprob: -5.0276970863342285
    3. ',
' → logprob: -5.2776970863342285
    4. '.
' → logprob: -5.6526970863342285
    5. '
' → logprob: -5.9026970863342285
    6. ',' → logprob: -5.9026970863342285
    7. '\n' → logprob: -6.2776970863342285
    8. '.' → logprob: -6.4026970863342285
    9. ' 
' → logprob: -7.1526970863342285
    10. 'b' → logprob: -7.1526970863342285

Token 379: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13073185086250305
    2. ' b' → logprob: -2.8807318210601807
    3. '  
' → logprob: -4.13073205947876
    4. '```' → logprob: -4.38073205947876
    5. '
' → logprob: -4.50573205947876
    6. ' 
' → logprob: -5.13073205947876
    7. '\n' → logprob: -5.25573205947876
    8. ' ' → logprob: -6.00573205947876
    9. 'i' → logprob: -6.00573205947876
    10. '#' → logprob: -6.13073205947876

Token 380: ' -' (ID: 533)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.33724427223205566
    2. '  
' → logprob: -2.0872442722320557
    3. ' 
' → logprob: -2.5872442722320557
    4. '
' → logprob: -3.7122442722320557
    5. '\n' → logprob: -3.7122442722320557
    6. '```' → logprob: -4.212244033813477
    7. ' b' → logprob: -4.837244033813477
    8. '\' → logprob: -5.462244033813477
    9. '``' → logprob: -5.962244033813477
    10. '`
' → logprob: -6.462244033813477

Token 381: ' Pour' (ID: 13931)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5181097388267517
    2. 'b' → logprob: -1.0181097984313965
    3. ' for' → logprob: -4.0181097984313965
    4. 'Pour' → logprob: -4.5181097984313965
    5. 'for' → logprob: -4.6431097984313965
    6. ' Pour' → logprob: -6.5181097984313965
    7. 'On' → logprob: -7.2681097984313965
    8. ' On' → logprob: -8.143109321594238
    9. ' pour' → logprob: -8.268109321594238
    10. 'pour' → logprob: -8.518109321594238

Token 382: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.474081814289093
    2. 'i' → logprob: -0.974081814289093
    3. ' ' → logprob: -12.974081993103027
    4. ' chaque' → logprob: -13.474081993103027
    5. ' ' → logprob: -14.724081993103027
    6. '_i' → logprob: -14.974081993103027
    7. '	i' → logprob: -15.474081993103027
    8. '2' → logprob: -15.599081993103027
    9. '(i' → logprob: -17.34908103942871
    10. '```' → logprob: -18.47408103942871

Token 383: ' >' (ID: 1424)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.408441424369812
    2. '=' → logprob: -1.408441424369812
    3. ' in' → logprob: -2.4084415435791016
    4. 'in' → logprob: -7.783441543579102
    5. ' ' → logprob: -8.908441543579102
    6. '>' → logprob: -9.283441543579102
    7. ' from' → logprob: -10.033441543579102
    8. ' i' → logprob: -10.283441543579102
    9. ' >' → logprob: -10.783441543579102
    10. 'from' → logprob: -10.908441543579102

Token 384: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006720705423504114
    2. ' ' → logprob: -5.006720542907715
    3. 'i' → logprob: -12.756720542907715
    4. ' i' → logprob: -13.631720542907715
    5. '=' → logprob: -13.881720542907715
    6. '   ' → logprob: -16.00672149658203
    7. ' ' → logprob: -16.00672149658203
    8. ' =' → logprob: -16.38172149658203
    9. '  ' → logprob: -16.50672149658203
    10. '2' → logprob: -17.75672149658203

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.873571692267433e-05
    2. ' ' → logprob: -9.625068664550781
    3. '=' → logprob: -13.000068664550781
    4. 'i' → logprob: -14.875068664550781
    5. ' =' → logprob: -17.00006866455078
    6. ' ' → logprob: -17.50006866455078
    7. '   ' → logprob: -18.50006866455078
    8. '2' → logprob: -18.87506866455078
    9. '  ' → logprob: -19.00006866455078
    10. ' i' → logprob: -19.25006866455078

Token 386: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1265871226787567
    2. ',' → logprob: -2.376587152481079
    3. ':
' → logprob: -4.1265869140625
    4. ' :' → logprob: -4.7515869140625
    5. ' :
' → logprob: -8.1265869140625
    6. '   ' → logprob: -8.5015869140625
    7. ' ,' → logprob: -8.6265869140625
    8. ' ' → logprob: -8.7515869140625
    9. ' ' → logprob: -9.0015869140625
    10. 'b' → logprob: -9.0015869140625

Token 387: ' bi' (ID: 4424)
  Prédit: ' bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bi' → logprob: -0.5431287288665771
    2. 'bi' → logprob: -1.4181287288665771
    3. ' b' → logprob: -2.543128728866577
    4. 'b' → logprob: -2.668128728866577
    5. ' ' → logprob: -4.793128967285156
    6. '   ' → logprob: -4.918128967285156
    7. ' ' → logprob: -4.918128967285156
    8. ' on' → logprob: -5.668128967285156
    9. '	b' → logprob: -6.668128967285156
    10. '    ' → logprob: -7.918128967285156

Token 388: ' doit' (ID: 21822)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889298349618912
    2. '=' → logprob: -2.578892946243286
    3. ' >=' → logprob: -13.453892707824707
    4. '>=' → logprob: -13.828892707824707
    5. ' ' → logprob: -14.578892707824707
    6. ' ' → logprob: -16.078893661499023
    7. '=int' → logprob: -16.578893661499023
    8. '≥' → logprob: -16.953893661499023
    9. ' =
' → logprob: -17.453893661499023
    10. ' =
' → logprob: -17.703893661499023

Token 389: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15060047805309296
    2. ' =' → logprob: -2.0256004333496094
    3. '>=' → logprob: -5.150600433349609
    4. ' >=' → logprob: -6.400600433349609
    5. '≥' → logprob: -8.52560043334961
    6. ' ' → logprob: -8.65060043334961
    7. ' be' → logprob: -10.40060043334961
    8. ' ' → logprob: -11.40060043334961
    9. ' ≥' → logprob: -11.52560043334961
    10. ' ' → logprob: -13.02560043334961

Token 390: ' au' (ID: 2791)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7333992123603821
    2. 'ceil' → logprob: -1.9833991527557373
    3. ' au' → logprob: -2.1083991527557373
    4. 'au' → logprob: -2.4833991527557373
    5. '>=' → logprob: -2.4833991527557373
    6. 'math' → logprob: -2.8583991527557373
    7. ' max' → logprob: -4.233399391174316
    8. ' math' → logprob: -5.233399391174316
    9. 'int' → logprob: -5.358399391174316
    10. '≥' → logprob: -5.483399391174316

Token 391: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.006455655209720135
    2. 'minimum' → logprob: -6.131455421447754
    3. 'mo' → logprob: -6.756455421447754
    4. ' moins' → logprob: -7.131455421447754
    5. 'least' → logprob: -7.381455421447754
    6. 'min' → logprob: -7.881455421447754
    7. 'menos' → logprob: -7.881455421447754
    8. 'max' → logprob: -8.131455421447754
    9. 'plus' → logprob: -9.131455421447754
    10. 'g' → logprob: -9.256455421447754

Token 392: ' ceil' (ID: 35964)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.6880548000335693
    2. ' math' → logprob: -1.5630548000335693
    3. 'math' → logprob: -1.9380548000335693
    4. ' ceil' → logprob: -2.8130548000335693
    5. ' int' → logprob: -3.1880548000335693
    6. 'int' → logprob: -4.438055038452148
    7. ' ' → logprob: -4.688055038452148
    8. ' (' → logprob: -5.313055038452148
    9. '(math' → logprob: -5.438055038452148
    10. 'max' → logprob: -5.813055038452148

Token 393: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0389387607574463
    2. '(sum' → logprob: -1.0389387607574463
    3. ' (' → logprob: -1.4139387607574463
    4. '((' → logprob: -3.5389387607574463
    5. '(s' → logprob: -3.9139387607574463
    6. '(div' → logprob: -9.413938522338867
    7. ' ((' → logprob: -11.913938522338867
    8. ' ' → logprob: -12.038938522338867
    9. ' ' → logprob: -12.163938522338867
    10. '(
' → logprob: -12.413938522338867

Token 394: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.003643430070951581
    2. '_ab' → logprob: -5.75364351272583
    3. '(b' → logprob: -8.378643035888672
    4. '_' → logprob: -8.628643035888672
    5. 'b' → logprob: -11.003643035888672
    6. '(' → logprob: -11.378643035888672
    7. '(_' → logprob: -11.503643035888672
    8. 'above' → logprob: -13.003643035888672
    9. 'Above' → logprob: -13.253643035888672
    10. 's' → logprob: -13.503643035888672

Token 395: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.005764776840806007
    2. '_' → logprob: -5.255764961242676
    3. '_b' → logprob: -8.505764961242676
    4. 'above' → logprob: -8.880764961242676
    5. 'au' → logprob: -10.255764961242676
    6. '_a' → logprob: -10.505764961242676
    7. ' _' → logprob: -10.630764961242676
    8. '   ' → logprob: -11.130764961242676
    9. '_over' → logprob: -11.380764961242676
    10. '_{' → logprob: -11.755764961242676

Token 396: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.00013977376511320472
    2. '_' → logprob: -10.125140190124512
    3. 'ov' → logprob: -10.625140190124512
    4. '{' → logprob: -11.250140190124512
    5. 've' → logprob: -11.500140190124512
    6. '#' → logprob: -11.875140190124512
    7. 'b' → logprob: -12.250140190124512
    8. 'ive' → logprob: -12.375140190124512
    9. '   ' → logprob: -13.250140190124512
    10. '[' → logprob: -13.500140190124512

Token 397: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5889262557029724
    2. '/' → logprob: -0.8389262557029724
    3. '/K' → logprob: -4.588926315307617
    4. '/i' → logprob: -6.588926315307617
    5. ')' → logprob: -7.713926315307617
    6. '[i' → logprob: -8.088926315307617
    7. '(i' → logprob: -8.213926315307617
    8. 'i' → logprob: -9.463926315307617
    9. ' ' → logprob: -9.963926315307617
    10. '_i' → logprob: -10.338926315307617

Token 398: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.005233882926404476
    2. ' K' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.630233764648438
    4. ' ' → logprob: -17.880233764648438
    5. 'k' → logprob: -18.380233764648438
    6. ')' → logprob: -19.005233764648438
    7. '	K' → logprob: -19.505233764648438
    8. '   ' → logprob: -20.255233764648438
    9. ',K' → logprob: -20.880233764648438
    10. '  ' → logprob: -21.255233764648438

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000453910295618698
    2. ' )' → logprob: -7.875453948974609
    3. ')+' → logprob: -10.12545394897461
    4. '))' → logprob: -11.62545394897461
    5. '),' → logprob: -12.25045394897461
    6. ')
' → logprob: -12.50045394897461
    7. ' ' → logprob: -13.00045394897461
    8. ')`' → logprob: -13.00045394897461
    9. '_' → logprob: -13.62545394897461
    10. '")' → logprob: -13.87545394897461

Token 400: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7052596211433411
    2. '\' → logprob: -1.7052595615386963
    3. '
' → logprob: -2.8302595615386963
    4. '\n' → logprob: -2.9552595615386963
    5. '  
' → logprob: -3.3302595615386963
    6. 'i' → logprob: -3.3302595615386963
    7. 'b' → logprob: -3.9552595615386963
    8. 'def' → logprob: -4.080259799957275
    9. '_i' → logprob: -4.080259799957275
    10. ' 
' → logprob: -4.205259799957275

Token 401: ' -' (ID: 533)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0686990022659302
    2. 'b' → logprob: -2.0686988830566406
    3. 'def' → logprob: -2.0686988830566406
    4. '
' → logprob: -2.0686988830566406
    5. '\' → logprob: -2.9436988830566406
    6. '\n' → logprob: -3.0686988830566406
    7. '  
' → logprob: -3.4436988830566406
    8. 'import' → logprob: -3.4436988830566406
    9. '#' → logprob: -3.8186988830566406
    10. 'i' → logprob: -4.193698883056641

Token 402: ' On' (ID: 2160)
  Prédit: 'On'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'On' → logprob: -1.2265446186065674
    2. 'b' → logprob: -1.4765446186065674
    3. 'from' → logprob: -1.8515446186065674
    4. 'for' → logprob: -2.2265446186065674
    5. ' b' → logprob: -2.9765446186065674
    6. ' for' → logprob: -3.6015446186065674
    7. 'sum' → logprob: -3.7265446186065674
    8. ' On' → logprob: -3.7265446186065674
    9. 'def' → logprob: -3.8515446186065674
    10. '#' → logprob: -3.8515446186065674

Token 403: ' calc' (ID: 25691)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.38146162033081055
    2. ' calc' → logprob: -2.1314616203308105
    3. ' ajoute' → logprob: -2.7564616203308105
    4. 'continue' → logprob: -3.1314616203308105
    5. ' initialise' → logprob: -3.1314616203308105
    6. ' construit' → logprob: -4.6314616203308105
    7. 'aj' → logprob: -5.0064616203308105
    8. ' poursuit' → logprob: -5.5064616203308105
    9. ' essa' → logprob: -5.6314616203308105
    10. ' cum' → logprob: -5.8814616203308105

Token 404: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.0005488642491400242
    2. 'l' → logprob: -8.50054931640625
    3. 'ul' → logprob: -9.25054931640625
    4. 'cule' → logprob: -9.75054931640625
    5. 'ulé' → logprob: -10.62554931640625
    6. '#' → logprob: -10.62554931640625
    7. '_' → logprob: -11.12554931640625
    8. 'le' → logprob: -11.12554931640625
    9. '<' → logprob: -11.12554931640625
    10. '\' → logprob: -11.25054931640625

Token 405: ' b' (ID: 287)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7844460010528564
    2. ' les' → logprob: -1.4094460010528564
    3. 'b' → logprob: -2.5344460010528564
    4. 'les' → logprob: -2.5344460010528564
    5. ' sum' → logprob: -2.7844460010528564
    6. ' b' → logprob: -3.4094460010528564
    7. 'for' → logprob: -3.9094460010528564
    8. ' for' → logprob: -5.534445762634277
    9. ' progressivement' → logprob: -5.659445762634277
    10. '```' → logprob: -5.784445762634277

Token 406: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.2584497630596161
    2. 'i' → logprob: -1.7584497928619385
    3. 's' → logprob: -3.7584497928619385
    4. '_' → logprob: -3.7584497928619385
    5. ' =' → logprob: -5.633449554443359
    6. '[i' → logprob: -6.258449554443359
    7. '_sum' → logprob: -6.633449554443359
    8. 'sum' → logprob: -7.758449554443359
    9. '_prev' → logprob: -7.883449554443359
    10. '_prec' → logprob: -8.63344955444336

Token 407: ' selon' (ID: 27571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4702540934085846
    2. ' =' → logprob: -1.0952540636062622
    3. '=' → logprob: -3.2202541828155518
    4. '_i' → logprob: -8.345253944396973
    5. 'es' → logprob: -8.970253944396973
    6. '=i' → logprob: -9.845253944396973
    7. '_' → logprob: -10.095253944396973
    8. '_min' → logprob: -10.220253944396973
    9. 'i' → logprob: -10.220253944396973
    10. '[i' → logprob: -10.470253944396973

Token 408: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2126438617706299
    2. ' la' → logprob: -1.2126438617706299
    3. 'la' → logprob: -1.8376438617706299
    4. ':' → logprob: -2.96264386177063
    5. 'i' → logprob: -3.08764386177063
    6. ' cette' → logprob: -3.08764386177063
    7. 'ce' → logprob: -3.71264386177063
    8. 'l' → logprob: -3.96264386177063
    9. ' b' → logprob: -4.087643623352051
    10. ' i' → logprob: -4.962643623352051

Token 409: ' contr' (ID: 6030)
  Prédit: ' formule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' formule' → logprob: -1.190438151359558
    2. 'form' → logprob: -1.565438151359558
    3. 'ceil' → logprob: -2.1904382705688477
    4. 'r' → logprob: -2.3154382705688477
    5. 'suite' → logprob: -2.4404382705688477
    6. ' suivante' → logprob: -3.8154382705688477
    7. 'forme' → logprob: -3.8154382705688477
    8. 'import' → logprob: -4.065438270568848
    9. ' somme' → logprob: -4.440438270568848
    10. 's' → logprob: -4.565438270568848

Token 410: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.046010006219148636
    2. 'aint' → logprob: -3.1710100173950195
    3. 'int' → logprob: -7.1710100173950195
    4. 'a' → logprob: -7.2960100173950195
    5. 'aints' → logprob: -8.04601001739502
    6. 'i' → logprob: -8.29601001739502
    7. 'ôle' → logprob: -8.54601001739502
    8. 'ain' → logprob: -8.79601001739502
    9. 'uite' → logprob: -9.67101001739502
    10. 'u' → logprob: -9.79601001739502

Token 411: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33041366934776306
    2. 'b' → logprob: -2.830413579940796
    3. '  
' → logprob: -2.830413579940796
    4. ' 
' → logprob: -2.955413579940796
    5. '```' → logprob: -3.705413579940796
    6. ' =' → logprob: -3.955413579940796
    7. '_i' → logprob: -4.330413818359375
    8. 'i' → logprob: -4.330413818359375
    9. '\n' → logprob: -4.705413818359375
    10. '=' → logprob: -5.080413818359375

Token 412: ' on' (ID: 402)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.4180259108543396
    2. ' puis' → logprob: -2.2930259704589844
    3. ' i' → logprob: -2.9180259704589844
    4. 'en' → logprob: -3.0430259704589844
    5. ' b' → logprob: -3.1680259704589844
    6. ' 
' → logprob: -3.5430259704589844
    7. ' et' → logprob: -3.9180259704589844
    8. 'b' → logprob: -4.543025970458984
    9. ' sum' → logprob: -5.293025970458984
    10. 'sum' → logprob: -5.418025970458984

Token 413: ' somme' (ID: 64484)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.26488834619522095
    2. ' ajoute' → logprob: -2.139888286590576
    3. 'continue' → logprob: -3.139888286590576
    4. '_' → logprob: -4.139888286590576
    5. '_continue' → logprob: -4.139888286590576
    6. 'aj' → logprob: -4.889888286590576
    7. ' avance' → logprob: -5.514888286590576
    8. ' calc' → logprob: -5.639888286590576
    9. ' cum' → logprob: -5.639888286590576
    10. 'contin' → logprob: -5.889888286590576

Token 414: ' les' (ID: 1341)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.39781293272972107
    2. '_' → logprob: -2.522812843322754
    3. ' b' → logprob: -2.647812843322754
    4. 'b' → logprob: -2.772812843322754
    5. ' des' → logprob: -3.272812843322754
    6. ' les' → logprob: -3.647812843322754
    7. ' _' → logprob: -3.772812843322754
    8. ' +=' → logprob: -4.647812843322754
    9. 'sum' → logprob: -5.397812843322754
    10. ' ' → logprob: -6.272812843322754

Token 415: ' blocs' (ID: 182599)
  Prédit: ' blocs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blocs' → logprob: -0.5838527679443359
    2. ' b' → logprob: -2.208852767944336
    3. '_b' → logprob: -2.458852767944336
    4. 'b' → logprob: -2.708852767944336
    5. 'bl' → logprob: -2.958852767944336
    6. '_' → logprob: -3.333852767944336
    7. '_bloc' → logprob: -3.833852767944336
    8. ' espaces' → logprob: -3.833852767944336
    9. 'blocks' → logprob: -4.458852767944336
    10. ' bloc' → logprob: -4.583852767944336

Token 416: ' et' (ID: 859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8213173151016235
    2. '
' → logprob: -0.9463173151016235
    3. ' 
' → logprob: -3.571317195892334
    4. '=' → logprob: -3.696317195892334
    5. '\' → logprob: -3.821317195892334
    6. '  
' → logprob: -3.821317195892334
    7. '```' → logprob: -4.696317195892334
    8. 'def' → logprob: -4.696317195892334
    9. 's' → logprob: -4.821317195892334
    10. '\n' → logprob: -5.071317195892334

Token 417: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2398056983947754
    2. 'on' → logprob: -2.3648056983947754
    3. 'v' → logprob: -2.4898056983947754
    4. ' vér' → logprob: -4.864805698394775
    5. ' continue' → logprob: -4.864805698394775
    6. ' on' → logprob: -4.989805698394775
    7. 'compare' → logprob: -5.239805698394775
    8. 'contin' → logprob: -5.864805698394775
    9. 'continu' → logprob: -6.114805698394775
    10. 'ver' → logprob: -6.364805698394775

Token 418: ' vér' (ID: 42524)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10585418343544006
    2. ' continue' → logprob: -2.8558542728424072
    3. ' vér' → logprob: -3.3558542728424072
    4. 'v' → logprob: -5.730854034423828
    5. 'aj' → logprob: -6.605854034423828
    6. 'p' → logprob: -7.230854034423828
    7. 'ver' → logprob: -7.480854034423828
    8. ' ajoute' → logprob: -7.480854034423828
    9. 'arr' → logprob: -8.355854034423828
    10. ' poursuit' → logprob: -8.480854034423828

Token 419: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -4.842555426876061e-06
    2. 'if' → logprob: -13.000004768371582
    3. 'ifié' → logprob: -14.125004768371582
    4. 'ife' → logprob: -14.375004768371582
    5. 'i' → logprob: -15.000004768371582
    6. 'ie' → logprob: -15.625004768371582
    7. 'ifiez' → logprob: -15.875004768371582
    8. 'ifier' → logprob: -16.1250057220459
    9. 'ifi' → logprob: -16.5000057220459
    10. '
' → logprob: -16.8750057220459

Token 420: ' que' (ID: 661)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9528294205665588
    2. ' ' → logprob: -1.327829360961914
    3. '_' → logprob: -2.452829360961914
    4. 'def' → logprob: -2.827829360961914
    5. '=' → logprob: -3.452829360961914
    6. '\' → logprob: -3.827829360961914
    7. '[' → logprob: -3.952829360961914
    8. '
' → logprob: -4.202829360961914
    9. 's' → logprob: -4.452829360961914
    10. '#' → logprob: -4.577829360961914

Token 421: ' la' (ID: 557)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6488741040229797
    2. ' sum' → logprob: -1.523874044418335
    3. 'sum' → logprob: -2.023874044418335
    4. 'total' → logprob: -2.648874044418335
    5. ' somme' → logprob: -3.398874044418335
    6. ' c' → logprob: -5.023874282836914
    7. ' la' → logprob: -5.023874282836914
    8. ' <=' → logprob: -6.148874282836914
    9. ' ' → logprob: -6.523874282836914
    10. 'c' → logprob: -7.023874282836914

Token 422: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.2937687337398529
    2. ' total' → logprob: -1.4187687635421753
    3. ' <=' → logprob: -5.668768882751465
    4. 'total' → logprob: -5.918768882751465
    5. ' totale' → logprob: -6.418768882751465
    6. ' ' → logprob: -7.168768882751465
    7. ' sum' → logprob: -7.293768882751465
    8. ' reste' → logprob: -7.543768882751465
    9. '<=' → logprob: -7.668768882751465
    10. ' ≤' → logprob: -7.793768882751465

Token 423: ' <=' (ID: 5017)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.24155816435813904
    2. '+' → logprob: -2.741558074951172
    3. ' <=' → logprob: -2.991558074951172
    4. ' +' → logprob: -3.366558074951172
    5. ' des' → logprob: -4.116558074951172
    6. '_' → logprob: -4.116558074951172
    7. '<=' → logprob: -4.491558074951172
    8. 'des' → logprob: -5.366558074951172
    9. '_total' → logprob: -5.366558074951172
    10. '_des' → logprob: -5.616558074951172

Token 424: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4742077589035034
    2. ' N' → logprob: -0.9742077589035034
    3. ' ' → logprob: -9.474207878112793
    4. ' ' → logprob: -9.974207878112793
    5. 'n' → logprob: -12.349207878112793
    6. ' n' → logprob: -14.724207878112793
    7. '\n' → logprob: -14.974207878112793
    8. '\' → logprob: -15.099207878112793
    9. '  ' → logprob: -15.224207878112793
    10. ' 
' → logprob: -15.224207878112793

Token 425: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48470035195350647
    2. '
' → logprob: -1.109700322151184
    3. ' 
' → logprob: -3.7347004413604736
    4. '\' → logprob: -4.9847002029418945
    5. 'h' → logprob: -5.3597002029418945
    6. '\n' → logprob: -5.4847002029418945
    7. '#' → logprob: -5.9847002029418945
    8. 'b' → logprob: -5.9847002029418945
    9. ' def' → logprob: -6.4847002029418945
    10. '```' → logprob: -6.6097002029418945

Token 426: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6799333095550537
    2. '
' → logprob: -1.3049333095550537
    3. '\' → logprob: -2.6799333095550537
    4. ' 
' → logprob: -2.9299333095550537
    5. 'h' → logprob: -4.179933547973633
    6. 'b' → logprob: -4.179933547973633
    7. '\n' → logprob: -4.429933547973633
    8. '```' → logprob: -4.429933547973633
    9. '_' → logprob: -4.929933547973633
    10. 'n' → logprob: -5.054933547973633

Token 427: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1968768835067749
    2. 'b' → logprob: -2.0718770027160645
    3. '
' → logprob: -3.0718770027160645
    4. ' 
' → logprob: -5.5718770027160645
    5. 'h' → logprob: -7.3218770027160645
    6. '\' → logprob: -7.6968770027160645
    7. '```' → logprob: -7.8218770027160645
    8. '#' → logprob: -8.196876525878906
    9. 'n' → logprob: -8.571876525878906
    10. '

' → logprob: -9.071876525878906

Token 428: ' Alg' (ID: 31776)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.4153549020411447e-05
    2. 'import' → logprob: -11.37502384185791
    3. '```' → logprob: -12.12502384185791
    4. ' def' → logprob: -12.25002384185791
    5. 'from' → logprob: -13.75002384185791
    6. '
' → logprob: -13.75002384185791
    7. ' 
' → logprob: -16.875024795532227
    8. 'for' → logprob: -17.625024795532227
    9. 'h' → logprob: -17.750024795532227
    10. 'N' → logprob: -18.000024795532227

Token 429: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.0024490193463861942
    2. 'o' → logprob: -6.502449035644531
    3. 'orithm' → logprob: -7.127449035644531
    4. 'or' → logprob: -9.252449035644531
    5. '#' → logprob: -10.502449035644531
    6. 'orit' → logprob: -11.877449035644531
    7. 'orig' → logprob: -13.252449035644531
    8. '}' → logprob: -13.502449035644531
    9. 'ort' → logprob: -13.752449035644531
    10. '_' → logprob: -13.877449035644531

Token 430: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.0017035098280757666
    2. 'm' → logprob: -6.37670373916626
    3. '#' → logprob: -14.626703262329102
    4. 'mme' → logprob: -15.501703262329102
    5. 'mes' → logprob: -15.751703262329102
    6. 'hme' → logprob: -15.876703262329102
    7. ' me' → logprob: -16.5017032623291
    8. 'e' → logprob: -16.5017032623291
    9. '_me' → logprob: -16.7517032623291
    10. 'Me' → logprob: -17.0017032623291

Token 431: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031956348568201065
    2. ':' → logprob: -3.531956434249878
    3. '
' → logprob: -7.406956195831299
    4. ' def' → logprob: -7.656956195831299
    5. '```' → logprob: -7.656956195831299
    6. ':
' → logprob: -8.281956672668457
    7. '\' → logprob: -8.906956672668457
    8. ':def' → logprob: -9.156956672668457
    9. ' :' → logprob: -9.656956672668457
    10. '#' → logprob: -10.531956672668457

Token 432: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025846298784017563
    2. '#' → logprob: -4.025846481323242
    3. 'for' → logprob: -5.525846481323242
    4. ' def' → logprob: -5.900846481323242
    5. ' for' → logprob: -8.025846481323242
    6. 'from' → logprob: -8.150846481323242
    7. '```' → logprob: -8.900846481323242
    8. 'import' → logprob: -9.400846481323242
    9. ' #' → logprob: -10.775846481323242
    10. '``' → logprob: -11.025846481323242

Token 433: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005524608306586742
    2. ' def' → logprob: -5.380524635314941
    3. '```' → logprob: -7.255524635314941
    4. '
' → logprob: -9.130524635314941
    5. 'for' → logprob: -9.880524635314941
    6. '``' → logprob: -11.380524635314941
    7. 'python' → logprob: -12.130524635314941
    8. 'import' → logprob: -12.130524635314941
    9. ' for' → logprob: -12.255524635314941
    10. 'from' → logprob: -12.380524635314941

Token 434: ' Test' (ID: 4674)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38979893922805786
    2. 'for' → logprob: -1.764798879623413
    3. ' def' → logprob: -2.764798879623413
    4. ' for' → logprob: -3.264798879623413
    5. 'Tester' → logprob: -4.264799118041992
    6. 'Pour' → logprob: -4.639799118041992
    7. 'On' → logprob: -5.139799118041992
    8. '#' → logprob: -5.889799118041992
    9. 'Dé' → logprob: -6.264799118041992
    10. ' binary' → logprob: -6.389799118041992

Token 435: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.11031649261713028
    2. 'e' → logprob: -2.485316514968872
    3. 'r' → logprob: -4.610316276550293
    4. ' e' → logprob: -5.985316276550293
    5. 'é' → logprob: -6.360316276550293
    6. ' de' → logprob: -6.485316276550293
    7. ' ' → logprob: -6.485316276550293
    8. '#' → logprob: -6.860316276550293
    9. '   ' → logprob: -7.485316276550293
    10. 'ons' → logprob: -7.610316276550293

Token 436: ' par' (ID: 686)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.013050228357315063
    2. 'h' → logprob: -4.388050079345703
    3. ' un' → logprob: -8.763050079345703
    4. '_h' → logprob: -8.888050079345703
    5. ' une' → logprob: -9.763050079345703
    6. ' ' → logprob: -10.013050079345703
    7. 'def' → logprob: -10.763050079345703
    8. ' for' → logprob: -11.013050079345703
    9. 'une' → logprob: -11.138050079345703
    10. ' de' → logprob: -11.263050079345703

Token 437: ' dich' (ID: 16637)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -1.2162010669708252
    2. 'binary' → logprob: -1.8412010669708252
    3. ' dich' → logprob: -2.091201066970825
    4. 'une' → logprob: -3.091201066970825
    5. ' incr' → logprob: -3.091201066970825
    6. 'augmentation' → logprob: -3.216201066970825
    7. 'p' → logprob: -3.341201066970825
    8. 'increment' → logprob: -3.591201066970825
    9. ' essais' → logprob: -3.591201066970825
    10. ' augmentation' → logprob: -3.966201066970825

Token 438: 'ot' (ID: 346)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.2091338187456131
    2. 'ot' → logprob: -1.7091338634490967
    3. 'otom' → logprob: -5.334133625030518
    4. 'r' → logprob: -6.584133625030518
    5. 'oto' → logprob: -7.584133625030518
    6. '-' → logprob: -8.209134101867676
    7. 'otomy' → logprob: -8.459134101867676
    8. 'op' → logprob: -8.834134101867676
    9. '#' → logprob: -9.334134101867676
    10. 'ó' → logprob: -9.959134101867676

Token 439: 'omie' (ID: 115249)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.008457721211016178
    2. 'otom' → logprob: -5.758457660675049
    3. 'o' → logprob: -6.258457660675049
    4. 'otomy' → logprob: -6.508457660675049
    5. 'omie' → logprob: -7.508457660675049
    6. ' ot' → logprob: -7.883457660675049
    7. 'Ot' → logprob: -8.383458137512207
    8. '#' → logprob: -9.758458137512207
    9. 'tom' → logprob: -9.758458137512207
    10. '_ot' → logprob: -9.758458137512207

Token 440: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.92317795753479
    2. ' ' → logprob: -1.42317795753479
    3. 'def' → logprob: -1.92317795753479
    4. ' def' → logprob: -2.04817795753479
    5. '#' → logprob: -3.54817795753479
    6. ' 
' → logprob: -4.173177719116211
    7. ',' → logprob: -5.048177719116211
    8. ' _' → logprob: -5.423177719116211
    9. '<|end|>' → logprob: -5.423177719116211
    10. ' (' → logprob: -5.673177719116211

Token 441: ' hauteur' (ID: 72987)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42789286375045776
    2. ' hauteur' → logprob: -1.1778929233551025
    3. ' taille' → logprob: -4.302892684936523
    4. ' suite' → logprob: -5.052892684936523
    5. ' ' → logprob: -5.677892684936523
    6. ' longueur' → logprob: -5.677892684936523
    7. ' valeur' → logprob: -6.052892684936523
    8. ' possible' → logprob: -6.427892684936523
    9. ' prochaine' → logprob: -6.552892684936523
    10. '  ' → logprob: -6.677892684936523

Token 442: ' h' (ID: 312)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5910235047340393
    2. 'def' → logprob: -1.8410234451293945
    3. ' def' → logprob: -2.2160234451293945
    4. '_' → logprob: -2.3410234451293945
    5. ')' → logprob: -3.8410234451293945
    6. '#' → logprob: -4.7160234451293945
    7. ',' → logprob: -4.7160234451293945
    8. '=' → logprob: -5.2160234451293945
    9. ' =' → logprob: -5.2160234451293945
    10. ':' → logprob: -5.5910234451293945

Token 443: ' possible' (ID: 4149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23131485283374786
    2. ' def' → logprob: -2.3563148975372314
    3. '_' → logprob: -2.9813148975372314
    4. ':' → logprob: -3.3563148975372314
    5. ',' → logprob: -4.856314659118652
    6. ' ' → logprob: -5.606314659118652
    7. '#' → logprob: -6.106314659118652
    8. ')' → logprob: -6.106314659118652
    9. '```' → logprob: -6.231314659118652
    10. '
' → logprob: -6.856314659118652

Token 444: ' entre' (ID: 3853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37695327401161194
    2. '_' → logprob: -1.8769532442092896
    3. ' def' → logprob: -3.001953363418579
    4. '<|end|>' → logprob: -4.126953125
    5. ' ' → logprob: -4.251953125
    6. ')' → logprob: -4.376953125
    7. ':' → logprob: -4.376953125
    8. ',' → logprob: -4.751953125
    9. '#' → logprob: -4.751953125
    10. ' 
' → logprob: -5.126953125

Token 445: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023666786029934883
    2. ' ' → logprob: -3.7736668586730957
    3. '0' → logprob: -7.773666858673096
    4. ' ' → logprob: -14.648666381835938
    5. '   ' → logprob: -16.898666381835938
    6. '```' → logprob: -17.023666381835938
    7. '2' → logprob: -17.148666381835938
    8. '  ' → logprob: -18.648666381835938
    9. 'def' → logprob: -19.148666381835938
    10. '=' → logprob: -19.648666381835938

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007110013975761831
    2. '0' → logprob: -7.250710964202881
    3. ' ' → logprob: -13.750711441040039
    4. '```' → logprob: -17.12571144104004
    5. '   ' → logprob: -19.62571144104004
    6. '2' → logprob: -19.87571144104004
    7. 'low' → logprob: -20.12571144104004
    8. 'def' → logprob: -20.87571144104004
    9. '#' → logprob: -21.87571144104004
    10. 'import' → logprob: -22.00071144104004

Token 447: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.009762583300471306
    2. 'et' → logprob: -5.259762763977051
    3. ' ' → logprob: -5.634762763977051
    4. ' and' → logprob: -7.634762763977051
    5. ',' → logprob: -8.25976276397705
    6. ' ,' → logprob: -9.50976276397705
    7. 'and' → logprob: -10.13476276397705
    8. ' ' → logprob: -11.00976276397705
    9. '```' → logprob: -11.25976276397705
    10. ' и' → logprob: -11.25976276397705

Token 448: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.16022534668445587
    2. ' N' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.035224914550781
    4. ' ' → logprob: -14.910224914550781
    5. 'n' → logprob: -17.16022491455078
    6. '	N' → logprob: -18.03522491455078
    7. '\n' → logprob: -18.16022491455078
    8. ' \(' → logprob: -18.53522491455078
    9. ' n' → logprob: -19.16022491455078
    10. '100' → logprob: -19.16022491455078

Token 449: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7913383841514587
    2. 'def' → logprob: -1.0413384437561035
    3. ':' → logprob: -2.9163384437561035
    4. ' ' → logprob: -3.2913384437561035
    5. ')' → logprob: -3.9163384437561035
    6. '#' → logprob: -3.9163384437561035
    7. '
' → logprob: -4.1663384437561035
    8. ' def' → logprob: -4.4163384437561035
    9. '=' → logprob: -4.7913384437561035
    10. ' 
' → logprob: -5.1663384437561035

Token 450: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0424525737762451
    2. ' ' → logprob: -1.4174525737762451
    3. '```' → logprob: -2.417452573776245
    4. '_' → logprob: -2.667452573776245
    5. ':' → logprob: -2.917452573776245
    6. '#' → logprob: -3.292452573776245
    7. ')' → logprob: -3.417452573776245
    8. 'n' → logprob: -3.792452573776245
    9. '=' → logprob: -4.167452812194824
    10. '
' → logprob: -4.542452812194824

Token 451: ' -' (ID: 533)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43802812695503235
    2. ':' → logprob: -1.31302809715271
    3. '```' → logprob: -3.68802809715271
    4. ' ' → logprob: -4.063028335571289
    5. ' :' → logprob: -4.438028335571289
    6. '
' → logprob: -4.938028335571289
    7. ' def' → logprob: -5.063028335571289
    8. ')' → logprob: -6.063028335571289
    9. '#' → logprob: -6.063028335571289
    10. '.' → logprob: -6.313028335571289

Token 452: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06721749156713486
    2. ' def' → logprob: -2.8172175884246826
    3. 'low' → logprob: -5.8172173500061035
    4. ' low' → logprob: -6.6922173500061035
    5. 'while' → logprob: -8.067217826843262
    6. '#' → logprob: -8.817217826843262
    7. 'mid' → logprob: -8.942217826843262
    8. 'left' → logprob: -9.192217826843262
    9. ' while' → logprob: -9.692217826843262
    10. ' left' → logprob: -10.192217826843262

Token 453: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.03544463962316513
    2. ' each' → logprob: -4.535444736480713
    3. ' tester' → logprob: -4.535444736480713
    4. 'ch' → logprob: -5.285444736480713
    5. 'each' → logprob: -6.410444736480713
    6. ' h' → logprob: -6.535444736480713
    7. 'cha' → logprob: -6.910444736480713
    8. ' vérifier' → logprob: -7.035444736480713
    9. 'h' → logprob: -7.160444736480713
    10. ' ch' → logprob: -7.160444736480713

Token 454: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.49124616384506226
    2. ' test' → logprob: -0.9912461638450623
    3. 'h' → logprob: -4.366246223449707
    4. ' ' → logprob: -5.991246223449707
    5. 'test' → logprob: -7.616246223449707
    6. ' valeur' → logprob: -7.866246223449707
    7. ' ' → logprob: -8.491246223449707
    8. ' tentative' → logprob: -8.741246223449707
    9. ' iteration' → logprob: -9.116246223449707
    10. ' ess' → logprob: -9.491246223449707

Token 455: ' testé' (ID: 181173)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6647080779075623
    2. ':' → logprob: -0.9147080779075623
    3. ' ,' → logprob: -3.164708137512207
    4. ' :' → logprob: -3.664708137512207
    5. ' test' → logprob: -5.414708137512207
    6. ' ' → logprob: -6.164708137512207
    7. ' on' → logprob: -6.164708137512207
    8. ' testé' → logprob: -6.164708137512207
    9. ':
' → logprob: -6.289708137512207
    10. ' possible' → logprob: -6.664708137512207

Token 456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.476269394159317
    2. ':' → logprob: -0.9762693643569946
    3. ' ,' → logprob: -7.226269245147705
    4. ':
' → logprob: -7.351269245147705
    5. ' :' → logprob: -7.601269245147705
    6. 'def' → logprob: -9.351269721984863
    7. ' ' → logprob: -9.601269721984863
    8. ',
' → logprob: -9.851269721984863
    9. '#' → logprob: -10.726269721984863
    10. '):' → logprob: -11.351269721984863

Token 457: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.285601407289505
    2. 'on' → logprob: -2.0356013774871826
    3. ' calcul' → logprob: -2.2856013774871826
    4. '#' → logprob: -5.410601615905762
    5. 'calcul' → logprob: -5.535601615905762
    6. 'def' → logprob: -5.535601615905762
    7. ' ' → logprob: -7.160601615905762
    8. ' #' → logprob: -7.660601615905762
    9. 'cal' → logprob: -7.785601615905762
    10. '   ' → logprob: -8.285601615905762

Token 458: ' sim' (ID: 1845)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.3060310482978821
    2. 'cal' → logprob: -2.3060309886932373
    3. ' vér' → logprob: -2.5560309886932373
    4. ' essa' → logprob: -3.8060309886932373
    5. 'calc' → logprob: -4.056031227111816
    6. ' construit' → logprob: -4.181031227111816
    7. ' teste' → logprob: -4.931031227111816
    8. ' tente' → logprob: -5.681031227111816
    9. 'def' → logprob: -5.806031227111816
    10. ' sim' → logprob: -6.056031227111816

Token 459: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.019444430246949196
    2. 'ple' → logprob: -4.019444465637207
    3. '#' → logprob: -8.144444465637207
    4. 'ul' → logprob: -9.019444465637207
    5. 'plement' → logprob: -9.144444465637207
    6. 'u' → logprob: -9.144444465637207
    7. '```' → logprob: -9.394444465637207
    8. 'uple' → logprob: -9.519444465637207
    9. '_' → logprob: -9.769444465637207
    10. '{' → logprob: -10.019444465637207

Token 460: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.05255521461367607
    2. ' l' → logprob: -4.052555084228516
    3. 'la' → logprob: -4.302555084228516
    4. ' le' → logprob: -4.677555084228516
    5. 'def' → logprob: -5.677555084228516
    6. 'le' → logprob: -6.052555084228516
    7. 'l' → logprob: -6.177555084228516
    8. ' les' → logprob: -6.677555084228516
    9. ' h' → logprob: -8.427555084228516
    10. ' def' → logprob: -8.427555084228516

Token 461: ' construction' (ID: 9770)
  Prédit: 'construction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'construction' → logprob: -0.14432236552238464
    2. 'tour' → logprob: -2.394322395324707
    3. ' construction' → logprob: -4.144322395324707
    4. 'ré' → logprob: -4.144322395324707
    5. 'distribution' → logprob: -5.644322395324707
    6. 'composition' → logprob: -7.144322395324707
    7. 're' → logprob: -7.144322395324707
    8. 'configuration' → logprob: -7.269322395324707
    9. 'pile' → logprob: -7.394322395324707
    10. 's' → logprob: -7.519322395324707

Token 462: ' :
' (ID: 10039)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8274575471878052
    2. ' d' → logprob: -0.9524575471878052
    3. ' de' → logprob: -2.5774574279785156
    4. ' def' → logprob: -2.8274574279785156
    5. ' suivante' → logprob: -4.702457427978516
    6. 'd' → logprob: -5.327457427978516
    7. ' ' → logprob: -5.952457427978516
    8. '```' → logprob: -6.077457427978516
    9. ',' → logprob: -6.202457427978516
    10. ' du' → logprob: -6.202457427978516

Token 463: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09803906083106995
    2. ' def' → logprob: -2.473039150238037
    3. '#' → logprob: -5.223039150238037
    4. '```' → logprob: -5.973039150238037
    5. '
' → logprob: -8.098038673400879
    6. ' 
' → logprob: -8.223038673400879
    7. 'h' → logprob: -9.473038673400879
    8. ' #' → logprob: -9.473038673400879
    9. ' h' → logprob: -9.473038673400879
    10. '``' → logprob: -10.223038673400879

Token 464: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6485947966575623
    2. 'def' → logprob: -0.8985947966575623
    3. ' b' → logprob: -3.273594856262207
    4. 'b' → logprob: -4.148594856262207
    5. ' for' → logprob: -5.773594856262207
    6. '```' → logprob: -5.773594856262207
    7. ' low' → logprob: -6.148594856262207
    8. '   ' → logprob: -6.273594856262207
    9. ' h' → logprob: -6.773594856262207
    10. 'h' → logprob: -7.023594856262207

Token 465: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.7387697100639343
    2. 'b' (adapté à ' b') → logprob: -0.8637697100639343
    3. ' sum' → logprob: -2.988769769668579
    4. 'sum' → logprob: -3.863769769668579
    5. '   ' → logprob: -4.61376953125
    6. 'def' → logprob: -5.23876953125
    7. ' def' → logprob: -5.73876953125
    8. '```' → logprob: -5.73876953125
    9. 'blocks' → logprob: -6.98876953125
    10. '#' → logprob: -6.98876953125

Token 466: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5841951966285706
    2. '1' → logprob: -1.4591951370239258
    3. '_' → logprob: -2.084195137023926
    4. '_i' → logprob: -3.209195137023926
    5. 'i' → logprob: -4.084195137023926
    6. 's' → logprob: -4.209195137023926
    7. '=[]' → logprob: -5.834195137023926
    8. '=' → logprob: -6.334195137023926
    9. '_blocks' → logprob: -6.334195137023926
    10. 'es' → logprob: -6.334195137023926

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150994554162025
    2. '=' → logprob: -4.018150806427002
    3. 's' → logprob: -14.51815128326416
    4. ' ' → logprob: -15.76815128326416
    5. ' ' → logprob: -15.89315128326416
    6. '=int' → logprob: -16.143150329589844
    7. ',' → logprob: -16.268150329589844
    8. ')' → logprob: -17.893150329589844
    9. 'b' → logprob: -17.893150329589844
    10. '}' → logprob: -18.268150329589844

Token 468: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.75247573852539
    4. ' ' → logprob: -19.00247573852539
    5. '[' → logprob: -20.37747573852539
    6. '  ' → logprob: -20.50247573852539
    7. '=' → logprob: -20.75247573852539
    8. '```' → logprob: -21.25247573852539
    9. '１' → logprob: -21.56497573852539
    10. '0' → logprob: -22.06497573852539

Token 469: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -20.750001907348633
    4. '```' → logprob: -21.500001907348633
    5. '[' → logprob: -22.875001907348633
    6. '`' → logprob: -22.875001907348633
    7. '
' → logprob: -23.250001907348633
    8. '１' → logprob: -23.250001907348633
    9. '{' → logprob: -23.375001907348633
    10. '=' → logprob: -23.375001907348633

Token 470: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.014071948826313019
    2. 'b' → logprob: -4.764071941375732
    3. '
' → logprob: -6.014071941375732
    4. ',' → logprob: -7.139071941375732
    5. ',
' → logprob: -7.764071941375732
    6. '  
' → logprob: -7.889071941375732
    7. '\n' → logprob: -8.01407241821289
    8. ' b' → logprob: -8.26407241821289
    9. '   ' → logprob: -8.38907241821289
    10. ' 
' → logprob: -8.88907241821289

Token 471: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2767324149608612
    2. '#' → logprob: -1.7767324447631836
    3. 'b' → logprob: -4.151732444763184
    4. ',' → logprob: -4.276732444763184
    5. '
' → logprob: -4.401732444763184
    6. ' #' → logprob: -4.901732444763184
    7. ' for' → logprob: -5.401732444763184
    8. 'for' → logprob: -5.526732444763184
    9. '```' → logprob: -5.526732444763184
    10. '  
' → logprob: -6.401732444763184

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1488044410943985
    2. ' for' → logprob: -2.7738044261932373
    3. ' sum' → logprob: -3.5238044261932373
    4. 'sum' → logprob: -3.7738044261932373
    5. 'for' → logprob: -4.273804664611816
    6. '    ' → logprob: -6.398804664611816
    7. '#' → logprob: -6.773804664611816
    8. ' ' → logprob: -6.898804664611816
    9. 'b' → logprob: -7.148804664611816
    10. ' #' → logprob: -7.398804664611816

Token 473: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.156208336353302
    2. 'b' → logprob: -2.6562082767486572
    3. 'po' → logprob: -3.6562082767486572
    4. 'for' → logprob: -4.156208515167236
    5. 'weight' → logprob: -4.656208515167236
    6. ' sum' → logprob: -4.656208515167236
    7. 's' → logprob: -5.406208515167236
    8. 'def' → logprob: -6.156208515167236
    9. 'from' → logprob: -6.656208515167236
    10. 'import' → logprob: -7.281208515167236

Token 474: '_blocks' (ID: 60244)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07908685505390167
    2. '_' → logprob: -2.9540867805480957
    3. '_ab' → logprob: -4.079086780548096
    4. '_blocks' → logprob: -5.079086780548096
    5. '_bloc' → logprob: -7.954086780548096
    6. '_des' → logprob: -8.329087257385254
    7. ' =' → logprob: -10.954087257385254
    8. '_so' → logprob: -11.079087257385254
    9. 's' → logprob: -11.079087257385254
    10. '_total' → logprob: -11.329087257385254

Token 475: ' =' (ID: 314)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.13322505354881287
    2. ' =' → logprob: -2.3832249641418457
    3. '=' → logprob: -3.5082249641418457
    4. '_' → logprob: -6.258224964141846
    5. 'above' → logprob: -8.758225440979004
    6. '_b' → logprob: -8.758225440979004
    7. 'Above' → logprob: -9.133225440979004
    8. '_sup' → logprob: -9.758225440979004
    9. '_=' → logprob: -11.133225440979004
    10. 'au' → logprob: -11.133225440979004

Token 476: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001172129064798355
    2. ' ' → logprob: -6.751172065734863
    3. '   ' → logprob: -13.626172065734863
    4. 'b' → logprob: -15.001172065734863
    5. '0' → logprob: -15.126172065734863
    6. '  ' → logprob: -16.37617301940918
    7. ' ' → logprob: -16.87617301940918
    8. '```' → logprob: -17.12617301940918
    9. '=' → logprob: -18.12617301940918
    10. ' b' → logprob: -18.37617301940918

Token 477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.805981972021982e-05
    2. ' ' → logprob: -9.25009822845459
    3. '   ' → logprob: -13.75009822845459
    4. 'b' → logprob: -14.37509822845459
    5. '0' → logprob: -15.75009822845459
    6. '```' → logprob: -16.750097274780273
    7. '  ' → logprob: -16.875097274780273
    8. ' ' → logprob: -17.937597274780273
    9. '[' → logprob: -18.312597274780273
    10. '     ' → logprob: -18.312597274780273

Token 478: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04326373711228371
    2. '  
' → logprob: -4.168263912200928
    3. '   ' → logprob: -4.543263912200928
    4. '   
' → logprob: -5.668263912200928
    5. ' 
' → logprob: -6.168263912200928
    6. '\n' → logprob: -6.293263912200928
    7. 'b' → logprob: -6.418263912200928
    8. '    
' → logprob: -6.418263912200928
    9. '
' → logprob: -6.418263912200928
    10. ' for' → logprob: -6.918263912200928

Token 479: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.582964301109314
    2. '   ' → logprob: -1.082964301109314
    3. '  
' → logprob: -3.4579644203186035
    4. '    
' → logprob: -4.0829644203186035
    5. '   
' → logprob: -4.0829644203186035
    6. ' 
' → logprob: -4.5829644203186035
    7. '```' → logprob: -4.7079644203186035
    8. '\n' → logprob: -5.7079644203186035
    9. 'b' → logprob: -5.7079644203186035
    10. '  ' → logprob: -6.2079644203186035

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01908111199736595
    2. 'b' → logprob: -5.019081115722656
    3. ' for' → logprob: -6.019081115722656
    4. '
' → logprob: -6.019081115722656
    5. ' b' → logprob: -6.769081115722656
    6. '```' → logprob: -6.769081115722656
    7. '  ' → logprob: -7.269081115722656
    8. '    
' → logprob: -7.394081115722656
    9. '    ' → logprob: -7.394081115722656
    10. 'for' → logprob: -7.519081115722656

Token 481: ' poids' (ID: 56058)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23100796341896057
    2. 'sum' → logprob: -2.4810080528259277
    3. 'for' → logprob: -2.6060080528259277
    4. 'possible' → logprob: -4.356008052825928
    5. 'i' → logprob: -4.606008052825928
    6. 'prev' → logprob: -5.606008052825928
    7. '```' → logprob: -5.731008052825928
    8. 'bi' → logprob: -5.856008052825928
    9. 'weight' → logprob: -5.981008052825928
    10. 'blocks' → logprob: -5.981008052825928

Token 482: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.6688573360443115
    2. '_' → logprob: -0.9188573360443115
    3. '_total' → logprob: -2.5438573360443115
    4. '_sur' → logprob: -5.168857574462891
    5. '_s' → logprob: -7.168857574462891
    6. 's' → logprob: -7.168857574462891
    7. '_max' → logprob: -7.293857574462891
    8. ' =' → logprob: -7.668857574462891
    9. '_des' → logprob: -8.04385757446289
    10. '_en' → logprob: -8.16885757446289

Token 483: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.004416347946971655
    2. 'ov' → logprob: -5.504416465759277
    3. '_' → logprob: -8.754416465759277
    4. 's' → logprob: -9.754416465759277
    5. 'OVE' → logprob: -10.379416465759277
    6. 'o' → logprob: -10.754416465759277
    7. 'out' → logprob: -11.629416465759277
    8. 'ouve' → logprob: -11.754416465759277
    9. ' ove' → logprob: -11.754416465759277
    10. 'sol' → logprob: -12.004416465759277

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12707550823688507
    2. '=' → logprob: -2.127075433731079
    3. 's' → logprob: -10.0020751953125
    4. ' ' → logprob: -10.3770751953125
    5. '_' → logprob: -10.7520751953125
    6. ' ' → logprob: -11.3770751953125
    7. '_total' → logprob: -11.6270751953125
    8. '_div' → logprob: -11.7520751953125
    9. ',' → logprob: -12.5020751953125
    10. '  ' → logprob: -12.7520751953125

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00978076085448265
    2. '0' → logprob: -4.8847808837890625
    3. ' ' → logprob: -6.2597808837890625
    4. 'b' → logprob: -8.384780883789062
    5. '   ' → logprob: -11.134780883789062
    6. ' b' → logprob: -11.384780883789062
    7. 'sum' → logprob: -13.134780883789062
    8. '  ' → logprob: -13.759780883789062
    9. ' ' → logprob: -14.634780883789062
    10. '[' → logprob: -15.009780883789062

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002865258604288101
    2. '0' → logprob: -5.877865314483643
    3. ' ' → logprob: -10.252864837646484
    4. 'b' → logprob: -10.627864837646484
    5. '   ' → logprob: -15.002864837646484
    6. '[' → logprob: -16.002864837646484
    7. 'sum' → logprob: -16.315364837646484
    8. '```' → logprob: -16.565364837646484
    9. ' b' → logprob: -16.627864837646484
    10. '  ' → logprob: -16.877864837646484

Token 487: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19275614619255066
    2. '   ' → logprob: -2.192756175994873
    3. ' for' → logprob: -4.317756175994873
    4. 'for' → logprob: -4.317756175994873
    5. ' 
' → logprob: -4.817756175994873
    6. '    
' → logprob: -4.942756175994873
    7. '  
' → logprob: -5.067756175994873
    8. '+' → logprob: -5.567756175994873
    9. '   
' → logprob: -6.317756175994873
    10. '```' → logprob: -6.317756175994873

Token 488: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7273618578910828
    2. '   ' → logprob: -1.1023619174957275
    3. '```' → logprob: -2.3523619174957275
    4. '  
' → logprob: -3.6023619174957275
    5. '    
' → logprob: -4.477361679077148
    6. ' 
' → logprob: -4.852361679077148
    7. '\n' → logprob: -4.977361679077148
    8. ' for' → logprob: -5.102361679077148
    9. '   
' → logprob: -5.102361679077148
    10. '\' → logprob: -5.477361679077148

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15043023228645325
    2. ' for' → logprob: -2.400430202484131
    3. 'for' → logprob: -3.275430202484131
    4. 'i' → logprob: -5.650430202484131
    5. ' i' → logprob: -6.400430202484131
    6. '
' → logprob: -6.400430202484131
    7. ' ' → logprob: -7.400430202484131
    8. 'b' → logprob: -7.775430202484131
    9. ' pour' → logprob: -7.900430202484131
    10. '  
' → logprob: -8.275430679321289

Token 490: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037861984223127365
    2. ' for' → logprob: -3.7878620624542236
    3. 'i' → logprob: -4.6628618240356445
    4. 'b' → logprob: -5.7878618240356445
    5. 'while' → logprob: -7.4128618240356445
    6. '```' → logprob: -7.5378618240356445
    7. '   ' → logprob: -8.162861824035645
    8. 'if' → logprob: -8.912861824035645
    9. ' i' → logprob: -8.912861824035645
    10. 'import' → logprob: -9.537861824035645

Token 491: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10021411627531052
    2. 'i' → logprob: -2.3502140045166016
    3. ' ' → logprob: -12.600214004516602
    4. ' ' → logprob: -13.350214004516602
    5. '_i' → logprob: -13.975214004516602
    6. ' _' → logprob: -14.225214004516602
    7. '	i' → logprob: -14.475214004516602
    8. '_' → logprob: -15.725214004516602
    9. ' range' → logprob: -16.7252140045166
    10. '   ' → logprob: -16.9752140045166

Token 492: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055438000708818436
    2. 'in' → logprob: -2.9304380416870117
    3. '=' → logprob: -8.805438041687012
    4. 'from' → logprob: -9.180438041687012
    5. ' en' → logprob: -9.680438041687012
    6. 'en' → logprob: -9.680438041687012
    7. ' =' → logprob: -10.055438041687012
    8. 'de' → logprob: -10.430438041687012
    9. ' ' → logprob: -10.430438041687012
    10. '1' → logprob: -11.055438041687012

Token 493: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036877207458019257
    2. ' ' → logprob: -5.628687858581543
    3. '1' → logprob: -9.503687858581543
    4. ' i' → logprob: -12.003687858581543
    5. 'i' → logprob: -12.628687858581543
    6. 'de' → logprob: -12.878687858581543
    7. 'range' → logprob: -14.378687858581543
    8. ' range' → logprob: -15.753687858581543
    9. '  ' → logprob: -16.128686904907227
    10. '3' → logprob: -16.503686904907227

Token 494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. ' ' → logprob: -11.625011444091797
    3. '1' → logprob: -14.125011444091797
    4. 'i' → logprob: -14.250011444091797
    5. 'de' → logprob: -15.000011444091797
    6. 'range' → logprob: -15.000011444091797
    7. '3' → logprob: -16.875011444091797
    8. ' i' → logprob: -17.000011444091797
    9. '   ' → logprob: -17.875011444091797
    10. '  ' → logprob: -18.375011444091797

Token 495: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0773310512304306
    2. 'à' → logprob: -2.702331066131592
    3. ' to' → logprob: -5.952331066131592
    4. ' jusqu' → logprob: -6.452331066131592
    5. 'to' → logprob: -6.827331066131592
    6. ' a' → logprob: -7.452331066131592
    7. ' ' → logprob: -7.702331066131592
    8. ',' → logprob: -7.827331066131592
    9. 'au' → logprob: -8.827330589294434
    10. ' in' → logprob: -9.452330589294434

Token 496: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.029750952497124672
    2. ' h' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.02975082397461
    4. ' ' → logprob: -15.77975082397461
    5. '	h' → logprob: -17.15475082397461
    6. ' ' → logprob: -17.65475082397461
    7. 'i' → logprob: -18.15475082397461
    8. '```' → logprob: -18.52975082397461
    9. ' i' → logprob: -19.02975082397461
    10. '  ' → logprob: -19.40475082397461

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025716645643115044
    2. ':
' → logprob: -3.775716543197632
    3. ' :' → logprob: -6.275716781616211
    4. '   ' → logprob: -8.025716781616211
    5. ' :
' → logprob: -8.900716781616211
    6. ',' → logprob: -9.400716781616211
    7. ' ' → logprob: -11.150716781616211
    8. '	' → logprob: -12.525716781616211
    9. '       ' → logprob: -12.775716781616211
    10. ' ' → logprob: -12.775716781616211

Token 498: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16038000583648682
    2. '       ' → logprob: -3.1603798866271973
    3. '    ' → logprob: -3.5353798866271973
    4. '```' → logprob: -3.9103798866271973
    5. ' bi' → logprob: -4.035379886627197
    6. '   ' → logprob: -4.535379886627197
    7. ' ' → logprob: -4.660379886627197
    8. '    ' → logprob: -6.035379886627197
    9. '   ' → logprob: -6.035379886627197
    10. '  ' → logprob: -6.160379886627197

Token 499: '      ' (ID: 1699)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18186788260936737
    2. ' ' → logprob: -3.306867837905884
    3. '   ' → logprob: -3.306867837905884
    4. ' bi' → logprob: -3.806867837905884
    5. '    ' → logprob: -3.931867837905884
    6. '       ' → logprob: -4.056868076324463
    7. '   ' → logprob: -5.056868076324463
    8. '  ' → logprob: -5.181868076324463
    9. '    ' → logprob: -5.181868076324463
    10. '```' → logprob: -5.806868076324463

Token 500: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' (adapté à ' bi') → logprob: -0.12053339183330536
    2. ' bi' → logprob: -3.4955334663391113
    3. 'min' → logprob: -3.6205334663391113
    4. 'b' → logprob: -3.9955334663391113
    5. 'po' → logprob: -4.620533466339111
    6. 'import' → logprob: -4.745533466339111
    7. ' min' → logprob: -4.870533466339111
    8. ' b' → logprob: -6.120533466339111
    9. '   ' → logprob: -6.370533466339111
    10. 'required' → logprob: -6.745533466339111

Token 501: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193241238594055
    2. '=' → logprob: -1.5019323825836182
    3. ' ' → logprob: -13.376932144165039
    4. ' ' → logprob: -14.126932144165039
    5. '>=' → logprob: -15.251932144165039
    6. '=int' → logprob: -15.626932144165039
    7. '   ' → logprob: -16.37693214416504
    8. '=max' → logprob: -16.62693214416504
    9. '≥' → logprob: -16.87693214416504
    10. ' >=' → logprob: -16.87693214416504

Token 502: ' ceil' (ID: 35964)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.4234708249568939
    2. ' (' → logprob: -1.1734708547592163
    3. 'math' → logprob: -3.9234707355499268
    4. ' math' → logprob: -5.423470973968506
    5. '(max' → logprob: -5.548470973968506
    6. '(' → logprob: -6.298470973968506
    7. '(p' → logprob: -6.798470973968506
    8. ' -' → logprob: -7.173470973968506
    9. 'ceil' → logprob: -7.298470973968506
    10. '(int' → logprob: -7.423470973968506

Token 503: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.05306406319141388
    2. '(po' → logprob: -3.1780641078948975
    3. '((' → logprob: -4.678063869476318
    4. '(' → logprob: -8.053064346313477
    5. 'po' → logprob: -8.678064346313477
    6. ' (' → logprob: -9.053064346313477
    7. '(pow' → logprob: -9.928064346313477
    8. '(weight' → logprob: -10.803064346313477
    9. '(float' → logprob: -10.803064346313477
    10. '(pr' → logprob: -11.678064346313477

Token 504: 'oids' (ID: 48135)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0735105276107788
    2. '(po' → logprob: -1.0735105276107788
    3. 'po' → logprob: -2.1985106468200684
    4. 'o' → logprob: -2.1985106468200684
    5. '(p' → logprob: -3.5735106468200684
    6. 'oids' → logprob: -4.073510646820068
    7. ' (' → logprob: -4.573510646820068
    8. '(weight' → logprob: -5.073510646820068
    9. 'ois' → logprob: -5.073510646820068
    10. '(o' → logprob: -5.323510646820068

Token 505: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -1.9266199160483666e-05
    2. '_' → logprob: -12.000019073486328
    3. ' /' → logprob: -12.250019073486328
    4. ' _' → logprob: -12.625019073486328
    5. '/' → logprob: -13.500019073486328
    6. 'above' → logprob: -14.250019073486328
    7. '_div' → logprob: -14.500019073486328
    8. '_a' → logprob: -14.750019073486328
    9. '_sup' → logprob: -15.000019073486328
    10. '_sur' → logprob: -15.375019073486328

Token 506: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.00016885579680092633
    2. 'e' → logprob: -10.375168800354004
    3. 'ov' → logprob: -10.875168800354004
    4. '_ab' → logprob: -11.125168800354004
    5. '_' → logprob: -11.375168800354004
    6. 'o' → logprob: -11.375168800354004
    7. 'above' → logprob: -11.625168800354004
    8. 'ave' → logprob: -11.625168800354004
    9. 'oce' → logprob: -11.875168800354004
    10. 'ive' → logprob: -12.125168800354004

Token 507: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3492372930049896
    2. '/' → logprob: -1.224237322807312
    3. '/K' → logprob: -7.224237442016602
    4. '/k' → logprob: -10.474237442016602
    5. ' ' → logprob: -11.724237442016602
    6. ' ' → logprob: -11.849237442016602
    7. ')' → logprob: -12.599237442016602
    8. '/
' → logprob: -13.349237442016602
    9. ' /
' → logprob: -13.974237442016602
    10. '/i' → logprob: -14.099237442016602

Token 508: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0001584850688232109
    2. ' K' → logprob: -8.750158309936523
    3. 'k' → logprob: -17.250158309936523
    4. ' ' → logprob: -18.500158309936523
    5. '   ' → logprob: -18.500158309936523
    6. ' ' → logprob: -18.750158309936523
    7. 'float' → logprob: -19.250158309936523
    8. '	K' → logprob: -19.750158309936523
    9. '  ' → logprob: -20.500158309936523
    10. '(K' → logprob: -21.250158309936523

Token 509: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002702758414670825
    2. ' )' → logprob: -6.127702713012695
    3. ' +' → logprob: -8.502702713012695
    4. ')
' → logprob: -8.877702713012695
    5. ' ' → logprob: -10.252702713012695
    6. ')+' → logprob: -10.252702713012695
    7. '+' → logprob: -10.377702713012695
    8. '   ' → logprob: -11.377702713012695
    9. ' ' → logprob: -11.502702713012695
    10. '))' → logprob: -11.627702713012695

Token 510: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15903222560882568
    2. '\n' → logprob: -3.1590323448181152
    3. '  
' → logprob: -3.9090323448181152
    4. '
' → logprob: -4.659032344818115
    5. '```' → logprob: -4.659032344818115
    6. '\' → logprob: -4.784032344818115
    7. '   ' → logprob: -5.159032344818115
    8. ')' → logprob: -5.284032344818115
    9. 'if' → logprob: -5.409032344818115
    10. 'import' → logprob: -5.409032344818115

Token 511: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1303926706314087
    2. '      ' → logprob: -1.2553926706314087
    3. ' if' → logprob: -2.255392551422119
    4. 'if' → logprob: -3.005392551422119
    5. '  
' → logprob: -3.255392551422119
    6. '       ' → logprob: -3.505392551422119
    7. '       
' → logprob: -3.505392551422119
    8. '```' → logprob: -3.630392551422119
    9. '   ' → logprob: -3.880392551422119
    10. '\n' → logprob: -4.630392551422119

Token 512: ' sum' (ID: 4215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7172760367393494
    2. 'po' → logprob: -0.8422760367393494
    3. 'sum' (adapté à ' sum') → logprob: -2.842276096343994
    4. ' if' → logprob: -4.217276096343994
    5. ' poids' → logprob: -5.592276096343994
    6. 'import' → logprob: -7.217276096343994
    7. '   ' → logprob: -7.842276096343994
    8. 'b' → logprob: -7.967276096343994
    9. '      ' → logprob: -7.967276096343994
    10. 'weight' → logprob: -8.092275619506836

Token 513: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.0002787359117064625
    2. '_b' → logprob: -8.37527847290039
    3. '_bloc' → logprob: -10.50027847290039
    4. '_' → logprob: -11.25027847290039
    5. '+=' → logprob: -13.37527847290039
    6. 'blocks' → logprob: -13.75027847290039
    7. '=' → logprob: -14.00027847290039
    8. '=_' → logprob: -14.25027847290039
    9. ' +=' → logprob: -14.37527847290039
    10. '_block' → logprob: -14.87527847290039

Token 514: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132932484149933
    2. ' +=' → logprob: -1.313293218612671
    3. '+' → logprob: -10.81329345703125
    4. '=' → logprob: -11.68829345703125
    5. '+=(' → logprob: -14.06329345703125
    6. ' ' → logprob: -14.18829345703125
    7. ' +' → logprob: -14.93829345703125
    8. '	' → logprob: -15.18829345703125
    9. ']+=' → logprob: -15.18829345703125
    10. '+="' → logprob: -15.31329345703125

Token 515: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.007693813648074865
    2. ' bi' → logprob: -4.882693767547607
    3. 'b' → logprob: -9.382694244384766
    4. ' b' → logprob: -14.007694244384766
    5. '   ' → logprob: -14.132694244384766
    6. ' ' → logprob: -14.507694244384766
    7. ' ' → logprob: -14.507694244384766
    8. '	b' → logprob: -16.007694244384766
    9. 'bis' → logprob: -16.382694244384766
    10. 'Bi' → logprob: -16.632694244384766

Token 516: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3327958583831787
    2. '      ' → logprob: -2.2077958583831787
    3. '       ' → logprob: -3.2077958583831787
    4. '  
' → logprob: -3.8327958583831787
    5. '   ' → logprob: -4.082796096801758
    6. '<|end|>' → logprob: -4.332796096801758
    7. '       
' → logprob: -4.332796096801758
    8. 'import' → logprob: -4.457796096801758
    9. '\n' → logprob: -4.582796096801758
    10. '\' → logprob: -4.832796096801758

Token 517: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 518: '      ' (ID: 1699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -1.8312570318812504e-05
    2. 'if' → logprob: -11.125018119812012
    3. ' poids' → logprob: -13.500018119812012
    4. '  ' → logprob: -14.500018119812012
    5. 'pois' → logprob: -14.500018119812012
    6. '   ' → logprob: -14.625018119812012
    7. 'weight' → logprob: -15.625018119812012
    8. '```' → logprob: -16.125019073486328
    9. '      ' → logprob: -16.250019073486328
    10. ' ' → logprob: -16.750019073486328

Token 520: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -3.054500666621607e-06
    2. 'above' → logprob: -14.00000286102295
    3. '_' → logprob: -14.25000286102295
    4. 's' → logprob: -14.37500286102295
    5. '_b' → logprob: -15.87500286102295
    6. '_a' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.250003814697266
    8. 'Above' → logprob: -16.250003814697266
    9. ' _' → logprob: -16.625003814697266
    10. '=_' → logprob: -16.875003814697266

Token 521: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.25000286102295
    3. 'o' → logprob: -15.12500286102295
    4. 'ave' → logprob: -15.87500286102295
    5. 'above' → logprob: -15.87500286102295
    6. 'ov' → logprob: -16.000003814697266
    7. 'ouve' → logprob: -16.000003814697266
    8. '#' → logprob: -16.500003814697266
    9. 've' → logprob: -16.625003814697266
    10. 'OVE' → logprob: -16.625003814697266

Token 522: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2903490662574768
    2. ' =' → logprob: -1.790349006652832
    3. '*=' → logprob: -2.915349006652832
    4. ' *=' → logprob: -4.040349006652832
    5. ' +=' → logprob: -4.540349006652832
    6. '+=' → logprob: -6.040349006652832
    7. '*' → logprob: -8.290349006652832
    8. ' *' → logprob: -11.790349006652832
    9. ' ' → logprob: -12.415349006652832
    10. '   ' → logprob: -13.165349006652832

Token 523: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.00012356207298580557
    2. ' bi' → logprob: -9.000123977661133
    3. 'b' → logprob: -16.000123977661133
    4. ' ' → logprob: -20.750123977661133
    5. '   ' → logprob: -21.625123977661133
    6. 'Bi' → logprob: -21.750123977661133
    7. '.bi' → logprob: -21.875123977661133
    8. '```' → logprob: -22.000123977661133
    9. ' ' → logprob: -22.125123977661133
    10. '	b' → logprob: -22.750123977661133

Token 524: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4169481694698334
    2. '```' → logprob: -2.041948080062866
    3. ')' → logprob: -2.666948080062866
    4. 'import' → logprob: -3.041948080062866
    5. '#' → logprob: -3.541948080062866
    6. ' def' → logprob: -4.541948318481445
    7. '   ' → logprob: -5.041948318481445
    8. 'from' → logprob: -5.041948318481445
    9. '
' → logprob: -5.041948318481445
    10. ' ' → logprob: -5.041948318481445

Token 525: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8033374547958374
    2. '```' → logprob: -1.4283374547958374
    3. '#' → logprob: -1.6783374547958374
    4. ')' → logprob: -3.553337574005127
    5. '.' → logprob: -3.803337574005127
    6. '   ' → logprob: -4.553337574005127
    7. 'import' → logprob: -4.553337574005127
    8. 's' → logprob: -4.678337574005127
    9. '\' → logprob: -5.053337574005127
    10. 'from' → logprob: -5.428337574005127

Token 526: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010639919899404049
    2. ')' → logprob: -5.2606401443481445
    3. 'import' → logprob: -6.0106401443481445
    4. ' def' → logprob: -6.3856401443481445
    5. '```' → logprob: -7.1356401443481445
    6. 'from' → logprob: -8.760640144348145
    7. ']' → logprob: -9.260640144348145
    8. '
' → logprob: -10.760640144348145
    9. ' )' → logprob: -10.885640144348145
    10. '#' → logprob: -11.260640144348145

Token 527: ' Si' (ID: 7832)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.024241169914603233
    2. 'if' → logprob: -4.649240970611572
    3. 'from' → logprob: -5.274240970611572
    4. '```' → logprob: -6.024240970611572
    5. 'for' → logprob: -6.149240970611572
    6. '   ' → logprob: -6.774240970611572
    7. '#' → logprob: -6.899240970611572
    8. ' if' → logprob: -7.274240970611572
    9. 'while' → logprob: -7.524240970611572
    10. ' def' → logprob: -7.649240970611572

Token 528: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.0086253322660923
    2. 'sum' → logprob: -4.758625507354736
    3. ' ' → logprob: -11.633625030517578
    4. '  ' → logprob: -14.133625030517578
    5. '(sum' → logprob: -15.008625030517578
    6. ' ' → logprob: -15.133625030517578
    7. '	sum' → logprob: -15.133625030517578
    8. '   ' → logprob: -15.758625030517578
    9. ' somme' → logprob: -15.758625030517578
    10. ' suma' → logprob: -17.633625030517578

Token 529: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.002278245985507965
    2. '_' → logprob: -6.1272783279418945
    3. '_b' → logprob: -9.502278327941895
    4. '_bloc' → logprob: -12.127278327941895
    5. ' _' → logprob: -12.502278327941895
    6. '\' → logprob: -12.877278327941895
    7. '```' → logprob: -13.752278327941895
    8. '_total' → logprob: -14.127278327941895
    9. '_ab' → logprob: -14.252278327941895
    10. '_
' → logprob: -14.627278327941895

Token 530: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03009675443172455
    2. '<=' → logprob: -3.5300967693328857
    3. ' >' → logprob: -8.155097007751465
    4. '>' → logprob: -9.780097007751465
    5. ' ≤' → logprob: -14.030097007751465
    6. ' ' → logprob: -14.155097007751465
    7. ' ' → logprob: -15.655097007751465
    8. '```' → logprob: -15.780097007751465
    9. ')<=' → logprob: -16.28009605407715
    10. 'le' → logprob: -16.78009605407715

Token 531: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2519453763961792
    2. ' N' → logprob: -1.5019453763961792
    3. ' ' → logprob: -11.376945495605469
    4. ' ' → logprob: -12.376945495605469
    5. '	N' → logprob: -15.376945495605469
    6. '   ' → logprob: -15.751945495605469
    7. '  ' → logprob: -16.12694549560547
    8. 'n' → logprob: -16.87694549560547
    9. '```' → logprob: -17.00194549560547
    10. ' ' → logprob: -18.25194549560547

Token 532: ' alors' (ID: 17971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005788889247924089
    2. ':
' → logprob: -8.000578880310059
    3. ',' → logprob: -9.250578880310059
    4. 'continue' → logprob: -10.250578880310059
    5. ':return' → logprob: -10.375578880310059
    6. ' :' → logprob: -10.375578880310059
    7. ' continue' → logprob: -11.125578880310059
    8. '   ' → logprob: -11.625578880310059
    9. '):' → logprob: -12.375578880310059
    10. ' continues' → logprob: -12.625578880310059

Token 533: ' h' (ID: 312)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.309608519077301
    2. ' return' → logprob: -2.0596084594726562
    3. ' on' → logprob: -2.9346084594726562
    4. 'on' → logprob: -3.8096084594726562
    5. ' True' → logprob: -3.8096084594726562
    6. 'True' → logprob: -3.9346084594726562
    7. '```' → logprob: -4.934608459472656
    8. 'possible' → logprob: -6.059608459472656
    9. ' ' → logprob: -6.309608459472656
    10. '   ' → logprob: -6.559608459472656

Token 534: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9750199317932129
    2. '_possible' → logprob: -1.725019931793213
    3. '>=' → logprob: -2.225019931793213
    4. ' >=' → logprob: -2.475019931793213
    5. 'possible' → logprob: -2.725019931793213
    6. ' =' → logprob: -2.850019931793213
    7. ' possible' → logprob: -2.975019931793213
    8. ' est' → logprob: -3.475019931793213
    9. 'est' → logprob: -3.975019931793213
    10. ' +=' → logprob: -4.725019931793213

Token 535: ' fais' (ID: 24376)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6378756165504456
    2. ' possible' → logprob: -1.1378755569458008
    3. ' feasible' → logprob: -2.512875556945801
    4. '_possible' → logprob: -3.887875556945801
    5. ' fais' → logprob: -4.137875556945801
    6. '   ' → logprob: -4.512875556945801
    7. ' réalis' → logprob: -5.012875556945801
    8. '_' → logprob: -5.387875556945801
    9. ' ' → logprob: -5.887875556945801
    10. 'fe' → logprob: -6.262875556945801

Token 536: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -7.946405094116926e-05
    2. 'ible' → logprob: -10.000079154968262
    3. 'sible' → logprob: -10.625079154968262
    4. 's' → logprob: -12.500079154968262
    5. 'abile' → logprob: -12.500079154968262
    6. 'nable' → logprob: -14.625079154968262
    7. 'ables' → logprob: -15.000079154968262
    8. 'ab' → logprob: -15.250079154968262
    9. 'iable' → logprob: -15.500079154968262
    10. ' able' → logprob: -16.000080108642578

Token 537: ' sinon' (ID: 52915)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022007426247000694
    2. ':' → logprob: -4.772007465362549
    3. '```' → logprob: -5.022007465362549
    4. ' def' → logprob: -5.272007465362549
    5. ')' → logprob: -7.397007465362549
    6. '
' → logprob: -8.02200698852539
    7. ',' → logprob: -8.64700698852539
    8. '#' → logprob: -9.27200698852539
    9. ':def' → logprob: -9.89700698852539
    10. '_' → logprob: -10.27200698852539

Token 538: ' non' (ID: 2893)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.38650453090667725
    2. ' on' → logprob: -2.011504650115967
    3. 'False' → logprob: -2.011504650115967
    4. ' return' → logprob: -4.136504650115967
    5. ' h' → logprob: -4.761504650115967
    6. ' false' → logprob: -4.886504650115967
    7. ' impossible' → logprob: -5.511504650115967
    8. 'h' → logprob: -5.761504650115967
    9. 'on' → logprob: -6.136504650115967
    10. 'return' → logprob: -6.261504650115967

Token 539: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1306476593017578
    2. '```' → logprob: -2.505647659301758
    3. 'import' → logprob: -3.255647659301758
    4. ' def' → logprob: -6.880647659301758
    5. ')' → logprob: -7.005647659301758
    6. 'from' → logprob: -9.505647659301758
    7. ':' → logprob: -9.505647659301758
    8. ' import' → logprob: -10.505647659301758
    9. ']' → logprob: -10.630647659301758
    10. '[' → logprob: -10.755647659301758

Token 540: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04345596581697464
    2. '```' → logprob: -3.1684560775756836
    3. ' def' → logprob: -8.293456077575684
    4. 'import' → logprob: -9.418456077575684
    5. ':' → logprob: -10.418456077575684
    6. ' 
' → logprob: -10.918456077575684
    7. '
' → logprob: -11.043456077575684
    8. ')' → logprob: -11.043456077575684
    9. '[' → logprob: -11.418456077575684
    10. '``' → logprob: -12.168456077575684

Token 541: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06697749346494675
    2. '```' → logprob: -2.8169775009155273
    3. ')' → logprob: -6.316977500915527
    4. ' def' → logprob: -6.691977500915527
    5. ':' → logprob: -6.691977500915527
    6. 'import' → logprob: -7.566977500915527
    7. ':def' → logprob: -10.566977500915527
    8. ' ```' → logprob: -10.691977500915527
    9. '[' → logprob: -10.941977500915527
    10. ']' → logprob: -11.066977500915527

Token 542: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0026220278814435005
    2. 'import' → logprob: -6.252622127532959
    3. '```' → logprob: -7.377622127532959
    4. 'from' → logprob: -10.1276216506958
    5. ' def' → logprob: -10.5026216506958
    6. '#' → logprob: -16.377622604370117
    7. '``' → logprob: -16.502622604370117
    8. ' import' → logprob: -16.502622604370117
    9. ')' → logprob: -16.627622604370117
    10. ' ' → logprob: -16.752622604370117

Token 543: ' La' (ID: 3038)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9504606825648807e-05
    2. '```' → logprob: -11.000019073486328
    3. 'import' → logprob: -12.875019073486328
    4. ' def' → logprob: -15.625019073486328
    5. 'from' → logprob: -18.125019073486328
    6. '``' → logprob: -20.500019073486328
    7. '#' → logprob: -21.125019073486328
    8. 'class' → logprob: -21.500019073486328
    9. 'de' → logprob: -21.750019073486328
    10. 'dé' → logprob: -22.375019073486328

Token 544: ' recherche' (ID: 24975)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09817144274711609
    2. ' def' → logprob: -2.4731714725494385
    3. '#' → logprob: -6.098171234130859
    4. 'n' → logprob: -6.098171234130859
    5. ' suite' → logprob: -6.723171234130859
    6. 'suite' → logprob: -6.848171234130859
    7. ' solution' → logprob: -7.848171234130859
    8. 'import' → logprob: -8.34817123413086
    9. ' fonction' → logprob: -8.72317123413086
    10. 's' → logprob: -8.84817123413086

Token 545: ' b' (ID: 287)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.9379873871803284
    2. 'd' → logprob: -2.0629873275756836
    3. '_binary' → logprob: -2.0629873275756836
    4. 'b' → logprob: -2.3129873275756836
    5. 'def' → logprob: -3.0629873275756836
    6. '_bin' → logprob: -3.3129873275756836
    7. ' =' → logprob: -3.4379873275756836
    8. ' d' → logprob: -3.4379873275756836
    9. 'binary' → logprob: -4.562987327575684
    10. ' b' → logprob: -4.687987327575684

Token 546: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.022418536245822906
    2. 'in' → logprob: -4.14741849899292
    3. 'inary' → logprob: -6.02241849899292
    4. '_' → logprob: -7.02241849899292
    5. 'iné' → logprob: -7.39741849899292
    6. '_in' → logprob: -7.52241849899292
    7. 'i' → logprob: -8.022418975830078
    8. 'inar' → logprob: -8.522418975830078
    9. 'o' → logprob: -8.522418975830078
    10. '_b' → logprob: -8.897418975830078

Token 547: ' permettra' (ID: 77259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5776001214981079
    2. ' def' → logprob: -2.0776000022888184
    3. ' =' → logprob: -2.2026000022888184
    4. ':' → logprob: -2.7026000022888184
    5. '```' → logprob: -3.5776000022888184
    6. '
' → logprob: -4.077600002288818
    7. '_' → logprob: -4.202600002288818
    8. '=' → logprob: -4.577600002288818
    9. '{' → logprob: -4.827600002288818
    10. '(
' → logprob: -5.202600002288818

Token 548: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.035992857068777084
    2. ' d' → logprob: -3.5359928607940674
    3. 'de' → logprob: -5.535992622375488
    4. 'def' → logprob: -7.410992622375488
    5. 'd' → logprob: -8.160992622375488
    6. '#' → logprob: -8.285992622375488
    7. ' ' → logprob: -8.285992622375488
    8. ' donc' → logprob: -8.410992622375488
    9. '_' → logprob: -9.160992622375488
    10. 's' → logprob: -9.285992622375488

Token 549: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.29487618803977966
    2. ''aller' → logprob: -2.9198760986328125
    3. ''effect' → logprob: -3.1698760986328125
    4. ''év' → logprob: -3.7948760986328125
    5. 'é' → logprob: -4.0448760986328125
    6. ''' → logprob: -4.0448760986328125
    7. 'optim' → logprob: -4.1698760986328125
    8. ''avoir' → logprob: -4.1698760986328125
    9. ''obtenir' → logprob: -4.5448760986328125
    10. ''assurer' → logprob: -4.7948760986328125

Token 550: 'optim' (ID: 29513)
  Prédit: 'optim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.5305473804473877
    2. 'aff' → logprob: -1.7805473804473877
    3. 'é' → logprob: -3.1555473804473877
    4. 'e' → logprob: -3.2805473804473877
    5. 'eterm' → logprob: -4.155547142028809
    6. 'tr' → logprob: -4.405547142028809
    7. ' optimiser' → logprob: -4.655547142028809
    8. ''' → logprob: -4.905547142028809
    9. 'max' → logprob: -4.905547142028809
    10. 'ré' → logprob: -5.030547142028809

Token 551: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0009345670696347952
    2. 'izer' → logprob: -8.250934600830078
    3. 'al' → logprob: -8.500934600830078
    4. 'is' → logprob: -9.250934600830078
    5. 'ser' → logprob: -9.375934600830078
    6. '#' → logprob: -9.750934600830078
    7. '```' → logprob: -9.875934600830078
    8. '_' → logprob: -10.125934600830078
    9. 'ale' → logprob: -10.750934600830078
    10. 'ise' → logprob: -11.000934600830078

Token 552: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7261772751808167
    2. ' ' → logprob: -0.9761772751808167
    3. '```' → logprob: -3.101177215576172
    4. 'def' → logprob: -3.226177215576172
    5. ' def' → logprob: -4.101177215576172
    6. ' _' → logprob: -4.601177215576172
    7. ' ```' → logprob: -5.101177215576172
    8. ' h' → logprob: -5.476177215576172
    9. 'h' → logprob: -6.101177215576172
    10. ')' → logprob: -6.226177215576172

Token 553: ' recherche' (ID: 24975)
  Prédit: ' recherche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.06165178120136261
    2. 're' → logprob: -3.6866517066955566
    3. ' hauteur' → logprob: -4.311651706695557
    4. ' solution' → logprob: -4.686651706695557
    5. ' ' → logprob: -6.436651706695557
    6. 'ha' → logprob: -6.686651706695557
    7. '  ' → logprob: -6.811651706695557
    8. '   ' → logprob: -6.936651706695557
    9. 'pr' → logprob: -7.436651706695557
    10. 'r' → logprob: -7.561651706695557

Token 554: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38226422667503357
    2. '_' → logprob: -2.1322641372680664
    3. ' ' → logprob: -3.1322641372680664
    4. '```' → logprob: -3.3822641372680664
    5. ')' → logprob: -3.6322641372680664
    6. '
' → logprob: -4.007264137268066
    7. ' def' → logprob: -4.382264137268066
    8. ':' → logprob: -4.507264137268066
    9. '[' → logprob: -4.757264137268066
    10. 'n' → logprob: -5.007264137268066

Token 555: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -1.0909947156906128
    2. ' la' → logprob: -1.4659947156906128
    3. 'l' → logprob: -2.2159948348999023
    4. 'h' → logprob: -2.3409948348999023
    5. ' hauteur' → logprob: -2.4659948348999023
    6. ' l' → logprob: -2.7159948348999023
    7. 'ha' → logprob: -2.9659948348999023
    8. 'la' → logprob: -3.7159948348999023
    9. ' ' → logprob: -7.465994834899902
    10. ' ' → logprob: -8.465994834899902

Token 556: ' hauteur' (ID: 72987)
  Prédit: ' hauteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.5290204286575317
    2. 'ha' → logprob: -0.9040204286575317
    3. 'max' → logprob: -5.779020309448242
    4. 'height' → logprob: -7.279020309448242
    5. ' height' → logprob: -7.529020309448242
    6. 'h' → logprob: -8.029020309448242
    7. ' h' → logprob: -8.404020309448242
    8. ' max' → logprob: -8.654020309448242
    9. ' tour' → logprob: -9.154020309448242
    10. ' maximum' → logprob: -9.154020309448242

Token 557: ' maximale' (ID: 76380)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009052484296262264
    2. '```' → logprob: -5.259052276611328
    3. ' def' → logprob: -6.134052276611328
    4. ')' → logprob: -7.009052276611328
    5. ':' → logprob: -7.884052276611328
    6. ']' → logprob: -9.259052276611328
    7. 'n' → logprob: -10.009052276611328
    8. '
' → logprob: -10.009052276611328
    9. 'import' → logprob: -10.759052276611328
    10. ' ' → logprob: -10.759052276611328

Token 558: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0027925148606300354
    2. '```' → logprob: -6.2527923583984375
    3. ' def' → logprob: -7.3777923583984375
    4. ')' → logprob: -8.627792358398438
    5. 'import' → logprob: -11.127792358398438
    6. ']' → logprob: -11.377792358398438
    7. ':' → logprob: -11.377792358398438
    8. '
' → logprob: -12.002792358398438
    9. 'n' → logprob: -12.502792358398438
    10. ':def' → logprob: -13.377792358398438

Token 559: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004863230511546135
    2. 'import' → logprob: -5.379863262176514
    3. '```' → logprob: -8.379862785339355
    4. 'from' → logprob: -11.879862785339355
    5. ' def' → logprob: -12.129862785339355
    6. ')' → logprob: -15.504862785339355
    7. '
' → logprob: -15.504862785339355
    8. 'de' → logprob: -15.754862785339355
    9. ' 
' → logprob: -16.004863739013672
    10. ' import' → logprob: -16.129863739013672

Token 560: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07904621958732605
    2. ' max' → logprob: -2.5790462493896484
    3. 'tower' → logprob: -9.954046249389648
    4. 'maximum' → logprob: -10.704046249389648
    5. 'maximize' → logprob: -10.954046249389648
    6. ' maximal' → logprob: -10.954046249389648
    7. ' tower' → logprob: -11.579046249389648
    8. ' maximale' → logprob: -11.579046249389648
    9. ' maximum' → logprob: -11.579046249389648
    10. ' maximize' → logprob: -11.704046249389648

Token 561: '_st' (ID: 2518)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.017447778955101967
    2. '_t' → logprob: -4.2674479484558105
    3. '_et' → logprob: -6.6424479484558105
    4. '_' → logprob: -6.7674479484558105
    5. '_floor' → logprob: -7.7674479484558105
    6. '_stack' → logprob: -9.517447471618652
    7. 'Ha' → logprob: -9.517447471618652
    8. '_he' → logprob: -9.767447471618652
    9. '_h' → logprob: -10.142447471618652
    10. 'Height' → logprob: -10.392447471618652

Token 562: 'ages' (ID: 1461)
  Prédit: 'airs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.3391878604888916
    2. 'ack' → logprob: -2.2141878604888916
    3. 'acks' → logprob: -2.7141878604888916
    4. 'ages' → logprob: -2.9641878604888916
    5. 'age' → logprob: -3.5891878604888916
    6. 'eps' → logprob: -4.4641876220703125
    7. 'a' → logprob: -4.5891876220703125
    8. 'air' → logprob: -5.0891876220703125
    9. 'ep' → logprob: -6.2141876220703125
    10. '_' → logprob: -7.4641876220703125

Token 563: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01133369468152523
    2. '(' → logprob: -4.761333465576172
    3. ' (' → logprob: -6.386333465576172
    4. '(n' → logprob: -6.886333465576172
    5. 'def' → logprob: -13.136333465576172
    6. ' ' → logprob: -13.261333465576172
    7. '(
' → logprob: -13.386333465576172
    8. '(K' → logprob: -13.761333465576172
    9. '(num' → logprob: -14.636333465576172
    10. '```' → logprob: -14.636333465576172

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ',K' → logprob: -12.625004768371582
    3. ' ,' → logprob: -13.500004768371582
    4. ',
' → logprob: -17.8750057220459
    5. ':' → logprob: -19.5000057220459
    6. 'K' → logprob: -20.0000057220459
    7. ' K' → logprob: -21.0000057220459
    8. ',int' → logprob: -21.3750057220459
    9. ',

' → logprob: -21.5000057220459
    10. '‌,' → logprob: -21.6250057220459

Token 565: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.00038038729690015316
    2. ' K' → logprob: -7.875380516052246
    3. ' ' → logprob: -16.50037956237793
    4. '   ' → logprob: -16.62537956237793
    5. ')' → logprob: -17.75037956237793
    6. 'def' → logprob: -18.00037956237793
    7. '	K' → logprob: -18.12537956237793
    8. '  ' → logprob: -18.50037956237793
    9. '       ' → logprob: -19.25037956237793
    10. ' ' → logprob: -19.37537956237793

Token 566: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006185544189065695
    2. ')' → logprob: -7.5006184577941895
    3. '):
' → logprob: -9.875618934631348
    4. ':' → logprob: -11.250618934631348
    5. '):
' → logprob: -14.250618934631348
    6. ' ):' → logprob: -14.500618934631348
    7. '):

' → logprob: -17.87561798095703
    8. '}:' → logprob: -18.12561798095703
    9. '   ' → logprob: -18.25061798095703
    10. ',' → logprob: -19.00061798095703

Token 567: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030416471417993307
    2. '    
' → logprob: -6.378041744232178
    3. '
' → logprob: -7.128041744232178
    4. '```' → logprob: -9.00304126739502
    5. ':' → logprob: -9.25304126739502
    6. '	
' → logprob: -9.87804126739502
    7. ' 
' → logprob: -10.00304126739502
    8. '   ' → logprob: -10.00304126739502
    9. '  
' → logprob: -10.12804126739502
    10. ':
' → logprob: -10.62804126739502

Token 568: ' import' (ID: 1588)
  Prédit: ' low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' low' → logprob: -1.2756342887878418
    2. '   ' → logprob: -1.4006342887878418
    3. 'low' → logprob: -1.7756342887878418
    4. ' left' → logprob: -1.7756342887878418
    5. 'left' → logprob: -2.025634288787842
    6. 'def' → logprob: -6.525634288787842
    7. '    
' → logprob: -7.025634288787842
    8. '```' → logprob: -7.525634288787842
    9. ' lo' → logprob: -7.900634288787842
    10. 'lo' → logprob: -8.775634765625

Token 569: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2014133334159851
    2. 'math' → logprob: -1.7014133930206299
    3. '(math' → logprob: -17.076414108276367
    4. '_math' → logprob: -17.826414108276367
    5. '.math' → logprob: -18.826414108276367
    6. 'cmath' → logprob: -20.451414108276367
    7. ' sys' → logprob: -20.951414108276367
    8. 'bis' → logprob: -23.076414108276367
    9. 'sys' → logprob: -23.076414108276367
    10. '   ' → logprob: -23.201414108276367

Token 570: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36807265877723694
    2. '   ' → logprob: -1.4930726289749146
    3. '    
' → logprob: -2.493072748184204
    4. '	
' → logprob: -8.368072509765625
    5. '```' → logprob: -9.368072509765625
    6. '        
' → logprob: -9.868072509765625
    7. '  
' → logprob: -9.993072509765625
    8. '   
' → logprob: -10.243072509765625
    9. ' 
' → logprob: -10.243072509765625
    10. '
' → logprob: -10.368072509765625

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004159602802246809
    2. '    
' → logprob: -5.629159450531006
    3. '
' → logprob: -7.754159450531006
    4. 'low' → logprob: -9.629159927368164
    5. 'left' → logprob: -10.379159927368164
    6. 'def' → logprob: -10.879159927368164
    7. ' low' → logprob: -12.504159927368164
    8. '```' → logprob: -13.004159927368164
    9. ' left' → logprob: -13.504159927368164
    10. '    
    
' → logprob: -13.629159927368164

Token 572: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.03232240304350853
    2. 'low' → logprob: -3.532322406768799
    3. 'def' → logprob: -6.032322406768799
    4. 'lo' → logprob: -9.28232192993164
    5. '   ' → logprob: -9.65732192993164
    6. ' left' → logprob: -11.53232192993164
    7. '    
' → logprob: -14.28232192993164
    8. 'l' → logprob: -14.28232192993164
    9. '#' (adapté à ' #') → logprob: -15.65732192993164
    10. ' low' → logprob: -16.03232192993164

Token 573: ' Fonction' (ID: 189149)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0035201292484998703
    2. 'low' → logprob: -6.2535200119018555
    3. 'def' → logprob: -6.5035200119018555
    4. '   ' → logprob: -9.628520011901855
    5. 'lo' → logprob: -11.003520011901855
    6. ' left' → logprob: -11.753520011901855
    7. '    
' → logprob: -14.378520011901855
    8. '```' → logprob: -14.628520011901855
    9. 'g' → logprob: -15.128520011901855
    10. 'l' → logprob: -15.878520011901855

Token 574: ' test' (ID: 1746)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8310062289237976
    2. ' def' → logprob: -1.2060062885284424
    3. '   ' → logprob: -1.3310062885284424
    4. '    ' → logprob: -8.081006050109863
    5. '  ' → logprob: -8.456006050109863
    6. ' is' → logprob: -9.581006050109863
    7. '	def' → logprob: -9.956006050109863
    8. ' déf' → logprob: -9.956006050109863
    9. '
' → logprob: -10.206006050109863
    10. '    
' → logprob: -10.581006050109863

Token 575: 'ant' (ID: 493)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4353852868080139
    2. 'def' → logprob: -1.4353852272033691
    3. '(h' → logprob: -2.185385227203369
    4. ')' → logprob: -7.935385227203369
    5. '(n' → logprob: -7.935385227203369
    6. ' def' → logprob: -8.060385704040527
    7. ' (' → logprob: -8.560385704040527
    8. '  ' → logprob: -8.685385704040527
    9. '    
' → logprob: -8.685385704040527
    10. '    ' → logprob: -8.685385704040527

Token 576: ' si' (ID: 1784)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3594082295894623
    2. ' la' → logprob: -1.3594082593917847
    3. ' if' → logprob: -3.984408140182495
    4. ' si' → logprob: -4.234408378601074
    5. 'def' → logprob: -5.734408378601074
    6. '(' → logprob: -5.984408378601074
    7. '    ' → logprob: -6.609408378601074
    8. 'if' → logprob: -6.984408378601074
    9. ' ' → logprob: -7.734408378601074
    10. '<|end|>' → logprob: -7.859408378601074

Token 577: ' une' (ID: 2463)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.06982126086950302
    2. 'h' → logprob: -3.069821357727051
    3. ' on' → logprob: -4.944821357727051
    4. 'def' → logprob: -5.319821357727051
    5. '   ' → logprob: -5.944821357727051
    6. ' def' → logprob: -6.444821357727051
    7. ' la' → logprob: -6.569821357727051
    8. ' possible' → logprob: -6.694821357727051
    9. ' une' → logprob: -7.444821357727051
    10. ' feasible' → logprob: -7.569821357727051

Token 578: ' hauteur' (ID: 72987)
  Prédit: 'ha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ha' → logprob: -0.0027163070626556873
    2. ' hauteur' → logprob: -6.002716541290283
    3. 'height' → logprob: -8.877716064453125
    4. 'h' → logprob: -9.752716064453125
    5. '   ' → logprob: -10.752716064453125
    6. 'Ha' → logprob: -12.502716064453125
    7. ' haute' → logprob: -13.127716064453125
    8. 'def' → logprob: -13.252716064453125
    9. 'configuration' → logprob: -13.502716064453125
    10. 'hé' → logprob: -13.877716064453125

Token 579: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.9558665156364441
    2. '   ' → logprob: -0.9558665156364441
    3. ' h' → logprob: -2.205866575241089
    4. ' est' → logprob: -2.955866575241089
    5. 'possible' → logprob: -3.455866575241089
    6. ' possible' → logprob: -3.955866575241089
    7. ' feasible' → logprob: -5.20586633682251
    8. '_possible' → logprob: -5.20586633682251
    9. 'est' → logprob: -5.95586633682251
    10. '(h' → logprob: -6.70586633682251

Token 580: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.001637216075323522
    2. 'est' → logprob: -6.501636981964111
    3. '   ' → logprob: -10.12663745880127
    4. ')' → logprob: -10.62663745880127
    5. ''est' → logprob: -10.87663745880127
    6. ' possible' → logprob: -11.00163745880127
    7. '_est' → logprob: -11.62663745880127
    8. ' ' → logprob: -12.00163745880127
    9. 'possible' → logprob: -12.12663745880127
    10. ' donnée' → logprob: -12.62663745880127

Token 581: ' réalis' (ID: 33704)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5715331435203552
    2. 'possible' → logprob: -1.196533203125
    3. 'fe' → logprob: -2.821533203125
    4. ' fais' → logprob: -3.446533203125
    5. ' possible' → logprob: -3.946533203125
    6. ' feasible' → logprob: -4.071533203125
    7. 'faite' → logprob: -6.321533203125
    8. ' réalis' → logprob: -7.071533203125
    9. '   ' → logprob: -7.071533203125
    10. 'fa' → logprob: -7.196533203125

Token 582: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -7.896309739408025e-07
    2. 'ée' → logprob: -15.125000953674316
    3. 'ables' → logprob: -15.750000953674316
    4. 'abl' → logprob: -16.5
    5. 'isable' → logprob: -17.375
    6. 'nable' → logprob: -17.375
    7. 'e' → logprob: -17.5
    8. 'ABLE' → logprob: -17.625
    9. ' able' → logprob: -17.875
    10. '-able' → logprob: -18.25

Token 583: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013548762537539005
    2. 'def' → logprob: -4.763548851013184
    3. '(N' → logprob: -5.888548851013184
    4. '(n' → logprob: -7.138548851013184
    5. '(h' → logprob: -7.513548851013184
    6. ' def' → logprob: -8.138548851013184
    7. ':' → logprob: -8.888548851013184
    8. '
' → logprob: -8.888548851013184
    9. '    
' → logprob: -8.888548851013184
    10. '(def' → logprob: -11.013548851013184

Token 584: ' N' (ID: 478)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1992132663726807
    2. ' les' → logprob: -1.6992132663726807
    3. 'N' → logprob: -1.8242132663726807
    4. 'def' → logprob: -2.1992132663726807
    5. 'la' → logprob: -2.5742132663726807
    6. ' N' → logprob: -2.8242132663726807
    7. 'les' → logprob: -3.3242132663726807
    8. '   ' → logprob: -4.324213027954102
    9. ' def' → logprob: -4.449213027954102
    10. 'l' → logprob: -4.699213027954102

Token 585: ' blocs' (ID: 182599)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38135725259780884
    2. ' et' → logprob: -1.256357192993164
    3. '   ' → logprob: -4.256357192993164
    4. ' ,' → logprob: -4.881357192993164
    5. 'et' → logprob: -5.256357192993164
    6. ' blocs' → logprob: -6.381357192993164
    7. 'def' → logprob: -6.631357192993164
    8. 'blocks' → logprob: -7.506357192993164
    9. ',b' → logprob: -7.881357192993164
    10. ' blocks' → logprob: -8.631357192993164

Token 586: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07062070816755295
    2. 'def' → logprob: -2.8206207752227783
    3. ' def' → logprob: -5.320620536804199
    4. '(h' → logprob: -6.695620536804199
    5. '(n' → logprob: -6.695620536804199
    6. '
' → logprob: -7.695620536804199
    7. '(N' → logprob: -8.3206205368042
    8. '    
' → logprob: -8.5706205368042
    9. '(def' → logprob: -9.1956205368042
    10. '	def' → logprob: -9.5706205368042

Token 587: ' force' (ID: 9578)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.23990876972675323
    2. ' K' → logprob: -1.8649088144302368
    3. 'def' → logprob: -3.7399086952209473
    4. 'la' → logprob: -3.8649086952209473
    5. ' la' → logprob: -4.739908695220947
    6. 'le' → logprob: -5.989908695220947
    7. 'une' → logprob: -7.364908695220947
    8. ' une' → logprob: -8.364909172058105
    9. 'les' → logprob: -8.489909172058105
    10. ' def' → logprob: -8.989909172058105

Token 588: ' K' (ID: 658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5997516512870789
    2. ' maximale' → logprob: -1.4747517108917236
    3. ' K' → logprob: -2.3497517108917236
    4. ' h' → logprob: -2.8497517108917236
    5. ' disponible' → logprob: -3.9747517108917236
    6. ' max' → logprob: -4.8497514724731445
    7. ' suffis' → logprob: -5.0997514724731445
    8. ' <=' → logprob: -5.2247514724731445
    9. '_max' → logprob: -5.4747514724731445
    10. '    ' → logprob: -5.4747514724731445

Token 589: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014432617463171482
    2. 'def' → logprob: -4.639432430267334
    3. '(h' → logprob: -5.889432430267334
    4. '(n' → logprob: -7.014432430267334
    5. '    
' → logprob: -7.764432430267334
    6. ' def' → logprob: -8.139432907104492
    7. '
' → logprob: -8.889432907104492
    8. '(N' → logprob: -10.014432907104492
    9. '(def' → logprob: -11.264432907104492
    10. ':' → logprob: -11.264432907104492

Token 590: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021217046305537224
    2. '
' → logprob: -4.771216869354248
    3. '    
' → logprob: -5.021216869354248
    4. 'def' → logprob: -5.146216869354248
    5. ' def' → logprob: -9.896217346191406
    6. '  
' → logprob: -10.771217346191406
    7. '   
' → logprob: -11.896217346191406
    8. '	def' → logprob: -12.146217346191406
    9. '```' → logprob: -12.396217346191406
    10. ')' → logprob: -12.771217346191406

Token 591: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0049863550812006
    2. ' def' → logprob: -5.50498628616333
    3. '   ' → logprob: -7.00498628616333
    4. '
' → logprob: -16.129985809326172
    5. '	def' → logprob: -16.254985809326172
    6. '    
' → logprob: -18.504985809326172
    7. ' déf' → logprob: -19.379985809326172
    8. '```' → logprob: -20.129985809326172
    9. ' ' → logprob: -20.379985809326172
    10. '    ' → logprob: -20.504985809326172

Token 592: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7648128271102905
    2. 'is' → logprob: -1.0148128271102905
    3. 'fe' → logprob: -1.7648128271102905
    4. 'est' → logprob: -7.88981294631958
    5. 'possible' → logprob: -8.139812469482422
    6. 'test' → logprob: -8.889812469482422
    7. 'check' → logprob: -10.014812469482422
    8. ' feasible' → logprob: -11.014812469482422
    9. 'f' → logprob: -11.889812469482422
    10. 'pe' → logprob: -12.389812469482422

Token 593: '_build' (ID: 49774)
  Prédit: '_build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.013051290065050125
    2. '_construct' → logprob: -4.388051509857178
    3. '_support' → logprob: -7.638051509857178
    4. '_complete' → logprob: -11.76305103302002
    5. '_make' → logprob: -11.76305103302002
    6. '_test' → logprob: -12.13805103302002
    7. '_use' → logprob: -12.38805103302002
    8. '_stack' → logprob: -12.38805103302002
    9. '_b' → logprob: -12.51305103302002
    10. '_' → logprob: -12.51305103302002

Token 594: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.650518920039758e-06
    2. '(height' → logprob: -13.250003814697266
    3. '(' → logprob: -13.625003814697266
    4. ' (' → logprob: -15.125003814697266
    5. 'h' → logprob: -15.625003814697266
    6. '_h' → logprob: -16.375003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '_height' → logprob: -17.375003814697266
    9. '(i' → logprob: -17.625003814697266
    10. '(H' → logprob: -17.750003814697266

Token 595: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38253799080848694
    2. '):' → logprob: -1.3825379610061646
    3. '):
' → logprob: -2.757538080215454
    4. '   ' → logprob: -6.007537841796875
    5. ')' → logprob: -7.132537841796875
    6. ' ,' → logprob: -9.632537841796875
    7. '):
' → logprob: -10.257537841796875
    8. ':' → logprob: -10.757537841796875
    9. ',h' → logprob: -10.757537841796875
    10. '       ' → logprob: -11.257537841796875

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022761584841646254
    2. '   ' → logprob: -8.875227928161621
    3. '        
' → logprob: -10.125227928161621
    4. '
' → logprob: -11.125227928161621
    5. '    
' → logprob: -11.625227928161621
    6. '    ' → logprob: -12.375227928161621
    7. '	   ' → logprob: -12.500227928161621
    8. '```' → logprob: -12.625227928161621
    9. ',' → logprob: -12.750227928161621
    10. 'n' → logprob: -13.500227928161621

Token 597: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13617964088916779
    2. 'sum' → logprob: -2.6361796855926514
    3. 'po' → logprob: -3.3861796855926514
    4. 'b' → logprob: -4.136179447174072
    5. '   ' → logprob: -5.386179447174072
    6. 'blocks' → logprob: -7.761179447174072
    7. 'pow' → logprob: -7.886179447174072
    8. ' sum' → logprob: -9.26117992401123
    9. 'bi' → logprob: -9.63617992401123
    10. '	sum' → logprob: -10.13617992401123

Token 598: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2088768184185028
    2. 'sum' → logprob: -1.9588768482208252
    3. 'po' → logprob: -3.833876848220825
    4. '       ' → logprob: -3.958876848220825
    5. 'bi' → logprob: -5.583876609802246
    6. '   ' → logprob: -6.333876609802246
    7. 'pow' → logprob: -7.708876609802246
    8. 'if' → logprob: -9.083876609802246
    9. ' b' → logprob: -9.083876609802246
    10. 'blocks' → logprob: -9.083876609802246

Token 599: '1' (ID: 16)
  Prédit: 'locks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locks' → logprob: -0.6895158290863037
    2. '1' → logprob: -0.8145158290863037
    3. ' =' → logprob: -3.8145158290863037
    4. '=' → logprob: -4.564516067504883
    5. '   ' → logprob: -4.814516067504883
    6. '_blocks' → logprob: -5.314516067504883
    7. '       ' → logprob: -5.814516067504883
    8. 'lock' → logprob: -6.564516067504883
    9. 'blocks' → logprob: -6.689516067504883
    10. 'i' → logprob: -6.814516067504883

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251937597990036
    2. '=' → logprob: -1.5019376277923584
    3. '   ' → logprob: -11.876937866210938
    4. '       ' → logprob: -13.751937866210938
    5. 'def' → logprob: -16.126937866210938
    6. ',' → logprob: -16.501937866210938
    7. 'b' → logprob: -16.626937866210938
    8. '	' → logprob: -17.001937866210938
    9. '    ' → logprob: -17.001937866210938
    10. ' ' → logprob: -17.126937866210938

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.75002098083496
    4. '       ' → logprob: -19.87502098083496
    5. '```' → logprob: -22.12502098083496
    6. '  ' → logprob: -22.50002098083496
    7. ' ' → logprob: -23.50002098083496
    8. '۱' → logprob: -24.00002098083496
    9. '    ' → logprob: -24.12502098083496
    10. '=' → logprob: -24.25002098083496

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -22.5
    5. '       ' → logprob: -22.875
    6. '  ' → logprob: -23.125
    7. 'import' → logprob: -23.375
    8. '１' → logprob: -23.5
    9. 'def' → logprob: -23.625
    10. '[' → logprob: -24.0

Token 603: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6619012355804443
    2. '       ' → logprob: -0.7869012355804443
    3. '        
' → logprob: -3.6619012355804443
    4. ',' → logprob: -6.661901473999023
    5. '<|end|>' → logprob: -7.911901473999023
    6. '		
' → logprob: -8.161901473999023
    7. '  
' → logprob: -8.161901473999023
    8. ' 
' → logprob: -8.786901473999023
    9. '       
' → logprob: -8.911901473999023
    10. ',
' → logprob: -8.911901473999023

Token 604: 'minimum' (ID: 80931)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5403550267219543
    2. '       ' → logprob: -1.1653549671173096
    3. 'b' → logprob: -3.2903549671173096
    4. 'blocks' → logprob: -3.9153549671173096
    5. '1' → logprob: -4.290355205535889
    6. 'sum' → logprob: -5.415355205535889
    7. ')
' → logprob: -5.540355205535889
    8. ' b' → logprob: -5.665355205535889
    9. '   ' → logprob: -6.040355205535889
    10. ' )' → logprob: -6.040355205535889

Token 605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04685017839074135
    2. ')
' → logprob: -3.1718502044677734
    3. '       ' → logprob: -5.921850204467773
    4. ' )' → logprob: -7.296850204467773
    5. '   ' → logprob: -8.421850204467773
    6. '
' → logprob: -10.046850204467773
    7. ' )
' → logprob: -10.046850204467773
    8. ' bloc' → logprob: -10.671850204467773
    9. ' blocs' → logprob: -10.796850204467773
    10. ' ' → logprob: -10.921850204467773

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047356789582408965
    2. '
' → logprob: -8.500473976135254
    3. '        
' → logprob: -8.625473976135254
    4. 'po' → logprob: -10.000473976135254
    5. '   ' → logprob: -10.875473976135254
    6. '```' → logprob: -11.625473976135254
    7. '    
' → logprob: -13.125473976135254
    8. 'sum' → logprob: -13.375473976135254
    9. 'weight' → logprob: -13.375473976135254
    10. '       
' → logprob: -13.500473976135254

Token 607: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.25497061014175415
    2. 'sum' → logprob: -2.0049705505371094
    3. 'b' → logprob: -3.1299705505371094
    4. '       ' → logprob: -3.5049705505371094
    5. ' sum' → logprob: -5.004970550537109
    6. ' poids' → logprob: -5.129970550537109
    7. '   ' → logprob: -7.004970550537109
    8. ' b' → logprob: -7.504970550537109
    9. 'weight' → logprob: -7.504970550537109
    10. ' po' → logprob: -7.629970550537109

Token 608: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -3.79811754100956e-05
    2. '_' → logprob: -10.500038146972656
    3. '   ' → logprob: -12.750038146972656
    4. '_sur' → logprob: -13.250038146972656
    5. 'above' → logprob: -13.250038146972656
    6. ' =' → logprob: -13.750038146972656
    7. '_a' → logprob: -14.625038146972656
    8. 's' → logprob: -14.750038146972656
    9. '	' → logprob: -14.750038146972656
    10. '_sup' → logprob: -14.875038146972656

Token 609: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -6.630610641877865e-06
    2. 'ov' → logprob: -12.625006675720215
    3. '_' → logprob: -13.250006675720215
    4. 'ouve' → logprob: -15.000006675720215
    5. 'oven' → logprob: -15.500006675720215
    6. 'OVE' → logprob: -15.500006675720215
    7. 'over' → logprob: -15.750006675720215
    8. '=' → logprob: -15.875006675720215
    9. 'above' → logprob: -16.0000057220459
    10. 'o' → logprob: -16.6250057220459

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519311308860779
    2. '=' → logprob: -1.5019311904907227
    3. '   ' → logprob: -13.251931190490723
    4. '       ' → logprob: -15.751931190490723
    5. '    ' → logprob: -17.751930236816406
    6. ' ' → logprob: -18.251930236816406
    7. ',' → logprob: -18.501930236816406
    8. ' ' → logprob: -18.751930236816406
    9. '＝' → logprob: -19.251930236816406
    10. '        ' → logprob: -19.751930236816406

Token 611: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '       ' → logprob: -20.5
    5. 'b' → logprob: -22.125
    6. '```' → logprob: -22.25
    7. '  ' → logprob: -22.75
    8. 'import' → logprob: -23.0
    9. '0' → logprob: -23.125
    10. '۱' → logprob: -23.625

Token 612: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -23.375
    5. 'b' → logprob: -23.75
    6. '0' → logprob: -24.125
    7. '۱' → logprob: -24.375
    8. '
' → logprob: -24.5
    9. '  ' → logprob: -24.625
    10. 'import' → logprob: -24.625

Token 613: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24115557968616486
    2. '       ' → logprob: -1.6161556243896484
    3. '        
' → logprob: -5.116155624389648
    4. '  
' → logprob: -5.116155624389648
    5. ' 
' → logprob: -6.741155624389648
    6. '    
' → logprob: -7.491155624389648
    7. '<|end|>' → logprob: -7.741155624389648
    8. '
' → logprob: -8.241155624389648
    9. '\n' → logprob: -8.491155624389648
    10. '   ' → logprob: -8.741155624389648

Token 614: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22946499288082123
    2. '       ' → logprob: -1.7294650077819824
    3. '<|end|>' → logprob: -4.479465007781982
    4. '        
' → logprob: -4.729465007781982
    5. ',' → logprob: -6.104465007781982
    6. '  
' → logprob: -6.479465007781982
    7. '   ' → logprob: -7.229465007781982
    8. '    
' → logprob: -7.479465007781982
    9. ' 
' → logprob: -7.979465007781982
    10. '		
' → logprob: -7.979465007781982

Token 615: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.03443817421793938
    2. '       ' → logprob: -3.909438133239746
    3. ' sum' → logprob: -5.034438133239746
    4. '1' → logprob: -5.284438133239746
    5. 'total' → logprob: -6.534438133239746
    6. '   ' → logprob: -7.909438133239746
    7. 'import' → logprob: -9.159438133239746
    8. 'if' → logprob: -9.534438133239746
    9. ' total' → logprob: -10.784438133239746
    10. 's' → logprob: -10.784438133239746

Token 616: ' des' (ID: 731)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.21905533969402313
    2. '_b' → logprob: -2.094055414199829
    3. '       ' → logprob: -2.844055414199829
    4. 'b' → logprob: -5.59405517578125
    5. 'blocks' → logprob: -6.09405517578125
    6. 'des' → logprob: -6.21905517578125
    7. ' des' → logprob: -6.59405517578125
    8. '_bloc' → logprob: -6.59405517578125
    9. ' de' → logprob: -6.96905517578125
    10. '_des' → logprob: -6.96905517578125

Token 617: ' blocs' (ID: 182599)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.8926835656166077
    2. 'bl' → logprob: -1.017683506011963
    3. 'b' → logprob: -1.642683506011963
    4. '1' → logprob: -4.767683506011963
    5. ' blocs' → logprob: -4.892683506011963
    6. ' blocks' → logprob: -5.392683506011963
    7. 'bloc' → logprob: -5.517683506011963
    8. ' b' → logprob: -5.767683506011963
    9. '_blocks' → logprob: -5.892683506011963
    10. ' ' → logprob: -6.767683506011963

Token 618: ' au' (ID: 2791)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2727741003036499
    2. '<|end|>' → logprob: -1.64777410030365
    3. '
' → logprob: -3.3977742195129395
    4. '        
' → logprob: -4.8977742195129395
    5. '<|end|>' → logprob: -6.0227742195129395
    6. '        ' → logprob: -7.8977742195129395
    7. ',' → logprob: -8.022773742675781
    8. '  
' → logprob: -8.272773742675781
    9. ')' → logprob: -8.522773742675781
    10. '   ' → logprob: -8.522773742675781

Token 619: '-dessus' (ID: 74812)
  Prédit: 'dess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dess' → logprob: -0.1606152504682541
    2. '-dessus' → logprob: -1.9106152057647705
    3. ' dessus' → logprob: -8.285614967346191
    4. 'd' → logprob: -10.035614967346191
    5. '   ' → logprob: -10.160614967346191
    6. 'p' → logprob: -11.035614967346191
    7. 't' → logprob: -12.035614967346191
    8. ' ' → logprob: -12.285614967346191
    9. 'above' → logprob: -12.410614967346191
    10. 'des' → logprob: -12.535614967346191

Token 620: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08426644653081894
    2. '<|end|>' → logprob: -3.459266424179077
    3. '
' → logprob: -3.584266424179077
    4. ',' → logprob: -4.709266662597656
    5. '        
' → logprob: -4.709266662597656
    6. '<|end|>' → logprob: -6.834266662597656
    7. '  
' → logprob: -6.959266662597656
    8. '\n' → logprob: -7.709266662597656
    9. ')' → logprob: -8.584266662597656
    10. '    
' → logprob: -8.834266662597656

Token 621: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013844948261976242
    2. 'i' → logprob: -4.513844966888428
    3. 'la' → logprob: -7.013844966888428
    4. '1' → logprob: -7.263844966888428
    5. ' l' → logprob: -8.38884449005127
    6. '0' → logprob: -8.51384449005127
    7. '=' → logprob: -8.51384449005127
    8. ' i' → logprob: -9.13884449005127
    9. '```' → logprob: -9.51384449005127
    10. 'the' → logprob: -9.63884449005127

Token 622: ''ét' (ID: 23771)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.46811699867248535
    2. 'ét' → logprob: -2.2181169986724854
    3. ''ét' → logprob: -2.8431169986724854
    4. 'niveau' → logprob: -3.0931169986724854
    5. '1' → logprob: -3.5931169986724854
    6. '_i' → logprob: -4.218116760253906
    7. 'def' → logprob: -4.218116760253906
    8. '   ' → logprob: -4.343116760253906
    9. 'iveau' → logprob: -4.468116760253906
    10. ' i' → logprob: -4.843116760253906

Token 623: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -8.923874702304602e-05
    2. 'tage' → logprob: -10.250089645385742
    3. '   ' → logprob: -11.125089645385742
    4. 'a' → logprob: -11.750089645385742
    5. 'ag' → logprob: -11.750089645385742
    6. 'ages' → logprob: -12.000089645385742
    7. 'agé' → logprob: -12.875089645385742
    8. 'gage' → logprob: -13.250089645385742
    9. ' étage' → logprob: -13.250089645385742
    10. 'âge' → logprob: -13.375089645385742

Token 624: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0065836855210363865
    2. '   ' → logprob: -5.6315836906433105
    3. ')' → logprob: -7.6315836906433105
    4. '<|end|>' → logprob: -7.6315836906433105
    5. ' =' → logprob: -8.381583213806152
    6. '```' → logprob: -8.381583213806152
    7. 'total' → logprob: -8.381583213806152
    8. ',' → logprob: -8.381583213806152
    9. 'def' → logprob: -8.631583213806152
    10. '
' → logprob: -8.756583213806152

Token 625: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013202711008489132
    2. '
' → logprob: -4.763202667236328
    3. ',' → logprob: -6.638202667236328
    4. '<|end|>' → logprob: -6.763202667236328
    5. '        
' → logprob: -6.888202667236328
    6. '   ' → logprob: -7.263202667236328
    7. '    
' → logprob: -9.513202667236328
    8. '  
' → logprob: -9.763202667236328
    9. ')' → logprob: -10.513202667236328
    10. ',
' → logprob: -10.638202667236328

Token 626: ' initial' (ID: 4871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.877604067325592
    2. 'sum' → logprob: -1.2526040077209473
    3. ' sum' → logprob: -1.3776040077209473
    4. ' total' → logprob: -3.6276040077209473
    5. 'total' → logprob: -4.127604007720947
    6. '   ' → logprob: -7.252604007720947
    7. ' ' → logprob: -7.377604007720947
    8. '```' → logprob: -7.627604007720947
    9. '        ' → logprob: -8.752604484558105
    10. 's' → logprob: -8.877604484558105

Token 627: 'ement' (ID: 962)
  Prédit: 'isée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isée' → logprob: -0.07493588328361511
    2. 'isé' → logprob: -2.8249359130859375
    3. '=' → logprob: -4.9499359130859375
    4. 'ement' → logprob: -5.9499359130859375
    5. 'isées' → logprob: -7.0749359130859375
    6. ' =' → logprob: -7.1999359130859375
    7. 'e' → logprob: -7.4499359130859375
    8. 'isation' → logprob: -8.824935913085938
    9. 'is' → logprob: -8.824935913085938
    10. 'isés' → logprob: -8.824935913085938

Token 628: ' étage' (ID: 125215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12631019949913025
    2. ' ' → logprob: -2.751310110092163
    3. '       ' → logprob: -3.876310110092163
    4. '```' → logprob: -5.251310348510742
    5. ' =' → logprob: -5.501310348510742
    6. '0' → logprob: -6.001310348510742
    7. 'sum' → logprob: -6.251310348510742
    8. '<|end|>' → logprob: -6.376310348510742
    9. ' b' → logprob: -6.501310348510742
    10. ' for' → logprob: -6.626310348510742

Token 629: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48683440685272217
    2. ' ' → logprob: -0.9868344068527222
    3. '=' → logprob: -5.361834526062012
    4. '   ' → logprob: -5.361834526062012
    5. ' =' → logprob: -6.236834526062012
    6. ' ' → logprob: -7.986834526062012
    7. 'sup' → logprob: -8.361834526062012
    8. '0' → logprob: -8.736834526062012
    9. ' supérieur' → logprob: -9.236834526062012
    10. '  ' → logprob: -9.611834526062012

Token 630: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036596914287656546
    2. '=' → logprob: -6.003659725189209
    3. ' ' → logprob: -6.878659725189209
    4. '0' → logprob: -9.50365924835205
    5. ' =' → logprob: -10.00365924835205
    6. '```' → logprob: -11.12865924835205
    7. 'top' → logprob: -12.00365924835205
    8. '   ' → logprob: -12.12865924835205
    9. 'haut' → logprob: -13.25365924835205
    10. 'sup' → logprob: -14.00365924835205

Token 631: ' ne' (ID: 453)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0816788449883461
    2. '
' → logprob: -3.581678867340088
    3. '        
' → logprob: -3.956678867340088
    4. '<|end|>' → logprob: -4.331678867340088
    5. '  
' → logprob: -5.456678867340088
    6. '   ' → logprob: -5.456678867340088
    7. '    
' → logprob: -5.831678867340088
    8. ',' → logprob: -6.331678867340088
    9. '\n' → logprob: -6.581678867340088
    10. '	' → logprob: -7.206678867340088

Token 632: ' porte' (ID: 26433)
  Prédit: 'cess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cess' → logprob: -0.4190594553947449
    2. 'st' → logprob: -1.2940595149993896
    3. 'support' → logprob: -3.7940595149993896
    4. 'est' → logprob: -3.9190595149993896
    5. 'a' → logprob: -4.9190592765808105
    6. 'ccess' → logprob: -5.5440592765808105
    7. ''est' → logprob: -5.7940592765808105
    8. ' support' → logprob: -6.0440592765808105
    9. 'x' → logprob: -7.1690592765808105
    10. 's' → logprob: -7.1690592765808105

Token 633: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.38367944955825806
    2. 'r' → logprob: -2.1336793899536133
    3. ' pas' → logprob: -2.1336793899536133
    4. ' aucun' → logprob: -3.5086793899536133
    5. 'sur' → logprob: -4.008679389953613
    6. ' rien' → logprob: -4.383679389953613
    7. 't' → logprob: -4.508679389953613
    8. ' que' → logprob: -5.633679389953613
    9. 'auc' → logprob: -6.633679389953613
    10. 'plus' → logprob: -6.883679389953613

Token 634: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.09479059278964996
    2. ' de' → logprob: -3.2197906970977783
    3. 'sur' → logprob: -3.3447906970977783
    4. 'd' → logprob: -4.719790458679199
    5. 'plus' → logprob: -5.844790458679199
    6. 'des' → logprob: -7.594790458679199
    7. 'r' → logprob: -7.844790458679199
    8. 'po' → logprob: -8.0947904586792
    9. 'au' → logprob: -8.2197904586792
    10. 'les' → logprob: -8.2197904586792

Token 635: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.01296679861843586
    2. 'bloc' → logprob: -5.137966632843018
    3. 'charge' → logprob: -5.387966632843018
    4. ' poids' → logprob: -6.887966632843018
    5. 'bl' → logprob: -7.637966632843018
    6. 'charges' → logprob: -8.637967109680176
    7. '```' → logprob: -8.637967109680176
    8. 'r' → logprob: -8.762967109680176
    9. 'charg' → logprob: -9.637967109680176
    10. 'weight' → logprob: -9.887967109680176

Token 636: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1216094046831131
    2. '<|end|>' → logprob: -2.9966094493865967
    3. '        
' → logprob: -4.121609210968018
    4. ',' → logprob: -4.121609210968018
    5. '
' → logprob: -4.246609210968018
    6. '    
' → logprob: -5.496609210968018
    7. '   ' → logprob: -5.621609210968018
    8. '  
' → logprob: -5.746609210968018
    9. '\n' → logprob: -6.496609210968018
    10. ')' → logprob: -6.621609210968018

Token 637: 'haut' (ID: 134423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1442987322807312
    2. '1' → logprob: -2.269298791885376
    3. ' )' → logprob: -4.269298553466797
    4. '<|end|>' → logprob: -4.644298553466797
    5. ' ' → logprob: -5.394298553466797
    6. ')
' → logprob: -7.894298553466797
    7. ',' → logprob: -8.144298553466797
    8. ' 
' → logprob: -8.144298553466797
    9. '<|end|>' → logprob: -8.394298553466797
    10. '
' → logprob: -8.644298553466797

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10282203555107117
    2. 'e' → logprob: -3.2278220653533936
    3. '   ' → logprob: -3.8528220653533936
    4. ' )' → logprob: -4.6028218269348145
    5. '),' → logprob: -4.8528218269348145
    6. ' étage' → logprob: -5.6028218269348145
    7. '       ' → logprob: -5.7278218269348145
    8. ',' → logprob: -5.9778218269348145
    9. ' ' → logprob: -6.7278218269348145
    10. '=' → logprob: -6.7278218269348145

Token 639: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00843159668147564
    2. 'sum' → logprob: -4.883431434631348
    3. ' sum' → logprob: -8.133431434631348
    4. '   ' → logprob: -8.133431434631348
    5. '        
' → logprob: -8.758431434631348
    6. 'total' → logprob: -10.383431434631348
    7. '
' → logprob: -10.883431434631348
    8. ' total' → logprob: -12.383431434631348
    9. '        ' → logprob: -12.383431434631348
    10. '      ' → logprob: -12.508431434631348

Token 640: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.002617870457470417
    2. 'total' → logprob: -6.377617835998535
    3. ' sum' → logprob: -7.377617835998535
    4. '   ' → logprob: -8.377617835998535
    5. '       ' → logprob: -9.877617835998535
    6. 's' → logprob: -12.752617835998535
    7. ' total' → logprob: -12.877617835998535
    8. '	sum' → logprob: -13.877617835998535
    9. 'som' → logprob: -14.377617835998535
    10. ' somme' → logprob: -15.377617835998535

Token 641: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.0009049110230989754
    2. '_b' → logprob: -7.6259050369262695
    3. '_bloc' → logprob: -7.8759050369262695
    4. '_' → logprob: -10.50090503692627
    5. '_ab' → logprob: -12.37590503692627
    6. '_bl' → logprob: -13.37590503692627
    7. '_total' → logprob: -13.87590503692627
    8. 'blocks' → logprob: -14.50090503692627
    9. '_block' → logprob: -15.12590503692627
    10. '\' → logprob: -15.37590503692627

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. '   ' → logprob: -15.00192928314209
    4. '＝' → logprob: -17.251930236816406
    5. ' +=' → logprob: -17.751930236816406
    6. ' ' → logprob: -17.876930236816406
    7. '	' → logprob: -18.251930236816406
    8. '    ' → logprob: -18.501930236816406
    9. '+=' → logprob: -18.501930236816406
    10. '=int' → logprob: -18.626930236816406

Token 643: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024763736873865128
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.127476692199707
    4. '       ' → logprob: -18.12747573852539
    5. '  ' → logprob: -18.87747573852539
    6. ' ' → logprob: -20.00247573852539
    7. '```' → logprob: -20.12747573852539
    8. '	' → logprob: -20.37747573852539
    9. '=' → logprob: -20.62747573852539
    10. '0' → logprob: -20.87747573852539

Token 644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.625
    4. 'po' → logprob: -18.875
    5. '```' → logprob: -19.375
    6. '2' → logprob: -19.75
    7. '=' → logprob: -20.0
    8. '       ' → logprob: -20.25
    9. 'b' → logprob: -20.875
    10. 'pow' → logprob: -21.375

Token 645: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.058004386723041534
    2. '<|end|>' → logprob: -3.808004379272461
    3. '       ' → logprob: -3.933004379272461
    4. '  
' → logprob: -5.433004379272461
    5. '        
' → logprob: -5.933004379272461
    6. '\n' → logprob: -6.058004379272461
    7. '    
' → logprob: -6.433004379272461
    8. '   ' → logprob: -6.683004379272461
    9. '<|end|>' → logprob: -7.433004379272461
    10. ' 
' → logprob: -7.558004379272461

Token 646: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016000932082533836
    2. '        
' → logprob: -5.891000747680664
    3. '    
' → logprob: -5.891000747680664
    4. '  
' → logprob: -6.141000747680664
    5. '       ' → logprob: -6.266000747680664
    6. '<|end|>' → logprob: -6.391000747680664
    7. '   ' → logprob: -6.891000747680664
    8. ' 
' → logprob: -6.891000747680664
    9. '
' → logprob: -7.266000747680664
    10. '   
' → logprob: -7.391000747680664

Token 647: ' nombre' (ID: 9733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0261898040771484
    2. 'b' → logprob: -1.4011898040771484
    3. 'blocks' → logprob: -1.6511898040771484
    4. 'sum' → logprob: -2.9011898040771484
    5. '       ' → logprob: -2.9011898040771484
    6. ' for' → logprob: -4.026189804077148
    7. 'if' → logprob: -4.401189804077148
    8. 'total' → logprob: -4.401189804077148
    9. '   ' → logprob: -4.776189804077148
    10. '1' → logprob: -4.776189804077148

Token 648: ' total' (ID: 3609)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.8135444521903992
    2. '_total' → logprob: -1.438544511795044
    3. ' de' → logprob: -1.688544511795044
    4. '_de' → logprob: -2.938544511795044
    5. '_' → logprob: -3.688544511795044
    6. ' total' → logprob: -4.563544273376465
    7. ' d' → logprob: -4.688544273376465
    8. '_des' → logprob: -4.688544273376465
    9. ' des' → logprob: -5.188544273376465
    10. '_bloc' → logprob: -5.313544273376465

Token 649: ' de' (ID: 334)
  Prédit: '_blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.4414995014667511
    2. ' de' → logprob: -1.3164994716644287
    3. ' des' → logprob: -3.6914994716644287
    4. '_de' → logprob: -4.191499710083008
    5. ' d' → logprob: -4.566499710083008
    6. 'de' → logprob: -4.816499710083008
    7. '_des' → logprob: -5.066499710083008
    8. '_' → logprob: -5.191499710083008
    9. '   ' → logprob: -5.316499710083008
    10. '_bloc' → logprob: -5.816499710083008

Token 650: ' blocs' (ID: 182599)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0908559039235115
    2. ' blocs' → logprob: -2.465855836868286
    3. 'bloc' → logprob: -7.465856075286865
    4. 'blocks' → logprob: -7.465856075286865
    5. ' bl' → logprob: -8.215855598449707
    6. ' ' → logprob: -8.465855598449707
    7. 'blo' → logprob: -9.465855598449707
    8. '_bloc' → logprob: -9.965855598449707
    9. 'b' → logprob: -10.090855598449707
    10. ' blocks' → logprob: -10.215855598449707

Token 651: ' utilisés' (ID: 94258)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43255814909935
    2. '<|end|>' → logprob: -2.057558059692383
    3. '
' → logprob: -2.182558059692383
    4. '        
' → logprob: -3.307558059692383
    5. '   ' → logprob: -3.807558059692383
    6. '  
' → logprob: -4.182558059692383
    7. '    
' → logprob: -4.307558059692383
    8. '<|end|>' → logprob: -5.182558059692383
    9. '\n' → logprob: -5.432558059692383
    10. ',' → logprob: -6.057558059692383

Token 652: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1444600820541382
    2. '
' → logprob: -1.3944600820541382
    3. '<|end|>' → logprob: -2.0194602012634277
    4. '    
' → logprob: -2.5194602012634277
    5. '       ' → logprob: -2.7694602012634277
    6. '  
' → logprob: -3.0194602012634277
    7. '\n' → logprob: -3.0194602012634277
    8. '        
' → logprob: -4.019460201263428
    9. '<|end|>' → logprob: -4.019460201263428
    10. ',' → logprob: -5.519460201263428

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0987042710185051
    2. '
' → logprob: -3.5987043380737305
    3. '   ' → logprob: -3.5987043380737305
    4. ' for' → logprob: -3.9737043380737305
    5. '	for' → logprob: -4.2237043380737305
    6. '        
' → logprob: -6.2237043380737305
    7. 'for' → logprob: -6.4737043380737305
    8. '<|end|>' → logprob: -7.2237043380737305
    9. '    
' → logprob: -7.4737043380737305
    10. '  
' → logprob: -8.22370433807373

Token 654: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012130910763517022
    2. '       ' → logprob: -6.751213073730469
    3. ' for' → logprob: -10.376213073730469
    4. '   ' → logprob: -11.376213073730469
    5. '	for' → logprob: -16.12621307373047
    6. '
' → logprob: -17.00121307373047
    7. 'if' → logprob: -17.50121307373047
    8. '        
' → logprob: -17.62621307373047
    9. '```' → logprob: -18.00121307373047
    10. ' ' → logprob: -19.62621307373047

Token 655: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141518115997314
    2. ' i' → logprob: -1.7014151811599731
    3. '	i' → logprob: -13.576415061950684
    4. '_i' → logprob: -14.826415061950684
    5. '(i' → logprob: -16.326416015625
    6. '   ' → logprob: -16.451416015625
    7. ' ' → logprob: -16.576416015625
    8. ' étage' → logprob: -18.451416015625
    9. '```' → logprob: -19.451416015625
    10. '`' → logprob: -19.701416015625

Token 656: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005941121373325586
    2. 'in' → logprob: -5.130940914154053
    3. '    ' → logprob: -12.630941390991211
    4. ' ' → logprob: -13.130941390991211
    5. '   ' → logprob: -13.130941390991211
    6. '	in' → logprob: -13.380941390991211
    7. 'range' → logprob: -13.630941390991211
    8. '=' → logprob: -14.630941390991211
    9. '<|end|>' → logprob: -14.880941390991211
    10. '_in' → logprob: -15.255941390991211

Token 657: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029752103611826897
    2. ' range' → logprob: -3.529752016067505
    3. '(range' → logprob: -14.029751777648926
    4. ' ' → logprob: -15.029751777648926
    5. '   ' → logprob: -15.029751777648926
    6. '	range' → logprob: -15.654751777648926
    7. '  ' → logprob: -17.279752731323242
    8. 'rang' → logprob: -17.904752731323242
    9. ' in' → logprob: -19.029752731323242
    10. 'ange' → logprob: -19.154752731323242

Token 658: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '2' → logprob: -13.50000286102295
    3. '(
' → logprob: -14.00000286102295
    4. ' (' → logprob: -15.00000286102295
    5. '   ' → logprob: -16.250001907348633
    6. '	' → logprob: -17.500001907348633
    7. ' ' → logprob: -20.500001907348633
    8. '1' → logprob: -21.375001907348633
    9. '    ' → logprob: -21.875001907348633
    10. ')' → logprob: -21.875001907348633

Token 659: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '(' → logprob: -17.625
    5. '1' → logprob: -17.75
    6. '۲' → logprob: -20.125
    7. ')' → logprob: -20.5
    8. '```' → logprob: -20.875
    9. '２' → logprob: -21.25
    10. '       ' → logprob: -21.25

Token 660: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002790935104712844
    2. ' ,' → logprob: -8.375279426574707
    3. ',h' → logprob: -10.000279426574707
    4. '   ' → logprob: -13.500279426574707
    5. ',
' → logprob: -14.125279426574707
    6. '(h' → logprob: -14.750279426574707
    7. '       ' → logprob: -16.00027847290039
    8. ',n' → logprob: -16.50027847290039
    9. '(' → logprob: -16.62527847290039
    10. '‌,' → logprob: -16.87527847290039

Token 661: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0009134899592027068
    2. ' h' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.250913619995117
    4. '	h' → logprob: -16.000913619995117
    5. '       ' → logprob: -17.375913619995117
    6. '(h' → logprob: -18.125913619995117
    7. '```' → logprob: -18.250913619995117
    8. '<h' → logprob: -18.625913619995117
    9. '    ' → logprob: -18.875913619995117
    10. ')' → logprob: -19.625913619995117

Token 662: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.140713632106781
    2. '):
' → logprob: -2.265713691711426
    3. '+' → logprob: -3.640713691711426
    4. '   ' → logprob: -7.515713691711426
    5. ' +' → logprob: -8.015713691711426
    6. ' ):' → logprob: -9.015713691711426
    7. ':' → logprob: -9.390713691711426
    8. ')' → logprob: -9.640713691711426
    9. '       ' → logprob: -10.140713691711426
    10. ',' → logprob: -10.265713691711426

Token 663: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.500001907348633
    4. '```' → logprob: -20.250001907348633
    5. '  ' → logprob: -21.625001907348633
    6. '
' → logprob: -21.750001907348633
    7. ')' → logprob: -21.750001907348633
    8. '2' → logprob: -23.000001907348633
    9. '     ' → logprob: -23.312501907348633
    10. '=' → logprob: -23.375001907348633

Token 664: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -18.625
    4. '
' → logprob: -19.25
    5. ')' → logprob: -20.0
    6. '```' → logprob: -20.0
    7. '

' → logprob: -21.25
    8. '2' → logprob: -21.375
    9. '+' → logprob: -21.5625
    10. '  ' → logprob: -22.0625

Token 665: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25258591771125793
    2. '):' → logprob: -1.5025858879089355
    3. '):
' → logprob: -8.127586364746094
    4. ':' → logprob: -8.252586364746094
    5. '       ' → logprob: -9.502586364746094
    6. ':
' → logprob: -11.377586364746094
    7. '   ' → logprob: -11.502586364746094
    8. ')' → logprob: -13.877586364746094
    9. ',' → logprob: -13.877586364746094
    10. '():
' → logprob: -14.002586364746094

Token 666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010745474137365818
    2. '       ' → logprob: -4.760745525360107
    3. '        
' → logprob: -6.760745525360107
    4. '```' → logprob: -8.26074504852295
    5. '
' → logprob: -8.88574504852295
    6. '            
' → logprob: -9.01074504852295
    7. '	       ' → logprob: -9.51074504852295
    8. '<|end|>' → logprob: -9.63574504852295
    9. 'b' → logprob: -9.76074504852295
    10. 'n' → logprob: -9.88574504852295

Token 667: ' #' (ID: 1069)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.08665090799331665
    2. '           ' → logprob: -2.711650848388672
    3. 'b' → logprob: -4.211650848388672
    4. '               ' → logprob: -6.961650848388672
    5. ' bi' → logprob: -7.336650848388672
    6. '   ' → logprob: -9.836650848388672
    7. 'block' → logprob: -10.211650848388672
    8. ' b' → logprob: -10.836650848388672
    9. '       ' → logprob: -11.711650848388672
    10. 'min' → logprob: -11.836650848388672

Token 668: ' nombre' (ID: 9733)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.006277501583099365
    2. 'b' → logprob: -5.631277561187744
    3. '           ' → logprob: -6.006277561187744
    4. '               ' → logprob: -9.506277084350586
    5. 'min' → logprob: -9.881277084350586
    6. 'required' → logprob: -10.506277084350586
    7. ' bi' → logprob: -10.881277084350586
    8. 'needed' → logprob: -11.506277084350586
    9. 'import' → logprob: -11.631277084350586
    10. 'block' → logprob: -11.881277084350586

Token 669: ' minimum' (ID: 11085)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.7986366748809814
    2. '_b' → logprob: -1.4236366748809814
    3. '_bloc' → logprob: -1.9236366748809814
    4. '_needed' → logprob: -3.0486366748809814
    5. '_blocks' → logprob: -3.4236366748809814
    6. '_required' → logprob: -3.5486366748809814
    7. '           ' → logprob: -4.548636436462402
    8. '=' → logprob: -4.548636436462402
    9. '_block' → logprob: -4.673636436462402
    10. '_' → logprob: -4.923636436462402

Token 670: ' de' (ID: 334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.501107931137085
    2. ' =' → logprob: -1.876107931137085
    3. 'bi' → logprob: -2.751107931137085
    4. '_b' → logprob: -3.126107931137085
    5. '_blocks' → logprob: -3.376107931137085
    6. '_bloc' → logprob: -3.376107931137085
    7. '=' → logprob: -3.626107931137085
    8. 'blocks' → logprob: -4.126108169555664
    9. 'b' → logprob: -4.751108169555664
    10. '_needed' → logprob: -5.751108169555664

Token 671: ' blocs' (ID: 182599)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -0.37507328391075134
    2. 'bl' → logprob: -1.5000733137130737
    3. 'math' → logprob: -2.875073194503784
    4. ' blocs' → logprob: -4.500073432922363
    5. 'bi' → logprob: -4.750073432922363
    6. ' blocks' → logprob: -4.750073432922363
    7. 'bloc' → logprob: -6.250073432922363
    8. 'b' → logprob: -6.875073432922363
    9. ' math' → logprob: -7.000073432922363
    10. 'blo' → logprob: -7.875073432922363

Token 672: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30106279253959656
    2. '           ' → logprob: -1.551062822341919
    3. '=' → logprob: -3.051062822341919
    4. '_needed' → logprob: -8.17606258392334
    5. 'needed' → logprob: -9.55106258392334
    6. '               ' → logprob: -9.92606258392334
    7. '_required' → logprob: -10.05106258392334
    8. '		' → logprob: -10.55106258392334
    9. 'required' → logprob: -10.67606258392334
    10. '   ' → logprob: -11.05106258392334

Token 673: ' l' (ID: 305)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.007663882337510586
    2. 'i' → logprob: -5.132663726806641
    3. ' math' → logprob: -7.007663726806641
    4. 'max' → logprob: -8.25766372680664
    5. '(math' → logprob: -8.88266372680664
    6. ' i' → logprob: -9.00766372680664
    7. '   ' → logprob: -9.00766372680664
    8. 'ceil' → logprob: -10.00766372680664
    9. 'min' → logprob: -10.38266372680664
    10. 'int' → logprob: -10.38266372680664

Token 674: ''ét' (ID: 23771)
  Prédit: ''ét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ét' → logprob: -0.2576080858707428
    2. 'ét' → logprob: -2.00760817527771
    3. ' étage' → logprob: -3.13260817527771
    4. 'i' → logprob: -4.007607936859131
    5. '’ét' → logprob: -4.507607936859131
    6. 'et' → logprob: -4.632607936859131
    7. 'ceil' → logprob: -6.007607936859131
    8. 'é' → logprob: -6.882607936859131
    9. 'éta' → logprob: -7.257607936859131
    10. '   ' → logprob: -7.382607936859131

Token 675: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.009399273432791233
    2. 'ape' → logprob: -5.2593994140625
    3. ' étage' → logprob: -6.2593994140625
    4. '   ' → logprob: -7.3843994140625
    5. 'âge' → logprob: -7.8843994140625
    6. 'é' → logprob: -8.5093994140625
    7. 'tage' → logprob: -8.8843994140625
    8. 'p' → logprob: -9.1343994140625
    9. 'ap' → logprob: -9.3843994140625
    10. 'i' → logprob: -9.3843994140625

Token 676: ' i' (ID: 575)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.714217483997345
    2. 'math' → logprob: -0.964217483997345
    3. '           ' → logprob: -2.9642174243927
    4. ' =' → logprob: -3.0892174243927
    5. '=' → logprob: -3.8392174243927
    6. '(math' → logprob: -4.839217662811279
    7. '   ' → logprob: -6.464217662811279
    8. '               ' → logprob: -8.714217185974121
    9. 'ceil' → logprob: -8.714217185974121
    10. '       ' → logprob: -9.089217185974121

Token 677: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05986231192946434
    2. '           ' → logprob: -2.9348623752593994
    3. '=' → logprob: -5.30986213684082
    4. ':' → logprob: -12.18486213684082
    5. '		' → logprob: -12.55986213684082
    6. '               ' → logprob: -13.18486213684082
    7. '            ' → logprob: -13.18486213684082
    8. '	       ' → logprob: -13.30986213684082
    9. ',' → logprob: -13.43486213684082
    10. '            
' → logprob: -13.68486213684082

Token 678: ' que' (ID: 661)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0014213069807738066
    2. ' math' → logprob: -6.6264214515686035
    3. '   ' → logprob: -9.751420974731445
    4. '(math' → logprob: -10.376420974731445
    5. 'max' → logprob: -13.876420974731445
    6. ' ' → logprob: -14.126420974731445
    7. 'respect' → logprob: -14.126420974731445
    8. '       ' → logprob: -14.376420974731445
    9. 'min' → logprob: -14.501420974731445
    10. 'int' → logprob: -14.501420974731445

Token 679: ' poids' (ID: 56058)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -0.6307982206344604
    2. 'po' → logprob: -1.3807982206344604
    3. ' poids' → logprob: -2.50579833984375
    4. ' bi' → logprob: -2.63079833984375
    5. ' math' → logprob: -3.38079833984375
    6. 'math' → logprob: -3.75579833984375
    7. ' po' → logprob: -5.88079833984375
    8. 'b' → logprob: -7.13079833984375
    9. ' blocs' → logprob: -7.50579833984375
    10. ' (' → logprob: -8.50579833984375

Token 680: ' par' (ID: 686)
  Prédit: '_ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.04269631579518318
    2. '_per' → logprob: -3.917696237564087
    3. '_par' → logprob: -4.292696475982666
    4. '           ' → logprob: -6.042696475982666
    5. 'par' → logprob: -6.292696475982666
    6. 'per' → logprob: -6.417696475982666
    7. '=' → logprob: -7.542696475982666
    8. '>=' → logprob: -8.167695999145508
    9. '_sur' → logprob: -8.167695999145508
    10. '_b' → logprob: -8.292695999145508

Token 681: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.019549179822206497
    2. ' bloc' → logprob: -4.519549369812012
    3. 'block' → logprob: -5.144549369812012
    4. '_bloc' → logprob: -6.644549369812012
    5. 'bl' → logprob: -7.394549369812012
    6. 'blo' → logprob: -7.894549369812012
    7. ' block' → logprob: -9.394549369812012
    8. ' ' → logprob: -9.394549369812012
    9. 'blok' → logprob: -9.769549369812012
    10. '```' → logprob: -10.269549369812012

Token 682: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.9244112968444824
    2. ' <=' → logprob: -1.0494112968444824
    3. '=' → logprob: -1.5494112968444824
    4. ' =' → logprob: -3.4244112968444824
    5. '           ' → logprob: -5.424411296844482
    6. '>=' → logprob: -6.049411296844482
    7. ' >=' → logprob: -7.299411296844482
    8. '               ' → logprob: -8.67441177368164
    9. ')<=' → logprob: -9.29941177368164
    10. ' ' → logprob: -9.79941177368164

Token 683: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0010332842357456684
    2. ' K' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.376032829284668
    4. ' ' → logprob: -16.251033782958984
    5. '   ' → logprob: -16.876033782958984
    6. '```' → logprob: -17.251033782958984
    7. '  ' → logprob: -17.626033782958984
    8. ' math' → logprob: -17.751033782958984
    9. 'math' → logprob: -17.751033782958984
    10. '	K' → logprob: -17.876033782958984

Token 684: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10707120597362518
    2. ' =' → logprob: -2.3570711612701416
    3. '=' → logprob: -5.232071399688721
    4. ':' → logprob: -7.857071399688721
    5. '            
' → logprob: -7.857071399688721
    6. '               ' → logprob: -8.482070922851562
    7. 'bi' → logprob: -9.357070922851562
    8. ',' → logprob: -9.857070922851562
    9. '            ' → logprob: -10.107070922851562
    10. '       ' → logprob: -10.107070922851562

Token 685: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010793721303343773
    2. '            
' → logprob: -7.876079559326172
    3. ' 
' → logprob: -9.001079559326172
    4. '               ' → logprob: -9.126079559326172
    5. '       ' → logprob: -9.251079559326172
    6. ' =' → logprob: -9.876079559326172
    7. '  
' → logprob: -10.126079559326172
    8. '	       ' → logprob: -10.126079559326172
    9. '		' → logprob: -10.751079559326172
    10. '    
' → logprob: -11.001079559326172

Token 686: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' (adapté à ' bi') → logprob: -0.024501310661435127
    2. 'b' → logprob: -3.774501323699951
    3. '           ' → logprob: -6.774501323699951
    4. ' bi' → logprob: -10.024500846862793
    5. '               ' → logprob: -10.274500846862793
    6. '   ' → logprob: -11.399500846862793
    7. ' b' → logprob: -12.274500846862793
    8. 'block' → logprob: -12.524500846862793
    9. 'bl' → logprob: -12.774500846862793
    10. 'blocks' → logprob: -13.399500846862793

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. ' ' → logprob: -16.474077224731445
    4. ')' → logprob: -16.724077224731445
    5. '   ' → logprob: -16.724077224731445
    6. '=int' → logprob: -16.974077224731445
    7. '           ' → logprob: -17.599077224731445
    8. ' =
' → logprob: -18.099077224731445
    9. ' ' → logprob: -18.099077224731445
    10. ',' → logprob: -18.224077224731445

Token 688: ' (' (ID: 350)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.039352573454380035
    2. ' math' → logprob: -3.2893526554107666
    3. '(math' → logprob: -6.6643524169921875
    4. ' (' → logprob: -10.914352416992188
    5. 'int' → logprob: -11.664352416992188
    6. ' ' → logprob: -12.539352416992188
    7. '(' → logprob: -14.039352416992188
    8. '   ' → logprob: -14.289352416992188
    9. ' int' → logprob: -14.289352416992188
    10. ' -' → logprob: -14.664352416992188

Token 689: 'po' (ID: 2519)
  Prédit: 'po'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.007535886950790882
    2. 'math' → logprob: -5.382535934448242
    3. '(p' → logprob: -6.632535934448242
    4. '(po' → logprob: -6.882535934448242
    5. '-po' → logprob: -8.257535934448242
    6. '(math' → logprob: -8.882535934448242
    7. ' poids' → logprob: -9.507535934448242
    8. 'pois' → logprob: -10.507535934448242
    9. '-' → logprob: -10.757535934448242
    10. '-(' → logprob: -12.007535934448242

Token 690: 'ids' (ID: 3375)
  Prédit: 'ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ids' → logprob: -7.3458322731312364e-06
    2. 'id' → logprob: -12.750007629394531
    3. 'ds' → logprob: -13.125007629394531
    4. 'inds' → logprob: -13.875007629394531
    5. '_ids' → logprob: -14.625007629394531
    6. 'its' → logprob: -14.875007629394531
    7. 'ints' → logprob: -15.375007629394531
    8. 'i' → logprob: -15.500007629394531
    9. 'ils' → logprob: -16.37500762939453
    10. '{' → logprob: -17.25000762939453

Token 691: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -2.1008713702030946e-06
    2. 'Above' → logprob: -14.000001907348633
    3. 'above' → logprob: -14.625001907348633
    4. '_al' → logprob: -15.250001907348633
    5. '+' → logprob: -16.250001907348633
    6. '_a' → logprob: -16.250001907348633
    7. ')_' → logprob: -16.750001907348633
    8. '_over' → logprob: -17.000001907348633
    9. '_an' → logprob: -17.250001907348633
    10. '_' → logprob: -18.000001907348633

Token 692: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.00409371592104435
    2. 've' → logprob: -5.504093647003174
    3. 'above' → logprob: -12.004094123840332
    4. 'ave' → logprob: -12.629094123840332
    5. 'uve' → logprob: -13.254094123840332
    6. '_ab' → logprob: -13.629094123840332
    7. 'ive' → logprob: -14.129094123840332
    8. '   ' → logprob: -15.254094123840332
    9. '_over' → logprob: -15.254094123840332
    10. 'ov' → logprob: -15.254094123840332

Token 693: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12693272531032562
    2. '+' → logprob: -2.1269326210021973
    3. ' ' → logprob: -12.376933097839355
    4. ' ' → logprob: -15.126933097839355
    5. '  ' → logprob: -16.62693214416504
    6. '   ' → logprob: -16.87693214416504
    7. '+k' → logprob: -18.12693214416504
    8. '＋' → logprob: -18.50193214416504
    9. '```' → logprob: -18.50193214416504
    10. ' +
' → logprob: -18.87693214416504

Token 694: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.8550976164988242e-05
    2. ' K' → logprob: -11.250018119812012
    3. '(K' → logprob: -12.125018119812012
    4. '           ' → logprob: -16.875019073486328
    5. '	K' → logprob: -17.500019073486328
    6. ' (' → logprob: -17.750019073486328
    7. '   ' → logprob: -17.875019073486328
    8. ' ' → logprob: -18.250019073486328
    9. '                   ' → logprob: -19.125019073486328
    10. '(' → logprob: -19.375019073486328

Token 695: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12696506083011627
    2. ' -' → logprob: -2.126965045928955
    3. ')' → logprob: -10.251965522766113
    4. ' ' → logprob: -14.001965522766113
    5. '   ' → logprob: -14.501965522766113
    6. '−' → logprob: -16.501964569091797
    7. '#' → logprob: -16.626964569091797
    8. '```' → logprob: -16.876964569091797
    9. '  ' → logprob: -17.626964569091797
    10. '-)' → logprob: -17.751964569091797

Token 696: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -21.875
    4. '   ' → logprob: -22.125
    5. '-' → logprob: -23.5
    6. '１' → logprob: -23.75
    7. '۱' → logprob: -24.5
    8. '#' → logprob: -25.5
    9. ')' → logprob: -25.625
    10. '  ' → logprob: -25.875

Token 697: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. '```' → logprob: -22.125
    4. '   ' → logprob: -22.625
    5. '１' → logprob: -24.125
    6. '۱' → logprob: -24.25
    7. '-' → logprob: -24.5
    8. ')' → logprob: -24.75
    9. '#' → logprob: -25.25
    10. '

' → logprob: -25.5

Token 698: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004090508911758661
    2. ')//' → logprob: -5.504090309143066
    3. ' )' → logprob: -11.504090309143066
    4. '//' → logprob: -13.254090309143066
    5. ' //' → logprob: -15.879090309143066
    6. '   ' → logprob: -16.129091262817383
    7. ']' → logprob: -17.254091262817383
    8. ')
' → logprob: -18.129091262817383
    9. '#' → logprob: -18.129091262817383
    10. ')#' → logprob: -18.254091262817383

Token 699: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.1007431373000145
    2. ' //' → logprob: -2.350743055343628
    3. '#' → logprob: -8.100743293762207
    4. '           ' → logprob: -8.725743293762207
    5. ')' → logprob: -10.100743293762207
    6. '```' → logprob: -11.850743293762207
    7. '   ' → logprob: -12.100743293762207
    8. ' ' → logprob: -12.725743293762207
    9. '            ' → logprob: -12.975743293762207
    10. '       ' → logprob: -13.350743293762207

Token 700: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.339278580620885e-06
    2. ' K' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '	K' → logprob: -20.875001907348633
    5. '           ' → logprob: -23.625001907348633
    6. '>K' → logprob: -24.500001907348633
    7. ' ' → logprob: -24.500001907348633
    8. '       ' → logprob: -24.875001907348633
    9. ',K' → logprob: -25.625001907348633
    10. '  ' → logprob: -25.625001907348633

Token 701: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019948746194131672
    2. 'po' → logprob: -9.500199317932129
    3. '
' → logprob: -9.625199317932129
    4. '            
' → logprob: -11.625199317932129
    5. '          ' → logprob: -11.625199317932129
    6. '   ' → logprob: -11.875199317932129
    7. '       ' → logprob: -11.875199317932129
    8. '  
' → logprob: -12.125199317932129
    9. '		' → logprob: -12.375199317932129
    10. ' po' → logprob: -12.375199317932129

Token 702: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007446901872754097
    2. '
' → logprob: -5.007446765899658
    3. 'po' → logprob: -8.632447242736816
    4. '            
' → logprob: -8.757447242736816
    5. '
' → logprob: -9.382447242736816
    6. '       ' → logprob: -10.007447242736816
    7. ' po' → logprob: -10.257447242736816
    8. '  
' → logprob: -10.382447242736816
    9. '		' → logprob: -10.632447242736816
    10. '    
' → logprob: -10.632447242736816

Token 703: ' équ' (ID: 18899)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.37216657400131226
    2. 'math' → logprob: -2.497166633605957
    3. ' math' → logprob: -2.497166633605957
    4. '           ' → logprob: -2.622166633605957
    5. 'bi' → logprob: -3.372166633605957
    6. ' po' → logprob: -4.622166633605957
    7. ' (' → logprob: -4.997166633605957
    8. ' poids' → logprob: -5.247166633605957
    9. '(math' → logprob: -5.497166633605957
    10. 'pois' → logprob: -6.122166633605957

Token 704: 'ivalent' (ID: 19253)
  Prédit: 'ival'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ival' → logprob: -0.5501927733421326
    2. 'ivalent' → logprob: -1.1751928329467773
    3. 'iv' → logprob: -2.1751928329467773
    4. 'al' → logprob: -8.675192832946777
    5. 'val' → logprob: -8.800192832946777
    6. 'i' → logprob: -8.925192832946777
    7. 'v' → logprob: -9.175192832946777
    8. 'ally' → logprob: -9.925192832946777
    9. 'ale' → logprob: -10.050192832946777
    10. 'ilibr' → logprob: -10.675192832946777

Token 705: ' à' (ID: 1221)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.9752215147018433
    2. 'import' → logprob: -1.7252215147018433
    3. 'à' → logprob: -1.7252215147018433
    4. ' à' → logprob: -2.100221633911133
    5. '           ' → logprob: -2.475221633911133
    6. 'to' → logprob: -3.725221633911133
    7. ' to' → logprob: -4.725221633911133
    8. ' math' → logprob: -4.850221633911133
    9. '(math' → logprob: -4.975221633911133
    10. 'po' → logprob: -5.225221633911133

Token 706: ' ceil' (ID: 35964)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.01299198530614376
    2. '(math' → logprob: -4.887991905212402
    3. '(p' → logprob: -5.387991905212402
    4. 'import' → logprob: -7.762991905212402
    5. 'po' → logprob: -9.012991905212402
    6. ' math' → logprob: -9.137991905212402
    7. '((' → logprob: -9.762991905212402
    8. '(po' → logprob: -9.887991905212402
    9. '(' → logprob: -10.512991905212402
    10. ' (' → logprob: -12.637991905212402

Token 707: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.003925468306988478
    2. '(po' → logprob: -5.628925323486328
    3. 'po' → logprob: -9.253925323486328
    4. '((' → logprob: -9.378925323486328
    5. ' (' → logprob: -9.878925323486328
    6. '(' → logprob: -10.003925323486328
    7. 'div' → logprob: -10.628925323486328
    8. 'division' → logprob: -11.128925323486328
    9. '(pow' → logprob: -12.003925323486328
    10. '(div' → logprob: -13.628925323486328

Token 708: 'oids' (ID: 48135)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.09503334015607834
    2. 'po' → logprob: -2.7200334072113037
    3. '(po' → logprob: -4.345033168792725
    4. ' (' → logprob: -4.970033168792725
    5. ' poids' → logprob: -6.345033168792725
    6. 'o' → logprob: -6.845033168792725
    7. '(' → logprob: -7.220033168792725
    8. 'ois' → logprob: -8.095033645629883
    9. 'div' → logprob: -8.470033645629883
    10. 'p' → logprob: -8.845033645629883

Token 709: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -3.8889261304575484e-06
    2. 'above' → logprob: -12.750003814697266
    3. '	' → logprob: -15.250003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '_al' → logprob: -16.250003814697266
    6. '_over' → logprob: -16.625003814697266
    7. ' ' → logprob: -16.750003814697266
    8. ' above' → logprob: -16.750003814697266
    9. '_' → logprob: -17.125003814697266
    10. 'Above' → logprob: -17.500003814697266

Token 710: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -4.8590300139039755e-05
    2. '_ab' → logprob: -10.750048637390137
    3. 'above' → logprob: -11.750048637390137
    4. 'ov' → logprob: -12.500048637390137
    5. '   ' → logprob: -12.750048637390137
    6. 'oved' → logprob: -12.875048637390137
    7. 'ave' → logprob: -13.250048637390137
    8. 'ové' → logprob: -13.500048637390137
    9. '_over' → logprob: -13.875048637390137
    10. 'ive' → logprob: -14.000048637390137

Token 711: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4754086434841156
    2. ' /' → logprob: -0.975408673286438
    3. '/K' → logprob: -6.725408554077148
    4. ')' → logprob: -9.600408554077148
    5. '/k' → logprob: -9.975408554077148
    6. ' ' → logprob: -11.725408554077148
    7. ' ' → logprob: -12.725408554077148
    8. '   ' → logprob: -13.600408554077148
    9. ' /
' → logprob: -14.350408554077148
    10. '/
' → logprob: -14.350408554077148

Token 712: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.306760805164231e-05
    2. ' K' → logprob: -11.25001335144043
    3. '	K' → logprob: -19.75001335144043
    4. ')' → logprob: -20.00001335144043
    5. '   ' → logprob: -20.50001335144043
    6. '```' → logprob: -22.00001335144043
    7. ' ' → logprob: -22.25001335144043
    8. '>K' → logprob: -22.62501335144043
    9. ' ' → logprob: -23.25001335144043
    10. '*K' → logprob: -23.25001335144043

Token 713: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018430739641189575
    2. ')
' → logprob: -4.018430709838867
    3. '           ' → logprob: -8.518430709838867
    4. ' )' → logprob: -10.143430709838867
    5. '       ' → logprob: -10.768430709838867
    6. ')
' → logprob: -11.518430709838867
    7. '   ' → logprob: -12.518430709838867
    8. ')

' → logprob: -12.643430709838867
    9. ' )
' → logprob: -13.643430709838867
    10. '')' → logprob: -14.393430709838867

Token 714: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005051348707638681
    2. '
' → logprob: -8.250505447387695
    3. 'po' → logprob: -9.250505447387695
    4. '            
' → logprob: -9.625505447387695
    5. '       ' → logprob: -10.125505447387695
    6. '    
' → logprob: -11.875505447387695
    7. '   ' → logprob: -12.000505447387695
    8. '  
' → logprob: -12.125505447387695
    9. '        
' → logprob: -12.375505447387695
    10. ' 
' → logprob: -12.750505447387695

Token 715: ' if' (ID: 538)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.39707475900650024
    2. '           ' → logprob: -2.1470746994018555
    3. ' sum' → logprob: -2.2720746994018555
    4. '       ' → logprob: -2.7720746994018555
    5. ' if' → logprob: -3.6470746994018555
    6. 'if' (adapté à ' if') → logprob: -4.0220746994018555
    7. '   ' → logprob: -7.3970746994018555
    8. 'po' → logprob: -8.272074699401855
    9. ' ' → logprob: -9.522074699401855
    10. '        ' → logprob: -10.022074699401855

Token 716: ' bi' (ID: 4424)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.012532255612313747
    2. ' sum' → logprob: -4.5125322341918945
    3. 'po' → logprob: -6.8875322341918945
    4. 'bi' → logprob: -8.887532234191895
    5. '(sum' → logprob: -8.887532234191895
    6. '           ' → logprob: -10.137532234191895
    7. '	sum' → logprob: -10.387532234191895
    8. '   ' → logprob: -10.387532234191895
    9. ' poids' → logprob: -10.512532234191895
    10. '  ' → logprob: -11.762532234191895

Token 717: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.2059868574142456
    2. ' >' → logprob: -1.2059868574142456
    3. '==' → logprob: -1.5809868574142456
    4. ' ==' → logprob: -1.7059868574142456
    5. ' *' → logprob: -5.080986976623535
    6. ' +' → logprob: -5.830986976623535
    7. '*' → logprob: -6.205986976623535
    8. '+' → logprob: -6.580986976623535
    9. ' is' → logprob: -7.830986976623535
    10. '<' → logprob: -7.955986976623535

Token 718: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '1' → logprob: -17.125003814697266
    5. '	' → logprob: -17.437503814697266
    6. '  ' → logprob: -18.562503814697266
    7. ' ' → logprob: -18.687503814697266
    8. '=' → logprob: -18.687503814697266
    9. '```' → logprob: -18.687503814697266
    10. '    ' → logprob: -18.875003814697266

Token 719: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '1' → logprob: -16.50000762939453
    4. '   ' → logprob: -17.56250762939453
    5. '```' → logprob: -18.50000762939453
    6. 'float' → logprob: -18.81250762939453
    7. '۰' → logprob: -18.93750762939453
    8. 'zero' → logprob: -19.00000762939453
    9. '=' → logprob: -19.12500762939453
    10. '	' → logprob: -19.25000762939453

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03311477228999138
    2. ':
' → logprob: -3.5331146717071533
    3. '               ' → logprob: -6.033114910125732
    4. '           ' → logprob: -7.408114910125732
    5. ' :' → logprob: -8.533114433288574
    6. ':return' → logprob: -9.283114433288574
    7. ' or' → logprob: -11.158114433288574
    8. ' :
' → logprob: -11.408114433288574
    9. '              ' → logprob: -12.283114433288574
    10. '       ' → logprob: -12.533114433288574

Token 721: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025549851125106215
    2. '           ' → logprob: -9.625255584716797
    3. '              ' → logprob: -10.125255584716797
    4. ' return' → logprob: -10.375255584716797
    5. '                
' → logprob: -10.375255584716797
    6. '	           ' → logprob: -10.625255584716797
    7. '                ' → logprob: -11.375255584716797
    8. 'return' → logprob: -12.000255584716797
    9. '			' → logprob: -12.375255584716797
    10. '                   ' → logprob: -12.375255584716797

Token 722: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' (adapté à ' bi') → logprob: -0.040073443204164505
    2. '               ' → logprob: -3.5400733947753906
    3. '           ' → logprob: -5.040073394775391
    4. 'break' → logprob: -5.790073394775391
    5. 'return' → logprob: -7.915073394775391
    6. '   ' → logprob: -8.41507339477539
    7. '1' → logprob: -10.04007339477539
    8. '                   ' → logprob: -10.29007339477539
    9. ' bi' → logprob: -10.66507339477539
    10. '       ' → logprob: -11.16507339477539

Token 723: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1798228919506073
    2. '=' → logprob: -1.8048229217529297
    3. '           ' → logprob: -10.80482292175293
    4. '               ' → logprob: -10.92982292175293
    5. ' +=' → logprob: -11.17982292175293
    6. ' ' → logprob: -11.42982292175293
    7. '   ' → logprob: -11.80482292175293
    8. '+=' → logprob: -13.42982292175293
    9. '            ' → logprob: -13.55482292175293
    10. ',' → logprob: -13.67982292175293

Token 724: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '0' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.125001907348633
    5. '```' → logprob: -21.250001907348633
    6. '<|end|>' → logprob: -21.250001907348633
    7. ' ' → logprob: -21.625001907348633
    8. '  ' → logprob: -21.875001907348633
    9. '۱' → logprob: -22.062501907348633
    10. '１' → logprob: -22.375001907348633

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -21.125
    4. '0' → logprob: -21.375
    5. '```' → logprob: -21.75
    6. '১' → logprob: -21.875
    7. '۱' → logprob: -22.25
    8. '<|end|>' → logprob: -22.375
    9. '१' → logprob: -22.8125
    10. 'a' → logprob: -23.125

Token 726: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5771383047103882
    2. '
' → logprob: -0.8271383047103882
    3. '
' → logprob: -6.952138423919678
    4. '            
' → logprob: -9.07713794708252
    5. '  
' → logprob: -10.57713794708252
    6. '<|end|>' → logprob: -11.20213794708252
    7. ',' → logprob: -11.45213794708252
    8. ' 
' → logprob: -11.57713794708252
    9. '\n' → logprob: -11.82713794708252
    10. '#' → logprob: -11.95213794708252

Token 727: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16334466636180878
    2. '           ' → logprob: -1.9133446216583252
    3. '
' → logprob: -6.788344860076904
    4. '            
' → logprob: -6.913344860076904
    5. '  
' → logprob: -8.163344383239746
    6. '    
' → logprob: -8.913344383239746
    7. '           
' → logprob: -9.038344383239746
    8. '#' → logprob: -9.288344383239746
    9. '   
' → logprob: -9.413344383239746
    10. ' 
' → logprob: -9.663344383239746

Token 728: ' au' (ID: 2791)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6271443367004395
    2. '           ' → logprob: -1.3771443367004395
    3. 'continue' → logprob: -2.5021443367004395
    4. ' continue' → logprob: -3.5021443367004395
    5. '               ' → logprob: -3.8771443367004395
    6. '0' → logprob: -4.1271443367004395
    7. 'pass' → logprob: -4.2521443367004395
    8. ' #' → logprob: -4.5021443367004395
    9. '
' → logprob: -4.7521443367004395
    10. '       ' → logprob: -4.8771443367004395

Token 729: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.08071248978376389
    2. 'cas' → logprob: -2.8307125568389893
    3. 'minimum' → logprob: -4.33071231842041
    4. 'mo' → logprob: -6.33071231842041
    5. ' moins' → logprob: -7.08071231842041
    6. ' cas' → logprob: -7.45571231842041
    7. 'min' → logprob: -7.45571231842041
    8. '```' → logprob: -7.45571231842041
    9. 'case' → logprob: -8.33071231842041
    10. '   ' → logprob: -8.33071231842041

Token 730: ' un' (ID: 537)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07989279180765152
    2. 'un' → logprob: -2.704892873764038
    3. ' un' → logprob: -4.954892635345459
    4. ' ' → logprob: -6.329892635345459
    5. '```' → logprob: -7.704892635345459
    6. 'au' → logprob: -8.829893112182617
    7. 'une' → logprob: -8.954893112182617
    8. '   ' → logprob: -9.079893112182617
    9. '<|end|>' → logprob: -9.579893112182617
    10. ' une' → logprob: -10.329893112182617

Token 731: ' bloc' (ID: 51218)
  Prédit: 'bloc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bloc' → logprob: -0.0774737074971199
    2. 'bl' → logprob: -3.7024736404418945
    3. 'block' → logprob: -4.0774736404418945
    4. ' bloc' → logprob: -4.3274736404418945
    5. '_bloc' → logprob: -4.5774736404418945
    6. 'blo' → logprob: -5.7024736404418945
    7. '<|end|>' → logprob: -6.3274736404418945
    8. 'b' → logprob: -6.5774736404418945
    9. 'blok' → logprob: -6.5774736404418945
    10. 'token' → logprob: -7.7024736404418945

Token 732: ' par' (ID: 686)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003193993354216218
    2. '
' → logprob: -6.0031938552856445
    3. '            
' → logprob: -8.003193855285645
    4. '<|end|>' → logprob: -8.378193855285645
    5. '
' → logprob: -10.378193855285645
    6. '<|end|>' → logprob: -10.503193855285645
    7. '  
' → logprob: -11.128193855285645
    8. '          ' → logprob: -11.128193855285645
    9. ',' → logprob: -11.878193855285645
    10. '        
' → logprob: -12.003193855285645

Token 733: ' étage' (ID: 125215)
  Prédit: 'ét'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ét' → logprob: -0.08398589491844177
    2. ' étage' → logprob: -2.5839858055114746
    3. 'niveau' → logprob: -6.083985805511475
    4. '```' → logprob: -6.083985805511475
    5. 'é' → logprob: -8.708986282348633
    6. 'et' → logprob: -9.083986282348633
    7. 'i' → logprob: -9.333986282348633
    8. 'éta' → logprob: -10.208986282348633
    9. 'pal' → logprob: -10.833986282348633
    10. 'ép' → logprob: -10.958986282348633

Token 734: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010825909674167633
    2. '
' → logprob: -4.760826110839844
    3. '            
' → logprob: -6.510826110839844
    4. '
' → logprob: -8.260826110839844
    5. '<|end|>' → logprob: -8.760826110839844
    6. '  
' → logprob: -9.635826110839844
    7. '    
' → logprob: -10.135826110839844
    8. '        
' → logprob: -10.510826110839844
    9. '\n' → logprob: -10.635826110839844
    10. ' 
' → logprob: -10.635826110839844

Token 735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035247637424618006
    2. '
' → logprob: -6.0035247802734375
    3. '            
' → logprob: -7.6285247802734375
    4. '<|end|>' → logprob: -8.378524780273438
    5. '
' → logprob: -9.378524780273438
    6. 'po' → logprob: -9.878524780273438
    7. '```' → logprob: -10.378524780273438
    8. '  
' → logprob: -10.503524780273438
    9. '        
' → logprob: -10.878524780273438
    10. '          ' → logprob: -11.128524780273438

Token 736: ' sum' (ID: 4215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5786868929862976
    2. 'po' → logprob: -0.8286868929862976
    3. '       ' → logprob: -6.578686714172363
    4. 'if' → logprob: -7.203686714172363
    5. ' poids' → logprob: -8.203686714172363
    6. '   ' → logprob: -9.578686714172363
    7. ' po' → logprob: -9.828686714172363
    8. '          ' → logprob: -10.078686714172363
    9. '```' → logprob: -10.328686714172363
    10. ' if' → logprob: -10.328686714172363

Token 737: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.750000953674316
    3. '_bloc' → logprob: -16.375
    4. 'blocks' → logprob: -16.875
    5. '_tokens' → logprob: -17.0
    6. '```' → logprob: -17.0
    7. '_b' → logprob: -18.0
    8. '_block' → logprob: -18.0
    9. 'Blocks' → logprob: -18.0
    10. '_chunks' → logprob: -18.5

Token 738: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.048639144748449326
    2. ' +=' → logprob: -3.0486390590667725
    3. '+' → logprob: -9.923639297485352
    4. '=' → logprob: -13.423639297485352
    5. ']+=' → logprob: -15.173639297485352
    6. '+=(' → logprob: -15.173639297485352
    7. '   ' → logprob: -15.673639297485352
    8. '<=' → logprob: -15.798639297485352
    9. ' +' → logprob: -15.923639297485352
    10. '+='' → logprob: -16.04863929748535

Token 739: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -7.493430894101039e-05
    2. ' bi' → logprob: -9.500075340270996
    3. 'b' → logprob: -16.87507438659668
    4. 'bio' → logprob: -21.87507438659668
    5. '   ' → logprob: -22.25007438659668
    6. 'biotic' → logprob: -22.37507438659668
    7. 'bie' → logprob: -22.75007438659668
    8. 'Bi' → logprob: -22.87507438659668
    9. '```' → logprob: -22.87507438659668
    10. ' ' → logprob: -23.12507438659668

Token 740: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05255340784788132
    2. '
' → logprob: -3.177553415298462
    3. 'po' → logprob: -5.052553176879883
    4. '
' → logprob: -7.177553176879883
    5. '            
' → logprob: -7.552553176879883
    6. '  
' → logprob: -7.552553176879883
    7. '       ' → logprob: -7.677553176879883
    8. '    
' → logprob: -8.177553176879883
    9. '   ' → logprob: -8.802553176879883
    10. '        
' → logprob: -9.427553176879883

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007111971266567707
    2. 'po' → logprob: -5.2571120262146
    3. '       ' → logprob: -7.0071120262146
    4. '   ' → logprob: -8.382111549377441
    5. '
' → logprob: -8.382111549377441
    6. ' poids' → logprob: -8.507111549377441
    7. '```' → logprob: -9.007111549377441
    8. '            
' → logprob: -9.632111549377441
    9. '          ' → logprob: -10.507111549377441
    10. '    
' → logprob: -11.007111549377441

Token 742: ' poids' (ID: 56058)
  Prédit: 'po'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'po' → logprob: -0.000455340719781816
    2. '           ' → logprob: -7.750455379486084
    3. 'if' → logprob: -10.875454902648926
    4. '       ' → logprob: -12.500454902648926
    5. ' poids' → logprob: -13.500454902648926
    6. 'pois' → logprob: -15.250454902648926
    7. '   ' → logprob: -16.000455856323242
    8. '               ' → logprob: -16.125455856323242
    9. 'peso' → logprob: -16.625455856323242
    10. 'weight' → logprob: -16.750455856323242

Token 743: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -1.981667537620524e-06
    2. 'above' → logprob: -13.750001907348633
    3. 'Above' → logprob: -15.375001907348633
    4. '           ' → logprob: -16.125001907348633
    5. ' =' → logprob: -16.250001907348633
    6. 'ab' → logprob: -16.250001907348633
    7. '_' → logprob: -16.375001907348633
    8. '   ' → logprob: -17.000001907348633
    9. '_b' → logprob: -17.250001907348633
    10. '       ' → logprob: -17.250001907348633

Token 744: 'ove' (ID: 1048)
  Prédit: 'ove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.0001499060745118186
    2. 'above' → logprob: -8.875149726867676
    3. '_ab' → logprob: -12.375149726867676
    4. 'ave' → logprob: -13.500149726867676
    5. 'oved' → logprob: -14.125149726867676
    6. 'Above' → logprob: -14.375149726867676
    7. 'ive' → logprob: -14.375149726867676
    8. 'oven' → logprob: -15.000149726867676
    9. 'ov' → logprob: -15.000149726867676
    10. 'owe' → logprob: -15.000149726867676

Token 745: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.575950562953949
    2. ' +=' → logprob: -0.825950562953949
    3. '=' → logprob: -11.575950622558594
    4. '+' → logprob: -14.575950622558594
    5. '   ' → logprob: -14.575950622558594
    6. ' =' → logprob: -15.325950622558594
    7. '    ' → logprob: -15.450950622558594
    8. ']+=' → logprob: -15.950950622558594
    9. '           ' → logprob: -16.575950622558594
    10. '+=(' → logprob: -17.200950622558594

Token 746: ' bi' (ID: 4424)
  Prédit: 'bi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -6.2729995988775045e-06
    2. ' bi' → logprob: -12.000006675720215
    3. 'b' → logprob: -22.0000057220459
    4. 'biotic' → logprob: -24.0000057220459
    5. '```' → logprob: -24.0000057220459
    6. '   ' → logprob: -24.1250057220459
    7. 'bie' → logprob: -24.3750057220459
    8. '.bi' → logprob: -24.8750057220459
    9. ' би' → logprob: -24.8750057220459
    10. 'bio' → logprob: -25.0000057220459

Token 747: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09305097162723541
    2. '           ' → logprob: -3.343050956726074
    3. '
' → logprob: -3.593050956726074
    4. '<|end|>' → logprob: -3.718050956726074
    5. '   ' → logprob: -7.468050956726074
    6. '        
' → logprob: -7.593050956726074
    7. '<|end|>' → logprob: -9.218050956726074
    8. '    
' → logprob: -9.343050956726074
    9. 'return' → logprob: -9.343050956726074
    10. '```' → logprob: -9.468050956726074

Token 748: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017092300578951836
    2. '           ' → logprob: -4.517092227935791
    3. '
' → logprob: -5.267092227935791
    4. '   ' → logprob: -7.267092227935791
    5. '<|end|>' → logprob: -9.89209270477295
    6. '
' → logprob: -10.14209270477295
    7. '```' → logprob: -10.51709270477295
    8. '        
' → logprob: -10.51709270477295
    9. '    
' → logprob: -11.01709270477295
    10. 'return' → logprob: -13.26709270477295

Token 749: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14617708325386047
    2. 'if' (adapté à ' if') → logprob: -2.396177053451538
    3. '       ' → logprob: -3.146177053451538
    4. ' if' → logprob: -6.271177291870117
    5. '   ' → logprob: -10.771177291870117
    6. '
' → logprob: -13.771177291870117
    7. '```' → logprob: -14.146177291870117
    8. '               ' → logprob: -15.396177291870117
    9. '		' → logprob: -16.271177291870117
    10. '	if' → logprob: -16.521177291870117

Token 750: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -3.8889261304575484e-06
    2. ' sum' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '(sum' → logprob: -17.000003814697266
    5. '	sum' → logprob: -17.875003814697266
    6. '  ' → logprob: -20.000003814697266
    7. 'Sum' → logprob: -20.375003814697266
    8. 's' → logprob: -20.625003814697266
    9. '
' → logprob: -20.750003814697266
    10. '>' → logprob: -21.000003814697266

Token 751: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -1.9361264946837764e-07
    2. '>' → logprob: -17.75
    3. 'blocks' → logprob: -18.25
    4. '_' → logprob: -18.25
    5. '_parts' → logprob: -18.375
    6. 'Blocks' → logprob: -18.625
    7. '_chunks' → logprob: -18.75
    8. '_steps' → logprob: -18.875
    9. '_bloc' → logprob: -19.0
    10. '_tokens' → logprob: -19.0

Token 752: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3868769407272339
    2. '>' → logprob: -1.1368769407272339
    3. '>N' → logprob: -12.261877059936523
    4. ' ' → logprob: -15.011877059936523
    5. ' ' → logprob: -15.261877059936523
    6. ' >
' → logprob: -15.636877059936523
    7. ' >
' → logprob: -15.886877059936523
    8. '   ' → logprob: -16.011877059936523
    9. '>K' → logprob: -16.636877059936523
    10. '>
' → logprob: -17.386877059936523

Token 753: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.7697225252486533e-06
    2. ' N' → logprob: -12.500003814697266
    3. '	N' → logprob: -19.875003814697266
    4. '   ' → logprob: -20.000003814697266
    5. '```' → logprob: -22.500003814697266
    6. ' ' → logprob: -22.750003814697266
    7. '>N' → logprob: -23.500003814697266
    8. '  ' → logprob: -24.250003814697266
    9. 'n' → logprob: -25.000003814697266
    10. '
' → logprob: -25.000003814697266

Token 754: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31223264336586
    2. '           ' → logprob: -2.062232732772827
    3. '               ' → logprob: -2.437232732772827
    4. ':return' → logprob: -3.187232732772827
    5. ':
' → logprob: -4.437232494354248
    6. '       ' → logprob: -8.437232971191406
    7. 'return' → logprob: -9.312232971191406
    8. ' return' → logprob: -10.062232971191406
    9. '<|end|>' → logprob: -10.562232971191406
    10. '                   ' → logprob: -10.937232971191406

Token 755: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.644463479053229e-05
    2. 'return' → logprob: -10.375046730041504
    3. ' return' → logprob: -12.000046730041504
    4. '           ' → logprob: -12.125046730041504
    5. '
' → logprob: -13.500046730041504
    6. '                   ' → logprob: -14.125046730041504
    7. '                
' → logprob: -14.500046730041504
    8. '       ' → logprob: -15.125046730041504
    9. '              ' → logprob: -15.125046730041504
    10. '<|end|>' → logprob: -16.500045776367188

Token 756: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01425223983824253
    2. '               ' → logprob: -4.514252185821533
    3. ' return' → logprob: -5.764252185821533
    4. '           ' → logprob: -9.764252662658691
    5. '	return' → logprob: -13.139252662658691
    6. '       ' → logprob: -13.889252662658691
    7. '   ' → logprob: -14.639252662658691
    8. ':return' → logprob: -15.264252662658691
    9. '{return' → logprob: -15.389252662658691
    10. '                   ' → logprob: -16.264251708984375

Token 757: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.704273118884885e-07
    2. ' False' → logprob: -14.250000953674316
    3. '(False' → logprob: -20.0
    4. '   ' → logprob: -20.75
    5. 'false' → logprob: -23.0
    6. '=False' → logprob: -23.375
    7. '_false' → logprob: -23.75
    8. '.False' → logprob: -24.875
    9. '```' → logprob: -25.375
    10. 'FALSE' → logprob: -25.75

Token 758: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0132969617843628
    2. '
' → logprob: -1.3882969617843628
    3. '<|end|>' → logprob: -1.5132969617843628
    4. '       ' → logprob: -2.7632970809936523
    5. '    
' → logprob: -3.5132970809936523
    6. '  
' → logprob: -3.8882970809936523
    7. '```' → logprob: -3.8882970809936523
    8. '        
' → logprob: -4.263297080993652
    9. '   ' → logprob: -5.013297080993652
    10. '<|end|>' → logprob: -6.013297080993652

Token 759: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048020683228969574
    2. '   ' → logprob: -3.423020601272583
    3. '	return' → logprob: -4.673020839691162
    4. '<|end|>' → logprob: -6.048020839691162
    5. '```' → logprob: -7.798020839691162
    6. '	' → logprob: -7.798020839691162
    7. '<|end|>' → logprob: -8.173020362854004
    8. '	   ' → logprob: -8.673020362854004
    9. '\' → logprob: -8.923020362854004
    10. '        
' → logprob: -9.048020362854004

Token 760: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37494924664497375
    2. '   ' → logprob: -1.2499492168426514
    3. '
' → logprob: -3.8749492168426514
    4. 'return' (adapté à ' return') → logprob: -6.2499494552612305
    5. '	return' → logprob: -6.4999494552612305
    6. '        
' → logprob: -6.9999494552612305
    7. '    
' → logprob: -7.7499494552612305
    8. ' return' → logprob: -7.8749494552612305
    9. '```' → logprob: -9.12494945526123
    10. '
' → logprob: -10.74994945526123

Token 761: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.019229989498853683
    2. ' True' → logprob: -4.019229888916016
    3. 'sum' → logprob: -6.894229888916016
    4. ' sum' → logprob: -9.644229888916016
    5. 'true' → logprob: -14.519229888916016
    6. '   ' → logprob: -15.394229888916016
    7. '(True' → logprob: -15.894229888916016
    8. 'h' → logprob: -16.769229888916016
    9. ' ' → logprob: -16.769229888916016
    10. ' ' → logprob: -17.769229888916016

Token 762: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 763: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002121830591931939
    2. '    
' → logprob: -6.252121925354004
    3. '```' → logprob: -9.127121925354004
    4. '
' → logprob: -10.627121925354004
    5. '<|end|>' → logprob: -10.627121925354004
    6. 'def' → logprob: -11.127121925354004
    7. '#' → logprob: -12.002121925354004
    8. ')' → logprob: -13.127121925354004
    9. '    ' → logprob: -13.127121925354004
    10. '   
' → logprob: -13.502121925354004

Token 764: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.4339997470378876
    2. 'low' → logprob: -1.43399977684021
    3. '   ' → logprob: -2.18399977684021
    4. '    
' → logprob: -7.683999538421631
    5. 'lo' → logprob: -8.184000015258789
    6. '```' → logprob: -8.559000015258789
    7. 'def' → logprob: -9.434000015258789
    8. 'g' → logprob: -9.934000015258789
    9. ' left' → logprob: -9.934000015258789
    10. ' low' → logprob: -11.934000015258789

Token 765: ' Recherche' (ID: 114815)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.20152784883975983
    2. 'low' → logprob: -1.7015278339385986
    3. 'lo' → logprob: -9.32652759552002
    4. 'def' → logprob: -10.95152759552002
    5. ' left' → logprob: -12.70152759552002
    6. 'g' → logprob: -13.32652759552002
    7. '   ' → logprob: -13.82652759552002
    8. '```' → logprob: -13.95152759552002
    9. 'l' → logprob: -14.45152759552002
    10. ' low' → logprob: -15.20152759552002

Token 766: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2583973705768585
    2. 'b' → logprob: -1.6333973407745361
    3. 'def' → logprob: -4.258397579193115
    4. '```' → logprob: -5.258397579193115
    5. '_b' → logprob: -5.883397579193115
    6. ' b' → logprob: -6.008397579193115
    7. ' =' → logprob: -6.383397579193115
    8. ' ' → logprob: -7.008397579193115
    9. 'de' → logprob: -7.008397579193115
    10. '_binary' → logprob: -7.508397579193115

Token 767: 'inaire' (ID: 41465)
  Prédit: 'inaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inaire' → logprob: -0.008341046050190926
    2. 'in' → logprob: -5.258340835571289
    3. 'inary' → logprob: -5.883340835571289
    4. '   ' → logprob: -9.133340835571289
    5. 'ina' → logprob: -9.508340835571289
    6. 'inar' → logprob: -10.008340835571289
    7. '_' → logprob: -11.008340835571289
    8. 'iné' → logprob: -11.633340835571289
    9. '    ' → logprob: -11.758340835571289
    10. 'r' → logprob: -11.758340835571289

Token 768: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002262782771140337
    2. '    
' → logprob: -6.502262592315674
    3. '```' → logprob: -8.252263069152832
    4. ':' → logprob: -8.877263069152832
    5. '
' → logprob: -9.002263069152832
    6. '    ' → logprob: -10.252263069152832
    7. '  ' → logprob: -10.252263069152832
    8. '   
' → logprob: -10.502263069152832
    9. '  
' → logprob: -10.502263069152832
    10. '<|end|>' → logprob: -10.752263069152832

Token 769: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.857230007648468
    2. 'h' → logprob: -1.6072299480438232
    3. ' l' → logprob: -1.7322299480438232
    4. 'l' → logprob: -1.9822299480438232
    5. 'low' → logprob: -3.9822299480438232
    6. ' trouver' → logprob: -4.232230186462402
    7. ' low' → logprob: -4.732230186462402
    8. 'left' → logprob: -4.857230186462402
    9. 'lo' → logprob: -5.607230186462402
    10. ' def' → logprob: -6.857230186462402

Token 770: ' hauteur' (ID: 72987)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2560156285762787
    2. 'left' → logprob: -2.1310155391693115
    3. 'right' → logprob: -2.5060155391693115
    4. 'max' → logprob: -4.256015777587891
    5. ' N' → logprob: -5.256015777587891
    6. 'low' → logprob: -5.631015777587891
    7. ' left' → logprob: -7.256015777587891
    8. ' right' → logprob: -7.256015777587891
    9. 'def' → logprob: -8.38101577758789
    10. '```' → logprob: -8.50601577758789

Token 771: ' maximale' (ID: 76380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05974665656685829
    2. '```' → logprob: -3.059746742248535
    3. ' between' → logprob: -6.184746742248535
    4. ' =' → logprob: -6.309746742248535
    5. '(
' → logprob: -6.684746742248535
    6. ':' → logprob: -6.684746742248535
    7. '<|end|>' → logprob: -7.434746742248535
    8. ',' → logprob: -7.809746742248535
    9. '``' → logprob: -7.934746742248535
    10. '(' → logprob: -8.059746742248535

Token 772: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002370416419580579
    2. '```' → logprob: -6.502370357513428
    3. '    
' → logprob: -7.377370357513428
    4. 'left' → logprob: -9.002370834350586
    5. ' left' → logprob: -10.377370834350586
    6. ' low' → logprob: -10.877370834350586
    7. 'low' → logprob: -11.002370834350586
    8. '``' → logprob: -11.377370834350586
    9. '(low' → logprob: -11.377370834350586
    10. '
' → logprob: -11.377370834350586

Token 773: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06451929360628128
    2. ' low' → logprob: -4.06451940536499
    3. ' left' → logprob: -4.43951940536499
    4. '
' → logprob: -4.81451940536499
    5. '```' → logprob: -4.81451940536499
    6. 'left' → logprob: -5.56451940536499
    7. 'low' → logprob: -5.93951940536499
    8. '    
' → logprob: -6.06451940536499
    9. ':' → logprob: -6.18951940536499
    10. ':
' → logprob: -6.31451940536499

Token 774: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.48204007744789124
    2. 'low' → logprob: -0.9820400476455688
    3. '   ' → logprob: -5.482039928436279
    4. ' left' → logprob: -6.232039928436279
    5. 'lo' → logprob: -7.107039928436279
    6. ' low' → logprob: -7.232039928436279
    7. '```' → logprob: -8.357040405273438
    8. '    
' → logprob: -11.482040405273438
    9. 'l' → logprob: -11.857040405273438
    10. ' lo' → logprob: -12.607040405273438

Token 775: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5770419239997864
    2. '=' → logprob: -0.8270419239997864
    3. ',' → logprob: -6.827042102813721
    4. ' ,' → logprob: -11.202041625976562
    5. ' =
' → logprob: -13.577041625976562
    6. ' ' → logprob: -13.952041625976562
    7. '=
' → logprob: -14.327041625976562
    8. '   ' → logprob: -14.577041625976562
    9. '<|end|>' → logprob: -15.202041625976562
    10. ' +=' → logprob: -15.577041625976562

Token 776: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.0619683600962162
    2. 'right' → logprob: -2.8119683265686035
    3. '	right' → logprob: -15.436968803405762
    4. '=' → logprob: -15.561968803405762
    5. ',right' → logprob: -16.186967849731445
    6. '1' → logprob: -16.436967849731445
    7. '0' → logprob: -16.936967849731445
    8. ' =' → logprob: -17.561967849731445
    9. '   ' → logprob: -17.561967849731445
    10. '[right' → logprob: -18.436967849731445

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575939953327179
    2. '=' → logprob: -0.825939953327179
    3. '   ' → logprob: -15.075940132141113
    4. ',' → logprob: -15.825940132141113
    5. ' ' → logprob: -16.825939178466797
    6. '    ' → logprob: -17.575939178466797
    7. '=int' → logprob: -17.950939178466797
    8. '＝' → logprob: -18.450939178466797
    9. ' =
' → logprob: -19.075939178466797
    10. '=
' → logprob: -19.450939178466797

Token 778: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.250003814697266
    4. '0' → logprob: -19.250003814697266
    5. '```' → logprob: -20.875003814697266
    6. 'N' → logprob: -22.125003814697266
    7. '۱' → logprob: -22.375003814697266
    8. '=' → logprob: -22.375003814697266
    9. '１' → logprob: -23.375003814697266
    10. '
' → logprob: -23.500003814697266

Token 779: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -14.625003814697266
    4. 'N' → logprob: -17.375003814697266
    5. '   ' → logprob: -18.625003814697266
    6. '```' → logprob: -20.750003814697266
    7. '=' → logprob: -21.250003814697266
    8. '    ' → logprob: -22.375003814697266
    9. '  ' → logprob: -22.625003814697266
    10. '2' → logprob: -22.625003814697266

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026538874953985214
    2. ' ,' → logprob: -8.625265121459961
    3. ',N' → logprob: -10.125265121459961
    4. '=' → logprob: -10.750265121459961
    5. '   ' → logprob: -11.125265121459961
    6. ',
' → logprob: -12.000265121459961
    7. ' =' → logprob: -13.250265121459961
    8. ',n' → logprob: -14.000265121459961
    9. 'N' → logprob: -14.625265121459961
    10. ',right' → logprob: -16.12526512145996

Token 781: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00015860427811276168
    2. ' N' → logprob: -8.750158309936523
    3. '   ' → logprob: -16.000158309936523
    4. '	N' → logprob: -18.500158309936523
    5. '    ' → logprob: -22.500158309936523
    6. '>N' → logprob: -23.250158309936523
    7. 'Ｎ' → logprob: -23.250158309936523
    8. '=N' → logprob: -23.625158309936523
    9. '_N' → logprob: -23.750158309936523
    10. '```' → logprob: -24.125158309936523

Token 782: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2332473248243332
    2. '   ' → logprob: -2.1082472801208496
    3. '    
' → logprob: -3.4832472801208496
    4. '  
' → logprob: -3.4832472801208496
    5. ' 
' → logprob: -4.60824728012085
    6. '   
' → logprob: -5.23324728012085
    7. '<|end|>' → logprob: -5.48324728012085
    8. ',' → logprob: -6.48324728012085
    9. ':' → logprob: -6.60824728012085
    10. ':
' → logprob: -7.23324728012085

Token 783: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17093969881534576
    2. '   ' → logprob: -1.9209396839141846
    3. '    
' → logprob: -4.920939922332764
    4. '  
' → logprob: -6.170939922332764
    5. ':' → logprob: -8.420939445495605
    6. 'while' → logprob: -8.545939445495605
    7. '	
' → logprob: -8.920939445495605
    8. ':
' → logprob: -9.045939445495605
    9. '
' → logprob: -9.295939445495605
    10. '   
' → logprob: -9.295939445495605

Token 784: ' answer' (ID: 6052)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1489958018064499
    2. ' while' → logprob: -2.273995876312256
    3. 'result' → logprob: -3.898995876312256
    4. '   ' → logprob: -4.523995876312256
    5. '
' → logprob: -5.898995876312256
    6. ' result' → logprob: -7.773995876312256
    7. 'answer' (adapté à ' answer') → logprob: -8.023995399475098
    8. '    
' → logprob: -8.523995399475098
    9. ' 
' → logprob: -8.773995399475098
    10. '```' → logprob: -8.773995399475098

Token 785: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889319956302643
    2. '=' → logprob: -2.5788931846618652
    3. '   ' → logprob: -12.953893661499023
    4. '	' → logprob: -15.203893661499023
    5. ',' → logprob: -15.203893661499023
    6. '=None' → logprob: -15.328893661499023
    7. ' ' → logprob: -15.953893661499023
    8. '  ' → logprob: -16.953893661499023
    9. '    ' → logprob: -16.953893661499023
    10. '<|end|>' → logprob: -17.203893661499023

Token 786: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31357669830322266
    2. '0' → logprob: -1.3135766983032227
    3. ' ' → logprob: -8.063576698303223
    4. '   ' → logprob: -16.438575744628906
    5. '```' → logprob: -19.438575744628906
    6. '  ' → logprob: -20.188575744628906
    7. '=' → logprob: -20.563575744628906
    8. '
' → logprob: -21.063575744628906
    9. ' ' → logprob: -21.438575744628906
    10. '-' → logprob: -21.438575744628906

Token 787: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5770790576934814
    2. '0' → logprob: -0.8270790576934814
    3. 'N' → logprob: -6.827078819274902
    4. ' ' → logprob: -9.827078819274902
    5. '   ' → logprob: -14.702078819274902
    6. ' N' → logprob: -15.452078819274902
    7. 'left' → logprob: -15.952078819274902
    8. '```' → logprob: -16.95207977294922
    9. '-' → logprob: -17.20207977294922
    10. '  ' → logprob: -17.70207977294922

Token 788: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20831219851970673
    2. '   ' → logprob: -1.9583121538162231
    3. '    
' → logprob: -3.3333122730255127
    4. '  
' → logprob: -4.833312034606934
    5. '   
' → logprob: -6.958312034606934
    6. '```' → logprob: -6.958312034606934
    7. ' 
' → logprob: -7.333312034606934
    8. '<|end|>' → logprob: -8.208312034606934
    9. '\n' → logprob: -9.333312034606934
    10. ':
' → logprob: -9.458312034606934

Token 789: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20680874586105347
    2. '   ' → logprob: -1.8318088054656982
    3. '    
' → logprob: -3.8318088054656982
    4. '  
' → logprob: -6.581808567047119
    5. ' while' → logprob: -6.706808567047119
    6. '```' → logprob: -6.831808567047119
    7. 'while' → logprob: -7.831808567047119
    8. '   
' → logprob: -7.956808567047119
    9. ' 
' → logprob: -8.206809043884277
    10. '	
' → logprob: -9.456809043884277

Token 790: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07914787530899048
    2. ' while' → logprob: -2.8291478157043457
    3. '   ' → logprob: -4.079147815704346
    4. '
' → logprob: -9.579148292541504
    5. '	while' → logprob: -10.579148292541504
    6. '    
' → logprob: -11.704148292541504
    7. '```' → logprob: -11.954148292541504
    8. '  
' → logprob: -14.329148292541504
    9. ' 
' → logprob: -14.454148292541504
    10. 'While' → logprob: -14.704148292541504

Token 791: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.03804171830415726
    2. 'left' → logprob: -3.288041830062866
    3. ' right' → logprob: -15.788042068481445
    4. '   ' → logprob: -16.288042068481445
    5. '	left' → logprob: -17.413042068481445
    6. 'right' → logprob: -17.538042068481445
    7. ' lef' → logprob: -18.913042068481445
    8. '(left' → logprob: -20.038042068481445
    9. '_left' → logprob: -20.413042068481445
    10. ' ' → logprob: -20.663042068481445

Token 792: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.062023479491472244
    2. '<=' → logprob: -2.812023401260376
    3. ' <' → logprob: -10.062023162841797
    4. '<' → logprob: -11.687023162841797
    5. ')<=' → logprob: -13.187023162841797
    6. ' ≤' → logprob: -14.437023162841797
    7. '```' → logprob: -14.687023162841797
    8. ' ' → logprob: -14.812023162841797
    9. ' <<=' → logprob: -14.812023162841797
    10. ' +=' → logprob: -14.937023162841797

Token 793: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01416350994259119
    2. ' right' → logprob: -4.264163494110107
    3. '	right' → logprob: -18.764163970947266
    4. ' ' → logprob: -20.014163970947266
    5. '[right' → logprob: -21.264163970947266
    6. 'left' → logprob: -23.014163970947266
    7. ',right' → logprob: -24.014163970947266
    8. '(right' → logprob: -24.264163970947266
    9. '  ' → logprob: -24.764163970947266
    10. '   ' → logprob: -24.764163970947266

Token 794: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004756087902933359
    2. ':
' → logprob: -5.379755973815918
    3. ' :' → logprob: -9.754755973815918
    4. '   ' → logprob: -10.004755973815918
    5. '       ' → logprob: -11.629755973815918
    6. '=' → logprob: -12.129755973815918
    7. '<|end|>' → logprob: -12.629755973815918
    8. ' :
' → logprob: -12.754755973815918
    9. ',' → logprob: -13.254755973815918
    10. '{' → logprob: -13.379755973815918

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015389412641525269
    2. '   ' → logprob: -5.390389442443848
    3. '<|end|>' → logprob: -5.515389442443848
    4. '    ' → logprob: -5.765389442443848
    5. '```' → logprob: -7.015389442443848
    6. '        
' → logprob: -8.015389442443848
    7. ' 
' → logprob: -8.140389442443848
    8. ',' → logprob: -8.140389442443848
    9. '<|end|>' → logprob: -8.640389442443848
    10. ' ' → logprob: -8.765389442443848

Token 796: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.1002953052520752
    2. 'mid' (adapté à ' mid') → logprob: -2.350295305252075
    3. '       ' → logprob: -10.350295066833496
    4. '   ' → logprob: -10.850295066833496
    5. ' middle' → logprob: -11.100295066833496
    6. 'm' → logprob: -11.475295066833496
    7. ' m' → logprob: -12.350295066833496
    8. ' midpoint' → logprob: -12.850295066833496
    9. '_mid' → logprob: -13.350295066833496
    10. 'middle' → logprob: -13.725295066833496

Token 797: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0076262690126895905
    2. '<|end|>' → logprob: -5.382626056671143
    3. '=' → logprob: -6.007626056671143
    4. '<|end|>' → logprob: -8.3826265335083
    5. '=int' → logprob: -8.8826265335083
    6. ' ' → logprob: -10.2576265335083
    7. ')' → logprob: -10.7576265335083
    8. '=True' → logprob: -10.8826265335083
    9. '_token' → logprob: -11.3826265335083
    10. ' =
' → logprob: -11.5076265335083

Token 798: ' (' (ID: 350)
  Prédit: '(left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.3869078457355499
    2. ' (' → logprob: -1.1369078159332275
    3. 'left' → logprob: -10.761907577514648
    4. ' left' → logprob: -11.386907577514648
    5. '   ' → logprob: -13.011907577514648
    6. '[left' → logprob: -13.636907577514648
    7. ' ' → logprob: -14.136907577514648
    8. '(right' → logprob: -16.26190757751465
    9. ',left' → logprob: -17.01190757751465
    10. ':left' → logprob: -17.63690757751465

Token 799: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.9361264946837764e-07
    2. ' left' → logprob: -15.75
    3. 'lef' → logprob: -20.625
    4. 'right' → logprob: -21.125
    5. '(left' → logprob: -21.875
    6. '[left' → logprob: -22.375
    7. '	left' → logprob: -23.0
    8. '_left' → logprob: -23.875
    9. '.left' → logprob: -24.75
    10. 'l' → logprob: -24.75

Token 800: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25192928314208984
    2. '+' → logprob: -1.5019292831420898
    3. '＋' → logprob: -16.626930236816406
    4. ' ' → logprob: -17.376930236816406
    5. ' ' → logprob: -17.751930236816406
    6. ' +
' → logprob: -18.376930236816406
    7. '   ' → logprob: -19.001930236816406
    8. ' plus' → logprob: -19.376930236816406
    9. '```' → logprob: -19.376930236816406
    10. '+
' → logprob: -19.876930236816406

Token 801: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -9.615255839889869e-05
    2. ' right' → logprob: -9.250096321105957
    3. '	right' → logprob: -18.87509536743164
    4. '(right' → logprob: -18.87509536743164
    5. '[right' → logprob: -19.12509536743164
    6. '   ' → logprob: -19.12509536743164
    7. ' ' → logprob: -20.37509536743164
    8. '       ' → logprob: -22.37509536743164
    9. '.right' → logprob: -22.62509536743164
    10. ',right' → logprob: -23.25009536743164

Token 802: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')//' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.12501335144043
    4. ')>>' → logprob: -17.75001335144043
    5. '）' → logprob: -20.50001335144043
    6. ')
' → logprob: -21.00001335144043
    7. '")' → logprob: -23.00001335144043
    8. ' //' → logprob: -23.37501335144043
    9. '//' → logprob: -23.87501335144043
    10. ']' → logprob: -24.00001335144043

Token 803: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09365034848451614
    2. ' //' → logprob: -3.3436503410339355
    3. '>>' → logprob: -3.5936503410339355
    4. '//' → logprob: -3.7186503410339355
    5. ' >>' → logprob: -6.7186503410339355
    6. '```' → logprob: -7.8436503410339355
    7. ')//' → logprob: -8.218650817871094
    8. ')>>' → logprob: -8.718650817871094
    9. '   ' → logprob: -8.968650817871094
    10. ']' → logprob: -10.093650817871094

Token 804: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.5
    4. '```' → logprob: -20.5
    5. '۲' → logprob: -21.375
    6. '２' → logprob: -22.5
    7. '
' → logprob: -22.875
    8. '२' → logprob: -23.75
    9. '  ' → logprob: -23.75
    10. '২' → logprob: -24.0

Token 805: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۲' → logprob: -21.625
    4. '```' → logprob: -22.25
    5. '２' → logprob: -23.0
    6. '٢' → logprob: -24.0
    7. '   ' → logprob: -24.0
    8. '२' → logprob: -24.125
    9. '22' → logprob: -24.625
    10. '২' → logprob: -24.875

Token 806: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001820958685129881
    2. ' if' → logprob: -6.626821041107178
    3. '<|end|>' → logprob: -8.62682056427002
    4. 'if' → logprob: -8.75182056427002
    5. '        
' → logprob: -9.62682056427002
    6. '
' → logprob: -9.87682056427002
    7. '<|end|>' → logprob: -11.37682056427002
    8. ')' → logprob: -11.75182056427002
    9. '   ' → logprob: -11.75182056427002
    10. '```' → logprob: -13.12682056427002

Token 808: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2693481147289276
    2. ' if' → logprob: -2.01934814453125
    3. '       ' → logprob: -2.26934814453125
    4. '	if' → logprob: -14.26934814453125
    5. 'If' → logprob: -14.89434814453125
    6. '   ' → logprob: -16.01934814453125
    7. '        
' → logprob: -17.51934814453125
    8. '           ' → logprob: -17.51934814453125
    9. '	' → logprob: -17.89434814453125
    10. '```' → logprob: -18.01934814453125

Token 809: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.5759397745132446
    2. ' can' → logprob: -0.8259397745132446
    3. '	can' → logprob: -15.200940132141113
    4. '(can' → logprob: -16.075939178466797
    5. '_can' → logprob: -17.700939178466797
    6. '.can' → logprob: -20.450939178466797
    7. '   ' → logprob: -20.825939178466797
    8. ' ' → logprob: -21.575939178466797
    9. 'Can' → logprob: -21.700939178466797
    10. ' ' → logprob: -22.075939178466797

Token 810: '_build' (ID: 49774)
  Prédit: '_build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_build' → logprob: -0.00023083435371518135
    2. 'build' → logprob: -8.37523078918457
    3. '_b' → logprob: -16.50023078918457
    4. '_' → logprob: -16.62523078918457
    5. '\' → logprob: -17.37523078918457
    6. '```' → logprob: -17.37523078918457
    7. ' build' → logprob: -17.62523078918457
    8. ' _' → logprob: -17.87523078918457
    9. '_BUILD' → logprob: -17.87523078918457
    10. '_can' → logprob: -18.12523078918457

Token 811: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -6.704273118884885e-07
    2. '[mid' → logprob: -15.000000953674316
    3. 'mid' → logprob: -15.250000953674316
    4. '(' → logprob: -17.125
    5. ' (' → logprob: -17.25
    6. ' mid' → logprob: -18.75
    7. '(m' → logprob: -19.5
    8. '(max' → logprob: -19.875
    9. '(
' → logprob: -20.125
    10. ')' → logprob: -21.5

Token 812: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22998446226119995
    2. '):
' → logprob: -1.6049845218658447
    3. ')' → logprob: -5.479984283447266
    4. ' ):' → logprob: -8.854984283447266
    5. ')==' → logprob: -9.604984283447266
    6. ':' → logprob: -9.604984283447266
    7. ' ):
' → logprob: -9.979984283447266
    8. '==' → logprob: -10.479984283447266
    9. '):
' → logprob: -10.854984283447266
    10. '       ' → logprob: -12.104984283447266

Token 813: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9082223176956177
    2. '       ' → logprob: -0.9082223176956177
    3. '           ' → logprob: -1.9082223176956177
    4. 'answer' → logprob: -4.033222198486328
    5. '        
' → logprob: -4.533222198486328
    6. ' answer' → logprob: -5.033222198486328
    7. ' 
' → logprob: -5.283222198486328
    8. '```' → logprob: -6.533222198486328
    9. '            
' → logprob: -7.283222198486328
    10. '    
' → logprob: -7.533222198486328

Token 814: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.0015085549093782902
    2. ' answer' → logprob: -6.501508712768555
    3. '       ' → logprob: -12.751508712768555
    4. '           ' → logprob: -13.376508712768555
    5. '	answer' → logprob: -13.751508712768555
    6. '   ' → logprob: -14.876508712768555
    7. '
' → logprob: -15.001508712768555
    8. 'left' → logprob: -18.251508712768555
    9. '(answer' → logprob: -18.376508712768555
    10. '.answer' → logprob: -19.626508712768555

Token 815: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888978719711304
    2. '=' → logprob: -2.578889846801758
    3. '	' → logprob: -19.953889846801758
    4. ' ' → logprob: -19.953889846801758
    5. ' =
' → logprob: -19.953889846801758
    6. '＝' → logprob: -20.203889846801758
    7. ')' → logprob: -20.578889846801758
    8. '=
' → logprob: -22.078889846801758
    9. '[' → logprob: -22.203889846801758
    10. '   ' → logprob: -22.203889846801758

Token 816: ' mid' (ID: 6959)
  Prédit: ' mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.1269282102584839
    2. 'mid' → logprob: -2.1269283294677734
    3. '[mid' → logprob: -16.876928329467773
    4. '(mid' → logprob: -17.626928329467773
    5. ' midpoint' → logprob: -18.501928329467773
    6. '_mid' → logprob: -19.251928329467773
    7. '           ' → logprob: -21.626928329467773
    8. '.mid' → logprob: -21.876928329467773
    9. ' ' → logprob: -22.126928329467773
    10. ' mids' → logprob: -22.501928329467773

Token 817: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.722565233707428
    2. '       ' → logprob: -1.5975651741027832
    3. '
' → logprob: -1.7225651741027832
    4. '[left' → logprob: -2.972565174102783
    5. ' 
' → logprob: -3.972565174102783
    6. '            
' → logprob: -4.097565174102783
    7. '<|end|>' → logprob: -4.597565174102783
    8. 'left' → logprob: -4.597565174102783
    9. '        
' → logprob: -4.722565174102783
    10. '    
' → logprob: -5.347565174102783

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01997542753815651
    2. '       ' → logprob: -4.019975662231445
    3. '            
' → logprob: -7.519975662231445
    4. '
' → logprob: -7.644975662231445
    5. '        
' → logprob: -8.019975662231445
    6. ' 
' → logprob: -9.269975662231445
    7. 'left' → logprob: -9.394975662231445
    8. '    
' → logprob: -9.644975662231445
    9. '```' → logprob: -10.019975662231445
    10. '<|end|>' → logprob: -10.144975662231445

Token 819: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.0009125363430939615
    2. ' left' → logprob: -7.000912666320801
    3. '           ' → logprob: -14.1259126663208
    4. '	left' → logprob: -15.2509126663208
    5. '[left' → logprob: -16.750911712646484
    6. '.left' → logprob: -18.000911712646484
    7. '       ' → logprob: -18.375911712646484
    8. '左' → logprob: -19.125911712646484
    9. '(left' → logprob: -19.125911712646484
    10. 'right' → logprob: -19.375911712646484

Token 820: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804149478673935
    2. ' =' → logprob: -3.288041591644287
    3. '＝' → logprob: -18.413042068481445
    4. '.=' → logprob: -19.163042068481445
    5. '=
' → logprob: -20.288042068481445
    6. '=}' → logprob: -20.913042068481445
    7. '_=' → logprob: -21.538042068481445
    8. '+=' → logprob: -21.538042068481445
    9. '<|end|>' → logprob: -21.538042068481445
    10. '```' → logprob: -21.913042068481445

Token 821: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.04858794063329697
    2. ' mid' → logprob: -3.0485880374908447
    3. '[mid' → logprob: -14.923587799072266
    4. '(mid' → logprob: -15.298587799072266
    5. '_mid' → logprob: -17.173587799072266
    6. '.mid' → logprob: -19.673587799072266
    7. 'middle' → logprob: -20.048587799072266
    8. ' midpoint' → logprob: -20.298587799072266
    9. 'midt' → logprob: -20.923587799072266
    10. '   ' → logprob: -21.673587799072266

Token 822: ' +' (ID: 659)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.014384094625711441
    2. 'mid' → logprob: -4.2643842697143555
    3. '+' → logprob: -8.764384269714355
    4. '[mid' → logprob: -10.264384269714355
    5. '(mid' → logprob: -11.139384269714355
    6. ' +' → logprob: -12.014384269714355
    7. '=' → logprob: -12.764384269714355
    8. ' =' → logprob: -12.889384269714355
    9. '_mid' → logprob: -13.014384269714355
    10. ' ' → logprob: -14.264384269714355

Token 823: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -20.50000762939453
    4. '   ' → logprob: -21.50000762939453
    5. '<|end|>' → logprob: -22.75000762939453
    6. '0' → logprob: -24.00000762939453
    7. '۱' → logprob: -24.00000762939453
    8. 'def' → logprob: -25.25000762939453
    9. '１' → logprob: -25.25000762939453
    10. '[' → logprob: -25.37500762939453

Token 824: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -21.625
    5. '  ' → logprob: -25.5
    6. '``' → logprob: -25.625
    7. '0' → logprob: -25.75
    8. '１' → logprob: -26.25
    9. '3' → logprob: -26.25
    10. '[' → logprob: -26.375

Token 825: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019801542162895203
    2. '<|end|>' → logprob: -5.019801616668701
    3. '```' → logprob: -5.269801616668701
    4. ' else' → logprob: -5.519801616668701
    5. '
' → logprob: -6.019801616668701
    6. 'else' → logprob: -6.894801616668701
    7. ')' → logprob: -9.269801139831543
    8. ' 
' → logprob: -9.644801139831543
    9. '        
' → logprob: -10.394801139831543
    10. '#else' → logprob: -10.519801139831543

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003076950670219958
    2. 'right' → logprob: -8.8753080368042
    3. 'else' → logprob: -9.6253080368042
    4. ' else' → logprob: -9.7503080368042
    5. ' right' → logprob: -10.2503080368042
    6. '   ' → logprob: -12.8753080368042
    7. '```' → logprob: -13.2503080368042
    8. '<|end|>' → logprob: -13.6253080368042
    9. '[right' → logprob: -13.8753080368042
    10. '	right' → logprob: -14.6253080368042

Token 827: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.05207959935069084
    2. ' else' → logprob: -3.052079677581787
    3. '       ' → logprob: -6.052079677581787
    4. 'right' → logprob: -6.802079677581787
    5. ' right' → logprob: -11.802079200744629
    6. '```' → logprob: -11.802079200744629
    7. '[right' → logprob: -13.427079200744629
    8. '   ' → logprob: -13.802079200744629
    9. '	else' → logprob: -13.802079200744629
    10. '<|end|>' → logprob: -14.052079200744629

Token 828: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47111135721206665
    2. ':' → logprob: -1.9711112976074219
    3. 'right' → logprob: -1.9711112976074219
    4. ' right' → logprob: -2.971111297607422
    5. '           ' → logprob: -3.971111297607422
    6. ':right' → logprob: -4.221111297607422
    7. '[right' → logprob: -5.471111297607422
    8. '       ' → logprob: -5.846111297607422
    9. '	right' → logprob: -6.096111297607422
    10. '(right' → logprob: -6.721111297607422

Token 829: '           ' (ID: 352)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5049110651016235
    2. '       ' → logprob: -1.0049110651016235
    3. ' right' → logprob: -3.504910945892334
    4. '           ' → logprob: -8.629911422729492
    5. '	right' → logprob: -9.379911422729492
    6. '```' → logprob: -10.504911422729492
    7. '   ' → logprob: -11.754911422729492
    8. ',right' → logprob: -12.129911422729492
    9. '[right' → logprob: -12.629911422729492
    10. '(right' → logprob: -13.004911422729492

Token 830: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00033558503491804004
    2. ' right' → logprob: -8.000335693359375
    3. '	right' → logprob: -15.875335693359375
    4. '           ' → logprob: -19.500335693359375
    5. '_right' → logprob: -19.625335693359375
    6. '.right' → logprob: -19.875335693359375
    7. '[right' → logprob: -20.000335693359375
    8. ',right' → logprob: -21.250335693359375
    9. '右' → logprob: -21.500335693359375
    10. '(right' → logprob: -21.750335693359375

Token 831: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009114635176956654
    2. ' =' → logprob: -7.000911235809326
    3. '=
' → logprob: -20.375911712646484
    4. '=}' → logprob: -20.375911712646484
    5. '.=' → logprob: -20.625911712646484
    6. '＝' → logprob: -20.625911712646484
    7. '_=' → logprob: -22.500911712646484
    8. '=

' → logprob: -23.000911712646484
    9. '-=' → logprob: -23.500911712646484
    10. '<|end|>' → logprob: -24.125911712646484

Token 832: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0007099286303855479
    2. ' mid' → logprob: -7.2507100105285645
    3. '[mid' → logprob: -18.750709533691406
    4. '(mid' → logprob: -19.250709533691406
    5. '   ' → logprob: -20.125709533691406
    6. 'middle' → logprob: -20.500709533691406
    7. '_mid' → logprob: -20.750709533691406
    8. 'midt' → logprob: -22.250709533691406
    9. 'm' → logprob: -22.875709533691406
    10. '.mid' → logprob: -23.000709533691406

Token 833: ' -' (ID: 533)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011137197725474834
    2. ' =' → logprob: -4.511137008666992
    3. 'mid' → logprob: -10.386137008666992
    4. '[mid' → logprob: -10.386137008666992
    5. '-' → logprob: -11.136137008666992
    6. ' -' → logprob: -12.011137008666992
    7. ' mid' → logprob: -12.636137008666992
    8. '(mid' → logprob: -14.136137008666992
    9. ' ' → logprob: -14.511137008666992
    10. ',' → logprob: -14.886137008666992

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -21.125001907348633
    4. '<|end|>' → logprob: -22.500001907348633
    5. '۱' → logprob: -22.625001907348633
    6. '   ' → logprob: -22.875001907348633
    7. '0' → logprob: -23.500001907348633
    8. ' ' → logprob: -23.875001907348633
    9. '=' → logprob: -24.375001907348633
    10. '১' → logprob: -24.375001907348633

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -18.0
    4. '۱' → logprob: -21.0
    5. '<|end|>' → logprob: -21.75
    6. '2' → logprob: -22.0
    7. '0' → logprob: -22.125
    8. '   ' → logprob: -22.6875
    9. '१' → logprob: -22.9375
    10. '১' → logprob: -23.0

Token 836: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026716147549450397
    2. 'return' → logprob: -7.002671718597412
    3. '    
' → logprob: -7.377671718597412
    4. '
' → logprob: -7.377671718597412
    5. ' return' → logprob: -7.752671718597412
    6. '	return' → logprob: -10.377671241760254
    7. '  
' → logprob: -11.252671241760254
    8. '<|end|>' → logprob: -11.252671241760254
    9. '        
' → logprob: -12.127671241760254
    10. ':return' → logprob: -12.377671241760254

Token 837: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3153410851955414
    2. 'return' → logprob: -1.3153411149978638
    3. ' return' → logprob: -6.190340995788574
    4. ':return' → logprob: -11.440340995788574
    5. '```' → logprob: -11.815340995788574
    6. '	return' → logprob: -11.815340995788574
    7. '{return' → logprob: -13.565340995788574
    8. ')return' → logprob: -15.315340995788574
    9. '_return' → logprob: -15.315340995788574
    10. '       ' → logprob: -15.440340995788574

Token 838: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004154618363827467
    2. '   ' → logprob: -5.504154682159424
    3. ' return' → logprob: -9.504154205322266
    4. '	return' → logprob: -13.629154205322266
    5. '```' → logprob: -14.754154205322266
    6. ':return' → logprob: -16.629154205322266
    7. '_return' → logprob: -18.879154205322266
    8. '{return' → logprob: -18.879154205322266
    9. '  ' → logprob: -19.129154205322266
    10. 'Return' → logprob: -19.504154205322266

Token 839: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.029750484973192215
    2. ' answer' → logprob: -3.5297505855560303
    3. '(answer' → logprob: -17.65475082397461
    4. '	answer' → logprob: -17.65475082397461
    5. '_answer' → logprob: -20.77975082397461
    6. 'answers' → logprob: -21.02975082397461
    7. '   ' → logprob: -21.27975082397461
    8. '.answer' → logprob: -21.65475082397461
    9. '答案' → logprob: -22.65475082397461
    10. 'Answer' → logprob: -22.65475082397461

Token 840: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 841: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: ' Lecture' (ID: 106534)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 843: ' input' (ID: 3422)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8084930181503296
    2. 'n' → logprob: -1.3084930181503296
    3. 'def' → logprob: -2.433493137359619
    4. ' =' → logprob: -2.683493137359619
    5. '(n' → logprob: -3.308493137359619
    6. '```' → logprob: -3.433493137359619
    7. 'import' → logprob: -4.308493137359619
    8. '=' → logprob: -4.433493137359619
    9. '(N' → logprob: -5.058493137359619
    10. 'N' → logprob: -5.183493137359619

Token 844: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2032926082611084
    2. 'N' → logprob: -1.7032926082611084
    3. '```' → logprob: -6.3282928466796875
    4. 'def' → logprob: -10.453292846679688
    5. ' N' → logprob: -10.953292846679688
    6. '``' → logprob: -11.703292846679688
    7. ' n' → logprob: -12.078292846679688
    8. 'x' → logprob: -12.203292846679688
    9. 's' → logprob: -12.328292846679688
    10. 'import' → logprob: -12.578292846679688

Token 845: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0233287513256073
    2. 'n' → logprob: -3.7733287811279297
    3. 'def' → logprob: -10.27332878112793
    4. ' N' → logprob: -10.77332878112793
    5. 'import' → logprob: -10.77332878112793
    6. '```' → logprob: -12.14832878112793
    7. 'if' → logprob: -14.27332878112793
    8. ' n' → logprob: -14.89832878112793
    9. 'T' → logprob: -15.39832878112793
    10. 't' → logprob: -15.39832878112793

Token 846: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016681360080838203
    2. '=' → logprob: -4.39168119430542
    3. ' =' → logprob: -6.14168119430542
    4. ',K' → logprob: -6.26668119430542
    5. '=int' → logprob: -9.141681671142578
    6. ',k' → logprob: -12.766681671142578
    7. ',int' → logprob: -14.016681671142578
    8. 'K' → logprob: -14.266681671142578
    9. ' ,' → logprob: -14.391681671142578
    10. 'int' → logprob: -14.641681671142578

Token 847: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0004306692280806601
    2. ' K' → logprob: -7.750430583953857
    3. ' ' → logprob: -18.625431060791016
    4. ' ' → logprob: -19.000431060791016
    5. '=' → logprob: -19.750431060791016
    6. ',K' → logprob: -20.000431060791016
    7. ' ' → logprob: -20.750431060791016
    8. '	K' → logprob: -21.000431060791016
    9. 'k' → logprob: -21.500431060791016
    10. '  ' → logprob: -21.750431060791016

Token 848: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0006295174825936556
    2. ' =' → logprob: -7.375629425048828
    3. '=input' → logprob: -13.000629425048828
    4. '=int' → logprob: -14.250629425048828
    5. '=list' → logprob: -16.625629425048828
    6. ',' → logprob: -17.375629425048828
    7. '=open' → logprob: -19.750629425048828
    8. '=line' → logprob: -19.875629425048828
    9. '=
' → logprob: -20.000629425048828
    10. '=N' → logprob: -20.625629425048828

Token 849: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -7.493430894101039e-05
    2. ' map' → logprob: -9.500075340270996
    3. 'list' → logprob: -17.12507438659668
    4. '[' → logprob: -18.50007438659668
    5. '(map' → logprob: -19.75007438659668
    6. '	map' → logprob: -19.87507438659668
    7. 'input' → logprob: -20.62507438659668
    8. '10' → logprob: -20.62507438659668
    9. '1' → logprob: -20.75007438659668
    10. '_map' → logprob: -21.00007438659668

Token 850: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0027617255691438913
    2. '(input' → logprob: -6.1277618408203125
    3. 'int' → logprob: -8.002761840820312
    4. 'input' → logprob: -8.377761840820312
    5. '(' → logprob: -12.127761840820312
    6. '(str' → logprob: -12.752761840820312
    7. '=int' → logprob: -13.502761840820312
    8. '[int' → logprob: -14.002761840820312
    9. '<int' → logprob: -14.377761840820312
    10. '<input' → logprob: -15.502761840820312

Token 851: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3273610472679138
    2. '(input' → logprob: -1.3273611068725586
    3. ',input' → logprob: -4.577361106872559
    4. '=input' → logprob: -5.827361106872559
    5. ' input' → logprob: -7.827361106872559
    6. ',' → logprob: -8.327361106872559
    7. '[input' → logprob: -10.077361106872559
    8. ')' → logprob: -10.577361106872559
    9. '(' → logprob: -10.577361106872559
    10. '<input' → logprob: -10.827361106872559

Token 852: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.15310683415737e-05
    2. ' input' → logprob: -10.750021934509277
    3. '<input' → logprob: -20.62502098083496
    4. '=input' → logprob: -20.75002098083496
    5. '(input' → logprob: -22.50002098083496
    6. 'open' → logprob: -23.37502098083496
    7. '	input' → logprob: -23.62502098083496
    8. '```' → logprob: -23.87502098083496
    9. ',input' → logprob: -23.87502098083496
    10. '_input' → logprob: -24.37502098083496

Token 853: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005027544684708118
    2. '()' → logprob: -7.625502586364746
    3. '())' → logprob: -11.375502586364746
    4. '()[' → logprob: -14.500502586364746
    5. ' ().' → logprob: -14.625502586364746
    6. '(' → logprob: -14.750502586364746
    7. '()]' → logprob: -14.750502586364746
    8. '()>' → logprob: -15.000502586364746
    9. '().__' → logprob: -15.625502586364746
    10. '()
' → logprob: -16.250503540039062

Token 854: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.32392441527918e-05
    2. 'strip' → logprob: -9.875053405761719
    3. 'rstrip' → logprob: -13.750053405761719
    4. '(split' → logprob: -15.125053405761719
    5. 'spl' → logprob: -15.625053405761719
    6. ' split' → logprob: -16.37505340576172
    7. '_split' → logprob: -17.12505340576172
    8. '()' → logprob: -18.25005340576172
    9. 'read' → logprob: -18.75005340576172
    10. '().' → logprob: -19.12505340576172

Token 855: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0013223844580352306
    2. '()' → logprob: -7.001322269439697
    3. ')' → logprob: -7.876322269439697
    4. '(' → logprob: -10.501322746276855
    5. '('' → logprob: -13.376322746276855
    6. '()))' → logprob: -14.126322746276855
    7. '())
' → logprob: -14.376322746276855
    8. '(),' → logprob: -15.251322746276855
    9. '(','' → logprob: -15.251322746276855
    10. ' ())' → logprob: -15.751322746276855

Token 856: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. '```' → logprob: -18.125
    4. 'result' → logprob: -18.5
    5. '
' → logprob: -22.5
    6. '#print' → logprob: -22.75
    7. '``' → logprob: -23.125
    8. '	print' → logprob: -24.0
    9. '_print' → logprob: -25.125
    10. '.print' → logprob: -25.5

Token 857: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -16.25
    3. '```' → logprob: -18.375
    4. ' print' → logprob: -20.5
    5. '
' → logprob: -23.375
    6. 'res' → logprob: -23.75
    7. 'pr' → logprob: -23.75
    8. '``' → logprob: -24.0
    9. '#print' → logprob: -24.125
    10. 'prin' → logprob: -24.25

Token 858: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014325213618576527
    2. 'result' → logprob: -4.264325141906738
    3. 'res' → logprob: -9.014325141906738
    4. 'height' → logprob: -10.889325141906738
    5. 'answer' → logprob: -11.139325141906738
    6. 'ans' → logprob: -13.264325141906738
    7. 'st' → logprob: -13.389325141906738
    8. 'ha' → logprob: -13.514325141906738
    9. '```' → logprob: -14.014325141906738
    10. 'h' → logprob: -14.139325141906738

Token 859: ' sortie' (ID: 52761)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.1008713702030946e-06
    2. ' print' → logprob: -13.125001907348633
    3. '```' → logprob: -17.000001907348633
    4. '
' → logprob: -19.250001907348633
    5. 'prin' → logprob: -19.750001907348633
    6. 'aff' → logprob: -20.000001907348633
    7. 'prints' → logprob: -20.625001907348633
    8. 'im' → logprob: -21.000001907348633
    9. '``' → logprob: -21.125001907348633
    10. 'pr' → logprob: -21.250001907348633

Token 860: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.25
    3. ' print' → logprob: -18.625
    4. '``' → logprob: -21.25
    5. '
' → logprob: -21.375
    6. 'result' → logprob: -22.75
    7. '	print' → logprob: -25.0
    8. '  
' → logprob: -25.125
    9. '#print' → logprob: -25.25
    10. '    
' → logprob: -25.375

Token 861: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. ' print' → logprob: -20.5
    4. 'result' → logprob: -23.0
    5. '``' → logprob: -24.25
    6. '
' → logprob: -25.125
    7. '	print' → logprob: -26.125
    8. '#print' → logprob: -26.625
    9. '`' → logprob: -27.25
    10. 'printf' → logprob: -27.5

Token 862: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.7697225252486533e-06
    2. 'max' → logprob: -13.000003814697266
    3. '(' → logprob: -13.500003814697266
    4. ' max' → logprob: -19.125003814697266
    5. '=max' → logprob: -19.125003814697266
    6. '[max' → logprob: -21.125003814697266
    7. '(
' → logprob: -21.375003814697266
    8. '(Max' → logprob: -21.625003814697266
    9. ',max' → logprob: -21.750003814697266
    10. ' (' → logprob: -21.875003814697266

Token 863: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: 0.0
    2. 'Stages' → logprob: -20.625
    3. '_stage' → logprob: -21.375
    4. 'st' → logprob: -21.375
    5. '_' → logprob: -22.125
    6. '(st' → logprob: -22.25
    7. '_s' → logprob: -23.125
    8. ' stages' → logprob: -23.25
    9. '_ST' → logprob: -23.5
    10. ' St' → logprob: -23.625

Token 864: 'ages' (ID: 1461)
  Prédit: 'ages'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -6.704273118884885e-07
    2. 'age' → logprob: -14.500000953674316
    3. '_st' → logprob: -16.25
    4. 'ges' → logprob: -17.75
    5. '_' → logprob: -18.25
    6. 'ag' → logprob: -18.625
    7. 'Stages' → logprob: -18.75
    8. 'st' → logprob: -19.25
    9. 'AGES' → logprob: -19.5
    10. ' stages' → logprob: -19.5

Token 865: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.015305552864447e-05
    2. '(' → logprob: -9.750060081481934
    3. ' (' → logprob: -13.875060081481934
    4. ')' → logprob: -14.375060081481934
    5. '((' → logprob: -15.500060081481934
    6. '(
' → logprob: -17.25006103515625
    7. '(n' → logprob: -17.50006103515625
    8. ')(' → logprob: -17.62506103515625
    9. '```' → logprob: -19.00006103515625
    10. '\(' → logprob: -19.50006103515625

Token 866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.543733904138207e-05
    2. ',K' → logprob: -9.37509536743164
    3. ',N' → logprob: -11.75009536743164
    4. ' ,' → logprob: -13.12509536743164
    5. ')' → logprob: -15.37509536743164
    6. '(' → logprob: -16.00009536743164
    7. '，' → logprob: -16.75009536743164
    8. ',
' → logprob: -17.00009536743164
    9. ',k' → logprob: -17.00009536743164
    10. '‌,' → logprob: -17.12509536743164

Token 867: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -2.7610454708337784e-05
    2. ' K' → logprob: -10.500027656555176
    3. ',K' → logprob: -21.37502670288086
    4. ' ' → logprob: -21.75002670288086
    5. '   ' → logprob: -21.75002670288086
    6. '	K' → logprob: -22.12502670288086
    7. ')' → logprob: -22.75002670288086
    8. '(K' → logprob: -23.25002670288086
    9. '>K' → logprob: -23.75002670288086
    10. '  ' → logprob: -23.87502670288086

Token 868: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029752686619758606
    2. '))' → logprob: -3.529752731323242
    3. '())' → logprob: -13.154752731323242
    4. ')))' → logprob: -15.904752731323242
    5. '})' → logprob: -17.154752731323242
    6. ')`' → logprob: -17.154752731323242
    7. ')")' → logprob: -17.404752731323242
    8. ')}' → logprob: -17.404752731323242
    9. ' )' → logprob: -18.154752731323242
    10. '()' → logprob: -18.154752731323242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 866
Tokens correctement prédits (1ère position, stricte): 285
Tokens correctement prédits (1ère position, avec adaptation): 301
Tokens correctement prédits (top 10): 615
Précision stricte (1ère position): 32.91%
Précision adaptée (1ère position): 34.76%
Précision (top 10): 71.02%
================================================================================
