================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

for line in sys.stdin:
    if not line.strip():
        continue
    a = int(line.strip())
    n = (a - 1) % 39 + 1
    print(f"3C{n:02d}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. '' → logprob: -2.542949914932251
    5. 'import' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0022793153766542673
    2. '  ' → logprob: -6.252279281616211
    3. ' i' → logprob: -8.127279281616211
    4. '```' → logprob: -12.127279281616211
    5. ' ```' → logprob: -12.127279281616211
    6. 'i' → logprob: -12.377279281616211
    7. '_' → logprob: -12.627279281616211
    8. ' ▁' → logprob: -12.627279281616211
    9. ' space' → logprob: -12.752279281616211
    10. ' ' → logprob: -12.877279281616211

Token 5: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038625337183475494
    2. 'in' → logprob: -3.4136252403259277
    3. '[' → logprob: -6.163625240325928
    4. ' ' → logprob: -6.913625240325928
    5. ':' → logprob: -6.913625240325928
    6. '[:]' → logprob: -9.163625717163086
    7. '```' → logprob: -9.288625717163086
    8. '  ' → logprob: -9.663625717163086
    9. '   ' → logprob: -9.788625717163086
    10. '(' → logprob: -9.788625717163086

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17993643879890442
    2. 'sys' → logprob: -1.804936408996582
    3. '=sys' → logprob: -9.429936408996582
    4. '(sys' → logprob: -9.804936408996582
    5. '	sys' → logprob: -10.554936408996582
    6. ' iter' → logprob: -11.679936408996582
    7. '```' → logprob: -12.054936408996582
    8. 's' → logprob: -12.304936408996582
    9. ' ' → logprob: -13.429936408996582
    10. 'in' → logprob: -13.429936408996582

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11039827018976212
    2. '.readline' → logprob: -2.360398292541504
    3. '.stdin' → logprob: -5.110398292541504
    4. ' .' → logprob: -6.485398292541504
    5. ':' → logprob: -7.235398292541504
    6. '.stdout' → logprob: -7.485398292541504
    7. '.readlines' → logprob: -7.485398292541504
    8. '.argv' → logprob: -8.360398292541504
    9. '```' → logprob: -8.985398292541504
    10. '.:' → logprob: -9.235398292541504

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.550411151489243e-05
    2. ' :' → logprob: -11.000055313110352
    3. ':
' → logprob: -11.250055313110352
    4. '>:' → logprob: -11.750055313110352
    5. '():' → logprob: -12.375055313110352
    6. '[:]' → logprob: -12.625055313110352
    7. ':**' → logprob: -12.875055313110352
    8. '):' → logprob: -13.250055313110352
    9. '':' → logprob: -13.750055313110352
    10. '`:' → logprob: -14.125055313110352

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018542143516242504
    2. '    
' → logprob: -8.875185012817383
    3. ' print' → logprob: -10.875185012817383
    4. '```' → logprob: -11.750185012817383
    5. 'print' → logprob: -12.375185012817383
    6. '   ' → logprob: -12.500185012817383
    7. '    ' → logprob: -12.875185012817383
    8. ' if' → logprob: -13.625185012817383
    9. '`' → logprob: -13.750185012817383
    10. ' ' → logprob: -14.250185012817383

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11841689050197601
    2. 'print' → logprob: -2.2434167861938477
    3. ' print' → logprob: -5.243416786193848
    4. '    ' → logprob: -8.993416786193848
    5. ' if' → logprob: -9.868416786193848
    6. 'pass' → logprob: -10.493416786193848
    7. '       ' → logprob: -10.618416786193848
    8. '```' → logprob: -10.868416786193848
    9. 'if' (adapté à ' if') → logprob: -10.993416786193848
    10. ' pass' → logprob: -11.743416786193848

Token 11: ' not' (ID: 625)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.053970761597156525
    2. ' not' → logprob: -3.0539708137512207
    3. ' ' → logprob: -5.553970813751221
    4. 'line' → logprob: -6.928970813751221
    5. ''' → logprob: -8.428970336914062
    6. '"' → logprob: -9.553970336914062
    7. ' len' → logprob: -9.803970336914062
    8. 'not' → logprob: -9.928970336914062
    9. ' '' → logprob: -10.053970336914062
    10. '  ' → logprob: -11.053970336914062

Token 12: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0019331586081534624
    2. 'line' → logprob: -6.2519330978393555
    3. ' ' → logprob: -13.001933097839355
    4. '	line' → logprob: -14.126933097839355
    5. '(line' → logprob: -14.876933097839355
    6. '=line' → logprob: -15.126933097839355
    7. '#line' → logprob: -15.626933097839355
    8. '[line' → logprob: -15.751933097839355
    9. '   ' → logprob: -15.876933097839355
    10. ' lines' → logprob: -16.126934051513672

Token 13: '.strip' (ID: 40613)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3522897958755493
    2. '.strip' → logprob: -1.2272897958755493
    3. '.rstrip' → logprob: -6.10228967666626
    4. '.startswith' → logprob: -6.47728967666626
    5. ' .' → logprob: -10.227290153503418
    6. '.endswith' → logprob: -11.477290153503418
    7. '.readline' → logprob: -12.352290153503418
    8. 'strip' → logprob: -12.852290153503418
    9. 'rstrip' → logprob: -12.977290153503418
    10. '.split' → logprob: -13.477290153503418

Token 14: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04924032837152481
    2. ':' → logprob: -3.0492403507232666
    3. ' ():' → logprob: -7.9242401123046875
    4. ' :' → logprob: -9.049240112304688
    5. '():
' → logprob: -9.674240112304688
    6. '()' → logprob: -10.174240112304688
    7. '):' → logprob: -10.799240112304688
    8. ':return' → logprob: -11.424240112304688
    9. '(':' → logprob: -11.674240112304688
    10. '```' → logprob: -12.674240112304688

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017307489179074764
    2. ' continue' → logprob: -6.501730918884277
    3. 'continue' → logprob: -8.876730918884277
    4. '   ' → logprob: -9.501730918884277
    5. ' break' → logprob: -11.626730918884277
    6. ' continues' → logprob: -13.626730918884277
    7. '_continue' → logprob: -14.251730918884277
    8. '	continue' → logprob: -14.376730918884277
    9. '<|end|>' → logprob: -14.876730918884277
    10. '        
' → logprob: -14.876730918884277

Token 16: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2576638162136078
    2. 'break' → logprob: -1.5076638460159302
    3. '   ' → logprob: -5.632663726806641
    4. '       ' → logprob: -6.382663726806641
    5. 'continue' (adapté à ' continue') → logprob: -8.50766372680664
    6. ' continue' → logprob: -8.88266372680664
    7. '	break' → logprob: -9.63266372680664
    8. '    ' → logprob: -10.63266372680664
    9. '_break' → logprob: -12.63266372680664
    10. '           ' → logprob: -12.75766372680664

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01926436647772789
    2. '    
' → logprob: -4.019264221191406
    3. '        
' → logprob: -7.769264221191406
    4. '
' → logprob: -8.144264221191406
    5. '    ' → logprob: -9.394264221191406
    6. '```' → logprob: -9.769264221191406
    7. '\n' → logprob: -9.894264221191406
    8. '       ' → logprob: -10.019264221191406
    9. 'print' → logprob: -10.144264221191406
    10. '     
' → logprob: -10.519264221191406

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012523093027994037
    2. 'print' → logprob: -9.37512493133545
    3. '    
' → logprob: -10.50012493133545
    4. '       ' → logprob: -12.37512493133545
    5. '```' → logprob: -12.37512493133545
    6. ' print' → logprob: -13.37512493133545
    7. '    ' → logprob: -14.37512493133545
    8. '   ' → logprob: -14.37512493133545
    9. '        
' → logprob: -14.62512493133545
    10. '
' → logprob: -15.00012493133545

Token 19: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12759263813495636
    2. 'print' → logprob: -2.1275925636291504
    3. ' print' → logprob: -8.002593040466309
    4. 'data' → logprob: -9.127593040466309
    5. 'tokens' → logprob: -10.002593040466309
    6. 'result' → logprob: -10.627593040466309
    7. 'import' → logprob: -10.627593040466309
    8. 'process' → logprob: -11.002593040466309
    9. 'try' → logprob: -11.127593040466309
    10. 'word' → logprob: -11.502593040466309

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21111872792243958
    2. '=' → logprob: -2.211118698120117
    3. ',' → logprob: -3.086118698120117
    4. 'rg' → logprob: -4.586118698120117
    5. ' ' → logprob: -4.836118698120117
    6. 'r' → logprob: -4.836118698120117
    7. 'dd' → logprob: -6.461118698120117
    8. 'rray' → logprob: -6.586118698120117
    9. ',b' → logprob: -6.961118698120117
    10. ' +=' → logprob: -7.211118698120117

Token 21: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.40992966294288635
    2. ' int' → logprob: -1.909929633140564
    3. ' line' → logprob: -2.1599297523498535
    4. 'line' → logprob: -2.6599297523498535
    5. ' list' → logprob: -6.6599297523498535
    6. 'list' → logprob: -7.0349297523498535
    7. 'float' → logprob: -8.409929275512695
    8. ' float' → logprob: -8.909929275512695
    9. 'a' → logprob: -9.034929275512695
    10. '[int' → logprob: -9.534929275512695

Token 22: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.06197217106819153
    2. '(' → logprob: -2.811972141265869
    3. '(a' → logprob: -12.561972618103027
    4. '(x' → logprob: -15.936972618103027
    5. '(lines' → logprob: -15.936972618103027
    6. '(input' → logprob: -16.43697166442871
    7. '('' → logprob: -16.43697166442871
    8. '(
' → logprob: -16.43697166442871
    9. ' (' → logprob: -16.68697166442871
    10. '(s' → logprob: -17.06197166442871

Token 23: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006319800857454538
    2. '.strip' → logprob: -5.631319999694824
    3. '[' → logprob: -6.256319999694824
    4. '.split' → logprob: -8.506319999694824
    5. '.rstrip' → logprob: -8.756319999694824
    6. '   ' → logprob: -9.131319999694824
    7. '.readline' → logprob: -9.131319999694824
    8. '))' → logprob: -9.756319999694824
    9. '[line' → logprob: -9.756319999694824
    10. 'a' → logprob: -11.256319999694824

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09584299474954605
    2. ')' → logprob: -2.9708430767059326
    3. '()' → logprob: -3.2208430767059326
    4. '(' → logprob: -8.970843315124512
    5. '()))' → logprob: -10.345843315124512
    6. '))' → logprob: -10.595843315124512
    7. ' ())' → logprob: -11.720843315124512
    8. '('' → logprob: -12.095843315124512
    9. '())
' → logprob: -12.470843315124512
    10. ' )' → logprob: -13.595843315124512

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20171953737735748
    2. '+' → logprob: -1.9517195224761963
    3. '    
' → logprob: -4.701719760894775
    4. '
' → logprob: -5.201719760894775
    5. '\n' → logprob: -5.201719760894775
    6. '+
' → logprob: -5.326719760894775
    7. '<|end|>' → logprob: -5.701719760894775
    8. ' +' → logprob: -6.576719760894775
    9. '    ' → logprob: -6.576719760894775
    10. ' if' → logprob: -7.076719760894775

Token 26: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01201249286532402
    2. ' if' → logprob: -5.012012481689453
    3. 'if' → logprob: -6.137012481689453
    4. ' ' → logprob: -7.387012481689453
    5. '    ' → logprob: -7.637012481689453
    6. '    
' → logprob: -7.762012481689453
    7. 's' → logprob: -8.387012481689453
    8. 'n' (adapté à ' n') → logprob: -8.637012481689453
    9. '  ' → logprob: -8.637012481689453
    10. 'b' → logprob: -9.012012481689453

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8131149411201477
    2. ' ' → logprob: -1.438114881515503
    3. '**' → logprob: -2.688114881515503
    4. '=' → logprob: -2.813114881515503
    5. '%' → logprob: -3.063114881515503
    6. ' **' → logprob: -3.438114881515503
    7. 'umber' → logprob: -4.438115119934082
    8. ' %' → logprob: -4.438115119934082
    9. ' +=' → logprob: -4.563115119934082
    10. '   ' → logprob: -4.563115119934082

Token 28: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3670656383037567
    2. 'a' → logprob: -1.242065668106079
    3. ' ' → logprob: -4.8670654296875
    4. '1' → logprob: -5.2420654296875
    5. '2' → logprob: -5.9920654296875
    6. '10' → logprob: -6.7420654296875
    7. '0' → logprob: -6.8670654296875
    8. '5' → logprob: -8.4920654296875
    9. '3' → logprob: -8.6170654296875
    10. ' int' → logprob: -8.9920654296875

Token 29: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05630411207675934
    2. ' a' → logprob: -3.0563042163848877
    3. '1' → logprob: -5.806303977966309
    4. '3' → logprob: -6.431303977966309
    5. '2' → logprob: -6.681303977966309
    6. ' ' → logprob: -7.431303977966309
    7. '   ' → logprob: -7.681303977966309
    8. ' (' → logprob: -8.556303977966309
    9. '(' → logprob: -9.056303977966309
    10. 'int' → logprob: -9.056303977966309

Token 30: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2891151010990143
    2. ' +' → logprob: -2.2891151905059814
    3. '*(' → logprob: -2.4141151905059814
    4. '*' → logprob: -3.7891151905059814
    5. ' *' → logprob: -3.7891151905059814
    6. '-' → logprob: -5.164114952087402
    7. ')' → logprob: -5.664114952087402
    8. '**' → logprob: -5.789114952087402
    9. ' -' → logprob: -7.664114952087402
    10. '+)' → logprob: -7.789114952087402

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28160202503204346
    2. ' ' → logprob: -1.4066020250320435
    3. '2' → logprob: -8.031601905822754
    4. '3' → logprob: -9.906601905822754
    5. '4' → logprob: -11.781601905822754
    6. '   ' → logprob: -11.844101905822754
    7. '5' → logprob: -11.969101905822754
    8. ' a' → logprob: -12.031601905822754
    9. ')' → logprob: -12.281601905822754
    10. '  ' → logprob: -12.406601905822754

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002797510474920273
    2. '2' → logprob: -6.377797603607178
    3. ' ' → logprob: -7.627797603607178
    4. '3' → logprob: -8.12779712677002
    5. 'a' → logprob: -9.37779712677002
    6. '4' → logprob: -9.75279712677002
    7. '5' → logprob: -10.12779712677002
    8. 'int' → logprob: -11.12779712677002
    9. '(' → logprob: -11.19029712677002
    10. '7' → logprob: -11.44029712677002

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017728772945702076
    2. ')//' → logprob: -6.501772880554199
    3. ' )' → logprob: -9.3767728805542
    4. ')**' → logprob: -9.5017728805542
    5. ')*' → logprob: -9.8767728805542
    6. '+' → logprob: -10.6267728805542
    7. ')%' → logprob: -11.6267728805542
    8. ')*(' → logprob: -12.3767728805542
    9. ' +' → logprob: -12.7517728805542
    10. '   ' → logprob: -13.1267728805542

Token 34: ' %' (ID: 1851)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.0179917812347412
    2. '%' → logprob: -1.5179917812347412
    3. ' %' → logprob: -1.5179917812347412
    4. ')' → logprob: -2.142991781234741
    5. '//' → logprob: -3.392991781234741
    6. '*' → logprob: -3.642991781234741
    7. ' *' → logprob: -4.14299201965332
    8. '**' → logprob: -5.89299201965332
    9. '+' → logprob: -6.39299201965332
    10. '```' → logprob: -7.76799201965332

Token 35: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6165051460266113
    2. '10' → logprob: -1.7415051460266113
    3. ' ' → logprob: -2.7415051460266113
    4. '100' → logprob: -2.8665051460266113
    5. '7' → logprob: -3.1165051460266113
    6. '3' → logprob: -3.4915051460266113
    7. '6' → logprob: -3.6165051460266113
    8. '5' → logprob: -4.491505146026611
    9. '26' → logprob: -4.616505146026611
    10. '4' → logprob: -4.866505146026611

Token 36: '39' (ID: 3255)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0302060842514038
    2. '9' → logprob: -1.1552060842514038
    3. '7' → logprob: -2.4052062034606934
    4. '3' → logprob: -2.6552062034606934
    5. '6' → logprob: -3.2802062034606934
    6. '100' → logprob: -3.2802062034606934
    7. '5' → logprob: -3.6552062034606934
    8. '4' → logprob: -4.030206203460693
    9. '26' → logprob: -4.405206203460693
    10. 'a' → logprob: -5.280206203460693

Token 37: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4462842345237732
    2. '+' → logprob: -1.071284294128418
    3. '   ' → logprob: -4.446284294128418
    4. '
' → logprob: -6.321284294128418
    5. '<|end|>' → logprob: -6.696284294128418
    6. ' ' → logprob: -7.321284294128418
    7. ')' → logprob: -7.446284294128418
    8. '**' → logprob: -8.321284294128418
    9. '<|end|>' → logprob: -8.571284294128418
    10. '*' → logprob: -8.696284294128418

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615988306701183
    2. ' ' → logprob: -4.758615970611572
    3. '2' → logprob: -15.00861644744873
    4. '40' → logprob: -15.63361644744873
    5. '32' → logprob: -16.008615493774414
    6. '+' → logprob: -16.133615493774414
    7. ' ' → logprob: -16.508615493774414
    8. '10' → logprob: -16.696115493774414
    9. ' +' → logprob: -16.821115493774414
    10. '`' → logprob: -17.071115493774414

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.125041961669922
    3. '40' → logprob: -14.500041961669922
    4. '2' → logprob: -14.875041961669922
    5. '10' → logprob: -16.375041961669922
    6. '32' → logprob: -16.625041961669922
    7. '+' → logprob: -16.750041961669922
    8. '39' → logprob: -17.062541961669922
    9. '`' → logprob: -17.125041961669922
    10. '49' → logprob: -17.437541961669922

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7435228228569031
    2. '<|end|>' → logprob: -0.9935228228569031
    3. '\n' → logprob: -2.743522882461548
    4. '   ' → logprob: -3.868522882461548
    5. '+' → logprob: -4.243522644042969
    6. '#' → logprob: -4.618522644042969
    7. '%' → logprob: -4.868522644042969
    8. '*' → logprob: -4.868522644042969
    9. '    
' → logprob: -5.243522644042969
    10. ')' → logprob: -5.493522644042969

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013058462180197239
    2. 'print' → logprob: -5.263058662414551
    3. '    
' → logprob: -6.138058662414551
    4. '<|end|>' → logprob: -6.388058662414551
    5. '
' → logprob: -7.138058662414551
    6. ' ' → logprob: -7.388058662414551
    7. ' if' → logprob: -8.01305866241455
    8. '\n' → logprob: -8.26305866241455
    9. '#' → logprob: -8.26305866241455
    10. ')' → logprob: -8.38805866241455

Token 42: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7452170252799988
    2. 'print' (adapté à ' print') → logprob: -0.8702170252799988
    3. '    
' → logprob: -3.6202170848846436
    4. ' ' → logprob: -4.2452168464660645
    5. ' if' → logprob: -4.7452168464660645
    6. ')' → logprob: -4.8702168464660645
    7. '
' → logprob: -4.8702168464660645
    8. 'if' → logprob: -5.1202168464660645
    9. '<|end|>' → logprob: -5.1202168464660645
    10. ' print' → logprob: -5.3702168464660645

Token 43: '(f' (ID: 1526)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04035089537501335
    2. '(' → logprob: -3.290350914001465
    3. '(f' → logprob: -6.915350914001465
    4. '(chr' → logprob: -7.540350914001465
    5. '(a' → logprob: -7.790350914001465
    6. '((' → logprob: -8.665350914001465
    7. '()' → logprob: -9.540350914001465
    8. '('' → logprob: -9.790350914001465
    9. '("' → logprob: -11.165350914001465
    10. '(str' → logprob: -11.415350914001465

Token 44: '"' (ID: 1)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.16242624819278717
    2. ''{' → logprob: -2.162426233291626
    3. '{' → logprob: -3.662426233291626
    4. '"' → logprob: -5.287426471710205
    5. '(n' → logprob: -7.287426471710205
    6. '"A' → logprob: -7.537426471710205
    7. '("{' → logprob: -7.787426471710205
    8. 'n' → logprob: -8.287425994873047
    9. ''' → logprob: -8.537425994873047
    10. '"S' → logprob: -8.912425994873047

Token 45: '3' (ID: 18)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8298956751823425
    2. 'Day' → logprob: -2.6423957347869873
    3. 'n' → logprob: -2.7048957347869873
    4. 'The' → logprob: -3.2048957347869873
    5. 'A' → logprob: -3.8298957347869873
    6. '第' → logprob: -4.267395496368408
    7. 'a' → logprob: -4.392395496368408
    8. 'Case' → logprob: -4.767395496368408
    9. 'N' → logprob: -4.767395496368408
    10. ' {' → logprob: -4.892395496368408

Token 46: 'C' (ID: 34)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.44535356760025024
    2. '{' → logprob: -1.8203535079956055
    3. ' {' → logprob: -2.9453535079956055
    4. '^{' → logprob: -3.3203535079956055
    5. '6' → logprob: -4.0703535079956055
    6. '7' → logprob: -4.5703535079956055
    7. 'n' → logprob: -4.5703535079956055
    8. '5' → logprob: -4.5703535079956055
    9. '^' → logprob: -5.1953535079956055
    10. '8' → logprob: -5.1953535079956055

Token 47: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.016041994094848633
    2. 'n' → logprob: -4.7660417556762695
    3. ' {' → logprob: -6.7660417556762695
    4. '0' → logprob: -7.5160417556762695
    5. 'a' → logprob: -7.5160417556762695
    6. '3' → logprob: -7.5160417556762695
    7. '2' → logprob: -7.8910417556762695
    8. '7' → logprob: -7.8910417556762695
    9. '")' → logprob: -7.8910417556762695
    10. '{x' → logprob: -8.26604175567627

Token 48: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02034403197467327
    2. '{' → logprob: -4.020344257354736
    3. ':' → logprob: -6.520344257354736
    4. 'str' → logprob: -8.395343780517578
    5. ' n' → logprob: -8.645343780517578
    6. 'a' → logprob: -8.770343780517578
    7. '{:' → logprob: -10.270343780517578
    8. '0' → logprob: -10.520343780517578
    9. ':n' → logprob: -11.020343780517578
    10. '   ' → logprob: -11.395343780517578

Token 49: ':' (ID: 25)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.027508912608027458
    2. ':' → logprob: -4.027508735656738
    3. '}' → logprob: -5.652508735656738
    4. 'd' → logprob: -5.902508735656738
    5. 'D' → logprob: -6.527508735656738
    6. ' }' → logprob: -7.902508735656738
    7. ':d' → logprob: -8.402508735656738
    8. '")' → logprob: -8.902508735656738
    9. '}")
' → logprob: -9.027508735656738
    10. ':D' → logprob: -9.027508735656738

Token 50: '02' (ID: 3286)
  Prédit: '02'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '02' → logprob: -0.48284009099006653
    2. '03' → logprob: -0.9828400611877441
    3. 'd' → logprob: -5.482840061187744
    4. '04' → logprob: -5.857840061187744
    5. '}' → logprob: -7.357840061187744
    6. '0' → logprob: -7.982840061187744
    7. '05' → logprob: -8.357840538024902
    8. '01' → logprob: -9.732840538024902
    9. '003' → logprob: -9.857840538024902
    10. '002' → logprob: -9.982840538024902

Token 51: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21446016430854797
    2. '}")' → logprob: -1.9644601345062256
    3. 'X' → logprob: -3.7144601345062256
    4. '}' → logprob: -4.089460372924805
    5. 'x' → logprob: -4.464460372924805
    6. 'D' → logprob: -9.714460372924805
    7. '}')' → logprob: -10.964460372924805
    8. '}")
' → logprob: -10.964460372924805
    9. '}"' → logprob: -11.089460372924805
    10. '")' → logprob: -11.339460372924805

Token 52: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0017440813826397061
    2. 'd' → logprob: -7.001744270324707
    3. '}' → logprob: -7.376744270324707
    4. '")' → logprob: -9.876744270324707
    5. '}")
' → logprob: -10.376744270324707
    6. ' }' → logprob: -10.876744270324707
    7. '}.' → logprob: -11.001744270324707
    8. '}"' → logprob: -11.501744270324707
    9. 'x' → logprob: -11.626744270324707
    10. 'D' → logprob: -11.751744270324707


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 50
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 44.00%
Précision adaptée (1ère position): 44.00%
Précision (top 10): 86.00%
================================================================================
