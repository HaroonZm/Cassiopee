================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

V, E = map(int, input().split())
edges = [[] for _ in range(V+1)]
for _ in range(E):
    a, b = map(int, input().split())
    edges[a].append(b)
    edges[b].append(a)

color = [0] * (V+1)

def dfs(v, c):
    color[v] = c
    for nv in edges[v]:
        if color[nv] == 0:
            if not dfs(nv, 3 - c):
                return False
        elif color[nv] == color[v]:
            return False
    return True

# Check if graph is bipartite
for i in range(1, V+1):
    if color[i] == 0:
        if not dfs(i, 1):
            print(-1)
            sys.exit()

# Count nodes of each color per connected component
visited = [False] * (V+1)
ans = 0

for i in range(1, V+1):
    if not visited[i]:
        stack = [i]
        visited[i] = True
        c1 = 0
        c2 = 0
        while stack:
            v = stack.pop()
            if color[v] == 1:
                c1 += 1
            else:
                c2 += 1
            for nv in edges[v]:
                if not visited[nv]:
                    visited[nv] = True
                    stack.append(nv)
        # Maximum edges in bipartite complete: c1*c2
        # Subtract existing edges in this component
        # Count existing edges in this component:
        comp_vertices = c1 + c2
        # sum degrees = 2*E_comp
        # To get edges per component, sum degrees of vertices in component / 2
        # But no need to count explicitly: total E is known, 
        # so sum of c1*c2 - E_comp over all components gives the total.
        # We compute E_comp as sum of degrees/2 for the component.
        E_comp = 0
        # Recount edges in component by iterating vertices in component is heavy,
        # So alternative: store all vertices of component in a list and count edges.
        # Let's do that now for accuracy.
        comp_vertices_list = []
        stack2 = [i]
        comp_visited = set([i])
        while stack2:
            v = stack2.pop()
            comp_vertices_list.append(v)
            for w in edges[v]:
                if w not in comp_visited:
                    comp_visited.add(w)
                    stack2.append(w)
        E_comp = 0
        for v in comp_vertices_list:
            E_comp += len(edges[v])
        E_comp //=2

        ans += c1*c2 - E_comp

if ans == 0:
    print(-1)
else:
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.7968066206085496e-05
    2. ' .' → logprob: -11.625027656555176
    3. '.import' → logprob: -12.500027656555176
    4. '.readline' → logprob: -13.125027656555176
    5. '.user' → logprob: -13.375027656555176
    6. '.`' → logprob: -13.875027656555176
    7. '[' → logprob: -14.000027656555176
    8. '.stdout' → logprob: -14.125027656555176
    9. '."""' → logprob: -14.125027656555176
    10. '.exit' → logprob: -14.250027656555176

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5776441097259521
    2. '_trace' → logprob: -1.3276441097259521
    3. ' _' → logprob: -2.702644109725952
    4. '_version' → logprob: -3.577644109725952
    5. '_soft' → logprob: -4.577644348144531
    6. '_exc' → logprob: -4.702644348144531
    7. '_encoding' → logprob: -5.702644348144531
    8. '_ex' → logprob: -5.702644348144531
    9. '_exception' → logprob: -5.702644348144531
    10. '_default' → logprob: -5.827644348144531

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0014520210679620504
    2. 'ursive' → logprob: -6.7514519691467285
    3. 'ur' → logprob: -9.376452445983887
    4. 'urs' → logprob: -10.001452445983887
    5. '_' → logprob: -10.126452445983887
    6. 'limit' → logprob: -10.376452445983887
    7. '_limit' → logprob: -11.001452445983887
    8. 'urf' → logprob: -11.251452445983887
    9. 't' → logprob: -11.626452445983887
    10. 'ursor' → logprob: -11.876452445983887

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16029387712478638
    2. '100' → logprob: -1.9102938175201416
    3. '300' → logprob: -10.910293579101562
    4. ' ' → logprob: -10.910293579101562
    5. '500' → logprob: -11.160293579101562
    6. '150' → logprob: -12.160293579101562
    7. '999' → logprob: -12.660293579101562
    8. '1' → logprob: -12.785293579101562
    9. '200' → logprob: -12.785293579101562
    10. '   ' → logprob: -13.285293579101562

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.50001335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2915230095386505
    2. ')' → logprob: -2.916522979736328
    3. '\n' → logprob: -2.916522979736328
    4. 'def' → logprob: -3.541522979736328
    5. '
' → logprob: -3.791522979736328
    6. '(' → logprob: -4.041522979736328
    7. '
' → logprob: -4.291522979736328
    8. '' → logprob: -4.541522979736328
    9. 'sys' → logprob: -4.541522979736328
    10. '#' → logprob: -4.916522979736328

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5420803427696228
    2. '()' → logprob: -0.9170803427696228
    3. '```' → logprob: -5.167080402374268
    4. '_data' → logprob: -5.292080402374268
    5. '40' → logprob: -6.167080402374268
    6. '().' → logprob: -7.042080402374268
    7. '=' → logprob: -7.417080402374268
    8. 'data' → logprob: -7.417080402374268
    9. '('' → logprob: -7.542080402374268
    10. '_str' → logprob: -7.917080402374268

Token 15: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2547602355480194
    2. ' input' → logprob: -1.5047602653503418
    3. ' sys' → logprob: -6.629760265350342
    4. 'sys' → logprob: -6.629760265350342
    5. 'lambda' → logprob: -10.254759788513184
    6. '=input' → logprob: -10.629759788513184
    7. ' lambda' → logprob: -10.754759788513184
    8. '```' → logprob: -10.879759788513184
    9. 'open' → logprob: -11.129759788513184
    10. ' ' → logprob: -11.379759788513184

Token 16: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005953280488029122
    2. '.readline' → logprob: -8.000595092773438
    3. ' .' → logprob: -8.750595092773438
    4. '.stdin' → logprob: -10.000595092773438
    5. '.)' → logprob: -11.875595092773438
    6. '.
' → logprob: -12.250595092773438
    7. '.​' → logprob: -12.375595092773438
    8. '[' → logprob: -12.625595092773438
    9. '.

' → logprob: -12.625595092773438
    10. '.`' → logprob: -12.750595092773438

Token 17: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008816298097372055
    2. '.read' → logprob: -4.883816242218018
    3. '.' → logprob: -6.758816242218018
    4. '.buffer' → logprob: -10.258816719055176
    5. '.readlines' → logprob: -11.508816719055176
    6. '.Read' → logprob: -13.383816719055176
    7. 'read' → logprob: -13.883816719055176
    8. '.stdin' → logprob: -14.883816719055176
    9. ' .' → logprob: -15.383816719055176
    10. ').' → logprob: -16.00881576538086

Token 18: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06371898949146271
    2. '()
' → logprob: -3.5637190341949463
    3. '()

' → logprob: -4.063718795776367
    4. '(' → logprob: -4.438718795776367
    5. 'def' → logprob: -6.563718795776367
    6. '()\' → logprob: -6.813718795776367
    7. '(
' → logprob: -7.313718795776367
    8. '
' → logprob: -8.563718795776367
    9. 'for' → logprob: -8.688718795776367
    10. '\n' → logprob: -9.063718795776367

Token 19: 'V' (ID: 53)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062080394476652145
    2. 'n' → logprob: -2.8120803833007812
    3. 'N' → logprob: -9.687080383300781
    4. 'd' → logprob: -11.062080383300781
    5. '\' → logprob: -11.812080383300781
    6. '```' → logprob: -11.812080383300781
    7. 'class' → logprob: -12.187080383300781
    8. 'a' → logprob: -12.312080383300781
    9. 'for' → logprob: -12.437080383300781
    10. 'from' → logprob: -14.062080383300781

Token 20: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3428390324115753
    2. ',' → logprob: -1.592839002609253
    3. '=' → logprob: -2.467839002609253
    4. '.' → logprob: -6.967839241027832
    5. 'ALUE' → logprob: -8.342839241027832
    6. ' ,' → logprob: -8.342839241027832
    7. ')' → logprob: -8.967839241027832
    8. ' ' → logprob: -9.092839241027832
    9. '=int' → logprob: -9.592839241027832
    10. '   ' → logprob: -9.717839241027832

Token 21: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.32030153274536133
    2. ' E' → logprob: -1.3203015327453613
    3. 'Q' → logprob: -6.320301532745361
    4. 'K' → logprob: -6.445301532745361
    5. ' ' → logprob: -7.070301532745361
    6. 'W' → logprob: -7.070301532745361
    7. ' W' → logprob: -7.445301532745361
    8. ' K' → logprob: -7.570301532745361
    9. 'F' → logprob: -8.695301055908203
    10. ' Q' → logprob: -9.195301055908203

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08077439665794373
    2. '=' → logprob: -2.5807743072509766
    3. ',' → logprob: -6.330774307250977
    4. ' ,' → logprob: -9.830774307250977
    5. ' ' → logprob: -10.205774307250977
    6. ')' → logprob: -12.705774307250977
    7. ' =
' → logprob: -13.080774307250977
    8. '=input' → logprob: -13.330774307250977
    9. '<|end|>' → logprob: -13.580774307250977
    10. '[' → logprob: -14.830774307250977

Token 23: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.02975141443312168
    2. 'map' → logprob: -3.5297513008117676
    3. ' ' → logprob: -15.279751777648926
    4. ' list' → logprob: -15.654751777648926
    5. '	map' → logprob: -15.779751777648926
    6. ' tuple' → logprob: -16.40475082397461
    7. 'int' → logprob: -16.90475082397461
    8. ' input' → logprob: -17.15475082397461
    9. 'input' → logprob: -17.27975082397461
    10. ' ma' → logprob: -17.40475082397461

Token 24: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48321959376335144
    2. '(int' → logprob: -1.1082196235656738
    3. '(lambda' → logprob: -3.233219623565674
    4. '(input' → logprob: -4.733219623565674
    5. '(str' → logprob: -5.483219623565674
    6. '<|end|>' → logprob: -8.858219146728516
    7. '()' → logprob: -9.608219146728516
    8. '(len' → logprob: -10.233219146728516
    9. '(eval' → logprob: -10.233219146728516
    10. '(
' → logprob: -10.358219146728516

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38309362530708313
    2. '(input' → logprob: -2.0080935955047607
    3. '(' → logprob: -2.1330935955047607
    4. ',input' → logprob: -3.3830935955047607
    5. '(sys' → logprob: -3.6330935955047607
    6. '(int' → logprob: -6.25809383392334
    7. ')' → logprob: -6.63309383392334
    8. ' ,' → logprob: -7.63309383392334
    9. ',int' → logprob: -7.63309383392334
    10. '(V' → logprob: -8.63309383392334

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4741402268409729
    2. ' input' → logprob: -0.9741402268409729
    3. ' sys' → logprob: -10.849140167236328
    4. 'map' → logprob: -11.349140167236328
    5. ' ' → logprob: -11.474140167236328
    6. 'sys' → logprob: -11.599140167236328
    7. 'int' → logprob: -11.724140167236328
    8. ' map' → logprob: -13.599140167236328
    9. '(input' → logprob: -13.724140167236328
    10. ')' → logprob: -14.474140167236328

Token 27: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3704982399940491
    2. '()' → logprob: -1.3704981803894043
    3. '().' → logprob: -3.4954981803894043
    4. '('' → logprob: -4.620498180389404
    5. '(' → logprob: -4.745498180389404
    6. ')' → logprob: -5.495498180389404
    7. '()))' → logprob: -7.245498180389404
    8. '()),' → logprob: -7.995498180389404
    9. '());' → logprob: -8.370498657226562
    10. '()]' → logprob: -8.495498657226562

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01439242996275425
    2. 'strip' → logprob: -4.264392375946045
    3. 'rstrip' → logprob: -8.389392852783203
    4. ' split' → logprob: -14.389392852783203
    5. 'read' → logprob: -14.514392852783203
    6. '(split' → logprob: -15.014392852783203
    7. ' strip' → logprob: -16.639392852783203
    8. ')' → logprob: -16.889392852783203
    9. 'spl' → logprob: -17.264392852783203
    10. '```' → logprob: -17.639392852783203

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044544681441038847
    2. '))' → logprob: -8.375445365905762
    3. '())' → logprob: -8.625445365905762
    4. '()' → logprob: -10.750445365905762
    5. '),' → logprob: -12.125445365905762
    6. '`)' → logprob: -13.000445365905762
    7. ')`' → logprob: -13.500445365905762
    8. ' )' → logprob: -13.750445365905762
    9. '(' → logprob: -14.375445365905762
    10. ')
' → logprob: -14.500445365905762

Token 30: 'edges' (ID: 39127)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.025465887039899826
    2. ' graph' → logprob: -4.400465965270996
    3. 'parent' → logprob: -5.275465965270996
    4. '
' → logprob: -5.650465965270996
    5. 'tree' → logprob: -7.400465965270996
    6. 'edges' → logprob: -7.525465965270996
    7. 'dist' → logprob: -7.650465965270996
    8. 'visited' → logprob: -7.650465965270996
    9. ' 
' → logprob: -7.900465965270996
    10. 'adj' → logprob: -8.025465965270996

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00376101303845644
    2. '=' → logprob: -5.628760814666748
    3. '[' → logprob: -9.878761291503906
    4. ')' → logprob: -10.378761291503906
    5. '[]' → logprob: -10.753761291503906
    6. '=[]' → logprob: -11.128761291503906
    7. '[:]' → logprob: -11.253761291503906
    8. ' ' → logprob: -11.378761291503906
    9. ',' → logprob: -12.253761291503906
    10. '.' → logprob: -12.878761291503906

Token 32: ' [[]' (ID: 182908)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003650557016953826
    2. '[' → logprob: -6.003650665283203
    3. ' []' → logprob: -6.753650665283203
    4. '[]
' → logprob: -12.628650665283203
    5. '[][]' → logprob: -13.503650665283203
    6. '[list' → logprob: -14.503650665283203
    7. '[int' → logprob: -14.503650665283203
    8. ' [' → logprob: -15.003650665283203
    9. '[]}' → logprob: -15.128650665283203
    10. '[][' → logprob: -15.753650665283203

Token 33: ' for' (ID: 395)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.16352151334285736
    2. '(' → logprob: -2.2885215282440186
    3. ')' → logprob: -3.6635215282440186
    4. ']' → logprob: -4.2885212898254395
    5. 'for' → logprob: -5.2885212898254395
    6. ' for' → logprob: -5.7885212898254395
    7. '()' → logprob: -7.1635212898254395
    8. '(E' → logprob: -7.5385212898254395
    9. ' (' → logprob: -8.163521766662598
    10. ',' → logprob: -8.913521766662598

Token 34: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.038877855986356735
    2. ' range' → logprob: -3.9138779640197754
    3. ' _' → logprob: -4.038877964019775
    4. '_range' → logprob: -8.288877487182617
    5. 'range' → logprob: -9.038877487182617
    6. ' i' → logprob: -9.413877487182617
    7. ' ' → logprob: -9.538877487182617
    8. ' in' → logprob: -10.788877487182617
    9. '_i' → logprob: -13.538877487182617
    10. 'i' → logprob: -13.788877487182617

Token 35: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029034316539764404
    2. 'in' → logprob: -4.15403413772583
    3. ' range' → logprob: -4.65403413772583
    4. '(range' → logprob: -5.90403413772583
    5. '(V' → logprob: -8.029034614562988
    6. ' in' → logprob: -8.404034614562988
    7. 'i' → logprob: -9.529034614562988
    8. '_' → logprob: -10.529034614562988
    9. '(i' → logprob: -12.279034614562988
    10. '(' → logprob: -12.904034614562988

Token 36: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0380416102707386
    2. ' range' → logprob: -3.288041591644287
    3. '(range' → logprob: -15.913042068481445
    4. '	range' → logprob: -18.663042068481445
    5. '_range' → logprob: -20.788042068481445
    6. ' ' → logprob: -21.038042068481445
    7. ')' → logprob: -21.288042068481445
    8. 'r' → logprob: -21.663042068481445
    9. '   ' → logprob: -21.913042068481445
    10. 'rang' → logprob: -22.413042068481445

Token 37: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -11.875007629394531
    3. 'V' → logprob: -15.500007629394531
    4. ' (' → logprob: -17.12500762939453
    5. '((' → logprob: -17.25000762939453
    6. ')(' → logprob: -17.50000762939453
    7. ')' → logprob: -18.50000762939453
    8. '(E' → logprob: -18.75000762939453
    9. '](' → logprob: -19.12500762939453
    10. '(v' → logprob: -19.25000762939453

Token 38: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.9160102712921798e-05
    2. ']' → logprob: -11.000029563903809
    3. ')' → logprob: -12.000029563903809
    4. '])]' → logprob: -12.875029563903809
    5. ')])' → logprob: -13.125029563903809
    6. '+' → logprob: -14.750029563903809
    7. ' )' → logprob: -15.000029563903809
    8. '])' → logprob: -15.000029563903809
    9. ')],' → logprob: -15.625029563903809
    10. ')]
' → logprob: -16.125028610229492

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '2' → logprob: -15.625031471252441
    4. '0' → logprob: -18.500030517578125
    5. ')' → logprob: -18.750030517578125
    6. '(' → logprob: -19.250030517578125
    7. '```' → logprob: -19.750030517578125
    8. '7' → logprob: -19.875030517578125
    9. '   ' → logprob: -20.625030517578125
    10. '１' → logprob: -21.125030517578125

Token 40: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7079795002937317
    2. ')]' → logprob: -0.7079795002937317
    3. ')' → logprob: -4.457979679107666
    4. '])' → logprob: -5.832979679107666
    5. '])]' → logprob: -8.707979202270508
    6. ')])' → logprob: -10.457979202270508
    7. ']
' → logprob: -12.832979202270508
    8. ' ]' → logprob: -13.082979202270508
    9. ')],' → logprob: -13.582979202270508
    10. '）' → logprob: -13.582979202270508

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000654654751997441
    2. ' for' → logprob: -7.375654697418213
    3. 'u' → logprob: -11.000654220581055
    4. 'v' → logprob: -12.125654220581055
    5. 'i' → logprob: -13.250654220581055
    6. '```' → logprob: -13.625654220581055
    7. 'visited' → logprob: -14.125654220581055
    8. '<|end|>' → logprob: -15.125654220581055
    9. 'f' → logprob: -15.750654220581055
    10. 'a' → logprob: -15.750654220581055

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.009573332965373993
    2. '_' → logprob: -4.884573459625244
    3. ' i' → logprob: -6.634573459625244
    4. ' ' → logprob: -7.384573459625244
    5. ' range' → logprob: -11.384572982788086
    6. ' ▁' → logprob: -12.009572982788086
    7. ' ‌' → logprob: -12.509572982788086
    8. ' ' → logprob: -12.634572982788086
    9. '  ' → logprob: -13.634572982788086
    10. ' ​' → logprob: -13.884572982788086

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03379841893911362
    2. ' i' → logprob: -4.1587982177734375
    3. 'in' → logprob: -4.2837982177734375
    4. ' _' → logprob: -6.1587982177734375
    5. '_' → logprob: -6.6587982177734375
    6. ' ' → logprob: -8.533798217773438
    7. 'i' → logprob: -9.158798217773438
    8. ' n' → logprob: -9.533798217773438
    9. ' j' → logprob: -12.158798217773438
    10. ' v' → logprob: -12.283798217773438

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02324768900871277
    2. ' range' → logprob: -3.773247718811035
    3. '(range' → logprob: -14.023247718811035
    4. '	range' → logprob: -14.773247718811035
    5. ' ' → logprob: -15.398247718811035
    6. 'ran' → logprob: -15.773247718811035
    7. 'rang' → logprob: -15.773247718811035
    8. 'ange' → logprob: -15.773247718811035
    9. 'r' → logprob: -16.02324676513672
    10. 'in' → logprob: -16.77324676513672

Token 45: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -0.10257936269044876
    2. '(' → logprob: -3.102579355239868
    3. ' E' → logprob: -3.102579355239868
    4. 'E' → logprob: -5.352579593658447
    5. ' (' → logprob: -5.852579593658447
    6. ' ' → logprob: -11.477579116821289
    7. '(int' → logprob: -12.602579116821289
    8. '(
' → logprob: -12.977579116821289
    9. '()' → logprob: -14.852579116821289
    10. ' range' → logprob: -14.977579116821289

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0042145708575844765
    2. ')' → logprob: -5.754214763641357
    3. ' ):' → logprob: -7.004214763641357
    4. '):
' → logprob: -9.1292142868042
    5. ':' → logprob: -11.7542142868042
    6. ' )' → logprob: -12.2542142868042
    7. ',' → logprob: -12.3792142868042
    8. '):
' → logprob: -14.3792142868042
    9. '():' → logprob: -14.8792142868042
    10. ']:' → logprob: -15.0042142868042

Token 47: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.12749473750591278
    2. 'u' → logprob: -2.1274948120117188
    3. '   ' → logprob: -8.252494812011719
    4. ' v' → logprob: -9.627494812011719
    5. 'a' → logprob: -10.002494812011719
    6. '	u' → logprob: -10.002494812011719
    7. ' a' → logprob: -10.127494812011719
    8. 'v' → logprob: -10.502494812011719
    9. ' line' → logprob: -10.877494812011719
    10. '(u' → logprob: -11.627494812011719

Token 48: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.007451272569596767
    2. ' u' → logprob: -5.132451057434082
    3. 'a' (adapté à ' a') → logprob: -6.507451057434082
    4. 'v' → logprob: -11.007451057434082
    5. ' a' → logprob: -12.132451057434082
    6. 's' → logprob: -12.382451057434082
    7. 'f' → logprob: -14.757451057434082
    8. '```' → logprob: -14.757451057434082
    9. 'A' → logprob: -14.882451057434082
    10. 'from' → logprob: -15.007451057434082

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07259996235370636
    2. ' ,' → logprob: -2.6975998878479004
    3. ',b' → logprob: -5.9475998878479
    4. 'b' → logprob: -10.697600364685059
    5. ' b' → logprob: -11.697600364685059
    6. ',a' → logprob: -12.322600364685059
    7. ',v' → logprob: -12.822600364685059
    8. ',n' → logprob: -13.197600364685059
    9. ' ' → logprob: -13.322600364685059
    10. ',int' → logprob: -13.947600364685059

Token 50: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043012093752622604
    2. ' b' → logprob: -3.1680121421813965
    3. ' ' → logprob: -11.668011665344238
    4. '<|end|>' → logprob: -13.043011665344238
    5. ',b' → logprob: -14.168011665344238
    6. ',' → logprob: -14.543011665344238
    7. 'space' → logprob: -14.668011665344238
    8. '<|end|>' → logprob: -15.293011665344238
    9. '=' → logprob: -16.168012619018555
    10. 't' → logprob: -16.793012619018555

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602267622947693
    2. ' =' → logprob: -1.910226821899414
    3. ',' → logprob: -13.410226821899414
    4. ' ' → logprob: -14.910226821899414
    5. '=input' → logprob: -14.910226821899414
    6. ')' → logprob: -15.660226821899414
    7. '＝' → logprob: -16.410226821899414
    8. 'a' → logprob: -16.785226821899414
    9. '   ' → logprob: -17.535226821899414
    10. '=

' → logprob: -17.535226821899414

Token 52: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.08894459158182144
    2. 'map' → logprob: -2.463944673538208
    3. ' ' → logprob: -13.713944435119629
    4. '	map' → logprob: -13.713944435119629
    5. '(map' → logprob: -14.588944435119629
    6. ',map' → logprob: -14.713944435119629
    7. ' list' → logprob: -14.838944435119629
    8. ' =' → logprob: -14.963944435119629
    9. '   ' → logprob: -15.213944435119629
    10. ' input' → logprob: -15.463944435119629

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00012689977302215993
    2. '(' → logprob: -9.125126838684082
    3. '<int' → logprob: -11.750126838684082
    4. '(input' → logprob: -12.625126838684082
    5. '(str' → logprob: -13.125126838684082
    6. '[int' → logprob: -13.625126838684082
    7. '=int' → logprob: -14.000126838684082
    8. ',int' → logprob: -14.125126838684082
    9. 'int' → logprob: -14.375126838684082
    10. '(lambda' → logprob: -15.125126838684082

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01101327408105135
    2. ',input' → logprob: -4.636013507843018
    3. '(input' → logprob: -6.886013507843018
    4. '(' → logprob: -8.76101303100586
    5. 'input' → logprob: -10.01101303100586
    6. ')' → logprob: -11.01101303100586
    7. '[input' → logprob: -12.01101303100586
    8. ' ,' → logprob: -12.76101303100586
    9. '```' → logprob: -13.38601303100586
    10. '=input' → logprob: -13.38601303100586

Token 55: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193196535110474
    2. ' input' → logprob: -1.50193190574646
    3. '	input' → logprob: -14.251932144165039
    4. '=input' → logprob: -14.251932144165039
    5. '(input' → logprob: -14.376932144165039
    6. ',input' → logprob: -15.001932144165039
    7. '<input' → logprob: -15.376932144165039
    8. '_input' → logprob: -15.626932144165039
    9. '[input' → logprob: -15.626932144165039
    10. ' ' → logprob: -17.00193214416504

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.750006675720215
    4. '())' → logprob: -16.25000762939453
    5. '.split' → logprob: -16.37500762939453
    6. '.' → logprob: -16.37500762939453
    7. ')' → logprob: -16.50000762939453
    8. '(' → logprob: -16.87500762939453
    9. '.readline' → logprob: -17.62500762939453
    10. 'split' → logprob: -17.75000762939453

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.625001907348633
    3. ' split' → logprob: -15.750001907348633
    4. 'spl' → logprob: -16.375001907348633
    5. ')' → logprob: -16.750001907348633
    6. '(split' → logprob: -17.250001907348633
    7. 'rstrip' → logprob: -17.375001907348633
    8. '.split' → logprob: -20.125001907348633
    9. 'plit' → logprob: -20.125001907348633
    10. '_split' → logprob: -20.500001907348633

Token 58: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028586551547050476
    2. '())' → logprob: -3.7785866260528564
    3. '()' → logprob: -5.278586387634277
    4. ')
' → logprob: -8.903586387634277
    5. '())
' → logprob: -10.653586387634277
    6. '))' → logprob: -10.778586387634277
    7. '`)' → logprob: -11.653586387634277
    8. '   ' → logprob: -11.903586387634277
    9. '()
' → logprob: -11.903586387634277
    10. ' )' → logprob: -12.153586387634277

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03308270871639252
    2. 'edges' → logprob: -4.408082485198975
    3. ' edges' → logprob: -4.533082485198975
    4. '<|end|>' → logprob: -5.033082485198975
    5. '(edges' → logprob: -6.783082485198975
    6. '```' → logprob: -6.908082485198975
    7. '    
' → logprob: -8.408082962036133
    8. '.edges' → logprob: -8.533082962036133
    9. '_edges' → logprob: -9.158082962036133
    10. ')' → logprob: -9.408082962036133

Token 60: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.496082603931427
    2. 'edges' (adapté à ' edges') → logprob: -0.996082603931427
    3. '   ' → logprob: -3.8710825443267822
    4. '.edges' → logprob: -7.871082782745361
    5. '```' → logprob: -8.371082305908203
    6. '(edges' → logprob: -8.996082305908203
    7. '_edges' → logprob: -9.371082305908203
    8. '``' → logprob: -11.246082305908203
    9. ' 
' → logprob: -11.621082305908203
    10. 'Edges' → logprob: -11.871082305908203

Token 61: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.2233183042553719e-05
    2. '[b' → logprob: -11.750012397766113
    3. '[' → logprob: -12.625012397766113
    4. 'a' → logprob: -14.000012397766113
    5. '```' → logprob: -16.375011444091797
    6. ' [' → logprob: -16.750011444091797
    7. '\[' → logprob: -19.000011444091797
    8. '[A' → logprob: -19.375011444091797
    9. '[s' → logprob: -19.750011444091797
    10. '[
' → logprob: -19.875011444091797

Token 62: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.13432011008262634
    2. '.append' → logprob: -2.259320020675659
    3. '.' → logprob: -4.259320259094238
    4. ').' → logprob: -5.009320259094238
    5. ']' → logprob: -8.384320259094238
    6. ')' → logprob: -9.634320259094238
    7. '[' → logprob: -10.134320259094238
    8. ' .' → logprob: -10.509320259094238
    9. '[].' → logprob: -10.509320259094238
    10. ' ].' → logprob: -11.134320259094238

Token 63: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -16.125
    4. 'appen' → logprob: -16.375
    5. 'push' → logprob: -19.5
    6. '_append' → logprob: -19.5
    7. 'Append' → logprob: -20.0
    8. '	append' → logprob: -20.25
    9. 'app' → logprob: -20.5
    10. 'appe' → logprob: -21.0

Token 64: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015175960725173354
    2. '(' → logprob: -6.5015177726745605
    3. 'b' → logprob: -11.251517295837402
    4. '((' → logprob: -13.376517295837402
    5. '(
' → logprob: -14.751517295837402
    6. ')b' → logprob: -15.376517295837402
    7. ' (' → logprob: -16.25151824951172
    8. ' b' → logprob: -17.25151824951172
    9. '(B' → logprob: -18.87651824951172
    10. '	b' → logprob: -19.00151824951172

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.392824874026701e-05
    2. ')
' → logprob: -10.75003433227539
    3. ' )' → logprob: -11.37503433227539
    4. '   ' → logprob: -15.12503433227539
    5. '),' → logprob: -15.37503433227539
    6. '<|end|>' → logprob: -16.50003433227539
    7. ')#' → logprob: -17.00003433227539
    8. '))' → logprob: -17.00003433227539
    9. ')

' → logprob: -17.37503433227539
    10. ')return' → logprob: -17.50003433227539

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09319300949573517
    2. '<|end|>' → logprob: -2.5931930541992188
    3. '    
' → logprob: -5.093193054199219
    4. '\n' → logprob: -5.968193054199219
    5. '```' → logprob: -6.718193054199219
    6. ' ' → logprob: -6.968193054199219
    7. '  
' → logprob: -7.468193054199219
    8. '    ' → logprob: -7.593193054199219
    9. ')' → logprob: -7.843193054199219
    10. '  ' → logprob: -7.843193054199219

Token 67: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9057791829109192
    2. ' edges' → logprob: -1.1557791233062744
    3. 'edges' (adapté à ' edges') → logprob: -1.2807791233062744
    4. '(edges' → logprob: -6.7807793617248535
    5. '<|end|>' → logprob: -7.4057793617248535
    6. ' ' → logprob: -7.7807793617248535
    7. ')' → logprob: -8.155778884887695
    8. '.edges' → logprob: -8.905778884887695
    9. '[' → logprob: -9.155778884887695
    10. '    ' → logprob: -9.280778884887695

Token 68: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.68022444692906e-05
    2. '[a' → logprob: -10.375046730041504
    3. '[' → logprob: -11.125046730041504
    4. 'b' → logprob: -14.375046730041504
    5. '[s' → logprob: -15.875046730041504
    6. '[B' → logprob: -16.62504768371582
    7. '```' → logprob: -17.62504768371582
    8. ' [' → logprob: -18.50004768371582
    9. '[
' → logprob: -19.00004768371582
    10. ')[' → logprob: -19.12504768371582

Token 69: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.04202639311552048
    2. '.append' → logprob: -3.9170262813568115
    3. '].' → logprob: -4.292026519775391
    4. ')' → logprob: -5.417026519775391
    5. '.' → logprob: -5.792026519775391
    6. '<|end|>' → logprob: -10.79202651977539
    7. '.setdefault' → logprob: -10.91702651977539
    8. '}.' → logprob: -10.91702651977539
    9. '[' → logprob: -12.54202651977539
    10. ' .' → logprob: -12.66702651977539

Token 70: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. 'appen' → logprob: -17.125
    3. ' append' → logprob: -17.25
    4. '	append' → logprob: -18.625
    5. '.append' → logprob: -19.625
    6. 'add' → logprob: -21.625
    7. 'app' → logprob: -21.75
    8. '_append' → logprob: -22.125
    9. 'prepend' → logprob: -22.875
    10. '```' → logprob: -23.125

Token 71: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005536287208087742
    2. '(' → logprob: -7.500553607940674
    3. '(
' → logprob: -14.375554084777832
    4. 'a' → logprob: -16.375553131103516
    5. ' (' → logprob: -17.250553131103516
    6. '(A' → logprob: -18.125553131103516
    7. '((' → logprob: -19.125553131103516
    8. '(ai' → logprob: -19.250553131103516
    9. '(

' → logprob: -19.250553131103516
    10. ')' → logprob: -19.500553131103516

Token 72: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.500012397766113
    3. ' )' → logprob: -13.125012397766113
    4. '   ' → logprob: -15.750012397766113
    5. ')return' → logprob: -17.25001335144043
    6. '))' → logprob: -17.37501335144043
    7. ')

' → logprob: -17.62501335144043
    8. ')n' → logprob: -17.75001335144043
    9. '),' → logprob: -18.00001335144043
    10. ')#' → logprob: -18.25001335144043

Token 73: 'color' (ID: 4991)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.001288332510739565
    2. 'color' → logprob: -7.501288414001465
    3. 'dist' → logprob: -8.126288414001465
    4. 'distance' → logprob: -9.501288414001465
    5. 'visit' → logprob: -9.751288414001465
    6. '```' → logprob: -10.001288414001465
    7. 'stack' → logprob: -10.376288414001465
    8. 'def' → logprob: -10.376288414001465
    9. 'time' → logprob: -10.501288414001465
    10. 'parent' → logprob: -10.501288414001465

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05395122617483139
    2. '=' → logprob: -3.1789512634277344
    3. '[' → logprob: -4.553951263427734
    4. 's' → logprob: -8.553951263427734
    5. '[:]' → logprob: -9.803951263427734
    6. '[]' → logprob: -10.428951263427734
    7. ' ' → logprob: -10.928951263427734
    8. '(' → logprob: -11.178951263427734
    9. ')' → logprob: -11.178951263427734
    10. ']' → logprob: -11.428951263427734

Token 75: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08417943865060806
    2. ' [' → logprob: -2.584179401397705
    3. '[-' → logprob: -5.334179401397705
    4. ' [-' → logprob: -7.709179401397705
    5. '{}' → logprob: -13.834179878234863
    6. '['' → logprob: -14.209179878234863
    7. '0' → logprob: -15.084179878234863
    8. '[]' → logprob: -15.584179878234863
    9. '[:]' → logprob: -15.709179878234863
    10. '["' → logprob: -15.834179878234863

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10120854526758194
    2. '-' → logprob: -2.351208448410034
    3. ' ' → logprob: -7.226208686828613
    4. ' -' → logprob: -8.476208686828613
    5. 'False' → logprob: -10.351208686828613
    6. 'None' → logprob: -10.351208686828613
    7. ' None' → logprob: -13.976208686828613
    8. ' False' → logprob: -15.351208686828613
    9. ']' → logprob: -15.851208686828613
    10. ')' → logprob: -15.976208686828613

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13829976320266724
    2. ']*(' → logprob: -2.7632997035980225
    3. ' for' → logprob: -2.8882997035980225
    4. ' ]' → logprob: -4.763299942016602
    5. '(V' → logprob: -7.513299942016602
    6. ']*' → logprob: -7.513299942016602
    7. 'for' → logprob: -7.763299942016602
    8. ' ' → logprob: -9.388299942016602
    9. ' *' → logprob: -9.638299942016602
    10. ' (' → logprob: -10.388299942016602

Token 78: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1533876657485962
    2. '(V' → logprob: -1.1533876657485962
    3. ' *' → logprob: -1.7783876657485962
    4. '*(' → logprob: -2.4033875465393066
    5. ' for' → logprob: -3.5283875465393066
    6. ' (' → logprob: -4.028387546539307
    7. '(' → logprob: -4.278387546539307
    8. '[V' → logprob: -4.278387546539307
    9. '[' → logprob: -4.403387546539307
    10. '+' → logprob: -4.778387546539307

Token 79: ' (' (ID: 350)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -5.288163083605468e-05
    2. ' (' → logprob: -10.250052452087402
    3. '(len' → logprob: -11.375052452087402
    4. '(' → logprob: -12.250052452087402
    5. '((' → logprob: -14.250052452087402
    6. '(v' → logprob: -14.875052452087402
    7. '   ' → logprob: -16.62505340576172
    8. '(Vue' → logprob: -17.62505340576172
    9. '`' → logprob: -17.75005340576172
    10. '\(' → logprob: -17.87505340576172

Token 80: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.4293063282966614
    2. '(V' → logprob: -1.0543062686920166
    3. ' (' → logprob: -8.554306030273438
    4. ' V' → logprob: -8.554306030273438
    5. '   ' → logprob: -9.304306030273438
    6. '(' → logprob: -9.554306030273438
    7. ' ' → logprob: -11.554306030273438
    8. ')V' → logprob: -11.554306030273438
    9. '	V' → logprob: -11.679306030273438
    10. '[V' → logprob: -12.054306030273438

Token 81: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.1054253011243418e-05
    2. ' +' → logprob: -11.000020980834961
    3. '+
' → logprob: -12.500020980834961
    4. '+)' → logprob: -15.000020980834961
    5. '1' → logprob: -16.87502098083496
    6. '＋' → logprob: -17.25002098083496
    7. '<|end|>' → logprob: -17.62502098083496
    8. ')' → logprob: -17.87502098083496
    9. '+

' → logprob: -17.87502098083496
    10. '```' → logprob: -18.37502098083496

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.750005722045898
    3. '```' → logprob: -14.125005722045898
    4. ')' → logprob: -14.375005722045898
    5. '2' → logprob: -14.625005722045898
    6. '<|end|>' → logprob: -15.437505722045898
    7. '   ' → logprob: -16.0625057220459
    8. '+' → logprob: -16.5000057220459
    9. '１' → logprob: -16.7500057220459
    10. '...' → logprob: -16.8125057220459

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.845798710244708e-05
    2. ')
' → logprob: -10.250038146972656
    3. ' )' → logprob: -13.750038146972656
    4. ')
' → logprob: -14.625038146972656
    5. '' → logprob: -15.125038146972656
    6. '```' → logprob: -15.500038146972656
    7. '}' → logprob: -15.750038146972656
    8. ']' → logprob: -15.875038146972656
    9. ')

' → logprob: -16.000038146972656
    10. '),' → logprob: -16.250038146972656

Token 84: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002966127940453589
    2. 'for' → logprob: -8.250296592712402
    3. '
' → logprob: -10.375296592712402
    4. '```' → logprob: -12.875296592712402
    5. ' def' → logprob: -14.625296592712402
    6. '

' → logprob: -15.250296592712402
    7. 'visited' → logprob: -16.00029754638672
    8. '\' → logprob: -16.12529754638672
    9. '
' → logprob: -16.50029754638672
    10. '``' → logprob: -16.62529754638672

Token 85: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.004906039219349623
    2. ' bfs' → logprob: -5.629906177520752
    3. ' ' → logprob: -7.129906177520752
    4. 'dfs' → logprob: -7.754906177520752
    5. ' DFS' → logprob: -10.379905700683594
    6. ' def' → logprob: -11.379905700683594
    7. ' color' → logprob: -11.629905700683594
    8. ' ' → logprob: -11.879905700683594
    9. ' b' → logprob: -12.629905700683594
    10. ' bip' → logprob: -12.629905700683594

Token 86: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07896547019481659
    2. '(node' → logprob: -3.328965425491333
    3. '(u' → logprob: -3.703965425491333
    4. '(v' → logprob: -4.203965663909912
    5. '(vertex' → logprob: -8.703965187072754
    6. '(color' → logprob: -9.078965187072754
    7. '(n' → logprob: -9.203965187072754
    8. '(i' → logprob: -10.203965187072754
    9. '(a' → logprob: -10.453965187072754
    10. '(x' → logprob: -10.953965187072754

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9875325708417222e-05
    2. ' ,' → logprob: -11.000029563903809
    3. ',v' → logprob: -11.875029563903809
    4. '):' → logprob: -12.625029563903809
    5. ',color' → logprob: -13.125029563903809
    6. ',k' → logprob: -15.750029563903809
    7. ',node' → logprob: -15.875029563903809
    8. ':' → logprob: -16.000030517578125
    9. ',c' → logprob: -16.500030517578125
    10. ',u' → logprob: -16.625030517578125

Token 88: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010156603530049324
    2. 'col' → logprob: -7.376015663146973
    3. ' c' → logprob: -8.126015663146973
    4. '1' → logprob: -10.501015663146973
    5. 'd' → logprob: -10.876015663146973
    6. 'clr' → logprob: -11.251015663146973
    7. 'current' → logprob: -11.376015663146973
    8. 'cur' → logprob: -11.751015663146973
    9. 'curr' → logprob: -12.126015663146973
    10. '   ' → logprob: -13.501015663146973

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00043353010551072657
    2. '):
' → logprob: -8.250433921813965
    3. ')' → logprob: -8.750433921813965
    4. ' ):' → logprob: -12.625433921813965
    5. ':' → logprob: -12.750433921813965
    6. '=' → logprob: -12.875433921813965
    7. '):
' → logprob: -13.125433921813965
    8. ',' → logprob: -14.000433921813965
    9. ')：' → logprob: -14.750433921813965
    10. '1' → logprob: -15.375433921813965

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003531774738803506
    2. '	color' → logprob: -6.8785319328308105
    3. ':' → logprob: -7.3785319328308105
    4. ' color' → logprob: -7.5035319328308105
    5. ' ' → logprob: -7.8785319328308105
    6. 'color' → logprob: -8.003531455993652
    7. '    
' → logprob: -8.753531455993652
    8. '<|end|>' → logprob: -9.253531455993652
    9. '  ' → logprob: -9.503531455993652
    10. ')' → logprob: -9.628531455993652

Token 91: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.6948339939117432
    2. 'color' (adapté à ' color') → logprob: -0.8198339939117432
    3. '   ' → logprob: -2.819833993911743
    4. ' if' → logprob: -7.819833755493164
    5. '	color' → logprob: -8.819833755493164
    6. ' ' → logprob: -9.694833755493164
    7. '    ' → logprob: -10.569833755493164
    8. ' for' → logprob: -10.819833755493164
    9. 'if' → logprob: -11.319833755493164
    10. '  ' → logprob: -11.569833755493164

Token 92: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.9153885558771435e-06
    2. '[' → logprob: -12.125005722045898
    3. '[c' → logprob: -15.750005722045898
    4. '[V' → logprob: -15.750005722045898
    5. 'v' → logprob: -16.6250057220459
    6. '[u' → logprob: -17.7500057220459
    7. '```' → logprob: -18.1250057220459
    8. '[val' → logprob: -18.2500057220459
    9. '[node' → logprob: -18.6250057220459
    10. '=v' → logprob: -18.7500057220459

Token 93: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04002097621560097
    2. '=' → logprob: -3.2900209426879883
    3. ']' → logprob: -7.040020942687988
    4. ')=' → logprob: -7.415020942687988
    5. ' =' → logprob: -7.665020942687988
    6. ' )' → logprob: -10.915020942687988
    7. ']=' → logprob: -12.165020942687988
    8. '）' → logprob: -12.790020942687988
    9. ')]' → logprob: -13.915020942687988
    10. '])' → logprob: -14.540020942687988

Token 94: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132782578468323
    2. ' =' → logprob: -1.3132781982421875
    3. '=c' → logprob: -11.313278198242188
    4. '=color' → logprob: -13.563278198242188
    5. '=v' → logprob: -13.938278198242188
    6. '＝' → logprob: -14.063278198242188
    7. '=int' → logprob: -14.938278198242188
    8. '.=' → logprob: -15.938278198242188
    9. '=}' → logprob: -16.188278198242188
    10. ' ' → logprob: -16.188278198242188

Token 95: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000627014203928411
    2. ' c' → logprob: -7.375627040863037
    3. '	c' → logprob: -15.875626564025879
    4. ' ' → logprob: -16.000627517700195
    5. '   ' → logprob: -16.500627517700195
    6. ')c' → logprob: -16.750627517700195
    7. '1' → logprob: -17.375627517700195
    8. '3' → logprob: -17.625627517700195
    9. '-' → logprob: -18.000627517700195
    10. '```' → logprob: -18.125627517700195

Token 96: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7392382025718689
    2. '
' → logprob: -0.8642382025718689
    3. '   ' → logprob: -2.7392382621765137
    4. 'for' → logprob: -3.7392382621765137
    5. '\n' → logprob: -5.489238262176514
    6. '    
' → logprob: -5.739238262176514
    7. '<|end|>' → logprob: -5.739238262176514
    8. '
' → logprob: -7.614238262176514
    9. '' → logprob: -7.614238262176514
    10. '```' → logprob: -8.114237785339355

Token 97: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4743106961250305
    2. '   ' → logprob: -1.4743106365203857
    3. 'for' → logprob: -2.3493106365203857
    4. '
' → logprob: -3.0993106365203857
    5. '    
' → logprob: -5.974310874938965
    6. '<|end|>' → logprob: -6.224310874938965
    7. '' → logprob: -6.974310874938965
    8. '\n' → logprob: -6.974310874938965
    9. '```' → logprob: -7.724310874938965
    10. '	for' → logprob: -7.724310874938965

Token 98: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001171056181192398
    2. ' for' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.126171112060547
    4. '	for' → logprob: -16.001171112060547
    5. 'next' → logprob: -17.126171112060547
    6. '```' → logprob: -17.251171112060547
    7. '    
' → logprob: -20.251171112060547
    8. '1' → logprob: -20.501171112060547
    9. ' ' → logprob: -20.751171112060547
    10. '  ' → logprob: -21.001171112060547

Token 99: ' nv' (ID: 68641)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0816800594329834
    2. 'nv' → logprob: -3.2066800594329834
    3. 'to' → logprob: -4.3316802978515625
    4. 'n' → logprob: -4.5816802978515625
    5. 'w' → logprob: -4.5816802978515625
    6. 'nei' → logprob: -6.7066802978515625
    7. 'e' → logprob: -7.3316802978515625
    8. 'next' → logprob: -7.3316802978515625
    9. 'neighbor' → logprob: -7.4566802978515625
    10. 'nx' → logprob: -7.4566802978515625

Token 100: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006754324771463871
    2. 'in' → logprob: -5.006754398345947
    3. ' ' → logprob: -10.381753921508789
    4. '	in' → logprob: -12.256753921508789
    5. ',' → logprob: -13.631753921508789
    6. '<|end|>' → logprob: -14.381753921508789
    7. '  ' → logprob: -14.881753921508789
    8. 's' → logprob: -15.131753921508789
    9. 'n' → logprob: -15.756753921508789
    10. ',in' → logprob: -16.13175392150879

Token 101: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.142756387591362
    2. ' edges' → logprob: -2.017756462097168
    3. '(edges' → logprob: -9.517756462097168
    4. '   ' → logprob: -12.517756462097168
    5. '.edges' → logprob: -13.142756462097168
    6. ' ' → logprob: -13.767756462097168
    7. '_edges' → logprob: -15.142756462097168
    8. 'edge' → logprob: -15.642756462097168
    9. '[' → logprob: -15.892756462097168
    10. 'Edges' → logprob: -16.08025550842285

Token 102: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.875000953674316
    3. 'v' → logprob: -15.750000953674316
    4. '```' → logprob: -18.0
    5. ' [' → logprob: -19.0
    6. '[s' → logprob: -19.125
    7. '[c' → logprob: -19.5
    8. '	v' → logprob: -19.875
    9. '<v' → logprob: -19.875
    10. '[V' → logprob: -19.875

Token 103: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0027576873544603586
    2. '):' → logprob: -6.252757549285889
    3. ':' → logprob: -7.377757549285889
    4. ']' → logprob: -9.002758026123047
    5. ']:
' → logprob: -10.252758026123047
    6. '>:' → logprob: -10.877758026123047
    7. '}:' → logprob: -11.752758026123047
    8. ']:
' → logprob: -11.877758026123047
    9. ']):' → logprob: -12.752758026123047
    10. '   ' → logprob: -13.002758026123047

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000343210413120687
    2. ',' → logprob: -9.250343322753906
    3. ' if' → logprob: -9.250343322753906
    4. '    ' → logprob: -9.875343322753906
    5. '        
' → logprob: -10.625343322753906
    6. '<|end|>' → logprob: -11.000343322753906
    7. '   ' → logprob: -11.125343322753906
    8. '```' → logprob: -11.625343322753906
    9. ' ' → logprob: -11.750343322753906
    10. '     ' → logprob: -12.375343322753906

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6383798718452454
    2. 'if' (adapté à ' if') → logprob: -1.1383798122406006
    3. '       ' → logprob: -1.8883798122406006
    4. '           ' → logprob: -8.88838005065918
    5. '0' → logprob: -11.13838005065918
    6. '```' → logprob: -11.13838005065918
    7. '
' → logprob: -12.26338005065918
    8. '        
' → logprob: -12.51338005065918
    9. '   ' → logprob: -12.51338005065918
    10. '        ' → logprob: -12.63838005065918

Token 106: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.12700128555297852
    2. ' color' → logprob: -2.1270012855529785
    3. ' not' → logprob: -9.75200080871582
    4. 'not' → logprob: -11.50200080871582
    5. '   ' → logprob: -13.00200080871582
    6. '	color' → logprob: -13.87700080871582
    7. '           ' → logprob: -14.37700080871582
    8. '       ' → logprob: -15.75200080871582
    9. '.color' → logprob: -15.87700080871582
    10. '=color' → logprob: -15.87700080871582

Token 107: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0006620417116209865
    2. '[v' → logprob: -7.625661849975586
    3. '[' → logprob: -9.625661849975586
    4. 'nv' → logprob: -9.875661849975586
    5. '==' → logprob: -10.500661849975586
    6. '```' → logprob: -11.250661849975586
    7. '   ' → logprob: -13.375661849975586
    8. '	n' → logprob: -13.625661849975586
    9. ' nv' → logprob: -13.625661849975586
    10. '``' → logprob: -14.000661849975586

Token 108: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005166939808987081
    2. '[v' → logprob: -7.625516891479492
    3. '[' → logprob: -11.125516891479492
    4. '[n' → logprob: -11.250516891479492
    5. '```' → logprob: -14.250516891479492
    6. ' nv' → logprob: -16.625516891479492
    7. 'nv' → logprob: -16.750516891479492
    8. ']' → logprob: -16.875516891479492
    9. '[email' → logprob: -17.625516891479492
    10. '``' → logprob: -17.625516891479492

Token 109: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3519735634326935
    2. ' ==' → logprob: -1.351973533630371
    3. ']==' → logprob: -3.476973533630371
    4. ']' → logprob: -5.476973533630371
    5. ')==' → logprob: -6.726973533630371
    6. ')' → logprob: -6.976973533630371
    7. ' ' → logprob: -8.726973533630371
    8. '```' → logprob: -8.976973533630371
    9. '=' → logprob: -9.101973533630371
    10. '()==' → logprob: -9.851973533630371

Token 110: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07021040469408035
    2. ' ==' → logprob: -2.6952104568481445
    3. ']==' → logprob: -9.070210456848145
    4. ')==' → logprob: -10.070210456848145
    5. '=' → logprob: -10.320210456848145
    6. '0' → logprob: -10.820210456848145
    7. '===' → logprob: -11.070210456848145
    8. '()==' → logprob: -11.445210456848145
    9. '==-' → logprob: -11.445210456848145
    10. '==
' → logprob: -12.070210456848145

Token 111: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06171151623129845
    2. 'c' → logprob: -2.936711549758911
    3. ' ' → logprob: -5.061711311340332
    4. ' c' → logprob: -7.936711311340332
    5. 'color' → logprob: -9.436711311340332
    6. '   ' → logprob: -10.936711311340332
    7. ' color' → logprob: -11.811711311340332
    8. '```' → logprob: -12.686711311340332
    9. '	c' → logprob: -13.186711311340332
    10. '  ' → logprob: -13.436711311340332

Token 112: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16541358828544617
    2. 'c' → logprob: -1.9154136180877686
    3. ' ' → logprob: -5.5404133796691895
    4. ' c' → logprob: -6.7904133796691895
    5. 'color' → logprob: -9.540413856506348
    6. '   ' → logprob: -10.540413856506348
    7. ' color' → logprob: -11.790413856506348
    8. '	c' → logprob: -12.165413856506348
    9. '```' → logprob: -12.415413856506348
    10. '  ' → logprob: -12.415413856506348

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020640453323721886
    2. ':
' → logprob: -3.8956403732299805
    3. ' :' → logprob: -10.52064037322998
    4. ':return' → logprob: -11.14564037322998
    5. '):' → logprob: -11.27064037322998
    6. '       ' → logprob: -11.39564037322998
    7. ':
' → logprob: -12.02064037322998
    8. ' :
' → logprob: -12.14564037322998
    9. '):
' → logprob: -12.27064037322998
    10. ' or' → logprob: -12.52064037322998

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.053999561816453934
    2. '       ' → logprob: -3.678999662399292
    3. ' if' → logprob: -3.803999662399292
    4. 'if' → logprob: -6.928999423980713
    5. ' return' → logprob: -7.303999423980713
    6. ',' → logprob: -7.303999423980713
    7. ' and' → logprob: -7.428999423980713
    8. ':' → logprob: -8.053999900817871
    9. '	       ' → logprob: -8.428999900817871
    10. 'return' → logprob: -8.678999900817871

Token 115: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5159984230995178
    2. 'dfs' → logprob: -1.015998363494873
    3. ' if' → logprob: -3.515998363494873
    4. '               ' → logprob: -4.765998363494873
    5. ' dfs' → logprob: -6.265998363494873
    6. '           ' → logprob: -7.265998363494873
    7. '```' → logprob: -9.390998840332031
    8. '
' → logprob: -9.640998840332031
    9. 'return' → logprob: -10.015998840332031
    10. 'd' → logprob: -12.015998840332031

Token 116: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.30249491333961487
    2. 'dfs' → logprob: -1.9274948835372925
    3. ' not' → logprob: -2.177495002746582
    4. ' dfs' → logprob: -6.302495002746582
    5. '```' → logprob: -9.177495002746582
    6. '   ' → logprob: -9.427495002746582
    7. '(not' → logprob: -9.552495002746582
    8. '	not' → logprob: -10.927495002746582
    9. '!' → logprob: -11.177495002746582
    10. 'd' → logprob: -11.427495002746582

Token 117: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.16023468971252441
    2. ' dfs' → logprob: -1.9102346897125244
    3. 'df' → logprob: -12.410234451293945
    4. 'd' → logprob: -12.535234451293945
    5. '   ' → logprob: -13.535234451293945
    6. '
' → logprob: -15.035234451293945
    7. '```' → logprob: -15.535234451293945
    8. ' ' → logprob: -15.910234451293945
    9. ' DFS' → logprob: -16.035234451293945
    10. 'DFS' → logprob: -16.035234451293945

Token 118: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.280175097752362e-05
    2. '(' → logprob: -9.500082969665527
    3. ' (' → logprob: -13.375082969665527
    4. ')' → logprob: -13.500082969665527
    5. '(
' → logprob: -13.500082969665527
    6. '```' → logprob: -14.125082969665527
    7. '(nx' → logprob: -14.125082969665527
    8. '<|end|>' → logprob: -14.750082969665527
    9. '(nb' → logprob: -15.125082969665527
    10. ')(' → logprob: -15.125082969665527

Token 119: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000433291686931625
    2. '(n' → logprob: -7.875433444976807
    3. ' nv' → logprob: -10.875432968139648
    4. '```' → logprob: -11.500432968139648
    5. 'nv' → logprob: -11.625432968139648
    6. '(v' → logprob: -12.250432968139648
    7. ')' → logprob: -13.125432968139648
    8. 'V' → logprob: -13.375432968139648
    9. '[n' → logprob: -13.500432968139648
    10. '
' → logprob: -14.500432968139648

Token 120: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08875328302383423
    2. '(-' → logprob: -2.9637532234191895
    3. '(n' → logprob: -3.8387532234191895
    4. '(v' → logprob: -5.0887532234191895
    5. '(c' → logprob: -5.3387532234191895
    6. '3' → logprob: -8.088753700256348
    7. '((' → logprob: -8.838753700256348
    8. '(
' → logprob: -9.213753700256348
    9. ' (' → logprob: -9.713753700256348
    10. ',' → logprob: -10.088753700256348

Token 121: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.14621137082576752
    2. '-' → logprob: -2.0212113857269287
    3. ' -' → logprob: -6.52121114730835
    4. '-c' → logprob: -7.02121114730835
    5. ' ' → logprob: -7.64621114730835
    6. '```' → logprob: -7.77121114730835
    7. '   ' → logprob: -9.146211624145508
    8. 'c' → logprob: -10.521211624145508
    9. '`' → logprob: -10.896211624145508
    10. '``' → logprob: -11.521211624145508

Token 122: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1838802546262741
    2. '-' → logprob: -1.8088802099227905
    3. ' -' → logprob: -5.93388032913208
    4. ' ' → logprob: -7.18388032913208
    5. '```' → logprob: -7.93388032913208
    6. '   ' → logprob: -9.058879852294922
    7. '-c' → logprob: -9.308879852294922
    8. '``' → logprob: -10.996379852294922
    9. '(' → logprob: -11.121379852294922
    10. '
' → logprob: -11.371379852294922

Token 123: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.15136075019836426
    2. '-' → logprob: -2.2763607501983643
    3. '-c' → logprob: -3.2763607501983643
    4. 'c' → logprob: -10.776360511779785
    5. ' c' → logprob: -11.901360511779785
    6. ' ' → logprob: -12.776360511779785
    7. '```' → logprob: -13.401360511779785
    8. '6' → logprob: -13.526360511779785
    9. '   ' → logprob: -13.651360511779785
    10. '3' → logprob: -13.901360511779785

Token 124: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.629921436891891e-05
    2. ' c' → logprob: -10.62502670288086
    3. ')c' → logprob: -13.87502670288086
    4. 'color' → logprob: -15.00002670288086
    5. ' ' → logprob: -15.25002670288086
    6. '<|end|>' → logprob: -16.00002670288086
    7. ')' → logprob: -16.12502670288086
    8. '	c' → logprob: -16.75002670288086
    9. '  ' → logprob: -17.12502670288086
    10. '```' → logprob: -17.12502670288086

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13557836413383484
    2. '):
' → logprob: -2.1355783939361572
    3. ')' → logprob: -4.760578155517578
    4. '):
' → logprob: -10.510578155517578
    5. '):

' → logprob: -10.885578155517578
    6. ' ):' → logprob: -13.385578155517578
    7. ':' → logprob: -13.385578155517578
    8. ')：' → logprob: -13.885578155517578
    9. '   ' → logprob: -14.635578155517578
    10. ')return' → logprob: -14.760578155517578

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01019102893769741
    2. ':return' → logprob: -5.010190963745117
    3. ':' → logprob: -6.385190963745117
    4. 'return' → logprob: -7.135190963745117
    5. '):' → logprob: -8.135190963745117
    6. '           ' → logprob: -8.385190963745117
    7. '                   ' → logprob: -8.760190963745117
    8. '              ' → logprob: -9.135190963745117
    9. ':
' → logprob: -9.760190963745117
    10. ' return' → logprob: -10.510190963745117

Token 127: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17416603863239288
    2. '                   ' → logprob: -1.9241660833358765
    3. '               ' → logprob: -4.799166202545166
    4. 'False' → logprob: -5.299166202545166
    5. '
' → logprob: -8.799165725708008
    6. ' return' → logprob: -8.924165725708008
    7. ':return' → logprob: -8.924165725708008
    8. 'false' → logprob: -9.549165725708008
    9. '                       ' → logprob: -10.174165725708008
    10. '```' → logprob: -10.549165725708008

Token 128: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.7697225252486533e-06
    2. ' False' → logprob: -12.500003814697266
    3. 'True' → logprob: -18.750003814697266
    4. '(False' → logprob: -20.750003814697266
    5. '```' → logprob: -21.250003814697266
    6. 'F' → logprob: -21.750003814697266
    7. '=False' → logprob: -22.250003814697266
    8. '0' → logprob: -23.000003814697266
    9. 'false' → logprob: -23.125003814697266
    10. '   ' → logprob: -24.000003814697266

Token 129: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007853295537643135
    2. '           ' → logprob: -8.375784873962402
    3. 'elif' → logprob: -8.750784873962402
    4. '
' → logprob: -8.875784873962402
    5. '<|end|>' → logprob: -9.875784873962402
    6. '   ' → logprob: -10.250784873962402
    7. ',' → logprob: -10.375784873962402
    8. ')' → logprob: -10.375784873962402
    9. '        
' → logprob: -10.625784873962402
    10. '    
' → logprob: -10.750784873962402

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002512071805540472
    2. '           ' → logprob: -8.375250816345215
    3. 'elif' → logprob: -11.750250816345215
    4. '   ' → logprob: -12.000250816345215
    5. 'return' → logprob: -13.125250816345215
    6. '<|end|>' → logprob: -14.000250816345215
    7. 'else' → logprob: -14.375250816345215
    8. '      ' → logprob: -14.375250816345215
    9. '```' → logprob: -14.500250816345215
    10. '        
' → logprob: -15.000250816345215

Token 131: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2829754948616028
    2. 'elif' (adapté à ' elif') → logprob: -1.407975435256958
    3. ' elif' → logprob: -6.532975673675537
    4. '	elif' → logprob: -8.532975196838379
    5. '           ' → logprob: -9.032975196838379
    6. 'else' → logprob: -10.657975196838379
    7. '   ' → logprob: -11.032975196838379
    8. '<|end|>' → logprob: -12.407975196838379
    9. '```' → logprob: -13.282975196838379
    10. ')' → logprob: -13.907975196838379

Token 132: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0009119403548538685
    2. ' color' → logprob: -7.000911712646484
    3. '	color' → logprob: -15.750911712646484
    4. '(color' → logprob: -16.375911712646484
    5. '   ' → logprob: -16.875911712646484
    6. '[color' → logprob: -17.375911712646484
    7. 'c' → logprob: -17.625911712646484
    8. ' ' → logprob: -17.750911712646484
    9. 'col' → logprob: -18.125911712646484
    10. '```' → logprob: -18.250911712646484

Token 133: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -8.578184497309849e-05
    2. 'nv' → logprob: -9.500085830688477
    3. '[' → logprob: -12.500085830688477
    4. '[v' → logprob: -12.750085830688477
    5. '```' → logprob: -13.750085830688477
    6. ' nv' → logprob: -14.625085830688477
    7. ' [' → logprob: -14.625085830688477
    8. 'n' → logprob: -15.437585830688477
    9. '   ' → logprob: -15.562585830688477
    10. '[
' → logprob: -16.125085830688477

Token 134: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004109392408281565
    2. '[v' → logprob: -5.7541093826293945
    3. '[n' → logprob: -7.0041093826293945
    4. ']' → logprob: -11.504109382629395
    5. 'nv' → logprob: -12.129109382629395
    6. '[' → logprob: -13.129109382629395
    7. '```' → logprob: -13.379109382629395
    8. ' nv' → logprob: -14.004109382629395
    9. ')' → logprob: -14.629109382629395
    10. 'в' → logprob: -15.129109382629395

Token 135: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034496109932661057
    2. ']==' → logprob: -3.4094960689544678
    3. '==' → logprob: -7.159496307373047
    4. ' ]' → logprob: -10.034496307373047
    5. ']!=' → logprob: -11.034496307373047
    6. ' ==' → logprob: -12.534496307373047
    7. ')' → logprob: -12.784496307373047
    8. '']==' → logprob: -13.534496307373047
    9. '[' → logprob: -13.659496307373047
    10. '```' → logprob: -13.909496307373047

Token 136: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007681038696318865
    2. ' ==' → logprob: -4.882680892944336
    3. ']==' → logprob: -9.882680892944336
    4. '```' → logprob: -11.507680892944336
    5. ')==' → logprob: -12.257680892944336
    6. '==
' → logprob: -12.882680892944336
    7. '===' → logprob: -13.132680892944336
    8. '=' → logprob: -13.507680892944336
    9. '()==' → logprob: -14.007680892944336
    10. '']==' → logprob: -14.132680892944336

Token 137: ' color' (ID: 3089)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6341258883476257
    2. 'color' → logprob: -0.7591258883476257
    3. ' color' → logprob: -6.759125709533691
    4. ' c' → logprob: -8.009125709533691
    5. '   ' → logprob: -11.759125709533691
    6. '	color' → logprob: -11.884125709533691
    7. '	c' → logprob: -12.384125709533691
    8. ' ' → logprob: -12.884125709533691
    9. '=color' → logprob: -12.884125709533691
    10. '```' → logprob: -13.634125709533691

Token 138: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -7.493430894101039e-05
    2. 'v' → logprob: -9.500075340270996
    3. '[' → logprob: -18.00007438659668
    4. '[c' → logprob: -19.37507438659668
    5. '	v' → logprob: -20.12507438659668
    6. '```' → logprob: -20.37507438659668
    7. ' v' → logprob: -21.75007438659668
    8. '(v' → logprob: -21.87507438659668
    9. '[color' → logprob: -23.12507438659668
    10. '<v' → logprob: -23.37507438659668

Token 139: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06475888192653656
    2. '):
' → logprob: -2.814758777618408
    3. ':' → logprob: -6.064758777618408
    4. ')' → logprob: -7.939758777618408
    5. '):
' → logprob: -10.314759254455566
    6. ':
' → logprob: -10.439759254455566
    7. ':return' → logprob: -11.064759254455566
    8. ' ):' → logprob: -12.189759254455566
    9. ']:' → logprob: -12.439759254455566
    10. '):

' → logprob: -12.439759254455566

Token 140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018697108316700906
    2. '               ' → logprob: -9.125186920166016
    3. 'return' → logprob: -9.750186920166016
    4. ' return' → logprob: -10.875186920166016
    5. '```' → logprob: -14.875186920166016
    6. '       ' → logprob: -15.750186920166016
    7. ':return' → logprob: -16.500186920166016
    8. '0' → logprob: -16.625186920166016
    9. '		' → logprob: -16.875186920166016
    10. '
' → logprob: -16.875186920166016

Token 141: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.022204959765076637
    2. ' return' → logprob: -4.022204875946045
    3. '               ' → logprob: -5.772204875946045
    4. '       ' → logprob: -7.522204875946045
    5. '           ' → logprob: -8.022205352783203
    6. '   ' → logprob: -9.897205352783203
    7. '	return' → logprob: -11.522205352783203
    8. ':return' → logprob: -12.897205352783203
    9. '
' → logprob: -13.772205352783203
    10. '                   ' → logprob: -14.522205352783203

Token 142: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. '(False' → logprob: -21.750045776367188
    4. 'True' → logprob: -22.750045776367188
    5. 'F' → logprob: -23.625045776367188
    6. '=False' → logprob: -23.875045776367188
    7. '.False' → logprob: -25.250045776367188
    8. '_false' → logprob: -25.375045776367188
    9. 'Fal' → logprob: -25.625045776367188
    10. 'Falsy' → logprob: -26.625045776367188

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007486367831006646
    2. '
' → logprob: -7.375748634338379
    3. 'return' → logprob: -9.375748634338379
    4. '    
' → logprob: -11.125748634338379
    5. ' return' → logprob: -11.250748634338379
    6. '       ' → logprob: -12.500748634338379
    7. '           ' → logprob: -13.625748634338379
    8. '  
' → logprob: -14.125748634338379
    9. ',' → logprob: -14.375748634338379
    10. '```' → logprob: -14.625748634338379

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003111519617959857
    2. 'return' → logprob: -8.250310897827148
    3. ' return' → logprob: -10.250310897827148
    4. '```' → logprob: -12.250310897827148
    5. '       ' → logprob: -12.625310897827148
    6. '
' → logprob: -13.000310897827148
    7. '	return' → logprob: -13.875310897827148
    8. ':return' → logprob: -14.125310897827148
    9. '    
' → logprob: -14.375310897827148
    10. 'True' → logprob: -14.375310897827148

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3227291703224182
    2. '   ' → logprob: -1.3227291107177734
    3. ' return' → logprob: -4.697729110717773
    4. 'True' → logprob: -9.572729110717773
    5. ' ' → logprob: -9.697729110717773
    6. '    
' → logprob: -10.072729110717773
    7. '
' → logprob: -10.072729110717773
    8. '  ' → logprob: -10.822729110717773
    9. '  
' → logprob: -10.947729110717773
    10. '```' → logprob: -11.072729110717773

Token 146: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. 'False' → logprob: -21.25009536743164
    4. '(True' → logprob: -21.25009536743164
    5. 'Tr' → logprob: -22.00009536743164
    6. '=True' → logprob: -23.25009536743164
    7. '.True' → logprob: -25.50009536743164
    8. '_true' → logprob: -26.00009536743164
    9. 'true' → logprob: -26.00009536743164
    10. 'T' → logprob: -26.37509536743164

Token 147: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03094201162457466
    2. 'result' → logprob: -3.655941963195801
    3. 'is' → logprob: -5.780941963195801
    4. 'answer' → logprob: -7.530941963195801
    5. 'b' → logprob: -7.780941963195801
    6. 'possible' → logprob: -8.5309419631958
    7. ' for' → logprob: -9.0309419631958
    8. 'ans' → logprob: -9.7809419631958
    9. 'ok' → logprob: -10.0309419631958
    10. 'visited' → logprob: -10.0309419631958

Token 148: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01933102495968342
    2. 'result' → logprob: -4.519330978393555
    3. 'ans' → logprob: -5.894330978393555
    4. 'is' → logprob: -6.019330978393555
    5. 'answer' → logprob: -6.144330978393555
    6. 'possible' → logprob: -7.519330978393555
    7. 'ok' → logprob: -9.144330978393555
    8. 'b' → logprob: -9.269330978393555
    9. 'res' → logprob: -9.269330978393555
    10. 'print' → logprob: -10.394330978393555

Token 149: ' Check' (ID: 6208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06365455687046051
    2. 'result' → logprob: -3.188654661178589
    3. 'all' → logprob: -5.31365442276001
    4. 'print' → logprob: -5.31365442276001
    5. 'ans' → logprob: -5.56365442276001
    6. 'is' → logprob: -6.43865442276001
    7. 'possible' → logprob: -6.68865442276001
    8. 'if' → logprob: -7.06365442276001
    9. 'answer' → logprob: -7.06365442276001
    10. 'res' → logprob: -7.56365442276001

Token 150: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10518847405910492
    2. ' for' → logprob: -3.3551883697509766
    3. 'result' → logprob: -3.6051883697509766
    4. 'all' → logprob: -3.7301883697509766
    5. 'b' → logprob: -5.355188369750977
    6. 'if' → logprob: -5.605188369750977
    7. '(' → logprob: -6.605188369750977
    8. 'color' → logprob: -6.855188369750977
    9. ' all' → logprob: -6.855188369750977
    10. ' bip' → logprob: -7.105188369750977

Token 151: ' graph' (ID: 7465)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.20230336487293243
    2. ' the' → logprob: -2.327303409576416
    3. 'b' → logprob: -2.952303409576416
    4. 'graph' → logprob: -4.327303409576416
    5. 'dfs' → logprob: -4.702303409576416
    6. 'all' → logprob: -5.702303409576416
    7. ' all' → logprob: -6.577303409576416
    8. 'there' → logprob: -6.827303409576416
    9. ' there' → logprob: -6.952303409576416
    10. ' graph' → logprob: -7.077303409576416

Token 152: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2284880429506302
    2. 'is' → logprob: -1.6034880876541138
    3. 'b' → logprob: -5.978487968444824
    4. ' can' → logprob: -8.603487968444824
    5. ' bip' → logprob: -9.103487968444824
    6. 'can' → logprob: -9.728487968444824
    7. ' ' → logprob: -9.853487968444824
    8. '#' → logprob: -10.478487968444824
    9. 's' → logprob: -11.228487968444824
    10. '.is' → logprob: -11.478487968444824

Token 153: ' bip' (ID: 54467)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04421205818653107
    2. ' bip' → logprob: -3.1692121028900146
    3. ' b' → logprob: -7.7942118644714355
    4. 'a' → logprob: -8.669212341308594
    5. 'bi' → logprob: -8.794212341308594
    6. ' ' → logprob: -9.294212341308594
    7. '```' → logprob: -9.794212341308594
    8. '	b' → logprob: -9.919212341308594
    9. ' a' → logprob: -9.919212341308594
    10. '   ' → logprob: -10.294212341308594

Token 154: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.00028624574770219624
    2. 'ar' → logprob: -8.375286102294922
    3. '```' → logprob: -10.500286102294922
    4. 'a' → logprob: -11.625286102294922
    5. 'ite' → logprob: -12.375286102294922
    6. 'arte' → logprob: -12.750286102294922
    7. '

' → logprob: -12.750286102294922
    8. '
' → logprob: -13.625286102294922
    9. 'арт' → logprob: -13.625286102294922
    10. '**' → logprob: -13.875286102294922

Token 155: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00026205103495158255
    2. '```' → logprob: -8.500262260437012
    3. '-' → logprob: -11.375262260437012
    4. '**' → logprob: -11.875262260437012
    5. '_' → logprob: -12.125262260437012
    6. 'e' → logprob: -12.250262260437012
    7. '*' → logprob: -12.500262260437012
    8. 'ate' → logprob: -12.875262260437012
    9. '\' → logprob: -13.000262260437012
    10. '#' → logprob: -13.125262260437012

Token 156: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11287341266870499
    2. 'result' → logprob: -2.4878733158111572
    3. 'is' → logprob: -4.112873554229736
    4. 'answer' → logprob: -5.487873554229736
    5. 'ans' → logprob: -6.237873554229736
    6. 'res' → logprob: -8.112873077392578
    7. ' for' → logprob: -8.237873077392578
    8. 'possible' → logprob: -8.487873077392578
    9. 'b' → logprob: -8.737873077392578
    10. 'print' → logprob: -9.362873077392578

Token 157: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025084396824240685
    2. 'result' → logprob: -3.9000844955444336
    3. 'is' → logprob: -6.275084495544434
    4. 'ans' → logprob: -6.525084495544434
    5. 'res' → logprob: -7.650084495544434
    6. 'answer' → logprob: -7.775084495544434
    7. 'print' → logprob: -9.400084495544434
    8. 'possible' → logprob: -9.650084495544434
    9. ' for' → logprob: -10.275084495544434
    10. 'b' → logprob: -10.525084495544434

Token 158: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0781807228922844
    2. ' i' → logprob: -3.0781807899475098
    3. 'v' → logprob: -3.5781807899475098
    4. 'i' → logprob: -6.70318078994751
    5. ' vertex' → logprob: -13.203180313110352
    6. ' node' → logprob: -13.328180313110352
    7. '_v' → logprob: -14.453180313110352
    8. ' ' → logprob: -14.578180313110352
    9. ' range' → logprob: -14.828180313110352
    10. '	v' → logprob: -15.203180313110352

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03820466622710228
    2. 'in' → logprob: -3.2882046699523926
    3. ' ' → logprob: -8.913204193115234
    4. '	in' → logprob: -11.788204193115234
    5. 'n' → logprob: -12.038204193115234
    6. 'range' → logprob: -12.163204193115234
    7. ' i' → logprob: -12.788204193115234
    8. '  ' → logprob: -13.538204193115234
    9. ' ' → logprob: -13.913204193115234
    10. ',' → logprob: -14.288204193115234

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326231360435486
    2. ' range' → logprob: -1.3132623434066772
    3. '(range' → logprob: -14.688261985778809
    4. '	range' → logprob: -16.188262939453125
    5. ' ' → logprob: -16.688262939453125
    6. '1' → logprob: -17.813262939453125
    7. ' xrange' → logprob: -18.563262939453125
    8. 'ange' → logprob: -18.938262939453125
    9. '.range' → logprob: -19.063262939453125
    10. 'rang' → logprob: -19.438262939453125

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '1' → logprob: -18.0
    3. ' (' → logprob: -19.25
    4. '(
' → logprob: -20.75
    5. ',' → logprob: -22.875
    6. '(V' → logprob: -23.25
    7. ' ' → logprob: -23.375
    8. 'in' → logprob: -23.625
    9. ' in' → logprob: -24.375
    10. '((' → logprob: -24.75

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.9424725148128346e-05
    2. '(' → logprob: -10.000049591064453
    3. ' ' → logprob: -13.000049591064453
    4. '   ' → logprob: -13.375049591064453
    5. '(V' → logprob: -16.625049591064453
    6. 'V' → logprob: -18.250049591064453
    7. '	' → logprob: -19.125049591064453
    8. ',' → logprob: -19.375049591064453
    9. '１' → logprob: -20.000049591064453
    10. '
' → logprob: -20.125049591064453

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. ' ,' → logprob: -10.125043869018555
    3. ',V' → logprob: -12.625043869018555
    4. '1' → logprob: -17.625043869018555
    5. ',len' → logprob: -18.125043869018555
    6. '   ' → logprob: -18.375043869018555
    7. 'to' → logprob: -18.500043869018555
    8. 'in' → logprob: -18.625043869018555
    9. '_,' → logprob: -18.750043869018555
    10. ',
' → logprob: -19.125043869018555

Token 164: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -7.600714161526412e-05
    2. ' V' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.750076293945312
    4. '	V' → logprob: -16.875076293945312
    5. ' ' → logprob: -18.375076293945312
    6. '  ' → logprob: -19.500076293945312
    7. 'v' → logprob: -19.625076293945312
    8. '(V' → logprob: -20.125076293945312
    9. '    ' → logprob: -20.125076293945312
    10. 'len' → logprob: -20.250076293945312

Token 165: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004309076175559312
    2. ' +' → logprob: -7.750431060791016
    3. '+
' → logprob: -15.250431060791016
    4. '＋' → logprob: -17.250431060791016
    5. '()+' → logprob: -20.250431060791016
    6. '+)' → logprob: -20.500431060791016
    7. '
' → logprob: -20.750431060791016
    8. ')+' → logprob: -21.000431060791016
    9. '+

' → logprob: -21.125431060791016
    10. '+i' → logprob: -21.250431060791016

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '2' → logprob: -15.125000953674316
    4. ')' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.625001907348633
    6. 'V' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. '+' → logprob: -18.875001907348633
    9. '(' → logprob: -20.000001907348633
    10. '(V' → logprob: -20.250001907348633

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5784668922424316
    2. '):
' → logprob: -0.8284668922424316
    3. ':' → logprob: -6.078466892242432
    4. ')' → logprob: -9.203466415405273
    5. ':
' → logprob: -9.328466415405273
    6. '):
' → logprob: -10.328466415405273
    7. '   ' → logprob: -12.328466415405273
    8. ' ):
' → logprob: -13.203466415405273
    9. ' ):' → logprob: -13.578466415405273
    10. '():
' → logprob: -14.078466415405273

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1221437081694603
    2. ' if' → logprob: -2.4971437454223633
    3. 'if' → logprob: -3.4971437454223633
    4. ':' → logprob: -7.122143745422363
    5. '<|end|>' → logprob: -7.622143745422363
    6. '    
' → logprob: -7.872143745422363
    7. ' ' → logprob: -8.247143745422363
    8. '	if' → logprob: -8.622143745422363
    9. '```' → logprob: -9.997143745422363
    10. '  ' → logprob: -10.122143745422363

Token 169: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4098917841911316
    2. '   ' → logprob: -1.1598918437957764
    3. ' if' → logprob: -3.7848918437957764
    4. '	if' → logprob: -10.284892082214355
    5. '
' → logprob: -12.534892082214355
    6. '    
' → logprob: -12.784892082214355
    7. 'If' → logprob: -13.284892082214355
    8. '       ' → logprob: -13.534892082214355
    9. ' ' → logprob: -14.409892082214355
    10. ':' → logprob: -14.534892082214355

Token 170: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.20143848657608032
    2. 'color' → logprob: -1.7014384269714355
    3. ' not' → logprob: -11.451438903808594
    4. '	color' → logprob: -12.326438903808594
    5. 'not' → logprob: -12.326438903808594
    6. ' ' → logprob: -13.326438903808594
    7. '   ' → logprob: -13.451438903808594
    8. ' ' → logprob: -14.701438903808594
    9. '(color' → logprob: -14.701438903808594
    10. '[color' → logprob: -14.951438903808594

Token 171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[' → logprob: -17.125
    3. 'i' → logprob: -17.625
    4. '==' → logprob: -20.125
    5. '```' → logprob: -20.25
    6. '[v' → logprob: -21.125
    7. '[I' → logprob: -21.25
    8. '[
' → logprob: -21.625
    9. '[node' → logprob: -22.25
    10. ' [' → logprob: -22.375

Token 172: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35548123717308044
    2. ']' → logprob: -1.4804812669754028
    3. ']==' → logprob: -2.8554811477661133
    4. ')' → logprob: -4.480481147766113
    5. ' ==' → logprob: -6.105481147766113
    6. ')==' → logprob: -7.605481147766113
    7. '0' → logprob: -11.230481147766113
    8. '=' → logprob: -11.355481147766113
    9. '```' → logprob: -12.105481147766113
    10. ' ]' → logprob: -12.480481147766113

Token 173: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.313334196805954
    2. ' ==' → logprob: -1.3133342266082764
    3. ' ' → logprob: -10.813334465026855
    4. '0' → logprob: -10.938334465026855
    5. '=' → logprob: -11.188334465026855
    6. ']==' → logprob: -11.438334465026855
    7. ')==' → logprob: -11.938334465026855
    8. '==
' → logprob: -13.438334465026855
    9. '===' → logprob: -14.813334465026855
    10. ' =' → logprob: -14.938334465026855

Token 174: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -14.875261306762695
    4. '  ' → logprob: -17.750261306762695
    5. '۰' → logprob: -18.375261306762695
    6. '    ' → logprob: -19.000261306762695
    7. '０' → logprob: -19.937761306762695
    8. '	' → logprob: -20.500261306762695
    9. ')' → logprob: -20.562761306762695
    10. '00' → logprob: -20.625261306762695

Token 175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.37502670288086
    4. '  ' → logprob: -20.25002670288086
    5. '۰' → logprob: -21.00002670288086
    6. '```' → logprob: -21.75002670288086
    7. ')' → logprob: -22.00002670288086
    8. '00' → logprob: -22.12502670288086
    9. '０' → logprob: -22.37502670288086
    10. '    ' → logprob: -22.62502670288086

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01131270732730627
    2. ':
' → logprob: -4.511312484741211
    3. '):' → logprob: -8.761312484741211
    4. ' and' → logprob: -9.636312484741211
    5. '):
' → logprob: -10.386312484741211
    6. 'and' → logprob: -11.886312484741211
    7. ')' → logprob: -13.386312484741211
    8. '():
' → logprob: -14.136312484741211
    9. '=' → logprob: -14.261312484741211
    10. '   ' → logprob: -14.261312484741211

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2646925151348114
    2. ':' → logprob: -1.8896925449371338
    3. ':
' → logprob: -3.139692544937134
    4. ' and' → logprob: -3.764692544937134
    5. ' if' → logprob: -5.014692306518555
    6. '   ' → logprob: -5.389692306518555
    7. '):
' → logprob: -6.389692306518555
    8. 'and' → logprob: -7.389692306518555
    9. 'if' → logprob: -7.764692306518555
    10. '):' → logprob: -8.389692306518555

Token 178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08022136241197586
    2. ' if' → logprob: -2.58022141456604
    3. '   ' → logprob: -7.080221176147461
    4. '       ' → logprob: -8.205221176147461
    5. '
' → logprob: -9.455221176147461
    6. '```' → logprob: -9.455221176147461
    7. '           ' → logprob: -9.955221176147461
    8. ' ' → logprob: -12.830221176147461
    9. '    
' → logprob: -13.205221176147461
    10. 'print' → logprob: -13.455221176147461

Token 179: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38687896728515625
    2. ' not' → logprob: -1.1368789672851562
    3. '   ' → logprob: -12.761878967285156
    4. '(not' → logprob: -13.261878967285156
    5. '```' → logprob: -13.261878967285156
    6. 'dfs' → logprob: -14.386878967285156
    7. '!' → logprob: -15.011878967285156
    8. '	not' → logprob: -15.511878967285156
    9. '
' → logprob: -15.636878967285156
    10. ' dfs' → logprob: -16.011878967285156

Token 180: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.0052362410351634026
    2. ' dfs' → logprob: -5.2552361488342285
    3. 'df' → logprob: -13.005236625671387
    4. '   ' → logprob: -16.75523567199707
    5. '
' → logprob: -17.38023567199707
    6. 'DFS' → logprob: -17.50523567199707
    7. '```' → logprob: -17.50523567199707
    8. ' bfs' → logprob: -17.50523567199707
    9. 'dfa' → logprob: -18.13023567199707
    10. ' ' → logprob: -18.38023567199707

Token 181: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -18.125
    4. '(
' → logprob: -19.625
    5. ')i' → logprob: -20.125
    6. ')(' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. ')' → logprob: -21.0
    9. '(I' → logprob: -21.25
    10. '<|end|>' → logprob: -21.25

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9981420336989686e-05
    2. '1' → logprob: -11.375020027160645
    3. ' ,' → logprob: -12.000020027160645
    4. '(' → logprob: -13.500020027160645
    5. '2' → logprob: -14.750020027160645
    6. ',
' → logprob: -15.500020027160645
    7. '   ' → logprob: -16.125019073486328
    8. '3' → logprob: -16.500019073486328
    9. ' ' → logprob: -17.125019073486328
    10. '```' → logprob: -18.000019073486328

Token 183: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.875075340270996
    4. ')' → logprob: -17.25007438659668
    5. '  ' → logprob: -18.25007438659668
    6. '```' → logprob: -18.81257438659668
    7. '2' → logprob: -19.06257438659668
    8. '１' → logprob: -19.62507438659668
    9. '    ' → logprob: -19.81257438659668
    10. '۱' → logprob: -20.93757438659668

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.500009536743164
    4. '2' → logprob: -19.000009536743164
    5. '```' → logprob: -19.125009536743164
    6. ')' → logprob: -19.375009536743164
    7. '１' → logprob: -19.625009536743164
    8. '  ' → logprob: -19.875009536743164
    9. '۱' → logprob: -21.125009536743164
    10. '3' → logprob: -21.500009536743164

Token 185: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1270589381456375
    2. '):' → logprob: -2.127058982849121
    3. '):
' → logprob: -9.252058982849121
    4. ')' → logprob: -10.502058982849121
    5. ':' → logprob: -12.752058982849121
    6. ':
' → logprob: -13.002058982849121
    7. '():
' → logprob: -14.502058982849121
    8. '   ' → logprob: -14.502058982849121
    9. ' ):
' → logprob: -14.502058982849121
    10. '):

' → logprob: -14.627058982849121

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027909299358725548
    2. 'print' → logprob: -3.777909278869629
    3. ' print' → logprob: -5.402909278869629
    4. '       ' → logprob: -9.152909278869629
    5. '```' → logprob: -10.777909278869629
    6. '
' → logprob: -11.402909278869629
    7. '   ' → logprob: -11.902909278869629
    8. '            
' → logprob: -13.152909278869629
    9. '               ' → logprob: -14.027909278869629
    10. '          ' → logprob: -14.652909278869629

Token 187: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.77627644513268e-06
    2. ' print' → logprob: -11.750008583068848
    3. '           ' → logprob: -14.750008583068848
    4. '   ' → logprob: -15.375008583068848
    5. '```' → logprob: -16.375009536743164
    6. '
' → logprob: -16.875009536743164
    7. '	print' → logprob: -17.500009536743164
    8. 'pr' → logprob: -18.000009536743164
    9. '               ' → logprob: -19.125009536743164
    10. '``' → logprob: -19.375009536743164

Token 188: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.015659846365451813
    2. '(' → logprob: -4.265659809112549
    3. '('' → logprob: -6.765659809112549
    4. '0' → logprob: -8.890660285949707
    5. '"' → logprob: -9.265660285949707
    6. '(-' → logprob: -9.640660285949707
    7. '"No' → logprob: -10.390660285949707
    8. '(False' → logprob: -11.640660285949707
    9. 'No' → logprob: -13.765660285949707
    10. '(No' → logprob: -14.015660285949707

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. ')' → logprob: -16.0
    4. '2' → logprob: -16.5
    5. '"' → logprob: -16.875
    6. '```' → logprob: -18.25
    7. '１' → logprob: -18.5
    8. '``' → logprob: -18.625
    9. '   ' → logprob: -19.0
    10. '3' → logprob: -19.125

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759549736976624
    2. ')
' → logprob: -0.8259549736976624
    3. ')
' → logprob: -11.325955390930176
    4. ')return' → logprob: -13.325955390930176
    5. '           ' → logprob: -14.700955390930176
    6. ')`
' → logprob: -14.825955390930176
    7. ')

' → logprob: -15.575955390930176
    8. '   ' → logprob: -16.07595443725586
    9. '),' → logprob: -16.32595443725586
    10. ')`' → logprob: -16.57595443725586

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.7159857786027715e-05
    2. '       ' → logprob: -10.625046730041504
    3. '               ' → logprob: -12.125046730041504
    4. '<|end|>' → logprob: -12.750046730041504
    5. '          ' → logprob: -13.125046730041504
    6. '            
' → logprob: -13.375046730041504
    7. '
' → logprob: -13.500046730041504
    8. '   ' → logprob: -13.625046730041504
    9. '	       ' → logprob: -13.625046730041504
    10. 'print' → logprob: -13.625046730041504

Token 192: ' sys' (ID: 12228)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.8099519610404968
    2. '           ' → logprob: -1.3099520206451416
    3. 'sys' (adapté à ' sys') → logprob: -1.3099520206451416
    4. 'import' → logprob: -4.6849517822265625
    5. '       ' → logprob: -6.5599517822265625
    6. ' sys' → logprob: -6.5599517822265625
    7. 'break' → logprob: -6.9349517822265625
    8. '
' → logprob: -6.9349517822265625
    9. '               ' → logprob: -7.8099517822265625
    10. ' exit' → logprob: -8.309951782226562

Token 193: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -4.906711546937004e-05
    2. '.stdout' → logprob: -10.375048637390137
    3. '.' → logprob: -11.250048637390137
    4. 'exit' → logprob: -13.500048637390137
    5. '	exit' → logprob: -13.750048637390137
    6. '.ex' → logprob: -14.625048637390137
    7. '_exit' → logprob: -14.750048637390137
    8. '.stderr' → logprob: -14.875048637390137
    9. '.EXIT' → logprob: -15.250048637390137
    10. '.Exit' → logprob: -15.500048637390137

Token 194: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029759978875517845
    2. '(' → logprob: -3.5297598838806152
    3. '()(' → logprob: -13.154760360717773
    4. '0' → logprob: -13.279760360717773
    5. '()
' → logprob: -13.404760360717773
    6. ' ()' → logprob: -13.654760360717773
    7. '()`' → logprob: -14.154760360717773
    8. '())' → logprob: -14.404760360717773
    9. '()]' → logprob: -14.404760360717773
    10. '()"' → logprob: -14.779760360717773

Token 195: '#' (ID: 2)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.8613477349281311
    2. 'group' → logprob: -1.4863476753234863
    3. 'answer' → logprob: -2.7363476753234863
    4. 'print' → logprob: -3.2363476753234863
    5. 'result' → logprob: -3.2363476753234863
    6. 'red' → logprob: -3.2363476753234863
    7. 'ans' → logprob: -3.3613476753234863
    8. 'A' → logprob: -3.3613476753234863
    9. 'partition' → logprob: -3.8613476753234863
    10. 'set' → logprob: -4.611347675323486

Token 196: ' Count' (ID: 6789)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.953170895576477
    2. 'set' → logprob: -1.703170895576477
    3. 'red' → logprob: -1.828170895576477
    4. 'part' → logprob: -2.0781707763671875
    5. 'ans' → logprob: -3.4531707763671875
    6. 'A' → logprob: -3.7031707763671875
    7. 'result' → logprob: -4.2031707763671875
    8. 'a' → logprob: -4.3281707763671875
    9. 'team' → logprob: -4.9531707763671875
    10. 'partition' → logprob: -4.9531707763671875

Token 197: ' nodes' (ID: 15749)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.2046102285385132
    2. 'group' → logprob: -1.4546102285385132
    3. 'count' → logprob: -1.9546102285385132
    4. 'red' → logprob: -1.9546102285385132
    5. 'set' → logprob: -3.3296103477478027
    6. 'cnt' → logprob: -3.3296103477478027
    7. 'one' → logprob: -3.5796103477478027
    8. 'a' → logprob: -3.5796103477478027
    9. 'ans' → logprob: -4.704610347747803
    10. 'c' → logprob: -4.829610347747803

Token 198: ' of' (ID: 328)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.34756430983543396
    2. '1' → logprob: -2.222564220428467
    3. 'color' → logprob: -2.972564220428467
    4. 'group' → logprob: -2.972564220428467
    5. 'count' → logprob: -3.847564220428467
    6. 'one' → logprob: -4.097564220428467
    7. 'c' → logprob: -4.722564220428467
    8. 'A' → logprob: -5.097564220428467
    9. 'partition' → logprob: -5.222564220428467
    10. 'in' → logprob: -5.722564220428467

Token 199: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5584045052528381
    2. 'color' → logprob: -0.9334045052528381
    3. ' each' → logprob: -3.6834044456481934
    4. ' color' → logprob: -5.058404445648193
    5. '1' → logprob: -6.183404445648193
    6. 'both' → logprob: -7.308404445648193
    7. 'colors' → logprob: -9.433404922485352
    8. 'type' → logprob: -9.808404922485352
    9. ' ' → logprob: -9.933404922485352
    10. '```' → logprob: -10.058404922485352

Token 200: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.024620071053504944
    2. ' color' → logprob: -3.7746200561523438
    3. 'partition' → logprob: -7.774620056152344
    4. 'set' → logprob: -7.899620056152344
    5. 'part' → logprob: -8.024620056152344
    6. ' set' → logprob: -10.149620056152344
    7. 'type' → logprob: -10.524620056152344
    8. 'b' → logprob: -10.774620056152344
    9. ' ' → logprob: -11.024620056152344
    10. '[color' → logprob: -11.149620056152344

Token 201: ' per' (ID: 777)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10982111841440201
    2. 'red' → logprob: -3.359821081161499
    3. 'color' → logprob: -3.359821081161499
    4. 'cnt' → logprob: -3.609821081161499
    5. 'c' → logprob: -5.484821319580078
    6. 'one' → logprob: -7.234821319580078
    7. 'counts' → logprob: -7.484821319580078
    8. 'black' → logprob: -7.609821319580078
    9. 'white' → logprob: -7.734821319580078
    10. 'part' → logprob: -8.234821319580078

Token 202: ' connected' (ID: 12079)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.11598964780569077
    2. 'color' → logprob: -2.9909896850585938
    3. 'group' → logprob: -4.115989685058594
    4. 'connected' → logprob: -4.115989685058594
    5. ' component' → logprob: -4.740989685058594
    6. ' connected' → logprob: -5.240989685058594
    7. 'set' → logprob: -5.365989685058594
    8. ' color' → logprob: -6.490989685058594
    9. 'part' → logprob: -6.615989685058594
    10. ' group' → logprob: -6.865989685058594

Token 203: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.00028624574770219624
    2. ' component' → logprob: -8.625286102294922
    3. 'components' → logprob: -10.000286102294922
    4. '_component' → logprob: -10.125286102294922
    5. '-component' → logprob: -11.500286102294922
    6. '	component' → logprob: -12.750286102294922
    7. '
' → logprob: -13.125286102294922
    8. ' ' → logprob: -13.875286102294922
    9. '#' → logprob: -14.375286102294922
    10. 'comp' → logprob: -14.500286102294922

Token 204: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2174643278121948
    2. 'counts' → logprob: -1.3424643278121948
    3. 'color' → logprob: -1.5924643278121948
    4. 'comp' → logprob: -2.8424644470214844
    5. 'colors' → logprob: -3.0924644470214844
    6. 'components' → logprob: -3.8424644470214844
    7. 'component' → logprob: -3.9674644470214844
    8. 'result' → logprob: -4.217464447021484
    9. 'visited' → logprob: -4.467464447021484
    10. 'parts' → logprob: -4.717464447021484

Token 205: 'visited' (ID: 52453)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.8592974543571472
    2. 'count' → logprob: -1.859297513961792
    3. 'red' → logprob: -2.359297513961792
    4. 'counts' → logprob: -2.609297513961792
    5. 'ans' → logprob: -3.234297513961792
    6. 'result' → logprob: -3.359297513961792
    7. 'colors' → logprob: -3.484297513961792
    8. 'answer' → logprob: -3.859297513961792
    9. 'visited' → logprob: -3.859297513961792
    10. 'white' → logprob: -4.359297275543213

Token 206: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0097618717700243
    2. '=' → logprob: -4.634761810302734
    3. '[' → logprob: -13.009761810302734
    4. ',' → logprob: -13.384761810302734
    5. ' ' → logprob: -13.634761810302734
    6. ' =[' → logprob: -15.134761810302734
    7. ')' → logprob: -15.384761810302734
    8. '=[' → logprob: -16.009761810302734
    9. ']' → logprob: -16.384761810302734
    10. '[]' → logprob: -17.009761810302734

Token 207: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015979631280060858
    2. ' [' → logprob: -8.750160217285156
    3. '[color' → logprob: -14.625160217285156
    4. '[node' → logprob: -15.625160217285156
    5. '[size' → logprob: -16.250160217285156
    6. '[value' → logprob: -16.625160217285156
    7. '[int' → logprob: -16.750160217285156
    8. '[v' → logprob: -16.750160217285156
    9. '[class' → logprob: -16.875160217285156
    10. '[V' → logprob: -17.000160217285156

Token 208: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.56233171664644e-05
    2. '0' → logprob: -10.000055313110352
    3. ' False' → logprob: -11.500055313110352
    4. '(False' → logprob: -19.37505531311035
    5. '   ' → logprob: -19.50005531311035
    6. '[' → logprob: -20.62505531311035
    7. ' ' → logprob: -20.75005531311035
    8. '
' → logprob: -20.87505531311035
    9. '```' → logprob: -21.62505531311035
    10. '=False' → logprob: -22.12505531311035

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01554952934384346
    2. '*' → logprob: -4.890549659729004
    3. 'for' → logprob: -5.765549659729004
    4. ']*' → logprob: -6.390549659729004
    5. ' for' → logprob: -6.640549659729004
    6. ']*(' → logprob: -6.765549659729004
    7. ' *' → logprob: -8.515549659729004
    8. '(V' → logprob: -8.890549659729004
    9. '*(' → logprob: -8.890549659729004
    10. '(' → logprob: -9.765549659729004

Token 210: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3870046138763428
    2. '*' → logprob: -1.1370046138763428
    3. 'for' → logprob: -9.637004852294922
    4. ' for' → logprob: -10.137004852294922
    5. '*(' → logprob: -10.762004852294922
    6. '+' → logprob: -12.887004852294922
    7. '(V' → logprob: -13.887004852294922
    8. ']' → logprob: -14.262004852294922
    9. ' ' → logprob: -14.262004852294922
    10. ' ' → logprob: -14.387004852294922

Token 211: ' (' (ID: 350)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -2.15310683415737e-05
    2. ' (' → logprob: -10.875021934509277
    3. '(' → logprob: -14.000021934509277
    4. '((' → logprob: -14.125021934509277
    5. '(len' → logprob: -15.000021934509277
    6. '   ' → logprob: -15.375021934509277
    7. ' ' → logprob: -16.12502098083496
    8. '
' → logprob: -16.62502098083496
    9. '(v' → logprob: -16.62502098083496
    10. '  ' → logprob: -18.12502098083496

Token 212: 'V' (ID: 53)
  Prédit: '(V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.01252213679254055
    2. 'V' → logprob: -4.387522220611572
    3. ' (' → logprob: -12.262521743774414
    4. '   ' → logprob: -12.387521743774414
    5. ' V' → logprob: -14.262521743774414
    6. '(' → logprob: -14.387521743774414
    7. '
' → logprob: -15.012521743774414
    8. ' ' → logprob: -15.137521743774414
    9. '	V' → logprob: -15.387521743774414
    10. '[V' → logprob: -15.887521743774414

Token 213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.054500666621607e-06
    2. ' +' → logprob: -12.87500286102295
    3. '+
' → logprob: -14.87500286102295
    4. '1' → logprob: -17.375003814697266
    5. '```' → logprob: -17.875003814697266
    6. '＋' → logprob: -18.000003814697266
    7. ')' → logprob: -18.875003814697266
    8. ')+' → logprob: -19.000003814697266
    9. '[' → logprob: -19.500003814697266
    10. '
' → logprob: -19.500003814697266

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -16.500001907348633
    4. '(' → logprob: -17.125001907348633
    5. '2' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '
' → logprob: -17.750001907348633
    8. '+' → logprob: -17.812501907348633
    9. '0' → logprob: -18.125001907348633
    10. ')' → logprob: -18.437501907348633

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20145036280155182
    2. ')
' → logprob: -1.7014503479003906
    3. ')

' → logprob: -10.82645034790039
    4. ')
' → logprob: -11.20145034790039
    5. '
' → logprob: -13.07645034790039
    6. 'for' → logprob: -14.82645034790039
    7. ' )' → logprob: -15.70145034790039
    8. '#' → logprob: -15.70145034790039
    9. 'def' → logprob: -15.70145034790039
    10. ' )
' → logprob: -15.95145034790039

Token 216: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.4649940729141235
    2. 'answer' → logprob: -1.5899940729141235
    3. 'result' → logprob: -1.7149940729141235
    4. 'count' → logprob: -2.839993953704834
    5. 'group' → logprob: -3.089993953704834
    6. 'comp' → logprob: -3.339993953704834
    7. 'counts' → logprob: -3.339993953704834
    8. 'red' → logprob: -3.464993953704834
    9. 'color' → logprob: -3.589993953704834
    10. 'component' → logprob: -3.714993953704834

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03827798739075661
    2. '=' → logprob: -3.288278102874756
    3. '1' → logprob: -8.913277626037598
    4. '_' → logprob: -9.663277626037598
    5. 's' → logprob: -11.038277626037598
    6. ' ' → logprob: -12.413277626037598
    7. '0' → logprob: -12.413277626037598
    8. '=[]' → logprob: -12.788277626037598
    9. ' =[' → logprob: -13.038277626037598
    10. 'a' → logprob: -13.788277626037598

Token 218: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1360992193222046
    2. '[]' → logprob: -2.136099338531494
    3. ' ' → logprob: -5.011099338531494
    4. ' []' → logprob: -6.386099338531494
    5. '[' → logprob: -7.636099338531494
    6. '[]
' → logprob: -8.386098861694336
    7. ' [' → logprob: -10.761098861694336
    8. '1' → logprob: -11.636098861694336
    9. '[]

' → logprob: -11.886098861694336
    10. ' []
' → logprob: -12.511098861694336

Token 219: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11370845139026642
    2. '[]' → logprob: -2.23870849609375
    3. '[' → logprob: -7.36370849609375
    4. '[]
' → logprob: -9.61370849609375
    5. '1' → logprob: -10.36370849609375
    6. ' ' → logprob: -10.48870849609375
    7. ' []' → logprob: -10.73870849609375
    8. 'V' → logprob: -11.11370849609375
    9. '{}' → logprob: -11.11370849609375
    10. '[V' → logprob: -11.48870849609375

Token 220: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06831756234169006
    2. '
' → logprob: -2.8183176517486572
    3. 'def' → logprob: -5.318317413330078
    4. ' for' → logprob: -6.568317413330078
    5. 'from' → logprob: -11.193317413330078
    6. '

' → logprob: -12.568317413330078
    7. ' 
' → logprob: -13.193317413330078
    8. '
' → logprob: -13.318317413330078
    9. 'stack' → logprob: -13.568317413330078
    10. '```' → logprob: -13.943317413330078

Token 221: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08035305887460709
    2. 'def' → logprob: -2.580353021621704
    3. 'from' → logprob: -6.580353260040283
    4. ' for' → logprob: -9.705352783203125
    5. 'stack' → logprob: -11.330352783203125
    6. '
' → logprob: -14.455352783203125
    7. 'visited' → logprob: -14.580352783203125
    8. ' def' → logprob: -14.830352783203125
    9. 'de' → logprob: -15.580352783203125
    10. 'import' → logprob: -15.580352783203125

Token 222: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006513221189379692
    2. ' i' → logprob: -5.1315131187438965
    3. 'v' → logprob: -7.5065131187438965
    4. 'node' → logprob: -11.131513595581055
    5. ' v' → logprob: -11.381513595581055
    6. 'u' → logprob: -12.256513595581055
    7. ' node' → logprob: -13.131513595581055
    8. '_' → logprob: -13.881513595581055
    9. '   ' → logprob: -15.256513595581055
    10. '`' → logprob: -16.006513595581055

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033671747893095016
    2. 'in' → logprob: -3.4086718559265137
    3. ' ' → logprob: -11.533671379089355
    4. 'range' → logprob: -11.658671379089355
    5. '1' → logprob: -12.658671379089355
    6. ',' → logprob: -13.408671379089355
    7. 'import' → logprob: -14.408671379089355
    8. '   ' → logprob: -14.783671379089355
    9. '```' → logprob: -15.158671379089355
    10. '	in' → logprob: -15.533671379089355

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005236837547272444
    2. ' range' → logprob: -5.255236625671387
    3. '(' → logprob: -13.505236625671387
    4. '(range' → logprob: -14.005236625671387
    5. '1' → logprob: -14.630236625671387
    6. ' ' → logprob: -15.505236625671387
    7. 'in' → logprob: -16.380237579345703
    8. '```' → logprob: -16.505237579345703
    9. '   ' → logprob: -16.880237579345703
    10. '  ' → logprob: -17.755237579345703

Token 225: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.523948907968588e-05
    2. 'range' → logprob: -10.500035285949707
    3. '1' → logprob: -12.375035285949707
    4. '(range' → logprob: -13.125035285949707
    5. ' range' → logprob: -13.875035285949707
    6. 'in' → logprob: -14.750035285949707
    7. ',' → logprob: -16.12503433227539
    8. ' (' → logprob: -18.62503433227539
    9. ' in' → logprob: -18.75003433227539
    10. '```' → logprob: -19.37503433227539

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046636611223220825
    2. 'range' → logprob: -5.379663467407227
    3. ' range' → logprob: -10.129663467407227
    4. ' ' → logprob: -13.004663467407227
    5. '(' → logprob: -14.129663467407227
    6. '   ' → logprob: -15.504663467407227
    7. '(V' → logprob: -16.004663467407227
    8. ')' → logprob: -16.129663467407227
    9. ',' → logprob: -16.629663467407227
    10. 'V' → logprob: -17.004663467407227

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020732907578349113
    2. '(' → logprob: -6.752073287963867
    3. '1' → logprob: -7.752073287963867
    4. '(V' → logprob: -8.252073287963867
    5. ' ,' → logprob: -8.502073287963867
    6. '   ' → logprob: -12.127073287963867
    7. ' ' → logprob: -13.752073287963867
    8. ',V' → logprob: -14.127073287963867
    9. '+' → logprob: -14.752073287963867
    10. ' (' → logprob: -15.002073287963867

Token 228: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0003434488025959581
    2. ' V' → logprob: -8.000343322753906
    3. '   ' → logprob: -12.125343322753906
    4. '(V' → logprob: -13.000343322753906
    5. ' ' → logprob: -15.875343322753906
    6. '	V' → logprob: -16.250343322753906
    7. ')V' → logprob: -17.375343322753906
    8. ')' → logprob: -17.375343322753906
    9. '```' → logprob: -17.750343322753906
    10. '  ' → logprob: -17.875343322753906

Token 229: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.60414821645827e-06
    2. ' +' → logprob: -12.625004768371582
    3. '1' → logprob: -14.625004768371582
    4. '+
' → logprob: -15.000004768371582
    5. '):
' → logprob: -16.000003814697266
    6. '()+' → logprob: -16.125003814697266
    7. '```' → logprob: -16.250003814697266
    8. '
' → logprob: -16.625003814697266
    9. '(' → logprob: -17.750003814697266
    10. '+i' → logprob: -18.375003814697266

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017290872347075492
    2. ' ' → logprob: -9.00017261505127
    3. '+' → logprob: -10.25017261505127
    4. '   ' → logprob: -11.87517261505127
    5. 'i' → logprob: -12.87517261505127
    6. '2' → logprob: -13.25017261505127
    7. 'V' → logprob: -13.25017261505127
    8. ')' → logprob: -15.00017261505127
    9. '```' → logprob: -15.37517261505127
    10. 'for' → logprob: -15.75017261505127

Token 231: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6953317523002625
    2. '):' → logprob: -0.6953317523002625
    3. ':' → logprob: -6.195331573486328
    4. ':
' → logprob: -9.320331573486328
    5. ')' → logprob: -10.320331573486328
    6. '):
' → logprob: -11.195331573486328
    7. '   ' → logprob: -12.195331573486328
    8. ' ):
' → logprob: -14.570331573486328
    9. '():
' → logprob: -14.945331573486328
    10. '):

' → logprob: -15.445331573486328

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030430778861045837
    2. ' if' → logprob: -5.878043174743652
    3. 'if' → logprob: -8.753043174743652
    4. '   ' → logprob: -10.003043174743652
    5. '	if' → logprob: -10.753043174743652
    6. ',' → logprob: -12.378043174743652
    7. '<|end|>' → logprob: -13.003043174743652
    8. '       ' → logprob: -14.128043174743652
    9. '	   ' → logprob: -14.440543174743652
    10. ':' → logprob: -14.440543174743652

Token 233: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31655892729759216
    2. '   ' → logprob: -1.6915589570999146
    3. ' if' → logprob: -2.441558837890625
    4. ' ' → logprob: -10.316558837890625
    5. '	if' → logprob: -10.691558837890625
    6. '```' → logprob: -11.566558837890625
    7. '    ' → logprob: -11.816558837890625
    8. '    
' → logprob: -12.191558837890625
    9. '       ' → logprob: -12.441558837890625
    10. '
' → logprob: -12.816558837890625

Token 234: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11346317082643509
    2. ' not' → logprob: -2.2384631633758545
    3. 'color' → logprob: -7.738463401794434
    4. 'visited' → logprob: -9.113463401794434
    5. ' color' → logprob: -9.988463401794434
    6. '   ' → logprob: -11.238463401794434
    7. '!' → logprob: -11.363463401794434
    8. ' visited' → logprob: -11.488463401794434
    9. '
' → logprob: -12.613463401794434
    10. ' ' → logprob: -12.863463401794434

Token 235: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.02630053460597992
    2. ' visited' → logprob: -3.6513004302978516
    3. ' ' → logprob: -16.52630043029785
    4. 'color' → logprob: -16.77630043029785
    5. 'Visited' → logprob: -16.77630043029785
    6. 'v' → logprob: -17.90130043029785
    7. ' ' → logprob: -18.02630043029785
    8. '   ' → logprob: -18.27630043029785
    9. 'visit' → logprob: -18.27630043029785
    10. 'visible' → logprob: -18.77630043029785

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[v' → logprob: -12.375006675720215
    3. '[' → logprob: -13.000006675720215
    4. '(i' → logprob: -16.00000762939453
    5. '[I' → logprob: -16.37500762939453
    6. '[node' → logprob: -16.75000762939453
    7. 'i' → logprob: -16.87500762939453
    8. '```' → logprob: -16.87500762939453
    9. '[V' → logprob: -17.00000762939453
    10. ' [' → logprob: -17.25000762939453

Token 237: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3253342807292938
    2. ']:' → logprob: -1.4503343105316162
    3. ':' → logprob: -3.950334310531616
    4. ':
' → logprob: -4.325334072113037
    5. '):
' → logprob: -4.700334072113037
    6. '):' → logprob: -6.825334072113037
    7. ']' → logprob: -7.700334072113037
    8. '():
' → logprob: -10.075334548950195
    9. '   ' → logprob: -10.825334548950195
    10. ']):
' → logprob: -11.450334548950195

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02911190316081047
    2. '   ' → logprob: -4.279111862182617
    3. ' stack' → logprob: -5.154111862182617
    4. 'stack' → logprob: -6.279111862182617
    5. ':' → logprob: -6.404111862182617
    6. ' and' → logprob: -6.529111862182617
    7. ' queue' → logprob: -6.904111862182617
    8. ':
' → logprob: -7.279111862182617
    9. '```' → logprob: -7.529111862182617
    10. ' from' → logprob: -7.654111862182617

Token 239: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.09748133271932602
    2. 'from' → logprob: -3.0974812507629395
    3. 'queue' → logprob: -3.0974812507629395
    4. '   ' → logprob: -6.5974812507629395
    5. 'count' → logprob: -7.5974812507629395
    6. ' stack' → logprob: -7.7224812507629395
    7. 'q' → logprob: -9.347481727600098
    8. 'import' → logprob: -10.597481727600098
    9. 'cnt' → logprob: -10.597481727600098
    10. '       ' → logprob: -10.847481727600098

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197429448366165
    2. ' =' → logprob: -2.811974287033081
    3. '=[' → logprob: -12.56197452545166
    4. '.append' → logprob: -13.56197452545166
    5. '＝' → logprob: -13.68697452545166
    6. '=[]' → logprob: -14.81197452545166
    7. ' =[' → logprob: -15.18697452545166
    8. '=[]
' → logprob: -17.311973571777344
    9. '.=' → logprob: -17.936973571777344
    10. '[' → logprob: -18.311973571777344

Token 241: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -12.00001049041748
    3. '[(' → logprob: -13.00001049041748
    4. ' [' → logprob: -13.25001049041748
    5. '[v' → logprob: -15.00001049041748
    6. '[int' → logprob: -16.750011444091797
    7. '[a' → logprob: -16.875011444091797
    8. '[item' → logprob: -17.000011444091797
    9. '[node' → logprob: -17.625011444091797
    10. '[e' → logprob: -17.625011444091797

Token 242: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.375000953674316
    3. '(i' → logprob: -19.0
    4. '   ' → logprob: -19.375
    5. '	i' → logprob: -20.125
    6. '[i' → logprob: -21.25
    7. '{i' → logprob: -21.375
    8. '
' → logprob: -22.25
    9. ',i' → logprob: -22.625
    10. ')i' → logprob: -23.125

Token 243: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0016450724797323346
    2. ']' → logprob: -6.751645088195801
    3. ')
' → logprob: -8.0016450881958
    4. '   ' → logprob: -9.5016450881958
    5. '       ' → logprob: -10.6266450881958
    6. '
' → logprob: -11.1266450881958
    7. ' ]
' → logprob: -11.7516450881958
    8. ']
' → logprob: -11.7516450881958
    9. ')' → logprob: -12.0016450881958
    10. ']

' → logprob: -14.0016450881958

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7807443737983704
    2. 'visited' → logprob: -1.4057443141937256
    3. 'count' → logprob: -1.7807443141937256
    4. 'component' → logprob: -3.4057443141937256
    5. 'color' → logprob: -3.9057443141937256
    6. 'colors' → logprob: -4.405744552612305
    7. 'counts' → logprob: -4.530744552612305
    8. '   ' → logprob: -4.530744552612305
    9. 'cnt' → logprob: -4.655744552612305
    10. 'nodes' → logprob: -4.780744552612305

Token 245: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.22174328565597534
    2. 'count' → logprob: -2.47174334526062
    3. 'cnt' → logprob: -3.47174334526062
    4. 'color' → logprob: -3.97174334526062
    5. 'comp' → logprob: -4.096743106842041
    6. 'nodes' → logprob: -4.721743106842041
    7. 'c' → logprob: -4.721743106842041
    8. 'component' → logprob: -5.096743106842041
    9. 'colors' → logprob: -5.346743106842041
    10. '   ' → logprob: -5.721743106842041

Token 246: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014159500133246183
    2. '[' → logprob: -6.626415729522705
    3. '[s' → logprob: -10.501416206359863
    4. ']' → logprob: -11.501416206359863
    5. '[v' → logprob: -11.751416206359863
    6. '=True' → logprob: -12.001416206359863
    7. 'True' → logprob: -12.126416206359863
    8. 'i' → logprob: -12.126416206359863
    9. ' =' → logprob: -12.251416206359863
    10. '=' → logprob: -12.376416206359863

Token 247: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007321976590901613
    2. ']=' → logprob: -7.625732421875
    3. '=' → logprob: -8.375732421875
    4. ' ]' → logprob: -11.500732421875
    5. ' =' → logprob: -12.625732421875
    6. '[' → logprob: -15.750732421875
    7. 'True' → logprob: -15.875732421875
    8. ']
' → logprob: -16.500732421875
    9. '=True' → logprob: -16.500732421875
    10. ')' → logprob: -17.625732421875

Token 248: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019297054968774319
    2. ' =' → logprob: -6.251929759979248
    3. ']' → logprob: -14.25192928314209
    4. ']=' → logprob: -15.25192928314209
    5. '=True' → logprob: -15.25192928314209
    6. '[' → logprob: -17.126930236816406
    7. '.=' → logprob: -18.501930236816406
    8. '＝' → logprob: -18.626930236816406
    9. 'True' → logprob: -19.126930236816406
    10. '=False' → logprob: -19.126930236816406

Token 249: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001584850688232109
    2. ' True' → logprob: -8.750158309936523
    3. 'False' → logprob: -20.500158309936523
    4. '(True' → logprob: -21.125158309936523
    5. '   ' → logprob: -22.875158309936523
    6. ' ' → logprob: -23.250158309936523
    7. '=True' → logprob: -23.250158309936523
    8. '1' → logprob: -23.500158309936523
    9. '
' → logprob: -24.250158309936523
    10. 'true' → logprob: -24.250158309936523

Token 250: '
' (ID: 198)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7527356743812561
    2. '
' → logprob: -1.5027356147766113
    3. '       ' → logprob: -2.0027356147766113
    4. 'cnt' → logprob: -2.6277356147766113
    5. 'red' → logprob: -3.5027356147766113
    6. '   ' → logprob: -4.502735614776611
    7. 'black' → logprob: -4.877735614776611
    8. 'c' → logprob: -4.877735614776611
    9. 'color' → logprob: -5.377735614776611
    10. 'white' → logprob: -5.502735614776611

Token 251: '       ' (ID: 309)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2829809784889221
    2. 'cnt' → logprob: -1.7829809188842773
    3. '       ' → logprob: -3.9079809188842773
    4. '   ' → logprob: -4.157980918884277
    5. 'red' → logprob: -4.532980918884277
    6. 'c' → logprob: -4.657980918884277
    7. 'color' → logprob: -5.032980918884277
    8. 'black' → logprob: -5.782980918884277
    9. 'counts' → logprob: -5.782980918884277
    10. 'comp' → logprob: -5.907980918884277

Token 252: ' c' (ID: 274)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16440899670124054
    2. 'cnt' → logprob: -2.0394089221954346
    3. 'c' (adapté à ' c') → logprob: -4.289409160614014
    4. 'counts' → logprob: -5.414409160614014
    5. 'color' → logprob: -6.289409160614014
    6. 'colors' → logprob: -7.914409160614014
    7. 'comp' → logprob: -8.039408683776855
    8. 'red' → logprob: -8.289408683776855
    9. 'nodes' → logprob: -9.039408683776855
    10. 'col' → logprob: -9.414408683776855

Token 253: '1' (ID: 16)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.1188836619257927
    2. '1' → logprob: -2.8688836097717285
    3. '0' → logprob: -4.2438836097717285
    4. '=' → logprob: -4.8688836097717285
    5. 'nt' → logprob: -4.9938836097717285
    6. 'olor' → logprob: -5.1188836097717285
    7. '[' → logprob: -5.2438836097717285
    8. 'count' → logprob: -5.4938836097717285
    9. '_counts' → logprob: -5.9938836097717285
    10. ' =' → logprob: -5.9938836097717285

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18011067807674408
    2. '=' → logprob: -1.9301106929779053
    3. ',' → logprob: -3.9301106929779053
    4. '_count' → logprob: -10.680110931396484
    5. ' ,' → logprob: -11.555110931396484
    6. 'count' → logprob: -11.930110931396484
    7. 'ount' → logprob: -12.180110931396484
    8. ',count' → logprob: -13.305110931396484
    9. ' ' → logprob: -14.055110931396484
    10. '_cnt' → logprob: -14.555110931396484

Token 255: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.060379449278116226
    2. '1' → logprob: -2.9353795051574707
    3. ' ' → logprob: -5.810379505157471
    4. 'c' → logprob: -6.060379505157471
    5. ' c' → logprob: -8.810379028320312
    6. 'color' → logprob: -13.997879028320312
    7. '  ' → logprob: -15.060379028320312
    8. '```' → logprob: -15.185379028320312
    9. '   ' → logprob: -15.810379028320312
    10. '=' → logprob: -15.872879028320312

Token 256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026769062504172325
    2. '1' → logprob: -3.6517691612243652
    3. 'c' → logprob: -7.901769161224365
    4. ' ' → logprob: -9.276768684387207
    5. ' c' → logprob: -13.276768684387207
    6. 'color' → logprob: -14.151768684387207
    7. '[]' → logprob: -15.214268684387207
    8. '(' → logprob: -15.214268684387207
    9. '[' → logprob: -15.339268684387207
    10. '
' → logprob: -15.339268684387207

Token 257: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003661475842818618
    2. '       ' → logprob: -5.753661632537842
    3. 'c' → logprob: -9.253661155700684
    4. ',' → logprob: -9.503661155700684
    5. '
' → logprob: -9.628661155700684
    6. ' c' → logprob: -9.753661155700684
    7. '        
' → logprob: -10.003661155700684
    8. '		
' → logprob: -10.378661155700684
    9. '   ' → logprob: -10.753661155700684
    10. '	c' → logprob: -10.878661155700684

Token 258: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0007357738213613629
    2. 'c' → logprob: -7.750735759735107
    3. ' c' → logprob: -9.125736236572266
    4. ' 
' → logprob: -9.750736236572266
    5. '	c' → logprob: -10.250736236572266
    6. '       ' → logprob: -10.375736236572266
    7. '   ' → logprob: -11.000736236572266
    8. '
' → logprob: -11.250736236572266
    9. ' ' → logprob: -12.000736236572266
    10. '        
' → logprob: -12.125736236572266

Token 259: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0018324919510632753
    2. ' c' → logprob: -6.376832485198975
    3. '   ' → logprob: -9.626832962036133
    4. '1' → logprob: -10.751832962036133
    5. '	c' → logprob: -10.876832962036133
    6. '       ' → logprob: -11.251832962036133
    7. ' ' → logprob: -12.126832962036133
    8. '
' → logprob: -13.376832962036133
    9. '0' → logprob: -13.501832962036133
    10. '  ' → logprob: -14.126832962036133

Token 260: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2515174150466919
    2. '=' → logprob: -2.1265172958374023
    3. '1' → logprob: -2.5015172958374023
    4. '0' → logprob: -4.251517295837402
    5. '[' → logprob: -5.876517295837402
    6. ' =' → logprob: -6.126517295837402
    7. '```' → logprob: -7.501517295837402
    8. ' ' → logprob: -7.626517295837402
    9. '   ' → logprob: -7.876517295837402
    10. '       ' → logprob: -8.751517295837402

Token 261: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750484973192215
    2. ' =' → logprob: -3.5297505855560303
    3. ' ' → logprob: -17.15475082397461
    4. '0' → logprob: -17.65475082397461
    5. ')' → logprob: -18.15475082397461
    6. '<|end|>' → logprob: -18.65475082397461
    7. '=}' → logprob: -18.65475082397461
    8. ',' → logprob: -18.90475082397461
    9. '   ' → logprob: -19.15475082397461
    10. '```' → logprob: -19.15475082397461

Token 262: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '1' → logprob: -15.376032829284668
    4. '<|end|>' → logprob: -17.626033782958984
    5. '   ' → logprob: -17.688533782958984
    6. '۰' → logprob: -17.876033782958984
    7. '  ' → logprob: -18.001033782958984
    8. '```' → logprob: -18.626033782958984
    9. ' ' → logprob: -19.251033782958984
    10. 'c' → logprob: -19.313533782958984

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '1' → logprob: -15.6250581741333
    4. '<|end|>' → logprob: -17.250059127807617
    5. '   ' → logprob: -19.625059127807617
    6. '۰' → logprob: -19.750059127807617
    7. '  ' → logprob: -19.937559127807617
    8. '=' → logprob: -20.687559127807617
    9. '```' → logprob: -21.000059127807617
    10. ')' → logprob: -21.187559127807617

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004284603521227837
    2. 'while' → logprob: -6.129284381866455
    3. ' while' → logprob: -6.879284381866455
    4. '   ' → logprob: -7.129284381866455
    5. '
' → logprob: -8.629284858703613
    6. '        
' → logprob: -10.129284858703613
    7. '	while' → logprob: -10.379284858703613
    8. ' ' → logprob: -12.379284858703613
    9. '	' → logprob: -12.629284858703613
    10. '  
' → logprob: -13.254284858703613

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15050406754016876
    2. ' while' → logprob: -2.7755041122436523
    3. '   ' → logprob: -3.2755041122436523
    4. '	while' → logprob: -3.9005041122436523
    5. '
' → logprob: -4.400504112243652
    6. 'while' → logprob: -5.025504112243652
    7. ' ' → logprob: -8.900504112243652
    8. '        
' → logprob: -9.525504112243652
    9. '	' → logprob: -9.650504112243652
    10. '        ' → logprob: -10.025504112243652

Token 266: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.09854980558156967
    2. '       ' → logprob: -2.5985498428344727
    3. ' while' → logprob: -4.223549842834473
    4. '   ' → logprob: -5.348549842834473
    5. '	while' → logprob: -10.098549842834473
    6. '
' → logprob: -10.973549842834473
    7. ' ' → logprob: -12.473549842834473
    8. '```' → logprob: -13.348549842834473
    9. '        
' → logprob: -14.348549842834473
    10. '  ' → logprob: -14.973549842834473

Token 267: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07889165729284286
    2. ' stack' → logprob: -2.5788917541503906
    3. '(stack' → logprob: -13.57889175415039
    4. '	stack' → logprob: -14.45389175415039
    5. '   ' → logprob: -17.07889175415039
    6. 'len' → logprob: -17.82889175415039
    7. ' ' → logprob: -18.20389175415039
    8. ' len' → logprob: -19.57889175415039
    9. 'st' → logprob: -19.70389175415039
    10. '.stack' → logprob: -20.20389175415039

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002297397702932358
    2. ':
' → logprob: -6.377297401428223
    3. '):' → logprob: -7.502297401428223
    4. '.pop' → logprob: -11.127297401428223
    5. '):
' → logprob: -11.627297401428223
    6. '>:' → logprob: -11.877297401428223
    7. ']:' → logprob: -12.127297401428223
    8. '}:' → logprob: -13.127297401428223
    9. '():' → logprob: -13.877297401428223
    10. '```' → logprob: -14.252297401428223

Token 269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0471586249768734
    2. 'v' → logprob: -3.172158718109131
    3. ' v' → logprob: -6.047158718109131
    4. 'node' → logprob: -7.047158718109131
    5. 'u' → logprob: -7.797158718109131
    6. '       ' → logprob: -8.922158241271973
    7. 'pop' → logprob: -9.047158241271973
    8. ' node' → logprob: -9.422158241271973
    9. '	       ' → logprob: -9.922158241271973
    10. '   ' → logprob: -10.672158241271973

Token 270: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.07920151203870773
    2. ' v' → logprob: -2.5792014598846436
    3. 'u' → logprob: -8.704201698303223
    4. 'node' → logprob: -9.454201698303223
    5. ' node' → logprob: -10.579201698303223
    6. ' u' → logprob: -10.579201698303223
    7. '           ' → logprob: -11.329201698303223
    8. '   ' → logprob: -13.704201698303223
    9. '	v' → logprob: -13.704201698303223
    10. 'x' → logprob: -13.954201698303223

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022513806819916
    2. '=' → logprob: -1.9102251529693604
    3. '   ' → logprob: -14.660224914550781
    4. ' ' → logprob: -15.160224914550781
    5. '    ' → logprob: -15.410224914550781
    6. '	' → logprob: -16.91022491455078
    7. 'stack' → logprob: -17.66022491455078
    8. '＝' → logprob: -17.66022491455078
    9. '        ' → logprob: -17.78522491455078
    10. ')' → logprob: -17.91022491455078

Token 272: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.061968132853507996
    2. ' stack' → logprob: -2.8119680881500244
    3. '	stack' → logprob: -14.936967849731445
    4. '   ' → logprob: -16.311967849731445
    5. '(stack' → logprob: -16.936967849731445
    6. ' ' → logprob: -17.561967849731445
    7. '.stack' → logprob: -19.311967849731445
    8. 'pop' → logprob: -20.311967849731445
    9. 'stock' → logprob: -20.561967849731445
    10. '  ' → logprob: -20.936967849731445

Token 273: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00033903829171322286
    2. 'pop' → logprob: -8.00033950805664
    3. '=' → logprob: -14.00033950805664
    4. ' pop' → logprob: -14.00033950805664
    5. ' =' → logprob: -14.25033950805664
    6. '.' → logprob: -14.25033950805664
    7. '   ' → logprob: -14.87533950805664
    8. '.append' → logprob: -16.50033950805664
    9. '	pop' → logprob: -16.87533950805664
    10. '           ' → logprob: -17.25033950805664

Token 274: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4741283357143402
    2. '()' → logprob: -0.9741283655166626
    3. ')' → logprob: -11.099128723144531
    4. '()
' → logprob: -11.349128723144531
    5. '()

' → logprob: -11.724128723144531
    6. '
' → logprob: -11.724128723144531
    7. ')
' → logprob: -12.474128723144531
    8. '()\' → logprob: -13.349128723144531
    9. '           ' → logprob: -13.724128723144531
    10. '       ' → logprob: -14.474128723144531

Token 275: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004295403603464365
    2. '
' → logprob: -6.254295349121094
    3. '       ' → logprob: -6.879295349121094
    4. '   ' → logprob: -7.254295349121094
    5. ' if' → logprob: -8.129295349121094
    6. ' ' → logprob: -9.004295349121094
    7. '```' → logprob: -10.129295349121094
    8. '            
' → logprob: -10.254295349121094
    9. '  
' → logprob: -10.504295349121094
    10. '<|end|>' → logprob: -10.879295349121094

Token 276: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3348102569580078
    2. 'if' (adapté à ' if') → logprob: -1.3348102569580078
    3. '       ' → logprob: -4.209810256958008
    4. '           ' → logprob: -5.334810256958008
    5. '   ' → logprob: -6.459810256958008
    6. '
' → logprob: -10.084810256958008
    7. '	if' → logprob: -10.959810256958008
    8. ' ' → logprob: -11.584810256958008
    9. '     ' → logprob: -12.584810256958008
    10. '    ' → logprob: -12.709810256958008

Token 277: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0024758970830589533
    2. ' color' → logprob: -6.002475738525391
    3. '   ' → logprob: -15.75247573852539
    4. ' ' → logprob: -18.12747573852539
    5. '(color' → logprob: -18.37747573852539
    6. '	color' → logprob: -18.50247573852539
    7. '[color' → logprob: -19.50247573852539
    8. '1' → logprob: -20.75247573852539
    9. '=color' → logprob: -20.87747573852539
    10. '  ' → logprob: -21.00247573852539

Token 278: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5048530030981055e-06
    2. 'v' → logprob: -13.500001907348633
    3. '[' → logprob: -17.000001907348633
    4. '==' → logprob: -18.000001907348633
    5. ' v' → logprob: -19.000001907348633
    6. ' [' → logprob: -19.250001907348633
    7. '```' → logprob: -19.500001907348633
    8. '(v' → logprob: -20.125001907348633
    9. ')v' → logprob: -20.125001907348633
    10. '[i' → logprob: -20.250001907348633

Token 279: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1438058763742447
    2. ' ==' → logprob: -2.018805980682373
    3. ']==' → logprob: -7.768805980682373
    4. ')' → logprob: -7.768805980682373
    5. ']' → logprob: -8.393805503845215
    6. ')==' → logprob: -10.018805503845215
    7. '==
' → logprob: -12.893805503845215
    8. '1' → logprob: -13.143805503845215
    9. '===' → logprob: -13.393805503845215
    10. '=' → logprob: -13.393805503845215

Token 280: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519392669200897
    2. ' ==' → logprob: -1.501939296722412
    3. ']==' → logprob: -12.751938819885254
    4. '=' → logprob: -13.251938819885254
    5. '==
' → logprob: -13.626938819885254
    6. '1' → logprob: -13.876938819885254
    7. '===' → logprob: -13.876938819885254
    8. ')==' → logprob: -14.001938819885254
    9. ' ' → logprob: -14.626938819885254
    10. '```' → logprob: -14.876938819885254

Token 281: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '2' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '```' → logprob: -20.875001907348633
    6. '１' → logprob: -22.000001907348633
    7. '  ' → logprob: -22.125001907348633
    8. '۱' → logprob: -22.750001907348633
    9. '3' → logprob: -23.000001907348633
    10. '0' → logprob: -23.125001907348633

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '2' → logprob: -16.875001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '```' → logprob: -21.875001907348633
    6. '  ' → logprob: -22.125001907348633
    7. '۱' → logprob: -22.250001907348633
    8. '１' → logprob: -22.375001907348633
    9. '0' → logprob: -22.750001907348633
    10. '3' → logprob: -23.375001907348633

Token 283: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.014187601394951344
    2. ':' → logprob: -4.264187812805176
    3. '):
' → logprob: -11.389187812805176
    4. '           ' → logprob: -11.639187812805176
    5. '       ' → logprob: -13.514187812805176
    6. ':c' → logprob: -13.889187812805176
    7. ':
' → logprob: -14.264187812805176
    8. '               ' → logprob: -15.264187812805176
    9. ':

' → logprob: -15.889187812805176
    10. ')' → logprob: -15.889187812805176

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10102883726358414
    2. '           ' → logprob: -2.6010289192199707
    3. ' c' → logprob: -4.226028919219971
    4. '
' → logprob: -5.851028919219971
    5. 'c' → logprob: -6.101028919219971
    6. ':
' → logprob: -7.351028919219971
    7. '       ' → logprob: -8.101028442382812
    8. ':' → logprob: -8.601028442382812
    9. '	       ' → logprob: -9.101028442382812
    10. '```' → logprob: -9.101028442382812

Token 285: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.005282138474285603
    2. ' c' → logprob: -5.255281925201416
    3. '               ' → logprob: -10.005282402038574
    4. '           ' → logprob: -13.380282402038574
    5. '                   ' → logprob: -13.630282402038574
    6. '
' → logprob: -15.130282402038574
    7. '	c' → logprob: -15.755282402038574
    8. '   ' → logprob: -16.380281448364258
    9. '+' → logprob: -19.005281448364258
    10. '```' → logprob: -19.005281448364258

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. '+' → logprob: -11.625019073486328
    3. '+=' → logprob: -12.000019073486328
    4. ' +=' → logprob: -13.250019073486328
    5. '=' → logprob: -13.500019073486328
    6. ' ' → logprob: -14.875019073486328
    7. '
' → logprob: -15.000019073486328
    8. ' =' → logprob: -15.875019073486328
    9. '2' → logprob: -16.125019073486328
    10. '   ' → logprob: -16.375019073486328

Token 287: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2014552354812622
    2. ' +=' → logprob: -1.7014552354812622
    3. ']+=' → logprob: -11.201455116271973
    4. '+' → logprob: -11.701455116271973
    5. '           ' → logprob: -11.701455116271973
    6. '               ' → logprob: -11.951455116271973
    7. '                   ' → logprob: -12.451455116271973
    8. '=' → logprob: -15.076455116271973
    9. '   ' → logprob: -15.076455116271973
    10. '            ' → logprob: -15.576455116271973

Token 288: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.750003814697266
    4. '+' → logprob: -21.750003814697266
    5. '2' → logprob: -22.500003814697266
    6. '0' → logprob: -22.750003814697266
    7. ')' → logprob: -23.375003814697266
    8. '１' → logprob: -23.500003814697266
    9. '  ' → logprob: -23.875003814697266
    10. '```' → logprob: -24.000003814697266

Token 289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -22.75
    4. '```' → logprob: -22.875
    5. '2' → logprob: -23.125
    6. '0' → logprob: -24.0
    7. '
' → logprob: -24.0
    8. '１' → logprob: -24.125
    9. '+' → logprob: -24.125
    10. 'v' → logprob: -24.375

Token 290: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003356778062880039
    2. '
' → logprob: -6.25335693359375
    3. 'elif' → logprob: -7.00335693359375
    4. 'else' → logprob: -8.00335693359375
    5. ' else' → logprob: -9.62835693359375
    6. ' elif' → logprob: -10.00335693359375
    7. '               ' → logprob: -10.25335693359375
    8. '       ' → logprob: -11.25335693359375
    9. '		' → logprob: -11.62835693359375
    10. '```' → logprob: -12.00335693359375

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003909927327185869
    2. '
' → logprob: -9.250391006469727
    3. 'else' → logprob: -9.375391006469727
    4. 'elif' → logprob: -9.375391006469727
    5. ' else' → logprob: -9.625391006469727
    6. '               ' → logprob: -10.125391006469727
    7. ' elif' → logprob: -12.125391006469727
    8. '            
' → logprob: -12.750391006469727
    9. '    
' → logprob: -13.000391006469727
    10. '  
' → logprob: -13.500391006469727

Token 292: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.615001380443573
    2. ' else' → logprob: -0.865001380443573
    3. '           ' → logprob: -3.6150014400482178
    4. 'elif' → logprob: -4.865001201629639
    5. ' elif' → logprob: -5.865001201629639
    6. '       ' → logprob: -7.115001201629639
    7. '   ' → logprob: -11.240001678466797
    8. '
' → logprob: -12.490001678466797
    9. '        ' → logprob: -12.740001678466797
    10. '```' → logprob: -12.990001678466797

Token 293: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6482897996902466
    2. ':' → logprob: -1.2732897996902466
    3. '               ' → logprob: -1.6482897996902466
    4. '           ' → logprob: -5.648289680480957
    5. ' :' → logprob: -8.148289680480957
    6. ' :
' → logprob: -8.148289680480957
    7. ' c' → logprob: -8.898289680480957
    8. '            ' → logprob: -9.273289680480957
    9. '{' → logprob: -9.273289680480957
    10. '              ' → logprob: -9.523289680480957

Token 294: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09297297149896622
    2. ' c' → logprob: -2.717972993850708
    3. 'c' → logprob: -3.842972993850708
    4. '           ' → logprob: -6.717972755432129
    5. ' ' → logprob: -10.217972755432129
    6. '   ' → logprob: -10.467972755432129
    7. '              ' → logprob: -10.842972755432129
    8. '                   ' → logprob: -11.092972755432129
    9. ' ' → logprob: -11.592972755432129
    10. '             ' → logprob: -11.967972755432129

Token 295: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1610594093799591
    2. 'c' (adapté à ' c') → logprob: -1.9110593795776367
    3. '               ' → logprob: -7.161059379577637
    4. '           ' → logprob: -10.286059379577637
    5. ' ' → logprob: -11.536059379577637
    6. '                   ' → logprob: -11.786059379577637
    7. '   ' → logprob: -12.911059379577637
    8. '                ' → logprob: -13.411059379577637
    9. '            ' → logprob: -14.036059379577637
    10. '	c' → logprob: -14.286059379577637

Token 296: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.500001907348633
    3. '1' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '=' → logprob: -17.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. '+' → logprob: -17.875001907348633
    8. '  ' → logprob: -18.187501907348633
    9. '+=' → logprob: -18.312501907348633
    10. '++' → logprob: -18.500001907348633

Token 297: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.061973292380571365
    2. ' +=' → logprob: -2.8119733333587646
    3. ']+=' → logprob: -12.436973571777344
    4. '+' → logprob: -13.936973571777344
    5. '=' → logprob: -14.811973571777344
    6. '```' → logprob: -16.061973571777344
    7. '   ' → logprob: -16.186973571777344
    8. ' ' → logprob: -17.561973571777344
    9. '+=(' → logprob: -17.686973571777344
    10. '           ' → logprob: -17.811973571777344

Token 298: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '   ' → logprob: -18.758615493774414
    4. '0' → logprob: -18.758615493774414
    5. ' ' → logprob: -20.008615493774414
    6. '```' → logprob: -20.008615493774414
    7. '
' → logprob: -20.571115493774414
    8. '2' → logprob: -20.758615493774414
    9. '  ' → logprob: -20.821115493774414
    10. '１' → logprob: -20.821115493774414

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -18.687503814697266
    4. '```' → logprob: -18.812503814697266
    5. '１' → logprob: -18.937503814697266
    6. '   ' → logprob: -19.062503814697266
    7. '2' → logprob: -20.187503814697266
    8. '۱' → logprob: -20.437503814697266
    9. '
' → logprob: -20.750003814697266
    10. '!' → logprob: -21.062503814697266

Token 300: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033028353936970234
    2. '       ' → logprob: -5.753303050994873
    3. '   ' → logprob: -9.378302574157715
    4. ' for' → logprob: -10.878302574157715
    5. '
' → logprob: -11.628302574157715
    6. 'for' → logprob: -11.753302574157715
    7. '	       ' → logprob: -14.003302574157715
    8. '		' → logprob: -14.128302574157715
    9. '               ' → logprob: -14.128302574157715
    10. '          ' → logprob: -14.628302574157715

Token 301: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0073738847859203815
    2. '       ' → logprob: -5.132373809814453
    3. '   ' → logprob: -6.882373809814453
    4. ' for' → logprob: -8.007373809814453
    5. 'for' → logprob: -9.507373809814453
    6. '```' → logprob: -12.257373809814453
    7. '               ' → logprob: -13.507373809814453
    8. '	       ' → logprob: -13.757373809814453
    9. ' ' → logprob: -13.882373809814453
    10. '		' → logprob: -14.257373809814453

Token 302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4913546144962311
    2. '       ' → logprob: -1.2413545846939087
    3. ' for' → logprob: -2.9913547039031982
    4. '   ' → logprob: -3.4913547039031982
    5. '           ' → logprob: -3.9913547039031982
    6. '	for' → logprob: -9.991354942321777
    7. ' ' → logprob: -13.241354942321777
    8. '
' → logprob: -13.241354942321777
    9. '     ' → logprob: -13.366354942321777
    10. '        
' → logprob: -13.616354942321777

Token 303: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.0008748973486945033
    2. 'nx' → logprob: -7.750874996185303
    3. ' nv' → logprob: -8.375874519348145
    4. 'w' → logprob: -9.125874519348145
    5. 'u' → logprob: -9.500874519348145
    6. 'n' → logprob: -10.625874519348145
    7. 'nw' → logprob: -12.500874519348145
    8. 'neighbor' → logprob: -14.500874519348145
    9. 'to' → logprob: -15.125874519348145
    10. 'next' → logprob: -15.250874519348145

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602294147014618
    2. 'in' → logprob: -1.9102294445037842
    3. '	in' → logprob: -12.660229682922363
    4. ' ' → logprob: -13.660229682922363
    5. 'import' → logprob: -15.535229682922363
    6. '   ' → logprob: -15.660229682922363
    7. '```' → logprob: -16.160228729248047
    8. 'not' → logprob: -16.535228729248047
    9. '
' → logprob: -16.910228729248047
    10. ' ' → logprob: -17.035228729248047

Token 305: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0015024791937321424
    2. ' edges' → logprob: -6.501502513885498
    3. '(edges' → logprob: -16.251502990722656
    4. '   ' → logprob: -17.376502990722656
    5. '.edges' → logprob: -17.501502990722656
    6. ' ' → logprob: -18.751502990722656
    7. '_edges' → logprob: -18.751502990722656
    8. 'neighbors' → logprob: -20.001502990722656
    9. 'Edges' → logprob: -20.876502990722656
    10. 'edge' → logprob: -20.876502990722656

Token 306: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1472419600977446e-06
    2. 'v' → logprob: -13.750000953674316
    3. '[' → logprob: -20.250001907348633
    4. '	v' → logprob: -20.875001907348633
    5. '```' → logprob: -21.125001907348633
    6. ' [' → logprob: -22.375001907348633
    7. '(v' → logprob: -22.625001907348633
    8. '<v' → logprob: -22.625001907348633
    9. ' v' → logprob: -22.750001907348633
    10. '[u' → logprob: -23.125001907348633

Token 307: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05802812799811363
    2. ']:
' → logprob: -2.933028221130371
    3. ':' → logprob: -5.933028221130371
    4. ']' → logprob: -8.058028221130371
    5. ':
' → logprob: -9.683028221130371
    6. '):' → logprob: -10.308028221130371
    7. ']:
' → logprob: -10.433028221130371
    8. '):
' → logprob: -11.683028221130371
    9. '}:' → logprob: -11.808028221130371
    10. '>:' → logprob: -12.183028221130371

Token 308: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009855312528088689
    2. ' if' → logprob: -7.875985622406006
    3. '		       ' → logprob: -8.000985145568848
    4. 'if' → logprob: -9.625985145568848
    5. '	           ' → logprob: -9.750985145568848
    6. '<|end|>' → logprob: -10.250985145568848
    7. '	       ' → logprob: -10.625985145568848
    8. '           ' → logprob: -10.750985145568848
    9. '       ' → logprob: -10.875985145568848
    10. '			' → logprob: -11.625985145568848

Token 309: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6791728734970093
    2. ' if' → logprob: -0.9291728734970093
    3. '                   ' → logprob: -2.679172992706299
    4. 'if' (adapté à ' if') → logprob: -3.804172992706299
    5. '           ' → logprob: -6.304172992706299
    6. '   ' → logprob: -6.554172992706299
    7. ' ' → logprob: -7.054172992706299
    8. '                ' → logprob: -7.179172992706299
    9. '       ' → logprob: -7.304172992706299
    10. '    ' → logprob: -8.17917251586914

Token 310: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.31326326727867126
    2. ' not' → logprob: -1.3132632970809937
    3. '(not' → logprob: -14.438262939453125
    4. '!' → logprob: -15.188262939453125
    5. 'n' → logprob: -15.188262939453125
    6. '	not' → logprob: -15.688262939453125
    7. 'visited' → logprob: -16.313262939453125
    8. '
' → logprob: -16.938262939453125
    9. '               ' → logprob: -17.188262939453125
    10. 'nv' → logprob: -17.438262939453125

Token 311: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00861456897109747
    2. ' visited' → logprob: -4.758614540100098
    3. 'visit' → logprob: -19.633615493774414
    4. '
' → logprob: -19.758615493774414
    5. '   ' → logprob: -19.758615493774414
    6. ' ' → logprob: -20.133615493774414
    7. ' ' → logprob: -20.133615493774414
    8. 'visible' → logprob: -20.508615493774414
    9. 'vis' → logprob: -20.758615493774414
    10. '	' → logprob: -21.383615493774414

Token 312: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.9153885558771435e-06
    2. 'nv' → logprob: -13.250005722045898
    3. '[' → logprob: -13.625005722045898
    4. '[
' → logprob: -14.375005722045898
    5. '```' → logprob: -14.375005722045898
    6. ' [' → logprob: -15.000005722045898
    7. '
' → logprob: -15.250005722045898
    8. '   ' → logprob: -15.500005722045898
    9. '       ' → logprob: -15.875005722045898
    10. '(n' → logprob: -16.3750057220459

Token 313: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.896309739408025e-07
    2. '[n' → logprob: -15.375000953674316
    3. '[v' → logprob: -15.875000953674316
    4. 'nv' → logprob: -16.25
    5. 'av' → logprob: -16.75
    6. '[' → logprob: -16.75
    7. 'V' → logprob: -16.875
    8. ' nv' → logprob: -17.25
    9. '
' → logprob: -17.375
    10. 'w' → logprob: -17.5

Token 314: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.057677436619997025
    2. ']:' → logprob: -3.0576775074005127
    3. ']' → logprob: -5.432677268981934
    4. ':
' → logprob: -5.557677268981934
    5. ':' → logprob: -7.182677268981934
    6. ']:

' → logprob: -10.557677268981934
    7. ']:
' → logprob: -11.307677268981934
    8. '   ' → logprob: -12.432677268981934
    9. ' ]' → logprob: -12.682677268981934
    10. '):
' → logprob: -12.932677268981934

Token 315: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012959542218595743
    2. 'visited' → logprob: -7.876296043395996
    3. ' visited' → logprob: -8.126296043395996
    4. '				' → logprob: -8.626296043395996
    5. '               ' → logprob: -9.251296043395996
    6. '                       ' → logprob: -9.376296043395996
    7. '		           ' → logprob: -9.626296043395996
    8. '                    
' → logprob: -10.001296043395996
    9. '			       ' → logprob: -10.251296043395996
    10. '	               ' → logprob: -11.001296043395996

Token 316: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.20344795286655426
    2. ' visited' → logprob: -1.703447937965393
    3. '                   ' → logprob: -6.2034478187561035
    4. '                       ' → logprob: -11.953448295593262
    5. '                    
' → logprob: -13.578448295593262
    6. '               ' → logprob: -14.203448295593262
    7. '                    ' → logprob: -14.203448295593262
    8. ' 
' → logprob: -15.578448295593262
    9. 'stack' → logprob: -15.703448295593262
    10. '       ' → logprob: -15.828448295593262

Token 317: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -15.375003814697266
    4. 'nv' → logprob: -16.500003814697266
    5. '```' → logprob: -16.750003814697266
    6. '[
' → logprob: -16.875003814697266
    7. '[N' → logprob: -17.250003814697266
    8. '[v' → logprob: -17.375003814697266
    9. 'n' → logprob: -18.625003814697266
    10. '   ' → logprob: -18.875003814697266

Token 318: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0004990590969100595
    2. '[n' → logprob: -7.625499248504639
    3. '[v' → logprob: -12.25049877166748
    4. 'w' → logprob: -13.12549877166748
    5. 'nv' → logprob: -14.00049877166748
    6. '   ' → logprob: -14.25049877166748
    7. '[' → logprob: -15.00049877166748
    8. ' nv' → logprob: -15.00049877166748
    9. '       ' → logprob: -15.25049877166748
    10. '                   ' → logprob: -15.37549877166748

Token 319: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.7173287272453308
    2. ']' → logprob: -0.8423287272453308
    3. ']=' → logprob: -3.5923287868499756
    4. '=' → logprob: -3.5923287868499756
    5. ' =' → logprob: -3.8423287868499756
    6. '=True' → logprob: -5.8423285484313965
    7. '[v' → logprob: -7.2173285484313965
    8. 'v' → logprob: -8.217329025268555
    9. '=n' → logprob: -8.342329025268555
    10. 'True' → logprob: -8.842329025268555

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029810316860675812
    2. ' =' → logprob: -3.5298104286193848
    3. '=True' → logprob: -10.029809951782227
    4. ']' → logprob: -11.279809951782227
    5. ']=' → logprob: -13.154809951782227
    6. 'True' → logprob: -14.279809951782227
    7. '[' → logprob: -15.404809951782227
    8. '=
' → logprob: -15.404809951782227
    9. '                   ' → logprob: -16.279809951782227
    10. ')' → logprob: -17.279809951782227

Token 321: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004078401252627373
    2. ' True' → logprob: -5.504078388214111
    3. '(True' → logprob: -18.879077911376953
    4. '=True' → logprob: -20.879077911376953
    5. '1' → logprob: -23.629077911376953
    6. 'False' → logprob: -24.004077911376953
    7. '.True' → logprob: -24.504077911376953
    8. '
' → logprob: -24.504077911376953
    9. 'true' → logprob: -24.629077911376953
    10. '   ' → logprob: -25.004077911376953

Token 322: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002017974853515625
    2. '				' → logprob: -6.877017974853516
    3. '
' → logprob: -7.752017974853516
    4. '               ' → logprob: -9.252017974853516
    5. '           ' → logprob: -9.377017974853516
    6. '                       ' → logprob: -9.752017974853516
    7. 'stack' → logprob: -9.877017974853516
    8. ' stack' → logprob: -10.002017974853516
    9. '(stack' → logprob: -10.627017974853516
    10. '		           ' → logprob: -10.627017974853516

Token 323: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000990891712717712
    2. 'stack' → logprob: -8.000990867614746
    3. '				' → logprob: -8.125990867614746
    4. ' stack' → logprob: -8.625990867614746
    5. '	stack' → logprob: -10.000990867614746
    6. '               ' → logprob: -10.250990867614746
    7. '           ' → logprob: -10.375990867614746
    8. '
' → logprob: -11.000990867614746
    9. '		           ' → logprob: -12.000990867614746
    10. '   ' → logprob: -12.000990867614746

Token 324: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -7.493430894101039e-05
    2. ' stack' → logprob: -9.500075340270996
    3. '	stack' → logprob: -19.12507438659668
    4. 'stackoverflow' → logprob: -22.25007438659668
    5. '```' → logprob: -22.37507438659668
    6. '                   ' → logprob: -22.50007438659668
    7. '.stack' → logprob: -22.62507438659668
    8. '   ' → logprob: -22.75007438659668
    9. '(stack' → logprob: -23.12507438659668
    10. '_stack' → logprob: -23.12507438659668

Token 325: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.7954958821064793e-05
    2. '.' → logprob: -11.000018119812012
    3. '.extend' → logprob: -14.125018119812012
    4. 'append' → logprob: -15.250018119812012
    5. ' .' → logprob: -15.625018119812012
    6. '.app' → logprob: -17.500017166137695
    7. '.push' → logprob: -18.750017166137695
    8. '   ' → logprob: -19.250017166137695
    9. ' append' → logprob: -19.375017166137695
    10. '.Append' → logprob: -20.625017166137695

Token 326: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -9.7500581741333
    3. 'n' → logprob: -17.500059127807617
    4. '(nx' → logprob: -18.000059127807617
    5. '(
' → logprob: -18.125059127807617
    6. ' (' → logprob: -19.125059127807617
    7. '((' → logprob: -19.375059127807617
    8. '(nd' → logprob: -20.250059127807617
    9. '(nn' → logprob: -20.375059127807617
    10. '(N' → logprob: -20.500059127807617

Token 327: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.941850526549388e-06
    2. 'nv' → logprob: -11.875007629394531
    3. ' nv' → logprob: -14.250007629394531
    4. 'w' → logprob: -16.37500762939453
    5. 'av' → logprob: -17.12500762939453
    6. '_nv' → logprob: -17.37500762939453
    7. '```' → logprob: -18.87500762939453
    8. 'n' → logprob: -19.12500762939453
    9. '[n' → logprob: -19.37500762939453
    10. 'в' → logprob: -19.75000762939453

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. ')
' → logprob: -12.125005722045898
    3. ' )' → logprob: -15.625005722045898
    4. '))' → logprob: -16.3750057220459
    5. '）' → logprob: -16.6250057220459
    6. ')

' → logprob: -16.7500057220459
    7. ']' → logprob: -16.8750057220459
    8. ')]' → logprob: -17.6250057220459
    9. ')}' → logprob: -17.7500057220459
    10. ')}}' → logprob: -18.2500057220459

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004341698717325926
    2. '
' → logprob: -5.5043416023254395
    3. '<|end|>' → logprob: -9.004342079162598
    4. '        
' → logprob: -10.129342079162598
    5. '   ' → logprob: -10.254342079162598
    6. '```' → logprob: -11.129342079162598
    7. ',' → logprob: -11.254342079162598
    8. '
' → logprob: -11.629342079162598
    9. ')' → logprob: -11.879342079162598
    10. '<|end|>' → logprob: -12.504342079162598

Token 330: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.07271692156791687
    2. '   ' → logprob: -3.0727169513702393
    3. '
' → logprob: -3.9477169513702393
    4. ' ans' → logprob: -6.32271671295166
    5. '	ans' → logprob: -6.69771671295166
    6. 'if' → logprob: -7.44771671295166
    7. '```' → logprob: -7.82271671295166
    8. '(ans' → logprob: -8.07271671295166
    9. '_ans' → logprob: -9.19771671295166
    10. '       ' → logprob: -10.94771671295166

Token 331: ' Maximum' (ID: 49848)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01629769802093506
    2. 'if' → logprob: -4.141297817230225
    3. ' ans' → logprob: -8.766297340393066
    4. 'import' → logprob: -9.766297340393066
    5. '   ' → logprob: -11.016297340393066
    6. '#' → logprob: -11.766297340393066
    7. ' if' → logprob: -12.016297340393066
    8. 'from' → logprob: -12.266297340393066
    9. '	ans' → logprob: -12.516297340393066
    10. 'answer' → logprob: -12.641297340393066

Token 332: ' edges' (ID: 22569)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3300054669380188
    2. '+=' → logprob: -1.705005407333374
    3. ' +=' → logprob: -2.955005407333374
    4. '(ans' → logprob: -3.330005407333374
    5. '=' → logprob: -5.080005645751953
    6. ' ans' → logprob: -6.080005645751953
    7. ' =' → logprob: -6.205005645751953
    8. '_ans' → logprob: -8.080005645751953
    9. '
' → logprob: -9.330005645751953
    10. '	ans' → logprob: -9.455005645751953

Token 333: ' in' (ID: 306)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023799501359462738
    2. '=' → logprob: -3.773799419403076
    3. ' +=' → logprob: -7.648799419403076
    4. '+=(' → logprob: -10.273799896240234
    5. '_possible' → logprob: -11.023799896240234
    6. 'possible' → logprob: -11.023799896240234
    7. '+' → logprob: -12.523799896240234
    8. ' =' → logprob: -13.398799896240234
    9. '-=' → logprob: -13.898799896240234
    10. 'between' → logprob: -14.148799896240234

Token 334: ' bip' (ID: 54467)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2106482833623886
    2. ' c' → logprob: -1.7106482982635498
    3. ' a' → logprob: -5.335648059844971
    4. 'a' → logprob: -6.710648059844971
    5. 'max' → logprob: -7.460648059844971
    6. ' max' → logprob: -7.710648059844971
    7. '(c' → logprob: -7.960648059844971
    8. ' min' → logprob: -8.210648536682129
    9. ' component' → logprob: -8.210648536682129
    10. 'component' → logprob: -8.460648536682129

Token 335: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -4.4418171455617994e-05
    2. 'арт' → logprob: -11.250044822692871
    3. 'ar' → logprob: -11.500044822692871
    4. 'arti' → logprob: -12.125044822692871
    5. '```' → logprob: -12.500044822692871
    6. 'artisan' → logprob: -12.625044822692871
    7. 'a' → logprob: -13.125044822692871
    8. 'article' → logprob: -13.375044822692871
    9. 'part' → logprob: -14.250044822692871
    10. 'arte' → logprob: -14.750044822692871

Token 336: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -12.625005722045898
    3. 'ed' → logprob: -13.750005722045898
    4. '-' → logprob: -15.375005722045898
    5. 'ate' → logprob: -15.875005722045898
    6. 'ition' → logprob: -16.2500057220459
    7. '

' → logprob: -17.0000057220459
    8. 'te' → logprob: -17.0000057220459
    9. 'ited' → logprob: -17.0000057220459
    10. ' ite' → logprob: -17.2500057220459

Token 337: ' complete' (ID: 5533)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13723044097423553
    2. ' ans' → logprob: -2.262230396270752
    3. 'graph' → logprob: -5.137230396270752
    4. 'part' → logprob: -5.262230396270752
    5. 'component' → logprob: -5.512230396270752
    6. 'sets' → logprob: -5.887230396270752
    7. ' part' → logprob: -7.137230396270752
    8. '   ' → logprob: -7.387230396270752
    9. '(ans' → logprob: -7.387230396270752
    10. 'parts' → logprob: -7.512230396270752

Token 338: ':' (ID: 25)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.025876039639115334
    2. 'b' → logprob: -4.025876045227051
    3. ' graph' → logprob: -4.900876045227051
    4. ' bip' → logprob: -9.15087604522705
    5. 'raph' → logprob: -10.40087604522705
    6. '```' → logprob: -10.40087604522705
    7. 'bic' → logprob: -10.40087604522705
    8. 'graphs' → logprob: -11.02587604522705
    9. '	graph' → logprob: -11.27587604522705
    10. '_graph' → logprob: -11.52587604522705

Token 339: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5812404155731201
    2. 'c' → logprob: -0.8312404155731201
    3. '   ' → logprob: -6.206240653991699
    4. ' ans' → logprob: -6.456240653991699
    5. 'ans' → logprob: -6.706240653991699
    6. '       ' → logprob: -7.831240653991699
    7. '    ' → logprob: -11.0812406539917
    8. ' ' → logprob: -11.4562406539917
    9. '```' → logprob: -11.8312406539917
    10. '           ' → logprob: -12.0812406539917

Token 340: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5358694731257856e-05
    2. '_' → logprob: -10.375035285949707
    3. '１' → logprob: -14.000035285949707
    4. '```' → logprob: -14.125035285949707
    5. '
' → logprob: -14.687535285949707
    6. '[' → logprob: -15.250035285949707
    7. '' → logprob: -15.625035285949707
    8. '#' → logprob: -15.687535285949707
    9. ' ' → logprob: -15.812535285949707
    10. 'c' → logprob: -16.125036239624023

Token 341: '*c' (ID: 83421)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.038327425718307495
    2. '*c' → logprob: -3.28832745552063
    3. ' *' → logprob: -8.16332721710205
    4. '*C' → logprob: -15.28832721710205
    5. ' ' → logprob: -16.163328170776367
    6. '
' → logprob: -16.538328170776367
    7. '*object' → logprob: -16.663328170776367
    8. '   ' → logprob: -16.788328170776367
    9. '#' → logprob: -16.788328170776367
    10. '**' → logprob: -16.788328170776367

Token 342: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '۲' → logprob: -16.375
    3. '２' → logprob: -16.625
    4. '₂' → logprob: -16.75
    5. ' ' → logprob: -17.375
    6. '1' → logprob: -17.375
    7. '```' → logprob: -18.25
    8. '२' → logprob: -18.5
    9. '٢' → logprob: -19.0
    10. '২' → logprob: -19.125

Token 343: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06706064939498901
    2. '       ' → logprob: -3.192060708999634
    3. '
' → logprob: -4.317060470581055
    4. ' ans' → logprob: -4.942060470581055
    5. ',' → logprob: -7.067060470581055
    6. ' +' → logprob: -7.317060470581055
    7. '	ans' → logprob: -7.817060470581055
    8. 'ans' → logprob: -8.192060470581055
    9. '  ' → logprob: -8.692060470581055
    10. ' ' → logprob: -8.817060470581055

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07002079486846924
    2. '   ' → logprob: -2.6950206756591797
    3. ' ans' → logprob: -9.82002067565918
    4. 'ans' → logprob: -11.57002067565918
    5. '        
' → logprob: -12.32002067565918
    6. ',' → logprob: -12.82002067565918
    7. '  ' → logprob: -12.82002067565918
    8. ' ' → logprob: -12.94502067565918
    9. '           ' → logprob: -13.32002067565918
    10. '	ans' → logprob: -13.32002067565918

Token 345: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018313584849238396
    2. ' ans' → logprob: -4.018313407897949
    3. '   ' → logprob: -9.26831340789795
    4. '	ans' → logprob: -10.26831340789795
    5. '       ' → logprob: -10.64331340789795
    6. '(ans' → logprob: -12.51831340789795
    7. '_ans' → logprob: -13.14331340789795
    8. 'answer' → logprob: -13.39331340789795
    9. 'edges' → logprob: -13.76831340789795
    10. 'max' → logprob: -14.26831340789795

Token 346: ' Sub' (ID: 5934)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00011343709047650918
    2. ' ans' → logprob: -10.500113487243652
    3. 'existing' → logprob: -10.875113487243652
    4. 'edges' → logprob: -11.125113487243652
    5. '#' → logprob: -11.250113487243652
    6. '   ' → logprob: -12.125113487243652
    7. 'possible' → logprob: -12.125113487243652
    8. 'total' → logprob: -12.250113487243652
    9. '       ' → logprob: -12.375113487243652
    10. 'current' → logprob: -12.500113487243652

Token 347: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -0.4269499182701111
    2. 'ans' → logprob: -1.3019499778747559
    3. 'stract' → logprob: -3.301949977874756
    4. 'tracted' → logprob: -3.426949977874756
    5. '#' → logprob: -6.551949977874756
    6. '
' → logprob: -6.801949977874756
    7. 'traction' → logprob: -7.551949977874756
    8. 'se' → logprob: -7.551949977874756
    9. '   ' → logprob: -7.801949977874756
    10. ' ans' → logprob: -8.426949501037598

Token 348: ' existing' (ID: 9595)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6919868588447571
    2. ' (' → logprob: -1.6919867992401123
    3. 'c' → logprob: -1.9419867992401123
    4. '(c' → logprob: -2.8169867992401123
    5. ' ans' → logprob: -3.8169867992401123
    6. 'from' → logprob: -4.191987037658691
    7. '(' → logprob: -4.441987037658691
    8. '(ans' → logprob: -4.566987037658691
    9. '=' → logprob: -4.691987037658691
    10. '   ' → logprob: -5.316987037658691

Token 349: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.33140963315963745
    2. ' edges' → logprob: -1.9564096927642822
    3. '_edges' → logprob: -2.0814096927642822
    4. 'E' → logprob: -4.581409454345703
    5. 'len' → logprob: -5.581409454345703
    6. '   ' → logprob: -7.331409454345703
    7. ' E' → logprob: -7.706409454345703
    8. '_edge' → logprob: -8.206409454345703
    9. 'edge' → logprob: -9.081409454345703
    10. 'ans' → logprob: -9.206409454345703

Token 350: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018703327514231205
    2. '   ' → logprob: -6.501870155334473
    3. ' -=' → logprob: -9.001870155334473
    4. ' -' → logprob: -9.626870155334473
    5. '-' → logprob: -10.251870155334473
    6. '
' → logprob: -10.876870155334473
    7. ' +=' → logprob: -11.001870155334473
    8. ' =' → logprob: -11.001870155334473
    9. ',' → logprob: -11.126870155334473
    10. '           ' → logprob: -11.251870155334473

Token 351: ' this' (ID: 495)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1926789283752441
    2. 'this' → logprob: -1.8176789283752441
    3. ' c' → logprob: -2.192678928375244
    4. ' this' → logprob: -2.442678928375244
    5. 'the' → logprob: -2.442678928375244
    6. 'stack' → logprob: -2.567678928375244
    7. 'edges' → logprob: -2.817678928375244
    8. ' edges' → logprob: -3.442678928375244
    9. ' the' → logprob: -3.567678928375244
    10. ' stack' → logprob: -4.192678928375244

Token 352: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.03836849704384804
    2. ' component' → logprob: -3.2883684635162354
    3. 'connected' → logprob: -8.663368225097656
    4. ' connected' → logprob: -9.788368225097656
    5. 'sub' → logprob: -10.413368225097656
    6. '_component' → logprob: -10.788368225097656
    7. '	component' → logprob: -11.663368225097656
    8. '   ' → logprob: -12.038368225097656
    9. 'comp' → logprob: -12.038368225097656
    10. '
' → logprob: -12.163368225097656

Token 353: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018735475605353713
    2. '<|end|>' → logprob: -7.50187349319458
    3. '        
' → logprob: -8.001873970031738
    4. '
' → logprob: -8.251873970031738
    5. ',' → logprob: -8.251873970031738
    6. ' edges' → logprob: -9.251873970031738
    7. '<|end|>' → logprob: -9.376873970031738
    8. 'edges' → logprob: -9.501873970031738
    9. '        ' → logprob: -10.001873970031738
    10. 'count' → logprob: -10.751873970031738

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003408701391890645
    2. '        
' → logprob: -7.003408908843994
    3. 'edge' → logprob: -7.628408908843994
    4. 'existing' → logprob: -7.628408908843994
    5. 'edges' → logprob: -7.878408908843994
    6. 'count' → logprob: -8.128408432006836
    7. '        ' → logprob: -8.503408432006836
    8. 'component' → logprob: -8.753408432006836
    9. 'total' → logprob: -10.003408432006836
    10. '#' → logprob: -10.003408432006836

Token 355: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5592255592346191
    2. 'cnt' → logprob: -2.309225559234619
    3. 'existing' → logprob: -2.309225559234619
    4. 'comp' → logprob: -2.684225559234619
    5. 'edge' → logprob: -3.059225559234619
    6. 'component' → logprob: -3.434225559234619
    7. 'count' → logprob: -3.434225559234619
    8. 'edges' → logprob: -3.934225559234619
    9. 'total' → logprob: -5.309225559234619
    10. 'ans' → logprob: -5.309225559234619

Token 356: ' Count' (ID: 6789)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -1.3793967962265015
    2. 'cnt' → logprob: -1.5043967962265015
    3. 'edge' → logprob: -1.7543967962265015
    4. 'comp' → logprob: -2.004396915435791
    5. 'component' → logprob: -3.129396915435791
    6. '       ' → logprob: -3.504396915435791
    7. 'count' → logprob: -3.504396915435791
    8. 'ans' → logprob: -3.754396915435791
    9. 'edges' → logprob: -4.004396915435791
    10. '   ' → logprob: -4.254396915435791

Token 357: ' existing' (ID: 9595)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -1.0293902158737183
    2. 'edges' → logprob: -1.9043902158737183
    3. ' =' → logprob: -2.529390335083008
    4. 'existing' → logprob: -2.654390335083008
    5. 'comp' → logprob: -2.779390335083008
    6. 'e' → logprob: -2.904390335083008
    7. 'edge' → logprob: -3.154390335083008
    8. '=' → logprob: -3.154390335083008
    9. 'component' → logprob: -3.529390335083008
    10. '   ' → logprob: -3.654390335083008

Token 358: ' edges' (ID: 22569)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.22444838285446167
    2. 'edges' → logprob: -1.8494484424591064
    3. 'e' → logprob: -4.224448204040527
    4. ' =' → logprob: -5.224448204040527
    5. 'edge' → logprob: -5.474448204040527
    6. '_edge' → logprob: -5.474448204040527
    7. 'existing' → logprob: -5.849448204040527
    8. '   ' → logprob: -6.099448204040527
    9. '=' → logprob: -6.099448204040527
    10. '_e' → logprob: -6.349448204040527

Token 359: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003604224883019924
    2. 'edge' → logprob: -6.628604412078857
    3. 'edges' → logprob: -6.753604412078857
    4. 'existing' → logprob: -7.753604412078857
    5. 'count' → logprob: -8.2536039352417
    6. '        
' → logprob: -9.0036039352417
    7. 'cnt' → logprob: -9.5036039352417
    8. 'component' → logprob: -10.3786039352417
    9. ' edges' → logprob: -10.6286039352417
    10. '   ' → logprob: -11.0036039352417

Token 360: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.6587231159210205
    2. 'this' → logprob: -1.5337231159210205
    3. 'the' → logprob: -2.6587231159210205
    4. ' stack' → logprob: -2.7837231159210205
    5. 'stack' → logprob: -3.0337231159210205
    6. ' the' → logprob: -3.2837231159210205
    7. 'sum' → logprob: -4.783722877502441
    8. 'component' → logprob: -4.908722877502441
    9. 'edges' → logprob: -5.408722877502441
    10. 'c' → logprob: -5.408722877502441

Token 361: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.01128678023815155
    2. ' component' → logprob: -4.511286735534668
    3. '       ' → logprob: -9.761286735534668
    4. '   ' → logprob: -10.386286735534668
    5. '
' → logprob: -10.511286735534668
    6. 'comp' → logprob: -10.761286735534668
    7. '_component' → logprob: -10.761286735534668
    8. '```' → logprob: -11.011286735534668
    9. '	component' → logprob: -11.136286735534668
    10. '           ' → logprob: -11.636286735534668

Token 362: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004286384675651789
    2. ' edges' → logprob: -6.129286289215088
    3. ',' → logprob: -7.379286289215088
    4. '        
' → logprob: -7.754286289215088
    5. 'edges' → logprob: -8.379286766052246
    6. ' =' → logprob: -8.754286766052246
    7. 'count' → logprob: -8.879286766052246
    8. '   ' → logprob: -9.629286766052246
    9. ' count' → logprob: -10.129286766052246
    10. ' existing' → logprob: -10.379286766052246

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014109088107943535
    2. 'edge' → logprob: -4.889109134674072
    3. 'existing' → logprob: -6.389109134674072
    4. 'component' → logprob: -6.514109134674072
    5. 'count' → logprob: -6.514109134674072
    6. 'cnt' → logprob: -7.139109134674072
    7. 'edges' → logprob: -8.139108657836914
    8. 'comp' → logprob: -8.514108657836914
    9. 'node' → logprob: -9.389108657836914
    10. ' edge' → logprob: -9.639108657836914

Token 364: ' comp' (ID: 1050)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.8888715505599976
    2. 'comp' (adapté à ' comp') → logprob: -1.2638715505599976
    3. 'cnt' → logprob: -2.388871669769287
    4. 'existing' → logprob: -2.513871669769287
    5. '       ' → logprob: -2.763871669769287
    6. 'count' → logprob: -3.638871669769287
    7. 'component' → logprob: -3.638871669769287
    8. 'edges' → logprob: -5.138871669769287
    9. 'node' → logprob: -5.638871669769287
    10. 'nodes' → logprob: -6.138871669769287

Token 365: '_vertices' (ID: 96842)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.0533582903444767
    2. '_edges' → logprob: -3.303358316421509
    3. '_vertices' → logprob: -4.67835807800293
    4. 'ent' → logprob: -6.30335807800293
    5. '_size' → logprob: -6.55335807800293
    6. ' =' → logprob: -6.67835807800293
    7. 'nodes' → logprob: -8.30335807800293
    8. '=' → logprob: -8.30335807800293
    9. 'onent' → logprob: -8.80335807800293
    10. '_node' → logprob: -9.30335807800293

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759958028793335
    2. '=' → logprob: -0.8259958028793335
    3. '=set' → logprob: -10.575995445251465
    4. ',' → logprob: -11.325995445251465
    5. '=[]' → logprob: -11.450995445251465
    6. '_nodes' → logprob: -13.200995445251465
    7. 's' → logprob: -13.325995445251465
    8. '_set' → logprob: -13.700995445251465
    9. 'set' → logprob: -14.200995445251465
    10. '=[]
' → logprob: -14.450995445251465

Token 367: ' c' (ID: 274)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.36209502816200256
    2. '[]' → logprob: -1.7370949983596802
    3. '{' → logprob: -2.6120951175689697
    4. '[]
' → logprob: -3.7370951175689697
    5. 'stack' → logprob: -4.112094879150391
    6. '[' → logprob: -4.487094879150391
    7. ' set' → logprob: -6.862094879150391
    8. ' []' → logprob: -7.487094879150391
    9. '{}' → logprob: -7.737094879150391
    10. 'visited' → logprob: -8.73709487915039

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. 'c' → logprob: -13.875004768371582
    3. '2' → logprob: -14.750004768371582
    4. 'nt' → logprob: -14.812504768371582
    5. '{' → logprob: -15.187504768371582
    6. 'v' → logprob: -15.250004768371582
    7. 'ol' → logprob: -15.500004768371582
    8. '(' → logprob: -15.562504768371582
    9. '(c' → logprob: -15.750004768371582
    10. '+' → logprob: -16.062503814697266

Token 369: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08383309096097946
    2. ' +' → logprob: -2.8338329792022705
    3. '+c' → logprob: -3.8338329792022705
    4. '+C' → logprob: -14.958832740783691
    5. '+r' → logprob: -15.208832740783691
    6. '＋' → logprob: -15.833832740783691
    7. '+
' → logprob: -16.083833694458008
    8. '+p' → logprob: -16.208833694458008
    9. '+k' → logprob: -16.333833694458008
    10. '+n' → logprob: -16.458833694458008

Token 370: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.547789674485102e-05
    2. ' c' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.375036239624023
    4. '	c' → logprob: -18.625036239624023
    5. '       ' → logprob: -19.125036239624023
    6. ' ' → logprob: -20.375036239624023
    7. ')c' → logprob: -20.750036239624023
    8. '
' → logprob: -20.875036239624023
    9. '$c' → logprob: -21.000036239624023
    10. '           ' → logprob: -21.000036239624023

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '1' → logprob: -12.500006675720215
    3. ' ' → logprob: -12.875006675720215
    4. '２' → logprob: -15.375006675720215
    5. '۲' → logprob: -16.06250762939453
    6. '```' → logprob: -16.50000762939453
    7. '२' → logprob: -17.50000762939453
    8. '٢' → logprob: -17.68750762939453
    9. '₂' → logprob: -17.75000762939453
    10. '   ' → logprob: -17.93750762939453

Token 372: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018409086391329765
    2. 'comp' → logprob: -5.018409252166748
    3. 'count' → logprob: -5.893409252166748
    4. ' comp' → logprob: -6.018409252166748
    5. 'edges' → logprob: -6.643409252166748
    6. 'existing' → logprob: -6.643409252166748
    7. ',' → logprob: -7.018409252166748
    8. '
' → logprob: -7.518409252166748
    9. ' edges' → logprob: -7.518409252166748
    10. '        
' → logprob: -7.768409252166748

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006731472443789244
    2. 'comp' → logprob: -6.3817315101623535
    3. 'existing' → logprob: -6.3817315101623535
    4. 'edges' → logprob: -6.7567315101623535
    5. 'count' → logprob: -7.0067315101623535
    6. 'edge' → logprob: -8.006731033325195
    7. ' existing' → logprob: -8.881731033325195
    8. ' comp' → logprob: -9.006731033325195
    9. ' edges' → logprob: -9.131731033325195
    10. '   ' → logprob: -9.131731033325195

Token 374: ' #' (ID: 1069)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.14022231101989746
    2. 'existing' → logprob: -2.3902223110198975
    3. 'edge' → logprob: -3.3902223110198975
    4. 'count' → logprob: -6.515222549438477
    5. 'cnt' → logprob: -6.515222549438477
    6. '       ' → logprob: -7.140222549438477
    7. 'visited' → logprob: -8.140222549438477
    8. '   ' → logprob: -8.265222549438477
    9. ' comp' → logprob: -8.265222549438477
    10. 'component' → logprob: -8.390222549438477

Token 375: ' sum' (ID: 4215)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.841159999370575
    2. 'existing' → logprob: -0.966159999370575
    3. 'comp' → logprob: -1.7161600589752197
    4. 'cnt' → logprob: -5.466159820556641
    5. 'count' → logprob: -6.841159820556641
    6. 'total' → logprob: -7.216159820556641
    7. 'm' → logprob: -7.466159820556641
    8. 'deg' → logprob: -8.34115982055664
    9. 'e' → logprob: -8.46615982055664
    10. 'edges' → logprob: -8.84115982055664

Token 376: ' degrees' (ID: 18210)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.2072162926197052
    2. '_deg' → logprob: -2.082216262817383
    3. '_degree' → logprob: -4.082216262817383
    4. 'deg' → logprob: -4.332216262817383
    5. '_de' → logprob: -4.582216262817383
    6. '=' → logprob: -5.582216262817383
    7. ' =' → logprob: -5.707216262817383
    8. '_' → logprob: -5.707216262817383
    9. '_of' → logprob: -6.332216262817383
    10. 'd' → logprob: -6.582216262817383

Token 377: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43164536356925964
    2. '=' → logprob: -1.056645393371582
    3. '       ' → logprob: -5.931645393371582
    4. '           ' → logprob: -9.056645393371582
    5. 'deg' → logprob: -10.681645393371582
    6. '_deg' → logprob: -10.806645393371582
    7. 'degree' → logprob: -11.181645393371582
    8. '_edges' → logprob: -11.181645393371582
    9. '_degree' → logprob: -11.306645393371582
    10. 'degrees' → logprob: -11.306645393371582

Token 378: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2813526391983032
    2. '0' → logprob: -2.1563525199890137
    3. 'sum' → logprob: -2.2813525199890137
    4. ' sum' → logprob: -4.656352519989014
    5. ' ' → logprob: -5.031352519989014
    6. 'c' → logprob: -5.656352519989014
    7. 'comp' → logprob: -5.781352519989014
    8. '           ' → logprob: -6.031352519989014
    9. '       ' → logprob: -7.156352519989014
    10. ' c' → logprob: -7.281352519989014

Token 379: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.48133426904678345
    2. '2' → logprob: -0.9813342690467834
    3. '0' → logprob: -5.481334209442139
    4. 'c' → logprob: -6.106334209442139
    5. ' sum' → logprob: -7.731334209442139
    6. 'comp' → logprob: -8.856334686279297
    7. 'len' → logprob: -9.356334686279297
    8. '           ' → logprob: -9.481334686279297
    9. ' ' → logprob: -10.731334686279297
    10. '   ' → logprob: -10.731334686279297

Token 380: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.31454649567604065
    2. ' *' → logprob: -1.3145464658737183
    3. '*c' → logprob: -7.439546585083008
    4. '*(' → logprob: -8.064546585083008
    5. 'sum' → logprob: -9.189546585083008
    6. '*out' → logprob: -9.439546585083008
    7. '```' → logprob: -10.189546585083008
    8. 'E' → logprob: -10.564546585083008
    9. '   ' → logprob: -10.689546585083008
    10. '*object' → logprob: -11.064546585083008

Token 381: 'E' (ID: 36)
  Prédit: 'E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.16207951307296753
    2. 'ans' → logprob: -2.6620795726776123
    3. 'comp' → logprob: -3.9120795726776123
    4. 'len' → logprob: -4.162079334259033
    5. '(E' → logprob: -4.287079334259033
    6. 'sum' → logprob: -4.537079334259033
    7. '(ans' → logprob: -5.662079334259033
    8. '(comp' → logprob: -5.787079334259033
    9. 'edges' → logprob: -6.037079334259033
    10. '(len' → logprob: -6.287079334259033

Token 382: '_comp' (ID: 34754)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9613774418830872
    2. '
' → logprob: -2.0863773822784424
    3. ' in' → logprob: -2.3363773822784424
    4. 'component' → logprob: -2.4613773822784424
    5. '_component' → logprob: -2.4613773822784424
    6. '_in' → logprob: -2.7113773822784424
    7. '_comp' → logprob: -3.3363773822784424
    8. 'comp' → logprob: -4.2113776206970215
    9. ' component' → logprob: -4.4613776206970215
    10. 'in' → logprob: -4.4613776206970215

Token 383: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002547839190810919
    2. '
' → logprob: -7.002547740936279
    3. ',' → logprob: -7.252547740936279
    4. '        
' → logprob: -7.752547740936279
    5. '<|end|>' → logprob: -8.252548217773438
    6. '<|end|>' → logprob: -9.877548217773438
    7. 'E' → logprob: -11.190048217773438
    8. '   ' → logprob: -11.315048217773438
    9. 'total' → logprob: -11.315048217773438
    10. 'n' → logprob: -11.565048217773438

Token 384: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001443035143893212
    2. '        
' → logprob: -9.875144004821777
    3. ',' → logprob: -11.000144004821777
    4. 'existing' → logprob: -11.500144004821777
    5. '<|end|>' → logprob: -11.750144004821777
    6. 'total' → logprob: -11.750144004821777
    7. 'E' → logprob: -11.875144004821777
    8. '
' → logprob: -12.000144004821777
    9. 'count' → logprob: -12.125144004821777
    10. ' existing' → logprob: -12.625144004821777

Token 385: ' #' (ID: 1069)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.8768765330314636
    2. 'deg' → logprob: -1.2518765926361084
    3. 'sum' → logprob: -1.8768765926361084
    4. 'comp' → logprob: -3.1268765926361084
    5. 'edge' → logprob: -3.5018765926361084
    6. '       ' → logprob: -3.7518765926361084
    7. 'degrees' → logprob: -4.126876354217529
    8. 'E' → logprob: -4.126876354217529
    9. 'edges' → logprob: -5.501876354217529
    10. 'total' → logprob: -6.001876354217529

Token 386: ' To' (ID: 2514)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.5200210809707642
    2. 'degree' → logprob: -1.6450210809707642
    3. 'edge' → logprob: -2.8950209617614746
    4. 'comp' → logprob: -2.8950209617614746
    5. 'sum' → logprob: -3.3950209617614746
    6. 'E' → logprob: -3.7700209617614746
    7. 'existing' → logprob: -4.145020961761475
    8. 'degrees' → logprob: -4.770020961761475
    9. 'cnt' → logprob: -5.645020961761475
    10. 'edges' → logprob: -5.770020961761475

Token 387: ' get' (ID: 717)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.24680213630199432
    2. 't' → logprob: -2.6218020915985107
    3. 'calculate' → logprob: -3.6218020915985107
    4. 'add' → logprob: -3.7468020915985107
    5. 'total' → logprob: -3.7468020915985107
    6. 'continue' → logprob: -3.8718020915985107
    7. 'existing' → logprob: -5.37180233001709
    8. 'do' → logprob: -5.49680233001709
    9. 'otal' → logprob: -5.49680233001709
    10. 'get' → logprob: -5.62180233001709

Token 388: ' edges' (ID: 22569)
  Prédit: 'existing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'existing' → logprob: -1.2560815811157227
    2. 'E' → logprob: -1.5060815811157227
    3. 'edge' → logprob: -1.8810815811157227
    4. 'deg' → logprob: -2.6310815811157227
    5. ' existing' → logprob: -3.2560815811157227
    6. 'total' → logprob: -3.2560815811157227
    7. 'e' → logprob: -3.5060815811157227
    8. 'comp' → logprob: -3.5060815811157227
    9. 'degree' → logprob: -3.7560815811157227
    10. ' comp' → logprob: -3.8810815811157227

Token 389: ' per' (ID: 777)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.22860583662986755
    2. '_count' → logprob: -2.3536057472229004
    3. ' =' → logprob: -3.6036057472229004
    4. 'in' → logprob: -3.8536057472229004
    5. '_comp' → logprob: -3.9786057472229004
    6. 'count' → logprob: -4.2286057472229
    7. '       ' → logprob: -4.8536057472229
    8. '=' → logprob: -4.9786057472229
    9. ' in' → logprob: -5.3536057472229
    10. '   ' → logprob: -6.1036057472229

Token 390: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.005306689068675041
    2. ' component' → logprob: -5.505306720733643
    3. 'comp' → logprob: -7.630306720733643
    4. 'connected' → logprob: -8.380306243896484
    5. '	component' → logprob: -9.255306243896484
    6. ' connected' → logprob: -10.130306243896484
    7. '```' → logprob: -10.130306243896484
    8. 'ponent' → logprob: -10.380306243896484
    9. 'graph' → logprob: -10.630306243896484
    10. '-component' → logprob: -10.630306243896484

Token 391: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006697608157992363
    2. ',' → logprob: -6.881697654724121
    3. '        
' → logprob: -6.881697654724121
    4. 'degree' → logprob: -7.006697654724121
    5. 'count' → logprob: -7.506697654724121
    6. ' edges' → logprob: -7.756697654724121
    7. 'edges' → logprob: -8.006697654724121
    8. 'edge' → logprob: -8.131697654724121
    9. 'total' → logprob: -8.506697654724121
    10. ' degree' → logprob: -8.506697654724121

Token 392: ' sum' (ID: 4215)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -1.4508148431777954
    2. 'comp' → logprob: -1.7008148431777954
    3. 'edge' → logprob: -1.8258148431777954
    4. 'degree' → logprob: -2.075814723968506
    5. ' comp' → logprob: -2.825814723968506
    6. '       ' → logprob: -3.075814723968506
    7. 'edges' → logprob: -3.200814723968506
    8. 'cnt' → logprob: -3.200814723968506
    9. 'count' → logprob: -3.950814723968506
    10. ' deg' → logprob: -4.075814723968506

Token 393: ' degrees' (ID: 18210)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.5097180008888245
    2. 'degrees' → logprob: -2.1347179412841797
    3. '_deg' → logprob: -2.1347179412841797
    4. ' degrees' → logprob: -3.1347179412841797
    5. 'degree' → logprob: -3.3847179412841797
    6. '=' → logprob: -3.5097179412841797
    7. ' deg' → logprob: -4.25971794128418
    8. 'd' → logprob: -4.50971794128418
    9. '_degree' → logprob: -4.75971794128418
    10. '           ' → logprob: -6.00971794128418

Token 394: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5175068378448486
    2. '       ' → logprob: -1.7675068378448486
    3. ' =' → logprob: -2.2675068378448486
    4. 'degrees' → logprob: -3.5175068378448486
    5. 'comp' → logprob: -3.6425068378448486
    6. 'deg' → logprob: -4.0175065994262695
    7. '           ' → logprob: -4.1425065994262695
    8. 'degree' → logprob: -4.3925065994262695
    9. 'edges' → logprob: -5.3925065994262695
    10. '               ' → logprob: -5.7675065994262695

Token 395: ' vertices' (ID: 38360)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.4800157845020294
    2. 'stack' → logprob: -1.480015754699707
    3. 'v' → logprob: -3.105015754699707
    4. '[' → logprob: -3.480015754699707
    5. 'edges' → logprob: -3.730015754699707
    6. 'visited' → logprob: -4.230015754699707
    7. ' stack' → logprob: -4.480015754699707
    8. 'range' → logprob: -5.730015754699707
    9. '[node' → logprob: -5.855015754699707
    10. ' v' → logprob: -5.855015754699707

Token 396: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5930874347686768
    2. '=' → logprob: -1.7180874347686768
    3. 'in' → logprob: -2.2180874347686768
    4. ' =' → logprob: -2.2180874347686768
    5. ' in' → logprob: -3.4680874347686768
    6. '           ' → logprob: -5.968087196350098
    7. ',' → logprob: -6.093087196350098
    8. 'comp' → logprob: -6.343087196350098
    9. '               ' → logprob: -6.593087196350098
    10. '_in' → logprob: -6.593087196350098

Token 397: ' component' (ID: 6392)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.07845883816480637
    2. ' stack' → logprob: -2.703458786010742
    3. 'component' → logprob: -5.703458786010742
    4. 'comp' → logprob: -6.453458786010742
    5. 'this' → logprob: -7.078458786010742
    6. 'the' → logprob: -7.078458786010742
    7. 'edges' → logprob: -7.453458786010742
    8. ' this' → logprob: -8.453458786010742
    9. '   ' → logprob: -8.453458786010742
    10. '	stack' → logprob: -8.953458786010742

Token 398: ' /' (ID: 820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013725255616009235
    2. '        
' → logprob: -5.638725280761719
    3. 'total' → logprob: -6.513725280761719
    4. ',' → logprob: -6.513725280761719
    5. '<|end|>' → logprob: -6.513725280761719
    6. 'degree' → logprob: -6.638725280761719
    7. 'degrees' → logprob: -6.763725280761719
    8. '<|end|>' → logprob: -7.638725280761719
    9. ' degrees' → logprob: -7.888725280761719
    10. 'existing' → logprob: -8.138725280761719

Token 399: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007516168989241123
    2. ' ' → logprob: -7.250751495361328
    3. '   ' → logprob: -11.375751495361328
    4. '
' → logprob: -11.375751495361328
    5. '```' → logprob: -11.750751495361328
    6. '1' → logprob: -12.250751495361328
    7. '           ' → logprob: -13.375751495361328
    8. '       ' → logprob: -13.875751495361328
    9. '  ' → logprob: -13.875751495361328
    10. ' ' → logprob: -14.875751495361328

Token 400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000305310997646302
    2. ' ' → logprob: -8.12530517578125
    3. '   ' → logprob: -12.50030517578125
    4. '
' → logprob: -13.37530517578125
    5. '1' → logprob: -13.37530517578125
    6. '```' → logprob: -13.87530517578125
    7. '  ' → logprob: -14.50030517578125
    8. '       ' → logprob: -15.12530517578125
    9. '           ' → logprob: -15.25030517578125
    10. ' ' → logprob: -16.25030517578125

Token 401: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00829694140702486
    2. '        
' → logprob: -5.383296966552734
    3. 'degree' → logprob: -6.633296966552734
    4. 'total' → logprob: -7.758296966552734
    5. ',' → logprob: -8.258296966552734
    6. 'sum' → logprob: -8.508296966552734
    7. 'degrees' → logprob: -8.633296966552734
    8. 'edges' → logprob: -8.758296966552734
    9. '
' → logprob: -9.258296966552734
    10. 'comp' → logprob: -9.258296966552734

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002788551209960133
    2. '        
' → logprob: -8.75027847290039
    3. '
' → logprob: -10.37527847290039
    4. 'edges' → logprob: -10.87527847290039
    5. 'existing' → logprob: -11.50027847290039
    6. 'total' → logprob: -12.00027847290039
    7. 'E' → logprob: -12.12527847290039
    8. 'edge' → logprob: -12.12527847290039
    9. '   ' → logprob: -12.37527847290039
    10. ',' → logprob: -12.37527847290039

Token 403: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04287860170006752
    2. 'degree' → logprob: -3.6678786277770996
    3. 'deg' → logprob: -5.2928786277771
    4. 'sum' → logprob: -6.2928786277771
    5. 'degrees' → logprob: -6.4178786277771
    6. 'total' → logprob: -6.4178786277771
    7. '        
' → logprob: -6.6678786277771
    8. 'comp' → logprob: -6.9178786277771
    9. 'edge' → logprob: -7.0428786277771
    10. 'edges' → logprob: -7.0428786277771

Token 404: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8797879815101624
    2. 'degree' → logprob: -1.6297879219055176
    3. 'deg' → logprob: -1.7547879219055176
    4. 'comp' → logprob: -2.0047879219055176
    5. 'edge' → logprob: -4.004787921905518
    6. 'sum' → logprob: -4.379787921905518
    7. 'degrees' → logprob: -4.379787921905518
    8. 'edges' → logprob: -4.504787921905518
    9. 'total' → logprob: -5.004787921905518
    10. 'cnt' → logprob: -5.379787921905518

Token 405: ' no' (ID: 860)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.5122262835502625
    2. '#' → logprob: -2.2622263431549072
    3. '       ' → logprob: -3.1372263431549072
    4. 'edges' → logprob: -3.2622263431549072
    5. 'cnt' → logprob: -3.3872263431549072
    6. 'visited' → logprob: -3.7622263431549072
    7. 'we' → logprob: -3.8872263431549072
    8. 'degrees' → logprob: -3.8872263431549072
    9. 'degree' → logprob: -4.137226104736328
    10. 'count' → logprob: -4.512226104736328

Token 406: ' need' (ID: 1309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.059487681835889816
    2. 't' → logprob: -4.684487819671631
    3. 'visited' → logprob: -5.059487819671631
    4. 'e' → logprob: -5.184487819671631
    5. ' visited' → logprob: -5.309487819671631
    6. '       ' → logprob: -5.309487819671631
    7. ' edges' → logprob: -5.809487819671631
    8. ',' → logprob: -6.059487819671631
    9. ' for' → logprob: -6.309487819671631
    10. 'comp' → logprob: -6.434487819671631

Token 407: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5738265514373779
    2. 'to' → logprob: -1.698826551437378
    3. '       ' → logprob: -1.823826551437378
    4. 'for' → logprob: -3.323826551437378
    5. ' for' → logprob: -3.323826551437378
    6. 'continue' → logprob: -5.073826789855957
    7. '   ' → logprob: -5.448826789855957
    8. '.' → logprob: -6.948826789855957
    9. ',' → logprob: -7.073826789855957
    10. 'print' → logprob: -7.323826789855957

Token 408: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1502609252929688
    2. 'continue' → logprob: -1.1502609252929688
    3. 'for' → logprob: -1.5252609252929688
    4. 'ans' → logprob: -3.9002609252929688
    5. ' for' → logprob: -4.025260925292969
    6. 'calculate' → logprob: -4.275260925292969
    7. 'comp' → logprob: -4.525260925292969
    8. 'print' → logprob: -4.525260925292969
    9. '   ' → logprob: -4.525260925292969
    10. '       ' → logprob: -4.650260925292969

Token 409: ' explicitly' (ID: 45615)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6934092044830322
    2. '   ' → logprob: -1.8184092044830322
    3. 'comp' → logprob: -2.8184092044830322
    4. ' for' → logprob: -2.9434092044830322
    5. 'edges' → logprob: -2.9434092044830322
    6. ' ans' → logprob: -3.0684092044830322
    7. '       ' → logprob: -3.8184092044830322
    8. '#' → logprob: -4.068408966064453
    9. ' edges' → logprob: -4.193408966064453
    10. 'for' → logprob: -4.318408966064453

Token 410: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05064062029123306
    2. '   ' → logprob: -3.67564058303833
    3. 'ans' → logprob: -4.80064058303833
    4. ' ans' → logprob: -4.80064058303833
    5. 'edges' → logprob: -6.30064058303833
    6. '        
' → logprob: -6.92564058303833
    7. 'comp' → logprob: -7.05064058303833
    8. ' edges' → logprob: -7.17564058303833
    9. '#' → logprob: -7.67564058303833
    10. '
' → logprob: -7.92564058303833

Token 411: ' total' (ID: 3609)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -1.352534294128418
    2. '       ' → logprob: -1.977534294128418
    3. 'comp' → logprob: -2.102534294128418
    4. 'existing' → logprob: -2.477534294128418
    5. 'edges' → logprob: -2.602534294128418
    6. 'degree' → logprob: -2.727534294128418
    7. 'ans' → logprob: -2.977534294128418
    8. '#' → logprob: -3.602534294128418
    9. 'edge' → logprob: -3.727534294128418
    10. 'cnt' → logprob: -3.977534294128418

Token 412: ' E' (ID: 457)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.24126197397708893
    2. 'edges' → logprob: -1.9912619590759277
    3. ' ans' → logprob: -3.9912619590759277
    4. '_edges' → logprob: -4.241261959075928
    5. ' +=' → logprob: -4.491261959075928
    6. '=' → logprob: -4.741261959075928
    7. '+=' → logprob: -4.991261959075928
    8. ' edges' → logprob: -5.241261959075928
    9. '_ans' → logprob: -5.741261959075928
    10. 'comp' → logprob: -5.991261959075928

Token 413: ' is' (ID: 382)
  Prédit: '_comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.09926540404558182
    2. 'comp' → logprob: -3.7242653369903564
    3. ' +=' → logprob: -3.9742653369903564
    4. '_in' → logprob: -4.0992655754089355
    5. '_component' → logprob: -4.5992655754089355
    6. '_ans' → logprob: -5.0992655754089355
    7. '_edges' → logprob: -5.4742655754089355
    8. ' =' → logprob: -5.7242655754089355
    9. '_' → logprob: -5.8492655754089355
    10. '+=' → logprob: -6.8492655754089355

Token 414: ' known' (ID: 5542)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.03956091031432152
    2. ' E' → logprob: -3.4145607948303223
    3. '0' → logprob: -5.539560794830322
    4. 'sum' → logprob: -7.539560794830322
    5. 'already' → logprob: -8.03956127166748
    6. ' ' → logprob: -8.16456127166748
    7. 'len' → logprob: -8.53956127166748
    8. ' sum' → logprob: -8.66456127166748
    9. '   ' → logprob: -9.53956127166748
    10. ' already' → logprob: -10.03956127166748

Token 415: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006596710067242384
    2. '        
' → logprob: -6.006596565246582
    3. '
' → logprob: -6.881596565246582
    4. '<|end|>' → logprob: -7.006596565246582
    5. ',' → logprob: -7.256596565246582
    6. '   ' → logprob: -7.506596565246582
    7. ')' → logprob: -8.381596565246582
    8. '<|end|>' → logprob: -9.256596565246582
    9. '        ' → logprob: -9.381596565246582
    10. '           ' → logprob: -9.506596565246582

Token 416: ' 
' (ID: 793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2933163344860077
    2. '#' → logprob: -1.54331636428833
    3. 'comp' → logprob: -4.29331636428833
    4. 'ans' → logprob: -5.16831636428833
    5. 'edges' → logprob: -5.29331636428833
    6. '   ' → logprob: -5.66831636428833
    7. 'continue' → logprob: -5.66831636428833
    8. '        
' → logprob: -6.41831636428833
    9. ' #' → logprob: -6.54331636428833
    10. ' edges' → logprob: -6.79331636428833

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5879350900650024
    2. '#' → logprob: -0.8379350900650024
    3. '   ' → logprob: -5.962934970855713
    4. ' #' → logprob: -6.212934970855713
    5. 'comp' → logprob: -6.837934970855713
    6. 'edges' → logprob: -6.962934970855713
    7. 'ans' → logprob: -7.212934970855713
    8. '
' → logprob: -7.337934970855713
    9. 'continue' → logprob: -7.337934970855713
    10. ' edges' → logprob: -8.087935447692871

Token 418: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1746213436126709
    2. '       ' → logprob: -2.674621343612671
    3. 'comp' → logprob: -3.174621343612671
    4. 'for' → logprob: -4.54962158203125
    5. 'edges' → logprob: -4.54962158203125
    6. '   ' → logprob: -5.42462158203125
    7. 'ans' → logprob: -5.54962158203125
    8. 'visited' → logprob: -5.67462158203125
    9. 'component' → logprob: -5.92462158203125
    10. 'E' → logprob: -6.54962158203125

Token 419: ' so' (ID: 813)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1270221769809723
    2. 'comp' → logprob: -3.1270222663879395
    3. '       ' → logprob: -3.6270222663879395
    4. 'ans' → logprob: -3.6270222663879395
    5. 'edges' → logprob: -5.3770222663879395
    6. 'continue' → logprob: -5.6270222663879395
    7. 'visited' → logprob: -5.7520222663879395
    8. '
' → logprob: -6.2520222663879395
    9. 'component' → logprob: -6.5020222663879395
    10. 'cnt' → logprob: -6.8770222663879395

Token 420: ' sum' (ID: 4215)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3024992048740387
    2. 'ans' → logprob: -2.177499294281006
    3. 'pass' → logprob: -3.052499294281006
    4. 'continue' → logprob: -3.677499294281006
    5. 'comp' → logprob: -3.677499294281006
    6. '   ' → logprob: -4.677499294281006
    7. 'visited' → logprob: -4.927499294281006
    8. '       ' → logprob: -5.177499294281006
    9. 'print' → logprob: -5.302499294281006
    10. 'edges' → logprob: -5.677499294281006

Token 421: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.2710959911346436
    2. 'edges' → logprob: -2.2710959911346436
    3. 'degrees' → logprob: -2.2710959911346436
    4. 'ans' → logprob: -2.5210959911346436
    5. '_edges' → logprob: -2.5210959911346436
    6. 'deg' → logprob: -2.7710959911346436
    7. ' of' → logprob: -2.8960959911346436
    8. ' edges' → logprob: -3.2710959911346436
    9. 'ed' → logprob: -3.2710959911346436
    10. 'for' → logprob: -3.7710959911346436

Token 422: ' c' (ID: 274)
  Prédit: 'degrees'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degrees' → logprob: -0.335470974445343
    2. ' degrees' → logprob: -1.4604709148406982
    3. 'deg' → logprob: -4.085471153259277
    4. 'edges' → logprob: -5.085471153259277
    5. 'degree' → logprob: -5.210471153259277
    6. 'c' → logprob: -5.335471153259277
    7. 'for' → logprob: -5.960471153259277
    8. 'ans' → logprob: -6.085471153259277
    9. 'comp' → logprob: -6.210471153259277
    10. ' edges' → logprob: -6.210471153259277

Token 423: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019470850005745888
    2. 'om' → logprob: -4.769470691680908
    3. 'omp' → logprob: -4.894470691680908
    4. 'on' → logprob: -7.144470691680908
    5. 'ont' → logprob: -7.519470691680908
    6. 'ount' → logprob: -7.644470691680908
    7. 'olor' → logprob: -8.394471168518066
    8. '2' → logprob: -8.519471168518066
    9. 'edges' → logprob: -8.644471168518066
    10. 'urrent' → logprob: -9.144471168518066

Token 424: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.6962263584136963
    2. ' *' → logprob: -1.0712263584136963
    3. '*' → logprob: -1.9462263584136963
    4. ' +' → logprob: -4.821226119995117
    5. '+' → logprob: -5.571226119995117
    6. 'c' → logprob: -6.071226119995117
    7. ' and' → logprob: -7.571226119995117
    8. '+c' → logprob: -7.571226119995117
    9. ' c' → logprob: -8.571226119995117
    10. '   ' → logprob: -9.071226119995117

Token 425: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.125001907348633
    3. '*' → logprob: -15.250001907348633
    4. '₂' → logprob: -15.875001907348633
    5. 'c' → logprob: -16.250001907348633
    6. '_' → logprob: -16.250001907348633
    7. '1' → logprob: -16.375001907348633
    8. '```' → logprob: -16.875001907348633
    9. '２' → logprob: -17.000001907348633
    10. '۲' → logprob: -17.187501907348633

Token 426: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05351875722408295
    2. '-' → logprob: -3.553518772125244
    3. '   ' → logprob: -5.303518772125244
    4. ')' → logprob: -5.303518772125244
    5. ' +=' → logprob: -5.303518772125244
    6. ' ' → logprob: -6.553518772125244
    7. '       ' → logprob: -6.553518772125244
    8. ' -=' → logprob: -6.803518772125244
    9. '
' → logprob: -7.553518772125244
    10. '+=' → logprob: -7.553518772125244

Token 427: ' E' (ID: 457)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.6262778043746948
    2. ' comp' → logprob: -1.7512778043746948
    3. ' c' → logprob: -2.1262779235839844
    4. ' (' → logprob: -2.2512779235839844
    5. 'ans' → logprob: -2.3762779235839844
    6. '(ans' → logprob: -2.5012779235839844
    7. '(comp' → logprob: -2.8762779235839844
    8. 'c' → logprob: -3.6262779235839844
    9. 'comp' → logprob: -3.7512779235839844
    10. ' sum' → logprob: -4.001277923583984

Token 428: '_comp' (ID: 34754)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011335102841258049
    2. ' -=' → logprob: -5.2613348960876465
    3. '+=' → logprob: -6.1363348960876465
    4. '
' → logprob: -7.1363348960876465
    5. '   ' → logprob: -7.3863348960876465
    6. ' =' → logprob: -7.6363348960876465
    7. ' +' → logprob: -7.6363348960876465
    8. ' -' → logprob: -8.386335372924805
    9. 'component' → logprob: -8.761335372924805
    10. ' edges' → logprob: -9.011335372924805

Token 429: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42269864678382874
    2. '
' → logprob: -2.172698736190796
    3. ')' → logprob: -2.922698736190796
    4. ' =' → logprob: -3.172698736190796
    5. ' +' → logprob: -3.422698736190796
    6. ' +=' → logprob: -3.422698736190796
    7. '<|end|>' → logprob: -3.797698736190796
    8. '<|end|>' → logprob: -4.797698497772217
    9. '   ' → logprob: -5.047698497772217
    10. '        
' → logprob: -5.422698497772217

Token 430: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4221647381782532
    2. 'all' → logprob: -1.1721646785736084
    3. 'components' → logprob: -3.7971646785736084
    4. ' components' → logprob: -5.2971649169921875
    5. 'each' → logprob: -6.0471649169921875
    6. ' each' → logprob: -7.1721649169921875
    7. 'visited' → logprob: -7.2971649169921875
    8. ' the' → logprob: -7.7971649169921875
    9. 'the' → logprob: -7.9221649169921875
    10. ' edges' → logprob: -7.9221649169921875

Token 431: ' components' (ID: 10674)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -1.2135764360427856
    2. 'components' → logprob: -1.5885764360427856
    3. '+=' → logprob: -2.088576316833496
    4. '=' → logprob: -2.338576316833496
    5. ' edges' → logprob: -2.713576316833496
    6. 'comp' → logprob: -3.213576316833496
    7. ' +=' → logprob: -3.338576316833496
    8. ' components' → logprob: -3.338576316833496
    9. 'edges' → logprob: -3.463576316833496
    10. ' component' → logprob: -3.838576316833496

Token 432: ' gives' (ID: 8967)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.053083401173353195
    2. '<|end|>' → logprob: -3.5530834197998047
    3. '
' → logprob: -4.678083419799805
    4. '        
' → logprob: -5.178083419799805
    5. '<|end|>' → logprob: -5.928083419799805
    6. '#' → logprob: -6.678083419799805
    7. ')' → logprob: -7.178083419799805
    8. '        ' → logprob: -7.428083419799805
    9. 'comp' → logprob: -7.803083419799805
    10. ',' → logprob: -8.053083419799805

Token 433: ' the' (ID: 290)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.36932286620140076
    2. ' ans' → logprob: -1.3693228960037231
    3. ' the' → logprob: -3.4943227767944336
    4. 'the' → logprob: -4.619322776794434
    5. 'c' → logprob: -6.244322776794434
    6. '(ans' → logprob: -6.494322776794434
    7. ' c' → logprob: -6.619322776794434
    8. '   ' → logprob: -6.869322776794434
    9. 'sum' → logprob: -6.994322776794434
    10. '0' → logprob: -7.244322776794434

Token 434: ' total' (ID: 3609)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.2615325450897217
    2. 'answer' → logprob: -2.0115325450897217
    3. 'number' → logprob: -3.2615325450897217
    4. 'additional' → logprob: -3.3865325450897217
    5. 'final' → logprob: -4.386532783508301
    6. 'total' → logprob: -5.511532783508301
    7. 'max' → logprob: -6.011532783508301
    8. ' maximum' → logprob: -6.386532783508301
    9. 'desired' → logprob: -6.511532783508301
    10. 'result' → logprob: -7.261532783508301

Token 435: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003505992004647851
    2. '        
' → logprob: -6.878506183624268
    3. '   ' → logprob: -7.753506183624268
    4. '<|end|>' → logprob: -7.753506183624268
    5. '
' → logprob: -7.878506183624268
    6. '#' → logprob: -8.25350570678711
    7. '        ' → logprob: -9.12850570678711
    8. 'comp' → logprob: -9.50350570678711
    9. ' edges' → logprob: -9.50350570678711
    10. '<|end|>' → logprob: -9.50350570678711

Token 436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015247956849634647
    2. '#' → logprob: -5.265247821807861
    3. '<|end|>' → logprob: -5.515247821807861
    4. 'ans' → logprob: -6.765247821807861
    5. 'comp' → logprob: -7.140247821807861
    6. '        
' → logprob: -7.265247821807861
    7. '        ' → logprob: -7.265247821807861
    8. 'edges' → logprob: -7.765247821807861
    9. ' ans' → logprob: -8.14024829864502
    10. '   ' → logprob: -8.39024829864502

Token 437: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5950420498847961
    2. ' ans' → logprob: -1.5950419902801514
    3. 'ans' → logprob: -2.5950419902801514
    4. 'comp' → logprob: -2.9700419902801514
    5. '#' (adapté à ' #') → logprob: -3.2200419902801514
    6. '   ' → logprob: -4.0950422286987305
    7. ' comp' → logprob: -4.0950422286987305
    8. ' #' → logprob: -5.0950422286987305
    9. '        
' → logprob: -5.0950422286987305
    10. 'edges' → logprob: -5.2200422286987305

Token 438: ' We' (ID: 1416)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3590671420097351
    2. '#' → logprob: -1.7340672016143799
    3. 'comp' → logprob: -2.98406720161438
    4. 'edges' → logprob: -3.48406720161438
    5. '   ' → logprob: -4.734066963195801
    6. '       ' → logprob: -4.734066963195801
    7. 'pass' → logprob: -5.859066963195801
    8. 'component' → logprob: -5.984066963195801
    9. 'existing' → logprob: -6.109066963195801
    10. ' ans' → logprob: -6.234066963195801

Token 439: ' compute' (ID: 23864)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8714373707771301
    2. 'ans' → logprob: -1.4964373111724854
    3. '   ' → logprob: -2.3714373111724854
    4. ' ans' → logprob: -2.7464373111724854
    5. 'for' → logprob: -2.8714373111724854
    6. 'continue' → logprob: -3.1214373111724854
    7. '#' → logprob: -3.7464373111724854
    8. ' for' → logprob: -4.1214375495910645
    9. 'need' → logprob: -4.1214375495910645
    10. '           ' → logprob: -5.3714375495910645

Token 440: ' E' (ID: 457)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.38353490829467773
    2. ' ans' → logprob: -1.3835349082946777
    3. '   ' → logprob: -3.7585349082946777
    4. '       ' → logprob: -3.7585349082946777
    5. 'edges' → logprob: -5.133534908294678
    6. ' edges' → logprob: -5.508534908294678
    7. 'comp' → logprob: -5.633534908294678
    8. ' comp' → logprob: -6.883534908294678
    9. '	ans' → logprob: -7.258534908294678
    10. '           ' → logprob: -7.258534908294678

Token 441: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.009862096048891544
    2. 'comp' → logprob: -4.759861946105957
    3. '_in' → logprob: -7.259861946105957
    4. '_edges' → logprob: -9.009861946105957
    5. 'Comp' → logprob: -10.009861946105957
    6. '	comp' → logprob: -10.009861946105957
    7. '_component' → logprob: -10.009861946105957
    8. 'd' → logprob: -10.009861946105957
    9. ' =' → logprob: -10.259861946105957
    10. '_count' → logprob: -10.759861946105957

Token 442: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3067244291305542
    2. ' =' → logprob: -1.5567244291305542
    3. '=' → logprob: -3.6817245483398438
    4. '_edges' → logprob: -4.681724548339844
    5. 'edges' → logprob: -6.056724548339844
    6. ',' → logprob: -6.181724548339844
    7. '        
' → logprob: -6.306724548339844
    8. 'v' → logprob: -6.806724548339844
    9. ' edges' → logprob: -6.806724548339844
    10. '
' → logprob: -7.056724548339844

Token 443: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2625936269760132
    2. 'sum' → logprob: -1.5125936269760132
    3. ' sum' → logprob: -5.262593746185303
    4. 'len' → logprob: -6.512593746185303
    5. '       ' → logprob: -6.762593746185303
    6. '           ' → logprob: -7.137593746185303
    7. '   ' → logprob: -7.637593746185303
    8. '(sum' → logprob: -8.012593269348145
    9. 'c' → logprob: -8.262593269348145
    10. ' ' → logprob: -8.512593269348145

Token 444: ' of' (ID: 328)
  Prédit: '_deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_deg' → logprob: -0.3593205213546753
    2. 'deg' → logprob: -2.109320640563965
    3. '_edges' → logprob: -2.484320640563965
    4. '=' → logprob: -3.359320640563965
    5. '_degree' → logprob: -3.984320640563965
    6. '_de' → logprob: -4.484320640563965
    7. ' =' → logprob: -4.859320640563965
    8. 'd' → logprob: -5.984320640563965
    9. 'degrees' → logprob: -6.109320640563965
    10. 'degree' → logprob: -6.234320640563965

Token 445: ' degrees' (ID: 18210)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8718988299369812
    2. 'color' → logprob: -1.371898889541626
    3. 'degrees' → logprob: -1.871898889541626
    4. 'degree' → logprob: -3.496898889541626
    5. ' degrees' → logprob: -3.871898889541626
    6. 'edges' → logprob: -3.871898889541626
    7. 'deg' → logprob: -3.996898889541626
    8. '1' → logprob: -4.121898651123047
    9. ' color' → logprob: -4.371898651123047
    10. '(len' → logprob: -4.996898651123047

Token 446: '/' (ID: 14)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19339005649089813
    2. ' =' → logprob: -1.8183900117874146
    3. '=' → logprob: -4.818389892578125
    4. ',' → logprob: -6.943389892578125
    5. '        
' → logprob: -7.193389892578125
    6. ' in' → logprob: -7.443389892578125
    7. '	' → logprob: -8.193389892578125
    8. 'v' → logprob: -8.193389892578125
    9. '   ' → logprob: -8.568389892578125
    10. '=sum' → logprob: -8.693389892578125

Token 447: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019546831026673317
    2. ' ' → logprob: -6.626954555511475
    3. '   ' → logprob: -7.751954555511475
    4. '           ' → logprob: -9.626955032348633
    5. '       ' → logprob: -10.376955032348633
    6. '```' → logprob: -10.376955032348633
    7. '
' → logprob: -10.501955032348633
    8. '1' → logprob: -11.376955032348633
    9. '  ' → logprob: -11.376955032348633
    10. '          ' → logprob: -12.501955032348633

Token 448: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027297406923025846
    2. '        
' → logprob: -7.002729892730713
    3. 'degree' → logprob: -7.502729892730713
    4. '
' → logprob: -8.502729415893555
    5. '   ' → logprob: -9.252729415893555
    6. 'degrees' → logprob: -9.377729415893555
    7. 'total' → logprob: -9.502729415893555
    8. 'edges' → logprob: -9.502729415893555
    9. 'E' → logprob: -9.752729415893555
    10. ',' → logprob: -9.752729415893555

Token 449: ' the' (ID: 290)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0781890153884888
    2. ' v' → logprob: -1.3281890153884888
    3. ' stack' → logprob: -1.8281890153884888
    4. 'stack' → logprob: -2.453188896179199
    5. 'comp' → logprob: -3.578188896179199
    6. 'nv' → logprob: -3.578188896179199
    7. ' comp' → logprob: -3.703188896179199
    8. ' nv' → logprob: -4.578188896179199
    9. ' node' → logprob: -5.078188896179199
    10. 'node' → logprob: -5.203188896179199

Token 450: ' component' (ID: 6392)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.38995271921157837
    2. 'component' → logprob: -2.2649526596069336
    3. 'current' → logprob: -2.7649526596069336
    4. 'v' → logprob: -3.1399526596069336
    5. 'visited' → logprob: -3.1399526596069336
    6. ' vertices' → logprob: -3.7649526596069336
    7. 'stack' → logprob: -4.639952659606934
    8. 'nodes' → logprob: -4.764952659606934
    9. '   ' → logprob: -5.139952659606934
    10. ' current' → logprob: -5.639952659606934

Token 451: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006944591179490089
    2. '        
' → logprob: -5.88194465637207
    3. ',' → logprob: -6.50694465637207
    4. '
' → logprob: -6.75694465637207
    5. ' =' → logprob: -8.75694465637207
    6. '	' → logprob: -9.00694465637207
    7. ' edges' → logprob: -9.00694465637207
    8. 'total' → logprob: -9.38194465637207
    9. 'E' → logprob: -9.56944465637207
    10. 'edges' → logprob: -9.88194465637207

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004873955331277102
    2. '
' → logprob: -8.625487327575684
    3. '        
' → logprob: -8.750487327575684
    4. 'edges' → logprob: -10.250487327575684
    5. ' edges' → logprob: -10.375487327575684
    6. '```' → logprob: -10.875487327575684
    7. ',' → logprob: -11.500487327575684
    8. '   ' → logprob: -11.750487327575684
    9. 'edge' → logprob: -12.000487327575684
    10. '	' → logprob: -12.125487327575684

Token 453: ' E' (ID: 457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04579085111618042
    2. 'degree' → logprob: -3.920790910720825
    3. 'deg' → logprob: -4.545790672302246
    4. 'degrees' → logprob: -6.045790672302246
    5. 'edge' → logprob: -6.170790672302246
    6. 'edges' → logprob: -6.295790672302246
    7. 'total' → logprob: -6.545790672302246
    8. ' degrees' → logprob: -7.295790672302246
    9. 'E' (adapté à ' E') → logprob: -7.295790672302246
    10. '        
' → logprob: -7.420790672302246

Token 454: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -3.9888433093437925e-05
    2. 'comp' → logprob: -10.875040054321289
    3. '_' → logprob: -11.750040054321289
    4. '_count' → logprob: -12.125040054321289
    5. '_component' → logprob: -13.375040054321289
    6. '_com' → logprob: -13.750040054321289
    7. '_c' → logprob: -13.875040054321289
    8. '_in' → logprob: -14.125040054321289
    9. '_curr' → logprob: -14.375040054321289
    10. '_sum' → logprob: -14.500040054321289

Token 455: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. '   ' → logprob: -14.818148612976074
    4. ' ' → logprob: -15.318148612976074
    5. '       ' → logprob: -15.693148612976074
    6. '=sum' → logprob: -15.693148612976074
    7. 'sum' → logprob: -15.818148612976074
    8. '＝' → logprob: -16.06814956665039
    9. ',' → logprob: -16.56814956665039
    10. '_edges' → logprob: -16.69314956665039

Token 456: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005887676030397415
    2. 'sum' → logprob: -5.255887508392334
    3. ' ' → logprob: -7.755887508392334
    4. ' sum' → logprob: -8.630887985229492
    5. '(sum' → logprob: -10.755887985229492
    6. '   ' → logprob: -11.255887985229492
    7. '       ' → logprob: -12.380887985229492
    8. '           ' → logprob: -13.005887985229492
    9. '    ' → logprob: -14.005887985229492
    10. 'len' → logprob: -14.255887985229492

Token 457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029950076714158058
    2. 'sum' → logprob: -3.5299501419067383
    3. ' sum' → logprob: -9.279950141906738
    4. ' ' → logprob: -9.404950141906738
    5. '(sum' → logprob: -10.904950141906738
    6. '   ' → logprob: -13.029950141906738
    7. 'len' → logprob: -13.904950141906738
    8. '(' → logprob: -14.904950141906738
    9. '  ' → logprob: -15.342450141906738
    10. '
' → logprob: -15.529950141906738

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001279641641303897
    2. 'for' → logprob: -7.126279830932617
    3. ' for' → logprob: -7.876279830932617
    4. '        
' → logprob: -10.001279830932617
    5. '
' → logprob: -11.126279830932617
    6. ',' → logprob: -11.501279830932617
    7. '   ' → logprob: -11.876279830932617
    8. '	' → logprob: -12.376279830932617
    9. '           ' → logprob: -12.501279830932617
    10. '<|end|>' → logprob: -13.251279830932617

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008558666333556175
    2. ' for' → logprob: -5.383558750152588
    3. 'for' → logprob: -5.633558750152588
    4. '        
' → logprob: -8.88355827331543
    5. ',' → logprob: -9.88355827331543
    6. '	' → logprob: -10.00855827331543
    7. '
' → logprob: -10.75855827331543
    8. '   ' → logprob: -11.13355827331543
    9. '	for' → logprob: -11.13355827331543
    10. '           ' → logprob: -11.25855827331543

Token 460: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27800267934799194
    2. '       ' → logprob: -1.7780027389526367
    3. 'comp' → logprob: -3.1530027389526367
    4. 'stack' → logprob: -4.278002738952637
    5. 'visited' → logprob: -4.903002738952637
    6. 'component' → logprob: -5.778002738952637
    7. 'nodes' → logprob: -6.528002738952637
    8. 'queue' → logprob: -6.903002738952637
    9. '   ' → logprob: -7.028002738952637
    10. 'temp' → logprob: -7.278002738952637

Token 461: ' Re' (ID: 907)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5684861540794373
    2. 'comp' → logprob: -1.818486213684082
    3. '       ' → logprob: -1.943486213684082
    4. 'stack' → logprob: -2.693486213684082
    5. 'visited' → logprob: -3.568486213684082
    6. 'component' → logprob: -4.443486213684082
    7. '   ' → logprob: -5.818486213684082
    8. 'temp' → logprob: -5.818486213684082
    9. 'nodes' → logprob: -5.943486213684082
    10. 'sub' → logprob: -6.443486213684082

Token 462: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8424462676048279
    2. 'visited' → logprob: -0.8424462676048279
    3. '       ' → logprob: -2.2174463272094727
    4. 'stack' → logprob: -4.467446327209473
    5. 'visit' → logprob: -4.967446327209473
    6. '           ' → logprob: -5.592446327209473
    7. '#' → logprob: -5.842446327209473
    8. '   ' → logprob: -6.467446327209473
    9. ' for' → logprob: -7.092446327209473
    10. '               ' → logprob: -7.842446327209473

Token 463: ' edges' (ID: 22569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6722156405448914
    2. 'stack' → logprob: -1.6722157001495361
    3. 'visited' → logprob: -1.7972157001495361
    4. 'for' → logprob: -2.547215700149536
    5. ' stack' → logprob: -4.172215461730957
    6. '   ' → logprob: -4.422215461730957
    7. 'comp' → logprob: -4.672215461730957
    8. ' for' → logprob: -4.797215461730957
    9. ' visited' → logprob: -5.047215461730957
    10. '           ' → logprob: -6.797215461730957

Token 464: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002455322304740548
    2. ' for' → logprob: -7.752455234527588
    3. '        
' → logprob: -8.002455711364746
    4. '
' → logprob: -8.252455711364746
    5. 'stack' → logprob: -8.502455711364746
    6. 'visited' → logprob: -8.502455711364746
    7. ' =' → logprob: -8.627455711364746
    8. 'for' → logprob: -8.627455711364746
    9. '   ' → logprob: -8.877455711364746
    10. ',' → logprob: -9.127455711364746

Token 465: ' component' (ID: 6392)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.45632433891296387
    2. ' stack' → logprob: -2.456324338912964
    3. 'for' → logprob: -2.831324338912964
    4. '       ' → logprob: -2.956324338912964
    5. 'range' → logprob: -3.081324338912964
    6. 'visited' → logprob: -3.206324338912964
    7. '   ' → logprob: -3.831324338912964
    8. 'edges' → logprob: -4.456324577331543
    9. 'comp' → logprob: -4.831324577331543
    10. '[v' → logprob: -5.206324577331543

Token 466: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006647797417826951
    2. ' for' → logprob: -8.875664710998535
    3. '        
' → logprob: -8.875664710998535
    4. ' =' → logprob: -9.625664710998535
    5. 'for' → logprob: -9.750664710998535
    6. ',' → logprob: -9.750664710998535
    7. 'visited' → logprob: -10.125664710998535
    8. '   ' → logprob: -10.250664710998535
    9. '
' → logprob: -10.750664710998535
    10. '	' → logprob: -11.125664710998535

Token 467: ' iter' (ID: 10621)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.5016741752624512
    2. '   ' → logprob: -1.6266741752624512
    3. 'stack' → logprob: -1.8766741752624512
    4. '       ' → logprob: -2.001674175262451
    5. 'for' → logprob: -2.251674175262451
    6. 'visited' → logprob: -3.001674175262451
    7. 'sum' → logprob: -3.126674175262451
    8. 'len' → logprob: -3.626674175262451
    9. ' stack' → logprob: -4.126674175262451
    10. ' for' → logprob: -4.876674175262451

Token 468: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.009870595298707485
    2. '   ' → logprob: -5.759870529174805
    3. 'ing' → logprob: -6.384870529174805
    4. 'stack' → logprob: -6.509870529174805
    5. 'visited' → logprob: -7.134870529174805
    6. 'ting' → logprob: -7.259870529174805
    7. '       ' → logprob: -7.634870529174805
    8. 'edges' → logprob: -8.259870529174805
    9. '           ' → logprob: -8.634870529174805
    10. 'ation' → logprob: -8.634870529174805

Token 469: ' vertices' (ID: 38360)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9341436624526978
    2. ' over' → logprob: -1.3091436624526978
    3. 'for' → logprob: -1.8091436624526978
    4. ' for' → logprob: -2.684143543243408
    5. '           ' → logprob: -2.684143543243408
    6. 'over' → logprob: -3.684143543243408
    7. '   ' → logprob: -5.559143543243408
    8. ' through' → logprob: -6.809143543243408
    9. 'v' → logprob: -7.059143543243408
    10. '	' → logprob: -7.059143543243408

Token 470: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013186928117647767
    2. ' =' → logprob: -7.251318454742432
    3. ' for' → logprob: -9.00131893157959
    4. '        
' → logprob: -9.37631893157959
    5. ' in' → logprob: -9.50131893157959
    6. ',' → logprob: -9.62631893157959
    7. 'for' → logprob: -10.12631893157959
    8. '<|end|>' → logprob: -10.50131893157959
    9. '   ' → logprob: -10.75131893157959
    10. '<|end|>' → logprob: -10.75131893157959

Token 471: ' component' (ID: 6392)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.03844569995999336
    2. ' stack' → logprob: -3.9134457111358643
    3. '[' → logprob: -4.538445472717285
    4. 'visited' → logprob: -6.288445472717285
    5. '   ' → logprob: -7.038445472717285
    6. 'range' → logprob: -7.163445472717285
    7. ' [' → logprob: -7.288445472717285
    8. 'edges' → logprob: -7.413445472717285
    9. '       ' → logprob: -7.413445472717285
    10. '(stack' → logprob: -7.913445472717285

Token 472: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025978028774261475
    2. '<|end|>' → logprob: -4.650978088378906
    3. '        
' → logprob: -5.400978088378906
    4. ' =' → logprob: -5.650978088378906
    5. ',' → logprob: -6.150978088378906
    6. '<|end|>' → logprob: -6.525978088378906
    7. '
' → logprob: -7.650978088378906
    8. '	' → logprob: -7.775978088378906
    9. ' and' → logprob: -7.900978088378906
    10. '		
' → logprob: -8.025978088378906

Token 473: ' heavy' (ID: 12914)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.5042895674705505
    2. ' stack' → logprob: -1.2542896270751953
    3. '[]' → logprob: -3.2542896270751953
    4. '[' → logprob: -4.129289627075195
    5. '[v' → logprob: -4.379289627075195
    6. ' [' → logprob: -4.754289627075195
    7. '[]
' → logprob: -4.879289627075195
    8. 'visited' → logprob: -5.004289627075195
    9. ' []' → logprob: -5.504289627075195
    10. '   ' → logprob: -5.754289627075195

Token 474: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2869606912136078
    2. '<|end|>' → logprob: -1.5369607210159302
    3. '        
' → logprob: -4.536960601806641
    4. ',' → logprob: -4.786960601806641
    5. '<|end|>' → logprob: -5.286960601806641
    6. '.' → logprob: -6.161960601806641
    7. '#' → logprob: -6.911960601806641
    8. ')' → logprob: -7.161960601806641
    9. '
' → logprob: -7.286960601806641
    10. '        ' → logprob: -7.286960601806641

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08707320690155029
    2. '           ' → logprob: -2.83707332611084
    3. ' but' → logprob: -4.96207332611084
    4. ' and' → logprob: -5.96207332611084
    5. '        
' → logprob: -6.21207332611084
    6. '	' → logprob: -6.58707332611084
    7. '                   ' → logprob: -6.71207332611084
    8. '               ' → logprob: -6.71207332611084
    9. '```' → logprob: -6.71207332611084
    10. '   ' → logprob: -7.21207332611084

Token 476: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23237988352775574
    2. '           ' → logprob: -2.232379913330078
    3. ' so' → logprob: -2.982379913330078
    4. ' but' → logprob: -4.482379913330078
    5. '                   ' → logprob: -5.357379913330078
    6. '        
' → logprob: -5.482379913330078
    7. 'continue' → logprob: -5.482379913330078
    8. '   ' → logprob: -5.732379913330078
    9. ' and' → logprob: -5.857379913330078
    10. '#' (adapté à ' #') → logprob: -6.107379913330078

Token 477: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22989429533481598
    2. ' for' → logprob: -2.9798943996429443
    3. '#' → logprob: -3.2298943996429443
    4. 'for' → logprob: -3.3548943996429443
    5. 'continue' → logprob: -3.3548943996429443
    6. '        
' → logprob: -4.854894161224365
    7. ' continue' → logprob: -4.979894161224365
    8. 'vertices' → logprob: -5.229894161224365
    9. 'comp' → logprob: -5.854894161224365
    10. '   ' → logprob: -6.104894161224365

Token 478: ' alternative' (ID: 13319)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20249402523040771
    2. '#' → logprob: -2.0774941444396973
    3. 'continue' → logprob: -3.9524941444396973
    4. 'pass' → logprob: -4.077494144439697
    5. '           ' → logprob: -4.577494144439697
    6. ' pass' → logprob: -5.952494144439697
    7. 'comp' → logprob: -6.827494144439697
    8. '   ' → logprob: -7.202494144439697
    9. 'for' → logprob: -7.202494144439697
    10. ' continue' → logprob: -7.202494144439697

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.452138215303421
    2. ' is' → logprob: -2.5771381855010986
    3. ' approach' → logprob: -2.7021381855010986
    4. '       ' → logprob: -3.2021381855010986
    5. ' code' → logprob: -3.3271381855010986
    6. ',' → logprob: -3.7021381855010986
    7. ':
' → logprob: -3.7021381855010986
    8. 'code' → logprob: -4.202138423919678
    9. '        ' → logprob: -4.702138423919678
    10. 'appro' → logprob: -5.077138423919678

Token 480: ' store' (ID: 4897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48322024941444397
    2. 'pass' → logprob: -2.358220338821411
    3. ' pass' → logprob: -2.483220338821411
    4. 'comp' → logprob: -2.983220338821411
    5. 'visited' → logprob: -3.108220338821411
    6. '#' → logprob: -3.358220338821411
    7. 'component' → logprob: -4.108220100402832
    8. ' visited' → logprob: -4.858220100402832
    9. 'components' → logprob: -5.108220100402832
    10. 'continue' → logprob: -5.358220100402832

Token 481: ' all' (ID: 722)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.5039204359054565
    2. 'comp' → logprob: -1.0039204359054565
    3. 'vertices' → logprob: -4.753920555114746
    4. 'components' → logprob: -5.128920555114746
    5. ' component' → logprob: -5.628920555114746
    6. ' comp' → logprob: -5.628920555114746
    7. 'visited' → logprob: -6.503920555114746
    8. '[]' → logprob: -6.628920555114746
    9. 'nodes' → logprob: -6.628920555114746
    10. 'the' → logprob: -7.253920555114746

Token 482: ' vertices' (ID: 38360)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.6971616744995117
    2. 'vertices' → logprob: -1.3221616744995117
    3. 'visited' → logprob: -2.8221616744995117
    4. ' vertices' → logprob: -3.1971616744995117
    5. 'stack' → logprob: -3.1971616744995117
    6. 'comp' → logprob: -3.5721616744995117
    7. ' component' → logprob: -3.9471616744995117
    8. 'nodes' → logprob: -4.072161674499512
    9. 'components' → logprob: -4.697161674499512
    10. '   ' → logprob: -5.322161674499512

Token 483: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46692585945129395
    2. '_in' → logprob: -1.966925859451294
    3. 'in' → logprob: -2.466925859451294
    4. ' in' → logprob: -2.716925859451294
    5. '       ' → logprob: -4.216925621032715
    6. '=' → logprob: -4.466925621032715
    7. '_component' → logprob: -4.966925621032715
    8. '   ' → logprob: -4.966925621032715
    9. '=[]' → logprob: -4.966925621032715
    10. 'component' → logprob: -5.091925621032715

Token 484: ' component' (ID: 6392)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.27989038825035095
    2. 'the' → logprob: -1.7798904180526733
    3. ' component' → logprob: -3.654890298843384
    4. 'current' → logprob: -4.029890537261963
    5. ' the' → logprob: -4.404890537261963
    6. 'this' → logprob: -4.529890537261963
    7. ' this' → logprob: -5.779890537261963
    8. ' current' → logprob: -5.904890537261963
    9. 'stack' → logprob: -5.904890537261963
    10. ' stack' → logprob: -8.654890060424805

Token 485: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1104997843503952
    2. '.append' → logprob: -2.610499858856201
    3. '       ' → logprob: -4.985499858856201
    4. '=' → logprob: -5.360499858856201
    5. '_vertices' → logprob: -5.360499858856201
    6. ' in' → logprob: -5.985499858856201
    7. '=[]' → logprob: -6.110499858856201
    8. '_in' → logprob: -6.360499858856201
    9. ',' → logprob: -6.610499858856201
    10. '=[]
' → logprob: -6.735499858856201

Token 486: ' a' (ID: 261)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6006696224212646
    2. 'component' → logprob: -1.2256696224212646
    3. ' stack' → logprob: -2.2256696224212646
    4. '[]' → logprob: -4.225669860839844
    5. ' component' → logprob: -4.600669860839844
    6. ' a' → logprob: -4.725669860839844
    7. 'a' → logprob: -4.975669860839844
    8. 'the' → logprob: -5.975669860839844
    9. 'current' → logprob: -6.600669860839844
    10. 'comp' → logprob: -6.600669860839844

Token 487: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.046951644122600555
    2. ' list' → logprob: -4.171951770782471
    3. '[]' → logprob: -4.171951770782471
    4. 'component' → logprob: -4.546951770782471
    5. 'stack' → logprob: -5.921951770782471
    6. 'set' → logprob: -6.921951770782471
    7. '[]
' → logprob: -7.796951770782471
    8. ' stack' → logprob: -9.046951293945312
    9. ' []' → logprob: -10.046951293945312
    10. ' component' → logprob: -10.421951293945312

Token 488: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030641773715615273
    2. ' =' → logprob: -4.405641555786133
    3. ',' → logprob: -5.155641555786133
    4. '
' → logprob: -5.155641555786133
    5. '	' → logprob: -6.280641555786133
    6. '        
' → logprob: -6.780641555786133
    7. 'vertices' → logprob: -7.530641555786133
    8. '[]' → logprob: -7.530641555786133
    9. ' and' → logprob: -8.155641555786133
    10. '		
' → logprob: -8.530641555786133

Token 489: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0938856601715088
    2. 'continue' → logprob: -1.7188856601715088
    3. '           ' → logprob: -2.093885660171509
    4. '
' → logprob: -2.218885660171509
    5. ' continue' → logprob: -2.468885660171509
    6. '                   ' → logprob: -3.218885660171509
    7. 'count' → logprob: -4.34388542175293
    8. '   ' → logprob: -4.34388542175293
    9. ' for' → logprob: -4.84388542175293
    10. '	' → logprob: -4.96888542175293

Token 490: ' edges' (ID: 22569)
  Prédit: ' them'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' them' → logprob: -1.1162117719650269
    2. 'them' → logprob: -1.7412117719650269
    3. '       ' → logprob: -1.8662117719650269
    4. '   ' → logprob: -2.3662118911743164
    5. 'vertices' → logprob: -2.8662118911743164
    6. 'for' → logprob: -3.7412118911743164
    7. 'component' → logprob: -3.7412118911743164
    8. ' for' → logprob: -3.7412118911743164
    9. ' vertices' → logprob: -3.8662118911743164
    10. '_vertices' → logprob: -4.116211891174316

Token 491: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04274383559823036
    2. ' =' → logprob: -3.5427439212799072
    3. 'vertices' → logprob: -5.542743682861328
    4. ',' → logprob: -5.792743682861328
    5. '	' → logprob: -7.042743682861328
    6. ' vertices' → logprob: -7.167743682861328
    7. '[]' → logprob: -7.417743682861328
    8. ' in' → logprob: -7.667743682861328
    9. '.' → logprob: -8.042743682861328
    10. '=' → logprob: -8.167743682861328

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011222535744309425
    2. ' vertices' → logprob: -5.6362223625183105
    3. 'vertices' → logprob: -5.7612223625183105
    4. '```' → logprob: -6.6362223625183105
    5. '	' → logprob: -7.1362223625183105
    6. '        
' → logprob: -7.3862223625183105
    7. ',' → logprob: -7.8862223625183105
    8. 'components' → logprob: -8.386222839355469
    9. ' components' → logprob: -9.011222839355469
    10. '           ' → logprob: -9.136222839355469

Token 493: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012296424247324467
    2. ' vertices' → logprob: -4.762296199798584
    3. 'vertices' → logprob: -6.262296199798584
    4. ' components' → logprob: -7.762296199798584
    5. '        
' → logprob: -8.012296676635742
    6. 'components' → logprob: -8.637296676635742
    7. '	' → logprob: -8.887296676635742
    8. ',' → logprob: -9.137296676635742
    9. '```' → logprob: -9.387296676635742
    10. ' nodes' → logprob: -9.512296676635742

Token 494: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023743974044919014
    2. 'vertices' → logprob: -4.898744106292725
    3. ' vertices' → logprob: -5.398744106292725
    4. 'component' → logprob: -5.648744106292725
    5. '```' → logprob: -5.648744106292725
    6. 'comp' → logprob: -6.773744106292725
    7. 'components' → logprob: -6.773744106292725
    8. ' component' → logprob: -7.398744106292725
    9. ' components' → logprob: -8.773743629455566
    10. 'nodes' → logprob: -8.898743629455566

Token 495: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8683540225028992
    2. 'store' → logprob: -1.368354082107544
    3. 'append' → logprob: -2.618354082107544
    4. 'vertices' → logprob: -2.743354082107544
    5. '       ' → logprob: -2.993354082107544
    6. 'collect' → logprob: -3.368354082107544
    7. '           ' → logprob: -3.493354082107544
    8. 'add' → logprob: -3.993354082107544
    9. '   ' → logprob: -4.368353843688965
    10. 'component' → logprob: -5.243353843688965

Token 496: ' that' (ID: 484)
  Prédit: 'component'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'component' → logprob: -0.5821289420127869
    2. '       ' → logprob: -2.0821290016174316
    3. 'vertices' → logprob: -2.2071290016174316
    4. 'comp' → logprob: -2.7071290016174316
    5. ' component' → logprob: -2.9571290016174316
    6. 'visited' → logprob: -3.8321290016174316
    7. '           ' → logprob: -4.082129001617432
    8. ' vertices' → logprob: -4.207129001617432
    9. 'components' → logprob: -4.707129001617432
    10. '   ' → logprob: -5.457129001617432

Token 497: ' now' (ID: 1954)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01392066664993763
    2. 'vertices' → logprob: -4.888920783996582
    3. ' vertices' → logprob: -6.263920783996582
    4. ',' → logprob: -6.888920783996582
    5. '        
' → logprob: -7.263920783996582
    6. '	' → logprob: -7.763920783996582
    7. '<|end|>' → logprob: -7.763920783996582
    8. '
' → logprob: -8.513920783996582
    9. '_vertices' → logprob: -8.763920783996582
    10. 'components' → logprob: -8.888920783996582

Token 498: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07600326836109161
    2. '
' → logprob: -3.326003313064575
    3. '        
' → logprob: -4.951003074645996
    4. '<|end|>' → logprob: -4.951003074645996
    5. 'vertices' → logprob: -5.451003074645996
    6. ',' → logprob: -5.451003074645996
    7. '	' → logprob: -5.576003074645996
    8. ' vertices' → logprob: -5.576003074645996
    9. '		
' → logprob: -5.951003074645996
    10. '```' → logprob: -7.701003074645996

Token 499: ' accuracy' (ID: 18580)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9898620843887329
    2. 'each' → logprob: -2.2398619651794434
    3. '_' → logprob: -2.4898619651794434
    4. ' v' → logprob: -2.8648619651794434
    5. 'the' → logprob: -2.9898619651794434
    6. 'component' → logprob: -3.1148619651794434
    7. ' _' → logprob: -3.3648619651794434
    8. ' the' → logprob: -3.6148619651794434
    9. 'stack' → logprob: -3.6148619651794434
    10. ' each' → logprob: -3.7398619651794434

Token 500: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015724627301096916
    2. '
' → logprob: -5.3907246589660645
    3. 'vertices' → logprob: -5.8907246589660645
    4. ' vertices' → logprob: -6.0157246589660645
    5. '        
' → logprob: -6.1407246589660645
    6. ',' → logprob: -6.7657246589660645
    7. '	' → logprob: -7.2657246589660645
    8. '<|end|>' → logprob: -7.5157246589660645
    9. '		
' → logprob: -8.515724182128906
    10. '```' → logprob: -9.015724182128906

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003037489717826247
    2. '        
' → logprob: -7.378037452697754
    3. ' vertices' → logprob: -7.378037452697754
    4. '	' → logprob: -7.628037452697754
    5. 'vertices' → logprob: -8.003037452697754
    6. '<|end|>' → logprob: -8.503037452697754
    7. '```' → logprob: -9.003037452697754
    8. '
' → logprob: -9.003037452697754
    9. 'components' → logprob: -9.378037452697754
    10. '		
' → logprob: -9.628037452697754

Token 502: ' comp' (ID: 1050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12228802591562271
    2. ' vertices' → logprob: -2.6222879886627197
    3. 'vertices' → logprob: -3.6222879886627197
    4. ' component' → logprob: -5.872288227081299
    5. 'component' → logprob: -5.997288227081299
    6. ' nodes' → logprob: -6.247288227081299
    7. 'visited' → logprob: -6.622288227081299
    8. 'components' → logprob: -6.622288227081299
    9. ' components' → logprob: -6.872288227081299
    10. 'nodes' → logprob: -6.997288227081299

Token 503: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.07566425204277039
    2. '_nodes' → logprob: -2.7006642818450928
    3. '_list' → logprob: -5.700664043426514
    4. 'vertices' → logprob: -6.825664043426514
    5. '_' → logprob: -7.825664043426514
    6. ' =' → logprob: -7.950664043426514
    7. 'verts' → logprob: -9.200664520263672
    8. '   ' → logprob: -9.950664520263672
    9. '=' → logprob: -9.950664520263672
    10. '=[]' → logprob: -10.325664520263672

Token 504: '_list' (ID: 4162)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.746803879737854
    2. ' =' → logprob: -1.371803879737854
    3. '_list' → logprob: -1.371803879737854
    4. '_vertices' → logprob: -4.6218037605285645
    5. '_nodes' → logprob: -4.9968037605285645
    6. '=[]' → logprob: -7.6218037605285645
    7. 'list' → logprob: -7.7468037605285645
    8. '_stack' → logprob: -7.7468037605285645
    9. '=[]
' → logprob: -8.371804237365723
    10. 'vertices' → logprob: -9.246804237365723

Token 505: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12698963284492493
    2. '=' → logprob: -2.1269896030426025
    3. '=[]' → logprob: -10.001989364624023
    4. '.append' → logprob: -11.501989364624023
    5. '=[' → logprob: -13.126989364624023
    6. '=[]
' → logprob: -13.376989364624023
    7. ',' → logprob: -14.126989364624023
    8. '   ' → logprob: -14.626989364624023
    9. ' =[' → logprob: -15.501989364624023
    10. '[]' → logprob: -15.501989364624023

Token 506: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.027908368036150932
    2. '[]
' → logprob: -4.2779083251953125
    3. '[' → logprob: -4.5279083251953125
    4. '[v' → logprob: -5.9029083251953125
    5. '[]

' → logprob: -10.027908325195312
    6. '[s' → logprob: -10.902908325195312
    7. ' []' → logprob: -11.277908325195312
    8. '[node' → logprob: -12.402908325195312
    9. '[j' → logprob: -12.777908325195312
    10. 'stack' → logprob: -12.777908325195312

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039976995438337326
    2. '	' → logprob: -3.9149770736694336
    3. '[' → logprob: -5.039977073669434
    4. '
' → logprob: -5.164977073669434
    5. '        
' → logprob: -6.289977073669434
    6. '		
' → logprob: -6.789977073669434
    7. ' for' → logprob: -7.539977073669434
    8. ',' → logprob: -7.789977073669434
    9. '                   ' → logprob: -8.164977073669434
    10. '[v' → logprob: -8.164977073669434

Token 508: ' stack' (ID: 10825)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37728309631347656
    2. 'stack' (adapté à ' stack') → logprob: -1.6272830963134766
    3. 'for' → logprob: -3.2522830963134766
    4. 'visited' → logprob: -3.3772830963134766
    5. 'comp' → logprob: -4.002283096313477
    6. ' for' → logprob: -4.377283096313477
    7. '
' → logprob: -5.877283096313477
    8. ' comp' → logprob: -6.002283096313477
    9. '                   ' → logprob: -6.127283096313477
    10. 'v' → logprob: -6.377283096313477

Token 509: '2' (ID: 17)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5381468534469604
    2. ' =' → logprob: -1.0381468534469604
    3. '=' → logprob: -2.78814697265625
    4. '.extend' → logprob: -8.41314697265625
    5. 'append' → logprob: -9.16314697265625
    6. '=[' → logprob: -9.78814697265625
    7. '.' → logprob: -10.03814697265625
    8. '=[]' → logprob: -10.28814697265625
    9. '.clear' → logprob: -11.41314697265625
    10. '   ' → logprob: -11.41314697265625

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39226794242858887
    2. '.append' → logprob: -1.5172679424285889
    3. '=' → logprob: -2.267267942428589
    4. '.extend' → logprob: -6.642268180847168
    5. '.' → logprob: -9.017268180847168
    6. '=[]' → logprob: -10.142268180847168
    7. ' .' → logprob: -10.642268180847168
    8. 'append' → logprob: -10.767268180847168
    9. '=[' → logprob: -11.267268180847168
    10. ' =[' → logprob: -11.892268180847168

Token 511: ' [' (ID: 723)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.409270316362381
    2. '[' → logprob: -1.4092702865600586
    3. '[v' → logprob: -2.4092702865600586
    4. '[c' → logprob: -7.534270286560059
    5. ' [' → logprob: -7.659270286560059
    6. '[s' → logprob: -7.659270286560059
    7. '[(' → logprob: -10.284270286560059
    8. 'stack' → logprob: -10.534270286560059
    9. '[V' → logprob: -11.034270286560059
    10. '[start' → logprob: -11.284270286560059

Token 512: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007139815716072917
    2. 'v' → logprob: -7.25071382522583
    3. '   ' → logprob: -13.875714302062988
    4. '(i' → logprob: -14.250714302062988
    5. ' i' → logprob: -14.250714302062988
    6. '           ' → logprob: -14.625714302062988
    7. '```' → logprob: -15.125714302062988
    8. '                   ' → logprob: -15.875714302062988
    9. '       ' → logprob: -15.875714302062988
    10. '               ' → logprob: -16.000713348388672

Token 513: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.003948386758565903
    2. ']' → logprob: -5.628948211669922
    3. '       ' → logprob: -8.128948211669922
    4. ']
' → logprob: -10.878948211669922
    5. ']

' → logprob: -11.253948211669922
    6. '   ' → logprob: -11.628948211669922
    7. '           ' → logprob: -12.878948211669922
    8. '	' → logprob: -13.128948211669922
    9. '               ' → logprob: -13.253948211669922
    10. 'while' → logprob: -13.503948211669922

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14394007623195648
    2. 'visited' → logprob: -2.268939971923828
    3. ' visited' → logprob: -4.143939971923828
    4. '	' → logprob: -5.518939971923828
    5. 'comp' → logprob: -5.893939971923828
    6. '```' → logprob: -6.393939971923828
    7. ' comp' → logprob: -6.518939971923828
    8. '	comp' → logprob: -6.643939971923828
    9. '   ' → logprob: -7.143939971923828
    10. '[' → logprob: -7.643939971923828

Token 515: ' comp' (ID: 1050)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.019259106367826462
    2. 'comp' (adapté à ' comp') → logprob: -4.394258975982666
    3. '       ' → logprob: -5.394258975982666
    4. 'while' → logprob: -7.269258975982666
    5. 'component' → logprob: -7.519258975982666
    6. 'idx' → logprob: -7.644258975982666
    7. '           ' → logprob: -9.394259452819824
    8. 'index' → logprob: -9.394259452819824
    9. 'color' → logprob: -9.519259452819824
    10. '   ' → logprob: -10.269259452819824

Token 516: '_' (ID: 62)
  Prédit: '_vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.00904799159616232
    2. 'visited' → logprob: -5.509047985076904
    3. '_' → logprob: -5.884047985076904
    4. 'vertices' → logprob: -6.259047985076904
    5. '_components' → logprob: -10.009048461914062
    6. '_nodes' → logprob: -10.009048461914062
    7. '
' → logprob: -10.384048461914062
    8. '       ' → logprob: -10.634048461914062
    9. '_list' → logprob: -11.259048461914062
    10. '   ' → logprob: -11.259048461914062

Token 517: 'visited' (ID: 52453)
  Prédit: 'vertices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertices' → logprob: -0.0054875030182302
    2. '_vertices' → logprob: -5.255487442016602
    3. 'visited' → logprob: -8.380487442016602
    4. ' vertices' → logprob: -12.005487442016602
    5. '
' → logprob: -12.755487442016602
    6. '(vertices' → logprob: -12.880487442016602
    7. 'vert' → logprob: -13.130487442016602
    8. 'stack' → logprob: -13.255487442016602
    9. '.vertices' → logprob: -13.380487442016602
    10. 'verts' → logprob: -14.005487442016602

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6752006411552429
    2. ' =' → logprob: -0.9252006411552429
    3. '[' → logprob: -2.8002007007598877
    4. '2' → logprob: -4.300200462341309
    5. '_set' → logprob: -5.425200462341309
    6. '=set' → logprob: -6.050200462341309
    7. '[v' → logprob: -6.425200462341309
    8. '=[' → logprob: -6.425200462341309
    9. '.append' → logprob: -6.675200462341309
    10. '[i' → logprob: -6.675200462341309

Token 519: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05500629544258118
    2. 'set' → logprob: -3.055006265640259
    3. '{' → logprob: -5.055006504058838
    4. ' [' → logprob: -11.18000602722168
    5. ' set' → logprob: -12.18000602722168
    6. '=set' → logprob: -14.93000602722168
    7. 'visited' → logprob: -15.43000602722168
    8. '   ' → logprob: -15.43000602722168
    9. ' {' → logprob: -15.93000602722168
    10. '[s' → logprob: -16.05500602722168

Token 520: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2597186863422394
    2. '()
' → logprob: -1.509718656539917
    3. '(comp' → logprob: -5.259718894958496
    4. '(stack' → logprob: -6.259718894958496
    5. '([' → logprob: -7.634718894958496
    6. 'comp' → logprob: -9.884718894958496
    7. '()

' → logprob: -9.884718894958496
    8. '({' → logprob: -11.634718894958496
    9. '()\' → logprob: -11.759718894958496
    10. '();' → logprob: -11.884718894958496

Token 521: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.32392441527918e-05
    2. ' i' → logprob: -10.125053405761719
    3. '   ' → logprob: -12.125053405761719
    4. 'stack' → logprob: -13.375053405761719
    5. '           ' → logprob: -13.875053405761719
    6. '
' → logprob: -14.125053405761719
    7. '       ' → logprob: -14.375053405761719
    8. ' ' → logprob: -14.625053405761719
    9. '  ' → logprob: -14.875053405761719
    10. '    ' → logprob: -14.875053405761719

Token 522: '])
' (ID: 5169)
  Prédit: '])
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])
' → logprob: -0.47428929805755615
    2. '])' → logprob: -0.9742892980575562
    3. '])

' → logprob: -8.849288940429688
    4. '])
' → logprob: -10.224288940429688
    5. '       ' → logprob: -11.349288940429688
    6. ' ])' → logprob: -11.724288940429688
    7. ' ])
' → logprob: -11.849288940429688
    8. ')
' → logprob: -13.849288940429688
    9. '   ' → logprob: -13.849288940429688
    10. ']);' → logprob: -14.349288940429688

Token 523: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2571616768836975
    2. '
' → logprob: -2.8821616172790527
    3. '	while' → logprob: -3.0071616172790527
    4. '	' → logprob: -3.1321616172790527
    5. ' while' → logprob: -3.7571616172790527
    6. 'while' → logprob: -4.007161617279053
    7. '   ' → logprob: -5.007161617279053
    8. '[' → logprob: -5.007161617279053
    9. ')' → logprob: -6.007161617279053
    10. '\t' → logprob: -6.132161617279053

Token 524: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11616232991218567
    2. ' while' → logprob: -2.3661623001098633
    3. '       ' → logprob: -4.866162300109863
    4. 'comp' → logprob: -5.241162300109863
    5. '   ' → logprob: -6.616162300109863
    6. '	while' → logprob: -6.991162300109863
    7. ' comp' → logprob: -8.991162300109863
    8. '```' → logprob: -9.616162300109863
    9. '           ' → logprob: -10.116162300109863
    10. '
' → logprob: -10.116162300109863

Token 525: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0003360582049936056
    2. ' stack' → logprob: -8.000335693359375
    3. '   ' → logprob: -14.625335693359375
    4. '	stack' → logprob: -16.250335693359375
    5. '(stack' → logprob: -18.000335693359375
    6. '       ' → logprob: -18.500335693359375
    7. '    ' → logprob: -18.625335693359375
    8. 'len' → logprob: -18.750335693359375
    9. ' ' → logprob: -18.750335693359375
    10. '  ' → logprob: -19.875335693359375

Token 526: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.203409844194539e-05
    2. '       ' → logprob: -11.625041961669922
    3. '   ' → logprob: -12.000041961669922
    4. '.pop' → logprob: -12.125041961669922
    5. '```' → logprob: -12.500041961669922
    6. ':' → logprob: -12.625041961669922
    7. '
' → logprob: -12.875041961669922
    8. ':
' → logprob: -13.125041961669922
    9. 'stack' → logprob: -13.125041961669922
    10. '           ' → logprob: -13.750041961669922

Token 527: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1805715411901474
    2. ':
' → logprob: -1.8055715560913086
    3. '):' → logprob: -8.055571556091309
    4. '):
' → logprob: -8.055571556091309
    5. '.pop' → logprob: -9.055571556091309
    6. ')' → logprob: -10.930571556091309
    7. ' and' → logprob: -11.055571556091309
    8. ':
' → logprob: -11.680571556091309
    9. 'and' → logprob: -12.180571556091309
    10. 'pop' → logprob: -12.305571556091309

Token 528: '           ' (ID: 352)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1064191535115242
    2. 'v' → logprob: -2.731419086456299
    3. '           ' → logprob: -3.731419086456299
    4. '   ' → logprob: -4.606419086456299
    5. '       ' → logprob: -6.856419086456299
    6. ' u' → logprob: -7.731419086456299
    7. '	v' → logprob: -9.481419563293457
    8. '    ' → logprob: -9.731419563293457
    9. 'u' → logprob: -9.731419563293457
    10. ' node' → logprob: -9.856419563293457

Token 529: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.021212607622146606
    2. 'u' → logprob: -4.271212577819824
    3. ' v' → logprob: -5.021212577819824
    4. ' u' → logprob: -8.021212577819824
    5. '   ' → logprob: -9.771212577819824
    6. 'node' → logprob: -10.521212577819824
    7. 'cur' → logprob: -12.021212577819824
    8. ' node' → logprob: -12.271212577819824
    9. 'x' → logprob: -13.771212577819824
    10. 'w' → logprob: -14.021212577819824

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002146452665329
    2. '=' → logprob: -2.350214719772339
    3. 'stack' → logprob: -12.850214958190918
    4. 'comp' → logprob: -13.225214958190918
    5. ' =
' → logprob: -14.225214958190918
    6. ')' → logprob: -14.475214958190918
    7. '(stack' → logprob: -14.850214958190918
    8. ' ' → logprob: -14.975214958190918
    9. 'v' → logprob: -15.225214958190918
    10. '	' → logprob: -15.725214958190918

Token 531: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0007119550718925893
    2. ' stack' → logprob: -7.250711917877197
    3. 'comp' → logprob: -13.250712394714355
    4. '	stack' → logprob: -16.62571144104004
    5. '(stack' → logprob: -16.62571144104004
    6. 'v' → logprob: -17.50071144104004
    7. '   ' → logprob: -18.00071144104004
    8. ' ' → logprob: -18.25071144104004
    9. '.stack' → logprob: -19.50071144104004
    10. ' comp' → logprob: -19.62571144104004

Token 532: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009789824252948165
    2. '.pop' → logprob: -7.000978946685791
    3. 'pop' → logprob: -9.62597942352295
    4. 'stack' → logprob: -14.75097942352295
    5. '   ' → logprob: -15.12597942352295
    6. '
' → logprob: -16.000978469848633
    7. '.stack' → logprob: -16.125978469848633
    8. '```' → logprob: -16.125978469848633
    9. ' pop' → logprob: -16.375978469848633
    10. '(pop' → logprob: -16.375978469848633

Token 533: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0007152927573770285
    2. 'pop' → logprob: -7.250715255737305
    3. '.' → logprob: -12.375715255737305
    4. '   ' → logprob: -15.125715255737305
    5. '	pop' → logprob: -15.375715255737305
    6. '=' → logprob: -15.875715255737305
    7. '(pop' → logprob: -16.125715255737305
    8. ' pop' → logprob: -16.500715255737305
    9. '.p' → logprob: -16.500715255737305
    10. ')' → logprob: -17.125715255737305

Token 534: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07977910339832306
    2. '()' → logprob: -2.5797791481018066
    3. ')
' → logprob: -7.954779148101807
    4. ')' → logprob: -8.579778671264648
    5. '           ' → logprob: -8.829778671264648
    6. '
' → logprob: -10.454778671264648
    7. ':
' → logprob: -10.579778671264648
    8. '       ' → logprob: -10.579778671264648
    9. '()

' → logprob: -10.704778671264648
    10. '               ' → logprob: -10.829778671264648

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12172931432723999
    2. ' comp' → logprob: -2.6217293739318848
    3. '               ' → logprob: -3.9967293739318848
    4. '   ' → logprob: -4.496729373931885
    5. '       ' → logprob: -4.996729373931885
    6. '	comp' → logprob: -5.746729373931885
    7. '	       ' → logprob: -6.871729373931885
    8. 'comp' → logprob: -7.746729373931885
    9. '(comp' → logprob: -8.121728897094727
    10. '		' → logprob: -8.621728897094727

Token 536: ' comp' (ID: 1050)
  Prédit: ' comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comp' → logprob: -0.693585216999054
    2. 'comp' (adapté à ' comp') → logprob: -1.6935851573944092
    3. '   ' → logprob: -1.8185851573944092
    4. '       ' → logprob: -1.9435851573944092
    5. '           ' → logprob: -5.318585395812988
    6. '               ' → logprob: -5.318585395812988
    7. '	comp' → logprob: -7.193585395812988
    8. ' comps' → logprob: -8.443585395812988
    9. '(comp' → logprob: -10.193585395812988
    10. '.comp' → logprob: -10.318585395812988

Token 537: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.0015771172475069761
    2. '_' → logprob: -6.501576900482178
    3. 'vertices' → logprob: -9.626577377319336
    4. '
' → logprob: -13.626577377319336
    5. '_v' → logprob: -14.001577377319336
    6. 'v' → logprob: -14.001577377319336
    7. '_nodes' → logprob: -14.126577377319336
    8. '_vert' → logprob: -14.376577377319336
    9. '_edges' → logprob: -14.501577377319336
    10. '_tokens' → logprob: -14.751577377319336

Token 538: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00021784115233458579
    2. '.append' → logprob: -9.12521743774414
    3. 'list' → logprob: -9.25021743774414
    4. 'append' → logprob: -11.50021743774414
    5. 'List' → logprob: -15.00021743774414
    6. '_.' → logprob: -15.12521743774414
    7. 's' → logprob: -15.37521743774414
    8. '-list' → logprob: -15.50021743774414
    9. '```' → logprob: -15.62521743774414
    10. '\' → logprob: -15.75021743774414

Token 539: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.85104202805087e-05
    2. '.' → logprob: -9.500078201293945
    3. '.app' → logprob: -12.625078201293945
    4. 'append' → logprob: -15.250078201293945
    5. '.ap' → logprob: -16.625078201293945
    6. ' .' → logprob: -17.625078201293945
    7. '.add' → logprob: -19.000078201293945
    8. '.extend' → logprob: -19.125078201293945
    9. ').' → logprob: -19.875078201293945
    10. '.push' → logprob: -20.000078201293945

Token 540: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.006716555915772915
    2. 'v' → logprob: -5.006716728210449
    3. '(' → logprob: -14.13171672821045
    4. ' v' → logprob: -15.50671672821045
    5. '	v' → logprob: -15.88171672821045
    6. '(
' → logprob: -17.006715774536133
    7. ')v' → logprob: -17.256715774536133
    8. '[v' → logprob: -17.756715774536133
    9. ',v' → logprob: -19.256715774536133
    10. ' (' → logprob: -19.506715774536133

Token 541: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.011171373538672924
    2. ')' → logprob: -4.511171340942383
    3. ' )
' → logprob: -10.136171340942383
    4. '       ' → logprob: -10.386171340942383
    5. '           ' → logprob: -11.011171340942383
    6. '
' → logprob: -11.261171340942383
    7. '   ' → logprob: -11.511171340942383
    8. ')
' → logprob: -12.511171340942383
    9. '                   ' → logprob: -12.636171340942383
    10. '               ' → logprob: -12.636171340942383

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021307526621967554
    2. '       ' → logprob: -6.62713098526001
    3. '   ' → logprob: -7.37713098526001
    4. '
' → logprob: -9.002130508422852
    5. ' for' → logprob: -11.377130508422852
    6. '               ' → logprob: -11.877130508422852
    7. '                   ' → logprob: -12.127130508422852
    8. '<|end|>' → logprob: -12.252130508422852
    9. '		' → logprob: -12.502130508422852
    10. '          ' → logprob: -12.877130508422852

Token 543: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5849090218544006
    2. ' for' → logprob: -0.8349090218544006
    3. '   ' → logprob: -4.834908962249756
    4. '           ' → logprob: -7.459908962249756
    5. '       ' → logprob: -8.209909439086914
    6. '	for' → logprob: -8.959909439086914
    7. '
' → logprob: -12.959909439086914
    8. ' ' → logprob: -13.834909439086914
    9. '    ' → logprob: -14.209909439086914
    10. '               ' → logprob: -14.209909439086914

Token 544: ' w' (ID: 286)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.04481155052781105
    2. ' nv' → logprob: -3.669811487197876
    3. 'w' → logprob: -4.169811725616455
    4. 'u' → logprob: -6.044811725616455
    5. 'n' → logprob: -8.669811248779297
    6. 'neighbor' → logprob: -9.169811248779297
    7. ' w' → logprob: -9.294811248779297
    8. 'nx' → logprob: -9.544811248779297
    9. 'nw' → logprob: -10.544811248779297
    10. ' u' → logprob: -10.794811248779297

Token 545: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20141635835170746
    2. 'in' → logprob: -1.7014163732528687
    3. '	in' → logprob: -13.076416015625
    4. ' ' → logprob: -14.701416015625
    5. 'w' → logprob: -16.201416015625
    6. '   ' → logprob: -16.576416015625
    7. '  ' → logprob: -17.576416015625
    8. 'v' → logprob: -17.576416015625
    9. ' ' → logprob: -17.576416015625
    10. ')' → logprob: -17.826416015625

Token 546: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0004306692280806601
    2. ' edges' → logprob: -7.750430583953857
    3. '.edges' → logprob: -17.875431060791016
    4. '_edges' → logprob: -18.625431060791016
    5. '(edges' → logprob: -18.625431060791016
    6. '   ' → logprob: -19.500431060791016
    7. 'Edges' → logprob: -20.125431060791016
    8. ' ' → logprob: -20.250431060791016
    9. 'edge' → logprob: -20.875431060791016
    10. '```' → logprob: -21.000431060791016

Token 547: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0206720617134124e-05
    2. 'v' → logprob: -11.50001049041748
    3. '[w' → logprob: -18.125009536743164
    4. '(v' → logprob: -19.125009536743164
    5. '[' → logprob: -19.375009536743164
    6. '	v' → logprob: -19.375009536743164
    7. '<v' → logprob: -20.375009536743164
    8. '[u' → logprob: -20.500009536743164
    9. '```' → logprob: -21.125009536743164
    10. ' v' → logprob: -21.375009536743164

Token 548: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.005481926258653402
    2. ']:' → logprob: -5.255481719970703
    3. ']' → logprob: -9.005481719970703
    4. '):
' → logprob: -10.005481719970703
    5. ']:
' → logprob: -10.755481719970703
    6. '       ' → logprob: -10.880481719970703
    7. ':
' → logprob: -11.255481719970703
    8. ']):
' → logprob: -11.255481719970703
    9. '           ' → logprob: -11.630481719970703
    10. ']:

' → logprob: -13.255481719970703

Token 549: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019305046589579433
    2. ' if' → logprob: -8.875192642211914
    3. '		       ' → logprob: -11.250192642211914
    4. '	           ' → logprob: -11.500192642211914
    5. '<|end|>' → logprob: -12.250192642211914
    6. '                   ' → logprob: -12.500192642211914
    7. '			' → logprob: -12.875192642211914
    8. ',' → logprob: -12.875192642211914
    9. '              ' → logprob: -13.000192642211914
    10. 'if' → logprob: -13.250192642211914

Token 550: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48650798201560974
    2. ' if' → logprob: -0.9865080118179321
    3. '           ' → logprob: -4.736507892608643
    4. '                   ' → logprob: -6.236507892608643
    5. '               ' → logprob: -6.611507892608643
    6. '   ' → logprob: -8.3615083694458
    7. '	if' → logprob: -10.2365083694458
    8. ' ' → logprob: -12.8615083694458
    9. '
' → logprob: -13.1115083694458
    10. '	           ' → logprob: -13.2365083694458

Token 551: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.02054562419652939
    2. ' w' → logprob: -3.895545721054077
    3. 'not' → logprob: -13.395545959472656
    4. ' not' → logprob: -13.895545959472656
    5. '   ' → logprob: -14.520545959472656
    6. ' ' → logprob: -15.645545959472656
    7. '    ' → logprob: -16.020545959472656
    8. '(w' → logprob: -16.145545959472656
    9. '
' → logprob: -16.520545959472656
    10. '	w' → logprob: -16.770545959472656

Token 552: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011090735904872417
    2. 'not' → logprob: -4.5110907554626465
    3. ' in' → logprob: -10.261090278625488
    4. 'in' → logprob: -12.011090278625488
    5. ')' → logprob: -14.636090278625488
    6. ' no' → logprob: -15.011090278625488
    7. ' ' → logprob: -15.136090278625488
    8. '	not' → logprob: -15.261090278625488
    9. '
' → logprob: -15.511090278625488
    10. '[' → logprob: -16.511091232299805

Token 553: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16370977461338043
    2. 'in' → logprob: -1.9137097597122192
    3. 'comp' → logprob: -5.66370964050293
    4. 'not' → logprob: -12.91370964050293
    5. ' comp' → logprob: -13.03870964050293
    6. ' not' → logprob: -13.16370964050293
    7. '[' → logprob: -14.28870964050293
    8. '
' → logprob: -14.53870964050293
    9. ' ' → logprob: -14.66370964050293
    10. '(comp' → logprob: -14.78870964050293

Token 554: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -2.7729658540920354e-05
    2. ' comp' → logprob: -10.500027656555176
    3. '	comp' → logprob: -16.250028610229492
    4. '(comp' → logprob: -18.250028610229492
    5. 'com' → logprob: -19.000028610229492
    6. '.comp' → logprob: -19.625028610229492
    7. '   ' → logprob: -19.875028610229492
    8. '
' → logprob: -20.000028610229492
    9. '       ' → logprob: -20.625028610229492
    10. '```' → logprob: -20.625028610229492

Token 555: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022737650200724602
    2. '_vertices' → logprob: -4.272737503051758
    3. 'visited' → logprob: -4.772737503051758
    4. 'vertices' → logprob: -9.772737503051758
    5. 'Visited' → logprob: -12.272737503051758
    6. '
' → logprob: -12.897737503051758
    7. 'ited' → logprob: -13.147737503051758
    8. '\' → logprob: -13.772737503051758
    9. ' visited' → logprob: -14.147737503051758
    10. 'ected' → logprob: -14.147737503051758

Token 556: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0015261677326634526
    2. 'vertices' → logprob: -6.501526355743408
    3. 'ited' → logprob: -11.87652587890625
    4. '_vertices' → logprob: -12.12652587890625
    5. '_' → logprob: -12.50152587890625
    6. ' visited' → logprob: -13.37652587890625
    7. '
' → logprob: -13.62652587890625
    8. 'Visited' → logprob: -14.50152587890625
    9. 'verts' → logprob: -14.62652587890625
    10. 'verted' → logprob: -14.87652587890625

Token 557: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.015154024586081505
    2. '                   ' → logprob: -4.890153884887695
    3. ':' → logprob: -5.390153884887695
    4. ' and' → logprob: -6.140153884887695
    5. '):
' → logprob: -7.515153884887695
    6. '               ' → logprob: -9.015153884887695
    7. '                       ' → logprob: -10.140153884887695
    8. '           ' → logprob: -10.265153884887695
    9. ' :
' → logprob: -10.890153884887695
    10. 'and' → logprob: -11.265153884887695

Token 558: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0019765726756304502
    2. '                       ' → logprob: -7.001976490020752
    3. '               ' → logprob: -7.126976490020752
    4. '           ' → logprob: -8.87697696685791
    5. '                           ' → logprob: -11.00197696685791
    6. '```' → logprob: -11.00197696685791
    7. '       ' → logprob: -11.25197696685791
    8. ':
' → logprob: -11.37697696685791
    9. '   ' → logprob: -11.50197696685791
    10. ' comp' → logprob: -11.62697696685791

Token 559: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' (adapté à ' comp') → logprob: -0.7976630926132202
    2. '                   ' → logprob: -1.0476630926132202
    3. ' comp' → logprob: -1.6726630926132202
    4. '                       ' → logprob: -4.67266321182251
    5. '               ' → logprob: -7.17266321182251
    6. '   ' → logprob: -7.67266321182251
    7. '       ' → logprob: -8.422662734985352
    8. '           ' → logprob: -8.797662734985352
    9. '	comp' → logprob: -9.797662734985352
    10. 'stack' → logprob: -10.797662734985352

Token 560: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -8.537868779967539e-06
    2. 'visited' → logprob: -11.875008583068848
    3. '_vertices' → logprob: -13.375008583068848
    4. 'Visited' → logprob: -17.12500762939453
    5. '\' → logprob: -18.00000762939453
    6. ' visited' → logprob: -19.00000762939453
    7. '_vis' → logprob: -19.25000762939453
    8. '_visible' → logprob: -19.37500762939453
    9. '_completed' → logprob: -19.37500762939453
    10. '```' → logprob: -19.50000762939453

Token 561: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -6.635164754698053e-05
    2. 'vertices' → logprob: -9.625066757202148
    3. ' visited' → logprob: -16.50006675720215
    4. '_' → logprob: -16.87506675720215
    5. '_vertices' → logprob: -17.25006675720215
    6. '2' → logprob: -17.62506675720215
    7. 'Visited' → logprob: -17.62506675720215
    8. 'v' → logprob: -18.00006675720215
    9. 'w' → logprob: -19.00006675720215
    10. 'verts' → logprob: -19.87506675720215

Token 562: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.375005722045898
    3. 'add' → logprob: -13.625005722045898
    4. ' .' → logprob: -15.750005722045898
    5. '=' → logprob: -17.6250057220459
    6. '.append' → logprob: -18.8750057220459
    7. '.remove' → logprob: -19.1250057220459
    8. '   ' → logprob: -20.0000057220459
    9. '.Add' → logprob: -20.2500057220459
    10. ' =' → logprob: -20.5000057220459

Token 563: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.5
    3. 'w' → logprob: -16.5
    4. '(
' → logprob: -17.375
    5. '	w' → logprob: -19.25
    6. '(v' → logprob: -20.0
    7. ' (' → logprob: -20.375
    8. '<w' → logprob: -21.0
    9. ' w' → logprob: -22.75
    10. '((' → logprob: -22.875

Token 564: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.420209676027298
    2. ')
' → logprob: -1.1702096462249756
    3. '                   ' → logprob: -3.4202096462249756
    4. '               ' → logprob: -10.795209884643555
    5. ')
' → logprob: -11.045209884643555
    6. '                       ' → logprob: -11.545209884643555
    7. '```' → logprob: -12.045209884643555
    8. '           ' → logprob: -12.670209884643555
    9. '				' → logprob: -12.920209884643555
    10. ')

' → logprob: -13.045209884643555

Token 565: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009715847671031952
    2. '				' → logprob: -4.759716033935547
    3. 'stack' → logprob: -7.884716033935547
    4. '		           ' → logprob: -8.509716033935547
    5. '```' → logprob: -9.009716033935547
    6. '			       ' → logprob: -9.884716033935547
    7. '	stack' → logprob: -9.884716033935547
    8. '				   ' → logprob: -9.884716033935547
    9. ' stack' → logprob: -10.009716033935547
    10. '	               ' → logprob: -10.259716033935547

Token 566: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -7.941850526549388e-06
    2. ' stack' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.25000762939453
    4. '	stack' → logprob: -18.37500762939453
    5. '           ' → logprob: -20.37500762939453
    6. '       ' → logprob: -20.87500762939453
    7. '               ' → logprob: -21.62500762939453
    8. '(stack' → logprob: -22.00000762939453
    9. '```' → logprob: -22.12500762939453
    10. '                   ' → logprob: -22.50000762939453

Token 567: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.167648876318708e-05
    2. '.append' → logprob: -10.125041961669922
    3. 'append' → logprob: -13.625041961669922
    4. '```' → logprob: -15.625041961669922
    5. '           ' → logprob: -16.875041961669922
    6. '   ' → logprob: -16.875041961669922
    7. '       ' → logprob: -17.000041961669922
    8. '                   ' → logprob: -17.750041961669922
    9. '          ' → logprob: -18.000041961669922
    10. '         ' → logprob: -18.250041961669922

Token 568: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -13.00000286102295
    3. 'append' → logprob: -14.25000286102295
    4. '.app' → logprob: -18.125003814697266
    5. '.push' → logprob: -18.250003814697266
    6. ' .' → logprob: -19.250003814697266
    7. '.extend' → logprob: -19.250003814697266
    8. '.pop' → logprob: -21.000003814697266
    9. ' append' → logprob: -21.250003814697266
    10. '	append' → logprob: -21.875003814697266

Token 569: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -3.128163257315464e-07
    2. 'w' → logprob: -15.5
    3. '(' → logprob: -18.375
    4. '(v' → logprob: -19.25
    5. '(
' → logprob: -19.75
    6. '	w' → logprob: -20.875
    7. ' (' → logprob: -22.375
    8. '((' → logprob: -22.75
    9. '<w' → logprob: -23.0
    10. ' w' → logprob: -23.375

Token 570: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014096579980105162
    2. ')
' → logprob: -8.875141143798828
    3. ')

' → logprob: -15.500141143798828
    4. ' )' → logprob: -15.750141143798828
    5. '))' → logprob: -15.875141143798828
    6. ')
' → logprob: -16.375141143798828
    7. '       ' → logprob: -16.375141143798828
    8. '               ' → logprob: -16.750141143798828
    9. ')#' → logprob: -17.125141143798828
    10. '```' → logprob: -17.375141143798828

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004885877016931772
    2. '<|end|>' → logprob: -6.129885673522949
    3. ')' → logprob: -6.629885673522949
    4. '   ' → logprob: -8.00488567352295
    5. ' edges' → logprob: -8.62988567352295
    6. '        
' → logprob: -8.75488567352295
    7. '
' → logprob: -9.00488567352295
    8. '	' → logprob: -9.50488567352295
    9. ',' → logprob: -9.50488567352295
    10. '```' → logprob: -10.12988567352295

Token 572: ' E' (ID: 457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12638774514198303
    2. 'E' (adapté à ' E') → logprob: -2.37638783454895
    3. 'edges' → logprob: -4.501387596130371
    4. 'edge' → logprob: -5.126387596130371
    5. 'existing' → logprob: -6.001387596130371
    6. 'total' → logprob: -6.126387596130371
    7. 'count' → logprob: -6.876387596130371
    8. ' E' → logprob: -7.001387596130371
    9. ' edges' → logprob: -7.501387596130371
    10. '        
' → logprob: -8.126387596130371

Token 573: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.0006289214943535626
    2. 'comp' → logprob: -7.50062894821167
    3. '_count' → logprob: -10.125628471374512
    4. '_edges' → logprob: -11.125628471374512
    5. '_total' → logprob: -12.750628471374512
    6. 'Comp' → logprob: -12.875628471374512
    7. '_component' → logprob: -13.000628471374512
    8. '_sum' → logprob: -13.250628471374512
    9. '	comp' → logprob: -13.500628471374512
    10. '_' → logprob: -13.750628471374512

Token 574: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740985929965973
    2. ' =' → logprob: -0.9740985631942749
    3. ' //' → logprob: -11.599098205566406
    4. '//' → logprob: -11.849098205566406
    5. '//=' → logprob: -13.349098205566406
    6. ' +=' → logprob: -13.724098205566406
    7. '+=' → logprob: -13.724098205566406
    8. ' /=' → logprob: -14.974098205566406
    9. '/=' → logprob: -15.474098205566406
    10. '   ' → logprob: -15.599098205566406

Token 575: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.47836410999298096
    2. '0' → logprob: -0.978364109992981
    3. ' sum' → logprob: -5.478363990783691
    4. ' ' → logprob: -9.603363990783691
    5. 'len' → logprob: -11.103363990783691
    6. '(sum' → logprob: -11.103363990783691
    7. '   ' → logprob: -12.978363990783691
    8. '=sum' → logprob: -14.478363990783691
    9. '	sum' → logprob: -14.978363990783691
    10. '
' → logprob: -15.603363990783691

Token 576: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.28192973136901855
    2. '0' → logprob: -1.4069297313690186
    3. ' sum' → logprob: -7.281929969787598
    4. 'len' → logprob: -9.906929969787598
    5. '(sum' → logprob: -10.656929969787598
    6. ' ' → logprob: -11.156929969787598
    7. '   ' → logprob: -13.656929969787598
    8. '
' → logprob: -14.031929969787598
    9. '=sum' → logprob: -14.406929969787598
    10. '	sum' → logprob: -14.781929969787598

Token 577: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06620301306247711
    2. 'for' → logprob: -3.4412031173706055
    3. ' for' → logprob: -4.1912031173706055
    4. '
' → logprob: -4.4412031173706055
    5. '        
' → logprob: -6.1912031173706055
    6. '<|end|>' → logprob: -7.4412031173706055
    7. ' 
' → logprob: -7.9412031173706055
    8. ')' → logprob: -7.9412031173706055
    9. '        ' → logprob: -7.9412031173706055
    10. '+' → logprob: -8.316203117370605

Token 578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057401496917009354
    2. 'for' → logprob: -2.932401418685913
    3. ' for' → logprob: -6.057401657104492
    4. '
' → logprob: -9.682401657104492
    5. '```' → logprob: -10.307401657104492
    6. '        
' → logprob: -10.807401657104492
    7. '=' → logprob: -11.557401657104492
    8. ')' → logprob: -11.557401657104492
    9. '<|end|>' → logprob: -12.057401657104492
    10. '   ' → logprob: -12.432401657104492

Token 579: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006192696164362133
    2. ' for' → logprob: -7.500619411468506
    3. '       ' → logprob: -9.625618934631348
    4. 'visited' → logprob: -15.625618934631348
    5. '   ' → logprob: -16.500619888305664
    6. '	for' → logprob: -17.000619888305664
    7. 'edges' → logprob: -18.125619888305664
    8. '
' → logprob: -19.375619888305664
    9. 'seen' → logprob: -19.375619888305664
    10. '           ' → logprob: -19.500619888305664

Token 580: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007642475422471762
    2. 'u' → logprob: -5.0076422691345215
    3. ' v' → logprob: -7.0076422691345215
    4. ' u' → logprob: -11.13264274597168
    5. 'x' → logprob: -12.25764274597168
    6. 'vertex' → logprob: -13.50764274597168
    7. 'node' → logprob: -14.50764274597168
    8. 'uv' → logprob: -16.25764274597168
    9. '   ' → logprob: -16.63264274597168
    10. 'w' → logprob: -16.63264274597168

Token 581: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2519598603248596
    2. ' in' → logprob: -1.5019598007202148
    3. ' ' → logprob: -10.876959800720215
    4. '  ' → logprob: -13.126959800720215
    5. '   ' → logprob: -13.251959800720215
    6. '	in' → logprob: -13.251959800720215
    7. ',' → logprob: -13.376959800720215
    8. 'v' → logprob: -13.751959800720215
    9. '_in' → logprob: -14.126959800720215
    10. '_edges' → logprob: -14.626959800720215

Token 582: ' comp' (ID: 1050)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -6.392202976712724e-06
    2. ' comp' → logprob: -12.000006675720215
    3. '	comp' → logprob: -16.5000057220459
    4. 'com' → logprob: -18.8750057220459
    5. '(comp' → logprob: -20.1250057220459
    6. '   ' → logprob: -20.3750057220459
    7. '.comp' → logprob: -21.3750057220459
    8. '_comp' → logprob: -23.0000057220459
    9. 'compl' → logprob: -23.2500057220459
    10. 'c' → logprob: -23.2500057220459

Token 583: '_vertices' (ID: 96842)
  Prédit: '_vertices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vertices' → logprob: -0.0009386162855662405
    2. 'vertices' → logprob: -7.375938415527344
    3. 'v' → logprob: -9.000938415527344
    4. 'comp' → logprob: -9.500938415527344
    5. '_components' → logprob: -10.500938415527344
    6. '_' → logprob: -10.750938415527344
    7. 'Vertices' → logprob: -11.375938415527344
    8. '_comp' → logprob: -11.750938415527344
    9. '```' → logprob: -11.875938415527344
    10. '   ' → logprob: -11.875938415527344

Token 584: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.016751106828451157
    2. 'ist' → logprob: -4.641751289367676
    3. 'list' → logprob: -5.391751289367676
    4. 'st' → logprob: -6.141751289367676
    5. 't' → logprob: -8.891751289367676
    6. 'comp' → logprob: -9.141751289367676
    7. 'List' → logprob: -12.266751289367676
    8. 'ent' → logprob: -12.516751289367676
    9. '   ' → logprob: -13.016751289367676
    10. '_lists' → logprob: -13.766751289367676

Token 585: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005510265473276377
    2. ':
' → logprob: -5.630510330200195
    3. '):' → logprob: -6.380510330200195
    4. '           ' → logprob: -9.880510330200195
    5. 'for' → logprob: -10.130510330200195
    6. '   ' → logprob: -10.255510330200195
    7. '       ' → logprob: -10.880510330200195
    8. '):
' → logprob: -11.005510330200195
    9. ')' → logprob: -12.005510330200195
    10. ' for' → logprob: -12.130510330200195

Token 586: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5552995204925537
    2. ' for' → logprob: -1.4302995204925537
    3. '       ' → logprob: -2.3052995204925537
    4. '   ' → logprob: -2.5552995204925537
    5. ' E' → logprob: -5.680299758911133
    6. 'for' → logprob: -6.055299758911133
    7. '	       ' → logprob: -7.305299758911133
    8. '               ' → logprob: -7.805299758911133
    9. 'E' → logprob: -7.930299758911133
    10. '<|end|>' → logprob: -7.930299758911133

Token 587: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' (adapté à ' E') → logprob: -1.1398757123970427e-05
    2. '   ' → logprob: -12.000011444091797
    3. '           ' → logprob: -12.375011444091797
    4. '       ' → logprob: -14.750011444091797
    5. 'for' → logprob: -15.125011444091797
    6. ' E' → logprob: -15.125011444091797
    7. ' ' → logprob: -18.250011444091797
    8. '	E' → logprob: -18.500011444091797
    9. '               ' → logprob: -18.625011444091797
    10. '  ' → logprob: -18.750011444091797

Token 588: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -0.6428679823875427
    2. 'comp' → logprob: -0.8928679823875427
    3. 'edges' → logprob: -3.3928680419921875
    4. 'for' → logprob: -4.3928680419921875
    5. 'v' → logprob: -5.2678680419921875
    6. '_edges' → logprob: -5.5178680419921875
    7. 'E' → logprob: -5.8928680419921875
    8. ' edges' → logprob: -6.5178680419921875
    9. 'Comp' → logprob: -6.7678680419921875
    10. '=' → logprob: -6.7678680419921875

Token 589: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07025551050901413
    2. ' +=' → logprob: -2.6952555179595947
    3. 'len' → logprob: -9.820255279541016
    4. ']+=' → logprob: -9.820255279541016
    5. '=' → logprob: -9.945255279541016
    6. ')' → logprob: -10.195255279541016
    7. 'for' → logprob: -10.570255279541016
    8. '   ' → logprob: -10.820255279541016
    9. '+=(' → logprob: -11.445255279541016
    10. '+' → logprob: -11.445255279541016

Token 590: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: 0.0
    2. ' len' → logprob: -16.75
    3. '(len' → logprob: -21.0
    4. '   ' → logprob: -23.75
    5. '
' → logprob: -24.0
    6. '	len' → logprob: -24.25
    7. '[len' → logprob: -25.5
    8. ' ' → logprob: -26.125
    9. '```' → logprob: -26.25
    10. '=len' → logprob: -26.875

Token 591: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.0005563704180531204
    2. 'edges' → logprob: -7.500556468963623
    3. ' edges' → logprob: -13.000555992126465
    4. '(' → logprob: -13.750555992126465
    5. '(edge' → logprob: -16.62555694580078
    6. '(
' → logprob: -17.87555694580078
    7. '_edges' → logprob: -17.87555694580078
    8. '.edges' → logprob: -18.00055694580078
    9. '(vertices' → logprob: -19.25055694580078
    10. ' (' → logprob: -20.25055694580078

Token 592: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.531315314830863e-06
    2. 'v' → logprob: -12.625003814697266
    3. '[' → logprob: -15.750003814697266
    4. '(v' → logprob: -18.875003814697266
    5. ' [' → logprob: -19.375003814697266
    6. '[
' → logprob: -19.625003814697266
    7. '```' → logprob: -20.250003814697266
    8. ')[' → logprob: -20.500003814697266
    9. ' v' → logprob: -20.875003814697266
    10. ')v' → logprob: -21.125003814697266

Token 593: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3489028811454773
    2. ')' → logprob: -1.223902940750122
    3. ')//' → logprob: -8.598902702331543
    4. ']' → logprob: -9.598902702331543
    5. ')])' → logprob: -9.598902702331543
    6. ')
' → logprob: -10.223902702331543
    7. ')]' → logprob: -10.348902702331543
    8. '])
' → logprob: -10.723902702331543
    9. '))' → logprob: -11.223902702331543
    10. ' )' → logprob: -11.473902702331543

Token 594: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1363869607448578
    2. '   ' → logprob: -3.3863868713378906
    3. 'E' → logprob: -3.5113868713378906
    4. '```' → logprob: -3.7613868713378906
    5. '//' → logprob: -3.8863868713378906
    6. ' //' → logprob: -5.386386871337891
    7. '
' → logprob: -5.511386871337891
    8. '/' → logprob: -5.761386871337891
    9. ' E' → logprob: -5.761386871337891
    10. ' /' → logprob: -5.886386871337891

Token 595: ' E' (ID: 457)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8645062446594238
    2. '
' → logprob: -0.9895062446594238
    3. ' E' → logprob: -1.8645062446594238
    4. 'E' (adapté à ' E') → logprob: -3.614506244659424
    5. '   ' → logprob: -4.239506244659424
    6. ' //' → logprob: -5.614506244659424
    7. '        
' → logprob: -5.989506244659424
    8. ')
' → logprob: -7.114506244659424
    9. '//' → logprob: -7.364506244659424
    10. '    
' → logprob: -7.489506244659424

Token 596: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -9.610702363715973e-06
    2. 'comp' → logprob: -11.750009536743164
    3. '	comp' → logprob: -14.500009536743164
    4. '_COMP' → logprob: -14.875009536743164
    5. '_com' → logprob: -14.875009536743164
    6. 'Comp' → logprob: -15.500009536743164
    7. '_' → logprob: -16.750009536743164
    8. ' комп' → logprob: -17.250009536743164
    9. '_cmp' → logprob: -17.875009536743164
    10. '```' → logprob: -18.000009536743164

Token 597: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.34948694705963135
    2. '//' → logprob: -1.2244869470596313
    3. '//=' → logprob: -7.224486827850342
    4. '```' → logprob: -8.9744873046875
    5. '#' → logprob: -10.3494873046875
    6. '=' → logprob: -10.3494873046875
    7. '   ' → logprob: -10.5994873046875
    8. ' =' → logprob: -10.7244873046875
    9. ')' → logprob: -10.7244873046875
    10. '       ' → logprob: -11.3494873046875

Token 598: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.860340752406046e-05
    2. '2' → logprob: -9.7500581741333
    3. '=
' → logprob: -15.2500581741333
    4. ' ' → logprob: -18.250059127807617
    5. '=}' → logprob: -18.750059127807617
    6. '=

' → logprob: -19.000059127807617
    7. '/' → logprob: -19.000059127807617
    8. '>' → logprob: -19.500059127807617
    9. '=*/' → logprob: -19.500059127807617
    10. '==' → logprob: -19.500059127807617

Token 599: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '
' → logprob: -18.875
    4. '   ' → logprob: -19.5
    5. '２' → logprob: -20.125
    6. '۲' → logprob: -21.125
    7. '```' → logprob: -21.5
    8. '২' → logprob: -23.25
    9. 'two' → logprob: -23.5
    10. '  ' → logprob: -23.625

Token 600: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024987556040287018
    2. '       ' → logprob: -3.7749874591827393
    3. '   ' → logprob: -6.774987697601318
    4. '        
' → logprob: -7.899987697601318
    5. '
' → logprob: -9.64998722076416
    6. '    
' → logprob: -9.89998722076416
    7. '  
' → logprob: -10.02498722076416
    8. ',' → logprob: -11.39998722076416
    9. ' ans' → logprob: -11.52498722076416
    10. '

' → logprob: -11.64998722076416

Token 601: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5459418296813965
    2. 'ans' → logprob: -1.2959418296813965
    3. ' ans' → logprob: -2.0459418296813965
    4. '       ' → logprob: -4.4209418296813965
    5. '
' → logprob: -5.5459418296813965
    6. '	ans' → logprob: -6.7959418296813965
    7. '```' → logprob: -7.7959418296813965
    8. '    
' → logprob: -9.545942306518555
    9. '(ans' → logprob: -9.670942306518555
    10. '        
' → logprob: -9.920942306518555

Token 602: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.038999054580926895
    2. ' ans' → logprob: -3.288999080657959
    3. '   ' → logprob: -7.038999080657959
    4. '
' → logprob: -10.0389986038208
    5. '       ' → logprob: -11.0389986038208
    6. '	ans' → logprob: -11.7889986038208
    7. '(ans' → logprob: -12.5389986038208
    8. 'answer' → logprob: -12.5389986038208
    9. '```' → logprob: -12.7889986038208
    10. '_ans' → logprob: -13.4139986038208

Token 603: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25194650888442993
    2. '+=' → logprob: -1.5019464492797852
    3. '+' → logprob: -11.501946449279785
    4. '+=(' → logprob: -12.751946449279785
    5. '   ' → logprob: -14.001946449279785
    6. '=' → logprob: -14.126946449279785
    7. ']+=' → logprob: -14.126946449279785
    8. '+='' → logprob: -14.501946449279785
    9. ' -=' → logprob: -15.001946449279785
    10. '```' → logprob: -15.126946449279785

Token 604: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007121934904716909
    2. ' c' → logprob: -7.3757123947143555
    3. '(c' → logprob: -9.500712394714355
    4. '   ' → logprob: -11.750712394714355
    5. '(' → logprob: -13.500712394714355
    6. ' (' → logprob: -14.250712394714355
    7. '       ' → logprob: -15.500712394714355
    8. 'max' → logprob: -15.625712394714355
    9. '	c' → logprob: -16.25071144104004
    10. ' ' → logprob: -16.62571144104004

Token 605: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.750000953674316
    3. '１' → logprob: -15.500000953674316
    4. ' ' → logprob: -15.625000953674316
    5. '```' → logprob: -16.125001907348633
    6. '۱' → logprob: -17.125001907348633
    7. '`' → logprob: -17.375001907348633
    8. '
' → logprob: -17.875001907348633
    9. '১' → logprob: -19.375001907348633
    10. '[' → logprob: -19.375001907348633

Token 606: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.022160299122333527
    2. '*' → logprob: -4.022160530090332
    3. ' *' → logprob: -5.522160530090332
    4. '**' → logprob: -12.772160530090332
    5. '*t' → logprob: -15.272160530090332
    6. '```' → logprob: -15.272160530090332
    7. '*p' → logprob: -15.397160530090332
    8. '*C' → logprob: -15.522160530090332
    9. '*x' → logprob: -15.772160530090332
    10. '*v' → logprob: -15.897160530090332

Token 607: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -17.25
    4. '۲' → logprob: -17.375
    5. '₂' → logprob: -17.625
    6. '1' → logprob: -18.375
    7. 'c' → logprob: -18.625
    8. '２' → logprob: -18.875
    9. '२' → logprob: -19.25
    10. '<|end|>' → logprob: -19.5625

Token 608: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004641353618353605
    2. '-' → logprob: -5.379641532897949
    3. '-E' → logprob: -11.50464153289795
    4. ' ' → logprob: -11.75464153289795
    5. '   ' → logprob: -12.87964153289795
    6. '       ' → logprob: -15.25464153289795
    7. '```' → logprob: -15.75464153289795
    8. ' ' → logprob: -16.504640579223633
    9. '  ' → logprob: -16.754640579223633
    10. '
' → logprob: -17.379640579223633

Token 609: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -7.941850526549388e-06
    2. ' E' → logprob: -11.750007629394531
    3. '	E' → logprob: -21.50000762939453
    4. '_E' → logprob: -22.62500762939453
    5. '>E' → logprob: -22.62500762939453
    6. '(E' → logprob: -23.12500762939453
    7. '   ' → logprob: -23.25000762939453
    8. ',E' → logprob: -24.37500762939453
    9. '       ' → logprob: -24.62500762939453
    10. 'Ｅ' → logprob: -24.75000762939453

Token 610: '_comp' (ID: 34754)
  Prédit: '_comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_comp' → logprob: -1.5690089639974758e-05
    2. 'Comp' → logprob: -11.375015258789062
    3. 'comp' → logprob: -12.875015258789062
    4. '_COMP' → logprob: -13.625015258789062
    5. '	comp' → logprob: -15.750015258789062
    6. '_' → logprob: -17.000015258789062
    7. '_edges' → logprob: -17.500015258789062
    8. ' comp' → logprob: -18.250015258789062
    9. '*_' → logprob: -18.250015258789062
    10. '```' → logprob: -18.250015258789062

Token 611: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04870852455496788
    2. '
' → logprob: -3.048708438873291
    3. ' print' → logprob: -9.79870891571045
    4. '

' → logprob: -10.17370891571045
    5. ')
' → logprob: -11.54870891571045
    6. '```' → logprob: -11.79870891571045
    7. ')' → logprob: -12.42370891571045
    8. ' 
' → logprob: -12.67370891571045
    9. '
' → logprob: -13.67370891571045
    10. '  
' → logprob: -13.92370891571045

Token 612: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12721450626850128
    2. '
' → logprob: -2.1272144317626953
    3. ')' → logprob: -8.752214431762695
    4. ' print' → logprob: -9.502214431762695
    5. '```' → logprob: -11.127214431762695
    6. ')
' → logprob: -11.627214431762695
    7. '<|end|>' → logprob: -11.752214431762695
    8. '  
' → logprob: -12.002214431762695
    9. '

' → logprob: -12.002214431762695
    10. ' 
' → logprob: -12.627214431762695

Token 613: ' ans' (ID: 3345)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3132810592651367
    2. '__' → logprob: -1.3132810592651367
    3. ' ' → logprob: -11.938281059265137
    4. ' True' → logprob: -12.313281059265137
    5. 'True' → logprob: -12.688281059265137
    6. '___' → logprob: -13.313281059265137
    7. ' ' → logprob: -14.188281059265137
    8. '_' → logprob: -14.313281059265137
    9. ''' → logprob: -14.438281059265137
    10. 'name' → logprob: -14.688281059265137

Token 614: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4336768090724945
    2. ' >' → logprob: -1.058676838874817
    3. ' ==' → logprob: -5.558676719665527
    4. '==' → logprob: -7.683676719665527
    5. ':' → logprob: -8.683676719665527
    6. ')' → logprob: -9.058676719665527
    7. ' !=' → logprob: -9.558676719665527
    8. '```' → logprob: -9.808676719665527
    9. '%' → logprob: -9.933676719665527
    10. ' +=' → logprob: -10.183676719665527

Token 615: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815415732562542
    2. ' ' → logprob: -4.018154144287109
    3. '1' → logprob: -13.64315414428711
    4. '=' → logprob: -14.45565414428711
    5. '10' → logprob: -15.14315414428711
    6. '00' → logprob: -15.45565414428711
    7. '-' → logprob: -15.45565414428711
    8. ' -' → logprob: -15.64315414428711
    9. '2' → logprob: -15.76815414428711
    10. '100' → logprob: -15.83065414428711

Token 616: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.301394023466855e-05
    2. ' ' → logprob: -9.875062942504883
    3. 'V' → logprob: -12.000062942504883
    4. '1' → logprob: -13.375062942504883
    5. '-' → logprob: -13.875062942504883
    6. '00' → logprob: -14.750062942504883
    7. '000' → logprob: -14.875062942504883
    8. '(' → logprob: -15.125062942504883
    9. '```' → logprob: -15.187562942504883
    10. '100' → logprob: -15.500062942504883

Token 617: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38716790080070496
    2. ':
' → logprob: -1.1371679306030273
    3. '   ' → logprob: -8.512167930603027
    4. 'print' → logprob: -9.512167930603027
    5. ':return' → logprob: -12.137167930603027
    6. '.' → logprob: -12.512167930603027
    7. ' print' → logprob: -12.512167930603027
    8. ' or' → logprob: -13.262167930603027
    9. ' :
' → logprob: -13.637167930603027
    10. ':

' → logprob: -13.637167930603027

Token 618: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05504995957016945
    2. ' print' → logprob: -3.6800498962402344
    3. 'print' → logprob: -3.6800498962402344
    4. ':' → logprob: -6.180049896240234
    5. ':
' → logprob: -7.055049896240234
    6. '	print' → logprob: -8.930049896240234
    7. ' :' → logprob: -11.180049896240234
    8. ' :
' → logprob: -11.305049896240234
    9. '       ' → logprob: -12.430049896240234
    10. '```' → logprob: -12.430049896240234

Token 619: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18111713230609894
    2. ' print' → logprob: -2.056117057800293
    3. '   ' → logprob: -3.556117057800293
    4. 'ans' → logprob: -5.306117057800293
    5. ' ans' → logprob: -5.556117057800293
    6. '
' → logprob: -9.306117057800293
    7. '    
' → logprob: -9.556117057800293
    8. '```' → logprob: -10.181117057800293
    9. 'for' → logprob: -10.556117057800293
    10. ' for' → logprob: -10.681117057800293

Token 620: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6455212831497192
    2. '0' → logprob: -1.1455212831497192
    3. '(V' → logprob: -2.3955211639404297
    4. '()' → logprob: -3.5205211639404297
    5. ' ' → logprob: -4.77052116394043
    6. '1' → logprob: -4.89552116394043
    7. '("' → logprob: -5.52052116394043
    8. '('' → logprob: -5.52052116394043
    9. ' (' → logprob: -5.89552116394043
    10. 'V' → logprob: -5.89552116394043

Token 621: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006352600641548634
    2. '2' → logprob: -5.506352424621582
    3. '3' → logprob: -6.506352424621582
    4. '0' → logprob: -7.256352424621582
    5. '-' → logprob: -10.006352424621582
    6. '4' → logprob: -12.631352424621582
    7. ')' → logprob: -12.693852424621582
    8. ' ' → logprob: -12.818852424621582
    9. '(' → logprob: -12.881352424621582
    10. 'V' → logprob: -13.506352424621582

Token 622: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018422940047457814
    2. ')
' → logprob: -8.750184059143066
    3. 'else' → logprob: -10.625184059143066
    4. ' )' → logprob: -14.500184059143066
    5. '())' → logprob: -14.875184059143066
    6. '()' → logprob: -15.250184059143066
    7. ' else' → logprob: -15.750184059143066
    8. '),' → logprob: -16.500185012817383
    9. ')`' → logprob: -17.000185012817383
    10. '))' → logprob: -17.375185012817383

Token 623: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00027182576013728976
    2. ' else' → logprob: -8.875271797180176
    3. '
' → logprob: -9.000271797180176
    4. 'elif' → logprob: -12.750271797180176
    5. 'print' → logprob: -13.250271797180176
    6. ')' → logprob: -13.750271797180176
    7. '    
' → logprob: -14.000271797180176
    8. ')
' → logprob: -14.375271797180176
    9. '```' → logprob: -14.625271797180176
    10. '   ' → logprob: -14.750271797180176

Token 624: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.387337863445282
    2. ':' → logprob: -1.1373379230499268
    3. '   ' → logprob: -8.012337684631348
    4. 'print' → logprob: -9.637337684631348
    5. ' :
' → logprob: -10.387337684631348
    6. ' print' → logprob: -10.887337684631348
    7. '(print' → logprob: -12.012337684631348
    8. ':

' → logprob: -12.762337684631348
    9. ' :' → logprob: -12.762337684631348
    10. '():
' → logprob: -13.137337684631348

Token 625: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21324115991592407
    2. '   ' → logprob: -1.7132411003112793
    3. ' print' → logprob: -4.463241100311279
    4. '```' → logprob: -8.588241577148438
    5. '	print' → logprob: -10.088241577148438
    6. '       ' → logprob: -12.713241577148438
    7. '``' → logprob: -13.213241577148438
    8. '(print' → logprob: -16.338241577148438
    9. '   ' → logprob: -16.588241577148438
    10. ' ' → logprob: -16.588241577148438

Token 626: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0009114635176956654
    2. ' print' → logprob: -7.000911235809326
    3. '   ' → logprob: -17.375911712646484
    4. 'pr' → logprob: -18.375911712646484
    5. '```' → logprob: -18.625911712646484
    6. 'prin' → logprob: -20.250911712646484
    7. '	print' → logprob: -20.875911712646484
    8. ' 
' → logprob: -21.125911712646484
    9. 'printf' → logprob: -21.250911712646484
    10. '
' → logprob: -21.500911712646484

Token 627: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.982165698194876e-05
    2. '(' → logprob: -9.750080108642578
    3. 'ans' → logprob: -10.750080108642578
    4. ' ans' → logprob: -17.625080108642578
    5. '	ans' → logprob: -18.000080108642578
    6. '(answer' → logprob: -19.375080108642578
    7. ' (' → logprob: -19.500080108642578
    8. '(abs' → logprob: -19.875080108642578
    9. '(
' → logprob: -19.875080108642578
    10. '(an' → logprob: -20.375080108642578

Token 628: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -17.375001907348633
    4. '())' → logprob: -17.500001907348633
    5. '+' → logprob: -18.000001907348633
    6. ')`' → logprob: -18.000001907348633
    7. '()' → logprob: -18.125001907348633
    8. '))' → logprob: -18.125001907348633
    9. '）' → logprob: -19.375001907348633
    10. '`)' → logprob: -19.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 626
Tokens correctement prédits (1ère position, stricte): 259
Tokens correctement prédits (1ère position, avec adaptation): 290
Tokens correctement prédits (top 10): 505
Précision stricte (1ère position): 41.37%
Précision adaptée (1ère position): 46.33%
Précision (top 10): 80.67%
================================================================================
