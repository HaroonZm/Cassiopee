================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def input():
    return sys.stdin.readline()

def count_multiples(n, p_list):
    # Inclusion-Exclusion to count numbers from 1 to n divisible by any p_i in p_list
    # p_list elements are guaranteed to divide n
    m = len(p_list)
    res = 0
    # There are at most 20 p_i’s, so subsets up to size 20 (2^20=1,048,576, feasible)
    # Use bitmask enumeration for subsets
    for mask in range(1, 1 << m):
        lcm = 1
        bits_count = 0
        for i in range(m):
            if mask & (1 << i):
                bits_count += 1
                # Compute lcm with p_list[i]
                # Since p_i divides n, lcm won't exceed n
                p = p_list[i]
                lcm = lcm * p // math.gcd(lcm, p)
                if lcm > n:  # no multiples if lcm > n
                    break
        else:
            count = n // lcm
            if bits_count % 2 == 1:
                res += count
            else:
                res -= count
    return res

def main():
    # For each test case, read n, m, then p_list, then compute expected revenue
    while True:
        line = ''
        while line.strip() == '':
            line = sys.stdin.readline()
            if line == '':
                return
        n_m = line.strip().split()
        if len(n_m) < 2:
            n_m += sys.stdin.readline().strip().split()
        n, m = map(int, n_m)
        if n == 0 and m == 0:
            break
        p_line = ''
        p_list = []
        # Read possibly multiple lines until we have m integers
        while len(p_list) < m:
            p_line += ' ' + sys.stdin.readline()
            p_list = list(map(int, p_line.strip().split()))
        # Total numbers from 1..n = n
        # Count numbers divisible by any p_i in p_list
        divisible_count = count_multiples(n, p_list)
        allowed_count = n - divisible_count
        if allowed_count == 0:
            # No year left for order, expected income = 0
            print('0.0000000000')
            continue
        # Sum of all allowed years = sum(1..n) - sum of all multiples of forbidden p_i’s
        total_sum = n * (n + 1) // 2

        # Inclusion-Exclusion for sum of multiples
        def sum_multiples(n, p_list):
            m = len(p_list)
            res = 0
            for mask in range(1, 1 << m):
                lcm = 1
                bits_count = 0
                for i in range(m):
                    if mask & (1 << i):
                        bits_count += 1
                        p = p_list[i]
                        lcm = lcm * p // math.gcd(lcm, p)
                        if lcm > n:
                            break
                else:
                    max_k = n // lcm
                    # sum of multiples of lcm up to n: lcm * sum(1..max_k)
                    s = lcm * max_k * (max_k + 1) // 2
                    if bits_count % 2 == 1:
                        res += s
                    else:
                        res -= s
            return res

        forbidden_sum = sum_multiples(n, p_list)
        allowed_sum = total_sum - forbidden_sum

        # Expected value = allowed_sum / allowed_count
        expected = allowed_sum / allowed_count
        print(f'{expected:.10f}')

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.054233431816101
    2. '\' → logprob: -1.429233431816101
    3. 'import' → logprob: -2.1792335510253906
    4. '\n' → logprob: -2.1792335510253906
    5. '```' → logprob: -2.4292335510253906
    6. 'def' → logprob: -3.4292335510253906
    7. '
' → logprob: -4.179233551025391
    8. ',' → logprob: -4.679233551025391
    9. '`' → logprob: -4.929233551025391
    10. '*' → logprob: -4.929233551025391

Token 7: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003533559152856469
    2. ' calculate' → logprob: -6.003533363342285
    3. ' space' → logprob: -7.753533363342285
    4. '_' → logprob: -8.253533363342285
    5. ' factorial' → logprob: -9.128533363342285
    6. ' compute' → logprob: -9.753533363342285
    7. ' add' → logprob: -10.878533363342285
    8. ' math' → logprob: -10.878533363342285
    9. ' ```' → logprob: -11.128533363342285
    10. ' my' → logprob: -11.128533363342285

Token 8: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017000529915094376
    2. '_' → logprob: -6.626699924468994
    3. ' (' → logprob: -9.626700401306152
    4. '('' → logprob: -9.626700401306152
    5. '():' → logprob: -9.751700401306152
    6. '("("' → logprob: -9.876700401306152
    7. '(:' → logprob: -10.501700401306152
    8. ':' → logprob: -10.751700401306152
    9. '("' → logprob: -11.626700401306152
    10. 's' → logprob: -11.876700401306152

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9137266874313354
    2. '()' → logprob: -1.0387266874313354
    3. '(' → logprob: -2.538726806640625
    4. '<|end|>' → logprob: -2.913726806640625
    5. '   ' → logprob: -3.913726806640625
    6. ' ()' → logprob: -3.913726806640625
    7. '_' → logprob: -4.538726806640625
    8. '  ' → logprob: -4.788726806640625
    9. ')' → logprob: -4.788726806640625
    10. ''' → logprob: -5.163726806640625

Token 10: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.116939902305603
    2. ' sys' → logprob: -1.491939902305603
    3. 'return' (adapté à ' return') → logprob: -1.991939902305603
    4. 'sys' → logprob: -2.6169400215148926
    5. '()' → logprob: -2.7419400215148926
    6. 'input' → logprob: -3.1169400215148926
    7. ' return' → logprob: -3.3669400215148926
    8. '   ' → logprob: -3.3669400215148926
    9. ' input' → logprob: -3.8669400215148926
    10. ' ()' → logprob: -4.616940021514893

Token 11: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06839270889759064
    2. ' ' → logprob: -3.443392753601074
    3. ' input' → logprob: -3.443392753601074
    4. 'input' → logprob: -7.193392753601074
    5. 'sys' → logprob: -7.318392753601074
    6. ' ' → logprob: -8.193392753601074
    7. '"' → logprob: -8.818392753601074
    8. '  ' → logprob: -9.818392753601074
    9. ' next' → logprob: -10.193392753601074
    10. ' '' → logprob: -10.443392753601074

Token 12: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.22648562490940094
    2. '.' → logprob: -1.6014856100082397
    3. '.argv' → logprob: -7.976485729217529
    4. ' .' → logprob: -8.226485252380371
    5. '.stdout' → logprob: -8.476485252380371
    6. '.readline' → logprob: -9.101485252380371
    7. '.input' → logprob: -9.851485252380371
    8. '.std' → logprob: -10.351485252380371
    9. '.exit' → logprob: -10.476485252380371
    10. '.stderr' → logprob: -12.101485252380371

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007904515950940549
    2. '.read' → logprob: -7.375790596008301
    3. '.' → logprob: -8.7507905960083
    4. 'read' → logprob: -12.7507905960083
    5. '.readlines' → logprob: -13.2507905960083
    6. ' readline' → logprob: -14.6257905960083
    7. '.Read' → logprob: -15.0007905960083
    8. '.write' → logprob: -17.500789642333984
    9. ' .' → logprob: -17.625789642333984
    10. '```' → logprob: -17.750789642333984

Token 14: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0314851738512516
    2. '().' → logprob: -3.531485080718994
    3. '()\' → logprob: -7.156485080718994
    4. '()
' → logprob: -7.656485080718994
    5. '(' → logprob: -8.656485557556152
    6. '()

' → logprob: -8.906485557556152
    7. '()(' → logprob: -9.781485557556152
    8. ' ()' → logprob: -10.406485557556152
    9. '()<' → logprob: -10.531485557556152
    10. '()[' → logprob: -10.906485557556152

Token 15: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45303085446357727
    2. '()' → logprob: -1.3280308246612549
    3. ')' → logprob: -3.828030824661255
    4. '<|end|>' → logprob: -3.953030824661255
    5. 'def' → logprob: -4.078031063079834
    6. '().' → logprob: -5.078031063079834
    7. ' ' → logprob: -5.328031063079834
    8. 'x' → logprob: -5.453031063079834
    9. '<|end|>' → logprob: -5.828031063079834
    10. '#' → logprob: -6.078031063079834

Token 16: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4867621958255768
    2. ' ' → logprob: -2.236762285232544
    3. ' math' → logprob: -2.236762285232544
    4. ' calculate' → logprob: -2.486762285232544
    5. '_' → logprob: -3.486762285232544
    6. ' add' → logprob: -3.611762285232544
    7. ' square' → logprob: -4.361762046813965
    8. ' sqrt' → logprob: -5.861762046813965
    9. ' factorial' → logprob: -6.486762046813965
    10. ' compute' → logprob: -6.486762046813965

Token 17: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46822255849838257
    2. '_words' → logprob: -1.3432226181030273
    3. '_s' → logprob: -3.8432226181030273
    4. '_occ' → logprob: -4.218222618103027
    5. '_tokens' → logprob: -4.343222618103027
    6. '_v' → logprob: -4.843222618103027
    7. '_items' → logprob: -4.843222618103027
    8. '_elements' → logprob: -4.968222618103027
    9. '_numbers' → logprob: -5.093222618103027
    10. '(' → logprob: -5.718222618103027

Token 18: 'ultip' (ID: 22975)
  Prédit: 'atches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atches' → logprob: -0.8452191352844238
    2. 'atching' → logprob: -1.5952191352844238
    3. 'a' → logprob: -1.7202191352844238
    4. 'oves' → logprob: -3.470219135284424
    5. 'ultip' → logprob: -3.595219135284424
    6. 'atch' → logprob: -3.595219135284424
    7. '(a' → logprob: -4.095219135284424
    8. 'ax' → logprob: -4.095219135284424
    9. 'ost' → logprob: -4.595219135284424
    10. 'an' → logprob: -5.220219135284424

Token 19: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.014566436409950256
    2. 'le' → logprob: -4.389566421508789
    3. 'liers' → logprob: -6.764566421508789
    4. '```' → logprob: -8.264566421508789
    5. 'lies' → logprob: -8.514566421508789
    6. ' les' → logprob: -8.889566421508789
    7. 'Les' → logprob: -9.764566421508789
    8. 'li' → logprob: -10.389566421508789
    9. '``' → logprob: -10.639566421508789
    10. 'ly' → logprob: -10.639566421508789

Token 20: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007623542100191116
    2. '_of' → logprob: -5.382623672485352
    3. '_' → logprob: -6.132623672485352
    4. '_by' → logprob: -9.132623672485352
    5. ' (' → logprob: -9.382623672485352
    6. '(_' → logprob: -9.382623672485352
    7. '("("' → logprob: -9.382623672485352
    8. '_(' → logprob: -9.632623672485352
    9. '```' → logprob: -9.882623672485352
    10. 'of' → logprob: -9.882623672485352

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001831565605243668
    2. ' ,' → logprob: -8.87518310546875
    3. ',n' → logprob: -10.87518310546875
    4. ')' → logprob: -11.62518310546875
    5. ' ' → logprob: -12.12518310546875
    6. '):' → logprob: -12.62518310546875
    7. 's' → logprob: -13.12518310546875
    8. ',num' → logprob: -14.00018310546875
    9. '_,' → logprob: -14.75018310546875
    10. 'of' → logprob: -14.75018310546875

Token 22: ' p' (ID: 275)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.2979884147644043
    2. ' k' → logprob: -1.4229884147644043
    3. ' x' → logprob: -2.1729884147644043
    4. ' m' → logprob: -2.1729884147644043
    5. 'x' → logprob: -2.2979884147644043
    6. 'm' → logprob: -2.4229884147644043
    7. ' d' → logprob: -3.2979884147644043
    8. 'd' → logprob: -3.6729884147644043
    9. ' divisor' → logprob: -6.547988414764404
    10. 'div' → logprob: -6.672988414764404

Token 23: '_list' (ID: 4162)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0037981770001351833
    2. ')' → logprob: -6.003798007965088
    3. '):
' → logprob: -7.128798007965088
    4. ',' → logprob: -8.003798484802246
    5. ' ):' → logprob: -9.378798484802246
    6. 'r' → logprob: -10.378798484802246
    7. '):
' → logprob: -10.878798484802246
    8. '**' → logprob: -12.003798484802246
    9. 'otential' → logprob: -12.378798484802246
    10. ':' → logprob: -12.753798484802246

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006366697605699301
    2. ',' → logprob: -5.131366729736328
    3. ')' → logprob: -7.881366729736328
    4. '):
' → logprob: -10.256366729736328
    5. ' ):' → logprob: -11.631366729736328
    6. ':' → logprob: -12.256366729736328
    7. '[]):' → logprob: -12.256366729736328
    8. '):
' → logprob: -14.131366729736328
    9. '),' → logprob: -14.256366729736328
    10. '[' → logprob: -14.256366729736328

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07088926434516907
    2. ':' → logprob: -2.6958892345428467
    3. ':
' → logprob: -8.570889472961426
    4. '       ' → logprob: -8.820889472961426
    5. '    
' → logprob: -9.695889472961426
    6. ' ' → logprob: -9.820889472961426
    7. '    ' → logprob: -9.820889472961426
    8. ' :' → logprob: -9.945889472961426
    9. '):' → logprob: -9.945889472961426
    10. '(' → logprob: -10.195889472961426

Token 26: ' #' (ID: 1069)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.14620396494865417
    2. '   ' → logprob: -2.5212039947509766
    3. 'count' → logprob: -3.1462039947509766
    4. ' result' → logprob: -5.896203994750977
    5. ' cnt' → logprob: -5.896203994750977
    6. ' total' → logprob: -6.396203994750977
    7. ' return' → logprob: -6.521203994750977
    8. ' 
' → logprob: -6.771203994750977
    9. '    ' → logprob: -6.896203994750977
    10. '    
' → logprob: -7.646203994750977

Token 27: ' Inclusion' (ID: 151943)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.09907595068216324
    2. 'count' → logprob: -2.84907603263855
    3. ' result' → logprob: -4.099075794219971
    4. '   ' → logprob: -4.849075794219971
    5. ' return' → logprob: -6.099075794219971
    6. ' total' → logprob: -6.099075794219971
    7. ' cnt' → logprob: -6.224075794219971
    8. ' multiples' → logprob: -6.224075794219971
    9. 'result' → logprob: -6.724075794219971
    10. ' res' → logprob: -7.599075794219971

Token 28: '-' (ID: 12)
  Prédit: '-ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ex' → logprob: -0.47428223490715027
    2. '-' → logprob: -0.9742822647094727
    3. '–' → logprob: -8.724282264709473
    4. ' -' → logprob: -10.349282264709473
    5. '−' → logprob: -12.099282264709473
    6. 'ex' → logprob: -13.474282264709473
    7. '_ex' → logprob: -13.724282264709473
    8. '...' → logprob: -15.224282264709473
    9. '-)' → logprob: -15.349282264709473
    10. '—' → logprob: -15.474282264709473

Token 29: 'Ex' (ID: 992)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0020220205187797546
    2. '-ex' → logprob: -6.252021789550781
    3. '_ex' → logprob: -9.877021789550781
    4. 'exclude' → logprob: -11.252021789550781
    5. '/ex' → logprob: -11.502021789550781
    6. 'Ex' → logprob: -11.752021789550781
    7. 'exclusive' → logprob: -11.877021789550781
    8. ' exclusion' → logprob: -13.127021789550781
    9. 'excluded' → logprob: -13.752021789550781
    10. 'exc' → logprob: -14.877021789550781

Token 30: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.006369189824908972
    2. 'c' → logprob: -5.631369113922119
    3. 'cl' → logprob: -6.131369113922119
    4. 'x' → logprob: -8.381369590759277
    5. 'clus' → logprob: -8.756369590759277
    6. 'clusions' → logprob: -9.256369590759277
    7. 'clude' → logprob: -10.256369590759277
    8. 'def' → logprob: -11.006369590759277
    9. 'cluded' → logprob: -11.631369590759277
    10. 'cls' → logprob: -11.881369590759277

Token 31: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10075122117996216
    2. '<|end|>' → logprob: -2.6007511615753174
    3. '<|end|>' → logprob: -4.6007513999938965
    4. '    ' → logprob: -6.2257513999938965
    5. '_' → logprob: -6.3507513999938965
    6. '  ' → logprob: -6.6007513999938965
    7. ')' → logprob: -7.3507513999938965
    8. '   ' → logprob: -7.3507513999938965
    9. ' principle' → logprob: -7.4757513999938965
    10. ' _' → logprob: -7.6007513999938965

Token 32: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.17385582625865936
    2. 'count' → logprob: -2.173855781555176
    3. ' calculate' → logprob: -3.298855781555176
    4. ' find' → logprob: -5.673855781555176
    5. 'calculate' → logprob: -5.798855781555176
    6. ' compute' → logprob: -6.673855781555176
    7. ' ' → logprob: -7.173855781555176
    8. ' get' → logprob: -9.423855781555176
    9. ' sum' → logprob: -9.548855781555176
    10. 'sum' → logprob: -9.798855781555176

Token 33: ' numbers' (ID: 8663)
  Prédit: ' multiples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -0.786772608757019
    2. ' the' → logprob: -1.286772608757019
    3. ' all' → logprob: -2.5367727279663086
    4. '<|end|>' → logprob: -3.0367727279663086
    5. ' ' → logprob: -3.2867727279663086
    6. ' how' → logprob: -3.6617727279663086
    7. 'multip' → logprob: -4.036772727966309
    8. ' numbers' → logprob: -4.286772727966309
    9. 'the' → logprob: -4.661772727966309
    10. ' divisible' → logprob: -5.161772727966309

Token 34: ' from' (ID: 591)
  Prédit: ' divisible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.3730715811252594
    2. ' that' → logprob: -1.623071551322937
    3. ' up' → logprob: -3.3730716705322266
    4. 'div' → logprob: -3.8730716705322266
    5. ' in' → logprob: -3.8730716705322266
    6. ' between' → logprob: -4.123071670532227
    7. ' ' → logprob: -5.123071670532227
    8. 'that' → logprob: -5.998071670532227
    9. ' <=' → logprob: -5.998071670532227
    10. '   ' → logprob: -6.248071670532227

Token 35: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11304271221160889
    2. ' ' → logprob: -2.2380428314208984
    3. '0' → logprob: -9.238042831420898
    4. ' n' → logprob: -10.613042831420898
    5. '   ' → logprob: -10.863042831420898
    6. ' p' → logprob: -10.988042831420898
    7. 'n' → logprob: -10.988042831420898
    8. '    ' → logprob: -11.363042831420898
    9. '```' → logprob: -11.488042831420898
    10. '2' → logprob: -12.113042831420898

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002016667276620865
    2. ' ' → logprob: -6.377016544342041
    3. '0' → logprob: -8.6270170211792
    4. '```' → logprob: -10.3770170211792
    5. '   ' → logprob: -10.5020170211792
    6. '`' → logprob: -11.0020170211792
    7. '2' → logprob: -11.3770170211792
    8. 'n' → logprob: -11.5645170211792
    9. '[' → logprob: -11.6270170211792
    10. 'def' → logprob: -13.2520170211792

Token 37: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10141613334417343
    2. 'to' → logprob: -2.3514161109924316
    3. ' up' → logprob: -7.601416110992432
    4. ' through' → logprob: -7.601416110992432
    5. '   ' → logprob: -9.47641658782959
    6. ' ' → logprob: -10.10141658782959
    7. '	to' → logprob: -10.97641658782959
    8. 'through' → logprob: -11.10141658782959
    9. '    ' → logprob: -11.22641658782959
    10. '  ' → logprob: -11.35141658782959

Token 38: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16022706031799316
    2. 'n' → logprob: -1.9102270603179932
    3. ' ' → logprob: -13.410226821899414
    4. '```' → logprob: -14.285226821899414
    5. ' `' → logprob: -15.535226821899414
    6. '	n' → logprob: -15.785226821899414
    7. '`' → logprob: -15.910226821899414
    8. ' \(' → logprob: -16.285226821899414
    9. '_n' → logprob: -16.785226821899414
    10. '    ' → logprob: -17.160226821899414

Token 39: ' divisible' (ID: 167813)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.11483041197061539
    2. ' ' → logprob: -2.989830493927002
    3. ' divisible' → logprob: -2.989830493927002
    4. 'that' → logprob: -5.614830493927002
    5. ',' → logprob: -6.614830493927002
    6. '   ' → logprob: -7.364830493927002
    7. ' ,' → logprob: -7.364830493927002
    8. '  ' → logprob: -8.614830017089844
    9. ' inclusive' → logprob: -8.739830017089844
    10. ' with' → logprob: -8.739830017089844

Token 40: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.6326728463172913
    2. ' by' → logprob: -0.7576728463172913
    3. '   ' → logprob: -9.882673263549805
    4. ' ' → logprob: -11.882673263549805
    5. '```' → logprob: -11.882673263549805
    6. '    ' → logprob: -13.132673263549805
    7. '  ' → logprob: -13.507673263549805
    8. '_by' → logprob: -13.757673263549805
    9. '<|end|>' → logprob: -14.132673263549805
    10. '1' → logprob: -14.257673263549805

Token 41: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.46754467487335205
    2. ' at' → logprob: -1.342544674873352
    3. 'any' → logprob: -2.5925445556640625
    4. ' p' → logprob: -3.5925445556640625
    5. 'p' → logprob: -5.8425445556640625
    6. 'at' → logprob: -5.9675445556640625
    7. ' ' → logprob: -6.4675445556640625
    8. ' the' → logprob: -7.5925445556640625
    9. ' elements' → logprob: -7.8425445556640625
    10. '1' → logprob: -8.342544555664062

Token 42: ' p' (ID: 275)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.28912511467933655
    2. ' p' → logprob: -1.5391250848770142
    3. ' ' → logprob: -3.9141252040863037
    4. 'p' → logprob: -4.914124965667725
    5. 'of' → logprob: -5.289124965667725
    6. '(p' → logprob: -6.414124965667725
    7. '    ' → logprob: -7.539124965667725
    8. '   ' → logprob: -8.414125442504883
    9. ' multiple' → logprob: -8.414125442504883
    10. '  ' → logprob: -8.539125442504883

Token 43: '_i' (ID: 10853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.121345154941082
    2. '_list' → logprob: -2.746345043182373
    3. '   ' → logprob: -3.496345043182373
    4. ' s' → logprob: -4.871345043182373
    5. '_s' → logprob: -5.246345043182373
    6. ':' → logprob: -6.371345043182373
    7. ' ' → logprob: -6.871345043182373
    8. '_' → logprob: -7.746345043182373
    9. '_count' → logprob: -8.121345520019531
    10. ' =' → logprob: -8.121345520019531

Token 44: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21084283292293549
    2. ':' → logprob: -1.8358428478240967
    3. ' :' → logprob: -4.335842609405518
    4. ' ' → logprob: -5.335842609405518
    5. 'def' → logprob: -5.335842609405518
    6. '):' → logprob: -6.085842609405518
    7. '  ' → logprob: -6.585842609405518
    8. '<|end|>' → logprob: -6.960842609405518
    9. ',' → logprob: -7.210842609405518
    10. ')' → logprob: -7.710842609405518

Token 45: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.038071442395448685
    2. 'p' → logprob: -3.288071393966675
    3. ' ' → logprob: -11.663071632385254
    4. ' the' → logprob: -11.913071632385254
    5. '   ' → logprob: -12.538071632385254
    6. 'the' → logprob: -13.288071632385254
    7. ')' → logprob: -13.288071632385254
    8. '```' → logprob: -13.538071632385254
    9. ' `' → logprob: -13.788071632385254
    10. '    ' → logprob: -14.288071632385254

Token 46: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -10.37503719329834
    3. ' _' → logprob: -13.12503719329834
    4. 'list' → logprob: -13.75003719329834
    5. 's' → logprob: -14.50003719329834
    6. '_lst' → logprob: -14.50003719329834
    7. '_set' → logprob: -15.00003719329834
    8. '_l' → logprob: -15.12503719329834
    9. '_s' → logprob: -15.37503719329834
    10. '_List' → logprob: -15.62503719329834

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02151985466480255
    2. ':' → logprob: -3.896519899368286
    3. 'def' → logprob: -8.646519660949707
    4. ' :' → logprob: -8.646519660949707
    5. '):' → logprob: -9.146519660949707
    6. ')' → logprob: -9.146519660949707
    7. '<|end|>' → logprob: -9.146519660949707
    8. ' ' → logprob: -9.896519660949707
    9. ':
' → logprob: -10.271519660949707
    10. ',' → logprob: -10.521519660949707

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21140630543231964
    2. ':' → logprob: -1.7114063501358032
    3. ' :' → logprob: -5.461406230926514
    4. ' ' → logprob: -6.586406230926514
    5. ',' → logprob: -7.336406230926514
    6. ':
' → logprob: -7.461406230926514
    7. '_' → logprob: -7.836406230926514
    8. '<|end|>' → logprob: -7.836406230926514
    9. '    
' → logprob: -8.211406707763672
    10. ')' → logprob: -8.211406707763672

Token 49: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06321319192647934
    2. '    ' → logprob: -3.5632131099700928
    3. ' ' → logprob: -4.188213348388672
    4. ' from' → logprob: -5.188213348388672
    5. ' 
' → logprob: -5.688213348388672
    6. '    
' → logprob: -6.688213348388672
    7. ' import' → logprob: -6.813213348388672
    8. 'from' → logprob: -6.938213348388672
    9. ' result' → logprob: -7.438213348388672
    10. ' n' → logprob: -7.688213348388672

Token 50: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22980648279190063
    2. ' ' → logprob: -2.354806423187256
    3. '    ' → logprob: -2.979806423187256
    4. ' 
' → logprob: -3.604806423187256
    5. '    
' → logprob: -4.604806423187256
    6. ' from' → logprob: -5.229806423187256
    7. 'from' → logprob: -5.604806423187256
    8. '     
' → logprob: -5.729806423187256
    9. 'import' → logprob: -6.604806423187256
    10. ' import' → logprob: -6.729806423187256

Token 51: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.9821497797966003
    2. '_len' → logprob: -1.4821498394012451
    3. 'from' → logprob: -1.9821498394012451
    4. '   ' → logprob: -2.357149839401245
    5. ' from' → logprob: -2.857149839401245
    6. '_length' → logprob: -3.732149839401245
    7. 'r' → logprob: -4.232149600982666
    8. 'ython' → logprob: -4.482149600982666
    9. ' ' → logprob: -4.857149600982666
    10. 'ro' → logprob: -4.982149600982666

Token 52: ' elements' (ID: 8632)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37002044916152954
    2. ' is' → logprob: -2.4950203895568848
    3. '=' → logprob: -3.1200203895568848
    4. ')' → logprob: -3.2450203895568848
    5. 'from' → logprob: -3.4950203895568848
    6. ' from' → logprob: -3.7450203895568848
    7. ' has' → logprob: -4.120020389556885
    8. '=[]' → logprob: -4.495020389556885
    9. ' contains' → logprob: -4.745020389556885
    10. ':' → logprob: -5.120020389556885

Token 53: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07585001736879349
    2. 'from' → logprob: -3.950850009918213
    3. 'import' → logprob: -4.575850009918213
    4. '=' → logprob: -4.950850009918213
    5. '<|end|>' → logprob: -4.950850009918213
    6. '   ' → logprob: -5.075850009918213
    7. ' from' → logprob: -5.325850009918213
    8. '_len' → logprob: -5.950850009918213
    9. ')' → logprob: -6.075850009918213
    10. '<|end|>' → logprob: -6.325850009918213

Token 54: ' guaranteed' (ID: 21862)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.34563079476356506
    2. ' prime' → logprob: -1.7206307649612427
    3. ' distinct' → logprob: -3.4706308841705322
    4. ' unique' → logprob: -3.7206308841705322
    5. 'pr' → logprob: -4.095630645751953
    6. 'prime' → logprob: -4.845630645751953
    7. ' pair' → logprob: -4.970630645751953
    8. ' ' → logprob: -5.220630645751953
    9. ' integers' → logprob: -5.345630645751953
    10. ' all' → logprob: -5.595630645751953

Token 55: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.018610255792737007
    2. 'to' → logprob: -4.01861047744751
    3. ' cop' → logprob: -8.768610000610352
    4. ' unique' → logprob: -9.018610000610352
    5. '>' → logprob: -9.893610000610352
    6. 'unique' → logprob: -10.768610000610352
    7. 'def' → logprob: -11.018610000610352
    8. ' prime' → logprob: -11.143610000610352
    9. ' not' → logprob: -11.268610000610352
    10. 'cop' → logprob: -11.268610000610352

Token 56: ' divide' (ID: 38484)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.1128569096326828
    2. ' be' → logprob: -2.237856864929199
    3. 'divide' → logprob: -11.3628568649292
    4. '>' → logprob: -11.7378568649292
    5. ' ' → logprob: -12.6128568649292
    6. ' divide' → logprob: -12.6128568649292
    7. '	be' → logprob: -12.8628568649292
    8. 'div' → logprob: -13.6128568649292
    9. '2' → logprob: -13.6128568649292
    10. 'have' → logprob: -14.6128568649292

Token 57: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3287365138530731
    2. 'n' → logprob: -1.5787365436553955
    3. '   ' → logprob: -3.9537365436553955
    4. ' ' → logprob: -4.703736305236816
    5. ' p' → logprob: -4.703736305236816
    6. '1' → logprob: -5.078736305236816
    7. '```' → logprob: -5.203736305236816
    8. ' all' → logprob: -5.328736305236816
    9. 'p' → logprob: -5.578736305236816
    10. ' the' → logprob: -5.703736305236816

Token 58: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35837653279304504
    2. '<|end|>' → logprob: -1.8583765029907227
    3. ':' → logprob: -2.3583765029907227
    4. ' ' → logprob: -4.233376502990723
    5. '<|end|>' → logprob: -4.608376502990723
    6. '
' → logprob: -5.108376502990723
    7. '    
' → logprob: -5.608376502990723
    8. ',' → logprob: -5.733376502990723
    9. ')' → logprob: -6.233376502990723
    10. '  ' → logprob: -6.483376502990723

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012814520858228207
    2. ':' → logprob: -5.012814521789551
    3. 'def' → logprob: -6.512814521789551
    4. '<|end|>' → logprob: -6.637814521789551
    5. '```' → logprob: -7.137814521789551
    6. '    
' → logprob: -7.637814521789551
    7. 'import' → logprob: -8.13781452178955
    8. ',' → logprob: -8.63781452178955
    9. '
' → logprob: -8.63781452178955
    10. ' ' → logprob: -8.63781452178955

Token 60: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01991034485399723
    2. ' 
' → logprob: -5.0199103355407715
    3. '    ' → logprob: -5.2699103355407715
    4. '    
' → logprob: -6.0199103355407715
    5. ' ' → logprob: -6.1449103355407715
    6. '   
' → logprob: -7.7699103355407715
    7. '     
' → logprob: -7.8949103355407715
    8. ' result' → logprob: -8.01991081237793
    9. '\' → logprob: -8.14491081237793
    10. '  ' → logprob: -8.64491081237793

Token 61: ' =' (ID: 314)
  Prédit: 'ultip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultip' → logprob: -0.2975560128688812
    2. ' =' → logprob: -2.172555923461914
    3. 'ult' → logprob: -3.172555923461914
    4. '=' → logprob: -3.172555923461914
    5. '   ' → logprob: -3.672555923461914
    6. '=len' → logprob: -3.797555923461914
    7. 'def' → logprob: -5.047555923461914
    8. 'from' → logprob: -6.672555923461914
    9. 'len' → logprob: -6.922555923461914
    10. ' ' → logprob: -7.047555923461914

Token 62: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7549364566802979
    2. ' len' → logprob: -0.8799364566802979
    3. ' ' → logprob: -2.504936456680298
    4. '1' → logprob: -3.629936456680298
    5. '0' → logprob: -5.004936218261719
    6. '(len' → logprob: -9.129936218261719
    7. '2' → logprob: -10.629936218261719
    8. '[len' → logprob: -11.004936218261719
    9. ' math' → logprob: -11.379936218261719
    10. '	len' → logprob: -11.442436218261719

Token 63: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.020567698404192924
    2. '(' → logprob: -3.8955676555633545
    3. ' (' → logprob: -10.770567893981934
    4. 'p' → logprob: -13.020567893981934
    5. '(
' → logprob: -13.645567893981934
    6. ' p' → logprob: -14.395567893981934
    7. '(m' → logprob: -15.145567893981934
    8. '(n' → logprob: -15.395567893981934
    9. '(s' → logprob: -16.895566940307617
    10. '(

' → logprob: -16.895566940307617

Token 64: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007468560361303389
    2. 'p' → logprob: -7.875746726989746
    3. '_p' → logprob: -8.125746726989746
    4. '(p' → logprob: -9.750746726989746
    5. 'list' → logprob: -12.875746726989746
    6. 's' → logprob: -12.875746726989746
    7. ')' → logprob: -13.250746726989746
    8. ' p' → logprob: -13.375746726989746
    9. '_lst' → logprob: -14.125746726989746
    10. '_l' → logprob: -14.250746726989746

Token 65: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008735123090445995
    2. ' )' → logprob: -4.758735179901123
    3. ')
' → logprob: -9.258734703063965
    4. '   ' → logprob: -10.883734703063965
    5. ' )
' → logprob: -12.383734703063965
    6. ' ' → logprob: -14.508734703063965
    7. 'def' → logprob: -15.383734703063965
    8. ')
' → logprob: -15.508734703063965
    9. ')

' → logprob: -15.758734703063965
    10. ')p' → logprob: -15.883734703063965

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004787645768374205
    2. ' result' → logprob: -6.504787445068359
    3. ' ' → logprob: -7.254787445068359
    4. '
' → logprob: -7.254787445068359
    5. '    
' → logprob: -7.504787445068359
    6. ' from' → logprob: -8.12978744506836
    7. ' 
' → logprob: -8.37978744506836
    8. '  ' → logprob: -9.25478744506836
    9. ' ans' → logprob: -9.25478744506836
    10. ' count' → logprob: -9.25478744506836

Token 67: ' res' (ID: 694)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5358231663703918
    2. 'count' → logprob: -1.785823106765747
    3. ' res' → logprob: -2.535823106765747
    4. ' ans' → logprob: -2.910823106765747
    5. ' result' → logprob: -3.035823106765747
    6. ' total' → logprob: -3.535823106765747
    7. 'result' → logprob: -4.910823345184326
    8. ' cnt' → logprob: -4.910823345184326
    9. '   ' → logprob: -5.285823345184326
    10. 'ans' → logprob: -5.535823345184326

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08901645988225937
    2. '=' → logprob: -2.4640164375305176
    3. ' ' → logprob: -10.089016914367676
    4. ' +=' → logprob: -10.589016914367676
    5. '   ' → logprob: -12.089016914367676
    6. '  ' → logprob: -13.839016914367676
    7. 'ult' → logprob: -14.214016914367676
    8. ',' → logprob: -14.339016914367676
    9. ' |=' → logprob: -14.589016914367676
    10. '+=' → logprob: -15.214016914367676

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31350812315940857
    2. '0' → logprob: -1.313508152961731
    3. ' n' → logprob: -8.563508033752441
    4. 'n' → logprob: -10.063508033752441
    5. '   ' → logprob: -12.188508033752441
    6. ' ' → logprob: -13.126008033752441
    7. '  ' → logprob: -13.751008033752441
    8. '1' → logprob: -13.938508033752441
    9. ' [' → logprob: -14.188508033752441
    10. '    ' → logprob: -15.313508033752441

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059463405050337315
    2. ' ' → logprob: -5.130946159362793
    3. 'n' → logprob: -11.255946159362793
    4. ' n' → logprob: -12.755946159362793
    5. '1' → logprob: -14.193446159362793
    6. ' ' → logprob: -15.380946159362793
    7. '   ' → logprob: -16.00594711303711
    8. 'math' → logprob: -16.25594711303711
    9. '  ' → logprob: -16.31844711303711
    10. '```' → logprob: -16.44344711303711

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47337889671325684
    2. '<|end|>' → logprob: -1.5983788967132568
    3. '
' → logprob: -1.9733788967132568
    4. ' for' → logprob: -4.473379135131836
    5. ' ' → logprob: -4.723379135131836
    6. ',' → logprob: -5.723379135131836
    7. '    
' → logprob: -5.723379135131836
    8. '<|end|>' → logprob: -5.973379135131836
    9. ' 
' → logprob: -6.973379135131836
    10. '  ' → logprob: -6.973379135131836

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007904515950940549
    2. ' for' → logprob: -7.500790596008301
    3. ' ' → logprob: -9.8757905960083
    4. '<|end|>' → logprob: -9.8757905960083
    5. '    
' → logprob: -10.2507905960083
    6. '
' → logprob: -10.3757905960083
    7. ',' → logprob: -11.0007905960083
    8. '  ' → logprob: -12.1257905960083
    9. '	for' → logprob: -12.1257905960083
    10. '\n' → logprob: -12.2507905960083

Token 73: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14055174589157104
    2. 'for' → logprob: -2.390551805496216
    3. '   ' → logprob: -4.015551567077637
    4. ' from' → logprob: -4.140551567077637
    5. ' ' → logprob: -5.890551567077637
    6. 'from' → logprob: -6.015551567077637
    7. ' f' → logprob: -8.765551567077637
    8. '1' → logprob: -8.765551567077637
    9. 'f' → logprob: -10.765551567077637
    10. ' i' → logprob: -11.265551567077637

Token 74: ' There' (ID: 3274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4368238151073456
    2. ' from' → logprob: -1.811823844909668
    3. 'for' → logprob: -2.186823844909668
    4. 'from' → logprob: -2.561823844909668
    5. '   ' → logprob: -7.186823844909668
    6. ' ' → logprob: -8.561823844909668
    7. ' range' → logprob: -10.061823844909668
    8. '1' → logprob: -10.061823844909668
    9. 'import' → logprob: -10.561823844909668
    10. ' f' → logprob: -10.936823844909668

Token 75: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5702380537986755
    2. ' is' → logprob: -1.8202381134033203
    3. 'for' → logprob: -2.1952381134033203
    4. ' for' → logprob: -2.3202381134033203
    5. '   ' → logprob: -3.0702381134033203
    6. 'from' → logprob: -5.44523811340332
    7. ' should' → logprob: -5.82023811340332
    8. ' was' → logprob: -6.19523811340332
    9. ' must' → logprob: -6.82023811340332
    10. ' from' → logprob: -6.82023811340332

Token 76: ' at' (ID: 540)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07039584964513779
    2. '1' → logprob: -2.9453959465026855
    3. ' (' → logprob: -4.4453959465026855
    4. '(' → logprob: -5.6953959465026855
    5. ' range' → logprob: -9.195395469665527
    6. '```' → logprob: -9.695395469665527
    7. '   ' → logprob: -10.070395469665527
    8. 'range' → logprob: -10.820395469665527
    9. '2' → logprob: -11.445395469665527
    10. ' a' → logprob: -11.945395469665527

Token 77: ' most' (ID: 1645)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.25400349497795105
    2. ' least' → logprob: -1.5040035247802734
    3. 'most' → logprob: -6.379003524780273
    4. ' most' → logprob: -8.004003524780273
    5. '1' → logprob: -11.004003524780273
    6. '_le' → logprob: -11.379003524780273
    7. 'Least' → logprob: -12.254003524780273
    8. 'le' → logprob: -12.629003524780273
    9. ' ' → logprob: -13.379003524780273
    10. '2' → logprob: -13.879003524780273

Token 78: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5098892450332642
    2. '7' → logprob: -1.7598892450332642
    3. '1' → logprob: -2.6348891258239746
    4. '8' → logprob: -2.8848891258239746
    5. '20' → logprob: -3.8848891258239746
    6. ' (' → logprob: -4.009889125823975
    7. '(' → logprob: -4.134889125823975
    8. '16' → logprob: -4.259889125823975
    9. ' m' → logprob: -4.509889125823975
    10. 'm' → logprob: -4.884889125823975

Token 79: '20' (ID: 455)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1999177932739258
    2. '20' → logprob: -1.1999177932739258
    3. '10' → logprob: -1.6999177932739258
    4. '15' → logprob: -2.449917793273926
    5. '16' → logprob: -3.324917793273926
    6. '7' → logprob: -3.449917793273926
    7. '8' → logprob: -3.824917793273926
    8. '(' → logprob: -4.699917793273926
    9. '5' → logprob: -4.949917793273926
    10. ' ' → logprob: -5.199917793273926

Token 80: ' p' (ID: 275)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.004057621117681265
    2. 's' → logprob: -6.87905740737915
    3. '_' → logprob: -7.12905740737915
    4. '   ' → logprob: -7.25405740737915
    5. '_i' → logprob: -7.75405740737915
    6. '_lists' → logprob: -7.75405740737915
    7. ' ' → logprob: -9.629057884216309
    8. 'ython' → logprob: -9.754057884216309
    9. '_elements' → logprob: -9.754057884216309
    10. '_s' → logprob: -10.004057884216309

Token 82: '’s' (ID: 802)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4081350266933441
    2. 'for' → logprob: -1.5331350564956665
    3. ' ' → logprob: -2.908134937286377
    4. '<|end|>' → logprob: -3.283134937286377
    5. ',' → logprob: -4.533134937286377
    6. ')' → logprob: -5.408134937286377
    7. '<|end|>' → logprob: -5.658134937286377
    8. '   ' → logprob: -5.783134937286377
    9. '.' → logprob: -7.158134937286377
    10. '    ' → logprob: -7.533134937286377

Token 83: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5237234234809875
    2. ' for' → logprob: -1.7737233638763428
    3. ' ' → logprob: -1.8987233638763428
    4. '<|end|>' → logprob: -2.7737233638763428
    5. 'for' → logprob: -4.398723602294922
    6. '<|end|>' → logprob: -5.148723602294922
    7. ',' → logprob: -5.773723602294922
    8. '  ' → logprob: -6.648723602294922
    9. ')' → logprob: -7.023723602294922
    10. '    ' → logprob: -7.773723602294922

Token 84: ' so' (ID: 813)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6667016744613647
    2. '   ' → logprob: -0.9167016744613647
    3. ' for' → logprob: -2.9167017936706543
    4. ' so' → logprob: -4.416701793670654
    5. '    ' → logprob: -4.541701793670654
    6. ' i' → logprob: -5.541701793670654
    7. '  ' → logprob: -6.166701793670654
    8. 'for' → logprob: -6.416701793670654
    9. '1' → logprob: -7.916701793670654
    10. ' ,' → logprob: -8.416701316833496

Token 85: ' subsets' (ID: 165377)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03272050619125366
    2. 'for' → logprob: -3.7827205657958984
    3. ' from' → logprob: -4.782720565795898
    4. 'from' → logprob: -7.032720565795898
    5. '   ' → logprob: -9.532720565795898
    6. ' range' → logprob: -9.532720565795898
    7. '    ' → logprob: -12.407720565795898
    8. ' in' → logprob: -12.532720565795898
    9. 'import' → logprob: -12.532720565795898
    10. ' ' → logprob: -12.532720565795898

Token 86: ' up' (ID: 869)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4461393356323242
    2. ' of' → logprob: -2.571139335632324
    3. '=' → logprob: -2.821139335632324
    4. ' can' → logprob: -2.946139335632324
    5. '<|end|>' → logprob: -3.446139335632324
    6. ' are' → logprob: -3.571139335632324
    7. '<|end|>' → logprob: -4.321139335632324
    8. ',' → logprob: -4.446139335632324
    9. ' ' → logprob: -4.571139335632324
    10. '   ' → logprob: -4.696139335632324

Token 87: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00046928023220971227
    2. 'o' → logprob: -7.875469207763672
    3. ' to' → logprob: -9.625469207763672
    4. '1' → logprob: -11.875469207763672
    5. '_to' → logprob: -12.875469207763672
    6. '```' → logprob: -12.875469207763672
    7. 'To' → logprob: -13.250469207763672
    8. 'pto' → logprob: -13.500469207763672
    9. '0' → logprob: -13.625469207763672
    10. 'ntil' → logprob: -13.875469207763672

Token 88: ' size' (ID: 2349)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0519379377365112
    2. '(' → logprob: -1.3019379377365112
    3. ' (' → logprob: -1.5519379377365112
    4. 'm' → logprob: -2.801938056945801
    5. ' ' → logprob: -2.926938056945801
    6. ' m' → logprob: -3.051938056945801
    7. '20' → logprob: -5.426938056945801
    8. ' range' → logprob: -7.676938056945801
    9. 'range' → logprob: -9.4269380569458
    10. ' size' → logprob: -9.5519380569458

Token 89: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12012045085430145
    2. '20' → logprob: -2.7451205253601074
    3. '1' → logprob: -3.2451205253601074
    4. ' m' → logprob: -4.870120525360107
    5. 'm' → logprob: -6.745120525360107
    6. ' =' → logprob: -7.870120525360107
    7. '2' → logprob: -8.99512004852295
    8. '[' → logprob: -9.12012004852295
    9. '=' → logprob: -9.24512004852295
    10. 's' → logprob: -9.62012004852295

Token 90: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.5782973766326904
    2. 'm' → logprob: -0.9532973766326904
    3. ' ' → logprob: -3.7032973766326904
    4. ' m' → logprob: -4.0782976150512695
    5. '1' → logprob: -4.4532976150512695
    6. '21' → logprob: -7.9532976150512695
    7. '2' → logprob: -10.20329761505127
    8. '=' → logprob: -11.45329761505127
    9. '```' → logprob: -11.57829761505127
    10. '19' → logprob: -11.57829761505127

Token 91: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10215290635824203
    2. ' ' → logprob: -2.9771528244018555
    3. ' for' → logprob: -3.8521528244018555
    4. '<|end|>' → logprob: -4.2271528244018555
    5. 'for' → logprob: -6.2271528244018555
    6. '<|end|>' → logprob: -6.4771528244018555
    7. 'from' → logprob: -6.7271528244018555
    8. ',' → logprob: -6.9771528244018555
    9. ')' → logprob: -6.9771528244018555
    10. '  ' → logprob: -7.1021528244018555

Token 92: '2' (ID: 17)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5133473873138428
    2. '):' → logprob: -1.6383473873138428
    3. ' )' → logprob: -2.1383473873138428
    4. '1' → logprob: -3.0133473873138428
    5. ' ):' → logprob: -4.013347625732422
    6. '+' → logprob: -4.763347625732422
    7. ' ' → logprob: -5.763347625732422
    8. ' for' → logprob: -5.888347625732422
    9. ' +' → logprob: -6.013347625732422
    10. 'for' → logprob: -6.513347625732422

Token 93: '^' (ID: 61)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5830960869789124
    2. ' **' → logprob: -0.8330960869789124
    3. ' **)' → logprob: -5.458096027374268
    4. ')' → logprob: -6.583096027374268
    5. '**)' → logprob: -7.458096027374268
    6. '^' → logprob: -7.583096027374268
    7. ' )' → logprob: -8.458096504211426
    8. '0' → logprob: -10.208096504211426
    9. '*' → logprob: -10.208096504211426
    10. ' ' → logprob: -10.333096504211426

Token 94: '20' (ID: 455)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00018577903392724693
    2. '20' → logprob: -8.8751859664917
    3. ' m' → logprob: -10.0001859664917
    4. '```' → logprob: -15.2501859664917
    5. ')m' → logprob: -16.000185012817383
    6. ' ' → logprob: -16.750185012817383
    7. '<m' → logprob: -16.750185012817383
    8. '	m' → logprob: -17.125185012817383
    9. 'м' → logprob: -17.250185012817383
    10. 'n' → logprob: -17.625185012817383

Token 95: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14391747117042542
    2. ' )' → logprob: -2.0189175605773926
    3. ' ' → logprob: -7.893917560577393
    4. '+' → logprob: -8.018917083740234
    5. ' +' → logprob: -8.893917083740234
    6. ' -' → logprob: -9.143917083740234
    7. '):' → logprob: -9.393917083740234
    8. '`)' → logprob: -10.518917083740234
    9. '):
' → logprob: -10.643917083740234
    10. '**' → logprob: -10.768917083740234

Token 96: '1' (ID: 16)
  Prédit: '104'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '104' → logprob: -0.0012708279537037015
    2. ' ' → logprob: -6.751270771026611
    3. '1' → logprob: -9.37627124786377
    4. '105' → logprob: -12.00127124786377
    5. '102' → logprob: -12.25127124786377
    6. '107' → logprob: -13.62627124786377
    7. '106' → logprob: -13.62627124786377
    8. ' approximately' → logprob: -14.37627124786377
    9. '   ' → logprob: -14.75127124786377
    10. '109' → logprob: -15.00127124786377

Token 97: ',' (ID: 11)
  Prédit: '048'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '048' → logprob: -0.019481485709547997
    2. '046' → logprob: -5.019481658935547
    3. ')' → logprob: -5.269481658935547
    4. '<<' → logprob: -5.894481658935547
    5. '049' → logprob: -6.769481658935547
    6. '024' → logprob: -6.894481658935547
    7. '044' → logprob: -7.019481658935547
    8. '<' → logprob: -7.894481658935547
    9. '0' → logprob: -8.644481658935547
    10. ' ' → logprob: -8.644481658935547

Token 98: '048' (ID: 45404)
  Prédit: '048'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '048' → logprob: -0.00026169343618676066
    2. '000' → logprob: -8.375261306762695
    3. ')' → logprob: -11.375261306762695
    4. '   ' → logprob: -12.125261306762695
    5. '046' → logprob: -12.250261306762695
    6. '047' → logprob: -13.000261306762695
    7. '049' → logprob: -13.250261306762695
    8. '0' → logprob: -14.250261306762695
    9. '```' → logprob: -14.375261306762695
    10. '48' → logprob: -14.875261306762695

Token 99: ',' (ID: 11)
  Prédit: '576'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '576' → logprob: -0.0003687053394969553
    2. ',' → logprob: -8.00036907196045
    3. '6' → logprob: -11.87536907196045
    4. '575' → logprob: -12.12536907196045
    5. ')' → logprob: -12.62536907196045
    6. '56' → logprob: -12.62536907196045
    7. '577' → logprob: -12.87536907196045
    8. '57' → logprob: -13.25036907196045
    9. '5' → logprob: -13.25036907196045
    10. '`' → logprob: -13.87536907196045

Token 100: '576' (ID: 39642)
  Prédit: '576'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '576' → logprob: -6.704273118884885e-07
    2. '575' → logprob: -15.125000953674316
    3. '000' → logprob: -16.375
    4. '```' → logprob: -16.5
    5. '`' → logprob: -16.625
    6. '   ' → logprob: -17.0
    7. '5' → logprob: -17.375
    8. ' ' → logprob: -17.5
    9. '``' → logprob: -17.625
    10. '6' → logprob: -18.0

Token 101: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03878830745816231
    2. ' )' → logprob: -3.413788318634033
    3. '):' → logprob: -5.663788318634033
    4. '   ' → logprob: -6.788788318634033
    5. ' ' → logprob: -8.538787841796875
    6. ' for' → logprob: -9.288787841796875
    7. '):
' → logprob: -9.663787841796875
    8. ' ):' → logprob: -10.038787841796875
    9. ')
' → logprob: -10.538787841796875
    10. 'for' → logprob: -10.538787841796875

Token 102: ' feasible' (ID: 58866)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8621261119842529
    2. '1' → logprob: -1.237126111984253
    3. ' ' → logprob: -1.362126111984253
    4. ' so' → logprob: -5.112126350402832
    5. ' )' → logprob: -5.237126350402832
    6. ' i' → logprob: -5.362126350402832
    7. ' which' → logprob: -5.487126350402832
    8. ' for' → logprob: -5.737126350402832
    9. ' but' → logprob: -6.237126350402832
    10. '):' → logprob: -6.612126350402832

Token 103: ')
' (ID: 446)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.4371110200881958
    2. ')' → logprob: -1.0621110200881958
    3. ' for' → logprob: -5.062110900878906
    4. ' ' → logprob: -6.687110900878906
    5. 'for' → logprob: -7.687110900878906
    6. '   ' → logprob: -8.812110900878906
    7. ' )
' → logprob: -9.687110900878906
    8. ' ):
' → logprob: -9.812110900878906
    9. ' ):' → logprob: -11.187110900878906
    10. '):' → logprob: -11.562110900878906

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018087545409798622
    2. ' for' → logprob: -4.143087387084961
    3. 'for' → logprob: -6.518087387084961
    4. '    
' → logprob: -8.518087387084961
    5. ' from' → logprob: -8.768087387084961
    6. 'from' → logprob: -9.018087387084961
    7. '<|end|>' → logprob: -10.393087387084961
    8. '
' → logprob: -10.518087387084961
    9. 'import' → logprob: -11.393087387084961
    10. ' 
' → logprob: -12.018087387084961

Token 105: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5196100473403931
    2. 'for' → logprob: -1.144610047340393
    3. 'from' → logprob: -3.1446099281311035
    4. '   ' → logprob: -3.7696099281311035
    5. ' from' → logprob: -3.8946099281311035
    6. 'import' → logprob: -8.144610404968262
    7. '
' → logprob: -10.019610404968262
    8. ' ' → logprob: -10.394610404968262
    9. ' import' → logprob: -11.644610404968262
    10. '    
' → logprob: -12.144610404968262

Token 106: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8266312479972839
    2. 'from' → logprob: -0.8266312479972839
    3. ' for' → logprob: -2.5766313076019287
    4. ' from' → logprob: -3.2016313076019287
    5. '   ' → logprob: -4.82663106918335
    6. 'import' → logprob: -8.451631546020508
    7. ' import' → logprob: -13.076631546020508
    8. ' ' → logprob: -13.201631546020508
    9. '
' → logprob: -14.201631546020508
    10. '```' → logprob: -14.576631546020508

Token 107: ' bit' (ID: 3546)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.4244198203086853
    2. ' from' → logprob: -1.42441987991333
    3. 'from' → logprob: -2.42441987991333
    4. ' bit' → logprob: -4.79941987991333
    5. ' for' → logprob: -5.67441987991333
    6. ' range' → logprob: -6.17441987991333
    7. '   ' → logprob: -7.17441987991333
    8. 'import' → logprob: -7.67441987991333
    9. 'for' → logprob: -7.92441987991333
    10. ' import' → logprob: -7.92441987991333

Token 108: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.06901350617408752
    2. '   ' → logprob: -2.9440135955810547
    3. 'for' → logprob: -5.819013595581055
    4. 'm' → logprob: -5.944013595581055
    5. '_mask' → logprob: -6.069013595581055
    6. ' mask' → logprob: -6.694013595581055
    7. 'wise' → logprob: -6.819013595581055
    8. ' manipulation' → logprob: -6.944013595581055
    9. 's' → logprob: -7.569013595581055
    10. ' for' → logprob: -7.694013595581055

Token 109: ' enumeration' (ID: 120596)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5341271162033081
    2. '   ' → logprob: -1.534127116203308
    3. 'for' → logprob: -2.7841272354125977
    4. ' ' → logprob: -2.9091272354125977
    5. '<|end|>' → logprob: -3.7841272354125977
    6. 's' → logprob: -4.159127235412598
    7. '    ' → logprob: -4.409127235412598
    8. '<|end|>' → logprob: -5.034127235412598
    9. '  ' → logprob: -5.159127235412598
    10. ',' → logprob: -5.534127235412598

Token 110: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3558398485183716
    2. ' for' → logprob: -1.4808398485183716
    3. ':' → logprob: -3.730839729309082
    4. '
' → logprob: -4.105839729309082
    5. '<|end|>' → logprob: -4.355839729309082
    6. 'for' → logprob: -4.855839729309082
    7. '<|end|>' → logprob: -5.105839729309082
    8. ' ' → logprob: -6.105839729309082
    9. '  ' → logprob: -7.355839729309082
    10. ':
' → logprob: -7.730839729309082

Token 111: ' subsets' (ID: 165377)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.574804425239563
    2. ' mask' → logprob: -1.074804425239563
    3. 'mask' → logprob: -2.8248043060302734
    4. 'subset' → logprob: -3.6998043060302734
    5. ' subsets' → logprob: -4.949804306030273
    6. ' s' → logprob: -5.824804306030273
    7. ' range' → logprob: -7.324804306030273
    8. 'sub' → logprob: -8.074804306030273
    9. 's' → logprob: -8.699804306030273
    10. ' sub' → logprob: -9.074804306030273

Token 112: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04376385360956192
    2. ' for' → logprob: -3.4187638759613037
    3. '
' → logprob: -5.918763637542725
    4. '<|end|>' → logprob: -5.918763637542725
    5. ':' → logprob: -6.543763637542725
    6. '<|end|>' → logprob: -7.168763637542725
    7. 'for' → logprob: -7.418763637542725
    8. ' ' → logprob: -7.543763637542725
    9. '    
' → logprob: -8.043764114379883
    10. '  ' → logprob: -8.293764114379883

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019066259264945984
    2. ' for' → logprob: -4.019066333770752
    3. 'for' → logprob: -7.769066333770752
    4. '
' → logprob: -8.144065856933594
    5. '    
' → logprob: -9.144065856933594
    6. ' 
' → logprob: -10.769065856933594
    7. '  
' → logprob: -11.269065856933594
    8. 'n' → logprob: -11.269065856933594
    9. ',' → logprob: -11.519065856933594
    10. '<|end|>' → logprob: -11.644065856933594

Token 114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2841460704803467
    2. 'for' (adapté à ' for') → logprob: -1.7841460704803467
    3. '   ' → logprob: -2.5341460704803467
    4. '
' → logprob: -10.034146308898926
    5. ' ' → logprob: -12.159146308898926
    6. '    
' → logprob: -12.659146308898926
    7. 'n' → logprob: -12.784146308898926
    8. ' 
' → logprob: -12.909146308898926
    9. ' i' → logprob: -13.034146308898926
    10. '	for' → logprob: -13.034146308898926

Token 115: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.02384304068982601
    2. 'mask' → logprob: -4.148842811584473
    3. ' subset' → logprob: -4.898842811584473
    4. ' i' → logprob: -9.023842811584473
    5. 'subset' → logprob: -9.523842811584473
    6. ' s' → logprob: -10.148842811584473
    7. 'i' → logprob: -10.773842811584473
    8. '(mask' → logprob: -11.273842811584473
    9. '	mask' → logprob: -11.398842811584473
    10. '   ' → logprob: -11.398842811584473

Token 116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032600578851997852
    2. 'in' → logprob: -5.753260135650635
    3. ' ' → logprob: -9.503259658813477
    4. '1' → logprob: -14.128259658813477
    5. 'In' → logprob: -14.128259658813477
    6. 'range' → logprob: -14.128259658813477
    7. ',' → logprob: -14.253259658813477
    8. '  ' → logprob: -14.628259658813477
    9. '   ' → logprob: -14.628259658813477
    10. 's' → logprob: -14.753259658813477

Token 117: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018153570592403412
    2. 'range' → logprob: -4.018153667449951
    3. '(range' → logprob: -13.268153190612793
    4. ' ' → logprob: -14.018153190612793
    5. '1' → logprob: -14.768153190612793
    6. '(' → logprob: -15.018153190612793
    7. ' xrange' → logprob: -15.518153190612793
    8. '	range' → logprob: -15.643153190612793
    9. '   ' → logprob: -17.39315414428711
    10. ')' → logprob: -17.64315414428711

Token 118: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.375
    3. '1' → logprob: -17.0
    4. ' ' → logprob: -19.375
    5. '(
' → logprob: -19.625
    6. '((' → logprob: -21.125
    7. '[' → logprob: -21.625
    8. '   ' → logprob: -21.875
    9. ',' → logprob: -22.625
    10. ')' → logprob: -23.0

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014025058771949261
    2. '(' → logprob: -9.375140190124512
    3. ' ' → logprob: -9.875140190124512
    4. '   ' → logprob: -12.500140190124512
    5. ')' → logprob: -17.375141143798828
    6. '```' → logprob: -18.125141143798828
    7. '    ' → logprob: -18.250141143798828
    8. ' (' → logprob: -18.375141143798828
    9. '  ' → logprob: -18.375141143798828
    10. '
' → logprob: -18.750141143798828

Token 120: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002843271940946579
    2. ' ,' → logprob: -5.877843379974365
    3. '1' → logprob: -10.627842903137207
    4. '<<' → logprob: -12.127842903137207
    5. ' <<' → logprob: -12.377842903137207
    6. '   ' → logprob: -13.127842903137207
    7. ' ' → logprob: -14.002842903137207
    8. ',
' → logprob: -14.502842903137207
    9. '2' → logprob: -15.127842903137207
    10. ',n' → logprob: -15.377842903137207

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005158595158718526
    2. ' ' → logprob: -7.875515937805176
    3. '(' → logprob: -9.000515937805176
    4. '   ' → logprob: -11.375515937805176
    5. ' (' → logprob: -14.375515937805176
    6. '```' → logprob: -15.250515937805176
    7. 'm' → logprob: -16.75051498413086
    8. '
' → logprob: -16.75051498413086
    9. ')' → logprob: -18.12551498413086
    10. '2' → logprob: -18.12551498413086

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028098674956709146
    2. '(' → logprob: -5.877810001373291
    3. ' ' → logprob: -12.627809524536133
    4. ' (' → logprob: -14.627809524536133
    5. 'm' → logprob: -15.002809524536133
    6. '```' → logprob: -15.252809524536133
    7. '   ' → logprob: -15.377809524536133
    8. '2' → logprob: -15.502809524536133
    9. '(m' → logprob: -15.877809524536133
    10. '
' → logprob: -16.127809524536133

Token 123: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.3132629990577698
    2. ' <<' → logprob: -1.313262939453125
    3. '<<(' → logprob: -13.688262939453125
    4. '<' → logprob: -16.813262939453125
    5. ',' → logprob: -17.438262939453125
    6. '1' → logprob: -17.688262939453125
    7. ' ' → logprob: -18.188262939453125
    8. '<<<' → logprob: -18.438262939453125
    9. '```' → logprob: -18.688262939453125
    10. ' <<
' → logprob: -19.063262939453125

Token 124: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.8624639324116288e-06
    2. ' m' → logprob: -13.250001907348633
    3. '(m' → logprob: -19.625001907348633
    4. '```' → logprob: -20.750001907348633
    5. '20' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '	m' → logprob: -21.500001907348633
    8. ')m' → logprob: -21.500001907348633
    9. '(' → logprob: -23.250001907348633
    10. '[m' → logprob: -23.375001907348633

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013741609873250127
    2. '):
' → logprob: -6.626374244689941
    3. ':' → logprob: -10.876374244689941
    4. ' ):' → logprob: -10.876374244689941
    5. ')' → logprob: -11.626374244689941
    6. '):
' → logprob: -14.876374244689941
    7. '}:' → logprob: -15.251374244689941
    8. '**' → logprob: -15.751374244689941
    9. '():' → logprob: -15.876374244689941
    10. ']:' → logprob: -16.001373291015625

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009647716768085957
    2. '<|end|>' → logprob: -5.259647846221924
    3. ':' → logprob: -6.134647846221924
    4. '   ' → logprob: -6.634647846221924
    5. ' ' → logprob: -8.509647369384766
    6. ',' → logprob: -8.759647369384766
    7. '    ' → logprob: -9.384647369384766
    8. '<|end|>' → logprob: -9.634647369384766
    9. ')' → logprob: -9.759647369384766
    10. '        
' → logprob: -9.884647369384766

Token 127: ' l' (ID: 305)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5515205264091492
    2. '       ' → logprob: -1.801520586013794
    3. 'cnt' → logprob: -2.051520586013794
    4. 'bits' → logprob: -2.926520586013794
    5. ' bits' → logprob: -3.176520586013794
    6. '           ' → logprob: -4.551520347595215
    7. ' count' → logprob: -4.801520347595215
    8. ' cnt' → logprob: -5.426520347595215
    9. 'subset' → logprob: -5.676520347595215
    10. '        ' → logprob: -6.301520347595215

Token 128: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.010347013361752033
    2. ' =' → logprob: -5.26034688949585
    3. '=' → logprob: -5.51034688949585
    4. 'cms' → logprob: -8.260347366333008
    5. '   ' → logprob: -8.760347366333008
    6. 'c' → logprob: -8.760347366333008
    7. 'ong' → logprob: -9.010347366333008
    8. '       ' → logprob: -9.135347366333008
    9. 'e' → logprob: -10.010347366333008
    10. 'en' → logprob: -10.760347366333008

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0699724480509758
    2. '=' → logprob: -2.694972515106201
    3. '_val' → logprob: -10.694972038269043
    4. '_' → logprob: -12.819972038269043
    5. ',' → logprob: -13.069972038269043
    6. '_=' → logprob: -13.194972038269043
    7. ' ' → logprob: -13.569972038269043
    8. '_value' → logprob: -13.569972038269043
    9. 's' → logprob: -13.944972038269043
    10. '   ' → logprob: -14.444972038269043

Token 130: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.125005722045898
    4. 'p' → logprob: -15.125005722045898
    5. '```' → logprob: -18.4375057220459
    6. '=' → logprob: -18.5625057220459
    7. 'def' → logprob: -18.5625057220459
    8. '  ' → logprob: -18.8125057220459
    9. 'int' → logprob: -18.9375057220459
    10. ' p' → logprob: -19.0000057220459

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.250000953674316
    3. 'p' → logprob: -16.625
    4. '   ' → logprob: -16.875
    5. '```' → logprob: -18.3125
    6. '۱' → logprob: -19.0625
    7. '=' → logprob: -19.6875
    8. 'def' → logprob: -19.8125
    9. '१' → logprob: -19.875
    10. '  ' → logprob: -19.875

Token 132: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4763883352279663
    2. '<|end|>' → logprob: -0.9763883352279663
    3. '<|end|>' → logprob: -6.726388454437256
    4. ',' → logprob: -7.351388454437256
    5. ' for' → logprob: -8.226387977600098
    6. ')' → logprob: -9.851387977600098
    7. '   ' → logprob: -10.351387977600098
    8. 'for' → logprob: -10.851387977600098
    9. '
' → logprob: -10.851387977600098
    10. '	' → logprob: -10.851387977600098

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016912288963794708
    2. '<|end|>' → logprob: -4.141912460327148
    3. ',' → logprob: -8.016912460327148
    4. ' for' → logprob: -8.516912460327148
    5. '<|end|>' → logprob: -8.766912460327148
    6. '   ' → logprob: -9.891912460327148
    7. '	' → logprob: -10.391912460327148
    8. ')' → logprob: -10.766912460327148
    9. '           ' → logprob: -11.141912460327148
    10. '        ' → logprob: -11.141912460327148

Token 134: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.8416833877563477
    2. 'for' → logprob: -1.0916833877563477
    3. '       ' → logprob: -2.0916833877563477
    4. 'valid' → logprob: -2.7166833877563477
    5. 'bit' → logprob: -4.341683387756348
    6. 'cnt' → logprob: -4.341683387756348
    7. ' for' → logprob: -5.591683387756348
    8. 'sign' → logprob: -5.716683387756348
    9. 'overflow' → logprob: -5.841683387756348
    10. 'count' → logprob: -5.841683387756348

Token 135: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07150539755821228
    2. '_set' → logprob: -2.946505308151245
    3. '=' → logprob: -4.571505546569824
    4. '_count' → logprob: -5.321505546569824
    5. '_on' → logprob: -7.696505546569824
    6. 'count' → logprob: -8.321505546569824
    7. 'set' → logprob: -9.071505546569824
    8. '   ' → logprob: -9.071505546569824
    9. '_seen' → logprob: -10.071505546569824
    10. 'cnt' → logprob: -10.196505546569824

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026315046474337578
    2. '=' → logprob: -3.6513149738311768
    3. ' ' → logprob: -12.651314735412598
    4. '=count' → logprob: -12.776314735412598
    5. '<|end|>' → logprob: -13.026314735412598
    6. '   ' → logprob: -13.026314735412598
    7. ')' → logprob: -13.776314735412598
    8. '=int' → logprob: -14.276314735412598
    9. '  ' → logprob: -14.651314735412598
    10. '    ' → logprob: -14.901314735412598

Token 137: ' ' (ID: 220)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.7716407179832458
    2. ' bin' → logprob: -1.1466407775878906
    3. '0' → logprob: -1.5216407775878906
    4. ' ' → logprob: -6.396640777587891
    5. '(bin' → logprob: -11.14664077758789
    6. '-bin' → logprob: -13.14664077758789
    7. '/bin' → logprob: -13.52164077758789
    8. '_bin' → logprob: -13.64664077758789
    9. '   ' → logprob: -13.77164077758789
    10. 'b' → logprob: -14.77164077758789

Token 138: '0' (ID: 15)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.04315481707453728
    2. '0' → logprob: -3.168154716491699
    3. ' bin' → logprob: -8.7931547164917
    4. '(bin' → logprob: -13.5431547164917
    5. '/bin' → logprob: -13.7931547164917
    6. ' ' → logprob: -14.5431547164917
    7. 'b' → logprob: -15.5431547164917
    8. 'bit' → logprob: -15.5431547164917
    9. '-bin' → logprob: -16.168155670166016
    10. '_bin' → logprob: -16.168155670166016

Token 139: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.449007511138916
    2. '<|end|>' → logprob: -1.199007511138916
    3. ' for' → logprob: -3.574007511138916
    4. ' ' → logprob: -5.199007511138916
    5. '   ' → logprob: -5.199007511138916
    6. '<|end|>' → logprob: -5.574007511138916
    7. ' 
' → logprob: -5.824007511138916
    8. ')' → logprob: -5.824007511138916
    9. '
' → logprob: -6.074007511138916
    10. ',' → logprob: -6.074007511138916

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.499208003282547
    2. '<|end|>' → logprob: -1.2492079734802246
    3. ' for' → logprob: -2.4992079734802246
    4. ' ' → logprob: -4.624207973480225
    5. '        ' → logprob: -5.999207973480225
    6. ',' → logprob: -6.374207973480225
    7. 'for' → logprob: -6.624207973480225
    8. ' 
' → logprob: -6.624207973480225
    9. '<|end|>' → logprob: -6.749207973480225
    10. '   ' → logprob: -6.749207973480225

Token 141: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2758837044239044
    2. ' for' → logprob: -1.525883674621582
    3. '       ' → logprob: -3.775883674621582
    4. 'valid' → logprob: -7.900883674621582
    5. ' valid' → logprob: -8.650883674621582
    6. 'i' → logprob: -10.025883674621582
    7. '   ' → logprob: -10.025883674621582
    8. 'ok' → logprob: -10.275883674621582
    9. '           ' → logprob: -10.900883674621582
    10. ' i' → logprob: -11.150883674621582

Token 142: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023892970755696297
    2. 'j' → logprob: -3.773892879486084
    3. ' i' → logprob: -7.398892879486084
    4. ' j' → logprob: -10.273893356323242
    5. '	i' → logprob: -15.148893356323242
    6. 'bit' → logprob: -15.398893356323242
    7. 'idx' → logprob: -15.898893356323242
    8. '```' → logprob: -16.398893356323242
    9. '   ' → logprob: -17.523893356323242
    10. ')i' → logprob: -17.773893356323242

Token 143: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026367876678705215
    2. 'in' → logprob: -3.6513679027557373
    3. '<|end|>' → logprob: -10.151368141174316
    4. ' ' → logprob: -10.526368141174316
    5. '	in' → logprob: -14.276368141174316
    6. '<|end|>' → logprob: -14.526368141174316
    7. '  ' → logprob: -16.0263671875
    8. '    ' → logprob: -16.1513671875
    9. ',' → logprob: -16.7763671875
    10. '```' → logprob: -17.0263671875

Token 144: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25192946195602417
    2. 'range' → logprob: -1.501929521560669
    3. '(range' → logprob: -15.37692928314209
    4. '	range' → logprob: -16.126930236816406
    5. ' ' → logprob: -17.001930236816406
    6. '   ' → logprob: -18.001930236816406
    7. ')' → logprob: -18.376930236816406
    8. '```' → logprob: -18.626930236816406
    9. '.range' → logprob: -19.251930236816406
    10. ' xrange' → logprob: -19.626930236816406

Token 145: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0022180574014782906
    2. '(m' → logprob: -6.502218246459961
    3. ' m' → logprob: -7.252218246459961
    4. '	m' → logprob: -12.252218246459961
    5. '   ' → logprob: -13.502218246459961
    6. '(' → logprob: -14.502218246459961
    7. ' (' → logprob: -16.62721824645996
    8. ')m' → logprob: -16.87721824645996
    9. ' ' → logprob: -17.00221824645996
    10. '<m' → logprob: -17.62721824645996

Token 146: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07029663026332855
    2. '):
' → logprob: -2.6952965259552
    3. ' ):' → logprob: -8.320296287536621
    4. ')' → logprob: -10.695296287536621
    5. '):
' → logprob: -10.820296287536621
    6. ':' → logprob: -11.195296287536621
    7. ' ):
' → logprob: -11.195296287536621
    8. '):

' → logprob: -11.320296287536621
    9. ',' → logprob: -11.320296287536621
    10. '<|end|>' → logprob: -12.070296287536621

Token 147: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.62416011095047
    2. '<|end|>' → logprob: -1.3741600513458252
    3. ' if' → logprob: -1.8741600513458252
    4. '       ' → logprob: -2.999160051345825
    5. ' ' → logprob: -5.749160289764404
    6. '<|end|>' → logprob: -6.374160289764404
    7. 'if' → logprob: -7.499160289764404
    8. ',' → logprob: -7.499160289764404
    9. '               ' → logprob: -7.499160289764404
    10. '   ' → logprob: -8.249159812927246

Token 148: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09745385497808456
    2. 'if' (adapté à ' if') → logprob: -2.8474538326263428
    3. '           ' → logprob: -3.7224538326263428
    4. ' ' → logprob: -5.847454071044922
    5. '       ' → logprob: -5.847454071044922
    6. ' 
' → logprob: -6.472454071044922
    7. '        ' → logprob: -6.722454071044922
    8. '               ' → logprob: -7.097454071044922
    9. '            ' → logprob: -7.472454071044922
    10. '   ' → logprob: -8.597454071044922

Token 149: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.6234291195869446
    2. ' (' → logprob: -0.9984291195869446
    3. '(mask' → logprob: -2.3734290599823
    4. 'mask' → logprob: -6.123429298400879
    5. ' ' → logprob: -10.248429298400879
    6. ' ((' → logprob: -10.998429298400879
    7. '	mask' → logprob: -11.248429298400879
    8. '_mask' → logprob: -11.873429298400879
    9. '(' → logprob: -11.998429298400879
    10. '((' → logprob: -12.748429298400879

Token 150: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.12694312632083893
    2. '&' → logprob: -2.1269431114196777
    3. ' ' → logprob: -12.751943588256836
    4. '&amp' → logprob: -12.751943588256836
    5. '&nbsp' → logprob: -13.126943588256836
    6. ' ' → logprob: -13.376943588256836
    7. '&(' → logprob: -13.626943588256836
    8. '>>' → logprob: -13.751943588256836
    9. '＆' → logprob: -14.126943588256836
    10. '&
' → logprob: -14.251943588256836

Token 151: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06196970492601395
    2. '(' → logprob: -2.811969757080078
    3. '1' → logprob: -13.811969757080078
    4. ' ' → logprob: -13.936969757080078
    5. '（' → logprob: -16.936969757080078
    6. ' ' → logprob: -17.186969757080078
    7. '```' → logprob: -18.686969757080078
    8. ')' → logprob: -18.811969757080078
    9. '[' → logprob: -18.811969757080078
    10. ',' → logprob: -18.936969757080078

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002603245200589299
    2. '(' → logprob: -6.002603054046631
    3. ' ' → logprob: -9.127603530883789
    4. ' (' → logprob: -10.877603530883789
    5. ')' → logprob: -17.37760353088379
    6. '   ' → logprob: -18.50260353088379
    7. '[' → logprob: -18.87760353088379
    8. '           ' → logprob: -19.37760353088379
    9. '```' → logprob: -19.37760353088379
    10. '{' → logprob: -20.37760353088379

Token 153: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.09080474078655243
    2. ' <<' → logprob: -2.4658048152923584
    3. ')' → logprob: -6.840804576873779
    4. '<' → logprob: -7.215804576873779
    5. '1' → logprob: -10.715805053710938
    6. ')<<' → logprob: -11.590805053710938
    7. ' ' → logprob: -11.840805053710938
    8. ' <' → logprob: -12.215805053710938
    9. '>' → logprob: -12.715805053710938
    10. '>>' → logprob: -13.090805053710938

Token 154: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.130576806142926e-05
    2. ' i' → logprob: -10.375031471252441
    3. '	i' → logprob: -18.000030517578125
    4. '   ' → logprob: -18.125030517578125
    5. ' ' → logprob: -18.750030517578125
    6. '
' → logprob: -20.125030517578125
    7. ')' → logprob: -20.375030517578125
    8. '```' → logprob: -20.625030517578125
    9. ')i' → logprob: -20.625030517578125
    10. '  ' → logprob: -21.125030517578125

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032291240990161896
    2. '):
' → logprob: -3.6572911739349365
    3. ')' → logprob: -5.157291412353516
    4. ')==' → logprob: -9.032291412353516
    5. ':' → logprob: -10.157291412353516
    6. ')>' → logprob: -11.157291412353516
    7. ')!=' → logprob: -11.157291412353516
    8. ' ):' → logprob: -11.657291412353516
    9. '):

' → logprob: -11.782291412353516
    10. '):
' → logprob: -11.782291412353516

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004696526564657688
    2. ':
' → logprob: -6.754696369171143
    3. '           ' → logprob: -7.004696369171143
    4. '                
' → logprob: -7.379696369171143
    5. ':' → logprob: -7.754696369171143
    6. ',' → logprob: -7.879696369171143
    7. ' 
' → logprob: -8.1296968460083
    8. '):
' → logprob: -8.6296968460083
    9. ' ' → logprob: -8.8796968460083
    10. '<|end|>' → logprob: -9.5046968460083

Token 157: ' bits' (ID: 18189)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6955750584602356
    2. ' p' → logprob: -1.5705749988555908
    3. ' l' → logprob: -1.6955749988555908
    4. 'p' → logprob: -2.945574998855591
    5. 'if' → logprob: -4.57057523727417
    6. '               ' → logprob: -4.94557523727417
    7. ' new' → logprob: -4.94557523727417
    8. 'l' → logprob: -5.07057523727417
    9. ' prev' → logprob: -5.82057523727417
    10. '           ' → logprob: -6.07057523727417

Token 158: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.4418171455617994e-05
    2. '       ' → logprob: -11.375044822692871
    3. '           ' → logprob: -11.500044822692871
    4. 'count' → logprob: -12.000044822692871
    5. '               ' → logprob: -13.125044822692871
    6. ' _' → logprob: -13.375044822692871
    7. '_counter' → logprob: -13.375044822692871
    8. '   ' → logprob: -13.375044822692871
    9. '_cnt' → logprob: -13.625044822692871
    10. '_counts' → logprob: -13.625044822692871

Token 159: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12695161998271942
    2. '+=' → logprob: -2.1269516944885254
    3. ' =' → logprob: -12.251951217651367
    4. '=' → logprob: -12.501951217651367
    5. '+' → logprob: -12.626951217651367
    6. '            ' → logprob: -13.376951217651367
    7. '           ' → logprob: -13.376951217651367
    8. '   ' → logprob: -13.501951217651367
    9. '                ' → logprob: -13.626951217651367
    10. ']+=' → logprob: -13.751951217651367

Token 160: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005233882926404476
    2. ' ' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.442733764648438
    4. '```' → logprob: -17.505233764648438
    5. ' ' → logprob: -18.505233764648438
    6. ')' → logprob: -18.505233764648438
    7. '0' → logprob: -18.630233764648438
    8. '  ' → logprob: -18.817733764648438
    9. '<|end|>' → logprob: -18.942733764648438
    10. ',' → logprob: -19.130233764648438

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -17.56252098083496
    4. '   ' → logprob: -17.87502098083496
    5. '0' → logprob: -18.37502098083496
    6. '2' → logprob: -19.31252098083496
    7. '`' → logprob: -20.06252098083496
    8. 'import' → logprob: -20.43752098083496
    9. '۱' → logprob: -20.43752098083496
    10. ')' → logprob: -20.43752098083496

Token 162: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019797565415501595
    2. '                
' → logprob: -5.0197978019714355
    3. '
' → logprob: -5.1447978019714355
    4. ' l' → logprob: -6.0197978019714355
    5. ',' → logprob: -6.8947978019714355
    6. ' 
' → logprob: -6.8947978019714355
    7. '                   ' → logprob: -8.269797325134277
    8. '                ' → logprob: -8.644797325134277
    9. '           ' → logprob: -8.644797325134277
    10. '            
' → logprob: -8.644797325134277

Token 163: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020009664818644524
    2. '                
' → logprob: -4.645009517669678
    3. ' 
' → logprob: -5.895009517669678
    4. '                ' → logprob: -6.645009517669678
    5. ' l' → logprob: -6.770009517669678
    6. '                   ' → logprob: -7.270009517669678
    7. ' if' → logprob: -7.270009517669678
    8. '
' → logprob: -7.520009517669678
    9. ',' → logprob: -7.645009517669678
    10. '```' → logprob: -8.145009994506836

Token 164: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7634156346321106
    2. 'l' → logprob: -1.1384155750274658
    3. 'pi' → logprob: -2.513415575027466
    4. ' l' → logprob: -3.263415575027466
    5. ' p' → logprob: -3.763415575027466
    6. 'new' → logprob: -4.388415813446045
    7. 'prev' → logprob: -4.388415813446045
    8. 'val' → logprob: -4.763415813446045
    9. 'from' → logprob: -5.388415813446045
    10. ' new' → logprob: -5.388415813446045

Token 165: ' Compute' (ID: 45438)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6163429021835327
    2. 'p' → logprob: -1.6163429021835327
    3. 'prev' → logprob: -2.4913430213928223
    4. 'from' → logprob: -2.9913430213928223
    5. 'pi' → logprob: -3.7413430213928223
    6. ' l' → logprob: -3.7413430213928223
    7. 'val' → logprob: -3.8663430213928223
    8. 'if' → logprob: -4.741343021392822
    9. 'import' → logprob: -4.866343021392822
    10. 'new' → logprob: -5.116343021392822

Token 166: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4816463887691498
    2. 'l' → logprob: -1.1066464185714722
    3. 'import' → logprob: -3.8566462993621826
    4. ' new' → logprob: -4.981646537780762
    5. ' next' → logprob: -5.106646537780762
    6. 'new' → logprob: -5.356646537780762
    7. 'next' → logprob: -5.606646537780762
    8. 'from' → logprob: -5.856646537780762
    9. 'p' → logprob: -6.481646537780762
    10. 'prev' → logprob: -6.731646537780762

Token 167: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.282920129597187e-05
    2. 'c' → logprob: -12.375012397766113
    3. '   ' → logprob: -12.625012397766113
    4. 'cms' → logprob: -12.875012397766113
    5. '_cm' → logprob: -14.375012397766113
    6. ' cm' → logprob: -15.000012397766113
    7. ' =' → logprob: -15.250012397766113
    8. 'import' → logprob: -15.250012397766113
    9. 'CM' → logprob: -15.500012397766113
    10. 'l' → logprob: -15.500012397766113

Token 168: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9471787810325623
    2. '=' → logprob: -1.197178840637207
    3. '(' → logprob: -1.322178840637207
    4. '(l' → logprob: -3.322178840637207
    5. '_l' → logprob: -5.822178840637207
    6. '=l' → logprob: -6.197178840637207
    7. 'l' → logprob: -7.322178840637207
    8. ' (' → logprob: -8.322178840637207
    9. ' *=' → logprob: -8.447178840637207
    10. '_' → logprob: -8.447178840637207

Token 169: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.026618294417858124
    2. ' p' → logprob: -3.651618242263794
    3. 'l' → logprob: -8.651618003845215
    4. '(p' → logprob: -9.901618003845215
    5. '   ' → logprob: -11.026618003845215
    6. '=' → logprob: -11.401618003845215
    7. '_p' → logprob: -11.651618003845215
    8. '```' → logprob: -11.651618003845215
    9. ' l' → logprob: -11.901618003845215
    10. ' =' → logprob: -12.151618003845215

Token 170: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0445127372804563e-05
    2. '_' → logprob: -12.37501049041748
    3. '[i' → logprob: -12.87501049041748
    4. ' _' → logprob: -14.00001049041748
    5. 'list' → logprob: -14.75001049041748
    6. '[_' → logprob: -14.87501049041748
    7. 'List' → logprob: -15.12501049041748
    8. '[' → logprob: -15.50001049041748
    9. '_List' → logprob: -15.50001049041748
    10. ')' → logprob: -15.62501049041748

Token 171: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004180971533060074
    2. '[' → logprob: -5.504180908203125
    3. '[_' → logprob: -10.504180908203125
    4. '_list' → logprob: -10.504180908203125
    5. ' [' → logprob: -11.754180908203125
    6. '[
' → logprob: -12.629180908203125
    7. 's' → logprob: -12.629180908203125
    8. '   ' → logprob: -12.754180908203125
    9. '[p' → logprob: -12.754180908203125
    10. '
' → logprob: -12.879180908203125

Token 172: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32258981466293335
    2. ')
' → logprob: -2.197589874267578
    3. ' )' → logprob: -2.447589874267578
    4. ' )
' → logprob: -2.697589874267578
    5. ',' → logprob: -5.197589874267578
    6. ' *' → logprob: -6.697589874267578
    7. '):
' → logprob: -7.322589874267578
    8. '*' → logprob: -7.697589874267578
    9. '))' → logprob: -7.697589874267578
    10. ' //' → logprob: -8.572589874267578

Token 173: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016774557530879974
    2. '                
' → logprob: -5.016774654388428
    3. ' l' → logprob: -5.766774654388428
    4. '                ' → logprob: -6.516774654388428
    5. ' =' → logprob: -7.016774654388428
    6. ',' → logprob: -7.266774654388428
    7. ' *' → logprob: -7.516774654388428
    8. '*' → logprob: -7.891774654388428
    9. '                   ' → logprob: -8.01677417755127
    10. '=' → logprob: -8.01677417755127

Token 174: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1004222109913826
    2. 'g' → logprob: -2.9754221439361572
    3. 'a' → logprob: -4.600422382354736
    4. '               ' → logprob: -4.725422382354736
    5. ' l' → logprob: -4.725422382354736
    6. 'p' → logprob: -5.600422382354736
    7. 'prev' → logprob: -5.600422382354736
    8. 'def' → logprob: -5.975422382354736
    9. ' gcd' → logprob: -6.350422382354736
    10. 'new' → logprob: -6.600422382354736

Token 175: ' Since' (ID: 12265)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0171573162078857
    2. 'l' → logprob: -1.1421573162078857
    3. 'g' → logprob: -1.8921573162078857
    4. 'from' → logprob: -3.0171573162078857
    5. ' from' → logprob: -3.2671573162078857
    6. ' gcd' → logprob: -3.2671573162078857
    7. 'import' → logprob: -3.8921573162078857
    8. ' g' → logprob: -5.017157554626465
    9. ' import' → logprob: -5.392157554626465
    10. ' new' → logprob: -5.892157554626465

Token 176: ' p' (ID: 275)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4121131896972656
    2. 'l' → logprob: -1.1621131896972656
    3. ' p' → logprob: -4.787113189697266
    4. ' math' → logprob: -5.412113189697266
    5. 'p' → logprob: -5.537113189697266
    6. 'math' → logprob: -5.662113189697266
    7. 'import' → logprob: -5.912113189697266
    8. 'n' → logprob: -8.162113189697266
    9. 'def' → logprob: -8.412113189697266
    10. 'True' → logprob: -8.412113189697266

Token 177: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0001979378139367327
    2. 'import' → logprob: -9.875198364257812
    3. 'list' → logprob: -10.500198364257812
    4. 'l' → logprob: -10.875198364257812
    5. '[i' → logprob: -11.250198364257812
    6. 'ython' → logprob: -11.250198364257812
    7. 'm' → logprob: -11.625198364257812
    8. '_' → logprob: -12.250198364257812
    9. 'List' → logprob: -12.375198364257812
    10. 'and' → logprob: -12.375198364257812

Token 178: ' divides' (ID: 144028)
  Prédit: ' divides'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divides' → logprob: -0.22170859575271606
    2. 's' → logprob: -2.0967085361480713
    3. ' is' → logprob: -4.22170877456665
    4. 'div' → logprob: -4.22170877456665
    5. ' and' → logprob: -5.09670877456665
    6. ' are' → logprob: -5.22170877456665
    7. ' always' → logprob: -5.34670877456665
    8. ')' → logprob: -5.47170877456665
    9. '=' → logprob: -5.47170877456665
    10. '|' → logprob: -5.97170877456665

Token 179: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4404797852039337
    2. 'l' → logprob: -1.1904797554016113
    3. ' n' → logprob: -3.3154797554016113
    4. ' l' → logprob: -4.190479755401611
    5. 'p' → logprob: -7.565479755401611
    6. ' p' → logprob: -9.31548023223877
    7. '```' → logprob: -9.44048023223877
    8. '   ' → logprob: -11.69048023223877
    9. ' ' → logprob: -11.81548023223877
    10. '	l' → logprob: -12.44048023223877

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03698018938302994
    2. ':' → logprob: -3.661980152130127
    3. '                   ' → logprob: -5.786980152130127
    4. '               ' → logprob: -6.161980152130127
    5. ' ,' → logprob: -7.036980152130127
    6. ':
' → logprob: -7.286980152130127
    7. ',l' → logprob: -7.411980152130127
    8. ' =' → logprob: -7.536980152130127
    9. ',
' → logprob: -7.536980152130127
    10. ' l' → logprob: -7.661980152130127

Token 181: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.029419148340821266
    2. '               ' → logprob: -4.0294189453125
    3. 'l' → logprob: -4.9044189453125
    4. '                   ' → logprob: -6.2794189453125
    5. ' gcd' → logprob: -7.4044189453125
    6. 'g' → logprob: -7.6544189453125
    7. '                ' → logprob: -9.2794189453125
    8. 'import' → logprob: -9.4044189453125
    9. ' new' → logprob: -9.4044189453125
    10. ' g' → logprob: -9.4044189453125

Token 182: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0002382249804213643
    2. 'import' → logprob: -10.000238418579102
    3. '   ' → logprob: -10.125238418579102
    4. 'cms' → logprob: -10.250238418579102
    5. ' =' → logprob: -10.500238418579102
    6. '=' → logprob: -11.125238418579102
    7. 'l' → logprob: -11.250238418579102
    8. ' cm' → logprob: -11.500238418579102
    9. 'CM' → logprob: -11.500238418579102
    10. 'c' → logprob: -12.375238418579102

Token 183: ' won't' (ID: 14219)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06290999054908752
    2. '=' → logprob: -2.8129100799560547
    3. ' *=' → logprob: -7.437910079956055
    4. '*=' → logprob: -8.062910079956055
    5. '   ' → logprob: -11.687910079956055
    6. '	' → logprob: -11.937910079956055
    7. '```' → logprob: -12.437910079956055
    8. ' ' → logprob: -12.437910079956055
    9. '*' → logprob: -12.562910079956055
    10. 's' → logprob: -13.312910079956055

Token 184: ' exceed' (ID: 23275)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -1.0292294025421143
    2. 'overflow' → logprob: -1.2792294025421143
    3. ' exceed' → logprob: -1.2792294025421143
    4. ' overflow' → logprob: -2.5292294025421143
    5. '>' → logprob: -5.404229164123535
    6. ' >' → logprob: -7.779229164123535
    7. 'explode' → logprob: -7.779229164123535
    8. 'be' → logprob: -8.529229164123535
    9. ' surpass' → logprob: -9.279229164123535
    10. 'grow' → logprob: -9.279229164123535

Token 185: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39245766401290894
    2. ' n' → logprob: -1.1424577236175537
    3. 'p' → logprob: -6.017457485198975
    4. ' p' → logprob: -6.142457485198975
    5. 'l' → logprob: -7.267457485198975
    6. ' l' → logprob: -8.642457962036133
    7. '```' → logprob: -10.267457962036133
    8. 'max' → logprob: -10.892457962036133
    9. '(n' → logprob: -11.267457962036133
    10. ' (' → logprob: -11.517457962036133

Token 186: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11317014694213867
    2. ' *' → logprob: -2.3631701469421387
    3. '*' → logprob: -5.738170146942139
    4. '                   ' → logprob: -5.863170146942139
    5. ',' → logprob: -6.363170146942139
    6. ' *
' → logprob: -6.738170146942139
    7. '                ' → logprob: -6.988170146942139
    8. ' and' → logprob: -7.488170146942139
    9. '           ' → logprob: -7.488170146942139
    10. 'import' → logprob: -7.988170146942139

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009326597792096436
    2. ',' → logprob: -7.750932693481445
    3. '                
' → logprob: -8.375932693481445
    4. '           ' → logprob: -9.875932693481445
    5. '<|end|>' → logprob: -10.125932693481445
    6. ' l' → logprob: -10.500932693481445
    7. ' and' → logprob: -11.125932693481445
    8. '
' → logprob: -11.125932693481445
    9. '			' → logprob: -11.250932693481445
    10. '                   ' → logprob: -11.250932693481445

Token 188: ' p' (ID: 275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04813645780086517
    2. 'g' → logprob: -3.4231364727020264
    3. ' l' → logprob: -4.673136234283447
    4. '               ' → logprob: -5.798136234283447
    5. ' gcd' → logprob: -6.923136234283447
    6. 'prev' → logprob: -7.923136234283447
    7. 'a' → logprob: -9.048136711120605
    8. 'new' → logprob: -9.173136711120605
    9. 'def' → logprob: -9.298136711120605
    10. '                   ' → logprob: -9.673136711120605

Token 189: ' =' (ID: 314)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.025231800973415375
    2. '_' → logprob: -4.025231838226318
    3. '[i' → logprob: -5.400231838226318
    4. '_i' → logprob: -6.775231838226318
    5. ' =' → logprob: -7.650231838226318
    6. ' _' → logprob: -8.52523136138916
    7. '=' → logprob: -8.52523136138916
    8. '[' → logprob: -8.52523136138916
    9. 'i' → logprob: -10.02523136138916
    10. ')' → logprob: -10.27523136138916

Token 190: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5759498476982117
    2. ' p' → logprob: -0.8259498476982117
    3. ' math' → logprob: -12.450949668884277
    4. 'math' → logprob: -12.700949668884277
    5. '   ' → logprob: -14.075949668884277
    6. '               ' → logprob: -14.825949668884277
    7. '           ' → logprob: -15.075949668884277
    8. '	p' → logprob: -15.325949668884277
    9. '(p' → logprob: -15.575949668884277
    10. '_p' → logprob: -15.700949668884277

Token 191: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.599403423024341e-05
    2. '[i' → logprob: -9.875065803527832
    3. 'list' → logprob: -11.750065803527832
    4. 'List' → logprob: -13.125065803527832
    5. '_LIST' → logprob: -13.750065803527832
    6. '[' → logprob: -15.000065803527832
    7. '_List' → logprob: -15.000065803527832
    8. '   ' → logprob: -15.000065803527832
    9. '```' → logprob: -15.125065803527832
    10. 'import' → logprob: -15.250065803527832

Token 192: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001146291324403137
    2. '[' → logprob: -9.250114440917969
    3. ' [' → logprob: -11.500114440917969
    4. '[p' → logprob: -12.250114440917969
    5. '```' → logprob: -13.875114440917969
    6. '[I' → logprob: -14.500114440917969
    7. 'i' → logprob: -15.000114440917969
    8. '\[' → logprob: -15.250114440917969
    9. 'p' → logprob: -15.750114440917969
    10. 's' → logprob: -15.875114440917969

Token 193: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.016421064734458923
    2. ')' → logprob: -4.391420841217041
    3. ']
' → logprob: -6.766420841217041
    4. '       ' → logprob: -6.891420841217041
    5. ')
' → logprob: -7.266420841217041
    6. '               ' → logprob: -7.391420841217041
    7. '           ' → logprob: -8.6414213180542
    8. ']' → logprob: -9.3914213180542
    9. '
' → logprob: -10.1414213180542
    10. '])
' → logprob: -10.7664213180542

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004372254479676485
    2. '           ' → logprob: -9.125436782836914
    3. '                
' → logprob: -9.625436782836914
    4. ' l' → logprob: -9.750436782836914
    5. '       ' → logprob: -9.875436782836914
    6. 'l' → logprob: -9.875436782836914
    7. '			' → logprob: -10.500436782836914
    8. ',' → logprob: -11.625436782836914
    9. 'n' → logprob: -11.625436782836914
    10. 'g' → logprob: -12.000436782836914

Token 195: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.3987298905849457
    2. 'g' → logprob: -1.148729920387268
    3. ' l' → logprob: -5.0237298011779785
    4. ' gcd' → logprob: -6.0237298011779785
    5. '               ' → logprob: -6.7737298011779785
    6. 'def' → logprob: -6.8987298011779785
    7. ' g' → logprob: -8.398730278015137
    8. '_g' → logprob: -8.898730278015137
    9. '                
' → logprob: -10.023730278015137
    10. 'from' → logprob: -10.148730278015137

Token 196: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -8.613945101387799e-05
    2. ' =' → logprob: -9.750085830688477
    3. '=' → logprob: -10.875085830688477
    4. 'cms' → logprob: -12.625085830688477
    5. '   ' → logprob: -13.375085830688477
    6. 'l' → logprob: -14.125085830688477
    7. '=l' → logprob: -14.750085830688477
    8. 'cmp' → logprob: -15.000085830688477
    9. 'CM' → logprob: -15.125085830688477
    10. ' cm' → logprob: -15.250085830688477

Token 197: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3164893686771393
    2. '=' → logprob: -1.316489338874817
    3. ' *=' → logprob: -6.066489219665527
    4. '*=' → logprob: -7.066489219665527
    5. '*' → logprob: -10.316489219665527
    6. ' ' → logprob: -11.566489219665527
    7. ' ' → logprob: -13.191489219665527
    8. '	' → logprob: -13.441489219665527
    9. '_' → logprob: -13.566489219665527
    10. '＝' → logprob: -14.816489219665527

Token 198: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0017658589640632272
    2. '(l' → logprob: -6.376765727996826
    3. ' l' → logprob: -9.751766204833984
    4. ' (' → logprob: -12.626766204833984
    5. '   ' → logprob: -13.626766204833984
    6. '```' → logprob: -15.376766204833984
    7. '(' → logprob: -15.626766204833984
    8. '	l' → logprob: -15.626766204833984
    9. 'math' → logprob: -15.876766204833984
    10. '  ' → logprob: -16.126766204833984

Token 199: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -6.704273118884885e-07
    2. 'cms' → logprob: -15.125000953674316
    3. 'c' → logprob: -15.875000953674316
    4. ' cm' → logprob: -16.125
    5. '(cm' → logprob: -16.875
    6. '   ' → logprob: -17.25
    7. '(l' → logprob: -18.0
    8. '_cm' → logprob: -18.5
    9. '(' → logprob: -18.75
    10. '*l' → logprob: -18.875

Token 200: ' *' (ID: 425)
  Prédit: '*p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*p' → logprob: -0.4017868936061859
    2. ' *' → logprob: -1.2767869234085083
    3. '*l' → logprob: -3.4017868041992188
    4. '*' → logprob: -4.026786804199219
    5. '//' → logprob: -8.776786804199219
    6. '*n' → logprob: -9.401786804199219
    7. '*q' → logprob: -9.651786804199219
    8. ' //' → logprob: -9.651786804199219
    9. '*k' → logprob: -9.651786804199219
    10. '*b' → logprob: -9.651786804199219

Token 201: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00408053956925869
    2. ' p' → logprob: -5.504080772399902
    3. '(p' → logprob: -13.129080772399902
    4. ' (' → logprob: -15.754080772399902
    5. ' ' → logprob: -18.129079818725586
    6. '   ' → logprob: -18.504079818725586
    7. '_p' → logprob: -19.379079818725586
    8. '```' → logprob: -19.629079818725586
    9. '	p' → logprob: -19.754079818725586
    10. '$p' → logprob: -20.254079818725586

Token 202: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.0182648878544569
    2. '//' → logprob: -4.0182647705078125
    3. '               ' → logprob: -9.268264770507812
    4. '#' → logprob: -11.518264770507812
    5. '```' → logprob: -13.518264770507812
    6. ' ' → logprob: -13.643264770507812
    7. '                ' → logprob: -13.768264770507812
    8. ')' → logprob: -13.768264770507812
    9. ' ' → logprob: -14.018264770507812
    10. '           ' → logprob: -14.143264770507812

Token 203: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -5.9795445849886164e-05
    2. ' math' → logprob: -9.750060081481934
    3. '(math' → logprob: -13.500060081481934
    4. 'g' → logprob: -18.500059127807617
    5. 'Math' → logprob: -18.875059127807617
    6. '.math' → logprob: -20.625059127807617
    7. '_math' → logprob: -21.000059127807617
    8. '   ' → logprob: -21.125059127807617
    9. 'import' → logprob: -21.375059127807617
    10. ' ' → logprob: -22.000059127807617

Token 204: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.31371286511421204
    2. 'g' → logprob: -1.3137128353118896
    3. ' gcd' → logprob: -8.813713073730469
    4. '_g' → logprob: -9.063713073730469
    5. '#g' → logprob: -9.063713073730469
    6. '=g' → logprob: -9.938713073730469
    7. ':g' → logprob: -11.938713073730469
    8. '-g' → logprob: -12.688713073730469
    9. '@g' → logprob: -12.938713073730469
    10. '/g' → logprob: -13.188713073730469

Token 205: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00039528406341560185
    2. 'g' → logprob: -8.625394821166992
    3. 'c' → logprob: -8.875394821166992
    4. 'cf' → logprob: -10.750394821166992
    5. 'math' → logprob: -11.250394821166992
    6. 'cm' → logprob: -11.750394821166992
    7. 'cdn' → logprob: -11.875394821166992
    8. 'cdf' → logprob: -11.875394821166992
    9. 'cmath' → logprob: -12.000394821166992
    10. '```' → logprob: -12.250394821166992

Token 206: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.002016071230173111
    2. 'l' → logprob: -6.252016067504883
    3. '(' → logprob: -9.377016067504883
    4. ' l' → logprob: -13.752016067504883
    5. ',l' → logprob: -14.377016067504883
    6. '	l' → logprob: -14.627016067504883
    7. ' (' → logprob: -15.252016067504883
    8. '(
' → logprob: -16.252016067504883
    9. '[l' → logprob: -16.752016067504883
    10. '(p' → logprob: -16.877016067504883

Token 207: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.008593653328716755
    2. 'c' → logprob: -5.258593559265137
    3. 'm' → logprob: -6.008593559265137
    4. ')' → logprob: -8.133593559265137
    5. '(l' → logprob: -8.758593559265137
    6. '   ' → logprob: -9.383593559265137
    7. 'cl' → logprob: -10.258593559265137
    8. 'mc' → logprob: -10.258593559265137
    9. ',' → logprob: -10.383593559265137
    10. 'l' → logprob: -10.508593559265137

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012914787977933884
    2. ',p' → logprob: -5.012914657592773
    3. ',l' → logprob: -5.137914657592773
    4. '(p' → logprob: -9.262914657592773
    5. '(' → logprob: -9.512914657592773
    6. ' ,' → logprob: -9.637914657592773
    7. 'l' → logprob: -10.387914657592773
    8. 'p' → logprob: -10.512914657592773
    9. '(l' → logprob: -12.012914657592773
    10. ',n' → logprob: -12.262914657592773

Token 209: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020354038861114532
    2. ' p' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.50020408630371
    4. '(p' → logprob: -20.25020408630371
    5. ')p' → logprob: -20.37520408630371
    6. ')' → logprob: -21.00020408630371
    7. '	p' → logprob: -21.12520408630371
    8. ' ' → logprob: -22.37520408630371
    9. '```' → logprob: -22.87520408630371
    10. '<p' → logprob: -23.12520408630371

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.3451433409936726e-05
    2. ')
' → logprob: -10.375033378601074
    3. ' )' → logprob: -13.625033378601074
    4. ')return' → logprob: -15.375033378601074
    5. '<|end|>' → logprob: -15.500033378601074
    6. ')p' → logprob: -16.25003433227539
    7. ')

' → logprob: -16.25003433227539
    8. '))' → logprob: -16.50003433227539
    9. '),' → logprob: -17.00003433227539
    10. ')}' → logprob: -17.12503433227539

Token 211: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06268485635519028
    2. '<|end|>' → logprob: -2.9376847743988037
    3. ',' → logprob: -5.937685012817383
    4. ')' → logprob: -6.562685012817383
    5. '        
' → logprob: -6.812685012817383
    6. '               ' → logprob: -7.312685012817383
    7. '           ' → logprob: -7.812685012817383
    8. '<|end|>' → logprob: -7.937685012817383
    9. '```' → logprob: -8.187685012817383
    10. ' 
' → logprob: -8.687685012817383

Token 212: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07594658434391022
    2. '       ' → logprob: -3.325946569442749
    3. ' if' → logprob: -3.325946569442749
    4. '           ' → logprob: -7.825946807861328
    5. 'if' (adapté à ' if') → logprob: -7.950946807861328
    6. '                
' → logprob: -9.325946807861328
    7. '
' → logprob: -9.575946807861328
    8. '                ' → logprob: -9.575946807861328
    9. '   ' → logprob: -10.075946807861328
    10. ' 
' → logprob: -10.325946807861328

Token 213: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.01815848983824253
    2. ' l' → logprob: -4.018158435821533
    3. '   ' → logprob: -12.018158912658691
    4. '	l' → logprob: -13.768158912658691
    5. ' ' → logprob: -14.768158912658691
    6. 'lc' → logprob: -15.143158912658691
    7. '(l' → logprob: -15.268158912658691
    8. '  ' → logprob: -15.393158912658691
    9. '```' → logprob: -15.643158912658691
    10. '    ' → logprob: -16.518157958984375

Token 214: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.22909334301948547
    2. '>' → logprob: -1.604093313217163
    3. 'c' → logprob: -6.229093551635742
    4. ' >' → logprob: -6.479093551635742
    5. '   ' → logprob: -9.479093551635742
    6. 'cms' → logprob: -9.729093551635742
    7. '```' → logprob: -12.229093551635742
    8. 'l' → logprob: -12.354093551635742
    9. ' cm' → logprob: -13.104093551635742
    10. 'm' → logprob: -13.354093551635742

Token 215: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25193271040916443
    2. ' >' → logprob: -1.5019327402114868
    3. '">' → logprob: -13.751933097839355
    4. ' ' → logprob: -14.376933097839355
    5. ' n' → logprob: -14.876933097839355
    6. ' ' → logprob: -15.001933097839355
    7. '()>' → logprob: -15.251933097839355
    8. 'n' → logprob: -15.376933097839355
    9. '&gt' → logprob: -15.626933097839355
    10. '＞' → logprob: -16.62693214416504

Token 216: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013263145228847861
    2. ' n' → logprob: -6.626326084136963
    3. '	n' → logprob: -15.001326560974121
    4. 'n't' → logprob: -17.251325607299805
    5. '_n' → logprob: -17.876325607299805
    6. '```' → logprob: -17.876325607299805
    7. ')n' → logprob: -18.126325607299805
    8. '<|end|>' → logprob: -18.251325607299805
    9. '
' → logprob: -19.126325607299805
    10. '(n' → logprob: -19.251325607299805

Token 217: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16507799923419952
    2. '           ' → logprob: -2.6650779247283936
    3. ':
' → logprob: -2.6650779247283936
    4. '       ' → logprob: -5.415078163146973
    5. ':return' → logprob: -5.540078163146973
    6. '   ' → logprob: -6.415078163146973
    7. '               ' → logprob: -7.540078163146973
    8. '<|end|>' → logprob: -7.665078163146973
    9. ' or' → logprob: -7.915078163146973
    10. '                   ' → logprob: -8.290078163146973

Token 218: ' ' (ID: 220)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16670289635658264
    2. 'break' → logprob: -1.9167028665542603
    3. ' break' → logprob: -5.666702747344971
    4. '           ' → logprob: -6.041702747344971
    5. '               ' → logprob: -7.666702747344971
    6. 'return' → logprob: -9.166703224182129
    7. 'continue' → logprob: -10.916703224182129
    8. '                       ' → logprob: -11.166703224182129
    9. '
' → logprob: -11.916703224182129
    10. ' return' → logprob: -12.666703224182129

Token 219: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3165333867073059
    2. '                   ' → logprob: -1.3165333271026611
    3. ' break' → logprob: -5.81653356552124
    4. 'return' → logprob: -9.066533088684082
    5. '               ' → logprob: -9.191533088684082
    6. '           ' → logprob: -9.816533088684082
    7. 'continue' → logprob: -12.066533088684082
    8. '	break' → logprob: -12.441533088684082
    9. '                       ' → logprob: -12.441533088684082
    10. '```' → logprob: -14.316533088684082

Token 220: ' no' (ID: 860)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.13690303266048431
    2. '                   ' → logprob: -2.6369030475616455
    3. ' break' → logprob: -2.8869030475616455
    4. '               ' → logprob: -8.011902809143066
    5. '           ' → logprob: -9.011902809143066
    6. 'return' → logprob: -9.261902809143066
    7. '	break' → logprob: -10.761902809143066
    8. 'continue' → logprob: -10.886902809143066
    9. '                       ' → logprob: -11.636902809143066
    10. '   ' → logprob: -11.886902809143066

Token 221: ' multiples' (ID: 70720)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.2594049274921417
    2. ' need' → logprob: -2.1344048976898193
    3. 'break' → logprob: -2.5094048976898193
    4. 'continue' → logprob: -4.634405136108398
    5. 't' → logprob: -4.884405136108398
    6. 'return' → logprob: -5.134405136108398
    7. ' break' → logprob: -5.384405136108398
    8. ' return' → logprob: -7.759405136108398
    9. ' continue' → logprob: -8.634405136108398
    10. '   ' → logprob: -9.259405136108398

Token 222: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038570962846279144
    2. ':' → logprob: -3.9135708808898926
    3. '               ' → logprob: -4.788570880889893
    4. '                   ' → logprob: -4.788570880889893
    5. ':
' → logprob: -7.538570880889893
    6. ' or' → logprob: -8.66357135772705
    7. '                       ' → logprob: -9.03857135772705
    8. ',' → logprob: -9.41357135772705
    9. '       ' → logprob: -9.66357135772705
    10. ':return' → logprob: -10.03857135772705

Token 223: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10128103941679001
    2. ' l' → logprob: -2.976280927658081
    3. 'False' → logprob: -3.351280927658081
    4. 'True' → logprob: -4.85128116607666
    5. ' True' → logprob: -6.60128116607666
    6. ' False' → logprob: -7.10128116607666
    7. 'n' → logprob: -8.60128116607666
    8. '   ' → logprob: -10.10128116607666
    9. '1' → logprob: -11.35128116607666
    10. '```' → logprob: -11.47628116607666

Token 224: 'cm' (ID: 7871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06658262759447098
    2. ' n' → logprob: -4.191582679748535
    3. '==' → logprob: -4.441582679748535
    4. 'c' → logprob: -4.566582679748535
    5. '>' → logprob: -5.191582679748535
    6. 'e' → logprob: -5.566582679748535
    7. 'cm' → logprob: -5.566582679748535
    8. '=' → logprob: -5.691582679748535
    9. 'imited' → logprob: -5.816582679748535
    10. 'm' → logprob: -6.691582679748535

Token 225: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18130388855934143
    2. '>' → logprob: -1.806303858757019
    3. ' >=' → logprob: -7.681303977966309
    4. ' exceeds' → logprob: -8.556303977966309
    5. ' not' → logprob: -8.681303977966309
    6. '   ' → logprob: -8.681303977966309
    7. ' ' → logprob: -9.431303977966309
    8. '>=' → logprob: -9.431303977966309
    9. 'ex' → logprob: -9.931303977966309
    10. ' *' → logprob: -10.181303977966309

Token 226: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014165272004902363
    2. ' n' → logprob: -4.26416540145874
    3. '```' → logprob: -13.639164924621582
    4. '	n' → logprob: -15.264164924621582
    5. ')n' → logprob: -16.0141658782959
    6. ' ' → logprob: -16.5141658782959
    7. '   ' → logprob: -16.8891658782959
    8. '_n' → logprob: -17.0141658782959
    9. '0' → logprob: -17.2641658782959
    10. ' ' → logprob: -17.3891658782959

Token 227: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08547443896532059
    2. '           ' → logprob: -2.7104744911193848
    3. '               ' → logprob: -4.710474491119385
    4. ':' → logprob: -5.710474491119385
    5. ':
' → logprob: -5.960474491119385
    6. '                       ' → logprob: -8.460474014282227
    7. '                           ' → logprob: -9.460474014282227
    8. ':return' → logprob: -9.835474014282227
    9. 'break' → logprob: -10.210474014282227
    10. ' break' → logprob: -10.710474014282227

Token 228: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011509364703670144
    2. '               ' → logprob: -7.251151084899902
    3. '           ' → logprob: -8.876151084899902
    4. '                       ' → logprob: -9.876151084899902
    5. 'return' → logprob: -9.876151084899902
    6. '                    
' → logprob: -9.876151084899902
    7. ' return' → logprob: -10.126151084899902
    8. '
' → logprob: -10.501151084899902
    9. 'break' → logprob: -10.751151084899902
    10. ' break' → logprob: -11.376151084899902

Token 229: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.001174747827462852
    2. ' break' → logprob: -7.0011749267578125
    3. '                   ' → logprob: -8.501174926757812
    4. 'continue' → logprob: -9.751174926757812
    5. '               ' → logprob: -14.126174926757812
    6. '                       ' → logprob: -14.626174926757812
    7. 'return' → logprob: -14.751174926757812
    8. '	break' → logprob: -15.751174926757812
    9. '   ' → logprob: -17.001174926757812
    10. '           ' → logprob: -17.251174926757812

Token 230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12173870205879211
    2. '
' → logprob: -2.4967386722564697
    3. '        
' → logprob: -4.246738910675049
    4. '  
' → logprob: -5.746738910675049
    5. '                
' → logprob: -5.996738910675049
    6. '    
' → logprob: -6.371738910675049
    7. '               ' → logprob: -6.496738910675049
    8. '<|end|>' → logprob: -6.496738910675049
    9. ' 
' → logprob: -6.621738910675049
    10. ',' → logprob: -6.871738910675049

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06744261831045151
    2. '<|end|>' → logprob: -3.0674426555633545
    3. '        
' → logprob: -5.442442417144775
    4. '               ' → logprob: -5.817442417144775
    5. ' 
' → logprob: -6.567442417144775
    6. '
' → logprob: -6.567442417144775
    7. '```' → logprob: -6.567442417144775
    8. ' else' → logprob: -6.942442417144775
    9. '  
' → logprob: -7.067442417144775
    10. '   ' → logprob: -7.317442417144775

Token 232: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03858209028840065
    2. ' else' → logprob: -3.5385820865631104
    3. ' if' → logprob: -5.6635823249816895
    4. '   ' → logprob: -6.1635823249816895
    5. 'else' (adapté à ' else') → logprob: -6.4135823249816895
    6. '
' → logprob: -8.038581848144531
    7. '        ' → logprob: -8.663581848144531
    8. ' 
' → logprob: -8.788581848144531
    9. '        
' → logprob: -8.788581848144531
    10. '<|end|>' → logprob: -8.788581848144531

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015476270578801632
    2. ':
' → logprob: -4.640476226806641
    3. '           ' → logprob: -5.390476226806641
    4. '       ' → logprob: -7.265476226806641
    5. ' :' → logprob: -7.890476226806641
    6. '{' → logprob: -11.14047622680664
    7. '   ' → logprob: -11.14047622680664
    8. '        ' → logprob: -11.51547622680664
    9. ' :
' → logprob: -11.64047622680664
    10. '         ' → logprob: -12.64047622680664

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001855406299000606
    2. '               ' → logprob: -9.5001859664917
    3. ' res' → logprob: -10.5001859664917
    4. '```' → logprob: -11.2501859664917
    5. ' ' → logprob: -11.5001859664917
    6. '0' → logprob: -11.6251859664917
    7. '       ' → logprob: -11.7501859664917
    8. '            ' → logprob: -11.7501859664917
    9. ' if' → logprob: -11.8751859664917
    10. '        ' → logprob: -12.2501859664917

Token 235: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.1975039392709732
    2. 'cnt' → logprob: -2.4475040435791016
    3. '           ' → logprob: -3.1975040435791016
    4. 'sign' → logprob: -3.9475040435791016
    5. 'if' → logprob: -4.822504043579102
    6. 'multip' → logprob: -5.322504043579102
    7. 'mult' → logprob: -6.072504043579102
    8. 'multiple' → logprob: -6.072504043579102
    9. 'temp' → logprob: -6.197504043579102
    10. '   ' → logprob: -6.322504043579102

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6536613702774048
    2. ' +=' → logprob: -0.9036613702774048
    3. '=' → logprob: -2.7786612510681152
    4. '+=' → logprob: -4.403661251068115
    5. '   ' → logprob: -8.778661727905273
    6. '+' → logprob: -9.028661727905273
    7. ' ' → logprob: -10.153661727905273
    8. '           ' → logprob: -10.528661727905273
    9. '       ' → logprob: -11.528661727905273
    10. '    ' → logprob: -11.528661727905273

Token 237: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07046885043382645
    2. ' n' → logprob: -2.6954689025878906
    3. '   ' → logprob: -7.570468902587891
    4. '(n' → logprob: -12.07046890258789
    5. ' ' → logprob: -12.44546890258789
    6. '	n' → logprob: -12.44546890258789
    7. ' (' → logprob: -13.57046890258789
    8. '    ' → logprob: -14.32046890258789
    9. '  ' → logprob: -14.94546890258789
    10. ' ' → logprob: -15.32046890258789

Token 238: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.05502186715602875
    2. '//' → logprob: -2.9300217628479004
    3. '           ' → logprob: -9.930022239685059
    4. '       ' → logprob: -10.430022239685059
    5. '```' → logprob: -11.055022239685059
    6. '   ' → logprob: -11.430022239685059
    7. ' ' → logprob: -12.180022239685059
    8. '#' → logprob: -12.430022239685059
    9. '//=' → logprob: -12.805022239685059
    10. 'div' → logprob: -12.930022239685059

Token 239: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.8624639324116288e-06
    2. ' l' → logprob: -13.250001907348633
    3. 'lc' → logprob: -18.250001907348633
    4. '	l' → logprob: -21.000001907348633
    5. 'lcd' → logprob: -22.125001907348633
    6. '       ' → logprob: -22.875001907348633
    7. '   ' → logprob: -23.375001907348633
    8. 'lm' → logprob: -23.625001907348633
    9. ' ' → logprob: -24.125001907348633
    10. '_l' → logprob: -24.500001907348633

Token 240: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -5.061676347395405e-05
    2. 'l' → logprob: -10.87505054473877
    3. 'm' → logprob: -11.25005054473877
    4. 'c' → logprob: -11.37505054473877
    5. '   ' → logprob: -12.50005054473877
    6. 'cms' → logprob: -13.62505054473877
    7. 'cmb' → logprob: -14.75005054473877
    8. '       ' → logprob: -14.75005054473877
    9. '```' → logprob: -15.00005054473877
    10. ' cm' → logprob: -15.25005054473877

Token 241: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004184298682957888
    2. '       ' → logprob: -5.504184246063232
    3. '
' → logprob: -10.37918472290039
    4. ',' → logprob: -11.37918472290039
    5. ' if' → logprob: -11.37918472290039
    6. '<|end|>' → logprob: -11.37918472290039
    7. '```' → logprob: -11.37918472290039
    8. '               ' → logprob: -11.50418472290039
    9. '   ' → logprob: -12.50418472290039
    10. '<|end|>' → logprob: -13.12918472290039

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023307785391807556
    2. '       ' → logprob: -3.7733078002929688
    3. '```' → logprob: -10.023307800292969
    4. '
' → logprob: -12.023307800292969
    5. '   ' → logprob: -12.273307800292969
    6. '<|end|>' → logprob: -13.148307800292969
    7. '               ' → logprob: -13.398307800292969
    8. '``' → logprob: -14.023307800292969
    9. '<|end|>' → logprob: -14.273307800292969
    10. '	       ' → logprob: -15.273307800292969

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3678872585296631
    2. 'res' → logprob: -1.617887258529663
    3. '           ' → logprob: -2.367887258529663
    4. ' if' → logprob: -4.492887496948242
    5. ' res' → logprob: -5.492887496948242
    6. '       ' → logprob: -7.617887496948242
    7. '   ' → logprob: -12.117887496948242
    8. '```' → logprob: -13.242887496948242
    9. 'count' → logprob: -13.367887496948242
    10. '               ' → logprob: -13.492887496948242

Token 244: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.3532264232635498
    2. ' bits' → logprob: -1.2282264232635498
    3. '(bits' → logprob: -5.353226661682129
    4. ' (' → logprob: -10.853226661682129
    5. '(' → logprob: -11.478226661682129
    6. '   ' → logprob: -13.228226661682129
    7. 'bit' → logprob: -13.228226661682129
    8. '1' → logprob: -13.353226661682129
    9. ' ' → logprob: -13.853226661682129
    10. '_bits' → logprob: -14.603226661682129

Token 245: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.2200749754119897e-06
    2. 'count' → logprob: -13.125001907348633
    3. '%' → logprob: -16.250001907348633
    4. '_counts' → logprob: -17.250001907348633
    5. 'Count' → logprob: -17.375001907348633
    6. '_COUNT' → logprob: -18.375001907348633
    7. ' count' → logprob: -18.500001907348633
    8. '_' → logprob: -18.875001907348633
    9. '[count' → logprob: -19.000001907348633
    10. '	count' → logprob: -19.375001907348633

Token 246: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4310038387775421
    2. '%' → logprob: -1.0560038089752197
    3. ' &' → logprob: -6.306004047393799
    4. '&' → logprob: -8.18100357055664
    5. ' ' → logprob: -9.80600357055664
    6. ')' → logprob: -9.93100357055664
    7. ' ' → logprob: -9.93100357055664
    8. '<|end|>' → logprob: -10.93100357055664
    9. ' %
' → logprob: -12.30600357055664
    10. '[' → logprob: -12.80600357055664

Token 247: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '```' → logprob: -16.37548828125
    4. '
' → logprob: -16.62548828125
    5. '=' → logprob: -17.37548828125
    6. '   ' → logprob: -17.75048828125
    7. '

' → logprob: -17.87548828125
    8. '==' → logprob: -18.00048828125
    9. '۲' → logprob: -18.12548828125
    10. '  ' → logprob: -18.50048828125

Token 248: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018029935017693788
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -14.7501802444458
    4. '   ' → logprob: -16.500181198120117
    5. '۲' → logprob: -16.625181198120117
    6. '  ' → logprob: -17.312681198120117
    7. '２' → logprob: -17.500181198120117
    8. '٢' → logprob: -18.000181198120117
    9. '
' → logprob: -18.187681198120117
    10. '२' → logprob: -18.312681198120117

Token 249: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10048972070217133
    2. ' ==' → logprob: -2.350489616394043
    3. '==
' → logprob: -8.725489616394043
    4. '1' → logprob: -9.850489616394043
    5. ':' → logprob: -10.225489616394043
    6. ':
' → logprob: -11.350489616394043
    7. '```' → logprob: -11.975489616394043
    8. '===' → logprob: -12.475489616394043
    9. ')==' → logprob: -12.725489616394043
    10. '=' → logprob: -12.725489616394043

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019374389667063951
    2. ' ' → logprob: -6.251937389373779
    3. '0' → logprob: -11.876937866210938
    4. '2' → logprob: -13.376937866210938
    5. '```' → logprob: -15.376937866210938
    6. '==' → logprob: -17.376937866210938
    7. '   ' → logprob: -17.501937866210938
    8. '
' → logprob: -18.001937866210938
    9. ' ==' → logprob: -18.626937866210938
    10. '

' → logprob: -19.251937866210938

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015050210640765727
    2. ' ' → logprob: -8.875150680541992
    3. '0' → logprob: -11.500150680541992
    4. '2' → logprob: -14.875150680541992
    5. '```' → logprob: -16.125150680541992
    6. '
' → logprob: -18.125150680541992
    7. '   ' → logprob: -18.375150680541992
    8. '' → logprob: -19.375150680541992
    9. ''' → logprob: -19.562650680541992
    10. '+' → logprob: -19.750150680541992

Token 252: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38112545013427734
    2. ':
' → logprob: -1.3811254501342773
    3. '               ' → logprob: -3.1311254501342773
    4. '           ' → logprob: -4.506125450134277
    5. ' +=' → logprob: -6.006125450134277
    6. '+' → logprob: -6.131125450134277
    7. '==' → logprob: -6.256125450134277
    8. '+=' → logprob: -6.881125450134277
    9. ' ==' → logprob: -7.131125450134277
    10. '=' → logprob: -7.131125450134277

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006460758158937097
    2. ' +' → logprob: -8.000645637512207
    3. '+' → logprob: -9.000645637512207
    4. '           ' → logprob: -9.625645637512207
    5. '```' → logprob: -10.625645637512207
    6. ' +=' → logprob: -10.750645637512207
    7. ' res' → logprob: -10.875645637512207
    8. '              ' → logprob: -11.125645637512207
    9. '<|end|>' → logprob: -11.750645637512207
    10. '                   ' → logprob: -11.750645637512207

Token 254: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.6059823036193848
    2. ' res' → logprob: -0.8559823036193848
    3. '                   ' → logprob: -3.9809823036193848
    4. '               ' → logprob: -4.730982303619385
    5. '+' → logprob: -6.855982303619385
    6. ' +' → logprob: -6.980982303619385
    7. '                       ' → logprob: -9.980981826782227
    8. '           ' → logprob: -10.730981826782227
    9. '   ' → logprob: -10.980981826782227
    10. '                ' → logprob: -11.105981826782227

Token 255: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.062248315662145615
    2. ' +=' → logprob: -2.8122482299804688
    3. '+' → logprob: -8.187248229980469
    4. '+="' → logprob: -14.062248229980469
    5. ']+=' → logprob: -14.187248229980469
    6. '+=(' → logprob: -14.937248229980469
    7. '+='' → logprob: -15.187248229980469
    8. ' +' → logprob: -15.562248229980469
    9. '=' → logprob: -15.687248229980469
    10. '   ' → logprob: -16.93724822998047

Token 256: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001170225441455841
    2. ' count' → logprob: -6.7511701583862305
    3. ' ' → logprob: -20.626171112060547
    4. '	count' → logprob: -20.626171112060547
    5. '+' → logprob: -21.126171112060547
    6. '(count' → logprob: -21.251171112060547
    7. '$count' → logprob: -21.501171112060547
    8. '
' → logprob: -21.626171112060547
    9. '[count' → logprob: -21.626171112060547
    10. '1' → logprob: -22.001171112060547

Token 257: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003978547174483538
    2. ' else' → logprob: -5.628978729248047
    3. 'else' → logprob: -8.128978729248047
    4. '               ' → logprob: -9.628978729248047
    5. '```' → logprob: -12.253978729248047
    6. '
' → logprob: -12.378978729248047
    7. '<|end|>' → logprob: -13.503978729248047
    8. ' 
' → logprob: -13.503978729248047
    9. '            ' → logprob: -14.003978729248047
    10. '       ' → logprob: -14.378978729248047

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036319077480584383
    2. ' else' → logprob: -5.878632068634033
    3. 'else' → logprob: -7.128632068634033
    4. '               ' → logprob: -11.128631591796875
    5. '       ' → logprob: -12.003631591796875
    6. '```' → logprob: -13.503631591796875
    7. '	       ' → logprob: -13.878631591796875
    8. '   ' → logprob: -14.753631591796875
    9. '		' → logprob: -15.003631591796875
    10. '	else' → logprob: -15.503631591796875

Token 259: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3306826949119568
    2. 'else' (adapté à ' else') → logprob: -1.5806827545166016
    3. ' else' → logprob: -2.5806827545166016
    4. '```' → logprob: -12.830682754516602
    5. '		' → logprob: -13.205682754516602
    6. '       ' → logprob: -13.330682754516602
    7. 'elif' → logprob: -13.705682754516602
    8. '               ' → logprob: -13.830682754516602
    9. '	else' → logprob: -14.455682754516602
    10. '   ' → logprob: -14.955682754516602

Token 260: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1062205359339714
    2. ':' → logprob: -2.3562204837799072
    3. ' -=' → logprob: -6.356220722198486
    4. '              ' → logprob: -6.731220722198486
    5. ':
' → logprob: -6.856220722198486
    6. ' -' → logprob: -7.606220722198486
    7. '                   ' → logprob: -7.981220722198486
    8. '-' → logprob: -8.356220245361328
    9. '<|end|>' → logprob: -8.356220245361328
    10. '                ' → logprob: -8.481220245361328

Token 261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.306760805164231e-05
    2. 'res' → logprob: -12.37501335144043
    3. ' res' → logprob: -13.25001335144043
    4. '-' → logprob: -13.50001335144043
    5. '   ' → logprob: -13.50001335144043
    6. '              ' → logprob: -13.62501335144043
    7. '           ' → logprob: -14.00001335144043
    8. ' ' → logprob: -14.50001335144043
    9. '                ' → logprob: -14.75001335144043
    10. '       ' → logprob: -14.87501335144043

Token 262: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0038025728426873684
    2. '               ' → logprob: -5.75380277633667
    3. ' res' → logprob: -7.50380277633667
    4. '           ' → logprob: -9.753802299499512
    5. '                   ' → logprob: -11.253802299499512
    6. '	res' → logprob: -13.628802299499512
    7. '_res' → logprob: -14.378802299499512
    8. '$res' → logprob: -15.878802299499512
    9. '-res' → logprob: -16.003803253173828
    10. '   ' → logprob: -16.253803253173828

Token 263: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.004703176207840443
    2. '-' → logprob: -5.504703044891357
    3. ' -=' → logprob: -7.379703044891357
    4. '+=' → logprob: -14.504703521728516
    5. '=' → logprob: -15.504703521728516
    6. '```' → logprob: -16.879703521728516
    7. 'subtract' → logprob: -17.379703521728516
    8. ' -' → logprob: -18.629703521728516
    9. ' ' → logprob: -19.379703521728516
    10. 'Subtract' → logprob: -19.379703521728516

Token 264: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0485873706638813
    2. ' count' → logprob: -3.0485873222351074
    3. '(count' → logprob: -18.673587799072266
    4. '	count' → logprob: -18.798587799072266
    5. '[count' → logprob: -19.173587799072266
    6. '_count' → logprob: -20.048587799072266
    7. '$count' → logprob: -20.673587799072266
    8. '1' → logprob: -21.298587799072266
    9. ' ' → logprob: -21.673587799072266
    10. '.count' → logprob: -21.673587799072266

Token 265: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006623993394896388
    2. '
' → logprob: -8.500662803649902
    3. 'return' → logprob: -8.750662803649902
    4. '<|end|>' → logprob: -9.000662803649902
    5. ' return' → logprob: -9.625662803649902
    6. '    
' → logprob: -9.875662803649902
    7. '```' → logprob: -10.875662803649902
    8. '	return' → logprob: -11.125662803649902
    9. '<|end|>' → logprob: -11.375662803649902
    10. '       ' → logprob: -12.500662803649902

Token 266: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.34285274147987366
    2. '   ' → logprob: -2.342852830886841
    3. '<|end|>' → logprob: -3.092852830886841
    4. '```' → logprob: -3.217852830886841
    5. '\' → logprob: -3.217852830886841
    6. ' 
' → logprob: -3.967852830886841
    7. ' return' → logprob: -4.467852592468262
    8. '    
' → logprob: -4.717852592468262
    9. '  
' → logprob: -5.092852592468262
    10. '       ' → logprob: -5.967852592468262

Token 267: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014423794113099575
    2. 'return' (adapté à ' return') → logprob: -4.889423847198486
    3. '
' → logprob: -5.514423847198486
    4. ' return' → logprob: -6.639423847198486
    5. '```' → logprob: -7.514423847198486
    6. '	return' → logprob: -7.764423847198486
    7. '    
' → logprob: -8.014423370361328
    8. '\n' → logprob: -9.139423370361328
    9. '  
' → logprob: -11.764423370361328
    10. '``' → logprob: -12.014423370361328

Token 268: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.061967797577381134
    2. 'res' → logprob: -2.8119678497314453
    3. '0' → logprob: -17.186967849731445
    4. '(res' → logprob: -17.561967849731445
    5. '	res' → logprob: -18.561967849731445
    6. '   ' → logprob: -18.811967849731445
    7. ' ' → logprob: -19.186967849731445
    8. '_res' → logprob: -19.686967849731445
    9. ' ' → logprob: -20.186967849731445
    10. '$res' → logprob: -20.186967849731445

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002115404698997736
    2. 'n' → logprob: -7.252115249633789
    3. '```' → logprob: -7.502115249633789
    4. '#' → logprob: -7.752115249633789
    5. '<|end|>' → logprob: -9.002115249633789
    6. 'import' → logprob: -9.252115249633789
    7. '(n' → logprob: -10.002115249633789
    8. 'for' → logprob: -10.002115249633789
    9. '\' → logprob: -10.377115249633789
    10. '.' → logprob: -11.127115249633789

Token 271: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.03357907384634018
    2. ' solve' → logprob: -3.658579111099243
    3. 'main' → logprob: -5.533578872680664
    4. ' gcd' → logprob: -6.408578872680664
    5. 'solve' → logprob: -7.158578872680664
    6. ' count' → logprob: -8.283578872680664
    7. ' find' → logprob: -8.408578872680664
    8. ' factor' → logprob: -9.408578872680664
    9. ' prime' → logprob: -9.658578872680664
    10. ' factorial' → logprob: -10.533578872680664

Token 272: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002270198310725391
    2. '():
' → logprob: -8.500226974487305
    3. ' ():' → logprob: -11.500226974487305
    4. '(' → logprob: -11.625226974487305
    5. '()' → logprob: -12.875226974487305
    6. '():
' → logprob: -14.500226974487305
    7. '_' → logprob: -14.625226974487305
    8. ':' → logprob: -15.500226974487305
    9. '():

' → logprob: -15.750226974487305
    10. '()>' → logprob: -15.875226974487305

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12369982898235321
    2. ' n' → logprob: -3.123699903488159
    3. '(n' → logprob: -3.248699903488159
    4. 'n' → logprob: -3.498699903488159
    5. '```' → logprob: -7.12369966506958
    6. ' readline' → logprob: -8.373700141906738
    7. '()' → logprob: -8.498700141906738
    8. ' ' → logprob: -8.498700141906738
    9. '	n' → logprob: -8.498700141906738
    10. '<|end|>' → logprob: -8.498700141906738

Token 274: ' #' (ID: 1069)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8410842418670654
    2. ' t' → logprob: -1.0910842418670654
    3. 'n' → logprob: -1.9660842418670654
    4. ' n' → logprob: -2.9660842418670654
    5. ' T' → logprob: -3.9660842418670654
    6. '   ' → logprob: -4.4660844802856445
    7. 'T' → logprob: -4.5910844802856445
    8. 'q' → logprob: -7.3410844802856445
    9. ' q' → logprob: -9.091084480285645
    10. 'import' → logprob: -11.716084480285645

Token 275: ' For' (ID: 2214)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9678186774253845
    2. '   ' → logprob: -1.8428187370300293
    3. 'n' → logprob: -2.0928187370300293
    4. ' t' → logprob: -2.2178187370300293
    5. ' input' → logprob: -2.3428187370300293
    6. 't' → logprob: -2.8428187370300293
    7. 'input' → logprob: -3.0928187370300293
    8. ' import' → logprob: -4.967818737030029
    9. 'import' → logprob: -4.967818737030029
    10. ' line' → logprob: -5.217818737030029

Token 276: ' each' (ID: 2454)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6008950471878052
    2. ' _' → logprob: -0.8508950471878052
    3. ' t' → logprob: -4.725894927978516
    4. '_' → logprob: -5.350894927978516
    5. ' ' → logprob: -5.350894927978516
    6. '_line' → logprob: -5.600894927978516
    7. ' sys' → logprob: -7.350894927978516
    8. 'line' → logprob: -7.600894927978516
    9. ' n' → logprob: -7.850894927978516
    10. ' p' → logprob: -8.225894927978516

Token 277: ' test' (ID: 1746)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.018729830160737038
    2. 'line' → logprob: -4.2687296867370605
    3. ' _' → logprob: -6.6437296867370605
    4. ' test' → logprob: -6.8937296867370605
    5. ' t' → logprob: -7.6437296867370605
    6. '_line' → logprob: -7.6437296867370605
    7. ' q' → logprob: -7.8937296867370605
    8. '_' → logprob: -8.018730163574219
    9. ' case' → logprob: -8.643730163574219
    10. ' n' → logprob: -9.393730163574219

Token 278: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.8466842770576477
    2. ' case' → logprob: -1.221684217453003
    3. '   ' → logprob: -1.346684217453003
    4. '_case' → logprob: -4.846684455871582
    5. ' input' → logprob: -6.596684455871582
    6. ' line' → logprob: -6.596684455871582
    7. ' ' → logprob: -6.721684455871582
    8. '  ' → logprob: -6.846684455871582
    9. ' =' → logprob: -7.346684455871582
    10. '    ' → logprob: -7.471684455871582

Token 279: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006979000172577798
    2. ':' → logprob: -8.00069808959961
    3. ',' → logprob: -8.12569808959961
    4. 'n' → logprob: -11.00069808959961
    5. '(n' → logprob: -11.75069808959961
    6. '```' → logprob: -11.75069808959961
    7. ' line' → logprob: -12.25069808959961
    8. 'import' → logprob: -12.37569808959961
    9. '<|end|>' → logprob: -13.00069808959961
    10. '       ' → logprob: -13.00069808959961

Token 280: ' read' (ID: 1729)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.11766437441110611
    2. '   ' → logprob: -2.367664337158203
    3. 't' → logprob: -4.867664337158203
    4. ' n' → logprob: -4.992664337158203
    5. ' line' → logprob: -6.867664337158203
    6. 'n' → logprob: -7.367664337158203
    7. ' T' → logprob: -7.492664337158203
    8. ' q' → logprob: -8.117664337158203
    9. '    ' → logprob: -9.117664337158203
    10. ' tc' → logprob: -9.617664337158203

Token 281: ' n' (ID: 297)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.40019506216049194
    2. 't' → logprob: -1.9001951217651367
    3. '   ' → logprob: -2.0251951217651367
    4. 'line' → logprob: -4.275195121765137
    5. ' line' → logprob: -4.525195121765137
    6. 'int' → logprob: -5.025195121765137
    7. ' T' → logprob: -5.025195121765137
    8. ' the' → logprob: -5.775195121765137
    9. ' ' → logprob: -6.775195121765137
    10. '1' → logprob: -6.775195121765137

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05342021584510803
    2. '   ' → logprob: -3.803420305252075
    3. ' =' → logprob: -3.928420305252075
    4. ' and' → logprob: -5.928420066833496
    5. '():' → logprob: -5.928420066833496
    6. '()' → logprob: -6.678420066833496
    7. ' ,' → logprob: -6.928420066833496
    8. '=' → logprob: -7.053420066833496
    9. '(),' → logprob: -7.428420066833496
    10. ':' → logprob: -7.928420066833496

Token 283: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1106712818145752
    2. ' k' → logprob: -1.3606712818145752
    3. ' p' → logprob: -1.8606712818145752
    4. 'p' → logprob: -1.8606712818145752
    5. 'm' → logprob: -3.360671281814575
    6. ' m' → logprob: -3.735671281814575
    7. ' t' → logprob: -4.610671043395996
    8. '   ' → logprob: -4.610671043395996
    9. ' q' → logprob: -4.735671043395996
    10. 'q' → logprob: -4.735671043395996

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40936851501464844
    2. '   ' → logprob: -1.6593685150146484
    3. '():' → logprob: -2.4093685150146484
    4. '()' → logprob: -3.6593685150146484
    5. ' and' → logprob: -4.159368515014648
    6. ':' → logprob: -4.409368515014648
    7. '(),' → logprob: -7.034368515014648
    8. 'and' → logprob: -8.159368515014648
    9. '():
' → logprob: -8.659368515014648
    10. '<|end|>' → logprob: -8.784368515014648

Token 285: ' then' (ID: 1815)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07195433229207993
    2. ' p' → logprob: -3.0719542503356934
    3. 'k' → logprob: -4.196954250335693
    4. 'q' → logprob: -5.321954250335693
    5. ' k' → logprob: -7.071954250335693
    6. 'and' → logprob: -7.946954250335693
    7. ' and' → logprob: -8.196954727172852
    8. '   ' → logprob: -8.321954727172852
    9. ' q' → logprob: -8.321954727172852
    10. 'arr' → logprob: -8.696954727172852

Token 286: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.16139177978038788
    2. 'p' → logprob: -1.9113917350769043
    3. '   ' → logprob: -6.911391735076904
    4. '_p' → logprob: -11.223892211914062
    5. '	p' → logprob: -11.473892211914062
    6. ' ' → logprob: -11.723892211914062
    7. 'plist' → logprob: -11.786392211914062
    8. 's' → logprob: -11.786392211914062
    9. '    ' → logprob: -11.848892211914062
    10. ' a' → logprob: -11.973892211914062

Token 287: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6025098562240601
    2. '(' → logprob: -2.3525099754333496
    3. '_list' → logprob: -2.7275099754333496
    4. '   ' → logprob: -3.1025099754333496
    5. '():' → logprob: -3.2275099754333496
    6. '()' → logprob: -3.2275099754333496
    7. ',' → logprob: -3.2275099754333496
    8. ':' → logprob: -3.4775099754333496
    9. 's' → logprob: -3.6025099754333496
    10. '[]' → logprob: -4.10250997543335

Token 288: ',' (ID: 11)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.09851913154125214
    2. '   ' → logprob: -3.3485190868377686
    3. '():
' → logprob: -3.5985190868377686
    4. ':' → logprob: -3.5985190868377686
    5. '()' → logprob: -5.598519325256348
    6. ',' → logprob: -9.848519325256348
    7. ':
' → logprob: -9.973519325256348
    8. ' and' → logprob: -10.598519325256348
    9. '()
' → logprob: -10.598519325256348
    10. '```' → logprob: -10.973519325256348

Token 289: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44230809807777405
    2. 't' → logprob: -1.1923080682754517
    3. 'q' → logprob: -3.692308187484741
    4. ' t' → logprob: -3.942308187484741
    5. 'and' → logprob: -5.442307949066162
    6. ' and' → logprob: -6.567307949066162
    7. ' q' → logprob: -6.817307949066162
    8. 'k' → logprob: -7.317307949066162
    9. '```' → logprob: -8.06730842590332
    10. 'T' → logprob: -8.31730842590332

Token 290: ' compute' (ID: 23864)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.18464386463165283
    2. ' q' → logprob: -2.1846437454223633
    3. 'k' → logprob: -3.1846437454223633
    4. ' k' → logprob: -5.809643745422363
    5. 'x' → logprob: -6.059643745422363
    6. '   ' → logprob: -6.059643745422363
    7. 't' → logprob: -6.309643745422363
    8. 'query' → logprob: -6.809643745422363
    9. ' queries' → logprob: -6.809643745422363
    10. 'queries' → logprob: -7.309643745422363

Token 291: ' expected' (ID: 5930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004832969047129154
    2. ' t' → logprob: -6.879832744598389
    3. ' n' → logprob: -7.379832744598389
    4. ' line' → logprob: -7.379832744598389
    5. 'import' → logprob: -7.379832744598389
    6. '```' → logprob: -7.379832744598389
    7. 't' → logprob: -7.504832744598389
    8. 'n' → logprob: -8.379833221435547
    9. '
' → logprob: -8.879833221435547
    10. 'input' → logprob: -9.254833221435547

Token 292: ' revenue' (ID: 17981)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.8963356614112854
    2. 'value' → logprob: -1.2713356018066406
    3. ' value' → logprob: -1.6463356018066406
    4. '_' → logprob: -3.5213356018066406
    5. '_output' → logprob: -4.021335601806641
    6. '_result' → logprob: -4.021335601806641
    7. '_m' → logprob: -4.521335601806641
    8. 'result' → logprob: -5.146335601806641
    9. ' result' → logprob: -5.396335601806641
    10. ' output' → logprob: -5.771335601806641

Token 293: '
' (ID: 198)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.022749997675418854
    2. '   ' → logprob: -4.397749900817871
    3. '():
' → logprob: -4.772749900817871
    4. '()' → logprob: -6.772749900817871
    5. ':' → logprob: -7.522749900817871
    6. 'def' → logprob: -11.522749900817871
    7. '```' → logprob: -11.647749900817871
    8. 'import' → logprob: -12.147749900817871
    9. '(' → logprob: -12.397749900817871
    10. '(n' → logprob: -12.522749900817871

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005021584220230579
    2. 'def' → logprob: -8.250502586364746
    3. '    
' → logprob: -9.500502586364746
    4. '
' → logprob: -9.625502586364746
    5. '```' → logprob: -9.625502586364746
    6. 'import' → logprob: -10.625502586364746
    7. '(n' → logprob: -12.625502586364746
    8. '       ' → logprob: -13.625502586364746
    9. '(' → logprob: -13.750502586364746
    10. ':' → logprob: -13.875502586364746

Token 295: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04330528900027275
    2. ' t' → logprob: -3.2933053970336914
    3. 't' → logprob: -5.668305397033691
    4. ' n' → logprob: -7.293305397033691
    5. ' T' → logprob: -7.668305397033691
    6. ' line' → logprob: -8.543305397033691
    7. 'n' → logprob: -8.668305397033691
    8. 'import' → logprob: -9.418305397033691
    9. ' import' → logprob: -9.793305397033691
    10. ' while' → logprob: -10.168305397033691

Token 296: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12696410715579987
    2. ' True' → logprob: -2.1269640922546387
    3. '(True' → logprob: -10.626964569091797
    4. '1' → logprob: -11.876964569091797
    5. '   ' → logprob: -12.501964569091797
    6. '=True' → logprob: -14.376964569091797
    7. 'true' → logprob: -14.876964569091797
    8. ' ' → logprob: -16.251964569091797
    9. 'line' → logprob: -17.001964569091797
    10. '
' → logprob: -17.001964569091797

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19835801422595978
    2. '   ' → logprob: -2.6983580589294434
    3. '():' → logprob: -3.0733580589294434
    4. ':
' → logprob: -3.4483580589294434
    5. '       ' → logprob: -3.9483580589294434
    6. ',' → logprob: -4.698358058929443
    7. '():
' → logprob: -5.573358058929443
    8. '(' → logprob: -6.698358058929443
    9. ' (' → logprob: -8.073357582092285
    10. ' :' → logprob: -8.823357582092285

Token 298: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11969210207462311
    2. '   ' → logprob: -2.244692087173462
    3. ' line' → logprob: -5.119692325592041
    4. 'line' → logprob: -7.369692325592041
    5. '    ' → logprob: -9.369691848754883
    6. ' try' → logprob: -9.994691848754883
    7. 'try' → logprob: -10.244691848754883
    8. '```' → logprob: -11.369691848754883
    9. '(line' → logprob: -11.994691848754883
    10. ' ' → logprob: -12.119691848754883

Token 299: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.002914596116170287
    2. ' line' → logprob: -6.0029144287109375
    3. '   ' → logprob: -7.7529144287109375
    4. 's' → logprob: -12.252914428710938
    5. '	line' → logprob: -12.752914428710938
    6. 'try' → logprob: -13.627914428710938
    7. '_line' → logprob: -15.877914428710938
    8. 'raw' → logprob: -16.252914428710938
    9. 'l' → logprob: -16.627914428710938
    10. '       ' → logprob: -16.752914428710938

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407814860343933
    2. '=' → logprob: -0.9740781784057617
    3. '=line' → logprob: -14.349078178405762
    4. 's' → logprob: -15.349078178405762
    5. '   ' → logprob: -15.474078178405762
    6. '=sys' → logprob: -17.099077224731445
    7. ' ' → logprob: -17.224077224731445
    8. '＝' → logprob: -17.724077224731445
    9. '=input' → logprob: -17.974077224731445
    10. ' =
' → logprob: -18.349077224731445

Token 301: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.091670460999012
    2. ' input' → logprob: -2.591670513153076
    3. 'sys' → logprob: -4.591670513153076
    4. ' sys' → logprob: -5.966670513153076
    5. 'import' → logprob: -15.216670036315918
    6. '=input' → logprob: -15.591670036315918
    7. '=sys' → logprob: -16.591670989990234
    8. '<input' → logprob: -17.091670989990234
    9. '_input' → logprob: -17.216670989990234
    10. '(input' → logprob: -17.216670989990234

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6869444251060486
    2. ' =' → logprob: -1.3119444847106934
    3. '=' → logprob: -1.5619444847106934
    4. '=line' → logprob: -4.436944484710693
    5. 'line' → logprob: -5.936944484710693
    6. ' line' → logprob: -6.811944484710693
    7. '   ' → logprob: -6.811944484710693
    8. '(line' → logprob: -7.186944484710693
    9. 'if' → logprob: -9.561944007873535
    10. 'while' → logprob: -9.686944007873535

Token 303: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06466278433799744
    2. ' line' → logprob: -2.9396626949310303
    3. '   ' → logprob: -4.814662933349609
    4. 'try' → logprob: -7.439662933349609
    5. '=line' → logprob: -7.689662933349609
    6. '       ' → logprob: -8.43966293334961
    7. '=' → logprob: -8.43966293334961
    8. '(line' → logprob: -9.56466293334961
    9. ' try' → logprob: -11.06466293334961
    10. ' =' → logprob: -11.06466293334961

Token 304: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.13241997361183167
    2. ' line' → logprob: -2.132420063018799
    3. ' not' → logprob: -5.632420063018799
    4. 'not' → logprob: -6.632420063018799
    5. '(line' → logprob: -8.13241958618164
    6. ' True' → logprob: -8.50741958618164
    7. 'True' → logprob: -9.75741958618164
    8. 'len' → logprob: -10.88241958618164
    9. '(not' → logprob: -13.00741958618164
    10. '#line' → logprob: -14.00741958618164

Token 305: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.1104583665728569
    2. '==' → logprob: -2.9854583740234375
    3. '=' → logprob: -3.1104583740234375
    4. ' ==' → logprob: -5.2354583740234375
    5. ' =' → logprob: -5.8604583740234375
    6. '.' → logprob: -7.4854583740234375
    7. '().' → logprob: -7.9854583740234375
    8. ':=' → logprob: -8.110458374023438
    9. 'strip' → logprob: -10.360458374023438
    10. ' :=' → logprob: -10.985458374023438

Token 306: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.44432324171066284
    2. '()==' → logprob: -1.3193233013153076
    3. '==' → logprob: -2.4443233013153076
    4. ' ==' → logprob: -6.0693230628967285
    5. '()!=' → logprob: -6.8193230628967285
    6. '=' → logprob: -7.4443230628967285
    7. '():' → logprob: -7.5693230628967285
    8. '()<' → logprob: -10.444323539733887
    9. '():
' → logprob: -10.569323539733887
    10. '!=' → logprob: -10.694323539733887

Token 307: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.015618308447301388
    2. ' ==' → logprob: -4.765618324279785
    3. '()==' → logprob: -5.015618324279785
    4. '()' → logprob: -8.515618324279785
    5. '=' → logprob: -8.890618324279785
    6. '===' → logprob: -12.265618324279785
    7. '!=' → logprob: -13.765618324279785
    8. ')==' → logprob: -14.640618324279785
    9. '=='' → logprob: -14.890618324279785
    10. ' =' → logprob: -15.015618324279785

Token 308: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2519303858280182
    2. ''' → logprob: -1.5019303560256958
    3. '"":' → logprob: -14.251930236816406
    4. '''
' → logprob: -15.626930236816406
    5. ''''' → logprob: -15.876930236816406
    6. '""' → logprob: -15.876930236816406
    7. ''',' → logprob: -16.001930236816406
    8. '''.' → logprob: -16.126930236816406
    9. ' '':
' → logprob: -17.001930236816406
    10. ''s' → logprob: -18.001930236816406

Token 309: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06002286076545715
    2. 'line' → logprob: -4.310022830963135
    3. '           ' → logprob: -4.310022830963135
    4. '=' → logprob: -4.560022830963135
    5. ' line' → logprob: -4.560022830963135
    6. ':' → logprob: -5.310022830963135
    7. '=line' → logprob: -6.560022830963135
    8. '(line' → logprob: -6.685022830963135
    9. ' =' → logprob: -6.935022830963135
    10. ':
' → logprob: -7.810022830963135

Token 310: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0007150543970055878
    2. ' line' → logprob: -7.250715255737305
    3. 'try' → logprob: -12.875715255737305
    4. 'l' → logprob: -13.250715255737305
    5. '           ' → logprob: -14.625715255737305
    6. '	line' → logprob: -16.375715255737305
    7. '=line' → logprob: -16.625715255737305
    8. '       ' → logprob: -16.875715255737305
    9. 's' → logprob: -17.250715255737305
    10. 'n' → logprob: -17.375715255737305

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.100258007645607
    2. ' =' → logprob: -2.3502581119537354
    3. '=line' → logprob: -10.475257873535156
    4. '=sys' → logprob: -11.600257873535156
    5. '<|end|>' → logprob: -13.225257873535156
    6. '.readline' → logprob: -13.600257873535156
    7. '()' → logprob: -13.600257873535156
    8. 's' → logprob: -13.850257873535156
    9. '=input' → logprob: -14.100257873535156
    10. '.' → logprob: -14.100257873535156

Token 312: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.40395811200141907
    2. 'sys' → logprob: -1.1539580821990967
    3. ' sys' → logprob: -4.653958320617676
    4. ' input' → logprob: -4.903958320617676
    5. 'stdin' → logprob: -14.278958320617676
    6. 'import' → logprob: -16.02895736694336
    7. '=sys' → logprob: -16.77895736694336
    8. '(sys' → logprob: -17.15395736694336
    9. '=input' → logprob: -17.65395736694336
    10. 'read' → logprob: -18.90395736694336

Token 313: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004772341810166836
    2. 'stdin' → logprob: -5.379772186279297
    3. '.stdout' → logprob: -9.129772186279297
    4. '.std' → logprob: -11.004772186279297
    5. 'in' → logprob: -11.504772186279297
    6. '.' → logprob: -12.004772186279297
    7. '```' → logprob: -12.504772186279297
    8. '(stdin' → logprob: -12.879772186279297
    9. ' stdin' → logprob: -13.379772186279297
    10. '.readline' → logprob: -14.504772186279297

Token 314: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.2664456789934775e-06
    2. '.stdin' → logprob: -13.625000953674316
    3. '.' → logprob: -17.750001907348633
    4. '.read' → logprob: -18.000001907348633
    5. ' readline' → logprob: -18.250001907348633
    6. '.readlines' → logprob: -18.625001907348633
    7. 'stdin' → logprob: -19.500001907348633
    8. 'read' → logprob: -19.750001907348633
    9. '.stdout' → logprob: -20.125001907348633
    10. '```' → logprob: -20.625001907348633

Token 315: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028355419635772705
    2. '()
' → logprob: -6.002835750579834
    3. '().' → logprob: -8.127835273742676
    4. '())' → logprob: -11.502835273742676
    5. '(' → logprob: -11.627835273742676
    6. '(),' → logprob: -11.877835273742676
    7. '();' → logprob: -12.002835273742676
    8. '()\' → logprob: -12.252835273742676
    9. '<|end|>' → logprob: -12.377835273742676
    10. '()<' → logprob: -12.502835273742676

Token 316: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6326625943183899
    2. '       ' → logprob: -0.7576625943183899
    3. '   ' → logprob: -10.757662773132324
    4. '
' → logprob: -11.507662773132324
    5. '<|end|>' → logprob: -12.132662773132324
    6. ' if' → logprob: -12.257662773132324
    7. ',' → logprob: -12.382662773132324
    8. '               ' → logprob: -12.632662773132324
    9. '        
' → logprob: -13.007662773132324
    10. '```' → logprob: -13.257662773132324

Token 317: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000995295005850494
    2. '       ' → logprob: -7.50099515914917
    3. 'if' (adapté à ' if') → logprob: -8.125995635986328
    4. ' if' → logprob: -8.875995635986328
    5. '
' → logprob: -12.875995635986328
    6. 'import' → logprob: -13.500995635986328
    7. '	       ' → logprob: -14.625995635986328
    8. '		' → logprob: -14.875995635986328
    9. '   ' → logprob: -14.875995635986328
    10. '               ' → logprob: -15.750995635986328

Token 318: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3787960708141327
    2. 'line' → logprob: -1.878796100616455
    3. 'not' → logprob: -1.878796100616455
    4. ' line' → logprob: -4.628796100616455
    5. '#line' → logprob: -15.253795623779297
    6. ' ' → logprob: -17.128795623779297
    7. '	line' → logprob: -17.253795623779297
    8. '(line' → logprob: -17.378795623779297
    9. '	not' → logprob: -18.003795623779297
    10. '!' → logprob: -18.253795623779297

Token 319: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22573740780353546
    2. ' ==' → logprob: -1.600737452507019
    3. ' is' → logprob: -9.350737571716309
    4. '.strip' → logprob: -9.600737571716309
    5. '===' → logprob: -10.100737571716309
    6. ')==' → logprob: -10.475737571716309
    7. '()==' → logprob: -10.725737571716309
    8. '=' → logprob: -10.975737571716309
    9. '=='' → logprob: -11.225737571716309
    10. '```' → logprob: -11.725737571716309

Token 320: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0019474374130368233
    2. ''' → logprob: -6.251947402954102
    3. '""' → logprob: -11.251947402954102
    4. ' ''' → logprob: -13.251947402954102
    5. ''\' → logprob: -13.876947402954102
    6. ''''' → logprob: -13.876947402954102
    7. '"":' → logprob: -14.376947402954102
    8. ' '':
' → logprob: -14.626947402954102
    9. '"' → logprob: -14.751947402954102
    10. '''.' → logprob: -15.626947402954102

Token 321: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.709308167453855e-05
    2. '           ' → logprob: -10.125086784362793
    3. 'return' → logprob: -10.750086784362793
    4. ':return' → logprob: -11.875086784362793
    5. ' return' → logprob: -12.375086784362793
    6. '                       ' → logprob: -12.625086784362793
    7. '                   ' → logprob: -13.125086784362793
    8. '```' → logprob: -13.750086784362793
    9. 'break' → logprob: -14.000086784362793
    10. '<|end|>' → logprob: -14.125086784362793

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0387316457927227
    2. ' return' → logprob: -3.288731575012207
    3. '               ' → logprob: -7.288731575012207
    4. 'break' → logprob: -13.038731575012207
    5. '           ' → logprob: -13.288731575012207
    6. '	return' → logprob: -13.413731575012207
    7. '                   ' → logprob: -14.163731575012207
    8. ':return' → logprob: -14.913731575012207
    9. '   ' → logprob: -16.288732528686523
    10. '                       ' → logprob: -16.413732528686523

Token 323: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03512611240148544
    2. '
' → logprob: -3.410126209259033
    3. '\n' → logprob: -7.535126209259033
    4. '<|end|>' → logprob: -7.535126209259033
    5. '        
' → logprob: -8.035125732421875
    6. '   ' → logprob: -10.285125732421875
    7. '           ' → logprob: -11.660125732421875
    8. '
' → logprob: -12.035125732421875
    9. '<|end|>' → logprob: -12.035125732421875
    10. 'n' → logprob: -12.535125732421875

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004779784067068249
    2. '<|end|>' → logprob: -8.25047779083252
    3. '
' → logprob: -9.00047779083252
    4. '        
' → logprob: -9.75047779083252
    5. '\n' → logprob: -11.62547779083252
    6. ',' → logprob: -12.25047779083252
    7. '   ' → logprob: -12.37547779083252
    8. '<|end|>' → logprob: -12.75047779083252
    9. '           ' → logprob: -12.87547779083252
    10. '```' → logprob: -12.87547779083252

Token 325: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23028460144996643
    2. ' n' → logprob: -1.855284571647644
    3. 'n' (adapté à ' n') → logprob: -3.2302846908569336
    4. ' parts' → logprob: -4.730284690856934
    5. 'parts' → logprob: -7.355284690856934
    6. 'tokens' → logprob: -8.605284690856934
    7. ' tokens' → logprob: -10.355284690856934
    8. '	n' → logprob: -11.355284690856934
    9. 't' → logprob: -11.605284690856934
    10. '	' → logprob: -12.355284690856934

Token 326: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012093995464965701
    2. '=' → logprob: -7.001209259033203
    3. ' =' → logprob: -8.376209259033203
    4. ' ,' → logprob: -10.376209259033203
    5. ',n' → logprob: -11.001209259033203
    6. ',m' → logprob: -11.376209259033203
    7. ',p' → logprob: -13.626209259033203
    8. ',
' → logprob: -13.876209259033203
    9. '   ' → logprob: -14.126209259033203
    10. ',num' → logprob: -14.376209259033203

Token 327: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1128595769405365
    2. ' =' → logprob: -2.2378594875335693
    3. '=line' → logprob: -10.737859725952148
    4. ',' → logprob: -11.987859725952148
    5. ')' → logprob: -12.362859725952148
    6. 's' → logprob: -13.987859725952148
    7. '[' → logprob: -14.362859725952148
    8. 'line' → logprob: -14.737859725952148
    9. ' ' → logprob: -14.987859725952148
    10. '=input' → logprob: -15.112859725952148

Token 328: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5901315212249756
    2. 'list' → logprob: -0.8401315212249756
    3. ' line' → logprob: -4.840131759643555
    4. ' list' → logprob: -5.090131759643555
    5. '[line' → logprob: -10.590131759643555
    6. 'map' → logprob: -13.590131759643555
    7. 'tuple' → logprob: -14.215131759643555
    8. '=line' → logprob: -14.590131759643555
    9. '[' → logprob: -15.090131759643555
    10. '(line' → logprob: -15.340131759643555

Token 329: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.013355037197470665
    2. '.split' → logprob: -4.388355255126953
    3. '.' → logprob: -7.388355255126953
    4. '.rstrip' → logprob: -8.513355255126953
    5. '().' → logprob: -11.013355255126953
    6. ' .' → logprob: -11.888355255126953
    7. '.readline' → logprob: -13.638355255126953
    8. 'strip' → logprob: -14.763355255126953
    9. '.chomp' → logprob: -15.263355255126953
    10. '.trim' → logprob: -15.513355255126953

Token 330: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002490045502781868
    2. '.split' → logprob: -6.002490043640137
    3. '()' → logprob: -11.252490043640137
    4. '.' → logprob: -14.127490043640137
    5. ' .' → logprob: -15.377490043640137
    6. ' ().' → logprob: -16.127490997314453
    7. 'split' → logprob: -16.252490997314453
    8. '   ' → logprob: -17.502490997314453
    9. ').' → logprob: -17.877490997314453
    10. '().'' → logprob: -18.002490997314453

Token 331: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. 'spl' → logprob: -19.25
    3. ' split' → logprob: -19.5
    4. '.split' → logprob: -22.75
    5. '(split' → logprob: -23.375
    6. '_split' → logprob: -23.5
    7. 'strip' → logprob: -23.625
    8. 'sp' → logprob: -25.5
    9. 'plit' → logprob: -26.0
    10. 'rstrip' → logprob: -26.125

Token 332: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023609742522239685
    2. '('' → logprob: -4.398609638214111
    3. '(' → logprob: -4.523609638214111
    4. '()
' → logprob: -9.64861011505127
    5. '()]' → logprob: -10.64861011505127
    6. '("' → logprob: -11.14861011505127
    7. '())' → logprob: -11.27361011505127
    8. '()[' → logprob: -11.39861011505127
    9. '(n' → logprob: -11.52361011505127
    10. '(',' → logprob: -11.77361011505127

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4463225305080414
    2. '[' → logprob: -1.0713225603103638
    3. '[n' → logprob: -5.071322441101074
    4. '   ' → logprob: -5.821322441101074
    5. 'n' → logprob: -6.571322441101074
    6. '[]' → logprob: -6.946322441101074
    7. '=' → logprob: -7.321322441101074
    8. '<|end|>' → logprob: -7.321322441101074
    9. '[
' → logprob: -7.571322441101074
    10. ' n' → logprob: -7.571322441101074

Token 334: ' if' (ID: 538)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004068395064678043
    2. ' n' → logprob: -8.250407218933105
    3. 'if' (adapté à ' if') → logprob: -9.125407218933105
    4. ' if' → logprob: -10.500407218933105
    5. '       ' → logprob: -11.750407218933105
    6. '	n' → logprob: -14.625407218933105
    7. '```' → logprob: -14.750407218933105
    8. '   ' → logprob: -14.875407218933105
    9. '        
' → logprob: -16.37540626525879
    10. '\n' → logprob: -18.00040626525879

Token 335: ' len' (ID: 4631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6295302510261536
    2. 'n' → logprob: -1.6295301914215088
    3. 'len' → logprob: -1.8795301914215088
    4. 'not' → logprob: -2.379530191421509
    5. ' n' → logprob: -4.129530429840088
    6. ' len' → logprob: -4.629530429840088
    7. '   ' → logprob: -11.12952995300293
    8. 'n't' → logprob: -11.37952995300293
    9. '(len' → logprob: -13.25452995300293
    10. ' ' → logprob: -13.87952995300293

Token 336: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014364237431436777
    2. 'n' → logprob: -6.751436233520508
    3. '<n' → logprob: -8.376436233520508
    4. '==' → logprob: -10.626436233520508
    5. ' n' → logprob: -12.251436233520508
    6. ' ==' → logprob: -13.501436233520508
    7. '(line' → logprob: -14.126436233520508
    8. '(' → logprob: -14.251436233520508
    9. '()' → logprob: -14.251436233520508
    10. ' <' → logprob: -14.501436233520508

Token 337: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.00414761109277606
    2. ')' → logprob: -6.004147529602051
    3. '_n' → logprob: -6.629147529602051
    4. '==' → logprob: -9.37914752960205
    5. ' ==' → logprob: -9.75414752960205
    6. '[' → logprob: -10.12914752960205
    7. '(n' → logprob: -10.25414752960205
    8. '(line' → logprob: -10.87914752960205
    9. ')==' → logprob: -11.00414752960205
    10. ' _' → logprob: -11.37914752960205

Token 338: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.969075620174408
    2. '==' → logprob: -1.2190756797790527
    3. ' ==' → logprob: -1.2190756797790527
    4. '<' → logprob: -4.344075679779053
    5. ' <' → logprob: -4.844075679779053
    6. ')==' → logprob: -5.719075679779053
    7. ' !=' → logprob: -6.719075679779053
    8. ')<' → logprob: -6.719075679779053
    9. '()<' → logprob: -7.344075679779053
    10. '[' → logprob: -7.469075679779053

Token 339: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01349877193570137
    2. '==' → logprob: -4.638498783111572
    3. ' <' → logprob: -5.888498783111572
    4. ' ==' → logprob: -7.638498783111572
    5. '!=' → logprob: -8.138498306274414
    6. ' !=' → logprob: -9.888498306274414
    7. '<n' → logprob: -10.263498306274414
    8. '[' → logprob: -10.388498306274414
    9. '<int' → logprob: -10.513498306274414
    10. '<len' → logprob: -11.388498306274414

Token 340: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.016045041382312775
    2. ' ' → logprob: -4.141045093536377
    3. '1' → logprob: -11.516044616699219
    4. '3' → logprob: -14.266044616699219
    5. '=' → logprob: -16.89104461669922
    6. ')' → logprob: -17.26604461669922
    7. '0' → logprob: -18.14104461669922
    8. '```' → logprob: -18.14104461669922
    9. '   ' → logprob: -18.76604461669922
    10. '4' → logprob: -19.01604461669922

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. '1' → logprob: -12.000008583068848
    3. ' ' → logprob: -13.000008583068848
    4. '3' → logprob: -17.75000762939453
    5. '```' → logprob: -19.50000762939453
    6. '   ' → logprob: -20.87500762939453
    7. '=' → logprob: -21.00000762939453
    8. ')' → logprob: -21.50000762939453
    9. '	' → logprob: -22.00000762939453
    10. '２' → logprob: -22.75000762939453

Token 342: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0920458510518074
    2. ':
' → logprob: -2.467045783996582
    3. ' or' → logprob: -6.842045783996582
    4. ':return' → logprob: -6.842045783996582
    5. '           ' → logprob: -7.967045783996582
    6. '       ' → logprob: -8.467045783996582
    7. '   ' → logprob: -8.842045783996582
    8. '==' → logprob: -8.967045783996582
    9. '=' → logprob: -10.467045783996582
    10. '):' → logprob: -11.092045783996582

Token 343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009327789884991944
    2. '       ' → logprob: -7.375932693481445
    3. ' continue' → logprob: -9.000932693481445
    4. '   ' → logprob: -9.375932693481445
    5. ' break' → logprob: -10.375932693481445
    6. '               ' → logprob: -11.125932693481445
    7. ',' → logprob: -11.250932693481445
    8. 'continue' → logprob: -11.500932693481445
    9. ' ' → logprob: -12.125932693481445
    10. ' return' → logprob: -12.250932693481445

Token 344: ' n' (ID: 297)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4342579245567322
    2. '           ' → logprob: -1.434257984161377
    3. ' continue' → logprob: -2.184257984161377
    4. 'break' → logprob: -7.059257984161377
    5. ' break' → logprob: -8.309257507324219
    6. '               ' → logprob: -8.684257507324219
    7. '       ' → logprob: -9.309257507324219
    8. 'return' → logprob: -11.309257507324219
    9. '	continue' → logprob: -11.809257507324219
    10. '   ' → logprob: -11.934257507324219

Token 345: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -6.575563020305708e-05
    2. '=' → logprob: -10.125065803527832
    3. ' =' → logprob: -12.000065803527832
    4. 'm' → logprob: -12.125065803527832
    5. '_' → logprob: -12.750065803527832
    6. 'ext' → logprob: -13.125065803527832
    7. '.append' → logprob: -13.500065803527832
    8. 'return' → logprob: -14.000065803527832
    9. '   ' → logprob: -14.125065803527832
    10. '=line' → logprob: -14.375065803527832

Token 346: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.08547630161046982
    2. '+=' → logprob: -2.8354763984680176
    3. ' +=' → logprob: -3.9604763984680176
    4. '.extend' → logprob: -6.085476398468018
    5. 'continue' → logprob: -6.960476398468018
    6. '=' → logprob: -7.960476398468018
    7. 'append' → logprob: -8.71047592163086
    8. '.' → logprob: -9.08547592163086
    9. ' continue' → logprob: -9.08547592163086
    10. '[' → logprob: -9.21047592163086

Token 347: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38878870010375977
    2. ' sys' → logprob: -1.1387887001037598
    3. '['' → logprob: -6.38878870010376
    4. ' ['' → logprob: -8.888788223266602
    5. 'input' → logprob: -9.513788223266602
    6. ' input' → logprob: -11.513788223266602
    7. '   ' → logprob: -12.638788223266602
    8. '[' → logprob: -12.638788223266602
    9. '(sys' → logprob: -13.263788223266602
    10. '	sys' → logprob: -13.638788223266602

Token 348: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.961759259458631e-06
    2. 'stdin' → logprob: -13.000004768371582
    3. '.argv' → logprob: -13.625004768371582
    4. '.stdout' → logprob: -13.625004768371582
    5. '.readline' → logprob: -16.5000057220459
    6. '.stderr' → logprob: -17.0000057220459
    7. '(stdin' → logprob: -17.5000057220459
    8. '.' → logprob: -18.8750057220459
    9. '.std' → logprob: -20.0000057220459
    10. '.__' → logprob: -20.0000057220459

Token 349: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0007509016431868076
    2. 'read' → logprob: -7.50075101852417
    3. 'line' → logprob: -8.875750541687012
    4. 'split' → logprob: -10.625750541687012
    5. ' readline' → logprob: -11.625750541687012
    6. '.readlines' → logprob: -12.000750541687012
    7. 'buffer' → logprob: -12.000750541687012
    8. 'stdin' → logprob: -12.625750541687012
    9. 'sys' → logprob: -13.375750541687012
    10. 'lin' → logprob: -13.750750541687012

Token 350: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.107425062713446e-06
    2. '()' → logprob: -11.875006675720215
    3. '(' → logprob: -16.37500762939453
    4. '.strip' → logprob: -18.62500762939453
    5. ' ().' → logprob: -19.00000762939453
    6. '()[' → logprob: -19.37500762939453
    7. '().'' → logprob: -19.50000762939453
    8. '()).' → logprob: -19.75000762939453
    9. '()
' → logprob: -20.50000762939453
    10. '.readline' → logprob: -21.00000762939453

Token 351: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.5597102396423e-05
    2. 'split' → logprob: -10.250035285949707
    3. ' strip' → logprob: -16.500036239624023
    4. '.strip' → logprob: -17.750036239624023
    5. 'rstrip' → logprob: -18.500036239624023
    6. '-strip' → logprob: -21.500036239624023
    7. '_strip' → logprob: -21.875036239624023
    8. '(strip' → logprob: -22.125036239624023
    9. 'trim' → logprob: -23.125036239624023
    10. 'stripe' → logprob: -23.750036239624023

Token 352: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.25
    3. '.split' → logprob: -20.0
    4. '(' → logprob: -21.75
    5. ' ().' → logprob: -21.75
    6. 'split' → logprob: -22.0
    7. '()
' → logprob: -22.125
    8. '('').' → logprob: -23.125
    9. '().'' → logprob: -23.5
    10. '('' → logprob: -23.5

Token 353: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.25
    3. '(split' → logprob: -21.25
    4. 'spl' → logprob: -22.25
    5. '.split' → logprob: -22.625
    6. '_split' → logprob: -23.625
    7. 'plit' → logprob: -26.25
    8. 'sp' → logprob: -26.25
    9. 'rstrip' → logprob: -27.25
    10. 'Split' → logprob: -27.375

Token 354: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15044613182544708
    2. '()' → logprob: -2.9004461765289307
    3. '<|end|>' → logprob: -3.2754461765289307
    4. '[' → logprob: -3.6504461765289307
    5. '(n' → logprob: -4.400445938110352
    6. ')' → logprob: -6.025445938110352
    7. '(' → logprob: -6.525445938110352
    8. '[]' → logprob: -6.900445938110352
    9. '<|end|>' → logprob: -6.900445938110352
    10. '()
' → logprob: -7.775445938110352

Token 355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08220440149307251
    2. '<|end|>' → logprob: -2.9572043418884277
    3. '[n' → logprob: -4.832204341888428
    4. '        
' → logprob: -4.957204341888428
    5. '[' → logprob: -5.082204341888428
    6. '(n' → logprob: -5.957204341888428
    7. ')' → logprob: -7.582204341888428
    8. '   ' → logprob: -7.957204341888428
    9. '<|end|>' → logprob: -8.082204818725586
    10. '\n' → logprob: -8.207204818725586

Token 356: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.15653681755065918
    2. ' n' → logprob: -2.406536817550659
    3. '       ' → logprob: -2.906536817550659
    4. '```' → logprob: -10.156537055969238
    5. '   ' → logprob: -10.656537055969238
    6. '	n' → logprob: -11.031537055969238
    7. '           ' → logprob: -11.781537055969238
    8. ' if' → logprob: -12.156537055969238
    9. '        
' → logprob: -12.281537055969238
    10. '(n' → logprob: -12.656537055969238

Token 357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0053449939005076885
    2. '=' → logprob: -5.255344867706299
    3. ' =' → logprob: -9.880345344543457
    4. ' ,' → logprob: -11.130345344543457
    5. '=int' → logprob: -11.130345344543457
    6. ',m' → logprob: -11.755345344543457
    7. ',int' → logprob: -12.130345344543457
    8. ',n' → logprob: -12.505345344543457
    9. ')' → logprob: -12.630345344543457
    10. '_,' → logprob: -13.505345344543457

Token 358: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16086819767951965
    2. ' m' → logprob: -1.9108681678771973
    3. 'int' → logprob: -7.410868167877197
    4. ' int' → logprob: -10.160868644714355
    5. '   ' → logprob: -15.160868644714355
    6. '=int' → logprob: -15.910868644714355
    7. ' ' → logprob: -16.16086769104004
    8. '	m' → logprob: -17.41086769104004
    9. '[int' → logprob: -17.66086769104004
    10. '    ' → logprob: -18.03586769104004

Token 359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132704198360443
    2. ' =' → logprob: -1.3132704496383667
    3. '=int' → logprob: -12.563270568847656
    4. ',' → logprob: -12.938270568847656
    5. ')' → logprob: -13.313270568847656
    6. ')=' → logprob: -15.063270568847656
    7. '＝' → logprob: -16.063270568847656
    8. '   ' → logprob: -16.188270568847656
    9. '=

' → logprob: -16.188270568847656
    10. '=
' → logprob: -16.188270568847656

Token 360: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1288941651582718
    2. 'map' → logprob: -2.378894090652466
    3. 'int' → logprob: -3.878894090652466
    4. ' int' → logprob: -4.878894329071045
    5. '   ' → logprob: -14.878893852233887
    6. '[int' → logprob: -15.128893852233887
    7. ' list' → logprob: -16.878894805908203
    8. 'list' → logprob: -17.503894805908203
    9. ' n' → logprob: -17.503894805908203
    10. ' ' → logprob: -17.628894805908203

Token 361: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01815614476799965
    2. 'int' → logprob: -4.018156051635742
    3. '[int' → logprob: -13.268156051635742
    4. '(str' → logprob: -13.393156051635742
    5. '(' → logprob: -13.518156051635742
    6. ' int' → logprob: -14.393156051635742
    7. '=int' → logprob: -14.643156051635742
    8. 'str' → logprob: -14.893156051635742
    9. '```' → logprob: -15.393156051635742
    10. '	int' → logprob: -16.893156051635742

Token 362: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.95676189661026
    2. ')' → logprob: -1.2067618370056152
    3. '(' → logprob: -1.9567618370056152
    4. '(n' → logprob: -2.3317618370056152
    5. ',' → logprob: -2.8317618370056152
    6. '(int' → logprob: -5.206761837005615
    7. ',line' → logprob: -5.581761837005615
    8. '(str' → logprob: -5.706761837005615
    9. ' (' → logprob: -6.206761837005615
    10. '#line' → logprob: -7.456761837005615

Token 363: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.024721957743167877
    2. 'line' → logprob: -3.77472186088562
    3. ' n' → logprob: -6.774722099304199
    4. 'str' → logprob: -8.6497220993042
    5. 'sys' → logprob: -9.5247220993042
    6. 'input' → logprob: -9.7747220993042
    7. ' line' → logprob: -11.0247220993042
    8. 'int' → logprob: -12.1497220993042
    9. '(n' → logprob: -13.1497220993042
    10. 'map' → logprob: -13.5247220993042

Token 364: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.28083083033561707
    2. '_n' → logprob: -1.9058308601379395
    3. ')' → logprob: -3.0308308601379395
    4. '.readline' → logprob: -4.1558308601379395
    5. '.strip' → logprob: -5.1558308601379395
    6. '(n' → logprob: -5.1558308601379395
    7. '[' → logprob: -5.4058308601379395
    8. '.split' → logprob: -5.4058308601379395
    9. 'n' → logprob: -5.9058308601379395
    10. '().' → logprob: -6.4058308601379395

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -11.750016212463379
    3. ' )' → logprob: -13.000016212463379
    4. '())' → logprob: -13.750016212463379
    5. '[' → logprob: -14.250016212463379
    6. '(' → logprob: -14.375016212463379
    7. '   ' → logprob: -14.375016212463379
    8. ',' → logprob: -14.625016212463379
    9. '),' → logprob: -14.625016212463379
    10. '()' → logprob: -14.750016212463379

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029688354581594467
    2. '        
' → logprob: -4.279688358306885
    3. '<|end|>' → logprob: -4.279688358306885
    4. '```' → logprob: -7.654688358306885
    5. '   ' → logprob: -8.404687881469727
    6. ')' → logprob: -8.404687881469727
    7. ',' → logprob: -8.654687881469727
    8. '<|end|>' → logprob: -9.154687881469727
    9. '\' → logprob: -9.904687881469727
    10. '    
' → logprob: -9.904687881469727

Token 367: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20031842589378357
    2. '       ' → logprob: -2.2003183364868164
    3. ' p' → logprob: -2.7003183364868164
    4. 'if' (adapté à ' if') → logprob: -6.450318336486816
    5. ' if' → logprob: -6.575318336486816
    6. 'price' → logprob: -8.575318336486816
    7. '```' → logprob: -9.075318336486816
    8. '   ' → logprob: -9.075318336486816
    9. '	p' → logprob: -10.575318336486816
    10. ' price' → logprob: -10.887818336486816

Token 368: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16022595763206482
    2. 'n' → logprob: -1.9102259874343872
    3. ' not' → logprob: -13.660225868225098
    4. '(n' → logprob: -15.285225868225098
    5. ' ' → logprob: -15.910225868225098
    6. '	n' → logprob: -16.285226821899414
    7. 'm' → logprob: -16.410226821899414
    8. 'not' → logprob: -16.910226821899414
    9. ' m' → logprob: -17.785226821899414
    10. '   ' → logprob: -17.910226821899414

Token 369: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740857779979706
    2. '==' → logprob: -0.974085807800293
    3. '<=' → logprob: -12.599085807800293
    4. '=' → logprob: -13.349085807800293
    5. ' <=' → logprob: -13.599085807800293
    6. '0' → logprob: -13.974085807800293
    7. ' ' → logprob: -14.724085807800293
    8. '===' → logprob: -15.349085807800293
    9. '==
' → logprob: -15.349085807800293
    10. '==-' → logprob: -15.349085807800293

Token 370: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '=' → logprob: -20.12500762939453
    4. '```' → logprob: -20.12500762939453
    5. '۰' → logprob: -20.25000762939453
    6. '０' → logprob: -20.75000762939453
    7. 'and' → logprob: -21.00000762939453
    8. '   ' → logprob: -21.12500762939453
    9. 's' → logprob: -21.87500762939453
    10. '  ' → logprob: -22.06250762939453

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -19.875001907348633
    4. '=' → logprob: -20.125001907348633
    5. '```' → logprob: -20.500001907348633
    6. 'and' → logprob: -21.125001907348633
    7. '۰' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.375001907348633
    9. ''' → logprob: -21.875001907348633
    10. '０' → logprob: -22.125001907348633

Token 372: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02325526252388954
    2. 'and' → logprob: -3.7732553482055664
    3. ' or' → logprob: -11.898255348205566
    4. ' ' → logprob: -13.773255348205566
    5. '	and' → logprob: -13.898255348205566
    6. '   ' → logprob: -14.773255348205566
    7. '0' → logprob: -15.523255348205566
    8. ',' → logprob: -16.27325439453125
    9. '<|end|>' → logprob: -16.52325439453125
    10. ' ' → logprob: -16.64825439453125

Token 373: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.7610454708337784e-05
    2. ' m' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.87502670288086
    4. '	m' → logprob: -21.75002670288086
    5. '  ' → logprob: -22.75002670288086
    6. ' ' → logprob: -24.50002670288086
    7. '    ' → logprob: -25.00002670288086
    8. '_m' → logprob: -25.37502670288086
    9. ' ' → logprob: -26.12502670288086
    10. '       ' → logprob: -27.62502670288086

Token 374: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932609677314758
    2. ' ==' → logprob: -0.6932609677314758
    3. '=' → logprob: -10.06826114654541
    4. '0' → logprob: -10.19326114654541
    5. ' ' → logprob: -11.31826114654541
    6. ')==' → logprob: -12.06826114654541
    7. '<|end|>' → logprob: -12.19326114654541
    8. ' =' → logprob: -13.06826114654541
    9. '==
' → logprob: -13.31826114654541
    10. '[' → logprob: -13.31826114654541

Token 375: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -19.37500762939453
    4. '<|end|>' → logprob: -20.87500762939453
    5. '０' → logprob: -22.12500762939453
    6. '০' → logprob: -22.87500762939453
    7. ' ' → logprob: -23.75000762939453
    8. '०' → logprob: -23.87500762939453
    9. '```' → logprob: -24.25000762939453
    10. '  ' → logprob: -24.25000762939453

Token 376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '۰' → logprob: -21.75001335144043
    4. '   ' → logprob: -22.12501335144043
    5. '```' → logprob: -22.37501335144043
    6. '  ' → logprob: -22.75001335144043
    7. '０' → logprob: -24.12501335144043
    8. '`' → logprob: -24.37501335144043
    9. '>' → logprob: -24.68751335144043
    10. '০' → logprob: -24.81251335144043

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09338262677192688
    2. ':
' → logprob: -2.4683825969696045
    3. '           ' → logprob: -5.718382835388184
    4. ':return' → logprob: -6.843382835388184
    5. '       ' → logprob: -9.718382835388184
    6. '   ' → logprob: -11.843382835388184
    7. ':
' → logprob: -12.218382835388184
    8. '():
' → logprob: -12.968382835388184
    9. '<|end|>' → logprob: -13.718382835388184
    10. ',' → logprob: -13.968382835388184

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.717296517104842e-05
    2. '       ' → logprob: -10.500057220458984
    3. ':
' → logprob: -11.500057220458984
    4. ':' → logprob: -11.750057220458984
    5. ',' → logprob: -13.000057220458984
    6. '               ' → logprob: -13.125057220458984
    7. '	       ' → logprob: -13.250057220458984
    8. '		' → logprob: -13.250057220458984
    9. '          ' → logprob: -13.750057220458984
    10. '<|end|>' → logprob: -13.750057220458984

Token 379: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11645056307315826
    2. 'return' → logprob: -2.866450548171997
    3. 'break' (adapté à ' break') → logprob: -3.241450548171997
    4. '               ' → logprob: -4.741450786590576
    5. ' break' → logprob: -5.616450786590576
    6. ' return' → logprob: -6.491450786590576
    7. '       ' → logprob: -11.366450309753418
    8. '	break' → logprob: -11.491450309753418
    9. '   ' → logprob: -12.616450309753418
    10. '	       ' → logprob: -12.616450309753418

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004129691980779171
    2. '<|end|>' → logprob: -5.879129886627197
    3. '        
' → logprob: -7.004129886627197
    4. '
' → logprob: -8.129129409790039
    5. ',' → logprob: -10.254129409790039
    6. '```' → logprob: -10.629129409790039
    7. '<|end|>' → logprob: -11.379129409790039
    8. '   ' → logprob: -12.004129409790039
    9. 'n' → logprob: -12.254129409790039
    10. '#' → logprob: -12.504129409790039

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001151174888946116
    2. '        
' → logprob: -8.001151084899902
    3. '```' → logprob: -8.126151084899902
    4. '<|end|>' → logprob: -8.376151084899902
    5. 'p' → logprob: -8.626151084899902
    6. ' p' → logprob: -9.751151084899902
    7. '   ' → logprob: -10.501151084899902
    8. 'n' → logprob: -12.251151084899902
    9. ',p' → logprob: -12.876151084899902
    10. ',' → logprob: -13.126151084899902

Token 382: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.009014084003865719
    2. '       ' → logprob: -5.384014129638672
    3. '   ' → logprob: -6.509014129638672
    4. ' p' → logprob: -6.509014129638672
    5. 'price' → logprob: -6.884014129638672
    6. 'prices' → logprob: -8.884014129638672
    7. '```' → logprob: -9.384014129638672
    8. 'k' → logprob: -11.009014129638672
    9. 's' → logprob: -11.759014129638672
    10. '	p' → logprob: -11.821514129638672

Token 383: '_line' (ID: 14418)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. 'list' → logprob: -14.12500286102295
    3. '_' → logprob: -14.25000286102295
    4. '_lst' → logprob: -14.25000286102295
    5. '_line' → logprob: -15.62500286102295
    6. 'List' → logprob: -16.000003814697266
    7. ' _' → logprob: -16.000003814697266
    8. ' =' → logprob: -16.250003814697266
    9. '_lists' → logprob: -16.250003814697266
    10. '_LIST' → logprob: -16.500003814697266

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022665798664093
    2. ' =' → logprob: -1.9102267026901245
    3. '       ' → logprob: -13.785226821899414
    4. '   ' → logprob: -14.785226821899414
    5. 's' → logprob: -14.910226821899414
    6. '=line' → logprob: -15.535226821899414
    7. '        ' → logprob: -15.910226821899414
    8. '=[]' → logprob: -16.285226821899414
    9. ' ' → logprob: -16.410226821899414
    10. '    ' → logprob: -16.910226821899414

Token 385: ' ''
' (ID: 25366)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14376437664031982
    2. 'sys' → logprob: -2.0187644958496094
    3. '''' → logprob: -7.393764495849609
    4. '[]' → logprob: -9.14376449584961
    5. ' input' → logprob: -9.39376449584961
    6. 'input' → logprob: -9.76876449584961
    7. ''' → logprob: -9.89376449584961
    8. ' ''
' → logprob: -10.51876449584961
    9. '[]
' → logprob: -10.64376449584961
    10. ' []' → logprob: -10.64376449584961

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012689640745520592
    2. 'while' → logprob: -4.387689590454102
    3. ' while' → logprob: -8.762689590454102
    4. '	while' → logprob: -11.012689590454102
    5. '   ' → logprob: -12.762689590454102
    6. '<|end|>' → logprob: -13.137689590454102
    7. '           ' → logprob: -14.262689590454102
    8. '	' → logprob: -14.387689590454102
    9. '<|end|>' → logprob: -15.137689590454102
    10. ' ' → logprob: -15.887689590454102

Token 387: ' p' (ID: 275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.17582982778549194
    2. '       ' → logprob: -2.3008298873901367
    3. 'p' (adapté à ' p') → logprob: -2.8008298873901367
    4. ' while' → logprob: -8.300829887390137
    5. ' p' → logprob: -10.300829887390137
    6. '   ' → logprob: -11.550829887390137
    7. '	while' → logprob: -12.175829887390137
    8. '           ' → logprob: -12.925829887390137
    9. 'parts' → logprob: -14.050829887390137
    10. 'tokens' → logprob: -14.300829887390137

Token 388: '_list' (ID: 4162)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.5254903435707092
    2. '_list' → logprob: -0.9004903435707092
    3. ' =' → logprob: -7.2754902839660645
    4. '_lines' → logprob: -7.6504902839660645
    5. '_' → logprob: -7.9004902839660645
    6. '=' → logprob: -7.9004902839660645
    7. 's' → logprob: -9.025490760803223
    8. '=[]' → logprob: -9.275490760803223
    9. '_tokens' → logprob: -9.775490760803223
    10. 'line' → logprob: -10.150490760803223

Token 389: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47622036933898926
    2. ' =' → logprob: -0.9762203693389893
    3. '=[]' → logprob: -6.22622013092041
    4. '=[]
' → logprob: -10.22622013092041
    5. '   ' → logprob: -11.10122013092041
    6. '[]' → logprob: -11.35122013092041
    7. '<|end|>' → logprob: -11.35122013092041
    8. ' ' → logprob: -11.47622013092041
    9. '       ' → logprob: -11.60122013092041
    10. '<|end|>' → logprob: -11.72622013092041

Token 390: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004414570517838001
    2. '[]
' → logprob: -5.5044145584106445
    3. ' []' → logprob: -8.254414558410645
    4. 'list' → logprob: -10.004414558410645
    5. '[]

' → logprob: -10.879414558410645
    6. '[' → logprob: -11.879414558410645
    7. ' []
' → logprob: -12.754414558410645
    8. '[]}' → logprob: -14.504414558410645
    9. 'p' → logprob: -14.879414558410645
    10. '[p' → logprob: -15.004414558410645

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25652092695236206
    2. 'while' → logprob: -1.6315209865570068
    3. ' while' → logprob: -3.506520986557007
    4. '	while' → logprob: -8.006521224975586
    5. '<|end|>' → logprob: -9.756521224975586
    6. '[]' → logprob: -9.881521224975586
    7. 'While' → logprob: -10.256521224975586
    8. '        
' → logprob: -10.256521224975586
    9. '   ' → logprob: -10.506521224975586
    10. '[' → logprob: -11.256521224975586

Token 392: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.05171288922429085
    2. ' while' → logprob: -3.301712989807129
    3. '       ' → logprob: -4.301712989807129
    4. '	while' → logprob: -10.426712989807129
    5. '   ' → logprob: -13.426712989807129
    6. 'While' → logprob: -14.301712989807129
    7. '        ' → logprob: -14.676712989807129
    8. '           ' → logprob: -14.926712989807129
    9. ' ' → logprob: -15.801712989807129
    10. '
' → logprob: -16.301712036132812

Token 393: ' Read' (ID: 5405)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01826021820306778
    2. ' while' → logprob: -4.0182600021362305
    3. '       ' → logprob: -9.14326000213623
    4. 'While' → logprob: -13.14326000213623
    5. '	while' → logprob: -14.39326000213623
    6. '   ' → logprob: -14.39326000213623
    7. 'p' → logprob: -16.018260955810547
    8. '```' → logprob: -17.018260955810547
    9. ' p' → logprob: -17.268260955810547
    10. ' While' → logprob: -17.393260955810547

Token 394: ' possibly' (ID: 14836)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.013645767234265804
    2. ' while' → logprob: -4.888645648956299
    3. 'p' → logprob: -5.638645648956299
    4. '       ' → logprob: -6.388645648956299
    5. ' p' → logprob: -7.263645648956299
    6. '           ' → logprob: -10.888646125793457
    7. 'until' → logprob: -11.138646125793457
    8. ' ' → logprob: -11.388646125793457
    9. 'len' → logprob: -11.388646125793457
    10. '	while' → logprob: -12.138646125793457

Token 395: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.09238241612911224
    2. 'more' → logprob: -3.0923824310302734
    3. ' multiple' → logprob: -3.2173824310302734
    4. ' more' → logprob: -6.592382431030273
    5. 'while' → logprob: -7.342382431030273
    6. 'over' → logprob: -8.592382431030273
    7. 'multi' → logprob: -8.592382431030273
    8. 'se' → logprob: -8.967382431030273
    9. 'ac' → logprob: -9.467382431030273
    10. 'mult' → logprob: -9.592382431030273

Token 396: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.08032400906085968
    2. ' lines' → logprob: -2.5803239345550537
    3. 'line' → logprob: -7.080324172973633
    4. 'p' → logprob: -7.705324172973633
    5. ' p' → logprob: -8.955324172973633
    6. ' line' → logprob: -11.705324172973633
    7. 'while' → logprob: -13.205324172973633
    8. '	lines' → logprob: -14.455324172973633
    9. '_lines' → logprob: -14.580324172973633
    10. '
' → logprob: -15.330324172973633

Token 397: ' until' (ID: 4609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3975161612033844
    2. '       ' → logprob: -1.272516131401062
    3. ' while' → logprob: -3.1475162506103516
    4. 'until' → logprob: -6.147516250610352
    5. ' until' → logprob: -6.272516250610352
    6. ' to' → logprob: -7.647516250610352
    7. 'to' → logprob: -8.897516250610352
    8. '	while' → logprob: -9.272516250610352
    9. 'for' → logprob: -9.772516250610352
    10. ',' → logprob: -9.897516250610352

Token 398: ' we' (ID: 581)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.841743303695694e-05
    2. ' len' → logprob: -9.25009822845459
    3. '(len' → logprob: -13.87509822845459
    4. 'm' → logprob: -14.25009822845459
    5. 'p' → logprob: -14.37509822845459
    6. '
' → logprob: -17.875099182128906
    7. '=len' → logprob: -18.125099182128906
    8. '	len' → logprob: -18.250099182128906
    9. 'length' → logprob: -18.375099182128906
    10. '   ' → logprob: -19.000099182128906

Token 399: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.197415292263031
    2. ' have' → logprob: -1.9474153518676758
    3. 'len' → logprob: -3.447415351867676
    4. 'get' → logprob: -6.322415351867676
    5. 'read' → logprob: -6.447415351867676
    6. ' get' → logprob: -8.197415351867676
    7. 'collect' → logprob: -8.322415351867676
    8. 'p' → logprob: -8.697415351867676
    9. 'reach' → logprob: -9.072415351867676
    10. ' read' → logprob: -9.322415351867676

Token 400: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002479581395164132
    2. 'len' → logprob: -6.252479553222656
    3. 'p' → logprob: -7.877479553222656
    4. ' m' → logprob: -9.252479553222656
    5. 'at' → logprob: -10.002479553222656
    6. ' at' → logprob: -10.627479553222656
    7. ' p' → logprob: -12.877479553222656
    8. ' len' → logprob: -13.127479553222656
    9. '       ' → logprob: -13.877479553222656
    10. 'all' → logprob: -15.752479553222656

Token 401: ' integers' (ID: 54912)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6917626261711121
    2. ' tokens' → logprob: -1.1917626857757568
    3. ' p' → logprob: -2.441762685775757
    4. 'p' → logprob: -2.566762685775757
    5. '_tokens' → logprob: -5.191762447357178
    6. ' elements' → logprob: -5.316762447357178
    7. '_p' → logprob: -5.691762447357178
    8. ' integers' → logprob: -5.691762447357178
    9. 'elements' → logprob: -6.066762447357178
    10. ' numbers' → logprob: -6.441762447357178

Token 402: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006593986414372921
    2. 'while' → logprob: -5.631594181060791
    3. ' while' → logprob: -6.006594181060791
    4. '<|end|>' → logprob: -8.381593704223633
    5. ',' → logprob: -9.131593704223633
    6. '(' → logprob: -10.506593704223633
    7. '	while' → logprob: -10.881593704223633
    8. ':' → logprob: -11.006593704223633
    9. ' until' → logprob: -11.131593704223633
    10. ' and' → logprob: -11.131593704223633

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00738726370036602
    2. ' while' → logprob: -5.507387161254883
    3. 'while' → logprob: -5.757387161254883
    4. '	while' → logprob: -10.257387161254883
    5. '   ' → logprob: -10.382387161254883
    6. '<|end|>' → logprob: -10.507387161254883
    7. ',' → logprob: -11.507387161254883
    8. '	' → logprob: -11.757387161254883
    9. '           ' → logprob: -12.007387161254883
    10. 'While' → logprob: -12.382387161254883

Token 404: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5646958351135254
    2. '       ' → logprob: -1.3146958351135254
    3. ' while' → logprob: -1.8146958351135254
    4. '	while' → logprob: -11.064695358276367
    5. '   ' → logprob: -12.564695358276367
    6. '           ' → logprob: -13.064695358276367
    7. '```' → logprob: -13.939695358276367
    8. 'While' → logprob: -14.439695358276367
    9. '        ' → logprob: -15.939695358276367
    10. ' ' → logprob: -15.939695358276367

Token 405: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02324594371020794
    2. ' len' → logprob: -3.7732460498809814
    3. '(len' → logprob: -14.648245811462402
    4. ' ' → logprob: -17.64824676513672
    5. 'p' → logprob: -17.77324676513672
    6. '   ' → logprob: -17.89824676513672
    7. '	len' → logprob: -18.77324676513672
    8. '  ' → logprob: -19.77324676513672
    9. '
' → logprob: -20.14824676513672
    10. ' p' → logprob: -20.52324676513672

Token 406: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00012689977302215993
    2. 'p' → logprob: -9.125126838684082
    3. '(' → logprob: -11.375126838684082
    4. ' (' → logprob: -12.375126838684082
    5. ' p' → logprob: -13.125126838684082
    6. '(
' → logprob: -15.750126838684082
    7. '<p' → logprob: -17.8751277923584
    8. '+p' → logprob: -18.0001277923584
    9. '=' → logprob: -18.8751277923584
    10. ' ' → logprob: -18.8751277923584

Token 407: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.2200749754119897e-06
    2. 'p' → logprob: -13.500001907348633
    3. '(p' → logprob: -15.375001907348633
    4. '_p' → logprob: -16.000001907348633
    5. '[p' → logprob: -16.000001907348633
    6. 'list' → logprob: -16.625001907348633
    7. '<p' → logprob: -16.625001907348633
    8. 'List' → logprob: -17.250001907348633
    9. '_LIST' → logprob: -17.625001907348633
    10. ')' → logprob: -18.750001907348633

Token 408: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3141157627105713
    2. ' <' → logprob: -1.3141157627105713
    3. ')' → logprob: -7.939115524291992
    4. '<p' → logprob: -7.939115524291992
    5. ')<' → logprob: -9.189115524291992
    6. '<n' → logprob: -11.314115524291992
    7. '<m' → logprob: -12.564115524291992
    8. '[' → logprob: -12.564115524291992
    9. 'p' → logprob: -12.689115524291992
    10. '()<' → logprob: -12.689115524291992

Token 409: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3135834038257599
    2. ' <' → logprob: -1.3135833740234375
    3. '<p' → logprob: -8.188583374023438
    4. '<n' → logprob: -11.063583374023438
    5. '<m' → logprob: -11.313583374023438
    6. '()<' → logprob: -12.688583374023438
    7. 'p' → logprob: -12.813583374023438
    8. '<len' → logprob: -12.938583374023438
    9. '<size' → logprob: -13.688583374023438
    10. '<int' → logprob: -13.813583374023438

Token 410: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.676292231422849e-05
    2. ' m' → logprob: -11.000017166137695
    3. 'p' → logprob: -20.000017166137695
    4. '[m' → logprob: -22.250017166137695
    5. '	m' → logprob: -22.500017166137695
    6. '[' → logprob: -23.500017166137695
    7. '   ' → logprob: -23.750017166137695
    8. ')m' → logprob: -24.625017166137695
    9. '<m' → logprob: -24.750017166137695
    10. ' ' → logprob: -25.000017166137695

Token 411: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.49700120091438293
    2. ':' → logprob: -0.9970011711120605
    3. '       ' → logprob: -5.2470011711120605
    4. 'p' → logprob: -5.2470011711120605
    5. '   ' → logprob: -5.6220011711120605
    6. ',' → logprob: -6.6220011711120605
    7. '           ' → logprob: -6.6220011711120605
    8. ' and' → logprob: -6.8720011711120605
    9. '):
' → logprob: -6.9970011711120605
    10. '<|end|>' → logprob: -7.2470011711120605

Token 412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1523134410381317
    2. ' p' → logprob: -2.277313470840454
    3. 'p' → logprob: -3.402313470840454
    4. ' line' → logprob: -5.652313232421875
    5. 'line' → logprob: -6.777313232421875
    6. '   ' → logprob: -8.277313232421875
    7. '       ' → logprob: -8.402313232421875
    8. ' ' → logprob: -9.652313232421875
    9. '	       ' → logprob: -10.152313232421875
    10. ',p' → logprob: -10.152313232421875

Token 413: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6815754771232605
    2. 'p' (adapté à ' p') → logprob: -0.8065754771232605
    3. '           ' → logprob: -3.6815755367279053
    4. ' line' → logprob: -4.056575298309326
    5. 'line' → logprob: -5.306575298309326
    6. '   ' → logprob: -8.181575775146484
    7. ' ' → logprob: -10.306575775146484
    8. '	p' → logprob: -11.931575775146484
    9. '               ' → logprob: -12.181575775146484
    10. '       ' → logprob: -12.556575775146484

Token 414: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00014215784904081374
    2. '_list' → logprob: -9.000142097473145
    3. 'line' → logprob: -11.625142097473145
    4. '=' → logprob: -12.500142097473145
    5. '=line' → logprob: -13.000142097473145
    6. ' =' → logprob: -13.500142097473145
    7. '_lines' → logprob: -14.000142097473145
    8. '_' → logprob: -14.250142097473145
    9. '_LINE' → logprob: -15.125142097473145
    10. '   ' → logprob: -16.50014305114746

Token 415: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.7667418718338013
    2. '=' → logprob: -1.6417418718338013
    3. '+=' → logprob: -1.7667418718338013
    4. ' =' → logprob: -1.7667418718338013
    5. '.extend' → logprob: -11.266741752624512
    6. '.=' → logprob: -11.516741752624512
    7. '+' → logprob: -11.766741752624512
    8. '           ' → logprob: -12.016741752624512
    9. '   ' → logprob: -12.641741752624512
    10. '               ' → logprob: -12.641741752624512

Token 416: ' '' (ID: 461)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6978322863578796
    2. ' sys' → logprob: -0.8228322863578796
    3. ''' → logprob: -2.8228323459625244
    4. ' '' → logprob: -5.697832107543945
    5. ''s' → logprob: -8.697832107543945
    6. '"' → logprob: -9.447832107543945
    7. 'input' → logprob: -10.322832107543945
    8. '(sys' → logprob: -10.322832107543945
    9. ' ' → logprob: -11.447832107543945
    10. ' input' → logprob: -11.572832107543945

Token 417: ' '' (ID: 461)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6332303881645203
    2. ' sys' → logprob: -0.7582303881645203
    3. ''' → logprob: -7.508230209350586
    4. ' '' → logprob: -9.758230209350586
    5. '(sys' → logprob: -11.758230209350586
    6. ''s' → logprob: -12.133230209350586
    7. '=sys' → logprob: -12.258230209350586
    8. ' ' → logprob: -13.008230209350586
    9. '	sys' → logprob: -13.508230209350586
    10. 'input' → logprob: -13.508230209350586

Token 418: ' +' (ID: 659)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.010032298043370247
    2. '+' → logprob: -4.8850321769714355
    3. ' sys' → logprob: -6.7600321769714355
    4. '=sys' → logprob: -7.2600321769714355
    5. '+=' → logprob: -8.385032653808594
    6. ' +' → logprob: -8.760032653808594
    7. '(sys' → logprob: -8.885032653808594
    8. ' +=' → logprob: -11.635032653808594
    9. '=' → logprob: -11.885032653808594
    10. '	sys' → logprob: -12.260032653808594

Token 419: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002476016292348504
    2. ' sys' → logprob: -6.002476215362549
    3. 'input' → logprob: -14.87747573852539
    4. '(sys' → logprob: -17.50247573852539
    5. '	sys' → logprob: -17.62747573852539
    6. ' ' → logprob: -18.50247573852539
    7. '   ' → logprob: -18.87747573852539
    8. '=sys' → logprob: -19.00247573852539
    9. ' input' → logprob: -19.62747573852539
    10. '
' → logprob: -20.00247573852539

Token 420: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003396343090571463
    2. 'stdin' → logprob: -8.00033950805664
    3. '.stdout' → logprob: -12.50033950805664
    4. 'in' → logprob: -15.87533950805664
    5. '.argv' → logprob: -16.25033950805664
    6. '.std' → logprob: -16.50033950805664
    7. '.' → logprob: -17.25033950805664
    8. '.stderr' → logprob: -17.62533950805664
    9. '```' → logprob: -17.87533950805664
    10. 'import' → logprob: -18.50033950805664

Token 421: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.201443150639534
    2. 'read' → logprob: -1.7014431953430176
    3. ' readline' → logprob: -11.32644271850586
    4. 'stdin' → logprob: -11.95144271850586
    5. '.read' → logprob: -12.82644271850586
    6. 'reader' → logprob: -12.82644271850586
    7. 'line' → logprob: -12.95144271850586
    8. '_read' → logprob: -13.32644271850586
    9. '.readlines' → logprob: -13.82644271850586
    10. 'readonly' → logprob: -14.70144271850586

Token 422: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20143605768680573
    2. '()' → logprob: -1.7014360427856445
    3. '()
' → logprob: -11.076436042785645
    4. '().'' → logprob: -13.451436042785645
    5. '())' → logprob: -13.576436042785645
    6. '()).' → logprob: -13.826436042785645
    7. '()].' → logprob: -14.326436042785645
    8. '<|end|>' → logprob: -14.451436042785645
    9. '().__' → logprob: -14.701436042785645
    10. '(' → logprob: -14.826436042785645

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5868931412696838
    2. '       ' → logprob: -0.8368931412696838
    3. ' p' → logprob: -5.961893081665039
    4. 'p' → logprob: -6.086893081665039
    5. 'tokens' → logprob: -6.211893081665039
    6. '   ' → logprob: -6.711893081665039
    7. ' tokens' → logprob: -6.711893081665039
    8. '.strip' → logprob: -7.461893081665039
    9. '<|end|>' → logprob: -8.336893081665039
    10. '.split' → logprob: -8.961893081665039

Token 424: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5207913517951965
    2. 'p' (adapté à ' p') → logprob: -1.0207912921905518
    3. 'tokens' → logprob: -4.020791530609131
    4. ' tokens' → logprob: -4.270791530609131
    5. '           ' → logprob: -5.020791530609131
    6. '       ' → logprob: -5.270791530609131
    7. ' parts' → logprob: -6.520791530609131
    8. ' lines' → logprob: -9.020791053771973
    9. 'parts' → logprob: -9.145791053771973
    10. ' numbers' → logprob: -10.770791053771973

Token 425: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04953228309750557
    2. '_line' → logprob: -3.049532175064087
    3. '=' → logprob: -8.049531936645508
    4. '_lines' → logprob: -8.549531936645508
    5. 'list' → logprob: -8.674531936645508
    6. '_split' → logprob: -9.299531936645508
    7. 'split' → logprob: -9.674531936645508
    8. 'line' → logprob: -10.799531936645508
    9. ' =' → logprob: -11.049531936645508
    10. '_lists' → logprob: -11.299531936645508

Token 426: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8982614874839783
    2. '=' → logprob: -1.148261547088623
    3. ' +=' → logprob: -1.648261547088623
    4. '.extend' → logprob: -2.648261547088623
    5. ' =' → logprob: -4.398261547088623
    6. 'extend' → logprob: -9.898261070251465
    7. '.=' → logprob: -11.398261070251465
    8. '+' → logprob: -11.523261070251465
    9. 'extends' → logprob: -13.648261070251465
    10. ' extend' → logprob: -14.273261070251465

Token 427: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07958437502384186
    2. ' list' → logprob: -2.5795843601226807
    3. '[list' → logprob: -7.70458459854126
    4. '[p' → logprob: -8.454584121704102
    5. '[' → logprob: -11.079584121704102
    6. 'p' → logprob: -11.579584121704102
    7. ' [' → logprob: -12.704584121704102
    8. ' p' → logprob: -13.079584121704102
    9. '(list' → logprob: -15.079584121704102
    10. '=list' → logprob: -15.454584121704102

Token 428: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.875008583068848
    3. 'map' → logprob: -13.250008583068848
    4. '(
' → logprob: -16.750009536743164
    5. '(int' → logprob: -17.250009536743164
    6. '   ' → logprob: -17.375009536743164
    7. '	map' → logprob: -17.875009536743164
    8. '(set' → logprob: -18.125009536743164
    9. '.map' → logprob: -18.625009536743164
    10. ' map' → logprob: -18.750009536743164

Token 429: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02340119704604149
    2. 'int' → logprob: -3.7734012603759766
    3. 'str' → logprob: -9.648401260375977
    4. '(str' → logprob: -10.023401260375977
    5. '(' → logprob: -11.148401260375977
    6. '```' → logprob: -11.398401260375977
    7. '[int' → logprob: -11.648401260375977
    8. '=int' → logprob: -12.273401260375977
    9. '<int' → logprob: -13.148401260375977
    10. ',int' → logprob: -13.148401260375977

Token 430: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.32045796513557434
    2. ',' → logprob: -1.320457935333252
    3. ',p' → logprob: -5.445457935333252
    4. '(' → logprob: -6.445457935333252
    5. ' (' → logprob: -7.070457935333252
    6. 'p' → logprob: -8.07045841217041
    7. ',(' → logprob: -9.82045841217041
    8. ' ,' → logprob: -10.57045841217041
    9. '((' → logprob: -12.07045841217041
    10. ' p' → logprob: -12.44545841217041

Token 431: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005705483490601182
    2. ' p' → logprob: -7.500570774078369
    3. '(p' → logprob: -11.500570297241211
    4. '   ' → logprob: -12.000570297241211
    5. ' ' → logprob: -14.625570297241211
    6. '(' → logprob: -15.375570297241211
    7. '  ' → logprob: -15.625570297241211
    8. '
' → logprob: -15.875570297241211
    9. ' (' → logprob: -16.00057029724121
    10. '    ' → logprob: -16.87557029724121

Token 432: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.034170251339673996
    2. 'split' → logprob: -4.159170150756836
    3. '.readline' → logprob: -5.034170150756836
    4. '.split' → logprob: -6.034170150756836
    5. '_list' → logprob: -6.159170150756836
    6. 'line' → logprob: -6.284170150756836
    7. 'plit' → logprob: -6.659170150756836
    8. 'pline' → logprob: -7.534170150756836
    9. '.findall' → logprob: -7.659170150756836
    10. 'p' → logprob: -7.909170150756836

Token 433: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004139549098908901
    2. '.split' → logprob: -5.504139423370361
    3. '.' → logprob: -9.87913990020752
    4. 'strip' → logprob: -12.25413990020752
    5. ' .' → logprob: -12.75413990020752
    6. '.rstrip' → logprob: -13.50413990020752
    7. 'split' → logprob: -14.87913990020752
    8. '().' → logprob: -14.87913990020752
    9. '   ' → logprob: -17.129138946533203
    10. '.trim' → logprob: -17.254138946533203

Token 434: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.080963092041202e-06
    2. '()' → logprob: -12.250004768371582
    3. ' ().' → logprob: -16.8750057220459
    4. '.split' → logprob: -17.0000057220459
    5. '()))' → logprob: -17.3750057220459
    6. '   ' → logprob: -18.0000057220459
    7. '(' → logprob: -18.1250057220459
    8. '('').' → logprob: -18.5000057220459
    9. 'split' → logprob: -18.8750057220459
    10. '().'' → logprob: -19.5000057220459

Token 435: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -18.0
    3. '.split' → logprob: -21.5
    4. '(split' → logprob: -23.125
    5. 'spl' → logprob: -23.75
    6. 'replace' → logprob: -24.25
    7. '_split' → logprob: -24.75
    8. 'rstrip' → logprob: -26.5
    9. 'strip' → logprob: -27.125
    10. 'Split' → logprob: -28.125

Token 436: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.18621057271957397
    2. '))' → logprob: -1.8112106323242188
    3. '()' → logprob: -5.311210632324219
    4. '()))
' → logprob: -6.561210632324219
    5. '))
' → logprob: -9.811210632324219
    6. '(' → logprob: -10.936210632324219
    7. '()))

' → logprob: -12.436210632324219
    8. '())' → logprob: -12.561210632324219
    9. '()));' → logprob: -12.936210632324219
    10. '   ' → logprob: -13.311210632324219

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09902682155370712
    2. '<|end|>' → logprob: -2.599026918411255
    3. '
' → logprob: -4.599026679992676
    4. '        
' → logprob: -4.724026679992676
    5. '<|end|>' → logprob: -7.349026679992676
    6. '```' → logprob: -9.724026679992676
    7. ',' → logprob: -9.974026679992676
    8. '        
        
' → logprob: -10.349026679992676
    9. '#' → logprob: -10.724026679992676
    10. '        

' → logprob: -10.724026679992676

Token 438: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01627623289823532
    2. '        
' → logprob: -4.7662763595581055
    3. ' revenue' → logprob: -5.2662763595581055
    4. '
' → logprob: -6.8912763595581055
    5. 'Revenue' → logprob: -8.391276359558105
    6. 'n' → logprob: -8.516276359558105
    7. '#' (adapté à ' #') → logprob: -8.766276359558105
    8. '```' → logprob: -8.891276359558105
    9. ',' → logprob: -9.391276359558105
    10. 'p' → logprob: -9.516276359558105

Token 439: ' Total' (ID: 17565)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6691027283668518
    2. 'expected' → logprob: -2.169102668762207
    3. 'unique' → logprob: -2.919102668762207
    4. '       ' → logprob: -3.169102668762207
    5. 'res' → logprob: -3.294102668762207
    6. 'total' → logprob: -3.294102668762207
    7. '#' → logprob: -3.419102668762207
    8. 'valid' → logprob: -3.794102668762207
    9. 're' → logprob: -4.044102668762207
    10. 'result' → logprob: -4.169102668762207

Token 440: ' numbers' (ID: 8663)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.1266921758651733
    2. 're' → logprob: -1.8766921758651733
    3. ' =' → logprob: -2.251692295074463
    4. 'multip' → logprob: -2.251692295074463
    5. '_m' → logprob: -2.626692295074463
    6. '_numbers' → logprob: -3.376692295074463
    7. '_sum' → logprob: -3.501692295074463
    8. 'count' → logprob: -3.501692295074463
    9. '_count' → logprob: -3.626692295074463
    10. 'sum' → logprob: -4.001692295074463

Token 441: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6795595288276672
    2. '=' → logprob: -0.9295595288276672
    3. '       ' → logprob: -2.5545594692230225
    4. 'count' → logprob: -5.554559707641602
    5. 'sold' → logprob: -6.179559707641602
    6. 'div' → logprob: -6.304559707641602
    7. 'in' → logprob: -6.679559707641602
    8. 'with' → logprob: -6.804559707641602
    9. 'covered' → logprob: -6.804559707641602
    10. '   ' → logprob: -7.054559707641602

Token 442: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00633199093863368
    2. ' ' → logprob: -5.131331920623779
    3. 'n' → logprob: -9.006332397460938
    4. '0' → logprob: -9.256332397460938
    5. 'p' → logprob: -10.256332397460938
    6. '       ' → logprob: -10.506332397460938
    7. 'which' → logprob: -11.006332397460938
    8. 'import' → logprob: -11.131332397460938
    9. ' n' → logprob: -11.256332397460938
    10. ' p' → logprob: -11.506332397460938

Token 443: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001382497837767005
    2. ' ' → logprob: -7.376382350921631
    3. 'which' → logprob: -8.251382827758789
    4. '0' → logprob: -9.001382827758789
    5. 'import' → logprob: -9.376382827758789
    6. 'n' → logprob: -9.751382827758789
    7. 'p' → logprob: -10.001382827758789
    8. 'def' → logprob: -10.501382827758789
    9. '#' → logprob: -10.626382827758789
    10. '       ' → logprob: -10.751382827758789

Token 444: '..' (ID: 485)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12695153057575226
    2. ' to' → logprob: -2.1269514560699463
    3. '
' → logprob: -11.751951217651367
    4. '```' → logprob: -12.751951217651367
    5. ' through' → logprob: -13.251951217651367
    6. '   ' → logprob: -13.251951217651367
    7. 'through' → logprob: -13.376951217651367
    8. '...' → logprob: -13.751951217651367
    9. ',' → logprob: -13.876951217651367
    10. ' ' → logprob: -14.126951217651367

Token 445: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5396791100502014
    2. 'to' → logprob: -1.1646790504455566
    3. ' to' → logprob: -2.2896790504455566
    4. ' n' → logprob: -5.664679050445557
    5. '1' → logprob: -8.664679527282715
    6. '```' → logprob: -9.914679527282715
    7. '       ' → logprob: -10.914679527282715
    8. '...' → logprob: -12.289679527282715
    9. ' ' → logprob: -12.414679527282715
    10. '
' → logprob: -12.664679527282715

Token 446: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9270774126052856
    2. 'div' → logprob: -1.9270774126052856
    3. 'not' → logprob: -2.052077293395996
    4. 'total' → logprob: -2.552077293395996
    5. ' =' → logprob: -2.677077293395996
    6. '=' → logprob: -2.927077293395996
    7. 'excluded' → logprob: -3.552077293395996
    8. 'count' → logprob: -3.927077293395996
    9. 'multip' → logprob: -4.302077293395996
    10. ' divisible' → logprob: -4.552077293395996

Token 447: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2519296407699585
    2. 'n' → logprob: -1.5019296407699585
    3. ' ' → logprob: -15.12692928314209
    4. '	n' → logprob: -16.251930236816406
    5. ' ' → logprob: -16.751930236816406
    6. '    ' → logprob: -17.126930236816406
    7. '   ' → logprob: -17.251930236816406
    8. '
' → logprob: -17.376930236816406
    9. ',' → logprob: -17.626930236816406
    10. '\n' → logprob: -17.626930236816406

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08218814432621002
    2. '
' → logprob: -2.957188129425049
    3. ',' → logprob: -4.207188129425049
    4. '        
' → logprob: -5.582188129425049
    5. 'total' → logprob: -6.207188129425049
    6. '#' → logprob: -6.332188129425049
    7. ',
' → logprob: -6.832188129425049
    8. 'multip' → logprob: -7.207188129425049
    9. '<|end|>' → logprob: -7.332188129425049
    10. '   ' → logprob: -7.957188129425049

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07841452956199646
    2. 'excluded' → logprob: -3.5784144401550293
    3. 'multip' → logprob: -4.703414440155029
    4. 'count' → logprob: -4.828414440155029
    5. '#' → logprob: -5.203414440155029
    6. 'div' → logprob: -5.328414440155029
    7. 'total' → logprob: -5.828414440155029
    8. 'exclude' → logprob: -6.078414440155029
    9. 'not' → logprob: -6.203414440155029
    10. '
' → logprob: -6.453414440155029

Token 450: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0736799240112305
    2. 'total' → logprob: -1.6986799240112305
    3. 'count' → logprob: -2.1986799240112305
    4. ' total' → logprob: -2.4486799240112305
    5. 'excluded' → logprob: -2.8236799240112305
    6. 'not' → logprob: -3.8236799240112305
    7. 'included' → logprob: -3.9486799240112305
    8. 'all' → logprob: -4.0736799240112305
    9. ' numbers' → logprob: -4.1986799240112305
    10. 'unique' → logprob: -4.4486799240112305

Token 451: ' Count' (ID: 6789)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.2507654428482056
    2. 'multip' → logprob: -1.5007654428482056
    3. 'excluded' → logprob: -1.7507654428482056
    4. 'count' → logprob: -2.375765323638916
    5. 'not' → logprob: -2.875765323638916
    6. 'total' → logprob: -3.250765323638916
    7. 'multiple' → logprob: -3.750765323638916
    8. 'non' → logprob: -4.250765323638916
    9. 'expected' → logprob: -4.500765323638916
    10. 'exclude' → logprob: -4.625765323638916

Token 452: ' numbers' (ID: 8663)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.2521497905254364
    2. 'div' → logprob: -2.877149820327759
    3. '_m' → logprob: -3.502149820327759
    4. '       ' → logprob: -3.502149820327759
    5. 'not' → logprob: -3.627149820327759
    6. 'all' → logprob: -4.37714958190918
    7. 'total' → logprob: -4.37714958190918
    8. 'non' → logprob: -4.50214958190918
    9. 'excluded' → logprob: -4.62714958190918
    10. ' =' → logprob: -5.87714958190918

Token 453: ' divisible' (ID: 167813)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.4738079309463501
    2. '_div' → logprob: -2.0988078117370605
    3. ' =' → logprob: -2.9738078117370605
    4. 'not' → logprob: -2.9738078117370605
    5. '       ' → logprob: -3.3488078117370605
    6. '=' → logprob: -3.3488078117370605
    7. 'that' → logprob: -3.5988078117370605
    8. ' divisible' → logprob: -4.3488078117370605
    9. '_not' → logprob: -4.7238078117370605
    10. ' that' → logprob: -5.0988078117370605

Token 454: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.06422096490859985
    2. ' by' → logprob: -2.814220905303955
    3. '=' → logprob: -6.189220905303955
    4. ' =' → logprob: -9.439221382141113
    5. '   ' → logprob: -10.189221382141113
    6. '```' → logprob: -10.689221382141113
    7. '_by' → logprob: -10.939221382141113
    8. '       ' → logprob: -12.189221382141113
    9. 'import' → logprob: -12.439221382141113
    10. ' ' → logprob: -12.439221382141113

Token 455: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.26024430990219116
    2. ' any' → logprob: -1.760244369506836
    3. 'p' → logprob: -3.760244369506836
    4. ' at' → logprob: -4.260244369506836
    5. ' p' → logprob: -4.510244369506836
    6. '1' → logprob: -5.385244369506836
    7. 'at' → logprob: -5.885244369506836
    8. ' ' → logprob: -7.260244369506836
    9. 'the' → logprob: -8.885244369506836
    10. ' the' → logprob: -9.135244369506836

Token 456: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.6255917549133301
    2. 'p' → logprob: -1.00059175491333
    3. '(p' → logprob: -3.00059175491333
    4. ' of' → logprob: -3.62559175491333
    5. 'of' → logprob: -4.37559175491333
    6. ' in' → logprob: -6.37559175491333
    7. '(' → logprob: -6.50059175491333
    8. ' ' → logprob: -6.75059175491333
    9. ' (' → logprob: -6.75059175491333
    10. 'in' → logprob: -7.25059175491333

Token 457: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0007551893359050155
    2. '_' → logprob: -7.625755310058594
    3. 's' → logprob: -9.125755310058594
    4. '       ' → logprob: -10.000755310058594
    5. ' _' → logprob: -10.375755310058594
    6. '   ' → logprob: -10.375755310058594
    7. '_i' → logprob: -11.625755310058594
    8. '```' → logprob: -11.875755310058594
    9. ' =' → logprob: -12.125755310058594
    10. 'list' → logprob: -12.375755310058594

Token 458: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6648420095443726
    2. 'div' → logprob: -1.4148420095443726
    3. ' =' → logprob: -2.539842128753662
    4. '=' → logprob: -3.164842128753662
    5. 'not' → logprob: -3.414842128753662
    6. '   ' → logprob: -3.789842128753662
    7. 'total' → logprob: -4.289842128753662
    8. ',' → logprob: -4.789842128753662
    9. 'included' → logprob: -4.789842128753662
    10. 'all' → logprob: -5.289842128753662

Token 459: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029750952497124672
    2. ' p' → logprob: -3.5297510623931885
    3. '```' → logprob: -15.52975082397461
    4. '   ' → logprob: -16.15475082397461
    5. ' ' → logprob: -16.15475082397461
    6. '
' → logprob: -17.15475082397461
    7. '`' → logprob: -17.77975082397461
    8. '_p' → logprob: -18.52975082397461
    9. 'the' → logprob: -18.52975082397461
    10. '<p' → logprob: -18.65475082397461

Token 460: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9981420336989686e-05
    2. 'list' → logprob: -10.875020027160645
    3. '_' → logprob: -14.625020027160645
    4. ' _' → logprob: -15.375020027160645
    5. '_lists' → logprob: -16.375019073486328
    6. 'List' → logprob: -16.625019073486328
    7. '_lst' → logprob: -17.250019073486328
    8. '_l' → logprob: -17.375019073486328
    9. '```' → logprob: -17.625019073486328
    10. '\' → logprob: -17.875019073486328

Token 461: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06071379408240318
    2. 'div' → logprob: -3.685713768005371
    3. 'total' → logprob: -4.560713768005371
    4. 'count' → logprob: -4.810713768005371
    5. '   ' → logprob: -5.185713768005371
    6. 'excluded' → logprob: -6.560713768005371
    7. 'multip' → logprob: -6.560713768005371
    8. ',' → logprob: -6.685713768005371
    9. '        
' → logprob: -6.810713768005371
    10. '```' → logprob: -7.310713768005371

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005160108208656311
    2. '```' → logprob: -6.880160331726074
    3. '   ' → logprob: -7.255160331726074
    4. 'div' → logprob: -7.380160331726074
    5. 'count' → logprob: -7.505160331726074
    6. ',' → logprob: -7.505160331726074
    7. 'total' → logprob: -7.755160331726074
    8. '        
' → logprob: -8.005160331726074
    9. ' divisible' → logprob: -8.880160331726074
    10. '<|end|>' → logprob: -9.130160331726074

Token 463: ' divisible' (ID: 167813)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8801261782646179
    2. 'div' → logprob: -1.2551262378692627
    3. 'total' → logprob: -2.0051262378692627
    4. '       ' → logprob: -2.8801262378692627
    5. 'cnt' → logprob: -3.3801262378692627
    6. 'res' → logprob: -4.255125999450684
    7. 'excluded' → logprob: -4.755125999450684
    8. 'ans' → logprob: -4.880125999450684
    9. 'result' → logprob: -5.255125999450684
    10. 'all' → logprob: -5.380125999450684

Token 464: '_count' (ID: 7536)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6342306137084961
    2. ' =' → logprob: -0.8842306137084961
    3. '_count' → logprob: -2.884230613708496
    4. '_by' → logprob: -7.634230613708496
    5. '_counts' → logprob: -9.759230613708496
    6. 'count' → logprob: -9.884230613708496
    7. '_' → logprob: -10.384230613708496
    8. '_numbers' → logprob: -10.509230613708496
    9. 'by' → logprob: -10.634230613708496
    10. 'Count' → logprob: -11.884230613708496

Token 465: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859020933508873
    2. '=' → logprob: -3.0485901832580566
    3. '   ' → logprob: -14.048590660095215
    4. ' +=' → logprob: -14.548590660095215
    5. ',' → logprob: -14.673590660095215
    6. ' ' → logprob: -14.923590660095215
    7. ')' → logprob: -15.298590660095215
    8. '=n' → logprob: -15.548590660095215
    9. ' ' → logprob: -16.2985897064209
    10. '(' → logprob: -16.7985897064209

Token 466: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16034364700317383
    2. ' count' → logprob: -1.9103436470031738
    3. ' n' → logprob: -9.285343170166016
    4. 'n' → logprob: -10.535343170166016
    5. '   ' → logprob: -16.535343170166016
    6. '(count' → logprob: -17.410343170166016
    7. ' ' → logprob: -17.660343170166016
    8. '
' → logprob: -19.035343170166016
    9. '	count' → logprob: -19.035343170166016
    10. 'div' → logprob: -19.410343170166016

Token 467: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.013018688187003136
    2. '(div' → logprob: -5.013018608093262
    3. 'multip' → logprob: -5.513018608093262
    4. '(' → logprob: -6.763018608093262
    5. '_div' → logprob: -7.638018608093262
    6. 'div' → logprob: -7.763018608093262
    7. '_' → logprob: -9.763018608093262
    8. '(n' → logprob: -9.888018608093262
    9. '_mult' → logprob: -10.638018608093262
    10. '_mul' → logprob: -11.388018608093262

Token 468: 'ultip' (ID: 22975)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.7701702117919922
    2. 'ultip' → logprob: -0.8951702117919922
    3. '_m' → logprob: -2.145170211791992
    4. 'div' → logprob: -4.895170211791992
    5. 's' → logprob: -5.895170211791992
    6. '_div' → logprob: -7.270170211791992
    7. '(div' → logprob: -8.395170211791992
    8. 'ables' → logprob: -9.520170211791992
    9. ' multiples' → logprob: -10.395170211791992
    10. '(' → logprob: -10.645170211791992

Token 469: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.030596213415265083
    2. 'iples' → logprob: -4.0305962562561035
    3. 'ples' → logprob: -4.9055962562561035
    4. 't' → logprob: -6.1555962562561035
    5. 'ables' → logprob: -7.1555962562561035
    6. 'ultip' → logprob: -7.2805962562561035
    7. 'bles' → logprob: -8.530595779418945
    8. 'iles' → logprob: -8.780595779418945
    9. 'ules' → logprob: -8.905595779418945
    10. 'utes' → logprob: -8.905595779418945

Token 470: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005944972508586943
    2. '(' → logprob: -7.500594615936279
    3. '(
' → logprob: -10.750594139099121
    4. ' (' → logprob: -10.875594139099121
    5. 'n' → logprob: -14.000594139099121
    6. '```' → logprob: -15.375594139099121
    7. ' ' → logprob: -17.875595092773438
    8. ' n' → logprob: -18.125595092773438
    9. '(
' → logprob: -18.125595092773438
    10. '(

' → logprob: -18.250595092773438

Token 471: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012963043991476297
    2. ',n' → logprob: -7.251296520233154
    3. '(n' → logprob: -7.876296520233154
    4. ',p' → logprob: -9.501296043395996
    5. ',
' → logprob: -9.876296043395996
    6. '(' → logprob: -9.876296043395996
    7. ' ,' → logprob: -11.251296043395996
    8. '(p' → logprob: -11.501296043395996
    9. '       ' → logprob: -13.876296043395996
    10. '   ' → logprob: -13.876296043395996

Token 472: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4740864336490631
    2. ' p' → logprob: -0.9740864038467407
    3. ')' → logprob: -12.47408676147461
    4. '[p' → logprob: -13.09908676147461
    5. '(p' → logprob: -13.72408676147461
    6. ')p' → logprob: -13.72408676147461
    7. '[' → logprob: -13.84908676147461
    8. ',p' → logprob: -16.47408676147461
    9. '```' → logprob: -17.09908676147461
    10. '_p' → logprob: -17.09908676147461

Token 473: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0280383548888494e-06
    2. 'list' → logprob: -14.000000953674316
    3. 'List' → logprob: -17.125001907348633
    4. 'p' → logprob: -17.250001907348633
    5. '[_' → logprob: -17.500001907348633
    6. '[' → logprob: -17.875001907348633
    7. '_LIST' → logprob: -18.125001907348633
    8. '_lst' → logprob: -18.875001907348633
    9. '_List' → logprob: -18.875001907348633
    10. '_' → logprob: -19.125001907348633

Token 474: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006548931705765426
    2. ')
' → logprob: -7.500654697418213
    3. '   ' → logprob: -9.250655174255371
    4. '       ' → logprob: -13.375655174255371
    5. ')*' → logprob: -13.375655174255371
    6. ' )' → logprob: -14.000655174255371
    7. '```' → logprob: -14.375655174255371
    8. ')
' → logprob: -15.625655174255371
    9. ')

' → logprob: -16.000654220581055
    10. ')**' → logprob: -16.000654220581055

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19117455184459686
    2. '
' → logprob: -2.4411745071411133
    3. '```' → logprob: -2.9411745071411133
    4. '        
' → logprob: -4.691174507141113
    5. '<|end|>' → logprob: -5.066174507141113
    6. ')' → logprob: -5.691174507141113
    7. '   ' → logprob: -5.691174507141113
    8. '  
' → logprob: -6.066174507141113
    9. '#' → logprob: -6.691174507141113
    10. '\n' → logprob: -6.816174507141113

Token 476: ' allowed' (ID: 9279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05104714259505272
    2. 'result' → logprob: -4.301047325134277
    3. ' revenue' → logprob: -4.676047325134277
    4. 'total' → logprob: -4.801047325134277
    5. 'print' → logprob: -5.426047325134277
    6. 'expected' → logprob: -6.051047325134277
    7. 're' → logprob: -6.051047325134277
    8. '```' → logprob: -6.426047325134277
    9. 'average' → logprob: -6.551047325134277
    10. ' total' → logprob: -6.676047325134277

Token 477: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.30221083760261536
    2. '_numbers' → logprob: -2.052210807800293
    3. ' =' → logprob: -2.302210807800293
    4. '=' → logprob: -4.427210807800293
    5. '_ratio' → logprob: -5.677210807800293
    6. '_sum' → logprob: -6.177210807800293
    7. '_fraction' → logprob: -6.427210807800293
    8. '_prob' → logprob: -6.552210807800293
    9. '_rate' → logprob: -6.802210807800293
    10. '_' → logprob: -6.802210807800293

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018171481788158417
    2. '=' → logprob: -4.018171310424805
    3. '   ' → logprob: -12.393171310424805
    4. ')' → logprob: -12.518171310424805
    5. ' ' → logprob: -12.643171310424805
    6. '<|end|>' → logprob: -13.393171310424805
    7. '```' → logprob: -13.393171310424805
    8. ',' → logprob: -13.518171310424805
    9. ' +=' → logprob: -13.893171310424805
    10. ' /' → logprob: -14.393171310424805

Token 479: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931536197662354
    2. ' n' → logprob: -0.6931536197662354
    3. '   ' → logprob: -12.193153381347656
    4. '	n' → logprob: -13.818153381347656
    5. '
' → logprob: -15.568153381347656
    6. '       ' → logprob: -16.443153381347656
    7. '```' → logprob: -16.443153381347656
    8. '(n' → logprob: -16.943153381347656
    9. ' ' → logprob: -17.193153381347656
    10. '_n' → logprob: -18.318153381347656

Token 480: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03384105861186981
    2. '-' → logprob: -3.408841133117676
    3. 'div' → logprob: -9.158841133117676
    4. ' ' → logprob: -10.283841133117676
    5. '<|end|>' → logprob: -10.783841133117676
    6. '-div' → logprob: -11.533841133117676
    7. '        ' → logprob: -12.158841133117676
    8. '   ' → logprob: -12.408841133117676
    9. ' ' → logprob: -13.283841133117676
    10. '       ' → logprob: -13.283841133117676

Token 481: ' divisible' (ID: 167813)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.0009120595059357584
    2. ' divisible' → logprob: -7.000912189483643
    3. '<div' → logprob: -15.125911712646484
    4. '(div' → logprob: -15.875911712646484
    5. '	div' → logprob: -16.125911712646484
    6. ' divis' → logprob: -17.000911712646484
    7. '_div' → logprob: -17.375911712646484
    8. ' div' → logprob: -18.000911712646484
    9. 'di' → logprob: -19.125911712646484
    10. '```' → logprob: -19.125911712646484

Token 482: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.650518920039758e-06
    2. 'count' → logprob: -12.750003814697266
    3. 'div' → logprob: -15.750003814697266
    4. 'able' → logprob: -16.250003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '_div' → logprob: -17.375003814697266
    7. ' _' → logprob: -17.375003814697266
    8. '\' → logprob: -17.375003814697266
    9. '_COUNT' → logprob: -17.625003814697266
    10. '       ' → logprob: -17.750003814697266

Token 483: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2654659152030945
    2. '
' → logprob: -1.7654659748077393
    3. '<|end|>' → logprob: -2.8904659748077393
    4. '        
' → logprob: -5.39046573638916
    5. '```' → logprob: -7.26546573638916
    6. '  
' → logprob: -8.01546573638916
    7. '<|end|>' → logprob: -8.14046573638916
    8. ',' → logprob: -9.14046573638916
    9. '    
' → logprob: -9.51546573638916
    10. ' 
' → logprob: -9.64046573638916

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017504945397377014
    2. '<|end|>' → logprob: -5.017505168914795
    3. '        
' → logprob: -5.642505168914795
    4. '
' → logprob: -5.767505168914795
    5. '   ' → logprob: -6.517505168914795
    6. '```' → logprob: -6.642505168914795
    7. '    
' → logprob: -7.892505168914795
    8. '  
' → logprob: -8.892504692077637
    9. '<|end|>' → logprob: -9.017504692077637
    10. ',' → logprob: -9.392504692077637

Token 485: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49026814103126526
    2. 'price' → logprob: -1.8652681112289429
    3. 're' → logprob: -2.2402682304382324
    4. 'expected' → logprob: -2.4902682304382324
    5. ' revenue' → logprob: -4.740268230438232
    6. 'print' → logprob: -4.990268230438232
    7. 'prob' → logprob: -5.240268230438232
    8. 'result' → logprob: -5.740268230438232
    9. 'total' → logprob: -5.740268230438232
    10. '```' → logprob: -5.865268230438232

Token 486: ' allowed' (ID: 9279)
  Prédit: ' allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.18134018778800964
    2. 'allowed' → logprob: -1.806340217590332
    3. ' m' → logprob: -6.681340217590332
    4. 'm' → logprob: -8.181340217590332
    5. ' not' → logprob: -11.431340217590332
    6. ' p' → logprob: -11.431340217590332
    7. ' n' → logprob: -11.806340217590332
    8. ' math' → logprob: -12.181340217590332
    9. 'n' → logprob: -12.306340217590332
    10. ' ' → logprob: -12.306340217590332

Token 487: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.16186408698558807
    2. ' >' → logprob: -2.9118640422821045
    3. ' _' → logprob: -3.2868640422821045
    4. '>' → logprob: -3.4118640422821045
    5. '_' → logprob: -3.9118640422821045
    6. '_counts' → logprob: -6.786864280700684
    7. '   ' → logprob: -7.161864280700684
    8. ' ==' → logprob: -7.411864280700684
    9. ' <' → logprob: -7.911864280700684
    10. ' ' → logprob: -8.036864280700684

Token 488: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5736880898475647
    2. ' ==' → logprob: -1.07368803024292
    3. '>' → logprob: -2.69868803024292
    4. '==' → logprob: -3.69868803024292
    5. ' <=' → logprob: -6.32368803024292
    6. ' <' → logprob: -7.32368803024292
    7. '<=' → logprob: -9.448688507080078
    8. '   ' → logprob: -9.573688507080078
    9. ' ' → logprob: -10.073688507080078
    10. ':' → logprob: -10.698688507080078

Token 489: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615754544734955
    2. ' ' → logprob: -4.758615970611572
    3. 'n' → logprob: -14.133615493774414
    4. ' n' → logprob: -15.758615493774414
    5. '```' → logprob: -15.758615493774414
    6. '   ' → logprob: -16.258615493774414
    7. '=' → logprob: -17.258615493774414
    8. '۰' → logprob: -17.821115493774414
    9. ' ' → logprob: -18.008615493774414
    10. '       ' → logprob: -18.133615493774414

Token 490: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '```' → logprob: -17.250030517578125
    4. '
' → logprob: -17.625030517578125
    5. 'n' → logprob: -17.750030517578125
    6. '۰' → logprob: -17.812530517578125
    7. '   ' → logprob: -18.187530517578125
    8. 'zero' → logprob: -18.687530517578125
    9. '０' → logprob: -19.000030517578125
    10. '000' → logprob: -19.375030517578125

Token 491: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2292017936706543
    2. ':' → logprob: -1.7292017936706543
    3. '           ' → logprob: -3.6042017936706543
    4. '       ' → logprob: -9.354202270507812
    5. ' or' → logprob: -10.354202270507812
    6. ':return' → logprob: -10.354202270507812
    7. ',' → logprob: -11.729202270507812
    8. '   ' → logprob: -11.854202270507812
    9. ' and' → logprob: -11.979202270507812
    10. ':
' → logprob: -12.229202270507812

Token 492: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000743399141356349
    2. ' return' → logprob: -7.875743389129639
    3. 'return' → logprob: -9.000743865966797
    4. '```' → logprob: -9.500743865966797
    5. 'print' → logprob: -9.750743865966797
    6. '
' → logprob: -10.125743865966797
    7. ' print' → logprob: -10.500743865966797
    8. '       ' → logprob: -11.250743865966797
    9. '               ' → logprob: -11.625743865966797
    10. ' continue' → logprob: -12.250743865966797

Token 493: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0336374007165432
    2. '       ' → logprob: -4.283637523651123
    3. '           ' → logprob: -4.533637523651123
    4. ' print' → logprob: -4.783637523651123
    5. 'return' → logprob: -9.658637046813965
    6. '```' → logprob: -10.158637046813965
    7. 'continue' → logprob: -10.533637046813965
    8. '               ' → logprob: -10.908637046813965
    9. '
' → logprob: -11.158637046813965
    10. '   ' → logprob: -11.658637046813965

Token 494: ' No' (ID: 3004)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15754671394824982
    2. ' print' → logprob: -2.0325467586517334
    3. '           ' → logprob: -4.532546520233154
    4. 'return' → logprob: -6.657546520233154
    5. '```' → logprob: -6.782546520233154
    6. '       ' → logprob: -7.157546520233154
    7. ' return' → logprob: -7.407546520233154
    8. 'continue' → logprob: -9.282546997070312
    9. ' continue' → logprob: -9.907546997070312
    10. '``' → logprob: -10.782546997070312

Token 495: ' year' (ID: 1284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8125998377799988
    2. ' print' → logprob: -1.6875998973846436
    3. '
' → logprob: -2.3125998973846436
    4. ' output' → logprob: -2.4375998973846436
    5. 'output' → logprob: -2.8125998973846436
    6. '           ' → logprob: -3.6875998973846436
    7. ' return' → logprob: -3.8125998973846436
    8. '```' → logprob: -4.0625996589660645
    9. 'return' → logprob: -4.1875996589660645
    10. '       ' → logprob: -4.5625996589660645

Token 496: ' left' (ID: 3561)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18566210567951202
    2. '           ' → logprob: -2.435662031173706
    3. '
' → logprob: -3.435662031173706
    4. '       ' → logprob: -4.810662269592285
    5. ''s' → logprob: -4.935662269592285
    6. ',
' → logprob: -5.060662269592285
    7. '\n' → logprob: -5.310662269592285
    8. 'print' → logprob: -5.560662269592285
    9. '   ' → logprob: -5.935662269592285
    10. ',' → logprob: -6.560662269592285

Token 497: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23042379319667816
    2. '       ' → logprob: -1.6054238080978394
    3. '
' → logprob: -7.105423927307129
    4. ' to' → logprob: -7.105423927307129
    5. ',' → logprob: -7.230423927307129
    6. 'print' → logprob: -7.605423927307129
    7. '               ' → logprob: -7.605423927307129
    8. '\n' → logprob: -8.230423927307129
    9. '        
' → logprob: -8.355423927307129
    10. 'return' → logprob: -8.480423927307129

Token 498: ' order' (ID: 2569)
  Prédit: 'investment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'investment' → logprob: -0.8773565888404846
    2. 'expected' → logprob: -2.50235652923584
    3. 'div' → logprob: -2.75235652923584
    4. 'the' → logprob: -3.37735652923584
    5. 'profit' → logprob: -3.75235652923584
    6. 're' → logprob: -3.87735652923584
    7. 'payment' → logprob: -4.00235652923584
    8. 'har' → logprob: -4.00235652923584
    9. 'growth' → logprob: -4.00235652923584
    10. 'a' → logprob: -4.18985652923584

Token 499: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1592556238174438
    2. '       ' → logprob: -1.2842556238174438
    3. '           ' → logprob: -1.4092556238174438
    4. ',' → logprob: -3.2842555046081543
    5. ' to' → logprob: -3.2842555046081543
    6. ':' → logprob: -3.6592555046081543
    7. ',
' → logprob: -4.159255504608154
    8. '
' → logprob: -4.784255504608154
    9. '        
' → logprob: -5.034255504608154
    10. '   ' → logprob: -5.409255504608154

Token 500: ' expected' (ID: 5930)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.624136745929718
    2. 'print' → logprob: -0.874136745929718
    3. '           ' → logprob: -3.1241366863250732
    4. '       ' → logprob: -6.499136924743652
    5. '```' → logprob: -7.374136924743652
    6. ' return' → logprob: -8.374136924743652
    7. ' continue' → logprob: -8.374136924743652
    8. 'continue' → logprob: -9.124136924743652
    9. '               ' → logprob: -9.374136924743652
    10. 'return' → logprob: -9.499136924743652

Token 501: ' income' (ID: 11583)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.48844510316848755
    2. 'value' → logprob: -1.4884450435638428
    3. '_re' → logprob: -2.4884450435638428
    4. '_value' → logprob: -3.4884450435638428
    5. ' revenue' → logprob: -4.363445281982422
    6. ' value' → logprob: -4.988445281982422
    7. '```' → logprob: -5.113445281982422
    8. '_' → logprob: -5.238445281982422
    9. ' =' → logprob: -5.613445281982422
    10. 'price' → logprob: -5.738445281982422

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03919222205877304
    2. '=' → logprob: -3.2891921997070312
    3. ':' → logprob: -7.789192199707031
    4. ' =
' → logprob: -8.039192199707031
    5. '           ' → logprob: -9.539192199707031
    6. ' +=' → logprob: -9.789192199707031
    7. '```' → logprob: -9.789192199707031
    8. ',' → logprob: -10.039192199707031
    9. ' is' → logprob: -10.164192199707031
    10. '(' → logprob: -10.539192199707031

Token 503: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003646399360150099
    2. ' ' → logprob: -5.628646373748779
    3. '
' → logprob: -11.253646850585938
    4. '`' → logprob: -12.003646850585938
    5. '"' → logprob: -12.503646850585938
    6. ' 
' → logprob: -12.503646850585938
    7. '``' → logprob: -12.503646850585938
    8. '```' → logprob: -12.503646850585938
    9. ''' → logprob: -12.753646850585938
    10. '   ' → logprob: -13.003646850585938

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006090328097343445
    2. ' ' → logprob: -7.625608921051025
    3. ''' → logprob: -9.875609397888184
    4. '"' → logprob: -9.875609397888184
    5. '`' → logprob: -11.750609397888184
    6. '   ' → logprob: -13.125609397888184
    7. '\n' → logprob: -13.500609397888184
    8. 'float' → logprob: -13.625609397888184
    9. '000' → logprob: -13.875609397888184
    10. '
' → logprob: -14.625609397888184

Token 505: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7657689452171326
    2. '           ' → logprob: -0.7657689452171326
    3. '
' → logprob: -2.7657690048217773
    4. '```' → logprob: -5.515769004821777
    5. '\n' → logprob: -7.265769004821777
    6. '   ' → logprob: -7.515769004821777
    7. ',' → logprob: -8.015769004821777
    8. 'return' → logprob: -8.390769004821777
    9. '    
' → logprob: -8.515769004821777
    10. '        
' → logprob: -8.890769004821777

Token 506: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010749487206339836
    2. '           ' → logprob: -4.760749340057373
    3. '
' → logprob: -6.635749340057373
    4. '```' → logprob: -8.010749816894531
    5. '   ' → logprob: -8.510749816894531
    6. '        
' → logprob: -9.510749816894531
    7. ',' → logprob: -10.010749816894531
    8. 'print' → logprob: -10.135749816894531
    9. '\n' → logprob: -10.510749816894531
    10. 'else' → logprob: -10.635749816894531

Token 507: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0018073876854032278
    2. '           ' → logprob: -6.62680721282959
    3. '       ' → logprob: -8.37680721282959
    4. ' print' → logprob: -8.75180721282959
    5. 'return' → logprob: -9.62680721282959
    6. 'continue' → logprob: -10.75180721282959
    7. '```' → logprob: -13.00180721282959
    8. '   ' → logprob: -13.37680721282959
    9. '               ' → logprob: -13.62680721282959
    10. '0' → logprob: -16.126808166503906

Token 508: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045140698784962296
    2. '0' → logprob: -7.875451564788818
    3. ' (' → logprob: -9.87545108795166
    4. '('' → logprob: -11.00045108795166
    5. '("' → logprob: -13.12545108795166
    6. '`' → logprob: -14.87545108795166
    7. ' ' → logprob: -15.12545108795166
    8. '()' → logprob: -15.50045108795166
    9. '```' → logprob: -16.500452041625977
    10. '('(' → logprob: -16.875452041625977

Token 509: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00672211404889822
    2. ' ' → logprob: -5.0067219734191895
    3. '1' → logprob: -13.256722450256348
    4. '   ' → logprob: -14.006722450256348
    5. ''' → logprob: -14.131722450256348
    6. '{' → logprob: -14.506722450256348
    7. '\n' → logprob: -14.631722450256348
    8. '       ' → logprob: -15.006722450256348
    9. '100' → logprob: -15.256722450256348
    10. '')' → logprob: -15.256722450256348

Token 510: '.' (ID: 13)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0036853551864624023
    2. '')
' → logprob: -5.628685474395752
    3. '.' → logprob: -10.128684997558594
    4. ' ')' → logprob: -10.503684997558594
    5. '0' → logprob: -12.128684997558594
    6. ')' → logprob: -12.253684997558594
    7. '')
' → logprob: -12.878684997558594
    8. ' ')
' → logprob: -13.503684997558594
    9. ''' → logprob: -13.628684997558594
    10. '\n' → logprob: -13.878684997558594

Token 511: '000' (ID: 1302)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011497443774715066
    2. '')' → logprob: -7.501149654388428
    3. '000' → logprob: -7.876149654388428
    4. '00' → logprob: -8.501150131225586
    5. '5' → logprob: -11.876150131225586
    6. '')
' → logprob: -13.251150131225586
    7. ''' → logprob: -13.376150131225586
    8. '.' → logprob: -13.626150131225586
    9. '6' → logprob: -14.626150131225586
    10. '1' → logprob: -15.001150131225586

Token 512: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.6934905052185059
    2. '')' → logprob: -0.6934905052185059
    3. '0' → logprob: -8.568490982055664
    4. '00' → logprob: -9.568490982055664
    5. ''' → logprob: -10.193490982055664
    6. '')
' → logprob: -11.068490982055664
    7. '001' → logprob: -11.193490982055664
    8. '\n' → logprob: -11.818490982055664
    9. ')' → logprob: -12.818490982055664
    10. '")' → logprob: -13.318490982055664

Token 513: '000' (ID: 1302)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004093835595995188
    2. '')
' → logprob: -5.504093647003174
    3. '0' → logprob: -11.504094123840332
    4. '')
' → logprob: -12.504094123840332
    5. '")' → logprob: -14.504094123840332
    6. ')' → logprob: -14.754094123840332
    7. ''' → logprob: -15.004094123840332
    8. '000' → logprob: -15.129094123840332
    9. ' ')' → logprob: -17.004093170166016
    10. '');' → logprob: -17.129093170166016

Token 514: '0' (ID: 15)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0009707756689749658
    2. '0' → logprob: -7.250970840454102
    3. '000' → logprob: -8.625970840454102
    4. '')
' → logprob: -9.500970840454102
    5. '00' → logprob: -13.125970840454102
    6. ''' → logprob: -13.500970840454102
    7. ')' → logprob: -13.625970840454102
    8. '")' → logprob: -14.250970840454102
    9. '');' → logprob: -14.625970840454102
    10. ' ')' → logprob: -15.000970840454102

Token 515: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00030412263004109263
    2. '')
' → logprob: -8.250304222106934
    3. ')' → logprob: -10.250304222106934
    4. '")' → logprob: -12.375304222106934
    5. ''' → logprob: -13.000304222106934
    6. '')
' → logprob: -14.875304222106934
    7. '');' → logprob: -15.125304222106934
    8. '0' → logprob: -16.125303268432617
    9. '000' → logprob: -16.375303268432617
    10. '\n' → logprob: -17.500303268432617

Token 516: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05561786890029907
    2. '           ' → logprob: -2.9306178092956543
    3. '```' → logprob: -7.430617809295654
    4. 'else' → logprob: -9.305618286132812
    5. '
' → logprob: -11.305618286132812
    6. '<|end|>' → logprob: -11.430618286132812
    7. '   ' → logprob: -11.680618286132812
    8. ' else' → logprob: -12.305618286132812
    9. 'continue' → logprob: -12.430618286132812
    10. 'elif' → logprob: -13.180618286132812

Token 517: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5778926014900208
    2. '       ' → logprob: -0.8278926014900208
    3. 'continue' (adapté à ' continue') → logprob: -6.327892780303955
    4. ' continue' → logprob: -9.452892303466797
    5. '   ' → logprob: -10.952892303466797
    6. '
' → logprob: -11.202892303466797
    7. '```' → logprob: -11.202892303466797
    8. '               ' → logprob: -11.702892303466797
    9. 'return' → logprob: -11.827892303466797
    10. '	continue' → logprob: -11.827892303466797

Token 518: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02854808419942856
    2. '
' → logprob: -3.778548002243042
    3. '        
' → logprob: -5.403548240661621
    4. '```' → logprob: -7.403548240661621
    5. '<|end|>' → logprob: -10.028548240661621
    6. '\
' → logprob: -10.653548240661621
    7. '\n' → logprob: -10.653548240661621
    8. '            
' → logprob: -11.528548240661621
    9. '  
' → logprob: -11.653548240661621
    10. '``' → logprob: -11.653548240661621

Token 519: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020148828625679016
    2. '```' → logprob: -6.502015113830566
    3. '        
' → logprob: -8.127015113830566
    4. '
' → logprob: -9.877015113830566
    5. '   ' → logprob: -11.002015113830566
    6. 'n' → logprob: -11.002015113830566
    7. '``' → logprob: -11.002015113830566
    8. '`' → logprob: -11.252015113830566
    9. '           ' → logprob: -11.252015113830566
    10. '<|end|>' → logprob: -11.502015113830566

Token 520: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5010475516319275
    2. 'price' → logprob: -1.7510476112365723
    3. 'prob' → logprob: -2.1260476112365723
    4. '```' → logprob: -3.7510476112365723
    5. 'order' → logprob: -4.001047611236572
    6. 'p' → logprob: -4.376047611236572
    7. ' price' → logprob: -4.626047611236572
    8. ' p' → logprob: -5.001047611236572
    9. 'k' → logprob: -5.626047611236572
    10. 'result' → logprob: -6.376047611236572

Token 521: ' Sum' (ID: 34138)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.11316003650426865
    2. 'prob' → logprob: -3.2381601333618164
    3. 'price' → logprob: -3.7381601333618164
    4. 're' → logprob: -4.238160133361816
    5. 'p' → logprob: -4.613160133361816
    6. 'total' → logprob: -5.863160133361816
    7. '#' → logprob: -5.863160133361816
    8. 'expect' → logprob: -6.363160133361816
    9. 'income' → logprob: -6.488160133361816
    10. 'rev' → logprob: -6.488160133361816

Token 522: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.872714638710022
    2. '_p' → logprob: -1.247714638710022
    3. '_allowed' → logprob: -2.6227145195007324
    4. ' =' → logprob: -2.8727145195007324
    5. '_of' → logprob: -3.3727145195007324
    6. 'allowed' → logprob: -3.6227145195007324
    7. '_=' → logprob: -4.247714519500732
    8. 'p' → logprob: -4.247714519500732
    9. '=' → logprob: -4.872714519500732
    10. '_expected' → logprob: -4.872714519500732

Token 523: ' all' (ID: 722)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5022379755973816
    2. 'allowed' → logprob: -1.0022380352020264
    3. 'range' → logprob: -4.877237796783447
    4. 'div' → logprob: -5.377237796783447
    5. ' p' → logprob: -5.752237796783447
    6. ' allowed' → logprob: -6.127237796783447
    7. 'i' → logprob: -6.377237796783447
    8. '1' → logprob: -6.752237796783447
    9. 'expected' → logprob: -6.752237796783447
    10. 'numbers' → logprob: -7.377237796783447

Token 524: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.5952239632606506
    2. 'p' → logprob: -0.9702239632606506
    3. ' allowed' → logprob: -3.845223903656006
    4. ' p' → logprob: -3.845223903656006
    5. 'numbers' → logprob: -4.220223903656006
    6. 'range' → logprob: -5.845223903656006
    7. 'possible' → logprob: -6.220223903656006
    8. 'div' → logprob: -6.595223903656006
    9. ' numbers' → logprob: -6.845223903656006
    10. 'remaining' → logprob: -7.595223903656006

Token 525: ' years' (ID: 2101)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.9173890948295593
    2. 'numbers' → logprob: -1.292389154434204
    3. 'years' → logprob: -1.917389154434204
    4. '_year' → logprob: -3.042389154434204
    5. '_' → logprob: -3.917389154434204
    6. ' numbers' → logprob: -3.917389154434204
    7. '_nums' → logprob: -4.167388916015625
    8. ' years' → logprob: -4.667388916015625
    9. '_div' → logprob: -4.917388916015625
    10. '_values' → logprob: -5.042388916015625

Token 526: ' =' (ID: 314)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6327545046806335
    2. 'sum' → logprob: -1.7577545642852783
    3. ' =' → logprob: -2.0077545642852783
    4. '_sum' → logprob: -2.7577545642852783
    5. '=' → logprob: -3.2577545642852783
    6. ' sum' → logprob: -4.132754325866699
    7. '
' → logprob: -4.632754325866699
    8. 'allowed' → logprob: -5.132754325866699
    9. ',' → logprob: -5.257754325866699
    10. '_' → logprob: -5.507754325866699

Token 527: ' sum' (ID: 4215)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.41133081912994385
    2. ' n' → logprob: -2.4113306999206543
    3. 'allowed' → logprob: -2.5363306999206543
    4. ' allowed' → logprob: -2.7863306999206543
    5. '(n' → logprob: -3.2863306999206543
    6. 'n' → logprob: -3.4113306999206543
    7. '(' → logprob: -3.7863306999206543
    8. '((' → logprob: -4.911330699920654
    9. ' ((' → logprob: -5.286330699920654
    10. '       ' → logprob: -8.286331176757812

Token 528: '(' (ID: 7)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.49933645129203796
    2. '(i' → logprob: -2.4993364810943604
    3. '_' → logprob: -2.7493364810943604
    4. '(' → logprob: -2.7493364810943604
    5. 'of' → logprob: -3.1243364810943604
    6. '_{' → logprob: -3.3743364810943604
    7. '=' → logprob: -3.8743364810943604
    8. 'from' → logprob: -3.9993364810943604
    9. '_of' → logprob: -4.499336242675781
    10. 'range' → logprob: -4.499336242675781

Token 529: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2263532131910324
    2. 'allowed' → logprob: -2.351353168487549
    3. '1' → logprob: -3.101353168487549
    4. 'k' → logprob: -3.601353168487549
    5. '(range' → logprob: -3.851353168487549
    6. 'i' → logprob: -4.976353168487549
    7. 'y' → logprob: -6.726353168487549
    8. '(' → logprob: -7.101353168487549
    9. 'list' → logprob: -7.226353168487549
    10. 'x' → logprob: -7.226353168487549

Token 530: '..' (ID: 485)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4276333749294281
    2. ' +' → logprob: -2.052633285522461
    3. ')' → logprob: -2.677633285522461
    4. ' to' → logprob: -2.927633285522461
    5. 'to' → logprob: -3.302633285522461
    6. ' through' → logprob: -3.802633285522461
    7. ',' → logprob: -4.177633285522461
    8. '
' → logprob: -4.552633285522461
    9. 'through' → logprob: -6.177633285522461
    10. '..' → logprob: -6.302633285522461

Token 531: 'n' (ID: 77)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.20386649668216705
    2. ' allowed' → logprob: -2.203866481781006
    3. 'n' → logprob: -2.953866481781006
    4. ' n' → logprob: -3.828866481781006
    5. '{' → logprob: -10.078866958618164
    6. ' ' → logprob: -10.703866958618164
    7. '   ' → logprob: -10.828866958618164
    8. ')' → logprob: -11.328866958618164
    9. ' )' → logprob: -11.578866958618164
    10. '1' → logprob: -11.578866958618164

Token 532: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10458920896053314
    2. ' -' → logprob: -2.3545892238616943
    3. '-' → logprob: -5.729588985443115
    4. ')-' → logprob: -7.354588985443115
    5. ' )' → logprob: -7.854588985443115
    6. '*' → logprob: -10.604589462280273
    7. '-)' → logprob: -11.729589462280273
    8. ')-(' → logprob: -11.854589462280273
    9. '')' → logprob: -12.104589462280273
    10. '+' → logprob: -12.104589462280273

Token 533: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009335381910204887
    2. '-' → logprob: -4.759335517883301
    3. ' *' → logprob: -8.2593355178833
    4. '*' → logprob: -8.6343355178833
    5. ')' → logprob: -9.1343355178833
    6. ' ' → logprob: -9.6343355178833
    7. ',' → logprob: -10.8843355178833
    8. '```' → logprob: -11.2593355178833
    9. '=' → logprob: -11.3843355178833
    10. '       ' → logprob: -11.7593355178833

Token 534: ' sum' (ID: 4215)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.01933722384274006
    2. 'div' → logprob: -4.394337177276611
    3. ' count' → logprob: -5.019337177276611
    4. 'sum' → logprob: -8.64433765411377
    5. ' divisible' → logprob: -12.26933765411377
    6. ' div' → logprob: -12.76933765411377
    7. ' sum' → logprob: -12.89433765411377
    8. '(count' → logprob: -13.51933765411377
    9. '
' → logprob: -13.64433765411377
    10. ' (' → logprob: -13.76933765411377

Token 535: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6042583584785461
    2. '_m' → logprob: -2.1042582988739014
    3. '(div' → logprob: -2.1042582988739014
    4. '_div' → logprob: -2.4792582988739014
    5. 'div' → logprob: -3.6042582988739014
    6. '_of' → logprob: -3.6042582988739014
    7. '_' → logprob: -3.7292582988739014
    8. 'of' → logprob: -3.9792582988739014
    9. '(count' → logprob: -4.8542585372924805
    10. '(i' → logprob: -4.9792585372924805

Token 536: ' all' (ID: 722)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'multip' → logprob: -1.060847282409668
    2. 'div' → logprob: -1.185847282409668
    3. ' p' → logprob: -1.935847282409668
    4. 'p' → logprob: -1.935847282409668
    5. ' multiples' → logprob: -3.310847282409668
    6. '[i' → logprob: -5.560847282409668
    7. ' divisible' → logprob: -5.685847282409668
    8. '[p' → logprob: -5.935847282409668
    9. 'all' → logprob: -6.185847282409668
    10. '[' → logprob: -6.185847282409668

Token 537: ' multiples' (ID: 70720)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.2872233390808105
    2. 'multip' → logprob: -1.2872233390808105
    3. 'p' → logprob: -1.9122233390808105
    4. ' p' → logprob: -2.2872233390808105
    5. ' multiples' → logprob: -2.7872233390808105
    6. 'excluded' → logprob: -2.9122233390808105
    7. ' divisible' → logprob: -3.7872233390808105
    8. 'dis' → logprob: -4.4122233390808105
    9. ' excluded' → logprob: -4.9122233390808105
    10. ' dis' → logprob: -4.9122233390808105

Token 538: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.41639113426208496
    2. '       ' → logprob: -2.166391134262085
    3. ' of' → logprob: -2.791391134262085
    4. '=' → logprob: -3.166391134262085
    5. 'def' → logprob: -3.416391134262085
    6. ' =' → logprob: -3.416391134262085
    7. '_of' → logprob: -3.791391134262085
    8. '```' → logprob: -4.791391372680664
    9. '(' → logprob: -5.041391372680664
    10. '   ' → logprob: -5.791391372680664

Token 539: ' forbidden' (ID: 74435)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5514827966690063
    2. 'any' → logprob: -1.6764827966690063
    3. ' p' → logprob: -1.8014827966690063
    4. ' any' → logprob: -2.801482677459717
    5. 'each' → logprob: -5.051482677459717
    6. 'all' → logprob: -7.051482677459717
    7. ' each' → logprob: -7.051482677459717
    8. '```' → logprob: -7.426482677459717
    9. ' ' → logprob: -7.801482677459717
    10. 'the' → logprob: -7.926482677459717

Token 540: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1280936449766159
    2. ' p' → logprob: -2.253093719482422
    3. 's' → logprob: -5.128093719482422
    4. ' =' → logprob: -6.628093719482422
    5. 'def' → logprob: -6.628093719482422
    6. 'years' → logprob: -6.628093719482422
    7. '_list' → logprob: -6.753093719482422
    8. 'numbers' → logprob: -7.253093719482422
    9. '_p' → logprob: -7.503093719482422
    10. ' ' → logprob: -7.878093719482422

Token 541: '_i' (ID: 10853)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.10438024252653122
    2. '_i' → logprob: -2.3543801307678223
    3. 's' → logprob: -6.104380130767822
    4. '_s' → logprob: -7.104380130767822
    5. '_' → logprob: -7.479380130767822
    6. ' _' → logprob: -8.47938060760498
    7. 'i' → logprob: -9.60438060760498
    8. ''_' → logprob: -10.22938060760498
    9. '_lst' → logprob: -10.47938060760498
    10. '[i' → logprob: -10.85438060760498

Token 542: '’s' (ID: 802)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6926231384277344
    2. '       ' → logprob: -1.4426231384277344
    3. '_list' → logprob: -2.1926231384277344
    4. '_' → logprob: -3.6926231384277344
    5. '_s' → logprob: -3.9426231384277344
    6. ',' → logprob: -4.192623138427734
    7. '
' → logprob: -4.817623138427734
    8. '=' → logprob: -4.817623138427734
    9. '_
' → logprob: -4.942623138427734
    10. 'def' → logprob: -5.192623138427734

Token 543: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.166340172290802
    2. '
' → logprob: -2.9163401126861572
    3. 'sum' → logprob: -3.2913401126861572
    4. 'allowed' → logprob: -3.4163401126861572
    5. 's' → logprob: -5.416340351104736
    6. '#' → logprob: -5.916340351104736
    7. '        
' → logprob: -6.041340351104736
    8. ',' → logprob: -6.416340351104736
    9. 'excluded' → logprob: -6.541340351104736
    10. 'total' → logprob: -6.541340351104736

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00735046248883009
    2. 'sum' → logprob: -6.007350444793701
    3. 'allowed' → logprob: -6.507350444793701
    4. '```' → logprob: -7.007350444793701
    5. '
' → logprob: -7.257350444793701
    6. 'total' → logprob: -7.382350444793701
    7. '#' → logprob: -7.757350444793701
    8. 'multip' → logprob: -9.13235092163086
    9. 'excluded' → logprob: -9.25735092163086
    10. 'div' → logprob: -9.63235092163086

Token 545: ' total' (ID: 3609)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.32800769805908203
    2. '       ' → logprob: -2.078007698059082
    3. 'total' (adapté à ' total') → logprob: -2.453007698059082
    4. ' sum' → logprob: -3.578007698059082
    5. 's' → logprob: -4.703007698059082
    6. ' total' → logprob: -4.828007698059082
    7. 'allowed' → logprob: -5.078007698059082
    8. '
' → logprob: -5.328007698059082
    9. ' forbidden' → logprob: -6.203007698059082
    10. 'multip' → logprob: -6.328007698059082

Token 546: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.157160684466362
    2. '_' → logprob: -2.282160758972168
    3. ' =' → logprob: -3.907160758972168
    4. '=' → logprob: -3.907160758972168
    5. '_allowed' → logprob: -6.657160758972168
    6. 'sum' → logprob: -7.032160758972168
    7. '_s' → logprob: -8.407160758972168
    8. ' _' → logprob: -8.907160758972168
    9. '=sum' → logprob: -9.157160758972168
    10. '_numbers' → logprob: -9.282160758972168

Token 547: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14398744702339172
    2. '=' → logprob: -2.0189874172210693
    3. ' -' → logprob: -7.143987655639648
    4. '_' → logprob: -8.768987655639648
    5. '-' → logprob: -8.893987655639648
    6. ' ' → logprob: -10.143987655639648
    7. ')' → logprob: -10.643987655639648
    8. ' -=' → logprob: -10.893987655639648
    9. '=sum' → logprob: -10.893987655639648
    10. 'from' → logprob: -11.018987655639648

Token 548: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16027024388313293
    2. ' n' → logprob: -1.9102702140808105
    3. '   ' → logprob: -10.785270690917969
    4. '(n' → logprob: -11.160270690917969
    5. ' (' → logprob: -11.660270690917969
    6. '    ' → logprob: -14.035270690917969
    7. '	n' → logprob: -14.035270690917969
    8. ' ' → logprob: -14.910270690917969
    9. '_n' → logprob: -15.535270690917969
    10. '(' → logprob: -16.03527069091797

Token 549: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13629063963890076
    2. ' *' → logprob: -2.6362905502319336
    3. '*(' → logprob: -2.8862905502319336
    4. '   ' → logprob: -13.761290550231934
    5. '(n' → logprob: -15.386290550231934
    6. ' ' → logprob: -15.886290550231934
    7. '*n' → logprob: -15.886290550231934
    8. '**' → logprob: -16.38629150390625
    9. ' *(' → logprob: -16.63629150390625
    10. '  ' → logprob: -17.26129150390625

Token 550: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007123126997612417
    2. ' (' → logprob: -7.2507123947143555
    3. '(' → logprob: -13.625712394714355
    4. '
' → logprob: -14.500712394714355
    5. '   ' → logprob: -15.500712394714355
    6. '`' → logprob: -15.500712394714355
    7. '((' → logprob: -16.00071144104004
    8. '(N' → logprob: -16.87571144104004
    9. '```' → logprob: -17.37571144104004
    10. 'n' → logprob: -17.62571144104004

Token 551: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000915039679966867
    2. '(n' → logprob: -7.000915050506592
    3. ' n' → logprob: -12.750914573669434
    4. '   ' → logprob: -15.500914573669434
    5. '	n' → logprob: -15.500914573669434
    6. ')n' → logprob: -15.500914573669434
    7. '_n' → logprob: -17.25091552734375
    8. '$n' → logprob: -18.00091552734375
    9. '<n' → logprob: -18.37591552734375
    10. '```' → logprob: -18.62591552734375

Token 552: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011054662987589836
    2. ' +' → logprob: -4.511054515838623
    3. '1' → logprob: -12.386054992675781
    4. '```' → logprob: -13.761054992675781
    5. '+
' → logprob: -14.636054992675781
    6. '   ' → logprob: -15.261054992675781
    7. '
' → logprob: -15.761054992675781
    8. ''+' → logprob: -15.886054992675781
    9. '`' → logprob: -16.01105499267578
    10. '＋' → logprob: -16.01105499267578

Token 553: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.625001907348633
    4. '```' → logprob: -19.125001907348633
    5. '           ' → logprob: -19.250001907348633
    6. '       ' → logprob: -20.250001907348633
    7. '2' → logprob: -20.375001907348633
    8. ')' → logprob: -20.625001907348633
    9. '
' → logprob: -21.625001907348633
    10. '0' → logprob: -21.625001907348633

Token 554: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '2' → logprob: -18.375003814697266
    4. '```' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '`' → logprob: -19.500003814697266
    7. ')' → logprob: -20.000003814697266
    8. '0' → logprob: -20.125003814697266
    9. ''' → logprob: -21.000003814697266
    10. '  ' → logprob: -22.125003814697266

Token 555: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030461661517620087
    2. ')//' → logprob: -6.253046035766602
    3. '//' → logprob: -7.003046035766602
    4. ' //' → logprob: -9.378046035766602
    5. ' )' → logprob: -9.503046035766602
    6. ')/' → logprob: -10.878046035766602
    7. '```' → logprob: -11.503046035766602
    8. '`)' → logprob: -11.753046035766602
    9. '')' → logprob: -12.628046035766602
    10. '）' → logprob: -12.878046035766602

Token 556: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.05009879171848297
    2. ' //' → logprob: -3.1750988960266113
    3. '```' → logprob: -5.550098896026611
    4. '/' → logprob: -5.925098896026611
    5. ' /' → logprob: -8.425098419189453
    6. '   ' → logprob: -8.800098419189453
    7. ')' → logprob: -10.300098419189453
    8. '*' → logprob: -10.675098419189453
    9. '       ' → logprob: -10.675098419189453
    10. '#' → logprob: -10.675098419189453

Token 557: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '1' → logprob: -17.5
    4. '   ' → logprob: -18.625
    5. '```' → logprob: -21.0
    6. '       ' → logprob: -21.625
    7. '
' → logprob: -21.875
    8. '  ' → logprob: -22.625
    9. '           ' → logprob: -22.75
    10. '    ' → logprob: -23.125

Token 558: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.375
    3. ' ' → logprob: -17.75
    4. '```' → logprob: -20.5
    5. '   ' → logprob: -21.75
    6. '3' → logprob: -21.75
    7. '۲' → logprob: -23.0
    8. '0' → logprob: -23.25
    9. '202' → logprob: -23.25
    10. '4' → logprob: -23.375

Token 559: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28077661991119385
    2. '
' → logprob: -1.9057766199111938
    3. '<|end|>' → logprob: -2.7807765007019043
    4. '        
' → logprob: -4.530776500701904
    5. 'sum' → logprob: -5.405776500701904
    6. 'def' → logprob: -5.905776500701904
    7. 'allowed' → logprob: -5.905776500701904
    8. 'excluded' → logprob: -6.030776500701904
    9. 'multip' → logprob: -6.155776500701904
    10. ',' → logprob: -6.530776500701904

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5301986932754517
    2. 'for' → logprob: -1.0301986932754517
    3. 'div' → logprob: -3.655198574066162
    4. 'multip' → logprob: -4.030198574066162
    5. 'sum' → logprob: -5.905198574066162
    6. '#' → logprob: -6.155198574066162
    7. 'def' → logprob: -6.530198574066162
    8. '
' → logprob: -6.530198574066162
    9. 'excluded' → logprob: -6.655198574066162
    10. 'allowed' → logprob: -7.655198574066162

Token 561: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49369093775749207
    2. 'def' → logprob: -2.1186909675598145
    3. 'multip' → logprob: -2.7436909675598145
    4. 'excluded' → logprob: -2.7436909675598145
    5. 'sum' → logprob: -2.8686909675598145
    6. '       ' → logprob: -3.2436909675598145
    7. 'from' → logprob: -4.4936909675598145
    8. 'exclude' → logprob: -4.9936909675598145
    9. '#' (adapté à ' #') → logprob: -5.3686909675598145
    10. 'subset' → logprob: -5.4936909675598145

Token 562: ' Inclusion' (ID: 151943)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9190118312835693
    2. 'def' → logprob: -1.1690118312835693
    3. 'multip' → logprob: -2.4190118312835693
    4. 'from' → logprob: -2.6690118312835693
    5. 'sum' → logprob: -3.0440118312835693
    6. 'excluded' → logprob: -3.1690118312835693
    7. 'div' → logprob: -4.044012069702148
    8. '#' → logprob: -4.794012069702148
    9. 'exclude' → logprob: -5.669012069702148
    10. 'multiple' → logprob: -5.794012069702148

Token 563: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31602931022644043
    2. '-ex' → logprob: -1.3160293102264404
    3. '–' → logprob: -6.1910295486450195
    4. ' -' → logprob: -8.31602954864502
    5. 'def' → logprob: -8.94102954864502
    6. 'ex' → logprob: -9.06602954864502
    7. 'from' → logprob: -10.31602954864502
    8. 'Ex' → logprob: -10.44102954864502
    9. '#' → logprob: -10.44102954864502
    10. '_ex' → logprob: -10.56602954864502

Token 564: 'Ex' (ID: 992)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.06613494455814362
    2. 'Ex' → logprob: -2.8161349296569824
    3. '-ex' → logprob: -5.941134929656982
    4. 'exclude' → logprob: -6.566134929656982
    5. 'def' → logprob: -10.44113540649414
    6. 'excluded' → logprob: -10.56613540649414
    7. ' exclusion' → logprob: -10.69113540649414
    8. '_ex' → logprob: -10.94113540649414
    9. 'Exclude' → logprob: -11.56613540649414
    10. '#' → logprob: -12.31613540649414

Token 565: 'clusion' (ID: 15482)
  Prédit: 'clusion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clusion' → logprob: -0.0004947714623995125
    2. '-' → logprob: -8.125494956970215
    3. 'In' → logprob: -9.375494956970215
    4. 'cl' → logprob: -10.375494956970215
    5. 'clude' → logprob: -11.000494956970215
    6. 'c' → logprob: -11.000494956970215
    7. 'clus' → logprob: -11.375494956970215
    8. 'clusive' → logprob: -12.375494956970215
    9. 'Ex' → logprob: -12.625494956970215
    10. 'sum' → logprob: -12.750494956970215

Token 566: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057949721813201904
    2. ' sum' → logprob: -4.557949542999268
    3. '<|end|>' → logprob: -4.557949542999268
    4. ' to' → logprob: -4.932949542999268
    5. ' for' → logprob: -4.932949542999268
    6. 'sum' → logprob: -5.557949542999268
    7. '_sum' → logprob: -5.807949542999268
    8. 'def' → logprob: -5.807949542999268
    9. '        
' → logprob: -6.057949542999268
    10. '   ' → logprob: -6.682949542999268

Token 567: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3142895996570587
    2. 'def' → logprob: -1.9392895698547363
    3. 'subset' → logprob: -2.6892895698547363
    4. ' sum' → logprob: -4.064289569854736
    5. 'for' → logprob: -4.439289569854736
    6. 'multip' → logprob: -4.939289569854736
    7. 'div' → logprob: -5.064289569854736
    8. 's' → logprob: -5.689289569854736
    9. 'sub' → logprob: -5.814289569854736
    10. ' subsets' → logprob: -6.314289569854736

Token 568: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035009171813726425
    2. ' =' → logprob: -4.535009384155273
    3. '   ' → logprob: -5.285009384155273
    4. 'for' → logprob: -5.660009384155273
    5. ' of' → logprob: -5.910009384155273
    6. ' for' → logprob: -6.160009384155273
    7. '_m' → logprob: -6.535009384155273
    8. 'def' → logprob: -6.660009384155273
    9. 'of' → logprob: -6.910009384155273
    10. '_of' → logprob: -7.035009384155273

Token 569: ' multiples' (ID: 70720)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.004106542561203241
    2. ' multiples' → logprob: -6.254106521606445
    3. 'subset' → logprob: -7.629106521606445
    4. 'sub' → logprob: -7.754106521606445
    5. ' subsets' → logprob: -8.004106521606445
    6. 'div' → logprob: -8.004106521606445
    7. 'def' → logprob: -8.129106521606445
    8. 'numbers' → logprob: -9.004106521606445
    9. 'all' → logprob: -9.879106521606445
    10. 'allowed' → logprob: -10.129106521606445

Token 570: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14900843799114227
    2. '   ' → logprob: -2.0240085124969482
    3. 'for' → logprob: -6.024008274078369
    4. 'def' → logprob: -6.149008274078369
    5. ' for' → logprob: -6.524008274078369
    6. 'from' → logprob: -9.149008750915527
    7. '#' → logprob: -10.024008750915527
    8. '
' → logprob: -10.524008750915527
    9. ' =' → logprob: -11.024008750915527
    10. '           ' → logprob: -11.149008750915527

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028683508280664682
    2. '   ' → logprob: -6.002868175506592
    3. 'for' → logprob: -8.75286865234375
    4. 'def' → logprob: -9.37786865234375
    5. ' for' → logprob: -10.37786865234375
    6. '           ' → logprob: -10.62786865234375
    7. '=' → logprob: -10.75286865234375
    8. 'from' → logprob: -10.75286865234375
    9. '```' → logprob: -11.75286865234375
    10. ',' → logprob: -12.00286865234375

Token 572: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3585456311702728
    2. '       ' → logprob: -1.3585456609725952
    3. 'sum' → logprob: -3.7335455417633057
    4. 'res' → logprob: -5.358545780181885
    5. 'for' → logprob: -5.483545780181885
    6. 'from' → logprob: -5.483545780181885
    7. ' def' → logprob: -5.608545780181885
    8. ' res' → logprob: -7.358545780181885
    9. '   ' → logprob: -7.358545780181885
    10. ' for' → logprob: -7.483545780181885

Token 573: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.15524455904960632
    2. 'count' → logprob: -2.2802445888519287
    3. ' sum' → logprob: -3.5302445888519287
    4. 'in' → logprob: -4.90524435043335
    5. ' count' → logprob: -6.28024435043335
    6. 'subset' → logprob: -7.03024435043335
    7. 'l' → logprob: -7.90524435043335
    8. 'calc' → logprob: -8.030244827270508
    9. ' inclusion' → logprob: -8.655244827270508
    10. 'get' → logprob: -8.655244827270508

Token 574: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.024233728647232056
    2. '_of' → logprob: -4.399233818054199
    3. 'def' → logprob: -5.399233818054199
    4. 'of' → logprob: -5.899233818054199
    5. '_' → logprob: -6.399233818054199
    6. 'multip' → logprob: -7.149233818054199
    7. '_sum' → logprob: -7.274233818054199
    8. 'sum' → logprob: -7.524233818054199
    9. ' =' → logprob: -9.1492338180542
    10. '=sum' → logprob: -9.3992338180542

Token 575: 'ultip' (ID: 22975)
  Prédit: 'ultip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultip' → logprob: -6.718606891809031e-05
    2. 'ult' → logprob: -10.250066757202148
    3. 'ul' → logprob: -11.375066757202148
    4. 'ultiple' → logprob: -11.625066757202148
    5. '_of' → logprob: -12.250066757202148
    6. 'of' → logprob: -12.625066757202148
    7. 'ultiply' → logprob: -14.250066757202148
    8. 'ulti' → logprob: -14.375066757202148
    9. 'ults' → logprob: -14.750066757202148
    10. 'ulit' → logprob: -14.750066757202148

Token 576: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -6.694766489090398e-05
    2. 'le' → logprob: -10.000066757202148
    3. '```' → logprob: -12.250066757202148
    4. ' multiples' → logprob: -12.375066757202148
    5. 'Les' → logprob: -12.500066757202148
    6. '
' → logprob: -13.250066757202148
    7. '   ' → logprob: -14.000066757202148
    8. '

' → logprob: -14.250066757202148
    9. '
' → logprob: -14.375066757202148
    10. '       ' → logprob: -14.750066757202148

Token 577: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0026079986710101366
    2. '(' → logprob: -6.252607822418213
    3. 'n' → logprob: -8.377608299255371
    4. '(
' → logprob: -8.877608299255371
    5. '(l' → logprob: -8.877608299255371
    6. ' (' → logprob: -9.877608299255371
    7. '(k' → logprob: -10.252608299255371
    8. '(div' → logprob: -11.127608299255371
    9. '(s' → logprob: -11.377608299255371
    10. '_of' → logprob: -12.002608299255371

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013643606507685035
    2. ' ,' → logprob: -9.500136375427246
    3. ',k' → logprob: -10.625136375427246
    4. ',n' → logprob: -11.750136375427246
    5. '   ' → logprob: -11.750136375427246
    6. ',p' → logprob: -12.000136375427246
    7. '):
' → logprob: -13.125136375427246
    8. 'n' → logprob: -13.375136375427246
    9. '       ' → logprob: -13.750136375427246
    10. 's' → logprob: -13.750136375427246

Token 579: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1358153522014618
    2. 'd' → logprob: -3.260815382003784
    3. 'k' → logprob: -3.260815382003784
    4. 'l' → logprob: -3.385815382003784
    5. 'p' → logprob: -4.135815143585205
    6. 'div' → logprob: -8.885815620422363
    7. 'm' → logprob: -8.885815620422363
    8. ' x' → logprob: -9.510815620422363
    9. 'a' → logprob: -10.635815620422363
    10. 'c' → logprob: -10.760815620422363

Token 580: '_list' (ID: 4162)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3661818504333496
    2. '):
' → logprob: -1.2411818504333496
    3. '_list' → logprob: -4.36618185043335
    4. '_' → logprob: -5.74118185043335
    5. ')' → logprob: -7.49118185043335
    6. '   ' → logprob: -8.116182327270508
    7. '):
' → logprob: -8.491182327270508
    8. '_i' → logprob: -8.491182327270508
    9. ' _' → logprob: -9.366182327270508
    10. ' ):' → logprob: -10.241182327270508

Token 581: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0726376548409462
    2. '):
' → logprob: -2.6976375579833984
    3. ',' → logprob: -6.572637557983398
    4. '   ' → logprob: -6.822637557983398
    5. '):
' → logprob: -9.322637557983398
    6. ')' → logprob: -10.822637557983398
    7. ':' → logprob: -10.947637557983398
    8. '       ' → logprob: -10.947637557983398
    9. 'def' → logprob: -11.197637557983398
    10. 'n' → logprob: -11.322637557983398

Token 582: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020863590762019157
    2. '(n' → logprob: -4.5208635330200195
    3. '       ' → logprob: -4.7708635330200195
    4. 'n' → logprob: -7.5208635330200195
    5. '(' → logprob: -8.27086353302002
    6. '    
' → logprob: -8.52086353302002
    7. '```' → logprob: -9.64586353302002
    8. '        
' → logprob: -10.64586353302002
    9. '(
' → logprob: -10.77086353302002
    10. ' n' → logprob: -10.89586353302002

Token 583: ' m' (ID: 284)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8063088655471802
    2. '   ' → logprob: -1.4313088655471802
    3. 'm' (adapté à ' m') → logprob: -1.5563088655471802
    4. ' res' → logprob: -2.9313087463378906
    5. 'def' → logprob: -3.5563087463378906
    6. 'result' → logprob: -4.806308746337891
    7. '           ' → logprob: -5.431308746337891
    8. '       ' → logprob: -5.681308746337891
    9. 'total' → logprob: -5.681308746337891
    10. ' m' → logprob: -7.181308746337891

Token 584: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932023167610168
    2. ' =' → logprob: -0.6932023167610168
    3. '   ' → logprob: -10.193202018737793
    4. 'def' → logprob: -11.693202018737793
    5. '=len' → logprob: -12.443202018737793
    6. ')' → logprob: -13.568202018737793
    7. ' ' → logprob: -14.068202018737793
    8. ',' → logprob: -14.193202018737793
    9. '=int' → logprob: -14.693202018737793
    10. '       ' → logprob: -14.693202018737793

Token 585: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.200166469876422e-06
    2. ' len' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '20' → logprob: -15.750004768371582
    5. '(len' → logprob: -17.2500057220459
    6. '           ' → logprob: -17.5000057220459
    7. 'def' → logprob: -17.5000057220459
    8. '       ' → logprob: -17.8750057220459
    9. ' ' → logprob: -18.0000057220459
    10. '0' → logprob: -18.1250057220459

Token 586: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.04871954023838043
    2. 'p' → logprob: -3.048719644546509
    3. '(' → logprob: -9.54871940612793
    4. ' p' → logprob: -9.79871940612793
    5. ' (' → logprob: -13.17371940612793
    6. '(
' → logprob: -14.04871940612793
    7. '           ' → logprob: -14.29871940612793
    8. '   ' → logprob: -14.42371940612793
    9. '```' → logprob: -14.67371940612793
    10. '_p' → logprob: -14.79871940612793

Token 587: '_list' (ID: 4162)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7294515371322632
    2. '_list' → logprob: -0.7294515371322632
    3. '_p' → logprob: -3.3544516563415527
    4. ' p' → logprob: -7.979451656341553
    5. '(p' → logprob: -8.479451179504395
    6. '<p' → logprob: -9.729451179504395
    7. ')p' → logprob: -10.604451179504395
    8. '```' → logprob: -10.729451179504395
    9. ')' → logprob: -11.354451179504395
    10. '[p' → logprob: -11.354451179504395

Token 588: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3135351538658142
    2. ')
' → logprob: -1.313535213470459
    3. '   ' → logprob: -8.8135347366333
    4. '           ' → logprob: -9.6885347366333
    5. '       ' → logprob: -10.3135347366333
    6. 'def' → logprob: -11.3135347366333
    7. ')
' → logprob: -11.8135347366333
    8. '):
' → logprob: -12.3135347366333
    9. ')

' → logprob: -13.6885347366333
    10. ')\' → logprob: -14.8135347366333

Token 589: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6558301448822021
    2. '           ' → logprob: -0.7808301448822021
    3. '       ' → logprob: -4.280830383300781
    4. ' res' → logprob: -4.905830383300781
    5. 'res' → logprob: -6.530830383300781
    6. 'def' → logprob: -9.280830383300781
    7. '```' → logprob: -9.655830383300781
    8. ' ' → logprob: -10.530830383300781
    9. '
' → logprob: -11.155830383300781
    10. 'result' → logprob: -11.280830383300781

Token 590: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.03241346403956413
    2. 'def' → logprob: -3.6574134826660156
    3. ' res' → logprob: -5.782413482666016
    4. 'result' → logprob: -7.032413482666016
    5. 'total' → logprob: -7.282413482666016
    6. '           ' → logprob: -7.532413482666016
    7. '   ' → logprob: -7.657413482666016
    8. 'ans' → logprob: -8.532413482666016
    9. 'from' → logprob: -9.532413482666016
    10. 'sum' → logprob: -9.657413482666016

Token 591: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575944185256958
    2. '=' → logprob: -0.825944185256958
    3. ' +=' → logprob: -13.325943946838379
    4. ' ' → logprob: -13.700943946838379
    5. '   ' → logprob: -14.325943946838379
    6. '       ' → logprob: -15.325943946838379
    7. '+=' → logprob: -15.325943946838379
    8. '    ' → logprob: -15.700943946838379
    9. '        ' → logprob: -15.950943946838379
    10. '	' → logprob: -16.325944900512695

Token 592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.250005722045898
    3. '   ' → logprob: -14.125005722045898
    4. '       ' → logprob: -18.2500057220459
    5. '           ' → logprob: -18.3750057220459
    6. '[' → logprob: -18.8750057220459
    7. '=' → logprob: -19.0000057220459
    8. '  ' → logprob: -19.5000057220459
    9. 'import' → logprob: -19.9375057220459
    10. ' ' → logprob: -20.0625057220459

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -17.875
    4. '[' → logprob: -19.75
    5. '       ' → logprob: -20.625
    6. '           ' → logprob: -21.125
    7. '=' → logprob: -22.0
    8. 'res' → logprob: -22.25
    9. '  ' → logprob: -22.75
    10. '۰' → logprob: -22.875

Token 594: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06723956018686295
    2. '
' → logprob: -2.94223952293396
    3. '<|end|>' → logprob: -5.192239761352539
    4. '           ' → logprob: -6.192239761352539
    5. ' for' → logprob: -6.817239761352539
    6. '       ' → logprob: -6.817239761352539
    7. '    
' → logprob: -7.192239761352539
    8. '<|end|>' → logprob: -7.317239761352539
    9. '    ' → logprob: -8.442239761352539
    10. 'for' → logprob: -9.442239761352539

Token 595: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013118583709001541
    2. '           ' → logprob: -5.388118743896484
    3. '       ' → logprob: -5.888118743896484
    4. '<|end|>' → logprob: -6.513118743896484
    5. '
' → logprob: -6.763118743896484
    6. ' for' → logprob: -6.888118743896484
    7. '    
' → logprob: -7.013118743896484
    8. '    ' → logprob: -8.388118743896484
    9. '	   ' → logprob: -8.513118743896484
    10. '	       ' → logprob: -9.263118743896484

Token 596: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.049179159104824066
    2. ' for' → logprob: -3.4241790771484375
    3. '           ' → logprob: -4.2991790771484375
    4. 'from' → logprob: -6.9241790771484375
    5. '       ' → logprob: -7.7991790771484375
    6. '   ' → logprob: -7.9241790771484375
    7. '```' → logprob: -10.549179077148438
    8. '
' → logprob: -10.924179077148438
    9. '               ' → logprob: -11.299179077148438
    10. 'import' → logprob: -11.799179077148438

Token 597: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.6931704878807068
    2. 'mask' → logprob: -0.6931704878807068
    3. '(mask' → logprob: -11.443170547485352
    4. '	mask' → logprob: -11.693170547485352
    5. '   ' → logprob: -12.943170547485352
    6. 'size' → logprob: -14.443170547485352
    7. ' ' → logprob: -15.193170547485352
    8. '_mask' → logprob: -15.443170547485352
    9. ' size' → logprob: -15.693170547485352
    10. '       ' → logprob: -15.693170547485352

Token 598: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026316672563552856
    2. 'in' → logprob: -3.6513166427612305
    3. ' ' → logprob: -11.15131664276123
    4. '1' → logprob: -14.40131664276123
    5. '<|end|>' → logprob: -15.40131664276123
    6. '```' → logprob: -15.77631664276123
    7. '(' → logprob: -15.90131664276123
    8. '   ' → logprob: -15.90131664276123
    9. ')' → logprob: -16.026317596435547
    10. ',' → logprob: -16.401317596435547

Token 599: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024763736873865128
    2. ' range' → logprob: -6.002476215362549
    3. '1' → logprob: -14.127476692199707
    4. '(range' → logprob: -16.75247573852539
    5. 'in' → logprob: -17.50247573852539
    6. '(' → logprob: -18.00247573852539
    7. '   ' → logprob: -18.50247573852539
    8. ' ' → logprob: -18.62747573852539
    9. '```' → logprob: -18.75247573852539
    10. '	range' → logprob: -19.00247573852539

Token 600: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '1' → logprob: -14.875000953674316
    3. ' (' → logprob: -14.875000953674316
    4. '(
' → logprob: -19.0
    5. '           ' → logprob: -19.5
    6. '   ' → logprob: -20.0
    7. ' ' → logprob: -20.5
    8. '[' → logprob: -21.125
    9. ',' → logprob: -21.625
    10. '       ' → logprob: -22.25

Token 601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. ' ' → logprob: -15.12500286102295
    4. '   ' → logprob: -15.25000286102295
    5. '           ' → logprob: -15.87500286102295
    6. '0' → logprob: -17.625003814697266
    7. '       ' → logprob: -17.750003814697266
    8. '
' → logprob: -19.125003814697266
    9. ')' → logprob: -19.625003814697266
    10. '               ' → logprob: -19.875003814697266

Token 602: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035072024911642075
    2. '1' → logprob: -8.125350952148438
    3. ' ,' → logprob: -10.000350952148438
    4. ',m' → logprob: -12.500350952148438
    5. 'm' → logprob: -13.375350952148438
    6. '(' → logprob: -13.375350952148438
    7. '   ' → logprob: -14.250350952148438
    8. '=' → logprob: -14.875350952148438
    9. '```' → logprob: -14.875350952148438
    10. '<<' → logprob: -15.375350952148438

Token 603: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014132341311778873
    2. '(' → logprob: -9.125141143798828
    3. ' ' → logprob: -10.375141143798828
    4. '   ' → logprob: -14.125141143798828
    5. '```' → logprob: -15.500141143798828
    6. '           ' → logprob: -16.000141143798828
    7. ' (' → logprob: -16.750141143798828
    8. ',' → logprob: -18.125141143798828
    9. '
' → logprob: -18.250141143798828
    10. ')' → logprob: -18.250141143798828

Token 604: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016038591042160988
    2. '(' → logprob: -4.141038417816162
    3. '```' → logprob: -12.89103889465332
    4. '           ' → logprob: -14.39103889465332
    5. ' ' → logprob: -14.76603889465332
    6. '   ' → logprob: -15.01603889465332
    7. '0' → logprob: -16.26603889465332
    8. ')' → logprob: -16.64103889465332
    9. ' (' → logprob: -16.76603889465332
    10. '               ' → logprob: -16.76603889465332

Token 605: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.38687291741371155
    2. ' <<' → logprob: -1.1368728876113892
    3. '```' → logprob: -14.761873245239258
    4. ',' → logprob: -15.011873245239258
    5. '           ' → logprob: -15.011873245239258
    6. '   ' → logprob: -15.386873245239258
    7. ' ' → logprob: -15.511873245239258
    8. '<' → logprob: -15.761873245239258
    9. '       ' → logprob: -16.636873245239258
    10. ' <<=' → logprob: -16.886873245239258

Token 606: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -8.061054359131958e-06
    2. ' m' → logprob: -11.750007629394531
    3. '           ' → logprob: -17.25000762939453
    4. '   ' → logprob: -18.87500762939453
    5. '(m' → logprob: -18.87500762939453
    6. '```' → logprob: -19.25000762939453
    7. '	m' → logprob: -19.37500762939453
    8. '       ' → logprob: -20.00000762939453
    9. '[m' → logprob: -20.75000762939453
    10. '                   ' → logprob: -20.87500762939453

Token 607: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4515717029571533
    2. '):
' → logprob: -1.2015717029571533
    3. ':' → logprob: -3.3265717029571533
    4. '               ' → logprob: -3.9515717029571533
    5. '           ' → logprob: -6.576571464538574
    6. ')' → logprob: -6.701571464538574
    7. ':
' → logprob: -6.701571464538574
    8. '{' → logprob: -7.076571464538574
    9. '**' → logprob: -7.326571464538574
    10. '       ' → logprob: -7.451571464538574

Token 608: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1253952980041504
    2. '               ' → logprob: -2.6253952980041504
    3. '   ' → logprob: -4.25039529800415
    4. '	       ' → logprob: -4.87539529800415
    5. '           ' → logprob: -5.25039529800415
    6. '<|end|>' → logprob: -5.25039529800415
    7. '	' → logprob: -5.50039529800415
    8. '		       ' → logprob: -6.50039529800415
    9. '```' → logprob: -6.75039529800415
    10. '	   ' → logprob: -7.12539529800415

Token 609: ' l' (ID: 305)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7335323095321655
    2. ' l' → logprob: -0.8585323095321655
    3. 'l' (adapté à ' l') → logprob: -2.858532428741455
    4. '               ' → logprob: -3.483532428741455
    5. '   ' → logprob: -5.108532428741455
    6. '       ' → logprob: -7.733532428741455
    7. '	l' → logprob: -7.733532428741455
    8. '           ' → logprob: -8.108531951904297
    9. '                       ' → logprob: -8.608531951904297
    10. ' ' → logprob: -9.358531951904297

Token 610: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -6.051066520740278e-05
    2. 'cms' → logprob: -10.625060081481934
    3. '   ' → logprob: -11.125060081481934
    4. '=' → logprob: -11.875060081481934
    5. '           ' → logprob: -13.250060081481934
    6. ' =' → logprob: -13.250060081481934
    7. '                   ' → logprob: -13.500060081481934
    8. 'cmp' → logprob: -13.625060081481934
    9. '               ' → logprob: -13.750060081481934
    10. 'c' → logprob: -13.750060081481934

Token 611: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10135440528392792
    2. '=' → logprob: -2.3513543605804443
    3. '<|end|>' → logprob: -7.226354598999023
    4. ' ' → logprob: -8.726354598999023
    5. 's' → logprob: -9.351354598999023
    6. ')' → logprob: -10.226354598999023
    7. '_space' → logprob: -10.851354598999023
    8. '_' → logprob: -11.226354598999023
    9. '(space' → logprob: -11.226354598999023
    10. '```' → logprob: -11.726354598999023

Token 612: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '```' → logprob: -18.375001907348633
    5. '                   ' → logprob: -19.375001907348633
    6. '=' → logprob: -19.750001907348633
    7. '           ' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.000001907348633
    9. '                       ' → logprob: -20.375001907348633
    10. '               ' → logprob: -20.375001907348633

Token 613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -17.625
    4. '   ' → logprob: -18.25
    5. '=' → logprob: -19.3125
    6. 'def' → logprob: -19.5
    7. '(' → logprob: -19.75
    8. '  ' → logprob: -19.8125
    9. '۱' → logprob: -19.8125
    10. '<|end|>' → logprob: -19.875

Token 614: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06343003362417221
    2. '<|end|>' → logprob: -2.813430070877075
    3. '                ' → logprob: -7.563429832458496
    4. '<|end|>' → logprob: -8.563429832458496
    5. ' ' → logprob: -8.938429832458496
    6. '           ' → logprob: -9.063429832458496
    7. '              ' → logprob: -9.313429832458496
    8. '			' → logprob: -9.438429832458496
    9. '       ' → logprob: -9.813429832458496
    10. '                
' → logprob: -9.813429832458496

Token 615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0073250094428658485
    2. '		       ' → logprob: -5.882325172424316
    3. '	       ' → logprob: -6.757325172424316
    4. '<|end|>' → logprob: -6.882325172424316
    5. '	           ' → logprob: -7.757325172424316
    6. '			' → logprob: -7.882325172424316
    7. '                ' → logprob: -8.132325172424316
    8. '       ' → logprob: -8.132325172424316
    9. '           ' → logprob: -8.757325172424316
    10. '		           ' → logprob: -9.132325172424316

Token 616: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.3720458447933197
    2. '               ' → logprob: -1.247045874595642
    3. ' bits' → logprob: -4.622045993804932
    4. 'for' → logprob: -4.872045993804932
    5. ' for' → logprob: -6.122045993804932
    6. '           ' → logprob: -6.122045993804932
    7. '                   ' → logprob: -7.247045993804932
    8. '                ' → logprob: -8.247045516967773
    9. '       ' → logprob: -8.497045516967773
    10. '   ' → logprob: -9.622045516967773

Token 617: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.722539834911004e-05
    2. '_counts' → logprob: -9.875097274780273
    3. 'count' → logprob: -11.125097274780273
    4. '_mask' → logprob: -11.750097274780273
    5. '_counter' → logprob: -11.875097274780273
    6. '<|end|>' → logprob: -12.500097274780273
    7. 'Count' → logprob: -12.625097274780273
    8. '_COUNT' → logprob: -13.375097274780273
    9. '_cnt' → logprob: -13.750097274780273
    10. '_bits' → logprob: -14.375097274780273

Token 618: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8637518882751465
    2. ' =' → logprob: -1.1137518882751465
    3. '=' → logprob: -1.6137518882751465
    4. '+=' → logprob: -2.9887518882751465
    5. '                ' → logprob: -8.738752365112305
    6. '               ' → logprob: -9.363752365112305
    7. ' ' → logprob: -9.363752365112305
    8. '<|end|>' → logprob: -9.738752365112305
    9. '                   ' → logprob: -10.113752365112305
    10. '            ' → logprob: -10.613752365112305

Token 619: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.35706390615087e-05
    2. ' ' → logprob: -10.750033378601074
    3. '1' → logprob: -11.375033378601074
    4. '               ' → logprob: -15.875033378601074
    5. '<|end|>' → logprob: -16.00003433227539
    6. '           ' → logprob: -16.87503433227539
    7. '                   ' → logprob: -16.87503433227539
    8. '   ' → logprob: -17.50003433227539
    9. '(' → logprob: -17.50003433227539
    10. '=' → logprob: -17.81253433227539

Token 620: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -12.625003814697266
    3. ' ' → logprob: -14.375003814697266
    4. '۰' → logprob: -18.750003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '```' → logprob: -19.625003814697266
    7. '=' → logprob: -20.375003814697266
    8. '000' → logprob: -20.437503814697266
    9. '2' → logprob: -20.625003814697266
    10. 'bin' → logprob: -21.250003814697266

Token 621: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05441770702600479
    2. '<|end|>' → logprob: -3.054417610168457
    3. '                ' → logprob: -6.304417610168457
    4. '			' → logprob: -6.804417610168457
    5. '	       ' → logprob: -7.554417610168457
    6. '		       ' → logprob: -7.554417610168457
    7. '	           ' → logprob: -8.054417610168457
    8. '<|end|>' → logprob: -8.179417610168457
    9. ' ' → logprob: -8.929417610168457
    10. '	               ' → logprob: -9.179417610168457

Token 622: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01043584942817688
    2. ' for' → logprob: -5.510436058044434
    3. '                ' → logprob: -6.385436058044434
    4. '<|end|>' → logprob: -6.510436058044434
    5. 'for' → logprob: -6.635436058044434
    6. '                   ' → logprob: -7.260436058044434
    7. '```' → logprob: -8.135436058044434
    8. '                
' → logprob: -9.135436058044434
    9. '			' → logprob: -9.385436058044434
    10. '	           ' → logprob: -9.510436058044434

Token 623: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7161592841148376
    2. ' for' → logprob: -1.0911593437194824
    3. 'for' (adapté à ' for') → logprob: -1.8411593437194824
    4. '<|end|>' → logprob: -5.216159343719482
    5. '	for' → logprob: -5.966159343719482
    6. '                ' → logprob: -5.966159343719482
    7. '	       ' → logprob: -6.466159343719482
    8. '			' → logprob: -6.841159343719482
    9. '	           ' → logprob: -6.966159343719482
    10. '	               ' → logprob: -7.591159343719482

Token 624: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20143117010593414
    2. ' i' → logprob: -1.701431155204773
    3. ' ' → logprob: -11.701431274414062
    4. '	i' → logprob: -12.701431274414062
    5. '(i' → logprob: -13.076431274414062
    6. '<|end|>' → logprob: -13.701431274414062
    7. ' in' → logprob: -13.826431274414062
    8. 'j' → logprob: -14.826431274414062
    9. '   ' → logprob: -15.076431274414062
    10. 'in' → logprob: -15.201431274414062

Token 625: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11282858997583389
    2. 'in' → logprob: -2.237828493118286
    3. '	in' → logprob: -12.862828254699707
    4. ' ' → logprob: -13.862828254699707
    5. '<|end|>' → logprob: -14.862828254699707
    6. '```' → logprob: -15.112828254699707
    7. '(' → logprob: -15.237828254699707
    8. '                   ' → logprob: -15.487828254699707
    9. '                ' → logprob: -15.737828254699707
    10. ',' → logprob: -15.862828254699707

Token 626: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.6895233531831764e-05
    2. ' range' → logprob: -10.75002670288086
    3. '(range' → logprob: -12.25002670288086
    4. '(m' → logprob: -15.00002670288086
    5. 'm' → logprob: -15.12502670288086
    6. '(' → logprob: -19.12502670288086
    7. '	range' → logprob: -20.12502670288086
    8. '
' → logprob: -20.25002670288086
    9. 'in' → logprob: -20.75002670288086
    10. '.range' → logprob: -21.75002670288086

Token 627: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.000918604782782495
    2. 'm' → logprob: -7.000918388366699
    3. '(' → logprob: -12.2509183883667
    4. '               ' → logprob: -14.1259183883667
    5. ' m' → logprob: -14.8759183883667
    6. '           ' → logprob: -14.8759183883667
    7. '                   ' → logprob: -14.8759183883667
    8. '                       ' → logprob: -16.000919342041016
    9. '(len' → logprob: -16.125919342041016
    10. '```' → logprob: -16.500919342041016

Token 628: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1134643405675888
    2. '):' → logprob: -2.48846435546875
    3. '                   ' → logprob: -4.36346435546875
    4. '               ' → logprob: -5.61346435546875
    5. ':' → logprob: -5.98846435546875
    6. '<|end|>' → logprob: -6.11346435546875
    7. '           ' → logprob: -6.86346435546875
    8. ':
' → logprob: -7.36346435546875
    9. '                       ' → logprob: -8.36346435546875
    10. '       ' → logprob: -8.98846435546875

Token 629: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.017283767461776733
    2. '               ' → logprob: -4.392283916473389
    3. '<|end|>' → logprob: -6.517283916473389
    4. ' if' → logprob: -7.642283916473389
    5. '                ' → logprob: -8.01728343963623
    6. '           ' → logprob: -8.01728343963623
    7. '                  ' → logprob: -8.14228343963623
    8. ' ' → logprob: -8.39228343963623
    9. '```' → logprob: -8.39228343963623
    10. '	               ' → logprob: -8.51728343963623

Token 630: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28107762336730957
    2. 'if' (adapté à ' if') → logprob: -1.9060776233673096
    3. '                   ' → logprob: -2.6560776233673096
    4. '               ' → logprob: -3.7810776233673096
    5. '                       ' → logprob: -6.6560773849487305
    6. '                               ' → logprob: -7.4060773849487305
    7. '                ' → logprob: -7.6560773849487305
    8. '<|end|>' → logprob: -8.53107738494873
    9. '                    ' → logprob: -8.78107738494873
    10. '           ' → logprob: -8.78107738494873

Token 631: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.4756316542625427
    2. ' mask' → logprob: -0.9756316542625427
    3. '(mask' → logprob: -6.4756317138671875
    4. '	mask' → logprob: -11.475631713867188
    5. '_mask' → logprob: -13.600631713867188
    6. '.mask' → logprob: -15.100631713867188
    7. ' (' → logprob: -15.100631713867188
    8. '(' → logprob: -15.475631713867188
    9. 'masked' → logprob: -16.225631713867188
    10. 'emask' → logprob: -16.350631713867188

Token 632: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.011049585416913033
    2. '&' → logprob: -4.511049747467041
    3. ' ' → logprob: -14.136049270629883
    4. '&nbsp' → logprob: -15.386049270629883
    5. ' ' → logprob: -15.511049270629883
    6. ' &
' → logprob: -15.511049270629883
    7. '&amp' → logprob: -15.886049270629883
    8. '[' → logprob: -16.011049270629883
    9. '<|end|>' → logprob: -16.386049270629883
    10. '＆' → logprob: -16.636049270629883

Token 633: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.023246292024850845
    2. '(' → logprob: -3.7732462882995605
    3. '1' → logprob: -14.898246765136719
    4. '                   ' → logprob: -15.273246765136719
    5. '                    ' → logprob: -16.14824676513672
    6. ' ' → logprob: -16.77324676513672
    7. '                       ' → logprob: -18.02324676513672
    8. ' ' → logprob: -19.39824676513672
    9. '                        ' → logprob: -19.52324676513672
    10. '                           ' → logprob: -19.52324676513672

Token 634: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1578967422246933
    2. ' (' → logprob: -2.4078967571258545
    3. '1' → logprob: -2.9078967571258545
    4. ' ' → logprob: -6.532896518707275
    5. '                   ' → logprob: -11.657896995544434
    6. '                       ' → logprob: -13.282896995544434
    7. '                    ' → logprob: -13.907896995544434
    8. '   ' → logprob: -15.532896995544434
    9. '                           ' → logprob: -15.657896995544434
    10. '                               ' → logprob: -15.782896995544434

Token 635: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10644390434026718
    2. '1' → logprob: -3.2314438819885254
    3. ' <<' → logprob: -3.3564438819885254
    4. '(' → logprob: -4.106443881988525
    5. ' (' → logprob: -5.231443881988525
    6. '(i' → logprob: -6.481443881988525
    7. '()<<' → logprob: -7.231443881988525
    8. ')<<' → logprob: -7.356443881988525
    9. ' ' → logprob: -7.856443881988525
    10. '<<(' → logprob: -8.356444358825684

Token 636: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.451116051815916e-05
    2. ' i' → logprob: -10.625024795532227
    3. '	i' → logprob: -15.750024795532227
    4. '                   ' → logprob: -17.000024795532227
    5. '                               ' → logprob: -18.250024795532227
    6. '(i' → logprob: -18.875024795532227
    7. '[i' → logprob: -19.250024795532227
    8. '   ' → logprob: -19.375024795532227
    9. ' ' → logprob: -19.375024795532227
    10. '```' → logprob: -20.125024795532227

Token 637: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.570471465587616
    2. '):
' → logprob: -0.945471465587616
    3. ':' → logprob: -3.9454715251922607
    4. '                   ' → logprob: -4.070471286773682
    5. '                       ' → logprob: -5.320471286773682
    6. '<|end|>' → logprob: -6.445471286773682
    7. '               ' → logprob: -6.945471286773682
    8. ':
' → logprob: -7.070471286773682
    9. ')' → logprob: -7.570471286773682
    10. '**' → logprob: -8.19547176361084

Token 638: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06265159696340561
    2. '                   ' → logprob: -3.3126516342163086
    3. '<|end|>' → logprob: -4.312651634216309
    4. '               ' → logprob: -5.687651634216309
    5. ' bits' → logprob: -5.812651634216309
    6. ' ' → logprob: -6.812651634216309
    7. '```' → logprob: -7.062651634216309
    8. '(bits' → logprob: -7.437651634216309
    9. '                        
' → logprob: -8.062651634216309
    10. '       ' → logprob: -8.062651634216309

Token 639: ' bits' (ID: 18189)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9597331285476685
    2. ' bits' → logprob: -1.3347331285476685
    3. 'bits' (adapté à ' bits') → logprob: -1.5847331285476685
    4. '                       ' → logprob: -2.209733009338379
    5. '               ' → logprob: -3.459733009338379
    6. '       ' → logprob: -6.459733009338379
    7. '                    ' → logprob: -6.709733009338379
    8. '           ' → logprob: -6.834733009338379
    9. '(bits' → logprob: -7.584733009338379
    10. '```' → logprob: -7.709733009338379

Token 640: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3663626305060461e-05
    2. '+=' → logprob: -11.62501335144043
    3. 'count' → logprob: -13.00001335144043
    4. ' +=' → logprob: -14.12501335144043
    5. '=' → logprob: -14.62501335144043
    6. 'Count' → logprob: -15.12501335144043
    7. '+' → logprob: -15.50001335144043
    8. '   ' → logprob: -16.12501335144043
    9. '_COUNT' → logprob: -16.25001335144043
    10. '```' → logprob: -16.25001335144043

Token 641: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07015849649906158
    2. '+=' → logprob: -2.6951584815979004
    3. '<|end|>' → logprob: -9.570158958435059
    4. '=' → logprob: -10.070158958435059
    5. '                        ' → logprob: -11.320158958435059
    6. '                       ' → logprob: -11.320158958435059
    7. ' =' → logprob: -11.445158958435059
    8. '+' → logprob: -11.445158958435059
    9. '```' → logprob: -11.570158958435059
    10. ']+=' → logprob: -11.570158958435059

Token 642: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03804366663098335
    2. ' ' → logprob: -3.288043737411499
    3. '```' → logprob: -13.288043975830078
    4. ' ' → logprob: -15.913043975830078
    5. '                       ' → logprob: -16.413043975830078
    6. '                           ' → logprob: -16.538043975830078
    7. '                               ' → logprob: -16.788043975830078
    8. '                   ' → logprob: -16.913043975830078
    9. '<|end|>' → logprob: -17.163043975830078
    10. '   ' → logprob: -17.413043975830078

Token 643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -16.37501335144043
    4. '   ' → logprob: -17.87501335144043
    5. '           ' → logprob: -19.00001335144043
    6. '`' → logprob: -20.00001335144043
    7. '                   ' → logprob: -20.12501335144043
    8. '       ' → logprob: -20.75001335144043
    9. '               ' → logprob: -21.00001335144043
    10. 'i' → logprob: -21.06251335144043

Token 644: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.08086445182561874
    2. '<|end|>' → logprob: -2.955864429473877
    3. '```' → logprob: -4.705864429473877
    4. '                           ' → logprob: -5.205864429473877
    5. '               ' → logprob: -5.455864429473877
    6. '                        
' → logprob: -5.955864429473877
    7. '                        ' → logprob: -7.080864429473877
    8. '                   ' → logprob: -7.205864429473877
    9. ' ' → logprob: -7.705864429473877
    10. '           ' → logprob: -7.830864429473877

Token 645: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3993009626865387
    2. '<|end|>' → logprob: -2.149301052093506
    3. '                           ' → logprob: -2.399301052093506
    4. '```' → logprob: -2.649301052093506
    5. '                        
' → logprob: -4.149301052093506
    6. ' ' → logprob: -4.774301052093506
    7. '               ' → logprob: -4.774301052093506
    8. '                               ' → logprob: -5.524301052093506
    9. '                        ' → logprob: -5.649301052093506
    10. '                   ' → logprob: -6.274301052093506

Token 646: ' p' (ID: 275)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.4568924009799957
    2. '                           ' → logprob: -1.9568923711776733
    3. ' l' → logprob: -2.206892490386963
    4. 'l' → logprob: -2.956892490386963
    5. '```' → logprob: -4.081892490386963
    6. ' ' → logprob: -4.456892490386963
    7. '                               ' → logprob: -4.456892490386963
    8. '                        ' → logprob: -5.206892490386963
    9. '<|end|>' → logprob: -5.706892490386963
    10. ' p' → logprob: -5.706892490386963

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055120352655649185
    2. '=' → logprob: -2.9301204681396484
    3. '_list' → logprob: -8.680120468139648
    4. '<|end|>' → logprob: -10.430120468139648
    5. ')' → logprob: -11.555120468139648
    6. ' ' → logprob: -11.680120468139648
    7. '```' → logprob: -12.055120468139648
    8. ',' → logprob: -13.055120468139648
    9. 'List' → logprob: -13.180120468139648
    10. ' =
' → logprob: -13.430120468139648

Token 648: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.061967913061380386
    2. ' p' → logprob: -2.8119678497314453
    3. '                       ' → logprob: -15.936967849731445
    4. '                           ' → logprob: -16.936967849731445
    5. '_p' → logprob: -17.436967849731445
    6. '	p' → logprob: -17.811967849731445
    7. '(p' → logprob: -18.311967849731445
    8. '                               ' → logprob: -18.811967849731445
    9. '                   ' → logprob: -19.311967849731445
    10. '                        ' → logprob: -19.436967849731445

Token 649: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.3458322731312364e-06
    2. 'list' → logprob: -12.000007629394531
    3. 'List' → logprob: -14.875007629394531
    4. 'p' → logprob: -15.000007629394531
    5. '[p' → logprob: -15.750007629394531
    6. '[' → logprob: -16.12500762939453
    7. '_LIST' → logprob: -17.12500762939453
    8. '_List' → logprob: -17.50000762939453
    9. '_lists' → logprob: -17.62500762939453
    10. 'plist' → logprob: -17.62500762939453

Token 650: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0020464095287024975
    2. '[' → logprob: -6.752046585083008
    3. '                       ' → logprob: -7.377046585083008
    4. '               ' → logprob: -9.627046585083008
    5. '<|end|>' → logprob: -10.127046585083008
    6. '```' → logprob: -10.252046585083008
    7. '                   ' → logprob: -10.377046585083008
    8. '                           ' → logprob: -11.377046585083008
    9. '           ' → logprob: -12.002046585083008
    10. '                        ' → logprob: -12.002046585083008

Token 651: ']
' (ID: 1592)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04007195681333542
    2. '<|end|>' → logprob: -4.290071964263916
    3. '               ' → logprob: -4.915071964263916
    4. ')' → logprob: -5.540071964263916
    5. '                           ' → logprob: -5.790071964263916
    6. ',' → logprob: -5.790071964263916
    7. ']' → logprob: -5.790071964263916
    8. '                        
' → logprob: -6.040071964263916
    9. '```' → logprob: -7.540071964263916
    10. '
' → logprob: -7.665071964263916

Token 652: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0021548995282500982
    2. '```' → logprob: -6.50215482711792
    3. '               ' → logprob: -8.127155303955078
    4. ' l' → logprob: -9.002155303955078
    5. '                        
' → logprob: -9.252155303955078
    6. 'l' → logprob: -9.627155303955078
    7. '                   ' → logprob: -11.252155303955078
    8. '                        ' → logprob: -11.377155303955078
    9. '<|end|>' → logprob: -11.377155303955078
    10. '\x' → logprob: -11.627155303955078

Token 653: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4709736704826355
    2. 'l' (adapté à ' l') → logprob: -1.2209737300872803
    3. '                       ' → logprob: -2.5959737300872803
    4. '                           ' → logprob: -5.345973491668701
    5. '                               ' → logprob: -7.345973491668701
    6. '```' → logprob: -8.59597396850586
    7. '
' → logprob: -9.47097396850586
    8. '	l' → logprob: -9.47097396850586
    9. '                        ' → logprob: -9.84597396850586
    10. ' ' → logprob: -10.09597396850586

Token 654: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -3.292907877039397e-06
    2. 'cms' → logprob: -13.50000286102295
    3. '=' → logprob: -14.00000286102295
    4. '   ' → logprob: -15.25000286102295
    5. ' =' → logprob: -15.62500286102295
    6. 'CM' → logprob: -15.62500286102295
    7. 'c' → logprob: -15.75000286102295
    8. '       ' → logprob: -16.875003814697266
    9. 'cmp' → logprob: -16.875003814697266
    10. ' cm' → logprob: -16.875003814697266

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788913294672966
    2. ' =' → logprob: -2.5788912773132324
    3. '*=' → logprob: -13.45389175415039
    4. '<|end|>' → logprob: -16.70389175415039
    5. ' *=' → logprob: -17.07889175415039
    6. '```' → logprob: -17.95389175415039
    7. '*' → logprob: -18.70389175415039
    8. '=l' → logprob: -18.82889175415039
    9. ')' → logprob: -19.20389175415039
    10. '   ' → logprob: -19.20389175415039

Token 656: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.670925358776003e-05
    2. ' l' → logprob: -9.625066757202148
    3. '(l' → logprob: -14.500066757202148
    4. '	l' → logprob: -16.50006675720215
    5. '   ' → logprob: -17.62506675720215
    6. '```' → logprob: -18.62506675720215
    7. ' ' → logprob: -20.62506675720215
    8. '  ' → logprob: -20.75006675720215
    9. 'lc' → logprob: -21.12506675720215
    10. '    ' → logprob: -21.25006675720215

Token 657: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.0041878558695316315
    2. 'l' → logprob: -5.504188060760498
    3. 'c' → logprob: -10.50418758392334
    4. ' l' → logprob: -10.62918758392334
    5. 'cms' → logprob: -10.75418758392334
    6. '*l' → logprob: -10.75418758392334
    7. '   ' → logprob: -12.37918758392334
    8. '(l' → logprob: -12.50418758392334
    9. ' cm' → logprob: -13.87918758392334
    10. 'cmb' → logprob: -13.87918758392334

Token 658: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023248156532645226
    2. '*' → logprob: -3.7732481956481934
    3. ' ' → logprob: -13.648247718811035
    4. ' ' → logprob: -14.648247718811035
    5. '*p' → logprob: -14.773247718811035
    6. '*l' → logprob: -15.273247718811035
    7. '```' → logprob: -15.273247718811035
    8. '<|end|>' → logprob: -15.648247718811035
    9. '**' → logprob: -17.27324867248535
    10. '`' → logprob: -17.64824867248535

Token 659: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. ' p' → logprob: -7.2507100105285645
    3. ' ' → logprob: -21.625709533691406
    4. '   ' → logprob: -21.875709533691406
    5. '(p' → logprob: -22.250709533691406
    6. '	p' → logprob: -22.625709533691406
    7. '```' → logprob: -22.750709533691406
    8. '<p' → logprob: -22.875709533691406
    9. '  ' → logprob: -23.125709533691406
    10. '*p' → logprob: -23.500709533691406

Token 660: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.20143486559391022
    2. '//' → logprob: -1.701434850692749
    3. ' ' → logprob: -11.951435089111328
    4. '                       ' → logprob: -12.326435089111328
    5. ' ' → logprob: -13.201435089111328
    6. '                   ' → logprob: -13.201435089111328
    7. '```' → logprob: -13.326435089111328
    8. '                        ' → logprob: -13.826435089111328
    9. '#' → logprob: -14.326435089111328
    10. '<|end|>' → logprob: -14.701435089111328

Token 661: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.0004307884373702109
    2. ' math' → logprob: -7.750430583953857
    3. '(math' → logprob: -16.500431060791016
    4. 'Math' → logprob: -20.250431060791016
    5. ' ' → logprob: -20.875431060791016
    6. '   ' → logprob: -21.125431060791016
    7. '.math' → logprob: -21.500431060791016
    8. 'sys' → logprob: -22.250431060791016
    9. 'g' → logprob: -22.500431060791016
    10. 'm' → logprob: -22.625431060791016

Token 662: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.00020497082732617855
    2. 'g' → logprob: -8.500205039978027
    3. '#g' → logprob: -14.250205039978027
    4. 'import' → logprob: -15.375205039978027
    5. '```' → logprob: -15.875205039978027
    6. ' gcd' → logprob: -16.12520408630371
    7. '_g' → logprob: -16.25020408630371
    8. '	g' → logprob: -16.37520408630371
    9. '=g' → logprob: -17.37520408630371
    10. '[g' → logprob: -17.50020408630371

Token 663: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0013178583467379212
    2. 'g' → logprob: -6.751317977905273
    3. 'c' → logprob: -9.001317977905273
    4. 'cf' → logprob: -11.626317977905273
    5. 'cdf' → logprob: -12.376317977905273
    6. 'cdn' → logprob: -13.376317977905273
    7. 'cm' → logprob: -14.001317977905273
    8. '```' → logprob: -14.126317977905273
    9. 'cb' → logprob: -14.251317977905273
    10. 'p' → logprob: -14.501317977905273

Token 664: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -9.088346359931165e-07
    2. 'l' → logprob: -14.250000953674316
    3. '(' → logprob: -15.500000953674316
    4. ' (' → logprob: -17.125
    5. ',l' → logprob: -17.5
    6. '```' → logprob: -18.25
    7. '	l' → logprob: -18.375
    8. '1' → logprob: -19.25
    9. ',' → logprob: -20.0
    10. '[l' → logprob: -20.125

Token 665: 'cm' (ID: 7871)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -9.424530435353518e-05
    2. 'cm' → logprob: -9.875094413757324
    3. '[l' → logprob: -11.250094413757324
    4. ',l' → logprob: -11.375094413757324
    5. '/l' → logprob: -12.000094413757324
    6. '(' → logprob: -12.625094413757324
    7. 'm' → logprob: -13.125094413757324
    8. 'c' → logprob: -13.125094413757324
    9. 'l' → logprob: -14.250094413757324
    10. ';l' → logprob: -14.625094413757324

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003193874144926667
    2. ',l' → logprob: -5.7531938552856445
    3. '(l' → logprob: -11.253193855285645
    4. ' ,' → logprob: -13.253193855285645
    5. 'l' → logprob: -14.753193855285645
    6. '(' → logprob: -15.253193855285645
    7. ',p' → logprob: -15.253193855285645
    8. ',
' → logprob: -15.878193855285645
    9. '           ' → logprob: -16.12819480895996
    10. '```' → logprob: -16.25319480895996

Token 667: ' p' (ID: 275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.173704271830502e-06
    2. '(l' → logprob: -12.75000286102295
    3. ' l' → logprob: -15.50000286102295
    4. '[l' → logprob: -20.375003814697266
    5. '	l' → logprob: -20.500003814697266
    6. '```' → logprob: -21.750003814697266
    7. '(' → logprob: -22.500003814697266
    8. 'lc' → logprob: -22.500003814697266
    9. ',l' → logprob: -22.500003814697266
    10. '1' → logprob: -23.750003814697266

Token 668: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015598179015796632
    2. ')
' → logprob: -8.87515640258789
    3. '                       ' → logprob: -12.25015640258789
    4. ',' → logprob: -12.62515640258789
    5. '<|end|>' → logprob: -13.00015640258789
    6. '```' → logprob: -13.87515640258789
    7. ')}' → logprob: -14.00015640258789
    8. '               ' → logprob: -14.00015640258789
    9. '),' → logprob: -14.50015640258789
    10. ' )' → logprob: -14.50015640258789

Token 669: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3353295624256134
    2. '               ' → logprob: -1.960329532623291
    3. '<|end|>' → logprob: -2.335329532623291
    4. '```' → logprob: -3.835329532623291
    5. '                   ' → logprob: -4.710329532623291
    6. '                        
' → logprob: -5.585329532623291
    7. 'if' → logprob: -5.710329532623291
    8. ' if' → logprob: -6.460329532623291
    9. '                           ' → logprob: -6.585329532623291
    10. '           ' → logprob: -6.835329532623291

Token 670: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6987473964691162
    2. ' if' → logprob: -0.8237473964691162
    3. '                           ' → logprob: -4.323747634887695
    4. '               ' → logprob: -4.448747634887695
    5. 'if' (adapté à ' if') → logprob: -4.823747634887695
    6. '```' → logprob: -5.073747634887695
    7. '                        ' → logprob: -5.073747634887695
    8. '                               ' → logprob: -5.323747634887695
    9. '                   ' → logprob: -5.823747634887695
    10. '<|end|>' → logprob: -6.073747634887695

Token 671: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02325083687901497
    2. ' l' → logprob: -3.7732508182525635
    3. '                           ' → logprob: -13.023250579833984
    4. '                       ' → logprob: -13.273250579833984
    5. '                   ' → logprob: -14.023250579833984
    6. '	l' → logprob: -15.773250579833984
    7. '                               ' → logprob: -16.023250579833984
    8. '   ' → logprob: -16.148250579833984
    9. '                        ' → logprob: -16.648250579833984
    10. '```' → logprob: -17.148250579833984

Token 672: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -5.438573680294212e-06
    2. 'c' → logprob: -12.750005722045898
    3. 'cms' → logprob: -13.750005722045898
    4. 'l' → logprob: -14.125005722045898
    5. '   ' → logprob: -15.250005722045898
    6. 'CM' → logprob: -16.0000057220459
    7. ' cm' → logprob: -16.2500057220459
    8. 'cmp' → logprob: -17.1250057220459
    9. '```' → logprob: -17.5000057220459
    10. 'm' → logprob: -17.6250057220459

Token 673: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25193020701408386
    2. ' >' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.251930236816406
    4. ' ' → logprob: -16.001930236816406
    5. '   ' → logprob: -16.626930236816406
    6. '>
' → logprob: -16.626930236816406
    7. '()>' → logprob: -17.376930236816406
    8. ' n' → logprob: -17.626930236816406
    9. 'n' → logprob: -17.626930236816406
    10. '>

' → logprob: -17.751930236816406

Token 674: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0017027945723384619
    2. ' n' → logprob: -6.376702785491943
    3. '	n' → logprob: -14.501703262329102
    4. '```' → logprob: -16.7517032623291
    5. '_n' → logprob: -17.1267032623291
    6. '(n' → logprob: -17.2517032623291
    7. ')n' → logprob: -18.3767032623291
    8. '[n' → logprob: -18.5017032623291
    9. '   ' → logprob: -19.2517032623291
    10. 'n't' → logprob: -19.3767032623291

Token 675: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19797198474407196
    2. '                           ' → logprob: -2.072972059249878
    3. ':
' → logprob: -2.947972059249878
    4. '                       ' → logprob: -7.322971820831299
    5. '           ' → logprob: -8.197972297668457
    6. '                   ' → logprob: -8.322972297668457
    7. '                               ' → logprob: -9.447972297668457
    8. '               ' → logprob: -10.697972297668457
    9. ',' → logprob: -11.197972297668457
    10. '                            ' → logprob: -11.697972297668457

Token 676: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0005311102140694857
    2. '                       ' → logprob: -8.625531196594238
    3. '                   ' → logprob: -9.000531196594238
    4. 'break' → logprob: -9.500531196594238
    5. '                               ' → logprob: -9.625531196594238
    6. '           ' → logprob: -10.250531196594238
    7. ' break' → logprob: -11.250531196594238
    8. '                            ' → logprob: -11.500531196594238
    9. '```' → logprob: -12.000531196594238
    10. '                                   ' → logprob: -12.625531196594238

Token 677: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06610148400068283
    2. '                           ' → logprob: -3.066101551055908
    3. ' break' → logprob: -4.066101551055908
    4. '                               ' → logprob: -8.81610107421875
    5. '```' → logprob: -10.31610107421875
    6. '	break' → logprob: -11.44110107421875
    7. '                       ' → logprob: -11.56610107421875
    8. '           ' → logprob: -12.06610107421875
    9. '                                   ' → logprob: -12.94110107421875
    10. '   ' → logprob: -12.94110107421875

Token 678: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19592556357383728
    2. '                       ' → logprob: -3.19592547416687
    3. '\n' → logprob: -3.57092547416687
    4. '                   ' → logprob: -3.57092547416687
    5. '                           ' → logprob: -3.94592547416687
    6. '           ' → logprob: -4.070925712585449
    7. '
' → logprob: -4.570925712585449
    8. '<|end|>' → logprob: -4.570925712585449
    9. '```' → logprob: -4.945925712585449
    10. '                        
' → logprob: -5.445925712585449

Token 679: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028467446565628052
    2. '           ' → logprob: -4.153467655181885
    3. '```' → logprob: -5.153467655181885
    4. '                   ' → logprob: -5.403467655181885
    5. 'else' → logprob: -6.903467655181885
    6. '                       ' → logprob: -7.028467655181885
    7. '                           ' → logprob: -10.028467178344727
    8. '       ' → logprob: -10.403467178344727
    9. ' else' → logprob: -10.653467178344727
    10. '   ' → logprob: -11.028467178344727

Token 680: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20546068251132965
    2. 'else' (adapté à ' else') → logprob: -1.8304606676101685
    3. '               ' → logprob: -3.705460786819458
    4. ' else' → logprob: -8.080460548400879
    5. '       ' → logprob: -8.330460548400879
    6. '```' → logprob: -8.580460548400879
    7. '   ' → logprob: -10.080460548400879
    8. 'continue' → logprob: -11.830460548400879
    9. '	else' → logprob: -13.330460548400879
    10. '		' → logprob: -13.455460548400879

Token 681: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44730859994888306
    2. '                   ' → logprob: -1.0723085403442383
    3. ':
' → logprob: -4.072308540344238
    4. '               ' → logprob: -7.072308540344238
    5. '           ' → logprob: -8.197308540344238
    6. '                       ' → logprob: -9.197308540344238
    7. '```' → logprob: -9.947308540344238
    8. ',' → logprob: -10.572308540344238
    9. '		           ' → logprob: -11.447308540344238
    10. '   ' → logprob: -11.572308540344238

Token 682: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019299915060400963
    2. '               ' → logprob: -4.0192999839782715
    3. '           ' → logprob: -7.5192999839782715
    4. '   ' → logprob: -8.394299507141113
    5. '                       ' → logprob: -8.769299507141113
    6. '       ' → logprob: -8.894299507141113
    7. '```' → logprob: -9.769299507141113
    8. '                ' → logprob: -11.894299507141113
    9. '                  ' → logprob: -11.894299507141113
    10. '                    ' → logprob: -12.644299507141113

Token 683: ' max' (ID: 2999)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.010055196471512318
    2. '                   ' → logprob: -4.760055065155029
    3. ' count' → logprob: -6.885055065155029
    4. '                       ' → logprob: -8.760055541992188
    5. 'sum' → logprob: -9.010055541992188
    6. '               ' → logprob: -9.760055541992188
    7. 'cnt' → logprob: -9.885055541992188
    8. 'total' → logprob: -12.010055541992188
    9. '   ' → logprob: -12.635055541992188
    10. '           ' → logprob: -13.010055541992188

Token 684: '_k' (ID: 11637)
  Prédit: '_multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_multiple' → logprob: -1.0193966627120972
    2. '_k' → logprob: -1.1443966627120972
    3. '_mul' → logprob: -2.3943967819213867
    4. 'k' → logprob: -2.6443967819213867
    5. '_val' → logprob: -2.7693967819213867
    6. '_mult' → logprob: -2.8943967819213867
    7. 'multiple' → logprob: -4.394396781921387
    8. 'mul' → logprob: -4.644396781921387
    9. '_count' → logprob: -5.769396781921387
    10. '_multiplier' → logprob: -6.019396781921387

Token 685: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193363428115845
    2. ' =' → logprob: -1.5019335746765137
    3. '                   ' → logprob: -13.376934051513672
    4. '=n' → logprob: -13.876934051513672
    5. '=k' → logprob: -14.251934051513672
    6. '```' → logprob: -15.376934051513672
    7. '           ' → logprob: -15.501934051513672
    8. '=int' → logprob: -15.751934051513672
    9. '   ' → logprob: -15.751934051513672
    10. '               ' → logprob: -15.876934051513672

Token 686: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47408756613731384
    2. 'n' → logprob: -0.9740875959396362
    3. '	n' → logprob: -12.349087715148926
    4. '(n' → logprob: -12.849087715148926
    5. '   ' → logprob: -12.974087715148926
    6. '                   ' → logprob: -14.099087715148926
    7. ' (' → logprob: -15.099087715148926
    8. '    ' → logprob: -16.72408676147461
    9. ' ' → logprob: -16.72408676147461
    10. '           ' → logprob: -17.22408676147461

Token 687: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.5761832594871521
    2. '//' → logprob: -0.8261832594871521
    3. '                   ' → logprob: -8.951183319091797
    4. '```' → logprob: -10.201183319091797
    5. '#' → logprob: -10.576183319091797
    6. '//=' → logprob: -10.826183319091797
    7. ' ' → logprob: -12.076183319091797
    8. '               ' → logprob: -12.451183319091797
    9. '                    ' → logprob: -12.826183319091797
    10. ' ' → logprob: -13.076183319091797

Token 688: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.080963092041202e-06
    2. ' l' → logprob: -12.500004768371582
    3. '                   ' → logprob: -13.625004768371582
    4. '               ' → logprob: -18.6250057220459
    5. '```' → logprob: -18.8750057220459
    6. '(l' → logprob: -19.1250057220459
    7. '   ' → logprob: -19.5000057220459
    8. '                       ' → logprob: -19.5000057220459
    9. '           ' → logprob: -19.6250057220459
    10. '	l' → logprob: -19.7500057220459

Token 689: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -9.014684110297821e-06
    2. 'm' → logprob: -11.750008583068848
    3. 'cms' → logprob: -14.625008583068848
    4. 'l' → logprob: -15.875008583068848
    5. 'c' → logprob: -16.125009536743164
    6. '[l' → logprob: -16.500009536743164
    7. '(l' → logprob: -16.500009536743164
    8. 'mc' → logprob: -16.625009536743164
    9. '```' → logprob: -17.000009536743164
    10. '   ' → logprob: -17.125009536743164

Token 690: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14650660753250122
    2. '*(' → logprob: -2.5215065479278564
    3. ' *' → logprob: -3.3965065479278564
    4. '
' → logprob: -4.6465067863464355
    5. '               ' → logprob: -5.2715067863464355
    6. '```' → logprob: -5.6465067863464355
    7. '*' → logprob: -6.1465067863464355
    8. '           ' → logprob: -7.3965067863464355
    9. '``' → logprob: -7.6465067863464355
    10. ' (' → logprob: -8.896506309509277

Token 691: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00024370834580622613
    2. '               ' → logprob: -8.875244140625
    3. 'count' → logprob: -9.750244140625
    4. '           ' → logprob: -10.375244140625
    5. 'sum' → logprob: -12.125244140625
    6. '```' → logprob: -12.500244140625
    7. 'total' → logprob: -13.875244140625
    8. '                  ' → logprob: -14.250244140625
    9. '       ' → logprob: -14.375244140625
    10. '                       ' → logprob: -14.625244140625

Token 692: ' #' (ID: 1069)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.09781758487224579
    2. 'term' → logprob: -3.0978176593780518
    3. '                   ' → logprob: -4.597817420959473
    4. 's' → logprob: -4.847817420959473
    5. 'subtotal' → logprob: -4.847817420959473
    6. 'res' → logprob: -4.972817420959473
    7. 'total' → logprob: -5.222817420959473
    8. 'curr' → logprob: -6.097817420959473
    9. 'add' → logprob: -6.097817420959473
    10. 'subset' → logprob: -6.722817420959473

Token 693: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3931635916233063
    2. 'term' → logprob: -2.1431636810302734
    3. 'res' → logprob: -2.7681636810302734
    4. 'add' → logprob: -3.2681636810302734
    5. 'curr' → logprob: -3.8931636810302734
    6. 'subtotal' → logprob: -4.018163681030273
    7. 's' → logprob: -4.268163681030273
    8. '                   ' → logprob: -4.393163681030273
    9. 'subset' → logprob: -5.018163681030273
    10. 'partial' → logprob: -5.143163681030273

Token 694: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6091568470001221
    2. ' +=' → logprob: -1.109156847000122
    3. '_m' → logprob: -2.734156847000122
    4. '=' → logprob: -3.484156847000122
    5. '+=' → logprob: -3.859156847000122
    6. '                   ' → logprob: -6.109156608581543
    7. '_k' → logprob: -6.484156608581543
    8. '_l' → logprob: -6.734156608581543
    9. '_' → logprob: -6.859156608581543
    10. 'l' → logprob: -7.234156608581543

Token 695: ' multiples' (ID: 70720)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00864068977534771
    2. '(l' → logprob: -5.133640766143799
    3. 'max' → logprob: -6.758640766143799
    4. ' l' → logprob: -6.883640766143799
    5. 'k' → logprob: -8.38364028930664
    6. 'multip' → logprob: -8.75864028930664
    7. '(' → logprob: -10.00864028930664
    8. '(max' → logprob: -10.63364028930664
    9. '(k' → logprob: -10.88364028930664
    10. ' (' → logprob: -11.00864028930664

Token 696: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38880428671836853
    2. '=' → logprob: -1.138804316520691
    3. '                   ' → logprob: -6.3888044357299805
    4. '=l' → logprob: -9.13880443572998
    5. ' +=' → logprob: -10.13880443572998
    6. 'l' → logprob: -10.38880443572998
    7. '(l' → logprob: -10.76380443572998
    8. '+=' → logprob: -11.76380443572998
    9. '_l' → logprob: -11.76380443572998
    10. ' l' → logprob: -12.01380443572998

Token 697: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00011403311509639025
    2. ' l' → logprob: -9.125114440917969
    3. '(l' → logprob: -12.875114440917969
    4. '                   ' → logprob: -13.375114440917969
    5. '```' → logprob: -15.750114440917969
    6. 'multip' → logprob: -16.00011444091797
    7. '                           ' → logprob: -16.37511444091797
    8. '                       ' → logprob: -16.50011444091797
    9. '   ' → logprob: -16.87511444091797
    10. '_l' → logprob: -17.00011444091797

Token 698: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00044616201194003224
    2. 'l' → logprob: -7.750446319580078
    3. '   ' → logprob: -11.875446319580078
    4. 'cms' → logprob: -13.000446319580078
    5. '*l' → logprob: -13.375446319580078
    6. '_l' → logprob: -13.625446319580078
    7. 'm' → logprob: -14.375446319580078
    8. ' l' → logprob: -14.875446319580078
    9. 'c' → logprob: -14.875446319580078
    10. '_cm' → logprob: -15.000446319580078

Token 699: ' up' (ID: 869)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.0350582599639893
    2. '=' → logprob: -1.2850582599639893
    3. ' =' → logprob: -1.4100582599639893
    4. ' *' → logprob: -2.2850582599639893
    5. '                   ' → logprob: -4.66005802154541
    6. '*(' → logprob: -5.16005802154541
    7. '*l' → logprob: -5.66005802154541
    8. '```' → logprob: -6.28505802154541
    9. 'l' → logprob: -7.78505802154541
    10. '`' → logprob: -8.41005802154541

Token 700: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0014787978725507855
    2. '                   ' → logprob: -7.501478672027588
    3. 'l' → logprob: -8.001479148864746
    4. ' to' → logprob: -8.501479148864746
    5. '_to' → logprob: -9.001479148864746
    6. '           ' → logprob: -9.751479148864746
    7. '   ' → logprob: -9.876479148864746
    8. '               ' → logprob: -10.251479148864746
    9. '                       ' → logprob: -10.626479148864746
    10. '=' → logprob: -10.876479148864746

Token 701: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4393821358680725
    2. 'l' → logprob: -1.0643820762634277
    3. 'max' → logprob: -4.939382076263428
    4. ' n' → logprob: -6.439382076263428
    5. ' l' → logprob: -7.314382076263428
    6. '                   ' → logprob: -7.439382076263428
    7. '(n' → logprob: -8.314382553100586
    8. ' max' → logprob: -9.439382553100586
    9. '(max' → logprob: -9.689382553100586
    10. '(l' → logprob: -9.814382553100586

Token 702: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5833825469017029
    2. ' =' → logprob: -0.8333825469017029
    3. '                   ' → logprob: -4.958382606506348
    4. '           ' → logprob: -10.208382606506348
    5. ' l' → logprob: -10.333382606506348
    6. ' +=' → logprob: -10.333382606506348
    7. '*(' → logprob: -10.333382606506348
    8. '*' → logprob: -10.333382606506348
    9. 'l' → logprob: -10.458382606506348
    10. '+=' → logprob: -10.583382606506348

Token 703: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06730710715055466
    2. ' l' → logprob: -3.0673069953918457
    3. '                   ' → logprob: -4.692306995391846
    4. 'max' → logprob: -4.817306995391846
    5. ' max' → logprob: -7.192306995391846
    6. '(l' → logprob: -9.317307472229004
    7. '                       ' → logprob: -9.567307472229004
    8. ' (' → logprob: -9.692307472229004
    9. '                           ' → logprob: -9.817307472229004
    10. '                    ' → logprob: -9.817307472229004

Token 704: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.500001907348633
    3. '=' → logprob: -15.500001907348633
    4. '*l' → logprob: -15.875001907348633
    5. 'cms' → logprob: -16.125001907348633
    6. 'c' → logprob: -16.125001907348633
    7. '*' → logprob: -16.375001907348633
    8. ' =' → logprob: -16.500001907348633
    9. '(l' → logprob: -16.500001907348633
    10. ' cm' → logprob: -16.750001907348633

Token 705: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3869018256664276
    2. ' *' → logprob: -1.13690185546875
    3. '**' → logprob: -12.01190185546875
    4. '```' → logprob: -12.13690185546875
    5. ' ' → logprob: -12.51190185546875
    6. '           ' → logprob: -12.76190185546875
    7. '*(' → logprob: -12.76190185546875
    8. '   ' → logprob: -13.26190185546875
    9. ' ' → logprob: -13.76190185546875
    10. '          ' → logprob: -14.01190185546875

Token 706: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002249933750135824
    2. '(max' → logprob: -8.500225067138672
    3. ' max' → logprob: -10.750225067138672
    4. '	max' → logprob: -18.500225067138672
    5. '_max' → logprob: -19.625225067138672
    6. '=max' → logprob: -19.750225067138672
    7. ' (' → logprob: -19.750225067138672
    8. '[max' → logprob: -20.125225067138672
    9. '```' → logprob: -20.125225067138672
    10. ',max' → logprob: -20.500225067138672

Token 707: '(' (ID: 7)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.00804662611335516
    2. 'max' → logprob: -6.258046627044678
    3. '(max' → logprob: -6.633046627044678
    4. 'k' → logprob: -6.633046627044678
    5. '_{' → logprob: -6.758046627044678
    6. 'of' → logprob: -7.508046627044678
    7. '_m' → logprob: -7.633046627044678
    8. '_' → logprob: -7.883046627044678
    9. '(k' → logprob: -8.00804615020752
    10. '(range' → logprob: -8.50804615020752

Token 708: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12783099710941315
    2. 'k' → logprob: -2.252830982208252
    3. '_k' → logprob: -4.377830982208252
    4. '(max' → logprob: -6.377830982208252
    5. '(k' → logprob: -8.25283145904541
    6. '1' → logprob: -8.62783145904541
    7. 'range' → logprob: -10.37783145904541
    8. ' max' → logprob: -10.37783145904541
    9. '[max' → logprob: -10.37783145904541
    10. '_max' → logprob: -10.62783145904541

Token 709: '..' (ID: 485)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.9994986653327942
    2. '...' → logprob: -1.6244986057281494
    3. '+' → logprob: -2.1244986057281494
    4. '(max' → logprob: -2.2494986057281494
    5. 'max' → logprob: -2.4994986057281494
    6. '```' → logprob: -2.7494986057281494
    7. '..' → logprob: -3.9994986057281494
    8. '[max' → logprob: -4.9994988441467285
    9. '+k' → logprob: -5.1244988441467285
    10. '
' → logprob: -5.3744988441467285

Token 710: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.173704271830502e-06
    2. '(max' → logprob: -13.00000286102295
    3. ' max' → logprob: -14.25000286102295
    4. 'k' → logprob: -16.250003814697266
    5. '```' → logprob: -17.750003814697266
    6. '[max' → logprob: -17.875003814697266
    7. '=max' → logprob: -18.250003814697266
    8. '_max' → logprob: -18.625003814697266
    9. 'mask' → logprob: -19.250003814697266
    10. '	max' → logprob: -19.375003814697266

Token 711: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.306760805164231e-05
    2. '```' → logprob: -12.25001335144043
    3. '_n' → logprob: -13.00001335144043
    4. '_max' → logprob: -13.00001335144043
    5. ')' → logprob: -14.50001335144043
    6. '\' → logprob: -14.62501335144043
    7. ')_' → logprob: -14.75001335144043
    8. 'k' → logprob: -14.87501335144043
    9. '_' → logprob: -15.00001335144043
    10. 'max' → logprob: -15.12501335144043

Token 712: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2620043456554413
    2. '(max' → logprob: -1.8870043754577637
    3. '*(' → logprob: -3.1370043754577637
    4. ' *' → logprob: -4.012004375457764
    5. '*' → logprob: -5.512004375457764
    6. 'max' → logprob: -5.637004375457764
    7. '=' → logprob: -6.137004375457764
    8. '(' → logprob: -6.762004375457764
    9. '(k' → logprob: -6.762004375457764
    10. ' =' → logprob: -7.137004375457764

Token 713: '                   ' (ID: 699)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2991867065429688
    2. ' =' → logprob: -1.2991867065429688
    3. '=' → logprob: -1.7991867065429688
    4. '*(' → logprob: -1.9241867065429688
    5. '(max' → logprob: -3.1741867065429688
    6. '                   ' → logprob: -3.2991867065429688
    7. ' (' → logprob: -3.5491867065429688
    8. ' *' → logprob: -4.174186706542969
    9. '*' → logprob: -4.424186706542969
    10. '(l' → logprob: -5.674186706542969

Token 714: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3069950044155121
    2. '                   ' → logprob: -1.6819950342178345
    3. ' l' → logprob: -2.556994915008545
    4. '(l' → logprob: -8.306995391845703
    5. ' (' → logprob: -8.931995391845703
    6. '               ' → logprob: -9.431995391845703
    7. '                       ' → logprob: -9.806995391845703
    8. '   ' → logprob: -10.181995391845703
    9. 'res' → logprob: -10.181995391845703
    10. '(' → logprob: -10.181995391845703

Token 715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32190215587615967
    2. '=' → logprob: -1.3219021558761597
    3. ' +=' → logprob: -4.946902275085449
    4. '+=' → logprob: -6.696902275085449
    5. 'um' → logprob: -8.32190227508545
    6. '_' → logprob: -11.57190227508545
    7. ' ' → logprob: -12.94690227508545
    8. ' ' → logprob: -13.19690227508545
    9. '_=' → logprob: -13.44690227508545
    10. '+' → logprob: -13.57190227508545

Token 716: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.005243122112005949
    2. ' l' → logprob: -5.255243301391602
    3. '   ' → logprob: -12.380243301391602
    4. '                   ' → logprob: -12.505243301391602
    5. '	l' → logprob: -14.505243301391602
    6. '           ' → logprob: -15.130243301391602
    7. 'll' → logprob: -15.755243301391602
    8. '                           ' → logprob: -16.0052433013916
    9. '(l' → logprob: -16.0052433013916
    10. '    ' → logprob: -16.7552433013916

Token 717: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.00023762896307744086
    2. 'max' → logprob: -8.500237464904785
    3. 'c' → logprob: -11.000237464904785
    4. '   ' → logprob: -12.375237464904785
    5. ' =' → logprob: -13.000237464904785
    6. '_cm' → logprob: -13.000237464904785
    7. '=' → logprob: -13.375237464904785
    8. 'cms' → logprob: -13.500237464904785
    9. 'cmb' → logprob: -13.625237464904785
    10. '*l' → logprob: -13.875237464904785

Token 718: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03367278724908829
    2. '*' → logprob: -3.40867280960083
    3. '*(' → logprob: -10.783672332763672
    4. '   ' → logprob: -13.033672332763672
    5. ' ' → logprob: -14.283672332763672
    6. ' ' → logprob: -14.533672332763672
    7. 's' → logprob: -14.658672332763672
    8. '           ' → logprob: -15.033672332763672
    9. '**' → logprob: -15.033672332763672
    10. '*s' → logprob: -15.158672332763672

Token 719: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0016255488153547049
    2. '(max' → logprob: -6.5016255378723145
    3. ' max' → logprob: -9.001626014709473
    4. ' (' → logprob: -18.001625061035156
    5. '[max' → logprob: -18.501625061035156
    6. '	max' → logprob: -19.001625061035156
    7. '=max' → logprob: -19.001625061035156
    8. '_max' → logprob: -19.126625061035156
    9. ',max' → logprob: -20.001625061035156
    10. '
' → logprob: -20.376625061035156

Token 720: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: 0.0
    2. 'k' → logprob: -18.875
    3. '```' → logprob: -19.875
    4. '(k' → logprob: -20.625
    5. '\' → logprob: -21.0
    6. '(' → logprob: -22.0
    7. '{k' → logprob: -22.0
    8. '_i' → logprob: -22.5
    9. '_j' → logprob: -22.75
    10. '_key' → logprob: -23.125

Token 721: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.011667657643556595
    2. '*(' → logprob: -4.511667728424072
    3. ' *' → logprob: -7.386667728424072
    4. '**' → logprob: -16.136667251586914
    5. '*((' → logprob: -16.136667251586914
    6. ' ' → logprob: -17.511667251586914
    7. ' ' → logprob: -18.886667251586914
    8. '*[' → logprob: -18.886667251586914
    9. '   ' → logprob: -19.136667251586914
    10. ' *(' → logprob: -19.386667251586914

Token 722: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -3.666993507067673e-05
    2. ' (' → logprob: -10.625036239624023
    3. '(' → logprob: -12.125036239624023
    4. 'max' → logprob: -13.250036239624023
    5. '(m' → logprob: -13.625036239624023
    6. '(Max' → logprob: -14.375036239624023
    7. '=max' → logprob: -14.500036239624023
    8. '(mask' → logprob: -14.625036239624023
    9. '(next' → logprob: -14.875036239624023
    10. '[max' → logprob: -14.875036239624023

Token 723: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019828793592751026
    2. '(max' → logprob: -6.251982688903809
    3. ' max' → logprob: -9.876982688903809
    4. '	max' → logprob: -13.501982688903809
    5. 'maxlength' → logprob: -14.501982688903809
    6. '_max' → logprob: -14.751982688903809
    7. '=max' → logprob: -15.501982688903809
    8. '   ' → logprob: -16.376983642578125
    9. '```' → logprob: -16.501983642578125
    10. '[max' → logprob: -16.501983642578125

Token 724: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -13.750000953674316
    3. 'k' → logprob: -15.875000953674316
    4. '{k' → logprob: -18.125001907348633
    5. '_x' → logprob: -18.250001907348633
    6. '(k' → logprob: -18.500001907348633
    7. '(max' → logprob: -18.625001907348633
    8. '``' → logprob: -18.875001907348633
    9. '_K' → logprob: -18.875001907348633
    10. '(' → logprob: -19.250001907348633

Token 725: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01603659801185131
    2. ' +' → logprob: -4.141036510467529
    3. '```' → logprob: -14.266036987304688
    4. '1' → logprob: -14.641036987304688
    5. '+
' → logprob: -14.891036987304688
    6. '＋' → logprob: -15.141036987304688
    7. ' ' → logprob: -15.516036987304688
    8. '+(' → logprob: -16.641036987304688
    9. '<|end|>' → logprob: -17.266036987304688
    10. '``' → logprob: -17.391036987304688

Token 726: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -16.75
    4. '                   ' → logprob: -17.0
    5. '           ' → logprob: -17.75
    6. '   ' → logprob: -17.75
    7. '``' → logprob: -20.5
    8. '2' → logprob: -20.5
    9. '               ' → logprob: -20.75
    10. '                       ' → logprob: -20.75

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.375003814697266
    4. '2' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '0' → logprob: -17.500003814697266
    7. '
' → logprob: -17.875003814697266
    8. '`' → logprob: -18.125003814697266
    9. '``' → logprob: -18.625003814697266
    10. '(' → logprob: -19.625003814697266

Token 728: ')' (ID: 8)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3151947259902954
    2. ' //' → logprob: -1.5651947259902954
    3. ')' → logprob: -2.815194606781006
    4. ')//' → logprob: -6.815194606781006
    5. '```' → logprob: -9.440195083618164
    6. '           ' → logprob: -9.690195083618164
    7. '               ' → logprob: -10.190195083618164
    8. '                   ' → logprob: -10.190195083618164
    9. '   ' → logprob: -10.940195083618164
    10. ' ' → logprob: -11.440195083618164

Token 729: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.16108152270317078
    2. ' //' → logprob: -1.9110815525054932
    3. '```' → logprob: -8.286081314086914
    4. '                   ' → logprob: -9.161081314086914
    5. '           ' → logprob: -9.411081314086914
    6. '               ' → logprob: -9.411081314086914
    7. ')' → logprob: -9.411081314086914
    8. '<|end|>' → logprob: -9.786081314086914
    9. '<|end|>' → logprob: -10.036081314086914
    10. ' ' → logprob: -10.661081314086914

Token 730: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -15.875
    4. '           ' → logprob: -17.875
    5. '```' → logprob: -18.875
    6. '       ' → logprob: -19.125
    7. '                   ' → logprob: -20.375
    8. '               ' → logprob: -20.625
    9. '  ' → logprob: -21.375
    10. '    ' → logprob: -21.375

Token 731: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '   ' → logprob: -20.875
    4. '```' → logprob: -22.625
    5. '۲' → logprob: -23.75
    6. '２' → logprob: -24.375
    7. '  ' → logprob: -24.75
    8. '22' → logprob: -24.75
    9. '202' → logprob: -25.625
    10. '
' → logprob: -25.625

Token 732: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5355314016342163
    2. '                   ' → logprob: -1.9105314016342163
    3. '           ' → logprob: -2.160531520843506
    4. '<|end|>' → logprob: -2.160531520843506
    5. ')' → logprob: -4.160531520843506
    6. '<|end|>' → logprob: -5.160531520843506
    7. '\' → logprob: -6.035531520843506
    8. '\n' → logprob: -6.285531520843506
    9. '       ' → logprob: -6.535531520843506
    10. '```' → logprob: -7.035531520843506

Token 733: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11009451746940613
    2. '               ' → logprob: -2.3600945472717285
    3. '<|end|>' → logprob: -5.1100945472717285
    4. '           ' → logprob: -6.3600945472717285
    5. '<|end|>' → logprob: -8.36009407043457
    6. '                    
' → logprob: -8.36009407043457
    7. '```' → logprob: -8.36009407043457
    8. '       ' → logprob: -8.61009407043457
    9. '                       ' → logprob: -8.61009407043457
    10. '+' → logprob: -8.73509407043457

Token 734: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04681650549173355
    2. 'if' (adapté à ' if') → logprob: -3.29681658744812
    3. '               ' → logprob: -5.171816349029541
    4. ' if' → logprob: -6.046816349029541
    5. '           ' → logprob: -8.0468168258667
    6. '       ' → logprob: -8.7968168258667
    7. '   ' → logprob: -9.1718168258667
    8. '```' → logprob: -9.9218168258667
    9. '                       ' → logprob: -10.7968168258667
    10. '                  ' → logprob: -11.1718168258667

Token 735: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.014305942691862583
    2. ' bits' → logprob: -4.26430606842041
    3. '(bits' → logprob: -8.88930606842041
    4. '           ' → logprob: -13.13930606842041
    5. 'bit' → logprob: -13.63930606842041
    6. '               ' → logprob: -14.26430606842041
    7. '   ' → logprob: -14.88930606842041
    8. '_bits' → logprob: -16.514305114746094
    9. '       ' → logprob: -16.514305114746094
    10. '                   ' → logprob: -16.639305114746094

Token 736: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.77627644513268e-06
    2. '               ' → logprob: -12.500008583068848
    3. '%' → logprob: -13.625008583068848
    4. '_counts' → logprob: -14.000008583068848
    5. '                   ' → logprob: -14.625008583068848
    6. '_mask' → logprob: -15.000008583068848
    7. '           ' → logprob: -15.125008583068848
    8. ' _' → logprob: -15.250008583068848
    9. '_bits' → logprob: -15.250008583068848
    10. '_COUNT' → logprob: -15.500008583068848

Token 737: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16023468971252441
    2. '%' → logprob: -1.9102346897125244
    3. ' ' → logprob: -12.910234451293945
    4. ' ==' → logprob: -13.035234451293945
    5. '==' → logprob: -13.160234451293945
    6. '```' → logprob: -13.410234451293945
    7. '[' → logprob: -14.035234451293945
    8. ')' → logprob: -14.785234451293945
    9. '           ' → logprob: -15.035234451293945
    10. ' ' → logprob: -15.285234451293945

Token 738: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023246178403496742
    2. ' ' → logprob: -3.7732462882995605
    3. '1' → logprob: -15.023245811462402
    4. '```' → logprob: -15.148245811462402
    5. '=' → logprob: -16.89824676513672
    6. '``' → logprob: -18.02324676513672
    7. '==' → logprob: -18.14824676513672
    8. '+' → logprob: -18.27324676513672
    9. '...' → logprob: -19.27324676513672
    10. ' ' → logprob: -19.39824676513672

Token 739: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '```' → logprob: -15.125059127807617
    4. '
' → logprob: -16.500059127807617
    5. '1' → logprob: -17.875059127807617
    6. '   ' → logprob: -18.125059127807617
    7. '``' → logprob: -18.250059127807617
    8. '`' → logprob: -18.750059127807617
    9. '۲' → logprob: -18.875059127807617
    10. '=' → logprob: -19.375059127807617

Token 740: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931624412536621
    2. ' ==' → logprob: -0.6931624412536621
    3. '```' → logprob: -11.69316291809082
    4. '==
' → logprob: -12.44316291809082
    5. '=' → logprob: -13.69316291809082
    6. ')==' → logprob: -14.56816291809082
    7. ' ==
' → logprob: -14.94316291809082
    8. '===' → logprob: -15.44316291809082
    9. '``' → logprob: -15.56816291809082
    10. '()==' → logprob: -15.94316291809082

Token 741: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006782165728509426
    2. '2' → logprob: -5.006782054901123
    3. ' ' → logprob: -9.631782531738281
    4. '0' → logprob: -13.881782531738281
    5. '```' → logprob: -15.131782531738281
    6. '   ' → logprob: -18.88178253173828
    7. '                   ' → logprob: -19.25678253173828
    8. '=' → logprob: -19.88178253173828
    9. '``' → logprob: -20.00678253173828
    10. '==' → logprob: -20.25678253173828

Token 742: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -10.125051498413086
    3. '2' → logprob: -11.500051498413086
    4. '0' → logprob: -13.625051498413086
    5. '```' → logprob: -16.000051498413086
    6. '
' → logprob: -17.875051498413086
    7. '``' → logprob: -18.000051498413086
    8. '   ' → logprob: -18.625051498413086
    9. '10' → logprob: -18.875051498413086
    10. '+' → logprob: -19.812551498413086

Token 743: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2262275218963623
    2. '                       ' → logprob: -1.7262275218963623
    3. '==' → logprob: -4.476227760314941
    4. ':
' → logprob: -4.976227760314941
    5. ' ==' → logprob: -5.726227760314941
    6. '                   ' → logprob: -6.851227760314941
    7. '<|end|>' → logprob: -7.351227760314941
    8. '=' → logprob: -8.226227760314941
    9. '                           ' → logprob: -8.476227760314941
    10. '                      ' → logprob: -8.851227760314941

Token 744: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012889951467514038
    2. '                   ' → logprob: -5.387889862060547
    3. '               ' → logprob: -5.512889862060547
    4. ':' → logprob: -5.637889862060547
    5. '       ' → logprob: -9.262889862060547
    6. '<|end|>' → logprob: -9.387889862060547
    7. '```' → logprob: -9.512889862060547
    8. '                      ' → logprob: -9.762889862060547
    9. '           ' → logprob: -10.012889862060547
    10. '		               ' → logprob: -10.262889862060547

Token 745: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.15745648741722107
    2. '                       ' → logprob: -2.407456398010254
    3. ' res' → logprob: -3.532456398010254
    4. '                   ' → logprob: -3.657456398010254
    5. '               ' → logprob: -7.907456398010254
    6. '   ' → logprob: -9.032456398010254
    7. '       ' → logprob: -9.407456398010254
    8. '           ' → logprob: -10.782456398010254
    9. '                           ' → logprob: -12.407456398010254
    10. '	res' → logprob: -12.407456398010254

Token 746: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38704031705856323
    2. '+=' → logprob: -1.137040376663208
    3. ' -=' → logprob: -9.762040138244629
    4. '                       ' → logprob: -10.012040138244629
    5. '```' → logprob: -10.512040138244629
    6. '                           ' → logprob: -11.387040138244629
    7. '                   ' → logprob: -11.887040138244629
    8. '+' → logprob: -12.137040138244629
    9. '                        ' → logprob: -12.262040138244629
    10. ' ' → logprob: -13.387040138244629

Token 747: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020354038861114532
    2. ' s' → logprob: -8.500203132629395
    3. '                   ' → logprob: -18.75020408630371
    4. '+s' → logprob: -20.12520408630371
    5. '                       ' → logprob: -20.62520408630371
    6. '+' → logprob: -21.37520408630371
    7. '	s' → logprob: -21.75020408630371
    8. '               ' → logprob: -22.25020408630371
    9. '   ' → logprob: -22.25020408630371
    10. '_s' → logprob: -22.75020408630371

Token 748: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08864430338144302
    2. '               ' → logprob: -2.58864426612854
    3. '           ' → logprob: -5.713644504547119
    4. ' else' → logprob: -5.838644504547119
    5. '                       ' → logprob: -5.963644504547119
    6. 'else' → logprob: -7.463644504547119
    7. '                           ' → logprob: -9.338644027709961
    8. '<|end|>' → logprob: -9.588644027709961
    9. '       ' → logprob: -9.963644027709961
    10. '                ' → logprob: -10.588644027709961

Token 749: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008177763782441616
    2. '                   ' → logprob: -5.008177757263184
    3. 'else' → logprob: -7.258177757263184
    4. ' else' → logprob: -7.508177757263184
    5. '           ' → logprob: -8.758177757263184
    6. '<|end|>' → logprob: -11.133177757263184
    7. '```' → logprob: -11.258177757263184
    8. '                       ' → logprob: -12.008177757263184
    9. '                ' → logprob: -12.508177757263184
    10. '   ' → logprob: -13.008177757263184

Token 750: ' else' (ID: 1203)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008113917894661427
    2. 'else' (adapté à ' else') → logprob: -5.633113861083984
    3. ' else' → logprob: -5.633113861083984
    4. '               ' → logprob: -7.133113861083984
    5. '           ' → logprob: -10.133113861083984
    6. '   ' → logprob: -10.508113861083984
    7. '				' → logprob: -11.383113861083984
    8. '       ' → logprob: -11.508113861083984
    9. '                       ' → logprob: -11.508113861083984
    10. '		           ' → logprob: -12.008113861083984

Token 751: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006458732299506664
    2. ' -=' → logprob: -5.881458759307861
    3. '                   ' → logprob: -6.131458759307861
    4. '-' → logprob: -7.756458759307861
    5. '-=' → logprob: -7.756458759307861
    6. ':' → logprob: -8.381458282470703
    7. '                      ' → logprob: -8.881458282470703
    8. '                        ' → logprob: -9.881458282470703
    9. ':
' → logprob: -10.006458282470703
    10. '                     ' → logprob: -10.631458282470703

Token 752: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2325601577758789
    2. '                   ' → logprob: -1.607560157775879
    3. 'res' → logprob: -5.982560157775879
    4. ' res' → logprob: -5.982560157775879
    5. '                    ' → logprob: -6.982560157775879
    6. '               ' → logprob: -7.732560157775879
    7. '           ' → logprob: -8.982560157775879
    8. '                           ' → logprob: -9.107560157775879
    9. '```' → logprob: -9.107560157775879
    10. '                        ' → logprob: -9.607560157775879

Token 753: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -3.4121114822482923e-06
    2. ' res' → logprob: -12.750003814697266
    3. '                   ' → logprob: -15.125003814697266
    4. '                       ' → logprob: -15.750003814697266
    5. '_res' → logprob: -18.250003814697266
    6. '	res' → logprob: -19.125003814697266
    7. '$res' → logprob: -19.375003814697266
    8. 'resc' → logprob: -20.625003814697266
    9. '                           ' → logprob: -20.875003814697266
    10. '               ' → logprob: -21.000003814697266

Token 754: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0009371895575895905
    2. ' -=' → logprob: -7.000936985015869
    3. '-' → logprob: -10.625937461853027
    4. '+=' → logprob: -14.000937461853027
    5. '                       ' → logprob: -14.375937461853027
    6. '                   ' → logprob: -16.87593650817871
    7. '=' → logprob: -17.25093650817871
    8. ' ' → logprob: -18.62593650817871
    9. '```' → logprob: -19.00093650817871
    10. '   ' → logprob: -19.00093650817871

Token 755: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.615255839889869e-05
    2. ' s' → logprob: -9.250096321105957
    3. '                   ' → logprob: -18.75009536743164
    4. '                       ' → logprob: -20.75009536743164
    5. '   ' → logprob: -21.25009536743164
    6. '	s' → logprob: -21.75009536743164
    7. '               ' → logprob: -21.87509536743164
    8. '           ' → logprob: -22.00009536743164
    9. '(s' → logprob: -22.12509536743164
    10. '_s' → logprob: -22.62509536743164

Token 756: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.449147343635559
    2. '  
' → logprob: -1.824147343635559
    3. '       ' → logprob: -2.0741472244262695
    4. '\n' → logprob: -2.3241472244262695
    5. '    
' → logprob: -2.3241472244262695
    6. '<|end|>' → logprob: -2.3241472244262695
    7. '        
' → logprob: -3.3241472244262695
    8. ' 
' → logprob: -3.4491472244262695
    9. '```' → logprob: -3.4491472244262695
    10. '           ' → logprob: -4.1991472244262695

Token 757: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4781780242919922
    2. '   ' → logprob: -1.7281780242919922
    3. '       ' → logprob: -2.603178024291992
    4. '<|end|>' → logprob: -2.853178024291992
    5. '<|end|>' → logprob: -4.603178024291992
    6. '           ' → logprob: -4.728178024291992
    7. '\n' → logprob: -4.728178024291992
    8. '\' → logprob: -4.853178024291992
    9. ')' → logprob: -5.353178024291992
    10. '``' → logprob: -5.603178024291992

Token 758: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49929550290107727
    2. '	return' → logprob: -1.1242954730987549
    3. '       ' → logprob: -2.749295473098755
    4. 'return' (adapté à ' return') → logprob: -6.124295711517334
    5. ' return' → logprob: -6.999295711517334
    6. '           ' → logprob: -7.499295711517334
    7. '	' → logprob: -9.124295234680176
    8. '	   ' → logprob: -9.124295234680176
    9. '
' → logprob: -9.749295234680176
    10. '```' → logprob: -9.749295234680176

Token 759: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -4.842555426876061e-06
    2. ' res' → logprob: -12.250004768371582
    3. '(res' → logprob: -22.7500057220459
    4. '	res' → logprob: -22.8750057220459
    5. '0' → logprob: -23.2500057220459
    6. '$res' → logprob: -23.3750057220459
    7. '```' → logprob: -24.6250057220459
    8. '   ' → logprob: -24.6250057220459
    9. 're' → logprob: -25.1250057220459
    10. '_res' → logprob: -25.1250057220459

Token 760: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20126186311244965
    2. '       ' → logprob: -2.0762617588043213
    3. '<|end|>' → logprob: -3.0762617588043213
    4. '```' → logprob: -5.3262619972229
    5. '        
' → logprob: -5.9512619972229
    6. '

' → logprob: -6.4512619972229
    7. '<|end|>' → logprob: -7.8262619972229
    8. '
' → logprob: -8.201261520385742
    9. '  
' → logprob: -8.701261520385742
    10. '\n' → logprob: -8.826261520385742

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014230613596737385
    2. 'allowed' → logprob: -5.514230728149414
    3. '
' → logprob: -5.889230728149414
    4. 'excluded' → logprob: -6.139230728149414
    5. '        
' → logprob: -6.764230728149414
    6. '```' → logprob: -6.889230728149414
    7. ' forbidden' → logprob: -7.014230728149414
    8. 'sum' → logprob: -7.389230728149414
    9. 'for' → logprob: -7.514230728149414
    10. 'multip' → logprob: -8.264230728149414

Token 762: ' forbidden' (ID: 74435)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4024735689163208
    2. 'for' → logprob: -1.4024735689163208
    3. 'sum' → logprob: -2.6524734497070312
    4. 'excluded' → logprob: -4.652473449707031
    5. 'multip' → logprob: -6.402473449707031
    6. 'allowed' → logprob: -6.652473449707031
    7. 'exclude' → logprob: -8.027473449707031
    8. 'subtract' → logprob: -8.027473449707031
    9. 'div' → logprob: -8.527473449707031
    10. ' forbidden' → logprob: -8.652473449707031

Token 763: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.014745224267244339
    2. '_count' → logprob: -4.264745235443115
    3. '_s' → logprob: -7.764745235443115
    4. '_m' → logprob: -9.514744758605957
    5. '_list' → logprob: -10.889744758605957
    6. '\' → logprob: -11.014744758605957
    7. '_total' → logprob: -11.389744758605957
    8. '_counts' → logprob: -11.389744758605957
    9. '_set' → logprob: -12.139744758605957
    10. '_' → logprob: -12.514744758605957

Token 764: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009978946298360825
    2. '=' → logprob: -4.634978771209717
    3. ' -=' → logprob: -9.134979248046875
    4. ' +=' → logprob: -9.634979248046875
    5. '_' → logprob: -10.509979248046875
    6. '   ' → logprob: -11.134979248046875
    7. '```' → logprob: -13.259979248046875
    8. ' ' → logprob: -13.634979248046875
    9. '       ' → logprob: -13.634979248046875
    10. ')' → logprob: -13.759979248046875

Token 765: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07889155298471451
    2. ' sum' → logprob: -2.5788915157318115
    3. 'total' → logprob: -13.45389175415039
    4. ' total' → logprob: -15.07889175415039
    5. '   ' → logprob: -17.70389175415039
    6. '(sum' → logprob: -18.20389175415039
    7. ' ' → logprob: -18.95389175415039
    8. '	sum' → logprob: -19.20389175415039
    9. '       ' → logprob: -19.95389175415039
    10. '    ' → logprob: -20.20389175415039

Token 766: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.1472419600977446e-06
    2. 'multip' → logprob: -13.875000953674316
    3. '(m' → logprob: -17.000001907348633
    4. '(_' → logprob: -17.750001907348633
    5. 'm' → logprob: -17.750001907348633
    6. '_multiple' → logprob: -18.375001907348633
    7. '\' → logprob: -18.500001907348633
    8. '_' → logprob: -18.750001907348633
    9. '_for' → logprob: -19.000001907348633
    10. '(' → logprob: -19.250001907348633

Token 767: 'ultip' (ID: 22975)
  Prédit: 'ultip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultip' → logprob: -1.6240566083070007e-06
    2. 'ult' → logprob: -13.750001907348633
    3. 'multip' → logprob: -15.125001907348633
    4. 'ultiple' → logprob: -15.625001907348633
    5. 'ulit' → logprob: -18.500001907348633
    6. 'ul' → logprob: -18.750001907348633
    7. 'ut' → logprob: -19.000001907348633
    8. 'utip' → logprob: -19.000001907348633
    9. 'Multip' → logprob: -19.500001907348633
    10. 'ulti' → logprob: -19.625001907348633

Token 768: 'les' (ID: 1032)
  Prédit: 'les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.016922133043408394
    2. 't' → logprob: -4.6419219970703125
    3. 'iples' → logprob: -5.3919219970703125
    4. 'ultip' → logprob: -6.6419219970703125
    5. 'tes' → logprob: -7.8919219970703125
    6. 'utes' → logprob: -8.016921997070312
    7. 'ples' → logprob: -9.141921997070312
    8. 'iles' → logprob: -9.266921997070312
    9. 'ult' → logprob: -9.891921997070312
    10. 'lies' → logprob: -10.016921997070312

Token 769: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.286852345103398e-05
    2. '(' → logprob: -10.750042915344238
    3. ' (' → logprob: -11.375042915344238
    4. '```' → logprob: -11.625042915344238
    5. '       ' → logprob: -14.500042915344238
    6. '(
' → logprob: -16.250041961669922
    7. 'n' → logprob: -16.250041961669922
    8. 'def' → logprob: -16.875041961669922
    9. '\(' → logprob: -17.500041961669922
    10. '   ' → logprob: -17.500041961669922

Token 770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008286866941489279
    2. ',p' → logprob: -7.125828742980957
    3. ' ,' → logprob: -11.375828742980957
    4. '       ' → logprob: -11.500828742980957
    5. '           ' → logprob: -14.375828742980957
    6. 'p' → logprob: -14.500828742980957
    7. '   ' → logprob: -14.625828742980957
    8. ',
' → logprob: -15.125828742980957
    9. ')' → logprob: -15.750828742980957
    10. ',n' → logprob: -15.750828742980957

Token 771: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002036595979006961
    2. ' p' → logprob: -8.500204086303711
    3. '       ' → logprob: -16.87520408630371
    4. '   ' → logprob: -17.50020408630371
    5. '           ' → logprob: -17.87520408630371
    6. '[p' → logprob: -18.25020408630371
    7. '               ' → logprob: -19.75020408630371
    8. '[' → logprob: -19.75020408630371
    9. '(p' → logprob: -19.87520408630371
    10. ')p' → logprob: -20.00020408630371

Token 772: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2471589798224159e-05
    2. ',' → logprob: -11.875012397766113
    3. 'list' → logprob: -12.625012397766113
    4. 'List' → logprob: -13.875012397766113
    5. 'p' → logprob: -14.750012397766113
    6. '_LIST' → logprob: -15.250012397766113
    7. '_List' → logprob: -15.375012397766113
    8. '```' → logprob: -16.37501335144043
    9. '_lst' → logprob: -16.50001335144043
    10. 'ist' → logprob: -16.87501335144043

Token 773: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005113034043461084
    2. ')
' → logprob: -5.505113124847412
    3. '       ' → logprob: -6.880113124847412
    4. '   ' → logprob: -13.755112648010254
    5. '(n' → logprob: -13.755112648010254
    6. ')n' → logprob: -13.755112648010254
    7. ')
' → logprob: -14.255112648010254
    8. ')

' → logprob: -14.630112648010254
    9. ')return' → logprob: -15.005112648010254
    10. '),' → logprob: -15.380112648010254

Token 774: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5313485264778137
    2. '       ' → logprob: -0.9063485264778137
    3. '```' → logprob: -5.531348705291748
    4. '        
' → logprob: -5.906348705291748
    5. 'allowed' → logprob: -7.281348705291748
    6. '`
' → logprob: -8.40634822845459
    7. '
' → logprob: -8.78134822845459
    8. ' allowed' → logprob: -9.03134822845459
    9. '_allowed' → logprob: -9.53134822845459
    10. '``' → logprob: -9.65634822845459

Token 775: ' allowed' (ID: 9279)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.6962817311286926
    2. 'allowed' (adapté à ' allowed') → logprob: -1.1962816715240479
    3. '       ' → logprob: -1.8212816715240479
    4. 'result' → logprob: -3.946281671524048
    5. 'average' → logprob: -4.321281909942627
    6. ' allowed' → logprob: -6.696281909942627
    7. ' expected' → logprob: -7.696281909942627
    8. 're' → logprob: -7.821281909942627
    9. 'answer' → logprob: -7.821281909942627
    10. 'avg' → logprob: -7.946281909942627

Token 776: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.253541499376297
    2. '_count' → logprob: -1.5035414695739746
    3. '\' → logprob: -6.503541469573975
    4. '_total' → logprob: -10.253541946411133
    5. '```' → logprob: -10.753541946411133
    6. '_s' → logprob: -11.003541946411133
    7. '_' → logprob: -12.253541946411133
    8. '_counts' → logprob: -12.378541946411133
    9. '"_' → logprob: -12.378541946411133
    10. '_score' → logprob: -12.878541946411133

Token 777: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023908568546175957
    2. '=' → logprob: -3.7739086151123047
    3. ' -=' → logprob: -8.023908615112305
    4. '<|end|>' → logprob: -9.023908615112305
    5. ' -' → logprob: -9.523908615112305
    6. ')' → logprob: -9.648908615112305
    7. ' ' → logprob: -10.523908615112305
    8. ' +=' → logprob: -10.773908615112305
    9. '```' → logprob: -11.648908615112305
    10. '-' → logprob: -12.523908615112305

Token 778: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.16022463142871857
    2. ' total' → logprob: -1.9102246761322021
    3. '       ' → logprob: -14.910224914550781
    4. '(total' → logprob: -16.16022491455078
    5. '   ' → logprob: -17.66022491455078
    6. '	total' → logprob: -19.66022491455078
    7. '        ' → logprob: -20.28522491455078
    8. ' ' → logprob: -20.41022491455078
    9. '           ' → logprob: -20.53522491455078
    10. 'Total' → logprob: -20.78522491455078

Token 779: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.1534065455198288
    2. ' -' → logprob: -2.1534066200256348
    3. '-' → logprob: -3.6534066200256348
    4. '_' → logprob: -8.903406143188477
    5. '_count' → logprob: -10.153406143188477
    6. ' _' → logprob: -10.778406143188477
    7. '-_' → logprob: -11.903406143188477
    8. '-s' → logprob: -12.028406143188477
    9. '\' → logprob: -12.153406143188477
    10. ' ' → logprob: -12.403406143188477

Token 780: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02324792370200157
    2. '-' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.398247718811035
    4. ' ' → logprob: -14.523247718811035
    5. '```' → logprob: -15.773247718811035
    6. ' –' → logprob: -16.27324867248535
    7. '–' → logprob: -17.52324867248535
    8. ')' → logprob: -17.89824867248535
    9. '−' → logprob: -18.02324867248535
    10. '        ' → logprob: -18.02324867248535

Token 781: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013357517309486866
    2. ' forbidden' → logprob: -9.000133514404297
    3. ' for' → logprob: -11.500133514404297
    4. '(for' → logprob: -17.875133514404297
    5. 'Forbidden' → logprob: -19.375133514404297
    6. '_for' → logprob: -20.250133514404297
    7. 'forgot' → logprob: -20.375133514404297
    8. '.for' → logprob: -20.375133514404297
    9. 'ford' → logprob: -20.750133514404297
    10. '-for' → logprob: -20.875133514404297

Token 782: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.9153885558771435e-06
    2. '_count' → logprob: -12.125005722045898
    3. 'sum' → logprob: -15.250005722045898
    4. '\' → logprob: -16.7500057220459
    5. '_s' → logprob: -17.2500057220459
    6. '_set' → logprob: -18.1250057220459
    7. 's' → logprob: -19.2500057220459
    8. '_sub' → logprob: -19.3750057220459
    9. ' _' → logprob: -19.5000057220459
    10. '_' → logprob: -19.7500057220459

Token 783: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07161582261323929
    2. '
' → logprob: -2.6966159343719482
    3. '```' → logprob: -7.071615695953369
    4. 'print' → logprob: -7.196615695953369
    5. '        
' → logprob: -10.321616172790527
    6. ' print' → logprob: -10.821616172790527
    7. '``' → logprob: -11.571616172790527
    8. '`
' → logprob: -12.821616172790527
    9. '`' → logprob: -13.071616172790527
    10. '   ' → logprob: -13.446616172790527

Token 784: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047531887888908386
    2. 'print' → logprob: -3.797531843185425
    3. '```' → logprob: -4.047532081604004
    4. '
' → logprob: -6.047532081604004
    5. '``' → logprob: -6.422532081604004
    6. 'expected' → logprob: -6.672532081604004
    7. 'result' → logprob: -8.047532081604004
    8. 'average' → logprob: -8.422532081604004
    9. '        
' → logprob: -8.797532081604004
    10. '   ' → logprob: -9.047532081604004

Token 785: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06527842581272125
    2. '       ' → logprob: -3.4402785301208496
    3. ' print' → logprob: -4.19027853012085
    4. 'result' → logprob: -4.31527853012085
    5. 'expected' → logprob: -6.06527853012085
    6. ' result' → logprob: -8.690278053283691
    7. ' expected' → logprob: -10.315278053283691
    8. '```' → logprob: -10.690278053283691
    9. 'res' → logprob: -11.065278053283691
    10. 'ans' → logprob: -11.065278053283691

Token 786: ' Expected' (ID: 55344)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expected' → logprob: -0.008797389455139637
    2. 'print' → logprob: -5.5087971687316895
    3. 'result' → logprob: -6.2587971687316895
    4. 'avg' → logprob: -7.1337971687316895
    5. 'ans' → logprob: -7.2587971687316895
    6. 'if' → logprob: -7.8837971687316895
    7. ' expected' → logprob: -8.383797645568848
    8. '       ' → logprob: -8.508797645568848
    9. 'answer' → logprob: -8.758797645568848
    10. 'average' → logprob: -9.258797645568848

Token 787: ' value' (ID: 1432)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0599626861512661
    2. 'value' → logprob: -3.309962749481201
    3. '_' → logprob: -4.559962749481201
    4. '_re' → logprob: -5.309962749481201
    5. '_income' → logprob: -5.434962749481201
    6. ' value' → logprob: -7.184962749481201
    7. 're' → logprob: -7.184962749481201
    8. 'income' → logprob: -8.309962272644043
    9. ' revenue' → logprob: -9.684962272644043
    10. '```' → logprob: -11.059962272644043

Token 788: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225465327501297
    2. '=' → logprob: -1.6004652976989746
    3. '       ' → logprob: -10.225465774536133
    4. '*' → logprob: -12.100465774536133
    5. '```' → logprob: -13.100465774536133
    6. '`' → logprob: -13.600465774536133
    7. '_' → logprob: -13.600465774536133
    8. '_value' → logprob: -14.100465774536133
    9. '   ' → logprob: -14.350465774536133
    10. '           ' → logprob: -14.350465774536133

Token 789: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.0002614550176076591
    2. ' allowed' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.875261306762695
    4. '.allowed' → logprob: -17.375261306762695
    5. '_allowed' → logprob: -18.125261306762695
    6. 'float' → logprob: -18.375261306762695
    7. '
' → logprob: -18.500261306762695
    8. 'expected' → logprob: -19.375261306762695
    9. '(' → logprob: -19.375261306762695
    10. 'available' → logprob: -19.375261306762695

Token 790: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.061676347395405e-05
    2. '\' → logprob: -10.00005054473877
    3. '_count' → logprob: -13.00005054473877
    4. '```' → logprob: -13.75005054473877
    5. '_' → logprob: -14.25005054473877
    6. ' _' → logprob: -14.50005054473877
    7. '
' → logprob: -15.12505054473877
    8. '_s' → logprob: -16.000051498413086
    9. '_value' → logprob: -16.625051498413086
    10. '*_' → logprob: -17.000051498413086

Token 791: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.14299064874649048
    2. '/' → logprob: -2.0179905891418457
    3. '*' → logprob: -8.517991065979004
    4. ' *' → logprob: -10.267991065979004
    5. '```' → logprob: -10.392991065979004
    6. '   ' → logprob: -10.892991065979004
    7. '`' → logprob: -11.892991065979004
    8. ' ' → logprob: -12.142991065979004
    9. ' ' → logprob: -12.392991065979004
    10. ')' → logprob: -12.642991065979004

Token 792: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.005233763717114925
    2. ' allowed' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.380233764648438
    4. '_allowed' → logprob: -18.755233764648438
    5. '.allowed' → logprob: -18.880233764648438
    6. '```' → logprob: -19.755233764648438
    7. 'float' → logprob: -19.755233764648438
    8. '       ' → logprob: -20.380233764648438
    9. '
' → logprob: -20.630233764648438
    10. 'allow' → logprob: -20.755233764648438

Token 793: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.088346359931165e-07
    2. 'count' → logprob: -14.250000953674316
    3. '_' → logprob: -17.0
    4. '_counts' → logprob: -17.125
    5. ' _' → logprob: -17.625
    6. 'Count' → logprob: -17.875
    7. '_c' → logprob: -18.5
    8. '\' → logprob: -19.5
    9. '_cnt' → logprob: -19.5
    10. '```' → logprob: -19.75

Token 794: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07280004769563675
    2. 'print' → logprob: -2.9478001594543457
    3. '
' → logprob: -4.572800159454346
    4. '```' → logprob: -6.447800159454346
    5. ' print' → logprob: -6.572800159454346
    6. '        
' → logprob: -6.822800159454346
    7. ',' → logprob: -7.322800159454346
    8. '*' → logprob: -7.447800159454346
    9. '()
' → logprob: -8.072799682617188
    10. '()' → logprob: -8.072799682617188

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08971184492111206
    2. 'print' → logprob: -2.464711904525757
    3. ' print' → logprob: -8.089712142944336
    4. '```' → logprob: -8.464712142944336
    5. '`' → logprob: -10.214712142944336
    6. '        
' → logprob: -10.464712142944336
    7. '(print' → logprob: -10.464712142944336
    8. '\' → logprob: -10.714712142944336
    9. '
' → logprob: -10.714712142944336
    10. '\n' → logprob: -10.839712142944336

Token 796: ' expected' (ID: 5930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020832857117056847
    2. ' print' → logprob: -6.7520833015441895
    3. '       ' → logprob: -7.0020833015441895
    4. '```' → logprob: -13.002082824707031
    5. '   ' → logprob: -15.377082824707031
    6. '           ' → logprob: -16.12708282470703
    7. 'result' → logprob: -16.37708282470703
    8. '
' → logprob: -17.00208282470703
    9. '	print' → logprob: -17.87708282470703
    10. '     ' → logprob: -18.37708282470703

Token 797: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.5274819731712341
    2. '_' → logprob: -0.9024819731712341
    3. ' _' → logprob: -7.027482032775879
    4. 'value' → logprob: -7.277482032775879
    5. ' =' → logprob: -7.777482032775879
    6. '_val' → logprob: -7.902482032775879
    7. '_expected' → logprob: -8.277482032775879
    8. '_sum' → logprob: -8.402482032775879
    9. '```' → logprob: -8.652482032775879
    10. '<|end|>' → logprob: -8.902482032775879

Token 798: ' allowed' (ID: 9279)
  Prédit: ' allowed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' allowed' → logprob: -0.47407716512680054
    2. 'allowed' → logprob: -0.9740771651268005
    3. '   ' → logprob: -16.724077224731445
    4. '_allowed' → logprob: -17.474077224731445
    5. '.allowed' → logprob: -17.724077224731445
    6. 'float' → logprob: -17.724077224731445
    7. ' float' → logprob: -18.599077224731445
    8. ' ' → logprob: -18.724077224731445
    9. 'allow' → logprob: -19.474077224731445
    10. '       ' → logprob: -19.974077224731445

Token 799: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.005362890660762787
    2. '_count' → logprob: -5.6303629875183105
    3. '_value' → logprob: -6.3803629875183105
    4. '       ' → logprob: -10.755362510681152
    5. '\' → logprob: -11.130362510681152
    6. '/_' → logprob: -11.380362510681152
    7. '*_' → logprob: -12.505362510681152
    8. '_val' → logprob: -12.630362510681152
    9. '   ' → logprob: -13.130362510681152
    10. ' _' → logprob: -13.255362510681152

Token 800: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.2015581578016281
    2. '/' → logprob: -1.7015581130981445
    3. '```' → logprob: -10.076558113098145
    4. '       ' → logprob: -10.826558113098145
    5. '**' → logprob: -11.576558113098145
    6. '   ' → logprob: -11.701558113098145
    7. ' /
' → logprob: -11.701558113098145
    8. '<|end|>' → logprob: -11.701558113098145
    9. '*' → logprob: -12.326558113098145
    10. '        ' → logprob: -12.451558113098145

Token 801: ' allowed' (ID: 9279)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.0002613358374219388
    2. ' allowed' → logprob: -8.250261306762695
    3. '.allowed' → logprob: -20.375261306762695
    4. '_allowed' → logprob: -21.125261306762695
    5. '   ' → logprob: -21.375261306762695
    6. 'float' → logprob: -22.375261306762695
    7. 'allow' → logprob: -22.500261306762695
    8. 'expected' → logprob: -22.875261306762695
    9. '```' → logprob: -23.500261306762695
    10. 'available' → logprob: -23.875261306762695

Token 802: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.65707261255011e-06
    2. 'count' → logprob: -11.875008583068848
    3. 'Count' → logprob: -13.625008583068848
    4. '```' → logprob: -16.000009536743164
    5. '_COUNT' → logprob: -16.625009536743164
    6. 'ed' → logprob: -16.625009536743164
    7. '_allowed' → logprob: -16.625009536743164
    8. '_counts' → logprob: -17.000009536743164
    9. '   ' → logprob: -17.125009536743164
    10. '`' → logprob: -18.500009536743164

Token 803: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015452326275408268
    2. '
' → logprob: -5.2654523849487305
    3. 'print' → logprob: -5.2654523849487305
    4. '<|end|>' → logprob: -6.5154523849487305
    5. '   ' → logprob: -6.6404523849487305
    6. '\' → logprob: -7.3904523849487305
    7. '\n' → logprob: -7.6404523849487305
    8. '        
' → logprob: -8.01545238494873
    9. '```' → logprob: -8.01545238494873
    10. ')' → logprob: -9.01545238494873

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008562328293919563
    2. '
' → logprob: -5.2585625648498535
    3. '```' → logprob: -6.1335625648498535
    4. 'print' → logprob: -7.7585625648498535
    5. '   ' → logprob: -8.883562088012695
    6. '\' → logprob: -8.883562088012695
    7. '\n' → logprob: -9.508562088012695
    8. '<|end|>' → logprob: -9.883562088012695
    9. ')' → logprob: -10.133562088012695
    10. '('\' → logprob: -10.133562088012695

Token 805: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1602942943572998
    2. 'print' (adapté à ' print') → logprob: -1.9102942943572998
    3. '```' → logprob: -10.160294532775879
    4. '   ' → logprob: -11.285294532775879
    5. ' print' → logprob: -11.535294532775879
    6. '(print' → logprob: -12.910294532775879
    7. '\' → logprob: -13.160294532775879
    8. '           ' → logprob: -14.285294532775879
    9. '(' → logprob: -14.285294532775879
    10. '        
' → logprob: -14.410294532775879

Token 806: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0039343754760921
    2. '('' → logprob: -5.753934383392334
    3. '(' → logprob: -7.253934383392334
    4. '('{' → logprob: -10.003933906555176
    5. 'f' → logprob: -13.378933906555176
    6. '(expected' → logprob: -14.253933906555176
    7. '('{}' → logprob: -14.753933906555176
    8. '()' → logprob: -15.253933906555176
    9. '("%.' → logprob: -15.628933906555176
    10. '(round' → logprob: -15.628933906555176

Token 807: ''{' (ID: 47735)
  Prédit: ''{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.49291637539863586
    2. '{' → logprob: -0.9929163455963135
    3. '('{' → logprob: -4.242916584014893
    4. '"{' → logprob: -5.992916584014893
    5. '(f' → logprob: -6.867916584014893
    6. 'f' → logprob: -7.367916584014893
    7. '{'' → logprob: -9.867916107177734
    8. '('' → logprob: -10.117916107177734
    9. '("{' → logprob: -10.867916107177734
    10. ''' → logprob: -11.367916107177734

Token 808: 'expected' (ID: 12575)
  Prédit: 'expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' → logprob: 0.0
    2. ' expected' → logprob: -18.25
    3. '	expected' → logprob: -21.875
    4. '{' → logprob: -22.625
    5. '(expected' → logprob: -23.25
    6. '.expected' → logprob: -24.0
    7. 'requested' → logprob: -26.5
    8. '_expected' → logprob: -26.625
    9. '   ' → logprob: -26.75
    10. '}' → logprob: -26.875

Token 809: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -9.491498531133402e-06
    2. ' :.' → logprob: -11.750009536743164
    3. '.' → logprob: -13.500009536743164
    4. ':' → logprob: -16.375009536743164
    5. '{' → logprob: -16.500009536743164
    6. ' .' → logprob: -19.750009536743164
    7. '(.' → logprob: -20.125009536743164
    8. '}.' → logprob: -20.750009536743164
    9. ':{' → logprob: -20.750009536743164
    10. ' :' → logprob: -20.875009536743164

Token 810: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: 0.0
    2. '010' → logprob: -17.25
    3. '{' → logprob: -18.875
    4. '9' → logprob: -19.125
    5. '```' → logprob: -22.125
    6. '6' → logprob: -23.5
    7. '１０' → logprob: -24.0
    8. '۱۰' → logprob: -24.5
    9. '``' → logprob: -25.0
    10. '{'' → logprob: -25.375

Token 811: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -19.625
    3. '```' → logprob: -19.75
    4. '{' → logprob: -21.875
    5. 'lf' → logprob: -22.0
    6. '6' → logprob: -22.0
    7. '	f' → logprob: -22.75
    8. '
' → logprob: -22.75
    9. 'fi' → logprob: -22.75
    10. '}' → logprob: -22.875

Token 812: '}')

' (ID: 171301)
  Prédit: '}')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}')' → logprob: -0.05567345395684242
    2. ')' → logprob: -3.305673360824585
    3. '')' → logprob: -4.055673599243164
    4. '}' → logprob: -8.805673599243164
    5. '}')
' → logprob: -13.055673599243164
    6. '}")' → logprob: -14.805673599243164
    7. '})' → logprob: -15.055673599243164
    8. ')')
' → logprob: -15.680673599243164
    9. '')}' → logprob: -15.680673599243164
    10. ']' → logprob: -15.930673599243164

Token 813: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 814: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931625604629517
    2. ' __' → logprob: -0.6931625604629517
    3. 'if' → logprob: -12.31816291809082
    4. '_' → logprob: -12.31816291809082
    5. '___' → logprob: -13.06816291809082
    6. '_name' → logprob: -13.56816291809082
    7. 'name' → logprob: -14.44316291809082
    8. '(__' → logprob: -14.56816291809082
    9. '____' → logprob: -14.69316291809082
    10. '/__' → logprob: -14.81816291809082

Token 815: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07998017221689224
    2. '==' → logprob: -3.2049801349639893
    3. '__.__' → logprob: -4.454980373382568
    4. ' ==' → logprob: -4.829980373382568
    5. '.__' → logprob: -5.079980373382568
    6. '=="' → logprob: -6.204980373382568
    7. '=='' → logprob: -6.329980373382568
    8. '```' → logprob: -6.579980373382568
    9. '.' → logprob: -7.204980373382568
    10. '**' → logprob: -7.454980373382568

Token 816: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005282493657432497
    2. '__.__' → logprob: -7.625528335571289
    3. '==' → logprob: -10.625528335571289
    4. '=="' → logprob: -12.125528335571289
    5. '=='' → logprob: -12.750528335571289
    6. '__.' → logprob: -12.750528335571289
    7. '__('' → logprob: -13.250528335571289
    8. '__["' → logprob: -14.000528335571289
    9. ' ==' → logprob: -14.375528335571289
    10. '___' → logprob: -15.125528335571289

Token 817: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.26509562134742737
    2. '==' → logprob: -1.640095591545105
    3. ' ==' → logprob: -3.7650957107543945
    4. '=="' → logprob: -4.6400957107543945
    5. '=='' → logprob: -5.1400957107543945
    6. ''' → logprob: -9.765095710754395
    7. '__.__' → logprob: -9.890095710754395
    8. '"' → logprob: -10.015095710754395
    9. '=' → logprob: -10.765095710754395
    10. '_' → logprob: -11.640095710754395

Token 818: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03832708299160004
    2. '"' → logprob: -3.2883269786834717
    3. '__' → logprob: -8.16332721710205
    4. ' '__' → logprob: -15.03832721710205
    5. 'main' → logprob: -15.28832721710205
    6. ''name' → logprob: -16.913326263427734
    7. '('__' → logprob: -17.663326263427734
    8. ''user' → logprob: -17.788326263427734
    9. ' "__' → logprob: -18.038326263427734
    10. '   ' → logprob: -18.038326263427734

Token 819: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005265306681394577
    2. '__' → logprob: -5.255265235900879
    3. 'name' → logprob: -10.380265235900879
    4. '_main' → logprob: -15.505265235900879
    5. 'python' → logprob: -16.380266189575195
    6. '__':
' → logprob: -16.630266189575195
    7. 'print' → logprob: -17.505266189575195
    8. ' main' → logprob: -18.255266189575195
    9. 'm' → logprob: -18.880266189575195
    10. '```' → logprob: -19.130266189575195

Token 820: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07066892087459564
    2. '__' → logprob: -2.695668935775757
    3. '__":
' → logprob: -7.320668697357178
    4. '('__' → logprob: -11.320669174194336
    5. '__:' → logprob: -11.570669174194336
    6. '()' → logprob: -11.570669174194336
    7. '_' → logprob: -11.695669174194336
    8. '():
' → logprob: -12.195669174194336
    9. '__()
' → logprob: -12.445669174194336
    10. '__('' → logprob: -12.695669174194336

Token 821: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006867402233183384
    2. '   ' → logprob: -5.006867408752441
    3. ' main' → logprob: -9.381867408752441
    4. '	main' → logprob: -9.631867408752441
    5. '_main' → logprob: -14.006867408752441
    6. '```' → logprob: -14.256867408752441
    7. '(main' → logprob: -15.256867408752441
    8. '  ' → logprob: -15.756867408752441
    9. '    
' → logprob: -16.256866455078125
    10. ' ' → logprob: -17.131866455078125

Token 822: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -24.625
    4. '_main' → logprob: -26.5
    5. '   ' → logprob: -27.375
    6. 'Main' → logprob: -28.125
    7. '.main' → logprob: -28.375
    8. 'import' → logprob: -29.5
    9. '(main' → logprob: -29.875
    10. 'sys' → logprob: -30.25

Token 823: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 821
Tokens correctement prédits (1ère position, stricte): 322
Tokens correctement prédits (1ère position, avec adaptation): 345
Tokens correctement prédits (top 10): 684
Précision stricte (1ère position): 39.22%
Précision adaptée (1ère position): 42.02%
Précision (top 10): 83.31%
================================================================================
