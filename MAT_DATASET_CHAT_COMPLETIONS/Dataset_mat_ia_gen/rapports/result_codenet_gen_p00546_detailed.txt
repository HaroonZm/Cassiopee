================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
from collections import deque

sys.setrecursionlimit(10**7)
input = sys.stdin.readline

def main():
    # 入力の読み込み
    N, M, K, S = map(int, input().split())  # 町数, 道路数, ゾンビ支配町数, 危険判定の距離制限
    P, Q = map(int, input().split())       # 安い宿の費用, 高級宿の費用
    zombies = [int(input()) for _ in range(K)]  # ゾンビ支配町のリスト

    # グラフの隣接リスト作成
    graph = [[] for _ in range(N+1)]
    for _ in range(M):
        a, b = map(int, input().split())
        graph[a].append(b)
        graph[b].append(a)

    # ゾンビ支配の町から距離S以内の町を「危険な町」とする
    # ゾンビ支配町は訪問禁止なのでそこから距離0として、距離S以内の町を見つける
    dist = [-1]*(N+1)  # 各町のゾンビからの最短距離。-1は未訪問
    queue = deque()

    # ゾンビ支配町は距離0でキューに入れる
    for z in zombies:
        dist[z] = 0
        queue.append(z)

    # BFSで距離S以内の町を求める
    while queue:
        now = queue.popleft()
        if dist[now] == S:
            continue
        for nxt in graph[now]:
            if dist[nxt] == -1:
                dist[nxt] = dist[now] + 1
                queue.append(nxt)

    # 各町の宿泊費の定義
    # 町1と町Nでは宿泊しないので費用0とする
    # ゾンビ支配町は通行禁止なのでこれも考慮しておく（距離が0のところは支配町なので通れない）
    cost = [0]*(N+1)
    for i in range(2, N):
        if dist[i] != -1 and dist[i] <= S:
            # 危険な町：高級宿Q円
            cost[i] = Q
        else:
            # 危険でない町：安い宿P円
            cost[i] = P

    # ダイクストラ法で町1から町Nまでの最小宿泊費を求める
    INF = 10**15
    dp = [INF]*(N+1)
    dp[1] = 0
    heap = []
    heapq.heappush(heap, (0, 1))

    while heap:
        cur_cost, node = heapq.heappop(heap)
        if dp[node] < cur_cost:
            continue
        if node == N:
            # 目的地に到達したら最小費用が確定
            print(cur_cost)
            return
        for nxt in graph[node]:
            # ゾンビ支配町は通れないのでcostが0でないかつdistが0の状態は通行不可
            # 実際にcostで判別するよりはdist==0で判別
            if dist[nxt] == 0:
                continue  # ゾンビ支配町は通り抜け禁止

            nd = cur_cost + cost[nxt]  # 移動先での宿泊費加算
            if dp[nxt] > nd:
                dp[nxt] = nd
                heapq.heappush(heap, (nd, nxt))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -12.37501049041748
    3. '=' → logprob: -13.75001049041748
    4. '_' → logprob: -13.87501049041748
    5. 'ify' → logprob: -14.00001049041748
    6. '#' → logprob: -14.25001049041748
    7. '[' → logprob: -15.12501049041748
    8. 'u' → logprob: -15.25001049041748
    9. 'p' → logprob: -15.25001049041748
    10. 'space' → logprob: -15.50001049041748

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9041810035705566
    2. '\' → logprob: -0.9041810035705566
    3. '\n' → logprob: -1.9041810035705566
    4. '
' → logprob: -3.9041810035705566
    5. '

' → logprob: -5.529181003570557
    6. '```' → logprob: -5.654181003570557
    7. '.
' → logprob: -5.904181003570557
    8. 'def' → logprob: -6.154181003570557
    9. '<|end|>' → logprob: -6.279181003570557
    10. '' → logprob: -6.529181003570557

Token 8: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.009763529524207115
    2. 'collections' → logprob: -5.009763717651367
    3. ' queue' → logprob: -6.259763717651367
    4. ' math' → logprob: -7.384763717651367
    5. ' itertools' → logprob: -8.259763717651367
    6. ' typing' → logprob: -8.884763717651367
    7. ' threading' → logprob: -10.509763717651367
    8. '_' → logprob: -11.009763717651367
    9. ' ' → logprob: -11.009763717651367
    10. ' operator' → logprob: -11.259763717651367

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.695884108543396
    2. ' import' → logprob: -0.695884108543396
    3. '.' → logprob: -5.9458842277526855
    4. '	import' → logprob: -10.695883750915527
    5. ' ' → logprob: -10.820883750915527
    6. '<|end|>' → logprob: -11.195883750915527
    7. '```' → logprob: -11.570883750915527
    8. '.import' → logprob: -11.570883750915527
    9. '_import' → logprob: -11.820883750915527
    10. '.Counter' → logprob: -12.070883750915527

Token 10: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.19070060551166534
    2. ' defaultdict' → logprob: -1.815700650215149
    3. 'deque' → logprob: -4.565700531005859
    4. ' abc' → logprob: -8.06570053100586
    5. ' import' → logprob: -9.69070053100586
    6. ' collections' → logprob: -10.06570053100586
    7. ' named' → logprob: -11.31570053100586
    8. ' Counter' → logprob: -11.44070053100586
    9. '```' → logprob: -11.56570053100586
    10. ' heap' → logprob: -11.94070053100586

Token 11: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.068244457244873
    2. '\n' → logprob: -1.318244457244873
    3. '
' → logprob: -2.193244457244873
    4. '#' → logprob: -2.693244457244873
    5. '```' → logprob: -2.943244457244873
    6. 'import' → logprob: -3.318244457244873
    7. '.' → logprob: -3.443244457244873
    8. '' → logprob: -3.443244457244873
    9. '`' → logprob: -4.318244457244873
    10. '

' → logprob: -4.443244457244873

Token 12: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3600088655948639
    2. 'class' → logprob: -1.7350088357925415
    3. '```' → logprob: -2.485008955001831
    4. '\' → logprob: -4.610008716583252
    5. '.' → logprob: -4.985008716583252
    6. 'import' → logprob: -5.110008716583252
    7. '`' → logprob: -5.235008716583252
    8. '#' → logprob: -5.610008716583252
    9. 'd' → logprob: -6.110008716583252
    10. '
' → logprob: -6.360008716583252

Token 13: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0683535037969705e-05
    2. ' .' → logprob: -13.00001049041748
    3. '.​' → logprob: -13.75001049041748
    4. '.user' → logprob: -13.87501049041748
    5. '.import' → logprob: -14.00001049041748
    6. '.readline' → logprob: -14.25001049041748
    7. '."""' → logprob: -14.37501049041748
    8. '.stdout' → logprob: -14.75001049041748
    9. '.`' → logprob: -14.87501049041748
    10. '.exit' → logprob: -15.00001049041748

Token 14: 'rec' (ID: 9285)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -1.0813663005828857
    2. 'rec' → logprob: -1.5813663005828857
    3. '_trace' → logprob: -1.8313663005828857
    4. '_max' → logprob: -2.9563663005828857
    5. '_version' → logprob: -3.0813663005828857
    6. '_' → logprob: -3.2063663005828857
    7. '_set' → logprob: -3.9563663005828857
    8. 'limit' → logprob: -4.206366539001465
    9. 'trace' → logprob: -4.331366539001465
    10. '_attr' → logprob: -4.581366539001465

Token 15: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003255907678976655
    2. 'urs' → logprob: -6.253255844116211
    3. 'ur' → logprob: -7.378255844116211
    4. 'limit' → logprob: -7.753255844116211
    5. 'ursive' → logprob: -9.128255844116211
    6. 'urf' → logprob: -9.753255844116211
    7. 'ut' → logprob: -10.503255844116211
    8. 'ursor' → logprob: -10.628255844116211
    9. 'urse' → logprob: -11.128255844116211
    10. 'utf' → logprob: -11.253255844116211

Token 16: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.306760805164231e-05
    2. '_limit' → logprob: -11.62501335144043
    3. ' limit' → logprob: -13.25001335144043
    4. 'depth' → logprob: -13.62501335144043
    5. 'lim' → logprob: -14.00001335144043
    6. '.limit' → logprob: -16.37501335144043
    7. 'Limit' → logprob: -16.50001335144043
    8. '(limit' → logprob: -16.62501335144043
    9. '-limit' → logprob: -17.00001335144043
    10. 'ault' → logprob: -18.62501335144043

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.511406809295295e-06
    2. ' (' → logprob: -13.250006675720215
    3. '(
' → logprob: -13.250006675720215
    4. '(

' → logprob: -13.875006675720215
    5. '((' → logprob: -14.000006675720215
    6. '("("' → logprob: -15.125006675720215
    7. '```' → logprob: -15.750006675720215
    8. '()' → logprob: -16.0000057220459
    9. '(**' → logprob: -16.3750057220459
    10. '(None' → logprob: -16.6250057220459

Token 18: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006719640456140041
    2. '100' → logprob: -5.006719589233398
    3. ' ' → logprob: -13.131719589233398
    4. '1' → logprob: -13.506719589233398
    5. '500' → logprob: -14.881719589233398
    6. '300' → logprob: -15.756719589233398
    7. '   ' → logprob: -15.881719589233398
    8. '999' → logprob: -15.881719589233398
    9. '200' → logprob: -16.8817195892334
    10. '  ' → logprob: -17.5067195892334

Token 19: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9345764517784119
    2. '7' → logprob: -0.9345764517784119
    3. '6' → logprob: -2.0595765113830566
    4. '5' → logprob: -3.1845765113830566
    5. '000' → logprob: -3.4345765113830566
    6. '4' → logprob: -4.684576511383057
    7. '00' → logprob: -5.559576511383057
    8. '8' → logprob: -8.434576034545898
    9. '07' → logprob: -10.684576034545898
    10. '9' → logprob: -11.934576034545898

Token 20: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0001732663222355768
    2. '9' → logprob: -8.750173568725586
    3. '8' → logprob: -11.250173568725586
    4. '6' → logprob: -13.250173568725586
    5. ' ' → logprob: -19.625173568725586
    6. '```' → logprob: -19.625173568725586
    7. ')' → logprob: -22.875173568725586
    8. '**' → logprob: -23.125173568725586
    9. '

' → logprob: -23.500173568725586
    10. '۷' → logprob: -23.875173568725586

Token 21: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.625000953674316
    3. ')
' → logprob: -15.875000953674316
    4. ' )' → logprob: -16.5
    5. '),' → logprob: -18.0
    6. '```' → logprob: -18.125
    7. '}' → logprob: -18.5
    8. ')

' → logprob: -19.125
    9. '）' → logprob: -19.125
    10. ')))' → logprob: -19.25

Token 22: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.24077999591827393
    2. '
' → logprob: -1.740779995918274
    3. 'def' → logprob: -3.7407798767089844
    4. '```' → logprob: -5.615779876708984
    5. 'class' → logprob: -5.740779876708984
    6. '
' → logprob: -5.990779876708984
    7. '\n' → logprob: -6.615779876708984
    8. '\' → logprob: -6.740779876708984
    9. 'n' → logprob: -6.865779876708984
    10. '' → logprob: -6.990779876708984

Token 23: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002548196818679571
    2. '()' → logprob: -6.1275482177734375
    3. '=' → logprob: -9.127548217773438
    4. '('' → logprob: -10.252548217773438
    5. ' =' → logprob: -10.377548217773438
    6. ')' → logprob: -10.377548217773438
    7. '("")' → logprob: -11.002548217773438
    8. '<|end|>' → logprob: -11.252548217773438
    9. '```' → logprob: -11.252548217773438
    10. '("("' → logprob: -11.252548217773438

Token 24: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.05196099728345871
    2. ' input' → logprob: -3.3019609451293945
    3. 'sys' → logprob: -4.6769609451293945
    4. 'input' → logprob: -5.4269609451293945
    5. ' lambda' → logprob: -9.551960945129395
    6. '=sys' → logprob: -11.051960945129395
    7. '	sys' → logprob: -11.301960945129395
    8. 'lambda' → logprob: -12.301960945129395
    9. ' ' → logprob: -12.301960945129395
    10. ' iter' → logprob: -12.676960945129395

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.30556735396385193
    2. '.' → logprob: -1.8055673837661743
    3. '.readline' → logprob: -2.4305672645568848
    4. ' .' → logprob: -4.805567264556885
    5. '.stdout' → logprob: -6.180567264556885
    6. '.input' → logprob: -9.180567741394043
    7. '.read' → logprob: -9.305567741394043
    8. '.argv' → logprob: -9.805567741394043
    9. '.stderr' → logprob: -9.930567741394043
    10. '.setdefault' → logprob: -10.430567741394043

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04316030070185661
    2. 'read' → logprob: -3.2931602001190186
    3. 'buffer' → logprob: -5.293160438537598
    4. '.read' → logprob: -10.293160438537598
    5. ' readline' → logprob: -10.793160438537598
    6. 'reader' → logprob: -11.168160438537598
    7. '.buffer' → logprob: -12.418160438537598
    8. 'input' → logprob: -13.793160438537598
    9. '_read' → logprob: -13.793160438537598
    10. '.' → logprob: -13.793160438537598

Token 27: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20856818556785583
    2. 'n' → logprob: -2.8335680961608887
    3. '\' → logprob: -3.2085680961608887
    4. '
' → logprob: -3.7085680961608887
    5. 'class' → logprob: -3.8335680961608887
    6. '\n' → logprob: -3.9585680961608887
    7. '

' → logprob: -4.833568096160889
    8. 'N' → logprob: -5.333568096160889
    9. '' → logprob: -5.583568096160889
    10. '
' → logprob: -6.208568096160889

Token 28: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6251289248466492
    2. 'n' → logprob: -0.8751289248466492
    3. 'class' → logprob: -3.625128984451294
    4. 'N' → logprob: -3.875128984451294
    5. 'd' → logprob: -8.000128746032715
    6. '\' → logprob: -9.750128746032715
    7. 'H' → logprob: -9.875128746032715
    8. 'T' → logprob: -10.500128746032715
    9. 't' → logprob: -10.625128746032715
    10. '

' → logprob: -10.625128746032715

Token 29: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5629616975784302
    2. ' bfs' → logprob: -1.1879616975784302
    3. ' dfs' → logprob: -2.4379615783691406
    4. ' solve' → logprob: -3.9379615783691406
    5. ' top' → logprob: -4.187961578369141
    6. ' ' → logprob: -6.312961578369141
    7. ' shortest' → logprob: -7.437961578369141
    8. ' BFS' → logprob: -7.562961578369141
    9. ' d' → logprob: -9.18796157836914
    10. ' max' → logprob: -9.18796157836914

Token 30: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.050327010452747345
    2. '():' → logprob: -3.0503270626068115
    3. '(:' → logprob: -6.425326824188232
    4. ':' → logprob: -9.92532730102539
    5. '(":' → logprob: -10.67532730102539
    6. '()' → logprob: -11.42532730102539
    7. '(`' → logprob: -11.92532730102539
    8. '(**' → logprob: -12.30032730102539
    9. '(
' → logprob: -12.42532730102539
    10. ' ():' → logprob: -13.05032730102539

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05486356467008591
    2. '(' → logprob: -4.179863452911377
    3. 'n' → logprob: -4.179863452911377
    4. '    ' → logprob: -4.679863452911377
    5. ' ' → logprob: -5.304863452911377
    6. ')' → logprob: -6.179863452911377
    7. '(n' → logprob: -6.679863452911377
    8. 'a' → logprob: -7.054863452911377
    9. '    
' → logprob: -7.179863452911377
    10. ' n' → logprob: -7.554863452911377

Token 32: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13563509285449982
    2. ' n' → logprob: -2.1356351375579834
    3. 'N' → logprob: -5.510634899139404
    4. '   ' → logprob: -6.135634899139404
    5. ' N' → logprob: -6.885634899139404
    6. ' ' → logprob: -8.135635375976562
    7. '    ' → logprob: -8.135635375976562
    8. 's' → logprob: -8.760635375976562
    9. 'd' → logprob: -9.385635375976562
    10. 't' → logprob: -9.635635375976562

Token 33: ' 入' (ID: 134079)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9095730781555176
    2. 'n' → logprob: -1.0345730781555176
    3. ' ' → logprob: -1.9095730781555176
    4. '   ' → logprob: -2.7845730781555176
    5. '    ' → logprob: -4.159573078155518
    6. '(' → logprob: -5.409573078155518
    7. ' )' → logprob: -6.034573078155518
    8. 't' → logprob: -6.284573078155518
    9. '(n' → logprob: -6.534573078155518
    10. 'd' → logprob: -7.159573078155518

Token 34: '力' (ID: 11343)
  Prédit: '力'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '力' → logprob: -0.00012678056373260915
    2. '   ' → logprob: -10.000126838684082
    3. '```' → logprob: -10.250126838684082
    4. '력' → logprob: -11.125126838684082
    5. '       ' → logprob: -12.250126838684082
    6. ' \xe5\x8a' → logprob: -12.375126838684082
    7. '_' → logprob: -12.625126838684082
    8. '  ' → logprob: -12.875126838684082
    9. '稿' → logprob: -12.875126838684082
    10. '場' → logprob: -13.000126838684082

Token 35: 'の' (ID: 3385)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0060661365278065205
    2. '(' → logprob: -5.25606632232666
    3. ')' → logprob: -8.38106632232666
    4. '<|end|>' → logprob: -8.88106632232666
    5. '   ' → logprob: -9.25606632232666
    6. 'data' → logprob: -9.63106632232666
    7. '=' → logprob: -10.25606632232666
    8. ':' → logprob: -10.38106632232666
    9. ',' → logprob: -10.63106632232666
    10. ' =' → logprob: -10.88106632232666

Token 36: '読み' (ID: 179943)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3395581841468811
    2. 'n' → logprob: -1.4645581245422363
    3. 'data' → logprob: -3.7145581245422363
    4. '()' → logprob: -4.339558124542236
    5. 'token' → logprob: -5.964558124542236
    6. ' =' → logprob: -6.089558124542236
    7. 'def' → logprob: -6.339558124542236
    8. 'H' → logprob: -6.839558124542236
    9. 'number' → logprob: -6.964558124542236
    10. 's' → logprob: -6.964558124542236

Token 37: '込み' (ID: 133197)
  Prédit: '込み'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '込み' → logprob: -0.05176427960395813
    2. '込' → logprob: -3.1767642498016357
    3. 'こ' → logprob: -5.426764488220215
    4. '取り' → logprob: -6.176764488220215
    5. 'み' → logprob: -7.051764488220215
    6. '()' → logprob: -7.551764488220215
    7. '```' → logprob: -7.926764488220215
    8. '_' → logprob: -8.926764488220215
    9. '取' → logprob: -9.176764488220215
    10. ' \xe8\xbe' → logprob: -9.926764488220215

Token 38: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.640069305896759
    2. '(' → logprob: -0.890069305896759
    3. '    
' → logprob: -4.265069484710693
    4. ' ' → logprob: -4.640069484710693
    5. '    ' → logprob: -5.140069484710693
    6. '<|end|>' → logprob: -5.265069484710693
    7. '()' → logprob: -5.265069484710693
    8. '
' → logprob: -5.640069484710693
    9. '  ' → logprob: -5.640069484710693
    10. '<|end|>' → logprob: -5.765069484710693

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004218366928398609
    2. '    ' → logprob: -5.754218578338623
    3. '    
' → logprob: -7.504218578338623
    4. '  ' → logprob: -9.004218101501465
    5. 'n' → logprob: -9.379218101501465
    6. '(' → logprob: -9.754218101501465
    7. ' ' → logprob: -9.879218101501465
    8. ')' → logprob: -10.629218101501465
    9. '　' → logprob: -10.754218101501465
    10. '　 ' → logprob: -11.379218101501465

Token 40: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4509209990501404
    2. ' n' → logprob: -1.0759210586547852
    3. ' N' → logprob: -4.450921058654785
    4. 'N' (adapté à ' N') → logprob: -4.700921058654785
    5. '   ' → logprob: -6.950921058654785
    6. '    ' → logprob: -8.575921058654785
    7. ' ' → logprob: -10.075921058654785
    8. '	n' → logprob: -11.075921058654785
    9. '    
' → logprob: -12.825921058654785
    10. 's' → logprob: -13.075921058654785

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06567133963108063
    2. ' =' → logprob: -3.065671443939209
    3. ' ,' → logprob: -4.315671443939209
    4. '=' → logprob: -5.690671443939209
    5. ' ' → logprob: -9.44067096710205
    6. '   ' → logprob: -10.44067096710205
    7. '=int' → logprob: -10.44067096710205
    8. ',N' → logprob: -11.19067096710205
    9. '    ' → logprob: -11.44067096710205
    10. ')' → logprob: -12.06567096710205

Token 42: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6487230658531189
    2. ' K' → logprob: -1.5237231254577637
    3. 'M' → logprob: -1.7737231254577637
    4. ' M' → logprob: -2.7737231254577637
    5. 'Q' → logprob: -3.7737231254577637
    6. ' Q' → logprob: -5.773723125457764
    7. ' ' → logprob: -8.398722648620605
    8. 'X' → logprob: -8.398722648620605
    9. 'D' → logprob: -8.523722648620605
    10. 'T' → logprob: -9.648722648620605

Token 43: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04861961305141449
    2. '=' → logprob: -3.048619508743286
    3. ',' → logprob: -10.548619270324707
    4. ' ' → logprob: -12.798619270324707
    5. '=input' → logprob: -13.923619270324707
    6. ')' → logprob: -14.423619270324707
    7. '＝' → logprob: -14.673619270324707
    8. ' ,' → logprob: -15.673619270324707
    9. '=int' → logprob: -15.798619270324707
    10. '    ' → logprob: -15.798619270324707

Token 44: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8542252779006958
    2. 'Q' → logprob: -1.1042252779006958
    3. 'X' → logprob: -2.1042251586914062
    4. 'T' → logprob: -3.7292251586914062
    5. ' K' → logprob: -3.7292251586914062
    6. 'D' → logprob: -3.8542251586914062
    7. 'L' → logprob: -4.104225158691406
    8. ' Q' → logprob: -4.479225158691406
    9. 'C' → logprob: -5.354225158691406
    10. 'S' → logprob: -5.354225158691406

Token 45: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269694685935974
    2. '=' → logprob: -2.0176968574523926
    3. ',' → logprob: -11.14269733428955
    4. ' ' → logprob: -12.89269733428955
    5. '＝' → logprob: -12.89269733428955
    6. ')' → logprob: -13.64269733428955
    7. '=input' → logprob: -14.64269733428955
    8. '=int' → logprob: -16.017696380615234
    9. ')=' → logprob: -16.642696380615234
    10. '=line' → logprob: -16.767696380615234

Token 46: ' S' (ID: 336)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.2063156366348267
    2. 'L' → logprob: -2.081315517425537
    3. ' =' → logprob: -2.331315517425537
    4. 'X' → logprob: -2.581315517425537
    5. 'S' → logprob: -2.706315517425537
    6. 'T' → logprob: -2.831315517425537
    7. '=' → logprob: -3.331315517425537
    8. 'C' → logprob: -3.456315517425537
    9. ' Q' → logprob: -3.456315517425537
    10. ' L' → logprob: -3.706315517425537

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576166570186615
    2. ' =' → logprob: -0.826166570186615
    3. ',' → logprob: -8.451166152954102
    4. ' ' → logprob: -11.951166152954102
    5. '＝' → logprob: -13.201166152954102
    6. '=input' → logprob: -13.326166152954102
    7. '   ' → logprob: -14.701166152954102
    8. '  ' → logprob: -14.826166152954102
    9. '=sys' → logprob: -15.076166152954102
    10. ')' → logprob: -15.326166152954102

Token 48: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016079416498541832
    2. 'map' → logprob: -4.141079425811768
    3. ' input' → logprob: -10.51607894897461
    4. ' ' → logprob: -12.01607894897461
    5. ' list' → logprob: -12.39107894897461
    6. 'input' → logprob: -12.64107894897461
    7. '	map' → logprob: -13.39107894897461
    8. ' ma' → logprob: -14.26607894897461
    9. ' ' → logprob: -14.76607894897461
    10. 'list' → logprob: -14.76607894897461

Token 49: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.39201071858406067
    2. '(' → logprob: -1.1420106887817383
    3. '(input' → logprob: -5.392010688781738
    4. '(map' → logprob: -8.142010688781738
    5. '(str' → logprob: -8.517010688781738
    6. '(lambda' → logprob: -10.267010688781738
    7. '(list' → logprob: -10.767010688781738
    8. ' (' → logprob: -12.017010688781738
    9. '(eval' → logprob: -12.267010688781738
    10. '(tuple' → logprob: -12.642010688781738

Token 50: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2525118589401245
    2. ',' → logprob: -1.5025118589401245
    3. ' ,' → logprob: -8.377511978149414
    4. '(' → logprob: -8.877511978149414
    5. '(input' → logprob: -9.127511978149414
    6. 'input' → logprob: -9.752511978149414
    7. ',int' → logprob: -10.377511978149414
    8. '   ' → logprob: -12.752511978149414
    9. ' (' → logprob: -12.877511978149414
    10. '，' → logprob: -13.127511978149414

Token 51: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132723271846771
    2. ' input' → logprob: -1.3132723569869995
    3. ')' → logprob: -12.438272476196289
    4. ' ' → logprob: -13.313272476196289
    5. ',input' → logprob: -13.313272476196289
    6. '=input' → logprob: -13.438272476196289
    7. '(input' → logprob: -14.188272476196289
    8. ' sys' → logprob: -15.188272476196289
    9. '	input' → logprob: -15.563272476196289
    10. '   ' → logprob: -15.938272476196289

Token 52: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()' → logprob: -12.375004768371582
    3. '())' → logprob: -14.125004768371582
    4. ' ().' → logprob: -15.625004768371582
    5. '(' → logprob: -18.0000057220459
    6. ')' → logprob: -18.7500057220459
    7. '()))' → logprob: -19.0000057220459
    8. '()),' → logprob: -19.8750057220459
    9. '()).' → logprob: -20.3750057220459
    10. '());' → logprob: -20.6250057220459

Token 53: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04116222262382507
    2. 'strip' → logprob: -3.2911622524261475
    3. 'rstrip' → logprob: -5.791162014007568
    4. '().' → logprob: -10.166162490844727
    5. ')' → logprob: -10.916162490844727
    6. ' split' → logprob: -13.416162490844727
    7. '()' → logprob: -14.166162490844727
    8. 'read' → logprob: -14.791162490844727
    9. '.split' → logprob: -14.916162490844727
    10. '())' → logprob: -14.916162490844727

Token 54: '())' (ID: 3516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021212305000517517
    2. '))' → logprob: -9.250211715698242
    3. '()' → logprob: -9.750211715698242
    4. '())' → logprob: -10.125211715698242
    5. '),' → logprob: -12.000211715698242
    6. '(' → logprob: -12.125211715698242
    7. ')`' → logprob: -13.500211715698242
    8. ' )' → logprob: -13.625211715698242
    9. ')
' → logprob: -13.875211715698242
    10. '）' → logprob: -14.750211715698242

Token 55: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.885489821434021
    2. '
' → logprob: -1.010489821434021
    3. '   ' → logprob: -1.885489821434021
    4. '    
' → logprob: -3.3854899406433105
    5. '<|end|>' → logprob: -4.2604899406433105
    6. '\n' → logprob: -4.8854899406433105
    7. '```' → logprob: -5.5104899406433105
    8. ')
' → logprob: -6.3854899406433105
    9. ' 
' → logprob: -6.6354899406433105
    10. '   
' → logprob: -6.7604899406433105

Token 56: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10934194177389145
    2. '   ' → logprob: -2.734341859817505
    3. '
' → logprob: -3.609341859817505
    4. '\n' → logprob: -5.734342098236084
    5. '    
' → logprob: -6.359342098236084
    6. '<|end|>' → logprob: -6.859342098236084
    7. '```' → logprob: -7.234342098236084
    8. ' ' → logprob: -7.359342098236084
    9. '  ' → logprob: -7.734342098236084
    10. '#' → logprob: -7.734342098236084

Token 57: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5136865973472595
    2. '   ' → logprob: -2.6386866569519043
    3. ' )' → logprob: -3.0136866569519043
    4. '<|end|>' → logprob: -3.1386866569519043
    5. ' ' → logprob: -3.2636866569519043
    6. ' cities' → logprob: -3.6386866569519043
    7. ' nodes' → logprob: -4.138686656951904
    8. ' N' → logprob: -4.388686656951904
    9. 'N' → logprob: -4.388686656951904
    10. 'nodes' → logprob: -4.513686656951904

Token 58: '町' (ID: 92479)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7012106776237488
    2. 'S' → logprob: -2.2012107372283936
    3. ')' → logprob: -2.5762107372283936
    4. 'A' → logprob: -2.8262107372283936
    5. 'nodes' → logprob: -2.9512107372283936
    6. 'T' → logprob: -3.2012107372283936
    7. '0' → logprob: -4.2012104988098145
    8. 'D' → logprob: -4.4512104988098145
    9. ' nodes' → logprob: -4.5762104988098145
    10. 'vertices' → logprob: -4.8262104988098145

Token 59: '数' (ID: 7135)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' �' (ID: 57226)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.5371798872947693
    2. 'D' → logprob: -1.912179946899414
    3. 'T' → logprob: -2.287179946899414
    4. 'L' → logprob: -3.287179946899414
    5. 'R' → logprob: -3.912179946899414
    6. 'M' → logprob: -4.287179946899414
    7. 'E' → logprob: -4.287179946899414
    8. ' Q' → logprob: -4.287179946899414
    9. 'A' → logprob: -4.412179946899414
    10. 'X' → logprob: -5.037179946899414

Token 62: '�' (ID: 241)
  Prédit: '辺'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '辺' → logprob: -1.1329289674758911
    2. 'マ' → logprob: -2.2579288482666016
    3. '道' → logprob: -2.3829288482666016
    4. 'M' → logprob: -2.6329288482666016
    5. '道路' → logprob: -2.6329288482666016
    6. '線' → logprob: -2.7579288482666016
    7. 'm' → logprob: -3.1329288482666016
    8. '鉄' → logprob: -3.3829288482666016
    9. 'ム' → logprob: -3.7579288482666016
    10. '駅' → logprob: -4.132928848266602

Token 63: '路' (ID: 14385)
  Prédit: '道路'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '道路' → logprob: -0.7053825855255127
    2. '辺' → logprob: -1.9553825855255127
    3. '道' → logprob: -2.2053825855255127
    4. '鉄' → logprob: -2.4553825855255127
    5. 'バ' → logprob: -3.0803825855255127
    6. '線' → logprob: -4.080382347106934
    7. 'エ' → logprob: -4.455382347106934
    8. '駅' → logprob: -4.580382347106934
    9. '路' → logprob: -4.705382347106934
    10. '列' → logprob: -4.955382347106934

Token 64: '数' (ID: 7135)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0632767453789711
    2. 'の' → logprob: -3.938276767730713
    3. '数' → logprob: -4.313276767730713
    4. ' ,' → logprob: -4.563276767730713
    5. ')' → logprob: -5.688276767730713
    6. '線' → logprob: -6.063276767730713
    7. ' ' → logprob: -6.875776767730713
    8. '、' → logprob: -6.875776767730713
    9. '，' → logprob: -7.063276767730713
    10. '```' → logprob: -7.125776767730713

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015472055412828922
    2. ' ,' → logprob: -4.515471935272217
    3. ')' → logprob: -5.640471935272217
    4. '、' → logprob: -8.515472412109375
    5. ',N' → logprob: -9.015472412109375
    6. '<|end|>' → logprob: -9.140472412109375
    7. ' ' → logprob: -9.890472412109375
    8. '）' → logprob: -10.015472412109375
    9. '，' → logprob: -10.140472412109375
    10. ',
' → logprob: -10.265472412109375

Token 66: ' �' (ID: 9203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5419124364852905
    2. ' roads' → logprob: -2.97941255569458
    3. '   ' → logprob: -3.04191255569458
    4. ' space' → logprob: -3.22941255569458
    5. ' safe' → logprob: -3.41691255569458
    6. ',' → logprob: -3.66691255569458
    7. ' 空' → logprob: -3.79191255569458
    8. '  ' → logprob: -3.79191255569458
    9. ' distance' → logprob: -4.04191255569458
    10. '鉄' → logprob: -4.04191255569458

Token 67: '�' (ID: 122)
  Prédit: '�'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '�' → logprob: -3.0886261463165283
    2. '宝' → logprob: -3.2761261463165283
    3. '0' → logprob: -3.4011261463165283
    4. '���' → logprob: -3.5886261463165283
    5. '攻' → logprob: -3.6511261463165283
    6. '2' → logprob: -3.6511261463165283
    7. '町' → logprob: -3.6511261463165283
    8. '安全' → logprob: -3.7136261463165283
    9. 'の' → logprob: -3.7136261463165283
    10. '1' → logprob: -3.7136261463165283

Token 68: 'ン' (ID: 4025)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.8684136867523193
    2. 'K' → logprob: -2.9309136867523193
    3. 'の' → logprob: -3.1184136867523193
    4. '0' → logprob: -3.3684136867523193
    5. '人' → logprob: -3.3684136867523193
    6. '安全' → logprob: -3.4934136867523193
    7. '町' → logprob: -3.4934136867523193
    8. '_' → logprob: -3.5559136867523193
    9. '2' → logprob: -3.8059136867523193
    10. '宝' → logprob: -3.8684136867523193

Token 69: 'ビ' (ID: 24935)
  Prédit: 'ー'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ー' → logprob: -1.7905315160751343
    2. '数' → logprob: -1.7905315160751343
    3. 'キ' → logprob: -2.790531635284424
    4. '線' → logprob: -3.040531635284424
    5. '回' → logprob: -3.040531635284424
    6. 'マ' → logprob: -3.290531635284424
    7. 'バ' → logprob: -3.415531635284424
    8. '道' → logprob: -3.540531635284424
    9. 'タ' → logprob: -3.665531635284424
    10. 'の' → logprob: -3.665531635284424

Token 70: '支' (ID: 18904)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.8715264797210693
    2. '数' → logprob: -2.1215264797210693
    3. 'ン' → logprob: -2.2465264797210693
    4. 'ー' → logprob: -2.4965264797210693
    5. 'ョ' → logprob: -2.4965264797210693
    6. '�' → logprob: -3.1215264797210693
    7. 'バ' → logprob: -3.1215264797210693
    8. 'タ' → logprob: -3.4965264797210693
    9. 'ュ' → logprob: -3.7465264797210693
    10. '町' → logprob: -3.8090264797210693

Token 71: '配' (ID: 23246)
  Prédit: '援'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '援' → logprob: -2.2388839721679688
    2. 'の' → logprob: -2.9888839721679688
    3. '保' → logprob: -2.9888839721679688
    4. 'か' → logprob: -2.9888839721679688
    5. '持' → logprob: -2.9888839721679688
    6. 'ー' → logprob: -3.1138839721679688
    7. 'ョ' → logprob: -3.1138839721679688
    8. 'ゃ' → logprob: -3.3638839721679688
    9. '給' → logprob: -3.4888839721679688
    10. '護' → logprob: -3.7388839721679688

Token 72: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -1.705781102180481
    2. ',' → logprob: -1.955781102180481
    3. ')' → logprob: -2.2057809829711914
    4. 'の' → logprob: -2.9557809829711914
    5. 'を' → logprob: -3.4557809829711914
    6. 'か' → logprob: -3.7057809829711914
    7. '�' → logprob: -3.8307809829711914
    8. '）' → logprob: -4.018280982971191
    9. '支' → logprob: -4.143280982971191
    10. 'す' → logprob: -4.143280982971191

Token 73: '数' (ID: 7135)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0713317021727562
    2. ')' → logprob: -3.071331739425659
    3. ' ,' → logprob: -4.44633150100708
    4. '）' → logprob: -6.07133150100708
    5. '=' → logprob: -6.32133150100708
    6. '、' → logprob: -7.07133150100708
    7. 'の' → logprob: -7.44633150100708
    8. '町' → logprob: -7.44633150100708
    9. ' =' → logprob: -8.071331977844238
    10. 's' → logprob: -8.133831977844238

Token 74: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06110333278775215
    2. ',' → logprob: -3.061103343963623
    3. ' )' → logprob: -4.811103343963623
    4. ' ,' → logprob: -6.561103343963623
    5. '）' → logprob: -6.686103343963623
    6. '#' → logprob: -7.936103343963623
    7. ' ' → logprob: -8.311102867126465
    8. '
' → logprob: -8.686102867126465
    9. '<|end|>' → logprob: -9.186102867126465
    10. ',N' → logprob: -9.686102867126465

Token 75: ' �' (ID: 8570)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9895969033241272
    2. '距' → logprob: -2.2395968437194824
    3. ' distance' → logprob: -2.4895968437194824
    4. 'distance' → logprob: -2.9895968437194824
    5. '  ' → logprob: -2.9895968437194824
    6. '   ' → logprob: -3.1145968437194824
    7. ' max' → logprob: -3.6145968437194824
    8. ' \xe8\xb7' → logprob: -3.9270968437194824
    9. ')' → logprob: -4.177096843719482
    10. ' distances' → logprob: -4.364596843719482

Token 76: '�' (ID: 109)
  Prédit: '�'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '�' → logprob: -2.2843775749206543
    2. 'ス' → logprob: -2.9718775749206543
    3. '距' → logprob: -3.1593775749206543
    4. 'す' → logprob: -3.3468775749206543
    5. '町' → logprob: -3.4093775749206543
    6. '駅' → logprob: -3.4718775749206543
    7. 'ー' → logprob: -3.5343775749206543
    8. 'タ' → logprob: -3.7218775749206543
    9. '��' → logprob: -4.096877574920654
    10. 'S' → logprob: -4.096877574920654

Token 77: '険' (ID: 137177)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4309132099151611
    2. ')' → logprob: -1.6809132099151611
    3. ',' → logprob: -1.6809132099151611
    4. '=' → logprob: -2.680913209915161
    5. ' )' → logprob: -3.180913209915161
    6. '   ' → logprob: -3.930913209915161
    7. 's' → logprob: -3.993413209915161
    8. '  ' → logprob: -4.243412971496582
    9. ' ,' → logprob: -4.430912971496582
    10. 't' → logprob: -4.618412971496582

Token 78: '判' (ID: 47257)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '数' → logprob: -1.1115349531173706
    2. 'の' → logprob: -1.2365349531173706
    3. ',' → logprob: -1.4865349531173706
    4. ')' → logprob: -2.98653507232666
    5. '）' → logprob: -3.73653507232666
    6. '町' → logprob: -4.36153507232666
    7. 'を' → logprob: -4.86153507232666
    8. '線' → logprob: -4.98653507232666
    9. '#' → logprob: -5.86153507232666
    10. '者' → logprob: -6.23653507232666

Token 79: '定' (ID: 8745)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1836751252412796
    2. '=' → logprob: -3.5586750507354736
    3. '）' → logprob: -4.308675289154053
    4. ' =' → logprob: -4.558675289154053
    5. 'def' → logprob: -4.558675289154053
    6. 'か' → logprob: -5.183675289154053
    7. ' ' → logprob: -5.308675289154053
    8. '定' → logprob: -5.433675289154053
    9. '�' → logprob: -5.558675289154053
    10. ' def' → logprob: -5.558675289154053

Token 80: 'の' (ID: 3385)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014546343125402927
    2. '）' → logprob: -4.7645463943481445
    3. ' )' → logprob: -6.3895463943481445
    4. ',' → logprob: -6.7645463943481445
    5. '町' → logprob: -7.5145463943481445
    6. '\n' → logprob: -8.014546394348145
    7. '=' → logprob: -8.264546394348145
    8. ' towns' → logprob: -8.639546394348145
    9. 'の' → logprob: -8.764546394348145
    10. ')
' → logprob: -8.764546394348145

Token 81: '距' (ID: 76027)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2441537380218506
    2. '数' → logprob: -2.2441537380218506
    3. 'int' → logprob: -2.3691537380218506
    4. '町' → logprob: -2.4941537380218506
    5. 'input' → logprob: -2.8691537380218506
    6. 'ため' → logprob: -2.9941537380218506
    7. '入力' → logprob: -2.9941537380218506
    8. '線' → logprob: -3.1191537380218506
    9. '行' → logprob: -3.8066537380218506
    10. 'う' → logprob: -3.9941537380218506

Token 82: '離' (ID: 112445)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6359711289405823
    2. '間' → logprob: -2.8859710693359375
    3. ' ' → logprob: -3.1359710693359375
    4. 'ー' → logprob: -3.1359710693359375
    5. '離' → logprob: -3.3859710693359375
    6. '）' → logprob: -3.7609710693359375
    7. 'ん' → logprob: -3.8859710693359375
    8. 'r' → logprob: -4.1359710693359375
    9. 'た' → logprob: -4.2609710693359375
    10. 'ン' → logprob: -4.5109710693359375

Token 83: '制' (ID: 12927)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004165656864643097
    2. ' )' → logprob: -6.5041656494140625
    3. '
' → logprob: -7.1291656494140625
    4. '<|end|>' → logprob: -7.2541656494140625
    5. '<|end|>' → logprob: -7.6291656494140625
    6. '）' → logprob: -8.004165649414062
    7. ')
' → logprob: -9.379165649414062
    8. ' ' → logprob: -9.754165649414062
    9. '0' → logprob: -10.629165649414062
    10. '```' → logprob: -11.004165649414062

Token 84: '限' (ID: 15306)
  Prédit: '限'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '限' → logprob: -0.05466446653008461
    2. '約' → logprob: -3.304664373397827
    3. 'ー' → logprob: -4.929664611816406
    4. '界' → logprob: -5.929664611816406
    5. '度' → logprob: -6.304664611816406
    6. ')' → logprob: -7.929664611816406
    7. '御' → logprob: -8.054664611816406
    8. 'r' → logprob: -8.054664611816406
    9. '準' → logprob: -8.429664611816406
    10. '1' → logprob: -8.554664611816406

Token 85: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018296310445293784
    2. ' )' → logprob: -6.626829624176025
    3. '
' → logprob: -8.751830101013184
    4. '）' → logprob: -8.876830101013184
    5. ')
' → logprob: -9.626830101013184
    6. '<|end|>' → logprob: -9.751830101013184
    7. '<|end|>' → logprob: -10.376830101013184
    8. ' ' → logprob: -11.626830101013184
    9. '()' → logprob: -12.501830101013184
    10. '#' → logprob: -12.501830101013184

Token 86: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026021359488368034
    2. '
' → logprob: -4.651021480560303
    3. ' )' → logprob: -5.026021480560303
    4. '#' → logprob: -5.401021480560303
    5. ' ' → logprob: -6.526021480560303
    6. '' → logprob: -7.401021480560303
    7. ')
' → logprob: -7.901021480560303
    8. '\n' → logprob: -8.026021003723145
    9. '   ' → logprob: -8.276021003723145
    10. '0' → logprob: -8.276021003723145

Token 87: ' P' (ID: 398)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7583232522010803
    2. '
' → logprob: -1.0083231925964355
    3. ' ' → logprob: -3.8833231925964355
    4. ' towns' → logprob: -3.8833231925964355
    5. '   ' → logprob: -4.1333231925964355
    6. '\n' → logprob: -4.5083231925964355
    7. ' )' → logprob: -4.7583231925964355
    8. 'graph' → logprob: -4.7583231925964355
    9. '
' → logprob: -5.0083231925964355
    10. '#' → logprob: -5.2583231925964355

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03771655634045601
    2. ',Q' → logprob: -4.412716388702393
    3. '=' → logprob: -4.662716388702393
    4. ' =' → logprob: -5.037716388702393
    5. ' ,' → logprob: -6.162716388702393
    6. '1' → logprob: -6.287716388702393
    7. 'Q' → logprob: -6.537716388702393
    8. 'r' → logprob: -6.912716388702393
    9. '_' → logprob: -7.037716388702393
    10. 's' → logprob: -8.66271686553955

Token 89: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.07916076481342316
    2. ' Q' → logprob: -2.579160690307617
    3. ' ' → logprob: -8.829160690307617
    4. 'X' → logprob: -10.329160690307617
    5. 'L' → logprob: -10.954160690307617
    6. ',Q' → logprob: -11.579160690307617
    7. 'D' → logprob: -11.704160690307617
    8. ' X' → logprob: -12.204160690307617
    9. '  ' → logprob: -12.391660690307617
    10. '   ' → logprob: -12.516660690307617

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869549036026001
    2. '=' → logprob: -1.1369549036026
    3. ' ' → logprob: -9.511955261230469
    4. '    ' → logprob: -13.011955261230469
    5. '   ' → logprob: -13.261955261230469
    6. '  ' → logprob: -13.386955261230469
    7. ')' → logprob: -13.761955261230469
    8. ',' → logprob: -13.886955261230469
    9. '＝' → logprob: -14.136955261230469
    10. ')=' → logprob: -15.386955261230469

Token 91: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6326510310173035
    2. 'map' → logprob: -0.7576510310173035
    3. ' ' → logprob: -10.757651329040527
    4. '	map' → logprob: -11.257651329040527
    5. '  ' → logprob: -12.257651329040527
    6. 'ma' → logprob: -12.757651329040527
    7. '(map' → logprob: -13.257651329040527
    8. 'm' → logprob: -13.757651329040527
    9. '   ' → logprob: -13.757651329040527
    10. ' ' → logprob: -14.257651329040527

Token 92: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.5332478142227046e-05
    2. 'int' → logprob: -11.750015258789062
    3. '(' → logprob: -11.875015258789062
    4. ' (' → logprob: -16.375015258789062
    5. '[int' → logprob: -16.625015258789062
    6. ' int' → logprob: -16.750015258789062
    7. '(in' → logprob: -17.375015258789062
    8. '<int' → logprob: -17.625015258789062
    9. '=int' → logprob: -18.000015258789062
    10. '(i' → logprob: -18.750015258789062

Token 93: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022422732785344124
    2. 'int' → logprob: -5.022422790527344
    3. '(input' → logprob: -5.022422790527344
    4. '(' → logprob: -5.647422790527344
    5. ')' → logprob: -6.522422790527344
    6. ' (' → logprob: -6.647422790527344
    7. '=int' → logprob: -7.397422790527344
    8. ',' → logprob: -7.772422790527344
    9. '1' → logprob: -8.022422790527344
    10. '<int' → logprob: -8.647422790527344

Token 94: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.28139689564704895
    2. 'input' → logprob: -1.4063968658447266
    3. 'int' → logprob: -8.406396865844727
    4. ' int' → logprob: -11.281396865844727
    5. '(input' → logprob: -12.406396865844727
    6. ' ' → logprob: -13.156396865844727
    7. '1' → logprob: -13.656396865844727
    8. 'in' → logprob: -13.906396865844727
    9. ',input' → logprob: -15.281396865844727
    10. 's' → logprob: -15.281396865844727

Token 95: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '()' → logprob: -12.125005722045898
    3. '(' → logprob: -15.500005722045898
    4. '.split' → logprob: -16.2500057220459
    5. '.' → logprob: -16.6250057220459
    6. ' ().' → logprob: -17.0000057220459
    7. 'split' → logprob: -18.2500057220459
    8. ').' → logprob: -20.0000057220459
    9. '()).' → logprob: -20.0000057220459
    10. '()
' → logprob: -20.1250057220459

Token 96: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. ' split' → logprob: -13.500001907348633
    3. '.split' → logprob: -15.250001907348633
    4. 'spl' → logprob: -15.625001907348633
    5. 'strip' → logprob: -16.125001907348633
    6. 's' → logprob: -16.250001907348633
    7. '().' → logprob: -16.375001907348633
    8. '(split' → logprob: -16.875001907348633
    9. 'plit' → logprob: -17.375001907348633
    10. 'rstrip' → logprob: -17.625001907348633

Token 97: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05023438110947609
    2. '()' → logprob: -3.050234317779541
    3. ')' → logprob: -6.425234317779541
    4. '(' → logprob: -11.6752347946167
    5. '())
' → logprob: -11.6752347946167
    6. ' ())' → logprob: -12.5502347946167
    7. '())

' → logprob: -13.5502347946167
    8. '()
' → logprob: -14.4252347946167
    9. '(),' → logprob: -14.6752347946167
    10. '();)' → logprob: -14.8002347946167

Token 98: '      ' (ID: 1699)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8680342435836792
    2. ')' → logprob: -1.4930342435836792
    3. '<|end|>' → logprob: -1.9930342435836792
    4. '   ' → logprob: -2.7430343627929688
    5. ' 
' → logprob: -2.8680343627929688
    6. '    
' → logprob: -3.8680343627929688
    7. '  
' → logprob: -3.8680343627929688
    8. ' ' → logprob: -3.9930343627929688
    9. '\n' → logprob: -4.368034362792969
    10. '<|end|>' → logprob: -4.993034362792969

Token 99: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30670812726020813
    2. '   ' → logprob: -1.8067080974578857
    3. '<|end|>' → logprob: -2.9317080974578857
    4. ' ' → logprob: -4.431708335876465
    5. '
' → logprob: -4.556708335876465
    6. ' )' → logprob: -4.931708335876465
    7. '  ' → logprob: -5.681708335876465
    8. '()' → logprob: -5.806708335876465
    9. '<|end|>' → logprob: -6.056708335876465
    10. '    
' → logprob: -6.056708335876465

Token 100: ' 安' (ID: 30575)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.22658894956111908
    2. ' P' → logprob: -1.6015889644622803
    3. ' ' → logprob: -7.226588726043701
    4. 'p' → logprob: -8.60158920288086
    5. 'map' → logprob: -9.72658920288086
    6. '  ' → logprob: -10.22658920288086
    7. '0' → logprob: -10.35158920288086
    8. '   ' → logprob: -11.10158920288086
    9. ' p' → logprob: -11.41408920288086
    10. ')' → logprob: -11.72658920288086

Token 101: 'い' (ID: 3826)
  Prédit: '全'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '全' → logprob: -0.0004176833899691701
    2. '```' → logprob: -8.875417709350586
    3. '価' → logprob: -9.750417709350586
    4. '全面' → logprob: -9.875417709350586
    5. '全部' → logprob: -10.500417709350586
    6. '' → logprob: -10.625417709350586
    7. '危' → logprob: -11.000417709350586
    8. '心' → logprob: -11.250417709350586
    9. '全文' → logprob: -11.500417709350586
    10. '``' → logprob: -11.625417709350586

Token 102: '宿' (ID: 62310)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36838510632514954
    2. ' ,' → logprob: -1.2433850765228271
    3. ' ' → logprob: -4.118385314941406
    4. ' 、' → logprob: -6.868385314941406
    5. 'P' → logprob: -7.868385314941406
    6. ' and' → logprob: -8.118385314941406
    7. '、' → logprob: -8.493385314941406
    8. ' P' → logprob: -8.618385314941406
    9. ' safe' → logprob: -8.868385314941406
    10. 'safe' → logprob: -8.868385314941406

Token 103: 'の' (ID: 3385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '費' (ID: 33778)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.9585844874382019
    2. ' P' → logprob: -1.9585845470428467
    3. 'cost' → logprob: -2.3335845470428467
    4. 'int' → logprob: -2.7085845470428467
    5. 'price' → logprob: -2.9585845470428467
    6. ')' → logprob: -3.3335845470428467
    7. 'safe' → logprob: -3.7085845470428467
    8. '価格' → logprob: -3.7085845470428467
    9. 'prices' → logprob: -4.208584308624268
    10. ' ' → logprob: -4.333584308624268

Token 105: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -0.010799378156661987
    2. ' ' → logprob: -5.635799407958984
    3. ' 用' → logprob: -6.260799407958984
    4. '  ' → logprob: -6.635799407958984
    5. '   ' → logprob: -6.885799407958984
    6. ',' → logprob: -7.885799407958984
    7. '数' → logprob: -8.260799407958984
    8. 'の' → logprob: -8.510799407958984
    9. '\xe8\xb3' → logprob: -8.635799407958984
    10. ' の' → logprob: -8.885799407958984

Token 106: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11250714212656021
    2. '<|end|>' → logprob: -2.7375071048736572
    3. '<|end|>' → logprob: -4.112507343292236
    4. ')' → logprob: -4.612507343292236
    5. '
' → logprob: -5.112507343292236
    6. ' ' → logprob: -5.737507343292236
    7. '  ' → logprob: -6.112507343292236
    8. '    
' → logprob: -6.862507343292236
    9. '#' → logprob: -7.112507343292236
    10. 'def' → logprob: -7.487507343292236

Token 107: ' 高' (ID: 26796)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.926823616027832
    2. ' 高' → logprob: -1.051823616027832
    3. '   ' → logprob: -2.551823616027832
    4. '高' → logprob: -3.051823616027832
    5. ' expensive' → logprob: -3.176823616027832
    6. 'Q' → logprob: -3.551823616027832
    7. ' high' → logprob: -4.176823616027832
    8. ' Q' → logprob: -4.301823616027832
    9. '  ' → logprob: -4.551823616027832
    10. '1' → logprob: -5.801823616027832

Token 108: '級' (ID: 46696)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.0006472678505815566
    2. '価' → logprob: -8.50064754486084
    3. 'いや' → logprob: -8.50064754486084
    4. 'め' → logprob: -9.50064754486084
    5. ' ' → logprob: -10.00064754486084
    6. 'いつ' → logprob: -10.12564754486084
    7. 'いた' → logprob: -10.75064754486084
    8. '```' → logprob: -11.12564754486084
    9. '   ' → logprob: -11.50064754486084
    10. 'cost' → logprob: -11.50064754486084

Token 109: '宿' (ID: 62310)
  Prédit: '宿'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '宿' → logprob: -0.5976560115814209
    2. ' ' → logprob: -1.097656011581421
    3. '<|end|>' → logprob: -2.972656011581421
    4. 'の' → logprob: -3.847656011581421
    5. '  ' → logprob: -4.09765625
    6. ' の' → logprob: -4.72265625
    7. '<|end|>' → logprob: -6.22265625
    8. 'な' → logprob: -6.53515625
    9. '   ' → logprob: -6.72265625
    10. ' な' → logprob: -6.91015625

Token 110: 'の' (ID: 3385)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7718665599822998
    2. '
' → logprob: -1.3968665599822998
    3. '   ' → logprob: -2.2718665599823
    4. '<|end|>' → logprob: -2.2718665599823
    5. '<|end|>' → logprob: -2.6468665599823
    6. ' ' → logprob: -6.021866798400879
    7. '  ' → logprob: -6.146866798400879
    8. '\n' → logprob: -6.396866798400879
    9. '    
' → logprob: -6.646866798400879
    10. '
' → logprob: -7.146866798400879

Token 111: '費' (ID: 33778)
  Prédit: '費'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '費' → logprob: -0.043354373425245285
    2. ' cost' → logprob: -3.5433542728424072
    3. 'cost' → logprob: -4.418354511260986
    4. ' costs' → logprob: -8.168354034423828
    5. '_cost' → logprob: -8.168354034423828
    6. ' ' → logprob: -8.543354034423828
    7. ' 비용' → logprob: -8.543354034423828
    8. '费用' → logprob: -8.918354034423828
    9. ' \xe8\xb2' → logprob: -9.043354034423828
    10. '_COST' → logprob: -10.418354034423828

Token 112: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -4.584861744660884e-05
    2. ')' → logprob: -11.000045776367188
    3. '```' → logprob: -11.000045776367188
    4. '   ' → logprob: -13.250045776367188
    5. 'う' → logprob: -13.375045776367188
    6. '）' → logprob: -13.500045776367188
    7. 'def' → logprob: -13.625045776367188
    8. '용' → logprob: -13.625045776367188
    9. 'ん' → logprob: -14.125045776367188
    10. 'use' → logprob: -14.250045776367188

Token 113: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08450112491846085
    2. '   ' → logprob: -2.709501028060913
    3. '\n' → logprob: -5.209501266479492
    4. '    
' → logprob: -5.584501266479492
    5. ')' → logprob: -6.209501266479492
    6. '<|end|>' → logprob: -6.959501266479492
    7. '' → logprob: -7.584501266479492
    8. ')
' → logprob: -8.084501266479492
    9. '  
' → logprob: -8.084501266479492
    10. '
' → logprob: -8.459501266479492

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4829126000404358
    2. '
' → logprob: -2.107912540435791
    3. '    
' → logprob: -2.732912540435791
    4. '<|end|>' → logprob: -2.982912540435791
    5. 'edges' → logprob: -3.982912540435791
    6. ' towns' → logprob: -3.982912540435791
    7. ' 
' → logprob: -4.607912540435791
    8. ')' → logprob: -4.607912540435791
    9. ' edges' → logprob: -4.732912540435791
    10. '  
' → logprob: -4.982912540435791

Token 115: ' zombies' (ID: 90576)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3410954475402832
    2. 'graph' → logprob: -3.466095447540283
    3. ' towns' → logprob: -3.591095447540283
    4. 'roads' → logprob: -3.716095447540283
    5. '#' → logprob: -3.966095447540283
    6. ' graph' → logprob: -3.966095447540283
    7. 'nodes' → logprob: -4.341095447540283
    8. ' safe' → logprob: -4.341095447540283
    9. ' edges' → logprob: -4.341095447540283
    10. ' roads' → logprob: -4.466095447540283

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.025363264605402946
    2. '_t' → logprob: -4.025363445281982
    3. '=' → logprob: -5.275363445281982
    4. '_' → logprob: -7.275363445281982
    5. 'town' → logprob: -8.150362968444824
    6. '_locations' → logprob: -8.525362968444824
    7. ' ' → logprob: -8.775362968444824
    8. '_nodes' → logprob: -9.150362968444824
    9. '_positions' → logprob: -9.275362968444824
    10. '_city' → logprob: -9.400362968444824

Token 117: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.21691657602787018
    2. 'list' → logprob: -1.966916561126709
    3. ' [' → logprob: -3.466916561126709
    4. ' set' → logprob: -4.341916561126709
    5. '[list' → logprob: -4.841916561126709
    6. ' deque' → logprob: -6.716916561126709
    7. 'set' → logprob: -6.966916561126709
    8. ' []' → logprob: -8.216917037963867
    9. '[' → logprob: -8.341917037963867
    10. 'deque' → logprob: -8.841917037963867

Token 118: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005382810719311237
    2. '0' → logprob: -6.380383014678955
    3. 'False' → logprob: -6.380383014678955
    4. ' int' → logprob: -6.755383014678955
    5. '(int' → logprob: -8.255382537841797
    6. 'tuple' → logprob: -8.880382537841797
    7. 'list' → logprob: -9.380382537841797
    8. ']' → logprob: -9.380382537841797
    9. ']int' → logprob: -9.380382537841797
    10. '   ' → logprob: -9.755382537841797

Token 119: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47734490036964417
    2. '(' → logprob: -0.9773448705673218
    3. '()' → logprob: -5.852344989776611
    4. '()]' → logprob: -8.977344512939453
    5. ' (' → logprob: -9.602344512939453
    6. '(
' → logprob: -10.227344512939453
    7. '(

' → logprob: -10.352344512939453
    8. '(in' → logprob: -10.727344512939453
    9. '(x' → logprob: -10.852344512939453
    10. 'input' → logprob: -11.227344512939453

Token 120: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020860204473137856
    2. '()' → logprob: -4.145860195159912
    3. ')' → logprob: -5.770860195159912
    4. '().' → logprob: -6.520860195159912
    5. '()]' → logprob: -8.77086067199707
    6. ' ())' → logprob: -11.52086067199707
    7. '()
' → logprob: -11.64586067199707
    8. '(' → logprob: -11.77086067199707
    9. ')]' → logprob: -11.77086067199707
    10. '())
' → logprob: -11.89586067199707

Token 121: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014073748607188463
    2. '())' → logprob: -8.001407623291016
    3. '().' → logprob: -8.126407623291016
    4. 'for' → logprob: -8.126407623291016
    5. '(' → logprob: -8.876407623291016
    6. ' ()' → logprob: -9.251407623291016
    7. ' for' → logprob: -9.501407623291016
    8. '()-' → logprob: -9.626407623291016
    9. '()]' → logprob: -10.001407623291016
    10. '()[' → logprob: -10.501407623291016

Token 122: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11171747744083405
    2. '_range' → logprob: -3.236717462539673
    3. ' range' → logprob: -3.361717462539673
    4. 'range' → logprob: -3.486717462539673
    5. '_i' → logprob: -7.236717700958252
    6. ' _' → logprob: -8.236717224121094
    7. '_in' → logprob: -10.111717224121094
    8. '_k' → logprob: -10.611717224121094
    9. 'i' → logprob: -10.736717224121094
    10. '_s' → logprob: -11.361717224121094

Token 123: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038419815246015787
    2. ' range' → logprob: -7.875384330749512
    3. '(range' → logprob: -13.375384330749512
    4. ' ' → logprob: -14.000384330749512
    5. '.range' → logprob: -14.625384330749512
    6. '	range' → logprob: -14.750384330749512
    7. '   ' → logprob: -15.000384330749512
    8. '  ' → logprob: -15.125384330749512
    9. '_range' → logprob: -16.750383377075195
    10. ')' → logprob: -17.500383377075195

Token 124: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009125363430939615
    2. ' range' → logprob: -7.000912666320801
    3. '(range' → logprob: -14.5009126663208
    4. '	range' → logprob: -15.3759126663208
    5. '.range' → logprob: -16.750911712646484
    6. 'r' → logprob: -17.125911712646484
    7. 'rang' → logprob: -17.250911712646484
    8. '[' → logprob: -17.375911712646484
    9. ' ' → logprob: -17.375911712646484
    10. '   ' → logprob: -17.375911712646484

Token 125: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -7.386147626675665e-05
    2. '(' → logprob: -10.000073432922363
    3. 'K' → logprob: -10.625073432922363
    4. '(M' → logprob: -13.500073432922363
    5. '(k' → logprob: -13.750073432922363
    6. '(S' → logprob: -14.625073432922363
    7. ' (' → logprob: -15.375073432922363
    8. '(Q' → logprob: -15.500073432922363
    9. '((' → logprob: -15.625073432922363
    10. '(
' → logprob: -16.00007438659668

Token 126: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023737339302897453
    2. ')' → logprob: -3.8987374305725098
    3. ']' → logprob: -5.77373743057251
    4. ' )' → logprob: -10.023736953735352
    5. '）' → logprob: -11.398736953735352
    6. ' ]' → logprob: -11.648736953735352
    7. ')])' → logprob: -12.148736953735352
    8. '()]' → logprob: -13.023736953735352
    9. ')],' → logprob: -13.023736953735352
    10. ')]
' → logprob: -13.648736953735352

Token 127: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.810577929019928
    2. '   ' → logprob: -1.0605778694152832
    3. '    
' → logprob: -2.185577869415283
    4. ')' → logprob: -3.935577869415283
    5. '<|end|>' → logprob: -4.060577869415283
    6. ' 
' → logprob: -4.810577869415283
    7. 'neighbors' → logprob: -4.935577869415283
    8. 'edges' → logprob: -5.060577869415283
    9. '  
' → logprob: -5.185577869415283
    10. 'graph' → logprob: -5.185577869415283

Token 128: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.376254916191101
    2. 'graph' → logprob: -1.376254916191101
    3. 'neighbors' → logprob: -1.876254916191101
    4. ')' → logprob: -2.7512550354003906
    5. 'edges' → logprob: -2.8762550354003906
    6. '#' → logprob: -3.3762550354003906
    7. '0' → logprob: -3.5012550354003906
    8. '    
' → logprob: -3.6262550354003906
    9. 'adj' → logprob: -4.001255035400391
    10. 'dist' → logprob: -4.501255035400391

Token 129: ' �' (ID: 9203)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18962723016738892
    2. ' range' → logprob: -2.189627170562744
    3. 'input' → logprob: -3.439627170562744
    4. '_' → logprob: -4.939627170562744
    5. '0' → logprob: -5.439627170562744
    6. 'map' → logprob: -5.564627170562744
    7. '[]' → logprob: -5.689627170562744
    8. 'list' → logprob: -5.939627170562744
    9. '(range' → logprob: -6.564627170562744
    10. '[input' → logprob: -6.564627170562744

Token 130: '�' (ID: 122)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.099271535873413
    2. ')' → logprob: -2.474271535873413
    3. ' zombies' → logprob: -2.474271535873413
    4. '(range' → logprob: -2.599271535873413
    5. ']' → logprob: -2.724271535873413
    6. ' ' → logprob: -2.849271535873413
    7. ' range' → logprob: -2.974271535873413
    8. 'K' → logprob: -3.099271535873413
    9. '(' → logprob: -3.724271535873413
    10. ' ]' → logprob: -3.974271535873413

Token 131: 'ン' (ID: 4025)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7672877907752991
    2. ']' → logprob: -1.1422877311706543
    3. '\n' → logprob: -3.2672877311706543
    4. '.' → logprob: -3.6422877311706543
    5. '[' → logprob: -3.8922877311706543
    6. '+' → logprob: -4.267287731170654
    7. '[]' → logprob: -4.392287731170654
    8. ' zombies' → logprob: -4.392287731170654
    9. '(' → logprob: -4.517287731170654
    10. ' ' → logprob: -5.017287731170654

Token 132: 'ビ' (ID: 24935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4890613257884979
    2. ']' → logprob: -2.6140613555908203
    3. 'range' → logprob: -3.2390613555908203
    4. '）' → logprob: -3.7390613555908203
    5. ' ' → logprob: -3.8640613555908203
    6. 'の' → logprob: -3.9890613555908203
    7. ' )' → logprob: -3.9890613555908203
    8. '  ' → logprob: -3.9890613555908203
    9. '[]' → logprob: -4.11406135559082
    10. '+' → logprob: -4.36406135559082

Token 133: '支' (ID: 18904)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.888495147228241
    2. 'の' → logprob: -1.5134952068328857
    3. ' )' → logprob: -2.1384952068328857
    4. ' ' → logprob: -2.7634952068328857
    5. 's' → logprob: -3.1384952068328857
    6. ' の' → logprob: -3.5134952068328857
    7. ']' → logprob: -4.138494968414307
    8. '  ' → logprob: -4.388494968414307
    9. '[' → logprob: -4.763494968414307
    10. '）' → logprob: -4.888494968414307

Token 134: '配' (ID: 23246)
  Prédit: '支'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '支' → logprob: -1.0162745714187622
    2. 'range' → logprob: -1.2662745714187622
    3. 'の' → logprob: -3.5162744522094727
    4. ']' → logprob: -3.8912744522094727
    5. '[]' → logprob: -4.016274452209473
    6. 'を' → logprob: -4.141274452209473
    7. '   ' → logprob: -4.141274452209473
    8. '町' → logprob: -4.141274452209473
    9. '[int' → logprob: -4.266274452209473
    10. 'に' → logprob: -4.391274452209473

Token 135: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.3850902020931244
    2. ')' → logprob: -2.2600901126861572
    3. 'town' → logprob: -2.6350901126861572
    4. ' towns' → logprob: -2.8850901126861572
    5. 'の' → logprob: -3.6350901126861572
    6. ' town' → logprob: -4.635090351104736
    7. ' )' → logprob: -5.010090351104736
    8. 'range' → logprob: -5.135090351104736
    9. '[]' → logprob: -5.135090351104736
    10. ' ' → logprob: -5.385090351104736

Token 136: 'の' (ID: 3385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: 'リ' (ID: 9007)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23041932284832
    2. ' range' → logprob: -2.230419397354126
    3. 'input' → logprob: -3.480419397354126
    4. ')' → logprob: -4.105419158935547
    5. 'map' → logprob: -4.105419158935547
    6. 'split' → logprob: -4.730419158935547
    7. 'list' → logprob: -5.480419158935547
    8. ']' → logprob: -5.730419158935547
    9. '0' → logprob: -5.980419158935547
    10. 's' → logprob: -6.230419158935547

Token 138: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.001764905289746821
    2. 'ス' → logprob: -7.00176477432251
    3. 'ン' → logprob: -8.626765251159668
    4. 'st' → logprob: -9.126765251159668
    5. 'ード' → logprob: -9.126765251159668
    6. 'ネ' → logprob: -9.376765251159668
    7. 'ンク' → logprob: -9.626765251159668
    8. 'す' → logprob: -9.876765251159668
    9. 'ー' → logprob: -10.001765251159668
    10. 'ング' → logprob: -10.126765251159668

Token 139: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11998734623193741
    2. '   ' → logprob: -2.9949872493743896
    3. ')' → logprob: -3.4949872493743896
    4. '    
' → logprob: -5.119987487792969
    5. '\n' → logprob: -5.244987487792969
    6. '
' → logprob: -6.244987487792969
    7. '[' → logprob: -6.244987487792969
    8. 'edges' → logprob: -6.494987487792969
    9. 'neighbors' → logprob: -6.619987487792969
    10. ']' → logprob: -6.744987487792969

Token 140: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03643101826310158
    2. ' 
' → logprob: -4.661430835723877
    3. '   ' → logprob: -5.536430835723877
    4. ')' → logprob: -5.786430835723877
    5. 'edges' → logprob: -6.036430835723877
    6. '    
' → logprob: -6.161430835723877
    7. ' edges' → logprob: -6.286430835723877
    8. '  
' → logprob: -6.286430835723877
    9. 'graph' → logprob: -6.661430835723877
    10. '<|end|>' → logprob: -6.911430835723877

Token 141: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1650111824274063
    2. 'G' → logprob: -2.290011167526245
    3. 'adj' → logprob: -4.040011405944824
    4. 'edges' → logprob: -4.915011405944824
    5. '   ' → logprob: -5.040011405944824
    6. 'dist' → logprob: -5.040011405944824
    7. 'roads' → logprob: -5.665011405944824
    8. ' graph' → logprob: -5.790011405944824
    9. 'g' → logprob: -6.415011405944824
    10. 'INF' → logprob: -7.290011405944824

Token 142: ' グ' (ID: 120725)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2345668375492096
    2. 'G' → logprob: -2.7345669269561768
    3. ' graph' → logprob: -2.7345669269561768
    4. '   ' → logprob: -3.7345669269561768
    5. 'dist' → logprob: -4.234566688537598
    6. 'adj' → logprob: -4.484566688537598
    7. ' G' → logprob: -4.734566688537598
    8. 'INF' → logprob: -5.609566688537598
    9. 'roads' → logprob: -5.859566688537598
    10. 'g' → logprob: -6.484566688537598

Token 143: 'ラ' (ID: 8547)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.06432055681943893
    2. 'ラ' → logprob: -2.8143205642700195
    3. 'graph' → logprob: -7.1893205642700195
    4. 'def' → logprob: -7.9393205642700195
    5. '   ' → logprob: -8.06432056427002
    6. 'rap' → logprob: -8.81432056427002
    7. 'раф' → logprob: -9.06432056427002
    8. 'aph' → logprob: -9.18932056427002
    9. 'raf' → logprob: -9.43932056427002
    10. 'r' → logprob: -9.43932056427002

Token 144: 'フ' (ID: 13548)
  Prédit: 'フ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'フ' → logprob: -0.00481007993221283
    2. 'ph' → logprob: -5.504809856414795
    3. 'ф' → logprob: -8.129810333251953
    4. '   ' → logprob: -8.879810333251953
    5. 'ふ' → logprob: -9.254810333251953
    6. 'f' → logprob: -10.254810333251953
    7. 'aph' → logprob: -10.379810333251953
    8. '```' → logprob: -10.504810333251953
    9. '\xe3\x83\x95\xe3\x82' → logprob: -10.629810333251953
    10. 'プ' → logprob: -10.629810333251953

Token 145: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039241973310709
    2. '=' → logprob: -4.039241790771484
    3. '   ' → logprob: -4.164241790771484
    4. '[' → logprob: -6.789241790771484
    5. '[]' → logprob: -7.664241790771484
    6. 'n' → logprob: -7.914241790771484
    7. 'G' → logprob: -8.164241790771484
    8. '[n' → logprob: -8.289241790771484
    9. 'def' → logprob: -8.414241790771484
    10. 'adj' → logprob: -8.539241790771484

Token 146: '�' (ID: 11676)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.0878629982471466
    2. ' [[]' → logprob: -3.212862968444824
    3. '[' → logprob: -3.462862968444824
    4. '[]' → logprob: -5.087862968444824
    5. 'graph' → logprob: -5.962862968444824
    6. 'adj' → logprob: -6.462862968444824
    7. '   ' → logprob: -7.587862968444824
    8. ' defaultdict' → logprob: -7.712862968444824
    9. 'def' → logprob: -8.337862968444824
    10. 'deque' → logprob: -8.587862968444824

Token 147: '�' (ID: 96)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9302560687065125
    2. ' =' → logprob: -1.0552561283111572
    3. 'raph' → logprob: -2.3052561283111572
    4. '構' → logprob: -2.8052561283111572
    5. 'を' → logprob: -3.5552561283111572
    6. ' defaultdict' → logprob: -4.430255889892578
    7. '   ' → logprob: -4.555255889892578
    8. 'default' → logprob: -5.180255889892578
    9. '[]' → logprob: -5.305255889892578
    10. '=[]' → logprob: -5.930255889892578

Token 148: '接' (ID: 9878)
  Prédit: '構'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '構' → logprob: -0.7104796171188354
    2. '=' → logprob: -1.7104796171188354
    3. ' =' → logprob: -1.7104796171188354
    4. 'を' → logprob: -3.085479736328125
    5. 'の' → logprob: -3.710479736328125
    6. '作' → logprob: -4.085479736328125
    7. '[]' → logprob: -4.585479736328125
    8. '＝' → logprob: -5.335479736328125
    9. ' defaultdict' → logprob: -5.460479736328125
    10. 'def' → logprob: -5.585479736328125

Token 149: 'リ' (ID: 9007)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6351636648178101
    2. ' =' → logprob: -1.13516366481781
    3. 'を' → logprob: -2.6351637840270996
    4. '   ' → logprob: -4.2601637840271
    5. ']' → logprob: -4.3851637840271
    6. 'の' → logprob: -5.0101637840271
    7. ')' → logprob: -5.6351637840271
    8. '＝' → logprob: -5.6351637840271
    9. '構' → logprob: -5.8851637840271
    10. '[]' → logprob: -6.0101637840271

Token 150: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.2650602161884308
    2. 'ス' → logprob: -1.7650601863861084
    3. 'す' → logprob: -3.8900601863861084
    4. 's' → logprob: -4.1400604248046875
    5. 'し' → logprob: -4.6400604248046875
    6. 'st' → logprob: -5.0150604248046875
    7. '存' → logprob: -5.6400604248046875
    8. '示' → logprob: -7.0150604248046875
    9. '#' → logprob: -7.6400604248046875
    10. '斯' → logprob: -7.7650604248046875

Token 151: '作' (ID: 6239)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09513425081968307
    2. 'graph' → logprob: -2.8451342582702637
    3. '=' → logprob: -3.9701342582702637
    4. 'g' → logprob: -5.345134258270264
    5. ' graph' → logprob: -5.970134258270264
    6. 'G' → logprob: -6.220134258270264
    7. ':' → logprob: -7.595134258270264
    8. 'adj' → logprob: -7.720134258270264
    9. ' G' → logprob: -7.970134258270264
    10. '   ' → logprob: -8.095133781433105

Token 152: '成' (ID: 5543)
  Prédit: '成'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '成' → logprob: -2.8087270038668066e-05
    2. 'り' → logprob: -12.125027656555176
    3. '法' → logprob: -12.125027656555176
    4. '築' → logprob: -12.500027656555176
    5. '```' → logprob: -13.000027656555176
    6. '建' → logprob: -13.000027656555176
    7. '造' → logprob: -13.125027656555176
    8. '図' → logprob: -13.375027656555176
    9. 'る' → logprob: -13.500027656555176
    10. '=' → logprob: -14.625027656555176

Token 153: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.991086483001709
    2. ' =' → logprob: -1.366086483001709
    3. '   ' → logprob: -1.991086483001709
    4. ' graph' → logprob: -2.116086483001709
    5. '
' → logprob: -3.991086483001709
    6. '=' → logprob: -4.241086483001709
    7. ':' → logprob: -4.741086483001709
    8. 'G' → logprob: -4.866086483001709
    9. 'n' → logprob: -4.866086483001709
    10. '(graph' → logprob: -4.866086483001709

Token 154: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9224609136581421
    2. '   ' → logprob: -1.672460913658142
    3. ' =' → logprob: -1.922460913658142
    4. 'neighbors' → logprob: -2.4224610328674316
    5. ' graph' → logprob: -3.0474610328674316
    6. '=' → logprob: -3.6724610328674316
    7. 'n' → logprob: -4.297461032867432
    8. 'G' → logprob: -4.922461032867432
    9. ' neighbors' → logprob: -5.047461032867432
    10. '
' → logprob: -5.047461032867432

Token 155: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.07516224682331085
    2. ' graph' → logprob: -2.950162172317505
    3. 'G' → logprob: -4.325162410736084
    4. 'adj' → logprob: -6.325162410736084
    5. '   ' → logprob: -6.575162410736084
    6. 'neighbors' → logprob: -6.700162410736084
    7. 'g' → logprob: -7.200162410736084
    8. ' G' → logprob: -7.575162410736084
    9. 'Graph' → logprob: -8.075161933898926
    10. 'edges' → logprob: -8.700161933898926

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868935704231262
    2. '=' → logprob: -1.1368935108184814
    3. '＝' → logprob: -11.011893272399902
    4. ' ' → logprob: -13.511893272399902
    5. '=[]' → logprob: -13.761893272399902
    6. ']' → logprob: -13.886893272399902
    7. '   ' → logprob: -14.011893272399902
    8. '[' → logprob: -14.636893272399902
    9. '=[' → logprob: -15.386893272399902
    10. '[]' → logprob: -15.636893272399902

Token 157: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2014632374048233
    2. ' [[]' → logprob: -1.701463222503662
    3. 'default' → logprob: -10.95146369934082
    4. ' [' → logprob: -11.20146369934082
    5. '{' → logprob: -11.32646369934082
    6. ' defaultdict' → logprob: -12.45146369934082
    7. 'collections' → logprob: -13.57646369934082
    8. '   ' → logprob: -14.45146369934082
    9. ' ' → logprob: -14.57646369934082
    10. '[]' → logprob: -15.70146369934082

Token 158: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07932287454605103
    2. ' for' → logprob: -2.5793228149414062
    3. '(N' → logprob: -8.204322814941406
    4. '(' → logprob: -9.079322814941406
    5. ')' → logprob: -10.954322814941406
    6. ' (' → logprob: -11.454322814941406
    7. ',' → logprob: -11.579322814941406
    8. ']' → logprob: -13.079322814941406
    9. '   ' → logprob: -13.204322814941406
    10. '	for' → logprob: -14.204322814941406

Token 159: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.41848355531692505
    2. '_' → logprob: -1.6684834957122803
    3. 'range' → logprob: -1.9184834957122803
    4. ' in' → logprob: -5.293483734130859
    5. 'in' → logprob: -6.793483734130859
    6. ' _' → logprob: -8.04348373413086
    7. '_range' → logprob: -9.54348373413086
    8. '(range' → logprob: -9.91848373413086
    9. 'i' → logprob: -13.16848373413086
    10. '	range' → logprob: -14.29348373413086

Token 160: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02846999652683735
    2. ' range' → logprob: -4.278470039367676
    3. 'in' → logprob: -4.278470039367676
    4. ' in' → logprob: -8.028470039367676
    5. '_' → logprob: -11.278470039367676
    6. '(range' → logprob: -13.903470039367676
    7. ' ' → logprob: -14.528470039367676
    8. '	range' → logprob: -15.403470039367676
    9. '_range' → logprob: -15.653470039367676
    10. '   ' → logprob: -16.15346908569336

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141421258449554
    2. ' range' → logprob: -1.7014142274856567
    3. '(range' → logprob: -13.951414108276367
    4. '   ' → logprob: -18.076414108276367
    5. '	range' → logprob: -18.076414108276367
    6. ' ' → logprob: -18.576414108276367
    7. ')' → logprob: -19.451414108276367
    8. 'in' → logprob: -19.951414108276367
    9. ' in' → logprob: -20.201414108276367
    10. '.range' → logprob: -20.326414108276367

Token 162: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -6.20603168499656e-05
    2. '(' → logprob: -10.250061988830566
    3. 'N' → logprob: -10.875061988830566
    4. ' (' → logprob: -12.250061988830566
    5. '(M' → logprob: -14.125061988830566
    6. 'range' → logprob: -14.375061988830566
    7. '(n' → logprob: -14.625061988830566
    8. ' N' → logprob: -15.500061988830566
    9. '
' → logprob: -16.000062942504883
    10. '   ' → logprob: -16.000062942504883

Token 163: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008476253715343773
    2. ')]
' → logprob: -7.250847816467285
    3. '+' → logprob: -9.750847816467285
    4. ' )' → logprob: -9.875847816467285
    5. ')]
' → logprob: -11.125847816467285
    6. ')' → logprob: -11.875847816467285
    7. ')]

' → logprob: -12.375847816467285
    8. ']' → logprob: -14.500847816467285
    9. ')])' → logprob: -15.250847816467285
    10. '）' → logprob: -15.375847816467285

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.590104698669165e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.500085830688477
    4. '１' → logprob: -15.250085830688477
    5. '```' → logprob: -16.250085830688477
    6. ')' → logprob: -16.250085830688477
    7. '2' → logprob: -17.375085830688477
    8. '  ' → logprob: -17.875085830688477
    9. ']' → logprob: -18.000085830688477
    10. '）' → logprob: -18.250085830688477

Token 165: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06465093791484833
    2. ']' → logprob: -2.8146510124206543
    3. ')' → logprob: -5.939651012420654
    4. ']
' → logprob: -10.814650535583496
    5. ')]
' → logprob: -11.314650535583496
    6. '])' → logprob: -12.189650535583496
    7. ' ]' → logprob: -12.814650535583496
    8. ')
' → logprob: -13.689650535583496
    9. '）' → logprob: -13.689650535583496
    10. '   ' → logprob: -13.939650535583496

Token 166: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1451743245124817
    2. ' for' → logprob: -2.145174264907837
    3. '<|end|>' → logprob: -4.145174503326416
    4. '
' → logprob: -6.270174503326416
    5. '<|end|>' → logprob: -8.770174026489258
    6. '	for' → logprob: -9.895174026489258
    7. '   ' → logprob: -10.020174026489258
    8. ')' → logprob: -10.145174026489258
    9. ',' → logprob: -11.645174026489258
    10. ' ' → logprob: -12.145174026489258

Token 167: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05075937882065773
    2. ' for' → logprob: -3.0507593154907227
    3. '
' → logprob: -6.550759315490723
    4. '   ' → logprob: -7.300759315490723
    5. '    
' → logprob: -10.550759315490723
    6. ' 
' → logprob: -11.425759315490723
    7. '	for' → logprob: -11.800759315490723
    8. '  
' → logprob: -12.550759315490723
    9. '<|end|>' → logprob: -12.550759315490723
    10. 'M' → logprob: -12.800759315490723

Token 168: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004099773708730936
    2. ' _' → logprob: -5.5040998458862305
    3. '_i' → logprob: -11.25409984588623
    4. ' in' → logprob: -12.00409984588623
    5. '＿' → logprob: -14.25409984588623
    6. 'i' → logprob: -14.62909984588623
    7. '_range' → logprob: -14.75409984588623
    8. '_in' → logprob: -15.75409984588623
    9. '   ' → logprob: -15.75409984588623
    10. ' ' → logprob: -16.004098892211914

Token 169: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009171560406684875
    2. 'in' → logprob: -4.884171485900879
    3. 'range' → logprob: -6.509171485900879
    4. ' ' → logprob: -10.384171485900879
    5. ' range' → logprob: -10.384171485900879
    6. 's' → logprob: -12.134171485900879
    7. 'ange' → logprob: -13.134171485900879
    8. 'input' → logprob: -13.509171485900879
    9. '_' → logprob: -14.384171485900879
    10. '　' → logprob: -15.009171485900879

Token 170: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007100477814674377
    2. ' range' → logprob: -7.2507100105285645
    3. 'r' → logprob: -16.875709533691406
    4. '_range' → logprob: -17.500709533691406
    5. '(range' → logprob: -17.625709533691406
    6. '	range' → logprob: -17.875709533691406
    7. 'M' → logprob: -18.250709533691406
    8. ' ' → logprob: -18.875709533691406
    9. 'rang' → logprob: -18.875709533691406
    10. '```' → logprob: -18.875709533691406

Token 171: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.04426577687263489
    2. 'M' → logprob: -3.1692657470703125
    3. ' M' → logprob: -6.7942657470703125
    4. '(' → logprob: -9.294265747070312
    5. ' (' → logprob: -10.044265747070312
    6. '   ' → logprob: -11.919265747070312
    7. ' ' → logprob: -13.794265747070312
    8. '	M' → logprob: -13.919265747070312
    9. ')' → logprob: -15.169265747070312
    10. '[M' → logprob: -15.419265747070312

Token 172: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08901470899581909
    2. '):
' → logprob: -2.464014768600464
    3. ' ):' → logprob: -10.214015007019043
    4. '):
' → logprob: -10.964015007019043
    5. ')' → logprob: -11.089015007019043
    6. ' ):
' → logprob: -13.214015007019043
    7. ':' → logprob: -13.464015007019043
    8. '）：' → logprob: -13.714015007019043
    9. ')：' → logprob: -14.589015007019043
    10. '():' → logprob: -15.339015007019043

Token 173: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015811221674084663
    2. '       ' → logprob: -4.265811443328857
    3. ' u' → logprob: -7.765811443328857
    4. ',' → logprob: -8.3908109664917
    5. ' a' → logprob: -8.5158109664917
    6. '):
' → logprob: -8.8908109664917
    7. ' x' → logprob: -9.0158109664917
    8. ' line' → logprob: -9.6408109664917
    9. ' ,' → logprob: -9.8908109664917
    10. 'a' → logprob: -10.1408109664917

Token 174: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5796180963516235
    2. 'u' → logprob: -0.8296180963516235
    3. ' u' → logprob: -6.204617977142334
    4. '   ' → logprob: -7.079617977142334
    5. ' a' → logprob: -7.329617977142334
    6. 'x' → logprob: -9.829618453979492
    7. 'A' → logprob: -10.204618453979492
    8. 'U' → logprob: -10.329618453979492
    9. ' ' → logprob: -11.079618453979492
    10. '```' → logprob: -12.204618453979492

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026585354935377836
    2. ',b' → logprob: -6.002658367156982
    3. ' ,' → logprob: -8.62765884399414
    4. 'b' → logprob: -12.75265884399414
    5. ',n' → logprob: -15.25265884399414
    6. ',v' → logprob: -15.75265884399414
    7. ',int' → logprob: -15.87765884399414
    8. ' b' → logprob: -16.37765884399414
    9. ',
' → logprob: -16.62765884399414
    10. ',u' → logprob: -16.62765884399414

Token 176: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ',b' → logprob: -19.264163970947266
    4. ' ' → logprob: -19.389163970947266
    5. 'c' → logprob: -20.389163970947266
    6. '	b' → logprob: -20.514163970947266
    7. 'int' → logprob: -22.014163970947266
    8. 's' → logprob: -22.139163970947266
    9. '>b' → logprob: -22.139163970947266
    10. ' б' → logprob: -22.264163970947266

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141403377056122
    2. ' =' → logprob: -1.7014139890670776
    3. '=input' → logprob: -15.076414108276367
    4. '＝' → logprob: -15.326414108276367
    5. ' ' → logprob: -16.576414108276367
    6. '   ' → logprob: -16.826414108276367
    7. '=line' → logprob: -17.326414108276367
    8. ')' → logprob: -17.826414108276367
    9. '=int' → logprob: -17.951414108276367
    10. 'a' → logprob: -17.951414108276367

Token 178: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3868715465068817
    2. ' map' → logprob: -1.136871576309204
    3. '	map' → logprob: -15.136871337890625
    4. '   ' → logprob: -16.011871337890625
    5. ' ' → logprob: -16.511871337890625
    6. '  ' → logprob: -17.761871337890625
    7. '(map' → logprob: -18.511871337890625
    8. 'm' → logprob: -18.761871337890625
    9. ' ' → logprob: -19.136871337890625
    10. 'Map' → logprob: -19.386871337890625

Token 179: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0001410850090906024
    2. 'int' → logprob: -8.875141143798828
    3. '=int' → logprob: -14.875141143798828
    4. '(' → logprob: -15.250141143798828
    5. '<int' → logprob: -15.375141143798828
    6. '[int' → logprob: -15.500141143798828
    7. ',int' → logprob: -16.375141143798828
    8. ' int' → logprob: -17.500141143798828
    9. '(input' → logprob: -17.750141143798828
    10. '```' → logprob: -18.000141143798828

Token 180: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02004086785018444
    2. 'input' → logprob: -4.395040988922119
    3. ',input' → logprob: -5.270040988922119
    4. '(int' → logprob: -6.145040988922119
    5. '=input' → logprob: -9.270040512084961
    6. ' input' → logprob: -10.270040512084961
    7. ',' → logprob: -10.895040512084961
    8. '().' → logprob: -11.270040512084961
    9. '(' → logprob: -11.395040512084961
    10. '   ' → logprob: -11.770040512084961

Token 181: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002478273818269372
    2. ' input' → logprob: -6.002478122711182
    3. 'map' → logprob: -13.00247859954834
    4. ' ' → logprob: -15.75247859954834
    5. 'int' → logprob: -16.127477645874023
    6. '   ' → logprob: -16.502477645874023
    7. ' map' → logprob: -17.627477645874023
    8. 'list' → logprob: -17.752477645874023
    9. '  ' → logprob: -19.127477645874023
    10. '    ' → logprob: -19.252477645874023

Token 182: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.318681188422488e-05
    2. '()' → logprob: -11.37501335144043
    3. '())' → logprob: -13.50001335144043
    4. '()
' → logprob: -16.25001335144043
    5. '())
' → logprob: -17.62501335144043
    6. '().
' → logprob: -18.12501335144043
    7. ')' → logprob: -18.37501335144043
    8. ' ().' → logprob: -18.75001335144043
    9. '()[' → logprob: -19.50001335144043
    10. '().__' → logprob: -19.62501335144043

Token 183: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.375001907348633
    3. ' split' → logprob: -17.125001907348633
    4. 'rstrip' → logprob: -18.500001907348633
    5. ')' → logprob: -18.750001907348633
    6. '(split' → logprob: -19.250001907348633
    7. 'spl' → logprob: -19.625001907348633
    8. '.split' → logprob: -20.000001907348633
    9. 'read' → logprob: -20.500001907348633
    10. '().' → logprob: -21.000001907348633

Token 184: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03149222210049629
    2. '())
' → logprob: -3.906492233276367
    3. ')' → logprob: -4.656492233276367
    4. '()' → logprob: -6.656492233276367
    5. ')
' → logprob: -10.031492233276367
    6. '()
' → logprob: -10.531492233276367
    7. '())
' → logprob: -11.031492233276367
    8. '(' → logprob: -11.906492233276367
    9. ' ())' → logprob: -12.406492233276367
    10. '   ' → logprob: -13.031492233276367

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035179948899894953
    2. '   ' → logprob: -5.753518104553223
    3. '
' → logprob: -8.378518104553223
    4. 'graph' → logprob: -10.003518104553223
    5. ' graph' → logprob: -10.503518104553223
    6. '	graph' → logprob: -12.003518104553223
    7. ',' → logprob: -12.253518104553223
    8. ')' → logprob: -12.378518104553223
    9. '
' → logprob: -12.503518104553223
    10. '```' → logprob: -13.003518104553223

Token 186: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.49080249667167664
    2. 'graph' (adapté à ' graph') → logprob: -0.990802526473999
    3. '   ' → logprob: -4.11580228805542
    4. '	graph' → logprob: -8.240802764892578
    5. '
' → logprob: -12.490802764892578
    6. '       ' → logprob: -12.865802764892578
    7. '```' → logprob: -13.865802764892578
    8. '_graph' → logprob: -14.115802764892578
    9. '(graph' → logprob: -14.240802764892578
    10. ' ' → logprob: -15.240802764892578

Token 187: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. 'a' → logprob: -16.125
    4. ' [' → logprob: -17.875
    5. '[b' → logprob: -19.25
    6. '```' → logprob: -19.375
    7. '   ' → logprob: -19.5
    8. '[i' → logprob: -20.75
    9. ')[' → logprob: -21.25
    10. '[u' → logprob: -21.375

Token 188: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.6959157586097717
    2. '[a' → logprob: -0.6959157586097717
    3. '[b' → logprob: -6.195915699005127
    4. 'a' → logprob: -8.320916175842285
    5. ').' → logprob: -8.820916175842285
    6. '   ' → logprob: -8.945916175842285
    7. '.append' → logprob: -9.945916175842285
    8. '][' → logprob: -10.070916175842285
    9. '.' → logprob: -10.195916175842285
    10. '[' → logprob: -10.445916175842285

Token 189: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.512236498361744e-07
    2. ' append' → logprob: -14.750000953674316
    3. 'appen' → logprob: -17.5
    4. '.append' → logprob: -17.5
    5. 'app' → logprob: -18.5
    6. '_append' → logprob: -19.25
    7. '	append' → logprob: -20.125
    8. 'push' → logprob: -20.875
    9. 'add' → logprob: -20.875
    10. 'Append' → logprob: -21.125

Token 190: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.318681188422488e-05
    2. 'b' → logprob: -11.25001335144043
    3. '(' → logprob: -15.87501335144043
    4. ' b' → logprob: -16.87501335144043
    5. '	b' → logprob: -19.50001335144043
    6. '(
' → logprob: -19.50001335144043
    7. ' (' → logprob: -20.75001335144043
    8. '(B' → logprob: -22.50001335144043
    9. '((' → logprob: -22.87501335144043
    10. ')b' → logprob: -23.25001335144043

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02325141802430153
    2. ')
' → logprob: -3.773251533508301
    3. '       ' → logprob: -13.0232515335083
    4. ' )' → logprob: -13.1482515335083
    5. ')
' → logprob: -13.7732515335083
    6. ' )
' → logprob: -15.3982515335083
    7. '   ' → logprob: -15.3982515335083
    8. '[' → logprob: -15.7732515335083
    9. ')

' → logprob: -16.773250579833984
    10. '),' → logprob: -16.898250579833984

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005211008246988058
    2. '   ' → logprob: -7.750521183013916
    3. 'graph' → logprob: -10.250520706176758
    4. '<|end|>' → logprob: -10.750520706176758
    5. '	graph' → logprob: -11.000520706176758
    6. ' graph' → logprob: -12.125520706176758
    7. '[' → logprob: -12.625520706176758
    8. ',' → logprob: -13.750520706176758
    9. '        
' → logprob: -14.250520706176758
    10. '(graph' → logprob: -14.250520706176758

Token 193: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6934727430343628
    2. 'graph' (adapté à ' graph') → logprob: -0.6934727430343628
    3. '	graph' → logprob: -8.193472862243652
    4. '       ' → logprob: -10.318472862243652
    5. '   ' → logprob: -11.318472862243652
    6. '(graph' → logprob: -13.068472862243652
    7. '.graph' → logprob: -13.943472862243652
    8. ' ' → logprob: -15.818472862243652
    9. '_graph' → logprob: -15.943472862243652
    10. ' ' → logprob: -16.068471908569336

Token 194: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.25000286102295
    3. 'b' → logprob: -14.00000286102295
    4. '[a' → logprob: -14.75000286102295
    5. '```' → logprob: -18.625003814697266
    6. ' [' → logprob: -19.875003814697266
    7. '[s' → logprob: -19.875003814697266
    8. '[B' → logprob: -20.125003814697266
    9. '	b' → logprob: -20.250003814697266
    10. '[c' → logprob: -20.625003814697266

Token 195: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03469498082995415
    2. ').' → logprob: -4.034695148468018
    3. '.append' → logprob: -4.159695148468018
    4. '.' → logprob: -7.409695148468018
    5. ')' → logprob: -9.28469467163086
    6. ']' → logprob: -9.78469467163086
    7. '.app' → logprob: -11.40969467163086
    8. '])' → logprob: -11.65969467163086
    9. ' ].' → logprob: -12.03469467163086
    10. ' .' → logprob: -12.65969467163086

Token 196: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. 'appen' → logprob: -17.125
    3. ' append' → logprob: -17.625
    4. '.append' → logprob: -19.375
    5. '	append' → logprob: -20.125
    6. 'app' → logprob: -20.875
    7. '_append' → logprob: -22.0
    8. 'add' → logprob: -22.625
    9. '```' → logprob: -23.5
    10. 'Append' → logprob: -23.75

Token 197: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00012809180771000683
    2. 'a' → logprob: -9.000127792358398
    3. '(' → logprob: -12.375127792358398
    4. '(
' → logprob: -15.125127792358398
    5. ' (' → logprob: -16.8751277923584
    6. ' a' → logprob: -16.8751277923584
    7. ')' → logprob: -18.0001277923584
    8. ')a' → logprob: -18.1251277923584
    9. '[a' → logprob: -20.1251277923584
    10. '	a' → logprob: -20.5001277923584

Token 198: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.747814349073451e-05
    2. ')
' → logprob: -11.000017166137695
    3. ' )' → logprob: -15.125017166137695
    4. '   ' → logprob: -15.250017166137695
    5. '）' → logprob: -16.125017166137695
    6. '       ' → logprob: -16.875017166137695
    7. '<|end|>' → logprob: -18.125017166137695
    8. ')
' → logprob: -18.250017166137695
    9. ')return' → logprob: -18.625017166137695
    10. ')

' → logprob: -18.625017166137695

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014227320440113544
    2. '    
' → logprob: -4.514227390289307
    3. '
' → logprob: -7.014227390289307
    4. 'visited' → logprob: -7.889227390289307
    5. 'dist' → logprob: -7.889227390289307
    6. '  
' → logprob: -8.014226913452148
    7. ' visited' → logprob: -8.764226913452148
    8. '   
' → logprob: -9.264226913452148
    9. '  ' → logprob: -9.389226913452148
    10. ' dist' → logprob: -9.389226913452148

Token 200: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22655749320983887
    2. '   ' → logprob: -2.726557493209839
    3. '#' (adapté à ' #') → logprob: -2.851557493209839
    4. 'danger' → logprob: -3.351557493209839
    5. 'safe' → logprob: -4.101557731628418
    6. 'INF' → logprob: -4.726557731628418
    7. 'visited' → logprob: -5.226557731628418
    8. 'distance' → logprob: -5.601557731628418
    9. 'queue' → logprob: -6.101557731628418
    10. 'cost' → logprob: -6.476557731628418

Token 201: ' �' (ID: 9203)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2797199785709381
    2. 'danger' → logprob: -2.6547200679779053
    3. 'from' → logprob: -2.7797200679779053
    4. 'queue' → logprob: -3.1547200679779053
    5. 'import' → logprob: -4.154719829559326
    6. '#' → logprob: -4.279719829559326
    7. 'INF' → logprob: -4.279719829559326
    8. 'visited' → logprob: -5.279719829559326
    9. 'distance' → logprob: -5.654719829559326
    10. 'que' → logprob: -6.029719829559326

Token 202: '�' (ID: 122)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.420434594154358
    2. '#' → logprob: -1.670434594154358
    3. 'deque' → logprob: -1.920434594154358
    4. 'def' → logprob: -2.0454344749450684
    5. 'visited' → logprob: -2.1704344749450684
    6. 'dist' → logprob: -3.1704344749450684
    7. 'from' → logprob: -3.4204344749450684
    8. 'que' → logprob: -3.4204344749450684
    9. '   ' → logprob: -3.9204344749450684
    10. 'q' → logprob: -5.170434474945068

Token 203: 'ン' (ID: 4025)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1913583278656006
    2. '   ' → logprob: -1.4413583278656006
    3. 'queue' → logprob: -2.0663583278656006
    4. 'que' → logprob: -2.3163583278656006
    5. 'from' → logprob: -2.8163583278656006
    6. 'q' → logprob: -3.1913583278656006
    7. 'def' → logprob: -3.8163583278656006
    8. 'deque' → logprob: -3.8163583278656006
    9. 'visited' → logprob: -3.9413583278656006
    10. 'ist' → logprob: -4.56635856628418

Token 204: 'ビ' (ID: 24935)
  Prédit: 'ビ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ビ' → logprob: -0.006195403635501862
    2. 'bi' → logprob: -5.506195545196533
    3. 'b' → logprob: -7.006195545196533
    4. 'ピ' → logprob: -8.131195068359375
    5. 'ビー' → logprob: -8.881195068359375
    6. '```' → logprob: -8.881195068359375
    7. '비' → logprob: -9.631195068359375
    8. 'q' → logprob: -9.756195068359375
    9. 'bit' → logprob: -10.006195068359375
    10. '#' → logprob: -10.131195068359375

Token 205: '支' (ID: 18904)
  Prédit: '支'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '支' → logprob: -0.000509187753777951
    2. 'visited' → logprob: -9.750509262084961
    3. 's' → logprob: -9.875509262084961
    4. 'controlled' → logprob: -10.375509262084961
    5. ' 支' → logprob: -10.500509262084961
    6. 'の' → logprob: -10.625509262084961
    7. 'def' → logprob: -10.625509262084961
    8. '侵' → logprob: -10.750509262084961
    9. 'control' → logprob: -10.750509262084961
    10. 'queue' → logprob: -10.875509262084961

Token 206: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -0.00013417120499070734
    2. '��' → logprob: -9.625134468078613
    3. '�' → logprob: -10.625134468078613
    4. '배' → logprob: -12.000134468078613
    5. '```' → logprob: -12.125134468078613
    6. '���' → logprob: -12.250134468078613
    7. '#' → logprob: -12.375134468078613
    8. '支' → logprob: -13.437634468078613
    9. '����' → logprob: -13.562634468078613
    10. '(' → logprob: -13.875134468078613

Token 207: 'の' (ID: 3385)
  Prédit: '町'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.36955568194389343
    2. 'town' → logprob: -1.2445557117462158
    3. ' towns' → logprob: -4.994555473327637
    4. 'の' → logprob: -5.244555473327637
    5. 'から' → logprob: -5.869555473327637
    6. '```' → logprob: -6.494555473327637
    7. ' town' → logprob: -7.619555473327637
    8. 'def' → logprob: -7.619555473327637
    9. 'from' → logprob: -7.869555473327637
    10. 'queue' → logprob: -8.494555473327637

Token 208: '町' (ID: 92479)
  Prédit: '距'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '距' → logprob: -1.068739414215088
    2. 'deque' → logprob: -1.943739414215088
    3. '町' → logprob: -2.068739414215088
    4. 'キ' → logprob: -2.068739414215088
    5. 'ため' → logprob: -2.568739414215088
    6. 'queue' → logprob: -2.818739414215088
    7. '情報' → logprob: -4.193739414215088
    8. 'for' → logprob: -4.318739414215088
    9. '判' → logprob: -4.443739414215088
    10. 'dist' → logprob: -4.693739414215088

Token 209: 'から' (ID: 27500)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.48629629611969
    2. 'から' → logprob: -1.73629629611969
    3. 'を' → logprob: -1.86129629611969
    4. 'の' → logprob: -2.1112961769104004
    5. 'deque' → logprob: -2.2362961769104004
    6. 'visited' → logprob: -2.8612961769104004
    7. 'は' → logprob: -3.2362961769104004
    8. 'まで' → logprob: -4.2362961769104
    9. 'が' → logprob: -4.4862961769104
    10. 'from' → logprob: -4.7362961769104

Token 210: '距' (ID: 76027)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.023296605795621872
    2. ' deque' → logprob: -4.27329683303833
    3. 'queue' → logprob: -4.89829683303833
    4. 'dist' → logprob: -7.02329683303833
    5. 'distance' → logprob: -8.773296356201172
    6. 'dq' → logprob: -8.773296356201172
    7. ' queue' → logprob: -9.148296356201172
    8. 'collections' → logprob: -9.398296356201172
    9. 'que' → logprob: -9.523296356201172
    10. 'q' → logprob: -9.773296356201172

Token 211: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -5.836499985889532e-05
    2. '```' → logprob: -10.0000581741333
    3. '   ' → logprob: -12.7500581741333
    4. '``' → logprob: -13.1250581741333
    5. 'def' → logprob: -13.6250581741333
    6. '_' → logprob: -14.0000581741333
    7. 'b' → logprob: -14.3750581741333
    8. '离' → logprob: -14.6250581741333
    9. '0' → logprob: -14.8750581741333
    10. ' ' → logprob: -15.2500581741333

Token 212: 'S' (ID: 50)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.43758153915405273
    2. '0' → logprob: -1.8125815391540527
    3. 'の' → logprob: -3.1875815391540527
    4. 'deque' → logprob: -3.3125815391540527
    5. '1' → logprob: -4.187581539154053
    6. 'が' → logprob: -4.312581539154053
    7. 'inf' → logprob: -4.562581539154053
    8. '   ' → logprob: -4.687581539154053
    9. 'dist' → logprob: -4.812581539154053
    10. ' ' → logprob: -5.062581539154053

Token 213: '以内' (ID: 131530)
  Prédit: 'まで'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'まで' → logprob: -0.03596561402082443
    2. '以内' → logprob: -3.78596568107605
    3. '   ' → logprob: -5.660965442657471
    4. '+' → logprob: -5.785965442657471
    5. 'を' → logprob: -5.910965442657471
    6. 'の' → logprob: -6.910965442657471
    7. 'が' → logprob: -8.160965919494629
    8. 'b' → logprob: -8.410965919494629
    9. '1' → logprob: -8.535965919494629
    10. ' ' → logprob: -8.660965919494629

Token 214: 'の' (ID: 3385)
  Prédit: 'に'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.8068395256996155
    2. 'の' → logprob: -1.3068394660949707
    3. 'まで' → logprob: -1.6818394660949707
    4. 'を' → logprob: -2.9318394660949707
    5. 'で' → logprob: -3.8068394660949707
    6. 'から' → logprob: -4.806839466094971
    7. '   ' → logprob: -5.681839466094971
    8. 'は' → logprob: -6.181839466094971
    9. 'が' → logprob: -6.681839466094971
    10. ' の' → logprob: -7.056839466094971

Token 215: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.48492297530174255
    2. 'queue' → logprob: -1.734923005104065
    3. 'deque' → logprob: -2.2349228858947754
    4. 'town' → logprob: -2.7349228858947754
    5. 'for' → logprob: -4.859922885894775
    6. '```' → logprob: -5.109922885894775
    7. 'safe' → logprob: -5.484922885894775
    8. '#' → logprob: -5.484922885894775
    9. 'z' → logprob: -5.984922885894775
    10. '安全' → logprob: -6.234922885894775

Token 216: 'を' (ID: 7277)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6709944009780884
    2. 'dist' → logprob: -2.045994281768799
    3. 'を' → logprob: -2.045994281768799
    4. 'まで' → logprob: -2.920994281768799
    5. 'distance' → logprob: -3.170994281768799
    6. 'def' → logprob: -3.420994281768799
    7. 'は' → logprob: -3.545994281768799
    8. 'deque' → logprob: -4.670994281768799
    9. ' を' → logprob: -5.045994281768799
    10. 'に' → logprob: -5.170994281768799

Token 217: '「' (ID: 6055)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0002371521550230682
    2. 'dist' → logprob: -9.125237464904785
    3. ' deque' → logprob: -9.625237464904785
    4. 'queue' → logprob: -10.000237464904785
    5. 'visited' → logprob: -12.000237464904785
    6. 'que' → logprob: -12.875237464904785
    7. 'dq' → logprob: -13.000237464904785
    8. '#' → logprob: -13.250237464904785
    9. '```' → logprob: -13.625237464904785
    10. 'q' → logprob: -14.500237464904785

Token 218: '危' (ID: 70486)
  Prédit: 'danger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'danger' → logprob: -0.7142966985702515
    2. '危' → logprob: -0.9642966985702515
    3. 'deque' → logprob: -2.464296817779541
    4. 'unsafe' → logprob: -3.964296817779541
    5. 'import' → logprob: -5.089296817779541
    6. 'queue' → logprob: -5.214296817779541
    7. '"' → logprob: -5.464296817779541
    8. 'for' → logprob: -6.214296817779541
    9. '危险' → logprob: -6.839296817779541
    10. '禁止' → logprob: -7.214296817779541

Token 219: '険' (ID: 137177)
  Prédit: '険'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '険' → logprob: -0.004375529009848833
    2. 'ない' → logprob: -5.754375457763672
    3. '```' → logprob: -7.129375457763672
    4. '�' → logprob: -9.879375457763672
    5. ']' → logprob: -10.004375457763672
    6. '``' → logprob: -10.129375457763672
    7. 'safe' → logprob: -10.129375457763672
    8. 'b' → logprob: -10.254375457763672
    9. '_' → logprob: -10.504375457763672
    10. '#' → logprob: -10.504375457763672

Token 220: 'な' (ID: 5784)
  Prédit: '」と'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '」と' → logprob: -0.5546422004699707
    2. '」' → logprob: -1.3046422004699707
    3. 'な' → logprob: -2.4296422004699707
    4. '"]' → logprob: -3.0546422004699707
    5. '```' → logprob: -5.304642200469971
    6. 'か' → logprob: -5.554642200469971
    7. '」に' → logprob: -6.054642200469971
    8. '」で' → logprob: -6.179642200469971
    9. '町' → logprob: -7.054642200469971
    10. '」の' → logprob: -7.304642200469971

Token 221: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.2905869483947754
    2. 'town' → logprob: -1.7905869483947754
    3. ' towns' → logprob: -2.9155869483947754
    4. 'queue' → logprob: -4.290586948394775
    5. '```' → logprob: -5.165586948394775
    6. ' town' → logprob: -5.540586948394775
    7. '場所' → logprob: -5.665586948394775
    8. 'deque' → logprob: -7.165586948394775
    9. 'marked' → logprob: -7.790586948394775
    10. '）' → logprob: -7.915586948394775

Token 222: '」と' (ID: 39342)
  Prédit: '」と'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '」と' → logprob: -0.2625458538532257
    2. '」' → logprob: -2.1375458240509033
    3. '」に' → logprob: -3.0125458240509033
    4. '」を' → logprob: -3.6375458240509033
    5. 'と' → logprob: -4.137546062469482
    6. '"]' → logprob: -4.512546062469482
    7. 'に' → logprob: -6.137546062469482
    8. 'として' → logprob: -6.387546062469482
    9. '」で' → logprob: -6.637546062469482
    10. 'か' → logprob: -6.637546062469482

Token 223: 'する' (ID: 39065)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.02819107100367546
    2. 'して' → logprob: -4.903191089630127
    3. 'する' → logprob: -5.528191089630127
    4. 'queue' → logprob: -6.028191089630127
    5. 'します' → logprob: -6.278191089630127
    6. 'mark' → logprob: -6.278191089630127
    7. ' deque' → logprob: -6.528191089630127
    8. 'dist' → logprob: -6.653191089630127
    9. '判' → logprob: -6.778191089630127
    10. 'def' → logprob: -6.778191089630127

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026914017274975777
    2. 'dist' → logprob: -4.526914119720459
    3. '    
' → logprob: -4.651914119720459
    4. 'visited' → logprob: -5.901914119720459
    5. 'deque' → logprob: -7.526914119720459
    6. ' visited' → logprob: -7.776914119720459
    7. 'danger' → logprob: -7.901914119720459
    8. '
' → logprob: -8.1519136428833
    9. ' dist' → logprob: -8.1519136428833
    10. 'q' → logprob: -8.2769136428833

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05310363322496414
    2. 'dist' → logprob: -3.6781036853790283
    3. 'visited' → logprob: -4.428103446960449
    4. 'queue' → logprob: -6.178103446960449
    5. 'danger' → logprob: -6.303103446960449
    6. '    
' → logprob: -6.303103446960449
    7. ' visited' → logprob: -6.678103446960449
    8. 'dq' → logprob: -6.928103446960449
    9. 'deque' → logprob: -7.053103446960449
    10. 'q' → logprob: -7.053103446960449

Token 226: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11146339029073715
    2. 'danger' → logprob: -2.3614633083343506
    3. '   ' → logprob: -5.86146354675293
    4. 'visited' → logprob: -5.98646354675293
    5. 'queue' → logprob: -6.48646354675293
    6. 'distance' → logprob: -6.86146354675293
    7. 'INF' → logprob: -7.23646354675293
    8. 'dq' → logprob: -7.23646354675293
    9. 'q' → logprob: -7.36146354675293
    10. 'from' → logprob: -7.61146354675293

Token 227: ' �' (ID: 9203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3769189417362213
    2. 'dist' → logprob: -1.376918911933899
    3. 'danger' → logprob: -4.001918792724609
    4. ' dist' → logprob: -4.251918792724609
    5. 'queue' → logprob: -4.751918792724609
    6. 'visited' → logprob: -4.751918792724609
    7. ' queue' → logprob: -5.501918792724609
    8. 'q' → logprob: -6.876918792724609
    9. 'dq' → logprob: -6.876918792724609
    10. '    
' → logprob: -7.126918792724609

Token 228: '�' (ID: 122)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31114163994789124
    2. 'visited' → logprob: -2.4361417293548584
    3. 'queue' → logprob: -2.5611417293548584
    4. 'danger' → logprob: -3.3111417293548584
    5. 'from' → logprob: -4.186141490936279
    6. 'q' → logprob: -4.186141490936279
    7. 'que' → logprob: -4.186141490936279
    8. 'deque' → logprob: -5.436141490936279
    9. '#' → logprob: -5.561141490936279
    10. 'distance' → logprob: -6.436141490936279

Token 229: 'ン' (ID: 4025)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.9427924156188965
    2. 'ue' → logprob: -1.5677924156188965
    3. 'visited' → logprob: -1.9427924156188965
    4. 'que' → logprob: -2.5677924156188965
    5. '   ' → logprob: -2.9427924156188965
    6. 'from' → logprob: -3.6927924156188965
    7. 'deque' → logprob: -3.8177924156188965
    8. '```' → logprob: -4.3177924156188965
    9. 'q' → logprob: -4.4427924156188965
    10. '#' → logprob: -4.4427924156188965

Token 230: 'ビ' (ID: 24935)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9200094938278198
    2. 'queue' → logprob: -1.5450094938278198
    3. 'que' → logprob: -1.6700094938278198
    4. '   ' → logprob: -3.2950096130371094
    5. '
' → logprob: -3.5450096130371094
    6. 'for' → logprob: -3.9200096130371094
    7. '```' → logprob: -3.9200096130371094
    8. 'Q' → logprob: -4.170009613037109
    9. '#' → logprob: -4.545009613037109
    10. '       ' → logprob: -4.670009613037109

Token 231: '支' (ID: 18904)
  Prédit: '支'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '支' → logprob: -0.024703586474061012
    2. 's' → logprob: -5.024703502655029
    3. 'from' → logprob: -5.399703502655029
    4. 'z' → logprob: -6.149703502655029
    5. 'controlled' → logprob: -6.274703502655029
    6. 'support' → logprob: -6.899703502655029
    7. 'から' → logprob: -7.024703502655029
    8. 'deque' → logprob: -7.274703502655029
    9. 'dom' → logprob: -7.399703502655029
    10. 'visited' → logprob: -7.399703502655029

Token 232: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -0.013402091339230537
    2. 'zip' → logprob: -6.138401985168457
    3. 'for' → logprob: -6.763401985168457
    4. '```' → logprob: -6.763401985168457
    5. 'dp' → logprob: -6.888401985168457
    6. '   ' → logprob: -7.388401985168457
    7. 'り' → logprob: -7.513401985168457
    8. 'ば' → logprob: -7.638401985168457
    9. 'dom' → logprob: -7.888401985168457
    10. '援' → logprob: -7.888401985168457

Token 233: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -1.4538531303405762
    2. 'の' → logprob: -1.5788531303405762
    3. 'town' → logprob: -1.5788531303405762
    4. ' towns' → logprob: -1.5788531303405762
    5. 'から' → logprob: -2.828853130340576
    6. 'deque' → logprob: -4.078853130340576
    7. 'from' → logprob: -4.203853130340576
    8. 'def' → logprob: -4.703853130340576
    9. 'cities' → logprob: -4.953853130340576
    10. 'は' → logprob: -4.953853130340576

Token 234: 'は' (ID: 5205)
  Prédit: 'から'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.28863170742988586
    2. 'を' → logprob: -2.4136316776275635
    3. 'deque' → logprob: -2.7886316776275635
    4. ' =' → logprob: -3.6636316776275635
    5. 'は' → logprob: -3.9136316776275635
    6. 'queue' → logprob: -4.038631916046143
    7. 'の' → logprob: -4.538631916046143
    8. 'from' → logprob: -4.913631916046143
    9. ' deque' → logprob: -5.788631916046143
    10. 'と' → logprob: -5.913631916046143

Token 235: '訪' (ID: 150782)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0035668080672621727
    2. ' deque' → logprob: -5.753566741943359
    3. 'queue' → logprob: -8.50356674194336
    4. 'dist' → logprob: -9.25356674194336
    5. 'set' → logprob: -10.50356674194336
    6. '[]' → logprob: -11.37856674194336
    7. 'visited' → logprob: -11.62856674194336
    8. '   ' → logprob: -11.62856674194336
    9. 'q' → logprob: -12.25356674194336
    10. 'dq' → logprob: -12.25356674194336

Token 236: '問' (ID: 36302)
  Prédit: 'れる'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れる' → logprob: -0.14818492531776428
    2. 'れ' → logprob: -2.0231850147247314
    3. '問' → logprob: -5.273184776306152
    4. '```' → logprob: -8.898184776306152
    5. '#' → logprob: -9.898184776306152
    6. 'れて' → logprob: -9.898184776306152
    7. 'か' → logprob: -10.023184776306152
    8. 'ず' → logprob: -11.148184776306152
    9. 'る' → logprob: -11.273184776306152
    10. '``' → logprob: -12.023184776306152

Token 237: '禁止' (ID: 65341)
  Prédit: '済'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '済' → logprob: -0.5069124698638916
    2. '禁止' → logprob: -1.5069124698638916
    3. 'し' → logprob: -2.6319124698638916
    4. '不可' → logprob: -3.7569124698638916
    5. '[]' → logprob: -4.0069122314453125
    6. 'でき' → logprob: -4.3819122314453125
    7. '[' → logprob: -4.6319122314453125
    8. 'visited' → logprob: -5.1319122314453125
    9. '対象' → logprob: -5.2569122314453125
    10. 'する' → logprob: -5.6319122314453125

Token 238: 'なので' (ID: 145461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32764026522636414
    2. '
' → logprob: -1.5776402950286865
    3. '    
' → logprob: -3.3276402950286865
    4. '  
' → logprob: -4.327640056610107
    5. ' 
' → logprob: -4.952640056610107
    6. 'visited' → logprob: -5.077640056610107
    7. '   
' → logprob: -6.077640056610107
    8. 'z' → logprob: -6.702640056610107
    9. 'def' → logprob: -6.952640056610107
    10. 'distance' → logprob: -7.452640056610107

Token 239: 'そこ' (ID: 137814)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1227974072098732
    2. '   ' → logprob: -2.6227974891662598
    3. ' dist' → logprob: -3.6227974891662598
    4. 'visited' → logprob: -4.74779748916626
    5. 'distance' → logprob: -6.12279748916626
    6. 'queue' → logprob: -6.37279748916626
    7. 'danger' → logprob: -6.87279748916626
    8. ' visited' → logprob: -7.62279748916626
    9. 'from' → logprob: -7.74779748916626
    10. '    
' → logprob: -8.122797012329102

Token 240: 'から' (ID: 27500)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.5438480973243713
    2. '   ' → logprob: -2.4188480377197266
    3. 'for' → logprob: -2.4188480377197266
    4. 'を' → logprob: -2.6688480377197266
    5. 'visited' → logprob: -2.7938480377197266
    6. 'から' → logprob: -2.7938480377197266
    7. 'まで' → logprob: -4.043848037719727
    8. 'も' → logprob: -4.668848037719727
    9. 'に' → logprob: -5.418848037719727
    10. 'で' → logprob: -5.668848037719727

Token 241: '距' (ID: 76027)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5372185707092285
    2. 'queue' → logprob: -0.9122185707092285
    3. 'q' → logprob: -5.7872185707092285
    4. 'for' → logprob: -5.9122185707092285
    5. 'dist' → logprob: -6.0372185707092285
    6. 'dq' → logprob: -6.1622185707092285
    7. 'que' → logprob: -6.6622185707092285
    8. 'from' → logprob: -7.7872185707092285
    9. ' queue' → logprob: -7.9122185707092285
    10. ' deque' → logprob: -7.9122185707092285

Token 242: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -0.0010549608850851655
    2. '```' → logprob: -7.501054763793945
    3. '   ' → logprob: -8.751054763793945
    4. '��' → logprob: -9.876054763793945
    5. '``' → logprob: -10.001054763793945
    6. '#' → logprob: -11.001054763793945
    7. '続' → logprob: -11.126054763793945
    8. '�' → logprob: -11.251054763793945
    9. 'は' → logprob: -11.376054763793945
    10. 'を' → logprob: -11.751054763793945

Token 243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6354621648788452
    2. '1' → logprob: -1.1354621648788452
    3. ' ' → logprob: -2.6354622840881348
    4. 'S' → logprob: -2.8854622840881348
    5. '   ' → logprob: -4.510462284088135
    6. '=' → logprob: -5.760462284088135
    7. 'を' → logprob: -6.135462284088135
    8. ' S' → logprob: -6.760462284088135
    9. 'が' → logprob: -7.135462284088135
    10. ' =' → logprob: -7.385462284088135

Token 244: 'として' (ID: 176315)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8136110305786133
    2. 'として' → logprob: -1.9386110305786133
    3. ' =' → logprob: -2.5636110305786133
    4. '=' → logprob: -2.5636110305786133
    5. 'distance' → logprob: -2.6886110305786133
    6. 'で' → logprob: -3.1886110305786133
    7. 'は' → logprob: -3.5636110305786133
    8. ' ' → logprob: -3.8136110305786133
    9. 'for' → logprob: -4.063611030578613
    10. 'を' → logprob: -4.313611030578613

Token 245: '、' (ID: 1395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3199819028377533
    2. 'dist' → logprob: -3.444981813430786
    3. 'queue' → logprob: -3.444981813430786
    4. 'visited' → logprob: -3.569981813430786
    5. 'distance' → logprob: -3.569981813430786
    6. ' distances' → logprob: -3.819981813430786
    7. ' queue' → logprob: -4.069982051849365
    8. 'deque' → logprob: -4.069982051849365
    9. ' dq' → logprob: -4.194982051849365
    10. 'q' → logprob: -4.444982051849365

Token 246: '距' (ID: 76027)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.13139677047729492
    2. 'queue' → logprob: -2.381396770477295
    3. 'visited' → logprob: -5.006396770477295
    4. ' dist' → logprob: -5.131396770477295
    5. 'dq' → logprob: -5.256396770477295
    6. ' queue' → logprob: -5.631396770477295
    7. 'que' → logprob: -5.631396770477295
    8. 'q' → logprob: -5.881396770477295
    9. 'deque' → logprob: -6.631396770477295
    10. '   ' → logprob: -7.506396770477295

Token 247: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -3.4285862057004124e-05
    2. '```' → logprob: -10.87503433227539
    3. '   ' → logprob: -12.50003433227539
    4. '0' → logprob: -13.12503433227539
    5. '离' → logprob: -13.25003433227539
    6. '続' → logprob: -13.50003433227539
    7. 'S' → logprob: -13.62503433227539
    8. '
' → logprob: -13.62503433227539
    9. '``' → logprob: -14.37503433227539
    10. '#' → logprob: -14.37503433227539

Token 248: 'S' (ID: 50)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05066419392824173
    2. 'd' → logprob: -4.67566442489624
    3. '=' → logprob: -4.92566442489624
    4. '0' → logprob: -5.30066442489624
    5. ' =' → logprob: -5.30066442489624
    6. 'visited' → logprob: -5.55066442489624
    7. 'INF' → logprob: -5.92566442489624
    8. 'を' → logprob: -6.17566442489624
    9. 'distance' → logprob: -6.17566442489624
    10. 'queue' → logprob: -6.42566442489624

Token 249: '以内' (ID: 131530)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31358322501182556
    2. 'まで' → logprob: -1.688583254814148
    3. '以内' → logprob: -2.9385831356048584
    4. ' +' → logprob: -4.4385833740234375
    5. '=' → logprob: -5.3135833740234375
    6. '＋' → logprob: -5.5635833740234375
    7. ' =' → logprob: -6.1885833740234375
    8. '-' → logprob: -6.4385833740234375
    9. 'を' → logprob: -6.5635833740234375
    10. '   ' → logprob: -6.9385833740234375

Token 250: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.3214982748031616
    2. 'に' → logprob: -1.8214982748031616
    3. 'から' → logprob: -2.196498394012451
    4. 'で' → logprob: -2.196498394012451
    5. 'を' → logprob: -2.321498394012451
    6. 'from' → logprob: -3.071498394012451
    7. '0' → logprob: -3.571498394012451
    8. 'まで' → logprob: -3.571498394012451
    9. 'は' → logprob: -3.821498394012451
    10. ',' → logprob: -3.946498394012451

Token 251: '町' (ID: 92479)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.3633074462413788
    2. ' towns' → logprob: -2.238307476043701
    3. '町' → logprob: -2.488307476043701
    4. 'deque' → logprob: -2.988307476043701
    5. 'town' → logprob: -3.988307476043701
    6. 'from' → logprob: -4.238307476043701
    7. ' queue' → logprob: -4.488307476043701
    8. '```' → logprob: -5.488307476043701
    9. 'q' → logprob: -5.738307476043701
    10. 'for' → logprob: -5.738307476043701

Token 252: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.16534902155399323
    2. 'は' → logprob: -3.165349006652832
    3. 'まで' → logprob: -3.290349006652832
    4. 'に' → logprob: -3.790349006652832
    5. 'から' → logprob: -4.290349006652832
    6. ' を' → logprob: -4.915349006652832
    7. 'も' → logprob: -5.040349006652832
    8. 'from' → logprob: -5.415349006652832
    9. '   ' → logprob: -5.540349006652832
    10. 'へ' → logprob: -5.790349006652832

Token 253: '見' (ID: 27572)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0021732202731072903
    2. 'dist' → logprob: -6.62717342376709
    3. 'visited' → logprob: -7.75217342376709
    4. 'queue' → logprob: -8.37717342376709
    5. '```' → logprob: -9.37717342376709
    6. ' deque' → logprob: -9.62717342376709
    7. 'b' → logprob: -11.62717342376709
    8. 'dq' → logprob: -11.75217342376709
    9. 'que' → logprob: -12.62717342376709
    10. '   ' → logprob: -12.75217342376709

Token 254: 'つ' (ID: 18290)
  Prédit: 'つ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -0.1980658769607544
    2. 'て' → logprob: -2.073065757751465
    3. '```' → logprob: -3.823065757751465
    4. 'ます' → logprob: -5.198065757751465
    5. 'に' → logprob: -5.573065757751465
    6. '   ' → logprob: -5.573065757751465
    7. '渡' → logprob: -5.948065757751465
    8. 'る' → logprob: -6.448065757751465
    9. 'def' → logprob: -6.698065757751465
    10. 'づ' → logprob: -7.073065757751465

Token 255: 'け' (ID: 15707)
  Prédit: 'つ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -0.0005984273157082498
    2. 'て' → logprob: -8.250597953796387
    3. '```' → logprob: -8.875597953796387
    4. '   ' → logprob: -9.250597953796387
    5. 'け' → logprob: -10.125597953796387
    6. '       ' → logprob: -11.125597953796387
    7. 'る' → logprob: -11.625597953796387
    8. '     ' → logprob: -11.875597953796387
    9. '    ' → logprob: -12.250597953796387
    10. '付' → logprob: -12.500597953796387

Token 256: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.7217181921005249
    2. 'て' → logprob: -1.221718192100525
    3. 'queue' → logprob: -2.3467183113098145
    4. '```' → logprob: -3.0967183113098145
    5. 'deque' → logprob: -3.2217183113098145
    6. ' deque' → logprob: -5.4717183113098145
    7. '   ' → logprob: -5.4717183113098145
    8. ' queue' → logprob: -5.7217183113098145
    9. '、' → logprob: -5.7217183113098145
    10. ',' → logprob: -5.7217183113098145

Token 257: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05393541604280472
    2. '
' → logprob: -3.8039355278015137
    3. 'visited' → logprob: -4.803935527801514
    4. 'dist' → logprob: -5.303935527801514
    5. '    
' → logprob: -5.428935527801514
    6. 'distance' → logprob: -5.553935527801514
    7. 'queue' → logprob: -5.928935527801514
    8. ' visited' → logprob: -6.928935527801514
    9. 'd' → logprob: -7.178935527801514
    10. 'q' → logprob: -7.303935527801514

Token 258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09516634047031403
    2. 'visited' → logprob: -2.8451664447784424
    3. 'dist' → logprob: -4.345166206359863
    4. ' visited' → logprob: -5.470166206359863
    5. '
' → logprob: -5.970166206359863
    6. 'def' → logprob: -6.095166206359863
    7. 'distance' → logprob: -6.095166206359863
    8. 'queue' → logprob: -6.345166206359863
    9. '    
' → logprob: -6.595166206359863
    10. 'q' → logprob: -6.720166206359863

Token 259: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14999260008335114
    2. 'dist' (adapté à ' dist') → logprob: -2.7749927043914795
    3. 'queue' → logprob: -3.6499927043914795
    4. 'visited' → logprob: -4.5249924659729
    5. 'q' → logprob: -4.8999924659729
    6. ' queue' → logprob: -5.1499924659729
    7. 'dq' → logprob: -5.1499924659729
    8. 'que' → logprob: -5.3999924659729
    9. ' dist' → logprob: -5.5249924659729
    10. 'from' → logprob: -6.2749924659729

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048620183020830154
    2. '=' → logprob: -3.0486202239990234
    3. 's' → logprob: -11.048620223999023
    4. '=[' → logprob: -12.173620223999023
    5. '＝' → logprob: -12.798620223999023
    6. ' ' → logprob: -13.173620223999023
    7. 'from' → logprob: -13.298620223999023
    8. '   ' → logprob: -13.923620223999023
    9. 'ances' → logprob: -13.923620223999023
    10. ' =[' → logprob: -14.298620223999023

Token 261: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.002502771094441414
    2. '[' → logprob: -6.002502918243408
    3. ' [-' → logprob: -11.00250244140625
    4. 'deque' → logprob: -12.12750244140625
    5. '[N' → logprob: -12.62750244140625
    6. ' [' → logprob: -14.37750244140625
    7. '[n' → logprob: -14.87750244140625
    8. '[len' → logprob: -15.87750244140625
    9. '[a' → logprob: -15.87750244140625
    10. '[b' → logprob: -16.00250244140625

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -13.250001907348633
    3. '(' → logprob: -17.000001907348633
    4. '10' → logprob: -17.125001907348633
    5. '１' → logprob: -18.250001907348633
    6. 'sys' → logprob: -18.250001907348633
    7. 'float' → logprob: -18.875001907348633
    8. ' ' → logprob: -19.500001907348633
    9. '-' → logprob: -19.500001907348633
    10. 'int' → logprob: -20.500001907348633

Token 263: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19131317734718323
    2. ' for' → logprob: -2.3163132667541504
    3. 'for' → logprob: -2.8163132667541504
    4. ']*(' → logprob: -4.19131326675415
    5. ']*' → logprob: -7.56631326675415
    6. ']+' → logprob: -11.441312789916992
    7. ' ]' → logprob: -12.816312789916992
    8. '	for' → logprob: -13.316312789916992
    9. ',' → logprob: -13.691312789916992
    10. '   ' → logprob: -13.816312789916992

Token 264: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.65707261255011e-06
    2. '(N' → logprob: -11.875008583068848
    3. ' N' → logprob: -13.375008583068848
    4. '   ' → logprob: -16.000009536743164
    5. 'n' → logprob: -18.375009536743164
    6. '(' → logprob: -18.375009536743164
    7. '	N' → logprob: -18.625009536743164
    8. ' (' → logprob: -20.125009536743164
    9. 'len' → logprob: -20.125009536743164
    10. 'Ｎ' → logprob: -20.250009536743164

Token 265: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9266199160483666e-05
    2. ' +' → logprob: -11.250019073486328
    3. '＋' → logprob: -12.375019073486328
    4. '+
' → logprob: -13.500019073486328
    5. '1' → logprob: -14.375019073486328
    6. '
' → logprob: -17.750019073486328
    7. '```' → logprob: -17.750019073486328
    8. ')+' → logprob: -18.875019073486328
    9. '﻿' → logprob: -19.500019073486328
    10. '   ' → logprob: -19.562519073486328

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -14.750005722045898
    4. '7' → logprob: -15.125005722045898
    5. '   ' → logprob: -15.500005722045898
    6. '１' → logprob: -15.750005722045898
    7. '```' → logprob: -16.3750057220459
    8. '
' → logprob: -16.9375057220459
    9. '+' → logprob: -17.5625057220459
    10. '0' → logprob: -17.5625057220459

Token 267: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5760608315467834
    2. ')' → logprob: -0.8260608315467834
    3. ')
' → logprob: -9.201061248779297
    4. ')

' → logprob: -11.451061248779297
    5. ' )
' → logprob: -12.201061248779297
    6. '   ' → logprob: -13.326061248779297
    7. ' )' → logprob: -13.451061248779297
    8. '
' → logprob: -13.576061248779297
    9. ' ' → logprob: -15.826061248779297
    10. 'def' → logprob: -16.826061248779297

Token 268: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6753547191619873
    2. 'queue' → logprob: -1.1753547191619873
    3. 'deque' → logprob: -2.4253547191619873
    4. '   ' → logprob: -3.5503547191619873
    5. 'for' → logprob: -3.6753547191619873
    6. 'from' → logprob: -4.050354957580566
    7. ' for' → logprob: -5.050354957580566
    8. 'q' → logprob: -5.800354957580566
    9. ' queue' → logprob: -5.800354957580566
    10. '
' → logprob: -6.300354957580566

Token 269: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.8285553455352783
    2. 'for' → logprob: -0.9535553455352783
    3. '
' → logprob: -2.4535553455352783
    4. 'deque' → logprob: -2.9535553455352783
    5. ' for' → logprob: -4.578555107116699
    6. 'from' → logprob: -4.703555107116699
    7. 'q' → logprob: -4.953555107116699
    8. '   ' → logprob: -5.578555107116699
    9. 'dq' → logprob: -5.703555107116699
    10. ' queue' → logprob: -6.453555107116699

Token 270: ' �' (ID: 11197)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16726860404014587
    2. 'deque' → logprob: -2.7922685146331787
    3. ' for' → logprob: -3.0422685146331787
    4. 'from' → logprob: -3.2922685146331787
    5. '0' → logprob: -5.792268753051758
    6. 'queue' → logprob: -6.917268753051758
    7. ')' → logprob: -7.167268753051758
    8. ' deque' → logprob: -7.167268753051758
    9. '
' → logprob: -7.417268753051758
    10. ' from' → logprob: -7.792268753051758

Token 271: '�' (ID: 226)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.08417012542486191
    2. '1' → logprob: -2.70917010307312
    3. ' ' → logprob: -5.459170341491699
    4. ' K' → logprob: -5.834170341491699
    5. '0' → logprob: -6.209170341491699
    6. 'z' → logprob: -6.334170341491699
    7. ')' → logprob: -6.959170341491699
    8. 'S' → logprob: -7.334170341491699
    9. '   ' → logprob: -8.3341703414917
    10. 'N' → logprob: -8.4591703414917

Token 272: '町' (ID: 92479)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.5940672755241394
    2. '1' → logprob: -1.3440673351287842
    3. 'S' → logprob: -2.719067335128784
    4. ' K' → logprob: -3.219067335128784
    5. 'N' → logprob: -3.844067335128784
    6. ' ' → logprob: -4.094067096710205
    7. '   ' → logprob: -4.719067096710205
    8. 'dist' → logprob: -4.844067096710205
    9. 'z' → logprob: -5.344067096710205
    10. ')' → logprob: -5.844067096710205

Token 273: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.1867661327123642
    2. '[' → logprob: -2.9367661476135254
    3. ',' → logprob: -3.6867661476135254
    4. 'dist' → logprob: -3.6867661476135254
    5. ')' → logprob: -4.061766147613525
    6. ' ' → logprob: -4.186766147613525
    7. ' の' → logprob: -5.186766147613525
    8. 'で' → logprob: -5.561766147613525
    9. ']' → logprob: -5.811766147613525
    10. '0' → logprob: -5.936766147613525

Token 274: 'ゾ' (ID: 157904)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.043765343725681305
    2. ' dist' → logprob: -3.9187653064727783
    3. 'distance' → logprob: -4.793765544891357
    4. '1' → logprob: -5.668765544891357
    5. ')' → logprob: -5.793765544891357
    6. 'visited' → logprob: -6.543765544891357
    7. 'd' → logprob: -6.918765544891357
    8. 'def' → logprob: -7.293765544891357
    9. '[' → logprob: -7.418765544891357
    10. '0' → logprob: -7.418765544891357

Token 275: 'ン' (ID: 4025)
  Prédit: 'ーン'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ーン' → logprob: -0.7579914927482605
    2. 'ン' → logprob: -0.8829914927482605
    3. 'ー' → logprob: -2.6329915523529053
    4. '��' → logprob: -4.757991313934326
    5. '�' → logprob: -5.132991313934326
    6. '_' → logprob: -5.632991313934326
    7. '-' → logprob: -6.007991313934326
    8. 'ombie' → logprob: -6.007991313934326
    9. '   ' → logprob: -6.257991313934326
    10. '0' → logprob: -6.382991313934326

Token 276: 'ビ' (ID: 24935)
  Prédit: 'ビ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ビ' → logprob: -0.011817174032330513
    2. 'ー' → logprob: -5.51181697845459
    3. 'b' → logprob: -5.88681697845459
    4. 'ン' → logprob: -6.38681697845459
    5. 'バ' → logprob: -7.51181697845459
    6. '_' → logprob: -7.88681697845459
    7. 'ビー' → logprob: -7.88681697845459
    8. 'bi' → logprob: -8.13681697845459
    9. 'ービ' → logprob: -8.38681697845459
    10. '_b' → logprob: -8.63681697845459

Token 277: 'から' (ID: 27500)
  Prédit: '支'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '支' → logprob: -0.02693537250161171
    2. 'の' → logprob: -4.026935577392578
    3. 'が' → logprob: -6.651935577392578
    4. 'に' → logprob: -6.901935577392578
    5. 's' → logprob: -7.026935577392578
    6. 'から' → logprob: -7.151935577392578
    7. ' ' → logprob: -7.526935577392578
    8. 'まで' → logprob: -7.651935577392578
    9. '距' → logprob: -7.776935577392578
    10. '```' → logprob: -7.776935577392578

Token 278: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.004137768410146236
    2. '距' → logprob: -6.004137992858887
    3. '0' → logprob: -7.254137992858887
    4. 'distance' → logprob: -8.254137992858887
    5. ' ' → logprob: -8.629137992858887
    6. ' の' → logprob: -8.879137992858887
    7. '```' → logprob: -9.504137992858887
    8. ')' → logprob: -9.754137992858887
    9. 's' → logprob: -10.504137992858887
    10. 'dist' → logprob: -10.629137992858887

Token 279: '最' (ID: 5889)
  Prédit: '距'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '距' → logprob: -0.059112466871738434
    2. 'distance' → logprob: -2.934112548828125
    3. 'dist' → logprob: -5.559112548828125
    4. ' distance' → logprob: -8.309112548828125
    5. '訪' → logprob: -10.309112548828125
    6. '最' → logprob: -10.559112548828125
    7. ' ' → logprob: -10.934112548828125
    8. '感染' → logprob: -11.184112548828125
    9. 'visited' → logprob: -11.809112548828125
    10. '距离' → logprob: -12.309112548828125

Token 280: '短' (ID: 40730)
  Prédit: '短'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '短' → logprob: -0.11786758154630661
    2. '距' → logprob: -2.3678674697875977
    3. 'short' → logprob: -4.867867469787598
    4. '近' → logprob: -5.492867469787598
    5. 'distance' → logprob: -6.867867469787598
    6. '終' → logprob: -6.992867469787598
    7. '初' → logprob: -7.242867469787598
    8. '良' → logprob: -7.492867469787598
    9. '長' → logprob: -7.867867469787598
    10. '接' → logprob: -8.117867469787598

Token 281: '距' (ID: 76027)
  Prédit: '距'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '距' → logprob: -0.004686445463448763
    2. 'distance' → logprob: -5.50468635559082
    3. ' \xe8\xb7' → logprob: -8.62968635559082
    4. 'dist' → logprob: -8.87968635559082
    5. ' ' → logprob: -9.25468635559082
    6. ' distance' → logprob: -9.62968635559082
    7. 'の' → logprob: -10.25468635559082
    8. '   ' → logprob: -10.50468635559082
    9. '距离' → logprob: -10.50468635559082
    10. '```' → logprob: -12.00468635559082

Token 282: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -0.003994461614638567
    2. '```' → logprob: -7.128994464874268
    3. '=' → logprob: -7.378994464874268
    4. '数' → logprob: -8.75399398803711
    5. '行' → logprob: -8.75399398803711
    6. '長' → logprob: -9.00399398803711
    7. '-' → logprob: -9.12899398803711
    8. '[' → logprob: -9.25399398803711
    9. '続' → logprob: -9.25399398803711
    10. '距' → logprob: -9.37899398803711

Token 283: '。' (ID: 788)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6213001608848572
    2. 'dist' → logprob: -1.371300220489502
    3. 'for' → logprob: -2.371300220489502
    4. ' for' → logprob: -3.121300220489502
    5. 'z' → logprob: -3.371300220489502
    6. '
' → logprob: -5.496300220489502
    7. '[' → logprob: -5.621300220489502
    8. ' =' → logprob: -5.746300220489502
    9. '<|end|>' → logprob: -5.871300220489502
    10. ')' → logprob: -5.871300220489502

Token 284: '-' (ID: 12)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1930703967809677
    2. ' for' → logprob: -2.443070411682129
    3. 'for' → logprob: -2.943070411682129
    4. ' 
' → logprob: -4.193070411682129
    5. '<|end|>' → logprob: -4.693070411682129
    6. '[' → logprob: -5.193070411682129
    7. ' ' → logprob: -6.568070411682129
    8. '
' → logprob: -6.693070411682129
    9. '  
' → logprob: -6.693070411682129
    10. '0' → logprob: -8.568070411682129

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.6934557505883276e-05
    2. ' ' → logprob: -10.000057220458984
    3. '   ' → logprob: -12.250057220458984
    4. 'dist' → logprob: -13.250057220458984
    5. '１' → logprob: -13.500057220458984
    6. '```' → logprob: -13.750057220458984
    7. '
' → logprob: -14.750057220458984
    8. '2' → logprob: -15.000057220458984
    9. '=' → logprob: -15.125057220458984
    10. '#' → logprob: -15.875057220458984

Token 286: 'は' (ID: 5205)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.5570011138916016
    2. ' for' → logprob: -1.9320011138916016
    3. ' ' → logprob: -2.1820011138916016
    4. ' is' → logprob: -3.5570011138916016
    5. 'の' → logprob: -3.9320011138916016
    6. ' =' → logprob: -4.057001113891602
    7. ' の' → logprob: -4.057001113891602
    8. ')' → logprob: -4.557001113891602
    9. 'は' → logprob: -4.807001113891602
    10. ' means' → logprob: -5.057001113891602

Token 287: '未' (ID: 16392)
  Prédit: '未'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '未' → logprob: -0.013226347975432873
    2. ' 未' → logprob: -5.138226509094238
    3. 'まだ' → logprob: -5.263226509094238
    4. '訪' → logprob: -6.638226509094238
    5. '未知' → logprob: -7.513226509094238
    6. '不' → logprob: -9.513226509094238
    7. '距' → logprob: -10.013226509094238
    8. ' ' → logprob: -10.388226509094238
    9. '   ' → logprob: -10.888226509094238
    10. '安全' → logprob: -11.513226509094238

Token 288: '訪' (ID: 150782)
  Prédit: '訪'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '訪' → logprob: -0.08236634731292725
    2. '到' → logprob: -3.082366466522217
    3. '探索' → logprob: -3.957366466522217
    4. 'visited' → logprob: -4.582366466522217
    5. 'visit' → logprob: -6.707366466522217
    6. '知' → logprob: -7.707366466522217
    7. '定' → logprob: -7.957366466522217
    8. '入力' → logprob: -8.332365989685059
    9. ' visited' → logprob: -8.832365989685059
    10. '距' → logprob: -8.832365989685059

Token 289: '問' (ID: 36302)
  Prédit: '問'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '問' → logprob: -0.03069460019469261
    2. ']' → logprob: -4.155694484710693
    3. '）' → logprob: -5.905694484710693
    4. '済' → logprob: -6.530694484710693
    5. '-' → logprob: -6.905694484710693
    6. '続' → logprob: -7.155694484710693
    7. 'れ' → logprob: -7.280694484710693
    8. 'ok' → logprob: -7.405694484710693
    9. '0' → logprob: -7.405694484710693
    10. '状態' → logprob: -7.530694484710693

Token 290: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6086822152137756
    2. 'for' → logprob: -1.2336821556091309
    3. ' for' → logprob: -1.8586821556091309
    4. '
' → logprob: -5.983682155609131
    5. 'dist' → logprob: -6.108682155609131
    6. '  
' → logprob: -7.233682155609131
    7. 'z' → logprob: -7.483682155609131
    8. '   ' → logprob: -7.858682155609131
    9. ')
' → logprob: -7.858682155609131
    10. ')' → logprob: -8.108682632446289

Token 291: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7645021080970764
    2. 'for' → logprob: -1.1395020484924316
    3. ' for' → logprob: -2.1395020484924316
    4. ')' → logprob: -3.5145020484924316
    5. '[' → logprob: -3.5145020484924316
    6. ',' → logprob: -5.389502048492432
    7. '(' → logprob: -5.514502048492432
    8. '   ' → logprob: -5.639502048492432
    9. ')
' → logprob: -5.764502048492432
    10. ' ' → logprob: -5.764502048492432

Token 292: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.41157105565071106
    2. 'dq' → logprob: -1.4115710258483887
    3. 'q' → logprob: -2.6615710258483887
    4. 'from' → logprob: -4.286571025848389
    5. 'deque' → logprob: -5.536571025848389
    6. 'que' → logprob: -5.536571025848389
    7. '   ' → logprob: -7.036571025848389
    8. 'd' → logprob: -7.411571025848389
    9. ' dq' → logprob: -8.161571502685547
    10. ' queue' → logprob: -8.911571502685547

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858805239200592
    2. ' =' → logprob: -3.0485880374908447
    3. '＝' → logprob: -14.548587799072266
    4. ' ' → logprob: -16.548587799072266
    5. '.append' → logprob: -18.173587799072266
    6. 'deque' → logprob: -18.548587799072266
    7. '.=' → logprob: -18.923587799072266
    8. '=q' → logprob: -18.923587799072266
    9. '.' → logprob: -19.173587799072266
    10. '   ' → logprob: -19.548587799072266

Token 294: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0004306692280806601
    2. ' deque' → logprob: -7.750430583953857
    3. 'collections' → logprob: -17.000431060791016
    4. 'Deque' → logprob: -19.750431060791016
    5. 'de' → logprob: -21.500431060791016
    6. ' ' → logprob: -22.375431060791016
    7. 'queue' → logprob: -22.500431060791016
    8. '```' → logprob: -22.500431060791016
    9. 'dq' → logprob: -22.750431060791016
    10. '   ' → logprob: -22.750431060791016

Token 295: '()

' (ID: 5874)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.038823846727609634
    2. '()' → logprob: -3.2888238430023193
    3. '([(' → logprob: -7.538824081420898
    4. '()
' → logprob: -8.788824081420898
    5. '(' → logprob: -9.913824081420898
    6. '((' → logprob: -10.538824081420898
    7. '([' → logprob: -11.788824081420898
    8. '([]' → logprob: -12.038824081420898
    9. 'z' → logprob: -12.538824081420898
    10. '()

' → logprob: -13.538824081420898

Token 296: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06505358964204788
    2. ' for' → logprob: -2.940053701400757
    3. '   ' → logprob: -4.690053462982178
    4. '	for' → logprob: -7.940053462982178
    5. '<|end|>' → logprob: -7.940053462982178
    6. '
' → logprob: -9.440053939819336
    7. 'Z' → logprob: -10.440053939819336
    8. '    
' → logprob: -10.690053939819336
    9. '<|end|>' → logprob: -11.690053939819336
    10. ')' → logprob: -11.815053939819336

Token 297: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.016942530870437622
    2. ' for' → logprob: -4.266942501068115
    3. '   ' → logprob: -5.891942501068115
    4. '	for' → logprob: -11.266942977905273
    5. '
' → logprob: -15.391942977905273
    6. ' ' → logprob: -15.641942977905273
    7. '    
' → logprob: -15.891942977905273
    8. '#' (adapté à ' #') → logprob: -16.641942977905273
    9. 'For' → logprob: -16.766942977905273
    10. '\t' → logprob: -17.391942977905273

Token 298: ' �' (ID: 9203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008215842768549919
    2. ' for' → logprob: -5.00821590423584
    3. '   ' → logprob: -6.50821590423584
    4. '	for' → logprob: -12.25821590423584
    5. 'from' → logprob: -13.75821590423584
    6. ' ' → logprob: -14.88321590423584
    7. 'z' → logprob: -15.00821590423584
    8. 'For' → logprob: -15.38321590423584
    9. 'import' → logprob: -15.50821590423584
    10. '0' → logprob: -16.008214950561523

Token 299: '�' (ID: 122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06909772753715515
    2. ' for' → logprob: -2.8190977573394775
    3. 'z' → logprob: -6.069097518920898
    4. 'b' → logprob: -6.444097518920898
    5. 'i' → logprob: -6.694097518920898
    6. '   ' → logprob: -7.444097518920898
    7. ' zombies' → logprob: -8.694097518920898
    8. '	for' → logprob: -8.944097518920898
    9. 's' → logprob: -8.944097518920898
    10. 'Z' → logprob: -9.194097518920898

Token 300: 'ン' (ID: 4025)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018179206177592278
    2. ' for' → logprob: -4.143179416656494
    3. '   ' → logprob: -6.393179416656494
    4. 'z' → logprob: -8.518178939819336
    5. ' ' → logprob: -9.768178939819336
    6. 's' → logprob: -10.268178939819336
    7. '
' → logprob: -10.643178939819336
    8. 'i' → logprob: -10.893178939819336
    9. 'range' → logprob: -10.893178939819336
    10. '  ' → logprob: -11.143178939819336

Token 301: 'ビ' (ID: 24935)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24899010360240936
    2. ' zombies' → logprob: -2.623990058898926
    3. 'z' → logprob: -3.123990058898926
    4. '   ' → logprob: -3.873990058898926
    5. '(' → logprob: -4.123990058898926
    6. '(z' → logprob: -4.498990058898926
    7. 'range' → logprob: -4.748990058898926
    8. 'queue' → logprob: -4.748990058898926
    9. ' zombie' → logprob: -5.123990058898926
    10. ' for' → logprob: -5.123990058898926

Token 302: '支' (ID: 18904)
  Prédit: '支'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '支' → logprob: -0.09828425198793411
    2. 'for' → logprob: -2.4732842445373535
    3. 'z' → logprob: -5.3482842445373535
    4. 's' → logprob: -5.9732842445373535
    5. 'controlled' → logprob: -7.4732842445373535
    6. ' for' → logprob: -7.5982842445373535
    7. 'control' → logprob: -7.8482842445373535
    8. 'support' → logprob: -8.973284721374512
    9. 'の' → logprob: -10.223284721374512
    10. 'controls' → logprob: -10.348284721374512

Token 303: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -0.00032521432149223983
    2. '支' → logprob: -8.125325202941895
    3. 'プ' → logprob: -12.375325202941895
    4. '```' → logprob: -12.750325202941895
    5. '制' → logprob: -13.250325202941895
    6. '害' → logprob: -13.375325202941895
    7. '#' → logprob: -13.625325202941895
    8. '배' → logprob: -13.625325202941895
    9. ' 配' → logprob: -14.000325202941895
    10. 'p' → logprob: -14.125325202941895

Token 304: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.45507150888442993
    2. 'town' → logprob: -1.7050714492797852
    3. ' towns' → logprob: -2.080071449279785
    4. 'for' → logprob: -3.205071449279785
    5. 'の' → logprob: -4.955071449279785
    6. 'z' → logprob: -5.205071449279785
    7. ' for' → logprob: -6.830071449279785
    8. '   ' → logprob: -7.330071449279785
    9. ' town' → logprob: -7.455071449279785
    10. 'cities' → logprob: -7.455071449279785

Token 305: 'は' (ID: 5205)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5838884711265564
    2. ' =' → logprob: -1.8338885307312012
    3. ' for' → logprob: -1.9588885307312012
    4. '   ' → logprob: -2.458888530731201
    5. '=' → logprob: -4.083888530731201
    6. '.extend' → logprob: -4.083888530731201
    7. 'の' → logprob: -5.333888530731201
    8. '.append' → logprob: -5.958888530731201
    9. 'に' → logprob: -6.083888530731201
    10. 'を' → logprob: -6.083888530731201

Token 306: '距' (ID: 76027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22225339710712433
    2. ' for' → logprob: -1.722253441810608
    3. '   ' → logprob: -4.222253322601318
    4. '0' → logprob: -5.597253322601318
    5. ' ' → logprob: -7.222253322601318
    6. ')' → logprob: -8.597253799438477
    7. 'dist' → logprob: -8.722253799438477
    8. 'deque' → logprob: -9.222253799438477
    9. ' zombies' → logprob: -9.472253799438477
    10. '<|end|>' → logprob: -9.597253799438477

Token 307: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -0.0026210742071270943
    2. '0' → logprob: -6.627621173858643
    3. '```' → logprob: -8.252620697021484
    4. '1' → logprob: -8.627620697021484
    5. '点' → logprob: -9.252620697021484
    6. '=' → logprob: -9.377620697021484
    7. '离' → logprob: -9.502620697021484
    8. '   ' → logprob: -9.877620697021484
    9. 'z' → logprob: -10.127620697021484
    10. '[' → logprob: -10.252620697021484

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011176437139511108
    2. ' ' → logprob: -4.636176586151123
    3. '   ' → logprob: -6.636176586151123
    4. '=' → logprob: -9.761176109313965
    5. ' =' → logprob: -10.261176109313965
    6. '０' → logprob: -12.386176109313965
    7. '  ' → logprob: -13.136176109313965
    8. '    ' → logprob: -13.511176109313965
    9. '(' → logprob: -13.636176109313965
    10. '[' → logprob: -13.761176109313965

Token 309: 'で' (ID: 4344)
  Prédit: 'として'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'として' → logprob: -0.1879693567752838
    2. 'for' → logprob: -2.687969446182251
    3. '=' → logprob: -3.187969446182251
    4. 'で' → logprob: -3.812969446182251
    5. 'に' → logprob: -4.812969207763672
    6. '   ' → logprob: -4.812969207763672
    7. ' =' → logprob: -5.312969207763672
    8. ':' → logprob: -5.937969207763672
    9. ',' → logprob: -6.062969207763672
    10. ' for' → logprob: -6.187969207763672

Token 310: 'キ' (ID: 18368)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07987771928310394
    2. ' for' → logprob: -2.5798776149749756
    3. '   ' → logprob: -6.954877853393555
    4. '	for' → logprob: -11.329877853393555
    5. ' ' → logprob: -12.079877853393555
    6. 'visited' → logprob: -12.079877853393555
    7. 'dist' → logprob: -12.954877853393555
    8. ' visited' → logprob: -13.454877853393555
    9. 'queue' → logprob: -13.704877853393555
    10. '       ' → logprob: -13.704877853393555

Token 311: 'ュー' (ID: 51978)
  Prédit: 'ュー'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ュー' → logprob: -0.011234678328037262
    2. 'ュ' → logprob: -5.136234760284424
    3. 'ャ' → logprob: -5.511234760284424
    4. 'ャン' → logprob: -7.761234760284424
    5. 'ゃ' → logprob: -7.886234760284424
    6. 'ョ' → logprob: -8.511234283447266
    7. 'ー' → logprob: -8.636234283447266
    8. 'ue' → logprob: -10.886234283447266
    9. '```' → logprob: -11.136234283447266
    10. 'ェ' → logprob: -11.386234283447266

Token 312: 'に' (ID: 5280)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.030211035162210464
    2. 'に' → logprob: -3.7802109718322754
    3. '.extend' → logprob: -5.030210971832275
    4. 'append' → logprob: -8.405211448669434
    5. '.' → logprob: -9.655211448669434
    6. 'へ' → logprob: -10.155211448669434
    7. '   ' → logprob: -10.405211448669434
    8. '.enqueue' → logprob: -10.905211448669434
    9. 'を' → logprob: -11.780211448669434
    10. ' に' → logprob: -12.655211448669434

Token 313: '入' (ID: 8130)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.14253611862659454
    2. 'append' → logprob: -2.142536163330078
    3. '.extend' → logprob: -4.517536163330078
    4. 'enqueue' → logprob: -6.142536163330078
    5. '.enqueue' → logprob: -7.517536163330078
    6. 'extend' → logprob: -7.767536163330078
    7. 'put' → logprob: -7.892536163330078
    8. 'queue' → logprob: -8.017536163330078
    9. '入' → logprob: -8.517536163330078
    10. 'push' → logprob: -9.517536163330078

Token 314: 'れる' (ID: 177495)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.7406003475189209
    2. 'queue' → logprob: -0.9906003475189209
    3. 'れて' → logprob: -2.365600347518921
    4. 'れる' → logprob: -3.490600347518921
    5. 'る' → logprob: -5.1156005859375
    6. '(queue' → logprob: -5.1156005859375
    7. 'deque' → logprob: -6.1156005859375
    8. '(' → logprob: -6.1156005859375
    9. 'り' → logprob: -6.1156005859375
    10. 'append' → logprob: -6.6156005859375

Token 315: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11897343397140503
    2. '   ' → logprob: -2.24397349357605
    3. ' for' → logprob: -5.118973255157471
    4. '
' → logprob: -8.993973731994629
    5. '	for' → logprob: -10.743973731994629
    6. ' ' → logprob: -13.743973731994629
    7. '    
' → logprob: -14.118973731994629
    8. ')
' → logprob: -14.993973731994629
    9. 'z' → logprob: -15.118973731994629
    10. '  ' → logprob: -15.368973731994629

Token 316: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004736872389912605
    2. ' for' → logprob: -5.50473690032959
    3. '   ' → logprob: -7.37973690032959
    4. '
' → logprob: -10.62973690032959
    5. '	for' → logprob: -11.87973690032959
    6. ')' → logprob: -13.50473690032959
    7. ' ' → logprob: -14.37973690032959
    8. ')
' → logprob: -15.25473690032959
    9. '    
' → logprob: -15.75473690032959
    10. ' 
' → logprob: -16.004735946655273

Token 317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1305706650018692
    2. ' for' → logprob: -2.130570650100708
    3. '   ' → logprob: -5.630570888519287
    4. '	for' → logprob: -10.505570411682129
    5. '
' → logprob: -11.755570411682129
    6. ' zombies' → logprob: -11.880570411682129
    7. 'z' → logprob: -13.130570411682129
    8. ' zombie' → logprob: -13.630570411682129
    9. '[z' → logprob: -14.255570411682129
    10. '    
' → logprob: -14.380570411682129

Token 318: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07180389761924744
    2. ' z' → logprob: -2.6968038082122803
    3. ' zombie' → logprob: -6.446804046630859
    4. ' zomb' → logprob: -9.44680404663086
    5. 'zi' → logprob: -10.19680404663086
    6. 'v' → logprob: -10.69680404663086
    7. '	z' → logprob: -10.69680404663086
    8. 'x' → logprob: -11.19680404663086
    9. 'zm' → logprob: -11.32180404663086
    10. 'i' → logprob: -11.57180404663086

Token 319: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07019440084695816
    2. 'in' → logprob: -2.6951944828033447
    3. ' ' → logprob: -9.070194244384766
    4. 'n' → logprob: -10.570194244384766
    5. '_in' → logprob: -10.695194244384766
    6. '	in' → logprob: -11.070194244384766
    7. '   ' → logprob: -11.445194244384766
    8. '　' → logprob: -11.445194244384766
    9. '_' → logprob: -11.695194244384766
    10. 'z' → logprob: -11.945194244384766

Token 320: ' zombies' (ID: 90576)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07904886454343796
    2. ' zombies' → logprob: -2.5790488719940186
    3. ' ' → logprob: -9.954049110412598
    4. '   ' → logprob: -9.954049110412598
    5. ' z' → logprob: -10.204049110412598
    6. ' zombie' → logprob: -12.329049110412598
    7. ' zomb' → logprob: -12.329049110412598
    8. '[z' → logprob: -12.454049110412598
    9. '(z' → logprob: -12.704049110412598
    10. '	z' → logprob: -12.954049110412598

Token 321: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20199404656887054
    2. ':' → logprob: -1.7019940614700317
    3. '   ' → logprob: -8.201993942260742
    4. '):
' → logprob: -8.701993942260742
    5. ':
' → logprob: -9.076993942260742
    6. '):' → logprob: -11.326993942260742
    7. ' :
' → logprob: -12.451993942260742
    8. '：
' → logprob: -12.826993942260742
    9. '       ' → logprob: -13.326993942260742
    10. '():
' → logprob: -13.701993942260742

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01815556176006794
    2. '   ' → logprob: -4.393155574798584
    3. ':
' → logprob: -5.893155574798584
    4. ' queue' → logprob: -6.893155574798584
    5. ':' → logprob: -7.518155574798584
    6. ' dist' → logprob: -7.768155574798584
    7. 'dist' → logprob: -8.268155097961426
    8. '	queue' → logprob: -9.143155097961426
    9. '):
' → logprob: -9.268155097961426
    10. '(queue' → logprob: -9.518155097961426

Token 323: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.023723021149635315
    2. ' dist' → logprob: -4.023723125457764
    3. 'queue' → logprob: -5.523723125457764
    4. '   ' → logprob: -6.648723125457764
    5. ' queue' → logprob: -8.398722648620605
    6. '	dist' → logprob: -11.023722648620605
    7. ' ' → logprob: -11.773722648620605
    8. '       ' → logprob: -12.023722648620605
    9. 'distance' → logprob: -12.398722648620605
    10. '  ' → logprob: -13.211222648620605

Token 324: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. ' [' → logprob: -16.0
    4. 'z' → logprob: -19.125
    5. ' z' → logprob: -20.25
    6. '[q' → logprob: -20.25
    7. '[u' → logprob: -20.75
    8. '[x' → logprob: -20.875
    9. '[s' → logprob: -20.875
    10. '```' → logprob: -21.0

Token 325: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.97155623533763e-05
    2. ']=' → logprob: -9.750089645385742
    3. ' ]' → logprob: -10.375089645385742
    4. '=' → logprob: -16.375089645385742
    5. ' =' → logprob: -17.375089645385742
    6. ')' → logprob: -17.625089645385742
    7. '   ' → logprob: -18.625089645385742
    8. ']
' → logprob: -19.625089645385742
    9. ']==' → logprob: -20.125089645385742
    10. '']' → logprob: -20.250089645385742

Token 326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485873706638813
    2. ' =' → logprob: -3.0485873222351074
    3. '＝' → logprob: -17.923587799072266
    4. ' ' → logprob: -19.548587799072266
    5. '.=' → logprob: -20.048587799072266
    6. ']=' → logprob: -20.048587799072266
    7. '0' → logprob: -20.048587799072266
    8. ')=' → logprob: -20.298587799072266
    9. ',' → logprob: -20.798587799072266
    10. '=
' → logprob: -21.048587799072266

Token 327: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -20.25
    4. '   ' → logprob: -20.875
    5. '０' → logprob: -21.0
    6. '```' → logprob: -22.625
    7. '০' → logprob: -22.75
    8. '000' → logprob: -23.25
    9. '00' → logprob: -23.375
    10. '٠' → logprob: -23.625

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -19.75
    4. '０' → logprob: -20.625
    5. '۰' → logprob: -21.375
    6. '000' → logprob: -22.875
    7. '00' → logprob: -23.25
    8. '```' → logprob: -23.875
    9. '০' → logprob: -24.0625
    10. '=' → logprob: -24.125

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030404587741941214
    2. '
' → logprob: -6.503040313720703
    3. 'queue' → logprob: -7.128040313720703
    4. ' queue' → logprob: -8.378040313720703
    5. '   ' → logprob: -8.503040313720703
    6. '	queue' → logprob: -9.253040313720703
    7. '<|end|>' → logprob: -10.003040313720703
    8. ',' → logprob: -10.003040313720703
    9. '	' → logprob: -10.253040313720703
    10. '(queue' → logprob: -10.253040313720703

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028828566428273916
    2. '
' → logprob: -6.127882957458496
    3. '   ' → logprob: -7.752882957458496
    4. 'queue' → logprob: -9.002882957458496
    5. ' queue' → logprob: -10.252882957458496
    6. '<|end|>' → logprob: -10.502882957458496
    7. '	queue' → logprob: -10.627882957458496
    8. ',' → logprob: -11.502882957458496
    9. '	' → logprob: -11.627882957458496
    10. '```' → logprob: -11.627882957458496

Token 331: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -1.7120533811976202e-05
    2. ' queue' → logprob: -11.250017166137695
    3. '   ' → logprob: -12.500017166137695
    4. '       ' → logprob: -15.250017166137695
    5. '	queue' → logprob: -17.375017166137695
    6. '(queue' → logprob: -19.000017166137695
    7. '```' → logprob: -19.125017166137695
    8. 'que' → logprob: -19.375017166137695
    9. ' ' → logprob: -19.625017166137695
    10. '.queue' → logprob: -19.750017166137695

Token 332: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.180879816180095e-05
    2. '.' → logprob: -10.125051498413086
    3. '.p' → logprob: -12.375051498413086
    4. '.enqueue' → logprob: -12.625051498413086
    5. '.extend' → logprob: -12.750051498413086
    6. '.app' → logprob: -15.250051498413086
    7. ' .' → logprob: -15.375051498413086
    8. '.push' → logprob: -15.500051498413086
    9. '.put' → logprob: -15.750051498413086
    10. ').' → logprob: -16.250051498413086

Token 333: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.250007629394531
    3. '((' → logprob: -12.750007629394531
    4. ' (' → logprob: -15.250007629394531
    5. 'z' → logprob: -16.25000762939453
    6. '(q' → logprob: -18.25000762939453
    7. 'left' → logprob: -19.75000762939453
    8. '(
' → logprob: -19.87500762939453
    9. ' z' → logprob: -20.00000762939453
    10. '(i' → logprob: -20.00000762939453

Token 334: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -13.125003814697266
    3. ' )' → logprob: -13.875003814697266
    4. '）' → logprob: -14.375003814697266
    5. '   ' → logprob: -16.375003814697266
    6. ')

' → logprob: -16.500003814697266
    7. '))' → logprob: -17.125003814697266
    8. ')`' → logprob: -17.500003814697266
    9. ')
' → logprob: -17.875003814697266
    10. '`)' → logprob: -18.750003814697266

Token 335: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36617612838745117
    2. 'while' → logprob: -1.8661761283874512
    3. '   ' → logprob: -1.9911761283874512
    4. ' while' → logprob: -4.491176128387451
    5. '    
' → logprob: -6.491176128387451
    6. ')' → logprob: -6.991176128387451
    7. '	while' → logprob: -7.491176128387451
    8. '  
' → logprob: -7.866176128387451
    9. 'While' → logprob: -8.74117660522461
    10. '```' → logprob: -8.74117660522461

Token 336: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19317761063575745
    2. 'while' → logprob: -2.3181777000427246
    3. ' while' → logprob: -2.5681777000427246
    4. '
' → logprob: -8.193177223205566
    5. '	while' → logprob: -8.818177223205566
    6. '    
' → logprob: -9.443177223205566
    7. 'While' → logprob: -11.318177223205566
    8. '```' → logprob: -11.818177223205566
    9. ')' → logprob: -12.568177223205566
    10. '    ' → logprob: -12.818177223205566

Token 337: ' BFS' (ID: 190016)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10770998895168304
    2. ' while' → logprob: -2.8577098846435547
    3. '   ' → logprob: -3.1077098846435547
    4. '
' → logprob: -12.107709884643555
    5. '	while' → logprob: -13.857709884643555
    6. ' ' → logprob: -14.357709884643555
    7. 'While' → logprob: -14.857709884643555
    8. '```' → logprob: -14.982709884643555
    9. '    
' → logprob: -15.232709884643555
    10. 'for' → logprob: -15.357709884643555

Token 338: 'で' (ID: 4344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018511608242988586
    2. '()' → logprob: -4.518511772155762
    3. '()
' → logprob: -5.268511772155762
    4. '
' → logprob: -6.768511772155762
    5. ':' → logprob: -7.643511772155762
    6. '    
' → logprob: -7.893511772155762
    7. ':
' → logprob: -10.143511772155762
    8. '(
' → logprob: -10.143511772155762
    9. '():
' → logprob: -10.143511772155762
    10. 'while' → logprob: -10.518511772155762

Token 339: '距' (ID: 76027)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.0748322457075119
    2. ' queue' → logprob: -2.6998322010040283
    3. 'dist' → logprob: -5.699832439422607
    4. '   ' → logprob: -7.324832439422607
    5. 'while' → logprob: -7.324832439422607
    6. ' dist' → logprob: -9.32483196258545
    7. 'distance' → logprob: -10.32483196258545
    8. ' while' → logprob: -10.57483196258545
    9. ' ' → logprob: -10.69983196258545
    10. '(queue' → logprob: -11.32483196258545

Token 340: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -0.0009275413467548788
    2. '続' → logprob: -7.875927448272705
    3. '除' → logprob: -8.000927925109863
    4. '復' → logprob: -10.125927925109863
    5. '```' → logprob: -10.250927925109863
    6. '続きを' → logprob: -11.125927925109863
    7. '离' → logprob: -11.500927925109863
    8. '長' → logprob: -11.625927925109863
    9. '伸' → logprob: -11.750927925109863
    10. '縮' → logprob: -11.875927925109863

Token 341: 'S' (ID: 50)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.026647545397281647
    2. '   ' → logprob: -4.526647567749023
    3. '更新' → logprob: -6.026647567749023
    4. 'の' → logprob: -6.151647567749023
    5. '計' → logprob: -6.276647567749023
    6. 'update' → logprob: -6.526647567749023
    7. '探索' → logprob: -7.026647567749023
    8. ' を' → logprob: -7.276647567749023
    9. 'for' → logprob: -7.526647567749023
    10. '```' → logprob: -7.526647567749023

Token 342: '以内' (ID: 131530)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16133993864059448
    2. '以内' → logprob: -2.4113399982452393
    3. 'を' → logprob: -4.16133975982666
    4. '+=' → logprob: -4.41133975982666
    5. ' +=' → logprob: -4.53633975982666
    6. ' を' → logprob: -5.03633975982666
    7. 'まで' → logprob: -5.53633975982666
    8. ' +' → logprob: -5.53633975982666
    9. '   ' → logprob: -6.41133975982666
    10. ' ' → logprob: -7.16133975982666

Token 343: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.262082576751709
    2. 'まで' → logprob: -2.262082576751709
    3. 'を' → logprob: -2.387082576751709
    4. 'while' → logprob: -3.637082576751709
    5. 'の' → logprob: -6.012082576751709
    6. 'for' → logprob: -6.512082576751709
    7. ' を' → logprob: -6.637082576751709
    8. ' while' → logprob: -6.887082576751709
    9. 'に' → logprob: -7.762082576751709
    10. 'で' → logprob: -8.012083053588867

Token 344: '町' (ID: 92479)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1386564075946808
    2. ' queue' → logprob: -2.2636563777923584
    3. 'neighbor' → logprob: -5.0136566162109375
    4. 'node' → logprob: -5.8886566162109375
    5. ' towns' → logprob: -5.8886566162109375
    6. 'neighbors' → logprob: -6.0136566162109375
    7. ' nodes' → logprob: -6.3886566162109375
    8. 'while' → logprob: -6.7636566162109375
    9. ' node' → logprob: -6.8886566162109375
    10. '町' → logprob: -6.8886566162109375

Token 345: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.35935401916503906
    2. 'while' → logprob: -1.734354019165039
    3. '   ' → logprob: -2.234354019165039
    4. 'まで' → logprob: -4.734354019165039
    5. ' を' → logprob: -5.484354019165039
    6. 'for' → logprob: -5.734354019165039
    7. ' while' → logprob: -6.984354019165039
    8. 'の' → logprob: -7.859354019165039
    9. 'に' → logprob: -8.609354019165039
    10. '
' → logprob: -8.734354019165039

Token 346: '求' (ID: 16339)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.8218725919723511
    2. 'b' → logprob: -1.071872591972351
    3. '探索' → logprob: -1.946872591972351
    4. '探' → logprob: -3.8218727111816406
    5. '判' → logprob: -4.071872711181641
    6. '
' → logprob: -4.821872711181641
    7. 'visited' → logprob: -4.821872711181641
    8. ' bfs' → logprob: -5.196872711181641
    9. ' while' → logprob: -6.071872711181641
    10. '計' → logprob: -6.571872711181641

Token 347: 'め' (ID: 17693)
  Prédit: 'め'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'め' → logprob: -0.00015633940347470343
    2. 'け' → logprob: -10.50015640258789
    3. 'る' → logprob: -10.62515640258789
    4. '_' → logprob: -10.75015640258789
    5. '
' → logprob: -11.00015640258789
    6. '```' → logprob: -11.25015640258789
    7. '解' → logprob: -11.62515640258789
    8. '   ' → logprob: -11.87515640258789
    9. '出' → logprob: -12.12515640258789
    10. 'ま' → logprob: -12.25015640258789

Token 348: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.004429170861840248
    2. 'て' → logprob: -6.254429340362549
    3. 'め' → logprob: -7.504429340362549
    4. '   ' → logprob: -7.629429340362549
    5. '出' → logprob: -7.754429340362549
    6. '
' → logprob: -8.37942886352539
    7. '```' → logprob: -8.50442886352539
    8. 'なが' → logprob: -9.12942886352539
    9. 'く' → logprob: -9.50442886352539
    10. 'ます' → logprob: -9.75442886352539

Token 349: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011596024967730045
    2. 'while' → logprob: -5.011596202850342
    3. '
' → logprob: -5.511596202850342
    4. ' while' → logprob: -7.261596202850342
    5. '    
' → logprob: -9.261595726013184
    6. '```' → logprob: -10.886595726013184
    7. '	while' → logprob: -11.511595726013184
    8. 'While' → logprob: -14.011595726013184
    9. '  
' → logprob: -14.511595726013184
    10. '
' → logprob: -15.011595726013184

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003005464968737215
    2. 'while' → logprob: -8.375300407409668
    3. ' while' → logprob: -9.625300407409668
    4. '
' → logprob: -13.375300407409668
    5. '```' → logprob: -13.500300407409668
    6. '    
' → logprob: -14.250300407409668
    7. '	while' → logprob: -15.625300407409668
    8. '       ' → logprob: -17.625301361083984
    9. '   ' → logprob: -17.625301361083984
    10. 'While' → logprob: -18.250301361083984

Token 351: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030584074556827545
    2. ' while' → logprob: -3.6555840969085693
    3. 'while' (adapté à ' while') → logprob: -5.53058385848999
    4. '
' → logprob: -8.155584335327148
    5. '    
' → logprob: -11.155584335327148
    6. '	while' → logprob: -12.405584335327148
    7. '```' → logprob: -12.905584335327148
    8. ' 
' → logprob: -13.530584335327148
    9. '   ' → logprob: -14.905584335327148
    10. '    ' → logprob: -14.905584335327148

Token 352: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.001511408481746912
    2. 'queue' → logprob: -6.501511573791504
    3. '(queue' → logprob: -12.001511573791504
    4. ' len' → logprob: -13.126511573791504
    5. ' ' → logprob: -14.876511573791504
    6. '	queue' → logprob: -15.001511573791504
    7. '   ' → logprob: -16.751510620117188
    8. 'len' → logprob: -17.126510620117188
    9. '  ' → logprob: -17.376510620117188
    10. '
' → logprob: -18.251510620117188

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060605209320783615
    2. ':
' → logprob: -2.93560528755188
    3. '.p' → logprob: -5.185605049133301
    4. '.append' → logprob: -10.3106050491333
    5. '.' → logprob: -10.6856050491333
    6. '.pop' → logprob: -11.3106050491333
    7. '   ' → logprob: -11.9356050491333
    8. '():' → logprob: -12.0606050491333
    9. '():
' → logprob: -12.3106050491333
    10. '.:' → logprob: -12.4356050491333

Token 354: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29132768511772156
    2. '       ' → logprob: -1.416327714920044
    3. ' v' → logprob: -4.916327476501465
    4. 'v' → logprob: -6.291327476501465
    5. '```' → logprob: -8.041327476501465
    6. ' current' → logprob: -8.666327476501465
    7. ' u' → logprob: -9.041327476501465
    8. '    ' → logprob: -9.416327476501465
    9. ' node' → logprob: -9.791327476501465
    10. '     ' → logprob: -10.416327476501465

Token 355: ' now' (ID: 1954)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.43479761481285095
    2. 'v' → logprob: -1.1847976446151733
    3. ' u' → logprob: -3.434797525405884
    4. ' v' → logprob: -4.559797763824463
    5. 'cur' → logprob: -6.309797763824463
    6. 'x' → logprob: -7.184797763824463
    7. 'current' → logprob: -7.184797763824463
    8. '   ' → logprob: -7.934797763824463
    9. ' current' → logprob: -8.809797286987305
    10. 'node' → logprob: -9.184797286987305

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141655206680298
    2. '=' → logprob: -1.7014164924621582
    3. '＝' → logprob: -13.326416969299316
    4. '   ' → logprob: -13.951416969299316
    5. ' ' → logprob: -15.201416969299316
    6. ',' → logprob: -15.576416969299316
    7. ')' → logprob: -16.826416015625
    8. '	' → logprob: -16.826416015625
    9. '    ' → logprob: -17.076416015625
    10. ')=' → logprob: -17.451416015625

Token 357: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.011048054322600365
    2. ' queue' → logprob: -4.511047840118408
    3. 'que' → logprob: -16.26104736328125
    4. '	queue' → logprob: -16.38604736328125
    5. ' ' → logprob: -17.01104736328125
    6. '(queue' → logprob: -17.63604736328125
    7. '   ' → logprob: -17.76104736328125
    8. 'deque' → logprob: -18.01104736328125
    9. '.queue' → logprob: -19.13604736328125
    10. '  ' → logprob: -19.63604736328125

Token 358: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.37500286102295
    3. '.pop' → logprob: -13.37500286102295
    4. ' .' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '.append' → logprob: -18.500003814697266
    7. 'p' → logprob: -19.000003814697266
    8. '=' → logprob: -19.125003814697266
    9. '.dequeue' → logprob: -19.500003814697266
    10. ' p' → logprob: -21.000003814697266

Token 359: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.002490045502781868
    2. 'op' → logprob: -6.002490043640137
    3. 'ople' → logprob: -11.377490043640137
    4. 'opt' → logprob: -13.502490043640137
    5. 'opl' → logprob: -14.002490043640137
    6. 'p' → logprob: -14.752490043640137
    7. 'oplevel' → logprob: -17.127490997314453
    8. 'opy' → logprob: -17.127490997314453
    9. 'pop' → logprob: -17.377490997314453
    10. 'opf' → logprob: -17.377490997314453

Token 360: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4917397201061249
    2. '
' → logprob: -1.2417397499084473
    3. '()
' → logprob: -3.1167397499084473
    4. 'for' → logprob: -3.6167397499084473
    5. '   ' → logprob: -4.866739749908447
    6. ' for' → logprob: -5.116739749908447
    7. '        
' → logprob: -5.366739749908447
    8. ')
' → logprob: -5.991739749908447
    9. '()' → logprob: -6.241739749908447
    10. '    
' → logprob: -6.616739749908447

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07595421373844147
    2. '   ' → logprob: -2.8259541988372803
    3. ' for' → logprob: -4.575954437255859
    4. 'for' → logprob: -6.075954437255859
    5. ' if' → logprob: -7.200954437255859
    6. 'if' → logprob: -7.950954437255859
    7. '        
' → logprob: -9.07595443725586
    8. '```' → logprob: -11.07595443725586
    9. '    ' → logprob: -11.20095443725586
    10. '    
' → logprob: -11.57595443725586

Token 362: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20213624835014343
    2. 'for' → logprob: -1.7021362781524658
    3. ' if' → logprob: -7.452136039733887
    4. ' for' → logprob: -9.452136039733887
    5. '   ' → logprob: -9.952136039733887
    6. '       ' → logprob: -11.077136039733887
    7. 'dist' → logprob: -14.827136039733887
    8. 'd' → logprob: -15.327136039733887
    9. '        
' → logprob: -16.202136993408203
    10. '    
' → logprob: -16.577136993408203

Token 363: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0007102862582542002
    2. ' dist' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.250710487365723
    4. '	dist' → logprob: -15.625710487365723
    5. '(dist' → logprob: -17.875709533691406
    6. ' ' → logprob: -19.500709533691406
    7. '_dist' → logprob: -20.125709533691406
    8. '.dist' → logprob: -21.125709533691406
    9. '  ' → logprob: -21.375709533691406
    10. 'Dist' → logprob: -21.875709533691406

Token 364: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: 0.0
    2. '[next' → logprob: -17.5
    3. 'now' → logprob: -18.875
    4. '[' → logprob: -19.375
    5. ' [' → logprob: -20.875
    6. '[current' → logprob: -21.0
    7. '	now' → logprob: -21.0
    8. ' now' → logprob: -21.0
    9. '   ' → logprob: -21.5
    10. '(now' → logprob: -22.0

Token 365: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15584872663021088
    2. '<' → logprob: -2.280848741531372
    3. '>=' → logprob: -4.155848503112793
    4. ']>=' → logprob: -4.405848503112793
    5. '+' → logprob: -5.405848503112793
    6. '==' → logprob: -5.655848503112793
    7. ' <' → logprob: -5.905848503112793
    8. ']==' → logprob: -6.780848503112793
    9. ']<' → logprob: -6.780848503112793
    10. '<S' → logprob: -8.030848503112793

Token 366: ' ==' (ID: 951)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3884803056716919
    2. '<' → logprob: -2.1384801864624023
    3. ' >=' → logprob: -2.1384801864624023
    4. ' <' → logprob: -2.8884801864624023
    5. '==' → logprob: -3.7634801864624023
    6. ' ==' → logprob: -5.263480186462402
    7. '<S' → logprob: -6.638480186462402
    8. ' ' → logprob: -7.888480186462402
    9. '=' → logprob: -9.013480186462402
    10. '+' → logprob: -9.013480186462402

Token 367: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -5.836499985889532e-05
    2. ' S' → logprob: -9.7500581741333
    3. ' ' → logprob: -19.500059127807617
    4. '	S' → logprob: -20.000059127807617
    5. '   ' → logprob: -20.500059127807617
    6. '
' → logprob: -20.750059127807617
    7. '>S' → logprob: -21.875059127807617
    8. '(S' → logprob: -22.625059127807617
    9. '=S' → logprob: -22.625059127807617
    10. '0' → logprob: -22.750059127807617

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3169507086277008
    2. ':
' → logprob: -1.3169506788253784
    3. '       ' → logprob: -5.941950798034668
    4. '   ' → logprob: -7.566950798034668
    5. '           ' → logprob: -7.566950798034668
    6. 'continue' → logprob: -11.941950798034668
    7. ':return' → logprob: -12.316950798034668
    8. ':
' → logprob: -12.691950798034668
    9. '	   ' → logprob: -13.691950798034668
    10. 'break' → logprob: -13.816950798034668

Token 369: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025376513600349426
    2. 'continue' → logprob: -4.025376319885254
    3. '   ' → logprob: -5.275376319885254
    4. ' continue' → logprob: -6.275376319885254
    5. '	continue' → logprob: -8.650376319885254
    6. '           ' → logprob: -10.775376319885254
    7. '	   ' → logprob: -13.025376319885254
    8. ' ' → logprob: -13.650376319885254
    9. '	' → logprob: -14.025376319885254
    10. '_continue' → logprob: -14.275376319885254

Token 370: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0012638057814911008
    2. ' continue' → logprob: -7.251263618469238
    3. '   ' → logprob: -7.501263618469238
    4. '	continue' → logprob: -14.251263618469238
    5. 'break' → logprob: -15.001263618469238
    6. '       ' → logprob: -15.501263618469238
    7. ' ' → logprob: -17.376264572143555
    8. 'contin' → logprob: -17.751264572143555
    9. 'continu' → logprob: -18.126264572143555
    10. '           ' → logprob: -18.876264572143555

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021438058465719223
    2. 'for' → logprob: -4.646438121795654
    3. ' for' → logprob: -4.771438121795654
    4. '   ' → logprob: -5.771438121795654
    5. '        
' → logprob: -10.896437644958496
    6. '	for' → logprob: -12.396437644958496
    7. ' ' → logprob: -13.521437644958496
    8. '
' → logprob: -13.646437644958496
    9. '```' → logprob: -13.646437644958496
    10. '           ' → logprob: -14.146437644958496

Token 372: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3346196115016937
    2. ' for' → logprob: -1.8346196413040161
    3. 'for' → logprob: -2.2096195220947266
    4. '       ' → logprob: -4.334619522094727
    5. '    
' → logprob: -7.459619522094727
    6. '	for' → logprob: -7.584619522094727
    7. '```' → logprob: -8.334619522094727
    8. '
' → logprob: -8.584619522094727
    9. '        
' → logprob: -8.584619522094727
    10. '<|end|>' → logprob: -9.584619522094727

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0046835956163704395
    2. ' for' → logprob: -5.754683494567871
    3. '   ' → logprob: -6.504683494567871
    4. '       ' → logprob: -12.129683494567871
    5. '	for' → logprob: -13.004683494567871
    6. '```' → logprob: -14.379683494567871
    7. '    
' → logprob: -16.629684448242188
    8. ' ' → logprob: -18.004684448242188
    9. '``' → logprob: -18.254684448242188
    10. '        
' → logprob: -18.879684448242188

Token 374: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -1.1609740257263184
    2. 'n' → logprob: -1.4109740257263184
    3. 'next' → logprob: -1.6609740257263184
    4. 'nx' → logprob: -1.6609740257263184
    5. 'to' → logprob: -3.1609740257263184
    6. 'nv' → logprob: -4.535974025726318
    7. 'neighbor' → logprob: -5.660974025726318
    8. ' nex' → logprob: -6.035974025726318
    9. 'nei' → logprob: -6.785974025726318
    10. 'ne' → logprob: -6.910974025726318

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12695415318012238
    2. 'in' → logprob: -2.1269540786743164
    3. ' ' → logprob: -11.501954078674316
    4. '	in' → logprob: -11.876954078674316
    5. '[in' → logprob: -12.876954078674316
    6. '[now' → logprob: -13.376954078674316
    7. '[' → logprob: -13.876954078674316
    8. 'n' → logprob: -14.251954078674316
    9. '_in' → logprob: -14.501954078674316
    10. '   ' → logprob: -15.001954078674316

Token 376: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.004079112783074379
    2. ' graph' → logprob: -5.504079341888428
    3. '	graph' → logprob: -14.25407886505127
    4. '   ' → logprob: -17.129079818725586
    5. '(graph' → logprob: -18.754079818725586
    6. '_graph' → logprob: -20.629079818725586
    7. 'Graph' → logprob: -20.629079818725586
    8. 'graphql' → logprob: -21.004079818725586
    9. ' ' → logprob: -22.004079818725586
    10. '.graph' → logprob: -22.379079818725586

Token 377: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: 0.0
    2. 'now' → logprob: -17.125
    3. '[current' → logprob: -17.5
    4. '[next' → logprob: -18.75
    5. ' now' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. '(now' → logprob: -19.625
    8. '[' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. '[node' → logprob: -20.125

Token 378: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2823590934276581
    2. ']:
' → logprob: -1.4073591232299805
    3. ':' → logprob: -7.4073591232299805
    4. '       ' → logprob: -8.78235912322998
    5. ']' → logprob: -9.28235912322998
    6. ']:
' → logprob: -9.28235912322998
    7. '):
' → logprob: -9.65735912322998
    8. '   ' → logprob: -9.78235912322998
    9. '):' → logprob: -9.90735912322998
    10. '].' → logprob: -10.15735912322998

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01973690278828144
    2. ' if' → logprob: -4.3947367668151855
    3. '       ' → logprob: -5.6447367668151855
    4. '<|end|>' → logprob: -6.5197367668151855
    5. 'if' → logprob: -7.1447367668151855
    6. '	       ' → logprob: -7.3947367668151855
    7. '```' → logprob: -7.7697367668151855
    8. '<|end|>' → logprob: -9.019737243652344
    9. '            
' → logprob: -9.894737243652344
    10. '   ' → logprob: -10.144737243652344

Token 380: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3606366217136383
    2. 'if' (adapté à ' if') → logprob: -1.610636591911316
    3. '               ' → logprob: -2.3606367111206055
    4. '           ' → logprob: -4.8606367111206055
    5. '	if' → logprob: -7.9856367111206055
    6. '	           ' → logprob: -8.735636711120605
    7. '```' → logprob: -8.985636711120605
    8. '	       ' → logprob: -9.485636711120605
    9. '   ' → logprob: -9.735636711120605
    10. '       ' → logprob: -10.360636711120605

Token 381: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.4740806519985199
    2. 'dist' → logprob: -0.9740806818008423
    3. '	dist' → logprob: -13.349081039428711
    4. '   ' → logprob: -13.599081039428711
    5. '(dist' → logprob: -14.474081039428711
    6. '_dist' → logprob: -16.09908103942871
    7. ' ' → logprob: -16.47408103942871
    8. '.dist' → logprob: -17.59908103942871
    9. '           ' → logprob: -17.59908103942871
    10. '    ' → logprob: -17.72408103942871

Token 382: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.492120155598968e-05
    2. '[now' → logprob: -9.750064849853516
    3. '[next' → logprob: -13.125064849853516
    4. '[' → logprob: -13.375064849853516
    5. 'n' → logprob: -13.750064849853516
    6. ' [' → logprob: -14.000064849853516
    7. '   ' → logprob: -15.000064849853516
    8. '```' → logprob: -15.375064849853516
    9. '[
' → logprob: -15.500064849853516
    10. '][' → logprob: -16.500064849853516

Token 383: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.8312570318812504e-05
    2. 'x' → logprob: -11.000018119812012
    3. '[n' → logprob: -14.000018119812012
    4. '[x' → logprob: -15.000018119812012
    5. '[' → logprob: -15.500018119812012
    6. '```' → logprob: -16.500019073486328
    7. ']' → logprob: -17.000019073486328
    8. '[t' → logprob: -17.625019073486328
    9. '[next' → logprob: -17.625019073486328
    10. 't' → logprob: -18.250019073486328

Token 384: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4822657108306885
    2. ' ==' → logprob: -1.6072657108306885
    3. '==-' → logprob: -1.8572657108306885
    4. ']==' → logprob: -4.232265472412109
    5. ']' → logprob: -4.982265472412109
    6. ')' → logprob: -5.607265472412109
    7. ')==' → logprob: -8.23226547241211
    8. '<' → logprob: -8.85726547241211
    9. '）' → logprob: -9.10726547241211
    10. '   ' → logprob: -9.35726547241211

Token 385: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.27532637119293213
    2. ' ==' → logprob: -1.6503263711929321
    3. '==-' → logprob: -3.0253262519836426
    4. '<' → logprob: -9.9003267288208
    5. ']==' → logprob: -10.4003267288208
    6. '==
' → logprob: -10.6503267288208
    7. ')==' → logprob: -11.6503267288208
    8. '===' → logprob: -11.9003267288208
    9. ' ' → logprob: -11.9003267288208
    10. ')' → logprob: -12.0253267288208

Token 386: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.547789674485102e-05
    2. ' -' → logprob: -10.250035285949707
    3. '   ' → logprob: -20.875036239624023
    4. ' ' → logprob: -21.000036239624023
    5. '−' → logprob: -22.000036239624023
    6. '```' → logprob: -23.625036239624023
    7. '  ' → logprob: -24.250036239624023
    8. '	' → logprob: -24.250036239624023
    9. '‌' → logprob: -25.250036239624023
    10. '－' → logprob: -25.750036239624023

Token 387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '１' → logprob: -16.4375
    4. '```' → logprob: -16.6875
    5. '2' → logprob: -18.4375
    6. '১' → logprob: -18.6875
    7. '   ' → logprob: -18.8125
    8. '۱' → logprob: -19.0
    9. '१' → logprob: -19.0
    10. '-' → logprob: -19.25

Token 388: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.033057793974876404
    2. ':' → logprob: -3.533057689666748
    3. '               ' → logprob: -5.783057689666748
    4. '):
' → logprob: -9.158058166503906
    5. '           ' → logprob: -10.033058166503906
    6. ' :
' → logprob: -10.783058166503906
    7. ':
' → logprob: -11.033058166503906
    8. ':

' → logprob: -11.533058166503906
    9. ' and' → logprob: -12.283058166503906
    10. '<|end|>' → logprob: -12.533058166503906

Token 389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04467898607254028
    2. ' dist' → logprob: -3.1696789264678955
    3. 'dist' → logprob: -6.669679164886475
    4. '	dist' → logprob: -8.169678688049316
    5. '	           ' → logprob: -10.294678688049316
    6. '```' → logprob: -10.544678688049316
    7. '           ' → logprob: -10.669678688049316
    8. '   ' → logprob: -12.044678688049316
    9. '                   ' → logprob: -12.169678688049316
    10. '<|end|>' → logprob: -12.294678688049316

Token 390: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.20169496536254883
    2. 'dist' (adapté à ' dist') → logprob: -1.7016949653625488
    3. '               ' → logprob: -8.32669448852539
    4. '                   ' → logprob: -10.45169448852539
    5. '	dist' → logprob: -11.57669448852539
    6. '_dist' → logprob: -14.57669448852539
    7. '                ' → logprob: -15.32669448852539
    8. '.dist' → logprob: -15.70169448852539
    9. '                       ' → logprob: -16.07669448852539
    10. '(dist' → logprob: -16.20169448852539

Token 391: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.000004768371582
    3. 'n' → logprob: -13.250004768371582
    4. '[now' → logprob: -15.250004768371582
    5. '[next' → logprob: -15.250004768371582
    6. ' [' → logprob: -15.875004768371582
    7. '	n' → logprob: -16.0000057220459
    8. '```' → logprob: -16.0000057220459
    9. '[
' → logprob: -17.3750057220459
    10. '=n' → logprob: -18.1250057220459

Token 392: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.011042286641895771
    2. 'x' → logprob: -4.76104211807251
    3. '[n' → logprob: -6.13604211807251
    4. '```' → logprob: -9.761042594909668
    5. 'n' → logprob: -9.886042594909668
    6. '[x' → logprob: -10.011042594909668
    7. '   ' → logprob: -10.386042594909668
    8. 'st' → logprob: -10.886042594909668
    9. ' nxt' → logprob: -11.386042594909668
    10. ']' → logprob: -11.886042594909668

Token 393: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47423505783081055
    2. '=' → logprob: -0.9742350578308105
    3. ']' → logprob: -8.849235534667969
    4. ']=' → logprob: -11.599235534667969
    5. ')' → logprob: -12.349235534667969
    6. '＝' → logprob: -14.724235534667969
    7. ')=' → logprob: -15.474235534667969
    8. ' ' → logprob: -15.724235534667969
    9. '   ' → logprob: -16.47423553466797
    10. '               ' → logprob: -17.47423553466797

Token 394: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868711292743683
    2. '=' → logprob: -1.136871099472046
    3. '＝' → logprob: -16.136871337890625
    4. ' ' → logprob: -18.261871337890625
    5. ')' → logprob: -19.386871337890625
    6. '.=' → logprob: -20.261871337890625
    7. '=int' → logprob: -20.261871337890625
    8. '=
' → logprob: -20.636871337890625
    9. ']' → logprob: -20.886871337890625
    10. '=os' → logprob: -20.886871337890625

Token 395: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02324605919420719
    2. ' dist' → logprob: -3.7732460498809814
    3. '	dist' → logprob: -14.523245811462402
    4. '   ' → logprob: -15.773245811462402
    5. '(dist' → logprob: -18.14824676513672
    6. '_dist' → logprob: -18.64824676513672
    7. 'd' → logprob: -18.89824676513672
    8. '.dist' → logprob: -19.77324676513672
    9. ' ' → logprob: -20.14824676513672
    10. '               ' → logprob: -20.14824676513672

Token 396: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -3.128163257315464e-07
    2. 'now' → logprob: -15.5
    3. '[' → logprob: -19.0
    4. '[current' → logprob: -19.5
    5. '	now' → logprob: -20.25
    6. ' now' → logprob: -20.625
    7. '[next' → logprob: -21.125
    8. ' [' → logprob: -21.375
    9. '(now' → logprob: -22.0
    10. '[n' → logprob: -22.75

Token 397: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.25258398056030273
    2. ']' → logprob: -1.7525839805603027
    3. '+' → logprob: -3.0025839805603027
    4. ' +' → logprob: -8.752584457397461
    5. '[now' → logprob: -10.877584457397461
    6. ')+' → logprob: -11.127584457397461
    7. '}+' → logprob: -11.377584457397461
    8. '[' → logprob: -12.127584457397461
    9. '+]' → logprob: -12.377584457397461
    10. '   ' → logprob: -12.752584457397461

Token 398: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006716555915772915
    2. ' +' → logprob: -5.006716728210449
    3. '＋' → logprob: -14.00671672821045
    4. '1' → logprob: -15.63171672821045
    5. '+
' → logprob: -15.75671672821045
    6. ' ' → logprob: -17.506715774536133
    7. '()+' → logprob: -18.756715774536133
    8. '+[' → logprob: -18.756715774536133
    9. '
' → logprob: -19.006715774536133
    10. '0' → logprob: -19.256715774536133

Token 399: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -18.5000057220459
    4. '```' → logprob: -19.2500057220459
    5. '１' → logprob: -20.5000057220459
    6. '<|end|>' → logprob: -21.5625057220459
    7. '  ' → logprob: -21.7500057220459
    8. '۱' → logprob: -22.6875057220459
    9. '[' → logprob: -22.7500057220459
    10. '১' → logprob: -22.8125057220459

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -20.375
    5. '１' → logprob: -21.25
    6. '<|end|>' → logprob: -22.125
    7. '১' → logprob: -22.75
    8. '  ' → logprob: -22.9375
    9. '۱' → logprob: -22.9375
    10. '१' → logprob: -23.625

Token 401: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009668456041254103
    2. ' queue' → logprob: -7.250967025756836
    3. 'queue' → logprob: -8.500967025756836
    4. '			' → logprob: -10.875967025756836
    5. '(queue' → logprob: -11.500967025756836
    6. '<|end|>' → logprob: -12.250967025756836
    7. ',' → logprob: -12.625967025756836
    8. '	queue' → logprob: -12.750967025756836
    9. '		       ' → logprob: -13.250967025756836
    10. '```' → logprob: -13.375967025756836

Token 402: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03839247673749924
    2. ' queue' → logprob: -3.9133925437927246
    3. 'queue' → logprob: -4.038392543792725
    4. '(queue' → logprob: -10.913392066955566
    5. '```' → logprob: -11.538392066955566
    6. '	queue' → logprob: -11.788392066955566
    7. '			' → logprob: -11.788392066955566
    8. '                   ' → logprob: -12.163392066955566
    9. '           ' → logprob: -12.538392066955566
    10. '.queue' → logprob: -12.663392066955566

Token 403: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -3.547789674485102e-05
    2. ' queue' → logprob: -10.250035285949707
    3. '   ' → logprob: -19.125036239624023
    4. '	queue' → logprob: -19.375036239624023
    5. '               ' → logprob: -19.625036239624023
    6. '       ' → logprob: -20.250036239624023
    7. '           ' → logprob: -20.625036239624023
    8. '.queue' → logprob: -21.625036239624023
    9. '```' → logprob: -22.375036239624023
    10. '(queue' → logprob: -22.625036239624023

Token 404: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.625001907348633
    3. '.enqueue' → logprob: -16.250001907348633
    4. ' .' → logprob: -16.375001907348633
    5. 'append' → logprob: -16.500001907348633
    6. '.extend' → logprob: -16.750001907348633
    7. '.p' → logprob: -17.625001907348633
    8. '.put' → logprob: -18.000001907348633
    9. ').' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.125001907348633

Token 405: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. 'n' → logprob: -18.000003814697266
    4. '(next' → logprob: -18.000003814697266
    5. '(nx' → logprob: -18.125003814697266
    6. '((' → logprob: -18.750003814697266
    7. ' (' → logprob: -19.500003814697266
    8. '(x' → logprob: -20.125003814697266
    9. '(
' → logprob: -20.375003814697266
    10. '	n' → logprob: -21.000003814697266

Token 406: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.3856492842023727e-06
    2. '(n' → logprob: -14.000000953674316
    3. 't' → logprob: -15.000000953674316
    4. '[n' → logprob: -16.250001907348633
    5. 'n' → logprob: -16.750001907348633
    6. 'x' → logprob: -17.625001907348633
    7. ')' → logprob: -18.375001907348633
    8. '(' → logprob: -19.250001907348633
    9. 'st' → logprob: -19.625001907348633
    10. '[' → logprob: -19.750001907348633

Token 407: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -13.250001907348633
    3. '）' → logprob: -15.750001907348633
    4. ' )' → logprob: -16.125001907348633
    5. ')n' → logprob: -17.250001907348633
    6. '())' → logprob: -17.750001907348633
    7. '<|end|>' → logprob: -17.750001907348633
    8. '```' → logprob: -18.125001907348633
    9. '),' → logprob: -18.250001907348633
    10. ')return' → logprob: -18.375001907348633

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034936293959617615
    2. '    
' → logprob: -4.284936428070068
    3. '
' → logprob: -4.659936428070068
    4. '<|end|>' → logprob: -4.784936428070068
    5. 'def' → logprob: -7.034936428070068
    6. 'import' → logprob: -7.659936428070068
    7. '```' → logprob: -8.03493595123291
    8. 'if' → logprob: -8.40993595123291
    9. '    ' → logprob: -9.15993595123291
    10. '  
' → logprob: -9.40993595123291

Token 409: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5622259974479675
    2. 'dp' → logprob: -1.1872260570526123
    3. '   ' → logprob: -2.8122260570526123
    4. '#' (adapté à ' #') → logprob: -3.5622260570526123
    5. 'dist' → logprob: -4.062225818634033
    6. 'safe' → logprob: -4.312225818634033
    7. 'INF' → logprob: -5.687225818634033
    8. 'def' → logprob: -7.187225818634033
    9. 'danger' → logprob: -7.812225818634033
    10. '```' → logprob: -8.187226295471191

Token 410: ' �' (ID: 11197)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5193340182304382
    2. 'safe' → logprob: -1.644334077835083
    3. '#' → logprob: -2.019334077835083
    4. 'danger' → logprob: -3.019334077835083
    5. 'dp' → logprob: -4.144333839416504
    6. 'dist' → logprob: -5.269333839416504
    7. 'def' → logprob: -6.144333839416504
    8. 'INF' → logprob: -6.519333839416504
    9. 'unsafe' → logprob: -7.019333839416504
    10. 'ok' → logprob: -7.144333839416504

Token 411: '�' (ID: 226)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -1.0260471105575562
    2. '#' → logprob: -1.1510471105575562
    3. '   ' → logprob: -2.4010472297668457
    4. 'dp' → logprob: -2.7760472297668457
    5. 'dist' → logprob: -4.151047229766846
    6. 'cost' → logprob: -4.151047229766846
    7. 'danger' → logprob: -4.151047229766846
    8. ' safe' → logprob: -4.401047229766846
    9. 's' → logprob: -4.526047229766846
    10. 'visited' → logprob: -4.776047229766846

Token 412: '町' (ID: 92479)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2997977137565613
    2. 'safe' → logprob: -2.424797773361206
    3. '#' → logprob: -2.924797773361206
    4. 'danger' → logprob: -3.049797773361206
    5. 'dp' → logprob: -3.674797773361206
    6. 'ans' → logprob: -4.549797534942627
    7. 'dist' → logprob: -4.799797534942627
    8. '   ' → logprob: -4.924797534942627
    9. '宿' → logprob: -6.299797534942627
    10. 'ok' → logprob: -6.299797534942627

Token 413: 'の' (ID: 3385)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.30043739080429077
    2. 'の' → logprob: -2.5504374504089355
    3. 'safe' → logprob: -3.1754374504089355
    4. '#' → logprob: -3.3004374504089355
    5. ' =' → logprob: -4.3004374504089355
    6. '判' → logprob: -4.4254374504089355
    7. '=' → logprob: -4.6754374504089355
    8. '_cost' → logprob: -4.8004374504089355
    9. 'visited' → logprob: -4.9254374504089355
    10. 'danger' → logprob: -5.0504374504089355

Token 414: '宿' (ID: 62310)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.23383794724941254
    2. 'danger' → logprob: -2.233837842941284
    3. 'status' → logprob: -2.733837842941284
    4. 'safe' → logprob: -3.733837842941284
    5. 's' → logprob: -5.858838081359863
    6. 'state' → logprob: -5.983838081359863
    7. 'dp' → logprob: -6.358838081359863
    8. '#' → logprob: -6.983838081359863
    9. 'price' → logprob: -7.108838081359863
    10. 'risk' → logprob: -7.358838081359863

Token 415: '泊' (ID: 123420)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.2949660122394562
    2. 'cost' → logprob: -1.6699659824371338
    3. '代' → logprob: -3.669965982437134
    4. '泊' → logprob: -4.294966220855713
    5. 'status' → logprob: -4.669966220855713
    6. 'は' → logprob: -5.419966220855713
    7. '費' → logprob: -5.794966220855713
    8. 'class' → logprob: -6.294966220855713
    9. '宿' → logprob: -6.419966220855713
    10. '料金' → logprob: -6.669966220855713

Token 416: '費' (ID: 33778)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.0589951276779175
    2. '費' → logprob: -1.4339951276779175
    3. 'cost' → logprob: -1.8089951276779175
    4. '料金' → logprob: -2.808995246887207
    5. '地' → logprob: -3.183995246887207
    6. '代' → logprob: -3.183995246887207
    7. '施設' → logprob: -3.433995246887207
    8. '可能' → logprob: -4.183995246887207
    9. '候' → logprob: -4.433995246887207
    10. '情報' → logprob: -5.058995246887207

Token 417: 'の' (ID: 3385)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0048150536604225636
    2. ' cost' → logprob: -6.504815101623535
    3. '   ' → logprob: -6.754815101623535
    4. ' costs' → logprob: -7.004815101623535
    5. 'dp' → logprob: -7.379815101623535
    6. 'fee' → logprob: -9.254815101623535
    7. '宿' → logprob: -9.379815101623535
    8. 'price' → logprob: -9.504815101623535
    9. '#' → logprob: -9.629815101623535
    10. ' =' → logprob: -9.754815101623535

Token 418: '定' (ID: 8745)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00012118533049942926
    2. 'price' → logprob: -10.750121116638184
    3. 'コ' → logprob: -10.875121116638184
    4. ' cost' → logprob: -11.375121116638184
    5. 'dp' → logprob: -11.500121116638184
    6. '#' → logprob: -11.625121116638184
    7. 'info' → logprob: -12.000121116638184
    8. 'INF' → logprob: -12.000121116638184
    9. 'c' → logprob: -12.125121116638184
    10. 'dist' → logprob: -12.375121116638184

Token 419: '義' (ID: 114735)
  Prédit: '義'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '義' → logprob: -0.025215761736035347
    2. '価' → logprob: -4.4002156257629395
    3. '数' → logprob: -4.7752156257629395
    4. 'め' → logprob: -6.5252156257629395
    5. 'cost' → logprob: -6.7752156257629395
    6. '```' → logprob: -7.2752156257629395
    7. 'ま' → logprob: -7.9002156257629395
    8. '値' → logprob: -9.525216102600098
    9. '額' → logprob: -10.150216102600098
    10. 'value' → logprob: -10.650216102600098

Token 420: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03610486164689064
    2. ' cost' → logprob: -3.661104917526245
    3. ' costs' → logprob: -5.161104679107666
    4. '   ' → logprob: -6.411104679107666
    5. '宿' → logprob: -6.536104679107666
    6. 'price' → logprob: -7.911104679107666
    7. 'hotel' → logprob: -9.536105155944824
    8. ' lodging' → logprob: -9.661105155944824
    9. 'safe' → logprob: -9.786105155944824
    10. 'c' → logprob: -10.161105155944824

Token 421: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.08911220729351044
    2. ' cost' → logprob: -3.0891122817993164
    3. '   ' → logprob: -3.4641122817993164
    4. ' costs' → logprob: -5.089112281799316
    5. '宿' → logprob: -6.839112281799316
    6. 'price' → logprob: -8.089112281799316
    7. 'dp' → logprob: -9.089112281799316
    8. '
' → logprob: -9.339112281799316
    9. 'hotel' → logprob: -9.339112281799316
    10. 'dist' → logprob: -10.214112281799316

Token 422: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0009078874718397856
    2. 'dp' → logprob: -8.125907897949219
    3. '   ' → logprob: -8.375907897949219
    4. '宿' → logprob: -8.875907897949219
    5. ' cost' → logprob: -9.875907897949219
    6. 'price' → logprob: -9.875907897949219
    7. 'hotel' → logprob: -10.375907897949219
    8. 'INF' → logprob: -10.875907897949219
    9. 'dist' → logprob: -11.375907897949219
    10. 'fee' → logprob: -11.375907897949219

Token 423: ' ' (ID: 220)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00531451590359211
    2. ' cost' → logprob: -5.755314350128174
    3. '   ' → logprob: -7.130314350128174
    4. '宿' → logprob: -7.630314350128174
    5. 'lod' → logprob: -8.755314826965332
    6. 'price' → logprob: -9.130314826965332
    7. ' costs' → logprob: -9.255314826965332
    8. 'stay' → logprob: -9.380314826965332
    9. 'safe' → logprob: -9.630314826965332
    10. '#' → logprob: -9.755314826965332

Token 424: '町' (ID: 92479)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00037609596620313823
    2. '   ' → logprob: -9.375375747680664
    3. '宿' → logprob: -9.375375747680664
    4. 'dp' → logprob: -10.250375747680664
    5. 'price' → logprob: -10.625375747680664
    6. ' cost' → logprob: -10.750375747680664
    7. 'fee' → logprob: -10.875375747680664
    8. 'hotel' → logprob: -11.000375747680664
    9. 'safe' → logprob: -11.125375747680664
    10. '```' → logprob: -11.375375747680664

Token 425: '1' (ID: 16)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.09536272287368774
    2. ' =' → logprob: -3.220362663269043
    3. '宿' → logprob: -3.970362663269043
    4. 'cost' → logprob: -4.095362663269043
    5. 'の' → logprob: -5.595362663269043
    6. '_' → logprob: -5.595362663269043
    7. '_fee' → logprob: -5.845362663269043
    8. '=' → logprob: -6.720362663269043
    9. '泊' → logprob: -6.970362663269043
    10. '費' → logprob: -7.595362663269043

Token 426: 'と' (ID: 5330)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.7718583345413208
    2. 'は' → logprob: -1.7718583345413208
    3. ':' → logprob: -1.8968583345413208
    4. 'から' → logprob: -1.8968583345413208
    5. ',' → logprob: -2.0218582153320312
    6. ' =' → logprob: -2.2718582153320312
    7. '   ' → logprob: -4.146858215332031
    8. ' の' → logprob: -4.271858215332031
    9. ']' → logprob: -4.521858215332031
    10. 'def' → logprob: -4.646858215332031

Token 427: '町' (ID: 92479)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011168066412210464
    2. ' N' → logprob: -4.511168003082275
    3. '町' → logprob: -9.886168479919434
    4. ' town' → logprob: -11.136168479919434
    5. 'town' → logprob: -11.261168479919434
    6. '	N' → logprob: -11.636168479919434
    7. 'Ｎ' → logprob: -12.136168479919434
    8. '   ' → logprob: -12.136168479919434
    9. '(N' → logprob: -12.386168479919434
    10. ' ' → logprob: -12.386168479919434

Token 428: 'N' (ID: 45)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0171172618865967
    2. 'N' → logprob: -1.1421172618865967
    3. ' and' → logprob: -2.2671172618865967
    4. '0' → logprob: -2.3921172618865967
    5. ' N' → logprob: -2.6421172618865967
    6. '1' → logprob: -3.7671172618865967
    7. ',' → logprob: -5.017117500305176
    8. '(N' → logprob: -5.017117500305176
    9. 'and' → logprob: -5.517117500305176
    10. '```' → logprob: -6.392117500305176

Token 429: 'では' (ID: 43147)
  Prédit: 'は'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.11233136802911758
    2. 'の' → logprob: -2.4873313903808594
    3. ' は' → logprob: -4.737331390380859
    4. ' の' → logprob: -5.487331390380859
    5. ',' → logprob: -5.612331390380859
    6. '以' → logprob: -5.987331390380859
    7. ' ' → logprob: -7.487331390380859
    8. '0' → logprob: -7.612331390380859
    9. 'について' → logprob: -8.23733139038086
    10. 'には' → logprob: -8.36233139038086

Token 430: '宿' (ID: 62310)
  Prédit: '宿'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '宿' → logprob: -0.6507976055145264
    2. '泊' → logprob: -1.6507976055145264
    3. '0' → logprob: -1.7757976055145264
    4. ' P' → logprob: -2.5257976055145264
    5. 'cost' → logprob: -4.0257978439331055
    6. 'P' → logprob: -4.6507978439331055
    7. ' ' → logprob: -5.1507978439331055
    8. 'stay' → logprob: -6.5257978439331055
    9. 'pay' → logprob: -7.7757978439331055
    10. ' cost' → logprob: -7.7757978439331055

Token 431: '泊' (ID: 123420)
  Prédit: '泊'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '泊' → logprob: -0.00012415809032972902
    2. '```' → logprob: -9.625123977661133
    3. '代' → logprob: -10.125123977661133
    4. '費' → logprob: -12.000123977661133
    5. '#' → logprob: -12.750123977661133
    6. '``' → logprob: -13.500123977661133
    7. '料' → logprob: -13.625123977661133
    8. '   ' → logprob: -13.625123977661133
    9. '無し' → logprob: -13.875123977661133
    10. 'なし' → logprob: -14.125123977661133

Token 432: 'し' (ID: 3829)
  Prédit: '費'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '費' → logprob: -0.051232561469078064
    2. 'は' → logprob: -4.42623233795166
    3. '料' → logprob: -4.55123233795166
    4. 'cost' → logprob: -5.05123233795166
    5. '```' → logprob: -5.17623233795166
    6. 'し' → logprob: -5.42623233795166
    7. '禁止' → logprob: -5.42623233795166
    8. 'を' → logprob: -6.42623233795166
    9. '代' → logprob: -6.80123233795166
    10. '料金' → logprob: -6.92623233795166

Token 433: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.05946657434105873
    2. 'る' → logprob: -3.434466600418091
    3. '```' → logprob: -4.184466361999512
    4. '#' → logprob: -5.809466361999512
    5. 'な' → logprob: -5.934466361999512
    6. 'ら' → logprob: -6.684466361999512
    7. 'て' → logprob: -7.059466361999512
    8. 'なく' → logprob: -7.309466361999512
    9. 'ません' → logprob: -7.684466361999512
    10. 'でき' → logprob: -8.059466361999512

Token 434: 'ので' (ID: 69719)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3908592462539673
    2. '
' → logprob: -1.3908592462539673
    3. '   ' → logprob: -3.1408591270446777
    4. ' cost' → logprob: -4.140859127044678
    5. ' costs' → logprob: -4.890859127044678
    6. 'price' → logprob: -5.890859127044678
    7. '    
' → logprob: -6.640859127044678
    8. '宿' → logprob: -7.390859127044678
    9. 'prices' → logprob: -7.515859127044678
    10. 'dist' → logprob: -7.765859127044678

Token 435: '費' (ID: 33778)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03280553221702576
    2. ' cost' → logprob: -3.7828054428100586
    3. ' costs' → logprob: -5.532805442810059
    4. '   ' → logprob: -6.282805442810059
    5. '宿' → logprob: -6.407805442810059
    6. '
' → logprob: -7.407805442810059
    7. 'dp' → logprob: -8.157805442810059
    8. '#' → logprob: -8.407805442810059
    9. ' ' → logprob: -8.532805442810059
    10. 'dist' → logprob: -8.907805442810059

Token 436: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -3.4121114822482923e-06
    2. '용' → logprob: -14.000003814697266
    3. '泊' → logprob: -14.000003814697266
    4. '```' → logprob: -14.000003814697266
    5. '0' → logprob: -15.250003814697266
    6. '宿' → logprob: -15.625003814697266
    7. '�' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.750003814697266
    9. '=' → logprob: -17.375003814697266
    10. ' 用' → logprob: -17.375003814697266

Token 437: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030327150598168373
    2. ' =' → logprob: -4.155327320098877
    3. 'は' → logprob: -4.405327320098877
    4. '[' → logprob: -6.780327320098877
    5. 'を' → logprob: -8.280326843261719
    6. '   ' → logprob: -8.905326843261719
    7. '=[' → logprob: -9.030326843261719
    8. 'なし' → logprob: -9.280326843261719
    9. '=[]' → logprob: -9.780326843261719
    10. '```' → logprob: -10.030326843261719

Token 438: 'と' (ID: 5330)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0816124975681305
    2. '   ' → logprob: -3.0816125869750977
    3. ' cost' → logprob: -3.7066125869750977
    4. '
' → logprob: -5.456612586975098
    5. ' costs' → logprob: -6.081612586975098
    6. '宿' → logprob: -7.331612586975098
    7. 'price' → logprob: -8.581612586975098
    8. 'dist' → logprob: -9.581612586975098
    9. 'c' → logprob: -9.831612586975098
    10. '_cost' → logprob: -9.831612586975098

Token 439: 'する' (ID: 39065)
  Prédit: 'する'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'する' → logprob: -0.16105970740318298
    2. 'して' → logprob: -2.911059617996216
    3. 'し' → logprob: -3.036059617996216
    4. 'します' → logprob: -3.161059617996216
    5. 'しています' → logprob: -6.411059856414795
    6. 'してください' → logprob: -7.536059856414795
    7. 'しました' → logprob: -7.536059856414795
    8. 'しま' → logprob: -7.661059856414795
    9. 'した' → logprob: -8.411059379577637
    10. '```' → logprob: -8.661059379577637

Token 440: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.09701807051897049
    2. '   ' → logprob: -2.722018003463745
    3. ' cost' → logprob: -3.722018003463745
    4. ' costs' → logprob: -6.597018241882324
    5. 'price' → logprob: -8.222018241882324
    6. '宿' → logprob: -8.597018241882324
    7. '
' → logprob: -8.722018241882324
    8. 'dist' → logprob: -8.722018241882324
    9. 'dp' → logprob: -9.597018241882324
    10. '    
' → logprob: -9.847018241882324

Token 441: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.017438406124711037
    2. ' cost' → logprob: -4.2674384117126465
    3. '   ' → logprob: -6.2674384117126465
    4. ' costs' → logprob: -7.0174384117126465
    5. '宿' → logprob: -9.017437934875488
    6. 'price' → logprob: -9.017437934875488
    7. 'dist' → logprob: -9.642437934875488
    8. '```' → logprob: -10.267437934875488
    9. '_cost' → logprob: -11.142437934875488
    10. '
' → logprob: -11.267437934875488

Token 442: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.009441791102290154
    2. '   ' → logprob: -5.13444185256958
    3. ' cost' → logprob: -5.75944185256958
    4. ' costs' → logprob: -9.134441375732422
    5. '宿' → logprob: -9.759441375732422
    6. 'dp' → logprob: -10.134441375732422
    7. 'price' → logprob: -10.384441375732422
    8. '    
' → logprob: -10.759441375732422
    9. 'dist' → logprob: -11.009441375732422
    10. '
' → logprob: -11.259441375732422

Token 443: ' �' (ID: 9203)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.018162935972213745
    2. ' cost' → logprob: -4.393162727355957
    3. '   ' → logprob: -5.393162727355957
    4. '宿' → logprob: -7.893162727355957
    5. ' costs' → logprob: -8.143162727355957
    6. 'price' → logprob: -9.643162727355957
    7. 'dp' → logprob: -9.768162727355957
    8. '
' → logprob: -10.143162727355957
    9. 'dist' → logprob: -10.393162727355957
    10. 'def' → logprob: -10.393162727355957

Token 444: '�' (ID: 122)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.21797719597816467
    2. '宿' → logprob: -2.092977285385132
    3. 'for' → logprob: -3.467977285385132
    4. ' costs' → logprob: -4.217977046966553
    5. ' cost' → logprob: -4.592977046966553
    6. 'dp' → logprob: -5.592977046966553
    7. '_cost' → logprob: -6.467977046966553
    8. 'room' → logprob: -6.842977046966553
    9. '[' → logprob: -6.967977046966553
    10. ' for' → logprob: -7.092977046966553

Token 445: 'ン' (ID: 4025)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.18471859395503998
    2. '宿' → logprob: -1.9347186088562012
    3. ' cost' → logprob: -4.684718608856201
    4. ' costs' → logprob: -5.059718608856201
    5. 'fee' → logprob: -6.809718608856201
    6. '   ' → logprob: -7.059718608856201
    7. '
' → logprob: -7.309718608856201
    8. 'for' → logprob: -7.309718608856201
    9. ' =' → logprob: -7.872218608856201
    10. 'dp' → logprob: -7.934718608856201

Token 446: 'ビ' (ID: 24935)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.199397325515747
    2. 'for' → logprob: -2.074397325515747
    3. '#' → logprob: -2.699397325515747
    4. '宿' → logprob: -2.949397325515747
    5. 'オ' → logprob: -3.074397325515747
    6. '[' → logprob: -3.574397325515747
    7. '泊' → logprob: -4.074397087097168
    8. 'は' → logprob: -4.199397087097168
    9. 'ゾ' → logprob: -4.199397087097168
    10. 'ベ' → logprob: -4.199397087097168

Token 447: '支' (ID: 18904)
  Prédit: '支'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '支' → logprob: -0.0031023730989545584
    2. 's' → logprob: -7.1281023025512695
    3. 'controlled' → logprob: -7.6281023025512695
    4. ' 支' → logprob: -7.6281023025512695
    5. 'dom' → logprob: -8.00310230255127
    6. 'z' → logprob: -8.12810230255127
    7. ' controlled' → logprob: -8.87810230255127
    8. 'control' → logprob: -10.00310230255127
    9. '_' → logprob: -10.00310230255127
    10. 'd' → logprob: -10.12810230255127

Token 448: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -0.030119197443127632
    2. '支' → logprob: -3.5301191806793213
    3. '```' → logprob: -9.155118942260742
    4. '[' → logprob: -9.405118942260742
    5. 'upport' → logprob: -10.030118942260742
    6. '``' → logprob: -10.655118942260742
    7. '[]' → logprob: -11.280118942260742
    8. '#' → logprob: -11.780118942260742
    9. '援' → logprob: -11.780118942260742
    10. '��' → logprob: -11.780118942260742

Token 449: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.41726070642471313
    2. 'town' → logprob: -2.0422606468200684
    3. ' towns' → logprob: -2.5422606468200684
    4. '[z' → logprob: -2.5422606468200684
    5. '[' → logprob: -3.5422606468200684
    6. 'z' → logprob: -4.792260646820068
    7. 'の' → logprob: -5.792260646820068
    8. '#' → logprob: -5.917260646820068
    9. '[]' → logprob: -6.667260646820068
    10. ' town' → logprob: -7.292260646820068

Token 450: 'は' (ID: 5205)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.400750756263733
    2. 'and' → logprob: -1.650750756263733
    3. 'と' → logprob: -2.0257506370544434
    4. 'は' → logprob: -2.1507506370544434
    5. '#' → logprob: -2.6507506370544434
    6. 'の' → logprob: -2.7757506370544434
    7. ' and' → logprob: -2.9007506370544434
    8. 'や' → logprob: -3.6507506370544434
    9. '   ' → logprob: -4.150750637054443
    10. 'も' → logprob: -4.275750637054443

Token 451: '通' (ID: 9034)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.17943871021270752
    2. 'sys' → logprob: -2.679438591003418
    3. '0' → logprob: -3.929438591003418
    4. 'import' → logprob: -4.179438591003418
    5. 'None' → logprob: -4.304438591003418
    6. 'inf' → logprob: -4.429438591003418
    7. 'INF' → logprob: -4.679438591003418
    8. '[' → logprob: -4.804438591003418
    9. 'dist' → logprob: -5.054438591003418
    10. '   ' → logprob: -5.554438591003418

Token 452: '行' (ID: 6550)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.7515665292739868
    2. 'ら' → logprob: -1.2515665292739868
    3. '過' → logprob: -2.2515664100646973
    4. '```' → logprob: -3.0015664100646973
    5. '行' → logprob: -3.2515664100646973
    6. '#' → logprob: -3.5015664100646973
    7. '
' → logprob: -5.626566410064697
    8. 'る' → logprob: -6.126566410064697
    9. '[' → logprob: -6.376566410064697
    10. 'り' → logprob: -6.626566410064697

Token 453: '禁止' (ID: 65341)
  Prédit: '禁止'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '禁止' → logprob: -0.33251404762268066
    2. '止' → logprob: -1.7075140476226807
    3. '不可' → logprob: -3.4575140476226807
    4. '料' → logprob: -4.207513809204102
    5. '```' → logprob: -4.207513809204102
    6. '禁' → logprob: -4.457513809204102
    7. '#' → logprob: -5.207513809204102
    8. 'も' → logprob: -5.207513809204102
    9. 'し' → logprob: -5.457513809204102
    10. 'を' → logprob: -6.457513809204102

Token 454: 'なので' (ID: 145461)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2298564910888672
    2. 'dist' → logprob: -2.354856491088867
    3. '   ' → logprob: -3.104856491088867
    4. 'for' → logprob: -3.604856491088867
    5. '
' → logprob: -4.229856491088867
    6. '#' → logprob: -4.229856491088867
    7. 'の' → logprob: -7.104856491088867
    8. ' cost' → logprob: -7.104856491088867
    9. ' for' → logprob: -7.354856491088867
    10. '=' → logprob: -7.354856491088867

Token 455: 'これ' (ID: 54459)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.35522380471229553
    2. 'dist' → logprob: -2.3552238941192627
    3. '#' → logprob: -2.7302238941192627
    4. 'for' → logprob: -3.2302238941192627
    5. 'pass' → logprob: -3.4802238941192627
    6. '   ' → logprob: -3.7302238941192627
    7. 'continue' → logprob: -4.355223655700684
    8. 'import' → logprob: -5.480223655700684
    9. ' cost' → logprob: -5.605223655700684
    10. '
' → logprob: -5.605223655700684

Token 456: 'も' (ID: 8446)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.52784663438797
    2. '[' → logprob: -1.4028465747833252
    3. 'for' → logprob: -3.527846574783325
    4. '[i' → logprob: -3.652846574783325
    5. '   ' → logprob: -4.027846813201904
    6. '=' → logprob: -4.027846813201904
    7. 'は' → logprob: -4.277846813201904
    8. 'も' → logprob: -4.527846813201904
    9. '[n' → logprob: -5.152846813201904
    10. '```' → logprob: -5.277846813201904

Token 457: '考' (ID: 18056)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1189333125948906
    2. '0' → logprob: -2.6189332008361816
    3. '   ' → logprob: -3.9939332008361816
    4. 'cost' → logprob: -4.118933200836182
    5. '```' → logprob: -5.993933200836182
    6. ' dist' → logprob: -7.743933200836182
    7. 'continue' → logprob: -8.24393367767334
    8. '宿' → logprob: -8.49393367767334
    9. ' ' → logprob: -8.74393367767334
    10. '#' → logprob: -8.74393367767334

Token 458: '�' (ID: 20036)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x85' → logprob: -0.0009351630578748882
    2. 'え' → logprob: -7.000935077667236
    3. '```' → logprob: -11.125935554504395
    4. 'えて' → logprob: -12.625935554504395
    5. 'える' → logprob: -13.125935554504395
    6. ' \xe6\x85' → logprob: -13.250935554504395
    7. '察' → logprob: -14.125935554504395
    8. '[' → logprob: -15.625935554504395
    9. '虑' → logprob: -15.875935554504395
    10. '0' → logprob: -16.000934600830078

Token 459: '�' (ID: 106)
  Prédit: 'え'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'え' → logprob: -0.37528112530708313
    2. '\xe6\x85' → logprob: -1.2502810955047607
    3. '```' → logprob: -4.25028133392334
    4. 'えて' → logprob: -5.00028133392334
    5. '外' → logprob: -6.87528133392334
    6. 'し' → logprob: -7.25028133392334
    7. 'され' → logprob: -7.25028133392334
    8. '�' → logprob: -8.37528133392334
    9. 'なし' → logprob: -8.37528133392334
    10. 'える' → logprob: -8.50028133392334

Token 460: 'して' (ID: 22440)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -0.29390934109687805
    2. 'して' → logprob: -1.5439093112945557
    3. '```' → logprob: -4.793909549713135
    4. 'され' → logprob: -5.043909549713135
    5. 'に' → logprob: -5.043909549713135
    6. '0' → logprob: -5.418909549713135
    7. '#' → logprob: -5.918909549713135
    8. '済' → logprob: -5.918909549713135
    9. 'すると' → logprob: -5.918909549713135
    10. 'なし' → logprob: -6.543909549713135

Token 461: 'お' (ID: 8930)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8986567854881287
    2. 'dist' → logprob: -1.5236568450927734
    3. ' dist' → logprob: -2.0236568450927734
    4. ' costs' → logprob: -2.6486568450927734
    5. ' cost' → logprob: -3.0236568450927734
    6. '0' → logprob: -3.2736568450927734
    7. '   ' → logprob: -3.3986568450927734
    8. 'continue' → logprob: -4.148656845092773
    9. ' continue' → logprob: -4.398656845092773
    10. '宿' → logprob: -5.523656845092773

Token 462: 'く' (ID: 10459)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x85' → logprob: -0.42477989196777344
    2. 'えて' → logprob: -1.4247798919677734
    3. 'える' → logprob: -2.6747798919677734
    4. 'え' → logprob: -4.049779891967773
    5. '```' → logprob: -5.549779891967773
    6. '   ' → logprob: -5.799779891967773
    7. 'def' → logprob: -6.549779891967773
    8. 'る' → logprob: -6.674779891967773
    9. '#' → logprob: -6.799779891967773
    10. '       ' → logprob: -7.049779891967773

Token 463: '（' (ID: 3603)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0776505395770073
    2. '
' → logprob: -2.702650547027588
    3. '   ' → logprob: -6.077650547027588
    4. ' cost' → logprob: -6.827650547027588
    5. '宿' → logprob: -6.827650547027588
    6. 'price' → logprob: -7.077650547027588
    7. ' costs' → logprob: -8.07765007019043
    8. 'for' → logprob: -8.20265007019043
    9. 'prices' → logprob: -8.45265007019043
    10. '    
' → logprob: -8.57765007019043

Token 464: '距' (ID: 76027)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.47808143496513367
    2. ')' → logprob: -1.978081464767456
    3. ')
' → logprob: -2.228081464767456
    4. '   ' → logprob: -3.853081464767456
    5. '#' → logprob: -3.853081464767456
    6. '）' → logprob: -4.103081226348877
    7. ' costs' → logprob: -4.103081226348877
    8. 'for' → logprob: -4.228081226348877
    9. '）
' → logprob: -4.353081226348877
    10. ' cost' → logprob: -4.728081226348877

Token 465: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -0.003840213641524315
    2. '切' → logprob: -7.253840446472168
    3. '続' → logprob: -7.628840446472168
    4. 'い' → logprob: -8.128840446472168
    5. 'ろ' → logprob: -8.628840446472168
    6. 'り' → logprob: -8.753840446472168
    7. '算' → logprob: -8.878840446472168
    8. '料' → logprob: -9.253840446472168
    9. '念' → logprob: -9.378840446472168
    10. '存' → logprob: -9.378840446472168

Token 466: 'が' (ID: 6632)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.28126436471939087
    2. '[n' → logprob: -1.531264305114746
    3. '[z' → logprob: -4.281264305114746
    4. 'dist' → logprob: -5.531264305114746
    5. '   ' → logprob: -5.906264305114746
    6. 'now' → logprob: -5.906264305114746
    7. '[' → logprob: -6.031264305114746
    8. '=' → logprob: -6.906264305114746
    9. '```' → logprob: -7.656264305114746
    10. '[next' → logprob: -8.406264305114746

Token 467: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.500018119812012
    3. '==' → logprob: -12.375018119812012
    4. '```' → logprob: -13.125018119812012
    5. '=' → logprob: -14.625018119812012
    6. '０' → logprob: -14.750018119812012
    7. '-' → logprob: -14.750018119812012
    8. '   ' → logprob: -15.250018119812012
    9. '<=' → logprob: -15.625018119812012
    10. 'S' → logprob: -16.125019073486328

Token 468: 'の' (ID: 3385)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21631893515586853
    2. '）' → logprob: -3.2163188457489014
    3. 'また' → logprob: -3.4663188457489014
    4. ')' → logprob: -3.7163188457489014
    5. '   ' → logprob: -4.2163190841674805
    6. '==' → logprob: -4.5913190841674805
    7. 'の場合' → logprob: -4.5913190841674805
    8. 'or' → logprob: -4.7163190841674805
    9. 'の' → logprob: -4.8413190841674805
    10. ' ==' → logprob: -5.0913190841674805

Token 469: 'ところ' (ID: 139754)
  Prédit: '）'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）' → logprob: -0.7984585762023926
    2. '町' → logprob: -1.0484585762023926
    3. ' town' → logprob: -3.4234585762023926
    4. ')' → logprob: -3.7984585762023926
    5. 'ため' → logprob: -3.7984585762023926
    6. '）は' → logprob: -3.9234585762023926
    7. 'town' → logprob: -4.048458576202393
    8. 'は' → logprob: -4.423458576202393
    9. 'ところ' → logprob: -4.423458576202393
    10. ' or' → logprob: -4.423458576202393

Token 470: 'は' (ID: 5205)
  Prédit: 'は'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'は' → logprob: -0.5646066069602966
    2. '）' → logprob: -1.1896066665649414
    3. ')' → logprob: -2.9396066665649414
    4. '）は' → logprob: -3.0646066665649414
    5. '=' → logprob: -5.064606666564941
    6. ' は' → logprob: -5.564606666564941
    7. ']' → logprob: -5.939606666564941
    8. '   ' → logprob: -6.564606666564941
    9. ' ' → logprob: -6.689606666564941
    10. 'for' → logprob: -6.814606666564941

Token 471: '支' (ID: 18904)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20774589478969574
    2. 'float' → logprob: -2.9577457904815674
    3. '   ' → logprob: -3.8327457904815674
    4. 'z' → logprob: -4.0827460289001465
    5. 'cost' → logprob: -4.2077460289001465
    6. 'P' → logprob: -4.4577460289001465
    7. 'continue' → logprob: -4.4577460289001465
    8. '1' → logprob: -4.5827460289001465
    9. '100' → logprob: -4.7077460289001465
    10. 'sys' → logprob: -4.8327460289001465

Token 472: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -0.5564121603965759
    2. '払' → logprob: -2.0564122200012207
    3. '障' → logprob: -2.3064122200012207
    4. '払い' → logprob: -2.5564122200012207
    5. '援' → logprob: -2.9314122200012207
    6. 'え' → logprob: -3.1814122200012207
    7. '0' → logprob: -4.931412220001221
    8. '[]' → logprob: -5.306412220001221
    9. '```' → logprob: -5.931412220001221
    10. '[' → logprob: -6.306412220001221

Token 473: '町' (ID: 92479)
  Prédit: 'され'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'され' → logprob: -0.8176096677780151
    2. '町' → logprob: -0.9426096677780151
    3. 'town' → logprob: -4.192609786987305
    4. '   ' → logprob: -4.192609786987305
    5. '）' → logprob: -4.442609786987305
    6. '0' → logprob: -4.442609786987305
    7. 'された' → logprob: -4.442609786987305
    8. '済' → logprob: -4.567609786987305
    9. '外' → logprob: -4.817609786987305
    10. '[' → logprob: -4.942609786987305

Token 474: 'なので' (ID: 145461)
  Prédit: '）'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '）' → logprob: -0.7102001905441284
    2. '）
' → logprob: -1.3352001905441284
    3. '   ' → logprob: -2.460200309753418
    4. 'は' → logprob: -3.210200309753418
    5. 'として' → logprob: -3.335200309753418
    6. ')' → logprob: -3.835200309753418
    7. ')
' → logprob: -4.085200309753418
    8. 'では' → logprob: -5.085200309753418
    9. '）は' → logprob: -5.210200309753418
    10. 'の' → logprob: -5.335200309753418

Token 475: '通' (ID: 9034)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47148358821868896
    2. 'continue' → logprob: -1.596483588218689
    3. '   ' → logprob: -2.4714837074279785
    4. 'cost' → logprob: -3.7214837074279785
    5. 'pass' → logprob: -4.0964837074279785
    6. ' ' → logprob: -4.5964837074279785
    7. 'dist' → logprob: -4.5964837074279785
    8. ' continue' → logprob: -4.7214837074279785
    9. ')' → logprob: -5.3464837074279785
    10. 'inf' → logprob: -5.4714837074279785

Token 476: 'れ' (ID: 9472)
  Prédit: '行'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '行' → logprob: -0.07117628306150436
    2. 'れ' → logprob: -3.821176290512085
    3. '```' → logprob: -4.071176052093506
    4. 'ら' → logprob: -4.321176052093506
    5. '過' → logprob: -5.196176052093506
    6. '#' → logprob: -5.821176052093506
    7. '
' → logprob: -6.071176052093506
    8. 'さ' → logprob: -6.946176052093506
    9. 'せ' → logprob: -7.071176052093506
    10. '   ' → logprob: -7.446176052093506

Token 477: 'ない' (ID: 47592)
  Prédit: 'ない'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ない' → logprob: -0.04611416906118393
    2. 'な' → logprob: -3.171114206314087
    3. '```' → logprob: -6.421113967895508
    4. 'なく' → logprob: -7.796113967895508
    5. 'ません' → logprob: -8.296113967895508
    6. '）' → logprob: -8.921113967895508
    7. 'け' → logprob: -9.046113967895508
    8. '
' → logprob: -9.796113967895508
    9. '禁止' → logprob: -9.796113967895508
    10. 'なし' → logprob: -9.921113967895508

Token 478: '）
' (ID: 18433)
  Prédit: '）
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）
' → logprob: -0.2801206707954407
    2. '）' → logprob: -2.155120611190796
    3. ')
' → logprob: -2.280120611190796
    4. ')' → logprob: -3.780120611190796
    5. '#' → logprob: -6.655120849609375
    6. '   ' → logprob: -6.905120849609375
    7. '）

' → logprob: -7.905120849609375
    8. ')
' → logprob: -8.530120849609375
    9. '```' → logprob: -8.905120849609375
    10. 'for' → logprob: -10.030120849609375

Token 479: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.011698413640260696
    2. '   ' → logprob: -5.136698246002197
    3. ' cost' → logprob: -5.386698246002197
    4. ' costs' → logprob: -7.386698246002197
    5. '宿' → logprob: -9.261698722839355
    6. 'price' → logprob: -9.261698722839355
    7. '
' → logprob: -9.511698722839355
    8. 'dist' → logprob: -10.011698722839355
    9. 'dp' → logprob: -10.136698722839355
    10. 'fee' → logprob: -10.761698722839355

Token 480: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.009037123993039131
    2. '   ' → logprob: -4.884037017822266
    3. ' cost' → logprob: -6.884037017822266
    4. ' costs' → logprob: -9.259037017822266
    5. '宿' → logprob: -9.259037017822266
    6. 'dp' → logprob: -10.009037017822266
    7. 'dist' → logprob: -10.384037017822266
    8. '
' → logprob: -10.759037017822266
    9. 'price' → logprob: -11.009037017822266
    10. 'import' → logprob: -11.259037017822266

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132671117782593
    2. '=' → logprob: -1.3132671117782593
    3. '＝' → logprob: -13.06326675415039
    4. ' ' → logprob: -13.43826675415039
    5. '=[' → logprob: -14.56326675415039
    6. '=[]' → logprob: -15.06326675415039
    7. ' =[' → logprob: -15.43826675415039
    8. '[' → logprob: -15.56326675415039
    9. '   ' → logprob: -15.81326675415039
    10. 's' → logprob: -16.18826675415039

Token 482: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003595376620069146
    2. ' [' → logprob: -8.750359535217285
    3. '[-' → logprob: -9.000359535217285
    4. '[N' → logprob: -9.875359535217285
    5. '[n' → logprob: -11.000359535217285
    6. '[len' → logprob: -13.000359535217285
    7. '   ' → logprob: -13.375359535217285
    8. '[int' → logprob: -13.375359535217285
    9. '[num' → logprob: -14.000359535217285
    10. '[node' → logprob: -14.500359535217285

Token 483: '0' (ID: 15)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.40501803159713745
    2. '0' → logprob: -1.6550180912017822
    3. 'Q' → logprob: -2.2800180912017822
    4. '10' → logprob: -3.2800180912017822
    5. '-' → logprob: -7.155017852783203
    6. 'P' → logprob: -7.530017852783203
    7. 'None' → logprob: -7.655017852783203
    8. ' float' → logprob: -9.405017852783203
    9. ' ' → logprob: -9.780017852783203
    10. '100' → logprob: -9.780017852783203

Token 484: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5792657732963562
    2. ']' → logprob: -0.8292657732963562
    3. ' for' → logprob: -6.329265594482422
    4. ']*' → logprob: -7.204265594482422
    5. ']+' → logprob: -7.829265594482422
    6. 'for' → logprob: -7.954265594482422
    7. '   ' → logprob: -10.704265594482422
    8. ',' → logprob: -11.079265594482422
    9. ' ]' → logprob: -12.454265594482422
    10. '*(' → logprob: -14.329265594482422

Token 485: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.2664456789934775e-06
    2. ' N' → logprob: -13.750000953674316
    3. '(N' → logprob: -16.750001907348633
    4. '   ' → logprob: -17.875001907348633
    5. 'len' → logprob: -18.375001907348633
    6. 'n' → logprob: -19.000001907348633
    7. '	N' → logprob: -20.250001907348633
    8. 'Ｎ' → logprob: -20.750001907348633
    9. '
' → logprob: -21.375001907348633
    10. ',N' → logprob: -22.125001907348633

Token 486: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0280383548888494e-06
    2. ' +' → logprob: -14.000000953674316
    3. '+
' → logprob: -16.625001907348633
    4. '＋' → logprob: -18.125001907348633
    5. '1' → logprob: -18.625001907348633
    6. '+)' → logprob: -20.250001907348633
    7. '
' → logprob: -21.125001907348633
    8. '```' → logprob: -21.250001907348633
    9. '+[' → logprob: -21.500001907348633
    10. ')+' → logprob: -22.000001907348633

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.868328920158092e-05
    2. '+' → logprob: -10.625028610229492
    3. ' ' → logprob: -12.625028610229492
    4. '   ' → logprob: -14.750028610229492
    5. '2' → logprob: -15.500028610229492
    6. '
' → logprob: -16.125028610229492
    7. '```' → logprob: -16.500028610229492
    8. ' +' → logprob: -17.000028610229492
    9. '7' → logprob: -17.000028610229492
    10. ')' → logprob: -17.125028610229492

Token 488: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003079334564972669
    2. ')
' → logprob: -8.1253080368042
    3. ' )' → logprob: -11.3753080368042
    4. ')

' → logprob: -15.8753080368042
    5. ')
' → logprob: -16.125307083129883
    6. '   ' → logprob: -16.500307083129883
    7. ')#' → logprob: -17.000307083129883
    8. ' )
' → logprob: -17.375307083129883
    9. '）' → logprob: -17.500307083129883
    10. '
' → logprob: -17.500307083129883

Token 489: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10180886834859848
    2. ' for' → logprob: -2.351808786392212
    3. '   ' → logprob: -6.476809024810791
    4. '	for' → logprob: -9.851808547973633
    5. '
' → logprob: -12.226808547973633
    6. '```' → logprob: -13.101808547973633
    7. '    
' → logprob: -13.851808547973633
    8. '<|end|>' → logprob: -14.601808547973633
    9. ' ' → logprob: -14.976808547973633
    10. ' 
' → logprob: -15.101808547973633

Token 490: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.941850526549388e-06
    2. ' for' → logprob: -11.875007629394531
    3. '   ' → logprob: -14.000007629394531
    4. '```' → logprob: -16.62500762939453
    5. '	for' → logprob: -18.00000762939453
    6. 'import' → logprob: -18.50000762939453
    7. '
' → logprob: -19.25000762939453
    8. '``' → logprob: -19.75000762939453
    9. 'i' → logprob: -19.87500762939453
    10. '1' → logprob: -20.00000762939453

Token 491: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00017147827020380646
    2. 'v' → logprob: -9.125171661376953
    3. 'city' → logprob: -10.375171661376953
    4. ' i' → logprob: -10.875171661376953
    5. 'town' → logprob: -11.375171661376953
    6. ' city' → logprob: -15.625171661376953
    7. ' town' → logprob: -15.875171661376953
    8. 'u' → logprob: -16.000171661376953
    9. 'node' → logprob: -16.125171661376953
    10. '   ' → logprob: -16.500171661376953

Token 492: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3133370876312256
    2. 'in' → logprob: -1.3133370876312256
    3. 'range' → logprob: -9.813337326049805
    4. ' ' → logprob: -12.063337326049805
    5. '1' → logprob: -12.313337326049805
    6. 'i' → logprob: -12.438337326049805
    7. ',' → logprob: -13.563337326049805
    8. '   ' → logprob: -13.563337326049805
    9. 'n' → logprob: -14.063337326049805
    10. ' range' → logprob: -14.938337326049805

Token 493: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -19.250709533691406
    4. '	range' → logprob: -21.375709533691406
    5. '   ' → logprob: -21.750709533691406
    6. ' ' → logprob: -22.875709533691406
    7. '```' → logprob: -23.875709533691406
    8. 'rang' → logprob: -24.250709533691406
    9. 'Range' → logprob: -24.500709533691406
    10. 'r' → logprob: -24.750709533691406

Token 494: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.034592388459714e-06
    2. '   ' → logprob: -12.875005722045898
    3. ' ' → logprob: -12.875005722045898
    4. '1' → logprob: -14.375005722045898
    5. '(' → logprob: -15.375005722045898
    6. '
' → logprob: -18.3750057220459
    7. '２' → logprob: -20.3750057220459
    8. '  ' → logprob: -20.5000057220459
    9. '```' → logprob: -20.5000057220459
    10. '    ' → logprob: -21.2500057220459

Token 495: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014013137842994183
    2. '1' → logprob: -8.875140190124512
    3. ' ' → logprob: -15.250140190124512
    4. '   ' → logprob: -17.375139236450195
    5. '２' → logprob: -19.125139236450195
    6. '  ' → logprob: -21.375139236450195
    7. '```' → logprob: -21.375139236450195
    8. '
' → logprob: -22.000139236450195
    9. '(' → logprob: -22.750139236450195
    10. '    ' → logprob: -22.875139236450195

Token 496: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006109290407039225
    2. ',N' → logprob: -7.875610828399658
    3. ' ,' → logprob: -8.375611305236816
    4. ',n' → logprob: -15.875611305236816
    5. 'N' → logprob: -16.2506103515625
    6. '，' → logprob: -17.1256103515625
    7. '   ' → logprob: -17.2506103515625
    8. ',i' → logprob: -18.0006103515625
    9. ',len' → logprob: -18.1256103515625
    10. '1' → logprob: -18.2506103515625

Token 497: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005530327325686812
    2. ' N' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.125553131103516
    4. '	N' → logprob: -18.625553131103516
    5. 'Ｎ' → logprob: -20.375553131103516
    6. ' ' → logprob: -20.500553131103516
    7. '
' → logprob: -20.875553131103516
    8. 'n' → logprob: -21.000553131103516
    9. ',N' → logprob: -21.625553131103516
    10. '    ' → logprob: -21.875553131103516

Token 498: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6780536770820618
    2. '):
' → logprob: -1.053053617477417
    3. ')' → logprob: -2.178053617477417
    4. '+' → logprob: -3.928053617477417
    5. '0' → logprob: -5.553053855895996
    6. '   ' → logprob: -5.928053855895996
    7. ' ' → logprob: -7.928053855895996
    8. '1' → logprob: -7.928053855895996
    9. '  ' → logprob: -7.928053855895996
    10. '<|end|>' → logprob: -7.928053855895996

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014620713889598846
    2. '   ' → logprob: -4.389620780944824
    3. '<|end|>' → logprob: -6.764620780944824
    4. ' if' → logprob: -8.014620780944824
    5. '        
' → logprob: -8.639620780944824
    6. ':' → logprob: -9.389620780944824
    7. 'if' → logprob: -9.389620780944824
    8. '```' → logprob: -9.764620780944824
    9. '):
' → logprob: -10.264620780944824
    10. ',' → logprob: -10.389620780944824

Token 500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.734199047088623
    2. ' if' → logprob: -0.734199047088623
    3. 'cost' → logprob: -4.234199047088623
    4. '   ' → logprob: -4.359199047088623
    5. ' cost' → logprob: -4.359199047088623
    6. '       ' → logprob: -9.484199523925781
    7. '```' → logprob: -10.484199523925781
    8. ')' → logprob: -11.484199523925781
    9. '    ' → logprob: -11.734199523925781
    10. '	if' → logprob: -11.859199523925781

Token 501: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00010020548506872728
    2. ' dist' → logprob: -9.250100135803223
    3. '0' → logprob: -12.750100135803223
    4. '   ' → logprob: -14.125100135803223
    5. '	dist' → logprob: -14.875100135803223
    6. ' ' → logprob: -16.75010108947754
    7. '1' → logprob: -17.75010108947754
    8. 'cost' → logprob: -17.75010108947754
    9. 'distance' → logprob: -17.87510108947754
    10. '(dist' → logprob: -18.50010108947754

Token 502: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -13.000005722045898
    3. 'i' → logprob: -13.000005722045898
    4. ' [' → logprob: -14.500005722045898
    5. '```' → logprob: -15.500005722045898
    6. '   ' → logprob: -15.875005722045898
    7. '(i' → logprob: -17.0000057220459
    8. '>' → logprob: -17.2500057220459
    9. '[I' → logprob: -17.2500057220459
    10. '``' → logprob: -17.5000057220459

Token 503: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26146236062049866
    2. ']==' → logprob: -2.136462450027466
    3. '>' → logprob: -2.511462450027466
    4. '==' → logprob: -4.636462211608887
    5. ']>' → logprob: -4.636462211608887
    6. ']>=' → logprob: -5.511462211608887
    7. ' ==' → logprob: -6.511462211608887
    8. ' >' → logprob: -6.511462211608887
    9. ']!=' → logprob: -6.636462211608887
    10. '>=' → logprob: -7.136462211608887

Token 504: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007315188646316528
    2. '>=' → logprob: -5.382315158843994
    3. ' ==' → logprob: -6.382315158843994
    4. '>' → logprob: -7.382315158843994
    5. '0' → logprob: -8.382315635681152
    6. '==-' → logprob: -9.757315635681152
    7. '!=' → logprob: -10.382315635681152
    8. '=' → logprob: -11.382315635681152
    9. '==
' → logprob: -11.507315635681152
    10. '<=' → logprob: -11.507315635681152

Token 505: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028266964363865554
    2. ' ' → logprob: -8.500282287597656
    3. '-' → logprob: -9.500282287597656
    4. ' -' → logprob: -12.500282287597656
    5. '   ' → logprob: -15.125282287597656
    6. '1' → logprob: -16.437782287597656
    7. '  ' → logprob: -17.250282287597656
    8. '=' → logprob: -17.875282287597656
    9. '    ' → logprob: -18.250282287597656
    10. '０' → logprob: -18.375282287597656

Token 506: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4745195806026459
    2. '1' → logprob: -0.9745196104049683
    3. '-' → logprob: -8.349519729614258
    4. ' ' → logprob: -8.974519729614258
    5. '2' → logprob: -10.224519729614258
    6. ' -' → logprob: -11.099519729614258
    7. '   ' → logprob: -11.099519729614258
    8. '    ' → logprob: -12.912019729614258
    9. '  ' → logprob: -13.349519729614258
    10. '100' → logprob: -13.974519729614258

Token 507: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14489106833934784
    2. 'and' → logprob: -2.0198910236358643
    3. ':' → logprob: -6.144891262054443
    4. ':
' → logprob: -10.519890785217285
    5. ' ' → logprob: -10.644890785217285
    6. '<|end|>' → logprob: -11.644890785217285
    7. '   ' → logprob: -13.144890785217285
    8. ' :' → logprob: -13.144890785217285
    9. '	and' → logprob: -13.144890785217285
    10. ')' → logprob: -13.644890785217285

Token 508: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.029770972207188606
    2. ' dist' → logprob: -3.529771089553833
    3. '   ' → logprob: -11.404770851135254
    4. '	dist' → logprob: -12.779770851135254
    5. '1' → logprob: -13.404770851135254
    6. ' ' → logprob: -13.529770851135254
    7. 'cost' → logprob: -13.779770851135254
    8. '(dist' → logprob: -14.404770851135254
    9. 'i' → logprob: -14.654770851135254
    10. '```' → logprob: -15.154770851135254

Token 509: '[i' (ID: 1768)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6081961989402771
    2. ' <=' → logprob: -0.8581961989402771
    3. '[i' → logprob: -3.483196258544922
    4. '[' → logprob: -7.358196258544922
    5. ' ' → logprob: -8.608196258544922
    6. ']<=' → logprob: -9.608196258544922
    7. ')<=' → logprob: -9.858196258544922
    8. 'i' → logprob: -10.358196258544922
    9. '[]' → logprob: -11.233196258544922
    10. '```' → logprob: -11.358196258544922

Token 510: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6965093016624451
    2. '<=' → logprob: -0.6965093016624451
    3. ']<=' → logprob: -6.82150936126709
    4. ']' → logprob: -7.07150936126709
    5. '>' → logprob: -7.44650936126709
    6. ' ' → logprob: -8.19650936126709
    7. ')<=' → logprob: -8.69650936126709
    8. ')' → logprob: -9.07150936126709
    9. ' >' → logprob: -9.44650936126709
    10. '<' → logprob: -10.07150936126709

Token 511: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.03370402753353119
    2. ' <=' → logprob: -3.4087040424346924
    3. '<' → logprob: -10.658703804016113
    4. ' ' → logprob: -12.033703804016113
    5. '```' → logprob: -12.033703804016113
    6. '>' → logprob: -12.408703804016113
    7. '0' → logprob: -12.533703804016113
    8. '   ' → logprob: -12.658703804016113
    9. '==' → logprob: -12.783703804016113
    10. ')<=' → logprob: -13.283703804016113

Token 512: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0005532711511477828
    2. ' S' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.125553131103516
    4. '	S' → logprob: -16.625553131103516
    5. '   ' → logprob: -18.375553131103516
    6. '<|end|>' → logprob: -18.750553131103516
    7. '  ' → logprob: -19.125553131103516
    8. '>S' → logprob: -19.375553131103516
    9. '_S' → logprob: -20.125553131103516
    10. '(S' → logprob: -20.125553131103516

Token 513: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.313880980014801
    2. ':
' → logprob: -1.3138809204101562
    3. ' and' → logprob: -7.813880920410156
    4. '       ' → logprob: -9.688880920410156
    5. '   ' → logprob: -10.188880920410156
    6. ' :' → logprob: -10.438880920410156
    7. ':
' → logprob: -10.563880920410156
    8. '):
' → logprob: -10.938880920410156
    9. ' :
' → logprob: -11.063880920410156
    10. '           ' → logprob: -12.188880920410156

Token 514: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6082685589790344
    2. ' =' → logprob: -1.4832684993743896
    3. ':' → logprob: -2.4832684993743896
    4. '       ' → logprob: -2.8582684993743896
    5. '=' → logprob: -2.9832684993743896
    6. '<|end|>' → logprob: -3.7332684993743896
    7. ':
' → logprob: -5.483268737792969
    8. ',' → logprob: -6.483268737792969
    9. '<|end|>' → logprob: -6.483268737792969
    10. ' and' → logprob: -6.858268737792969

Token 515: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4767681360244751
    2. ' cost' → logprob: -0.9767681360244751
    3. '   ' → logprob: -6.1017680168151855
    4. '       ' → logprob: -7.8517680168151855
    5. '_cost' → logprob: -11.351768493652344
    6. '           ' → logprob: -11.601768493652344
    7. '.cost' → logprob: -12.101768493652344
    8. '(cost' → logprob: -12.101768493652344
    9. ' ' → logprob: -12.351768493652344
    10. '```' → logprob: -12.351768493652344

Token 516: ' �' (ID: 8570)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.043156418949365616
    2. ' cost' → logprob: -3.168156385421753
    3. '   ' → logprob: -8.793156623840332
    4. '       ' → logprob: -12.793156623840332
    5. ' ' → logprob: -14.793156623840332
    6. '```' → logprob: -14.793156623840332
    7. '    ' → logprob: -15.168156623840332
    8. 'code' → logprob: -15.168156623840332
    9. '_cost' → logprob: -15.293156623840332
    10. '           ' → logprob: -15.418156623840332

Token 517: '�' (ID: 109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.012534137815237045
    2. ' cost' → logprob: -4.387534141540527
    3. 'c' → logprob: -12.262534141540527
    4. '   ' → logprob: -12.637534141540527
    5. ' ' → logprob: -12.762534141540527
    6. '
' → logprob: -12.762534141540527
    7. 'i' → logprob: -12.762534141540527
    8. '_cost' → logprob: -13.012534141540527
    9. '(cost' → logprob: -14.262534141540527
    10. '```' → logprob: -14.637534141540527

Token 518: '険' (ID: 137177)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5816518068313599
    2. 'cost' → logprob: -0.8316518068313599
    3. '   ' → logprob: -5.45665168762207
    4. '[i' → logprob: -7.95665168762207
    5. ' ' → logprob: -8.20665168762207
    6. ' i' → logprob: -8.45665168762207
    7. 'i' → logprob: -9.39415168762207
    8. '    ' → logprob: -9.64415168762207
    9. '[' → logprob: -10.08165168762207
    10. '  ' → logprob: -10.14415168762207

Token 519: 'な' (ID: 5784)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0853734239935875
    2. '   ' → logprob: -2.9603734016418457
    3. 'cost' → logprob: -3.9603734016418457
    4. ' cost' → logprob: -5.835373401641846
    5. ' ' → logprob: -6.710373401641846
    6. '[' → logprob: -6.710373401641846
    7. '       ' → logprob: -6.710373401641846
    8. 'な' → logprob: -6.960373401641846
    9. '町' → logprob: -7.085373401641846
    10. ' =' → logprob: -7.460373401641846

Token 520: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.6938704252243042
    2. 'town' → logprob: -1.0688704252243042
    3. ' town' → logprob: -2.3188705444335938
    4. ' towns' → logprob: -3.6938705444335938
    5. '[i' → logprob: -4.068870544433594
    6. 'cost' → logprob: -4.568870544433594
    7. '   ' → logprob: -5.943870544433594
    8. ' ' → logprob: -6.693870544433594
    9. ' cost' → logprob: -7.068870544433594
    10. 'i' → logprob: -8.193870544433594

Token 521: '：' (ID: 1817)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8645116686820984
    2. ' =' → logprob: -0.9895116686820984
    3. '   ' → logprob: -1.6145117282867432
    4. '=' → logprob: -5.614511489868164
    5. '       ' → logprob: -5.614511489868164
    6. '           ' → logprob: -8.864511489868164
    7. 'cost' → logprob: -8.989511489868164
    8. '[' → logprob: -9.239511489868164
    9. '  ' → logprob: -9.989511489868164
    10. ' ' → logprob: -10.114511489868164

Token 522: '高' (ID: 5319)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.10509919375181198
    2. 'cost' → logprob: -2.8550992012023926
    3. ' Q' → logprob: -3.4800992012023926
    4. ' cost' → logprob: -4.480099201202393
    5. '   ' → logprob: -9.980098724365234
    6. '```' → logprob: -11.480098724365234
    7. 'P' → logprob: -11.730098724365234
    8. 'Cost' → logprob: -12.980098724365234
    9. '	Q' → logprob: -13.355098724365234
    10. ' ' → logprob: -14.105098724365234

Token 523: '級' (ID: 46696)
  Prédit: '級'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '級' → logprob: -0.050220560282468796
    2. '   ' → logprob: -3.800220489501953
    3. 'cost' → logprob: -4.425220489501953
    4. 'Q' → logprob: -5.175220489501953
    5. 'コ' → logprob: -6.425220489501953
    6. '宿' → logprob: -6.800220489501953
    7. ' Q' → logprob: -6.800220489501953
    8. '額' → logprob: -6.925220489501953
    9. '     ' → logprob: -7.175220489501953
    10. '    ' → logprob: -7.800220489501953

Token 524: '宿' (ID: 62310)
  Prédit: '宿'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '宿' → logprob: -0.16221657395362854
    2. 'cost' → logprob: -2.7872166633605957
    3. '   ' → logprob: -2.9122166633605957
    4. ' cost' → logprob: -3.6622166633605957
    5. '```' → logprob: -5.787216663360596
    6. '       ' → logprob: -7.162216663360596
    7. ' hostel' → logprob: -7.162216663360596
    8. ' ' → logprob: -7.912216663360596
    9. 'host' → logprob: -8.037216186523438
    10. 'の' → logprob: -8.162216186523438

Token 525: 'Q' (ID: 48)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.021611329168081284
    2. '   ' → logprob: -4.646611213684082
    3. ' =' → logprob: -5.146611213684082
    4. '
' → logprob: -5.646611213684082
    5. '=' → logprob: -7.396611213684082
    6. '```' → logprob: -7.396611213684082
    7. 'cost' → logprob: -8.146611213684082
    8. ']' → logprob: -8.646611213684082
    9. '       ' → logprob: -8.771611213684082
    10. ' ' → logprob: -9.646611213684082

Token 526: '円' (ID: 13474)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29772713780403137
    2. '
' → logprob: -1.672727108001709
    3. '           ' → logprob: -3.922727108001709
    4. ' =' → logprob: -4.047727108001709
    5. '   ' → logprob: -4.422727108001709
    6. '=' → logprob: -4.797727108001709
    7. '<|end|>' → logprob: -5.172727108001709
    8. ')' → logprob: -6.422727108001709
    9. '               ' → logprob: -6.672727108001709
    10. ')
' → logprob: -7.172727108001709

Token 528: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4058690667152405
    2. ' cost' → logprob: -1.9058690071105957
    3. '           ' → logprob: -2.5308690071105957
    4. '
' → logprob: -2.7808690071105957
    5. 'cost' → logprob: -3.5308690071105957
    6. '               ' → logprob: -5.155869007110596
    7. '   ' → logprob: -5.905869007110596
    8. ' =' → logprob: -6.530869007110596
    9. '            
' → logprob: -6.905869007110596
    10. '        
' → logprob: -7.280869007110596

Token 529: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.283004492521286
    2. ' cost' → logprob: -1.4080045223236084
    3. '   ' → logprob: -6.533004283905029
    4. '       ' → logprob: -8.158004760742188
    5. '           ' → logprob: -9.283004760742188
    6. '               ' → logprob: -11.908004760742188
    7. ' ' → logprob: -12.408004760742188
    8. '_cost' → logprob: -13.408004760742188
    9. '
' → logprob: -13.533004760742188
    10. '    ' → logprob: -14.283004760742188

Token 530: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -14.375001907348633
    4. '\[' → logprob: -17.875001907348633
    5. '[I' → logprob: -17.875001907348633
    6. '
' → logprob: -18.125001907348633
    7. 'i' → logprob: -18.125001907348633
    8. '```' → logprob: -18.500001907348633
    9. '=' → logprob: -18.750001907348633
    10. ' =' → logprob: -19.500001907348633

Token 531: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31361547112464905
    2. '=' → logprob: -1.3136154413223267
    3. ']' → logprob: -8.063615798950195
    4. ']=' → logprob: -10.563615798950195
    5. ')' → logprob: -11.688615798950195
    6. ' ' → logprob: -13.188615798950195
    7. ')=' → logprob: -13.813615798950195
    8. ' ]' → logprob: -14.188615798950195
    9. '＝' → logprob: -14.938615798950195
    10. '=i' → logprob: -15.188615798950195

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889066636562347
    2. '=' → logprob: -2.578890562057495
    3. '＝' → logprob: -14.703890800476074
    4. ' +=' → logprob: -15.703890800476074
    5. ' ' → logprob: -15.703890800476074
    6. '+=' → logprob: -16.953889846801758
    7. ' =
' → logprob: -17.203889846801758
    8. '=int' → logprob: -18.078889846801758
    9. '=
' → logprob: -18.328889846801758
    10. '   ' → logprob: -18.453889846801758

Token 533: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.003600544296205044
    2. ' Q' → logprob: -5.628600597381592
    3. '   ' → logprob: -15.378600120544434
    4. '	Q' → logprob: -15.628600120544434
    5. ' ' → logprob: -16.12860107421875
    6. 'P' → logprob: -18.25360107421875
    7. '  ' → logprob: -18.75360107421875
    8. '    ' → logprob: -19.50360107421875
    9. '```' → logprob: -19.75360107421875
    10. '(Q' → logprob: -19.87860107421875

Token 534: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05712083354592323
    2. 'else' → logprob: -3.4321208000183105
    3. ' else' → logprob: -3.8071208000183105
    4. '
' → logprob: -7.3071208000183105
    5. 'elif' → logprob: -8.807121276855469
    6. '   ' → logprob: -9.557121276855469
    7. '<|end|>' → logprob: -10.057121276855469
    8. ' elif' → logprob: -10.557121276855469
    9. '	else' → logprob: -11.682121276855469
    10. ' ' → logprob: -12.307121276855469

Token 535: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12961287796497345
    2. 'else' → logprob: -2.254612922668457
    3. ' else' → logprob: -4.129612922668457
    4. 'elif' → logprob: -7.754612922668457
    5. '
' → logprob: -9.504612922668457
    6. '   ' → logprob: -10.504612922668457
    7. ' elif' → logprob: -11.129612922668457
    8. '```' → logprob: -12.254612922668457
    9. '	else' → logprob: -12.629612922668457
    10. ' ' → logprob: -12.879612922668457

Token 536: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9079455137252808
    2. 'else' (adapté à ' else') → logprob: -0.9079455137252808
    3. ' else' → logprob: -1.6579455137252808
    4. 'elif' → logprob: -6.40794563293457
    5. '   ' → logprob: -7.15794563293457
    6. ' elif' → logprob: -8.15794563293457
    7. '	else' → logprob: -10.78294563293457
    8. ' ' → logprob: -11.28294563293457
    9. '           ' → logprob: -12.78294563293457
    10. '    ' → logprob: -12.78294563293457

Token 537: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16581451892852783
    2. ':' → logprob: -2.5408143997192383
    3. '   ' → logprob: -3.6658143997192383
    4. '           ' → logprob: -3.6658143997192383
    5. ':
' → logprob: -3.9158143997192383
    6. ' =' → logprob: -7.415814399719238
    7. '=' → logprob: -7.540814399719238
    8. ' cost' → logprob: -7.915814399719238
    9. '<|end|>' → logprob: -8.040814399719238
    10. ',' → logprob: -8.415814399719238

Token 538: '           ' (ID: 352)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.25725919008255005
    2. ' P' → logprob: -1.5072591304779053
    3. '   ' → logprob: -5.882259368896484
    4. '       ' → logprob: -6.257259368896484
    5. ' ' → logprob: -7.882259368896484
    6. '           ' → logprob: -9.382259368896484
    7. '    ' → logprob: -10.132259368896484
    8. '  ' → logprob: -11.007259368896484
    9. '
' → logprob: -11.382259368896484
    10. '	P' → logprob: -11.507259368896484

Token 539: ' #' (ID: 1069)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0619683600962162
    2. ' P' → logprob: -2.8119683265686035
    3. '   ' → logprob: -14.561968803405762
    4. ' ' → logprob: -16.561967849731445
    5. '	P' → logprob: -16.686967849731445
    6. '_P' → logprob: -17.186967849731445
    7. 'cost' → logprob: -17.436967849731445
    8. ' cost' → logprob: -18.436967849731445
    9. ' ' → logprob: -18.561967849731445
    10. 'p' → logprob: -18.561967849731445

Token 540: ' �' (ID: 8570)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4332442879676819
    2. 'cost' → logprob: -1.558244228363037
    3. 'P' → logprob: -2.433244228363037
    4. ' P' → logprob: -2.933244228363037
    5. '   ' → logprob: -9.933244705200195
    6. ' ' → logprob: -10.433244705200195
    7. '    ' → logprob: -11.558244705200195
    8. 'Cost' → logprob: -12.058244705200195
    9. '
' → logprob: -12.558244705200195
    10. '```' → logprob: -13.058244705200195

Token 541: '�' (ID: 109)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.20182590186595917
    2. ' P' → logprob: -1.7018258571624756
    3. ' ' → logprob: -8.201826095581055
    4. '   ' → logprob: -10.076826095581055
    5. 'i' → logprob: -10.576826095581055
    6. '=' → logprob: -10.951826095581055
    7. '	P' → logprob: -11.701826095581055
    8. ' i' → logprob: -11.826826095581055
    9. '  ' → logprob: -11.951826095581055
    10. ' =' → logprob: -12.326826095581055

Token 542: '険' (ID: 137177)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.865196943283081
    2. ' P' → logprob: -1.740196943283081
    3. 'i' → logprob: -2.240196943283081
    4. 'cost' → logprob: -2.240196943283081
    5. ' i' → logprob: -2.740196943283081
    6. '[i' → logprob: -2.740196943283081
    7. ' cost' → logprob: -2.865196943283081
    8. '   ' → logprob: -6.11519718170166
    9. ' ' → logprob: -6.36519718170166
    10. ' =' → logprob: -9.11519718170166

Token 543: 'で' (ID: 4344)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003794135060161352
    2. '   ' → logprob: -6.503794193267822
    3. ' =' → logprob: -6.753794193267822
    4. ' [' → logprob: -7.628794193267822
    5. '[' → logprob: -7.878794193267822
    6. '=' → logprob: -9.253793716430664
    7. ' ' → logprob: -9.753793716430664
    8. ' i' → logprob: -10.128793716430664
    9. 'i' → logprob: -10.753793716430664
    10. '  ' → logprob: -11.628793716430664

Token 544: 'ない' (ID: 47592)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.4052109718322754
    2. ' P' → logprob: -1.1552109718322754
    3. ' cost' → logprob: -4.405210971832275
    4. 'cost' → logprob: -5.155210971832275
    5. ' ' → logprob: -9.780210494995117
    6. '   ' → logprob: -10.780210494995117
    7. '0' → logprob: -10.780210494995117
    8. '=' → logprob: -11.030210494995117
    9. ' =' → logprob: -11.280210494995117
    10. ' i' → logprob: -11.530210494995117

Token 545: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.19727644324302673
    2. 'な' → logprob: -3.1972763538360596
    3. ' town' → logprob: -3.3222763538360596
    4. ':' → logprob: -3.4472763538360596
    5. ' ' → logprob: -3.5722763538360596
    6. ' i' → logprob: -4.947276592254639
    7. ' cost' → logprob: -5.072276592254639
    8. 'cost' → logprob: -5.197276592254639
    9. 'town' → logprob: -5.447276592254639
    10. ' towns' → logprob: -5.697276592254639

Token 546: '：' (ID: 1817)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7242531776428223
    2. '=' → logprob: -0.9742531776428223
    3. ':' → logprob: -2.0992531776428223
    4. '   ' → logprob: -4.599253177642822
    5. '[i' → logprob: -6.349253177642822
    6. ' :' → logprob: -6.724253177642822
    7. 'cost' → logprob: -7.224253177642822
    8. ' cost' → logprob: -7.349253177642822
    9. ':
' → logprob: -7.849253177642822
    10. ' ' → logprob: -8.474252700805664

Token 547: '安' (ID: 7837)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.023252464830875397
    2. ' P' → logprob: -3.773252487182617
    3. '   ' → logprob: -12.648252487182617
    4. ' ' → logprob: -13.648252487182617
    5. '
' → logprob: -14.398252487182617
    6. '	P' → logprob: -14.648252487182617
    7. '_P' → logprob: -15.023252487182617
    8. '0' → logprob: -15.523252487182617
    9. 'cost' → logprob: -15.648252487182617
    10. 'p' → logprob: -15.773252487182617

Token 548: 'い' (ID: 3826)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.34869468212127686
    2. ' ' → logprob: -2.2236948013305664
    3. '   ' → logprob: -2.8486948013305664
    4. 'P' → logprob: -3.2236948013305664
    5. ' cost' → logprob: -3.2236948013305664
    6. 'cost' → logprob: -4.473694801330566
    7. '[i' → logprob: -4.848694801330566
    8. '*' → logprob: -4.973694801330566
    9. ' i' → logprob: -5.223694801330566
    10. '  ' → logprob: -5.348694801330566

Token 549: '宿' (ID: 62310)
  Prédit: '宿'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '宿' → logprob: -0.13533329963684082
    2. 'cost' → logprob: -2.760333299636841
    3. ' cost' → logprob: -3.135333299636841
    4. ' P' → logprob: -5.010333061218262
    5. ' ' → logprob: -5.385333061218262
    6. 'host' → logprob: -5.885333061218262
    7. 'P' → logprob: -6.635333061218262
    8. '   ' → logprob: -7.010333061218262
    9. ' host' → logprob: -7.510333061218262
    10. 'コ' → logprob: -8.260333061218262

Token 550: 'P' (ID: 47)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.27299168705940247
    2. '[i' → logprob: -2.02299165725708
    3. ' =' → logprob: -2.64799165725708
    4. 'P' → logprob: -3.64799165725708
    5. '=' → logprob: -5.02299165725708
    6. ' ' → logprob: -6.64799165725708
    7. ' i' → logprob: -7.14799165725708
    8. 'i' → logprob: -7.89799165725708
    9. '   ' → logprob: -8.522992134094238
    10. '```' → logprob: -9.397992134094238

Token 551: '円' (ID: 13474)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5314446687698364
    2. '=' → logprob: -1.4064446687698364
    3. '   ' → logprob: -1.9064446687698364
    4. '<|end|>' → logprob: -4.531444549560547
    5. '       ' → logprob: -5.781444549560547
    6. '           ' → logprob: -5.781444549560547
    7. '
' → logprob: -7.906444549560547
    8. ')' → logprob: -7.906444549560547
    9. ' ' → logprob: -7.906444549560547
    10. '  ' → logprob: -9.281444549560547

Token 553: '           ' (ID: 352)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3933839201927185
    2. ' =' → logprob: -1.1433839797973633
    3. '   ' → logprob: -5.143383979797363
    4. ' cost' → logprob: -7.893383979797363
    5. '           ' → logprob: -8.518383979797363
    6. 'cost' → logprob: -10.143383979797363
    7. '       ' → logprob: -10.518383979797363
    8. '=
' → logprob: -12.268383979797363
    9. ' ' → logprob: -12.518383979797363
    10. ' =
' → logprob: -13.643383979797363

Token 554: ' cost' (ID: 3097)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.008769853040575981
    2. ' P' → logprob: -4.758769989013672
    3. 'cost' (adapté à ' cost') → logprob: -8.883769989013672
    4. ' cost' → logprob: -11.008769989013672
    5. '   ' → logprob: -15.758769989013672
    6. ' ' → logprob: -16.758769989013672
    7. 'p' → logprob: -17.633769989013672
    8. '	P' → logprob: -17.883769989013672
    9. '_P' → logprob: -19.133769989013672
    10. '=' → logprob: -19.383769989013672

Token 555: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. ' [' → logprob: -14.875000953674316
    4. '=' → logprob: -16.625
    5. ' =' → logprob: -17.25
    6. '   ' → logprob: -17.875
    7. '
' → logprob: -18.625
    8. 'i' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '[I' → logprob: -19.75

Token 556: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17261987924575806
    2. '[i' → logprob: -2.7976198196411133
    3. '=' → logprob: -3.1726198196411133
    4. ']=' → logprob: -3.2976198196411133
    5. ')' → logprob: -4.172619819641113
    6. '   ' → logprob: -6.672619819641113
    7. ' =' → logprob: -7.047619819641113
    8. ')=' → logprob: -7.547619819641113
    9. ' ]' → logprob: -7.672619819641113
    10. ' )' → logprob: -9.672619819641113

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890146225690842
    2. ' =' → logprob: -2.578901529312134
    3. '[i' → logprob: -11.453901290893555
    4. '=i' → logprob: -14.578901290893555
    5. '   ' → logprob: -15.078901290893555
    6. '[' → logprob: -16.078901290893555
    7. '＝' → logprob: -16.078901290893555
    8. ' ' → logprob: -16.578901290893555
    9. '=
' → logprob: -16.828901290893555
    10. ')' → logprob: -17.578901290893555

Token 558: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0380416102707386
    2. ' P' → logprob: -3.288041591644287
    3. ' ' → logprob: -16.288042068481445
    4. 'p' → logprob: -17.538042068481445
    5. '	P' → logprob: -17.538042068481445
    6. '   ' → logprob: -18.163042068481445
    7. ' ' → logprob: -18.288042068481445
    8. '_P' → logprob: -19.038042068481445
    9. 'Ｐ' → logprob: -20.163042068481445
    10. '
' → logprob: -20.663042068481445

Token 559: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5879703760147095
    2. 'import' → logprob: -1.4629703760147095
    3. 'dist' → logprob: -1.9629703760147095
    4. '
' → logprob: -2.71297025680542
    5. '    
' → logprob: -5.71297025680542
    6. 'distance' → logprob: -7.21297025680542
    7. 'heap' → logprob: -7.83797025680542
    8. 'cost' → logprob: -8.087970733642578
    9. '
' → logprob: -8.337970733642578
    10. '  
' → logprob: -8.462970733642578

Token 560: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45062798261642456
    2. 'dist' → logprob: -1.3256280422210693
    3. 'import' → logprob: -2.4506280422210693
    4. '
' → logprob: -5.20062780380249
    5. '    
' → logprob: -6.20062780380249
    6. 'distance' → logprob: -6.45062780380249
    7. 'cost' → logprob: -7.70062780380249
    8. 'dp' → logprob: -8.450628280639648
    9. '#' → logprob: -8.700628280639648
    10. 'inf' → logprob: -8.825628280639648

Token 561: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9439868927001953
    2. '   ' → logprob: -1.1939868927001953
    3. 'import' → logprob: -1.1939868927001953
    4. 'distance' → logprob: -6.568986892700195
    5. 'INF' → logprob: -6.568986892700195
    6. 'cost' → logprob: -7.068986892700195
    7. '#' (adapté à ' #') → logprob: -7.818986892700195
    8. '
' → logprob: -8.193986892700195
    9. '    
' → logprob: -8.443986892700195
    10. 'inf' → logprob: -9.193986892700195

Token 562: ' ダ' (ID: 105224)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4900415539741516
    2. '#' → logprob: -1.7400414943695068
    3. 'import' → logprob: -1.8650414943695068
    4. 'INF' → logprob: -3.365041494369507
    5. 'dp' → logprob: -4.490041732788086
    6. '   ' → logprob: -5.615041732788086
    7. 'def' → logprob: -5.990041732788086
    8. 'distance' → logprob: -6.490041732788086
    9. 'hq' → logprob: -6.990041732788086
    10. 'd' → logprob: -7.490041732788086

Token 563: 'イク' (ID: 105182)
  Prédit: 'ijkstra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.1430506855249405
    2. 'jik' → logprob: -3.0180506706237793
    3. 'ijk' → logprob: -3.2680506706237793
    4. 'イ' → logprob: -4.018050670623779
    5. '   ' → logprob: -4.643050670623779
    6. 'イク' → logprob: -4.643050670623779
    7. 'ij' → logprob: -6.768050670623779
    8. 'j' → logprob: -7.018050670623779
    9. '```' → logprob: -7.018050670623779
    10. '    ' → logprob: -7.268050670623779

Token 564: 'スト' (ID: 38236)
  Prédit: 'stra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.1824268400669098
    2. 'st' → logprob: -2.307426929473877
    3. 'スト' → logprob: -2.807426929473877
    4. 'ス' → logprob: -6.057426929473877
    5. 'str' → logprob: -6.557426929473877
    6. 's' → logprob: -6.807426929473877
    7. 'スタ' → logprob: -7.932426929473877
    8. 'sta' → logprob: -8.307426452636719
    9. 'ラ' → logprob: -8.432426452636719
    10. 'スター' → logprob: -8.557426452636719

Token 565: 'ラ' (ID: 8547)
  Prédit: 'ラ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ラ' → logprob: -0.07628694921731949
    2. 'スト' → logprob: -3.076287031173706
    3. 'ト' → logprob: -4.826286792755127
    4. 'st' → logprob: -5.076286792755127
    5. 'ス' → logprob: -5.576286792755127
    6. 'stra' → logprob: -5.951286792755127
    7. '```' → logprob: -6.326286792755127
    8. 'スタ' → logprob: -6.451286792755127
    9. 'r' → logprob: -6.951286792755127
    10. 'ラー' → logprob: -7.826286792755127

Token 566: '法' (ID: 5625)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.36754897236824036
    2. '法' → logprob: -1.742548942565918
    3. ' (' → logprob: -3.367548942565918
    4. '(
' → logprob: -4.367548942565918
    5. ' ' → logprob: -4.742548942565918
    6. ' algorithm' → logprob: -4.742548942565918
    7. '(heap' → logprob: -4.992548942565918
    8. 'の' → logprob: -5.117548942565918
    9. '（' → logprob: -5.242548942565918
    10. '   ' → logprob: -5.242548942565918

Token 567: 'で' (ID: 4344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08053861558437347
    2. '
' → logprob: -3.955538511276245
    3. 'import' → logprob: -4.080538749694824
    4. '(' → logprob: -4.580538749694824
    5. ' ' → logprob: -4.705538749694824
    6. '(N' → logprob: -5.205538749694824
    7. '(
' → logprob: -5.955538749694824
    8. ' (' → logprob: -6.205538749694824
    9. '(n' → logprob: -6.330538749694824
    10. '  ' → logprob: -6.830538749694824

Token 568: '町' (ID: 92479)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43164554238319397
    2. 'import' → logprob: -1.3066455125808716
    3. ' dist' → logprob: -3.056645631790161
    4. 'heap' → logprob: -4.181645393371582
    5. '   ' → logprob: -4.681645393371582
    6. ' heap' → logprob: -5.556645393371582
    7. ' import' → logprob: -6.681645393371582
    8. 'hq' → logprob: -6.931645393371582
    9. 'distance' → logprob: -7.681645393371582
    10. '```' → logprob: -8.056645393371582

Token 569: '1' (ID: 16)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7325132489204407
    2. 'の' → logprob: -1.107513189315796
    3. 'を' → logprob: -2.607513189315796
    4. ' ' → logprob: -3.607513189315796
    5. 'N' → logprob: -3.982513189315796
    6. ' の' → logprob: -4.607513427734375
    7. '1' → logprob: -4.982513427734375
    8. 'def' → logprob: -5.357513427734375
    9. ' を' → logprob: -5.732513427734375
    10. 'で' → logprob: -5.982513427734375

Token 570: 'から' (ID: 27500)
  Prédit: 'から'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.015840206295251846
    2. ' ' → logprob: -5.51584005355835
    3. 'from' → logprob: -5.51584005355835
    4. 'まで' → logprob: -5.89084005355835
    5. 'の' → logprob: -6.26584005355835
    6. 'を' → logprob: -7.01584005355835
    7. '   ' → logprob: -8.015840530395508
    8. ' from' → logprob: -8.265840530395508
    9. ' の' → logprob: -8.390840530395508
    10. 'と' → logprob: -8.765840530395508

Token 571: '町' (ID: 92479)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13915732502937317
    2. 'import' → logprob: -3.014157295227051
    3. '   ' → logprob: -3.389157295227051
    4. '1' → logprob: -4.014157295227051
    5. 'heap' → logprob: -4.139157295227051
    6. ' N' → logprob: -5.264157295227051
    7. '0' → logprob: -6.264157295227051
    8. '```' → logprob: -6.389157295227051
    9. ' ' → logprob: -7.139157295227051
    10. '2' → logprob: -8.01415729522705

Token 572: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008414304465986788
    2. ' N' → logprob: -7.1258416175842285
    3. '1' → logprob: -10.62584114074707
    4. '2' → logprob: -12.75084114074707
    5. ' ' → logprob: -13.37584114074707
    6. '+' → logprob: -13.37584114074707
    7. '```' → logprob: -13.37584114074707
    8. 'Ｎ' → logprob: -13.37584114074707
    9. 'n' → logprob: -14.25084114074707
    10. ',' → logprob: -15.00084114074707

Token 573: 'まで' (ID: 54342)
  Prédit: 'まで'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'まで' → logprob: -0.013733251951634884
    2. 'へ' → logprob: -5.263733386993408
    3. ' ' → logprob: -6.013733386993408
    4. 'への' → logprob: -6.388733386993408
    5. '   ' → logprob: -6.513733386993408
    6. 'の' → logprob: -7.138733386993408
    7. 'を' → logprob: -7.388733386993408
    8. 'に' → logprob: -7.638733386993408
    9. ' の' → logprob: -8.13873291015625
    10. ' を' → logprob: -8.51373291015625

Token 574: 'の' (ID: 3385)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.25884607434272766
    2. '   ' → logprob: -1.5088460445404053
    3. 'heap' → logprob: -6.508846282958984
    4. '       ' → logprob: -6.758846282958984
    5. '
' → logprob: -6.758846282958984
    6. ' ' → logprob: -7.383846282958984
    7. 'dist' → logprob: -7.633846282958984
    8. '```' → logprob: -7.758846282958984
    9. 'の' → logprob: -8.008846282958984
    10. ' import' → logprob: -8.258846282958984

Token 575: '最' (ID: 5889)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07145734876394272
    2. 'dist' → logprob: -3.3214573860168457
    3. '最' → logprob: -4.196457386016846
    4. 'heap' → logprob: -4.446457386016846
    5. 'cost' → logprob: -6.196457386016846
    6. '```' → logprob: -6.696457386016846
    7. 'distance' → logprob: -6.946457386016846
    8. '距' → logprob: -7.071457386016846
    9. 'def' → logprob: -8.571456909179688
    10. 'min' → logprob: -9.071456909179688

Token 576: '小' (ID: 5820)
  Prédit: '短'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '短' → logprob: -0.00714027089998126
    2. 'short' → logprob: -5.382140159606934
    3. ' short' → logprob: -7.132140159606934
    4. '_short' → logprob: -7.632140159606934
    5. '-short' → logprob: -7.882140159606934
    6. '   ' → logprob: -8.507140159606934
    7. '良' → logprob: -8.757140159606934
    8. 'た' → logprob: -9.007140159606934
    9. '```' → logprob: -9.507140159606934
    10. '長' → logprob: -10.257140159606934

Token 577: '宿' (ID: 62310)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47160422801971436
    2. '_' → logprob: -2.721604347229004
    3. '_dist' → logprob: -2.721604347229004
    4. '_cost' → logprob: -2.846604347229004
    5. 'dist' → logprob: -3.096604347229004
    6. ' ' → logprob: -3.596604347229004
    7. 'の' → logprob: -3.721604347229004
    8. 'cost' → logprob: -4.096604347229004
    9. ' cost' → logprob: -4.346604347229004
    10. '_distance' → logprob: -4.346604347229004

Token 578: '泊' (ID: 123420)
  Prédit: '泊'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '泊' → logprob: -0.00011236425780225545
    2. '費' → logprob: -10.000112533569336
    3. '```' → logprob: -10.000112533569336
    4. '料' → logprob: -12.250112533569336
    5. '   ' → logprob: -12.375112533569336
    6. '代' → logprob: -12.750112533569336
    7. 'cost' → logprob: -13.000112533569336
    8. '``' → logprob: -13.875112533569336
    9. '�' → logprob: -13.875112533569336
    10. '
' → logprob: -14.125112533569336

Token 579: '費' (ID: 33778)
  Prédit: '費'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '費' → logprob: -0.002657224191352725
    2. 'cost' → logprob: -6.252657413482666
    3. '料' → logprob: -8.377656936645508
    4. '   ' → logprob: -8.627656936645508
    5. 'fee' → logprob: -9.002656936645508
    6. '费' → logprob: -10.002656936645508
    7. '料金' → logprob: -10.252656936645508
    8. '```' → logprob: -10.252656936645508
    9. 'def' → logprob: -11.627656936645508
    10. ' cost' → logprob: -11.752656936645508

Token 580: 'を' (ID: 7277)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.27316153049468994
    2. ' dist' → logprob: -2.2731614112854004
    3. '   ' → logprob: -2.7731614112854004
    4. 'import' → logprob: -3.6481614112854004
    5. '
' → logprob: -3.8981614112854004
    6. ' ' → logprob: -4.6481614112854
    7. 'cost' → logprob: -5.6481614112854
    8. 'distance' → logprob: -6.2731614112854
    9. 'の' → logprob: -6.2731614112854
    10. 'を' → logprob: -6.3981614112854

Token 581: '求' (ID: 16339)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16510771214962006
    2. 'heap' → logprob: -2.1651077270507812
    3. '
' → logprob: -3.9151077270507812
    4. '```' → logprob: -4.415107727050781
    5. 'd' → logprob: -5.790107727050781
    6. 'dist' → logprob: -7.540107727050781
    7. '   ' → logprob: -7.665107727050781
    8. '``' → logprob: -7.790107727050781
    9. ' heap' → logprob: -7.790107727050781
    10. 'def' → logprob: -8.540107727050781

Token 582: 'め' (ID: 17693)
  Prédit: 'め'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'め' → logprob: -0.00013119110371917486
    2. 'る' → logprob: -10.250131607055664
    3. 'ま' → logprob: -10.500131607055664
    4. '   ' → logprob: -10.625131607055664
    5. '```' → logprob: -11.125131607055664
    6. '1' → logprob: -12.500131607055664
    7. '
' → logprob: -12.500131607055664
    8. '0' → logprob: -13.000131607055664
    9. '    ' → logprob: -13.250131607055664
    10. 'def' → logprob: -13.375131607055664

Token 583: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.12196444720029831
    2. 'め' → logprob: -2.246964454650879
    3. '   ' → logprob: -5.246964454650879
    4. 'て' → logprob: -6.496964454650879
    5. '
' → logprob: -6.746964454650879
    6. '```' → logprob: -7.996964454650879
    7. 'ます' → logprob: -8.246964454650879
    8. 'する' → logprob: -9.121964454650879
    9. 'は' → logprob: -9.621964454650879
    10. 'ま' → logprob: -9.621964454650879

Token 584: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3818434774875641
    2. '   ' → logprob: -1.3818434476852417
    3. ' dist' → logprob: -3.1318435668945312
    4. '
' → logprob: -4.131843566894531
    5. 'import' → logprob: -5.131843566894531
    6. '    
' → logprob: -8.006843566894531
    7. '
' → logprob: -9.506843566894531
    8. ' import' → logprob: -9.506843566894531
    9. 'distance' → logprob: -9.881843566894531
    10. '```' → logprob: -10.131843566894531

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7180745601654053
    2. 'dist' → logprob: -1.0930745601654053
    3. ' dist' → logprob: -1.8430745601654053
    4. '
' → logprob: -4.093074798583984
    5. 'import' → logprob: -6.968074798583984
    6. '    
' → logprob: -7.093074798583984
    7. ' import' → logprob: -9.968074798583984
    8. 'distance' → logprob: -10.093074798583984
    9. '```' → logprob: -10.718074798583984
    10. ' distances' → logprob: -10.843074798583984

Token 586: ' INF' (ID: 69196)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37527137994766235
    2. 'dist' → logprob: -1.3752713203430176
    3. 'import' → logprob: -2.8752713203430176
    4. ' dist' → logprob: -6.000271320343018
    5. 'hq' → logprob: -8.250271797180176
    6. 'distance' → logprob: -8.375271797180176
    7. '
' → logprob: -8.875271797180176
    8. ' import' → logprob: -9.000271797180176
    9. 'dp' → logprob: -9.250271797180176
    10. '    
' → logprob: -9.375271797180176

Token 587: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036057746037840843
    2. '=' → logprob: -5.628605842590332
    3. '＝' → logprob: -12.253605842590332
    4. ' ' → logprob: -14.253605842590332
    5. '=int' → logprob: -15.753605842590332
    6. '   ' → logprob: -16.378604888916016
    7. ' ' → logprob: -17.378604888916016
    8. ' =
' → logprob: -18.003604888916016
    9. '```' → logprob: -18.128604888916016
    10. '　' → logprob: -18.253604888916016

Token 588: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00318294414319098
    2. 'float' → logprob: -5.753182888031006
    3. '1' → logprob: -12.378183364868164
    4. ' float' → logprob: -14.253183364868164
    5. ' ' → logprob: -15.003183364868164
    6. 'int' → logprob: -18.628183364868164
    7. 'pow' → logprob: -18.753183364868164
    8. '１０' → logprob: -18.753183364868164
    9. '(float' → logprob: -19.378183364868164
    10. '100' → logprob: -20.128183364868164

Token 589: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004083385691046715
    2. 'float' → logprob: -5.504083156585693
    3. '1' → logprob: -12.254083633422852
    4. ' float' → logprob: -15.254083633422852
    5. ' ' → logprob: -17.12908363342285
    6. 'pow' → logprob: -18.50408363342285
    7. 'int' → logprob: -19.00408363342285
    8. '１０' → logprob: -19.12908363342285
    9. '(float' → logprob: -19.87908363342285
    10. '浮' → logprob: -20.12908363342285

Token 590: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.007425007410347462
    2. '15' → logprob: -5.757424831390381
    3. '18' → logprob: -6.132424831390381
    4. '12' → logprob: -7.007424831390381
    5. '10' → logprob: -7.507424831390381
    6. '7' → logprob: -8.007425308227539
    7. '14' → logprob: -8.882425308227539
    8. '8' → logprob: -9.882425308227539
    9. '13' → logprob: -10.382425308227539
    10. '**' → logprob: -10.507425308227539

Token 591: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.004766526632010937
    2. '9' → logprob: -5.879766464233398
    3. '12' → logprob: -6.504766464233398
    4. '10' → logprob: -8.504766464233398
    5. '18' → logprob: -9.254766464233398
    6. '14' → logprob: -9.504766464233398
    7. '13' → logprob: -9.629766464233398
    8. '11' → logprob: -11.129766464233398
    9. '16' → logprob: -11.504766464233398
    10. '17' → logprob: -15.379766464233398

Token 592: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6636548638343811
    2. 'dist' → logprob: -0.9136548638343811
    3. '
' → logprob: -2.5386548042297363
    4. 'distance' → logprob: -6.288654804229736
    5. ' dist' → logprob: -6.413654804229736
    6. 'import' → logprob: -6.913654804229736
    7. '    
' → logprob: -8.163655281066895
    8. 'dp' → logprob: -9.163655281066895
    9. 'cost' → logprob: -10.913655281066895
    10. '	dist' → logprob: -11.038655281066895

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48665931820869446
    2. 'dist' → logprob: -0.9866592884063721
    3. ' dist' → logprob: -4.736659526824951
    4. 'import' → logprob: -6.111659526824951
    5. 'distance' → logprob: -7.111659526824951
    6. 'dp' → logprob: -7.486659526824951
    7. ' ' → logprob: -10.236659049987793
    8. '
' → logprob: -10.611659049987793
    9. ' import' → logprob: -10.736659049987793
    10. 'd' → logprob: -11.236659049987793

Token 594: ' dp' (ID: 21546)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00590710761025548
    2. 'dp' (adapté à ' dp') → logprob: -6.00590705871582
    3. ' dist' → logprob: -6.63090705871582
    4. 'import' → logprob: -6.88090705871582
    5. 'distance' → logprob: -7.25590705871582
    6. '   ' → logprob: -8.38090705871582
    7. 'd' → logprob: -9.38090705871582
    8. 'cost' → logprob: -10.38090705871582
    9. 'hq' → logprob: -11.38090705871582
    10. 'heap' → logprob: -11.63090705871582

Token 595: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005575587856583297
    2. '=' → logprob: -7.5005574226379395
    3. ' =[' → logprob: -12.750557899475098
    4. '=[' → logprob: -14.000557899475098
    5. '＝' → logprob: -15.250557899475098
    6. '[' → logprob: -15.500557899475098
    7. ' ' → logprob: -15.875557899475098
    8. '```' → logprob: -16.37555694580078
    9. ',' → logprob: -17.62555694580078
    10. '<|end|>' → logprob: -17.62555694580078

Token 596: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.7292167184641585e-05
    2. ' [' → logprob: -9.875057220458984
    3. '[I' → logprob: -13.250057220458984
    4. '[N' → logprob: -14.000057220458984
    5. '[np' → logprob: -14.750057220458984
    6. '[int' → logprob: -14.750057220458984
    7. '[min' → logprob: -15.000057220458984
    8. '[Index' → logprob: -15.125057220458984
    9. '[start' → logprob: -15.375057220458984
    10. '[node' → logprob: -15.500057220458984

Token 597: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -2.696889623621246e-06
    2. ' INF' → logprob: -13.25000286102295
    3. '[' → logprob: -14.00000286102295
    4. '_INF' → logprob: -17.750001907348633
    5. 'inf' → logprob: -18.625001907348633
    6. '-INF' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. ' [' → logprob: -19.625001907348633
    9. '
' → logprob: -20.375001907348633
    10. 'IN' → logprob: -20.875001907348633

Token 598: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05030286684632301
    2. ']*(' → logprob: -3.0503029823303223
    3. ']*' → logprob: -7.175302982330322
    4. ' ]' → logprob: -7.800302982330322
    5. '](' → logprob: -8.675302505493164
    6. ' for' → logprob: -8.675302505493164
    7. '(N' → logprob: -9.300302505493164
    8. ']+' → logprob: -9.675302505493164
    9. 'for' → logprob: -10.800302505493164
    10. '   ' → logprob: -12.050302505493164

Token 599: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.4849443838757e-06
    2. ' N' → logprob: -12.625004768371582
    3. '(N' → logprob: -13.750004768371582
    4. '   ' → logprob: -17.000003814697266
    5. '	N' → logprob: -18.625003814697266
    6. '(' → logprob: -18.875003814697266
    7. ' (' → logprob: -19.250003814697266
    8. '
' → logprob: -19.500003814697266
    9. 'Ｎ' → logprob: -20.000003814697266
    10. ')' → logprob: -21.250003814697266

Token 600: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4021237802808173e-05
    2. ' +' → logprob: -11.500014305114746
    3. '+
' → logprob: -12.625014305114746
    4. '＋' → logprob: -14.500014305114746
    5. ')+' → logprob: -18.12501335144043
    6. '1' → logprob: -18.12501335144043
    7. '+A' → logprob: -18.62501335144043
    8. '
' → logprob: -19.25001335144043
    9. ' +
' → logprob: -19.75001335144043
    10. '()+' → logprob: -19.87501335144043

Token 601: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.750001907348633
    3. '+' → logprob: -15.625001907348633
    4. '2' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '0' → logprob: -17.125001907348633
    7. '```' → logprob: -17.125001907348633
    8. '１' → logprob: -17.500001907348633
    9. '
' → logprob: -18.375001907348633
    10. '15' → logprob: -18.687501907348633

Token 602: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0076220110058784485
    2. ')
' → logprob: -4.882622241973877
    3. '   ' → logprob: -11.632621765136719
    4. '
' → logprob: -13.257621765136719
    5. ')
' → logprob: -13.507621765136719
    6. ' )' → logprob: -13.632621765136719
    7. '<|end|>' → logprob: -13.757621765136719
    8. ')

' → logprob: -14.757621765136719
    9. '),' → logprob: -15.257621765136719
    10. ']' → logprob: -15.757621765136719

Token 603: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.05750222131609917
    2. ' dp' → logprob: -2.932502269744873
    3. '   ' → logprob: -6.307502269744873
    4. '	dp' → logprob: -7.557502269744873
    5. '[' → logprob: -8.807501792907715
    6. '```' → logprob: -9.932501792907715
    7. '_dp' → logprob: -10.557501792907715
    8. '(dp' → logprob: -11.057501792907715
    9. '
' → logprob: -11.682501792907715
    10. '    
' → logprob: -11.807501792907715

Token 604: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0009143244242295623
    2. 'import' → logprob: -7.000914096832275
    3. ' dp' → logprob: -13.000914573669434
    4. 'heap' → logprob: -14.625914573669434
    5. '   ' → logprob: -16.500913619995117
    6. '	dp' → logprob: -18.000913619995117
    7. ' import' → logprob: -18.125913619995117
    8. 'pq' → logprob: -18.375913619995117
    9. 'dq' → logprob: -18.875913619995117
    10. '_dp' → logprob: -19.500913619995117

Token 605: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '<|end|>' → logprob: -13.00000286102295
    3. '[
' → logprob: -15.50000286102295
    4. ' [' → logprob: -15.62500286102295
    5. '=' → logprob: -16.000003814697266
    6. ' =' → logprob: -16.500003814697266
    7. '1' → logprob: -16.875003814697266
    8. '```' → logprob: -17.000003814697266
    9. '=[' → logprob: -17.250003814697266
    10. '<|end|>' → logprob: -17.250003814697266

Token 606: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -16.750001907348633
    4. '=' → logprob: -17.375001907348633
    5. ')' → logprob: -17.375001907348633
    6. '[' → logprob: -17.625001907348633
    7. '2' → logprob: -18.125001907348633
    8. ']' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '１' → logprob: -18.625001907348633

Token 607: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00019388488726690412
    2. ' ]' → logprob: -8.62519359588623
    3. ']=' → logprob: -11.25019359588623
    4. ')' → logprob: -13.87519359588623
    5. '[' → logprob: -15.75019359588623
    6. ']
' → logprob: -16.750194549560547
    7. ')]' → logprob: -18.125194549560547
    8. '=' → logprob: -18.375194549560547
    9. '`]' → logprob: -18.625194549560547
    10. '])' → logprob: -18.750194549560547

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132626414299011
    2. ' =' → logprob: -1.313262701034546
    3. '＝' → logprob: -14.063262939453125
    4. ',' → logprob: -16.688262939453125
    5. '=
' → logprob: -17.313262939453125
    6. '0' → logprob: -17.313262939453125
    7. ' =
' → logprob: -18.313262939453125
    8. ' ' → logprob: -18.438262939453125
    9. '=int' → logprob: -18.688262939453125
    10. ')=' → logprob: -18.688262939453125

Token 609: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۰' → logprob: -21.375
    4. '０' → logprob: -22.125
    5. '000' → logprob: -22.875
    6. '00' → logprob: -23.5
    7. '-' → logprob: -23.625
    8. '   ' → logprob: -23.75
    9. '```' → logprob: -24.25
    10. '(' → logprob: -24.75

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '０' → logprob: -20.625
    4. '   ' → logprob: -20.875
    5. '۰' → logprob: -21.375
    6. '-' → logprob: -22.5
    7. '```' → logprob: -22.75
    8. '00' → logprob: -23.25
    9. 'cost' → logprob: -23.5
    10. '	' → logprob: -23.875

Token 611: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009103906922973692
    2. '
' → logprob: -8.000910758972168
    3. 'heap' → logprob: -8.000910758972168
    4. 'import' → logprob: -9.125910758972168
    5. 'pq' → logprob: -9.250910758972168
    6. '    
' → logprob: -11.500910758972168
    7. ' heap' → logprob: -12.000910758972168
    8. 'priority' → logprob: -12.250910758972168
    9. '```' → logprob: -12.250910758972168
    10. 'queue' → logprob: -12.500910758972168

Token 612: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036061247810721397
    2. 'import' → logprob: -6.50360631942749
    3. 'heap' → logprob: -7.25360631942749
    4. '
' → logprob: -7.37860631942749
    5. 'pq' → logprob: -7.37860631942749
    6. '    
' → logprob: -9.628605842590332
    7. ' heap' → logprob: -10.503605842590332
    8. '```' → logprob: -11.003605842590332
    9. 'queue' → logprob: -11.128605842590332
    10. 'hq' → logprob: -11.628605842590332

Token 613: ' heap' (ID: 37237)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.24490302801132202
    2. 'heap' (adapté à ' heap') → logprob: -1.7449030876159668
    3. 'queue' → logprob: -3.244903087615967
    4. 'que' → logprob: -6.494903087615967
    5. 'pq' → logprob: -6.994903087615967
    6. 'q' → logprob: -7.494903087615967
    7. 'h' → logprob: -7.744903087615967
    8. 'import' → logprob: -8.869902610778809
    9. '   ' → logprob: -10.744902610778809
    10. ' heap' → logprob: -12.994902610778809

Token 614: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06958311051130295
    2. '=' → logprob: -3.0695831775665283
    3. ' =' → logprob: -4.319582939147949
    4. '=[]' → logprob: -5.069582939147949
    5. '```' → logprob: -7.319582939147949
    6. '.push' → logprob: -9.06958293914795
    7. '=[]
' → logprob: -9.19458293914795
    8. '[' → logprob: -9.69458293914795
    9. '.' → logprob: -9.69458293914795
    10. '＝' → logprob: -10.56958293914795

Token 615: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.16106601059436798
    2. ' [(' → logprob: -1.9110660552978516
    3. '[]' → logprob: -7.161066055297852
    4. ' []' → logprob: -9.661066055297852
    5. '[]
' → logprob: -13.661066055297852
    6. '([(' → logprob: -15.661066055297852
    7. '[' → logprob: -16.28606605529785
    8. ' []
' → logprob: -16.41106605529785
    9. '[((' → logprob: -16.41106605529785
    10. '[],' → logprob: -17.91106605529785

Token 616: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0363527350127697
    2. ' heap' → logprob: -3.4113526344299316
    3. '   ' → logprob: -6.286352634429932
    4. 'he' → logprob: -7.911352634429932
    5. '(heap' → logprob: -8.41135311126709
    6. 'import' → logprob: -8.53635311126709
    7. ' he' → logprob: -10.66135311126709
    8. '.heap' → logprob: -11.03635311126709
    9. '```' → logprob: -11.53635311126709
    10. '_heap' → logprob: -12.66135311126709

Token 617: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.00011236425780225545
    2. ' heap' → logprob: -9.500112533569336
    3. 'import' → logprob: -10.500112533569336
    4. 'he' → logprob: -11.875112533569336
    5. '   ' → logprob: -13.000112533569336
    6. '(heap' → logprob: -14.750112533569336
    7. '```' → logprob: -15.125112533569336
    8. '.heap' → logprob: -18.500112533569336
    9. '_heap' → logprob: -19.625112533569336
    10. ' he' → logprob: -20.250112533569336

Token 618: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04333142936229706
    2. '.' → logprob: -3.9183313846588135
    3. '.he' → logprob: -4.293331623077393
    4. '.append' → logprob: -5.668331623077393
    5. '.push' → logprob: -5.668331623077393
    6. 'push' → logprob: -7.168331623077393
    7. '<|end|>' → logprob: -8.043331146240234
    8. '.heap' → logprob: -8.418331146240234
    9. 'he' → logprob: -8.793331146240234
    10. 'app' → logprob: -8.918331146240234

Token 619: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0003258103388361633
    2. '.' → logprob: -8.750326156616211
    3. '.heap' → logprob: -8.750326156616211
    4. '.push' → logprob: -11.875326156616211
    5. ' .' → logprob: -13.750326156616211
    6. '​.' → logprob: -15.625326156616211
    7. '.h' → logprob: -15.875326156616211
    8. '.append' → logprob: -16.12532615661621
    9. '.He' → logprob: -16.37532615661621
    10. '‌.' → logprob: -16.62532615661621

Token 620: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -3.8889261304575484e-06
    2. 'pp' → logprob: -13.000003814697266
    3. 'ap' → logprob: -13.625003814697266
    4. 'push' → logprob: -15.125003814697266
    5. '```' → logprob: -16.250003814697266
    6. 'appen' → logprob: -18.375003814697266
    7. 'q' → logprob: -18.625003814697266
    8. 'append' → logprob: -19.125003814697266
    9. 'p' → logprob: -19.125003814697266
    10. '``' → logprob: -19.500003814697266

Token 621: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.00020509003661572933
    2. 'push' → logprob: -8.500205039978027
    3. 'sh' → logprob: -14.375205039978027
    4. '```' → logprob: -14.500205039978027
    5. 'app' → logprob: -15.875205039978027
    6. 'pp' → logprob: -16.125205993652344
    7. 'op' → logprob: -16.875205993652344
    8. 'u' → logprob: -16.875205993652344
    9. 'p' → logprob: -17.500205993652344
    10. 'USH' → logprob: -17.875205993652344

Token 622: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -14.75
    3. ' (' → logprob: -17.625
    4. '(h' → logprob: -18.75
    5. '((' → logprob: -18.875
    6. 'heap' → logprob: -19.0
    7. '```' → logprob: -19.875
    8. '(deck' → logprob: -21.875
    9. '(queue' → logprob: -22.0
    10. '(hero' → logprob: -22.125

Token 623: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.771655115589965e-05
    2. ' (' → logprob: -11.625018119812012
    3. '(' → logprob: -11.750018119812012
    4. ')' → logprob: -14.750018119812012
    5. ',' → logprob: -15.750018119812012
    6. '((' → logprob: -16.000017166137695
    7. '```' → logprob: -16.000017166137695
    8. ' ' → logprob: -16.875017166137695
    9. 'heap' → logprob: -18.625017166137695
    10. '   ' → logprob: -18.750017166137695

Token 624: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.7610454708337784e-05
    2. ' (' → logprob: -10.500027656555176
    3. '   ' → logprob: -20.75002670288086
    4. '0' → logprob: -20.87502670288086
    5. ' ' → logprob: -21.75002670288086
    6. '[' → logprob: -22.37502670288086
    7. '```' → logprob: -22.62502670288086
    8. '（' → logprob: -22.75002670288086
    9. ')' → logprob: -23.50002670288086
    10. '((' → logprob: -24.62502670288086

Token 625: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.375001907348633
    3. ' ' → logprob: -17.625001907348633
    4. ' (' → logprob: -22.625001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '(dp' → logprob: -22.875001907348633
    7. '۰' → logprob: -23.375001907348633
    8. ')' → logprob: -24.125001907348633
    9. '```' → logprob: -24.250001907348633
    10. '０' → logprob: -24.250001907348633

Token 626: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.860340752406046e-05
    2. ' ,' → logprob: -9.7500581741333
    3. '1' → logprob: -15.8750581741333
    4. ',
' → logprob: -16.000059127807617
    5. '，' → logprob: -17.750059127807617
    6. ' ' → logprob: -18.375059127807617
    7. '```' → logprob: -18.625059127807617
    8. '   ' → logprob: -19.125059127807617
    9. 'import' → logprob: -19.625059127807617
    10. '
' → logprob: -20.625059127807617

Token 627: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -19.75
    4. '１' → logprob: -23.0
    5. '```' → logprob: -23.625
    6. '[' → logprob: -25.125
    7. '123' → logprob: -25.25
    8. '۱' → logprob: -25.375
    9. '  ' → logprob: -25.75
    10. '{
' → logprob: -26.0

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '   ' → logprob: -21.375
    4. '１' → logprob: -22.0
    5. '```' → logprob: -22.5
    6. '
' → logprob: -23.0
    7. '' → logprob: -24.625
    8. '১' → logprob: -25.25
    9. '۱' → logprob: -25.375
    10. '  ' → logprob: -25.5

Token 629: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10023416578769684
    2. ')' → logprob: -2.350234270095825
    3. '))
' → logprob: -10.725234031677246
    4. ')
' → logprob: -12.225234031677246
    5. ')))' → logprob: -15.100234031677246
    6. ' ))' → logprob: -16.100234985351562
    7. '))

' → logprob: -16.725234985351562
    8. '   ' → logprob: -16.725234985351562
    9. ' )' → logprob: -16.850234985351562
    10. '))
' → logprob: -17.350234985351562

Token 630: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01971493288874626
    2. '   ' → logprob: -4.519714832305908
    3. ' while' → logprob: -4.769714832305908
    4. '```' → logprob: -9.144715309143066
    5. '	while' → logprob: -10.769715309143066
    6. ')' → logprob: -11.519715309143066
    7. 'While' → logprob: -11.644715309143066
    8. '``' → logprob: -16.01971435546875
    9. '    
' → logprob: -16.26971435546875
    10. ' ' → logprob: -17.01971435546875

Token 631: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0027102497406303883
    2. ' while' → logprob: -6.502710342407227
    3. '   ' → logprob: -6.752710342407227
    4. ')' → logprob: -10.502710342407227
    5. '```' → logprob: -12.127710342407227
    6. '	while' → logprob: -12.502710342407227
    7. 'While' → logprob: -12.877710342407227
    8. '(' → logprob: -16.127710342407227
    9. '0' → logprob: -17.627710342407227
    10. '`' → logprob: -17.752710342407227

Token 632: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0040818434208631516
    2. ' heap' → logprob: -5.504081726074219
    3. '(heap' → logprob: -13.254081726074219
    4. 'len' → logprob: -13.504081726074219
    5. '   ' → logprob: -16.50408172607422
    6. '```' → logprob: -16.62908172607422
    7. 'True' → logprob: -16.75408172607422
    8. '.heap' → logprob: -17.00408172607422
    9. 'he' → logprob: -17.12908172607422
    10. '
' → logprob: -17.12908172607422

Token 633: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.55617356300354
    2. ':
' → logprob: -1.43117356300354
    3. ':' → logprob: -1.80617356300354
    4. '   ' → logprob: -4.806173324584961
    5. '[' → logprob: -5.181173324584961
    6. '):
' → logprob: -5.431173324584961
    7. '```' → logprob: -6.556173324584961
    8. '):' → logprob: -6.931173324584961
    9. ')' → logprob: -7.556173324584961
    10. '=' → logprob: -8.493673324584961

Token 634: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4557432234287262
    2. 'cost' → logprob: -1.0807431936264038
    3. 'dist' → logprob: -4.830743312835693
    4. '       ' → logprob: -5.330743312835693
    5. '(cost' → logprob: -5.705743312835693
    6. ' cost' → logprob: -6.080743312835693
    7. 'c' → logprob: -6.080743312835693
    8. 'd' → logprob: -6.205743312835693
    9. '```' → logprob: -6.580743312835693
    10. '_cost' → logprob: -7.455743312835693

Token 635: ' cur' (ID: 4396)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07556355744600296
    2. 'cur' (adapté à ' cur') → logprob: -3.700563669204712
    3. 'c' → logprob: -3.825563669204712
    4. 'd' → logprob: -4.075563430786133
    5. 'dist' → logprob: -5.200563430786133
    6. 'curr' → logprob: -6.575563430786133
    7. '   ' → logprob: -6.950563430786133
    8. ' cost' → logprob: -7.575563430786133
    9. 'current' → logprob: -7.575563430786133
    10. '0' → logprob: -9.450563430786133

Token 636: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0051263077184557915
    2. 'cost' → logprob: -5.380126476287842
    3. '_dist' → logprob: -8.755125999450684
    4. '_' → logprob: -9.505125999450684
    5. '_price' → logprob: -9.505125999450684
    6. '_val' → logprob: -10.130125999450684
    7. '_c' → logprob: -10.130125999450684
    8. '[' → logprob: -10.380125999450684
    9. 'Cost' → logprob: -11.130125999450684
    10. '_,' → logprob: -11.380125999450684

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013500562636181712
    2. ' ,' → logprob: -9.00013542175293
    3. ',c' → logprob: -12.75013542175293
    4. '_,' → logprob: -13.00013542175293
    5. ',
' → logprob: -13.00013542175293
    6. '=' → logprob: -14.37513542175293
    7. ',next' → logprob: -14.87513542175293
    8. ' =' → logprob: -15.00013542175293
    9. ',user' → logprob: -15.25013542175293
    10. '   ' → logprob: -15.50013542175293

Token 638: ' node' (ID: 4596)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.03619374707341194
    2. 'v' → logprob: -4.03619384765625
    3. ' cur' → logprob: -5.03619384765625
    4. 'now' → logprob: -5.16119384765625
    5. 'u' → logprob: -5.78619384765625
    6. 'node' → logprob: -6.41119384765625
    7. 'pos' → logprob: -7.78619384765625
    8. ' now' → logprob: -8.03619384765625
    9. ' v' → logprob: -9.66119384765625
    10. ' node' → logprob: -10.03619384765625

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014801949262619
    2. '=' → logprob: -1.7014801502227783
    3. ')' → logprob: -9.8264799118042
    4. ')=' → logprob: -11.4514799118042
    5. '   ' → logprob: -13.5764799118042
    6. ' =
' → logprob: -15.7014799118042
    7. '=
' → logprob: -15.8264799118042
    8. ' ' → logprob: -15.9514799118042
    9. ' )' → logprob: -16.576480865478516
    10. ' =)' → logprob: -16.701480865478516

Token 640: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00033546582562848926
    2. ' heap' → logprob: -8.000335693359375
    3. 'he' → logprob: -17.000335693359375
    4. '(heap' → logprob: -18.500335693359375
    5. '.heap' → logprob: -19.625335693359375
    6. '_heap' → logprob: -21.250335693359375
    7. 'hep' → logprob: -22.875335693359375
    8. '   ' → logprob: -22.875335693359375
    9. 'hq' → logprob: -23.625335693359375
    10. '
' → logprob: -23.875335693359375

Token 641: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5554329752922058
    2. ' =' → logprob: -1.4304330348968506
    3. '=' → logprob: -1.6804330348968506
    4. '   ' → logprob: -8.18043327331543
    5. ')' → logprob: -8.55543327331543
    6. ')=' → logprob: -10.18043327331543
    7. 'he' → logprob: -10.18043327331543
    8. '[' → logprob: -10.68043327331543
    9. '       ' → logprob: -10.80543327331543
    10. '=
' → logprob: -11.05543327331543

Token 642: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.015146508812904358
    2. 'q' → logprob: -4.265146732330322
    3. 'he' → logprob: -7.390146732330322
    4. 'app' → logprob: -8.140146255493164
    5. ' he' → logprob: -10.765146255493164
    6. '```' → logprob: -11.140146255493164
    7. 'op' → logprob: -11.765146255493164
    8. '   ' → logprob: -11.890146255493164
    9. '.' → logprob: -12.015146255493164
    10. '[' → logprob: -12.765146255493164

Token 643: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.04882773756980896
    2. 'pp' → logprob: -3.048827648162842
    3. 'op' → logprob: -8.798828125
    4. 'pop' → logprob: -9.548828125
    5. '```' → logprob: -11.423828125
    6. 'p' → logprob: -12.798828125
    7. '[' → logprob: -13.798828125
    8. 'ush' → logprob: -14.298828125
    9. '``' → logprob: -14.673828125
    10. 'opp' → logprob: -14.798828125

Token 644: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.04415776953101158
    2. 'ush' → logprob: -3.2941577434539795
    3. 'app' → logprob: -5.544157981872559
    4. 'pp' → logprob: -6.669157981872559
    5. 'pop' → logprob: -7.044157981872559
    6. 'p' → logprob: -10.294157981872559
    7. '```' → logprob: -12.419157981872559
    8. 'opp' → logprob: -12.794157981872559
    9. 'push' → logprob: -13.169157981872559
    10. 'opleft' → logprob: -14.169157981872559

Token 645: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -8.895480277715251e-06
    2. '(' → logprob: -12.250008583068848
    3. 'heap' → logprob: -13.125008583068848
    4. ' (' → logprob: -13.125008583068848
    5. ' heap' → logprob: -17.000009536743164
    6. '(
' → logprob: -17.250009536743164
    7. '(queue' → logprob: -17.375009536743164
    8. '(graph' → logprob: -18.250009536743164
    9. '(h' → logprob: -18.625009536743164
    10. '   ' → logprob: -19.000009536743164

Token 646: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014170682057738304
    2. ')
' → logprob: -4.2641706466674805
    3. ')
' → logprob: -12.38917064666748
    4. ')

' → logprob: -13.13917064666748
    5. '       ' → logprob: -15.01417064666748
    6. ' )' → logprob: -15.01417064666748
    7. '   ' → logprob: -15.26417064666748
    8. ')`' → logprob: -15.88917064666748
    9. ')#' → logprob: -16.889171600341797
    10. '),' → logprob: -17.514171600341797

Token 647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01925303414463997
    2. '   ' → logprob: -4.894253253936768
    3. ' if' → logprob: -5.019253253936768
    4. 'if' → logprob: -5.394253253936768
    5. '	if' → logprob: -8.89425277709961
    6. '        
' → logprob: -8.89425277709961
    7. '```' → logprob: -10.01925277709961
    8. '	' → logprob: -10.76925277709961
    9. '
' → logprob: -10.89425277709961
    10. '<|end|>' → logprob: -10.89425277709961

Token 648: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018031584098935127
    2. ' if' → logprob: -4.518031597137451
    3. '       ' → logprob: -5.018031597137451
    4. '   ' → logprob: -8.018031120300293
    5. '	if' → logprob: -11.643031120300293
    6. '
' → logprob: -13.143031120300293
    7. '        
' → logprob: -14.143031120300293
    8. '```' → logprob: -14.143031120300293
    9. '           ' → logprob: -16.26803207397461
    10. '    ' → logprob: -17.01803207397461

Token 649: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0038278677966445684
    2. 'cur' → logprob: -6.003828048706055
    3. ' dp' → logprob: -6.628828048706055
    4. ' cur' → logprob: -10.503828048706055
    5. '	dp' → logprob: -13.878828048706055
    6. 'node' → logprob: -14.503828048706055
    7. '   ' → logprob: -14.878828048706055
    8. ' ' → logprob: -16.253828048706055
    9. 'curr' → logprob: -17.128828048706055
    10. '  ' → logprob: -17.128828048706055

Token 650: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. 'node' → logprob: -14.875000953674316
    4. '```' → logprob: -17.5
    5. '[cur' → logprob: -18.0
    6. '[
' → logprob: -18.875
    7. '(node' → logprob: -18.875
    8. '[user' → logprob: -19.125
    9. ' [' → logprob: -19.875
    10. '=node' → logprob: -20.25

Token 651: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22557008266448975
    2. '<' → logprob: -1.6005700826644897
    3. '   ' → logprob: -10.225569725036621
    4. '<int' → logprob: -10.475569725036621
    5. ' ' → logprob: -11.475569725036621
    6. '<n' → logprob: -11.600569725036621
    7. '<w' → logprob: -12.100569725036621
    8. '<data' → logprob: -12.225569725036621
    9. '<len' → logprob: -12.225569725036621
    10. '<v' → logprob: -12.350569725036621

Token 652: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20149442553520203
    2. ' <' → logprob: -1.7014944553375244
    3. '   ' → logprob: -10.826494216918945
    4. '<int' → logprob: -10.951494216918945
    5. '<n' → logprob: -12.201494216918945
    6. '[' → logprob: -12.451494216918945
    7. '<com' → logprob: -12.701494216918945
    8. '>' → logprob: -12.951494216918945
    9. '<v' → logprob: -12.951494216918945
    10. ' ' → logprob: -12.951494216918945

Token 653: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00015860427811276168
    2. ' cur' → logprob: -8.750158309936523
    3. '	cur' → logprob: -17.750158309936523
    4. '_cur' → logprob: -18.875158309936523
    5. '(cur' → logprob: -19.000158309936523
    6. '[cur' → logprob: -19.875158309936523
    7. '.cur' → logprob: -19.875158309936523
    8. '-cur' → logprob: -20.750158309936523
    9. 'cost' → logprob: -21.500158309936523
    10. 'Cur' → logprob: -21.500158309936523

Token 654: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.2664456789934775e-06
    2. 'cost' → logprob: -13.875000953674316
    3. '_cur' → logprob: -16.375001907348633
    4. '_' → logprob: -17.000001907348633
    5. 'Cost' → logprob: -17.500001907348633
    6. '_COST' → logprob: -17.500001907348633
    7. '_c' → logprob: -17.875001907348633
    8. ' cost' → logprob: -18.500001907348633
    9. 'ost' → logprob: -18.750001907348633
    10. ' _' → logprob: -19.375001907348633

Token 655: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26367127895355225
    2. '       ' → logprob: -1.8886712789535522
    3. ':
' → logprob: -2.638671398162842
    4. '           ' → logprob: -5.388671398162842
    5. 'continue' → logprob: -6.263671398162842
    6. ' continue' → logprob: -6.763671398162842
    7. '   ' → logprob: -7.263671398162842
    8. '	continue' → logprob: -8.138670921325684
    9. ' or' → logprob: -9.013670921325684
    10. ':return' → logprob: -9.138670921325684

Token 656: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44194334745407104
    2. ' continue' → logprob: -1.6919434070587158
    3. 'continue' → logprob: -2.191943407058716
    4. '	continue' → logprob: -3.441943407058716
    5. '           ' → logprob: -3.566943407058716
    6. '   ' → logprob: -7.191943168640137
    7. '_continue' → logprob: -8.566943168640137
    8. '	' → logprob: -10.316943168640137
    9. '\t' → logprob: -10.566943168640137
    10. ' continues' → logprob: -11.066943168640137

Token 657: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.028487026691436768
    2. '           ' → logprob: -4.278487205505371
    3. ' continue' → logprob: -4.278487205505371
    4. '       ' → logprob: -8.028487205505371
    5. '	continue' → logprob: -11.153487205505371
    6. '   ' → logprob: -11.528487205505371
    7. '               ' → logprob: -12.153487205505371
    8. '_continue' → logprob: -13.278487205505371
    9. '		' → logprob: -15.403487205505371
    10. '```' → logprob: -16.028486251831055

Token 658: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027960997074842453
    2. '   ' → logprob: -3.902961015701294
    3. ' for' → logprob: -5.777960777282715
    4. '
' → logprob: -6.027960777282715
    5. '<|end|>' → logprob: -6.777960777282715
    6. 'for' → logprob: -7.777960777282715
    7. '        
' → logprob: -8.402960777282715
    8. '    
' → logprob: -10.652960777282715
    9. '```' → logprob: -10.777960777282715
    10. '<|end|>' → logprob: -11.652960777282715

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1798315793275833
    2. '   ' → logprob: -2.3048315048217773
    3. ' for' → logprob: -3.0548315048217773
    4. '
' → logprob: -4.554831504821777
    5. 'for' → logprob: -5.929831504821777
    6. '<|end|>' → logprob: -6.054831504821777
    7. '        
' → logprob: -6.679831504821777
    8. '```' → logprob: -7.929831504821777
    9. '    
' → logprob: -8.554831504821777
    10. '	for' → logprob: -8.804831504821777

Token 660: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15611012279987335
    2. ' for' → logprob: -2.1561100482940674
    3. '   ' → logprob: -4.0311102867126465
    4. '       ' → logprob: -4.5311102867126465
    5. '	for' → logprob: -8.531109809875488
    6. '```' → logprob: -10.406109809875488
    7. 'if' (adapté à ' if') → logprob: -12.656109809875488
    8. ' ' → logprob: -13.656109809875488
    9. '        
' → logprob: -14.031109809875488
    10. '  ' → logprob: -14.156109809875488

Token 661: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.002475777640938759
    2. ' node' → logprob: -6.002475738525391
    3. '	node' → logprob: -16.37747573852539
    4. '   ' → logprob: -16.75247573852539
    5. '(node' → logprob: -18.87747573852539
    6. '[node' → logprob: -19.12747573852539
    7. '=node' → logprob: -19.62747573852539
    8. ' ' → logprob: -19.62747573852539
    9. 'nod' → logprob: -19.87747573852539
    10. 'n' → logprob: -20.37747573852539

Token 662: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0036014977376908064
    2. '==' → logprob: -5.628601551055908
    3. ' ' → logprob: -14.50360107421875
    4. ' =' → logprob: -15.37860107421875
    5. ')==' → logprob: -15.62860107421875
    6. '=' → logprob: -15.75360107421875
    7. ' ' → logprob: -15.75360107421875
    8. ')' → logprob: -16.75360107421875
    9. ' !=' → logprob: -16.87860107421875
    10. ' ==
' → logprob: -17.00360107421875

Token 663: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0005530327325686812
    2. ' N' → logprob: -7.500553131103516
    3. '   ' → logprob: -18.750553131103516
    4. '	N' → logprob: -19.000553131103516
    5. 'n' → logprob: -19.125553131103516
    6. '```' → logprob: -19.250553131103516
    7. ' ' → logprob: -20.625553131103516
    8. '<|end|>' → logprob: -20.750553131103516
    9. '  ' → logprob: -20.875553131103516
    10. '(N' → logprob: -21.875553131103516

Token 664: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3138454258441925
    2. ':' → logprob: -1.3138453960418701
    3. '       ' → logprob: -7.688845634460449
    4. '           ' → logprob: -9.81384563446045
    5. ':return' → logprob: -9.93884563446045
    6. '   ' → logprob: -11.56384563446045
    7. '):
' → logprob: -12.81384563446045
    8. ':
' → logprob: -12.81384563446045
    9. '():
' → logprob: -13.56384563446045
    10. ' :
' → logprob: -13.68884563446045

Token 665: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.531813702778891e-05
    2. '
' → logprob: -10.25009536743164
    3. '       ' → logprob: -10.25009536743164
    4. '		' → logprob: -11.62509536743164
    5. ':
' → logprob: -12.50009536743164
    6. 'break' → logprob: -13.12509536743164
    7. '	       ' → logprob: -13.25009536743164
    8. '   ' → logprob: -13.25009536743164
    9. ' break' → logprob: -13.25009536743164
    10. 'return' → logprob: -13.87509536743164

Token 666: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03159571811556816
    2. '       ' → logprob: -3.7815957069396973
    3. '           ' → logprob: -5.531595706939697
    4. ' print' → logprob: -5.531595706939697
    5. 'return' → logprob: -8.156596183776855
    6. 'break' → logprob: -9.281596183776855
    7. '   ' → logprob: -11.656596183776855
    8. ' break' → logprob: -12.906596183776855
    9. ' return' → logprob: -13.281596183776855
    10. '```' → logprob: -13.531596183776855

Token 667: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007800980005413294
    2. 'break' → logprob: -5.507801055908203
    3. ' print' → logprob: -5.757801055908203
    4. '           ' → logprob: -7.882801055908203
    5. 'return' → logprob: -9.382801055908203
    6. '       ' → logprob: -9.757801055908203
    7. ' break' → logprob: -10.757801055908203
    8. '   ' → logprob: -11.632801055908203
    9. '```' → logprob: -11.882801055908203
    10. '               ' → logprob: -14.507801055908203

Token 668: '目的' (ID: 101991)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003264934290200472
    2. 'break' → logprob: -5.753264904022217
    3. 'return' → logprob: -9.503265380859375
    4. ' print' → logprob: -12.003265380859375
    5. '   ' → logprob: -12.753265380859375
    6. '```' → logprob: -13.003265380859375
    7. '       ' → logprob: -14.128265380859375
    8. '           ' → logprob: -14.628265380859375
    9. ' break' → logprob: -16.378265380859375
    10. '``' → logprob: -17.878265380859375

Token 669: '地' (ID: 5557)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18124394118785858
    2. '       ' → logprob: -2.056243896484375
    3. 'return' → logprob: -5.056243896484375
    4. '   ' → logprob: -5.306243896484375
    5. 'の' → logprob: -5.431243896484375
    6. ')' → logprob: -5.431243896484375
    7. '          ' → logprob: -5.806243896484375
    8. '     ' → logprob: -6.181243896484375
    9. '               ' → logprob: -6.431243896484375
    10. '      ' → logprob: -6.806243896484375

Token 670: 'に' (ID: 5280)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11107451468706131
    2. ':
' → logprob: -3.236074447631836
    3. 'の' → logprob: -4.611074447631836
    4. 'return' → logprob: -4.736074447631836
    5. 'を' → logprob: -4.861074447631836
    6. ':' → logprob: -4.986074447631836
    7. '               ' → logprob: -4.986074447631836
    8. ':return' → logprob: -5.111074447631836
    9. '       ' → logprob: -5.861074447631836
    10. '
' → logprob: -5.986074447631836

Token 671: '到' (ID: 6946)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.03199099004268646
    2. ' break' → logprob: -4.531991004943848
    3. 'print' → logprob: -4.531991004943848
    4. '           ' → logprob: -5.281991004943848
    5. '       ' → logprob: -5.656991004943848
    6. 'return' → logprob: -7.406991004943848
    7. '```' → logprob: -7.906991004943848
    8. '   ' → logprob: -8.531991004943848
    9. '               ' → logprob: -9.906991004943848
    10. ' print' → logprob: -10.281991004943848

Token 672: '達' (ID: 83892)
  Prédit: '達'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '達' → logprob: -0.12719939649105072
    2. '着' → logprob: -2.127199411392212
    3. '达' → logprob: -8.877199172973633
    4. 'った' → logprob: -10.127199172973633
    5. 'print' → logprob: -11.127199172973633
    6. '   ' → logprob: -11.502199172973633
    7. '```' → logprob: -11.752199172973633
    8. '1' → logprob: -11.877199172973633
    9. 'reach' → logprob: -11.877199172973633
    10. 'って' → logprob: -12.002199172973633

Token 673: 'した' (ID: 23085)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004590210970491171
    2. '               ' → logprob: -5.754590034484863
    3. '       ' → logprob: -7.129590034484863
    4. 'break' → logprob: -7.629590034484863
    5. '		' → logprob: -10.129590034484863
    6. ':
' → logprob: -11.504590034484863
    7. ':' → logprob: -11.504590034484863
    8. ' break' → logprob: -11.629590034484863
    9. '
' → logprob: -11.754590034484863
    10. '   ' → logprob: -11.754590034484863

Token 674: 'ら' (ID: 8870)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07805360108613968
    2. '       ' → logprob: -2.8280537128448486
    3. ':
' → logprob: -4.8280534744262695
    4. '               ' → logprob: -6.2030534744262695
    5. '   ' → logprob: -6.2030534744262695
    6. '
' → logprob: -6.9530534744262695
    7. 'break' → logprob: -6.9530534744262695
    8. ':' → logprob: -7.7030534744262695
    9. '		' → logprob: -8.20305347442627
    10. '：
' → logprob: -8.95305347442627

Token 675: '最' (ID: 5889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017484210431575775
    2. 'break' → logprob: -4.267484188079834
    3. '           ' → logprob: -5.767484188079834
    4. '       ' → logprob: -8.892484664916992
    5. ' print' → logprob: -10.642484664916992
    6. 'return' → logprob: -11.017484664916992
    7. '```' → logprob: -11.767484664916992
    8. ' break' → logprob: -13.767484664916992
    9. '               ' → logprob: -14.517484664916992
    10. '   ' → logprob: -14.642484664916992

Token 676: '小' (ID: 5820)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.39537185430526733
    2. '           ' → logprob: -1.520371913909912
    3. '_cost' → logprob: -3.395371913909912
    4. '_print' → logprob: -4.395371913909912
    5. '               ' → logprob: -4.770371913909912
    6. 'return' → logprob: -5.020371913909912
    7. '       ' → logprob: -5.020371913909912
    8. '.print' → logprob: -5.145371913909912
    9. '_return' → logprob: -5.270371913909912
    10. '_break' → logprob: -5.520371913909912

Token 677: '費' (ID: 33778)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4644327163696289
    2. 'cost' → logprob: -1.714432716369629
    3. ' cost' → logprob: -2.964432716369629
    4. '費' → logprob: -3.089432716369629
    5. 'コ' → logprob: -3.214432716369629
    6. '_cost' → logprob: -4.089432716369629
    7. ' print' → logprob: -4.089432716369629
    8. '   ' → logprob: -4.964432716369629
    9. '宿' → logprob: -5.464432716369629
    10. '-cost' → logprob: -6.089432716369629

Token 678: '用' (ID: 5615)
  Prédit: '用'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '用' → logprob: -0.492410272359848
    2. '       ' → logprob: -1.9924103021621704
    3. '           ' → logprob: -2.367410182952881
    4. '```' → logprob: -2.492410182952881
    5. '   ' → logprob: -3.492410182952881
    6. '料' → logprob: -3.867410182952881
    7. '         ' → logprob: -5.867410182952881
    8. '          ' → logprob: -5.992410182952881
    9. '価' → logprob: -6.242410182952881
    10. '算' → logprob: -6.242410182952881

Token 679: 'が' (ID: 6632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038872790173627436
    2. '       ' → logprob: -8.250389099121094
    3. '=' → logprob: -10.500389099121094
    4. 'print' → logprob: -10.750389099121094
    5. 'break' → logprob: -10.750389099121094
    6. ' =' → logprob: -11.000389099121094
    7. 'return' → logprob: -11.250389099121094
    8. '          ' → logprob: -12.125389099121094
    9. ',' → logprob: -12.250389099121094
    10. '               ' → logprob: -12.500389099121094

Token 680: '確' (ID: 60097)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4824312925338745
    2. 'break' → logprob: -1.6074312925338745
    3. '           ' → logprob: -2.357431411743164
    4. '       ' → logprob: -2.857431411743164
    5. 'cur' → logprob: -3.732431411743164
    6. ' print' → logprob: -6.232431411743164
    7. '```' → logprob: -6.232431411743164
    8. ' break' → logprob: -6.857431411743164
    9. ' cur' → logprob: -8.107431411743164
    10. 'return' → logprob: -8.232431411743164

Token 681: '定' (ID: 8745)
  Prédit: '定'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '定' → logprob: -1.6240566083070007e-06
    2. '保' → logprob: -14.375001907348633
    3. '実' → logprob: -15.500001907348633
    4. '```' → logprob: -15.750001907348633
    5. '認' → logprob: -15.875001907348633
    6. '�' → logprob: -15.875001907348633
    7. '��' → logprob: -16.875001907348633
    8. '確' → logprob: -17.000001907348633
    9. ' 定' → logprob: -17.125001907348633
    10. '立' → logprob: -17.250001907348633

Token 682: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009081190451979637
    2. '       ' → logprob: -4.7590813636779785
    3. 'print' → logprob: -7.7590813636779785
    4. 'return' → logprob: -11.25908088684082
    5. '
' → logprob: -11.88408088684082
    6. ' print' → logprob: -12.00908088684082
    7. '               ' → logprob: -12.75908088684082
    8. '```' → logprob: -13.13408088684082
    9. 'break' → logprob: -13.13408088684082
    10. '   ' → logprob: -13.38408088684082

Token 683: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38760724663734436
    2. '       ' → logprob: -1.137607216835022
    3. 'print' → logprob: -7.387607097625732
    4. ' print' → logprob: -10.38760757446289
    5. '```' → logprob: -10.76260757446289
    6. 'break' → logprob: -11.01260757446289
    7. '
' → logprob: -11.38760757446289
    8. '   ' → logprob: -11.63760757446289
    9. '               ' → logprob: -12.01260757446289
    10. ' break' → logprob: -12.13760757446289

Token 684: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07911251485347748
    2. 'break' → logprob: -2.5791125297546387
    3. '       ' → logprob: -8.82911205291748
    4. '   ' → logprob: -10.07911205291748
    5. ' print' → logprob: -11.07911205291748
    6. '```' → logprob: -11.70411205291748
    7. 'return' → logprob: -11.95411205291748
    8. ' break' → logprob: -12.45411205291748
    9. '           ' → logprob: -15.70411205291748
    10. 'pr' → logprob: -16.579113006591797

Token 685: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.002510262420400977
    2. 'cur' → logprob: -6.002510070800781
    3. '(dp' → logprob: -10.502510070800781
    4. '(' → logprob: -12.252510070800781
    5. ' cur' → logprob: -13.752510070800781
    6. '(curr' → logprob: -14.002510070800781
    7. '[cur' → logprob: -15.627510070800781
    8. 'dp' → logprob: -15.877510070800781
    9. '	cur' → logprob: -16.50251007080078
    10. '(cost' → logprob: -17.25251007080078

Token 686: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1041145626222715e-05
    2. '_cur' → logprob: -12.375011444091797
    3. '_dp' → logprob: -12.500011444091797
    4. '_st' → logprob: -14.375011444091797
    5. '_' → logprob: -14.750011444091797
    6. '_dist' → logprob: -14.875011444091797
    7. 'cost' → logprob: -14.875011444091797
    8. '_COST' → logprob: -15.000011444091797
    9. ' _' → logprob: -16.125011444091797
    10. 'Cost' → logprob: -16.375011444091797

Token 687: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006848219316452742
    2. ')' → logprob: -5.006848335266113
    3. ')
' → logprob: -9.131848335266113
    4. '           ' → logprob: -10.881848335266113
    5. ')return' → logprob: -12.756848335266113
    6. '       ' → logprob: -13.756848335266113
    7. '               ' → logprob: -14.006848335266113
    8. ')`
' → logprob: -14.506848335266113
    9. ' )
' → logprob: -15.381848335266113
    10. '   ' → logprob: -15.506848335266113

Token 688: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28145790100097656
    2. '       ' → logprob: -1.4064579010009766
    3. '   ' → logprob: -8.906457901000977
    4. 'continue' → logprob: -10.156457901000977
    5. '	       ' → logprob: -10.281457901000977
    6. '		' → logprob: -10.656457901000977
    7. '	' → logprob: -10.656457901000977
    8. ' continue' → logprob: -11.156457901000977
    9. '	continue' → logprob: -11.531457901000977
    10. '<|end|>' → logprob: -11.906457901000977

Token 689: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38759055733680725
    2. '           ' → logprob: -1.1375905275344849
    3. ' return' → logprob: -7.262590408325195
    4. 'break' → logprob: -12.012590408325195
    5. '
' → logprob: -12.137590408325195
    6. '	return' → logprob: -13.137590408325195
    7. '		' → logprob: -13.387590408325195
    8. '       ' → logprob: -13.637590408325195
    9. '```' → logprob: -14.012590408325195
    10. '   ' → logprob: -14.887590408325195

Token 690: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025993187446147203
    2. 'for' → logprob: -6.252599239349365
    3. ' for' → logprob: -7.877599239349365
    4. '   ' → logprob: -8.502599716186523
    5. '
' → logprob: -10.627599716186523
    6. '        
' → logprob: -10.752599716186523
    7. '	for' → logprob: -11.002599716186523
    8. '	' → logprob: -11.752599716186523
    9. '```' → logprob: -12.127599716186523
    10. '<|end|>' → logprob: -12.252599716186523

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010170615278184414
    2. '   ' → logprob: -5.0101704597473145
    3. 'for' → logprob: -6.6351704597473145
    4. '```' → logprob: -6.6351704597473145
    5. ' for' → logprob: -8.135170936584473
    6. '        
' → logprob: -8.135170936584473
    7. '
' → logprob: -9.135170936584473
    8. '<|end|>' → logprob: -9.510170936584473
    9. '	for' → logprob: -11.385170936584473
    10. '	' → logprob: -11.385170936584473

Token 692: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43865612149238586
    2. ' for' → logprob: -1.5636560916900635
    3. 'for' (adapté à ' for') → logprob: -1.9386560916900635
    4. '   ' → logprob: -7.063656330108643
    5. '	for' → logprob: -7.063656330108643
    6. '```' → logprob: -9.438655853271484
    7. '        
' → logprob: -11.188655853271484
    8. '	' → logprob: -12.063655853271484
    9. ' ' → logprob: -12.188655853271484
    10. '	   ' → logprob: -12.688655853271484

Token 693: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37221190333366394
    2. ' nxt' → logprob: -2.1222119331359863
    3. 'next' → logprob: -2.2472119331359863
    4. 'neighbor' → logprob: -2.7472119331359863
    5. 'cost' → logprob: -4.747211933135986
    6. 'to' → logprob: -5.372211933135986
    7. 'adj' → logprob: -5.872211933135986
    8. ' next' → logprob: -6.372211933135986
    9. '   ' → logprob: -6.997211933135986
    10. 'nx' → logprob: -7.247211933135986

Token 694: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09958120435476303
    2. ' in' → logprob: -2.599581241607666
    3. ' ,' → logprob: -4.099581241607666
    4. 'in' → logprob: -6.349581241607666
    5. ',node' → logprob: -7.599581241607666
    6. '_,' → logprob: -7.724581241607666
    7. 'n' → logprob: -7.724581241607666
    8. ',n' → logprob: -7.974581241607666
    9. '_cost' → logprob: -8.849580764770508
    10. 'cost' → logprob: -9.599580764770508

Token 695: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.000553151941858232
    2. ' graph' → logprob: -7.500553131103516
    3. 'node' → logprob: -17.000553131103516
    4. '	graph' → logprob: -17.000553131103516
    5. '(graph' → logprob: -17.625553131103516
    6. '_graph' → logprob: -19.000553131103516
    7. '   ' → logprob: -20.250553131103516
    8. ' ' → logprob: -21.625553131103516
    9. '.graph' → logprob: -21.750553131103516
    10. 'n' → logprob: -21.875553131103516

Token 696: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.309382373117842e-05
    2. '[now' → logprob: -11.625033378601074
    3. '(node' → logprob: -12.125033378601074
    4. ',' → logprob: -12.125033378601074
    5. ',node' → logprob: -12.125033378601074
    6. 'node' → logprob: -12.875033378601074
    7. '```' → logprob: -13.125033378601074
    8. '[n' → logprob: -14.000033378601074
    9. '[' → logprob: -14.125033378601074
    10. '[
' → logprob: -14.500033378601074

Token 697: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41813308000564575
    2. ',' → logprob: -1.543133020401001
    3. ':' → logprob: -2.793133020401001
    4. '       ' → logprob: -3.168133020401001
    5. '):
' → logprob: -4.04313325881958
    6. '           ' → logprob: -5.91813325881958
    7. ']:
' → logprob: -6.41813325881958
    8. '   ' → logprob: -6.54313325881958
    9. '```' → logprob: -8.043132781982422
    10. '):' → logprob: -8.543132781982422

Token 698: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011878492077812552
    2. '       ' → logprob: -6.876187801361084
    3. ' if' → logprob: -9.376188278198242
    4. '	       ' → logprob: -10.876188278198242
    5. 'if' → logprob: -11.126188278198242
    6. '               ' → logprob: -11.126188278198242
    7. '```' → logprob: -12.251188278198242
    8. ',' → logprob: -12.376188278198242
    9. '            
' → logprob: -12.501188278198242
    10. '   ' → logprob: -13.376188278198242

Token 699: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.0418329238891602
    2. 'new' → logprob: -1.1668329238891602
    3. 'if' → logprob: -1.4168329238891602
    4. '           ' → logprob: -2.79183292388916
    5. 'n' → logprob: -4.66683292388916
    6. 'nc' → logprob: -5.16683292388916
    7. ' if' → logprob: -5.29183292388916
    8. 'nd' → logprob: -5.54183292388916
    9. ' next' → logprob: -5.54183292388916
    10. ' new' → logprob: -6.29183292388916

Token 700: ' �' (ID: 9203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8396993279457092
    2. 'next' → logprob: -1.0896992683410645
    3. 'new' → logprob: -1.5896992683410645
    4. 'n' → logprob: -4.7146992683410645
    5. 'nc' → logprob: -5.4646992683410645
    6. '           ' → logprob: -5.5896992683410645
    7. ' next' → logprob: -5.8396992683410645
    8. 'nd' → logprob: -5.8396992683410645
    9. ' if' → logprob: -5.9646992683410645
    10. ' new' → logprob: -7.0896992683410645

Token 701: '�' (ID: 122)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.280723214149475
    2. ' new' → logprob: -1.780723214149475
    3. 'next' → logprob: -1.905723214149475
    4. ' next' → logprob: -1.905723214149475
    5. 'new' → logprob: -2.2807230949401855
    6. ' if' → logprob: -3.0307230949401855
    7. 'cost' → logprob: -3.2807230949401855
    8. 'n' → logprob: -3.7807230949401855
    9. ' cost' → logprob: -4.1557230949401855
    10. ' nd' → logprob: -5.1557230949401855

Token 702: 'ン' (ID: 4025)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.3807200193405151
    2. ' cost' → logprob: -1.3807200193405151
    3. ' new' → logprob: -1.5057200193405151
    4. 'cost' → logprob: -2.5057201385498047
    5. ' if' → logprob: -3.1307201385498047
    6. ' nxt' → logprob: -3.6307201385498047
    7. ' cur' → logprob: -4.005720138549805
    8. '   ' → logprob: -4.130720138549805
    9. 'next' → logprob: -4.255720138549805
    10. 'if' → logprob: -4.380720138549805

Token 703: 'ビ' (ID: 24935)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6784822344779968
    2. ' dist' → logprob: -1.5534822940826416
    3. '           ' → logprob: -2.5534822940826416
    4. '       ' → logprob: -3.3034822940826416
    5. '[n' → logprob: -3.3034822940826416
    6. '   ' → logprob: -3.6784822940826416
    7. 'n' → logprob: -4.1784820556640625
    8. '[' → logprob: -4.5534820556640625
    9. ' if' → logprob: -4.6784820556640625
    10. '               ' → logprob: -4.8034820556640625

Token 704: '支' (ID: 18904)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6285753846168518
    2. 'dist' → logprob: -1.253575325012207
    3. '_dist' → logprob: -2.878575325012207
    4. '支' → logprob: -3.003575325012207
    5. '_cost' → logprob: -4.128575325012207
    6. 'cost' → logprob: -4.378575325012207
    7. '   ' → logprob: -4.628575325012207
    8. '_control' → logprob: -4.878575325012207
    9. ' ' → logprob: -5.003575325012207
    10. '_support' → logprob: -5.378575325012207

Token 705: '配' (ID: 23246)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8752431869506836
    2. '配' → logprob: -1.1252431869506836
    3. '支' → logprob: -2.6252431869506836
    4. 'd' → logprob: -2.7502431869506836
    5. 'cost' → logprob: -3.2502431869506836
    6. 'dom' → logprob: -4.250243186950684
    7. '[' → logprob: -4.500243186950684
    8. '```' → logprob: -5.250243186950684
    9. '0' → logprob: -5.375243186950684
    10. '[i' → logprob: -5.625243186950684

Token 706: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.3846712112426758
    2. 'town' → logprob: -2.259671211242676
    3. 'の' → logprob: -2.384671211242676
    4. '[n' → logprob: -3.884671211242676
    5. '```' → logprob: -4.384671211242676
    6. ' town' → logprob: -4.384671211242676
    7. 'か' → logprob: -4.634671211242676
    8. 'で' → logprob: -4.759671211242676
    9. 'if' → logprob: -5.134671211242676
    10. '   ' → logprob: -5.509671211242676

Token 707: 'は' (ID: 5205)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1544924974441528
    2. '           ' → logprob: -1.2794924974441528
    3. ' or' → logprob: -2.5294923782348633
    4. 'は' → logprob: -2.6544923782348633
    5. 'の' → logprob: -3.0294923782348633
    6. 'and' → logprob: -3.2794923782348633
    7. '   ' → logprob: -3.2794923782348633
    8. ' if' → logprob: -3.2794923782348633
    9. ',' → logprob: -4.154492378234863
    10. 'or' → logprob: -4.404492378234863

Token 708: '通' (ID: 9034)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.043648611754179
    2. ' dist' → logprob: -3.1686487197875977
    3. 'if' → logprob: -7.918648719787598
    4. 'cost' → logprob: -8.418648719787598
    5. ' if' → logprob: -11.293648719787598
    6. ' cost' → logprob: -11.293648719787598
    7. 'continue' → logprob: -11.543648719787598
    8. '   ' → logprob: -12.168648719787598
    9. '```' → logprob: -12.168648719787598
    10. '           ' → logprob: -12.293648719787598

Token 709: 'れ' (ID: 9472)
  Prédit: 'れ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.18127039074897766
    2. 'ら' → logprob: -2.3062703609466553
    3. 'り' → logprob: -2.9312703609466553
    4. '```' → logprob: -4.681270599365234
    5. 'って' → logprob: -7.431270599365234
    6. '行' → logprob: -7.431270599365234
    7. 'さ' → logprob: -7.556270599365234
    8. '``' → logprob: -8.306270599365234
    9. 'る' → logprob: -8.431270599365234
    10. '過' → logprob: -8.931270599365234

Token 710: 'ない' (ID: 47592)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.4097568392753601
    2. 'ない' → logprob: -2.284756898880005
    3. 'な' → logprob: -2.409756898880005
    4. 'ら' → logprob: -2.534756898880005
    5. '```' → logprob: -3.409756898880005
    6. '禁' → logprob: -4.659756660461426
    7. '禁止' → logprob: -5.159756660461426
    8. 'え' → logprob: -5.284756660461426
    9. 'り' → logprob: -5.409756660461426
    10. 'なく' → logprob: -6.284756660461426

Token 711: 'ので' (ID: 69719)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4955551326274872
    2. '           ' → logprob: -1.6205551624298096
    3. 'if' → logprob: -2.1205551624298096
    4. ' or' → logprob: -3.2455551624298096
    5. ' and' → logprob: -4.1205549240112305
    6. 'and' → logprob: -4.8705549240112305
    7. ' continue' → logprob: -5.4955549240112305
    8. '               ' → logprob: -5.6205549240112305
    9. 'continue' → logprob: -6.6205549240112305
    10. ',' → logprob: -7.7455549240112305

Token 712: 'cost' (ID: 33457)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18516011536121368
    2. 'dist' → logprob: -2.4351601600646973
    3. ' if' → logprob: -2.8101601600646973
    4. ' dist' → logprob: -4.185160160064697
    5. '           ' → logprob: -5.185160160064697
    6. '               ' → logprob: -8.060159683227539
    7. 'continue' → logprob: -10.310159683227539
    8. '                   ' → logprob: -10.935159683227539
    9. '            ' → logprob: -11.310159683227539
    10. ' continue' → logprob: -11.685159683227539

Token 713: 'が' (ID: 6632)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0006813380168750882
    2. 'n' → logprob: -8.250680923461914
    3. '=' → logprob: -9.375680923461914
    4. 'を' → logprob: -9.500680923461914
    5. '=n' → logprob: -10.125680923461914
    6. 'の' → logprob: -10.500680923461914
    7. ' =' → logprob: -10.625680923461914
    8. ']' → logprob: -10.750680923461914
    9. 'は' → logprob: -10.875680923461914
    10. 's' → logprob: -11.000680923461914

Token 714: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07069023698568344
    2. 'Q' → logprob: -2.695690155029297
    3. '```' → logprob: -8.195690155029297
    4. ' ' → logprob: -8.320690155029297
    5. ' Q' → logprob: -9.445690155029297
    6. '   ' → logprob: -9.695690155029297
    7. '[' → logprob: -10.070690155029297
    8. '>' → logprob: -10.445690155029297
    9. '``' → logprob: -12.195690155029297
    10. '=' → logprob: -12.195690155029297

Token 715: 'で' (ID: 4344)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5649926066398621
    2. ' or' → logprob: -1.4399926662445068
    3. ' ' → logprob: -3.064992666244507
    4. '   ' → logprob: -3.314992666244507
    5. ' ==' → logprob: -3.439992666244507
    6. 'の' → logprob: -4.814992427825928
    7. 'また' → logprob: -4.814992427825928
    8. 'or' → logprob: -4.939992427825928
    9. '!=' → logprob: -4.939992427825928
    10. '=' → logprob: -5.189992427825928

Token 716: 'ない' (ID: 47592)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5996429324150085
    2. 'dist' → logprob: -0.9746429324150085
    3. 'continue' → logprob: -3.5996429920196533
    4. ' ' → logprob: -4.349642753601074
    5. 'n' → logprob: -4.599642753601074
    6. ' dist' → logprob: -4.849642753601074
    7. ' nxt' → logprob: -4.849642753601074
    8. ' continue' → logprob: -5.974642753601074
    9. 'not' → logprob: -6.599642753601074
    10. 'next' → logprob: -6.974642753601074

Token 717: 'か' (ID: 7128)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42937859892845154
    2. 'and' → logprob: -1.054378628730774
    3. ' or' → logprob: -7.804378509521484
    4. ' ' → logprob: -9.179378509521484
    5. 'or' → logprob: -9.929378509521484
    6. ':' → logprob: -10.179378509521484
    7. 'と' → logprob: -10.304378509521484
    8. '   ' → logprob: -11.179378509521484
    9. 'か' → logprob: -12.429378509521484
    10. '```' → logprob: -12.554378509521484

Token 718: 'つ' (ID: 18290)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5214875936508179
    2. 'and' → logprob: -1.1464875936508179
    3. '==' → logprob: -2.7714877128601074
    4. ' ==' → logprob: -4.896487712860107
    5. ' or' → logprob: -5.396487712860107
    6. 'if' → logprob: -6.021487712860107
    7. '!=' → logprob: -6.521487712860107
    8. ':' → logprob: -6.646487712860107
    9. 'continue' → logprob: -6.646487712860107
    10. '```' → logprob: -6.896487712860107

Token 719: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4005855619907379
    2. ' dist' → logprob: -1.1505855321884155
    3. 'cost' → logprob: -4.525585651397705
    4. ' cost' → logprob: -6.150585651397705
    5. 'dp' → logprob: -8.525585174560547
    6. '```' → logprob: -8.775585174560547
    7. '(dist' → logprob: -9.025585174560547
    8. 'not' → logprob: -10.588085174560547
    9. '0' → logprob: -10.838085174560547
    10. '   ' → logprob: -11.025585174560547

Token 720: 'が' (ID: 6632)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00010247035970678553
    2. '[' → logprob: -10.500102043151855
    3. '[now' → logprob: -10.750102043151855
    4. '[next' → logprob: -10.875102043151855
    5. 'n' → logprob: -10.875102043151855
    6. '```' → logprob: -11.750102043151855
    7. '[node' → logprob: -13.375102043151855
    8. 'の' → logprob: -14.000102043151855
    9. '(n' → logprob: -14.625102043151855
    10. '[...]' → logprob: -14.875102043151855

Token 721: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005607353989034891
    2. ' ' → logprob: -5.5056071281433105
    3. '>' → logprob: -6.8806071281433105
    4. 'not' → logprob: -8.505607604980469
    5. '```' → logprob: -9.130607604980469
    6. '-' → logprob: -9.755607604980469
    7. ' not' → logprob: -10.505607604980469
    8. '1' → logprob: -10.505607604980469
    9. ' >' → logprob: -10.880607604980469
    10. '==' → logprob: -11.505607604980469

Token 722: 'の' (ID: 3385)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.1591492891311646
    2. 'を' → logprob: -1.7841492891311646
    3. ' !=' → logprob: -2.159149169921875
    4. ' or' → logprob: -2.784149169921875
    5. 'で' → logprob: -2.784149169921875
    6. ':' → logprob: -2.909149169921875
    7. 'の' → logprob: -3.159149169921875
    8. ' and' → logprob: -3.534149169921875
    9. '```' → logprob: -3.659149169921875
    10. 'では' → logprob: -3.784149169921875

Token 723: '状態' (ID: 175682)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8978081941604614
    2. 'continue' → logprob: -1.8978081941604614
    3. ' continue' → logprob: -2.022808074951172
    4. 'for' → logprob: -2.147808074951172
    5. '場合' → logprob: -2.897808074951172
    6. ' for' → logprob: -2.897808074951172
    7. 'ところ' → logprob: -3.022808074951172
    8. 'n' → logprob: -3.147808074951172
    9. '```' → logprob: -3.272808074951172
    10. ' ' → logprob: -3.522808074951172

Token 724: 'は' (ID: 5205)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5530862808227539
    2. ' and' → logprob: -1.553086280822754
    3. 'and' → logprob: -1.803086280822754
    4. '               ' → logprob: -3.678086280822754
    5. '==' → logprob: -5.178086280822754
    6. ':' → logprob: -5.428086280822754
    7. ':
' → logprob: -5.678086280822754
    8. ' ==' → logprob: -6.053086280822754
    9. ',' → logprob: -6.803086280822754
    10. 'を' → logprob: -6.803086280822754

Token 725: '通' (ID: 9034)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06387242674827576
    2. ' continue' → logprob: -2.8138723373413086
    3. '   ' → logprob: -6.563872337341309
    4. '```' → logprob: -8.438872337341309
    5. '続' → logprob: -9.688872337341309
    6. ' ' → logprob: -9.813872337341309
    7. '	continue' → logprob: -10.063872337341309
    8. '           ' → logprob: -10.813872337341309
    9. '0' → logprob: -10.938872337341309
    10. '               ' → logprob: -11.313872337341309

Token 726: '行' (ID: 6550)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.23453930020332336
    2. 'ら' → logprob: -1.609539270401001
    3. '```' → logprob: -5.23453950881958
    4. 'って' → logprob: -6.23453950881958
    5. 'り' → logprob: -7.35953950881958
    6. 'る' → logprob: -7.60953950881958
    7. '
' → logprob: -8.859539031982422
    8. '``' → logprob: -9.234539031982422
    9. 'っ' → logprob: -9.484539031982422
    10. '   ' → logprob: -9.734539031982422

Token 727: '不可' (ID: 76578)
  Prédit: '禁止'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '禁止' → logprob: -0.764875590801239
    2. 'でき' → logprob: -0.889875590801239
    3. '               ' → logprob: -3.389875650405884
    4. '```' → logprob: -3.514875650405884
    5. '           ' → logprob: -3.889875650405884
    6. '不可' → logprob: -4.264875411987305
    7. '   ' → logprob: -4.639875411987305
    8. 'し' → logprob: -5.014875411987305
    9. '                   ' → logprob: -5.889875411987305
    10. '``' → logprob: -6.514875411987305

Token 728: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009718094021081924
    2. ' and' → logprob: -5.00971794128418
    3. '               ' → logprob: -6.50971794128418
    4. 'and' → logprob: -7.75971794128418
    5. '       ' → logprob: -8.25971794128418
    6. ' if' → logprob: -8.38471794128418
    7. ' or' → logprob: -8.63471794128418
    8. ',' → logprob: -9.13471794128418
    9. '```' → logprob: -9.25971794128418
    10. '   ' → logprob: -10.25971794128418

Token 729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02562461979687214
    2. ' and' → logprob: -4.275624752044678
    3. ' if' → logprob: -5.275624752044678
    4. '               ' → logprob: -6.025624752044678
    5. 'and' → logprob: -7.025624752044678
    6. '<|end|>' → logprob: -7.150624752044678
    7. '       ' → logprob: -7.400624752044678
    8. ' or' → logprob: -8.02562427520752
    9. ',' → logprob: -8.02562427520752
    10. '          ' → logprob: -8.77562427520752

Token 730: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3794587254524231
    2. 'if' → logprob: -1.3794586658477783
    3. '           ' → logprob: -2.7544586658477783
    4. '       ' → logprob: -8.5044584274292
    5. '               ' → logprob: -9.8794584274292
    6. '   ' → logprob: -9.8794584274292
    7. '```' → logprob: -10.8794584274292
    8. '            ' → logprob: -11.3794584274292
    9. '          ' → logprob: -11.3794584274292
    10. '<|end|>' → logprob: -11.6294584274292

Token 731: ' �' (ID: 10966)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10178292542695999
    2. 'if' → logprob: -2.976783037185669
    3. '           ' → logprob: -3.101783037185669
    4. ' continue' → logprob: -7.72678279876709
    5. '               ' → logprob: -8.97678279876709
    6. 'continue' → logprob: -9.22678279876709
    7. '```' → logprob: -9.85178279876709
    8. '       ' → logprob: -10.10178279876709
    9. '   ' → logprob: -10.22678279876709
    10. '            ' → logprob: -11.85178279876709

Token 732: '�' (ID: 253)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6780729293823242
    2. 'dist' → logprob: -1.0530729293823242
    3. ' cost' → logprob: -2.428072929382324
    4. 'cost' → logprob: -3.053072929382324
    5. 'if' → logprob: -5.678072929382324
    6. ' if' → logprob: -5.928072929382324
    7. '   ' → logprob: -6.928072929382324
    8. '           ' → logprob: -8.928072929382324
    9. '       ' → logprob: -9.678072929382324
    10. ' not' → logprob: -9.740572929382324

Token 733: '際' (ID: 71005)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6009504795074463
    2. 'dist' → logprob: -0.8509504795074463
    3. 'if' → logprob: -4.600950241088867
    4. ' if' → logprob: -4.975950241088867
    5. ' nxt' → logprob: -5.975950241088867
    6. '   ' → logprob: -7.100950241088867
    7. 'n' → logprob: -7.225950241088867
    8. ' cost' → logprob: -7.475950241088867
    9. 'ist' → logprob: -7.850950241088867
    10. ' ' → logprob: -7.850950241088867

Token 734: 'に' (ID: 5280)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4703952968120575
    2. '           ' → logprob: -1.7203953266143799
    3. 'if' → logprob: -2.47039532661438
    4. '               ' → logprob: -3.59539532661438
    5. ' and' → logprob: -4.095395088195801
    6. 'の' → logprob: -4.720395088195801
    7. '   ' → logprob: -4.970395088195801
    8. ' ' → logprob: -5.095395088195801
    9. '       ' → logprob: -5.595395088195801
    10. ' in' → logprob: -5.845395088195801

Token 735: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6048101782798767
    2. 'dist' → logprob: -1.4798102378845215
    3. ' cost' → logprob: -1.9798102378845215
    4. ' dist' → logprob: -2.4798102378845215
    5. 'if' → logprob: -6.3548102378845215
    6. ' if' → logprob: -7.4798102378845215
    7. 'not' → logprob: -7.7298102378845215
    8. ' not' → logprob: -7.9798102378845215
    9. '           ' → logprob: -8.854809761047363
    10. '(cost' → logprob: -8.979809761047363

Token 736: 'で' (ID: 4344)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.046155497431755066
    2. '[next' → logprob: -4.5461554527282715
    3. 'が' → logprob: -4.9211554527282715
    4. '==' → logprob: -5.2961554527282715
    5. '[node' → logprob: -5.2961554527282715
    6. '[i' → logprob: -5.2961554527282715
    7. '[now' → logprob: -5.2961554527282715
    8. '=' → logprob: -6.4211554527282715
    9. ' ==' → logprob: -6.4211554527282715
    10. '[' → logprob: -6.6711554527282715

Token 737: '判' (ID: 47257)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7548947930335999
    2. 'dist' → logprob: -0.7548947930335999
    3. '0' → logprob: -4.254894733428955
    4. 'if' → logprob: -4.504894733428955
    5. ' not' → logprob: -5.004894733428955
    6. ' ' → logprob: -5.254894733428955
    7. ' if' → logprob: -5.254894733428955
    8. 'は' → logprob: -5.754894733428955
    9. 'cost' → logprob: -5.754894733428955
    10. ' cost' → logprob: -5.754894733428955

Token 738: '別' (ID: 47106)
  Prédit: '断'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '断' → logprob: -0.6829326748847961
    2. '定' → logprob: -0.9329326748847961
    3. '価' → logprob: -3.0579326152801514
    4. '```' → logprob: -3.3079326152801514
    5. '別' → logprob: -5.3079328536987305
    6. '�' → logprob: -6.0579328536987305
    7. '=' → logprob: -6.1829328536987305
    8. '``' → logprob: -6.1829328536987305
    9. '' → logprob: -7.6829328536987305
    10. 'break' → logprob: -7.9329328536987305

Token 739: 'する' (ID: 39065)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4412827491760254
    2. '[n' → logprob: -1.8162827491760254
    3. '               ' → logprob: -2.0662827491760254
    4. 'if' → logprob: -4.441282749176025
    5. '                   ' → logprob: -4.566282749176025
    6. '==' → logprob: -4.691282749176025
    7. '[' → logprob: -5.191282749176025
    8. 'が' → logprob: -5.441282749176025
    9. ' if' → logprob: -5.816282749176025
    10. '   ' → logprob: -6.316282749176025

Token 740: 'より' (ID: 67023)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18058058619499207
    2. '               ' → logprob: -2.3055806159973145
    3. ' if' → logprob: -4.1805806159973145
    4. ' and' → logprob: -4.1805806159973145
    5. ':
' → logprob: -4.4305806159973145
    6. '   ' → logprob: -5.6805806159973145
    7. 'if' → logprob: -5.6805806159973145
    8. ':' → logprob: -5.9305806159973145
    9. ' ==' → logprob: -6.3055806159973145
    10. '       ' → logprob: -6.3055806159973145

Token 741: 'は' (ID: 5205)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3971531391143799
    2. ' dist' → logprob: -1.1471531391143799
    3. ' if' → logprob: -5.397152900695801
    4. 'if' → logprob: -5.647152900695801
    5. '           ' → logprob: -6.647152900695801
    6. '   ' → logprob: -8.5221529006958
    7. '               ' → logprob: -9.0221529006958
    8. '       ' → logprob: -9.7721529006958
    9. '```' → logprob: -10.0221529006958
    10. ' not' → logprob: -10.0221529006958

Token 742: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02056208811700344
    2. ' dist' → logprob: -3.895562171936035
    3. 'if' → logprob: -12.020562171936035
    4. '```' → logprob: -12.520562171936035
    5. '(dist' → logprob: -12.645562171936035
    6. 'not' → logprob: -13.020562171936035
    7. 'continue' → logprob: -13.520562171936035
    8. '	dist' → logprob: -13.895562171936035
    9. ' not' → logprob: -14.395562171936035
    10. ' if' → logprob: -14.645562171936035

Token 743: '==' (ID: 560)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0031635798513889313
    2. '[now' → logprob: -5.878163814544678
    3. '[next' → logprob: -8.50316333770752
    4. '[' → logprob: -9.25316333770752
    5. 'n' → logprob: -10.25316333770752
    6. '```' → logprob: -11.75316333770752
    7. 'の' → logprob: -13.12816333770752
    8. '[node' → logprob: -13.25316333770752
    9. 'を' → logprob: -13.50316333770752
    10. ' nxt' → logprob: -14.12816333770752

Token 744: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002844576956704259
    2. ' ' → logprob: -8.250284194946289
    3. '>' → logprob: -12.000284194946289
    4. '```' → logprob: -12.125284194946289
    5. '-' → logprob: -12.750284194946289
    6. '1' → logprob: -12.750284194946289
    7. '=' → logprob: -13.500284194946289
    8. 'n' → logprob: -14.375284194946289
    9. '   ' → logprob: -14.750284194946289
    10. '[' → logprob: -14.750284194946289

Token 745: 'で' (ID: 4344)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9046170115470886
    2. 'and' → logprob: -0.9046170115470886
    3. ' or' → logprob: -1.9046170711517334
    4. 'or' → logprob: -4.154616832733154
    5. '           ' → logprob: -4.654616832733154
    6. '==' → logprob: -5.404616832733154
    7. 'で' → logprob: -6.029616832733154
    8. ':' → logprob: -6.154616832733154
    9. 'か' → logprob: -7.029616832733154
    10. 'の' → logprob: -7.029616832733154

Token 746: '判' (ID: 47257)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1340814083814621
    2. 'if' → logprob: -2.8840813636779785
    3. ' continue' → logprob: -2.8840813636779785
    4. '```' → logprob: -4.8840813636779785
    5. 'す' → logprob: -6.5090813636779785
    6. 'pass' → logprob: -6.6340813636779785
    7. '続' → logprob: -6.7590813636779785
    8. ' if' → logprob: -7.3840813636779785
    9. '判断' → logprob: -8.259081840515137
    10. '           ' → logprob: -8.259081840515137

Token 747: '別' (ID: 47106)
  Prédit: '断'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '断' → logprob: -0.1993822157382965
    2. '定' → logprob: -1.8243821859359741
    3. '別' → logprob: -4.449382305145264
    4. '```' → logprob: -5.074382305145264
    5. '�' → logprob: -7.449382305145264
    6. '``' → logprob: -9.199381828308105
    7. '#' → logprob: -9.449381828308105
    8. '   ' → logprob: -9.449381828308105
    9. '
' → logprob: -9.449381828308105
    10. '       ' → logprob: -10.074381828308105

Token 748: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35405004024505615
    2. ' and' → logprob: -1.6040500402450562
    3. ':
' → logprob: -3.1040501594543457
    4. ':' → logprob: -3.7290501594543457
    5. '               ' → logprob: -4.354050159454346
    6. 'and' → logprob: -4.729050159454346
    7. ' if' → logprob: -6.604050159454346
    8. ' or' → logprob: -6.729050159454346
    9. ',' → logprob: -7.729050159454346
    10. 'で' → logprob: -7.979050159454346

Token 749: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002099773846566677
    2. ' if' → logprob: -9.00020980834961
    3. '            
' → logprob: -10.87520980834961
    4. '               ' → logprob: -11.00020980834961
    5. '       ' → logprob: -11.37520980834961
    6. ',' → logprob: -11.50020980834961
    7. '		' → logprob: -11.87520980834961
    8. '	       ' → logprob: -12.25020980834961
    9. '   ' → logprob: -12.87520980834961
    10. '          ' → logprob: -13.12520980834961

Token 750: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07491365075111389
    2. ' if' → logprob: -2.824913740158081
    3. 'if' (adapté à ' if') → logprob: -4.449913501739502
    4. '       ' → logprob: -7.199913501739502
    5. '               ' → logprob: -8.07491397857666
    6. '   ' → logprob: -10.19991397857666
    7. '		' → logprob: -10.69991397857666
    8. '          ' → logprob: -11.69991397857666
    9. '	       ' → logprob: -11.69991397857666
    10. '```' → logprob: -11.69991397857666

Token 751: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01416398212313652
    2. ' dist' → logprob: -4.264163970947266
    3. '	dist' → logprob: -15.139163970947266
    4. '   ' → logprob: -16.014163970947266
    5. '(dist' → logprob: -16.639163970947266
    6. ' ' → logprob: -18.764163970947266
    7. '_dist' → logprob: -19.264163970947266
    8. 'd' → logprob: -19.389163970947266
    9. 'Dist' → logprob: -19.639163970947266
    10. '  ' → logprob: -19.639163970947266

Token 752: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.988221684878226e-06
    2. 'n' → logprob: -12.000006675720215
    3. '[' → logprob: -15.125006675720215
    4. '[next' → logprob: -15.250006675720215
    5. '[node' → logprob: -16.25000762939453
    6. '	n' → logprob: -17.00000762939453
    7. '```' → logprob: -17.37500762939453
    8. ' [' → logprob: -17.62500762939453
    9. '(n' → logprob: -17.87500762939453
    10. '<n' → logprob: -18.62500762939453

Token 753: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.02646389976143837
    2. '[n' → logprob: -3.6514639854431152
    3. '[next' → logprob: -9.776463508605957
    4. '[node' → logprob: -10.526463508605957
    5. 'x' → logprob: -10.776463508605957
    6. '[' → logprob: -11.151463508605957
    7. ' nxt' → logprob: -11.276463508605957
    8. 'ext' → logprob: -11.526463508605957
    9. '[x' → logprob: -11.526463508605957
    10. 'n' → logprob: -12.026463508605957

Token 754: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06367357820272446
    2. ' ==' → logprob: -2.813673496246338
    3. ']==' → logprob: -6.813673496246338
    4. ']' → logprob: -8.188673973083496
    5. '!=' → logprob: -8.313673973083496
    6. ' !=' → logprob: -10.063673973083496
    7. '>' → logprob: -11.188673973083496
    8. ')' → logprob: -11.313673973083496
    9. ')==' → logprob: -12.313673973083496
    10. '```' → logprob: -13.188673973083496

Token 755: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42923131585121155
    2. ' ==' → logprob: -1.0542312860488892
    3. '!=' → logprob: -8.304231643676758
    4. ' !=' → logprob: -8.304231643676758
    5. '>' → logprob: -10.929231643676758
    6. '```' → logprob: -12.429231643676758
    7. ' >' → logprob: -12.804231643676758
    8. ' ' → logprob: -12.929231643676758
    9. '0' → logprob: -12.929231643676758
    10. '=' → logprob: -13.179231643676758

Token 756: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '   ' → logprob: -19.00004005432129
    4. '۰' → logprob: -19.25004005432129
    5. '```' → logprob: -19.37504005432129
    6. '1' → logprob: -20.12504005432129
    7. '０' → logprob: -20.12504005432129
    8. '  ' → logprob: -21.25004005432129
    9. '<|end|>' → logprob: -21.25004005432129
    10. '	' → logprob: -21.31254005432129

Token 757: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۰' → logprob: -18.125
    4. '```' → logprob: -18.75
    5. '1' → logprob: -18.875
    6. '０' → logprob: -19.0
    7. ' ' → logprob: -19.125
    8. '=' → logprob: -19.875
    9. '<|end|>' → logprob: -20.0
    10. '  ' → logprob: -20.4375

Token 758: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5403726696968079
    2. '               ' → logprob: -1.290372610092163
    3. ':' → logprob: -2.165372610092163
    4. '           ' → logprob: -3.790372610092163
    5. ' or' → logprob: -5.790372848510742
    6. 'continue' → logprob: -6.790372848510742
    7. ' continue' → logprob: -7.540372848510742
    8. '       ' → logprob: -9.290372848510742
    9. '   ' → logprob: -9.665372848510742
    10. '	continue' → logprob: -10.415372848510742

Token 759: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012744840234518051
    2. '           ' → logprob: -5.012744903564453
    3. 'continue' → logprob: -5.762744903564453
    4. ' continue' → logprob: -5.887744903564453
    5. '	continue' → logprob: -10.637744903564453
    6. '	           ' → logprob: -10.762744903564453
    7. ':' → logprob: -11.762744903564453
    8. ':
' → logprob: -11.762744903564453
    9. '	       ' → logprob: -11.887744903564453
    10. '   ' → logprob: -12.012744903564453

Token 760: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.16533982753753662
    2. ' continue' → logprob: -1.9153398275375366
    3. '               ' → logprob: -5.415339946746826
    4. '           ' → logprob: -7.415339946746826
    5. '	continue' → logprob: -9.915339469909668
    6. '   ' → logprob: -13.290339469909668
    7. '                   ' → logprob: -14.290339469909668
    8. '_continue' → logprob: -14.415339469909668
    9. '       ' → logprob: -15.040339469909668
    10. 'Continue' → logprob: -16.540340423583984

Token 761: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03028077818453312
    2. 'new' → logprob: -4.155280590057373
    3. ' new' → logprob: -4.530280590057373
    4. 'next' → logprob: -6.405280590057373
    5. ' next' → logprob: -7.530280590057373
    6. '
' → logprob: -8.155281066894531
    7. 'tent' → logprob: -8.905281066894531
    8. 'nd' → logprob: -9.155281066894531
    9. ' nd' → logprob: -9.280281066894531
    10. '            
' → logprob: -9.405281066894531

Token 762: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024637170135974884
    2. 'new' → logprob: -4.649637222290039
    3. ' new' → logprob: -5.024637222290039
    4. '
' → logprob: -5.524637222290039
    5. 'next' → logprob: -6.649637222290039
    6. ',' → logprob: -7.274637222290039
    7. '            
' → logprob: -7.399637222290039
    8. ' next' → logprob: -7.899637222290039
    9. 'tent' → logprob: -8.024637222290039
    10. 'cost' → logprob: -8.774637222290039

Token 763: ' �' (ID: 9203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.408117413520813
    2. 'continue' → logprob: -1.158117413520813
    3. ' continue' → logprob: -4.158117294311523
    4. '       ' → logprob: -5.533117294311523
    5. '   ' → logprob: -7.533117294311523
    6. '               ' → logprob: -8.033117294311523
    7. '#' → logprob: -8.033117294311523
    8. 'next' → logprob: -9.408117294311523
    9. '```' → logprob: -10.158117294311523
    10. '
' → logprob: -10.408117294311523

Token 764: '�' (ID: 122)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7905978560447693
    2. '           ' → logprob: -1.540597915649414
    3. 'continue' → logprob: -1.915597915649414
    4. '#' → logprob: -2.790597915649414
    5. '   ' → logprob: -3.040597915649414
    6. 'n' → logprob: -3.290597915649414
    7. '続' → logprob: -4.290597915649414
    8. ' continue' → logprob: -4.790597915649414
    9. '続きを' → logprob: -5.665597915649414
    10. '```' → logprob: -6.165597915649414

Token 765: 'ン' (ID: 4025)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3544212877750397
    2. '       ' → logprob: -2.229421377182007
    3. '#' → logprob: -2.854421377182007
    4. '
' → logprob: -2.979421377182007
    5. '   ' → logprob: -2.979421377182007
    6. 'continue' → logprob: -3.854421377182007
    7. '               ' → logprob: -5.854421138763428
    8. ' ' → logprob: -6.479421138763428
    9. 'n' → logprob: -6.854421138763428
    10. '```' → logprob: -7.104421138763428

Token 766: 'ビ' (ID: 24935)
  Prédit: 'ビ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ビ' → logprob: -6.194110756041482e-05
    2. 'ン' → logprob: -10.750061988830566
    3. 'ピ' → logprob: -11.500061988830566
    4. 'キ' → logprob: -11.750061988830566
    5. 'ビー' → logprob: -12.125061988830566
    6. 'び' → logprob: -12.625061988830566
    7. 'bi' → logprob: -13.000061988830566
    8. 'ゾ' → logprob: -13.250061988830566
    9. '비' → logprob: -13.375061988830566
    10. '```' → logprob: -13.625061988830566

Token 767: '支' (ID: 18904)
  Prédit: '支'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '支' → logprob: -0.00016623330884613097
    2. '   ' → logprob: -10.250165939331055
    3. '       ' → logprob: -10.250165939331055
    4. '```' → logprob: -11.000165939331055
    5. 's' → logprob: -11.500165939331055
    6. ' 支' → logprob: -11.625165939331055
    7. '町' → logprob: -11.875165939331055
    8. '           ' → logprob: -11.875165939331055
    9. 'の' → logprob: -12.500165939331055
    10. '#' → logprob: -12.750165939331055

Token 768: '配' (ID: 23246)
  Prédit: '配'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '配' → logprob: -2.451116051815916e-05
    2. '支' → logprob: -11.125024795532227
    3. '��' → logprob: -12.750024795532227
    4. '�' → logprob: -12.875024795532227
    5. '```' → logprob: -13.750024795532227
    6. '#' → logprob: -14.125024795532227
    7. '援' → logprob: -14.500024795532227
    8. '``' → logprob: -15.375024795532227
    9. '障' → logprob: -15.375024795532227
    10. '���' → logprob: -15.500024795532227

Token 769: '町' (ID: 92479)
  Prédit: '町'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '町' → logprob: -0.004028533585369587
    2. 'town' → logprob: -5.6290283203125
    3. ' town' → logprob: -9.0040283203125
    4. 'の' → logprob: -9.0040283203125
    5. '#' → logprob: -9.7540283203125
    6. ' towns' → logprob: -10.3790283203125
    7. '```' → logprob: -10.8790283203125
    8. '街' → logprob: -11.6290283203125
    9. '者' → logprob: -11.6290283203125
    10. 'な' → logprob: -12.1290283203125

Token 770: 'は' (ID: 5205)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0056278700940310955
    2. '               ' → logprob: -6.255627632141113
    3. '       ' → logprob: -6.505627632141113
    4. ')' → logprob: -7.255627632141113
    5. '   ' → logprob: -7.755627632141113
    6. '<|end|>' → logprob: -8.130627632141113
    7. '            
' → logprob: -8.505627632141113
    8. ',' → logprob: -9.005627632141113
    9. '          ' → logprob: -9.255627632141113
    10. ' if' → logprob: -10.255627632141113

Token 771: '通' (ID: 9034)
  Prédit: '通'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '通' → logprob: -0.030007457360625267
    2. 'continue' → logprob: -3.6550073623657227
    3. 'pass' → logprob: -5.655007362365723
    4. 'skip' → logprob: -9.655007362365723
    5. '   ' → logprob: -9.905007362365723
    6. ' 通' → logprob: -11.030007362365723
    7. '続' → logprob: -11.155007362365723
    8. '訪' → logprob: -11.155007362365723
    9. ' continue' → logprob: -11.530007362365723
    10. ' pass' → logprob: -11.905007362365723

Token 772: 'り' (ID: 7297)
  Prédit: 'れ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.014589113183319569
    2. 'ら' → logprob: -4.264589309692383
    3. '行' → logprob: -8.139589309692383
    4. 'る' → logprob: -9.639589309692383
    5. '```' → logprob: -10.014589309692383
    6. 'せ' → logprob: -11.389589309692383
    7. 'さ' → logprob: -12.514589309692383
    8. 'え' → logprob: -13.264589309692383
    9. '``' → logprob: -13.764589309692383
    10. 'ろ' → logprob: -14.139589309692383

Token 773: '抜' (ID: 135956)
  Prédit: '抜'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '抜' → logprob: -0.09910240769386292
    2. '禁止' → logprob: -2.97410249710083
    3. 'な' → logprob: -3.84910249710083
    4. '禁' → logprob: -4.34910249710083
    5. '不可' → logprob: -5.72410249710083
    6. 'れ' → logprob: -6.34910249710083
    7. '止' → logprob: -6.72410249710083
    8. '```' → logprob: -7.34910249710083
    9. 'ない' → logprob: -7.84910249710083
    10. '無' → logprob: -8.224102020263672

Token 774: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.0005704291397705674
    2. 'れ' → logprob: -8.125570297241211
    3. 'か' → logprob: -8.625570297241211
    4. 'ない' → logprob: -10.250570297241211
    5. '```' → logprob: -10.250570297241211
    6. 'でき' → logprob: -12.375570297241211
    7. 'る' → logprob: -12.375570297241211
    8. 'な' → logprob: -12.625570297241211
    9. 'に' → logprob: -12.750570297241211
    10. '``' → logprob: -13.375570297241211

Token 775: '禁止' (ID: 65341)
  Prédit: 'でき'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'でき' → logprob: -1.0482298135757446
    2. 'け' → logprob: -1.2982298135757446
    3. 'れ' → logprob: -1.4232298135757446
    4. 'ら' → logprob: -2.923229694366455
    5. 'ない' → logprob: -3.298229694366455
    6. '禁止' → logprob: -3.673229694366455
    7. '不可' → logprob: -4.798229694366455
    8. 'る' → logprob: -5.673229694366455
    9. 'え' → logprob: -6.423229694366455
    10. 'な' → logprob: -6.798229694366455

Token 776: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011728443205356598
    2. '            
' → logprob: -7.50117301940918
    3. '
' → logprob: -8.25117301940918
    4. ',' → logprob: -9.75117301940918
    5. 'next' → logprob: -9.75117301940918
    6. ' if' → logprob: -10.00117301940918
    7. 'if' → logprob: -10.00117301940918
    8. ' next' → logprob: -10.37617301940918
    9. '               ' → logprob: -10.75117301940918
    10. '       ' → logprob: -10.75117301940918

Token 777: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08260399103164673
    2. ' new' → logprob: -2.707603931427002
    3. 'new' → logprob: -4.957603931427002
    4. ' next' → logprob: -6.207603931427002
    5. '```' → logprob: -6.957603931427002
    6. 'next' → logprob: -7.332603931427002
    7. ' nd' → logprob: -7.707603931427002
    8. '               ' → logprob: -8.33260440826416
    9. ' cost' → logprob: -8.83260440826416
    10. '            
' → logprob: -8.95760440826416

Token 778: ' nd' (ID: 5914)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04124287888407707
    2. 'next' → logprob: -3.791242837905884
    3. 'n' → logprob: -5.291243076324463
    4. ' new' → logprob: -5.416243076324463
    5. 'nd' (adapté à ' nd') → logprob: -5.541243076324463
    6. '           ' → logprob: -6.041243076324463
    7. 'nc' → logprob: -7.291243076324463
    8. ' nd' → logprob: -7.791243076324463
    9. 'total' → logprob: -8.666242599487305
    10. ' next' → logprob: -8.791242599487305

Token 779: ' =' (ID: 314)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.023813704028725624
    2. 'cost' → logprob: -3.7738137245178223
    3. 'c' → logprob: -8.273813247680664
    4. 'ew' → logprob: -9.898813247680664
    5. 'w' → logprob: -10.023813247680664
    6. '_c' → logprob: -10.523813247680664
    7. 'ist' → logprob: -10.523813247680664
    8. '_' → logprob: -10.898813247680664
    9. ' =' → logprob: -10.898813247680664
    10. '=' → logprob: -10.898813247680664

Token 780: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -6.825890159234405e-05
    2. ' cur' → logprob: -10.125068664550781
    3. 'dp' → logprob: -10.500068664550781
    4. 'cost' → logprob: -15.000068664550781
    5. '   ' → logprob: -16.25006866455078
    6. '(cur' → logprob: -17.00006866455078
    7. '	cur' → logprob: -17.12506866455078
    8. 'curr' → logprob: -17.25006866455078
    9. '[cur' → logprob: -17.50006866455078
    10. ' ' → logprob: -17.87506866455078

Token 781: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.5776860184123507e-06
    2. 'cost' → logprob: -13.37500286102295
    3. '_' → logprob: -14.75000286102295
    4. '_dist' → logprob: -15.37500286102295
    5. '_COST' → logprob: -15.62500286102295
    6. ' _' → logprob: -17.000001907348633
    7. '_distance' → logprob: -17.125001907348633
    8. ' cost' → logprob: -17.375001907348633
    9. '[' → logprob: -18.000001907348633
    10. 'ist' → logprob: -18.125001907348633

Token 782: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023246292024850845
    2. '+' → logprob: -3.7732462882995605
    3. '＋' → logprob: -14.023246765136719
    4. ' +
' → logprob: -17.77324676513672
    5. ' ' → logprob: -18.52324676513672
    6. ' ' → logprob: -18.64824676513672
    7. '+n' → logprob: -18.64824676513672
    8. '+c' → logprob: -19.27324676513672
    9. ' plus' → logprob: -19.64824676513672
    10. '+
' → logprob: -20.02324676513672

Token 783: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00020354038861114532
    2. ' cost' → logprob: -8.500203132629395
    3. '(cost' → logprob: -20.25020408630371
    4. '   ' → logprob: -21.87520408630371
    5. 'code' → logprob: -22.00020408630371
    6. ' ' → logprob: -22.75020408630371
    7. 'Cost' → logprob: -23.37520408630371
    8. '_cost' → logprob: -23.87520408630371
    9. '.cost' → logprob: -24.12520408630371
    10. 'c' → logprob: -24.25020408630371

Token 784: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.750000953674316
    3. '[next' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.625
    5. 'n' → logprob: -18.0
    6. '```' → logprob: -18.5
    7. '(n' → logprob: -19.125
    8. '[node' → logprob: -19.375
    9. '\[' → logprob: -19.75
    10. '	n' → logprob: -20.0

Token 785: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0013338132994249463
    2. '[n' → logprob: -7.001333713531494
    3. '[x' → logprob: -8.251334190368652
    4. '[' → logprob: -9.376334190368652
    5. '[t' → logprob: -10.126334190368652
    6. 'x' → logprob: -10.626334190368652
    7. '```' → logprob: -12.376334190368652
    8. '[next' → logprob: -12.626334190368652
    9. '[
' → logprob: -13.626334190368652
    10. ' [' → logprob: -14.126334190368652

Token 786: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.5935477018356323
    2. ']' → logprob: -1.0935477018356323
    3. '])' → logprob: -2.468547821044922
    4. ')' → logprob: -3.593547821044922
    5. ']+' → logprob: -9.218547821044922
    6. '[next' → logprob: -9.343547821044922
    7. '）' → logprob: -9.593547821044922
    8. '[' → logprob: -10.468547821044922
    9. ' )' → logprob: -10.968547821044922
    10. ' ]' → logprob: -11.218547821044922

Token 787: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07218659669160843
    2. '
' → logprob: -3.6971867084503174
    3. '<|end|>' → logprob: -3.8221867084503174
    4. 'heap' → logprob: -5.072186470031738
    5. '       ' → logprob: -5.572186470031738
    6. '(heap' → logprob: -5.697186470031738
    7. ' heap' → logprob: -5.947186470031738
    8. '               ' → logprob: -6.822186470031738
    9. '<|end|>' → logprob: -7.197186470031738
    10. ',' → logprob: -7.197186470031738

Token 788: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003096785396337509
    2. ' if' → logprob: -6.003096580505371
    3. 'if' → logprob: -7.878096580505371
    4. '       ' → logprob: -9.128096580505371
    5. '		' → logprob: -9.378096580505371
    6. '               ' → logprob: -10.753096580505371
    7. ',' → logprob: -11.753096580505371
    8. ')' → logprob: -12.503096580505371
    9. '          ' → logprob: -12.503096580505371
    10. '	       ' → logprob: -12.753096580505371

Token 789: ' �' (ID: 31654)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 790: '�' (ID: 119)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2676373720169067
    2. ' nd' → logprob: -1.2676373720169067
    3. '<|end|>' → logprob: -2.642637252807617
    4. 'n' → logprob: -2.767637252807617
    5. '=' → logprob: -2.892637252807617
    6. '  ' → logprob: -3.142637252807617
    7. ')' → logprob: -3.517637252807617
    8. 'nd' → logprob: -3.642637252807617
    9. ' cost' → logprob: -4.392637252807617
    10. ' next' → logprob: -4.392637252807617

Token 791: '動' (ID: 24009)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04074914753437042
    2. 'n' → logprob: -4.5407490730285645
    3. '+' → logprob: -5.1657490730285645
    4. 'd' → logprob: -5.6657490730285645
    5. ' =' → logprob: -5.6657490730285645
    6. 'nd' → logprob: -6.1657490730285645
    7. ')' → logprob: -6.2907490730285645
    8. ' nd' → logprob: -6.2907490730285645
    9. '  ' → logprob: -7.1657490730285645
    10. '   ' → logprob: -7.1657490730285645

Token 792: '先' (ID: 12231)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.1250585317611694
    2. '+' → logprob: -1.5000585317611694
    3. ')' → logprob: -1.8750585317611694
    4. '_cost' → logprob: -2.000058650970459
    5. 'cost' → logprob: -3.000058650970459
    6. '[n' → logprob: -3.625058650970459
    7. '<|end|>' → logprob: -4.250058650970459
    8. '           ' → logprob: -4.625058650970459
    9. ' cost' → logprob: -4.625058650970459
    10. '=' → logprob: -4.750058650970459

Token 793: 'で' (ID: 4344)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5989471673965454
    2. '<|end|>' → logprob: -1.2239471673965454
    3. ' +' → logprob: -2.723947048187256
    4. '+' → logprob: -3.098947048187256
    5. '<|end|>' → logprob: -3.848947048187256
    6. ',' → logprob: -5.223947048187256
    7. ' )' → logprob: -5.598947048187256
    8. ')+' → logprob: -6.098947048187256
    9. '),' → logprob: -6.098947048187256
    10. ']' → logprob: -6.598947048187256

Token 794: 'の' (ID: 3385)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.506611704826355
    2. 'cost' → logprob: -1.131611704826355
    3. '+' → logprob: -3.0066118240356445
    4. ' +=' → logprob: -5.3816118240356445
    5. ' nd' → logprob: -5.6316118240356445
    6. ' +' → logprob: -5.6316118240356445
    7. 'n' → logprob: -5.7566118240356445
    8. '+=' → logprob: -6.6316118240356445
    9. ' n' → logprob: -6.7566118240356445
    10. ')' → logprob: -6.8816118240356445

Token 795: '宿' (ID: 62310)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.4400768280029297
    2. 'cost' → logprob: -1.1900768280029297
    3. ' nd' → logprob: -3.6900768280029297
    4. 'nd' → logprob: -4.31507682800293
    5. '+' → logprob: -5.69007682800293
    6. '```' → logprob: -6.56507682800293
    7. ' next' → logprob: -6.81507682800293
    8. ' ' → logprob: -6.94007682800293
    9. ')' → logprob: -6.94007682800293
    10. ' +' → logprob: -7.19007682800293

Token 796: '泊' (ID: 123420)
  Prédit: '泊'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '泊' → logprob: -5.931863051955588e-05
    2. '           ' → logprob: -10.625059127807617
    3. '代' → logprob: -10.625059127807617
    4. '   ' → logprob: -12.625059127807617
    5. '\xe8\xb3' → logprob: -12.750059127807617
    6. '```' → logprob: -13.875059127807617
    7. '費' → logprob: -14.125059127807617
    8. ' \xe6\xb3' → logprob: -14.500059127807617
    9. '       ' → logprob: -15.000059127807617
    10. '               ' → logprob: -15.125059127807617

Token 797: '費' (ID: 33778)
  Prédit: '費'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '費' → logprob: -0.006611756980419159
    2. '代' → logprob: -5.7566118240356445
    3. '料金' → logprob: -6.6316118240356445
    4. '料' → logprob: -6.7566118240356445
    5. 'cost' → logprob: -7.5066118240356445
    6. '+' → logprob: -9.381611824035645
    7. 'fee' → logprob: -9.756611824035645
    8. '```' → logprob: -10.006611824035645
    9. '_fee' → logprob: -10.131611824035645
    10. '_cost' → logprob: -10.631611824035645

Token 798: '加' (ID: 9116)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03442586213350296
    2. ')' → logprob: -4.659425735473633
    3. ' if' → logprob: -5.159425735473633
    4. '               ' → logprob: -5.284425735473633
    5. '<|end|>' → logprob: -5.284425735473633
    6. '       ' → logprob: -5.409425735473633
    7. '   ' → logprob: -7.409425735473633
    8. '          ' → logprob: -7.534425735473633
    9. 'if' → logprob: -7.909425735473633
    10. 'heap' → logprob: -8.034425735473633

Token 799: '算' (ID: 16727)
  Prédit: '算'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '算' → logprob: -8.220573363360018e-05
    2. 'える' → logprob: -9.625082015991211
    3. 'え' → logprob: -13.125082015991211
    4. 'cost' → logprob: -13.375082015991211
    5. '点' → logprob: -13.500082015991211
    6. 'd' → logprob: -13.625082015991211
    7. 'nd' → logprob: -13.750082015991211
    8. '��' → logprob: -14.000082015991211
    9. '加' → logprob: -14.125082015991211
    10. '   ' → logprob: -14.250082015991211

Token 800: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01478938851505518
    2. '       ' → logprob: -5.389789581298828
    3. ' if' → logprob: -5.764789581298828
    4. '               ' → logprob: -5.889789581298828
    5. '<|end|>' → logprob: -6.389789581298828
    6. ')' → logprob: -6.514789581298828
    7. '   ' → logprob: -8.639789581298828
    8. 'if' → logprob: -8.889789581298828
    9. '
' → logprob: -9.014789581298828
    10. ',' → logprob: -9.139789581298828

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016789797693490982
    2. '               ' → logprob: -5.51678991317749
    3. ' if' → logprob: -5.64178991317749
    4. 'if' → logprob: -5.89178991317749
    5. ')' → logprob: -6.14178991317749
    6. '       ' → logprob: -6.26678991317749
    7. '```' → logprob: -8.016789436340332
    8. '            
' → logprob: -8.141789436340332
    9. '<|end|>' → logprob: -8.141789436340332
    10. ')
' → logprob: -8.391789436340332

Token 802: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1741107553243637
    2. ' if' → logprob: -1.924110770225525
    3. '           ' → logprob: -4.2991108894348145
    4. '               ' → logprob: -8.924110412597656
    5. '       ' → logprob: -10.424110412597656
    6. '	if' → logprob: -10.799110412597656
    7. '   ' → logprob: -11.799110412597656
    8. '```' → logprob: -12.174110412597656
    9. 'heap' → logprob: -12.674110412597656
    10. '            
' → logprob: -12.924110412597656

Token 803: ' dp' (ID: 21546)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.04616004228591919
    2. ' dp' → logprob: -3.2961599826812744
    3. 'dp' → logprob: -5.2961602210998535
    4. 'nd' → logprob: -5.7961602210998535
    5. '(nd' → logprob: -11.046159744262695
    6. '	dp' → logprob: -12.046159744262695
    7. '(dp' → logprob: -12.171159744262695
    8. '   ' → logprob: -12.671159744262695
    9. '_nd' → logprob: -13.671159744262695
    10. ' ' → logprob: -13.921159744262695

Token 804: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.636475493200123e-05
    2. '[node' → logprob: -9.500076293945312
    3. 'n' → logprob: -13.875076293945312
    4. '[' → logprob: -15.375076293945312
    5. '[next' → logprob: -15.500076293945312
    6. '<n' → logprob: -16.875076293945312
    7. '	n' → logprob: -17.500076293945312
    8. '[
' → logprob: -18.500076293945312
    9. '[[' → logprob: -18.750076293945312
    10. '```' → logprob: -18.750076293945312

Token 805: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -3.35706390615087e-05
    2. '[n' → logprob: -10.500033378601074
    3. '[' → logprob: -13.125033378601074
    4. 'ext' → logprob: -13.875033378601074
    5. '[x' → logprob: -13.875033378601074
    6. 'x' → logprob: -14.375033378601074
    7. '[next' → logprob: -14.625033378601074
    8. '[node' → logprob: -15.375033378601074
    9. ' nxt' → logprob: -15.500033378601074
    10. '   ' → logprob: -15.625033378601074

Token 806: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.054500666621607e-06
    2. '[next' → logprob: -14.25000286102295
    3. '][' → logprob: -14.50000286102295
    4. ']' → logprob: -14.62500286102295
    5. '[' → logprob: -14.87500286102295
    6. '   ' → logprob: -15.00000286102295
    7. '[node' → logprob: -15.00000286102295
    8. ' [' → logprob: -16.000003814697266
    9. '>' → logprob: -16.750003814697266
    10. 'n' → logprob: -16.750003814697266

Token 807: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08598289638757706
    2. ' >' → logprob: -3.0859827995300293
    3. '[cur' → logprob: -3.3359827995300293
    4. '[' → logprob: -6.835982799530029
    5. '[n' → logprob: -10.585983276367188
    6. '>[' → logprob: -11.585983276367188
    7. '[next' → logprob: -11.835983276367188
    8. '＞' → logprob: -13.335983276367188
    9. '[curr' → logprob: -13.335983276367188
    10. '   ' → logprob: -13.460983276367188

Token 808: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.16022726893424988
    2. ' nd' → logprob: -1.9102272987365723
    3. '(nd' → logprob: -13.285226821899414
    4. '_nd' → logprob: -14.410226821899414
    5. 'ng' → logprob: -15.285226821899414
    6. 'nt' → logprob: -15.660226821899414
    7. '.nd' → logprob: -16.160226821899414
    8. '   ' → logprob: -16.160226821899414
    9. 'ndl' → logprob: -16.785226821899414
    10. 'n' → logprob: -17.035226821899414

Token 809: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28438812494277954
    2. ':' → logprob: -1.6593880653381348
    3. '):
' → logprob: -3.7843880653381348
    4. '               ' → logprob: -4.284388065338135
    5. '<|end|>' → logprob: -4.909388065338135
    6. '           ' → logprob: -5.034388065338135
    7. '[' → logprob: -6.409388065338135
    8. ')' → logprob: -7.159388065338135
    9. '<|end|>' → logprob: -7.284388065338135
    10. '=' → logprob: -7.409388065338135

Token 810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005429527256637812
    2. ' dp' → logprob: -5.380429744720459
    3. 'dp' → logprob: -7.255429744720459
    4. '(dp' → logprob: -10.8804292678833
    5. '
' → logprob: -11.1304292678833
    6. '                   ' → logprob: -11.3804292678833
    7. '[' → logprob: -11.5054292678833
    8. '```' → logprob: -11.5054292678833
    9. '           ' → logprob: -11.8804292678833
    10. ':
' → logprob: -12.0054292678833

Token 811: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.16030657291412354
    2. ' dp' → logprob: -1.9103065729141235
    3. '               ' → logprob: -9.785306930541992
    4. '                   ' → logprob: -11.035306930541992
    5. 'heap' → logprob: -11.785306930541992
    6. '	dp' → logprob: -13.785306930541992
    7. ' heap' → logprob: -14.785306930541992
    8. '```' → logprob: -15.035306930541992
    9. '_dp' → logprob: -15.410306930541992
    10. '(dp' → logprob: -15.535306930541992

Token 812: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.282920129597187e-05
    2. 'n' → logprob: -11.750012397766113
    3. '[' → logprob: -13.375012397766113
    4. '[next' → logprob: -13.625012397766113
    5. '[node' → logprob: -14.250012397766113
    6. '```' → logprob: -14.500012397766113
    7. '	n' → logprob: -15.000012397766113
    8. '   ' → logprob: -16.12501335144043
    9. '_n' → logprob: -16.25001335144043
    10. ' [' → logprob: -17.00001335144043

Token 813: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.03323642909526825
    2. 'x' → logprob: -4.033236503601074
    3. 'n' → logprob: -4.408236503601074
    4. '[n' → logprob: -6.158236503601074
    5. 'nx' → logprob: -9.033236503601074
    6. 'xn' → logprob: -9.283236503601074
    7. '```' → logprob: -9.533236503601074
    8. 'st' → logprob: -9.658236503601074
    9. '   ' → logprob: -9.658236503601074
    10. '[next' → logprob: -10.283236503601074

Token 814: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2493923157453537
    2. '=' → logprob: -1.9993922710418701
    3. ']' → logprob: -2.49939227104187
    4. ']=' → logprob: -5.874392509460449
    5. ')' → logprob: -8.24939250946045
    6. '<|end|>' → logprob: -10.24939250946045
    7. ',' → logprob: -10.62439250946045
    8. ' ]' → logprob: -11.74939250946045
    9. ')=' → logprob: -11.74939250946045
    10. '[' → logprob: -11.99939250946045

Token 815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '＝' → logprob: -14.068148612976074
    4. '.=' → logprob: -16.193147659301758
    5. '[' → logprob: -17.818147659301758
    6. '=
' → logprob: -17.818147659301758
    7. '=n' → logprob: -18.568147659301758
    8. '=

' → logprob: -19.443147659301758
    9. '=node' → logprob: -19.693147659301758
    10. ')' → logprob: -19.693147659301758

Token 816: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.029750604182481766
    2. ' nd' → logprob: -3.5297505855560303
    3. '_nd' → logprob: -16.52975082397461
    4. '(nd' → logprob: -16.90475082397461
    5. 'ng' → logprob: -18.90475082397461
    6. '.nd' → logprob: -19.15475082397461
    7. 'ndl' → logprob: -19.65475082397461
    8. 'nt' → logprob: -20.02975082397461
    9. 'Nd' → logprob: -20.77975082397461
    10. 'nds' → logprob: -21.15475082397461

Token 817: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018458699923940003
    2. '			' → logprob: -9.000185012817383
    3. 'heap' → logprob: -10.625185012817383
    4. ' heap' → logprob: -10.750185012817383
    5. '(heap' → logprob: -11.875185012817383
    6. '		       ' → logprob: -13.125185012817383
    7. '<|end|>' → logprob: -13.500185012817383
    8. '	           ' → logprob: -13.750185012817383
    9. '              ' → logprob: -14.000185012817383
    10. ',' → logprob: -14.500185012817383

Token 818: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11842823028564453
    2. 'heap' → logprob: -2.6184282302856445
    3. ' heap' → logprob: -3.4934282302856445
    4. '(heap' → logprob: -5.1184282302856445
    5. '			' → logprob: -7.2434282302856445
    6. '                
' → logprob: -7.4934282302856445
    7. '                   ' → logprob: -8.368428230285645
    8. ' he' → logprob: -8.618428230285645
    9. '```' → logprob: -9.368428230285645
    10. '                ' → logprob: -9.368428230285645

Token 819: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -3.7697225252486533e-06
    2. ' heap' → logprob: -12.500003814697266
    3. 'he' → logprob: -20.875003814697266
    4. '(heap' → logprob: -22.375003814697266
    5. '               ' → logprob: -22.500003814697266
    6. '           ' → logprob: -23.500003814697266
    7. '```' → logprob: -24.000003814697266
    8. 'heat' → logprob: -24.125003814697266
    9. '.heap' → logprob: -24.250003814697266
    10. '   ' → logprob: -24.375003814697266

Token 820: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0002398938377154991
    2. 'push' → logprob: -9.000240325927734
    3. 'he' → logprob: -9.250240325927734
    4. '.he' → logprob: -11.875240325927734
    5. '```' → logprob: -12.250240325927734
    6. 'app' → logprob: -12.500240325927734
    7. 'p' → logprob: -13.125240325927734
    8. 'ush' → logprob: -13.875240325927734
    9. 'h' → logprob: -13.875240325927734
    10. ' he' → logprob: -15.000240325927734

Token 821: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0015046248445287347
    2. 'he' → logprob: -6.501504421234131
    3. 'push' → logprob: -13.876504898071289
    4. '.heap' → logprob: -15.001504898071289
    5. '.push' → logprob: -15.251504898071289
    6. '.' → logprob: -15.376504898071289
    7. 'heap' → logprob: -15.626504898071289
    8. 'ush' → logprob: -15.876504898071289
    9. '_he' → logprob: -16.50150489807129
    10. '```' → logprob: -16.62650489807129

Token 822: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0027588685043156147
    2. 'pp' → logprob: -6.002758979797363
    3. 'push' → logprob: -8.752758979797363
    4. 'ush' → logprob: -9.002758979797363
    5. 'p' → logprob: -13.752758979797363
    6. 'he' → logprob: -14.752758979797363
    7. '```' → logprob: -15.752758979797363
    8. 'ap' → logprob: -15.752758979797363
    9. 'q' → logprob: -16.002758026123047
    10. 'appen' → logprob: -16.752758026123047

Token 823: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0009345670696347952
    2. 'push' → logprob: -7.000934600830078
    3. 'app' → logprob: -10.875934600830078
    4. 'pp' → logprob: -12.875934600830078
    5. 'op' → logprob: -14.000934600830078
    6. 'p' → logprob: -15.500934600830078
    7. '.push' → logprob: -15.750934600830078
    8. '```' → logprob: -16.375934600830078
    9. '_push' → logprob: -16.375934600830078
    10. 'sh' → logprob: -16.625934600830078

Token 824: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.625000953674316
    3. ' (' → logprob: -15.250000953674316
    4. 'heap' → logprob: -15.375000953674316
    5. ' heap' → logprob: -17.750001907348633
    6. '```' → logprob: -17.875001907348633
    7. '.heap' → logprob: -19.625001907348633
    8. '(h' → logprob: -19.875001907348633
    9. '(queue' → logprob: -19.875001907348633
    10. '(deck' → logprob: -20.250001907348633

Token 825: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.750001907348633
    3. ',' → logprob: -15.125001907348633
    4. ' (' → logprob: -15.750001907348633
    5. 'heap' → logprob: -16.250001907348633
    6. '```' → logprob: -17.000001907348633
    7. '(queue' → logprob: -17.625001907348633
    8. ' heap' → logprob: -18.250001907348633
    9. '(h' → logprob: -18.250001907348633
    10. '((' → logprob: -19.125001907348633

Token 826: ' (' (ID: 350)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.8082640767097473
    2. ' (' → logprob: -1.3082640171051025
    3. '(nd' → logprob: -1.3082640171051025
    4. '(' → logprob: -4.433264255523682
    5. '(n' → logprob: -6.308264255523682
    6. '(dp' → logprob: -10.683263778686523
    7. '(nx' → logprob: -11.058263778686523
    8. '(h' → logprob: -11.058263778686523
    9. '   ' → logprob: -11.308263778686523
    10. 'heap' → logprob: -11.808263778686523

Token 827: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0007275633979588747
    2. '(nd' → logprob: -7.750727653503418
    3. ' nd' → logprob: -8.125727653503418
    4. '(' → logprob: -14.500727653503418
    5. ' (' → logprob: -15.500727653503418
    6. '   ' → logprob: -15.750727653503418
    7. '_nd' → logprob: -16.8757266998291
    8. '(n' → logprob: -18.3757266998291
    9. 'nds' → logprob: -18.7507266998291
    10. 'ndl' → logprob: -18.7507266998291

Token 828: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.804671233519912e-05
    2. ',n' → logprob: -9.50008773803711
    3. ' ,' → logprob: -11.37508773803711
    4. '(n' → logprob: -14.37508773803711
    5. ',
' → logprob: -15.00008773803711
    6. 'n' → logprob: -15.00008773803711
    7. '[n' → logprob: -15.12508773803711
    8. '   ' → logprob: -17.00008773803711
    9. '，' → logprob: -17.00008773803711
    10. '```' → logprob: -17.12508773803711

Token 829: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00017970333283301443
    2. ' nxt' → logprob: -8.625179290771484
    3. '	n' → logprob: -17.375179290771484
    4. '   ' → logprob: -17.375179290771484
    5. '```' → logprob: -17.625179290771484
    6. 'nx' → logprob: -17.625179290771484
    7. '[n' → logprob: -18.000179290771484
    8. ')n' → logprob: -18.625179290771484
    9. '(n' → logprob: -19.000179290771484
    10. 'next' → logprob: -19.125179290771484

Token 830: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -3.214019307051785e-05
    2. ')' → logprob: -11.125032424926758
    3. '))
' → logprob: -11.250032424926758
    4. ' ))' → logprob: -12.625032424926758
    5. ',n' → logprob: -15.250032424926758
    6. ')))' → logprob: -15.375032424926758
    7. ')n' → logprob: -16.125032424926758
    8. 'n' → logprob: -16.250032424926758
    9. '[n' → logprob: -16.375032424926758
    10. '(n' → logprob: -16.500032424926758

Token 831: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1256716251373291
    2. 'main' → logprob: -2.250671625137329
    3. '```' → logprob: -5.12567138671875
    4. '
' → logprob: -5.62567138671875
    5. '(main' → logprob: -7.12567138671875
    6. '<|end|>' → logprob: -7.12567138671875
    7. '  
' → logprob: -7.37567138671875
    8. '``' → logprob: -7.87567138671875
    9. '    
' → logprob: -8.25067138671875
    10. ' if' → logprob: -9.62567138671875

Token 832: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.001929228543303907
    2. '__' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.62692928314209
    4. ' _' → logprob: -16.626928329467773
    5. '_' → logprob: -17.126928329467773
    6. '___' → logprob: -17.126928329467773
    7. '_name' → logprob: -18.126928329467773
    8. ' ___' → logprob: -18.126928329467773
    9. ' ' → logprob: -18.751928329467773
    10. '(__' → logprob: -18.876928329467773

Token 833: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0022412508260458708
    2. '==' → logprob: -6.377241134643555
    3. ' ==' → logprob: -8.127241134643555
    4. '```' → logprob: -9.752241134643555
    5. 'if' → logprob: -9.877241134643555
    6. '=="' → logprob: -10.377241134643555
    7. 'name' → logprob: -10.627241134643555
    8. '()==' → logprob: -11.127241134643555
    9. ' __' → logprob: -11.252241134643555
    10. '(__' → logprob: -11.627241134643555

Token 834: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015020023565739393
    2. '==' → logprob: -7.37650203704834
    3. '```' → logprob: -7.50150203704834
    4. '__.__' → logprob: -9.12650203704834
    5. '=="' → logprob: -9.37650203704834
    6. ' ==' → logprob: -10.25150203704834
    7. '__('' → logprob: -11.00150203704834
    8. '__":
' → logprob: -11.37650203704834
    9. '__["' → logprob: -11.50150203704834
    10. '__("' → logprob: -11.75150203704834

Token 835: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7508381009101868
    2. '__' → logprob: -1.125838041305542
    3. ' ==' → logprob: -2.125838041305542
    4. '=="' → logprob: -2.500838041305542
    5. '=='' → logprob: -6.125838279724121
    6. '```' → logprob: -10.250838279724121
    7. '==
' → logprob: -11.125838279724121
    8. '__.__' → logprob: -11.250838279724121
    9. '()==' → logprob: -11.625838279724121
    10. '=' → logprob: -12.000838279724121

Token 836: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011062555946409702
    2. ''' → logprob: -4.5110626220703125
    3. '__' → logprob: -11.636062622070312
    4. ' "__' → logprob: -12.136062622070312
    5. ' '__' → logprob: -16.136062622070312
    6. '"user' → logprob: -16.386062622070312
    7. '("__' → logprob: -16.511062622070312
    8. '"name' → logprob: -16.761062622070312
    9. ''"' → logprob: -17.261062622070312
    10. '"class' → logprob: -18.011062622070312

Token 837: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.584239938296378e-06
    2. '__' → logprob: -12.000007629394531
    3. 'name' → logprob: -14.250007629394531
    4. '"' → logprob: -15.375007629394531
    5. ''' → logprob: -15.375007629394531
    6. '_main' → logprob: -15.625007629394531
    7. ' main' → logprob: -16.00000762939453
    8. 'built' → logprob: -18.62500762939453
    9. '(main' → logprob: -19.12500762939453
    10. '	main' → logprob: -19.25000762939453

Token 838: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.00208126287907362
    2. '__' → logprob: -6.752081394195557
    3. '__':
' → logprob: -7.002081394195557
    4. '__.' → logprob: -15.502080917358398
    5. '__()
' → logprob: -15.877080917358398
    6. '__["' → logprob: -16.0020809173584
    7. '():
' → logprob: -16.7520809173584
    8. '```' → logprob: -17.0020809173584
    9. '__("' → logprob: -17.2520809173584
    10. '__.__' → logprob: -17.2520809173584

Token 839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22309881448745728
    2. 'main' → logprob: -1.8480987548828125
    3. '	main' → logprob: -3.3480987548828125
    4. ' main' → logprob: -4.9730987548828125
    5. '_main' → logprob: -9.098098754882812
    6. '(main' → logprob: -9.473098754882812
    7. '    
' → logprob: -9.723098754882812
    8. '   ' → logprob: -10.473098754882812
    9. '<|end|>' → logprob: -11.098098754882812
    10. '```' → logprob: -11.723098754882812

Token 840: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '	main' → logprob: -18.5
    4. '   ' → logprob: -19.5
    5. '(main' → logprob: -22.125
    6. '_main' → logprob: -22.875
    7. '.main' → logprob: -23.375
    8. 'Main' → logprob: -26.5
    9. 'mainwindow' → logprob: -26.625
    10. '/main' → logprob: -26.75

Token 841: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 839
Tokens correctement prédits (1ère position, stricte): 307
Tokens correctement prédits (1ère position, avec adaptation): 334
Tokens correctement prédits (top 10): 606
Précision stricte (1ère position): 36.59%
Précision adaptée (1ère position): 39.81%
Précision (top 10): 72.23%
================================================================================
