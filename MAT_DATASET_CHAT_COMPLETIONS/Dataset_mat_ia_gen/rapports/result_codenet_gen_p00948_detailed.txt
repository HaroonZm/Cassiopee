================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

class UnionFind:
    """
    Structure de données Union-Find pour gérer des ensembles disjoints.
    Permet de regrouper des indices de lignes de convoyeurs qui sont connectées
    via des bras robotiques. Chaque ensemble représente un groupe de lignes
    entre lesquelles les marchandises peuvent être échangées.
    """
    def __init__(self, n):
        # Initialisation avec chaque élément dans son propre ensemble
        self.parent = list(range(n))
        self.size = [1] * n  # Taille de chaque ensemble

    def find(self, a):
        # Trouve le représentant (parent) de l'ensemble contenant 'a',
        # avec compression de chemin pour accélérer les futures recherches
        while self.parent[a] != a:
            self.parent[a] = self.parent[self.parent[a]]
            a = self.parent[a]
        return a

    def union(self, a, b):
        # Fusionne les ensembles contenant 'a' et 'b'
        a = self.find(a)
        b = self.find(b)
        if a != b:
            # On attache le plus petit arbre au plus grand pour équilibrer
            if self.size[a] < self.size[b]:
                a, b = b, a
            self.parent[b] = a
            self.size[a] += self.size[b]

def main():
    # Lecture des entrées
    n, m = map(int, sys.stdin.readline().split())
    arms = []
    for _ in range(m):
        x, y = map(int, sys.stdin.readline().split())
        # On note y-1 car on veut des indices 0-based pour nos structures
        arms.append((x, y-1))

    # On doit relier les lignes adjacentes connectées via un bras robotique
    # Peu importe la position x car le robot permet un passage entre ces lignes.
    # On peut donc simplement faire l'union des indices y_i et y_i+1
    uf = UnionFind(n)

    for x, y in arms:
        # Relie les lignes y et y+1
        uf.union(y, y+1)

    # Pour chaque ligne, on cherche la taille de son ensemble,
    # c'est-à-dire combien de lignes sont connectées
    result = [0] * n
    for i in range(n):
        root = uf.find(i)
        result[i] = uf.size[root]

    # Affichage du résultat
    print(' '.join(map(str, result)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.8087270038668066e-05
    2. ' .' → logprob: -11.625027656555176
    3. '.import' → logprob: -12.500027656555176
    4. '.readline' → logprob: -13.125027656555176
    5. '.user' → logprob: -13.375027656555176
    6. '.`' → logprob: -13.875027656555176
    7. '.stdout' → logprob: -14.000027656555176
    8. '[' → logprob: -14.000027656555176
    9. '."""' → logprob: -14.125027656555176
    10. '.exit' → logprob: -14.250027656555176

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.4866597652435303
    2. 'limit' → logprob: -0.9866597652435303
    3. '_depth' → logprob: -4.486660003662109
    4. 'depth' → logprob: -7.486660003662109
    5. '_' → logprob: -8.36166000366211
    6. '_rate' → logprob: -9.98666000366211
    7. 'lim' → logprob: -10.23666000366211
    8. '(' → logprob: -10.36166000366211
    9. '_factor' → logprob: -10.36166000366211
    10. '_stack' → logprob: -10.61166000366211

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1602897197008133
    2. '100' → logprob: -1.9102897644042969
    3. '300' → logprob: -10.910289764404297
    4. ' ' → logprob: -11.035289764404297
    5. '500' → logprob: -11.285289764404297
    6. '150' → logprob: -12.160289764404297
    7. '999' → logprob: -12.660289764404297
    8. '1' → logprob: -12.785289764404297
    9. '200' → logprob: -12.910289764404297
    10. '   ' → logprob: -13.285289764404297

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17638421058654785
    2. '000' → logprob: -2.176384210586548
    3. '00' → logprob: -3.051384210586548
    4. '4' → logprob: -7.301383972167969
    5. '6' → logprob: -8.676383972167969
    6. '**' → logprob: -9.801383972167969
    7. '2' → logprob: -11.051383972167969
    8. '5' → logprob: -11.426383972167969
    9. '3' → logprob: -11.801383972167969
    10. '```' → logprob: -11.801383972167969

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' Union' (ID: 14746)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3335287868976593
    2. ' Node' → logprob: -2.083528757095337
    3. ' My' → logprob: -2.958528757095337
    4. ' Trie' → logprob: -3.208528757095337
    5. ' Recursive' → logprob: -4.208528995513916
    6. ' Exception' → logprob: -4.333528995513916
    7. ' Tree' → logprob: -4.833528995513916
    8. ' Factor' → logprob: -4.958528995513916
    9. ' Binary' → logprob: -5.458528995513916
    10. ' Solution' → logprob: -5.458528995513916

Token 15: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.00416969507932663
    2. '[' → logprob: -6.254169464111328
    3. ':' → logprob: -6.754169464111328
    4. '[int' → logprob: -8.129169464111328
    5. ' Find' → logprob: -8.504169464111328
    6. '_Find' → logprob: -8.504169464111328
    7. '-F' → logprob: -9.629169464111328
    8. '[str' → logprob: -9.754169464111328
    9. 'Finder' → logprob: -9.879169464111328
    10. '```' → logprob: -10.129169464111328

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003908250015228987
    2. '():' → logprob: -5.628908157348633
    3. '(' → logprob: -8.378908157348633
    4. ':
' → logprob: -10.878908157348633
    5. '):' → logprob: -11.128908157348633
    6. ' :' → logprob: -11.503908157348633
    7. '(object' → logprob: -12.003908157348633
    8. '```' → logprob: -12.003908157348633
    9. '[' → logprob: -12.503908157348633
    10. ':**' → logprob: -12.878908157348633

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06121479347348213
    2. '():' → logprob: -3.5612146854400635
    3. '   ' → logprob: -4.061214923858643
    4. '```' → logprob: -4.811214923858643
    5. ':
' → logprob: -6.061214923858643
    6. '(' → logprob: -6.561214923858643
    7. '(object' → logprob: -6.936214923858643
    8. '()' → logprob: -8.561214447021484
    9. '    
' → logprob: -9.436214447021484
    10. '():
' → logprob: -9.436214447021484

Token 18: ' """
' (ID: 7037)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5863667726516724
    2. ' def' → logprob: -0.8363667726516724
    3. '   ' → logprob: -4.586366653442383
    4. '	def' → logprob: -9.461366653442383
    5. 'class' → logprob: -9.461366653442383
    6. '    ' → logprob: -11.836366653442383
    7. 'de' → logprob: -11.961366653442383
    8. '```' → logprob: -12.711366653442383
    9. ' __' → logprob: -12.836366653442383
    10. '__' → logprob: -13.086366653442383

Token 19: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.4189269542694092
    2. 'Dis' → logprob: -2.168926954269409
    3. ' Dis' → logprob: -3.043926954269409
    4. 'Data' → logprob: -3.293926954269409
    5. ' Union' → logprob: -3.668926954269409
    6. ' """' → logprob: -3.918926954269409
    7. 'Union' → logprob: -3.918926954269409
    8. '   ' → logprob: -4.168927192687988
    9. ' A' → logprob: -4.293927192687988
    10. 'This' → logprob: -4.793927192687988

Token 20: ' Structure' (ID: 52074)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5819685459136963
    2. 'Dis' → logprob: -1.4569685459136963
    3. 'Union' → logprob: -2.2069685459136963
    4. 'Data' → logprob: -2.5819685459136963
    5. 'Weighted' → logprob: -4.456968307495117
    6. ' Union' → logprob: -6.331968307495117
    7. 'An' → logprob: -6.581968307495117
    8. ' Dis' → logprob: -6.706968307495117
    9. 'デ' → logprob: -6.956968307495117
    10. 'union' → logprob: -7.206968307495117

Token 21: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9382489323616028
    2. ' for' → logprob: -1.188248872756958
    3. ' to' → logprob: -1.313248872756958
    4. ' that' → logprob: -4.563249111175537
    5. ' of' → logprob: -4.688249111175537
    6. ':' → logprob: -5.063249111175537
    7. ' designed' → logprob: -6.438249111175537
    8. 'class' → logprob: -6.563249111175537
    9. ':
' → logprob: -7.188249111175537
    10. ' class' → logprob: -7.438249111175537

Token 22: ' données' (ID: 30580)
  Prédit: ' données'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' données' → logprob: -0.18616019189357758
    2. 'd' → logprob: -2.436160087585449
    3. ' donnée' → logprob: -2.686160087585449
    4. 'don' → logprob: -5.436160087585449
    5. ' d' → logprob: -6.061160087585449
    6. ' donné' → logprob: -7.061160087585449
    7. ' data' → logprob: -7.061160087585449
    8. '   ' → logprob: -7.061160087585449
    9. ' l' → logprob: -7.186160087585449
    10. ' don' → logprob: -7.561160087585449

Token 23: ' Union' (ID: 14746)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.47655463218688965
    2. '   ' → logprob: -1.8515546321868896
    3. 'dis' → logprob: -2.7265546321868896
    4. ' pour' → logprob: -2.9765546321868896
    5. ' dis' → logprob: -3.2265546321868896
    6. ' permettant' → logprob: -3.3515546321868896
    7. 'de' → logprob: -4.601554870605469
    8. '```' → logprob: -4.726554870605469
    9. ' utilisée' → logprob: -6.351554870605469
    10. 'union' → logprob: -6.601554870605469

Token 24: '-F' (ID: 8074)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.20230549573898315
    2. '-F' → logprob: -1.702305555343628
    3. ' Find' → logprob: -7.077305316925049
    4. '   ' → logprob: -10.827305793762207
    5. '-' → logprob: -11.452305793762207
    6. '-find' → logprob: -11.827305793762207
    7. '_Find' → logprob: -12.577305793762207
    8. 'find' → logprob: -13.827305793762207
    9. ' ' → logprob: -13.952305793762207
    10. '  ' → logprob: -14.327305793762207

Token 25: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -6.153795766294934e-06
    2. 'nd' → logprob: -12.625005722045898
    3. '```' → logprob: -13.625005722045898
    4. '[ind' → logprob: -15.250005722045898
    5. '(ind' → logprob: -15.500005722045898
    6. 'in' → logprob: -15.625005722045898
    7. 'Find' → logprob: -15.750005722045898
    8. 'Ind' → logprob: -15.750005722045898
    9. '`' → logprob: -16.6250057220459
    10. 'i' → logprob: -16.6250057220459

Token 26: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.139036163687706
    2. ' (' → logprob: -2.889036178588867
    3. '    ' → logprob: -3.889036178588867
    4. '```' → logprob: -4.389036178588867
    5. '  ' → logprob: -4.764036178588867
    6. ',' → logprob: -5.014036178588867
    7. '"""' → logprob: -5.139036178588867
    8. '
' → logprob: -5.264036178588867
    9. ':' → logprob: -5.764036178588867
    10. '"""
' → logprob: -6.389036178588867

Token 27: ' gérer' (ID: 86786)
  Prédit: ' gérer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.12826205790042877
    2. ' la' → logprob: -2.3782620429992676
    3. '   ' → logprob: -4.128262042999268
    4. ' les' → logprob: -5.878262042999268
    5. 'la' → logprob: -6.628262042999268
    6. ' l' → logprob: -6.753262042999268
    7. ' le' → logprob: -7.003262042999268
    8. ' gestion' → logprob: -7.003262042999268
    9. ' g' → logprob: -7.003262042999268
    10. 'les' → logprob: -7.253262042999268

Token 28: ' des' (ID: 731)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6035417914390564
    2. ' l' → logprob: -1.6035418510437012
    3. ' la' → logprob: -1.7285418510437012
    4. 'les' → logprob: -3.228541851043701
    5. 'l' → logprob: -4.103541851043701
    6. ' des' → logprob: -4.853541851043701
    7. 'la' → logprob: -5.478541851043701
    8. ' efficacement' → logprob: -6.103541851043701
    9. '   ' → logprob: -7.103541851043701
    10. 's' → logprob: -7.353541851043701

Token 29: ' ensembles' (ID: 144172)
  Prédit: ' ensembles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensembles' → logprob: -0.09461373090744019
    2. 'ense' → logprob: -4.344613552093506
    3. 'conn' → logprob: -4.719613552093506
    4. ' partitions' → logprob: -4.969613552093506
    5. 'élé' → logprob: -5.094613552093506
    6. '   ' → logprob: -5.094613552093506
    7. 'com' → logprob: -5.094613552093506
    8. ' groupes' → logprob: -5.219613552093506
    9. ' éléments' → logprob: -5.344613552093506
    10. ' ' → logprob: -5.719613552093506

Token 30: ' dis' (ID: 829)
  Prédit: ' dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dis' → logprob: -0.20179659128189087
    2. 'dis' → logprob: -1.701796531677246
    3. '   ' → logprob: -8.076796531677246
    4. 'd' → logprob: -10.826796531677246
    5. ' ' → logprob: -11.326796531677246
    6. ' d' → logprob: -11.576796531677246
    7. '(dis' → logprob: -12.201796531677246
    8. '  ' → logprob: -12.701796531677246
    9. '_dis' → logprob: -12.826796531677246
    10. 'Dis' → logprob: -13.201796531677246

Token 31: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0027180914767086506
    2. '   ' → logprob: -6.502717971801758
    3. '```' → logprob: -8.127717971801758
    4. '-j' → logprob: -9.377717971801758
    5. '  ' → logprob: -9.377717971801758
    6. 'jo' → logprob: -9.502717971801758
    7. '

' → logprob: -10.002717971801758
    8. '     ' → logprob: -10.002717971801758
    9. '-' → logprob: -10.127717971801758
    10. '       ' → logprob: -10.252717971801758

Token 32: 'oints' (ID: 28687)
  Prédit: 'oints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oints' → logprob: -0.000643095700070262
    2. 'oint' → logprob: -7.750643253326416
    3. 'o' → logprob: -8.500642776489258
    4. 'onts' → logprob: -12.750642776489258
    5. 'unts' → logprob: -13.500642776489258
    6. 'on' → logprob: -14.625642776489258
    7. 'j' → logprob: -14.750642776489258
    8. '**' → logprob: -15.000642776489258
    9. '-' → logprob: -15.000642776489258
    10. 'oin' → logprob: -15.125642776489258

Token 33: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.22835427522659302
    2. '   ' → logprob: -1.9783542156219482
    3. '.
' → logprob: -4.228354454040527
    4. '"""' → logprob: -4.228354454040527
    5. '
' → logprob: -4.603354454040527
    6. ',' → logprob: -4.728354454040527
    7. '."""' → logprob: -5.103354454040527
    8. '```' → logprob: -5.603354454040527
    9. '"""
' → logprob: -6.853354454040527
    10. '\n' → logprob: -7.103354454040527

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7966429591178894
    2. '
' → logprob: -1.0466430187225342
    3. '"""' → logprob: -2.421643018722534
    4. '```' → logprob: -2.796643018722534
    5. '    
' → logprob: -4.046642780303955
    6. '"""
' → logprob: -4.171642780303955
    7. '\n' → logprob: -5.171642780303955
    8. '  
' → logprob: -5.796642780303955
    9. 'class' → logprob: -6.296642780303955
    10. ' 
' → logprob: -6.671642780303955

Token 35: ' Perm' (ID: 20550)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3445233702659607
    2. '   ' → logprob: -1.7195234298706055
    3. '"""
' → logprob: -2.9695234298706055
    4. '
' → logprob: -3.4695234298706055
    5. '```' → logprob: -4.0945234298706055
    6. '\n' → logprob: -5.8445234298706055
    7. '    
' → logprob: -6.0945234298706055
    8. 'class' → logprob: -6.2195234298706055
    9. ' """' → logprob: -6.3445234298706055
    10. ' """
' → logprob: -6.8445234298706055

Token 36: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.003999684471637011
    2. 'ett' → logprob: -5.628999710083008
    3. 'ets' → logprob: -8.503999710083008
    4. 'e' → logprob: -8.753999710083008
    5. '
' → logprob: -11.378999710083008
    6. 'ret' → logprob: -12.253999710083008
    7. 'ert' → logprob: -12.378999710083008
    8. '

' → logprob: -13.003999710083008
    9. 't' → logprob: -13.753999710083008
    10. 'etto' → logprob: -13.753999710083008

Token 37: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0691438913345337
    2. 'd' → logprob: -1.4441438913345337
    3. 'de' → logprob: -1.5691438913345337
    4. ' de' → logprob: -1.6941438913345337
    5. '   ' → logprob: -4.444143772125244
    6. 't' → logprob: -5.194143772125244
    7. 'l' → logprob: -5.694143772125244
    8. 'la' → logprob: -6.694143772125244
    9. 'tre' → logprob: -6.694143772125244
    10. ' ' → logprob: -6.944143772125244

Token 38: ' reg' (ID: 1324)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.3035966157913208
    2. ' trouver' → logprob: -3.1785964965820312
    3. 'faire' → logprob: -3.6785964965820312
    4. 'fusion' → logprob: -3.8035964965820312
    5. 'union' → logprob: -4.303596496582031
    6. 'rap' → logprob: -4.303596496582031
    7. 'effect' → logprob: -4.303596496582031
    8. ' retrouver' → logprob: -4.428596496582031
    9. 'perform' → logprob: -4.428596496582031
    10. ' effectuer' → logprob: -4.428596496582031

Token 39: 'rou' (ID: 691)
  Prédit: 'rou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.0030630340334028006
    2. 'roup' → logprob: -5.878063201904297
    3. 'arder' → logprob: -8.753063201904297
    4. 'érer' → logprob: -10.003063201904297
    5. 'roupe' → logprob: -10.753063201904297
    6. 'r' → logprob: -11.753063201904297
    7. 'ro' → logprob: -12.378063201904297
    8. 'ou' → logprob: -12.503063201904297
    9. 'roger' → logprob: -12.503063201904297
    10. 'istrar' → logprob: -13.128063201904297

Token 40: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.02209186553955078
    2. 'er' → logprob: -4.272091865539551
    3. 'ler' → logprob: -6.147091865539551
    4. 'o' → logprob: -6.147091865539551
    5. 'rou' → logprob: -7.647091865539551
    6. 'ro' → logprob: -7.647091865539551
    7. 'ner' → logprob: -7.897091865539551
    8. 'oper' → logprob: -8.02209186553955
    9. '   ' → logprob: -8.27209186553955
    10. '\' → logprob: -8.39709186553955

Token 41: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.02701461873948574
    2. ' les' → logprob: -3.90201473236084
    3. ' et' → logprob: -6.15201473236084
    4. ' ' → logprob: -6.52701473236084
    5. 'des' → logprob: -6.90201473236084
    6. 's' → logprob: -7.90201473236084
    7. ' plusieurs' → logprob: -8.27701473236084
    8. ' deux' → logprob: -8.40201473236084
    9. ' plus' → logprob: -8.52701473236084
    10. 'les' → logprob: -8.77701473236084

Token 42: ' indices' (ID: 30378)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.3619612753391266
    2. ' éléments' → logprob: -1.7369612455368042
    3. ' des' → logprob: -2.8619613647460938
    4. 's' → logprob: -3.4869613647460938
    5. ' elements' → logprob: -4.736961364746094
    6. ' ensembles' → logprob: -4.861961364746094
    7. 'ense' → logprob: -5.236961364746094
    8. 'des' → logprob: -5.736961364746094
    9. '   ' → logprob: -6.111961364746094
    10. 'elements' → logprob: -6.236961364746094

Token 43: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1776909977197647
    2. ' et' → logprob: -2.4276909828186035
    3. ' par' → logprob: -3.4276909828186035
    4. ',' → logprob: -4.0526909828186035
    5. 's' → logprob: -4.8026909828186035
    6. 'en' → logprob: -5.3026909828186035
    7. ' de' → logprob: -6.0526909828186035
    8. '   ' → logprob: -6.9276909828186035
    9. ' ,' → logprob: -6.9276909828186035
    10. 'et' → logprob: -7.0526909828186035

Token 44: ' lignes' (ID: 81687)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.2772478759288788
    2. ' listes' → logprob: -2.777247905731201
    3. ' éléments' → logprob: -3.027247905731201
    4. 's' → logprob: -3.277247905731201
    5. ' lignes' → logprob: -4.652247905731201
    6. ' liste' → logprob: -4.902247905731201
    7. ' elements' → logprob: -5.152247905731201
    8. 'liste' → logprob: -5.402247905731201
    9. ' tableaux' → logprob: -5.402247905731201
    10. 'list' → logprob: -5.402247905731201

Token 45: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.19518491625785828
    2. ' et' → logprob: -2.8201849460601807
    3. 's' → logprob: -3.5701849460601807
    4. ',' → logprob: -4.070184707641602
    5. ' ou' → logprob: -4.320184707641602
    6. ' dans' → logprob: -4.445184707641602
    7. ' par' → logprob: -4.820184707641602
    8. '   ' → logprob: -5.195184707641602
    9. 'et' → logprob: -5.320184707641602
    10. ' de' → logprob: -5.695184707641602

Token 46: ' convoy' (ID: 185048)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3414357900619507
    2. ' tableaux' → logprob: -1.4664357900619507
    3. ' code' → logprob: -2.2164359092712402
    4. ' pandas' → logprob: -2.4664359092712402
    5. ' données' → logprob: -2.8414359092712402
    6. ' tableau' → logprob: -3.4664359092712402
    7. ' dataframe' → logprob: -3.4664359092712402
    8. 'table' → logprob: -3.5914359092712402
    9. 'code' → logprob: -3.8414359092712402
    10. 'data' → logprob: -4.46643590927124

Token 47: 'eurs' (ID: 17634)
  Prédit: 'oy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oy' → logprob: -1.3374103307724
    2. 'eurs' → logprob: -1.3374103307724
    3. 'o' → logprob: -2.2124104499816895
    4. 'e' → logprob: -2.3374104499816895
    5. '```' → logprob: -3.3374104499816895
    6. 'ois' → logprob: -3.4624104499816895
    7. 'oys' → logprob: -3.5874104499816895
    8. 'eys' → logprob: -3.7124104499816895
    9. 'oir' → logprob: -3.9624104499816895
    10. '##' → logprob: -4.2749104499816895

Token 48: ' qui' (ID: 2780)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.19181625545024872
    2. '   ' → logprob: -2.1918163299560547
    3. ' et' → logprob: -3.9418163299560547
    4. 'en' → logprob: -4.441816329956055
    5. '.' → logprob: -4.566816329956055
    6. ',' → logprob: -5.191816329956055
    7. ' pour' → logprob: -5.441816329956055
    8. 's' → logprob: -5.816816329956055
    9. '```' → logprob: -6.566816329956055
    10. ' afin' → logprob: -6.816816329956055

Token 49: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5262202620506287
    2. ' appart' → logprob: -1.0262203216552734
    3. ' se' → logprob: -4.026220321655273
    4. ' sont' → logprob: -4.776220321655273
    5. 'se' → logprob: -5.276220321655273
    6. 'part' → logprob: -5.276220321655273
    7. 'app' → logprob: -5.776220321655273
    8. ' part' → logprob: -5.901220321655273
    9. ' font' → logprob: -6.651220321655273
    10. 'ont' → logprob: -7.151220321655273

Token 50: ' connect' (ID: 4837)
  Prédit: ' connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connect' → logprob: -0.7639123201370239
    2. 'connect' → logprob: -0.7639123201370239
    3. 'dans' → logprob: -3.3889122009277344
    4. 'conn' → logprob: -4.138912200927734
    5. ' dans' → logprob: -4.638912200927734
    6. ' reli' → logprob: -6.138912200927734
    7. 'direct' → logprob: -7.138912200927734
    8. ' liés' → logprob: -7.513912200927734
    9. 'adj' → logprob: -7.513912200927734
    10. ' directement' → logprob: -7.638912200927734

Token 51: 'ées' (ID: 5161)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0027367589063942432
    2. 'ées' → logprob: -6.377736568450928
    3. 'é' → logprob: -6.877736568450928
    4. 'ée' → logprob: -13.627737045288086
    5. '```' → logprob: -13.752737045288086
    6. 'ès' → logprob: -14.627737045288086
    7. 'ÉS' → logprob: -15.502737045288086
    8. 'es' → logprob: -15.502737045288086
    9. 's' → logprob: -16.502737045288086
    10. '' → logprob: -16.627737045288086

Token 52: '
' (ID: 198)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.06808082014322281
    2. ' par' → logprob: -2.9430809020996094
    3. 'entre' → logprob: -5.443080902099609
    4. '.' → logprob: -5.693080902099609
    5. '```' → logprob: -6.318080902099609
    6. ' via' → logprob: -7.193080902099609
    7. ' between' → logprob: -7.693080902099609
    8. '"""' → logprob: -7.943080902099609
    9. ' ensemble' → logprob: -8.31808090209961
    10. 'par' → logprob: -8.44308090209961

Token 53: '   ' (ID: 271)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.37353116273880005
    2. ' par' → logprob: -1.3735311031341553
    3. '.' → logprob: -3.6235311031341553
    4. 'entre' → logprob: -4.873531341552734
    5. '"""
' → logprob: -5.748531341552734
    6. ' via' → logprob: -5.748531341552734
    7. '"""' → logprob: -6.248531341552734
    8. '```' → logprob: -6.248531341552734
    9. ' et' → logprob: -6.373531341552734
    10. ' ensemble' → logprob: -6.623531341552734

Token 54: ' via' (ID: 4493)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.8730100393295288
    2. ' par' → logprob: -1.2480100393295288
    3. '.' → logprob: -1.6230100393295288
    4. '"""
' → logprob: -4.373010158538818
    5. '   ' → logprob: -4.498010158538818
    6. ' et' → logprob: -4.623010158538818
    7. ' en' → logprob: -4.623010158538818
    8. ',' → logprob: -4.998010158538818
    9. '.
' → logprob: -5.123010158538818
    10. 's' → logprob: -5.248010158538818

Token 55: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.27446043491363525
    2. ' un' → logprob: -1.7744604349136353
    3. ' une' → logprob: -3.5244603157043457
    4. 'des' → logprob: -5.024460315704346
    5. ' les' → logprob: -5.274460315704346
    6. ' ' → logprob: -5.399460315704346
    7. ' l' → logprob: -5.524460315704346
    8. 's' → logprob: -5.524460315704346
    9. ' le' → logprob: -5.649460315704346
    10. ' la' → logprob: -6.149460315704346

Token 56: ' bras' (ID: 50089)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -2.4453365802764893
    2. ' convoy' → logprob: -2.5703365802764893
    3. ' liens' → logprob: -2.6953365802764893
    4. ' connex' → logprob: -2.8203365802764893
    5. ' lignes' → logprob: -2.8828365802764893
    6. ' can' → logprob: -2.9453365802764893
    7. ' chemins' → logprob: -2.9453365802764893
    8. 'conn' → logprob: -3.1328365802764893
    9. ' indices' → logprob: -3.3203365802764893
    10. ' conv' → logprob: -3.3828365802764893

Token 57: ' rob' (ID: 8687)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.580346941947937
    2. ' rob' → logprob: -2.0803470611572266
    3. '   ' → logprob: -2.4553470611572266
    4. ' articul' → logprob: -2.7053470611572266
    5. 'de' → logprob: -2.9553470611572266
    6. '.' → logprob: -4.330347061157227
    7. ' pivot' → logprob: -4.580347061157227
    8. '-' → logprob: -4.955347061157227
    9. '.py' → logprob: -5.080347061157227
    10. ' pli' → logprob: -5.205347061157227

Token 58: 'otiques' (ID: 196307)
  Prédit: 'otiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otiques' → logprob: -0.6326875686645508
    2. 'ots' → logprob: -0.8826875686645508
    3. 'ot' → logprob: -3.507687568664551
    4. 'otes' → logprob: -5.007687568664551
    5. 'otics' → logprob: -5.382687568664551
    6. '```' → logprob: -5.882687568664551
    7. 'o' → logprob: -6.070187568664551
    8. 'otic' → logprob: -6.882687568664551
    9. 'ost' → logprob: -7.570187568664551
    10. '
' → logprob: -7.695187568664551

Token 59: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7438901662826538
    2. '   ' → logprob: -0.8688901662826538
    3. '.
' → logprob: -2.9938902854919434
    4. ',' → logprob: -4.243890285491943
    5. ' .' → logprob: -4.743890285491943
    6. 's' → logprob: -5.743890285491943
    7. ' et' → logprob: -5.868890285491943
    8. '"""
' → logprob: -5.993890285491943
    9. ' en' → logprob: -6.243890285491943
    10. 'connect' → logprob: -6.243890285491943

Token 60: ' Chaque' (ID: 94758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3360925614833832
    2. '"""' → logprob: -1.4610925912857056
    3. '
' → logprob: -3.586092472076416
    4. '"""
' → logprob: -4.461092472076416
    5. '\n' → logprob: -5.336092472076416
    6. '```' → logprob: -5.836092472076416
    7. '""' → logprob: -5.836092472076416
    8. '"' → logprob: -7.336092472076416
    9. '    ' → logprob: -7.336092472076416
    10. '    
' → logprob: -7.586092472076416

Token 61: ' ensemble' (ID: 33081)
  Prédit: ' convoy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convoy' → logprob: -1.2109613418579102
    2. ' conv' → logprob: -1.5859613418579102
    3. 'ensemble' → logprob: -2.08596134185791
    4. 'conv' → logprob: -2.58596134185791
    5. ' ensemble' → logprob: -3.08596134185791
    6. ' bras' → logprob: -3.21096134185791
    7. 'ligne' → logprob: -3.58596134185791
    8. 'élé' → logprob: -3.58596134185791
    9. '   ' → logprob: -3.71096134185791
    10. 'bras' → logprob: -4.08596134185791

Token 62: ' représente' (ID: 88912)
  Prédit: ' représente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' représente' → logprob: -0.09536618739366531
    2. ' est' → logprob: -3.7203662395477295
    3. ' contient' → logprob: -4.09536600112915
    4. 're' → logprob: -4.72036600112915
    5. ' reg' → logprob: -5.09536600112915
    6. 'cont' → logprob: -5.09536600112915
    7. ' correspond' → logprob: -5.34536600112915
    8. 'd' → logprob: -5.59536600112915
    9. 'reg' → logprob: -5.84536600112915
    10. ' cont' → logprob: -5.97036600112915

Token 63: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.06813416630029678
    2. ' une' → logprob: -3.568134069442749
    3. ' des' → logprob: -3.568134069442749
    4. 'un' → logprob: -4.943134307861328
    5. 'une' → logprob: -7.568134307861328
    6. ' les' → logprob: -7.568134307861328
    7. ' ' → logprob: -8.443134307861328
    8. 's' → logprob: -8.443134307861328
    9. 'des' → logprob: -8.818134307861328
    10. ' a' → logprob: -8.818134307861328

Token 64: ' groupe' (ID: 29494)
  Prédit: ' groupe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' groupe' → logprob: -0.5786293745040894
    2. ' convoy' → logprob: -1.7036293745040894
    3. ' conv' → logprob: -2.828629493713379
    4. ' ensemble' → logprob: -2.953629493713379
    5. 'ensemble' → logprob: -3.328629493713379
    6. ' group' → logprob: -3.703629493713379
    7. 'conv' → logprob: -3.953629493713379
    8. 'g' → logprob: -3.953629493713379
    9. 's' → logprob: -4.953629493713379
    10. 'e' → logprob: -5.203629493713379

Token 65: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.12578904628753662
    2. 'd' → logprob: -2.750789165496826
    3. ' de' → logprob: -3.125789165496826
    4. ' distinct' → logprob: -5.500789165496826
    5. 'de' → logprob: -6.125789165496826
    6. ' ' → logprob: -7.250789165496826
    7. 's' → logprob: -7.625789165496826
    8. 'conn' → logprob: -7.875789165496826
    9. ' des' → logprob: -8.000788688659668
    10. ' connected' → logprob: -8.375788688659668

Token 66: ' lignes' (ID: 81687)
  Prédit: ' convoy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convoy' → logprob: -0.4822920262813568
    2. ' lignes' → logprob: -1.4822920560836792
    3. ' indices' → logprob: -2.3572919368743896
    4. 'conv' → logprob: -4.232292175292969
    5. 'indices' → logprob: -4.482292175292969
    6. ' conveyor' → logprob: -4.732292175292969
    7. 'conn' → logprob: -5.357292175292969
    8. ' conv' → logprob: -5.607292175292969
    9. 'élé' → logprob: -6.482292175292969
    10. ' ' → logprob: -6.544792175292969

Token 67: '
' (ID: 198)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8907635807991028
    2. ' connect' → logprob: -1.265763521194458
    3. 'connect' → logprob: -1.640763521194458
    4. 'conn' → logprob: -3.890763521194458
    5. 'de' → logprob: -4.140763759613037
    6. ' reli' → logprob: -4.640763759613037
    7. ' connected' → logprob: -5.015763759613037
    8. ' liées' → logprob: -5.015763759613037
    9. '_connect' → logprob: -5.140763759613037
    10. '   ' → logprob: -5.140763759613037

Token 68: '   ' (ID: 271)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7693095207214355
    2. 'connect' → logprob: -1.7693095207214355
    3. ' connect' → logprob: -2.1443095207214355
    4. 'de' → logprob: -2.5193095207214355
    5. 'conn' → logprob: -3.2693095207214355
    6. 'conv' → logprob: -3.3943095207214355
    7. '    ' → logprob: -3.8943095207214355
    8. ' adj' → logprob: -4.3943095207214355
    9. '   ' → logprob: -4.6443095207214355
    10. ' qui' → logprob: -4.7693095207214355

Token 69: ' entre' (ID: 3853)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6399195790290833
    2. 'connect' → logprob: -2.1399195194244385
    3. ' connect' → logprob: -2.2649195194244385
    4. 'de' → logprob: -2.7649195194244385
    5. 'conn' → logprob: -2.7649195194244385
    6. 'conv' → logprob: -3.5149195194244385
    7. ' qui' → logprob: -3.7649195194244385
    8. ' ' → logprob: -4.264919757843018
    9. 'adj' → logprob: -4.764919757843018
    10. ' adj' → logprob: -4.764919757843018

Token 70: ' lesquelles' (ID: 116062)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conn' → logprob: -1.665177583694458
    2. 'lac' → logprob: -1.790177583694458
    3. 'connect' → logprob: -2.165177583694458
    4. ' elles' → logprob: -2.165177583694458
    5. 'conv' → logprob: -2.415177583694458
    6. ' lesquelles' → logprob: -2.790177583694458
    7. ' convoy' → logprob: -3.165177583694458
    8. '   ' → logprob: -3.540177583694458
    9. 'des' → logprob: -3.915177583694458
    10. 'elles' → logprob: -3.915177583694458

Token 71: ' les' (ID: 1341)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9277446866035461
    2. ' on' → logprob: -1.4277446269989014
    3. ' il' → logprob: -1.9277446269989014
    4. 'on' → logprob: -3.0527446269989014
    5. ' la' → logprob: -3.1777446269989014
    6. ' ' → logprob: -3.3027446269989014
    7. ' des' → logprob: -3.8027446269989014
    8. ' un' → logprob: -4.0527448654174805
    9. 'une' → logprob: -4.3027448654174805
    10. 'il' → logprob: -5.1777448654174805

Token 72: ' marchand' (ID: 143779)
  Prédit: 'conn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conn' → logprob: -0.6776078343391418
    2. ' connex' → logprob: -1.927607774734497
    3. ' bras' → logprob: -2.177607774734497
    4. 'bras' → logprob: -3.677607774734497
    5. ' convoy' → logprob: -4.177608013153076
    6. ' connections' → logprob: -4.302608013153076
    7. 'conv' → logprob: -4.302608013153076
    8. ' liens' → logprob: -4.552608013153076
    9. 'élé' → logprob: -4.552608013153076
    10. 'connections' → logprob: -4.615108013153076

Token 73: 'ises' (ID: 5555)
  Prédit: 'ises'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ises' → logprob: -0.0023701780010014772
    2. 'and' → logprob: -6.377370357513428
    3. '   ' → logprob: -7.752370357513428
    4. 'is' → logprob: -9.75236988067627
    5. '```' → logprob: -10.12736988067627
    6. 'aises' → logprob: -10.62736988067627
    7. 'ise' → logprob: -11.25236988067627
    8. ' is' → logprob: -11.25236988067627
    9. '  ' → logprob: -11.37736988067627
    10. ' ' → logprob: -11.75236988067627

Token 74: ' peuvent' (ID: 21321)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6422857642173767
    2. ' peuvent' → logprob: -1.5172858238220215
    3. 'pe' → logprob: -1.8922858238220215
    4. ' sont' → logprob: -3.2672858238220215
    5. ' circul' → logprob: -3.5172858238220215
    6. ' transit' → logprob: -4.5172858238220215
    7. '   ' → logprob: -5.3922858238220215
    8. ' ' → logprob: -5.6422858238220215
    9. ' pourront' → logprob: -6.3922858238220215
    10. ' passent' → logprob: -6.3922858238220215

Token 75: ' être' (ID: 9104)
  Prédit: ' circul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circul' → logprob: -0.7379562258720398
    2. ' trans' → logprob: -1.1129562854766846
    3. 'cir' → logprob: -2.7379562854766846
    4. ' se' → logprob: -3.1129562854766846
    5. ' ' → logprob: -3.3629562854766846
    6. 'trans' → logprob: -4.4879560470581055
    7. 's' → logprob: -4.7379560470581055
    8. ' être' → logprob: -4.9879560470581055
    9. ' transit' → logprob: -5.1129560470581055
    10. 'être' → logprob: -5.4879560470581055

Token 76: ' éch' (ID: 74009)
  Prédit: ' éch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' éch' → logprob: -1.2148404121398926
    2. ' transfér' → logprob: -1.4648404121398926
    3. 'trans' → logprob: -1.9648404121398926
    4. ' transport' → logprob: -2.3398404121398926
    5. 'transport' → logprob: -2.5898404121398926
    6. 'éch' → logprob: -2.8398404121398926
    7. ' déplac' → logprob: -3.3398404121398926
    8. ' transit' → logprob: -3.8398404121398926
    9. ' trans' → logprob: -3.8398404121398926
    10. ' ' → logprob: -4.339840412139893

Token 77: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.046796370297670364
    2. 'angé' → logprob: -3.1717963218688965
    3. 'chang' → logprob: -6.1717963218688965
    4. '   ' → logprob: -7.7967963218688965
    5. 'ng' → logprob: -8.796796798706055
    6. 'anger' → logprob: -9.046796798706055
    7. 'anges' → logprob: -9.171796798706055
    8. '```' → logprob: -9.296796798706055
    9. '  ' → logprob: -9.421796798706055
    10. '**' → logprob: -9.671796798706055

Token 78: 'ées' (ID: 5161)
  Prédit: 'ang'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.029360689222812653
    2. 'angé' → logprob: -4.404360771179199
    3. 'ées' → logprob: -5.279360771179199
    4. '   ' → logprob: -5.779360771179199
    5. 'ng' → logprob: -5.904360771179199
    6. 'nées' → logprob: -7.029360771179199
    7. '```' → logprob: -7.404360771179199
    8. 'anges' → logprob: -7.779360771179199
    9. 'érées' → logprob: -7.779360771179199
    10. 'g' → logprob: -7.904360771179199

Token 79: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.051352158188819885
    2. '.
' → logprob: -3.5513522624969482
    3. '   ' → logprob: -4.926352024078369
    4. '."""
' → logprob: -5.926352024078369
    5. '"""
' → logprob: -6.051352024078369
    6. ',' → logprob: -6.301352024078369
    7. '."""' → logprob: -6.301352024078369
    8. '"""' → logprob: -6.801352024078369
    9. 's' → logprob: -7.051352024078369
    10. ' entre' → logprob: -7.551352024078369

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39983758330345154
    2. '"""' → logprob: -1.149837613105774
    3. '"""
' → logprob: -4.649837493896484
    4. '```' → logprob: -6.524837493896484
    5. '""' → logprob: -7.524837493896484
    6. '"' → logprob: -7.524837493896484
    7. ' """' → logprob: -8.524837493896484
    8. '    ' → logprob: -8.774837493896484
    9. '"""

' → logprob: -9.649837493896484
    10. '
' → logprob: -9.649837493896484

Token 81: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.36015352606773376
    2. '   ' → logprob: -1.3601535558700562
    3. '"""
' (adapté à ' """
') → logprob: -3.1101534366607666
    4. '""' → logprob: -7.985153675079346
    5. '```' → logprob: -8.110153198242188
    6. '    ' → logprob: -8.610153198242188
    7. '
' → logprob: -9.110153198242188
    8. '"' → logprob: -9.235153198242188
    9. '"""

' → logprob: -9.860153198242188
    10. ' """' → logprob: -10.110153198242188

Token 82: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4385141134262085
    2. '   ' → logprob: -1.4385141134262085
    3. 'def' → logprob: -2.688514232635498
    4. '    
' → logprob: -3.188514232635498
    5. ' def' → logprob: -4.938514232635498
    6. '\n' → logprob: -7.813514232635498
    7. ' 
' → logprob: -7.813514232635498
    8. '   
' → logprob: -8.56351375579834
    9. '

' → logprob: -9.56351375579834
    10. '```' → logprob: -9.56351375579834

Token 83: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3318893611431122
    2. '   ' → logprob: -1.5818893909454346
    3. ' def' → logprob: -2.9568893909454346
    4. '
' → logprob: -3.8318893909454346
    5. '    
' → logprob: -5.8318891525268555
    6. ' 
' → logprob: -9.456889152526855
    7. '	def' → logprob: -9.581889152526855
    8. '```' → logprob: -10.206889152526855
    9. '    ' → logprob: -11.081889152526855
    10. '   
' → logprob: -11.206889152526855

Token 84: ' __' (ID: 2516)
  Prédit: 'nit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nit' → logprob: -0.10393179208040237
    2. 'n' → logprob: -2.4789319038391113
    3. ' __' → logprob: -5.103931903839111
    4. 'init' → logprob: -5.978931903839111
    5. '__' → logprob: -6.228931903839111
    6. 'ni' → logprob: -6.853931903839111
    7. ' ' → logprob: -7.103931903839111
    8. '_' → logprob: -7.478931903839111
    9. 'def' → logprob: -7.978931903839111
    10. '   ' → logprob: -7.978931903839111

Token 85: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.005261749029159546
    2. 'i' → logprob: -5.2552618980407715
    3. 'ini' → logprob: -11.130261421203613
    4. 'in' → logprob: -11.255261421203613
    5. '_i' → logprob: -16.00526237487793
    6. ' init' → logprob: -16.25526237487793
    7. '_init' → logprob: -16.63026237487793
    8. ' i' → logprob: -17.00526237487793
    9. 'int' → logprob: -18.13026237487793
    10. '`' → logprob: -18.88026237487793

Token 86: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2266865372657776
    2. '__(' → logprob: -1.9766864776611328
    3. '(self' → logprob: -2.976686477661133
    4. '_(' → logprob: -4.851686477661133
    5. ')(' → logprob: -6.101686477661133
    6. ' (' → logprob: -6.476686477661133
    7. '_' → logprob: -6.851686477661133
    8. 'self' → logprob: -9.101686477661133
    9. '__' → logprob: -9.101686477661133
    10. '```' → logprob: -9.226686477661133

Token 87: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023202638840302825
    2. ' self' → logprob: -8.375231742858887
    3. ')' → logprob: -14.500231742858887
    4. ' ' → logprob: -15.250231742858887
    5. '(self' → logprob: -15.250231742858887
    6. '   ' → logprob: -15.875231742858887
    7. 's' → logprob: -17.000232696533203
    8. '0' → logprob: -17.125232696533203
    9. '<|end|>' → logprob: -17.125232696533203
    10. '
' → logprob: -17.250232696533203

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032838289625942707
    2. ' ,' → logprob: -5.753283977508545
    3. ',self' → logprob: -9.878283500671387
    4. 'self' → logprob: -10.003283500671387
    5. ',s' → logprob: -12.878283500671387
    6. ',n' → logprob: -13.003283500671387
    7. ')' → logprob: -13.128283500671387
    8. ' ' → logprob: -14.378283500671387
    9. ',
' → logprob: -14.503283500671387
    10. 's' → logprob: -15.503283500671387

Token 89: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.081163689494133
    2. ' n' → logprob: -2.7061636447906494
    3. 'self' → logprob: -4.7061638832092285
    4. ' self' → logprob: -6.2061638832092285
    5. '   ' → logprob: -9.95616340637207
    6. ' ' → logprob: -10.20616340637207
    7. '	n' → logprob: -11.95616340637207
    8. 'size' → logprob: -12.45616340637207
    9. 'N' → logprob: -12.70616340637207
    10. ')' → logprob: -12.70616340637207

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06221840903162956
    2. ')' → logprob: -2.812218427658081
    3. ':' → logprob: -9.31221866607666
    4. ',' → logprob: -9.43721866607666
    5. ' ):' → logprob: -9.81221866607666
    6. '):
' → logprob: -10.93721866607666
    7. ' )' → logprob: -12.81221866607666
    8. ')n' → logprob: -13.43721866607666
    9. 'n' → logprob: -14.56221866607666
    10. ')：' → logprob: -14.68721866607666

Token 91: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26252999901771545
    2. '       ' → logprob: -1.762529969215393
    3. '):' → logprob: -3.1375300884246826
    4. ')' → logprob: -4.3875298500061035
    5. 'n' → logprob: -7.0125298500061035
    6. 'self' → logprob: -7.2625298500061035
    7. '   ' → logprob: -7.7625298500061035
    8. ',' → logprob: -7.8875298500061035
    9. ' :' → logprob: -8.512530326843262
    10. '<|end|>' → logprob: -8.887530326843262

Token 92: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.23110872507095337
    2. '       ' → logprob: -2.1061086654663086
    3. ' self' → logprob: -2.4811086654663086
    4. '   ' → logprob: -7.106108665466309
    5. ' ' → logprob: -9.856108665466309
    6. '	self' → logprob: -10.606108665466309
    7. 'n' → logprob: -10.731108665466309
    8. 's' → logprob: -10.981108665466309
    9. ' ' → logprob: -11.981108665466309
    10. '    ' → logprob: -11.981108665466309

Token 93: ' Initial' (ID: 9209)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4745151996612549
    2. 'self' → logprob: -0.9745151996612549
    3. '       ' → logprob: -8.224514961242676
    4. ' parent' → logprob: -9.849514961242676
    5. 'parent' → logprob: -10.099514961242676
    6. '   ' → logprob: -10.349514961242676
    7. ' ' → logprob: -11.474514961242676
    8. '	self' → logprob: -11.474514961242676
    9. 'n' → logprob: -12.099514961242676
    10. '    ' → logprob: -12.099514961242676

Token 94: 'isation' (ID: 6993)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.06315566599369049
    2. '=' → logprob: -3.8131556510925293
    3. 'ized' → logprob: -4.688155651092529
    4. '   ' → logprob: -5.438155651092529
    5. 'izer' → logprob: -5.688155651092529
    6. '_' → logprob: -5.813155651092529
    7. 'ization' → logprob: -5.938155651092529
    8. 'e' → logprob: -6.063155651092529
    9. 'i' → logprob: -6.188155651092529
    10. '       ' → logprob: -6.563155651092529

Token 95: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6415337920188904
    2. '(self' → logprob: -1.5165338516235352
    3. '(' → logprob: -1.8915338516235352
    4. ':' → logprob: -3.141533851623535
    5. '   ' → logprob: -4.266533851623535
    6. ',' → logprob: -4.266533851623535
    7. ' self' → logprob: -5.016533851623535
    8. 'self' → logprob: -5.141533851623535
    9. ' :' → logprob: -5.516533851623535
    10. ' (' → logprob: -5.891533851623535

Token 96: ' chaque' (ID: 21194)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6060878038406372
    2. ' n' → logprob: -1.6060878038406372
    3. 'self' → logprob: -1.6060878038406372
    4. 'n' → logprob: -3.3560876846313477
    5. ' [' → logprob: -4.481087684631348
    6. ' ' → logprob: -5.981087684631348
    7. ' un' → logprob: -7.106087684631348
    8. '[n' → logprob: -7.231087684631348
    9. ' parent' → logprob: -7.231087684631348
    10. '[' → logprob: -7.356087684631348

Token 97: ' élément' (ID: 99627)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.09407133609056473
    2. ' élément' → logprob: -2.594071388244629
    3. ' él' → logprob: -5.469071388244629
    4. ' node' → logprob: -5.844071388244629
    5. 'él' → logprob: -6.469071388244629
    6. '_' → logprob: -6.719071388244629
    7. 'element' → logprob: -6.719071388244629
    8. ' ' → logprob: -7.219071388244629
    9. ' element' → logprob: -7.719071388244629
    10. 'node' → logprob: -7.719071388244629

Token 98: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.4597712755203247
    2. 'parent' → logprob: -1.9597712755203247
    3. 'comme' → logprob: -2.709771156311035
    4. ' comme' → logprob: -2.834771156311035
    5. ' dans' → logprob: -2.959771156311035
    6. ' parent' → logprob: -3.709771156311035
    7. 's' → logprob: -4.709771156311035
    8. '_parent' → logprob: -5.959771156311035
    9. ' à' → logprob: -6.459771156311035
    10. ' ' → logprob: -6.834771156311035

Token 99: ' son' (ID: 2391)
  Prédit: ' son'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' son' → logprob: -0.35307082533836365
    2. 'son' → logprob: -1.353070855140686
    3. ' un' → logprob: -4.4780707359313965
    4. 's' → logprob: -4.8530707359313965
    5. ' sa' → logprob: -4.8530707359313965
    6. ' ' → logprob: -5.2280707359313965
    7. ' its' → logprob: -5.9780707359313965
    8. 'l' → logprob: -7.3530707359313965
    9. 'self' → logprob: -7.4780707359313965
    10. '  ' → logprob: -7.8530707359313965

Token 100: ' propre' (ID: 40682)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.1311066597700119
    2. ' propre' → logprob: -2.2561066150665283
    3. '   ' → logprob: -5.256106853485107
    4. 'parent' → logprob: -5.381106853485107
    5. '```' → logprob: -5.881106853485107
    6. ' parent' → logprob: -6.381106853485107
    7. ' ' → logprob: -7.256106853485107
    8. 's' → logprob: -7.631106853485107
    9. '_pro' → logprob: -7.881106853485107
    10. 'self' → logprob: -8.25610637664795

Token 101: ' ensemble' (ID: 33081)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.23643407225608826
    2. '_parent' → logprob: -2.111433982849121
    3. ' parent' → logprob: -2.486433982849121
    4. 'ensemble' → logprob: -6.611433982849121
    5. '-parent' → logprob: -7.361433982849121
    6. '   ' → logprob: -7.486433982849121
    7. 'set' → logprob: -7.486433982849121
    8. '_' → logprob: -7.736433982849121
    9. 'p' → logprob: -7.861433982849121
    10. ',' → logprob: -8.611433982849121

Token 102: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024111082777380943
    2. ',' → logprob: -5.024111270904541
    3. ')' → logprob: -5.149111270904541
    4. ' :' → logprob: -5.274111270904541
    5. '):' → logprob: -5.524111270904541
    6. '       ' → logprob: -6.774111270904541
    7. 'self' → logprob: -8.024110794067383
    8. ':
' → logprob: -8.024110794067383
    9. '<|end|>' → logprob: -9.399110794067383
    10. '
' → logprob: -9.524110794067383

Token 103: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11948765814304352
    2. '       ' → logprob: -2.494487762451172
    3. ')' → logprob: -4.494487762451172
    4. ',' → logprob: -4.744487762451172
    5. '):' → logprob: -5.494487762451172
    6. ' :' → logprob: -5.619487762451172
    7. 'self' → logprob: -7.369487762451172
    8. '   ' → logprob: -7.494487762451172
    9. ':
' → logprob: -7.869487762451172
    10. '<|end|>' → logprob: -8.619487762451172

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.015629801899194717
    2. ' self' → logprob: -4.515629768371582
    3. '       ' → logprob: -5.390629768371582
    4. '   ' → logprob: -12.140629768371582
    5. ')' → logprob: -13.140629768371582
    6. 'n' → logprob: -13.640629768371582
    7. 's' → logprob: -13.890629768371582
    8. '	self' → logprob: -14.015629768371582
    9. '(self' → logprob: -14.265629768371582
    10. ',' → logprob: -15.015629768371582

Token 105: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.03312284126877785
    2. 'parent' → logprob: -4.158123016357422
    3. '.parents' → logprob: -4.908123016357422
    4. '._' → logprob: -6.158123016357422
    5. '.p' → logprob: -6.408123016357422
    6. ' parent' → logprob: -6.658123016357422
    7. '.par' → logprob: -7.033123016357422
    8. '_parent' → logprob: -7.033123016357422
    9. '.' → logprob: -7.158123016357422
    10. ',parent' → logprob: -7.408123016357422

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484697639942169
    2. '=' → logprob: -1.2234697341918945
    3. '[' → logprob: -11.848469734191895
    4. '=[]' → logprob: -12.223469734191895
    5. 's' → logprob: -12.723469734191895
    6. '=[' → logprob: -12.723469734191895
    7. ' =[' → logprob: -13.098469734191895
    8. '[:]' → logprob: -13.598469734191895
    9. ',' → logprob: -14.223469734191895
    10. ' ' → logprob: -14.723469734191895

Token 107: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.018363449722528458
    2. '[list' → logprob: -4.2683634757995605
    3. ' list' → logprob: -5.5183634757995605
    4. '[-' → logprob: -9.393362998962402
    5. '[' → logprob: -9.643362998962402
    6. ' [' → logprob: -10.768362998962402
    7. '[n' → logprob: -12.143362998962402
    8. '[i' → logprob: -13.518362998962402
    9. '=list' → logprob: -14.393362998962402
    10. '[node' → logprob: -14.768362998962402

Token 108: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.4849443838757e-06
    2. 'range' → logprob: -12.500004768371582
    3. '(' → logprob: -14.250004768371582
    4. '	range' → logprob: -18.250003814697266
    5. ' range' → logprob: -18.375003814697266
    6. '([' → logprob: -19.000003814697266
    7. '(r' → logprob: -19.500003814697266
    8. '(
' → logprob: -19.750003814697266
    9. '(i' → logprob: -21.000003814697266
    10. '(rank' → logprob: -21.250003814697266

Token 109: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. 'n' → logprob: -17.37500762939453
    4. ')n' → logprob: -17.37500762939453
    5. '(
' → logprob: -18.12500762939453
    6. ' (' → logprob: -18.62500762939453
    7. ')(' → logprob: -19.50000762939453
    8. ')' → logprob: -20.00000762939453
    9. ',n' → logprob: -21.62500762939453
    10. ' n' → logprob: -21.62500762939453

Token 110: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008598887361586094
    2. '))
' → logprob: -7.12585973739624
    3. ' ))' → logprob: -10.250860214233398
    4. '))

' → logprob: -11.375860214233398
    5. ')' → logprob: -12.375860214233398
    6. '))
' → logprob: -12.875860214233398
    7. ')))' → logprob: -13.875860214233398
    8. ' ))
' → logprob: -15.500860214233398
    9. ' ' → logprob: -15.625860214233398
    10. '()))' → logprob: -16.0008602142334

Token 111: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 112: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14529672265052795
    2. '       ' → logprob: -2.020296812057495
    3. ' self' → logprob: -6.020296573638916
    4. '   ' → logprob: -9.520297050476074
    5. ' ' → logprob: -10.145297050476074
    6. ')' → logprob: -11.145297050476074
    7. '0' → logprob: -11.395297050476074
    8. ',self' → logprob: -11.645297050476074
    9. '	self' → logprob: -11.895297050476074
    10. ',' → logprob: -12.270297050476074

Token 113: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.08638305962085724
    2. '.parent' → logprob: -3.211383104324341
    3. '.' → logprob: -3.586383104324341
    4. '.rank' → logprob: -4.586382865905762
    5. '.s' → logprob: -7.086382865905762
    6. '.self' → logprob: -7.211382865905762
    7. ' .' → logprob: -7.211382865905762
    8. 'size' → logprob: -7.836382865905762
    9. '._' → logprob: -8.211382865905762
    10. '.union' → logprob: -8.586382865905762

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47537386417388916
    2. '=' → logprob: -0.9753738641738892
    3. 's' → logprob: -6.7253737449646
    4. '   ' → logprob: -10.225374221801758
    5. '[' → logprob: -11.475374221801758
    6. '[:]' → logprob: -11.475374221801758
    7. '<|end|>' → logprob: -11.975374221801758
    8. '  ' → logprob: -12.100374221801758
    9. ')' → logprob: -12.100374221801758
    10. '=[]' → logprob: -12.350374221801758

Token 115: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31378716230392456
    2. ' [' → logprob: -1.5637872219085693
    3. '[n' → logprob: -2.8137872219085693
    4. 'n' → logprob: -12.813787460327148
    5. '([' → logprob: -14.063787460327148
    6. ' n' → logprob: -14.438787460327148
    7. '[N' → logprob: -14.438787460327148
    8. '   ' → logprob: -14.938787460327148
    9. '[num' → logprob: -15.563787460327148
    10. '[list' → logprob: -15.563787460327148

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.250001907348633
    5. '  ' → logprob: -20.750001907348633
    6. ']' → logprob: -20.875001907348633
    7. '```' → logprob: -21.375001907348633
    8. '(' → logprob: -21.500001907348633
    9. ')' → logprob: -21.625001907348633
    10. '１' → logprob: -21.750001907348633

Token 117: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019008010625839233
    2. ')' → logprob: -4.769008159637451
    3. ']*' → logprob: -4.894008159637451
    4. ' for' → logprob: -6.644008159637451
    5. ',' → logprob: -6.769008159637451
    6. ' ]' → logprob: -8.144007682800293
    7. ')]' → logprob: -10.394007682800293
    8. 'for' → logprob: -10.394007682800293
    9. ')*' → logprob: -11.269007682800293
    10. ' )' → logprob: -12.019007682800293

Token 118: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009144435753114522
    2. ' n' → logprob: -7.000914573669434
    3. '(n' → logprob: -12.750914573669434
    4. '	n' → logprob: -17.000913619995117
    5. ')n' → logprob: -17.750913619995117
    6. '_n' → logprob: -20.000913619995117
    7. '(' → logprob: -20.125913619995117
    8. ' (' → logprob: -20.250913619995117
    9. ',n' → logprob: -21.000913619995117
    10. '   ' → logprob: -21.000913619995117

Token 120: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: ' Taille' (ID: 174124)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.390544593334198
    2. 'each' → logprob: -1.5155446529388428
    3. ' each' → logprob: -2.3905446529388428
    4. 'l' → logprob: -5.015544414520264
    5. 'n' → logprob: -6.265544414520264
    6. ' chacune' → logprob: -6.515544414520264
    7. ' chacun' → logprob: -8.140544891357422
    8. 'la' → logprob: -8.140544891357422
    9. 'Chaque' → logprob: -8.265544891357422
    10. 'cha' → logprob: -8.515544891357422

Token 125: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.027632996439933777
    2. 'élé' → logprob: -4.277633190155029
    3. 'com' → logprob: -5.027633190155029
    4. ' ensemble' → logprob: -5.777633190155029
    5. ' ' → logprob: -6.652633190155029
    6. ' compos' → logprob: -7.777633190155029
    7. 's' → logprob: -7.902633190155029
    8. 'set' → logprob: -7.902633190155029
    9. '```' → logprob: -8.652632713317871
    10. 'component' → logprob: -9.027632713317871

Token 126: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0219196118414402
    2. '   ' → logprob: -4.6469197273254395
    3. ' def' → logprob: -4.6469197273254395
    4. '
' → logprob: -6.3969197273254395
    5. '	def' → logprob: -7.8969197273254395
    6. '    
' → logprob: -8.396919250488281
    7. ' 
' → logprob: -9.396919250488281
    8. 'newline' → logprob: -9.896919250488281
    9. '' → logprob: -11.146919250488281
    10. ' ' → logprob: -11.271919250488281

Token 129: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.023323044180870056
    2. 'find' → logprob: -3.7733230590820312
    3. '_find' → logprob: -9.898323059082031
    4. ' root' → logprob: -11.148323059082031
    5. '.find' → logprob: -12.148323059082031
    6. '	find' → logprob: -12.898323059082031
    7. ' ' → logprob: -13.148323059082031
    8. 'root' → logprob: -13.773323059082031
    9. '-find' → logprob: -14.648323059082031
    10. '=find' → logprob: -15.273323059082031

Token 130: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04900369048118591
    2. '(self' → logprob: -3.0490036010742188
    3. ' (' → logprob: -7.924003601074219
    4. '_' → logprob: -11.049003601074219
    5. '(
' → logprob: -11.549003601074219
    6. '(s' → logprob: -12.049003601074219
    7. 'self' → logprob: -12.174003601074219
    8. '_parent' → logprob: -12.674003601074219
    9. '(x' → logprob: -12.799003601074219
    10. ')' → logprob: -13.549003601074219

Token 131: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06523609161376953
    2. ')' → logprob: -2.9402360916137695
    3. '_' → logprob: -5.8152360916137695
    4. '(x' → logprob: -5.9402360916137695
    5. '(self' → logprob: -6.8152360916137695
    6. ' (' → logprob: -6.8152360916137695
    7. '_parent' → logprob: -6.8152360916137695
    8. '(_' → logprob: -8.19023609161377
    9. ')_' → logprob: -8.19023609161377
    10. ' )' → logprob: -9.06523609161377

Token 132: ' a' (ID: 261)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00038956227945163846
    2. ' x' → logprob: -8.750389099121094
    3. 'a' → logprob: -9.000389099121094
    4. 'p' → logprob: -9.375389099121094
    5. 'i' → logprob: -11.500389099121094
    6. 'self' → logprob: -11.750389099121094
    7. 'u' → logprob: -12.625389099121094
    8. 'node' → logprob: -14.500389099121094
    9. 'v' → logprob: -15.125389099121094
    10. 'k' → logprob: -15.500389099121094

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007226797170005739
    2. ')' → logprob: -7.625722885131836
    3. '):
' → logprob: -8.375722885131836
    4. ' ):' → logprob: -12.750722885131836
    5. ':' → logprob: -13.625722885131836
    6. '   ' → logprob: -16.625722885131836
    7. '):
' → logprob: -16.750722885131836
    8. ')：' → logprob: -17.750722885131836
    9. '):

' → logprob: -18.250722885131836
    10. ' )' → logprob: -18.250722885131836

Token 134: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4332490861415863
    2. '       ' → logprob: -1.4332491159439087
    3. '):' → logprob: -2.308248996734619
    4. '
' → logprob: -5.183248996734619
    5. ')' → logprob: -5.808248996734619
    6. ' :' → logprob: -6.183248996734619
    7. '):
' → logprob: -6.933248996734619
    8. '   ' → logprob: -8.183249473571777
    9. '        
' → logprob: -8.308249473571777
    10. ':
' → logprob: -8.308249473571777

Token 135: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049698627553880215
    2. ' if' → logprob: -6.504970073699951
    3. 'if' → logprob: -6.629970073699951
    4. '
' → logprob: -6.879970073699951
    5. ' while' → logprob: -8.254969596862793
    6. ' 
' → logprob: -8.504969596862793
    7. '        ' → logprob: -8.754969596862793
    8. '        
' → logprob: -8.754969596862793
    9. '   ' → logprob: -8.879969596862793
    10. 'while' → logprob: -9.504969596862793

Token 136: ' Trou' (ID: 58947)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1270034909248352
    2. ' if' → logprob: -2.1270034313201904
    3. 'return' → logprob: -10.75200366973877
    4. '   ' → logprob: -10.87700366973877
    5. 'while' → logprob: -11.00200366973877
    6. ' while' → logprob: -12.12700366973877
    7. 'self' → logprob: -12.25200366973877
    8. 'a' → logprob: -13.12700366973877
    9. '       ' → logprob: -13.25200366973877
    10. ' return' → logprob: -13.37700366973877

Token 137: 've' (ID: 737)
  Prédit: 'ver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.6274036765098572
    2. 've' → logprob: -1.002403736114502
    3. 'ner' → logprob: -2.377403736114502
    4. 'r' → logprob: -5.627403736114502
    5. 'er' → logprob: -7.002403736114502
    6. '   ' → logprob: -7.377403736114502
    7. 'ne' → logprob: -8.252403259277344
    8. 'rn' → logprob: -8.252403259277344
    9. 'vez' → logprob: -9.002403259277344
    10. 'v' → logprob: -9.002403259277344

Token 138: ' le' (ID: 505)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.052226126194000244
    2. '(' → logprob: -3.0522260665893555
    3. ' (' → logprob: -6.4272260665893555
    4. ' a' → logprob: -7.3022260665893555
    5. '(self' → logprob: -7.8022260665893555
    6. ' ' → logprob: -8.177226066589355
    7. 'a' → logprob: -8.677226066589355
    8. ')' → logprob: -8.677226066589355
    9. ',' → logprob: -9.427226066589355
    10. '   ' → logprob: -10.302226066589355

Token 139: ' représentant' (ID: 136122)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.027350595220923424
    2. ' parent' → logprob: -3.652350664138794
    3. 're' → logprob: -8.027350425720215
    4. 'represent' → logprob: -8.902350425720215
    5. '_parent' → logprob: -8.902350425720215
    6. 'rac' → logprob: -9.277350425720215
    7. 'p' → logprob: -9.527350425720215
    8. 'root' → logprob: -9.652350425720215
    9. 'repr' → logprob: -9.652350425720215
    10. ' représentant' → logprob: -10.277350425720215

Token 140: ' (' (ID: 350)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7860022783279419
    2. '(a' → logprob: -1.286002278327942
    3. '(' → logprob: -1.661002278327942
    4. ' (' → logprob: -3.1610021591186523
    5. 'a' → logprob: -4.286002159118652
    6. ' a' → logprob: -4.911002159118652
    7. ' ' → logprob: -5.286002159118652
    8. 'de' → logprob: -5.786002159118652
    9. '(self' → logprob: -6.161002159118652
    10. '(
' → logprob: -7.161002159118652

Token 141: 'parent' (ID: 4903)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018886130303144455
    2. 'self' → logprob: -4.143886089324951
    3. ' a' → logprob: -6.643886089324951
    4. ' self' → logprob: -7.268886089324951
    5. 'parent' → logprob: -7.643886089324951
    6. '   ' → logprob: -8.51888656616211
    7. ' parent' → logprob: -9.01888656616211
    8. ')' → logprob: -10.39388656616211
    9. 'l' → logprob: -12.51888656616211
    10. ' ' → logprob: -13.01888656616211

Token 142: ')' (ID: 8)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.781155526638031
    2. ')' → logprob: -0.906155526638031
    3. '(a' → logprob: -3.031155586242676
    4. 'a' → logprob: -3.031155586242676
    5. ' de' → logprob: -4.906155586242676
    6. ')a' → logprob: -5.031155586242676
    7. ' a' → logprob: -5.656155586242676
    8. 'de' → logprob: -5.906155586242676
    9. 'parent' → logprob: -6.156155586242676
    10. '```' → logprob: -6.281155586242676

Token 143: ' de' (ID: 334)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.36314576864242554
    2. 'a' → logprob: -1.7381458282470703
    3. '(' → logprob: -2.2381458282470703
    4. ' de' → logprob: -5.23814582824707
    5. '(
' → logprob: -5.73814582824707
    6. ' of' → logprob: -5.98814582824707
    7. '   ' → logprob: -6.11314582824707
    8. ' a' → logprob: -6.11314582824707
    9. ' ' → logprob: -6.61314582824707
    10. ',' → logprob: -6.86314582824707

Token 144: ' l' (ID: 305)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3871341347694397
    2. 'a' → logprob: -1.137134075164795
    3. '(a' → logprob: -8.637134552001953
    4. ' ' → logprob: -10.387134552001953
    5. '   ' → logprob: -10.887134552001953
    6. ' self' → logprob: -11.137134552001953
    7. '	a' → logprob: -12.012134552001953
    8. ' la' → logprob: -12.262134552001953
    9. 'self' → logprob: -12.512134552001953
    10. ' (' → logprob: -13.387134552001953

Token 145: ''ensemble' (ID: 79341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15800972282886505
    2. ''ensemble' → logprob: -2.2830097675323486
    3. ' a' → logprob: -3.6580097675323486
    4. 'e' → logprob: -4.9080095291137695
    5. ''a' → logprob: -6.1580095291137695
    6. ''' → logprob: -6.1580095291137695
    7. 'élé' → logprob: -6.2830095291137695
    8. 'ensemble' → logprob: -6.4080095291137695
    9. '’ensemble' → logprob: -6.9080095291137695
    10. '   ' → logprob: -8.03300952911377

Token 146: ' contenant' (ID: 131049)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.603585958480835
    2. 'a' → logprob: -1.228585958480835
    3. ' de' → logprob: -2.228585958480835
    4. ',' → logprob: -3.853585958480835
    5. '(a' → logprob: -4.478586196899414
    6. ' of' → logprob: -5.728586196899414
    7. ' auquel' → logprob: -6.103586196899414
    8. ' ' → logprob: -6.228586196899414
    9. '   ' → logprob: -6.353586196899414
    10. 'de' → logprob: -6.353586196899414

Token 147: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804241120815277
    2. ' a' → logprob: -3.2880423069000244
    3. '(a' → logprob: -14.788042068481445
    4. '	a' → logprob: -15.538042068481445
    5. ' ' → logprob: -15.663042068481445
    6. '   ' → logprob: -15.663042068481445
    7. ''a' → logprob: -16.788042068481445
    8. ' ' → logprob: -17.163042068481445
    9. '_a' → logprob: -17.288042068481445
    10. '`' → logprob: -17.538042068481445

Token 148: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. '	a' → logprob: -21.250036239624023
    4. ' ' → logprob: -21.625036239624023
    5. ')a' → logprob: -22.625036239624023
    6. '   ' → logprob: -22.875036239624023
    7. '_a' → logprob: -23.500036239624023
    8. ''a' → logprob: -23.500036239624023
    9. 'а' → logprob: -24.000036239624023
    10. '(a' → logprob: -25.500036239624023

Token 149: '',
' (ID: 1214)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004066290333867073
    2. ' )' → logprob: -5.879066467285156
    3. ')'' → logprob: -7.754066467285156
    4. '):' → logprob: -8.129066467285156
    5. '')' → logprob: -8.254066467285156
    6. ')
' → logprob: -9.254066467285156
    7. ''' → logprob: -9.504066467285156
    8. '   ' → logprob: -10.504066467285156
    9. ' ' → logprob: -11.004066467285156
    10. ',' → logprob: -11.379066467285156

Token 150: '       ' (ID: 309)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.41539961099624634
    2. ' en' → logprob: -1.7903995513916016
    3. ' avec' → logprob: -2.0403995513916016
    4. '   ' → logprob: -4.540399551391602
    5. ' tout' → logprob: -5.040399551391602
    6. ' return' → logprob: -5.165399551391602
    7. 'et' → logprob: -5.290399551391602
    8. '       ' → logprob: -5.415399551391602
    9. ' with' → logprob: -6.165399551391602
    10. ' while' → logprob: -6.665399551391602

Token 151: ' #' (ID: 1069)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.48140862584114075
    2. ' et' → logprob: -1.6064085960388184
    3. ' avec' → logprob: -2.4814085960388184
    4. '   ' → logprob: -3.8564085960388184
    5. ',' → logprob: -3.9814085960388184
    6. ' while' → logprob: -4.356408596038818
    7. ' tout' → logprob: -4.356408596038818
    8. ' with' → logprob: -5.231408596038818
    9. 'et' → logprob: -5.356408596038818
    10. ')' → logprob: -5.481408596038818

Token 152: ' avec' (ID: 3937)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9878206253051758
    2. ' avec' → logprob: -1.2378206253051758
    3. 'et' → logprob: -2.112820625305176
    4. ' en' → logprob: -2.112820625305176
    5. ' tout' → logprob: -3.237820625305176
    6. 'avec' → logprob: -3.487820625305176
    7. '   ' → logprob: -5.487820625305176
    8. ' with' → logprob: -5.612820625305176
    9. 'tout' → logprob: -5.612820625305176
    10. 'en' → logprob: -5.737820625305176

Token 153: ' compression' (ID: 41811)
  Prédit: ' compression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compression' → logprob: -0.7814489006996155
    2. 'compression' → logprob: -1.0314488410949707
    3. 'path' → logprob: -2.0314488410949707
    4. ' path' → logprob: -3.2814488410949707
    5. ' la' → logprob: -4.656448841094971
    6. ' chemin' → logprob: -6.281448841094971
    7. 'la' → logprob: -6.406448841094971
    8. 'compress' → logprob: -6.656448841094971
    9. ' compress' → logprob: -7.406448841094971
    10. ' une' → logprob: -7.656448841094971

Token 154: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.30730879306793213
    2. ' des' → logprob: -1.6823087930679321
    3. 'de' → logprob: -3.4323086738586426
    4. ' path' → logprob: -3.8073086738586426
    5. 'path' → logprob: -4.682308673858643
    6. '_path' → logprob: -4.682308673858643
    7. 'des' → logprob: -5.432308673858643
    8. ' ' → logprob: -8.4323091506958
    9. ' du' → logprob: -8.4323091506958
    10. ' chemin' → logprob: -8.4323091506958

Token 155: ' chemin' (ID: 45035)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.9372180104255676
    2. ' la' → logprob: -1.8122179508209229
    3. 'l' → logprob: -1.9372179508209229
    4. 'che' → logprob: -2.562217950820923
    5. ' chemin' → logprob: -2.687217950820923
    6. 'le' → logprob: -3.062217950820923
    7. 'la' → logprob: -3.437217950820923
    8. ' path' → logprob: -3.812217950820923
    9. '_path' → logprob: -4.562218189239502
    10. ' le' → logprob: -4.687218189239502

Token 156: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6117700338363647
    2. ')' → logprob: -1.6117700338363647
    3. '       ' → logprob: -1.8617700338363647
    4. '):' → logprob: -3.1117701530456543
    5. '   ' → logprob: -3.3617701530456543
    6. '.' → logprob: -4.861770153045654
    7. ':
' → logprob: -5.736770153045654
    8. ',' → logprob: -5.861770153045654
    9. ' :' → logprob: -5.986770153045654
    10. '):
' → logprob: -6.611770153045654

Token 157: ' accél' (ID: 152966)
  Prédit: ' optimiser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimiser' → logprob: -0.20138370990753174
    2. ' améliorer' → logprob: -2.701383590698242
    3. ' accél' → logprob: -3.826383590698242
    4. ' ' → logprob: -4.076383590698242
    5. ' optim' → logprob: -4.451383590698242
    6. 'optim' → logprob: -4.576383590698242
    7. ' rendre' → logprob: -4.701383590698242
    8. '   ' → logprob: -4.701383590698242
    9. ' self' → logprob: -4.826383590698242
    10. ' réduire' → logprob: -5.076383590698242

Token 158: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.00039158877916634083
    2. 'er' → logprob: -8.625391960144043
    3. 'rer' → logprob: -10.125391960144043
    4. 'è' → logprob: -10.500391960144043
    5. 'ér' → logprob: -10.500391960144043
    6. 'erer' → logprob: -10.625391960144043
    7. 'é' → logprob: -11.000391960144043
    8. 'éré' → logprob: -11.500391960144043
    9. 'l' → logprob: -11.625391960144043
    10. '   ' → logprob: -11.875391960144043

Token 159: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5666579008102417
    2. ' le' → logprob: -0.9416579008102417
    3. ' l' → logprob: -3.4416580200195312
    4. 'le' → logprob: -5.441658020019531
    5. ' self' → logprob: -6.566658020019531
    6. 'la' → logprob: -6.691658020019531
    7. 'self' → logprob: -7.191658020019531
    8. ' a' → logprob: -7.316658020019531
    9. ' the' → logprob: -7.441658020019531
    10. ' les' → logprob: -7.691658020019531

Token 160: ' futures' (ID: 53070)
  Prédit: ' recherche'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recherche' → logprob: -0.8239726424217224
    2. ' recherches' → logprob: -1.8239727020263672
    3. 'find' → logprob: -2.573972702026367
    4. ' find' → logprob: -2.698972702026367
    5. ' recursion' → logprob: -3.073972702026367
    6. 're' → logprob: -3.573972702026367
    7. ' réc' → logprob: -3.698972702026367
    8. 'a' → logprob: -4.073972702026367
    9. ' ' → logprob: -4.198972702026367
    10. 'cherche' → logprob: -4.448972702026367

Token 161: ' recherches' (ID: 93304)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8054558038711548
    2. '  ' → logprob: -1.9304558038711548
    3. '   ' → logprob: -2.6804556846618652
    4. ' appels' → logprob: -2.9304556846618652
    5. ')' → logprob: -3.1804556846618652
    6. ' )' → logprob: -3.3054556846618652
    7. ' find' → logprob: -3.3054556846618652
    8. ' calls' → logprob: -3.6804556846618652
    9. ' recherches' → logprob: -3.9304556846618652
    10. ' a' → logprob: -4.680455684661865

Token 162: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.867793619632721
    2. ':' → logprob: -1.3677935600280762
    3. ')' → logprob: -1.8677935600280762
    4. '   ' → logprob: -2.117793560028076
    5. '):' → logprob: -3.492793560028076
    6. '
' → logprob: -5.117793560028076
    7. ':
' → logprob: -5.992793560028076
    8. '    
' → logprob: -6.117793560028076
    9. '):
' → logprob: -6.492793560028076
    10. '(' → logprob: -6.992793560028076

Token 163: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2627343535423279
    2. ':' → logprob: -1.8877344131469727
    3. '   ' → logprob: -3.5127344131469727
    4. '):' → logprob: -3.6377344131469727
    5. ')' → logprob: -4.387734413146973
    6. '
' → logprob: -5.887734413146973
    7. '):
' → logprob: -5.887734413146973
    8. ':
' → logprob: -6.887734413146973
    9. '(a' → logprob: -7.387734413146973
    10. '        
' → logprob: -7.512734413146973

Token 164: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16099415719509125
    2. ' if' → logprob: -2.285994052886963
    3. 'if' → logprob: -3.285994052886963
    4. '   ' → logprob: -6.035994052886963
    5. 'a' → logprob: -6.160994052886963
    6. ' 
' → logprob: -6.785994052886963
    7. ' while' → logprob: -7.035994052886963
    8. '
' → logprob: -7.410994052886963
    9. '        
' → logprob: -7.535994052886963
    10. '    ' → logprob: -7.910994052886963

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.27918702363967896
    2. 'a' → logprob: -1.5291869640350342
    3. ' self' → logprob: -3.654186964035034
    4. ' a' → logprob: -6.904187202453613
    5. '	self' → logprob: -13.029187202453613
    6. '(self' → logprob: -14.404187202453613
    7. ' ' → logprob: -15.029187202453613
    8. '	a' → logprob: -15.029187202453613
    9. '   ' → logprob: -16.029186248779297
    10. 'parent' → logprob: -16.654186248779297

Token 166: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -8.180258191714529e-06
    2. 'parent' → logprob: -12.375008583068848
    3. '.' → logprob: -12.625008583068848
    4. ' .' → logprob: -15.000008583068848
    5. '_parent' → logprob: -16.00000762939453
    6. '.self' → logprob: -17.00000762939453
    7. '	parent' → logprob: -17.12500762939453
    8. '[parent' → logprob: -17.25000762939453
    9. ' parent' → logprob: -17.62500762939453
    10. '-parent' → logprob: -18.25000762939453

Token 167: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.2200749754119897e-06
    2. 'a' → logprob: -13.250001907348633
    3. '[self' → logprob: -15.625001907348633
    4. '[' → logprob: -15.750001907348633
    5. '[
' → logprob: -17.500001907348633
    6. ' a' → logprob: -17.625001907348633
    7. '[A' → logprob: -18.125001907348633
    8. ' [' → logprob: -18.500001907348633
    9. '(a' → logprob: -18.750001907348633
    10. '#a' → logprob: -19.375001907348633

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07948572933673859
    2. ']!=' → logprob: -2.5794856548309326
    3. '!=' → logprob: -7.454485893249512
    4. ' !=' → logprob: -12.079485893249512
    5. ' ]' → logprob: -12.204485893249512
    6. ')!=' → logprob: -13.079485893249512
    7. 'a' → logprob: -13.079485893249512
    8. '[' → logprob: -14.954485893249512
    9. ']+=' → logprob: -15.079485893249512
    10. 'self' → logprob: -15.329485893249512

Token 169: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004115203861147165
    2. ' !=' → logprob: -5.504115104675293
    3. ']!=' → logprob: -10.504115104675293
    4. '()!=' → logprob: -12.754115104675293
    5. 'a' → logprob: -12.879115104675293
    6. ')!=' → logprob: -13.754115104675293
    7. '!==' → logprob: -13.879115104675293
    8. '!=-' → logprob: -14.379115104675293
    9. '!=(' → logprob: -14.754115104675293
    10. '=' → logprob: -15.254115104675293

Token 170: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ' a' → logprob: -9.500075340270996
    3. '	a' → logprob: -17.37507438659668
    4. 'self' → logprob: -19.12507438659668
    5. '#a' → logprob: -19.62507438659668
    6. '_a' → logprob: -20.00007438659668
    7. ')a' → logprob: -20.50007438659668
    8. '[a' → logprob: -21.00007438659668
    9. '(a' → logprob: -22.00007438659668
    10. '>a' → logprob: -22.12507438659668

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1003948301076889
    2. ':
' → logprob: -2.3503947257995605
    3. 'a' → logprob: -8.725395202636719
    4. ':a' → logprob: -11.350395202636719
    5. ' :' → logprob: -12.100395202636719
    6. ' a' → logprob: -13.225395202636719
    7. '):
' → logprob: -13.725395202636719
    8. ':
' → logprob: -13.850395202636719
    9. ' :
' → logprob: -14.100395202636719
    10. ',' → logprob: -14.100395202636719

Token 172: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02064022608101368
    2. 'a' → logprob: -4.0206403732299805
    3. ' a' → logprob: -6.5206403732299805
    4. 'self' → logprob: -7.6456403732299805
    5. ' self' → logprob: -8.52064037322998
    6. '       ' → logprob: -9.14564037322998
    7. '   ' → logprob: -9.39564037322998
    8. ':' → logprob: -10.77064037322998
    9. '
' → logprob: -11.02064037322998
    10. '```' → logprob: -11.14564037322998

Token 173: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03328831493854523
    2. '           ' → logprob: -4.283288478851318
    3. ' self' → logprob: -4.533288478851318
    4. 'a' → logprob: -4.908288478851318
    5. '
' → logprob: -7.783288478851318
    6. ' a' → logprob: -8.78328800201416
    7. '   ' → logprob: -9.03328800201416
    8. '               ' → logprob: -9.78328800201416
    9. '       ' → logprob: -10.90828800201416
    10. '	self' → logprob: -11.15828800201416

Token 174: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0020144060254096985
    2. 'parent' → logprob: -6.252014636993408
    3. '.' → logprob: -9.50201416015625
    4. '_parent' → logprob: -12.50201416015625
    5. '[parent' → logprob: -13.12701416015625
    6. ' .' → logprob: -13.75201416015625
    7. '	parent' → logprob: -14.00201416015625
    8. 'a' → logprob: -14.12701416015625
    9. '.
' → logprob: -14.62701416015625
    10. '   ' → logprob: -15.12701416015625

Token 175: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.4987974029500037e-05
    2. 'a' → logprob: -10.625024795532227
    3. '[' → logprob: -14.375024795532227
    4. '	a' → logprob: -17.250024795532227
    5. '[A' → logprob: -17.250024795532227
    6. '[self' → logprob: -17.500024795532227
    7. '[
' → logprob: -17.875024795532227
    8. '[parent' → logprob: -18.000024795532227
    9. '```' → logprob: -18.000024795532227
    10. ' a' → logprob: -18.500024795532227

Token 176: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005637701600790024
    2. '=' → logprob: -5.6306376457214355
    3. ']=' → logprob: -6.6306376457214355
    4. ' =' → logprob: -7.2556376457214355
    5. ' ]' → logprob: -11.630638122558594
    6. '[' → logprob: -15.005638122558594
    7. ')' → logprob: -15.130638122558594
    8. 'a' → logprob: -15.380638122558594
    9. '[a' → logprob: -16.505638122558594
    10. ']+=' → logprob: -16.880638122558594

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692926824092865
    2. '=' → logprob: -2.12692928314209
    3. '=a' → logprob: -14.25192928314209
    4. '=self' → logprob: -15.62692928314209
    5. ' ' → logprob: -15.87692928314209
    6. '＝' → logprob: -16.001928329467773
    7. ']' → logprob: -17.001928329467773
    8. ' =
' → logprob: -17.251928329467773
    9. ']=' → logprob: -17.501928329467773
    10. ')' → logprob: -17.626928329467773

Token 178: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014163628220558167
    2. ' self' → logprob: -4.264163494110107
    3. '(self' → logprob: -16.764163970947266
    4. ' ' → logprob: -17.139163970947266
    5. '	self' → logprob: -17.639163970947266
    6. '[self' → logprob: -17.639163970947266
    7. '   ' → logprob: -19.264163970947266
    8. 'elf' → logprob: -19.639163970947266
    9. '    ' → logprob: -19.764163970947266
    10. '=self' → logprob: -19.889163970947266

Token 179: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.1472419600977446e-06
    2. 'parent' → logprob: -14.000000953674316
    3. '[parent' → logprob: -15.250000953674316
    4. ' .' → logprob: -17.375001907348633
    5. '.' → logprob: -17.500001907348633
    6. '.Parent' → logprob: -19.375001907348633
    7. '	parent' → logprob: -19.500001907348633
    8. ',parent' → logprob: -19.750001907348633
    9. '_parent' → logprob: -20.250001907348633
    10. '.parents' → logprob: -20.250001907348633

Token 180: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -7.707997428951785e-05
    2. 'self' → logprob: -9.875077247619629
    3. '[' → logprob: -10.625077247619629
    4. '[
' → logprob: -13.875077247619629
    5. ' self' → logprob: -16.625076293945312
    6. '[s' → logprob: -16.625076293945312
    7. '(self' → logprob: -16.875076293945312
    8. '[this' → logprob: -17.875076293945312
    9. '[a' → logprob: -19.000076293945312
    10. ' [' → logprob: -19.125076293945312

Token 181: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0009361166739836335
    2. 'parent' → logprob: -7.125936031341553
    3. '[a' → logprob: -9.750936508178711
    4. '.a' → logprob: -10.125936508178711
    5. '[parent' → logprob: -10.875936508178711
    6. '.' → logprob: -12.250936508178711
    7. 'a' → logprob: -12.875936508178711
    8. '.Parent' → logprob: -13.125936508178711
    9. ' parent' → logprob: -13.375936508178711
    10. '	parent' → logprob: -13.750936508178711

Token 182: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0001589618914294988
    2. 'a' → logprob: -8.75015926361084
    3. '[' → logprob: -14.87515926361084
    4. '	a' → logprob: -17.250158309936523
    5. '[
' → logprob: -17.750158309936523
    6. ' a' → logprob: -18.375158309936523
    7. '(a' → logprob: -19.125158309936523
    8. '```' → logprob: -19.375158309936523
    9. '#a' → logprob: -20.375158309936523
    10. '[A' → logprob: -20.500158309936523

Token 183: ']]
' (ID: 29446)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.018051838502287865
    2. ']]' → logprob: -4.268051624298096
    3. 'a' → logprob: -5.893051624298096
    4. '])' → logprob: -7.518051624298096
    5. ']' → logprob: -7.518051624298096
    6. ')]' → logprob: -11.268052101135254
    7. '])]' → logprob: -11.518052101135254
    8. ']])' → logprob: -12.143052101135254
    9. ' a' → logprob: -12.643052101135254
    10. ' ]]' → logprob: -13.768052101135254

Token 184: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0799429789185524
    2. '           ' → logprob: -2.5799429416656494
    3. ' a' → logprob: -6.9549431800842285
    4. '   ' → logprob: -9.82994270324707
    5. '       ' → logprob: -10.57994270324707
    6. '_a' → logprob: -12.45494270324707
    7. 'b' → logprob: -12.70494270324707
    8. '[a' → logprob: -12.82994270324707
    9. ',a' → logprob: -13.20494270324707
    10. '	a' → logprob: -13.45494270324707

Token 185: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0005542247672565281
    2. ' a' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.250554084777832
    4. '           ' → logprob: -14.500554084777832
    5. '       ' → logprob: -17.12555503845215
    6. '	a' → logprob: -17.50055503845215
    7. '_a' → logprob: -19.37555503845215
    8. '  ' → logprob: -19.75055503845215
    9. ' ' → logprob: -19.75055503845215
    10. '    ' → logprob: -20.25055503845215

Token 186: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014157623052597
    2. ' =' → logprob: -1.701415777206421
    3. ' ' → logprob: -13.576416015625
    4. ' +=' → logprob: -14.201416015625
    5. '+=' → logprob: -15.201416015625
    6. ',' → logprob: -16.701416015625
    7. ']' → logprob: -16.826416015625
    8. ')' → logprob: -17.201416015625
    9. ' |=' → logprob: -17.451416015625
    10. '.=' → logprob: -17.576416015625

Token 187: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132634460926056
    2. 'self' → logprob: -1.3132634162902832
    3. '	self' → logprob: -14.063263893127441
    4. '[self' → logprob: -14.813263893127441
    5. ' ' → logprob: -15.313263893127441
    6. '(self' → logprob: -15.813263893127441
    7. ' ' → logprob: -16.188262939453125
    8. '   ' → logprob: -16.813262939453125
    9. '=self' → logprob: -17.813262939453125
    10. '    ' → logprob: -18.063262939453125

Token 188: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -3.2020991056924686e-05
    2. 'parent' → logprob: -10.625032424926758
    3. '.' → logprob: -11.875032424926758
    4. ' .' → logprob: -14.875032424926758
    5. '[parent' → logprob: -15.375032424926758
    6. ' parent' → logprob: -16.750032424926758
    7. '	parent' → logprob: -17.000032424926758
    8. '.Parent' → logprob: -17.125032424926758
    9. ',parent' → logprob: -17.500032424926758
    10. '_parent' → logprob: -17.875032424926758

Token 189: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.632542913896032e-05
    2. 'a' → logprob: -10.125046730041504
    3. '[' → logprob: -12.125046730041504
    4. '[
' → logprob: -15.250046730041504
    5. '[parent' → logprob: -15.250046730041504
    6. ' a' → logprob: -16.625045776367188
    7. '[self' → logprob: -16.625045776367188
    8. '```' → logprob: -16.875045776367188
    9. '[A' → logprob: -17.125045776367188
    10. ' [' → logprob: -17.500045776367188

Token 190: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033789195120334625
    2. ']' → logprob: -3.4087891578674316
    3. ')
' → logprob: -10.15878963470459
    4. ' )' → logprob: -10.40878963470459
    5. '}' → logprob: -10.65878963470459
    6. '<|end|>' → logprob: -10.65878963470459
    7. ')return' → logprob: -11.90878963470459
    8. ')]' → logprob: -12.78378963470459
    9. ' ]' → logprob: -12.78378963470459
    10. '[' → logprob: -12.90878963470459

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007902941666543484
    2. 'return' → logprob: -5.007903099060059
    3. '   ' → logprob: -7.507903099060059
    4. ' return' → logprob: -8.132903099060059
    5. '\n' → logprob: -8.632903099060059
    6. '\' → logprob: -9.882903099060059
    7. ':return' → logprob: -9.882903099060059
    8. ')' → logprob: -11.382903099060059
    9. '           ' → logprob: -11.882903099060059
    10. '
' → logprob: -12.132903099060059

Token 192: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007417320739477873
    2. '       ' → logprob: -5.25741720199585
    3. ' return' → logprob: -6.25741720199585
    4. '   ' → logprob: -8.257417678833008
    5. ':return' → logprob: -12.757417678833008
    6. '	return' → logprob: -13.882417678833008
    7. '    ' → logprob: -14.257417678833008
    8. ')' → logprob: -15.132417678833008
    9. 'eturn' → logprob: -15.757417678833008
    10. '        ' → logprob: -16.007417678833008

Token 193: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07889121770858765
    2. ' a' → logprob: -2.5788912773132324
    3. '	a' → logprob: -13.953890800476074
    4. ' ' → logprob: -14.953890800476074
    5. '_a' → logprob: -16.20389175415039
    6. '#a' → logprob: -16.95389175415039
    7. ' ' → logprob: -17.20389175415039
    8. ' а' → logprob: -17.82889175415039
    9. '­a' → logprob: -18.45389175415039
    10. ')a' → logprob: -18.70389175415039

Token 194: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.478510320186615
    2. '<|end|>' → logprob: -1.7285103797912598
    3. '    
' → logprob: -2.4785103797912598
    4. '
' → logprob: -3.1035103797912598
    5. '  
' → logprob: -3.4785103797912598
    6. ' 
' → logprob: -3.7285103797912598
    7. '\n' → logprob: -5.60351037979126
    8. '   
' → logprob: -5.85351037979126
    9. 'def' → logprob: -5.97851037979126
    10. ' ' → logprob: -5.97851037979126

Token 196: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011420035734772682
    2. ' def' → logprob: -7.2511420249938965
    3. '   ' → logprob: -7.7511420249938965
    4. '	def' → logprob: -14.501141548156738
    5. '    
' → logprob: -14.626141548156738
    6. ' ' → logprob: -14.876141548156738
    7. '```' → logprob: -16.251142501831055
    8. ' 
' → logprob: -16.751142501831055
    9. '  
' → logprob: -16.876142501831055
    10. '  ' → logprob: -17.126142501831055

Token 197: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.022698255255818367
    2. 'un' → logprob: -4.522698402404785
    3. ' union' → logprob: -4.772698402404785
    4. ' unite' → logprob: -5.772698402404785
    5. '_union' → logprob: -11.647698402404785
    6. 'merge' → logprob: -12.647698402404785
    7. ' unify' → logprob: -14.397698402404785
    8. 'unit' → logprob: -14.522698402404785
    9. '.union' → logprob: -14.897698402404785
    10. ' un' → logprob: -15.022698402404785

Token 198: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3132812976837158
    2. '(self' → logprob: -1.3132812976837158
    3. '(
' → logprob: -11.813281059265137
    4. ' (' → logprob: -11.938281059265137
    5. '(a' → logprob: -12.688281059265137
    6. '(s' → logprob: -14.063281059265137
    7. 'self' → logprob: -14.938281059265137
    8. '(`' → logprob: -15.313281059265137
    9. '```' → logprob: -15.438281059265137
    10. '(sel' → logprob: -15.563281059265137

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.815280696377158e-05
    2. ' ,' → logprob: -10.125078201293945
    3. ',a' → logprob: -11.000078201293945
    4. 'self' → logprob: -11.750078201293945
    5. '(a' → logprob: -12.375078201293945
    6. 'a' → logprob: -12.875078201293945
    7. '(' → logprob: -13.000078201293945
    8. '(self' → logprob: -13.625078201293945
    9. ')' → logprob: -13.625078201293945
    10. ',self' → logprob: -14.250078201293945

Token 200: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029784398153424263
    2. ' a' → logprob: -3.5297844409942627
    3. 'self' → logprob: -10.779784202575684
    4. 'b' → logprob: -12.154784202575684
    5. ' self' → logprob: -12.279784202575684
    6. ' b' → logprob: -13.904784202575684
    7. 'x' → logprob: -14.279784202575684
    8. ')a' → logprob: -14.904784202575684
    9. ' x' → logprob: -15.029784202575684
    10. 'u' → logprob: -15.029784202575684

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015943869948387146
    2. ' ,' → logprob: -8.75015926361084
    3. ',b' → logprob: -14.12515926361084
    4. ',a' → logprob: -15.75015926361084
    5. ',
' → logprob: -17.750160217285156
    6. ',int' → logprob: -18.500160217285156
    7. ')' → logprob: -18.750160217285156
    8. '‌,' → logprob: -18.750160217285156
    9. 'a' → logprob: -19.125160217285156
    10. '_,' → logprob: -19.250160217285156

Token 202: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47407710552215576
    2. ' b' → logprob: -0.9740771055221558
    3. ' ' → logprob: -16.849077224731445
    4. '   ' → logprob: -17.849077224731445
    5. ')b' → logprob: -18.099077224731445
    6. ' ' → logprob: -18.849077224731445
    7. '<|end|>' → logprob: -19.099077224731445
    8. '  ' → logprob: -19.099077224731445
    9. '    ' → logprob: -19.349077224731445
    10. '	b' → logprob: -19.474077224731445

Token 203: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004189946048427373
    2. '):
' → logprob: -7.8754191398620605
    3. ')' → logprob: -10.625418663024902
    4. ' ):' → logprob: -11.250418663024902
    5. ':' → logprob: -13.750418663024902
    6. '):
' → logprob: -14.750418663024902
    7. ')：' → logprob: -17.37541961669922
    8. '):

' → logprob: -17.50041961669922
    9. '   ' → logprob: -17.87541961669922
    10. ' ' → logprob: -18.00041961669922

Token 204: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7445459365844727
    2. '       ' → logprob: -0.7445459365844727
    3. '):' → logprob: -3.7445459365844727
    4. ')' → logprob: -4.619545936584473
    5. '<|end|>' → logprob: -4.994545936584473
    6. '   ' → logprob: -5.869545936584473
    7. '):
' → logprob: -6.244545936584473
    8. ':
' → logprob: -6.744545936584473
    9. ' :' → logprob: -6.869545936584473
    10. ',' → logprob: -7.119545936584473

Token 205: ' #' (ID: 1069)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030639225617051125
    2. ' a' → logprob: -4.280639171600342
    3. '       ' → logprob: -4.280639171600342
    4. 'pa' → logprob: -6.405639171600342
    5. 'root' → logprob: -7.405639171600342
    6. 'ra' → logprob: -9.0306396484375
    7. ' root' → logprob: -9.4056396484375
    8. '   ' → logprob: -10.6556396484375
    9. ' pa' → logprob: -11.5306396484375
    10. '	a' → logprob: -13.1556396484375

Token 206: ' Fusion' (ID: 70618)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009279400110244751
    2. ' a' → logprob: -4.884279251098633
    3. 'pa' → logprob: -6.759279251098633
    4. 'ra' → logprob: -8.384279251098633
    5. 'root' → logprob: -8.634279251098633
    6. ' root' → logprob: -10.134279251098633
    7. '   ' → logprob: -10.259279251098633
    8. ' pa' → logprob: -11.009279251098633
    9. ' ra' → logprob: -12.384279251098633
    10. ' ' → logprob: -13.009279251098633

Token 207: 'ne' (ID: 611)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005998594220727682
    2. '       ' → logprob: -6.505998611450195
    3. ' (' → logprob: -6.630998611450195
    4. '(a' → logprob: -7.255998611450195
    5. '(self' → logprob: -7.255998611450195
    6. ')' → logprob: -7.380998611450195
    7. '   ' → logprob: -7.380998611450195
    8. '<|end|>' → logprob: -8.880998611450195
    9. ' ' → logprob: -9.255998611450195
    10. '_' → logprob: -9.755998611450195

Token 208: ' les' (ID: 1341)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.228214979171753
    2. '(self' → logprob: -1.228214979171753
    3. 'self' → logprob: -1.603214979171753
    4. '(' → logprob: -2.353214979171753
    5. '(
' → logprob: -2.853214979171753
    6. ' les' → logprob: -4.103215217590332
    7. ' a' → logprob: -4.228215217590332
    8. ' ' → logprob: -4.728215217590332
    9. '<|end|>' → logprob: -5.103215217590332
    10. 'a' → logprob: -5.478215217590332

Token 209: ' ensembles' (ID: 144172)
  Prédit: 'sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sets' → logprob: -1.1746442317962646
    2. 'find' → logprob: -1.7996442317962646
    3. 'a' → logprob: -1.9246442317962646
    4. 'parent' → logprob: -2.1746442317962646
    5. 'parents' → logprob: -2.2996442317962646
    6. ' parents' → logprob: -3.5496442317962646
    7. 'root' → logprob: -3.6746442317962646
    8. ' sets' → logprob: -4.049644470214844
    9. 'set' → logprob: -4.174644470214844
    10. ' a' → logprob: -4.299644470214844

Token 210: ' contenant' (ID: 131049)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'si' → logprob: -1.808200716972351
    2. ' si' → logprob: -1.933200716972351
    3. 'cont' → logprob: -1.933200716972351
    4. 'self' → logprob: -2.8082008361816406
    5. 'import' → logprob: -2.9332008361816406
    6. ',' → logprob: -3.0582008361816406
    7. ' if' → logprob: -3.0582008361816406
    8. 's' → logprob: -3.1832008361816406
    9. 'de' → logprob: -3.4332008361816406
    10. ' de' → logprob: -3.5582008361816406

Token 211: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008614926598966122
    2. ' a' → logprob: -4.758615016937256
    3. '(a' → logprob: -14.758614540100098
    4. ' ' → logprob: -17.758615493774414
    5. '	a' → logprob: -19.383615493774414
    6. ')a' → logprob: -19.633615493774414
    7. '   ' → logprob: -19.883615493774414
    8. '    ' → logprob: -21.508615493774414
    9. '[a' → logprob: -21.633615493774414
    10. '#a' → logprob: -21.758615493774414

Token 212: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.246537173457909e-06
    2. ' a' → logprob: -12.375003814697266
    3. 'self' → logprob: -22.625003814697266
    4. ' ' → logprob: -22.875003814697266
    5. '```' → logprob: -22.875003814697266
    6. '
' → logprob: -23.250003814697266
    7. '	a' → logprob: -23.250003814697266
    8. '   ' → logprob: -23.250003814697266
    9. 'а' → logprob: -23.500003814697266
    10. '#a' → logprob: -24.125003814697266

Token 213: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.012996094301342964
    2. ' '' → logprob: -4.762996196746826
    3. ',' → logprob: -5.637996196746826
    4. '',' → logprob: -7.387996196746826
    5. ' et' → logprob: -9.012995719909668
    6. '')' → logprob: -11.012995719909668
    7. ')' → logprob: -11.012995719909668
    8. 'et' → logprob: -11.387995719909668
    9. ' ',' → logprob: -11.512995719909668
    10. ' ,' → logprob: -12.387995719909668

Token 214: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15877293050289154
    2. ' et' → logprob: -2.0337729454040527
    3. ' and' → logprob: -4.658772945404053
    4. ' ,' → logprob: -5.908772945404053
    5. 'et' → logprob: -6.033772945404053
    6. ' ' → logprob: -7.533772945404053
    7. '   ' → logprob: -7.908772945404053
    8. ' и' → logprob: -8.783772468566895
    9. 'a' → logprob: -9.033772468566895
    10. ' a' → logprob: -9.533772468566895

Token 215: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1002303957939148
    2. ' b' → logprob: -2.3502304553985596
    3. ''b' → logprob: -10.72523021697998
    4. ''' → logprob: -13.85023021697998
    5. ' '' → logprob: -14.10023021697998
    6. ' ' → logprob: -17.475231170654297
    7. '	b' → logprob: -17.975231170654297
    8. '   ' → logprob: -17.975231170654297
    9. '`' → logprob: -18.225231170654297
    10. ' `' → logprob: -18.475231170654297

Token 216: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. ''b' → logprob: -20.376502990722656
    4. ''' → logprob: -21.251502990722656
    5. ' ')' → logprob: -21.501502990722656
    6. ' ' → logprob: -21.626502990722656
    7. ' '' → logprob: -21.751502990722656
    8. '	b' → logprob: -22.001502990722656
    9. '   ' → logprob: -22.376502990722656
    10. ')b' → logprob: -22.501502990722656

Token 217: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001973480684682727
    2. ' )' → logprob: -7.001973628997803
    3. ')
' → logprob: -7.251973628997803
    4. '       ' → logprob: -9.251973152160645
    5. '   ' → logprob: -9.626973152160645
    6. '):' → logprob: -9.751973152160645
    7. ',' → logprob: -9.876973152160645
    8. '')' → logprob: -10.251973152160645
    9. '):
' → logprob: -11.126973152160645
    10. ' )
' → logprob: -12.251973152160645

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08540899306535721
    2. ':' → logprob: -3.460408926010132
    3. ')' → logprob: -3.835408926010132
    4. ',' → logprob: -4.335409164428711
    5. '   ' → logprob: -4.585409164428711
    6. '):
' → logprob: -6.585409164428711
    7. '):' → logprob: -6.710409164428711
    8. ':
' → logprob: -7.210409164428711
    9. '<|end|>' → logprob: -7.460409164428711
    10. ' :' → logprob: -7.585409164428711

Token 219: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.028163155540823936
    2. ' a' → logprob: -3.903163194656372
    3. 'pa' → logprob: -5.528162956237793
    4. '       ' → logprob: -5.778162956237793
    5. 'ra' → logprob: -8.403162956237793
    6. 'root' → logprob: -9.028162956237793
    7. '   ' → logprob: -9.278162956237793
    8. ' pa' → logprob: -9.903162956237793
    9. ' root' → logprob: -10.403162956237793
    10. 'fa' → logprob: -12.778162956237793

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051890596747398376
    2. '=' → logprob: -3.3018906116485596
    3. ',' → logprob: -4.8018903732299805
    4. '_root' → logprob: -5.4268903732299805
    5. 'root' → logprob: -7.5518903732299805
    6. '_parent' → logprob: -8.55189037322998
    7. ' ,' → logprob: -9.05189037322998
    8. '=find' → logprob: -9.30189037322998
    9. ' ' → logprob: -9.55189037322998
    10. 'a' → logprob: -10.42689037322998

Token 221: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132631778717041
    2. ' self' → logprob: -1.313263177871704
    3. '(self' → logprob: -13.938262939453125
    4. '[self' → logprob: -15.063262939453125
    5. '=self' → logprob: -16.688262939453125
    6. '	self' → logprob: -16.813262939453125
    7. '   ' → logprob: -17.063262939453125
    8. '       ' → logprob: -17.563262939453125
    9. 'union' → logprob: -17.938262939453125
    10. ' union' → logprob: -18.063262939453125

Token 222: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.005588991567492485
    2. 'find' → logprob: -5.505589008331299
    3. '.' → logprob: -6.630589008331299
    4. ' .' → logprob: -9.25558853149414
    5. '.union' → logprob: -9.88058853149414
    6. ' find' → logprob: -10.63058853149414
    7. '.parent' → logprob: -11.88058853149414
    8. '.findall' → logprob: -12.25558853149414
    9. '.
' → logprob: -12.75558853149414
    10. 'union' → logprob: -14.13058853149414

Token 223: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. '(b' → logprob: -16.750003814697266
    4. '(
' → logprob: -18.375003814697266
    5. ' (' → logprob: -19.500003814697266
    6. 'a' → logprob: -20.000003814697266
    7. '(A' → logprob: -20.250003814697266
    8. ',' → logprob: -22.625003814697266
    9. '(

' → logprob: -22.625003814697266
    10. '((' → logprob: -22.875003814697266

Token 224: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01816023886203766
    2. ')' → logprob: -4.018160343170166
    3. ')
' → logprob: -11.643159866333008
    4. ' )
' → logprob: -13.643159866333008
    5. ')b' → logprob: -15.143159866333008
    6. ')

' → logprob: -17.018159866333008
    7. 'b' → logprob: -17.143159866333008
    8. ')a' → logprob: -17.768159866333008
    9. 'a' → logprob: -18.143159866333008
    10. ' )' → logprob: -18.893159866333008

Token 225: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10063416510820389
    2. ' b' → logprob: -2.3506340980529785
    3. '       ' → logprob: -7.8506340980529785
    4. '	b' → logprob: -10.975634574890137
    5. '   ' → logprob: -11.350634574890137
    6. ',b' → logprob: -12.350634574890137
    7. ',' → logprob: -13.225634574890137
    8. ')b' → logprob: -13.850634574890137
    9. ';b' → logprob: -13.975634574890137
    10. '
' → logprob: -14.975634574890137

Token 226: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.75020408630371
    4. '	b' → logprob: -20.12520408630371
    5. '    ' → logprob: -20.25020408630371
    6. 'B' → logprob: -22.62520408630371
    7. ')b' → logprob: -23.12520408630371
    8. '  ' → logprob: -23.50020408630371
    9. '_b' → logprob: -23.87520408630371
    10. '       ' → logprob: -24.25020408630371

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6611081957817078
    2. '=' → logprob: -1.1611082553863525
    3. ')' → logprob: -1.7861082553863525
    4. ' ==' → logprob: -6.786108016967773
    5. '   ' → logprob: -7.536108016967773
    6. ' )' → logprob: -8.161108016967773
    7. '==' → logprob: -8.786108016967773
    8. ')
' → logprob: -8.911108016967773
    9. ',' → logprob: -9.161108016967773
    10. '       ' → logprob: -9.536108016967773

Token 228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006728514563292265
    2. ' self' → logprob: -5.006728649139404
    3. 'b' → logprob: -11.381728172302246
    4. '(self' → logprob: -13.506728172302246
    5. 'a' → logprob: -15.631728172302246
    6. ' b' → logprob: -15.756728172302246
    7. '[self' → logprob: -16.881729125976562
    8. '	self' → logprob: -17.381729125976562
    9. '=self' → logprob: -19.506729125976562
    10. ' a' → logprob: -20.506729125976562

Token 229: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -4.008129963040119e-06
    2. 'find' → logprob: -12.875003814697266
    3. '.' → logprob: -13.625003814697266
    4. ' .' → logprob: -15.500003814697266
    5. '.findall' → logprob: -19.500003814697266
    6. ' find' → logprob: -20.125003814697266
    7. ').' → logprob: -20.625003814697266
    8. '=find' → logprob: -21.000003814697266
    9. '	find' → logprob: -21.250003814697266
    10. '(find' → logprob: -21.625003814697266

Token 230: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -8.77627644513268e-06
    2. 'b' → logprob: -12.000008583068848
    3. '(a' → logprob: -13.500008583068848
    4. ')' → logprob: -14.375008583068848
    5. '(' → logprob: -15.125008583068848
    6. '[b' → logprob: -16.125009536743164
    7. ')b' → logprob: -16.750009536743164
    8. ' b' → logprob: -16.875009536743164
    9. '(B' → logprob: -17.750009536743164
    10. ' (' → logprob: -17.750009536743164

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11285468190908432
    2. ')
' → logprob: -2.2378547191619873
    3. ')
' → logprob: -10.862854957580566
    4. ')a' → logprob: -12.362854957580566
    5. ' )' → logprob: -13.237854957580566
    6. '       ' → logprob: -13.487854957580566
    7. '):
' → logprob: -13.487854957580566
    8. ' )
' → logprob: -14.487854957580566
    9. ')return' → logprob: -14.612854957580566
    10. 'if' → logprob: -14.987854957580566

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040106769651174545
    2. '
' → logprob: -3.665106773376465
    3. ' if' → logprob: -4.665106773376465
    4. ' 
' → logprob: -6.415106773376465
    5. '        
' → logprob: -7.415106773376465
    6. '  
' → logprob: -7.415106773376465
    7. 'if' → logprob: -7.540106773376465
    8. '   ' → logprob: -8.415106773376465
    9. '<|end|>' → logprob: -8.790106773376465
    10. ' ' → logprob: -9.040106773376465

Token 233: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0125344879925251
    2. ' if' → logprob: -4.5125346183776855
    3. '       ' → logprob: -6.5125346183776855
    4. '	if' → logprob: -14.262534141540527
    5. '   ' → logprob: -16.762535095214844
    6. 'If' → logprob: -16.887535095214844
    7. '        
' → logprob: -17.512535095214844
    8. '
' → logprob: -17.637535095214844
    9. '```' → logprob: -17.762535095214844
    10. 'return' → logprob: -19.012535095214844

Token 234: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20142242312431335
    2. 'a' → logprob: -1.7014224529266357
    3. '	a' → logprob: -12.076422691345215
    4. '   ' → logprob: -13.076422691345215
    5. ' ' → logprob: -14.451422691345215
    6. '(a' → logprob: -15.076422691345215
    7. ' ' → logprob: -15.701422691345215
    8. '_a' → logprob: -16.5764217376709
    9. '  ' → logprob: -16.8264217376709
    10. '    ' → logprob: -16.9514217376709

Token 235: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05493171140551567
    2. ' !=' → logprob: -2.929931640625
    3. '==' → logprob: -10.179931640625
    4. ']!=' → logprob: -12.679931640625
    5. '!==' → logprob: -13.179931640625
    6. ')!=' → logprob: -13.554931640625
    7. '=' → logprob: -13.929931640625
    8. '()!=' → logprob: -14.054931640625
    9. ' ==' → logprob: -14.179931640625
    10. '!=-' → logprob: -14.179931640625

Token 236: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. '	b' → logprob: -18.148244857788086
    4. '   ' → logprob: -19.273244857788086
    5. ')b' → logprob: -19.648244857788086
    6. '_b' → logprob: -19.898244857788086
    7. '    ' → logprob: -20.648244857788086
    8. ' ' → logprob: -20.773244857788086
    9. '>b' → logprob: -21.148244857788086
    10. 'B' → logprob: -21.523244857788086

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034142236108891666
    2. ':
' → logprob: -8.375341415405273
    3. ' :' → logprob: -9.125341415405273
    4. '):' → logprob: -14.125341415405273
    5. ' and' → logprob: -14.875341415405273
    6. ':
' → logprob: -15.375341415405273
    7. ' :
' → logprob: -16.125341415405273
    8. ',' → logprob: -16.625341415405273
    9. '       ' → logprob: -16.750341415405273
    10. ':

' → logprob: -16.875341415405273

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003057449823245406
    2. '       ' → logprob: -6.503057479858398
    3. ' if' → logprob: -6.878057479858398
    4. '
' → logprob: -8.503057479858398
    5. '```' → logprob: -9.253057479858398
    6. ',' → logprob: -9.753057479858398
    7. '            
' → logprob: -10.503057479858398
    8. '   ' → logprob: -10.628057479858398
    9. '               ' → logprob: -10.878057479858398
    10. ' self' → logprob: -11.378057479858398

Token 239: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1615077257156372
    2. 'if' → logprob: -1.9115077257156372
    3. '           ' → logprob: -6.661507606506348
    4. '               ' → logprob: -13.911507606506348
    5. '       ' → logprob: -14.286507606506348
    6. '   ' → logprob: -14.286507606506348
    7. 'If' → logprob: -14.786507606506348
    8. '#' (adapté à ' #') → logprob: -14.786507606506348
    9. '```' → logprob: -15.161507606506348
    10. '	if' → logprob: -15.661507606506348

Token 240: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0789862871170044
    2. ' if' → logprob: -2.578986167907715
    3. '           ' → logprob: -9.328986167907715
    4. 'If' → logprob: -12.203986167907715
    5. '#' → logprob: -13.203986167907715
    6. '       ' → logprob: -14.703986167907715
    7. '   ' → logprob: -15.703986167907715
    8. '    ' → logprob: -16.45398712158203
    9. '	if' → logprob: -16.82898712158203
    10. '```' → logprob: -17.20398712158203

Token 241: ' att' (ID: 1927)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07893947511911392
    2. ' if' → logprob: -2.578939437866211
    3. 'size' → logprob: -10.953939437866211
    4. 's' → logprob: -11.078939437866211
    5. '           ' → logprob: -11.578939437866211
    6. 'elif' → logprob: -13.078939437866211
    7. ' size' → logprob: -13.453939437866211
    8. '       ' → logprob: -13.578939437866211
    9. '   ' → logprob: -14.328939437866211
    10. '```' → logprob: -14.828939437866211

Token 242: 'ache' (ID: 2285)
  Prédit: 'ache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.653365433216095
    2. 'r' → logprob: -0.778365433216095
    3. 'a' → logprob: -4.778365612030029
    4. 'race' → logprob: -5.028365612030029
    5. 'rac' → logprob: -6.153365612030029
    6. 'ra' → logprob: -6.653365612030029
    7. 'ri' → logprob: -7.528365612030029
    8. 'acha' → logprob: -7.903365612030029
    9. 'rib' → logprob: -8.778365135192871
    10. 't' → logprob: -8.903365135192871

Token 243: ' le' (ID: 505)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22837240993976593
    2. ' self' → logprob: -1.6033724546432495
    3. ' if' → logprob: -6.353372573852539
    4. 'if' → logprob: -7.103372573852539
    5. '(self' → logprob: -8.603372573852539
    6. ' la' → logprob: -9.853372573852539
    7. ' the' → logprob: -10.228372573852539
    8. '           ' → logprob: -10.728372573852539
    9. 's' → logprob: -10.728372573852539
    10. '[self' → logprob: -10.978372573852539

Token 244: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.9785786271095276
    2. 'b' → logprob: -1.2285785675048828
    3. 'self' → logprob: -2.228578567504883
    4. 'a' → logprob: -2.228578567504883
    5. 'if' → logprob: -2.728578567504883
    6. 'parent' → logprob: -3.478578567504883
    7. ' if' → logprob: -5.603578567504883
    8. ' plus' → logprob: -5.728578567504883
    9. 'sm' → logprob: -5.853578567504883
    10. '```' → logprob: -5.978578567504883

Token 245: ' petit' (ID: 20577)
  Prédit: ' petit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petit' → logprob: -0.4418827295303345
    2. 'pet' → logprob: -1.0668827295303345
    3. ' small' → logprob: -5.441882610321045
    4. 'small' → logprob: -5.816882610321045
    5. '```' → logprob: -6.566882610321045
    6. '   ' → logprob: -7.066882610321045
    7. ' pet' → logprob: -7.191882610321045
    8. ' petite' → logprob: -7.566882610321045
    9. 'grand' → logprob: -7.691882610321045
    10. 'size' → logprob: -7.691882610321045

Token 246: ' arbre' (ID: 164180)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1043453216552734
    2. 'e' → logprob: -1.9793453216552734
    3. ' des' → logprob: -2.1043453216552734
    4. '_' → logprob: -2.8543453216552734
    5. ' a' → logprob: -3.3543453216552734
    6. 'self' → logprob: -3.4793453216552734
    7. 'size' → logprob: -3.4793453216552734
    8. ' à' → logprob: -3.4793453216552734
    9. 's' → logprob: -3.6043453216552734
    10. 'des' → logprob: -3.8543453216552734

Token 247: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02637949399650097
    2. 'à' → logprob: -3.7763795852661133
    3. ' au' → logprob: -6.151379585266113
    4. 'au' → logprob: -7.651379585266113
    5. ' a' → logprob: -7.901379585266113
    6. ''à' → logprob: -9.901379585266113
    7. 'a' → logprob: -10.651379585266113
    8. 's' → logprob: -11.276379585266113
    9. '’à' → logprob: -11.776379585266113
    10. ' ' → logprob: -11.776379585266113

Token 248: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.17075639963150024
    2. ' plus' → logprob: -1.9207563400268555
    3. 'a' → logprob: -5.0457563400268555
    4. ' a' → logprob: -6.7957563400268555
    5. 'b' → logprob: -6.9207563400268555
    6. '```' → logprob: -7.1707563400268555
    7. 'self' → logprob: -7.5457563400268555
    8. '#' → logprob: -9.295756340026855
    9. ' ' → logprob: -9.295756340026855
    10. 'grand' → logprob: -9.420756340026855

Token 249: ' grand' (ID: 6363)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.0023996743839234114
    2. ' grand' → logprob: -6.627399444580078
    3. 'large' → logprob: -7.627399444580078
    4. 'pet' → logprob: -8.627399444580078
    5. 'tail' → logprob: -8.877399444580078
    6. 'b' → logprob: -9.377399444580078
    7. '```' → logprob: -10.252399444580078
    8. 'larg' → logprob: -10.627399444580078
    9. 'a' → logprob: -10.752399444580078
    10. 'g' → logprob: -11.127399444580078

Token 250: ' pour' (ID: 1930)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03155805915594101
    2. 'if' → logprob: -4.156558036804199
    3. ':' → logprob: -4.531558036804199
    4. ',' → logprob: -6.656558036804199
    5. ' a' → logprob: -7.406558036804199
    6. '   ' → logprob: -7.531558036804199
    7. '           ' → logprob: -7.906558036804199
    8. 'a' → logprob: -8.4065580368042
    9. '       ' → logprob: -8.9065580368042
    10. ' :' → logprob: -9.0315580368042

Token 251: ' équilibr' (ID: 163890)
  Prédit: 'optim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'optim' → logprob: -0.3351820707321167
    2. ' minim' → logprob: -2.3351821899414062
    3. ' optimiser' → logprob: -2.4601821899414062
    4. 'min' → logprob: -2.7101821899414062
    5. '   ' → logprob: -4.460182189941406
    6. ' optim' → logprob: -4.835182189941406
    7. ' améliorer' → logprob: -5.835182189941406
    8. ' éviter' → logprob: -5.835182189941406
    9. ' garder' → logprob: -6.210182189941406
    10. ' réduire' → logprob: -6.585182189941406

Token 252: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -8.64970643306151e-05
    2. 'rer' → logprob: -9.500086784362793
    3. 'e' → logprob: -11.625086784362793
    4. 'r' → logprob: -14.000086784362793
    5. ' er' → logprob: -14.875086784362793
    6. 'ir' → logprob: -15.125086784362793
    7. '```' → logprob: -15.125086784362793
    8. '   ' → logprob: -15.375086784362793
    9. 'é' → logprob: -15.500086784362793
    10. 'eer' → logprob: -16.750085830688477

Token 253: '
' (ID: 198)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4749162495136261
    2. '           ' → logprob: -1.4749162197113037
    3. 'self' → logprob: -2.4749162197113037
    4. '(self' → logprob: -3.4749162197113037
    5. ' if' → logprob: -4.099916458129883
    6. 'if' → logprob: -4.974916458129883
    7. '       ' → logprob: -5.224916458129883
    8. ' the' → logprob: -5.599916458129883
    9. ' a' → logprob: -7.599916458129883
    10. '               ' → logprob: -8.224916458129883

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17704346776008606
    2. ' if' → logprob: -2.3020434379577637
    3. 'if' → logprob: -4.177043437957764
    4. '               ' → logprob: -4.427043437957764
    5. '
' → logprob: -4.677043437957764
    6. '            
' → logprob: -4.677043437957764
    7. ' 
' → logprob: -4.927043437957764
    8. 'self' → logprob: -6.052043437957764
    9. '       ' → logprob: -6.052043437957764
    10. ' self' → logprob: -7.177043437957764

Token 255: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12748193740844727
    2. ' if' → logprob: -2.1274819374084473
    3. '           ' → logprob: -7.502481937408447
    4. '       ' → logprob: -14.627481460571289
    5. '               ' → logprob: -14.752481460571289
    6. 'If' → logprob: -15.377481460571289
    7. '	if' → logprob: -15.502481460571289
    8. '   ' → logprob: -15.627481460571289
    9. '```' → logprob: -15.627481460571289
    10. '            ' → logprob: -16.37748146057129

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011048170737922192
    2. ' self' → logprob: -4.511048316955566
    3. '(self' → logprob: -15.886048316955566
    4. '	self' → logprob: -15.886048316955566
    5. '[self' → logprob: -16.88604736328125
    6. '   ' → logprob: -17.01104736328125
    7. 's' → logprob: -17.13604736328125
    8. 'elf' → logprob: -17.26104736328125
    9. ':self' → logprob: -19.01104736328125
    10. '=self' → logprob: -19.01104736328125

Token 257: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -2.570319702499546e-05
    2. 'size' → logprob: -10.625025749206543
    3. '.' → logprob: -14.250025749206543
    4. '.parent' → logprob: -15.000025749206543
    5. ' size' → logprob: -15.875025749206543
    6. '	size' → logprob: -16.750024795532227
    7. '.rank' → logprob: -17.000024795532227
    8. '<size' → logprob: -17.125024795532227
    9. ' .' → logprob: -17.625024795532227
    10. ':size' → logprob: -18.250024795532227

Token 258: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -3.128163257315464e-07
    2. 'a' → logprob: -15.25
    3. '[' → logprob: -17.5
    4. '[b' → logprob: -18.375
    5. ' [' → logprob: -18.5
    6. ' a' → logprob: -18.75
    7. '(a' → logprob: -21.125
    8. '   ' → logprob: -21.25
    9. '[
' → logprob: -21.375
    10. '[A' → logprob: -21.75

Token 259: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2637360990047455
    2. ']' → logprob: -2.0137360095977783
    3. ' <' → logprob: -2.3887360095977783
    4. ']<' → logprob: -5.138736248016357
    5. '[' → logprob: -7.763736248016357
    6. '<a' → logprob: -9.0137357711792
    7. '<b' → logprob: -9.8887357711792
    8. '[a' → logprob: -10.0137357711792
    9. '<size' → logprob: -10.7637357711792
    10. '>' → logprob: -11.0137357711792

Token 260: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47415709495544434
    2. ' <' → logprob: -0.9741570949554443
    3. '<size' → logprob: -10.224157333374023
    4. '<a' → logprob: -10.724157333374023
    5. '<b' → logprob: -11.724157333374023
    6. '[' → logprob: -12.724157333374023
    7. '<len' → logprob: -13.099157333374023
    8. '<int' → logprob: -13.599157333374023
    9. 'a' → logprob: -13.974157333374023
    10. '<class' → logprob: -14.224157333374023

Token 261: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804171830415726
    2. ' self' → logprob: -3.288041830062866
    3. 'b' → logprob: -16.538042068481445
    4. '   ' → logprob: -17.038042068481445
    5. '[self' → logprob: -17.288042068481445
    6. '=self' → logprob: -17.538042068481445
    7. '	self' → logprob: -18.163042068481445
    8. ' ' → logprob: -18.538042068481445
    9. '(self' → logprob: -19.288042068481445
    10. ' b' → logprob: -19.788042068481445

Token 262: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.16036486625671387
    2. 'size' → logprob: -1.9103648662567139
    3. ' size' → logprob: -8.910365104675293
    4. '_size' → logprob: -12.910365104675293
    5. '.' → logprob: -13.785365104675293
    6. ' .' → logprob: -14.535365104675293
    7. 'Size' → logprob: -15.035365104675293
    8. 's' → logprob: -15.035365104675293
    9. '	size' → logprob: -15.160365104675293
    10. 'siz' → logprob: -15.160365104675293

Token 263: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.5577775128767826e-06
    2. 'b' → logprob: -13.125005722045898
    3. '[' → logprob: -13.250005722045898
    4. '[a' → logprob: -13.500005722045898
    5. ' [' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.2500057220459
    7. ' b' → logprob: -16.8750057220459
    8. '[self' → logprob: -17.0000057220459
    9. '```' → logprob: -18.1250057220459
    10. '[B' → logprob: -19.0000057220459

Token 264: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.09011716395616531
    2. ']:
' → logprob: -2.4651172161102295
    3. ']' → logprob: -7.21511697769165
    4. ']:
' → logprob: -8.090117454528809
    5. ':' → logprob: -9.340117454528809
    6. ' ]' → logprob: -10.590117454528809
    7. '       ' → logprob: -11.965117454528809
    8. ']:

' → logprob: -12.590117454528809
    9. ':
' → logprob: -12.965117454528809
    10. '           ' → logprob: -13.340117454528809

Token 265: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0812956914305687
    2. ' a' → logprob: -3.2062957286834717
    3. '           ' → logprob: -3.9562957286834717
    4. ' b' → logprob: -4.956295490264893
    5. 'b' → logprob: -5.581295490264893
    6. 'a' → logprob: -5.956295490264893
    7. ' self' → logprob: -7.331295490264893
    8. ' =' → logprob: -7.331295490264893
    9. ')' → logprob: -7.706295490264893
    10. '[a' → logprob: -7.706295490264893

Token 266: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.582255482673645
    2. ' a' → logprob: -0.832255482673645
    3. 'self' → logprob: -5.7072553634643555
    4. ' self' → logprob: -6.2072553634643555
    5. '               ' → logprob: -7.3322553634643555
    6. '           ' → logprob: -8.457255363464355
    7. 'b' → logprob: -10.207255363464355
    8. ' b' → logprob: -10.207255363464355
    9. '(a' → logprob: -12.207255363464355
    10. '   ' → logprob: -12.332255363464355

Token 267: ',' (ID: 11)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.1375592052936554
    2. ']' → logprob: -2.637559175491333
    3. ',' → logprob: -3.262559175491333
    4. ' ],' → logprob: -4.762559413909912
    5. ' ,' → logprob: -4.887559413909912
    6. ',b' → logprob: -7.137559413909912
    7. ',a' → logprob: -7.637559413909912
    8. ' ]' → logprob: -7.637559413909912
    9. ' =' → logprob: -7.887559413909912
    10. 'self' → logprob: -9.637558937072754

Token 268: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009115827269852161
    2. ' b' → logprob: -7.000911712646484
    3. '           ' → logprob: -18.375911712646484
    4. '       ' → logprob: -20.000911712646484
    5. '               ' → logprob: -20.000911712646484
    6. '        ' → logprob: -20.000911712646484
    7. '<|end|>' → logprob: -20.125911712646484
    8. '    ' → logprob: -20.500911712646484
    9. '	b' → logprob: -21.125911712646484
    10. '   ' → logprob: -21.375911712646484

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141898095607758
    2. ' =' → logprob: -1.7014189958572388
    3. '=a' → logprob: -12.70141887664795
    4. ',' → logprob: -13.70141887664795
    5. '=b' → logprob: -14.82641887664795
    6. '<|end|>' → logprob: -15.45141887664795
    7. ')=' → logprob: -15.57641887664795
    8. ')' → logprob: -15.95141887664795
    9. 'a' → logprob: -16.076419830322266
    10. ' ' → logprob: -16.701419830322266

Token 270: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38687190413475037
    2. ' b' → logprob: -1.1368719339370728
    3. '	b' → logprob: -14.136872291564941
    4. ' ' → logprob: -16.761871337890625
    5. '    ' → logprob: -17.011871337890625
    6. '   ' → logprob: -17.136871337890625
    7. ')b' → logprob: -17.761871337890625
    8. ' ' → logprob: -18.261871337890625
    9. '```' → logprob: -19.636871337890625
    10. ' б' → logprob: -19.636871337890625

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016056424006819725
    2. '<|end|>' → logprob: -4.641056537628174
    3. ',a' → logprob: -5.516056537628174
    4. 'a' → logprob: -6.516056537628174
    5. ' ,' → logprob: -8.016056060791016
    6. ' a' → logprob: -8.766056060791016
    7. ' ' → logprob: -9.016056060791016
    8. ',b' → logprob: -9.391056060791016
    9. '<|end|>' → logprob: -10.641056060791016
    10. ',
' → logprob: -10.641056060791016

Token 272: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326186656951904
    2. ' a' → logprob: -1.313261866569519
    3. '	a' → logprob: -16.938261032104492
    4. ' ' → logprob: -20.063261032104492
    5. ',a' → logprob: -20.438261032104492
    6. '[a' → logprob: -20.938261032104492
    7. ')a' → logprob: -21.063261032104492
    8. ' ' → logprob: -21.438261032104492
    9. '_a' → logprob: -21.563261032104492
    10. '>a' → logprob: -21.563261032104492

Token 273: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025946807581931353
    2. '
' → logprob: -6.752594470977783
    3. '            
' → logprob: -7.002594470977783
    4. 'self' → logprob: -8.627594947814941
    5. '               ' → logprob: -8.877594947814941
    6. '  
' → logprob: -9.877594947814941
    7. '    
' → logprob: -10.377594947814941
    8. ' 
' → logprob: -10.502594947814941
    9. '           
' → logprob: -10.877594947814941
    10. '                
' → logprob: -11.002594947814941

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01006652694195509
    2. '
' → logprob: -4.760066509246826
    3. '            
' → logprob: -7.135066509246826
    4. 'self' → logprob: -8.010066986083984
    5. '               ' → logprob: -8.760066986083984
    6. ' self' → logprob: -10.510066986083984
    7. '  
' → logprob: -10.510066986083984
    8. '    
' → logprob: -10.885066986083984
    9. ' 
' → logprob: -11.010066986083984
    10. '                
' → logprob: -11.010066986083984

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0404997318983078
    2. '           ' → logprob: -3.540499687194824
    3. ' self' → logprob: -4.540499687194824
    4. '   ' → logprob: -11.290499687194824
    5. '               ' → logprob: -12.165499687194824
    6. '       ' → logprob: -13.165499687194824
    7. '
' → logprob: -13.540499687194824
    8. '	self' → logprob: -13.915499687194824
    9. '```' → logprob: -14.665499687194824
    10. '            
' → logprob: -14.915499687194824

Token 276: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.004094666335731745
    2. '.size' → logprob: -5.50409460067749
    3. 'parent' → logprob: -11.129095077514648
    4. '.' → logprob: -14.254095077514648
    5. ' .' → logprob: -14.379095077514648
    6. 'size' → logprob: -15.879095077514648
    7. '.parents' → logprob: -16.12909507751465
    8. '[parent' → logprob: -17.25409507751465
    9. ',parent' → logprob: -17.75409507751465
    10. '.Parent' → logprob: -17.87909507751465

Token 277: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.981667537620524e-06
    2. 'b' → logprob: -13.250001907348633
    3. '[a' → logprob: -15.750001907348633
    4. '[' → logprob: -17.000001907348633
    5. ' [' → logprob: -19.250001907348633
    6. '```' → logprob: -19.375001907348633
    7. '[self' → logprob: -19.500001907348633
    8. '   ' → logprob: -21.000001907348633
    9. ' b' → logprob: -21.375001907348633
    10. '	b' → logprob: -21.625001907348633

Token 278: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002010837197303772
    2. ']=' → logprob: -6.752010822296143
    3. '=' → logprob: -7.377010822296143
    4. ' =' → logprob: -8.7520112991333
    5. ' ]' → logprob: -9.8770112991333
    6. '[' → logprob: -12.8770112991333
    7. '[a' → logprob: -13.2520112991333
    8. '=a' → logprob: -14.5020112991333
    9. 'a' → logprob: -15.2520112991333
    10. ')' → logprob: -16.252010345458984

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327024102211
    2. ' =' → logprob: -1.3132702112197876
    3. '=a' → logprob: -11.688270568847656
    4. '[' → logprob: -16.188270568847656
    5. '＝' → logprob: -17.313270568847656
    6. '=b' → logprob: -17.938270568847656
    7. '[a' → logprob: -18.313270568847656
    8. ']=' → logprob: -18.563270568847656
    9. 'a' → logprob: -18.813270568847656
    10. ']' → logprob: -19.438270568847656

Token 280: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804149478673935
    2. ' a' → logprob: -3.288041591644287
    3. '	a' → logprob: -17.163042068481445
    4. '[a' → logprob: -21.288042068481445
    5. ''a' → logprob: -21.788042068481445
    6. '>a' → logprob: -22.288042068481445
    7. '_a' → logprob: -22.538042068481445
    8. '   ' → logprob: -22.788042068481445
    9. '#a' → logprob: -22.788042068481445
    10. ')a' → logprob: -23.163042068481445

Token 281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026923883706331253
    2. '
' → logprob: -3.776923894882202
    3. 'self' → logprob: -5.651923656463623
    4. ' self' → logprob: -10.026924133300781
    5. '<|end|>' → logprob: -10.151924133300781
    6. '            
' → logprob: -10.526924133300781
    7. '               ' → logprob: -11.026924133300781
    8. '[self' → logprob: -12.276924133300781
    9. ',' → logprob: -12.401924133300781
    10. '```' → logprob: -12.526924133300781

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0044459011405706406
    2. 'self' → logprob: -5.754446029663086
    3. '
' → logprob: -6.754446029663086
    4. ' self' → logprob: -9.379446029663086
    5. '            
' → logprob: -11.629446029663086
    6. ' 
' → logprob: -13.379446029663086
    7. '               ' → logprob: -13.629446029663086
    8. '[self' → logprob: -14.254446029663086
    9. '   ' → logprob: -14.379446029663086
    10. ',' → logprob: -14.504446029663086

Token 283: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001176416757516563
    2. ' self' → logprob: -6.751176357269287
    3. '           ' → logprob: -12.001176834106445
    4. '[self' → logprob: -18.376176834106445
    5. '               ' → logprob: -18.626176834106445
    6. '   ' → logprob: -19.126176834106445
    7. '       ' → logprob: -19.626176834106445
    8. '
' → logprob: -19.751176834106445
    9. '	self' → logprob: -20.001176834106445
    10. '```' → logprob: -20.126176834106445

Token 284: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.723352049040841e-06
    2. 'size' → logprob: -12.500004768371582
    3. '.' → logprob: -14.500004768371582
    4. ' .' → logprob: -14.875004768371582
    5. ' size' → logprob: -18.375003814697266
    6. '.s' → logprob: -18.750003814697266
    7. '].' → logprob: -18.875003814697266
    8. ').' → logprob: -18.875003814697266
    9. '.parent' → logprob: -18.875003814697266
    10. '	size' → logprob: -18.875003814697266

Token 285: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.088346359931165e-07
    2. 'a' → logprob: -14.000000953674316
    3. '```' → logprob: -17.875
    4. '[' → logprob: -19.125
    5. ' [' → logprob: -20.125
    6. '
' → logprob: -20.5
    7. ' a' → logprob: -21.25
    8. '[
' → logprob: -21.75
    9. '	a' → logprob: -22.0
    10. '[self' → logprob: -22.125

Token 286: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5613730549812317
    2. ' +=' → logprob: -1.061372995376587
    3. ']+=' → logprob: -2.561372995376587
    4. ']' → logprob: -5.061373233795166
    5. ' ]' → logprob: -10.811372756958008
    6. '+' → logprob: -11.061372756958008
    7. ')' → logprob: -11.311372756958008
    8. ']+' → logprob: -12.561372756958008
    9. '[' → logprob: -12.811372756958008
    10. '}' → logprob: -13.686372756958008

Token 287: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014172682538628578
    2. ' +=' → logprob: -4.264172554016113
    3. ']+=' → logprob: -11.639172554016113
    4. '+' → logprob: -15.264172554016113
    5. '+=(' → logprob: -15.764172554016113
    6. '+='' → logprob: -18.51417350769043
    7. '[' → logprob: -18.51417350769043
    8. '+="' → logprob: -19.26417350769043
    9. '=' → logprob: -19.51417350769043
    10. '```' → logprob: -19.76417350769043

Token 288: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023245595395565033
    2. ' self' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.398244857788086
    4. '	self' → logprob: -17.648244857788086
    5. 'b' → logprob: -18.648244857788086
    6. '(self' → logprob: -18.773244857788086
    7. '[self' → logprob: -18.773244857788086
    8. ' ' → logprob: -18.898244857788086
    9. '       ' → logprob: -19.398244857788086
    10. '```' → logprob: -19.898244857788086

Token 289: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.3902033970225602e-05
    2. 'size' → logprob: -11.250014305114746
    3. ' .' → logprob: -14.125014305114746
    4. '.' → logprob: -16.62501335144043
    5. ' size' → logprob: -17.37501335144043
    6. '[size' → logprob: -18.50001335144043
    7. '	size' → logprob: -18.87501335144043
    8. '<size' → logprob: -20.12501335144043
    9. ':size' → logprob: -20.62501335144043
    10. 'siz' → logprob: -21.25001335144043

Token 290: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: 0.0
    2. 'b' → logprob: -17.875
    3. '[' → logprob: -18.625
    4. ' [' → logprob: -18.75
    5. '[a' → logprob: -20.125
    6. '[
' → logprob: -22.25
    7. '	b' → logprob: -23.25
    8. '```' → logprob: -23.25
    9. '[c' → logprob: -23.375
    10. ' b' → logprob: -23.625

Token 291: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.05050269886851311
    2. ' solve' → logprob: -4.050502777099609
    3. ' process' → logprob: -4.300502777099609
    4. ' connected' → logprob: -5.675502777099609
    5. ' calculate' → logprob: -5.800502777099609
    6. ' read' → logprob: -6.050502777099609
    7. ' compute' → logprob: -6.300502777099609
    8. ' connect' → logprob: -6.550502777099609
    9. ' parse' → logprob: -6.800502777099609
    10. ' solution' → logprob: -7.300502777099609

Token 294: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.12258882028982e-05
    2. '()' → logprob: -10.12506103515625
    3. ' ():' → logprob: -11.12506103515625
    4. '(' → logprob: -12.12506103515625
    5. '():
' → logprob: -14.37506103515625
    6. '()>' → logprob: -16.50006103515625
    7. ':' → logprob: -16.62506103515625
    8. '(:' → logprob: -16.62506103515625
    9. ' ()' → logprob: -17.37506103515625
    10. '(":' → logprob: -18.00006103515625

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39080655574798584
    2. 'n' → logprob: -1.3908065557479858
    3. ' n' → logprob: -2.6408066749572754
    4. 'import' → logprob: -6.265806674957275
    5. ' import' → logprob: -6.890806674957275
    6. '	n' → logprob: -9.015806198120117
    7. '(n' → logprob: -9.015806198120117
    8. '```' → logprob: -9.390806198120117
    9. '    
' → logprob: -11.765806198120117
    10. '  ' → logprob: -11.765806198120117

Token 296: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.25745660066604614
    2. 'n' → logprob: -1.5074565410614014
    3. '   ' → logprob: -6.0074567794799805
    4. ' import' → logprob: -6.0074567794799805
    5. 'import' → logprob: -7.7574567794799805
    6. ' input' → logprob: -9.75745677947998
    7. ' N' → logprob: -10.25745677947998
    8. 'N' → logprob: -10.88245677947998
    9. '	n' → logprob: -11.38245677947998
    10. ' t' → logprob: -11.50745677947998

Token 297: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.049706172198057175
    2. ' n' → logprob: -3.424706220626831
    3. 'import' → logprob: -4.549705982208252
    4. '#' → logprob: -6.549705982208252
    5. '   ' → logprob: -6.674705982208252
    6. 'input' → logprob: -7.049705982208252
    7. ' import' → logprob: -7.049705982208252
    8. 'N' → logprob: -8.04970645904541
    9. ' input' → logprob: -8.29970645904541
    10. ' #' → logprob: -9.79970645904541

Token 298: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017186157638207078
    2. '():' → logprob: -6.751718521118164
    3. '   ' → logprob: -8.001718521118164
    4. ' =' → logprob: -8.751718521118164
    5. 'import' → logprob: -10.751718521118164
    6. '()
' → logprob: -12.001718521118164
    7. '=' → logprob: -12.251718521118164
    8. 'def' → logprob: -12.251718521118164
    9. ' ()' → logprob: -13.001718521118164
    10. '()]' → logprob: -13.126718521118164

Token 299: ' entr' (ID: 7072)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17164187133312225
    2. 'l' → logprob: -2.6716418266296387
    3. 'import' → logprob: -4.546641826629639
    4. 'entr' → logprob: -4.546641826629639
    5. 'input' → logprob: -4.546641826629639
    6. ' entr' → logprob: -4.671641826629639
    7. 'd' → logprob: -4.671641826629639
    8. ' n' → logprob: -4.796641826629639
    9. ' données' → logprob: -4.796641826629639
    10. 'don' → logprob: -5.421641826629639

Token 300: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.322364866733551
    2. 'ees' → logprob: -1.6973648071289062
    3. 'ies' → logprob: -2.8223648071289062
    4. 'rees' → logprob: -3.8223648071289062
    5. 'es' → logprob: -5.822364807128906
    6. '   ' → logprob: -6.072364807128906
    7. 'ée' → logprob: -6.197364807128906
    8. 'r' → logprob: -6.697364807128906
    9. 'e' → logprob: -7.072364807128906
    10. '```' → logprob: -7.697364807128906

Token 301: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3584316670894623
    2. 'n' → logprob: -1.2334316968917847
    3. ' n' → logprob: -4.858431816101074
    4. 'import' → logprob: -6.608431816101074
    5. '(n' → logprob: -7.483431816101074
    6. '()' → logprob: -9.608431816101074
    7. 'input' → logprob: -9.983431816101074
    8. ',n' → logprob: -9.983431816101074
    9. ' import' → logprob: -11.233431816101074
    10. ':' → logprob: -11.358431816101074

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03854998201131821
    2. 'n' → logprob: -3.2885499000549316
    3. ' n' → logprob: -7.913549900054932
    4. 'import' → logprob: -9.16355037689209
    5. '(n' → logprob: -10.78855037689209
    6. 'N' → logprob: -12.78855037689209
    7. '	n' → logprob: -13.03855037689209
    8. '()' → logprob: -13.53855037689209
    9. '```' → logprob: -13.53855037689209
    10. '   ' → logprob: -13.78855037689209

Token 303: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.05438214913010597
    2. ' n' → logprob: -3.054382085800171
    3. '   ' → logprob: -5.92938232421875
    4. 'N' → logprob: -6.17938232421875
    5. 'import' → logprob: -7.92938232421875
    6. 'input' → logprob: -8.17938232421875
    7. ' input' → logprob: -8.30438232421875
    8. ' N' → logprob: -9.17938232421875
    9. ' import' → logprob: -10.80438232421875
    10. '	n' → logprob: -11.05438232421875

Token 304: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000596043246332556
    2. ' =' → logprob: -8.125596046447754
    3. '=' → logprob: -9.250596046447754
    4. ',k' → logprob: -9.375596046447754
    5. ',m' → logprob: -9.750596046447754
    6. ',s' → logprob: -11.000596046447754
    7. ' ,' → logprob: -11.375596046447754
    8. ',n' → logprob: -11.375596046447754
    9. ',q' → logprob: -12.500596046447754
    10. ',p' → logprob: -12.875596046447754

Token 305: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0932747945189476
    2. 'k' → logprob: -2.4682748317718506
    3. ' m' → logprob: -6.2182745933532715
    4. 'q' → logprob: -6.7182745933532715
    5. 'p' → logprob: -8.21827507019043
    6. 'w' → logprob: -8.34327507019043
    7. ' k' → logprob: -8.34327507019043
    8. 'd' → logprob: -9.34327507019043
    9. 'r' → logprob: -9.96827507019043
    10. 't' → logprob: -10.09327507019043

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6330353617668152
    2. '=' → logprob: -0.7580353617668152
    3. ',' → logprob: -7.758035182952881
    4. '=input' → logprob: -12.508035659790039
    5. ')' → logprob: -13.758035659790039
    6. '=sys' → logprob: -13.758035659790039
    7. ' ' → logprob: -14.133035659790039
    8. ')=' → logprob: -14.633035659790039
    9. '=int' → logprob: -15.258035659790039
    10. '   ' → logprob: -15.758035659790039

Token 307: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0019308974733576179
    2. 'map' → logprob: -6.2519307136535645
    3. ' ' → logprob: -13.626931190490723
    4. ' sys' → logprob: -14.001931190490723
    5. '	map' → logprob: -16.626930236816406
    6. ' list' → logprob: -16.876930236816406
    7. ' [' → logprob: -17.001930236816406
    8. '[' → logprob: -17.126930236816406
    9. '(map' → logprob: -17.876930236816406
    10. 'm' → logprob: -18.126930236816406

Token 308: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00022940391500014812
    2. '(' → logprob: -8.500229835510254
    3. '(input' → logprob: -10.750229835510254
    4. '(str' → logprob: -12.875229835510254
    5. 'int' → logprob: -13.750229835510254
    6. '(
' → logprob: -15.125229835510254
    7. '(map' → logprob: -15.625229835510254
    8. '(sys' → logprob: -15.750229835510254
    9. '(list' → logprob: -16.250228881835938
    10. ' (' → logprob: -16.875228881835938

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21128615736961365
    2. ',input' → logprob: -2.0862860679626465
    3. '(input' → logprob: -3.3362860679626465
    4. '(sys' → logprob: -3.8362860679626465
    5. 'input' → logprob: -4.9612860679626465
    6. 'sys' → logprob: -6.9612860679626465
    7. '(' → logprob: -7.3362860679626465
    8. ' input' → logprob: -8.711286544799805
    9. '(),' → logprob: -9.211286544799805
    10. ' ,' → logprob: -9.336286544799805

Token 310: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08058832585811615
    2. ' input' → logprob: -2.5805883407592773
    3. 'sys' → logprob: -6.580588340759277
    4. ' sys' → logprob: -8.080588340759277
    5. ' ' → logprob: -15.705588340759277
    6. 'int' → logprob: -16.08058738708496
    7. 'str' → logprob: -16.45558738708496
    8. 'open' → logprob: -16.83058738708496
    9. '   ' → logprob: -17.20558738708496
    10. '=input' → logprob: -17.70558738708496

Token 311: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004938785452395678
    2. '.' → logprob: -5.87993860244751
    3. '.argv' → logprob: -6.25493860244751
    4. '.readline' → logprob: -8.879939079284668
    5. '.stdout' → logprob: -10.379939079284668
    6. '.std' → logprob: -11.004939079284668
    7. '.st' → logprob: -12.629939079284668
    8. '.setdefault' → logprob: -12.754939079284668
    9. ').' → logprob: -12.879939079284668
    10. ' .' → logprob: -13.004939079284668

Token 312: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00041482248343527317
    2. '.stdin' → logprob: -7.875414848327637
    3. '.' → logprob: -10.875414848327637
    4. '.read' → logprob: -11.625414848327637
    5. ').' → logprob: -13.000414848327637
    6. '.readlines' → logprob: -13.375414848327637
    7. '().' → logprob: -14.125414848327637
    8. ' .' → logprob: -14.125414848327637
    9. '.argv' → logprob: -15.000414848327637
    10. '.imread' → logprob: -15.750414848327637

Token 313: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.125015258789062
    3. '())' → logprob: -16.000015258789062
    4. ' ().' → logprob: -17.250015258789062
    5. '(' → logprob: -17.625015258789062
    6. '()[' → logprob: -19.125015258789062
    7. '()
' → logprob: -19.375015258789062
    8. '().
' → logprob: -20.250015258789062
    9. '().__' → logprob: -20.750015258789062
    10. '(),' → logprob: -21.125015258789062

Token 314: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20506398379802704
    2. 'strip' → logprob: -1.7050639390945435
    3. 'rstrip' → logprob: -5.705063819885254
    4. 'read' → logprob: -8.080063819885254
    5. ' split' → logprob: -12.955063819885254
    6. ' strip' → logprob: -13.705063819885254
    7. '().' → logprob: -14.455063819885254
    8. 'decode' → logprob: -14.455063819885254
    9. '(split' → logprob: -15.455063819885254
    10. ')' → logprob: -15.580063819885254

Token 315: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08491995930671692
    2. ')' → logprob: -3.0849199295043945
    3. '()' → logprob: -3.3349199295043945
    4. '(' → logprob: -10.334919929504395
    5. '())
' → logprob: -10.584919929504395
    6. '()
' → logprob: -13.584919929504395
    7. '()))' → logprob: -13.709919929504395
    8. ' )' → logprob: -14.459919929504395
    9. '(),' → logprob: -14.584919929504395
    10. '))' → logprob: -14.959919929504395

Token 316: '   ' (ID: 271)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.362921804189682
    2. '   ' → logprob: -1.7379218339920044
    3. ' uf' → logprob: -2.737921714782715
    4. '    
' → logprob: -4.237921714782715
    5. '
' → logprob: -4.862921714782715
    6. ' 
' → logprob: -4.987921714782715
    7. 'u' → logprob: -5.112921714782715
    8. 'n' → logprob: -5.362921714782715
    9. ' conveyors' → logprob: -5.362921714782715
    10. 'union' → logprob: -6.112921714782715

Token 317: ' arms' (ID: 21157)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.008083290420472622
    2. 'ufs' → logprob: -5.383083343505859
    3. ' uf' → logprob: -7.258083343505859
    4. 'union' → logprob: -7.258083343505859
    5. 'u' → logprob: -7.508083343505859
    6. '   ' → logprob: -8.13308334350586
    7. 'lines' → logprob: -8.25808334350586
    8. 'arms' (adapté à ' arms') → logprob: -8.50808334350586
    9. '    
' → logprob: -9.00808334350586
    10. 'con' → logprob: -9.25808334350586

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02650638297200203
    2. '=' → logprob: -3.6515064239501953
    3. '=[]' → logprob: -9.151506423950195
    4. '_' → logprob: -9.776506423950195
    5. 's' → logprob: -10.776506423950195
    6. '_positions' → logprob: -12.776506423950195
    7. '   ' → logprob: -12.901506423950195
    8. '[]' → logprob: -13.151506423950195
    9. ',' → logprob: -13.401506423950195
    10. '_ids' → logprob: -13.401506423950195

Token 319: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.523108720779419
    2. '[' → logprob: -1.023108720779419
    3. ' [' → logprob: -3.773108720779419
    4. ' []' → logprob: -4.52310848236084
    5. '[list' → logprob: -5.27310848236084
    6. '[m' → logprob: -5.39810848236084
    7. '[int' → logprob: -6.89810848236084
    8. '[n' → logprob: -6.89810848236084
    9. '[s' → logprob: -7.39810848236084
    10. '[len' → logprob: -8.39810848236084

Token 320: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2463635355234146
    2. ' for' → logprob: -1.9963635206222534
    3. '   ' → logprob: -2.496363639831543
    4. '
' → logprob: -9.496363639831543
    5. '	for' → logprob: -10.246363639831543
    6. '    
' → logprob: -11.496363639831543
    7. '<|end|>' → logprob: -11.871363639831543
    8. ' ' → logprob: -12.121363639831543
    9. ' 
' → logprob: -12.996363639831543
    10. 'while' → logprob: -13.121363639831543

Token 321: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009134899592027068
    2. ' for' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.125913619995117
    4. '	for' → logprob: -17.250913619995117
    5. 'arms' → logprob: -18.250913619995117
    6. '
' → logprob: -19.250913619995117
    7. '[' → logprob: -20.125913619995117
    8. '    
' → logprob: -20.375913619995117
    9. 'arm' → logprob: -20.375913619995117
    10. 'n' → logprob: -21.250913619995117

Token 322: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001934469910338521
    2. ' _' → logprob: -6.25193452835083
    3. '_i' → logprob: -12.126934051513672
    4. 'i' → logprob: -15.501934051513672
    5. ' i' → logprob: -15.751934051513672
    6. ' ' → logprob: -16.876934051513672
    7. '_range' → logprob: -16.876934051513672
    8. ' in' → logprob: -17.251934051513672
    9. '_in' → logprob: -18.001934051513672
    10. ' ' → logprob: -18.626934051513672

Token 323: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2261369228363037
    2. 'in' → logprob: -1.6011369228363037
    3. 'range' → logprob: -7.476137161254883
    4. ' ' → logprob: -9.101137161254883
    5. '(' → logprob: -11.601137161254883
    6. '  ' → logprob: -11.851137161254883
    7. 'import' → logprob: -11.976137161254883
    8. '   ' → logprob: -12.851137161254883
    9. 'i' → logprob: -12.976137161254883
    10. 'n' → logprob: -12.976137161254883

Token 324: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.759734732331708e-05
    2. ' range' → logprob: -11.000017166137695
    3. '(range' → logprob: -14.125017166137695
    4. 'ange' → logprob: -16.250017166137695
    5. '	range' → logprob: -17.000017166137695
    6. 'sys' → logprob: -18.875017166137695
    7. '   ' → logprob: -18.875017166137695
    8. ')' → logprob: -19.000017166137695
    9. 'm' → logprob: -19.500017166137695
    10. 'in' → logprob: -19.625017166137695

Token 325: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.50000286102295
    3. '(n' → logprob: -13.75000286102295
    4. 'm' → logprob: -14.37500286102295
    5. ' (' → logprob: -17.625003814697266
    6. '(M' → logprob: -18.375003814697266
    7. ' m' → logprob: -18.625003814697266
    8. ',m' → logprob: -20.250003814697266
    9. ',' → logprob: -21.500003814697266
    10. '	m' → logprob: -21.500003814697266

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055458974093198776
    2. '):
' → logprob: -3.0554590225219727
    3. ')' → logprob: -5.055459022521973
    4. ' ):' → logprob: -7.930459022521973
    5. ':' → logprob: -9.930459022521973
    6. ',' → logprob: -10.555459022521973
    7. ' ):
' → logprob: -11.305459022521973
    8. '):
' → logprob: -11.305459022521973
    9. ' )' → logprob: -11.930459022521973
    10. '   ' → logprob: -12.555459022521973

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38845109939575195
    2. '   ' → logprob: -1.263451099395752
    3. 'arms' → logprob: -3.388451099395752
    4. ' arms' → logprob: -5.388451099395752
    5. 'arm' → logprob: -8.013450622558594
    6. ',' → logprob: -9.388450622558594
    7. '    
' → logprob: -9.513450622558594
    8. '	   ' → logprob: -10.013450622558594
    9. '```' → logprob: -10.263450622558594
    10. 'n' → logprob: -10.388450622558594

Token 328: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7965890765190125
    2. 'u' → logprob: -1.4215891361236572
    3. 'arms' → logprob: -2.0465891361236572
    4. 'x' (adapté à ' x') → logprob: -2.5465891361236572
    5. '   ' → logprob: -3.0465891361236572
    6. ' arms' → logprob: -4.046588897705078
    7. 'l' → logprob: -4.546588897705078
    8. ' a' → logprob: -4.796588897705078
    9. ' u' → logprob: -4.921588897705078
    10. 'i' → logprob: -5.296588897705078

Token 329: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028908250387758017
    2. ',y' → logprob: -6.502890586853027
    3. ' ,' → logprob: -6.877890586853027
    4. '1' → logprob: -8.127890586853027
    5. 'y' → logprob: -11.127890586853027
    6. ',x' → logprob: -11.377890586853027
    7. '_,' → logprob: -12.002890586853027
    8. '0' → logprob: -12.002890586853027
    9. '-' → logprob: -12.752890586853027
    10. 'a' → logprob: -13.002890586853027

Token 330: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02324605919420719
    2. ' y' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.773245811462402
    4. '<|end|>' → logprob: -16.14824676513672
    5. '	y' → logprob: -16.89824676513672
    6. ',y' → logprob: -17.02324676513672
    7. '  
' → logprob: -17.02324676513672
    8. '_y' → logprob: -17.27324676513672
    9. 'x' → logprob: -17.64824676513672
    10. ' 
' → logprob: -17.77324676513672

Token 331: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759449005126953
    2. ' =' → logprob: -0.8259449005126953
    3. ')' → logprob: -12.450944900512695
    4. ',' → logprob: -14.075944900512695
    5. ' ' → logprob: -14.825944900512695
    6. ')=' → logprob: -15.450944900512695
    7. '   ' → logprob: -16.575944900512695
    8. '=sys' → logprob: -17.200944900512695
    9. '=
' → logprob: -17.575944900512695
    10. ' =
' → logprob: -17.575944900512695

Token 332: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6931548714637756
    2. ' map' → logprob: -0.6931548714637756
    3. '	map' → logprob: -12.693155288696289
    4. '    ' → logprob: -13.068155288696289
    5. '   ' → logprob: -13.068155288696289
    6. ' ' → logprob: -15.568155288696289
    7. '  ' → logprob: -15.943155288696289
    8. '(map' → logprob: -17.06815528869629
    9. 'm' → logprob: -17.56815528869629
    10. '_map' → logprob: -18.94315528869629

Token 333: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.080963092041202e-06
    2. 'int' → logprob: -12.875004768371582
    3. '(' → logprob: -14.250004768371582
    4. '<int' → logprob: -14.375004768371582
    5. '=int' → logprob: -14.500004768371582
    6. ',int' → logprob: -15.000004768371582
    7. '[int' → logprob: -15.125004768371582
    8. '(str' → logprob: -15.750004768371582
    9. '(sys' → logprob: -17.2500057220459
    10. ']int' → logprob: -17.7500057220459

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002038083504885435
    2. '(sys' → logprob: -6.25203800201416
    3. ' ,' → logprob: -10.00203800201416
    4. '(),' → logprob: -10.12703800201416
    5. '=sys' → logprob: -11.87703800201416
    6. 'sys' → logprob: -12.00203800201416
    7. '(' → logprob: -12.87703800201416
    8. ',int' → logprob: -12.87703800201416
    9. ',input' → logprob: -13.00203800201416
    10. ',(' → logprob: -13.87703800201416

Token 335: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.16022726893424988
    2. ' sys' → logprob: -1.9102272987365723
    3. '(sys' → logprob: -13.660226821899414
    4. 'int' → logprob: -13.785226821899414
    5. '=sys' → logprob: -14.785226821899414
    6. '	sys' → logprob: -16.035226821899414
    7. 'Sys' → logprob: -16.160226821899414
    8. ')' → logprob: -16.285226821899414
    9. 'str' → logprob: -16.410226821899414
    10. '_sys' → logprob: -16.785226821899414

Token 336: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000181372175575234
    2. 'stdin' → logprob: -8.625181198120117
    3. '.readline' → logprob: -14.500181198120117
    4. '.' → logprob: -14.875181198120117
    5. '.stdout' → logprob: -14.875181198120117
    6. '.std' → logprob: -15.500181198120117
    7. '(stdin' → logprob: -16.125181198120117
    8. '```' → logprob: -16.250181198120117
    9. '.argv' → logprob: -16.375181198120117
    10. '   ' → logprob: -16.500181198120117

Token 337: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00011427151912357658
    2. '().' → logprob: -9.375114440917969
    3. 'sys' → logprob: -10.500114440917969
    4. '(sys' → logprob: -14.875114440917969
    5. '.stdin' → logprob: -15.250114440917969
    6. '.readlines' → logprob: -15.250114440917969
    7. '.' → logprob: -15.500114440917969
    8. 'read' → logprob: -15.625114440917969
    9. '=sys' → logprob: -15.625114440917969
    10. '.read' → logprob: -16.12511444091797

Token 338: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.125015258789062
    3. ' ().' → logprob: -15.500015258789062
    4. '   ' → logprob: -16.875015258789062
    5. '().__' → logprob: -16.875015258789062
    6. '.readline' → logprob: -17.250015258789062
    7. '()).' → logprob: -17.875015258789062
    8. '(' → logprob: -18.000015258789062
    9. '().'' → logprob: -18.500015258789062
    10. '()].' → logprob: -18.625015258789062

Token 339: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'strip' → logprob: -13.750001907348633
    3. ' split' → logprob: -14.250001907348633
    4. '.split' → logprob: -17.375001907348633
    5. '(split' → logprob: -18.125001907348633
    6. 'rstrip' → logprob: -18.250001907348633
    7. 'spl' → logprob: -20.750001907348633
    8. 'plit' → logprob: -21.500001907348633
    9. ')' → logprob: -21.625001907348633
    10. 'read' → logprob: -21.875001907348633

Token 340: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6994735598564148
    2. '())' → logprob: -0.6994735598564148
    3. '()' → logprob: -5.6994733810424805
    4. '())
' → logprob: -5.9494733810424805
    5. ')
' → logprob: -8.07447338104248
    6. '))' → logprob: -11.32447338104248
    7. '())
' → logprob: -11.69947338104248
    8. ' ())' → logprob: -12.19947338104248
    9. '   ' → logprob: -13.07447338104248
    10. '(' → logprob: -13.19947338104248

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010144683765247464
    2. 'arms' → logprob: -7.126014232635498
    3. ')' → logprob: -9.626014709472656
    4. '   ' → logprob: -10.001014709472656
    5. ',' → logprob: -10.251014709472656
    6. '	' → logprob: -10.876014709472656
    7. ' arms' → logprob: -11.251014709472656
    8. '           ' → logprob: -11.376014709472656
    9. '[' → logprob: -12.501014709472656
    10. '	   ' → logprob: -12.751014709472656

Token 342: ' #' (ID: 1069)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.20617690682411194
    2. ' arms' → logprob: -2.081176996231079
    3. '       ' → logprob: -3.206176996231079
    4. '   ' → logprob: -4.4561767578125
    5. 'x' → logprob: -4.8311767578125
    6. ' x' → logprob: -6.7061767578125
    7. 'arm' → logprob: -10.0811767578125
    8. '           ' → logprob: -10.6436767578125
    9. '    ' → logprob: -10.7686767578125
    10. '        ' → logprob: -11.1436767578125

Token 343: ' On' (ID: 2160)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.048776306211948395
    2. 'x' → logprob: -3.298776388168335
    3. ' arms' → logprob: -5.298776149749756
    4. '#' → logprob: -5.423776149749756
    5. '   ' → logprob: -7.173776149749756
    6. ' x' → logprob: -8.548776626586914
    7. '       ' → logprob: -8.923776626586914
    8. 'arm' → logprob: -9.798776626586914
    9. ' #' → logprob: -10.173776626586914
    10. 'ar' → logprob: -11.173776626586914

Token 344: ' note' (ID: 7477)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.12912194430828094
    2. 'x' → logprob: -2.629122018814087
    3. ' arms' → logprob: -3.629122018814087
    4. 'append' → logprob: -4.754121780395508
    5. '#' → logprob: -4.879121780395508
    6. ' x' → logprob: -7.004121780395508
    7. 'continue' → logprob: -7.254121780395508
    8. '   ' → logprob: -7.879121780395508
    9. ' append' → logprob: -7.879121780395508
    10. '       ' → logprob: -8.004121780395508

Token 345: ' y' (ID: 342)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.04499845951795578
    2. 'x' → logprob: -3.5449984073638916
    3. ' arms' → logprob: -4.794998645782471
    4. '   ' → logprob: -6.169998645782471
    5. 'que' → logprob: -6.544998645782471
    6. 'les' → logprob: -6.919998645782471
    7. ' that' → logprob: -7.044998645782471
    8. ' que' → logprob: -7.669998645782471
    9. 'that' → logprob: -7.794998645782471
    10. '(x' → logprob: -8.169998168945312

Token 346: '-' (ID: 12)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.1485990732908249
    2. '-' → logprob: -2.773599147796631
    3. '-=' → logprob: -3.148599147796631
    4. ' -' → logprob: -3.648599147796631
    5. '   ' → logprob: -5.648599147796631
    6. ' ' → logprob: -7.148599147796631
    7. ',' → logprob: -7.648599147796631
    8. '.append' → logprob: -8.023598670959473
    9. '  ' → logprob: -8.148598670959473
    10. '.' → logprob: -8.273598670959473

Token 347: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.875024795532227
    4. '=' → logprob: -18.625024795532227
    5. ',' → logprob: -18.875024795532227
    6. '```' → logprob: -19.000024795532227
    7. '2' → logprob: -19.125024795532227
    8. '.' → logprob: -19.250024795532227
    9. '<|end|>' → logprob: -19.500024795532227
    10. ' =' → logprob: -19.625024795532227

Token 348: ' car' (ID: 1669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1433895081281662
    2. ' ,' → logprob: -2.1433894634246826
    3. ',y' → logprob: -5.518389701843262
    4. ')' → logprob: -6.018389701843262
    5. '<|end|>' → logprob: -6.018389701843262
    6. ' -' → logprob: -6.518389701843262
    7. ' -=' → logprob: -6.643389701843262
    8. ' and' → logprob: -7.143389701843262
    9. '),' → logprob: -7.518389701843262
    10. ',
' → logprob: -7.768389701843262

Token 349: ' on' (ID: 402)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0811454057693481
    2. 'les' → logprob: -1.5811454057693481
    3. ' indices' → logprob: -1.7061454057693481
    4. ' the' → logprob: -2.5811452865600586
    5. 'y' → logprob: -2.9561452865600586
    6. ' y' → logprob: -3.0811452865600586
    7. ' indexing' → logprob: -3.7061452865600586
    8. ' indexes' → logprob: -3.8311452865600586
    9. 'indices' → logprob: -4.081145286560059
    10. 'x' → logprob: -4.706145286560059

Token 350: ' veut' (ID: 41653)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6098325252532959
    2. ' index' → logprob: -1.109832525253296
    3. '0' → logprob: -4.109832763671875
    4. ' utilise' → logprob: -4.109832763671875
    5. ' indexes' → logprob: -4.234832763671875
    6. ' travaille' → logprob: -4.859832763671875
    7. ' considère' → logprob: -4.984832763671875
    8. ' suppose' → logprob: -4.984832763671875
    9. 's' → logprob: -5.359832763671875
    10. 'indexes' → logprob: -5.484832763671875

Token 351: ' des' (ID: 731)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -1.1359952688217163
    2. ' des' → logprob: -1.6359952688217163
    3. ' y' → logprob: -2.135995388031006
    4. 'que' → logprob: -2.760995388031006
    5. ' index' → logprob: -3.135995388031006
    6. ' utiliser' → logprob: -3.260995388031006
    7. ' les' → logprob: -3.385995388031006
    8. ' convertir' → logprob: -3.635995388031006
    9. 'index' → logprob: -3.760995388031006
    10. 'y' → logprob: -4.510995388031006

Token 352: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.13659827411174774
    2. 'indices' → logprob: -2.1365983486175537
    3. '0' → logprob: -6.011598110198975
    4. ' indexes' → logprob: -6.011598110198975
    5. 'indexes' → logprob: -6.386598110198975
    6. 'index' → logprob: -6.636598110198975
    7. ' y' → logprob: -7.386598110198975
    8. ' ' → logprob: -8.386598587036133
    9. 'y' → logprob: -8.386598587036133
    10. ' index' → logprob: -9.011598587036133

Token 353: ' ' (ID: 220)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.2759534418582916
    2. '0' → logprob: -2.650953531265259
    3. ' en' → logprob: -2.650953531265259
    4. ' de' → logprob: -3.525953531265259
    5. ' y' → logprob: -3.650953531265259
    6. ' ' → logprob: -4.27595329284668
    7. 'de' → logprob: -4.77595329284668
    8. ' à' → logprob: -5.52595329284668
    9. 'x' → logprob: -5.90095329284668
    10. 'en' → logprob: -5.90095329284668

Token 354: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.039609961211681366
    2. ' ' → logprob: -4.039609909057617
    3. ' des' → logprob: -4.789609909057617
    4. 'de' → logprob: -5.539609909057617
    5. 'base' → logprob: -6.414609909057617
    6. 'z' → logprob: -6.664609909057617
    7. ' de' → logprob: -6.789609909057617
    8. 'des' → logprob: -7.164609909057617
    9. 'en' → logprob: -7.289609909057617
    10. 'zero' → logprob: -7.539609909057617

Token 355: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.001955394633114338
    2. 'based' → logprob: -6.501955509185791
    3. ' -' → logprob: -8.126955032348633
    4. '-index' → logprob: -9.501955032348633
    5. ' based' → logprob: -10.626955032348633
    6. '-base' → logprob: -10.626955032348633
    7. '-' → logprob: -10.751955032348633
    8. '-Based' → logprob: -12.001955032348633
    9. '-bas' → logprob: -12.751955032348633
    10. '_based' → logprob: -13.251955032348633

Token 356: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' nos' (ID: 4001)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.777579665184021
    2. ' les' → logprob: -1.277579665184021
    3. 'les' → logprob: -1.902579665184021
    4. 'arms' → logprob: -3.2775797843933105
    5. ' x' → logprob: -4.2775797843933105
    6. ' y' → logprob: -4.6525797843933105
    7. ' arms' → logprob: -5.0275797843933105
    8. 'le' → logprob: -5.1525797843933105
    9. ' le' → logprob: -5.1525797843933105
    10. 'l' → logprob: -5.1525797843933105

Token 358: ' structures' (ID: 21207)
  Prédit: ' bras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bras' → logprob: -1.091677188873291
    2. 'bras' → logprob: -1.466677188873291
    3. ' structures' → logprob: -2.591677188873291
    4. ' arrays' → logprob: -2.591677188873291
    5. 'arms' → logprob: -2.716677188873291
    6. ' arms' → logprob: -2.966677188873291
    7. ' lists' → logprob: -3.466677188873291
    8. ' listes' → logprob: -3.716677188873291
    9. ' tableaux' → logprob: -4.216677188873291
    10. 'structures' → logprob: -4.216677188873291

Token 359: '
' (ID: 198)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.4823243021965027
    2. '   ' → logprob: -1.8573243618011475
    3. '       ' → logprob: -2.8573243618011475
    4. ' arms' → logprob: -3.3573243618011475
    5. ',' → logprob: -3.8573243618011475
    6. '.' → logprob: -3.8573243618011475
    7. 'x' → logprob: -3.9823243618011475
    8. '[' → logprob: -4.607324123382568
    9. ' (' → logprob: -5.482324123382568
    10. 'de' → logprob: -5.482324123382568

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32504913210868835
    2. 'arms' → logprob: -2.2000491619110107
    3. ')' → logprob: -2.7000491619110107
    4. '<|end|>' → logprob: -3.0750491619110107
    5. '   ' → logprob: -3.9500491619110107
    6. ',' → logprob: -3.9500491619110107
    7. ' arms' → logprob: -4.825048923492432
    8. '<|end|>' → logprob: -7.075048923492432
    9. '           ' → logprob: -7.450048923492432
    10. ' ' → logprob: -7.450048923492432

Token 361: ' arms' (ID: 21157)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arms' (adapté à ' arms') → logprob: -0.027469363063573837
    2. ' arms' → logprob: -4.027469158172607
    3. 'x' → logprob: -4.777469158172607
    4. '   ' → logprob: -7.777469158172607
    5. ' x' → logprob: -8.027469635009766
    6. 'arm' → logprob: -9.777469635009766
    7. '       ' → logprob: -11.152469635009766
    8. 'ar' → logprob: -11.277469635009766
    9. 'y' → logprob: -11.652469635009766
    10. ' y' → logprob: -12.902469635009766

Token 362: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.491498531133402e-06
    2. '.' → logprob: -11.625009536743164
    3. '.app' → logprob: -15.500009536743164
    4. 'append' → logprob: -15.625009536743164
    5. '.ap' → logprob: -16.750009536743164
    6. ' .' → logprob: -16.875009536743164
    7. ').' → logprob: -17.250009536743164
    8. '.extend' → logprob: -17.625009536743164
    9. '.Append' → logprob: -18.125009536743164
    10. '.add' → logprob: -18.750009536743164

Token 363: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00027230256819166243
    2. '(' → logprob: -8.250272750854492
    3. '(x' → logprob: -11.500272750854492
    4. '(y' → logprob: -14.000272750854492
    5. '(((' → logprob: -18.250272750854492
    6. '(
' → logprob: -19.750272750854492
    7. ' ((' → logprob: -19.875272750854492
    8. '   ' → logprob: -20.125272750854492
    9. '([' → logprob: -20.625272750854492
    10. '((_' → logprob: -20.750272750854492

Token 364: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002187376143410802
    2. ' x' → logprob: -6.127187252044678
    3. '(x' → logprob: -13.502187728881836
    4. '   ' → logprob: -15.127187728881836
    5. 'y' → logprob: -15.627187728881836
    6. ')x' → logprob: -16.127187728881836
    7. '	x' → logprob: -16.377187728881836
    8. ' ' → logprob: -16.502187728881836
    9. '{x' → logprob: -16.502187728881836
    10. '"x' → logprob: -17.252187728881836

Token 365: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6938321590423584
    2. ' -' → logprob: -0.6938321590423584
    3. ',' → logprob: -7.4438323974609375
    4. ' ,' → logprob: -9.818832397460938
    5. ' ' → logprob: -10.568832397460938
    6. '1' → logprob: -12.068832397460938
    7. '   ' → logprob: -12.443832397460938
    8. ',y' → logprob: -13.443832397460938
    9. ' -,' → logprob: -13.693832397460938
    10. '()-' → logprob: -14.006332397460938

Token 366: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889209687709808
    2. ' y' → logprob: -2.5788919925689697
    3. 'x' → logprob: -13.57889175415039
    4. ')y' → logprob: -15.07889175415039
    5. '	y' → logprob: -15.57889175415039
    6. ')' → logprob: -15.95389175415039
    7. '(y' → logprob: -15.95389175415039
    8. '   ' → logprob: -16.20389175415039
    9. ''y' → logprob: -16.45389175415039
    10. ' ' → logprob: -16.95389175415039

Token 367: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10026371479034424
    2. ' -' → logprob: -2.3502635955810547
    3. ')' → logprob: -10.100263595581055
    4. '1' → logprob: -11.475263595581055
    5. '))' → logprob: -12.850263595581055
    6. ')-' → logprob: -13.975263595581055
    7. ' ' → logprob: -14.350263595581055
    8. '2' → logprob: -15.412763595581055
    9. '
' → logprob: -15.475263595581055
    10. ' )' → logprob: -15.600263595581055

Token 368: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.134509021649137e-05
    2. ' ' → logprob: -9.87506103515625
    3. '2' → logprob: -11.75006103515625
    4. ')' → logprob: -13.50006103515625
    5. '   ' → logprob: -15.87506103515625
    6. '<|end|>' → logprob: -16.25006103515625
    7. '
' → logprob: -16.75006103515625
    8. '```' → logprob: -17.37506103515625
    9. ' )' → logprob: -17.81256103515625
    10. '  ' → logprob: -18.12506103515625

Token 369: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006953967968001962
    2. ')' → logprob: -7.37569522857666
    3. ' ))' → logprob: -10.12569522857666
    4. '))
' → logprob: -10.50069522857666
    5. ' )' → logprob: -14.62569522857666
    6. ')))' → logprob: -15.00069522857666
    7. '),' → logprob: -15.75069522857666
    8. ' ' → logprob: -15.87569522857666
    9. '   ' → logprob: -16.250696182250977
    10. ',' → logprob: -16.500696182250977

Token 370: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' #' (ID: 1069)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.014232140965759754
    2. ' uf' → logprob: -5.139232158660889
    3. '   ' → logprob: -6.014232158660889
    4. 'arms' → logprob: -6.514232158660889
    5. '#' (adapté à ' #') → logprob: -7.139232158660889
    6. 'for' → logprob: -7.639232158660889
    7. 'from' → logprob: -7.764232158660889
    8. 'ufs' → logprob: -7.764232158660889
    9. 'lines' → logprob: -8.01423168182373
    10. 'union' → logprob: -8.76423168182373

Token 372: ' On' (ID: 2160)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.004061779007315636
    2. ' uf' → logprob: -6.754061698913574
    3. '#' → logprob: -6.879061698913574
    4. 'arms' → logprob: -7.504061698913574
    5. 'ufs' → logprob: -7.879061698913574
    6. '   ' → logprob: -8.379061698913574
    7. 'union' → logprob: -8.629061698913574
    8. 'arm' → logprob: -9.254061698913574
    9. 'lines' → logprob: -9.879061698913574
    10. 'for' → logprob: -10.254061698913574

Token 373: ' doit' (ID: 21822)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.8560165166854858
    2. ' uf' → logprob: -1.4810165166854858
    3. ' =' → logprob: -2.7310166358947754
    4. 'n' → logprob: -3.1060166358947754
    5. ' n' → logprob: -3.3560166358947754
    6. ' union' → logprob: -3.8560166358947754
    7. ' continue' → logprob: -3.9810166358947754
    8. ' initialize' → logprob: -3.9810166358947754
    9. 'u' → logprob: -4.231016635894775
    10. 'continue' → logprob: -4.481016635894775

Token 374: ' rel' (ID: 1536)
  Prédit: ' créer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' créer' → logprob: -1.6067242622375488
    2. 'tr' → logprob: -1.8567242622375488
    3. ' reg' → logprob: -1.8567242622375488
    4. ' tr' → logprob: -1.8567242622375488
    5. ' union' → logprob: -3.356724262237549
    6. ' traiter' → logprob: -3.356724262237549
    7. 'contin' → logprob: -3.731724262237549
    8. 'reg' → logprob: -3.731724262237549
    9. 'r' → logprob: -4.106724262237549
    10. ' continuer' → logprob: -4.231724262237549

Token 375: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0012570185353979468
    2. 'inker' → logprob: -8.126256942749023
    3. 'ancer' → logprob: -8.376256942749023
    4. 'i' → logprob: -8.876256942749023
    5. 'â' → logprob: -9.876256942749023
    6. 'ie' → logprob: -9.876256942749023
    7. 'e' → logprob: -10.001256942749023
    8. 'ayer' → logprob: -10.376256942749023
    9. 'oger' → logprob: -10.376256942749023
    10. '   ' → logprob: -10.501256942749023

Token 376: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.47079455852508545
    2. 'arms' → logprob: -1.9707945585250854
    3. ' the' → logprob: -2.970794677734375
    4. ' arms' → logprob: -3.220794677734375
    5. ' y' → logprob: -3.595794677734375
    6. 'x' → logprob: -3.720794677734375
    7. 'the' → logprob: -3.970794677734375
    8. ' conveyors' → logprob: -4.220794677734375
    9. ' all' → logprob: -4.595794677734375
    10. 'les' → logprob: -4.845794677734375

Token 377: ' lignes' (ID: 81687)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6904304623603821
    2. 'arms' → logprob: -2.1904304027557373
    3. ' for' → logprob: -2.6904304027557373
    4. ' conveyors' → logprob: -2.8154304027557373
    5. ' lignes' → logprob: -3.3154304027557373
    6. ' conveyor' → logprob: -3.3154304027557373
    7. 'con' → logprob: -3.6904304027557373
    8. ' convoy' → logprob: -3.6904304027557373
    9. 'conv' → logprob: -3.9404304027557373
    10. ' arms' → logprob: -4.065430641174316

Token 378: ' adj' (ID: 20251)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1069718599319458
    2. 'adj' → logprob: -1.6069718599319458
    3. 'de' → logprob: -2.4819717407226562
    4. '   ' → logprob: -2.4819717407226562
    5. ' adj' → logprob: -3.1069717407226562
    6. 'arms' → logprob: -3.4819717407226562
    7. 'for' → logprob: -3.4819717407226562
    8. ' y' → logprob: -3.6069717407226562
    9. 'con' → logprob: -3.6069717407226562
    10. ' for' → logprob: -4.356971740722656

Token 379: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.45185205340385437
    2. 'entes' → logprob: -1.4518520832061768
    3. 'centes' → logprob: -3.3268520832061768
    4. 'oint' → logprob: -3.3268520832061768
    5. 'acent' → logprob: -4.201851844787598
    6. 'a' → logprob: -4.451851844787598
    7. '(' → logprob: -5.576851844787598
    8. 'oints' → logprob: -5.576851844787598
    9. 'ais' → logprob: -5.826851844787598
    10. 'd' → logprob: -5.826851844787598

Token 380: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.0012351145269349217
    2. 'ents' → logprob: -7.001235008239746
    3. 'antes' → logprob: -8.751235008239746
    4. 'ates' → logprob: -10.501235008239746
    5. 'centes' → logprob: -10.626235008239746
    6. '(' → logprob: -10.876235008239746
    7. 'ent' → logprob: -10.876235008239746
    8. 'ente' → logprob: -11.376235008239746
    9. 'd' → logprob: -11.501235008239746
    10. 'ENTES' → logprob: -11.751235008239746

Token 381: ' connect' (ID: 4837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40679898858070374
    2. ' for' → logprob: -1.2817989587783813
    3. '   ' → logprob: -3.281799077987671
    4. ',' → logprob: -5.531798839569092
    5. ' pour' → logprob: -6.156798839569092
    6. ' (' → logprob: -6.406798839569092
    7. 'if' → logprob: -6.656798839569092
    8. 'pour' → logprob: -6.781798839569092
    9. ' if' → logprob: -7.031798839569092
    10. 'i' → logprob: -7.531798839569092

Token 382: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.004012034274637699
    2. '(' → logprob: -6.254012107849121
    3. 'és' → logprob: -7.254012107849121
    4. 'é' → logprob: -8.379012107849121
    5. 'ant' → logprob: -8.504012107849121
    6. 'e' → logprob: -8.879012107849121
    7. 'ée' → logprob: -8.879012107849121
    8. 'es' → logprob: -9.004012107849121
    9. '   ' → logprob: -9.129012107849121
    10. 'ees' → logprob: -9.254012107849121

Token 383: ' via' (ID: 4493)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6951836943626404
    2. ' par' → logprob: -1.4451837539672852
    3. 'if' → logprob: -2.070183753967285
    4. 'via' → logprob: -4.070183753967285
    5. ',' → logprob: -4.195183753967285
    6. '   ' → logprob: -4.320183753967285
    7. ' if' → logprob: -4.445183753967285
    8. ' via' → logprob: -4.445183753967285
    9. 'by' → logprob: -4.820183753967285
    10. 'dans' → logprob: -4.945183753967285

Token 384: ' un' (ID: 537)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.055694580078125
    2. ' des' → logprob: -1.430694580078125
    3. ' un' → logprob: -1.555694580078125
    4. 'les' → logprob: -2.055694580078125
    5. 'un' → logprob: -3.805694580078125
    6. ' le' → logprob: -3.930694580078125
    7. 'des' → logprob: -4.180694580078125
    8. 'le' → logprob: -5.680694580078125
    9. ' bras' → logprob: -6.055694580078125
    10. ' arms' → logprob: -6.305694580078125

Token 385: ' bras' (ID: 50089)
  Prédit: ' bras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bras' → logprob: -0.09521781653165817
    2. 'bras' → logprob: -2.470217704772949
    3. 'arm' → logprob: -5.720217704772949
    4. ' arm' → logprob: -7.595217704772949
    5. ' robot' → logprob: -7.720217704772949
    6. 'robot' → logprob: -8.09521770477295
    7. 'bra' → logprob: -8.65771770477295
    8. ' même' → logprob: -8.90771770477295
    9. ' ' → logprob: -8.90771770477295
    10. ' brazo' → logprob: -9.03271770477295

Token 386: ' robot' (ID: 20808)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6683900952339172
    2. 'arms' → logprob: -1.5433900356292725
    3. '   ' → logprob: -1.7933900356292725
    4. ' for' → logprob: -2.6683900356292725
    5. ',' → logprob: -5.543390274047852
    6. ' arms' → logprob: -5.793390274047852
    7. 's' → logprob: -6.043390274047852
    8. 'adj' → logprob: -6.043390274047852
    9. 'lines' → logprob: -6.168390274047852
    10. ' conveyors' → logprob: -6.293390274047852

Token 387: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.16501493752002716
    2. 'iques' → logprob: -1.9150149822235107
    3. 'ic' → logprob: -5.540014743804932
    4. 'iqu' → logprob: -8.29001522064209
    5. 'es' → logprob: -8.66501522064209
    6. '```' → logprob: -9.16501522064209
    7. 'iqué' → logprob: -9.66501522064209
    8. 'ics' → logprob: -10.04001522064209
    9. 'i' → logprob: -10.41501522064209
    10. 'iquement' → logprob: -10.41501522064209

Token 388: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1701231747865677
    2. 'for' → logprob: -2.7951231002807617
    3. 'arms' → logprob: -3.0451231002807617
    4. ' for' → logprob: -3.9201231002807617
    5. 'adj' → logprob: -5.420123100280762
    6. ',' → logprob: -5.920123100280762
    7. '
' → logprob: -6.170123100280762
    8. 'lines' → logprob: -6.795123100280762
    9. ' =' → logprob: -6.795123100280762
    10. 'connected' → logprob: -7.045123100280762

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013529938645660877
    2. 'arms' → logprob: -4.7635297775268555
    3. 'for' → logprob: -6.0135297775268555
    4. '
' → logprob: -7.0135297775268555
    5. ' for' → logprob: -7.1385297775268555
    6. '    
' → logprob: -8.263529777526855
    7. ' arms' → logprob: -9.263529777526855
    8. 'from' → logprob: -9.763529777526855
    9. 'arm' → logprob: -10.138529777526855
    10. ',' → logprob: -10.388529777526855

Token 390: ' #' (ID: 1069)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.4097176790237427
    2. 'for' → logprob: -1.9097176790237427
    3. ' for' → logprob: -2.034717559814453
    4. ' arms' → logprob: -3.909717559814453
    5. '   ' → logprob: -4.409717559814453
    6. 'i' → logprob: -4.534717559814453
    7. 'prev' → logprob: -5.659717559814453
    8. ' i' → logprob: -6.409717559814453
    9. 'adj' → logprob: -6.784717559814453
    10. 'lines' → logprob: -6.909717559814453

Token 391: ' Peu' (ID: 189054)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.159243106842041
    2. 'uf' → logprob: -1.284243106842041
    3. 'arms' → logprob: -1.409243106842041
    4. ' for' → logprob: -3.284243106842041
    5. ' uf' → logprob: -3.534243106842041
    6. ' arms' → logprob: -3.534243106842041
    7. 'i' → logprob: -4.534243106842041
    8. 'lines' → logprob: -4.534243106842041
    9. 'prev' → logprob: -4.784243106842041
    10. ' i' → logprob: -5.409243106842041

Token 392: ' importe' (ID: 80493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.16345541179180145
    2. 'vent' → logprob: -2.2884554862976074
    3. ' à' → logprob: -4.788455486297607
    4. 'importe' → logprob: -4.913455486297607
    5. 'à' → logprob: -5.413455486297607
    6. 'import' → logprob: -5.413455486297607
    7. ' importe' → logprob: -5.413455486297607
    8. 'd' → logprob: -5.663455486297607
    9. 's' → logprob: -5.788455486297607
    10. 'to' → logprob: -5.913455486297607

Token 393: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' position' (ID: 4010)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -1.2897588014602661
    2. 'val' → logprob: -1.5397588014602661
    3. 'position' → logprob: -1.5397588014602661
    4. 'distance' → logprob: -3.0397586822509766
    5. 'ligne' → logprob: -3.0397586822509766
    6. ' position' → logprob: -3.2897586822509766
    7. ' ligne' → logprob: -3.7897586822509766
    8. 'direction' → logprob: -3.9147586822509766
    9. ' distance' → logprob: -4.539758682250977
    10. ' direction' → logprob: -4.664758682250977

Token 395: ' x' (ID: 1215)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.38819360733032227
    2. ',' → logprob: -2.1381936073303223
    3. ' ,' → logprob: -3.2631936073303223
    4. ' de' → logprob: -3.3881936073303223
    5. 'x' → logprob: -3.6381936073303223
    6. '   ' → logprob: -3.6381936073303223
    7. ')' → logprob: -4.513193607330322
    8. ' x' → logprob: -4.638193607330322
    9. 'des' → logprob: -4.763193607330322
    10. 's' → logprob: -4.888193607330322

Token 396: ' car' (ID: 1669)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45104220509529114
    2. ' for' → logprob: -1.3260421752929688
    3. 'for' → logprob: -2.7010421752929688
    4. ',' → logprob: -4.451042175292969
    5. '<|end|>' → logprob: -4.576042175292969
    6. 'arms' → logprob: -6.451042175292969
    7. '
' → logprob: -6.451042175292969
    8. '    
' → logprob: -6.826042175292969
    9. ' ,' → logprob: -7.076042175292969
    10. '	for' → logprob: -7.826042175292969

Token 397: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4641716480255127
    2. 'les' → logprob: -1.5891716480255127
    3. ' ce' → logprob: -3.2141716480255127
    4. ' on' → logprob: -3.4641716480255127
    5. ' c' → logprob: -3.9641716480255127
    6. 'ce' → logprob: -4.589171409606934
    7. 'c' → logprob: -4.964171409606934
    8. 'l' → logprob: -4.964171409606934
    9. ' seuls' → logprob: -4.964171409606934
    10. ' seules' → logprob: -5.089171409606934

Token 398: ' robot' (ID: 20808)
  Prédit: ' bras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bras' → logprob: -0.1001124158501625
    2. 'bras' → logprob: -3.1001124382019043
    3. ' y' → logprob: -3.9751124382019043
    4. 'y' → logprob: -4.975112438201904
    5. ' code' → logprob: -5.100112438201904
    6. ' arms' → logprob: -5.850112438201904
    7. 'arms' → logprob: -5.975112438201904
    8. ' but' → logprob: -6.725112438201904
    9. ' conveyor' → logprob: -6.725112438201904
    10. ' range' → logprob: -6.850112438201904

Token 399: ' permet' (ID: 11798)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' un' (ID: 537)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9203680157661438
    2. ' de' → logprob: -1.420367956161499
    3. 'd' → logprob: -1.545367956161499
    4. ' d' → logprob: -2.295367956161499
    5. ' la' → logprob: -4.795368194580078
    6. ' uniquement' → logprob: -5.045368194580078
    7. 'le' → logprob: -5.170368194580078
    8. 'l' → logprob: -5.420368194580078
    9. ' l' → logprob: -5.670368194580078
    10. 'la' → logprob: -5.920368194580078

Token 401: ' passage' (ID: 26368)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -1.3119767904281616
    2. ' échange' → logprob: -1.5619767904281616
    3. 'éch' → logprob: -1.6869767904281616
    4. 'é' → logprob: -1.6869767904281616
    5. 'trans' → logprob: -2.436976909637451
    6. 'transport' → logprob: -4.061976909637451
    7. 'e' → logprob: -4.811976909637451
    8. 'dé' → logprob: -4.811976909637451
    9. 'ech' → logprob: -5.311976909637451
    10. 'pont' → logprob: -5.561976909637451

Token 402: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.024890661239624
    2. '   ' → logprob: -1.524890661239624
    3. ' between' → logprob: -1.774890661239624
    4. 'direct' → logprob: -2.149890661239624
    5. 'between' → logprob: -2.899890661239624
    6. 'entre' → logprob: -3.399890661239624
    7. ' direct' → logprob: -3.774890661239624
    8. 'y' → logprob: -5.274890899658203
    9. ' immédi' → logprob: -5.899890899658203
    10. ' directe' → logprob: -6.024890899658203

Token 403: ' ces' (ID: 10532)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12722626328468323
    2. ' y' → logprob: -2.1272263526916504
    3. 'les' → logprob: -9.377225875854492
    4. ' les' → logprob: -9.377225875854492
    5. 'lines' → logprob: -9.877225875854492
    6. ' lines' → logprob: -11.252225875854492
    7. '(y' → logprob: -11.377225875854492
    8. 'adj' → logprob: -11.752225875854492
    9. ' lignes' → logprob: -11.877225875854492
    10. ' adjacent' → logprob: -12.002225875854492

Token 404: ' lignes' (ID: 81687)
  Prédit: ' deux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deux' → logprob: -1.064335823059082
    2. ' lignes' → logprob: -1.439335823059082
    3. ' y' → logprob: -1.689335823059082
    4. 'l' → logprob: -2.564335823059082
    5. 'y' → logprob: -2.689335823059082
    6. 'de' → logprob: -3.189335823059082
    7. ' two' → logprob: -4.689335823059082
    8. ' ' → logprob: -5.314335823059082
    9. ' lines' → logprob: -5.439335823059082
    10. 'indices' → logprob: -5.814335823059082

Token 405: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07300794869661331
    2. 'for' → logprob: -3.6980080604553223
    3. 'arms' → logprob: -3.9480080604553223
    4. ' for' → logprob: -4.698008060455322
    5. ',' → logprob: -4.698008060455322
    6. '    
' → logprob: -6.823008060455322
    7. '
' → logprob: -7.323008060455322
    8. '.' → logprob: -7.448008060455322
    9. ' arms' → logprob: -7.573008060455322
    10. ' at' → logprob: -7.698008060455322

Token 406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2797408103942871
    2. 'arms' → logprob: -1.779740810394287
    3. 'for' → logprob: -3.404740810394287
    4. ' for' → logprob: -3.404740810394287
    5. ' arms' → logprob: -5.279740810394287
    6. '    
' → logprob: -7.279740810394287
    7. '
' → logprob: -7.529740810394287
    8. 'from' → logprob: -7.779740810394287
    9. 'prev' → logprob: -8.154741287231445
    10. 'lines' → logprob: -8.154741287231445

Token 407: ' #' (ID: 1069)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.3209441304206848
    2. 'uf' → logprob: -2.57094407081604
    3. 'for' → logprob: -2.69594407081604
    4. '   ' → logprob: -2.94594407081604
    5. ' arms' → logprob: -3.44594407081604
    6. ' for' → logprob: -3.82094407081604
    7. ' uf' → logprob: -4.570944309234619
    8. 'lines' → logprob: -5.195944309234619
    9. 'i' → logprob: -6.945944309234619
    10. ' lines' → logprob: -6.945944309234619

Token 408: ' On' (ID: 2160)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.5098918676376343
    2. 'uf' → logprob: -1.8848918676376343
    3. 'for' → logprob: -2.259891986846924
    4. 'lines' → logprob: -3.134891986846924
    5. ' arms' → logprob: -3.259891986846924
    6. ' uf' → logprob: -4.384891986846924
    7. ' for' → logprob: -4.509891986846924
    8. '#' → logprob: -4.884891986846924
    9. '   ' → logprob: -5.009891986846924
    10. 'from' → logprob: -5.384891986846924

Token 409: ' peut' (ID: 9216)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.0760384052991867
    2. ' arms' → logprob: -3.326038360595703
    3. 'for' → logprob: -4.576038360595703
    4. 'from' → logprob: -4.576038360595703
    5. ' for' → logprob: -6.201038360595703
    6. ' =' → logprob: -6.451038360595703
    7. '=' → logprob: -6.701038360595703
    8. '.sort' → logprob: -6.826038360595703
    9. 'sort' → logprob: -7.076038360595703
    10. 'arm' → logprob: -7.201038360595703

Token 410: ' donc' (ID: 14206)
  Prédit: 'reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reg' → logprob: -1.0442049503326416
    2. 'tr' → logprob: -2.0442049503326416
    3. 'penser' → logprob: -2.2942049503326416
    4. ' reg' → logprob: -2.5442049503326416
    5. 'group' → logprob: -2.7942049503326416
    6. 'util' → logprob: -3.4192049503326416
    7. 'par' → logprob: -3.6692049503326416
    8. 'supp' → logprob: -3.7942049503326416
    9. 'contin' → logprob: -3.9192049503326416
    10. ' supp' → logprob: -4.2942047119140625

Token 411: ' simplement' (ID: 45065)
  Prédit: 'reg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reg' → logprob: -0.46073484420776367
    2. 'tr' → logprob: -1.9607348442077637
    3. ' reg' → logprob: -2.7107348442077637
    4. 'group' → logprob: -2.8357348442077637
    5. 'penser' → logprob: -3.7107348442077637
    6. 'g' → logprob: -4.710734844207764
    7. 'rel' → logprob: -4.960734844207764
    8. 'util' → logprob: -4.960734844207764
    9. 'union' → logprob: -5.085734844207764
    10. ' grou' → logprob: -5.210734844207764

Token 412: ' faire' (ID: 8119)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6236746907234192
    2. 'reg' → logprob: -1.4986746311187744
    3. ' reg' → logprob: -2.8736746311187744
    4. ' tr' → logprob: -2.9986746311187744
    5. 'group' → logprob: -3.3736746311187744
    6. 'union' → logprob: -3.6236746311187744
    7. 'sort' → logprob: -3.8736746311187744
    8. 'rel' → logprob: -4.1236748695373535
    9. 'connect' → logprob: -4.6236748695373535
    10. ' grou' → logprob: -4.9986748695373535

Token 413: ' l' (ID: 305)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20189887285232544
    2. ' for' → logprob: -1.9518988132476807
    3. '   ' → logprob: -4.20189905166626
    4. 'union' → logprob: -4.32689905166626
    5. 'uf' → logprob: -6.20189905166626
    6. ' union' → logprob: -6.45189905166626
    7. ' une' → logprob: -6.82689905166626
    8. 'arms' → logprob: -6.95189905166626
    9. 'une' → logprob: -7.20189905166626
    10. 'un' → logprob: -7.32689905166626

Token 414: ''un' (ID: 9788)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3081885278224945
    2. 'e' → logprob: -2.9331884384155273
    3. 'en' → logprob: -3.1831884384155273
    4. 'a' → logprob: -3.3081884384155273
    5. 'ine' → logprob: -3.9331884384155273
    6. ''' → logprob: -3.9331884384155273
    7. 'in' → logprob: -4.683188438415527
    8. ''un' → logprob: -5.308188438415527
    9. 'union' → logprob: -5.433188438415527
    10. 'ef' → logprob: -5.558188438415527

Token 415: 'ion' (ID: 294)
  Prédit: 'ion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.0002123614540323615
    2. 'def' → logprob: -9.750212669372559
    3. 'ions' → logprob: -9.875212669372559
    4. '```' → logprob: -10.875212669372559
    5. 'e' → logprob: -11.500212669372559
    6. 'on' → logprob: -11.625212669372559
    7. 'i' → logprob: -11.750212669372559
    8. 'oin' → logprob: -11.875212669372559
    9. 'io' → logprob: -12.000212669372559
    10. '(' → logprob: -12.125212669372559

Token 416: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5042680501937866
    2. ' for' → logprob: -1.2542680501937866
    3. ' des' → logprob: -3.504268169403076
    4. ' between' → logprob: -4.004268169403076
    5. 'arms' → logprob: -4.254268169403076
    6. ' of' → logprob: -4.629268169403076
    7. '   ' → logprob: -4.754268169403076
    8. 'des' → logprob: -4.879268169403076
    9. '(' → logprob: -5.129268169403076
    10. 'between' → logprob: -5.254268169403076

Token 417: ' indices' (ID: 30378)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3217604458332062
    2. ' y' → logprob: -2.196760416030884
    3. '(y' → logprob: -2.196760416030884
    4. 'arms' → logprob: -3.946760416030884
    5. 'pairs' → logprob: -4.696760654449463
    6. ' pairs' → logprob: -5.321760654449463
    7. '[y' → logprob: -5.446760654449463
    8. ' arms' → logprob: -6.321760654449463
    9. '(' → logprob: -6.571760654449463
    10. 'lines' → logprob: -6.946760654449463

Token 418: ' y' (ID: 342)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6741833090782166
    2. 'for' → logprob: -1.2991833686828613
    3. '   ' → logprob: -3.2991833686828613
    4. ' de' → logprob: -3.2991833686828613
    5. ' des' → logprob: -3.6741833686828613
    6. 'adj' → logprob: -3.6741833686828613
    7. 'y' → logprob: -4.049183368682861
    8. ' of' → logprob: -4.424183368682861
    9. ',' → logprob: -4.674183368682861
    10. ' y' → logprob: -4.924183368682861

Token 419: '_i' (ID: 10853)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4932403564453125
    2. 'for' → logprob: -1.6182403564453125
    3. ',' → logprob: -2.4932403564453125
    4. ' for' → logprob: -3.4932403564453125
    5. ' -' → logprob: -4.2432403564453125
    6. '1' → logprob: -4.2432403564453125
    7. 's' → logprob: -4.8682403564453125
    8. ']' → logprob: -4.9932403564453125
    9. '[' → logprob: -5.4932403564453125
    10. ')' → logprob: -5.6182403564453125

Token 420: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6008764505386353
    2. ' et' → logprob: -1.7258764505386353
    3. 'and' → logprob: -2.2258763313293457
    4. '-' → logprob: -2.3508763313293457
    5. ',' → logprob: -3.2258763313293457
    6. ' -' → logprob: -4.725876331329346
    7. '   ' → logprob: -5.225876331329346
    8. 'et' → logprob: -5.725876331329346
    9. ' ,' → logprob: -5.975876331329346
    10. '<|end|>' → logprob: -5.975876331329346

Token 421: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0026240507140755653
    2. ' y' → logprob: -6.127624034881592
    3. '(y' → logprob: -7.877624034881592
    4. 'arms' → logprob: -9.87762451171875
    5. '(' → logprob: -13.37762451171875
    6. ''y' → logprob: -13.87762451171875
    7. '
' → logprob: -13.87762451171875
    8. ' (' → logprob: -14.25262451171875
    9. '	y' → logprob: -14.37762451171875
    10. '   ' → logprob: -14.37762451171875

Token 422: '_i' (ID: 10853)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07526177167892456
    2. ')' → logprob: -3.3252618312835693
    3. '[' → logprob: -4.82526159286499
    4. '   ' → logprob: -4.95026159286499
    5. '_i' → logprob: -5.57526159286499
    6. ' -' → logprob: -5.70026159286499
    7. ']' → logprob: -5.82526159286499
    8. '[i' → logprob: -6.07526159286499
    9. 'i' → logprob: -6.32526159286499
    10. '[-' → logprob: -6.45026159286499

Token 423: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6809375882148743
    2. ']' → logprob: -2.1809375286102295
    3. 'for' → logprob: -2.3059375286102295
    4. ' for' → logprob: -2.4309375286102295
    5. '   ' → logprob: -3.1809375286102295
    6. ',' → logprob: -3.4309375286102295
    7. '       ' → logprob: -3.4309375286102295
    8. '-' → logprob: -3.9309375286102295
    9. '])' → logprob: -4.180937767028809
    10. ' )' → logprob: -4.430937767028809

Token 424: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010936654871329665
    2. ' ' → logprob: -7.126093864440918
    3. '+' → logprob: -8.251093864440918
    4. 'y' → logprob: -12.001093864440918
    5. ' +' → logprob: -12.126093864440918
    6. '0' → logprob: -12.688593864440918
    7. '2' → logprob: -12.813593864440918
    8. '   ' → logprob: -13.126093864440918
    9. '-' → logprob: -13.751093864440918
    10. '```' → logprob: -14.063593864440918

Token 425: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1477772742509842
    2. ' for' → logprob: -3.0227773189544678
    3. '<|end|>' → logprob: -3.0227773189544678
    4. 'for' → logprob: -4.022777080535889
    5. ',' → logprob: -5.022777080535889
    6. '       ' → logprob: -5.897777080535889
    7. '
' → logprob: -6.147777080535889
    8. '<|end|>' → logprob: -6.272777080535889
    9. '.' → logprob: -6.897777080535889
    10. 'from' → logprob: -7.022777080535889

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02191762626171112
    2. 'for' → logprob: -4.646917819976807
    3. 'arms' → logprob: -5.021917819976807
    4. ' for' → logprob: -5.771917819976807
    5. '    
' → logprob: -7.146917819976807
    6. 'from' → logprob: -7.521917819976807
    7. ')' → logprob: -8.396917343139648
    8. ',' → logprob: -8.646917343139648
    9. '<|end|>' → logprob: -9.146917343139648
    10. '
' → logprob: -9.146917343139648

Token 427: ' uf' (ID: 35772)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6503311395645142
    2. 'arms' → logprob: -0.7753311395645142
    3. 'from' → logprob: -4.650331020355225
    4. 'for' → logprob: -5.775331020355225
    5. '    
' → logprob: -6.650331020355225
    6. 'arm' → logprob: -7.150331020355225
    7. ' arms' → logprob: -7.525331020355225
    8. ' from' → logprob: -7.775331020355225
    9. 'lines' → logprob: -8.150331497192383
    10. ' for' → logprob: -8.275331497192383

Token 428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0182229895144701
    2. '.union' → logprob: -4.643222808837891
    3. '.' → logprob: -5.268222808837891
    4. '=' → logprob: -5.768222808837891
    5. ' .' → logprob: -10.14322280883789
    6. 'union' → logprob: -10.51822280883789
    7. '   ' → logprob: -10.64322280883789
    8. ' ' → logprob: -11.51822280883789
    9. ')' → logprob: -11.89322280883789
    10. '.un' → logprob: -12.39322280883789

Token 429: ' Union' (ID: 14746)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.00020354038861114532
    2. ' Union' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.87520408630371
    4. 'union' → logprob: -19.75020408630371
    5. '_union' → logprob: -20.25020408630371
    6. ' ' → logprob: -20.87520408630371
    7. ''Union' → logprob: -21.12520408630371
    8. ' union' → logprob: -21.37520408630371
    9. 'Unit' → logprob: -21.87520408630371
    10. 'Uni' → logprob: -21.87520408630371

Token 430: 'Find' (ID: 11437)
  Prédit: 'Find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Find' → logprob: -7.386147626675665e-05
    2. 'F' → logprob: -10.250073432922363
    3. 'Fold' → logprob: -11.125073432922363
    4. 'Fill' → logprob: -12.250073432922363
    5. '(' → logprob: -12.500073432922363
    6. 'Union' → logprob: -12.625073432922363
    7. '[' → logprob: -13.125073432922363
    8. '```' → logprob: -13.625073432922363
    9. '-F' → logprob: -13.875073432922363
    10. '(F' → logprob: -14.000073432922363

Token 431: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005478725302964449
    2. 'n' → logprob: -5.255478858947754
    3. '(m' → logprob: -8.755478858947754
    4. '(' → logprob: -9.630478858947754
    5. '(len' → logprob: -11.505478858947754
    6. 'm' → logprob: -11.880478858947754
    7. ' (' → logprob: -13.630478858947754
    8. '((' → logprob: -14.005478858947754
    9. '(
' → logprob: -14.005478858947754
    10. '(max' → logprob: -14.755478858947754

Token 432: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029783474281430244
    2. ')
' → logprob: -3.5297834873199463
    3. ')
' → logprob: -10.529783248901367
    4. ')

' → logprob: -12.029783248901367
    5. ' )' → logprob: -15.404783248901367
    6. ')

' → logprob: -17.654783248901367
    7. '   ' → logprob: -17.779783248901367
    8. ' )
' → logprob: -18.029783248901367
    9. '),' → logprob: -18.529783248901367
    10. '))' → logprob: -18.904783248901367

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07493046671152115
    2. ' for' → logprob: -3.574930429458618
    3. '
' → logprob: -3.574930429458618
    4. 'for' → logprob: -4.699930667877197
    5. '    
' → logprob: -5.824930667877197
    6. '<|end|>' → logprob: -6.699930667877197
    7. '```' → logprob: -6.824930667877197
    8. 'arms' → logprob: -7.199930667877197
    9. '  
' → logprob: -8.199930191040039
    10. ' arms' → logprob: -8.824930191040039

Token 434: ' for' (ID: 395)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.782670795917511
    2. 'for' (adapté à ' for') → logprob: -1.6576707363128662
    3. 'prev' → logprob: -2.282670736312866
    4. '   ' → logprob: -2.407670736312866
    5. 'current' → logprob: -2.907670736312866
    6. 'last' → logprob: -3.782670736312866
    7. ' for' → logprob: -3.907670736312866
    8. 'from' → logprob: -4.782670974731445
    9. 'line' → logprob: -4.907670974731445
    10. ' current' → logprob: -5.032670974731445

Token 435: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7312104105949402
    2. 'i' → logprob: -0.9812104105949402
    3. ' i' → logprob: -2.481210470199585
    4. ' x' → logprob: -3.231210470199585
    5. '_,' → logprob: -4.106210231781006
    6. ' _,' → logprob: -5.856210231781006
    7. ',' → logprob: -7.731210231781006
    8. '_x' → logprob: -8.481210708618164
    9. '   ' → logprob: -8.731210708618164
    10. '_i' → logprob: -9.356210708618164

Token 436: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007721052970737219
    2. ',y' → logprob: -7.750771999359131
    3. ',_' → logprob: -8.375772476196289
    4. ' ,' → logprob: -10.000772476196289
    5. '_,' → logprob: -10.000772476196289
    6. ',(' → logprob: -12.500772476196289
    7. 'y' → logprob: -12.625772476196289
    8. '1' → logprob: -13.250772476196289
    9. '```' → logprob: -13.625772476196289
    10. ',i' → logprob: -13.625772476196289

Token 437: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0052350712940096855
    2. ' y' → logprob: -5.255235195159912
    3. '_y' → logprob: -15.880234718322754
    4. 'yb' → logprob: -16.00523567199707
    5. 'ys' → logprob: -16.25523567199707
    6. '```' → logprob: -16.38023567199707
    7. '   ' → logprob: -16.50523567199707
    8. 'b' → logprob: -16.50523567199707
    9. 'y's' → logprob: -16.63023567199707
    10. '	y' → logprob: -16.63023567199707

Token 438: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06331367790699005
    2. 'in' → logprob: -2.8133137226104736
    3. ',' → logprob: -6.6883134841918945
    4. '   ' → logprob: -10.313313484191895
    5. ' ' → logprob: -10.688313484191895
    6. 'y' → logprob: -11.438313484191895
    7. 's' → logprob: -11.813313484191895
    8. '1' → logprob: -12.813313484191895
    9. '_in' → logprob: -12.813313484191895
    10. 'i' → logprob: -13.063313484191895

Token 439: ' arms' (ID: 21157)
  Prédit: 'arms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arms' → logprob: -0.0019355426775291562
    2. ' arms' → logprob: -6.2519354820251465
    3. 'arm' → logprob: -12.626935958862305
    4. '   ' → logprob: -13.626935958862305
    5. 'ar' → logprob: -13.876935958862305
    6. ' ' → logprob: -15.751935958862305
    7. 'ars' → logprob: -16.001935958862305
    8. 'ands' → logprob: -16.001935958862305
    9. 'armen' → logprob: -16.251935958862305
    10. 'ams' → logprob: -16.251935958862305

Token 440: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0622195340692997
    2. ':
' → logprob: -2.8122196197509766
    3. '   ' → logprob: -8.562219619750977
    4. '       ' → logprob: -10.187219619750977
    5. ',' → logprob: -11.687219619750977
    6. '):
' → logprob: -12.312219619750977
    7. ':
' → logprob: -12.687219619750977
    8. ' :' → logprob: -12.812219619750977
    9. '):' → logprob: -14.062219619750977
    10. ' :
' → logprob: -14.187219619750977

Token 441: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019307781476527452
    2. 'if' → logprob: -6.8769307136535645
    3. '   ' → logprob: -7.2519307136535645
    4. ' if' → logprob: -9.251931190490723
    5. 'uf' → logprob: -9.501931190490723
    6. '           ' → logprob: -12.501931190490723
    7. ' uf' → logprob: -12.626931190490723
    8. '      ' → logprob: -13.001931190490723
    9. '     ' → logprob: -13.001931190490723
    10. 'for' → logprob: -13.501931190490723

Token 442: ' #' (ID: 1069)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.20034897327423096
    2. 'if' → logprob: -2.3253488540649414
    3. '       ' → logprob: -2.9503488540649414
    4. '   ' → logprob: -3.5753488540649414
    5. ' uf' → logprob: -6.075348854064941
    6. ' if' → logprob: -7.325348854064941
    7. 'ufs' → logprob: -9.700348854064941
    8. '           ' → logprob: -9.950348854064941
    9. 'ufi' → logprob: -10.075348854064941
    10. ' ' → logprob: -10.450348854064941

Token 443: ' Rel' (ID: 9658)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.13654471933841705
    2. 'if' → logprob: -2.136544704437256
    3. '       ' → logprob: -5.386544704437256
    4. '   ' → logprob: -5.761544704437256
    5. ' uf' → logprob: -6.636544704437256
    6. ' if' → logprob: -8.636545181274414
    7. 'for' → logprob: -8.886545181274414
    8. 'ufs' → logprob: -9.636545181274414
    9. 'union' → logprob: -11.136545181274414
    10. 'ufi' → logprob: -11.199045181274414

Token 444: 'ie' (ID: 396)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44245442748069763
    2. '   ' → logprob: -1.56745445728302
    3. '           ' → logprob: -2.6924543380737305
    4. '=' → logprob: -4.4424543380737305
    5. 'ate' → logprob: -4.4424543380737305
    6. 'ation' → logprob: -4.9424543380737305
    7. 'if' → logprob: -5.0674543380737305
    8. 'union' → logprob: -5.1924543380737305
    9. 'ier' → logprob: -5.4424543380737305
    10. 'y' → logprob: -5.6924543380737305

Token 445: ' les' (ID: 1341)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.13292138278484344
    2. ' y' → logprob: -2.2579214572906494
    3. 'uf' → logprob: -4.00792121887207
    4. ' uf' → logprob: -6.88292121887207
    5. '   ' → logprob: -8.50792121887207
    6. 'yf' → logprob: -9.00792121887207
    7. 'if' → logprob: -9.13292121887207
    8. '       ' → logprob: -10.38292121887207
    9. 'u' → logprob: -10.38292121887207
    10. 'union' → logprob: -10.50792121887207

Token 446: ' lignes' (ID: 81687)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.013340099714696407
    2. ' y' → logprob: -4.513339996337891
    3. ' lines' → logprob: -6.888339996337891
    4. 'lines' → logprob: -7.763339996337891
    5. '   ' → logprob: -8.88833999633789
    6. 'indices' → logprob: -9.51333999633789
    7. 'union' → logprob: -9.63833999633789
    8. ' lignes' → logprob: -9.76333999633789
    9. 'arms' → logprob: -9.88833999633789
    10. 'uf' → logprob: -9.88833999633789

Token 447: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3928757309913635
    2. ' y' → logprob: -1.7678756713867188
    3. '       ' → logprob: -2.6428756713867188
    4. ',' → logprob: -3.1428756713867188
    5. '[y' → logprob: -3.8928756713867188
    6. ' if' → logprob: -4.892875671386719
    7. 'if' → logprob: -5.017875671386719
    8. ',y' → logprob: -6.392875671386719
    9. '           ' → logprob: -7.767875671386719
    10. '(y' → logprob: -7.892875671386719

Token 448: ' et' (ID: 859)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2942562401294708
    2. 'and' → logprob: -2.1692562103271484
    3. ' y' → logprob: -2.7942562103271484
    4. '   ' → logprob: -2.7942562103271484
    5. ',' → logprob: -4.294256210327148
    6. ')' → logprob: -6.669256210327148
    7. 'y' → logprob: -7.044256210327148
    8. '-' → logprob: -7.294256210327148
    9. ' ' → logprob: -7.669256210327148
    10. ' и' → logprob: -8.044256210327148

Token 449: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014168446883559227
    2. ' y' → logprob: -4.2641682624816895
    3. '(y' → logprob: -12.264168739318848
    4. '	y' → logprob: -16.38916778564453
    5. '   ' → logprob: -16.76416778564453
    6. ' (' → logprob: -17.01416778564453
    7. ' ' → logprob: -18.01416778564453
    8. 'min' → logprob: -18.13916778564453
    9. '    ' → logprob: -18.26416778564453
    10. '[y' → logprob: -18.38916778564453

Token 450: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04874485358595848
    2. ' +' → logprob: -3.0487449169158936
    3. '   ' → logprob: -8.923745155334473
    4. '+y' → logprob: -12.423745155334473
    5. '+
' → logprob: -12.423745155334473
    6. ' ' → logprob: -12.673745155334473
    7. '
' → logprob: -13.048745155334473
    8. 'y' → logprob: -13.048745155334473
    9. '1' → logprob: -13.423745155334473
    10. '[' → logprob: -13.423745155334473

Token 451: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.572941179503687e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -16.375045776367188
    4. '+' → logprob: -16.500045776367188
    5. '   ' → logprob: -17.250045776367188
    6. '(' → logprob: -17.500045776367188
    7. '
' → logprob: -17.750045776367188
    8. '`' → logprob: -17.875045776367188
    9. '0' → logprob: -17.875045776367188
    10. '2' → logprob: -18.375045776367188

Token 452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03144024312496185
    2. 'uf' → logprob: -3.656440258026123
    3. '   ' → logprob: -5.906440258026123
    4. ',' → logprob: -6.906440258026123
    5. ' uf' → logprob: -7.531440258026123
    6. '
' → logprob: -8.531439781188965
    7. '        
' → logprob: -8.906439781188965
    8. ' if' → logprob: -9.156439781188965
    9. ')' → logprob: -9.781439781188965
    10. '.' → logprob: -10.031439781188965

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05145905166864395
    2. '   ' → logprob: -3.1764590740203857
    3. 'uf' → logprob: -5.676458835601807
    4. ' uf' → logprob: -6.051458835601807
    5. '        
' → logprob: -7.551458835601807
    6. ',' → logprob: -7.551458835601807
    7. '    
' → logprob: -8.176459312438965
    8. '    ' → logprob: -8.426459312438965
    9. '.uf' → logprob: -8.801459312438965
    10. '     ' → logprob: -9.051459312438965

Token 454: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' (adapté à ' uf') → logprob: -0.05780458822846413
    2. '       ' → logprob: -3.307804584503174
    3. ' uf' → logprob: -4.182804584503174
    4. '   ' → logprob: -5.557804584503174
    5. 'if' → logprob: -8.557805061340332
    6. 'ufs' → logprob: -9.932805061340332
    7. 'ufi' → logprob: -10.307805061340332
    8. 'ut' → logprob: -10.432805061340332
    9. ' if' → logprob: -11.057805061340332
    10. '.uf' → logprob: -11.307805061340332

Token 455: '.union' (ID: 140875)
  Prédit: '.union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -4.763666947837919e-05
    2. '.' → logprob: -10.00004768371582
    3. ' .' → logprob: -14.00004768371582
    4. '.un' → logprob: -14.12504768371582
    5. '.uniform' → logprob: -15.50004768371582
    6. 'union' → logprob: -15.75004768371582
    7. '.u' → logprob: -16.62504768371582
    8. '.uni' → logprob: -16.87504768371582
    9. '	union' → logprob: -17.37504768371582
    10. '.merge' → logprob: -17.87504768371582

Token 456: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. 'y' → logprob: -15.875066757202148
    4. ' (' → logprob: -16.25006675720215
    5. '(
' → logprob: -16.25006675720215
    6. ' y' → logprob: -16.37506675720215
    7. '((' → logprob: -16.87506675720215
    8. '(Y' → logprob: -18.12506675720215
    9. ',y' → logprob: -19.12506675720215
    10. '	y' → logprob: -19.37506675720215

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0456526055932045
    2. ' ,' → logprob: -3.1706526279449463
    3. ',y' → logprob: -6.420652389526367
    4. '+' → logprob: -7.295652389526367
    5. 'y' → logprob: -9.295652389526367
    6. ' +' → logprob: -9.420652389526367
    7. ' y' → logprob: -9.420652389526367
    8. ')' → logprob: -10.295652389526367
    9. '   ' → logprob: -10.545652389526367
    10. ' ' → logprob: -11.545652389526367

Token 458: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.2729995988775045e-06
    2. ' y' → logprob: -12.000006675720215
    3. '(y' → logprob: -19.3750057220459
    4. '	y' → logprob: -19.7500057220459
    5. ')y' → logprob: -21.8750057220459
    6. '   ' → logprob: -22.2500057220459
    7. 'yj' → logprob: -24.3750057220459
    8. 'yf' → logprob: -24.5000057220459
    9. '‘y' → logprob: -24.8750057220459
    10. ',y' → logprob: -25.1250057220459

Token 459: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04302739351987839
    2. ' +' → logprob: -3.168027400970459
    3. '+y' → logprob: -10.9180269241333
    4. '1' → logprob: -12.6680269241333
    5. 'y' → logprob: -12.7930269241333
    6. ' ' → logprob: -13.4180269241333
    7. ' y' → logprob: -14.2930269241333
    8. '+
' → logprob: -14.2930269241333
    9. '   ' → logprob: -14.7930269241333
    10. ')' → logprob: -15.1680269241333

Token 460: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.250015258789062
    3. '+' → logprob: -13.875015258789062
    4. 'y' → logprob: -14.500015258789062
    5. '0' → logprob: -15.750015258789062
    6. ')' → logprob: -16.500015258789062
    7. '2' → logprob: -16.625015258789062
    8. '   ' → logprob: -17.000015258789062
    9. ' y' → logprob: -17.750015258789062
    10. '<|end|>' → logprob: -17.750015258789062

Token 461: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6550729419104755e-05
    2. ')
' → logprob: -10.250036239624023
    3. '<|end|>' → logprob: -14.625036239624023
    4. ' )' → logprob: -15.250036239624023
    5. ')return' → logprob: -16.000036239624023
    6. '       ' → logprob: -16.250036239624023
    7. ')

' → logprob: -16.875036239624023
    8. '   ' → logprob: -17.000036239624023
    9. ')
' → logprob: -17.750036239624023
    10. '),' → logprob: -17.750036239624023

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11588316410779953
    2. 'if' → logprob: -2.2408831119537354
    3. 'print' → logprob: -6.6158833503723145
    4. '    
' → logprob: -6.7408833503723145
    5. 'for' → logprob: -8.115882873535156
    6. '#' → logprob: -9.740882873535156
    7. '```' → logprob: -9.990882873535156
    8. '<|end|>' → logprob: -10.240882873535156
    9. 'indices' → logprob: -10.490882873535156
    10. ' if' → logprob: -11.490882873535156

Token 463: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10981128364801407
    2. 'components' → logprob: -3.484811305999756
    3. '#' (adapté à ' #') → logprob: -4.359811305999756
    4. 'connected' → logprob: -4.484811305999756
    5. 'groups' → logprob: -4.734811305999756
    6. 'lines' → logprob: -4.859811305999756
    7. 'result' → logprob: -5.109811305999756
    8. 'if' → logprob: -5.234811305999756
    9. 'component' → logprob: -5.609811305999756
    10. 'visited' → logprob: -5.984811305999756

Token 464: ' Pour' (ID: 13931)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -1.161926507949829
    2. 'connected' → logprob: -2.286926507949829
    3. 'lines' → logprob: -2.411926507949829
    4. 'groups' → logprob: -2.536926507949829
    5. '#' → logprob: -2.786926507949829
    6. 'result' → logprob: -3.036926507949829
    7. 'component' → logprob: -3.161926507949829
    8. 'line' → logprob: -3.411926507949829
    9. 'print' → logprob: -3.536926507949829
    10. 'counts' → logprob: -3.536926507949829

Token 465: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5511002540588379
    2. 'i' → logprob: -1.301100254058838
    3. ' chaque' → logprob: -2.301100254058838
    4. ' each' → logprob: -4.426100254058838
    5. 'each' → logprob: -4.426100254058838
    6. ' y' → logprob: -4.551100254058838
    7. ' line' → logprob: -4.676100254058838
    8. ' _' → logprob: -6.426100254058838
    9. 'y' → logprob: -6.926100254058838
    10. ' chacune' → logprob: -7.176100254058838

Token 466: ' ligne' (ID: 19583)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2124309092760086
    2. ' i' → logprob: -1.7124309539794922
    3. ' line' → logprob: -6.087430953979492
    4. 'line' → logprob: -6.337430953979492
    5. 'ligne' → logprob: -6.712430953979492
    6. 'index' → logprob: -7.087430953979492
    7. ' ligne' → logprob: -7.212430953979492
    8. 'y' → logprob: -7.712430953979492
    9. 'ensemble' → logprob: -7.837430953979492
    10. ' y' → logprob: -7.962430953979492

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4740978479385376
    2. ' i' → logprob: -1.8490978479385376
    3. 'i' → logprob: -2.474097728729248
    4. ' in' → logprob: -2.849097728729248
    5. '   ' → logprob: -2.974097728729248
    6. 'index' → logprob: -5.599097728729248
    7. 'n' → logprob: -5.849097728729248
    8. ' for' → logprob: -5.849097728729248
    9. 'line' → logprob: -6.099097728729248
    10. 'in' → logprob: -6.224097728729248

Token 468: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7456434369087219
    2. 'parent' → logprob: -1.6206433773040771
    3. 'count' → logprob: -2.870643377304077
    4. '   ' → logprob: -3.120643377304077
    5. 'result' → logprob: -3.120643377304077
    6. 'parents' → logprob: -3.745643377304077
    7. ' parent' → logprob: -3.745643377304077
    8. 'groups' → logprob: -3.870643377304077
    9. 'root' → logprob: -4.245643615722656
    10. 'roots' → logprob: -4.495643615722656

Token 469: ' cherche' (ID: 52345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05462677776813507
    2. 'count' → logprob: -3.679626703262329
    3. '   ' → logprob: -4.554626941680908
    4. ' print' → logprob: -5.679626941680908
    5. 'comp' → logprob: -6.179626941680908
    6. 'def' → logprob: -6.804626941680908
    7. 'for' → logprob: -6.804626941680908
    8. 'va' → logprob: -7.054626941680908
    9. ' compte' → logprob: -7.054626941680908
    10. '#' → logprob: -7.304626941680908

Token 470: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8345884680747986
    2. 'la' → logprob: -0.9595884680747986
    3. 'son' → logprob: -2.9595885276794434
    4. 'sa' → logprob: -3.4595885276794434
    5. 'l' → logprob: -3.9595885276794434
    6. 'leur' → logprob: -4.459588527679443
    7. ' la' → logprob: -4.584588527679443
    8. 'à' → logprob: -4.584588527679443
    9. ')' → logprob: -4.709588527679443
    10. 'parent' → logprob: -4.959588527679443

Token 471: ' taille' (ID: 41644)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5603915452957153
    2. 'plus' → logprob: -1.8103915452957153
    3. 'nombre' → logprob: -2.310391426086426
    4. 'size' → logprob: -3.560391426086426
    5. 'represent' → logprob: -3.935391426086426
    6. 'tail' → logprob: -4.060391426086426
    7. 're' → logprob: -4.060391426086426
    8. 'max' → logprob: -4.310391426086426
    9. 'ré' → logprob: -4.810391426086426
    10. ' plus' → logprob: -4.935391426086426

Token 472: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4236167669296265
    2. ' =' → logprob: -1.5486167669296265
    3. '=' → logprob: -1.6736167669296265
    4. 'max' → logprob: -1.9236167669296265
    5. '(' → logprob: -2.673616886138916
    6. 'def' → logprob: -2.923616886138916
    7. 's' → logprob: -3.923616886138916
    8. '_max' → logprob: -4.048616886138916
    9. 'de' → logprob: -4.673616886138916
    10. 'of' → logprob: -4.923616886138916

Token 473: ' son' (ID: 2391)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.6551008224487305
    2. 'l' → logprob: -1.0301008224487305
    3. ' l' → logprob: -2.7801008224487305
    4. ' uf' → logprob: -3.7801008224487305
    5. 'son' → logprob: -4.2801008224487305
    6. ' ' → logprob: -5.2801008224487305
    7. ' son' → logprob: -5.4051008224487305
    8. 'la' → logprob: -5.6551008224487305
    9. 'union' → logprob: -6.4051008224487305
    10. '(' → logprob: -6.5301008224487305

Token 474: ' ensemble' (ID: 33081)
  Prédit: 'ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ensemble' → logprob: -0.09461026638746262
    2. 'com' → logprob: -2.4696102142333984
    3. ' ensemble' → logprob: -5.594610214233398
    4. ' compos' → logprob: -6.969610214233398
    5. 'parent' → logprob: -7.969610214233398
    6. 'ense' → logprob: -8.969610214233398
    7. 'union' → logprob: -9.719610214233398
    8. 's' → logprob: -9.969610214233398
    9. 'compl' → logprob: -9.969610214233398
    10. '```' → logprob: -10.094610214233398

Token 475: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12896646559238434
    2. 'for' → logprob: -2.2539665699005127
    3. ' for' → logprob: -5.253966331481934
    4. 'sizes' → logprob: -5.503966331481934
    5. 'result' → logprob: -5.878966331481934
    6. 'print' → logprob: -6.253966331481934
    7. '
' → logprob: -7.878966331481934
    8. 'size' → logprob: -7.878966331481934
    9. 's' → logprob: -8.378966331481934
    10. 'results' → logprob: -8.378966331481934

Token 476: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019125206395983696
    2. 'sizes' → logprob: -5.019124984741211
    3. 'max' → logprob: -5.519124984741211
    4. 'result' → logprob: -6.269124984741211
    5. 'for' → logprob: -6.519124984741211
    6. ' and' → logprob: -7.144124984741211
    7. 'results' → logprob: -7.269124984741211
    8. '#' → logprob: -7.519124984741211
    9. ' for' → logprob: -7.644124984741211
    10. 'print' → logprob: -7.894124984741211

Token 477: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.710797131061554
    2. 'print' → logprob: -1.9607970714569092
    3. 'et' → logprob: -2.335797071456909
    4. ' et' → logprob: -2.585797071456909
    5. '#' (adapté à ' #') → logprob: -2.835797071456909
    6. 'end' → logprob: -2.960797071456909
    7. ' and' → logprob: -3.210797071456909
    8. 'for' → logprob: -4.210797309875488
    9. '"' → logprob: -5.835797309875488
    10. 'import' → logprob: -5.835797309875488

Token 478: ' c' (ID: 274)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.8092337846755981
    2. '   ' → logprob: -1.3092337846755981
    3. 'for' → logprob: -2.4342336654663086
    4. 'result' → logprob: -2.6842336654663086
    5. 'print' → logprob: -3.0592336654663086
    6. '#' → logprob: -3.6842336654663086
    7. 'results' → logprob: -4.309233665466309
    8. 'res' → logprob: -4.559233665466309
    9. 'max' → logprob: -4.934233665466309
    10. ' for' → logprob: -5.559233665466309

Token 479: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.5414599776268005
    2. 'la' → logprob: -2.5414600372314453
    3. 'a' → logprob: -3.2914600372314453
    4. 'h' → logprob: -3.4164600372314453
    5. 'es' → logprob: -3.5414600372314453
    6. 'est' → logprob: -3.7914600372314453
    7. 'ont' → logprob: -3.7914600372314453
    8. 'i' → logprob: -4.166460037231445
    9. 'e' → logprob: -4.166460037231445
    10. 'ol' → logprob: -4.291460037231445

Token 480: '-à' (ID: 56297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6723440885543823
    2. 'à' → logprob: -1.7973440885543823
    3. '-à' → logprob: -1.7973440885543823
    4. 'max' → logprob: -2.547344207763672
    5. '[' → logprob: -3.672344207763672
    6. ' à' → logprob: -4.547344207763672
    7. '=' → logprob: -5.422344207763672
    8. 'sum' → logprob: -5.922344207763672
    9. '    ' → logprob: -6.422344207763672
    10. '-' → logprob: -6.422344207763672

Token 481: '-dire' (ID: 76064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.33878251910209656
    2. '   ' → logprob: -1.713782548904419
    3. 'dire' → logprob: -3.963782548904419
    4. '       ' → logprob: -4.08878231048584
    5. '`' → logprob: -4.33878231048584
    6. '```' → logprob: -4.58878231048584
    7. 'la' → logprob: -5.46378231048584
    8. 'to' → logprob: -5.71378231048584
    9. 'tout' → logprob: -5.71378231048584
    10. 'a' → logprob: -5.71378231048584

Token 482: ' combien' (ID: 106648)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21527330577373505
    2. 'la' → logprob: -2.465273380279541
    3. ' la' → logprob: -3.340273380279541
    4. 'self' → logprob: -3.715273380279541
    5. 'len' → logprob: -4.090273380279541
    6. '   ' → logprob: -4.840273380279541
    7. 'le' → logprob: -4.965273380279541
    8. ' max' → logprob: -5.090273380279541
    9. 'uf' → logprob: -5.715273380279541
    10. 'print' → logprob: -6.215273380279541

Token 483: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4186449348926544
    2. 'de' → logprob: -1.418644905090332
    3. ' d' → logprob: -2.668644905090332
    4. ' de' → logprob: -3.668644905090332
    5. '   ' → logprob: -6.043644905090332
    6. '#' → logprob: -7.418644905090332
    7. 'elle' → logprob: -7.418644905090332
    8. 'self' → logprob: -8.418644905090332
    9. '```' → logprob: -8.918644905090332
    10. 'on' → logprob: -8.918644905090332

Token 484: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.41888922452926636
    2. 'l' → logprob: -1.9188892841339111
    3. 'élé' → logprob: -2.793889284133911
    4. 'indices' → logprob: -3.168889284133911
    5. 'lines' → logprob: -3.668889284133911
    6. 'con' → logprob: -4.168889045715332
    7. ' indices' → logprob: -4.293889045715332
    8. ' éléments' → logprob: -4.793889045715332
    9. ' convoy' → logprob: -5.168889045715332
    10. 'march' → logprob: -5.418889045715332

Token 485: ' sont' (ID: 5242)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -1.0416115522384644
    2. 'max' → logprob: -2.416611671447754
    3. 'on' → logprob: -2.541611671447754
    4. 'ont' → logprob: -2.541611671447754
    5. ' au' → logprob: -3.166611671447754
    6. '#' → logprob: -3.166611671447754
    7. 'pe' → logprob: -3.166611671447754
    8. 's' → logprob: -3.416611671447754
    9. 'dans' → logprob: -3.416611671447754
    10. 'elle' → logprob: -3.541611671447754

Token 486: ' connect' (ID: 4837)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.4763212203979492
    2. 'dans' → logprob: -1.7263212203979492
    3. ' connect' → logprob: -1.8513212203979492
    4. ' reli' → logprob: -4.226321220397949
    5. 'conn' → logprob: -4.351321220397949
    6. ' dans' → logprob: -4.476321220397949
    7. 'r' → logprob: -7.226321220397949
    8. ' accessibles' → logprob: -7.601321220397949
    9. 'attach' → logprob: -7.851321220397949
    10. 'connected' → logprob: -7.851321220397949

Token 487: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.0028615815099328756
    2. 'és' → logprob: -5.877861499786377
    3. 'es' → logprob: -10.252861976623535
    4. 'é' → logprob: -11.002861976623535
    5. 'ée' → logprob: -12.877861976623535
    6. 'nées' → logprob: -13.752861976623535
    7. '{' → logprob: -14.627861976623535
    8. '   ' → logprob: -15.252861976623535
    9. 'ees' → logprob: -16.00286102294922
    10. '```' → logprob: -16.25286102294922

Token 488: '
' (ID: 198)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5602038502693176
    2. '   ' → logprob: -1.8102037906646729
    3. ' via' → logprob: -2.810203790664673
    4. 'à' → logprob: -3.185203790664673
    5. '[' → logprob: -3.685203790664673
    6. 'def' → logprob: -3.810203790664673
    7. ',' → logprob: -3.935203790664673
    8. '.' → logprob: -4.060204029083252
    9. ' ' → logprob: -4.685204029083252
    10. 'au' → logprob: -5.060204029083252

Token 489: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003853036556392908
    2. 'for' → logprob: -6.003852844238281
    3. ' for' → logprob: -7.253852844238281
    4. '
' → logprob: -7.503852844238281
    5. '    
' → logprob: -9.378852844238281
    6. 'print' → logprob: -10.753852844238281
    7. ',' → logprob: -12.503852844238281
    8. '  
' → logprob: -13.128852844238281
    9. '	for' → logprob: -13.628852844238281
    10. '       ' → logprob: -13.628852844238281

Token 490: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8544262647628784
    2. 'for' → logprob: -0.9794262647628784
    3. 'sizes' → logprob: -1.8544262647628784
    4. 'result' (adapté à ' result') → logprob: -3.604426383972168
    5. ' for' → logprob: -4.854426383972168
    6. 'results' → logprob: -5.854426383972168
    7. 'size' → logprob: -6.479426383972168
    8. 'connected' → logprob: -7.104426383972168
    9. 'counts' → logprob: -7.854426383972168
    10. 'print' → logprob: -7.979426383972168

Token 491: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769669413566589
    2. '=' → logprob: -0.8269669413566589
    3. 's' → logprob: -7.326966762542725
    4. '_' → logprob: -7.951966762542725
    5. '   ' → logprob: -12.201967239379883
    6. '[' → logprob: -12.451967239379883
    7. '=[]' → logprob: -12.826967239379883
    8. '_=' → logprob: -13.701967239379883
    9. ',' → logprob: -13.826967239379883
    10. ' ' → logprob: -14.326967239379883

Token 492: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002014048397541046
    2. ' [' → logprob: -7.25201416015625
    3. '[self' → logprob: -7.50201416015625
    4. '[max' → logprob: -8.00201416015625
    5. '[]' → logprob: -9.25201416015625
    6. '[u' → logprob: -9.25201416015625
    7. '[len' → logprob: -10.37701416015625
    8. '   ' → logprob: -10.62701416015625
    9. '[]
' → logprob: -10.62701416015625
    10. '[n' → logprob: -11.00201416015625

Token 493: '0' (ID: 15)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.004976389463990927
    2. '0' → logprob: -5.379976272583008
    3. '1' → logprob: -8.629976272583008
    4. ' uf' → logprob: -9.254976272583008
    5. 'ufs' → logprob: -10.004976272583008
    6. 'str' → logprob: -11.129976272583008
    7. '   ' → logprob: -11.629976272583008
    8. ' ' → logprob: -13.379976272583008
    9. 'ufi' → logprob: -13.504976272583008
    10. 'uff' → logprob: -13.629976272583008

Token 494: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07941106706857681
    2. ']*' → logprob: -2.579411029815674
    3. ' for' → logprob: -8.204411506652832
    4. 'for' → logprob: -8.454411506652832
    5. ']*(' → logprob: -11.079411506652832
    6. ' ]' → logprob: -11.829411506652832
    7. '   ' → logprob: -12.329411506652832
    8. ')' → logprob: -12.704411506652832
    9. ')]' → logprob: -13.329411506652832
    10. '()]' → logprob: -13.829411506652832

Token 495: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3403576910495758
    2. ']' → logprob: -2.090357780456543
    3. ' for' → logprob: -2.340357780456543
    4. ']*' → logprob: -2.715357780456543
    5. '   ' → logprob: -6.590357780456543
    6. '*' → logprob: -7.465357780456543
    7. 'n' → logprob: -8.965357780456543
    8. ')' → logprob: -9.340357780456543
    9. '
' → logprob: -9.590357780456543
    10. '*n' → logprob: -10.090357780456543

Token 496: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: 0.0
    2. ' n' → logprob: -17.0
    3. '(n' → logprob: -20.5
    4. '	n' → logprob: -21.5
    5. 'len' → logprob: -21.5
    6. 'python' → logprob: -21.75
    7. '   ' → logprob: -21.875
    8. ')n' → logprob: -22.375
    9. 'sys' → logprob: -22.5
    10. 'import' → logprob: -22.875

Token 497: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12637744843959808
    2. '   ' → logprob: -2.7513773441314697
    3. 'for' → logprob: -3.0013773441314697
    4. ' for' → logprob: -5.376377582550049
    5. '    
' → logprob: -8.12637710571289
    6. '<|end|>' → logprob: -9.25137710571289
    7. '  
' → logprob: -9.50137710571289
    8. '	for' → logprob: -10.50137710571289
    9. ' 
' → logprob: -11.37637710571289
    10. '   
' → logprob: -11.62637710571289

Token 498: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5859896540641785
    2. '   ' → logprob: -0.8359896540641785
    3. ' for' → logprob: -5.085989475250244
    4. '
' → logprob: -5.585989475250244
    5. '	for' → logprob: -9.960989952087402
    6. '    
' → logprob: -11.085989952087402
    7. '```' → logprob: -13.710989952087402
    8. '  
' → logprob: -14.210989952087402
    9. '<|end|>' → logprob: -14.335989952087402
    10. '\n' → logprob: -14.585989952087402

Token 499: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007375618442893028
    2. '   ' → logprob: -7.25073766708374
    3. ' for' → logprob: -10.500737190246582
    4. '	for' → logprob: -15.875737190246582
    5. '
' → logprob: -18.0007381439209
    6. '    
' → logprob: -19.0007381439209
    7. '```' → logprob: -19.5007381439209
    8. '  ' → logprob: -20.7507381439209
    9. ' ' → logprob: -21.1257381439209
    10. '<|end|>' → logprob: -21.3757381439209

Token 500: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.935296834039036e-06
    2. ' i' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.625003814697266
    4. '	i' → logprob: -20.125003814697266
    5. '```' → logprob: -20.250003814697266
    6. 'line' → logprob: -20.875003814697266
    7. 'v' → logprob: -21.125003814697266
    8. 'x' → logprob: -21.375003814697266
    9. 'a' → logprob: -21.750003814697266
    10. 'y' → logprob: -21.875003814697266

Token 501: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018265709280967712
    2. 'in' → logprob: -4.018265724182129
    3. 'range' → logprob: -9.643265724182129
    4. ',' → logprob: -10.893265724182129
    5. 'n' → logprob: -11.018265724182129
    6. ' ' → logprob: -12.268265724182129
    7. '   ' → logprob: -12.393265724182129
    8. 's' → logprob: -13.643265724182129
    9. ')' → logprob: -13.893265724182129
    10. ' range' → logprob: -14.018265724182129

Token 502: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.000045776367188
    4. '(range' → logprob: -18.375045776367188
    5. ' ' → logprob: -20.500045776367188
    6. '  ' → logprob: -21.000045776367188
    7. '	range' → logprob: -21.250045776367188
    8. 'rang' → logprob: -21.750045776367188
    9. 'n' → logprob: -22.125045776367188
    10. 'r' → logprob: -22.500045776367188

Token 503: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011069518513977528
    2. 'n' → logprob: -4.511069297790527
    3. '(' → logprob: -10.761069297790527
    4. ' n' → logprob: -15.386069297790527
    5. '   ' → logprob: -16.511070251464844
    6. ',n' → logprob: -16.761070251464844
    7. '(
' → logprob: -17.011070251464844
    8. ')n' → logprob: -17.136070251464844
    9. ' (' → logprob: -17.386070251464844
    10. '	n' → logprob: -17.761070251464844

Token 504: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3136679232120514
    2. '):
' → logprob: -1.313667893409729
    3. '):
' → logprob: -8.438668251037598
    4. ')' → logprob: -8.813668251037598
    5. '   ' → logprob: -10.813668251037598
    6. ' ):' → logprob: -11.938668251037598
    7. ':' → logprob: -12.313668251037598
    8. 'n' → logprob: -12.563668251037598
    9. ']:' → logprob: -13.313668251037598
    10. ',' → logprob: -14.313668251037598

Token 505: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03255736082792282
    2. 'result' → logprob: -3.657557249069214
    3. ' result' → logprob: -5.157557487487793
    4. '       ' → logprob: -7.657557487487793
    5. '	result' → logprob: -12.407557487487793
    6. '```' → logprob: -12.657557487487793
    7. '    
' → logprob: -14.907557487487793
    8. 'size' → logprob: -15.407557487487793
    9. ',result' → logprob: -15.407557487487793
    10. ')' → logprob: -15.407557487487793

Token 506: ' root' (ID: 6577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7274219989776611
    2. 'root' (adapté à ' root') → logprob: -0.7274219989776611
    3. 'parent' → logprob: -4.102421760559082
    4. 'p' → logprob: -4.852421760559082
    5. 'rep' → logprob: -4.977421760559082
    6. '   ' → logprob: -6.477421760559082
    7. 'leader' → logprob: -8.352421760559082
    8. 'repr' → logprob: -8.602421760559082
    9. 'par' → logprob: -8.852421760559082
    10. 'represent' → logprob: -9.227421760559082

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143292844295502
    2. '=' → logprob: -1.7014329433441162
    3. ')' → logprob: -11.451433181762695
    4. '=i' → logprob: -13.076433181762695
    5. ']' → logprob: -13.326433181762695
    6. '   ' → logprob: -13.701433181762695
    7. '=root' → logprob: -14.451433181762695
    8. '_i' → logprob: -14.451433181762695
    9. ',' → logprob: -14.576433181762695
    10. 'i' → logprob: -15.326433181762695

Token 508: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -0.00011033779446734115
    2. ' uf' → logprob: -9.125110626220703
    3. 'ufs' → logprob: -14.125110626220703
    4. '   ' → logprob: -15.375110626220703
    5. 'ufi' → logprob: -15.375110626220703
    6. 'ufe' → logprob: -17.000110626220703
    7. 'uft' → logprob: -17.500110626220703
    8. 'ug' → logprob: -17.500110626220703
    9. 'ud' → logprob: -17.500110626220703
    10. '.uf' → logprob: -17.500110626220703

Token 509: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -6.869017852295656e-06
    2. 'find' → logprob: -12.125006675720215
    3. '.' → logprob: -13.625006675720215
    4. '.findall' → logprob: -16.00000762939453
    5. ' .' → logprob: -16.62500762939453
    6. '.parent' → logprob: -16.87500762939453
    7. '=find' → logprob: -16.87500762939453
    8. ').' → logprob: -17.62500762939453
    9. ' find' → logprob: -18.75000762939453
    10. '.Find' → logprob: -19.37500762939453

Token 510: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.375
    3. '(
' → logprob: -20.0
    4. ' (' → logprob: -20.0
    5. '(I' → logprob: -20.5
    6. '(ii' → logprob: -21.875
    7. '[i' → logprob: -22.875
    8. '(u' → logprob: -22.875
    9. '((' → logprob: -23.875
    10. '(a' → logprob: -24.125

Token 511: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06222984194755554
    2. ')' → logprob: -2.812229871749878
    3. ')
' → logprob: -8.687230110168457
    4. '       ' → logprob: -9.687230110168457
    5. '   ' → logprob: -10.937230110168457
    6. ']
' → logprob: -12.062230110168457
    7. ']' → logprob: -12.312230110168457
    8. ')

' → logprob: -13.687230110168457
    9. ' )
' → logprob: -13.937230110168457
    10. '])
' → logprob: -14.562230110168457

Token 512: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6210744380950928
    2. '   ' → logprob: -0.8710744380950928
    3. ' result' → logprob: -3.6210744380950928
    4. '       ' → logprob: -4.246074676513672
    5. '
' → logprob: -5.871074676513672
    6. '    
' → logprob: -9.371074676513672
    7. '```' → logprob: -9.996074676513672
    8. '	result' → logprob: -10.496074676513672
    9. ')' → logprob: -10.996074676513672
    10. '        
' → logprob: -11.246074676513672

Token 513: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.002814505249261856
    2. '   ' → logprob: -6.002814292907715
    3. ' result' → logprob: -8.627814292907715
    4. '       ' → logprob: -8.752814292907715
    5. '	result' → logprob: -14.627814292907715
    6. '  ' → logprob: -14.877814292907715
    7. '           ' → logprob: -15.127814292907715
    8. '
' → logprob: -15.252814292907715
    9. '```' → logprob: -16.25281524658203
    10. ' ' → logprob: -16.62781524658203

Token 514: '[i' (ID: 1768)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.01153804361820221
    2. '[result' → logprob: -4.511538028717041
    3. '[' → logprob: -7.886538028717041
    4. '[i' → logprob: -9.2615385055542
    5. '[size' → logprob: -11.5115385055542
    6. '[self' → logprob: -12.1365385055542
    7. '[u' → logprob: -13.7615385055542
    8. '[node' → logprob: -15.0115385055542
    9. '[parent' → logprob: -15.2615385055542
    10. 'root' → logprob: -15.5115385055542

Token 515: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0018144060159102082
    2. ']=' → logprob: -6.376814365386963
    3. ' ]' → logprob: -9.751814842224121
    4. '=' → logprob: -9.876814842224121
    5. ' =' → logprob: -13.251814842224121
    6. ')' → logprob: -14.126814842224121
    7. ']+=' → logprob: -17.001813888549805
    8. '[' → logprob: -17.126813888549805
    9. ']==' → logprob: -17.501813888549805
    10. ')=' → logprob: -17.501813888549805

Token 516: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015023599844425917
    2. ' =' → logprob: -6.501502513885498
    3. '.=' → logprob: -18.001502990722656
    4. '=int' → logprob: -18.501502990722656
    5. '=
' → logprob: -18.626502990722656
    6. '=

' → logprob: -19.001502990722656
    7. '=s' → logprob: -19.126502990722656
    8. '==' → logprob: -19.251502990722656
    9. '=}' → logprob: -19.626502990722656
    10. ']=' → logprob: -19.751502990722656

Token 517: ' uf' (ID: 35772)
  Prédit: 'uf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uf' → logprob: -1.4259644558478612e-05
    2. ' uf' → logprob: -11.250014305114746
    3. 'ufs' → logprob: -13.875014305114746
    4. 'ufi' → logprob: -16.37501335144043
    5. '   ' → logprob: -17.75001335144043
    6. '.uf' → logprob: -17.87501335144043
    7. 'uff' → logprob: -17.87501335144043
    8. 'len' → logprob: -18.25001335144043
    9. 'Uf' → logprob: -18.50001335144043
    10. 'ufe' → logprob: -18.75001335144043

Token 518: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.1472419600977446e-06
    2. '.s' → logprob: -14.500000953674316
    3. ' .' → logprob: -15.000000953674316
    4. '.' → logprob: -15.375000953674316
    5. 'size' → logprob: -17.000001907348633
    6. '.value' → logprob: -19.375001907348633
    7. '.type' → logprob: -19.375001907348633
    8. '.count' → logprob: -19.375001907348633
    9. '.score' → logprob: -19.375001907348633
    10. '.status' → logprob: -19.500001907348633

Token 519: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.0002614550176076591
    2. '[' → logprob: -8.250261306762695
    3. 'root' → logprob: -16.000261306762695
    4. ' [' → logprob: -17.500261306762695
    5. '[u' → logprob: -18.000261306762695
    6. '(root' → logprob: -18.000261306762695
    7. '[result' → logprob: -18.000261306762695
    8. '[self' → logprob: -18.125261306762695
    9. '```' → logprob: -18.375261306762695
    10. '[parent' → logprob: -18.625261306762695

Token 520: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006562008056789637
    2. ')' → logprob: -7.5006561279296875
    3. ' ]' → logprob: -9.375656127929688
    4. '[' → logprob: -12.000656127929688
    5. ')]' → logprob: -12.375656127929688
    6. '[i' → logprob: -12.875656127929688
    7. '])' → logprob: -13.500656127929688
    8. '   ' → logprob: -14.125656127929688
    9. '()]' → logprob: -14.125656127929688
    10. ']
' → logprob: -14.250656127929688

Token 521: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29901471734046936
    2. '
' → logprob: -2.4240148067474365
    3. 'print' → logprob: -2.4240148067474365
    4. 'for' → logprob: -2.6740148067474365
    5. '```' → logprob: -4.674014568328857
    6. '<|end|>' → logprob: -6.799014568328857
    7. '    
' → logprob: -6.924014568328857
    8. ' for' → logprob: -8.049015045166016
    9. 'return' → logprob: -8.549015045166016
    10. 'if' → logprob: -8.549015045166016

Token 522: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08386750519275665
    2. 'for' → logprob: -2.5838675498962402
    3. '   ' → logprob: -5.33386754989624
    4. '
' → logprob: -9.458867073059082
    5. ' for' → logprob: -10.458867073059082
    6. 'return' → logprob: -10.958867073059082
    7. ' print' → logprob: -11.458867073059082
    8. '    
' → logprob: -12.708867073059082
    9. '```' → logprob: -13.833867073059082
    10. 'sys' → logprob: -14.083867073059082

Token 523: ' Aff' (ID: 13741)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.038611456751823425
    2. 'print' → logprob: -3.28861141204834
    3. 'return' → logprob: -7.66361141204834
    4. '#' → logprob: -9.66361141204834
    5. '   ' → logprob: -10.66361141204834
    6. ' for' → logprob: -11.28861141204834
    7. '#print' → logprob: -14.91361141204834
    8. 'sys' → logprob: -15.28861141204834
    9. 'pour' → logprob: -16.038612365722656
    10. ' print' → logprob: -16.038612365722656

Token 524: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.33641427755355835
    2. 'iche' → logprob: -1.5864143371582031
    3. 'ich' → logprob: -3.586414337158203
    4. 'f' → logprob: -3.836414337158203
    5. 'ichage' → logprob: -4.086414337158203
    6. '#' → logprob: -5.336414337158203
    7. 'ic' → logprob: -5.586414337158203
    8. '   ' → logprob: -5.586414337158203
    9. 'print' → logprob: -6.211414337158203
    10. 'fic' → logprob: -7.836414337158203

Token 525: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6382904648780823
    2. 'for' → logprob: -1.1382904052734375
    3. '   ' → logprob: -1.8882904052734375
    4. ' for' → logprob: -9.513290405273438
    5. '
' → logprob: -11.013290405273438
    6. ' print' → logprob: -11.388290405273438
    7. '    
' → logprob: -12.013290405273438
    8. '```' → logprob: -14.638290405273438
    9. '	print' → logprob: -15.263290405273438
    10. '	for' → logprob: -15.638290405273438

Token 526: ' résultat' (ID: 62556)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5620847940444946
    2. '"' → logprob: -0.9370847940444946
    3. 'result' → logprob: -3.312084674835205
    4. ''\' → logprob: -7.562084674835205
    5. '"\' → logprob: -7.812084674835205
    6. ' result' → logprob: -8.812085151672363
    7. 'join' → logprob: -9.062085151672363
    8. 'print' → logprob: -9.187085151672363
    9. '(' → logprob: -9.312085151672363
    10. '   ' → logprob: -9.812085151672363

Token 527: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09574853628873825
    2. 'for' → logprob: -2.5957484245300293
    3. '   ' → logprob: -4.095748424530029
    4. '
' → logprob: -10.220748901367188
    5. ' for' → logprob: -10.845748901367188
    6. ' print' → logprob: -11.095748901367188
    7. '	print' → logprob: -13.595748901367188
    8. '    
' → logprob: -13.845748901367188
    9. '```' → logprob: -15.095748901367188
    10. '	for' → logprob: -15.470748901367188

Token 528: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1581806242465973
    2. 'print' → logprob: -2.1581807136535645
    3. '   ' → logprob: -3.6581807136535645
    4. '
' → logprob: -5.6581807136535645
    5. ' for' → logprob: -6.5331807136535645
    6. '    
' → logprob: -10.533180236816406
    7. ' print' → logprob: -11.158180236816406
    8. '	for' → logprob: -13.158180236816406
    9. '```' → logprob: -13.658180236816406
    10. '  
' → logprob: -14.158180236816406

Token 529: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0035131184849888086
    2. 'for' → logprob: -5.753513336181641
    3. '   ' → logprob: -8.00351333618164
    4. ' print' → logprob: -13.87851333618164
    5. ' for' → logprob: -16.37851333618164
    6. '    
' → logprob: -18.12851333618164
    7. '
' → logprob: -19.50351333618164
    8. '```' → logprob: -20.00351333618164
    9. '	print' → logprob: -20.62851333618164
    10. 'sys' → logprob: -20.87851333618164

Token 530: '('' (ID: 706)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.08475065231323242
    2. '(' → logprob: -2.8347506523132324
    3. '('' → logprob: -4.459750652313232
    4. '("' → logprob: -4.709750652313232
    5. '(result' → logprob: -6.334750652313232
    6. '(*(' → logprob: -9.95975112915039
    7. '(*)' → logprob: -10.08475112915039
    8. '(tuple' → logprob: -10.20975112915039
    9. '(len' → logprob: -10.95975112915039
    10. '(max' → logprob: -11.33475112915039

Token 531: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00044008632539771497
    2. ''\' → logprob: -8.375439643859863
    3. '"' → logprob: -9.000439643859863
    4. '('' → logprob: -9.750439643859863
    5. '*' → logprob: -12.000439643859863
    6. ''end' → logprob: -12.125439643859863
    7. ' '' → logprob: -12.250439643859863
    8. ''*' → logprob: -13.375439643859863
    9. '\' → logprob: -13.750439643859863
    10. ')' → logprob: -14.250439643859863

Token 532: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.1472419600977446e-06
    2. 'jo' → logprob: -14.500000953674316
    3. 'print' → logprob: -14.625000953674316
    4. 'j' → logprob: -15.625000953674316
    5. ' join' → logprob: -18.000001907348633
    6. '.join' → logprob: -18.500001907348633
    7. 'joins' → logprob: -19.250001907348633
    8. '.' → logprob: -19.625001907348633
    9. 'joint' → logprob: -19.625001907348633
    10. 'jou' → logprob: -19.750001907348633

Token 533: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006921819876879454
    2. '(str' → logprob: -7.750692367553711
    3. 'map' → logprob: -8.250692367553711
    4. 'str' → logprob: -15.750692367553711
    5. ' map' → logprob: -16.00069236755371
    6. '	map' → logprob: -16.12569236755371
    7. ',map' → logprob: -17.75069236755371
    8. '.map' → logprob: -18.87569236755371
    9. '[str' → logprob: -19.62569236755371
    10. '(' → logprob: -19.87569236755371

Token 534: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -7.64839569455944e-05
    2. 'str' → logprob: -9.500076293945312
    3. '=str' → logprob: -14.125076293945312
    4. '[str' → logprob: -14.375076293945312
    5. ' str' → logprob: -15.500076293945312
    6. ',str' → logprob: -16.875076293945312
    7. '(' → logprob: -18.375076293945312
    8. ':str' → logprob: -18.875076293945312
    9. '	str' → logprob: -19.250076293945312
    10. '```' → logprob: -19.375076293945312

Token 535: ',' (ID: 11)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.014611078426241875
    2. ',result' → logprob: -4.26461124420166
    3. 'result' → logprob: -7.88961124420166
    4. ',' → logprob: -9.76461124420166
    5. ' (' → logprob: -11.63961124420166
    6. ' result' → logprob: -12.51461124420166
    7. '=result' → logprob: -13.38961124420166
    8. '/result' → logprob: -14.76461124420166
    9. '(' → logprob: -14.88961124420166
    10. '   ' → logprob: -15.88961124420166

Token 536: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -6.2729995988775045e-06
    2. ' result' → logprob: -12.000006675720215
    3. '(result' → logprob: -19.0000057220459
    4. '   ' → logprob: -21.6250057220459
    5. ',result' → logprob: -23.1250057220459
    6. '	result' → logprob: -23.6250057220459
    7. '[result' → logprob: -24.0000057220459
    8. '=result' → logprob: -24.1250057220459
    9. '$result' → logprob: -24.7500057220459
    10. ' ' → logprob: -25.6250057220459

Token 537: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.017757700756192207
    2. ')))' → logprob: -4.267757892608643
    3. '(result' → logprob: -5.642757892608643
    4. '(' → logprob: -10.892757415771484
    5. ')' → logprob: -11.017757415771484
    6. ' ))' → logprob: -12.767757415771484
    7. ',result' → logprob: -13.142757415771484
    8. 'result' → logprob: -13.642757415771484
    9. '(res' → logprob: -13.642757415771484
    10. '()))' → logprob: -14.267757415771484

Token 538: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00014704519708175212
    2. ' if' → logprob: -9.875146865844727
    3. '```' → logprob: -9.875146865844727
    4. '<|end|>' → logprob: -10.500146865844727
    5. '
' → logprob: -11.500146865844727
    6. '\n' → logprob: -13.625146865844727
    7. '\' → logprob: -13.875146865844727
    8. '#' → logprob: -13.875146865844727
    9. '  
' → logprob: -14.125146865844727
    10. '    
' → logprob: -14.125146865844727

Token 539: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01818026416003704
    2. '__' → logprob: -4.0181803703308105
    3. '_' → logprob: -10.768179893493652
    4. '_name' → logprob: -12.018179893493652
    5. '___' → logprob: -13.768179893493652
    6. ' ' → logprob: -14.268179893493652
    7. ' ___' → logprob: -14.393179893493652
    8. ' _' → logprob: -14.643179893493652
    9. 'name' → logprob: -14.893179893493652
    10. ' ' → logprob: -17.14318084716797

Token 540: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05628405511379242
    2. ' ==' → logprob: -3.056283950805664
    3. ' __' → logprob: -5.681283950805664
    4. '==' → logprob: -5.931283950805664
    5. '.__' → logprob: -6.806283950805664
    6. '=="' → logprob: -8.681283950805664
    7. 'name' → logprob: -9.306283950805664
    8. '__.__' → logprob: -9.431283950805664
    9. '=='' → logprob: -10.431283950805664
    10. '__.' → logprob: -10.931283950805664

Token 541: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.008129963040119e-06
    2. '__.__' → logprob: -12.625003814697266
    3. '_' → logprob: -15.625003814697266
    4. '==' → logprob: -15.875003814697266
    5. '__.' → logprob: -16.125003814697266
    6. '__
' → logprob: -16.375003814697266
    7. '___' → logprob: -16.875003814697266
    8. '____' → logprob: -17.000003814697266
    9. '__["' → logprob: -17.750003814697266
    10. '__('' → logprob: -18.125003814697266

Token 542: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005553781986236572
    2. '==' → logprob: -5.380553722381592
    3. ' ==' → logprob: -7.380553722381592
    4. '=="' → logprob: -8.13055419921875
    5. '___' → logprob: -12.38055419921875
    6. '_' → logprob: -12.50555419921875
    7. '__.__' → logprob: -12.50555419921875
    8. '=='' → logprob: -14.25555419921875
    9. '__["' → logprob: -14.63055419921875
    10. '__":
' → logprob: -14.88055419921875

Token 543: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029764611274003983
    2. ''' → logprob: -3.5297646522521973
    3. '__' → logprob: -11.404764175415039
    4. ' "__' → logprob: -12.779764175415039
    5. ' '__' → logprob: -16.27976417541504
    6. '"name' → logprob: -17.52976417541504
    7. '   ' → logprob: -17.90476417541504
    8. ' ' → logprob: -17.90476417541504
    9. ''"' → logprob: -18.02976417541504
    10. '("__' → logprob: -18.27976417541504

Token 544: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00017505438881926239
    2. '__' → logprob: -8.875175476074219
    3. 'name' → logprob: -10.875175476074219
    4. '"' → logprob: -11.125175476074219
    5. ' main' → logprob: -14.625175476074219
    6. ''' → logprob: -15.125175476074219
    7. 'ma' → logprob: -15.625175476074219
    8. 'm' → logprob: -15.750175476074219
    9. '_main' → logprob: -15.750175476074219
    10. 'built' → logprob: -16.50017547607422

Token 545: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3168850541114807
    2. '__":
' → logprob: -1.316884994506836
    3. '__:' → logprob: -5.816884994506836
    4. '__':
' → logprob: -7.691884994506836
    5. '__.' → logprob: -9.691884994506836
    6. '__["' → logprob: -9.941884994506836
    7. ':' → logprob: -10.816884994506836
    8. '__.__' → logprob: -11.316884994506836
    9. '.' → logprob: -11.816884994506836
    10. '==' → logprob: -11.816884994506836

Token 546: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.599403423024341e-05
    2. '__' → logprob: -10.125065803527832
    3. ' main' → logprob: -10.875065803527832
    4. '   ' → logprob: -12.500065803527832
    5. '	main' → logprob: -12.875065803527832
    6. '"' → logprob: -14.625065803527832
    7. '_main' → logprob: -15.875065803527832
    8. ' ' → logprob: -17.00006675720215
    9. 'Main' → logprob: -17.50006675720215
    10. '    
' → logprob: -18.37506675720215

Token 547: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.25
    4. '   ' → logprob: -23.625
    5. '.main' → logprob: -25.875
    6. '(main' → logprob: -27.25
    7. '_main' → logprob: -27.5
    8. 'Main' → logprob: -29.375
    9. 'mainwindow' → logprob: -29.5
    10. '  ' → logprob: -29.75

Token 548: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 546
Tokens correctement prédits (1ère position, stricte): 189
Tokens correctement prédits (1ère position, avec adaptation): 212
Tokens correctement prédits (top 10): 408
Précision stricte (1ère position): 34.62%
Précision adaptée (1ère position): 38.83%
Précision (top 10): 74.73%
================================================================================
