================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def overlap(a, b):
    max_olap = 0
    for i in range(1, min(len(a), len(b)) + 1):
        if a[-i:] == b[:i]:
            max_olap = i
    return max_olap

while True:
    n = int(input())
    if n == 0:
        break
    cities = []
    for _ in range(n):
        cities.append(input())

    # Remove duplicates and substrings
    filtered = []
    for city in cities:
        skip = False
        for other in cities:
            if city != other and city in other:
                skip = True
                break
        if not skip:
            filtered.append(city)
    cities = filtered

    n = len(cities)
    olap = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if i != j:
                olap[i][j] = overlap(cities[i], cities[j])

    dp = [[float('inf')] * n for _ in range(1<<n)]
    for i in range(n):
        dp[1<<i][i] = len(cities[i])

    for mask in range(1<<n):
        for last in range(n):
            if dp[mask][last] == float('inf'):
                continue
            for nxt in range(n):
                if mask & (1 << nxt):
                    continue
                cost = dp[mask][last] + len(cities[nxt]) - olap[last][nxt]
                if dp[mask | (1 << nxt)][nxt] > cost:
                    dp[mask | (1 << nxt)][nxt] = cost

    ans = min(dp[(1<<n)-1])
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' overlap' (ID: 56631)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6526117920875549
    2. ',' → logprob: -1.1526117324829102
    3. '[' → logprob: -1.9026117324829102
    4. '_' → logprob: -5.02761173248291
    5. 's' → logprob: -5.90261173248291
    6. '_,' → logprob: -6.15261173248291
    7. ',)' → logprob: -7.02761173248291
    8. '.' → logprob: -7.27761173248291
    9. '_)' → logprob: -7.52761173248291
    10. '[])' → logprob: -9.77761173248291

Token 4: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23771339654922485
    2. ' b' → logprob: -1.61271333694458
    3. ',' → logprob: -4.48771333694458
    4. ' ,' → logprob: -7.61271333694458
    5. ' ' → logprob: -8.487713813781738
    6. ')' → logprob: -8.987713813781738
    7. ',b' → logprob: -9.612713813781738
    8. ' )' → logprob: -10.612713813781738
    9. '_b' → logprob: -11.112713813781738
    10. 'a' → logprob: -11.612713813781738

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6460408568382263
    2. ')' → logprob: -0.7710408568382263
    3. ',' → logprob: -4.896040916442871
    4. '[' → logprob: -5.271040916442871
    5. ':' → logprob: -7.771040916442871
    6. '.' → logprob: -9.896040916442871
    7. 's' → logprob: -9.896040916442871
    8. '_' → logprob: -10.396040916442871
    9. '):
' → logprob: -10.646040916442871
    10. ''):' → logprob: -11.396040916442871

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004764041863381863
    2. '   ' → logprob: -6.379764080047607
    3. '(' → logprob: -6.504764080047607
    4. '():' → logprob: -7.129764080047607
    5. ':
' → logprob: -8.75476360321045
    6. '):' → logprob: -9.25476360321045
    7. '_:' → logprob: -9.37976360321045
    8. '_' → logprob: -9.62976360321045
    9. '(:' → logprob: -9.62976360321045
    10. ':return' → logprob: -9.75476360321045

Token 7: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4163532555103302
    2. ' ' → logprob: -1.6663532257080078
    3. '"' → logprob: -3.416353225708008
    4. ''' → logprob: -3.666353225708008
    5. '"""' → logprob: -3.666353225708008
    6. 'return' → logprob: -4.666353225708008
    7. '_' → logprob: -4.791353225708008
    8. '[' → logprob: -4.916353225708008
    9. '```' → logprob: -4.916353225708008
    10. ' return' → logprob: -5.166353225708008

Token 8: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00401084590703249
    2. '_len' → logprob: -5.8790106773376465
    3. '_overlap' → logprob: -7.2540106773376465
    4. '_length' → logprob: -8.379011154174805
    5. '(' → logprob: -9.379011154174805
    6. ' _' → logprob: -9.629011154174805
    7. '_size' → logprob: -10.504011154174805
    8. '(_' → logprob: -10.629011154174805
    9. '_space' → logprob: -11.504011154174805
    10. '_)' → logprob: -11.504011154174805

Token 9: 'ol' (ID: 340)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.276956170797348
    2. 'len' → logprob: -1.5269562005996704
    3. 'length' → logprob: -4.026956081390381
    4. 'start' → logprob: -5.026956081390381
    5. 'ov' → logprob: -9.401956558227539
    6. '_overlap' → logprob: -9.651956558227539
    7. 'end' → logprob: -10.276956558227539
    8. '_len' → logprob: -10.401956558227539
    9. 'olen' → logprob: -11.276956558227539
    10. 'ol' → logprob: -11.526956558227539

Token 10: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.008885538205504417
    2. 'apping' → logprob: -5.133885383605957
    3. 'en' → logprob: -6.883885383605957
    4. 'apped' → logprob: -7.508885383605957
    5. 'a' → logprob: -7.633885383605957
    6. 'app' → logprob: -7.883885383605957
    7. 'lap' → logprob: -9.008885383605957
    8. '_overlap' → logprob: -9.258885383605957
    9. 'aps' → logprob: -9.883885383605957
    10. 'e' → logprob: -10.008885383605957

Token 11: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06313194334506989
    2. ' =' → logprob: -2.8131320476531982
    3. '_' → logprob: -6.938131809234619
    4. ',' → logprob: -9.313132286071777
    5. ' ' → logprob: -10.813132286071777
    6. '   ' → logprob: -10.938132286071777
    7. ')' → logprob: -11.063132286071777
    8. '_=' → logprob: -11.688132286071777
    9. '_len' → logprob: -12.313132286071777
    10. 'd' → logprob: -12.438132286071777

Token 12: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5762381553649902
    2. ' ' → logprob: -0.8262381553649902
    3. ' len' → logprob: -8.701238632202148
    4. 'len' → logprob: -9.076238632202148
    5. '1' → logprob: -12.576238632202148
    6. '32' → logprob: -12.826238632202148
    7. ' max' → logprob: -13.451238632202148
    8. ' min' → logprob: -13.576238632202148
    9. ' ' → logprob: -13.576238632202148
    10. ' -' → logprob: -13.701238632202148

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011140200076624751
    2. ' ' → logprob: -6.8761138916015625
    3. 'min' → logprob: -9.876113891601562
    4. 'len' → logprob: -11.001113891601562
    5. 'max' → logprob: -12.126113891601562
    6. '''' → logprob: -13.001113891601562
    7. ' min' → logprob: -13.251113891601562
    8. '-' → logprob: -13.626113891601562
    9. '""' → logprob: -13.626113891601562
    10. '"' → logprob: -15.251113891601562

Token 14: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5577095150947571
    2. '_' → logprob: -2.4327094554901123
    3. ' ' → logprob: -2.8077094554901123
    4. ',' → logprob: -3.0577094554901123
    5. ' for' → logprob: -3.0577094554901123
    6. '   
' → logprob: -3.1827094554901123
    7. '```' → logprob: -3.4327094554901123
    8. '
' → logprob: -3.6827094554901123
    9. '    
' → logprob: -3.9327094554901123
    10. 'for' → logprob: -4.432709693908691

Token 15: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5151957273483276
    2. '_' → logprob: -1.6401957273483276
    3. ',' → logprob: -2.140195846557617
    4. '   ' → logprob: -2.265195846557617
    5. ' ' → logprob: -2.515195846557617
    6. '\' → logprob: -2.765195846557617
    7. '\n' → logprob: -3.015195846557617
    8. ':' → logprob: -3.390195846557617
    9. 'for' → logprob: -3.765195846557617
    10. ' for' → logprob: -3.890195846557617

Token 16: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.9403058886528015
    2. ' for' → logprob: -1.0653059482574463
    3. ' ' → logprob: -1.8153059482574463
    4. ' 
' → logprob: -4.315305709838867
    5. '   ' → logprob: -4.315305709838867
    6. '   
' → logprob: -4.315305709838867
    7. '\n' → logprob: -4.440305709838867
    8. ',' → logprob: -4.690305709838867
    9. '
' → logprob: -4.690305709838867
    10. '```' → logprob: -5.190305709838867

Token 17: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.021362684667110443
    2. 'i' → logprob: -4.896362781524658
    3. ' ' → logprob: -5.146362781524658
    4. '_' → logprob: -5.646362781524658
    5. ' _' → logprob: -6.146362781524658
    6. ' a' → logprob: -7.021362781524658
    7. ' s' → logprob: -7.771362781524658
    8. ' x' → logprob: -8.7713623046875
    9. ' word' → logprob: -9.0213623046875
    10. '_i' → logprob: -9.1463623046875

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003841755911707878
    2. 'in' → logprob: -5.878841876983643
    3. ' ' → logprob: -7.503841876983643
    4. 'n' → logprob: -7.878841876983643
    5. ',' → logprob: -10.003841400146484
    6. '  ' → logprob: -10.753841400146484
    7. ' n' → logprob: -11.003841400146484
    8. ' ,' → logprob: -12.628841400146484
    9. '_' → logprob: -13.003841400146484
    10. 'range' → logprob: -13.003841400146484

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01123962365090847
    2. 'range' → logprob: -4.511239528656006
    3. ' ' → logprob: -8.886240005493164
    4. ' a' → logprob: -10.011240005493164
    5. ' b' → logprob: -13.511240005493164
    6. ' r' → logprob: -13.511240005493164
    7. '  ' → logprob: -13.636240005493164
    8. ' xrange' → logprob: -13.761240005493164
    9. 'a' → logprob: -14.011240005493164
    10. '   ' → logprob: -14.511240005493164

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.575951099395752
    2. '(len' → logprob: -0.825951099395752
    3. '(min' → logprob: -12.200950622558594
    4. '(length' → logprob: -13.200950622558594
    5. '(a' → logprob: -13.450950622558594
    6. 'len' → logprob: -13.950950622558594
    7. ' (' → logprob: -14.325950622558594
    8. '(l' → logprob: -14.950950622558594
    9. '(
' → logprob: -15.075950622558594
    10. '(max' → logprob: -15.575950622558594

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015350318513810635
    2. 'min' → logprob: -4.265350341796875
    3. 'len' → logprob: -6.765350341796875
    4. ' min' → logprob: -10.765350341796875
    5. ' ' → logprob: -11.890350341796875
    6. '(min' → logprob: -13.015350341796875
    7. ' len' → logprob: -13.640350341796875
    8. '(len' → logprob: -14.265350341796875
    9. '(' → logprob: -15.015350341796875
    10. '   ' → logprob: -15.765350341796875

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0060698105953633785
    2. ' ,' → logprob: -5.256069660186768
    3. ',len' → logprob: -7.631069660186768
    4. '(len' → logprob: -8.631070137023926
    5. '(' → logprob: -9.256070137023926
    6. ')' → logprob: -10.756070137023926
    7. ',min' → logprob: -11.631070137023926
    8. ' )' → logprob: -11.881070137023926
    9. ',)' → logprob: -11.881070137023926
    10. 'a' → logprob: -11.881070137023926

Token 23: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014546457678079605
    2. ' min' → logprob: -4.2645463943481445
    3. 'len' → logprob: -7.8895463943481445
    4. ' len' → logprob: -12.139546394348145
    5. '[min' → logprob: -13.889546394348145
    6. '=min' → logprob: -14.139546394348145
    7. '```' → logprob: -14.639546394348145
    8. '(min' → logprob: -14.764546394348145
    9. ',min' → logprob: -16.13954734802246
    10. '1' → logprob: -16.51454734802246

Token 24: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00015979631280060858
    2. '(' → logprob: -8.750160217285156
    3. 'len' → logprob: -13.875160217285156
    4. ' len' → logprob: -16.500160217285156
    5. '(length' → logprob: -17.375160217285156
    6. '(min' → logprob: -17.375160217285156
    7. '(
' → logprob: -17.750160217285156
    8. ' (' → logprob: -18.000160217285156
    9. '<len' → logprob: -18.000160217285156
    10. '=len' → logprob: -18.125160217285156

Token 25: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.384836888173595e-05
    2. '(' → logprob: -9.7500638961792
    3. 'a' → logprob: -12.6250638961792
    4. '(b' → logprob: -13.1250638961792
    5. '(
' → logprob: -16.500062942504883
    6. '(s' → logprob: -17.500062942504883
    7. '(ai' → logprob: -18.625062942504883
    8. ' (' → logprob: -18.875062942504883
    9. ')a' → logprob: -18.875062942504883
    10. '```' → logprob: -19.000062942504883

Token 26: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05721203237771988
    2. '),' → logprob: -2.9322121143341064
    3. ' ,' → logprob: -6.182211875915527
    4. 'a' → logprob: -9.807211875915527
    5. ' ),' → logprob: -10.057211875915527
    6. ',),' → logprob: -10.057211875915527
    7. ',b' → logprob: -10.182211875915527
    8. '(' → logprob: -10.932211875915527
    9. ',a' → logprob: -10.932211875915527
    10. '(),' → logprob: -11.432211875915527

Token 27: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.06203613802790642
    2. 'len' → logprob: -2.8120360374450684
    3. '(len' → logprob: -9.812036514282227
    4. '	len' → logprob: -12.437036514282227
    5. ',len' → logprob: -12.562036514282227
    6. '<len' → logprob: -13.187036514282227
    7. '[len' → logprob: -13.312036514282227
    8. '=len' → logprob: -13.562036514282227
    9. ' ' → logprob: -14.187036514282227
    10. 'b' → logprob: -14.812036514282227

Token 28: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0008715596632100642
    2. '(' → logprob: -7.125871658325195
    3. 'b' → logprob: -9.750871658325195
    4. '(a' → logprob: -12.250871658325195
    5. ' (' → logprob: -13.125871658325195
    6. ' b' → logprob: -13.625871658325195
    7. ')b' → logprob: -14.625871658325195
    8. '(
' → logprob: -15.875871658325195
    9. ')' → logprob: -16.125871658325195
    10. '(s' → logprob: -16.750871658325195

Token 29: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021792132407426834
    2. '))' → logprob: -4.146791934967041
    3. ')+' → logprob: -5.271791934967041
    4. '))+' → logprob: -7.646791934967041
    5. ')))' → logprob: -9.6467924118042
    6. ' )' → logprob: -10.7717924118042
    7. ')):' → logprob: -10.7717924118042
    8. '())' → logprob: -12.2717924118042
    9. ' ' → logprob: -12.8967924118042
    10. ')));' → logprob: -12.8967924118042

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07458721101284027
    2. ' +' → logprob: -2.824587106704712
    3. '):' → logprob: -4.699587345123291
    4. ')+' → logprob: -6.199587345123291
    5. ')' → logprob: -7.199587345123291
    6. ' ):' → logprob: -8.449586868286133
    7. ')):' → logprob: -8.574586868286133
    8. '+:' → logprob: -9.324586868286133
    9. ' ' → logprob: -9.574586868286133
    10. '   ' → logprob: -10.949586868286133

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020871460437775
    2. ' ' → logprob: -2.3502087593078613
    3. ')' → logprob: -13.850208282470703
    4. '```' → logprob: -14.600208282470703
    5. ' ' → logprob: -15.350208282470703
    6. ' )' → logprob: -16.350208282470703
    7. '<|end|>' → logprob: -16.350208282470703
    8. '  ' → logprob: -16.662708282470703
    9. 'i' → logprob: -17.037708282470703
    10. '   ' → logprob: -17.037708282470703

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. ')' → logprob: -18.750001907348633
    4. '```' → logprob: -19.000001907348633
    5. 'i' → logprob: -20.875001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '１' → logprob: -21.500001907348633
    8. '  ' → logprob: -21.625001907348633
    9. '2' → logprob: -21.875001907348633
    10. '-' → logprob: -22.000001907348633

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006425102241337299
    2. ':' → logprob: -5.631424903869629
    3. ')' → logprob: -6.131424903869629
    4. ' ):' → logprob: -7.381424903869629
    5. '):
' → logprob: -11.506424903869629
    6. '   ' → logprob: -12.256424903869629
    7. ' )' → logprob: -12.506424903869629
    8. ':)' → logprob: -13.131424903869629
    9. ',' → logprob: -13.506424903869629
    10. ' ' → logprob: -13.881424903869629

Token 34: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13892816007137299
    2. '       ' → logprob: -2.638928174972534
    3. '   ' → logprob: -4.013927936553955
    4. '):' → logprob: -4.138927936553955
    5. '<|end|>' → logprob: -4.513927936553955
    6. ' :' → logprob: -5.388927936553955
    7. ' ' → logprob: -5.638927936553955
    8. '    ' → logprob: -6.888927936553955
    9. ')' → logprob: -7.388927936553955
    10. 'a' → logprob: -7.888927936553955

Token 35: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8012357950210571
    2. '<|end|>' → logprob: -1.3012357950210571
    3. ' if' → logprob: -2.3012356758117676
    4. ' ' → logprob: -2.3012356758117676
    5. 'if' (adapté à ' if') → logprob: -3.5512356758117676
    6. '   ' → logprob: -3.5512356758117676
    7. '    ' → logprob: -5.676235675811768
    8. ':' → logprob: -5.801235675811768
    9. '<|end|>' → logprob: -5.801235675811768
    10. '\' → logprob: -6.051235675811768

Token 36: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6968695521354675
    2. ' b' → logprob: -0.6968695521354675
    3. 'b' → logprob: -5.946869373321533
    4. 'a' → logprob: -6.821869373321533
    5. ' ' → logprob: -11.696869850158691
    6. ' ' → logprob: -12.946869850158691
    7. '    ' → logprob: -14.696869850158691
    8. ' (' → logprob: -15.821869850158691
    9. ' `' → logprob: -15.821869850158691
    10. ' ‌' → logprob: -16.446868896484375

Token 37: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.000526107382029295
    2. '.endswith' → logprob: -7.750525951385498
    3. '[' → logprob: -9.375526428222656
    4. '[:' → logprob: -12.500526428222656
    5. '[len' → logprob: -12.750526428222656
    6. ' [-' → logprob: -13.250526428222656
    7. '.startswith' → logprob: -13.875526428222656
    8. '.' → logprob: -14.875526428222656
    9. '[:]' → logprob: -15.250526428222656
    10. '```' → logprob: -15.625526428222656

Token 38: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: 0.0
    2. ' i' → logprob: -18.875
    3. '1' → logprob: -21.25
    4. '```' → logprob: -22.0
    5. ' ' → logprob: -22.625
    6. '	i' → logprob: -23.125
    7. '   ' → logprob: -23.375
    8. '%i' → logprob: -24.375
    9. '[i' → logprob: -24.75
    10. ''i' → logprob: -25.0

Token 39: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0007712708320468664
    2. ':' → logprob: -7.6257710456848145
    3. ' :]' → logprob: -8.750771522521973
    4. ']' → logprob: -9.125771522521973
    5. ']==' → logprob: -11.875771522521973
    6. '==' → logprob: -12.125771522521973
    7. ':].' → logprob: -13.625771522521973
    8. ' ]' → logprob: -14.125771522521973
    9. ' ' → logprob: -14.125771522521973
    10. ':],' → logprob: -15.500771522521973

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014177493751049042
    2. '==' → logprob: -4.264177322387695
    3. ' ' → logprob: -11.264177322387695
    4. '=' → logprob: -14.389177322387695
    5. ']==' → logprob: -15.139177322387695
    6. ' =' → logprob: -16.014177322387695
    7. ')==' → logprob: -16.139177322387695
    8. ' ==
' → logprob: -16.514177322387695
    9. '==
' → logprob: -17.514177322387695
    10. ')' → logprob: -17.889177322387695

Token 41: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16022463142871857
    2. 'b' → logprob: -1.9102246761322021
    3. ' ' → logprob: -14.785224914550781
    4. '	b' → logprob: -17.28522491455078
    5. '>b' → logprob: -17.78522491455078
    6. ')b' → logprob: -17.78522491455078
    7. '   ' → logprob: -18.03522491455078
    8. '```' → logprob: -18.28522491455078
    9. '  ' → logprob: -18.41022491455078
    10. '(b' → logprob: -18.78522491455078

Token 42: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -3.225939872208983e-05
    2. '[' → logprob: -10.375032424926758
    3. '[:-' → logprob: -14.875032424926758
    4. ' [:' → logprob: -15.500032424926758
    5. '[:]' → logprob: -15.625032424926758
    6. '[-' → logprob: -15.625032424926758
    7. ':' → logprob: -15.750032424926758
    8. '][:' → logprob: -18.000032424926758
    9. 'prefix' → logprob: -18.375032424926758
    10. '   ' → logprob: -18.625032424926758

Token 43: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.8624639324116288e-06
    2. ' i' → logprob: -13.250001907348633
    3. '	i' → logprob: -18.250001907348633
    4. '   ' → logprob: -19.125001907348633
    5. '*i' → logprob: -20.250001907348633
    6. ' ' → logprob: -20.375001907348633
    7. ')i' → logprob: -20.875001907348633
    8. ''i' → logprob: -20.875001907348633
    9. '```' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.750001907348633

Token 44: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005617315880954266
    2. ':' → logprob: -5.255617141723633
    3. ')' → logprob: -8.130617141723633
    4. ' ):' → logprob: -9.505617141723633
    5. '):
' → logprob: -11.755617141723633
    6. '       ' → logprob: -12.880617141723633
    7. ']:' → logprob: -13.880617141723633
    8. '   ' → logprob: -14.380617141723633
    9. '():' → logprob: -14.755617141723633
    10. ':)' → logprob: -14.880617141723633

Token 45: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056692346930503845
    2. ':' → logprob: -2.931692361831665
    3. '       ' → logprob: -6.806692123413086
    4. ':
' → logprob: -8.181692123413086
    5. '               ' → logprob: -9.056692123413086
    6. '\n' → logprob: -9.931692123413086
    7. ' :' → logprob: -10.306692123413086
    8. '		' → logprob: -10.431692123413086
    9. 'max' → logprob: -10.431692123413086
    10. ',' → logprob: -10.806692123413086

Token 46: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.5061317086219788
    2. '           ' → logprob: -1.506131649017334
    3. ' max' → logprob: -2.256131649017334
    4. '               ' → logprob: -3.006131649017334
    5. '
' → logprob: -4.131131649017334
    6. '       ' → logprob: -6.756131649017334
    7. ' 
' → logprob: -6.881131649017334
    8. '            
' → logprob: -7.006131649017334
    9. '                
' → logprob: -7.631131649017334
    10. '   ' → logprob: -7.756131649017334

Token 47: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '_oc' → logprob: -16.125
    3. ' _' → logprob: -16.25
    4. '_overlap' → logprob: -16.375
    5. '_i' → logprob: -17.375
    6. '_o' → logprob: -17.5
    7. '_ot' → logprob: -17.75
    8. '_op' → logprob: -18.75
    9. '_over' → logprob: -19.0
    10. '_max' → logprob: -19.0

Token 48: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -1.4974866644479334e-05
    2. 'o' → logprob: -11.875015258789062
    3. '_overlap' → logprob: -13.500015258789062
    4. ' ' → logprob: -14.250015258789062
    5. 'olab' → logprob: -14.562515258789062
    6. 'op' → logprob: -14.687515258789062
    7. 'olagi' → logprob: -14.937515258789062
    8. 'ол' → logprob: -14.937515258789062
    9. 'olola' → logprob: -15.000015258789062
    10. 'al' → logprob: -15.125015258789062

Token 49: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -5.676981345459353e-06
    2. 'a' → logprob: -12.500005722045898
    3. 'apse' → logprob: -14.750005722045898
    4. 'ап' → logprob: -14.875005722045898
    5. 'aps' → logprob: -15.250005722045898
    6. 'app' → logprob: -15.875005722045898
    7. '	ap' → logprob: -15.875005722045898
    8. '   ' → logprob: -16.1250057220459
    9. 'p' → logprob: -16.6250057220459
    10. 'apped' → logprob: -16.7500057220459

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889242470264435
    2. '=' → logprob: -2.578892469406128
    3. ' ' → logprob: -13.203892707824707
    4. ' =
' → logprob: -14.953892707824707
    5. '=i' → logprob: -15.203892707824707
    6. ' +=' → logprob: -16.95389175415039
    7. ' =)' → logprob: -16.95389175415039
    8. '＝' → logprob: -17.07889175415039
    9. '=

' → logprob: -17.20389175415039
    10. '=max' → logprob: -17.57889175415039

Token 51: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740787148475647
    2. ' i' → logprob: -0.9740787148475647
    3. '	i' → logprob: -14.224079132080078
    4. ' ' → logprob: -14.349079132080078
    5. ' ' → logprob: -14.849079132080078
    6. '    ' → logprob: -17.599079132080078
    7. '=i' → logprob: -18.224079132080078
    8. '   ' → logprob: -18.349079132080078
    9. '```' → logprob: -18.349079132080078
    10. '*i' → logprob: -18.599079132080078

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027126114815473557
    2. '
' → logprob: -4.152126312255859
    3. ' 
' → logprob: -5.277126312255859
    4. '    
' → logprob: -5.902126312255859
    5. 'return' → logprob: -7.027126312255859
    6. ' return' → logprob: -7.152126312255859
    7. '\n' → logprob: -7.652126312255859
    8. '```' → logprob: -8.27712631225586
    9. '  
' → logprob: -9.02712631225586
    10. ':return' → logprob: -9.15212631225586

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7196805477142334
    2. '
' → logprob: -0.9696805477142334
    3. ' 
' → logprob: -2.3446805477142334
    4. ' return' → logprob: -4.2196807861328125
    5. '    
' → logprob: -4.7196807861328125
    6. '  
' → logprob: -5.4696807861328125
    7. 'return' → logprob: -5.4696807861328125
    8. ' ' → logprob: -6.4696807861328125
    9. '\n' → logprob: -6.9696807861328125
    10. '' → logprob: -7.2196807861328125

Token 54: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7291288375854492
    2. 'return' (adapté à ' return') → logprob: -1.2291288375854492
    3. ' return' → logprob: -2.104128837585449
    4. '
' → logprob: -3.604128837585449
    5. ' 
' → logprob: -3.979128837585449
    6. 'r' → logprob: -4.229128837585449
    7. '    
' → logprob: -4.479128837585449
    8. ' ' → logprob: -4.479128837585449
    9. '  
' → logprob: -5.104128837585449
    10. ':return' → logprob: -5.604128837585449

Token 55: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.048588622361421585
    2. 'max' → logprob: -3.048588514328003
    3. '(max' → logprob: -14.548588752746582
    4. '	max' → logprob: -15.673588752746582
    5. '   ' → logprob: -15.798588752746582
    6. ' ' → logprob: -15.923588752746582
    7. ' ' → logprob: -16.548587799072266
    8. '[max' → logprob: -16.548587799072266
    9. ',max' → logprob: -16.548587799072266
    10. '_max' → logprob: -16.798587799072266

Token 56: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.85104202805087e-05
    2. '_overlap' → logprob: -9.625078201293945
    3. '_o' → logprob: -12.625078201293945
    4. '_over' → logprob: -13.125078201293945
    5. '_max' → logprob: -13.375078201293945
    6. '(' → logprob: -13.875078201293945
    7. '(max' → logprob: -14.000078201293945
    8. '_)' → logprob: -14.500078201293945
    9. '(_' → logprob: -14.625078201293945
    10. '\' → logprob: -14.625078201293945

Token 57: 'ol' (ID: 340)
  Prédit: 'ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -4.246537173457909e-06
    2. 'o' → logprob: -13.000003814697266
    3. 'olab' → logprob: -15.125003814697266
    4. 'ola' → logprob: -15.625003814697266
    5. 'ол' → logprob: -16.000003814697266
    6. 'olola' → logprob: -16.125003814697266
    7. 'olak' → logprob: -16.125003814697266
    8. '_overlap' → logprob: -16.250003814697266
    9. 'olagi' → logprob: -16.500003814697266
    10. '```' → logprob: -16.625003814697266

Token 58: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -2.3319124011322856e-05
    2. 'a' → logprob: -11.750022888183594
    3. 'ay' → logprob: -11.750022888183594
    4. '   ' → logprob: -13.500022888183594
    5. 'apse' → logprob: -13.875022888183594
    6. 'aps' → logprob: -14.000022888183594
    7. 'ап' → logprob: -14.000022888183594
    8. 'app' → logprob: -14.625022888183594
    9. 'p' → logprob: -15.000022888183594
    10. '	ap' → logprob: -15.000022888183594

Token 59: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.003714569378644228
    2. ' ' → logprob: -5.753714561462402
    3. ' not' → logprob: -8.503714561462402
    4. 'True' → logprob: -8.628714561462402
    5. '_' → logprob: -9.253714561462402
    6. ' input' → logprob: -10.753714561462402
    7. ' i' → logprob: -11.378714561462402
    8. '(True' → logprob: -11.753714561462402
    9. ' true' → logprob: -12.503714561462402
    10. ' len' → logprob: -12.878714561462402

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010026819072663784
    2. ' :' → logprob: -7.001002788543701
    3. '():' → logprob: -10.126002311706543
    4. '):' → logprob: -10.876002311706543
    5. ':**' → logprob: -11.376002311706543
    6. ':
' → logprob: -11.751002311706543
    7. '   ' → logprob: -12.501002311706543
    8. ',' → logprob: -14.126002311706543
    9. '':'' → logprob: -14.126002311706543
    10. '(:' → logprob: -14.501002311706543

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1063922643661499
    2. ':' → logprob: -2.6063923835754395
    3. ' :' → logprob: -4.1063923835754395
    4. '    ' → logprob: -6.1063923835754395
    5. ' input' → logprob: -6.1063923835754395
    6. '    
' → logprob: -6.7313923835754395
    7. ' ' → logprob: -7.1063923835754395
    8. 'input' → logprob: -7.2313923835754395
    9. '(' → logprob: -7.4813923835754395
    10. '():' → logprob: -7.8563923835754395

Token 64: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4351636469364166
    2. ' line' → logprob: -1.5601636171340942
    3. ' user' → logprob: -3.060163736343384
    4. ' try' → logprob: -3.185163736343384
    5. ' input' → logprob: -4.435163497924805
    6. 'try' → logprob: -4.810163497924805
    7. ' s' → logprob: -4.935163497924805
    8. 'user' → logprob: -5.185163497924805
    9. ' inp' → logprob: -5.185163497924805
    10. ' text' → logprob: -5.310163497924805

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011481247842311859
    2. '=' → logprob: -4.511481285095215
    3. ' ' → logprob: -7.886481285095215
    4. '=int' → logprob: -10.636481285095215
    5. '=input' → logprob: -10.761481285095215
    6. '  ' → logprob: -13.136481285095215
    7. ' >' → logprob: -13.511481285095215
    8. ' :=' → logprob: -13.511481285095215
    9. ' =
' → logprob: -13.636481285095215
    10. ' ==' → logprob: -13.761481285095215

Token 66: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4580402672290802
    2. 'int' → logprob: -1.4580402374267578
    3. ' input' → logprob: -2.083040237426758
    4. 'input' → logprob: -4.583040237426758
    5. ' ' → logprob: -12.208040237426758
    6. ' len' → logprob: -12.708040237426758
    7. '=int' → logprob: -13.958040237426758
    8. 'len' → logprob: -14.208040237426758
    9. '   ' → logprob: -15.583040237426758
    10. '<int' → logprob: -15.708040237426758

Token 67: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2520163953304291
    2. '(' → logprob: -1.5020164251327515
    3. 'input' → logprob: -9.377016067504883
    4. ' (' → logprob: -13.752016067504883
    5. '(
' → logprob: -14.752016067504883
    6. ' input' → logprob: -15.252016067504883
    7. '(in' → logprob: -15.627016067504883
    8. '()' → logprob: -15.877016067504883
    9. ' ' → logprob: -15.877016067504883
    10. '=input' → logprob: -16.002016067504883

Token 68: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1018296480178833
    2. '(' → logprob: -2.4768295288085938
    3. '())' → logprob: -4.601829528808594
    4. '('' → logprob: -6.601829528808594
    5. '("("' → logprob: -7.226829528808594
    6. '("' → logprob: -9.226829528808594
    7. ')' → logprob: -9.226829528808594
    8. '("")' → logprob: -9.351829528808594
    9. '());' → logprob: -9.476829528808594
    10. '()>' → logprob: -9.851829528808594

Token 69: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9429044127464294
    2. '<|end|>' → logprob: -0.9429044127464294
    3. ' ' → logprob: -1.5679044723510742
    4. '   ' → logprob: -5.692904472351074
    5. '<|end|>' → logprob: -6.192904472351074
    6. '    ' → logprob: -6.317904472351074
    7. 'if' → logprob: -6.567904472351074
    8. ':' → logprob: -6.817904472351074
    9. ' 
' → logprob: -7.192904472351074
    10. '  ' → logprob: -7.317904472351074

Token 70: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00023119196703191847
    2. 'n' → logprob: -8.62523078918457
    3. ' not' → logprob: -9.87523078918457
    4. '	n' → logprob: -15.87523078918457
    5. ' ' → logprob: -16.87523078918457
    6. ' ' → logprob: -17.25023078918457
    7. 'not' → logprob: -17.62523078918457
    8. ' н' → logprob: -19.75023078918457
    9. '_n' → logprob: -20.75023078918457
    10. ')n' → logprob: -21.25023078918457

Token 72: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2047657072544098
    2. '==' → logprob: -1.7047656774520874
    3. ' <=' → logprob: -6.079765796661377
    4. '<=' → logprob: -6.954765796661377
    5. ' <' → logprob: -10.204765319824219
    6. '<' → logprob: -10.454765319824219
    7. '=' → logprob: -11.329765319824219
    8. ' ' → logprob: -11.579765319824219
    9. ')' → logprob: -12.329765319824219
    10. '<|end|>' → logprob: -12.954765319824219

Token 73: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931478977203369
    2. ' ' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.318147659301758
    4. '  ' → logprob: -17.068147659301758
    5. '```' → logprob: -18.068147659301758
    6. '   ' → logprob: -18.318147659301758
    7. '۰' → logprob: -18.443147659301758
    8. ')' → logprob: -18.943147659301758
    9. '<|end|>' → logprob: -19.068147659301758
    10. ' a' → logprob: -19.130647659301758

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017033906187862158
    2. ' ' → logprob: -6.376703262329102
    3. '-' → logprob: -14.501703262329102
    4. ' -' → logprob: -15.626703262329102
    5. '```' → logprob: -15.814203262329102
    6. '  ' → logprob: -16.3142032623291
    7. ')' → logprob: -16.7517032623291
    8. '   ' → logprob: -16.7517032623291
    9. '    ' → logprob: -18.0017032623291
    10. 's' → logprob: -18.0017032623291

Token 75: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007671024068258703
    2. ' :' → logprob: -7.250767230987549
    3. ':
' → logprob: -10.25076675415039
    4. '   ' → logprob: -11.87576675415039
    5. '):' → logprob: -12.25076675415039
    6. ':return' → logprob: -12.25076675415039
    7. '    ' → logprob: -13.25076675415039
    8. ' :
' → logprob: -13.62576675415039
    9. '       ' → logprob: -14.37576675415039
    10. '<|end|>' → logprob: -14.75076675415039

Token 76: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18007352948188782
    2. '       ' → logprob: -1.8050734996795654
    3. ' break' → logprob: -9.180073738098145
    4. ':' → logprob: -9.930073738098145
    5. '	break' → logprob: -10.055073738098145
    6. '   ' → logprob: -10.305073738098145
    7. '    ' → logprob: -10.680073738098145
    8. '\t' → logprob: -11.180073738098145
    9. '<|end|>' → logprob: -11.180073738098145
    10. ' ' → logprob: -11.555073738098145

Token 77: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.0028871409595012665
    2. '   ' → logprob: -6.75288724899292
    3. 'break' (adapté à ' break') → logprob: -6.75288724899292
    4. '       ' → logprob: -7.87788724899292
    5. '	break' → logprob: -8.752886772155762
    6. '    ' → logprob: -13.002886772155762
    7. '_break' → logprob: -13.377886772155762
    8. '    
' → logprob: -13.502886772155762
    9. '
' → logprob: -13.502886772155762
    10. ' ' → logprob: -14.002886772155762

Token 78: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2502868175506592
    2. '<|end|>' → logprob: -2.000286817550659
    3. '    
' → logprob: -3.250286817550659
    4. '   ' → logprob: -3.375286817550659
    5. ' 
' → logprob: -5.125287055969238
    6. 'n' → logprob: -6.000287055969238
    7. '<|end|>' → logprob: -6.875287055969238
    8. '\n' → logprob: -7.000287055969238
    9. '```' → logprob: -7.375287055969238
    10. 'newline' → logprob: -7.625287055969238

Token 79: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.4069406986236572
    2. ' ' → logprob: -1.5319406986236572
    3. 'a' → logprob: -2.2819406986236572
    4. '   ' → logprob: -2.2819406986236572
    5. '<|end|>' → logprob: -2.4069406986236572
    6. '    
' → logprob: -2.9069406986236572
    7. 'n' → logprob: -2.9069406986236572
    8. 'print' → logprob: -3.9069406986236572
    9. 't' → logprob: -4.156940460205078
    10. 's' → logprob: -4.281940460205078

Token 80: ' cities' (ID: 15636)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.4984162747859955
    2. ' words' → logprob: -1.8734163045883179
    3. 'strings' → logprob: -1.9984163045883179
    4. 'words' → logprob: -3.6234161853790283
    5. ' sequences' → logprob: -3.7484161853790283
    6. 's' → logprob: -4.873416423797607
    7. ' names' → logprob: -5.123416423797607
    8. ' s' → logprob: -5.123416423797607
    9. ' strs' → logprob: -5.248416423797607
    10. 'names' → logprob: -5.248416423797607

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011879685334861279
    2. '=' → logprob: -6.751187801361084
    3. '_' → logprob: -11.126188278198242
    4. ' ' → logprob: -14.001188278198242
    5. 's' → logprob: -14.626188278198242
    6. '=[]' → logprob: -14.876188278198242
    7. ',' → logprob: -15.251188278198242
    8. ' =
' → logprob: -15.626188278198242
    9. '[' → logprob: -15.751188278198242
    10. '_list' → logprob: -16.001188278198242

Token 82: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.16040721535682678
    2. ' [' → logprob: -2.035407304763794
    3. '[]' → logprob: -4.160407066345215
    4. '[' → logprob: -6.535407066345215
    5. '[input' → logprob: -8.035407066345215
    6. '[list' → logprob: -9.410407066345215
    7. '[int' → logprob: -10.785407066345215
    8. '[n' → logprob: -10.785407066345215
    9. ' ['' → logprob: -11.035407066345215
    10. ' [[]' → logprob: -11.785407066345215

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12331917136907578
    2. ' for' → logprob: -3.123319149017334
    3. '
' → logprob: -3.748319149017334
    4. '    ' → logprob: -4.623319149017334
    5. '<|end|>' → logprob: -4.623319149017334
    6. 'for' → logprob: -4.873319149017334
    7. '    
' → logprob: -4.998319149017334
    8. '' → logprob: -5.623319149017334
    9. '	for' → logprob: -5.873319149017334
    10. ' 
' → logprob: -5.873319149017334

Token 84: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0699738934636116
    2. ' for' → logprob: -2.694973945617676
    3. '   ' → logprob: -11.319973945617676
    4. '	for' → logprob: -11.319973945617676
    5. 'c' → logprob: -12.569973945617676
    6. 'cities' → logprob: -12.694973945617676
    7. ' ' → logprob: -13.194973945617676
    8. '<|end|>' → logprob: -13.819973945617676
    9. '    ' → logprob: -14.069973945617676
    10. '[' → logprob: -14.319973945617676

Token 85: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.1608499437570572
    2. '_' → logprob: -1.910849928855896
    3. ' i' → logprob: -7.4108500480651855
    4. ' ' → logprob: -11.035849571228027
    5. 'i' → logprob: -13.160849571228027
    6. ' ‌' → logprob: -13.785849571228027
    7. ' ' → logprob: -14.035849571228027
    8. '_i' → logprob: -14.660849571228027
    9. ' in' → logprob: -15.285849571228027
    10. ' _
' → logprob: -15.910849571228027

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002354832977289334
    2. 'in' → logprob: -8.500235557556152
    3. ' ' → logprob: -10.625235557556152
    4. 'n' → logprob: -12.250235557556152
    5. 'range' → logprob: -14.000235557556152
    6. '<|end|>' → logprob: -14.500235557556152
    7. '  ' → logprob: -14.625235557556152
    8. ' _' → logprob: -15.250235557556152
    9. ' i' → logprob: -15.625235557556152
    10. 'i' → logprob: -15.625235557556152

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019537294283509254
    2. ' range' → logprob: -6.251953601837158
    3. 'ange' → logprob: -11.001954078674316
    4. '	range' → logprob: -12.876954078674316
    5. '(range' → logprob: -13.626954078674316
    6. 'ran' → logprob: -13.876954078674316
    7. 'rang' → logprob: -14.001954078674316
    8. ' ' → logprob: -14.751954078674316
    9. 'r' → logprob: -15.001954078674316
    10. ')' → logprob: -15.001954078674316

Token 88: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.010052595287561417
    2. ' n' → logprob: -5.135052680969238
    3. '(' → logprob: -6.135052680969238
    4. 'n' → logprob: -6.385052680969238
    5. ' (' → logprob: -8.260052680969238
    6. '	n' → logprob: -12.885052680969238
    7. ' ' → logprob: -14.135052680969238
    8. ' range' → logprob: -14.385052680969238
    9. '_n' → logprob: -15.135052680969238
    10. '   ' → logprob: -15.635052680969238

Token 89: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033878158777952194
    2. '):
' → logprob: -3.9088780879974365
    3. ')' → logprob: -5.033878326416016
    4. ' ):' → logprob: -5.158878326416016
    5. '   ' → logprob: -7.533878326416016
    6. ' )' → logprob: -8.408878326416016
    7. ' ):
' → logprob: -8.783878326416016
    8. ':' → logprob: -10.408878326416016
    9. '):
' → logprob: -10.908878326416016
    10. '       ' → logprob: -12.283878326416016

Token 90: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008832369931042194
    2. ' cities' → logprob: -5.5088324546813965
    3. '       ' → logprob: -5.7588324546813965
    4. '    ' → logprob: -7.6338324546813965
    5. ' c' → logprob: -8.383831977844238
    6. '<|end|>' → logprob: -8.883831977844238
    7. 'cities' → logprob: -9.008831977844238
    8. '    
' → logprob: -9.133831977844238
    9. '	c' → logprob: -9.133831977844238
    10. ' ' → logprob: -9.508831977844238

Token 91: ' cities' (ID: 15636)
  Prédit: ' cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cities' → logprob: -0.2893717586994171
    2. ' city' → logprob: -1.9143717288970947
    3. 'cities' (adapté à ' cities') → logprob: -2.4143717288970947
    4. 'city' → logprob: -4.289371967315674
    5. 'c' → logprob: -8.414371490478516
    6. ' name' → logprob: -8.664371490478516
    7. ' c' → logprob: -9.164371490478516
    8. '   ' → logprob: -10.164371490478516
    9. ' line' → logprob: -10.539371490478516
    10. 'name' → logprob: -10.539371490478516

Token 92: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.10036766529083252
    2. '.' → logprob: -2.350367546081543
    3. '=' → logprob: -9.600367546081543
    4. ' =' → logprob: -9.975367546081543
    5. ' .' → logprob: -10.975367546081543
    6. '.=' → logprob: -11.350367546081543
    7. '.extend' → logprob: -11.850367546081543
    8. '.app' → logprob: -12.100367546081543
    9. '.ap' → logprob: -13.850367546081543
    10. '.py' → logprob: -14.350367546081543

Token 93: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015126005746424198
    2. '(' → logprob: -6.50151252746582
    3. '(str' → logprob: -12.37651252746582
    4. 'input' → logprob: -12.50151252746582
    5. ' input' → logprob: -13.50151252746582
    6. '(
' → logprob: -14.25151252746582
    7. ' (' → logprob: -15.62651252746582
    8. '(int' → logprob: -16.50151252746582
    9. '(

' → logprob: -16.62651252746582
    10. '(list' → logprob: -16.87651252746582

Token 94: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1301351636648178
    2. '()' → logprob: -2.1301350593566895
    3. '().' → logprob: -5.7551350593566895
    4. ' ())' → logprob: -10.755135536193848
    5. '()))' → logprob: -12.255135536193848
    6. '();)' → logprob: -12.630135536193848
    7. '())
' → logprob: -13.380135536193848
    8. ')' → logprob: -13.880135536193848
    9. '(' → logprob: -14.130135536193848
    10. '()
' → logprob: -14.130135536193848

Token 95: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0381609201431274
    2. 'result' → logprob: -1.7881609201431274
    3. ' dp' → logprob: -2.413160800933838
    4. '   ' → logprob: -2.663160800933838
    5. ' result' → logprob: -2.663160800933838
    6. 'max' → logprob: -2.788160800933838
    7. ' max' → logprob: -3.413160800933838
    8. 'best' → logprob: -3.788160800933838
    9. 'm' → logprob: -4.038160800933838
    10. 'res' → logprob: -4.288160800933838

Token 96: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17056111991405487
    2. 'max' → logprob: -2.9205610752105713
    3. 'best' → logprob: -3.7955610752105713
    4. 'graph' → logprob: -3.9205610752105713
    5. 'dist' → logprob: -4.04556131362915
    6. 'over' → logprob: -4.67056131362915
    7. 'result' → logprob: -5.17056131362915
    8. 'visited' → logprob: -5.42056131362915
    9. 'merged' → logprob: -5.67056131362915
    10. 'order' → logprob: -5.92056131362915

Token 97: ' Remove' (ID: 18141)
  Prédit: ' best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' best' → logprob: -1.186038613319397
    2. ' max' → logprob: -1.561038613319397
    3. ' dp' → logprob: -1.936038613319397
    4. 'dp' → logprob: -2.3110384941101074
    5. 'best' → logprob: -3.0610384941101074
    6. 'max' → logprob: -3.3110384941101074
    7. ' result' → logprob: -3.3110384941101074
    8. ' overlap' → logprob: -3.8110384941101074
    9. ' overlaps' → logprob: -4.561038494110107
    10. ' dist' → logprob: -4.561038494110107

Token 98: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -1.1705410480499268
    2. ' all' → logprob: -1.2955410480499268
    3. '_duplicates' → logprob: -2.4205410480499268
    4. ' the' → logprob: -2.7955410480499268
    5. '<|end|>' → logprob: -2.7955410480499268
    6. ' cities' → logprob: -2.9205410480499268
    7. '_' → logprob: -3.2955410480499268
    8. ' redundant' → logprob: -3.9205410480499268
    9. ' overlapping' → logprob: -4.170540809631348
    10. '_duplicate' → logprob: -4.295540809631348

Token 99: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010402817279100418
    2. ' cities' → logprob: -5.885402679443359
    3. 'cities' → logprob: -6.260402679443359
    4. ',' → logprob: -6.260402679443359
    5. '    ' → logprob: -6.510402679443359
    6. '    
' → logprob: -7.385402679443359
    7. '<|end|>' → logprob: -7.760402679443359
    8. ' and' → logprob: -8.13540267944336
    9. 's' → logprob: -8.88540267944336
    10. ':' → logprob: -9.01040267944336

Token 100: ' substr' (ID: 29234)
  Prédit: ' preserve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' preserve' → logprob: -0.016192493960261345
    2. ' maintain' → logprob: -4.766192436218262
    3. ' keep' → logprob: -5.766192436218262
    4. 'pres' → logprob: -6.266192436218262
    5. ' sort' → logprob: -6.641192436218262
    6. 'sort' → logprob: -7.891192436218262
    7. 'keep' → logprob: -8.391192436218262
    8. '_pres' → logprob: -9.266192436218262
    9. 'maint' → logprob: -9.516192436218262
    10. ' order' → logprob: -9.891192436218262

Token 101: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.007109133061021566
    2. 'ing' → logprob: -5.63210916519165
    3. '   ' → logprob: -5.88210916519165
    4. 'rings' → logprob: -8.132108688354492
    5. 'strings' → logprob: -8.757108688354492
    6. ' ' → logprob: -10.382108688354492
    7. 'ng' → logprob: -10.757108688354492
    8. '  ' → logprob: -10.882108688354492
    9. 'in' → logprob: -10.882108688354492
    10. '    ' → logprob: -10.882108688354492

Token 102: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006756579037755728
    2. ' cities' → logprob: -6.256756782531738
    3. ' to' → logprob: -6.631756782531738
    4. 'cities' → logprob: -6.881756782531738
    5. ' for' → logprob: -7.131756782531738
    6. ',' → logprob: -7.381756782531738
    7. 'for' → logprob: -8.131756782531738
    8. 'i' → logprob: -8.381756782531738
    9. 'unique' → logprob: -9.506756782531738
    10. ' i' → logprob: -10.006756782531738

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06252841651439667
    2. ' for' → logprob: -3.437528371810913
    3. ' cities' → logprob: -5.437528610229492
    4. 'for' → logprob: -5.437528610229492
    5. ' to' → logprob: -5.687528610229492
    6. 'cities' → logprob: -5.687528610229492
    7. ' i' → logprob: -5.812528610229492
    8. '    
' → logprob: -5.937528610229492
    9. '    ' → logprob: -6.312528610229492
    10. 'i' → logprob: -6.687528610229492

Token 104: ' filtered' (ID: 31972)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' unique' → logprob: -0.4695986807346344
    2. ' i' → logprob: -1.969598650932312
    3. ' to' → logprob: -2.0945987701416016
    4. 'unique' → logprob: -3.2195987701416016
    5. ' for' → logprob: -3.4695987701416016
    6. '   ' → logprob: -4.469598770141602
    7. 'i' → logprob: -4.719598770141602
    8. ' filtered' → logprob: -5.219598770141602
    9. ' uniques' → logprob: -5.719598770141602
    10. ' new' → logprob: -5.844598770141602

Token 105: ' =' (ID: 314)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.11317377537488937
    2. ' =' → logprob: -2.238173723220825
    3. '=' → logprob: -8.363173484802246
    4. '_' → logprob: -10.238173484802246
    5. '=[]' → logprob: -10.238173484802246
    6. 'cities' → logprob: -10.988173484802246
    7. 'Cities' → logprob: -11.238173484802246
    8. '   ' → logprob: -12.363173484802246
    9. '=[]
' → logprob: -12.613173484802246
    10. '_city' → logprob: -12.738173484802246

Token 106: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04507401958107948
    2. ' []' → logprob: -3.170073986053467
    3. 'cities' → logprob: -7.170073986053467
    4. '[]
' → logprob: -7.920073986053467
    5. '[c' → logprob: -8.170074462890625
    6. ' cities' → logprob: -8.295074462890625
    7. 'list' → logprob: -9.170074462890625
    8. '[' → logprob: -9.420074462890625
    9. '[]}' → logprob: -9.795074462890625
    10. ' list' → logprob: -10.170074462890625

Token 107: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10439184308052063
    2. ' for' → logprob: -2.3543918132781982
    3. '   ' → logprob: -5.479392051696777
    4. '	for' → logprob: -12.729392051696777
    5. '
' → logprob: -15.104392051696777
    6. ' cities' → logprob: -15.104392051696777
    7. 'cities' → logprob: -15.229392051696777
    8. ' ' → logprob: -15.354392051696777
    9. ',' → logprob: -15.604392051696777
    10. '    
' → logprob: -15.854392051696777

Token 108: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.5332478142227046e-05
    2. '   ' → logprob: -11.375015258789062
    3. ' for' → logprob: -12.500015258789062
    4. '	for' → logprob: -19.000015258789062
    5. 'fo' → logprob: -20.000015258789062
    6. '
' → logprob: -20.125015258789062
    7. 'while' → logprob: -21.250015258789062
    8. '    
' → logprob: -21.750015258789062
    9. 'f' → logprob: -22.125015258789062
    10. ' ' → logprob: -22.375015258789062

Token 109: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.6017385125160217
    2. 'city' → logprob: -1.351738452911377
    3. 'c' → logprob: -2.351738452911377
    4. ' c' → logprob: -3.101738452911377
    5. 'i' → logprob: -3.476738452911377
    6. ' i' → logprob: -3.851738452911377
    7. 'ci' → logprob: -7.726738452911377
    8. ' ci' → logprob: -8.976738929748535
    9. ' s' → logprob: -9.351738929748535
    10. 's' → logprob: -9.476738929748535

Token 110: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017822833033278584
    2. 'in' → logprob: -6.376782417297363
    3. '_' → logprob: -10.626782417297363
    4. '_in' → logprob: -10.626782417297363
    5. 's' → logprob: -11.501782417297363
    6. ' ' → logprob: -11.626782417297363
    7. ' i' → logprob: -12.751782417297363
    8. 'i' → logprob: -13.626782417297363
    9. '_name' → logprob: -13.626782417297363
    10. '   ' → logprob: -13.751782417297363

Token 111: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.08905047923326492
    2. ' cities' → logprob: -2.464050531387329
    3. 'c' → logprob: -10.71405029296875
    4. 'filtered' → logprob: -10.83905029296875
    5. '   ' → logprob: -10.83905029296875
    6. 'cit' → logprob: -11.58905029296875
    7. 'sorted' → logprob: -11.71405029296875
    8. ' ' → logprob: -11.96405029296875
    9. '	c' → logprob: -12.21405029296875
    10. 'filter' → logprob: -12.21405029296875

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019035033881664276
    2. ':
' → logprob: -4.0190348625183105
    3. '       ' → logprob: -7.6440348625183105
    4. '   ' → logprob: -7.8940348625183105
    5. '):' → logprob: -11.644035339355469
    6. ':

' → logprob: -12.019035339355469
    7. ',' → logprob: -12.519035339355469
    8. '):
' → logprob: -12.769035339355469
    9. '    ' → logprob: -13.144035339355469
    10. ' if' → logprob: -13.394035339355469

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4868068993091583
    2. '   ' → logprob: -0.9868068695068359
    3. ' if' → logprob: -4.736806869506836
    4. ' to' → logprob: -6.861806869506836
    5. ':' → logprob: -7.861806869506836
    6. '
' → logprob: -8.111806869506836
    7. ':
' → logprob: -8.111806869506836
    8. ' is' → logprob: -8.236806869506836
    9. '<|end|>' → logprob: -8.361806869506836
    10. '    
' → logprob: -8.611806869506836

Token 114: ' skip' (ID: 16677)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4666629731655121
    2. '   ' → logprob: -1.2166630029678345
    3. 'if' → logprob: -2.591662883758545
    4. ' is' → logprob: -6.966662883758545
    5. 'is' → logprob: -7.591662883758545
    6. '       ' → logprob: -8.966663360595703
    7. '    ' → logprob: -9.716663360595703
    8. ' add' → logprob: -9.966663360595703
    9. ' should' → logprob: -10.091663360595703
    10. ' to' → logprob: -10.841663360595703

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020648395642638206
    2. '=' → logprob: -3.89564847946167
    3. ' ' → logprob: -9.395648002624512
    4. '_' → logprob: -11.270648002624512
    5. 'ed' → logprob: -12.770648002624512
    6. '=True' → logprob: -13.145648002624512
    7. '   ' → logprob: -13.145648002624512
    8. '=False' → logprob: -14.020648002624512
    9. ' =
' → logprob: -14.770648002624512
    10. 'ing' → logprob: -14.895648002624512

Token 116: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0041059465147554874
    2. ' False' → logprob: -5.504106044769287
    3. 'any' → logprob: -10.629105567932129
    4. 'True' → logprob: -13.504105567932129
    5. '   ' → logprob: -13.754105567932129
    6. ' any' → logprob: -14.004105567932129
    7. '(False' → logprob: -18.254106521606445
    8. ' True' → logprob: -19.004106521606445
    9. 'Any' → logprob: -19.004106521606445
    10. '0' → logprob: -19.504106521606445

Token 117: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018862858414649963
    2. ' for' → logprob: -4.518862724304199
    3. '<|end|>' → logprob: -5.518862724304199
    4. '
' → logprob: -6.268862724304199
    5. '   ' → logprob: -6.518862724304199
    6. ' ' → logprob: -9.0188627243042
    7. ',' → logprob: -9.2688627243042
    8. '<|end|>' → logprob: -10.1438627243042
    9. '	' → logprob: -10.3938627243042
    10. ' to' → logprob: -10.8938627243042

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.158967062830925
    2. '   ' → logprob: -2.0339670181274414
    3. ' for' → logprob: -4.533967018127441
    4. '<|end|>' → logprob: -5.658967018127441
    5. '
' → logprob: -6.533967018127441
    6. ' ' → logprob: -8.658967018127441
    7. '	' → logprob: -9.408967018127441
    8. '	for' → logprob: -10.158967018127441
    9. '    
' → logprob: -10.158967018127441
    10. '<|end|>' → logprob: -10.533967018127441

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14467714726924896
    2. '       ' → logprob: -2.01967716217041
    3. '   ' → logprob: -6.76967716217041
    4. 'for' (adapté à ' for') → logprob: -7.14467716217041
    5. ' ' → logprob: -10.26967716217041
    6. '	for' → logprob: -11.64467716217041
    7. '    ' → logprob: -11.76967716217041
    8. '<|end|>' → logprob: -12.64467716217041
    9. ' to' → logprob: -12.76967716217041
    10. '  ' → logprob: -13.64467716217041

Token 120: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3140106499195099
    2. ' other' → logprob: -1.3140106201171875
    3. 'c' → logprob: -8.189010620117188
    4. ' c' → logprob: -9.064010620117188
    5. ' city' → logprob: -9.189010620117188
    6. 'f' → logprob: -9.439010620117188
    7. ' f' → logprob: -9.939010620117188
    8. 'city' → logprob: -10.439010620117188
    9. 'o' → logprob: -11.064010620117188
    10. ' o' → logprob: -11.314010620117188

Token 121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00030721822986379266
    2. '_city' → logprob: -8.625307083129883
    3. 'city' → logprob: -9.500307083129883
    4. 'in' → logprob: -10.125307083129883
    5. ' city' → logprob: -12.000307083129883
    6. 'City' → logprob: -12.625307083129883
    7. ' ' → logprob: -12.750307083129883
    8. '_' → logprob: -15.500307083129883
    9. 'cities' → logprob: -16.750307083129883
    10. ' City' → logprob: -17.125307083129883

Token 122: ' cities' (ID: 15636)
  Prédit: ' cities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cities' → logprob: -0.2254648506641388
    2. 'cities' → logprob: -1.6004648208618164
    3. 'c' → logprob: -11.225464820861816
    4. 'filtered' → logprob: -11.350464820861816
    5. ' filtered' → logprob: -11.475464820861816
    6. ' cidades' → logprob: -12.850464820861816
    7. '	c' → logprob: -12.850464820861816
    8. ' city' → logprob: -12.975464820861816
    9. '   ' → logprob: -13.100464820861816
    10. 'city' → logprob: -13.350464820861816

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36002177000045776
    2. ':
' → logprob: -1.2350218296051025
    3. '           ' → logprob: -4.735021591186523
    4. '<|end|>' → logprob: -6.860021591186523
    5. '():
' → logprob: -8.360021591186523
    6. ' :' → logprob: -8.360021591186523
    7. '       ' → logprob: -8.360021591186523
    8. ' :
' → logprob: -8.610021591186523
    9. '<|end|>' → logprob: -8.610021591186523
    10. ' if' → logprob: -9.110021591186523

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010740526020526886
    2. ':
' → logprob: -4.635740756988525
    3. ':' → logprob: -7.385740756988525
    4. ' if' → logprob: -8.135740280151367
    5. '            ' → logprob: -11.135740280151367
    6. '            
' → logprob: -11.760740280151367
    7. '          ' → logprob: -11.760740280151367
    8. '():
' → logprob: -12.010740280151367
    9. ' :
' → logprob: -12.260740280151367
    10. '
' → logprob: -12.260740280151367

Token 125: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29829397797584534
    2. '               ' → logprob: -1.798293948173523
    3. ' if' → logprob: -2.4232940673828125
    4. '<|end|>' → logprob: -5.9232940673828125
    5. 'if' (adapté à ' if') → logprob: -8.423294067382812
    6. '       ' → logprob: -8.423294067382812
    7. '            
' → logprob: -9.048294067382812
    8. '
' → logprob: -9.298294067382812
    9. '            ' → logprob: -9.673294067382812
    10. '<|end|>' → logprob: -10.048294067382812

Token 126: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.2064596265554428
    2. 'city' → logprob: -1.706459641456604
    3. ' other' → logprob: -5.5814595222473145
    4. 'other' → logprob: -6.7064595222473145
    5. '(city' → logprob: -10.581459999084473
    6. '   ' → logprob: -11.706459999084473
    7. ' ' → logprob: -12.206459999084473
    8. '_city' → logprob: -14.081459999084473
    9. 'City' → logprob: -14.206459999084473
    10. '  ' → logprob: -14.331459999084473

Token 127: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.16069290041923523
    2. '!=' → logprob: -2.0356929302215576
    3. ' in' → logprob: -4.0356926918029785
    4. 'in' → logprob: -8.660693168640137
    5. ' ' → logprob: -12.410693168640137
    6. ' ==' → logprob: -13.160693168640137
    7. '==' → logprob: -13.785693168640137
    8. '   ' → logprob: -14.160693168640137
    9. ' is' → logprob: -14.535693168640137
    10. '!='' → logprob: -15.035693168640137

Token 128: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.06205877289175987
    2. ' other' → logprob: -2.812058687210083
    3. 'city' → logprob: -9.562058448791504
    4. ' city' → logprob: -10.937058448791504
    5. ' ' → logprob: -13.062058448791504
    6. '   ' → logprob: -15.187058448791504
    7. 'Other' → logprob: -15.437058448791504
    8. '  ' → logprob: -15.562058448791504
    9. '(other' → logprob: -16.31205940246582
    10. 'oth' → logprob: -17.06205940246582

Token 129: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006722826045006514
    2. 'and' → logprob: -5.006722927093506
    3. '           ' → logprob: -12.506722450256348
    4. ' ' → logprob: -13.006722450256348
    5. '               ' → logprob: -14.506722450256348
    6. '   ' → logprob: -14.756722450256348
    7. '            ' → logprob: -15.631722450256348
    8. '    ' → logprob: -16.506723403930664
    9. '	and' → logprob: -16.631723403930664
    10. '          ' → logprob: -16.756723403930664

Token 130: ' city' (ID: 5030)
  Prédit: ' city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' city' → logprob: -0.6326626539230347
    2. 'city' → logprob: -0.7576626539230347
    3. '(city' → logprob: -9.882662773132324
    4. ' ' → logprob: -12.507662773132324
    5. '   ' → logprob: -13.132662773132324
    6. '_city' → logprob: -13.632662773132324
    7. '.city' → logprob: -13.757662773132324
    8. '
' → logprob: -13.882662773132324
    9. 'cit' → logprob: -14.632662773132324
    10. '  ' → logprob: -14.945162773132324

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06993887573480606
    2. 'in' → logprob: -2.694938898086548
    3. '   ' → logprob: -13.944938659667969
    4. ' ' → logprob: -14.319938659667969
    5. ')' → logprob: -15.069938659667969
    6. '  ' → logprob: -15.569938659667969
    7. '
' → logprob: -15.694938659667969
    8. '.find' → logprob: -16.06993865966797
    9. ' not' → logprob: -16.56993865966797
    10. '	in' → logprob: -16.94493865966797

Token 132: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00033546582562848926
    2. ' other' → logprob: -8.000335693359375
    3. '(other' → logprob: -17.875335693359375
    4. '.other' → logprob: -18.625335693359375
    5. '_other' → logprob: -19.000335693359375
    6. 'Other' → logprob: -20.125335693359375
    7. 'othe' → logprob: -20.125335693359375
    8. 'oth' → logprob: -21.250335693359375
    9. '   ' → logprob: -22.125335693359375
    10. 'others' → logprob: -22.250335693359375

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7053380012512207
    2. ':
' → logprob: -0.7053380012512207
    3. '           ' → logprob: -5.205338001251221
    4. '               ' → logprob: -5.705338001251221
    5. ' and' → logprob: -6.080338001251221
    6. '):
' → logprob: -8.080337524414062
    7. '       ' → logprob: -8.705337524414062
    8. ' :
' → logprob: -9.080337524414062
    9. ' :' → logprob: -9.455337524414062
    10. '):' → logprob: -9.580337524414062

Token 134: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06640572100877762
    2. ':
' → logprob: -2.816405773162842
    3. '           ' → logprob: -5.816405773162842
    4. ':' → logprob: -6.691405773162842
    5. '
' → logprob: -9.441405296325684
    6. ' :
' → logprob: -10.066405296325684
    7. '                   ' → logprob: -10.816405296325684
    8. ' and' → logprob: -11.316405296325684
    9. '              ' → logprob: -11.566405296325684
    10. '):
' → logprob: -11.941405296325684

Token 135: ' skip' (ID: 16677)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18178537487983704
    2. '                   ' → logprob: -1.9317853450775146
    3. ' skip' → logprob: -4.806785583496094
    4. 'skip' (adapté à ' skip') → logprob: -4.931785583496094
    5. '           ' → logprob: -5.181785583496094
    6. '                       ' → logprob: -8.681785583496094
    7. '   ' → logprob: -9.681785583496094
    8. '
' → logprob: -10.306785583496094
    9. '       ' → logprob: -10.681785583496094
    10. ' ' → logprob: -12.306785583496094

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39060455560684204
    2. '=' → logprob: -1.1406044960021973
    3. '=True' → logprob: -6.015604496002197
    4. '           ' → logprob: -7.390604496002197
    5. '               ' → logprob: -7.765604496002197
    6. '                   ' → logprob: -9.390604972839355
    7. ' ' → logprob: -10.140604972839355
    8. '   ' → logprob: -10.515604972839355
    9. '       ' → logprob: -10.765604972839355
    10. ' =
' → logprob: -11.515604972839355

Token 137: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0004306692280806601
    2. ' True' → logprob: -7.750430583953857
    3. '=True' → logprob: -18.875431060791016
    4. '(True' → logprob: -19.375431060791016
    5. '   ' → logprob: -21.500431060791016
    6. '1' → logprob: -23.250431060791016
    7. 'true' → logprob: -23.500431060791016
    8. '.True' → logprob: -23.750431060791016
    9. 'TRUE' → logprob: -24.125431060791016
    10. 'Tr' → logprob: -24.875431060791016

Token 138: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013389317318797112
    2. '           ' → logprob: -6.876338958740234
    3. '       ' → logprob: -9.251338958740234
    4. '		       ' → logprob: -9.501338958740234
    5. '<|end|>' → logprob: -9.876338958740234
    6. '			' → logprob: -10.001338958740234
    7. '	           ' → logprob: -11.876338958740234
    8. '                   ' → logprob: -12.001338958740234
    9. '	' → logprob: -12.251338958740234
    10. '		' → logprob: -12.626338958740234

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004259680863469839
    2. '       ' → logprob: -5.5042595863342285
    3. '		       ' → logprob: -8.879260063171387
    4. '           ' → logprob: -11.254260063171387
    5. '			' → logprob: -11.629260063171387
    6. '	' → logprob: -11.629260063171387
    7. '	           ' → logprob: -12.629260063171387
    8. '	       ' → logprob: -12.879260063171387
    9. '<|end|>' → logprob: -13.129260063171387
    10. '   ' → logprob: -13.879260063171387

Token 140: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010848077945411205
    2. 'break' (adapté à ' break') → logprob: -4.760848045349121
    3. ' break' → logprob: -7.135848045349121
    4. '       ' → logprob: -7.385848045349121
    5. '	break' → logprob: -7.760848045349121
    6. '			' → logprob: -8.510848045349121
    7. '           ' → logprob: -9.510848045349121
    8. '		       ' → logprob: -10.010848045349121
    9. '   ' → logprob: -10.885848045349121
    10. 'continue' → logprob: -11.260848045349121

Token 141: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0325924449716695e-05
    2. '   ' → logprob: -11.87501049041748
    3. '<|end|>' → logprob: -13.00001049041748
    4. '           ' → logprob: -15.00001049041748
    5. '	' → logprob: -15.25001049041748
    6. '
' → logprob: -16.000009536743164
    7. '	   ' → logprob: -16.250009536743164
    8. ',' → logprob: -16.375009536743164
    9. '<|end|>' → logprob: -17.250009536743164
    10. '               ' → logprob: -17.250009536743164

Token 142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.3557529857498594e-05
    2. '   ' → logprob: -11.25002384185791
    3. '<|end|>' → logprob: -11.75002384185791
    4. '           ' → logprob: -13.62502384185791
    5. '	' → logprob: -14.50002384185791
    6. '	   ' → logprob: -15.37502384185791
    7. ',' → logprob: -16.125022888183594
    8. ' continue' → logprob: -16.125022888183594
    9. ' if' → logprob: -16.500022888183594
    10. 'continue' → logprob: -16.625022888183594

Token 143: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003010233340319246
    2. '   ' → logprob: -8.500301361083984
    3. ' if' → logprob: -9.375301361083984
    4. 'if' (adapté à ' if') → logprob: -11.750301361083984
    5. 'continue' → logprob: -13.375301361083984
    6. ' continue' → logprob: -13.750301361083984
    7. '<|end|>' → logprob: -14.250301361083984
    8. ' ' → logprob: -14.375301361083984
    9. '	' → logprob: -15.625301361083984
    10. '           ' → logprob: -16.000301361083984

Token 144: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.34845098853111267
    2. 'not' → logprob: -1.223451018333435
    3. '   ' → logprob: -13.223450660705566
    4. '	not' → logprob: -13.348450660705566
    5. ' no' → logprob: -14.473450660705566
    6. '!' → logprob: -14.473450660705566
    7. ' ' → logprob: -14.598450660705566
    8. 'n' → logprob: -14.848450660705566
    9. 'no' → logprob: -15.473450660705566
    10. '
' → logprob: -15.473450660705566

Token 145: ' skip' (ID: 16677)
  Prédit: 'skip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'skip' → logprob: -0.126929372549057
    2. ' skip' → logprob: -2.12692928314209
    3. ' ' → logprob: -14.62692928314209
    4. '(skip' → logprob: -15.00192928314209
    5. '   ' → logprob: -15.12692928314209
    6. '.skip' → logprob: -16.751930236816406
    7. 'sk' → logprob: -17.251930236816406
    8. '  ' → logprob: -17.626930236816406
    9. '_skip' → logprob: -17.876930236816406
    10. 'stop' → logprob: -18.126930236816406

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011759399203583598
    2. ':
' → logprob: -6.751175880432129
    3. '):' → logprob: -12.751175880432129
    4. ' :' → logprob: -14.126175880432129
    5. ',' → logprob: -14.251175880432129
    6. '   ' → logprob: -14.751175880432129
    7. '):
' → logprob: -14.876175880432129
    8. ':**' → logprob: -15.376175880432129
    9. ':

' → logprob: -15.751175880432129
    10. 'filtered' → logprob: -16.376176834106445

Token 147: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.027844786643982
    2. '           ' → logprob: -1.027844786643982
    3. ' filtered' → logprob: -1.402844786643982
    4. 'filtered' → logprob: -3.2778449058532715
    5. '   ' → logprob: -7.1528449058532715
    6. '(filtered' → logprob: -10.902844429016113
    7. '	   ' → logprob: -12.152844429016113
    8. '_filtered' → logprob: -12.152844429016113
    9. '	       ' → logprob: -12.402844429016113
    10. 'Filtered' → logprob: -12.527844429016113

Token 148: ' filtered' (ID: 31972)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' (adapté à ' filtered') → logprob: -0.10025012493133545
    2. ' filtered' → logprob: -2.350250244140625
    3. '   ' → logprob: -10.100250244140625
    4. '           ' → logprob: -13.100250244140625
    5. '       ' → logprob: -15.600250244140625
    6. '_filtered' → logprob: -16.975250244140625
    7. '.filtered' → logprob: -17.350250244140625
    8. 'Filtered' → logprob: -17.475250244140625
    9. 'filter' → logprob: -17.600250244140625
    10. '(filtered' → logprob: -17.600250244140625

Token 149: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008644821122288704
    2. '.' → logprob: -4.758645057678223
    3. ' .' → logprob: -10.633645057678223
    4. '.add' → logprob: -12.633645057678223
    5. '.extend' → logprob: -14.133645057678223
    6. '.app' → logprob: -14.383645057678223
    7. 'append' → logprob: -14.883645057678223
    8. '.push' → logprob: -15.008645057678223
    9. '.ap' → logprob: -15.008645057678223
    10. '.Append' → logprob: -15.133645057678223

Token 150: '(city' (ID: 84604)
  Prédit: '(city'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(city' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. 'city' → logprob: -14.125028610229492
    4. ' city' → logprob: -17.250028610229492
    5. '(
' → logprob: -18.125028610229492
    6. ' (' → logprob: -18.500028610229492
    7. '(country' → logprob: -18.500028610229492
    8. '(c' → logprob: -18.750028610229492
    9. '(ci' → logprob: -18.875028610229492
    10. '(C' → logprob: -21.125028610229492

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ' )' → logprob: -12.625005722045898
    3. ')
' → logprob: -13.625005722045898
    4. '   ' → logprob: -14.750005722045898
    5. '<|end|>' → logprob: -15.625005722045898
    6. ')return' → logprob: -17.3750057220459
    7. '),' → logprob: -18.0000057220459
    8. ' ' → logprob: -18.0000057220459
    9. '())' → logprob: -18.1250057220459
    10. ')n' → logprob: -18.3750057220459

Token 152: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.206026554107666
    2. 'import' → logprob: -1.706026554107666
    3. 'm' → logprob: -2.331026554107666
    4. 'graph' → logprob: -2.456026554107666
    5. '   ' → logprob: -2.831026554107666
    6. 'n' → logprob: -3.081026554107666
    7. 'cities' → logprob: -3.956026554107666
    8. 'from' → logprob: -4.206026554107666
    9. 'length' → logprob: -4.331026554107666
    10. 'short' → logprob: -4.456026554107666

Token 153: ' cities' (ID: 15636)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.25208956003189087
    2. 'import' → logprob: -3.002089500427246
    3. 'graph' → logprob: -3.002089500427246
    4. 'result' → logprob: -3.752089500427246
    5. ' dp' → logprob: -4.002089500427246
    6. 'from' → logprob: -4.002089500427246
    7. '   ' → logprob: -4.252089500427246
    8. 'm' → logprob: -5.127089500427246
    9. 'merged' → logprob: -5.127089500427246
    10. 'path' → logprob: -5.752089500427246

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519518733024597
    2. ' =' → logprob: -1.5019519329071045
    3. ',' → logprob: -12.001952171325684
    4. '<|end|>' → logprob: -12.501952171325684
    5. '.sort' → logprob: -13.001952171325684
    6. '_filtered' → logprob: -13.126952171325684
    7. '[:]' → logprob: -13.751952171325684
    8. '.extend' → logprob: -13.876952171325684
    9. 'filtered' → logprob: -13.876952171325684
    10. '.' → logprob: -14.376952171325684

Token 155: ' filtered' (ID: 31972)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.02975141443312168
    2. ' filtered' → logprob: -3.5297513008117676
    3. 'filter' → logprob: -15.029751777648926
    4. '(filtered' → logprob: -15.154751777648926
    5. '   ' → logprob: -15.779751777648926
    6. 'Filtered' → logprob: -16.40475082397461
    7. '_filtered' → logprob: -16.65475082397461
    8. '.filtered' → logprob: -16.77975082397461
    9. ' ' → logprob: -17.27975082397461
    10. 'fil' → logprob: -17.40475082397461

Token 156: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6628530025482178
    2. 'dp' → logprob: -2.1628530025482178
    3. 'import' → logprob: -2.2878530025482178
    4. 'graph' → logprob: -3.0378530025482178
    5. 'n' → logprob: -3.4128530025482178
    6. 'from' → logprob: -3.6628530025482178
    7. ' graph' → logprob: -4.412853240966797
    8. 'merged' → logprob: -4.412853240966797
    9. 'm' → logprob: -4.537853240966797
    10. 'result' → logprob: -4.537853240966797

Token 157: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23334850370883942
    2. '   ' → logprob: -2.7333486080169678
    3. 'graph' → logprob: -3.6083486080169678
    4. ' dp' → logprob: -3.7333486080169678
    5. 'from' → logprob: -4.108348369598389
    6. 'import' → logprob: -4.108348369598389
    7. 'm' → logprob: -4.233348369598389
    8. 'visited' → logprob: -5.233348369598389
    9. 'result' → logprob: -5.358348369598389
    10. 'best' → logprob: -5.483348369598389

Token 158: ' n' (ID: 297)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28087952733039856
    2. 'm' → logprob: -3.030879497528076
    3. 'n' (adapté à ' n') → logprob: -3.030879497528076
    4. 'graph' → logprob: -3.405879497528076
    5. 'from' → logprob: -3.530879497528076
    6. 'best' → logprob: -4.030879497528076
    7. 'import' → logprob: -4.530879497528076
    8. 'result' → logprob: -4.655879497528076
    9. 'merged' → logprob: -4.905879497528076
    10. 'dist' → logprob: -5.155879497528076

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5263112187385559
    2. ' =' → logprob: -0.9013112187385559
    3. '=len' → logprob: -5.77631139755249
    4. ',' → logprob: -10.526310920715332
    5. ')' → logprob: -10.901310920715332
    6. ' -=' → logprob: -11.776310920715332
    7. '<|end|>' → logprob: -12.276310920715332
    8. '-=' → logprob: -12.651310920715332
    9. '-' → logprob: -12.776310920715332
    10. '=int' → logprob: -13.026310920715332

Token 160: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16022513806819916
    2. ' len' → logprob: -1.9102251529693604
    3. '(len' → logprob: -14.160224914550781
    4. '=len' → logprob: -16.28522491455078
    5. '[len' → logprob: -16.41022491455078
    6. '	len' → logprob: -16.66022491455078
    7. ',len' → logprob: -18.28522491455078
    8. '   ' → logprob: -18.41022491455078
    9. '<len' → logprob: -18.53522491455078
    10. '.len' → logprob: -22.03522491455078

Token 161: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.6537622034084052e-05
    2. '(' → logprob: -10.62502670288086
    3. 'cities' → logprob: -13.62502670288086
    4. ' (' → logprob: -14.12502670288086
    5. 'c' → logprob: -16.25002670288086
    6. '(s' → logprob: -16.75002670288086
    7. '(filtered' → logprob: -17.37502670288086
    8. '(city' → logprob: -17.37502670288086
    9. ' cities' → logprob: -17.87502670288086
    10. '(b' → logprob: -18.00002670288086

Token 162: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.00018542143516242504
    2. 'cities' → logprob: -8.625185012817383
    3. 'ties' → logprob: -12.625185012817383
    4. 'ites' → logprob: -13.750185012817383
    5. 'it' → logprob: -14.375185012817383
    6. 'ITIES' → logprob: -15.750185012817383
    7. 'i' → logprob: -15.875185012817383
    8. 'ity' → logprob: -16.000185012817383
    9. 'itys' → logprob: -16.250185012817383
    10. 's' → logprob: -16.250185012817383

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005784121458418667
    2. ' )' → logprob: -7.5005784034729
    3. ')
' → logprob: -10.875578880310059
    4. '<|end|>' → logprob: -12.500578880310059
    5. '   ' → logprob: -13.250578880310059
    6. 'def' → logprob: -16.125577926635742
    7. '<|end|>' → logprob: -16.125577926635742
    8. ' ' → logprob: -16.250577926635742
    9. ')

' → logprob: -16.500577926635742
    10. ' )
' → logprob: -16.750577926635742

Token 164: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020076029002666473
    2. '   ' → logprob: -4.645075798034668
    3. ' dp' → logprob: -4.895075798034668
    4. 'import' → logprob: -7.270075798034668
    5. 'dist' → logprob: -7.270075798034668
    6. 'from' → logprob: -8.020075798034668
    7. 'graph' → logprob: -8.145075798034668
    8. 'full' → logprob: -8.895075798034668
    9. 'best' → logprob: -9.145075798034668
    10. 'used' → logprob: -9.520075798034668

Token 165: ' ol' (ID: 3465)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0007230373448692262
    2. 'dist' → logprob: -7.750722885131836
    3. 'full' → logprob: -8.625722885131836
    4. 'INF' → logprob: -10.250722885131836
    5. 'all' → logprob: -11.250722885131836
    6. '#' → logprob: -11.250722885131836
    7. 'import' → logprob: -11.750722885131836
    8. 'from' → logprob: -11.750722885131836
    9. ' dp' → logprob: -11.875722885131836
    10. 'over' → logprob: -12.000722885131836

Token 166: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.01841564103960991
    2. 'aps' → logprob: -4.018415451049805
    3. '_overlap' → logprob: -9.018415451049805
    4. 'apse' → logprob: -10.268415451049805
    5. ' overlap' → logprob: -10.643415451049805
    6. 'lap' → logprob: -10.893415451049805
    7. ' overlaps' → logprob: -11.143415451049805
    8. ' =' → logprob: -11.268415451049805
    9. '   ' → logprob: -11.768415451049805
    10. 'app' → logprob: -12.018415451049805

Token 167: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42072781920433044
    2. ' =' → logprob: -1.7957278490066528
    3. 'ap' → logprob: -1.7957278490066528
    4. '_matrix' → logprob: -5.920727729797363
    5. '=len' → logprob: -5.920727729797363
    6. '   ' → logprob: -6.295727729797363
    7. 'aps' → logprob: -6.795727729797363
    8. '=[[' → logprob: -7.170727729797363
    9. '=[' → logprob: -7.295727729797363
    10. 's' → logprob: -8.295727729797363

Token 168: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0036076747346669436
    2. ' [[' → logprob: -5.753607749938965
    3. '[' → logprob: -7.753607749938965
    4. ' [' → logprob: -14.503607749938965
    5. '[
' → logprob: -16.37860679626465
    6. '[['' → logprob: -17.75360679626465
    7. '   ' → logprob: -18.37860679626465
    8. '[]' → logprob: -18.62860679626465
    9. '[n' → logprob: -18.62860679626465
    10. '[]
' → logprob: -19.62860679626465

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'over' → logprob: -17.500003814697266
    4. '[' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.750003814697266
    6. '
' → logprob: -19.250003814697266
    7. '-' → logprob: -19.750003814697266
    8. 'False' → logprob: -21.125003814697266
    9. '(' → logprob: -21.250003814697266
    10. '۰' → logprob: -21.375003814697266

Token 170: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.03464178368449211
    2. ']' → logprob: -3.784641742706299
    3. ' for' → logprob: -4.534641742706299
    4. 'for' → logprob: -7.534641742706299
    5. ']*(' → logprob: -9.659642219543457
    6. '   ' → logprob: -13.659642219543457
    7. ' ]' → logprob: -13.909642219543457
    8. '	for' → logprob: -14.784642219543457
    9. ' ' → logprob: -15.909642219543457
    10. ']+' → logprob: -16.28464126586914

Token 171: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.816093228830141e-06
    2. ' n' → logprob: -12.87500286102295
    3. '(n' → logprob: -15.50000286102295
    4. '	n' → logprob: -18.625001907348633
    5. ')n' → logprob: -19.000001907348633
    6. '_n' → logprob: -19.875001907348633
    7. '[n' → logprob: -20.250001907348633
    8. '   ' → logprob: -20.375001907348633
    9. ',n' → logprob: -20.375001907348633
    10. '$n' → logprob: -20.875001907348633

Token 172: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20144793391227722
    2. 'for' → logprob: -1.7014479637145996
    3. '	for' → logprob: -10.576447486877441
    4. ' ' → logprob: -12.701447486877441
    5. '   ' → logprob: -12.951447486877441
    6. ']' → logprob: -13.451447486877441
    7. '<|end|>' → logprob: -14.201447486877441
    8. '    ' → logprob: -15.076447486877441
    9. ')' → logprob: -15.201447486877441
    10. '
' → logprob: -15.576447486877441

Token 173: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.251936137676239
    2. 'range' → logprob: -1.5019361972808838
    3. '(range' → logprob: -12.751935958862305
    4. '_' → logprob: -13.626935958862305
    5. '	range' → logprob: -13.626935958862305
    6. '_range' → logprob: -13.876935958862305
    7. ' xrange' → logprob: -14.501935958862305
    8. ' in' → logprob: -16.501935958862305
    9. ' ' → logprob: -17.126935958862305
    10. 'in' → logprob: -17.251935958862305

Token 174: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023864807561039925
    2. ' range' → logprob: -3.77386474609375
    3. 'in' → logprob: -7.64886474609375
    4. ' in' → logprob: -8.89886474609375
    5. '(range' → logprob: -12.52386474609375
    6. ' ' → logprob: -13.77386474609375
    7. 'n' → logprob: -14.27386474609375
    8. '	range' → logprob: -15.27386474609375
    9. '   ' → logprob: -16.39886474609375
    10. 'ran' → logprob: -16.64886474609375

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815146580338478
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -13.64315128326416
    4. ' ' → logprob: -15.89315128326416
    5. '   ' → logprob: -16.268152236938477
    6. '	range' → logprob: -16.518152236938477
    7. '  ' → logprob: -19.018152236938477
    8. 'ran' → logprob: -19.893152236938477
    9. ' xrange' → logprob: -19.893152236938477
    10. '_range' → logprob: -20.143152236938477

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00013214473437983543
    2. 'n' → logprob: -9.12513256072998
    3. '(' → logprob: -11.25013256072998
    4. ' (' → logprob: -12.00013256072998
    5. 'range' → logprob: -13.00013256072998
    6. '(range' → logprob: -13.75013256072998
    7. ')n' → logprob: -15.50013256072998
    8. ' range' → logprob: -15.50013256072998
    9. ' n' → logprob: -15.62513256072998
    10. ')' → logprob: -18.000131607055664

Token 177: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00034392563975416124
    2. ')' → logprob: -8.250344276428223
    3. ']' → logprob: -10.000344276428223
    4. ' )' → logprob: -10.250344276428223
    5. ' ]' → logprob: -13.750344276428223
    6. '])' → logprob: -15.625344276428223
    7. '))' → logprob: -15.750344276428223
    8. ')],' → logprob: -16.250343322753906
    9. ')}' → logprob: -16.750343322753906
    10. ')]
' → logprob: -16.750343322753906

Token 178: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8100430965423584
    2. '   ' → logprob: -1.1850430965423584
    3. ' for' → logprob: -1.4350430965423584
    4. '
' → logprob: -4.5600433349609375
    5. '<|end|>' → logprob: -7.3100433349609375
    6. '	for' → logprob: -9.935043334960938
    7. ')' → logprob: -10.310043334960938
    8. ' ' → logprob: -10.435043334960938
    9. '    
' → logprob: -10.435043334960938
    10. ' 
' → logprob: -10.935043334960938

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003222987288609147
    2. ' for' → logprob: -5.753222942352295
    3. '   ' → logprob: -10.003223419189453
    4. '	for' → logprob: -17.503223419189453
    5. '
' → logprob: -18.253223419189453
    6. ' ' → logprob: -20.003223419189453
    7. 'i' → logprob: -20.628223419189453
    8. '  ' → logprob: -21.878223419189453
    9. '    
' → logprob: -22.128223419189453
    10. ' 
' → logprob: -23.128223419189453

Token 180: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20141752064228058
    2. ' i' → logprob: -1.7014175653457642
    3. '	i' → logprob: -13.201417922973633
    4. ' ' → logprob: -13.576417922973633
    5. '   ' → logprob: -14.951417922973633
    6. '_i' → logprob: -15.451417922973633
    7. 'I' → logprob: -15.951417922973633
    8. ' ' → logprob: -15.951417922973633
    9. 'x' → logprob: -16.451417922973633
    10. '```' → logprob: -16.576417922973633

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014173386618494987
    2. 'in' → logprob: -4.26417350769043
    3. '	in' → logprob: -12.01417350769043
    4. ' ' → logprob: -12.88917350769043
    5. 'In' → logprob: -15.01417350769043
    6. '   ' → logprob: -15.13917350769043
    7. '  ' → logprob: -15.51417350769043
    8. 'import' → logprob: -15.76417350769043
    9. 'n' → logprob: -16.76417350769043
    10. 'range' → logprob: -16.88917350769043

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858759790658951
    2. ' range' → logprob: -3.0485875606536865
    3. '(range' → logprob: -16.298587799072266
    4. ' ' → logprob: -17.423587799072266
    5. '	range' → logprob: -17.673587799072266
    6. '   ' → logprob: -18.298587799072266
    7. '  ' → logprob: -19.423587799072266
    8. 'in' → logprob: -19.673587799072266
    9. '```' → logprob: -19.923587799072266
    10. '
' → logprob: -19.923587799072266

Token 183: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010151672904612496
    2. 'range' → logprob: -10.000101089477539
    3. '(range' → logprob: -10.125101089477539
    4. '(' → logprob: -11.375101089477539
    5. ' range' → logprob: -12.875101089477539
    6. 'n' → logprob: -13.250101089477539
    7. ' (' → logprob: -16.25010108947754
    8. '(i' → logprob: -17.50010108947754
    9. '(j' → logprob: -18.37510108947754
    10. 'Range' → logprob: -18.62510108947754

Token 184: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004141210578382015
    2. '):' → logprob: -5.504141330718994
    3. '   ' → logprob: -10.254140853881836
    4. ')' → logprob: -11.629140853881836
    5. '):
' → logprob: -11.629140853881836
    6. ' ):
' → logprob: -12.129140853881836
    7. '():
' → logprob: -13.754140853881836
    8. '       ' → logprob: -14.004140853881836
    9. '):

' → logprob: -14.504140853881836
    10. 'for' → logprob: -14.754140853881836

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041128139942884445
    2. ' for' → logprob: -3.791128158569336
    3. '       ' → logprob: -4.041128158569336
    4. 'for' → logprob: -8.916128158569336
    5. ' ' → logprob: -12.666128158569336
    6. ' to' → logprob: -13.166128158569336
    7. ' j' → logprob: -13.416128158569336
    8. '	for' → logprob: -13.666128158569336
    9. '<|end|>' → logprob: -13.916128158569336
    10. ' in' → logprob: -14.166128158569336

Token 186: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38703280687332153
    2. 'for' (adapté à ' for') → logprob: -1.1370327472686768
    3. '   ' → logprob: -8.762032508850098
    4. '	for' → logprob: -12.387032508850098
    5. ' range' → logprob: -14.512032508850098
    6. 'range' → logprob: -14.887032508850098
    7. ' ' → logprob: -15.887032508850098
    8. '       ' → logprob: -17.387033462524414
    9. '    ' → logprob: -18.137033462524414
    10. '  ' → logprob: -18.387033462524414

Token 187: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3132624924182892
    2. ' j' → logprob: -1.3132624626159668
    3. '	j' → logprob: -15.688262939453125
    4. '   ' → logprob: -15.938262939453125
    5. '_j' → logprob: -16.188262939453125
    6. '$j' → logprob: -16.188262939453125
    7. '<|end|>' → logprob: -16.313262939453125
    8. ' ' → logprob: -16.813262939453125
    9. ' range' → logprob: -16.938262939453125
    10. 'range' → logprob: -17.313262939453125

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012516953982412815
    2. 'in' → logprob: -4.387516975402832
    3. ' ' → logprob: -12.387516975402832
    4. '   ' → logprob: -13.262516975402832
    5. '	in' → logprob: -14.262516975402832
    6. 'import' → logprob: -15.262516975402832
    7. '    ' → logprob: -16.012516021728516
    8. '  ' → logprob: -16.512516021728516
    9. ' i' → logprob: -17.012516021728516
    10. 'In' → logprob: -17.512516021728516

Token 189: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759873986244202
    2. 'range' → logprob: -0.8259873986244202
    3. '(range' → logprob: -9.950987815856934
    4. '	range' → logprob: -16.325986862182617
    5. ' ' → logprob: -16.575986862182617
    6. 'n' → logprob: -17.575986862182617
    7. '   ' → logprob: -17.950986862182617
    8. ' xrange' → logprob: -18.200986862182617
    9. '(n' → logprob: -18.325986862182617
    10. '_range' → logprob: -18.450986862182617

Token 190: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0017906129360198975
    2. ' (' → logprob: -6.376790523529053
    3. '(range' → logprob: -9.751791000366211
    4. 'range' → logprob: -11.251791000366211
    5. ' range' → logprob: -11.501791000366211
    6. '(' → logprob: -11.876791000366211
    7. 'n' → logprob: -16.75179100036621
    8. '(i' → logprob: -17.00179100036621
    9. '   ' → logprob: -17.50179100036621
    10. ' ' → logprob: -17.75179100036621

Token 191: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35794341564178467
    2. '):' → logprob: -1.2329434156417847
    3. ')' → logprob: -6.107943534851074
    4. '   ' → logprob: -6.732943534851074
    5. ' ):
' → logprob: -6.857943534851074
    6. '+' → logprob: -6.982943534851074
    7. ' ):' → logprob: -6.982943534851074
    8. ')]' → logprob: -7.107943534851074
    9. '1' → logprob: -7.482943534851074
    10. 'if' → logprob: -8.232943534851074

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01354228612035513
    2. ' if' → logprob: -4.388542175292969
    3. '       ' → logprob: -7.763542175292969
    4. '               ' → logprob: -9.013542175292969
    5. '<|end|>' → logprob: -9.263542175292969
    6. 'if' → logprob: -9.638542175292969
    7. '        ' → logprob: -9.763542175292969
    8. ':' → logprob: -9.763542175292969
    9. '            ' → logprob: -9.888542175292969
    10. ':
' → logprob: -10.388542175292969

Token 193: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.011278531514108181
    2. 'if' (adapté à ' if') → logprob: -4.7612786293029785
    3. ' ol' → logprob: -6.5112786293029785
    4. '           ' → logprob: -7.2612786293029785
    5. '               ' → logprob: -8.01127815246582
    6. 'ol' → logprob: -9.26127815246582
    7. '            ' → logprob: -10.76127815246582
    8. '       ' → logprob: -11.88627815246582
    9. '   ' → logprob: -12.38627815246582
    10. ' continue' → logprob: -13.13627815246582

Token 194: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4740796387195587
    2. ' i' → logprob: -0.9740796089172363
    3. '	i' → logprob: -13.099080085754395
    4. '   ' → logprob: -15.224080085754395
    5. '           ' → logprob: -15.724080085754395
    6. ' ' → logprob: -16.349079132080078
    7. '    ' → logprob: -16.849079132080078
    8. 'j' → logprob: -17.599079132080078
    9. ' ' → logprob: -17.849079132080078
    10. 'I' → logprob: -19.599079132080078

Token 195: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.08897729963064194
    2. '!=' → logprob: -2.463977336883545
    3. ']!=' → logprob: -11.338976860046387
    4. '()!=' → logprob: -11.713976860046387
    5. ')!=' → logprob: -12.088976860046387
    6. '   ' → logprob: -12.338976860046387
    7. '<|end|>' → logprob: -12.963976860046387
    8. ' ' → logprob: -13.213976860046387
    9. ' ' → logprob: -14.213976860046387
    10. '	' → logprob: -14.463976860046387

Token 196: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024758970830589533
    2. ' j' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.00247573852539
    4. '	j' → logprob: -16.37747573852539
    5. ' ' → logprob: -17.12747573852539
    6. '           ' → logprob: -17.75247573852539
    7. '    ' → logprob: -19.25247573852539
    8. '       ' → logprob: -19.62747573852539
    9. '  ' → logprob: -19.62747573852539
    10. '     ' → logprob: -21.00247573852539

Token 197: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5292919278144836
    2. ':' → logprob: -0.9042919278144836
    3. '):
' → logprob: -5.779292106628418
    4. '               ' → logprob: -6.029292106628418
    5. '           ' → logprob: -7.904292106628418
    6. ' and' → logprob: -9.404292106628418
    7. ']:
' → logprob: -9.529292106628418
    8. '):' → logprob: -10.154292106628418
    9. ':

' → logprob: -10.654292106628418
    10. '       ' → logprob: -11.529292106628418

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02118915505707264
    2. ' ol' → logprob: -4.271189212799072
    3. 'ol' → logprob: -5.021189212799072
    4. '           ' → logprob: -8.021188735961914
    5. '       ' → logprob: -11.396188735961914
    6. '                   ' → logprob: -11.771188735961914
    7. '              ' → logprob: -11.771188735961914
    8. '                       ' → logprob: -12.146188735961914
    9. ':' → logprob: -12.271188735961914
    10. '   ' → logprob: -12.396188735961914

Token 199: ' ol' (ID: 3465)
  Prédit: ' ol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ol' → logprob: -0.3183962404727936
    2. 'ol' (adapté à ' ol') → logprob: -1.3183962106704712
    3. '               ' → logprob: -5.318396091461182
    4. '           ' → logprob: -9.06839656829834
    5. '                   ' → logprob: -10.31839656829834
    6. 'olf' → logprob: -10.69339656829834
    7. '   ' → logprob: -10.94339656829834
    8. '.ol' → logprob: -12.06839656829834
    9. '       ' → logprob: -12.31839656829834
    10. '                       ' → logprob: -12.44339656829834

Token 200: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.1756367712223437e-05
    2. '[i' → logprob: -11.625011444091797
    3. 'a' → logprob: -14.125011444091797
    4. 'p' → logprob: -15.000011444091797
    5. '[' → logprob: -15.125011444091797
    6. 'ап' → logprob: -15.250011444091797
    7. '_ap' → logprob: -15.250011444091797
    8. '	ap' → logprob: -15.250011444091797
    9. '_' → logprob: -16.000011444091797
    10. '   ' → logprob: -16.125011444091797

Token 201: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.580929347255733e-05
    2. ' [' → logprob: -11.125016212463379
    3. '[' → logprob: -15.125016212463379
    4. '][' → logprob: -15.125016212463379
    5. '[j' → logprob: -15.625016212463379
    6. '\[' → logprob: -16.250015258789062
    7. ')[' → logprob: -16.375015258789062
    8. '[I' → logprob: -17.000015258789062
    9. '[o' → logprob: -17.625015258789062
    10. '```' → logprob: -17.750015258789062

Token 202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003307350678369403
    2. '[i' → logprob: -5.753307342529297
    3. ']' → logprob: -9.753307342529297
    4. ' ][' → logprob: -9.753307342529297
    5. ']][' → logprob: -12.378307342529297
    6. '[j' → logprob: -13.128307342529297
    7. '[' → logprob: -13.378307342529297
    8. '   ' → logprob: -13.503307342529297
    9. ')][' → logprob: -13.628307342529297
    10. '"][' → logprob: -14.628307342529297

Token 203: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. ' j' → logprob: -14.750000953674316
    3. '[j' → logprob: -16.875
    4. ']' → logprob: -17.375
    5. '   ' → logprob: -17.5
    6. '
' → logprob: -18.0
    7. '][' → logprob: -18.75
    8. '	j' → logprob: -19.0
    9. ' ' → logprob: -19.625
    10. '       ' → logprob: -19.75

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015658074989914894
    2. ' ]' → logprob: -6.751565933227539
    3. ']=' → logprob: -8.501565933227539
    4. '=' → logprob: -8.751565933227539
    5. ' =' → logprob: -10.376565933227539
    6. ')' → logprob: -12.751565933227539
    7. ' )' → logprob: -17.00156593322754
    8. '   ' → logprob: -17.50156593322754
    9. ']+=' → logprob: -18.00156593322754
    10. ')=' → logprob: -18.12656593322754

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=

' → logprob: -18.186967849731445
    4. ']' → logprob: -18.561967849731445
    5. ']=' → logprob: -19.186967849731445
    6. '=int' → logprob: -19.436967849731445
    7. ')' → logprob: -19.811967849731445
    8. ')=' → logprob: -20.061967849731445
    9. '=
' → logprob: -20.186967849731445
    10. '＝' → logprob: -20.686967849731445

Token 206: ' overlap' (ID: 56631)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.011047814972698689
    2. ' overlap' → logprob: -4.511047840118408
    3. ' over' → logprob: -17.01104736328125
    4. '(over' → logprob: -17.26104736328125
    5. '   ' → logprob: -18.76104736328125
    6. ' ' → logprob: -19.63604736328125
    7. 'Overlap' → logprob: -20.26104736328125
    8. '_overlap' → logprob: -21.13604736328125
    9. '  ' → logprob: -21.26104736328125
    10. '.over' → logprob: -21.38604736328125

Token 207: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006726737599819899
    2. '(' → logprob: -5.0067267417907715
    3. '(a' → logprob: -11.631726264953613
    4. '(city' → logprob: -14.381726264953613
    5. ' (' → logprob: -14.631726264953613
    6. 'cities' → logprob: -14.631726264953613
    7. '(
' → logprob: -15.006726264953613
    8. '(C' → logprob: -15.631726264953613
    9. '(s' → logprob: -15.756726264953613
    10. '(ci' → logprob: -16.25672721862793

Token 208: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -2.558399319241289e-05
    2. 'cities' → logprob: -10.875025749206543
    3. 'ites' → logprob: -13.125025749206543
    4. 'ties' → logprob: -13.250025749206543
    5. 'i' → logprob: -14.000025749206543
    6. '[i' → logprob: -14.750025749206543
    7. 'ITIES' → logprob: -14.875025749206543
    8. 'ity' → logprob: -14.875025749206543
    9. 'it' → logprob: -15.250025749206543
    10. '[' → logprob: -15.500025749206543

Token 209: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001227276516146958
    2. '[j' → logprob: -9.125123023986816
    3. '[' → logprob: -11.250123023986816
    4. ' [' → logprob: -15.375123023986816
    5. '[
' → logprob: -15.750123023986816
    6. '```' → logprob: -16.1251220703125
    7. 'i' → logprob: -16.7501220703125
    8. ')[' → logprob: -17.6251220703125
    9. '[I' → logprob: -17.8751220703125
    10. '][' → logprob: -18.1251220703125

Token 210: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.171045184135437
    2. '[j' → logprob: -1.921045184135437
    3. '],' → logprob: -4.796045303344727
    4. ',j' → logprob: -6.671045303344727
    5. ' ,' → logprob: -6.921045303344727
    6. '],[' → logprob: -8.921045303344727
    7. '[' → logprob: -9.921045303344727
    8. '][' → logprob: -10.046045303344727
    9. ']' → logprob: -12.296045303344727
    10. '[],' → logprob: -12.546045303344727

Token 211: ' cities' (ID: 15636)
  Prédit: 'cities'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cities' → logprob: -0.018156733363866806
    2. ' cities' → logprob: -4.0181565284729
    3. 'c' → logprob: -12.643157005310059
    4. 'city' → logprob: -13.768157005310059
    5. 'cit' → logprob: -13.893157005310059
    6. ')' → logprob: -14.768157005310059
    7. '	c' → logprob: -15.018157005310059
    8. '   ' → logprob: -15.393157005310059
    9. 'Cities' → logprob: -15.893157005310059
    10. ' cidades' → logprob: -16.268156051635742

Token 212: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.875
    3. 'j' → logprob: -16.25
    4. '[i' → logprob: -16.5
    5. ' [' → logprob: -16.75
    6. '[
' → logprob: -17.0
    7. '```' → logprob: -18.5
    8. '
' → logprob: -19.0
    9. '[js' → logprob: -20.25
    10. '[[' → logprob: -20.875

Token 213: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3080716346157715e-05
    2. '])' → logprob: -10.875022888183594
    3. '))' → logprob: -13.125022888183594
    4. ' )' → logprob: -14.000022888183594
    5. ')
' → logprob: -14.125022888183594
    6. '})' → logprob: -16.250022888183594
    7. ')])' → logprob: -16.500022888183594
    8. ')]' → logprob: -16.750022888183594
    9. ')`' → logprob: -16.750022888183594
    10. ']' → logprob: -16.750022888183594

Token 214: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024105500429868698
    2. 'from' → logprob: -5.024105548858643
    3. '   ' → logprob: -5.399105548858643
    4. 'dist' → logprob: -5.524105548858643
    5. 'import' → logprob: -5.899105548858643
    6. 'parent' → logprob: -6.399105548858643
    7. 'path' → logprob: -6.899105548858643
    8. 'used' → logprob: -6.899105548858643
    9. 'visited' → logprob: -6.899105548858643
    10. 'perm' → logprob: -7.649105548858643

Token 215: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0009771942859515548
    2. 'from' → logprob: -7.250977039337158
    3. 'import' → logprob: -9.000977516174316
    4. 'full' → logprob: -9.500977516174316
    5. 'used' → logprob: -10.875977516174316
    6. 'dist' → logprob: -11.000977516174316
    7. '   ' → logprob: -11.875977516174316
    8. 'best' → logprob: -11.875977516174316
    9. 'DP' → logprob: -12.625977516174316
    10. 'memo' → logprob: -12.625977516174316

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007124318508431315
    2. '=' → logprob: -7.2507123947143555
    3. '   ' → logprob: -14.000712394714355
    4. ']' → logprob: -14.625712394714355
    5. ' ' → logprob: -14.875712394714355
    6. '[' → logprob: -15.500712394714355
    7. '=[' → logprob: -15.875712394714355
    8. '  ' → logprob: -16.500713348388672
    9. '```' → logprob: -16.625713348388672
    10. ')' → logprob: -16.625713348388672

Token 217: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.025100205093622208
    2. '[' → logprob: -4.275100231170654
    3. ' [[' → logprob: -4.525100231170654
    4. ' [' → logprob: -10.525099754333496
    5. '{}' → logprob: -11.150099754333496
    6. '{' → logprob: -13.775099754333496
    7. '[-' → logprob: -14.775099754333496
    8. '[(' → logprob: -14.900099754333496
    9. '[{' → logprob: -15.275099754333496
    10. '[['' → logprob: -16.150100708007812

Token 218: 'float' (ID: 7829)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.32417550683021545
    2. '0' → logprob: -1.324175477027893
    3. 'float' → logprob: -4.8241753578186035
    4. 'False' → logprob: -6.1991753578186035
    5. '-f' → logprob: -7.9491753578186035
    6. '(-' → logprob: -8.449175834655762
    7. '(' → logprob: -9.074175834655762
    8. '(float' → logprob: -10.449175834655762
    9. ' -' → logprob: -10.824175834655762
    10. 'None' → logprob: -10.949175834655762

Token 219: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003364158037584275
    2. ''in' → logprob: -8.125336647033691
    3. ''' → logprob: -10.375336647033691
    4. '('-' → logprob: -12.000336647033691
    5. '("' → logprob: -13.875336647033691
    6. '(in' → logprob: -14.250336647033691
    7. 'inf' → logprob: -14.875336647033691
    8. '(' → logprob: -15.000336647033691
    9. ''s' → logprob: -15.750336647033691
    10. '   ' → logprob: -16.500335693359375

Token 220: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -8.399378566537052e-05
    2. '-inf' → logprob: -9.875083923339844
    3. ''' → logprob: -10.625083923339844
    4. ''in' → logprob: -12.000083923339844
    5. 'in' → logprob: -13.875083923339844
    6. ''-' → logprob: -14.375083923339844
    7. '-' → logprob: -16.125083923339844
    8. ''s' → logprob: -16.250083923339844
    9. '('' → logprob: -16.625083923339844
    10. ' inf' → logprob: -17.250083923339844

Token 221: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.020845375955104828
    2. ')' → logprob: -3.895845413208008
    3. ' )' → logprob: -8.395845413208008
    4. ']' → logprob: -9.645845413208008
    5. '')]' → logprob: -12.395845413208008
    6. ')][' → logprob: -12.395845413208008
    7. ')
' → logprob: -14.020845413208008
    8. ' ]' → logprob: -14.020845413208008
    9. ')]
' → logprob: -14.270845413208008
    10. '   ' → logprob: -14.520845413208008

Token 222: ' *' (ID: 425)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.5302571058273315
    2. ']' → logprob: -1.2802571058273315
    3. ']*' → logprob: -2.030257225036621
    4. 'for' → logprob: -6.280257225036621
    5. ' for' → logprob: -8.030257225036621
    6. '   ' → logprob: -9.780257225036621
    7. '*(' → logprob: -11.655257225036621
    8. '][' → logprob: -12.155257225036621
    9. ']+' → logprob: -12.655257225036621
    10. ' ]' → logprob: -12.780257225036621

Token 223: ' n' (ID: 297)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009407185949385166
    2. '(n' → logprob: -4.759407043457031
    3. 'n' → logprob: -7.259407043457031
    4. ' (' → logprob: -9.384407043457031
    5. '   ' → logprob: -12.384407043457031
    6. '
' → logprob: -15.509407043457031
    7. '1' → logprob: -15.759407043457031
    8. ' n' → logprob: -16.25940704345703
    9. ' ' → logprob: -17.25940704345703
    10. '(len' → logprob: -17.88440704345703

Token 224: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06322561204433441
    2. 'for' → logprob: -2.813225507736206
    3. ']' → logprob: -7.063225746154785
    4. '   ' → logprob: -7.938225746154785
    5. ' ]' → logprob: -10.813225746154785
    6. '	for' → logprob: -11.688225746154785
    7. '][' → logprob: -11.938225746154785
    8. ' ' → logprob: -12.813225746154785
    9. '    ' → logprob: -13.188225746154785
    10. '       ' → logprob: -13.438225746154785

Token 225: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.041057657450437546
    2. '_' → logprob: -3.541057586669922
    3. 'range' → logprob: -4.791057586669922
    4. ' in' → logprob: -6.416057586669922
    5. ' _' → logprob: -6.791057586669922
    6. '_range' → logprob: -8.916057586669922
    7. 'in' → logprob: -10.541057586669922
    8. '(range' → logprob: -11.041057586669922
    9. '_in' → logprob: -13.041057586669922
    10. ' i' → logprob: -14.541057586669922

Token 226: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10143595188856125
    2. ' range' → logprob: -2.351435899734497
    3. ' in' → logprob: -6.851436138153076
    4. 'in' → logprob: -8.726435661315918
    5. '(range' → logprob: -12.226435661315918
    6. ' ' → logprob: -13.351435661315918
    7. '	range' → logprob: -14.351435661315918
    8. '_' → logprob: -14.351435661315918
    9. '_range' → logprob: -15.101435661315918
    10. ' xrange' → logprob: -15.601435661315918

Token 227: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008615872822701931
    2. ' range' → logprob: -4.758615970611572
    3. '(range' → logprob: -13.633615493774414
    4. '   ' → logprob: -16.883615493774414
    5. ' ' → logprob: -17.258615493774414
    6. '	range' → logprob: -17.758615493774414
    7. '[' → logprob: -18.633615493774414
    8. '
' → logprob: -18.883615493774414
    9. ' xrange' → logprob: -19.133615493774414
    10. '```' → logprob: -19.633615493774414

Token 228: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5285006165504456
    2. '(range' → logprob: -1.6535005569458008
    3. '(n' → logprob: -2.153500556945801
    4. ' range' → logprob: -2.278500556945801
    5. 'n' → logprob: -7.653500556945801
    6. '(' → logprob: -9.4035005569458
    7. ' (' → logprob: -10.6535005569458
    8. ' n' → logprob: -11.7785005569458
    9. '	range' → logprob: -12.0285005569458
    10. '   ' → logprob: -12.1535005569458

Token 229: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12948311865329742
    2. 'range' → logprob: -2.129483222961426
    3. ' range' → logprob: -6.504483222961426
    4. ' n' → logprob: -7.504483222961426
    5. '(n' → logprob: -7.754483222961426
    6. '(range' → logprob: -10.504483222961426
    7. '   ' → logprob: -10.754483222961426
    8. '2' → logprob: -12.004483222961426
    9. ')' → logprob: -12.254483222961426
    10. '
' → logprob: -12.754483222961426

Token 230: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.10020678490400314
    2. ' <<' → logprob: -2.3502068519592285
    3. ')<<' → logprob: -17.22520637512207
    4. '<<(' → logprob: -17.47520637512207
    5. ']<<' → logprob: -17.72520637512207
    6. ' ' → logprob: -17.97520637512207
    7. ' <<
' → logprob: -17.97520637512207
    8. '<<<' → logprob: -18.10020637512207
    9. '()<<' → logprob: -18.10020637512207
    10. '<<"' → logprob: -18.85020637512207

Token 231: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.3822154111694545e-05
    2. ' n' → logprob: -11.125043869018555
    3. 'i' → logprob: -11.250043869018555
    4. 'j' → logprob: -11.750043869018555
    5. '(n' → logprob: -12.500043869018555
    6. '   ' → logprob: -13.625043869018555
    7. '_n' → logprob: -14.000043869018555
    8. '0' → logprob: -14.000043869018555
    9. ')n' → logprob: -15.250043869018555
    10. '	n' → logprob: -15.500043869018555

Token 232: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0035106297582387924
    2. ')' → logprob: -6.253510475158691
    3. ')]
' → logprob: -6.503510475158691
    4. ']' → logprob: -10.253510475158691
    5. ')][' → logprob: -10.503510475158691
    6. ' )' → logprob: -11.878510475158691
    7. '   ' → logprob: -12.378510475158691
    8. ')]

' → logprob: -12.753510475158691
    9. ')]
' → logprob: -13.253510475158691
    10. ')])' → logprob: -14.128510475158691

Token 233: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8164876103401184
    2. '   ' → logprob: -0.9414876103401184
    3. ' for' → logprob: -1.9414875507354736
    4. 'dp' → logprob: -3.8164875507354736
    5. ']' → logprob: -6.941487789154053
    6. ' dp' → logprob: -7.191487789154053
    7. ')' → logprob: -8.441487312316895
    8. '[' → logprob: -9.191487312316895
    9. '][' → logprob: -9.566487312316895
    10. '    
' → logprob: -9.691487312316895

Token 234: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014958166517317295
    2. ' for' → logprob: -4.264958381652832
    3. '   ' → logprob: -7.139958381652832
    4. 'import' → logprob: -14.889958381652832
    5. '
' → logprob: -15.389958381652832
    6. '	for' → logprob: -15.889958381652832
    7. '    
' → logprob: -16.014957427978516
    8. '0' → logprob: -16.014957427978516
    9. 'from' → logprob: -16.264957427978516
    10. ' ' → logprob: -16.264957427978516

Token 235: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019287518225610256
    2. ' i' → logprob: -6.251928806304932
    3. '	i' → logprob: -16.501928329467773
    4. ' ' → logprob: -16.876928329467773
    5. '(i' → logprob: -17.126928329467773
    6. '[i' → logprob: -17.876928329467773
    7. '   ' → logprob: -18.751928329467773
    8. '```' → logprob: -19.001928329467773
    9. '{i' → logprob: -19.001928329467773
    10. 'mask' → logprob: -19.126928329467773

Token 236: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017474116757512093
    2. 'in' → logprob: -6.3767476081848145
    3. ' ' → logprob: -10.126747131347656
    4. '[' → logprob: -12.876747131347656
    5. '  ' → logprob: -13.751747131347656
    6. '   ' → logprob: -14.626747131347656
    7. ' i' → logprob: -15.251747131347656
    8. ',' → logprob: -15.376747131347656
    9. 's' → logprob: -15.626747131347656
    10. ' [' → logprob: -16.501747131347656

Token 237: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '(range' → logprob: -18.250553131103516
    4. '	range' → logprob: -19.125553131103516
    5. '   ' → logprob: -21.750553131103516
    6. '```' → logprob: -22.000553131103516
    7. '
' → logprob: -22.375553131103516
    8. ' ' → logprob: -23.000553131103516
    9. ')' → logprob: -23.000553131103516
    10. '[' → logprob: -23.500553131103516

Token 238: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0011932061752304435
    2. '(' → logprob: -6.876193046569824
    3. 'n' → logprob: -8.751193046569824
    4. ' (' → logprob: -13.376193046569824
    5. ' n' → logprob: -16.00119400024414
    6. '1' → logprob: -16.12619400024414
    7. '(range' → logprob: -16.25119400024414
    8. '   ' → logprob: -16.87619400024414
    9. '((' → logprob: -17.25119400024414
    10. '	n' → logprob: -18.00119400024414

Token 239: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08926354348659515
    2. '):' → logprob: -2.464263439178467
    3. ')' → logprob: -8.839263916015625
    4. '):
' → logprob: -9.339263916015625
    5. ' ):
' → logprob: -9.714263916015625
    6. ' ):' → logprob: -11.089263916015625
    7. '   ' → logprob: -11.589263916015625
    8. '):

' → logprob: -13.464263916015625
    9. ')]' → logprob: -13.839263916015625
    10. ']:
' → logprob: -13.964263916015625

Token 240: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40027153491973877
    2. ' dp' → logprob: -1.1502715349197388
    3. 'dp' → logprob: -4.400271415710449
    4. '       ' → logprob: -7.025271415710449
    5. '	dp' → logprob: -8.90027141571045
    6. '(dp' → logprob: -11.77527141571045
    7. '_dp' → logprob: -13.15027141571045
    8. ' ' → logprob: -14.27527141571045
    9. '    ' → logprob: -14.77527141571045
    10. '  ' → logprob: -15.15027141571045

Token 241: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0007102862582542002
    2. ' dp' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.750710487365723
    4. '	dp' → logprob: -17.875709533691406
    5. '_dp' → logprob: -21.500709533691406
    6. ' ' → logprob: -21.875709533691406
    7. '(dp' → logprob: -22.125709533691406
    8. '  ' → logprob: -23.500709533691406
    9. 'd' → logprob: -23.625709533691406
    10. '       ' → logprob: -23.750709533691406

Token 242: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '[i' → logprob: -12.625006675720215
    3. '][' → logprob: -13.875006675720215
    4. ' [' → logprob: -14.000006675720215
    5. ')[' → logprob: -14.125006675720215
    6. '   ' → logprob: -15.125006675720215
    7. '```' → logprob: -16.0000057220459
    8. '\[' → logprob: -16.3750057220459
    9. '}[' → logprob: -17.3750057220459
    10. '>[' → logprob: -18.2500057220459

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002808202290907502
    2. '(' → logprob: -5.877808094024658
    3. '[' → logprob: -13.502808570861816
    4. '][' → logprob: -14.002808570861816
    5. '0' → logprob: -14.502808570861816
    6. ' ' → logprob: -15.377808570861816
    7. ' (' → logprob: -15.877808570861816
    8. '{' → logprob: -16.0028076171875
    9. '   ' → logprob: -16.5028076171875
    10. ']' → logprob: -17.1278076171875

Token 244: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.018161294981837273
    2. ' <<' → logprob: -4.018161296844482
    3. '][' → logprob: -11.518160820007324
    4. '[i' → logprob: -14.018160820007324
    5. '<<(' → logprob: -15.518160820007324
    6. ']<<' → logprob: -15.643160820007324
    7. '()<<' → logprob: -16.14316177368164
    8. '[' → logprob: -16.26816177368164
    9. '(i' → logprob: -17.64316177368164
    10. '<<<' → logprob: -17.64316177368164

Token 245: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.688212614681106e-05
    2. ' i' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.500017166137695
    4. '	i' → logprob: -18.750017166137695
    5. ' ' → logprob: -19.375017166137695
    6. '(i' → logprob: -19.500017166137695
    7. '[i' → logprob: -19.750017166137695
    8. '```' → logprob: -20.250017166137695
    9. ')i' → logprob: -20.625017166137695
    10. '       ' → logprob: -21.125017166137695

Token 246: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005562512087635696
    2. ']' → logprob: -7.875556468963623
    3. '[i' → logprob: -9.000555992126465
    4. ' ][' → logprob: -9.875555992126465
    5. 'i' → logprob: -14.250555992126465
    6. ']=' → logprob: -14.875555992126465
    7. '(i' → logprob: -16.37555694580078
    8. '   ' → logprob: -16.50055694580078
    9. ' ]' → logprob: -17.00055694580078
    10. ' ' → logprob: -17.37555694580078

Token 247: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.627176768844947e-05
    2. ' i' → logprob: -9.250096321105957
    3. ']' → logprob: -15.875096321105957
    4. '   ' → logprob: -17.00009536743164
    5. ')i' → logprob: -17.75009536743164
    6. '	i' → logprob: -18.87509536743164
    7. '
' → logprob: -19.37509536743164
    8. ''i' → logprob: -19.62509536743164
    9. '[i' → logprob: -19.87509536743164
    10. ' ' → logprob: -19.87509536743164

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001261845463886857
    2. ' ]' → logprob: -9.000125885009766
    3. ']=' → logprob: -12.875125885009766
    4. '=' → logprob: -16.000125885009766
    5. ' =' → logprob: -17.125125885009766
    6. '`]' → logprob: -19.125125885009766
    7. ')' → logprob: -20.750125885009766
    8. '']' → logprob: -21.750125885009766
    9. ']
' → logprob: -21.750125885009766
    10. ' ' → logprob: -21.750125885009766

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410106658935547
    2. '=' → logprob: -0.9741010665893555
    3. '=len' → logprob: -10.724101066589355
    4. '=int' → logprob: -13.974101066589355
    5. '=i' → logprob: -14.349101066589355
    6. '=os' → logprob: -16.474102020263672
    7. ']' → logprob: -16.599102020263672
    8. ' ' → logprob: -16.724102020263672
    9. ']=' → logprob: -16.974102020263672
    10. '=cut' → logprob: -17.224102020263672

Token 250: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.292095299111679e-05
    2. '0' → logprob: -9.750082969665527
    3. ' len' → logprob: -10.625082969665527
    4. '(len' → logprob: -15.750082969665527
    5. '[len' → logprob: -16.25008201599121
    6. '	len' → logprob: -16.87508201599121
    7. '=len' → logprob: -17.25008201599121
    8. '1' → logprob: -18.12508201599121
    9. ',len' → logprob: -18.50008201599121
    10. '<len' → logprob: -18.50008201599121

Token 251: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.320199877838604e-07
    2. 'cities' → logprob: -15.25
    3. '(' → logprob: -15.75
    4. ' (' → logprob: -17.625
    5. ' cities' → logprob: -18.5
    6. '(C' → logprob: -18.625
    7. '(city' → logprob: -18.75
    8. '(s' → logprob: -20.25
    9. '	c' → logprob: -20.375
    10. 'c' → logprob: -20.625

Token 252: 'ities' (ID: 1629)
  Prédit: 'ities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ities' → logprob: -0.020667310804128647
    2. 'cities' → logprob: -3.895667314529419
    3. ' cities' → logprob: -10.02066707611084
    4. 'ites' → logprob: -10.14566707611084
    5. 'ties' → logprob: -10.89566707611084
    6. 's' → logprob: -11.52066707611084
    7. '[' → logprob: -12.89566707611084
    8. ')' → logprob: -13.02066707611084
    9. 'ITIES' → logprob: -13.14566707611084
    10. '   ' → logprob: -13.64566707611084

Token 253: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. '(i' → logprob: -16.25
    4. ')' → logprob: -17.0
    5. 'i' → logprob: -18.875
    6. ')[' → logprob: -19.75
    7. ' [' → logprob: -20.125
    8. '[c' → logprob: -20.5
    9. ')i' → logprob: -21.0
    10. '```' → logprob: -21.25

Token 254: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004788595717400312
    2. '])' → logprob: -5.379788398742676
    3. ')]' → logprob: -9.754788398742676
    4. '())' → logprob: -9.754788398742676
    5. ' )' → logprob: -10.629788398742676
    6. ')])' → logprob: -11.004788398742676
    7. ']' → logprob: -12.504788398742676
    8. '))' → logprob: -13.629788398742676
    9. '）' → logprob: -13.754788398742676
    10. ')
' → logprob: -13.879788398742676

Token 255: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5381206274032593
    2. 'for' → logprob: -0.9131206274032593
    3. '   ' → logprob: -4.288120746612549
    4. ')' → logprob: -7.288120746612549
    5. '<|end|>' → logprob: -8.53812026977539
    6. '
' → logprob: -9.16312026977539
    7. '    
' → logprob: -9.91312026977539
    8. '```' → logprob: -10.28812026977539
    9. ' 
' → logprob: -10.41312026977539
    10. 'mask' → logprob: -11.03812026977539

Token 256: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002229832811281085
    2. ' for' → logprob: -6.252229690551758
    3. '   ' → logprob: -8.127229690551758
    4. 'mask' → logprob: -13.002229690551758
    5. 'from' → logprob: -13.627229690551758
    6. ')' → logprob: -13.627229690551758
    7. '
' → logprob: -14.752229690551758
    8. '    
' → logprob: -15.502229690551758
    9. '(' → logprob: -15.877229690551758
    10. ' ' → logprob: -16.127229690551758

Token 257: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.005283207632601261
    2. ' mask' → logprob: -5.255283355712891
    3. 's' → logprob: -10.38028335571289
    4. 'state' → logprob: -11.75528335571289
    5. 'subset' → logprob: -12.50528335571289
    6. 'm' → logprob: -13.13028335571289
    7. ' s' → logprob: -13.25528335571289
    8. '_mask' → logprob: -13.75528335571289
    9. '(mask' → logprob: -14.00528335571289
    10. 'S' → logprob: -14.88028335571289

Token 258: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012515303678810596
    2. 'in' → logprob: -4.387515068054199
    3. '   ' → logprob: -13.1375150680542
    4. ' ' → logprob: -14.1375150680542
    5. '+' → logprob: -14.8875150680542
    6. 'In' → logprob: -15.0125150680542
    7. '	in' → logprob: -15.0125150680542
    8. '```' → logprob: -15.2625150680542
    9. 'import' → logprob: -15.5125150680542
    10. '1' → logprob: -15.6375150680542

Token 259: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020699352025986
    2. ' range' → logprob: -2.3502070903778076
    3. '(range' → logprob: -15.225207328796387
    4. 'mask' → logprob: -16.72520637512207
    5. '	range' → logprob: -17.85020637512207
    6. '(' → logprob: -18.22520637512207
    7. '   ' → logprob: -18.47520637512207
    8. ' ' → logprob: -18.85020637512207
    9. ' in' → logprob: -19.35020637512207
    10. 'r' → logprob: -19.35020637512207

Token 260: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.630610641877865e-06
    2. '((' → logprob: -12.375006675720215
    3. '1' → logprob: -13.500006675720215
    4. ' (' → logprob: -14.125006675720215
    5. '   ' → logprob: -16.2500057220459
    6. '(n' → logprob: -16.3750057220459
    7. '(len' → logprob: -18.0000057220459
    8. '(
' → logprob: -18.3750057220459
    9. ' ' → logprob: -19.6250057220459
    10. '(mask' → logprob: -19.7500057220459

Token 261: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015024791937321424
    2. '(' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.001502990722656
    4. 'n' → logprob: -17.126502990722656
    5. '   ' → logprob: -17.126502990722656
    6. ' (' → logprob: -17.751502990722656
    7. ')' → logprob: -18.751502990722656
    8. '
' → logprob: -19.376502990722656
    9. '0' → logprob: -20.626502990722656
    10. '(n' → logprob: -21.376502990722656

Token 262: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.008287840522825718
    2. ',' → logprob: -5.0082879066467285
    3. ' <<' → logprob: -6.5082879066467285
    4. ' ,' → logprob: -9.75828742980957
    5. '<<(' → logprob: -11.50828742980957
    6. ')<<' → logprob: -12.63328742980957
    7. '1' → logprob: -13.13328742980957
    8. '(' → logprob: -13.13328742980957
    9. '   ' → logprob: -13.38328742980957
    10. ',n' → logprob: -13.88328742980957

Token 263: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.896309739408025e-07
    2. ' n' → logprob: -14.250000953674316
    3. '   ' → logprob: -18.375
    4. '	n' → logprob: -19.375
    5. ')n' → logprob: -20.25
    6. '_n' → logprob: -21.25
    7. '(n' → logprob: -22.125
    8. '
' → logprob: -22.375
    9. '```' → logprob: -23.0
    10. ',n' → logprob: -23.125

Token 264: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10023320466279984
    2. '):' → logprob: -2.350233316421509
    3. '   ' → logprob: -11.22523307800293
    4. '):
' → logprob: -11.47523307800293
    5. ':' → logprob: -14.22523307800293
    6. ')' → logprob: -14.35023307800293
    7. '       ' → logprob: -14.97523307800293
    8. ',' → logprob: -14.97523307800293
    9. '):

' → logprob: -15.47523307800293
    10. '}:' → logprob: -15.60023307800293

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010682971915230155
    2. '   ' → logprob: -7.376068115234375
    3. ' for' → logprob: -7.751068115234375
    4. 'for' → logprob: -11.501068115234375
    5. '	   ' → logprob: -15.001068115234375
    6. ',' → logprob: -15.876068115234375
    7. '```' → logprob: -15.876068115234375
    8. '           ' → logprob: -16.001068115234375
    9. '    ' → logprob: -16.126068115234375
    10. '	for' → logprob: -16.626068115234375

Token 266: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5067790746688843
    2. '   ' → logprob: -1.2567790746688843
    3. 'for' (adapté à ' for') → logprob: -2.756779193878174
    4. '       ' → logprob: -3.006779193878174
    5. ' ' → logprob: -10.506778717041016
    6. '  ' → logprob: -11.006778717041016
    7. '	for' → logprob: -12.756778717041016
    8. '    ' → logprob: -12.756778717041016
    9. '           ' → logprob: -13.881778717041016
    10. '     ' → logprob: -14.881778717041016

Token 267: ' last' (ID: 2174)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009081072174012661
    2. 'i' → logprob: -5.63408088684082
    3. 'last' → logprob: -5.88408088684082
    4. ' j' → logprob: -6.50908088684082
    5. 'u' → logprob: -6.75908088684082
    6. 'curr' → logprob: -11.75908088684082
    7. ' last' → logprob: -12.00908088684082
    8. 'next' → logprob: -12.00908088684082
    9. ' i' → logprob: -12.13408088684082
    10. 'prev' → logprob: -13.25908088684082

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00014072739577386528
    2. 'in' → logprob: -8.875141143798828
    3. ' ' → logprob: -14.250141143798828
    4. '```' → logprob: -16.250141143798828
    5. '   ' → logprob: -17.000141143798828
    6. '_in' → logprob: -17.250141143798828
    7. '	in' → logprob: -17.625141143798828
    8. 'i' → logprob: -17.750141143798828
    9. '  ' → logprob: -18.000141143798828
    10. ' i' → logprob: -18.250141143798828

Token 269: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.474078506231308
    2. 'range' → logprob: -0.9740785360336304
    3. '(range' → logprob: -13.474078178405762
    4. '	range' → logprob: -16.849079132080078
    5. ' ' → logprob: -16.974079132080078
    6. '   ' → logprob: -17.724079132080078
    7. 'n' → logprob: -17.974079132080078
    8. ' in' → logprob: -19.474079132080078
    9. ')' → logprob: -20.099079132080078
    10. 'in' → logprob: -20.224079132080078

Token 270: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005236360710114241
    2. 'n' → logprob: -5.2552361488342285
    3. '(' → logprob: -13.130236625671387
    4. '   ' → logprob: -15.130236625671387
    5. ' n' → logprob: -16.00523567199707
    6. '	n' → logprob: -16.38023567199707
    7. '(
' → logprob: -17.38023567199707
    8. ' (' → logprob: -18.25523567199707
    9. '<n' → logprob: -18.38023567199707
    10. ')n' → logprob: -18.88023567199707

Token 271: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07893627882003784
    2. '):' → logprob: -2.5789363384246826
    3. '):
' → logprob: -10.453936576843262
    4. ' ):
' → logprob: -11.578936576843262
    5. '):

' → logprob: -12.828936576843262
    6. '       ' → logprob: -13.078936576843262
    7. '   ' → logprob: -13.703936576843262
    8. ')' → logprob: -13.953936576843262
    9. ' ):' → logprob: -13.953936576843262
    10. '           ' → logprob: -15.328936576843262

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.011373155459296e-05
    2. ':' → logprob: -11.750030517578125
    3. ' if' → logprob: -12.125030517578125
    4. '            ' → logprob: -12.625030517578125
    5. '          ' → logprob: -12.750030517578125
    6. '               ' → logprob: -13.375030517578125
    7. '	       ' → logprob: -13.375030517578125
    8. '<|end|>' → logprob: -13.500030517578125
    9. ':
' → logprob: -13.625030517578125
    10. ' ' → logprob: -14.000030517578125

Token 273: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010820250026881695
    2. ' if' → logprob: -4.635820388793945
    3. 'if' (adapté à ' if') → logprob: -6.885820388793945
    4. '           ' → logprob: -10.260820388793945
    5. '                   ' → logprob: -14.135820388793945
    6. '              ' → logprob: -14.135820388793945
    7. '   ' → logprob: -14.135820388793945
    8. '			' → logprob: -14.385820388793945
    9. ' ' → logprob: -14.385820388793945
    10. '             ' → logprob: -14.635820388793945

Token 274: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.24066905677318573
    2. '(dp' → logprob: -2.490669012069702
    3. ' dp' → logprob: -2.865669012069702
    4. '(mask' → logprob: -2.990669012069702
    5. ' (' → logprob: -4.240669250488281
    6. 'mask' → logprob: -5.115669250488281
    7. ' not' → logprob: -6.240669250488281
    8. ' mask' → logprob: -6.865669250488281
    9. 'not' → logprob: -8.115669250488281
    10. '   ' → logprob: -8.990669250488281

Token 275: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -14.75
    3. 'mask' → logprob: -19.125
    4. '   ' → logprob: -19.25
    5. '[m' → logprob: -19.5
    6. '][' → logprob: -20.0
    7. '(mask' → logprob: -20.5
    8. '[
' → logprob: -20.625
    9. '[mem' → logprob: -20.625
    10. ')[' → logprob: -20.75

Token 276: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -3.054500666621607e-06
    2. ' mask' → logprob: -12.75000286102295
    3. '[' → logprob: -18.125003814697266
    4. '(mask' → logprob: -19.125003814697266
    5. '_mask' → logprob: -19.375003814697266
    6. '	mask' → logprob: -19.875003814697266
    7. '   ' → logprob: -21.000003814697266
    8. ' ' → logprob: -21.875003814697266
    9. 'masked' → logprob: -22.000003814697266
    10. '
' → logprob: -23.375003814697266

Token 277: '][' (ID: 2696)
  Prédit: '[last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.0003217574267182499
    2. '][' → logprob: -8.375321388244629
    3. '[' → logprob: -9.375321388244629
    4. '[next' → logprob: -12.375321388244629
    5. 'last' → logprob: -14.375321388244629
    6. ' [' → logprob: -14.375321388244629
    7. '[first' → logprob: -14.500321388244629
    8. ' ][' → logprob: -16.500322341918945
    9. '[now' → logprob: -16.625322341918945
    10. '   ' → logprob: -17.500322341918945

Token 278: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0206720617134124e-05
    2. ' last' → logprob: -11.50001049041748
    3. '
' → logprob: -19.000009536743164
    4. '[last' → logprob: -19.375009536743164
    5. '(last' → logprob: -19.500009536743164
    6. '	last' → logprob: -19.875009536743164
    7. '_last' → logprob: -19.875009536743164
    8. '   ' → logprob: -20.750009536743164
    9. 'lasti' → logprob: -21.625009536743164
    10. '-last' → logprob: -22.000009536743164

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49385327100753784
    2. '<' → logprob: -1.6188533306121826
    3. ' <' → logprob: -2.4938533306121826
    4. ' !=' → logprob: -2.9938533306121826
    5. '!=' → logprob: -3.3688533306121826
    6. ']!=' → logprob: -4.2438530921936035
    7. ' ]' → logprob: -5.4938530921936035
    8. ']<' → logprob: -5.8688530921936035
    9. '==' → logprob: -6.7438530921936035
    10. ' ==' → logprob: -7.2438530921936035

Token 280: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.07061770558357239
    2. '!=' → logprob: -3.07061767578125
    3. ' <' → logprob: -4.44561767578125
    4. ' !=' → logprob: -4.82061767578125
    5. '==' → logprob: -6.57061767578125
    6. '<float' → logprob: -8.32061767578125
    7. ' ==' → logprob: -8.44561767578125
    8. ' ' → logprob: -9.69561767578125
    9. '<int' → logprob: -10.32061767578125
    10. '```' → logprob: -11.57061767578125

Token 281: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.018155913800001144
    2. ' float' → logprob: -4.018156051635742
    3. '	float' → logprob: -12.268156051635742
    4. '   ' → logprob: -14.018156051635742
    5. '0' → logprob: -15.518156051635742
    6. ' ' → logprob: -16.143156051635742
    7. '=float' → logprob: -16.393156051635742
    8. '(float' → logprob: -16.768156051635742
    9. '  ' → logprob: -16.768156051635742
    10. '<float' → logprob: -16.893156051635742

Token 282: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.225939872208983e-05
    2. ''in' → logprob: -10.375032424926758
    3. '(' → logprob: -14.625032424926758
    4. '("' → logprob: -15.750032424926758
    5. ''' → logprob: -15.875032424926758
    6. '   ' → logprob: -15.875032424926758
    7. 'inf' → logprob: -16.625032424926758
    8. ''s' → logprob: -17.250032424926758
    9. '(in' → logprob: -17.875032424926758
    10. ' ('' → logprob: -18.000032424926758

Token 283: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.0280383548888494e-06
    2. ' inf' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.375000953674316
    4. ''' → logprob: -16.250001907348633
    5. ')' → logprob: -16.250001907348633
    6. ' ' → logprob: -16.750001907348633
    7. ''in' → logprob: -17.375001907348633
    8. '  ' → logprob: -17.500001907348633
    9. 'info' → logprob: -17.875001907348633
    10. '1' → logprob: -18.125001907348633

Token 284: ''):
' (ID: 26539)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18655575811862946
    2. ')' → logprob: -1.9365557432174683
    3. '):
' → logprob: -4.061555862426758
    4. '               ' → logprob: -5.561555862426758
    5. ''):' → logprob: -5.686555862426758
    6. ''):
' → logprob: -7.686555862426758
    7. ':' → logprob: -7.811555862426758
    8. '           ' → logprob: -8.561555862426758
    9. '                   ' → logprob: -9.061555862426758
    10. '')' → logprob: -9.186555862426758

Token 285: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005205047782510519
    2. ' continue' → logprob: -7.750520706176758
    3. 'continue' → logprob: -10.000520706176758
    4. ':
' → logprob: -11.125520706176758
    5. ':' → logprob: -11.250520706176758
    6. '           ' → logprob: -11.375520706176758
    7. '                   ' → logprob: -13.500520706176758
    8. '			' → logprob: -14.125520706176758
    9. '                       ' → logprob: -15.000520706176758
    10. '              ' → logprob: -15.125520706176758

Token 286: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6976339817047119
    2. ' continue' → logprob: -0.9476339817047119
    3. 'continue' (adapté à ' continue') → logprob: -2.197633981704712
    4. '                   ' → logprob: -5.697633743286133
    5. '	continue' → logprob: -9.697633743286133
    6. '           ' → logprob: -10.197633743286133
    7. '                       ' → logprob: -10.447633743286133
    8. '_continue' → logprob: -11.572633743286133
    9. '   ' → logprob: -12.072633743286133
    10. '                               ' → logprob: -12.322633743286133

Token 287: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006584656075574458
    2. '            
' → logprob: -8.00065803527832
    3. '               ' → logprob: -8.37565803527832
    4. ' 
' → logprob: -10.62565803527832
    5. '
' → logprob: -10.75065803527832
    6. '       ' → logprob: -11.50065803527832
    7. ' for' → logprob: -11.75065803527832
    8. '    
' → logprob: -11.87565803527832
    9. '                
' → logprob: -12.00065803527832
    10. '            ' → logprob: -12.75065803527832

Token 288: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009390931227244437
    2. '               ' → logprob: -7.125938892364502
    3. '            
' → logprob: -9.75093936920166
    4. ' for' → logprob: -10.62593936920166
    5. '
' → logprob: -11.00093936920166
    6. '       ' → logprob: -11.87593936920166
    7. '                   ' → logprob: -12.00093936920166
    8. '    
' → logprob: -12.25093936920166
    9. ' 
' → logprob: -12.37593936920166
    10. '                
' → logprob: -12.62593936920166

Token 289: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016399504384025931
    2. ' for' → logprob: -6.7516398429870605
    3. 'for' (adapté à ' for') → logprob: -7.7516398429870605
    4. '       ' → logprob: -10.376640319824219
    5. '               ' → logprob: -12.126640319824219
    6. '
' → logprob: -13.876640319824219
    7. '   ' → logprob: -14.126640319824219
    8. '            
' → logprob: -14.876640319824219
    9. '          ' → logprob: -15.001640319824219
    10. '         ' → logprob: -15.876640319824219

Token 290: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.48934462666511536
    2. 'next' → logprob: -0.989344596862793
    3. 'n' → logprob: -4.489344596862793
    4. ' next' → logprob: -5.739344596862793
    5. ' nex' → logprob: -7.489344596862793
    6. 'ne' → logprob: -9.614344596862793
    7. '_next' → logprob: -10.864344596862793
    8. 'nei' → logprob: -10.864344596862793
    9. 'nj' → logprob: -11.114344596862793
    10. '[next' → logprob: -11.864344596862793

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015040287980809808
    2. 'in' → logprob: -6.501503944396973
    3. ' ' → logprob: -13.876503944396973
    4. '	in' → logprob: -14.376503944396973
    5. '```' → logprob: -16.75150489807129
    6. 'n' → logprob: -17.00150489807129
    7. '   ' → logprob: -17.25150489807129
    8. '  ' → logprob: -17.87650489807129
    9. 'In' → logprob: -18.62650489807129
    10. ' ' → logprob: -18.62650489807129

Token 292: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326615810394287
    2. ' range' → logprob: -1.3132661581039429
    3. 'n' → logprob: -12.438265800476074
    4. '(range' → logprob: -15.063265800476074
    5. ' n' → logprob: -17.31326675415039
    6. ' in' → logprob: -17.31326675415039
    7. ' ' → logprob: -18.18826675415039
    8. 'in' → logprob: -18.31326675415039
    9. '
' → logprob: -19.43826675415039
    10. '	range' → logprob: -19.56326675415039

Token 293: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.038044705986976624
    2. 'n' → logprob: -3.2880446910858154
    3. '(' → logprob: -13.163044929504395
    4. ' n' → logprob: -14.038044929504395
    5. '	n' → logprob: -15.413044929504395
    6. '(
' → logprob: -15.538044929504395
    7. '<n' → logprob: -16.663043975830078
    8. ')n' → logprob: -17.538043975830078
    9. '_n' → logprob: -17.663043975830078
    10. '
' → logprob: -17.788043975830078

Token 294: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.160273477435112
    2. '):' → logprob: -1.9102734327316284
    3. '):
' → logprob: -11.035273551940918
    4. 'n' → logprob: -11.160273551940918
    5. '):

' → logprob: -11.910273551940918
    6. ' ):
' → logprob: -12.660273551940918
    7. ' ):' → logprob: -12.785273551940918
    8. '(n' → logprob: -13.410273551940918
    9. ')' → logprob: -13.785273551940918
    10. '   ' → logprob: -13.910273551940918

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009796975646167994
    2. ' if' → logprob: -7.375979900360107
    3. '                
' → logprob: -8.87597942352295
    4. '                ' → logprob: -10.12597942352295
    5. '<|end|>' → logprob: -10.25097942352295
    6. ' ' → logprob: -10.37597942352295
    7. '           ' → logprob: -11.12597942352295
    8. ' (' → logprob: -11.50097942352295
    9. ' ' → logprob: -11.50097942352295
    10. '            ' → logprob: -11.62597942352295

Token 296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03748118877410889
    2. 'if' (adapté à ' if') → logprob: -3.5374813079833984
    3. '                   ' → logprob: -5.412481307983398
    4. '               ' → logprob: -5.912481307983398
    5. '                ' → logprob: -7.912481307983398
    6. '                       ' → logprob: -10.412481307983398
    7. '                    ' → logprob: -10.412481307983398
    8. ' not' → logprob: -10.412481307983398
    9. '   ' → logprob: -11.037481307983398
    10. '           ' → logprob: -11.537481307983398

Token 297: ' mask' (ID: 10910)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.3060171604156494
    2. ' not' → logprob: -2.3060171604156494
    3. ' (' → logprob: -2.5560171604156494
    4. ' mask' → logprob: -2.9310171604156494
    5. 'mask' → logprob: -3.5560171604156494
    6. 'not' → logprob: -5.55601692199707
    7. '(not' → logprob: -7.55601692199707
    8. '(' → logprob: -11.18101692199707
    9. '(m' → logprob: -11.30601692199707
    10. ' ' → logprob: -11.30601692199707

Token 298: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.03817024454474449
    2. '&' → logprob: -3.288170337677002
    3. '&type' → logprob: -10.038169860839844
    4. '&(' → logprob: -10.163169860839844
    5. '&amp' → logprob: -11.163169860839844
    6. '&nbsp' → logprob: -11.913169860839844
    7. '>>' → logprob: -12.038169860839844
    8. '   ' → logprob: -13.038169860839844
    9. ' &(' → logprob: -13.038169860839844
    10. ' ' → logprob: -13.288169860839844

Token 299: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025063248351216316
    2. '(n' → logprob: -4.2750630378723145
    3. ' (' → logprob: -4.5250630378723145
    4. 'n' → logprob: -13.275063514709473
    5. '   ' → logprob: -13.775063514709473
    6. '(next' → logprob: -13.775063514709473
    7. '((' → logprob: -14.400063514709473
    8. '(nx' → logprob: -14.650063514709473
    9. '
' → logprob: -14.900063514709473
    10. '0' → logprob: -15.025063514709473

Token 300: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030459320172667503
    2. '1' → logprob: -3.530459403991699
    3. ' (' → logprob: -7.530459403991699
    4. '(n' → logprob: -8.9054594039917
    5. 'n' → logprob: -10.7804594039917
    6. '   ' → logprob: -12.2804594039917
    7. ')' → logprob: -12.2804594039917
    8. '           ' → logprob: -13.4054594039917
    9. ' ' → logprob: -13.5304594039917
    10. '{' → logprob: -14.1554594039917

Token 301: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.003958597779273987
    2. ')<<' → logprob: -6.628958702087402
    3. ')' → logprob: -7.003958702087402
    4. '0' → logprob: -7.378958702087402
    5. ' <<' → logprob: -7.628958702087402
    6. '1' → logprob: -8.503958702087402
    7. '<<(' → logprob: -9.003958702087402
    8. '```' → logprob: -9.878958702087402
    9. '<n' → logprob: -10.128958702087402
    10. '>>' → logprob: -10.253958702087402

Token 302: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.6656825866666622e-05
    2. ' nxt' → logprob: -10.62502670288086
    3. '
' → logprob: -13.75002670288086
    4. '   ' → logprob: -15.00002670288086
    5. 'n't' → logprob: -15.25002670288086
    6. '	n' → logprob: -15.37502670288086
    7. ' n' → logprob: -16.12502670288086
    8. 'nt' → logprob: -16.50002670288086
    9. '(n' → logprob: -16.62502670288086
    10. '```' → logprob: -16.75002670288086

Token 303: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05341525003314018
    2. ')==' → logprob: -3.053415298461914
    3. '==' → logprob: -5.553415298461914
    4. ' ==' → logprob: -7.303415298461914
    5. '):
' → logprob: -9.303415298461914
    6. '):' → logprob: -9.428415298461914
    7. ' )' → logprob: -9.553415298461914
    8. '0' → logprob: -11.178415298461914
    9. ' ' → logprob: -12.428415298461914
    10. '   ' → logprob: -13.053415298461914

Token 304: '                   ' (ID: 699)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28989920020103455
    2. '                   ' → logprob: -1.664899230003357
    3. ':' → logprob: -3.9148991107940674
    4. '               ' → logprob: -4.1648993492126465
    5. '==' → logprob: -4.1648993492126465
    6. ' continue' → logprob: -5.2898993492126465
    7. ':
' → logprob: -5.9148993492126465
    8. '                       ' → logprob: -6.4148993492126465
    9. '           ' → logprob: -7.2898993492126465
    10. ' ' → logprob: -8.164898872375488

Token 305: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.0008334511076100171
    2. 'continue' (adapté à ' continue') → logprob: -7.375833511352539
    3. '                   ' → logprob: -8.875833511352539
    4. '               ' → logprob: -10.250833511352539
    5. '	continue' → logprob: -10.625833511352539
    6. '                       ' → logprob: -12.625833511352539
    7. ' ' → logprob: -13.875833511352539
    8. '_continue' → logprob: -14.125833511352539
    9. ' continues' → logprob: -14.250833511352539
    10. '   ' → logprob: -14.750833511352539

Token 306: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3391002118587494
    2. '                   ' → logprob: -1.4641002416610718
    3. '
' → logprob: -3.8391001224517822
    4. '                    
' → logprob: -4.214100360870361
    5. '                ' → logprob: -5.214100360870361
    6. ' 
' → logprob: -5.589100360870361
    7. '                
' → logprob: -5.714100360870361
    8. '                       ' → logprob: -6.714100360870361
    9. '                        
' → logprob: -6.714100360870361
    10. ' dp' → logprob: -6.839100360870361

Token 307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46387580037117004
    2. '                   ' → logprob: -1.0888757705688477
    3. '                    
' → logprob: -4.213875770568848
    4. '                
' → logprob: -5.588875770568848
    5. ' 
' → logprob: -5.713875770568848
    6. '                       ' → logprob: -5.963875770568848
    7. '                ' → logprob: -6.088875770568848
    8. '                        
' → logprob: -6.213875770568848
    9. '
' → logprob: -6.713875770568848
    10. '           ' → logprob: -7.088875770568848

Token 308: ' cost' (ID: 3097)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.19088953733444214
    2. '                   ' → logprob: -2.440889596939087
    3. '               ' → logprob: -3.190889596939087
    4. ' cost' → logprob: -3.690889596939087
    5. ' dp' → logprob: -5.065889358520508
    6. 'new' → logprob: -5.440889358520508
    7. ' next' → logprob: -6.190889358520508
    8. '   ' → logprob: -6.315889358520508
    9. '
' → logprob: -6.315889358520508
    10. ' length' → logprob: -7.315889358520508

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859282076358795
    2. '=' → logprob: -3.0485928058624268
    3. ')' → logprob: -12.548592567443848
    4. ']' → logprob: -14.423592567443848
    5. '   ' → logprob: -14.548592567443848
    6. ' ' → logprob: -15.048592567443848
    7. ' )' → logprob: -16.298593521118164
    8. ' ' → logprob: -16.298593521118164
    9. '=len' → logprob: -16.423593521118164
    10. '	' → logprob: -16.548593521118164

Token 310: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6932586431503296
    2. ' dp' → logprob: -0.6932586431503296
    3. 'len' → logprob: -10.193258285522461
    4. ' len' → logprob: -10.693258285522461
    5. '	dp' → logprob: -10.693258285522461
    6. '(dp' → logprob: -11.193258285522461
    7. '   ' → logprob: -11.443258285522461
    8. ' ' → logprob: -13.318258285522461
    9. '               ' → logprob: -14.443258285522461
    10. '           ' → logprob: -14.943258285522461

Token 311: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.875
    3. '][' → logprob: -16.875
    4. 'mask' → logprob: -17.125
    5. '```' → logprob: -17.875
    6. '[m' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '(mask' → logprob: -19.125
    9. '	mask' → logprob: -19.5
    10. ')[' → logprob: -19.875

Token 312: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.935296834039036e-06
    2. ' mask' → logprob: -13.25000286102295
    3. '[' → logprob: -13.75000286102295
    4. '	mask' → logprob: -18.625003814697266
    5. '(mask' → logprob: -19.250003814697266
    6. '   ' → logprob: -20.625003814697266
    7. '_mask' → logprob: -21.500003814697266
    8. ' ' → logprob: -21.625003814697266
    9. '               ' → logprob: -22.250003814697266
    10. '           ' → logprob: -22.875003814697266

Token 313: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008831776678562164
    2. '[' → logprob: -4.758831977844238
    3. '[n' → logprob: -8.883831977844238
    4. '[next' → logprob: -10.758831977844238
    5. '[last' → logprob: -10.758831977844238
    6. ' ][' → logprob: -10.883831977844238
    7. '   ' → logprob: -12.633831977844238
    8. ')[' → logprob: -12.883831977844238
    9. ']' → logprob: -13.008831977844238
    10. ' [' → logprob: -13.383831977844238

Token 314: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.0087516784551553e-05
    2. ' last' → logprob: -11.87501049041748
    3. '[last' → logprob: -12.75001049041748
    4. '(last' → logprob: -15.87501049041748
    5. 'n' → logprob: -16.875009536743164
    6. ',last' → logprob: -18.000009536743164
    7. '	last' → logprob: -18.125009536743164
    8. '_last' → logprob: -18.125009536743164
    9. ':last' → logprob: -19.000009536743164
    10. '][' → logprob: -19.375009536743164

Token 315: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012559917755424976
    2. ']+' → logprob: -4.38755989074707
    3. '+' → logprob: -11.01255989074707
    4. '][' → logprob: -11.13755989074707
    5. ' ]' → logprob: -12.01255989074707
    6. ' +' → logprob: -12.01255989074707
    7. '[' → logprob: -12.26255989074707
    8. ')' → logprob: -14.26255989074707
    9. ']-' → logprob: -14.76255989074707
    10. ' -' → logprob: -15.01255989074707

Token 316: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22752852737903595
    2. '+' → logprob: -1.6025285720825195
    3. ' -' → logprob: -6.2275285720825195
    4. '-' → logprob: -8.97752857208252
    5. ' ' → logprob: -12.72752857208252
    6. '   ' → logprob: -13.10252857208252
    7. '=' → logprob: -13.47752857208252
    8. '           ' → logprob: -13.97752857208252
    9. '[' → logprob: -14.35252857208252
    10. ')' → logprob: -14.60252857208252

Token 317: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00045200303429737687
    2. ' len' → logprob: -7.750452041625977
    3. '(len' → logprob: -10.875452041625977
    4. '[len' → logprob: -14.375452041625977
    5. '               ' → logprob: -14.625452041625977
    6. '   ' → logprob: -14.625452041625977
    7. '	len' → logprob: -15.000452041625977
    8. '_len' → logprob: -15.500452041625977
    9. '<len' → logprob: -16.250452041625977
    10. '                   ' → logprob: -16.625452041625977

Token 318: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -11.25001335144043
    3. 'cities' → logprob: -14.37501335144043
    4. '(city' → logprob: -16.62501335144043
    5. ' (' → logprob: -16.87501335144043
    6. ' cities' → logprob: -17.62501335144043
    7. '(
' → logprob: -18.50001335144043
    8. '(C' → logprob: -19.12501335144043
    9. '	c' → logprob: -19.50001335144043
    10. 'Cities' → logprob: -19.87501335144043

Token 319: 'ities' (ID: 1629)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3150014281272888
    2. 'cities' → logprob: -1.3150014877319336
    3. '[c' → logprob: -6.815001487731934
    4. ' cities' → logprob: -7.815001487731934
    5. 'c' → logprob: -9.315001487731934
    6. 's' → logprob: -10.565001487731934
    7. '(' → logprob: -10.690001487731934
    8. 'Cities' → logprob: -10.940001487731934
    9. ')' → logprob: -11.190001487731934
    10. '[' → logprob: -11.440001487731934

Token 320: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0019458913011476398
    2. '[c' → logprob: -6.251945972442627
    3. '(n' → logprob: -11.376945495605469
    4. '[next' → logprob: -13.376945495605469
    5. '[j' → logprob: -13.751945495605469
    6. '[' → logprob: -13.876945495605469
    7. ')' → logprob: -14.126945495605469
    8. '[i' → logprob: -15.126945495605469
    9. ')[' → logprob: -15.376945495605469
    10. 'n' → logprob: -15.376945495605469

Token 321: 'xt' (ID: 711)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.009568131528794765
    2. 'xt' → logprob: -4.884568214416504
    3. '[c' → logprob: -7.009568214416504
    4. '][' → logprob: -7.884568214416504
    5. '[x' → logprob: -8.884568214416504
    6. '[next' → logprob: -9.009568214416504
    7. '[j' → logprob: -9.384568214416504
    8. 'cities' → logprob: -9.509568214416504
    9. 's' → logprob: -9.634568214416504
    10. '[' → logprob: -9.759568214416504

Token 322: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014342136681079865
    2. '])' → logprob: -4.264342308044434
    3. '())' → logprob: -9.389342308044434
    4. '")' → logprob: -10.389342308044434
    5. ' )' → logprob: -11.139342308044434
    6. ']' → logprob: -11.514342308044434
    7. ')-' → logprob: -11.639342308044434
    8. '`)' → logprob: -11.764342308044434
    9. '）' → logprob: -11.889342308044434
    10. '')' → logprob: -12.139342308044434

Token 323: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5761635899543762
    2. '-' → logprob: -0.8261635899543762
    3. '-cost' → logprob: -8.951163291931152
    4. '-c' → logprob: -10.826163291931152
    5. '-ex' → logprob: -11.201163291931152
    6. '               ' → logprob: -11.826163291931152
    7. '-token' → logprob: -11.951163291931152
    8. ')' → logprob: -12.076163291931152
    9. '-code' → logprob: -12.201163291931152
    10. '                   ' → logprob: -12.326163291931152

Token 324: ' ol' (ID: 3465)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.0007100477814674377
    2. ' ol' → logprob: -7.2507100105285645
    3. '   ' → logprob: -16.625709533691406
    4. '           ' → logprob: -17.625709533691406
    5. ' ' → logprob: -18.000709533691406
    6. '       ' → logprob: -18.625709533691406
    7. 'olf' → logprob: -18.750709533691406
    8. 'od' → logprob: -18.750709533691406
    9. ''ol' → logprob: -18.750709533691406
    10. '.ol' → logprob: -19.000709533691406

Token 325: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.125003814697266
    3. 'p' → logprob: -14.750003814697266
    4. 'ап' → logprob: -15.000003814697266
    5. '	ap' → logprob: -15.250003814697266
    6. 'a' → logprob: -16.125003814697266
    7. 'op' → logprob: -16.687503814697266
    8. 'lap' → logprob: -17.000003814697266
    9. '_' → logprob: -17.000003814697266
    10. '   ' → logprob: -17.125003814697266

Token 326: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -13.250006675720215
    3. '[left' → logprob: -13.625006675720215
    4. '[now' → logprob: -13.875006675720215
    5. '[i' → logprob: -14.250006675720215
    6. '[l' → logprob: -14.250006675720215
    7. '[max' → logprob: -14.375006675720215
    8. ' [' → logprob: -15.500006675720215
    9. '[first' → logprob: -15.500006675720215
    10. '[end' → logprob: -16.25000762939453

Token 327: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003983760252594948
    2. ']' → logprob: -8.375398635864258
    3. '[last' → logprob: -9.500398635864258
    4. '[' → logprob: -9.750398635864258
    5. '[n' → logprob: -11.125398635864258
    6. '[i' → logprob: -12.000398635864258
    7. ' ][' → logprob: -12.000398635864258
    8. '   ' → logprob: -13.625398635864258
    9. '[next' → logprob: -13.875398635864258
    10. '[now' → logprob: -14.250398635864258

Token 328: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.56102097814437e-05
    2. ' nxt' → logprob: -10.125045776367188
    3. '[n' → logprob: -12.500045776367188
    4. 'j' → logprob: -15.375045776367188
    5. '   ' → logprob: -15.625045776367188
    6. '<n' → logprob: -15.875045776367188
    7. '(n' → logprob: -16.000045776367188
    8. '	n' → logprob: -16.000045776367188
    9. '[' → logprob: -16.250045776367188
    10. '][' → logprob: -16.375045776367188

Token 329: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.988221684878226e-06
    2. 'x' → logprob: -12.000006675720215
    3. 't' → logprob: -14.875006675720215
    4. '```' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.12500762939453
    6. 'ext' → logprob: -16.87500762939453
    7. '[' → logprob: -17.12500762939453
    8. 'j' → logprob: -17.25000762939453
    9. ']' → logprob: -17.87500762939453
    10. 'txt' → logprob: -18.12500762939453

Token 330: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6951801776885986
    2. ']' → logprob: -0.6951801776885986
    3. ')]' → logprob: -6.9451799392700195
    4. '])' → logprob: -7.0701799392700195
    5. '   ' → logprob: -9.44517993927002
    6. ')
' → logprob: -10.19517993927002
    7. ']
' → logprob: -10.57017993927002
    8. '           ' → logprob: -11.07017993927002
    9. '       ' → logprob: -11.19517993927002
    10. ' )' → logprob: -11.44517993927002

Token 331: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08535777777433395
    2. '
' → logprob: -2.835357666015625
    3. '                
' → logprob: -4.460357666015625
    4. ')' → logprob: -5.835357666015625
    5. '                   ' → logprob: -6.585357666015625
    6. 'dp' → logprob: -6.835357666015625
    7. ' 
' → logprob: -6.960357666015625
    8. '           ' → logprob: -7.335357666015625
    9. '    
' → logprob: -7.335357666015625
    10. '                    
' → logprob: -7.585357666015625

Token 332: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06509225070476532
    2. '               ' → logprob: -3.3150923252105713
    3. 'if' (adapté à ' if') → logprob: -4.065092086791992
    4. ' dp' → logprob: -4.940092086791992
    5. 'dp' → logprob: -6.940092086791992
    6. '
' → logprob: -7.315092086791992
    7. ' 
' → logprob: -7.940092086791992
    8. '                
' → logprob: -8.065092086791992
    9. '                   ' → logprob: -10.815092086791992
    10. '                ' → logprob: -11.690092086791992

Token 333: ' dp' (ID: 21546)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16209116578102112
    2. ' cost' → logprob: -1.9120911359786987
    3. 'dp' → logprob: -6.412091255187988
    4. ' dp' → logprob: -8.412091255187988
    5. '   ' → logprob: -14.037091255187988
    6. '(cost' → logprob: -15.537091255187988
    7. ' ' → logprob: -16.037090301513672
    8. '_cost' → logprob: -16.287090301513672
    9. 'Cost' → logprob: -16.287090301513672
    10. 'c' → logprob: -17.537090301513672

Token 334: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -18.375
    3. 'mask' → logprob: -19.25
    4. '[
' → logprob: -20.625
    5. '   ' → logprob: -20.875
    6. '```' → logprob: -21.125
    7. '][' → logprob: -21.625
    8. '               ' → logprob: -22.0
    9. '
' → logprob: -22.25
    10. '[mem' → logprob: -22.625

Token 335: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.250000953674316
    3. ' mask' → logprob: -15.500000953674316
    4. '(mask' → logprob: -19.875
    5. '	mask' → logprob: -20.5
    6. '   ' → logprob: -21.25
    7. '_mask' → logprob: -21.875
    8. 'masked' → logprob: -23.625
    9. 'm' → logprob: -24.125
    10. 'MASK' → logprob: -24.625

Token 336: ' |' (ID: 1022)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004637434147298336
    2. '[' → logprob: -5.379637241363525
    3. '[next' → logprob: -12.004637718200684
    4. '[n' → logprob: -12.504637718200684
    5. ' ][' → logprob: -13.254637718200684
    6. ']' → logprob: -13.629637718200684
    7. '   ' → logprob: -14.379637718200684
    8. '           ' → logprob: -14.379637718200684
    9. '               ' → logprob: -14.629637718200684
    10. ')[' → logprob: -15.004637718200684

Token 337: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00317783304490149
    2. ' (' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.503177642822266
    4. '(n' → logprob: -18.628177642822266
    5. '```' → logprob: -18.878177642822266
    6. '  ' → logprob: -19.378177642822266
    7. '1' → logprob: -19.753177642822266
    8. '((' → logprob: -19.878177642822266
    9. '(
' → logprob: -20.003177642822266
    10. '[' → logprob: -20.128177642822266

Token 338: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030009765177965164
    2. '1' → logprob: -3.5300097465515137
    3. ' (' → logprob: -8.280010223388672
    4. '```' → logprob: -12.655010223388672
    5. '   ' → logprob: -14.280010223388672
    6. '[' → logprob: -14.905010223388672
    7. '           ' → logprob: -14.905010223388672
    8. ' ' → logprob: -15.030010223388672
    9. '               ' → logprob: -15.405010223388672
    10. '{' → logprob: -15.405010223388672

Token 339: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.04116634279489517
    2. '<n' → logprob: -3.291166305541992
    3. '[n' → logprob: -6.166166305541992
    4. '(n' → logprob: -7.166166305541992
    5. ' <<' → logprob: -9.166166305541992
    6. '[' → logprob: -10.916166305541992
    7. '```' → logprob: -10.916166305541992
    8. '   ' → logprob: -11.041166305541992
    9. '[next' → logprob: -11.166166305541992
    10. '<<(' → logprob: -11.416166305541992

Token 340: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8550976164988242e-05
    2. ' nxt' → logprob: -11.125018119812012
    3. '   ' → logprob: -13.000018119812012
    4. '       ' → logprob: -14.875018119812012
    5. '(n' → logprob: -15.250018119812012
    6. '	n' → logprob: -15.625018119812012
    7. '[n' → logprob: -15.625018119812012
    8. ' ' → logprob: -16.500019073486328
    9. '```' → logprob: -16.500019073486328
    10. '  ' → logprob: -16.750019073486328

Token 341: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.440506407059729e-05
    2. ')][' → logprob: -11.00003433227539
    3. ']' → logprob: -11.87503433227539
    4. '[n' → logprob: -12.12503433227539
    5. ']][' → logprob: -12.75003433227539
    6. '[next' → logprob: -13.75003433227539
    7. '[last' → logprob: -14.50003433227539
    8. ' ][' → logprob: -14.62503433227539
    9. '   ' → logprob: -16.12503433227539
    10. ')[' → logprob: -16.87503433227539

Token 342: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.816093228830141e-06
    2. ' nxt' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.00000286102295
    4. '[n' → logprob: -15.50000286102295
    5. '(n' → logprob: -16.375001907348633
    6. '	n' → logprob: -17.125001907348633
    7. 'next' → logprob: -17.500001907348633
    8. '<n' → logprob: -17.875001907348633
    9. 'n't' → logprob: -18.125001907348633
    10. '       ' → logprob: -18.250001907348633

Token 343: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -3.173704271830502e-06
    2. 'x' → logprob: -12.75000286102295
    3. 'ext' → logprob: -16.000003814697266
    4. 't' → logprob: -16.125003814697266
    5. '```' → logprob: -16.875003814697266
    6. ']' → logprob: -17.375003814697266
    7. '   ' → logprob: -18.625003814697266
    8. 'xta' → logprob: -19.500003814697266
    9. 'txt' → logprob: -19.500003814697266
    10. 'last' → logprob: -20.500003814697266

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012853523949161172
    2. ']>' → logprob: -7.001285552978516
    3. '>' → logprob: -8.626285552978516
    4. ' ]' → logprob: -9.126285552978516
    5. ' >' → logprob: -9.376285552978516
    6. '']' → logprob: -14.876285552978516
    7. ']==' → logprob: -15.376285552978516
    8. '">' → logprob: -16.001285552978516
    9. '>]' → logprob: -16.001285552978516
    10. '"]' → logprob: -16.376285552978516

Token 345: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.029752571135759354
    2. ' >' → logprob: -3.529752492904663
    3. '">' → logprob: -14.529752731323242
    4. '=' → logprob: -14.654752731323242
    5. ']' → logprob: -14.904752731323242
    6. ']>' → logprob: -15.529752731323242
    7. ')>' → logprob: -16.404752731323242
    8. ')' → logprob: -16.529752731323242
    9. '＞' → logprob: -16.779752731323242
    10. '[' → logprob: -16.904752731323242

Token 346: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.3868715465068817
    2. ' cost' → logprob: -1.136871576309204
    3. '(cost' → logprob: -15.011871337890625
    4. '_cost' → logprob: -16.636871337890625
    5. 'Cost' → logprob: -16.761871337890625
    6. '   ' → logprob: -16.886871337890625
    7. 'ost' → logprob: -17.261871337890625
    8. ' ' → logprob: -17.761871337890625
    9. '.cost' → logprob: -18.011871337890625
    10. ' kost' → logprob: -18.511871337890625

Token 347: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9388742446899414
    2. ':' → logprob: -1.0638742446899414
    3. ':
' → logprob: -1.9388742446899414
    4. '=' → logprob: -2.3138742446899414
    5. '               ' → logprob: -4.188874244689941
    6. '                   ' → logprob: -6.063874244689941
    7. '):
' → logprob: -6.938874244689941
    8. '                       ' → logprob: -7.188874244689941
    9. '=True' → logprob: -8.188874244689941
    10. '           ' → logprob: -8.313874244689941

Token 348: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10225784033536911
    2. ' dp' → logprob: -3.22725772857666
    3. 'dp' → logprob: -3.47725772857666
    4. '                       ' → logprob: -3.72725772857666
    5. '               ' → logprob: -6.72725772857666
    6. '(dp' → logprob: -6.97725772857666
    7. '                           ' → logprob: -8.72725772857666
    8. '	dp' → logprob: -9.47725772857666
    9. '_dp' → logprob: -9.60225772857666
    10. '                               ' → logprob: -9.72725772857666

Token 349: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.038059163838624954
    2. ' dp' → logprob: -3.2880592346191406
    3. '                   ' → logprob: -11.53805923461914
    4. '                       ' → logprob: -11.78805923461914
    5. '	dp' → logprob: -16.03805923461914
    6. '(dp' → logprob: -16.28805923461914
    7. '_dp' → logprob: -17.41305923461914
    8. '                           ' → logprob: -17.66305923461914
    9. '               ' → logprob: -17.66305923461914
    10. '                    ' → logprob: -18.66305923461914

Token 350: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. 'mask' → logprob: -18.5
    3. '[
' → logprob: -18.5
    4. ' [' → logprob: -20.75
    5. '(mask' → logprob: -22.0
    6. '	mask' → logprob: -22.125
    7. '_mask' → logprob: -22.375
    8. '[mem' → logprob: -22.875
    9. '
' → logprob: -23.125
    10. '[m' → logprob: -23.125

Token 351: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -2.5776860184123507e-06
    2. '[' → logprob: -13.00000286102295
    3. ' mask' → logprob: -15.37500286102295
    4. '(mask' → logprob: -17.625001907348633
    5. '	mask' → logprob: -19.000001907348633
    6. '_mask' → logprob: -20.750001907348633
    7. 'm' → logprob: -21.750001907348633
    8. 'mas' → logprob: -22.375001907348633
    9. 'MASK' → logprob: -22.375001907348633
    10. '   ' → logprob: -22.875001907348633

Token 352: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.1056373342871666
    2. '|' → logprob: -2.855637311935425
    3. '[' → logprob: -3.355637311935425
    4. '][' → logprob: -4.855637550354004
    5. ' [' → logprob: -10.605637550354004
    6. ' ][' → logprob: -11.730637550354004
    7. '│' → logprob: -11.730637550354004
    8. ')[' → logprob: -12.605637550354004
    9. '_mask' → logprob: -13.355637550354004
    10. '|max' → logprob: -13.605637550354004

Token 353: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015024791937321424
    2. ' (' → logprob: -6.501502513885498
    3. '(
' → logprob: -16.751502990722656
    4. '((' → logprob: -18.001502990722656
    5. '1' → logprob: -18.251502990722656
    6. '   ' → logprob: -18.501502990722656
    7. '                   ' → logprob: -18.876502990722656
    8. '                       ' → logprob: -19.251502990722656
    9. '[' → logprob: -19.376502990722656
    10. '                           ' → logprob: -19.501502990722656

Token 354: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44322094321250916
    2. '1' → logprob: -1.1932209730148315
    3. 'n' → logprob: -3.318220853805542
    4. '(n' → logprob: -4.568221092224121
    5. ' (' → logprob: -5.193221092224121
    6. ' nxt' → logprob: -6.068221092224121
    7. '   ' → logprob: -9.068221092224121
    8. ' ' → logprob: -9.443221092224121
    9. '<n' → logprob: -10.693221092224121
    10. '```' → logprob: -10.693221092224121

Token 355: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.02342156507074833
    2. '<n' → logprob: -4.148421764373779
    3. '1' → logprob: -5.523421764373779
    4. '(n' → logprob: -6.148421764373779
    5. '[n' → logprob: -7.648421764373779
    6. '```' → logprob: -8.773421287536621
    7. '(' → logprob: -9.023421287536621
    8. 'n' → logprob: -9.523421287536621
    9. '           ' → logprob: -9.773421287536621
    10. ' <<' → logprob: -9.898421287536621

Token 356: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004965558764524758
    2. ' nxt' → logprob: -7.6254963874816895
    3. '   ' → logprob: -12.625496864318848
    4. '(n' → logprob: -13.625496864318848
    5. '<n' → logprob: -13.750496864318848
    6. '[n' → logprob: -14.375496864318848
    7. '       ' → logprob: -14.750496864318848
    8. 'next' → logprob: -14.875496864318848
    9. '	n' → logprob: -15.125496864318848
    10. '```' → logprob: -15.250496864318848

Token 357: ')][' (ID: 112886)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12735001742839813
    2. ')][' → logprob: -2.127350091934204
    3. ']][' → logprob: -8.127349853515625
    4. '[n' → logprob: -9.752349853515625
    5. ')[' → logprob: -10.627349853515625
    6. ']' → logprob: -10.627349853515625
    7. '   ' → logprob: -11.877349853515625
    8. ')' → logprob: -12.127349853515625
    9. ' ][' → logprob: -13.002349853515625
    10. ')]' → logprob: -13.502349853515625

Token 358: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.652451464906335e-05
    2. ' nxt' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.750016212463379
    4. ' n' → logprob: -14.875016212463379
    5. 'n't' → logprob: -15.875016212463379
    6. 'next' → logprob: -16.000017166137695
    7. '	n' → logprob: -16.125017166137695
    8. '[n' → logprob: -16.125017166137695
    9. '
' → logprob: -16.375017166137695
    10. '_n' → logprob: -16.750017166137695

Token 359: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0001710014621494338
    2. '][' → logprob: -8.875170707702637
    3. 'ext' → logprob: -11.000170707702637
    4. 'x' → logprob: -11.875170707702637
    5. '   ' → logprob: -12.625170707702637
    6. '```' → logprob: -13.875170707702637
    7. ']' → logprob: -14.000170707702637
    8. '[' → logprob: -14.250170707702637
    9. '       ' → logprob: -14.375170707702637
    10. 'st' → logprob: -15.500170707702637

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002753981971181929
    2. ']=' → logprob: -8.250275611877441
    3. ' ]' → logprob: -11.250275611877441
    4. '=' → logprob: -14.375275611877441
    5. '][' → logprob: -15.000275611877441
    6. ' =' → logprob: -15.750275611877441
    7. '   ' → logprob: -17.125274658203125
    8. 'n' → logprob: -18.125274658203125
    9. '[n' → logprob: -18.500274658203125
    10. '           ' → logprob: -19.625274658203125

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759396553039551
    2. '=' → logprob: -0.8259396553039551
    3. '=

' → logprob: -16.700939178466797
    4. ' =
' → logprob: -16.825939178466797
    5. '＝' → logprob: -16.950939178466797
    6. '=
' → logprob: -17.450939178466797
    7. '.=' → logprob: -17.575939178466797
    8. ']=' → logprob: -17.950939178466797
    9. ']' → logprob: -18.575939178466797
    10. ')=' → logprob: -18.950939178466797

Token 362: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03804149478673935
    2. ' cost' → logprob: -3.288041591644287
    3. '(cost' → logprob: -18.788042068481445
    4. '_cost' → logprob: -20.913042068481445
    5. 'Cost' → logprob: -21.038042068481445
    6. '                   ' → logprob: -21.538042068481445
    7. '.cost' → logprob: -22.288042068481445
    8. '               ' → logprob: -22.413042068481445
    9. '   ' → logprob: -23.038042068481445
    10. 'code' → logprob: -23.413042068481445

Token 363: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9198676347732544
    2. 'for' → logprob: -1.5448676347732544
    3. 'print' → logprob: -2.544867515563965
    4. '<|end|>' → logprob: -2.669867515563965
    5. 'result' → logprob: -3.169867515563965
    6. '   ' → logprob: -3.169867515563965
    7. 'final' → logprob: -3.544867515563965
    8. 'n' → logprob: -3.669867515563965
    9. '#' → logprob: -3.794867515563965
    10. '    
' → logprob: -4.044867515563965

Token 364: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15476380288600922
    2. 'full' → logprob: -3.029763698577881
    3. 'min' → logprob: -3.654763698577881
    4. 'res' → logprob: -3.779763698577881
    5. 'final' → logprob: -4.154763698577881
    6. 'answer' → logprob: -4.654763698577881
    7. 'rest' → logprob: -5.279763698577881
    8. 'all' → logprob: -5.779763698577881
    9. 'ans' → logprob: -6.029763698577881
    10. '#' → logprob: -6.404763698577881

Token 365: ' ans' (ID: 3345)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2354298233985901
    2. 'res' → logprob: -1.7354297637939453
    3. 'ans' (adapté à ' ans') → logprob: -3.9854297637939453
    4. 'result' → logprob: -4.610429763793945
    5. 'full' → logprob: -5.485429763793945
    6. 'answer' → logprob: -7.735429763793945
    7. ' min' → logprob: -9.110429763793945
    8. 'mask' → logprob: -9.985429763793945
    9. 'best' → logprob: -10.235429763793945
    10. 'all' → logprob: -10.610429763793945

Token 366: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061978548765182495
    2. '=' → logprob: -2.811978578567505
    3. ',' → logprob: -13.061978340148926
    4. '_len' → logprob: -13.186978340148926
    5. '_' → logprob: -13.311978340148926
    6. '_length' → logprob: -13.561978340148926
    7. 's' → logprob: -14.061978340148926
    8. '_val' → logprob: -14.686978340148926
    9. '=len' → logprob: -14.686978340148926
    10. '_=' → logprob: -14.811978340148926

Token 367: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0011060406686738133
    2. ' min' → logprob: -7.501106262207031
    3. 'float' → logprob: -7.501106262207031
    4. ' float' → logprob: -15.126106262207031
    5. '   ' → logprob: -17.37610626220703
    6. '
' → logprob: -17.62610626220703
    7. '```' → logprob: -17.62610626220703
    8. '	min' → logprob: -17.75110626220703
    9. '(min' → logprob: -17.87610626220703
    10. '[min' → logprob: -18.37610626220703

Token 368: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.5451681974809617e-05
    2. '(' → logprob: -11.125015258789062
    3. '([' → logprob: -14.875015258789062
    4. '(
' → logprob: -16.000015258789062
    5. 'dp' → logprob: -16.125015258789062
    6. '((' → logprob: -17.375015258789062
    7. '(d' → logprob: -18.125015258789062
    8. '(df' → logprob: -18.500015258789062
    9. ' dp' → logprob: -18.625015258789062
    10. ' (' → logprob: -19.750015258789062

Token 369: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -9.627176768844947e-05
    2. '[-' → logprob: -9.250096321105957
    3. '((' → logprob: -16.62509536743164
    4. '[((' → logprob: -19.50009536743164
    5. '[' → logprob: -21.12509536743164
    6. '[
' → logprob: -21.87509536743164
    7. ' [(' → logprob: -22.12509536743164
    8. '(' → logprob: -22.12509536743164
    9. '   ' → logprob: -22.62509536743164
    10. '
' → logprob: -22.75009536743164

Token 370: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001170225441455841
    2. '1' → logprob: -6.7511701583862305
    3. ' (' → logprob: -17.126171112060547
    4. '   ' → logprob: -21.376171112060547
    5. '{' → logprob: -22.501171112060547
    6. '[' → logprob: -22.751171112060547
    7. '((' → logprob: -23.376171112060547
    8. ' ' → logprob: -23.501171112060547
    9. '```' → logprob: -24.876171112060547
    10. '
' → logprob: -25.251171112060547

Token 371: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -4.60414821645827e-06
    2. ' <<' → logprob: -13.500004768371582
    3. '(' → logprob: -13.625004768371582
    4. '   ' → logprob: -14.500004768371582
    5. '<n' → logprob: -14.500004768371582
    6. '<<(' → logprob: -14.500004768371582
    7. '1' → logprob: -15.500004768371582
    8. '```' → logprob: -15.875004768371582
    9. '``' → logprob: -17.375003814697266
    10. '
' → logprob: -17.375003814697266

Token 372: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. ' n' → logprob: -16.375
    3. ')n' → logprob: -20.0
    4. '(n' → logprob: -20.125
    5. '	n' → logprob: -21.625
    6. '_n' → logprob: -22.25
    7. '<n' → logprob: -23.125
    8. '   ' → logprob: -23.25
    9. '```' → logprob: -24.125
    10. '[n' → logprob: -24.125

Token 373: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942734122276306
    2. ')-' → logprob: -0.6942734122276306
    3. 'n' → logprob: -6.944273471832275
    4. '(n' → logprob: -9.319272994995117
    5. '1' → logprob: -11.194272994995117
    6. '   ' → logprob: -11.319272994995117
    7. ' )' → logprob: -11.444272994995117
    8. ')n' → logprob: -11.694272994995117
    9. '-' → logprob: -11.819272994995117
    10. ']-' → logprob: -12.069272994995117

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. 'n' → logprob: -10.750021934509277
    3. ' ' → logprob: -17.87502098083496
    4. '   ' → logprob: -19.12502098083496
    5. '```' → logprob: -19.37502098083496
    6. ' n' → logprob: -20.37502098083496
    7. ')' → logprob: -21.37502098083496
    8. '
' → logprob: -21.50002098083496
    9. '{' → logprob: -21.87502098083496
    10. 'all' → logprob: -22.12502098083496

Token 375: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0337090939283371
    2. '][' → logprob: -3.4087090492248535
    3. ']' → logprob: -10.783709526062012
    4. ')' → logprob: -11.033709526062012
    5. '])
' → logprob: -12.033709526062012
    6. '])]' → logprob: -12.158709526062012
    7. ' ])' → logprob: -12.783709526062012
    8. ')])' → logprob: -12.908709526062012
    9. ']))' → logprob: -13.283709526062012
    10. '],' → logprob: -13.783709526062012

Token 376: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011136723682284355
    2. '   ' → logprob: -4.511136531829834
    3. ' print' → logprob: -10.011137008666992
    4. '```' → logprob: -10.386137008666992
    5. '    
' → logprob: -12.136137008666992
    6. '
' → logprob: -12.886137008666992
    7. 'mask' → logprob: -12.886137008666992
    8. 'result' → logprob: -14.011137008666992
    9. '``' → logprob: -14.261137008666992
    10. '#print' → logprob: -15.011137008666992

Token 377: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0053140390664339066
    2. '   ' → logprob: -5.255313873291016
    3. '```' → logprob: -9.755313873291016
    4. ' print' → logprob: -11.255313873291016
    5. '
' → logprob: -12.505313873291016
    6. '    
' → logprob: -12.505313873291016
    7. '``' → logprob: -13.380313873291016
    8. '  
' → logprob: -16.130313873291016
    9. '	print' → logprob: -16.755313873291016
    10. '#print' → logprob: -16.755313873291016

Token 378: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.75
    3. 'ans' → logprob: -18.125
    4. '(abs' → logprob: -19.25
    5. '(f' → logprob: -19.5
    6. '(answer' → logprob: -19.625
    7. '()' → logprob: -19.75
    8. ' (' → logprob: -20.5
    9. '	ans' → logprob: -21.5
    10. '(len' → logprob: -21.625

Token 379: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009001089259982109
    2. '())' → logprob: -4.7590012550354
    3. '()' → logprob: -7.8840012550354
    4. ' )' → logprob: -12.384000778198242
    5. '(' → logprob: -13.384000778198242
    6. '))' → logprob: -13.759000778198242
    7. ')`' → logprob: -13.884000778198242
    8. '`)' → logprob: -14.384000778198242
    9. '')' → logprob: -14.509000778198242
    10. '})' → logprob: -15.384000778198242


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 377
Tokens correctement prédits (1ère position, stricte): 193
Tokens correctement prédits (1ère position, avec adaptation): 205
Tokens correctement prédits (top 10): 348
Précision stricte (1ère position): 51.19%
Précision adaptée (1ère position): 54.38%
Précision (top 10): 92.31%
================================================================================
