================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
import sys
import re

class CaseConverter(ABC):
    """Interface for case conversion strategies."""
    @abstractmethod
    def to_words(self, identifier: str) -> list[str]:
        """Parse an identifier into a list of words."""
        pass

    @abstractmethod
    def from_words(self, words: list[str]) -> str:
        """Combine words into an identifier following this strategy."""
        pass

    def convert(self, identifier: str) -> str:
        """Convert identifier from unknown style to this strategy."""
        words = self.to_words(identifier)
        return self.from_words(words)

class UpperCamelCaseConverter(CaseConverter):
    """Upper CamelCase: Each word starts uppercase, concatenated."""
    def to_words(self, identifier: str) -> list[str]:
        if '_' in identifier:
            # underscore separated, just split, all lower assumed
            return identifier.lower().split('_')
        else:
            # Mixed case: split before each uppercase letter, preserving acronyms
            parts = re.findall(r'[A-Z]?[a-z]+|[A-Z]+(?![a-z])', identifier)
            return [word.lower() for word in parts]

    def from_words(self, words: list[str]) -> str:
        # Capitalize first letter of each word
        return ''.join(word.capitalize() for word in words)

class LowerCamelCaseConverter(CaseConverter):
    """Lower CamelCase: first word lowercase, rest capitalized."""
    def to_words(self, identifier: str) -> list[str]:
        if '_' in identifier:
            # underscore separated
            return identifier.lower().split('_')
        else:
            # Mixed case split same as UpperCamelCase
            parts = re.findall(r'[A-Z]?[a-z]+|[A-Z]+(?![a-z])', identifier)
            return [word.lower() for word in parts]

    def from_words(self, words: list[str]) -> str:
        if not words:
            return ''
        first = words[0].lower()
        rest = [word.capitalize() for word in words[1:]]
        return first + ''.join(rest)

class UnderscoreConverter(CaseConverter):
    """Underscore: all lowercase words joined by '_'."""
    def to_words(self, identifier: str) -> list[str]:
        if '_' in identifier:
            # underscore separated: direct split
            return identifier.lower().split('_')
        else:
            # Mixed case split same as others
            parts = re.findall(r'[A-Z]?[a-z]+|[A-Z]+(?![a-z])', identifier)
            return [word.lower() for word in parts]

    def from_words(self, words: list[str]) -> str:
        return '_'.join(words)

class IdentifierNormalizer:
    """Facade to normalize identifier to specified naming convention."""

    _converters = {
        'U': UpperCamelCaseConverter(),
        'L': LowerCamelCaseConverter(),
        'D': UnderscoreConverter(),
    }

    def __init__(self, target_type: str):
        if target_type not in self._converters:
            raise ValueError(f"Unsupported target type: {target_type}")
        self.converter = self._converters[target_type]

    def normalize(self, identifier: str) -> str:
        """Convert given identifier to target naming convention."""
        # Input identifier is guaranteed to be one of the three styles,
        # but unknown which. We exploit converter.to_words to parse.
        return self.converter.convert(identifier)

def main():
    normalizers_cache = {
        'U': IdentifierNormalizer('U'),
        'L': IdentifierNormalizer('L'),
        'D': IdentifierNormalizer('D'),
    }
    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue
        if line.endswith(' X'):
            # EndOfInput signal: stop processing
            break
        try:
            identifier, target_type = line.rsplit(' ', 1)
        except ValueError:
            continue  # malformed line, ignore

        if target_type not in normalizers_cache:
            continue  # invalid type

        normalizer = normalizers_cache[target_type]
        result = normalizer.normalize(identifier)
        print(result)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.12709787487983704
    2. ' ABC' → logprob: -2.1270978450775146
    3. 'AB' → logprob: -9.002098083496094
    4. 'ABCDE' → logprob: -10.502098083496094
    5. 'A' → logprob: -11.627098083496094
    6. 'abc' → logprob: -12.377098083496094
    7. 'abstract' → logprob: -12.752098083496094
    8. ' A' → logprob: -13.627098083496094
    9. '`' → logprob: -14.502098083496094
    10. '```' → logprob: -14.627098083496094

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33594927191734314
    2. '.' → logprob: -1.3359493017196655
    3. ':' → logprob: -4.335949420928955
    4. '```' → logprob: -5.710949420928955
    5. 'import' → logprob: -6.335949420928955
    6. ',
' → logprob: -7.460949420928955
    7. '\' → logprob: -7.460949420928955
    8. '' → logprob: -7.960949420928955
    9. ' ,' → logprob: -8.085948944091797
    10. ' ' → logprob: -8.085948944091797

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5414843559265137
    2. 'abstract' → logprob: -0.9164843559265137
    3. 'Abstract' → logprob: -4.166484355926514
    4. ' ' → logprob: -6.666484355926514
    5. ' ABC' → logprob: -7.791484355926514
    6. ' A' → logprob: -8.666484832763672
    7. '.abstract' → logprob: -8.791484832763672
    8. '```' → logprob: -9.041484832763672
    9. ' Abstract' → logprob: -9.166484832763672
    10. 'Meta' → logprob: -9.791484832763672

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00013572083844337612
    2. 'classmethod' → logprob: -9.50013542175293
    3. 'm' → logprob: -10.12513542175293
    4. '_method' → logprob: -11.87513542175293
    5. 'staticmethod' → logprob: -12.25013542175293
    6. 'meth' → logprob: -12.37513542175293
    7. ' method' → logprob: -13.50013542175293
    8. 'ethod' → logprob: -14.12513542175293
    9. '```' → logprob: -14.12513542175293
    10. 'abstract' → logprob: -14.75013542175293

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19592909514904022
    2. '```' → logprob: -2.4459290504455566
    3. '

' → logprob: -3.3209290504455566
    4. '\n' → logprob: -4.195929050445557
    5. 'class' → logprob: -4.570929050445557
    6. '
' → logprob: -4.820929050445557
    7. '' → logprob: -5.320929050445557
    8. '\' → logprob: -5.445929050445557
    9. '``' → logprob: -5.445929050445557
    10. '<|end|>' → logprob: -6.570929050445557

Token 8: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16110850870609283
    2. '

' → logprob: -2.1611084938049316
    3. 'class' → logprob: -3.9111084938049316
    4. '```' → logprob: -4.786108493804932
    5. '


' → logprob: -6.911108493804932
    6. '
' → logprob: -7.161108493804932
    7. '' → logprob: -7.286108493804932
    8. '\n' → logprob: -7.536108493804932
    9. ' 

' → logprob: -7.786108493804932
    10. '``' → logprob: -7.911108493804932

Token 9: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.03047516942024231
    2. ' sys' → logprob: -3.53047513961792
    3. ' math' → logprob: -8.030475616455078
    4. ' json' → logprob: -9.030475616455078
    5. ' typing' → logprob: -9.780475616455078
    6. ' re' → logprob: -9.905475616455078
    7. ' numpy' → logprob: -10.155475616455078
    8. ' abc' → logprob: -10.405475616455078
    9. ' random' → logprob: -10.530475616455078
    10. ' requests' → logprob: -10.780475616455078

Token 10: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07262778282165527
    2. '

' → logprob: -3.0726277828216553
    3. '\n' → logprob: -4.197628021240234
    4. '```' → logprob: -5.572628021240234
    5. '\' → logprob: -6.322628021240234
    6. 'class' → logprob: -6.822628021240234
    7. '' → logprob: -7.197628021240234
    8. '
' → logprob: -7.697628021240234
    9. '.' → logprob: -8.072628021240234
    10. 'import' → logprob: -8.697628021240234

Token 11: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1661204844713211
    2. 'class' → logprob: -2.5411205291748047
    3. '

' → logprob: -3.0411205291748047
    4. '```' → logprob: -4.041120529174805
    5. '\n' → logprob: -5.041120529174805
    6. '\' → logprob: -6.666120529174805
    7. '``' → logprob: -8.166120529174805
    8. '
' → logprob: -8.291120529174805
    9. ' class' → logprob: -8.916120529174805
    10. 'import' → logprob: -8.916120529174805

Token 12: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.014619889669120312
    2. 'os' → logprob: -4.264619827270508
    3. ' io' → logprob: -7.889619827270508
    4. ' typing' → logprob: -10.264619827270508
    5. 'io' → logprob: -10.514619827270508
    6. ' pathlib' → logprob: -12.389619827270508
    7. ' argparse' → logprob: -12.639619827270508
    8. ' traceback' → logprob: -12.889619827270508
    9. '"os' → logprob: -13.014619827270508
    10. ' re' → logprob: -13.264619827270508

Token 13: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.21694067120552063
    2. '
' → logprob: -1.8419406414031982
    3. '\n' → logprob: -4.341940879821777
    4. 'class' → logprob: -4.466940879821777
    5. '


' → logprob: -4.966940879821777
    6. '```' → logprob: -5.966940879821777
    7. '' → logprob: -7.216940879821777
    8. 'import' → logprob: -7.341940879821777
    9. '
' → logprob: -8.466940879821777
    10. '



' → logprob: -8.966940879821777

Token 14: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01660245656967163
    2. '
' → logprob: -4.266602516174316
    3. '\n' → logprob: -6.516602516174316
    4. '```' → logprob: -7.516602516174316
    5. '

' → logprob: -8.266602516174316
    6. ' class' → logprob: -9.391602516174316
    7. '<class' → logprob: -10.641602516174316
    8. '``' → logprob: -11.766602516174316
    9. 'import' → logprob: -11.766602516174316
    10. ' 
' → logprob: -12.141602516174316

Token 15: ' Case' (ID: 18964)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.010198350064456463
    2. ' Abstract' → logprob: -5.26019811630249
    3. ' Basic' → logprob: -6.51019811630249
    4. '<|end|>' → logprob: -7.51019811630249
    5. ' My' → logprob: -7.63519811630249
    6. ' Serializer' → logprob: -8.010198593139648
    7. ' Parser' → logprob: -8.135198593139648
    8. ' Space' → logprob: -8.260198593139648
    9. ' )' → logprob: -8.260198593139648
    10. ' ' → logprob: -9.010198593139648

Token 16: 'Converter' (ID: 18762)
  Prédit: 'Insensitive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Insensitive' → logprob: -0.18317997455596924
    2. 'Sensitive' → logprob: -1.9331799745559692
    3. ':' → logprob: -4.18317985534668
    4. 'Converter' → logprob: -5.80817985534668
    5. '(' → logprob: -6.55817985534668
    6. 'Handler' → logprob: -7.05817985534668
    7. 'Sensitivity' → logprob: -7.05817985534668
    8. 'Aware' → logprob: -8.05817985534668
    9. 'Transformer' → logprob: -8.68317985534668
    10. 'Case' → logprob: -9.18317985534668

Token 17: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16167759895324707
    2. ':' → logprob: -1.911677598953247
    3. '(Abstract' → logprob: -6.661677360534668
    4. '():' → logprob: -9.411677360534668
    5. '(:' → logprob: -10.161677360534668
    6. '```' → logprob: -11.536677360534668
    7. ' :' → logprob: -11.911677360534668
    8. '(Exception' → logprob: -12.161677360534668
    9. '(Base' → logprob: -12.161677360534668
    10. '(C' → logprob: -12.911677360534668

Token 18: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.06202829256653786
    2. ' ABC' → logprob: -2.812028408050537
    3. ')' → logprob: -10.312027931213379
    4. 'ABCDE' → logprob: -11.687027931213379
    5. 'AB' → logprob: -11.937027931213379
    6. 'abc' → logprob: -12.187027931213379
    7. 'Abstract' → logprob: -12.812027931213379
    8. '   ' → logprob: -13.812027931213379
    9. ' ' → logprob: -14.437027931213379
    10. '(' → logprob: -14.812027931213379

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001955990679562092
    2. ')' → logprob: -6.251955986022949
    3. ':' → logprob: -10.75195598602295
    4. '):
' → logprob: -12.37695598602295
    5. ' ):' → logprob: -14.62695598602295
    6. '):

' → logprob: -14.87695598602295
    7. ',' → logprob: -15.62695598602295
    8. '```' → logprob: -15.87695598602295
    9. '<|end|>' → logprob: -16.251956939697266
    10. '():' → logprob: -16.501956939697266

Token 20: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027581045404076576
    2. '   ' → logprob: -4.152581214904785
    3. '
' → logprob: -5.152581214904785
    4. ' :' → logprob: -6.402581214904785
    5. ' 
' → logprob: -7.152581214904785
    6. '    
' → logprob: -7.402581214904785
    7. ' ' → logprob: -7.402581214904785
    8. ':
' → logprob: -7.527581214904785
    9. '\' → logprob: -8.527581214904785
    10. '    ' → logprob: -8.652581214904785

Token 21: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1257535219192505
    2. ' def' → logprob: -3.250753402709961
    3. ' 
' → logprob: -3.625753402709961
    4. '    
' → logprob: -4.000753402709961
    5. '    ' → logprob: -4.875753402709961
    6. ' ' → logprob: -5.125753402709961
    7. '\n' → logprob: -5.250753402709961
    8. '```' → logprob: -5.500753402709961
    9. '
' → logprob: -5.875753402709961
    10. 'def' → logprob: -6.000753402709961

Token 22: 'Interface' (ID: 7078)
  Prédit: ' Converts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Converts' → logprob: -0.3390335440635681
    2. ' Convert' → logprob: -2.214033603668213
    3. '"""' → logprob: -2.589033603668213
    4. 'Convert' → logprob: -3.089033603668213
    5. ' """' → logprob: -4.339033603668213
    6. ' Converter' → logprob: -5.089033603668213
    7. ' Abstract' → logprob: -5.214033603668213
    8. 'Con' → logprob: -5.464033603668213
    9. ' convert' → logprob: -5.714033603668213
    10. 'Converter' → logprob: -5.714033603668213

Token 23: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5402067303657532
    2. '   ' → logprob: -1.0402066707611084
    3. '<|end|>' → logprob: -3.1652066707611084
    4. '<|end|>' → logprob: -4.6652069091796875
    5. '```' → logprob: -5.2902069091796875
    6. ')' → logprob: -6.1652069091796875
    7. 'for' → logprob: -6.7902069091796875
    8. ' ' → logprob: -6.7902069091796875
    9. ':' → logprob: -7.1652069091796875
    10. '  ' → logprob: -7.2902069091796875

Token 24: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.048344213515520096
    2. ' string' → logprob: -3.673344135284424
    3. ' converting' → logprob: -4.423344135284424
    4. 'case' → logprob: -5.548344135284424
    5. ' text' → logprob: -6.048344135284424
    6. ' code' → logprob: -6.673344135284424
    7. ' different' → logprob: -7.298344135284424
    8. ' a' → logprob: -8.173344612121582
    9. 'Case' → logprob: -8.173344612121582
    10. ' classes' → logprob: -8.173344612121582

Token 25: ' conversion' (ID: 22165)
  Prédit: ' conversion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conversion' → logprob: -0.013866222463548183
    2. ' converters' → logprob: -5.263866424560547
    3. ' ' → logprob: -5.888866424560547
    4. '   ' → logprob: -6.013866424560547
    5. ' conversions' → logprob: -6.388866424560547
    6. 'conversion' → logprob: -7.513866424560547
    7. '  ' → logprob: -8.388866424560547
    8. ' transformation' → logprob: -8.638866424560547
    9. ' converting' → logprob: -9.013866424560547
    10. ' style' → logprob: -9.138866424560547

Token 26: ' strategies' (ID: 15142)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2601511478424072
    2. '```' → logprob: -1.6351511478424072
    3. '"""
' → logprob: -4.010150909423828
    4. ' """' → logprob: -5.010150909423828
    5. '   ' → logprob: -5.635150909423828
    6. '."""' → logprob: -6.635150909423828
    7. ' """
' → logprob: -6.760150909423828
    8. ')' → logprob: -7.010150909423828
    9. ' */' → logprob: -7.510150909423828
    10. 's' → logprob: -7.635150909423828

Token 27: '."""
' (ID: 33044)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5938068628311157
    2. '"""' → logprob: -0.8438068628311157
    3. '   ' → logprob: -4.593806743621826
    4. ')' → logprob: -5.843806743621826
    5. '"""
' → logprob: -6.093806743621826
    6. '."""' → logprob: -6.843806743621826
    7. ' """' → logprob: -7.468806743621826
    8. '.' → logprob: -8.218807220458984
    9. '
' → logprob: -9.343807220458984
    10. '""' → logprob: -9.468807220458984

Token 28: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2635083496570587
    2. '    
' → logprob: -2.5135083198547363
    3. ' 
' → logprob: -2.7635083198547363
    4. '\n' → logprob: -3.6385083198547363
    5. '   ' → logprob: -3.7635083198547363
    6. '

' → logprob: -4.388508319854736
    7. '```' → logprob: -4.388508319854736
    8. '  
' → logprob: -6.138508319854736
    9. '\' → logprob: -6.138508319854736
    10. '' → logprob: -6.513508319854736

Token 29: ' @' (ID: 759)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4918622672557831
    2. '   ' → logprob: -1.9918622970581055
    3. '\n' → logprob: -2.1168622970581055
    4. '    
' → logprob: -2.2418622970581055
    5. ' 
' → logprob: -4.2418622970581055
    6. '```' → logprob: -5.9918622970581055
    7. '  
' → logprob: -6.2418622970581055
    8. 'def' → logprob: -6.3668622970581055
    9. '@' (adapté à ' @') → logprob: -6.9918622970581055
    10. '<|end|>' → logprob: -7.4918622970581055

Token 30: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -3.4121114822482923e-06
    2. 'ab' → logprob: -13.250003814697266
    3. 'abs' → logprob: -13.750003814697266
    4. 'abc' → logprob: -15.625003814697266
    5. 'staticmethod' → logprob: -16.000003814697266
    6. ' abstract' → logprob: -16.375003814697266
    7. '.abstract' → logprob: -17.250003814697266
    8. 'a' → logprob: -18.125003814697266
    9. 'classmethod' → logprob: -18.500003814697266
    10. 'property' → logprob: -19.375003814697266

Token 31: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.018158020451664925
    2. '_method' → logprob: -4.018157958984375
    3. 'classmethod' → logprob: -12.518157958984375
    4. 'meth' → logprob: -13.518157958984375
    5. '	method' → logprob: -14.643157958984375
    6. 'staticmethod' → logprob: -14.643157958984375
    7. 'ethod' → logprob: -15.018157958984375
    8. 'abstract' → logprob: -15.143157958984375
    9. '_methods' → logprob: -15.143157958984375
    10. '_' → logprob: -15.393157958984375

Token 32: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2971031665802002
    2. 'method' → logprob: -1.6721031665802002
    3. '
' → logprob: -3.2971031665802
    4. ' def' → logprob: -3.6721031665802
    5. '\' → logprob: -5.672102928161621
    6. '    
' → logprob: -7.297102928161621
    7. '_method' → logprob: -7.422102928161621
    8. ' method' → logprob: -7.672102928161621
    9. '
' → logprob: -8.422102928161621
    10. ' ' → logprob: -8.547102928161621

Token 33: '   ' (ID: 271)
  Prédit: 'method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.30617454648017883
    2. 'def' → logprob: -1.4311745166778564
    3. '_method' → logprob: -5.0561747550964355
    4. '(' → logprob: -5.3061747550964355
    5. 'abstract' → logprob: -5.8061747550964355
    6. '(method' → logprob: -6.0561747550964355
    7. ' def' → logprob: -6.0561747550964355
    8. '.method' → logprob: -6.5561747550964355
    9. '
' → logprob: -6.8061747550964355
    10. 'classmethod' → logprob: -7.0561747550964355

Token 34: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5098693370819092
    2. 'abstract' → logprob: -1.0098693370819092
    3. 'method' → logprob: -3.634869337081909
    4. 'classmethod' → logprob: -5.134869575500488
    5. 'staticmethod' → logprob: -6.259869575500488
    6. 'abc' → logprob: -7.634869575500488
    7. 'property' → logprob: -8.009869575500488
    8. ' def' → logprob: -10.134869575500488
    9. '```' → logprob: -10.759869575500488
    10. 'convert' → logprob: -11.384869575500488

Token 35: ' to' (ID: 316)
  Prédit: ' convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.0017599097918719053
    2. 'convert' → logprob: -6.751760005950928
    3. '_convert' → logprob: -8.75175952911377
    4. ' ' → logprob: -9.00175952911377
    5. ' to' → logprob: -9.12675952911377
    6. ' apply' → logprob: -10.25175952911377
    7. ' covert' → logprob: -10.25175952911377
    8. ' transform' → logprob: -10.50175952911377
    9. ' process' → logprob: -11.00175952911377
    10. ' def' → logprob: -11.62675952911377

Token 36: '_words' (ID: 45077)
  Prédit: '_lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lower' → logprob: -0.016694843769073486
    2. '_upper' → logprob: -4.266695022583008
    3. '_sn' → logprob: -6.516695022583008
    4. '_c' → logprob: -7.766695022583008
    5. '_' → logprob: -8.016695022583008
    6. '_case' → logprob: -8.391695022583008
    7. '_s' → logprob: -10.516695022583008
    8. 'lower' → logprob: -11.016695022583008
    9. '_string' → logprob: -11.391695022583008
    10. '_pas' → logprob: -12.516695022583008

Token 37: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01253755483776331
    2. '(' → logprob: -4.387537479400635
    3. '(s' → logprob: -11.262537956237793
    4. ' (' → logprob: -11.512537956237793
    5. 'self' → logprob: -13.262537956237793
    6. '(Self' → logprob: -14.137537956237793
    7. '   ' → logprob: -14.887537956237793
    8. '(
' → logprob: -14.887537956237793
    9. '(cls' → logprob: -14.887537956237793
    10. '(text' → logprob: -15.262537956237793

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09669604897499084
    2. '):' → logprob: -2.471696138381958
    3. 'self' → logprob: -5.096695899963379
    4. ')' → logprob: -6.596695899963379
    5. ' ,' → logprob: -9.596695899963379
    6. ',self' → logprob: -9.971695899963379
    7. ',line' → logprob: -10.221695899963379
    8. ',text' → logprob: -10.346695899963379
    9. '):
' → logprob: -11.096695899963379
    10. ' self' → logprob: -12.221695899963379

Token 39: ' identifier' (ID: 24577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47594043612480164
    2. ' self' → logprob: -0.975940465927124
    3. 'text' → logprob: -6.975940227508545
    4. ' text' → logprob: -7.100940227508545
    5. ')' → logprob: -10.225940704345703
    6. '   ' → logprob: -10.475940704345703
    7. '       ' → logprob: -12.225940704345703
    8. ' s' → logprob: -12.225940704345703
    9. 'cls' → logprob: -12.225940704345703
    10. 's' → logprob: -12.350940704345703

Token 40: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013584617525339127
    2. ')' → logprob: -4.638584613800049
    3. 'self' → logprob: -6.138584613800049
    4. '):
' → logprob: -6.888584613800049
    5. ':' → logprob: -8.138585090637207
    6. ',' → logprob: -8.638585090637207
    7. '(self' → logprob: -9.263585090637207
    8. '   ' → logprob: -10.388585090637207
    9. '       ' → logprob: -11.263585090637207
    10. ' self' → logprob: -11.388585090637207

Token 41: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.179831862449646
    2. 'str' → logprob: -1.804831862449646
    3. ')' → logprob: -10.054831504821777
    4. '   ' → logprob: -11.054831504821777
    5. ' ' → logprob: -11.054831504821777
    6. '	str' → logprob: -12.679831504821777
    7. ' )' → logprob: -13.054831504821777
    8. '[str' → logprob: -13.429831504821777
    9. '  ' → logprob: -13.679831504821777
    10. ':str' → logprob: -13.929831504821777

Token 42: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016179826110601425
    2. '):' → logprob: -4.141180038452148
    3. ')->' → logprob: -9.141180038452148
    4. '   ' → logprob: -10.516180038452148
    5. ' )' → logprob: -12.516180038452148
    6. '):
' → logprob: -12.641180038452148
    7. '`)' → logprob: -14.641180038452148
    8. ')>>' → logprob: -14.641180038452148
    9. ')throws' → logprob: -14.766180038452148
    10. '       ' → logprob: -14.891180038452148

Token 43: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032151225954294205
    2. '):' → logprob: -4.532151222229004
    3. '->' → logprob: -4.657151222229004
    4. ' ->' → logprob: -4.782151222229004
    5. '():' → logprob: -6.782151222229004
    6. ')' → logprob: -7.657151222229004
    7. ':return' → logprob: -7.657151222229004
    8. '   ' → logprob: -7.782151222229004
    9. ')->' → logprob: -8.532151222229004
    10. ' :' → logprob: -9.407151222229004

Token 44: ' list' (ID: 1562)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.03257259726524353
    2. ' list' → logprob: -3.9075725078582764
    3. 'str' → logprob: -4.5325727462768555
    4. ' ' → logprob: -7.7825727462768555
    5. ' List' → logprob: -8.032572746276855
    6. 'List' → logprob: -8.407572746276855
    7. 'list' → logprob: -8.782572746276855
    8. '[str' → logprob: -10.282572746276855
    9. ' None' → logprob: -10.907572746276855
    10. ' ' → logprob: -11.657572746276855

Token 45: '[str' (ID: 33439)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3936230540275574
    2. '[' → logprob: -1.2686231136322021
    3. '<|end|>' → logprob: -3.768623113632202
    4. '<|end|>' → logprob: -5.768622875213623
    5. '[str' → logprob: -6.143622875213623
    6. '[token' → logprob: -6.143622875213623
    7. '   ' → logprob: -6.393622875213623
    8. '(' → logprob: -6.393622875213623
    9. '():' → logprob: -6.518622875213623
    10. '       ' → logprob: -6.893622875213623

Token 46: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1308436542749405
    2. '):' → logprob: -2.5058436393737793
    3. ']' → logprob: -3.2558436393737793
    4. ']):' → logprob: -6.255843639373779
    5. ')' → logprob: -7.755843639373779
    6. '])' → logprob: -10.130844116210938
    7. ':' → logprob: -11.130844116210938
    8. ']:
' → logprob: -11.130844116210938
    9. '   ' → logprob: -11.255844116210938
    10. '"]:' → logprob: -11.380844116210938

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37672868371009827
    2. '<|end|>' → logprob: -1.2517286539077759
    3. '   ' → logprob: -4.126728534698486
    4. '\n' → logprob: -5.876728534698486
    5. '    ' → logprob: -6.376728534698486
    6. ' ' → logprob: -6.501728534698486
    7. '<|end|>' → logprob: -6.751728534698486
    8. ':' → logprob: -6.751728534698486
    9. '
' → logprob: -7.501728534698486
    10. ')' → logprob: -7.501728534698486

Token 48: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39861592650413513
    2. '\n' → logprob: -2.273615837097168
    3. ' pass' → logprob: -2.273615837097168
    4. 'pass' → logprob: -2.648615837097168
    5. '<|end|>' → logprob: -3.398615837097168
    6. '   ' → logprob: -5.273615837097168
    7. '\r' → logprob: -5.898615837097168
    8. ' ' → logprob: -6.023615837097168
    9. ' 
' → logprob: -6.398615837097168
    10. '...' → logprob: -6.523615837097168

Token 49: 'Parse' (ID: 11432)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9506598114967346
    2. '       ' → logprob: -1.0756597518920898
    3. 'Convert' → logprob: -1.9506597518920898
    4. '   ' → logprob: -3.45065975189209
    5. ' Converts' → logprob: -3.70065975189209
    6. '\n' → logprob: -3.82565975189209
    7. ' pass' → logprob: -4.20065975189209
    8. ' Convert' → logprob: -4.82565975189209
    9. 'convert' → logprob: -4.95065975189209
    10. ' """' → logprob: -5.07565975189209

Token 50: ' an' (ID: 448)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.12500645220279694
    2. ' an' → logprob: -2.5000064373016357
    3. ' identifier' → logprob: -3.7500064373016357
    4. 'the' → logprob: -5.000006675720215
    5. 'identifier' → logprob: -6.250006675720215
    6. '<|end|>' → logprob: -6.500006675720215
    7. '<|end|>' → logprob: -7.000006675720215
    8. '       ' → logprob: -8.375006675720215
    9. '   ' → logprob: -9.250006675720215
    10. ' and' → logprob: -9.500006675720215

Token 51: ' identifier' (ID: 24577)
  Prédit: ' identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identifier' → logprob: -0.3140075206756592
    2. 'identifier' → logprob: -1.3140075206756592
    3. '_identifier' → logprob: -7.564007759094238
    4. '   ' → logprob: -9.314007759094238
    5. '       ' → logprob: -9.439007759094238
    6. ' ' → logprob: -11.189007759094238
    7. '    ' → logprob: -11.314007759094238
    8. '     ' → logprob: -12.189007759094238
    9. 'ident' → logprob: -12.189007759094238
    10. 'indent' → logprob: -12.564007759094238

Token 52: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.0298821572214365
    2. ' to' → logprob: -5.029881954193115
    3. '<|end|>' → logprob: -5.029881954193115
    4. ' and' → logprob: -5.404881954193115
    5. '<|end|>' → logprob: -5.529881954193115
    6. '   ' → logprob: -5.529881954193115
    7. ')' → logprob: -6.779881954193115
    8. ' from' → logprob: -6.904881954193115
    9. ' as' → logprob: -8.029882431030273
    10. 'into' → logprob: -8.029882431030273

Token 53: ' a' (ID: 261)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.25230687856674194
    2. 'words' → logprob: -2.2523069381713867
    3. ' tokens' → logprob: -2.6273069381713867
    4. 'tokens' → logprob: -4.002306938171387
    5. ' component' → logprob: -4.877306938171387
    6. ' a' → logprob: -4.877306938171387
    7. ' its' → logprob: -5.002306938171387
    8. ' constituent' → logprob: -6.002306938171387
    9. ' the' → logprob: -7.377306938171387
    10. '       ' → logprob: -7.502306938171387

Token 54: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.004919804632663727
    2. 'list' → logprob: -5.50492000579834
    3. ' words' → logprob: -7.87992000579834
    4. ' sequence' → logprob: -8.75492000579834
    5. 'words' → logprob: -9.00492000579834
    6. '_words' → logprob: -10.25492000579834
    7. ' word' → logprob: -10.37992000579834
    8. 'sequence' → logprob: -10.50492000579834
    9. 'tokens' → logprob: -10.75492000579834
    10. '<|end|>' → logprob: -11.62992000579834

Token 55: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.07236447185277939
    2. '[' → logprob: -3.447364568710327
    3. '[str' → logprob: -4.072364330291748
    4. '   ' → logprob: -5.322364330291748
    5. '       ' → logprob: -5.447364330291748
    6. '<|end|>' → logprob: -5.822364330291748
    7. '[int' → logprob: -5.947364330291748
    8. '[token' → logprob: -6.572364330291748
    9. 'of' → logprob: -6.697364330291748
    10. '[word' → logprob: -7.197364330291748

Token 56: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.10931127518415451
    2. 'words' → logprob: -2.48431134223938
    3. ' tokens' → logprob: -4.234311103820801
    4. 'tokens' → logprob: -5.234311103820801
    5. ' its' → logprob: -8.6093111038208
    6. ' word' → logprob: -10.7343111038208
    7. ' lowercase' → logprob: -10.7343111038208
    8. 'word' → logprob: -10.9843111038208
    9. ' strings' → logprob: -11.2343111038208
    10. 'str' → logprob: -11.3593111038208

Token 57: '."""
' (ID: 33044)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39336615800857544
    2. '<|end|>' → logprob: -1.7683660984039307
    3. '"""' → logprob: -3.0183660984039307
    4. ')' → logprob: -3.1433660984039307
    5. '       ' → logprob: -3.7683660984039307
    6. '```' → logprob: -3.8933660984039307
    7. '<|end|>' → logprob: -4.64336633682251
    8. '\n' → logprob: -5.39336633682251
    9. '.' → logprob: -6.26836633682251
    10. '  ' → logprob: -7.64336633682251

Token 58: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21421116590499878
    2. ' pass' → logprob: -2.0892112255096436
    3. 'pass' (adapté à ' pass') → logprob: -2.7142112255096436
    4. '   ' → logprob: -6.9642109870910645
    5. '\n' → logprob: -7.2142109870910645
    6. '<|end|>' → logprob: -7.9642109870910645
    7. '	pass' → logprob: -8.089211463928223
    8. '...' → logprob: -8.714211463928223
    9. '```' → logprob: -10.214211463928223
    10. '    
' → logprob: -10.464211463928223

Token 60: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3592049777507782
    2. '   ' → logprob: -1.6092050075531006
    3. '

' → logprob: -3.1092050075531006
    4. '    
' → logprob: -3.8592050075531006
    5. '<|end|>' → logprob: -4.2342047691345215
    6. '\n' → logprob: -4.7342047691345215
    7. 'class' → logprob: -5.1092047691345215
    8. '```' → logprob: -5.8592047691345215
    9. ' 
' → logprob: -7.1092047691345215
    10. 'newline' → logprob: -7.7342047691345215

Token 61: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.11541306972503662
    2. '
' → logprob: -2.240413188934326
    3. '\n' → logprob: -6.990413188934326
    4. '

' → logprob: -7.240413188934326
    5. '   ' → logprob: -8.240412712097168
    6. '    
' → logprob: -8.490412712097168
    7. ' class' → logprob: -8.615412712097168
    8. '<|end|>' → logprob: -9.365412712097168
    9. '' → logprob: -9.865412712097168
    10. ' 
' → logprob: -9.990412712097168

Token 62: ' @' (ID: 759)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.005256645381450653
    2. '
' → logprob: -5.255256652832031
    3. '

' → logprob: -11.755256652832031
    4. '   ' → logprob: -11.755256652832031
    5. ' class' → logprob: -12.630256652832031
    6. '    
' → logprob: -13.005256652832031
    7. 'newline' → logprob: -15.005256652832031
    8. '```' → logprob: -15.130256652832031
    9. '' → logprob: -15.380256652832031
    10. '
' → logprob: -15.380256652832031

Token 63: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.00011534435179783031
    2. 'staticmethod' → logprob: -9.375115394592285
    3. 'classmethod' → logprob: -10.750115394592285
    4. 'property' → logprob: -11.875115394592285
    5. ' abstract' → logprob: -13.875115394592285
    6. 'abc' → logprob: -14.000115394592285
    7. 'case' → logprob: -16.12511444091797
    8. 'override' → logprob: -16.37511444091797
    9. 'class' → logprob: -16.87511444091797
    10. 'abs' → logprob: -17.12511444091797

Token 64: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.001973838312551379
    2. '_method' → logprob: -6.501973628997803
    3. 'def' → logprob: -7.751973628997803
    4. 'meth' → logprob: -11.751974105834961
    5. 'token' → logprob: -12.001974105834961
    6. 'staticmethod' → logprob: -12.501974105834961
    7. '_token' → logprob: -12.626974105834961
    8. 'classmethod' → logprob: -12.626974105834961
    9. '	method' → logprob: -12.876974105834961
    10. ' method' → logprob: -13.001974105834961

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5995638370513916
    2. 'def' → logprob: -1.3495638370513916
    3. '   ' → logprob: -1.8495638370513916
    4. ' def' → logprob: -4.3495635986328125
    5. '	def' → logprob: -5.0995635986328125
    6. '<|end|>' → logprob: -5.5995635986328125
    7. 'newline' → logprob: -6.2245635986328125
    8. '\' → logprob: -6.3495635986328125
    9. '    
' → logprob: -6.5995635986328125
    10. '```' → logprob: -6.7245635986328125

Token 66: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4019321799278259
    2. '   ' → logprob: -1.1519322395324707
    3. '
' → logprob: -4.276932239532471
    4. ' def' → logprob: -7.026932239532471
    5. '  ' → logprob: -10.151931762695312
    6. '```' → logprob: -10.151931762695312
    7. '<|end|>' → logprob: -11.151931762695312
    8. '    
' → logprob: -11.151931762695312
    9. '
' → logprob: -11.276931762695312
    10. '	def' → logprob: -11.276931762695312

Token 67: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.127333340875339e-06
    2. ' def' → logprob: -13.000003814697266
    3. 'classmethod' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.375003814697266
    5. 'class' → logprob: -15.625003814697266
    6. '
' → logprob: -16.000003814697266
    7. '```' → logprob: -16.500003814697266
    8. 'staticmethod' → logprob: -16.875003814697266
    9. '	def' → logprob: -17.250003814697266
    10. 'method' → logprob: -18.500003814697266

Token 68: ' from' (ID: 591)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.029636621475219727
    2. 'def' → logprob: -4.154636383056641
    3. ' to' → logprob: -4.654636383056641
    4. ' from' → logprob: -6.279636383056641
    5. 'to' → logprob: -6.404636383056641
    6. 'from' → logprob: -8.15463638305664
    7. '   ' → logprob: -9.15463638305664
    8. ' convert' → logprob: -10.02963638305664
    9. ' ' → logprob: -11.15463638305664
    10. '
' → logprob: -12.65463638305664

Token 69: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.03778519853949547
    2. '_case' → logprob: -4.037785053253174
    3. '_' → logprob: -4.537785053253174
    4. '_identifier' → logprob: -5.537785053253174
    5. '_tokens' → logprob: -6.287785053253174
    6. '_word' → logprob: -6.912785053253174
    7. '_string' → logprob: -7.037785053253174
    8. '_token' → logprob: -8.287785530090332
    9. '_sn' → logprob: -8.787785530090332
    10. '_lower' → logprob: -9.162785530090332

Token 70: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006598960608243942
    2. '(' → logprob: -7.375659942626953
    3. 'self' → logprob: -11.125659942626953
    4. ' (' → logprob: -11.875659942626953
    5. '   ' → logprob: -12.625659942626953
    6. '(
' → logprob: -12.750659942626953
    7. '       ' → logprob: -13.375659942626953
    8. ' self' → logprob: -13.750659942626953
    9. '<|end|>' → logprob: -13.750659942626953
    10. '	self' → logprob: -14.625659942626953

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021855637896806002
    2. ' ,' → logprob: -8.750218391418457
    3. ')' → logprob: -10.375218391418457
    4. '   ' → logprob: -11.375218391418457
    5. 'self' → logprob: -11.875218391418457
    6. ',self' → logprob: -12.875218391418457
    7. '):' → logprob: -13.125218391418457
    8. ' ' → logprob: -13.125218391418457
    9. '(self' → logprob: -14.500218391418457
    10. '       ' → logprob: -14.625218391418457

Token 72: ' words' (ID: 6391)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5237648487091064
    2. 'self' → logprob: -0.8987648487091064
    3. ' words' → logprob: -8.648764610290527
    4. '       ' → logprob: -8.773764610290527
    5. 'words' → logprob: -8.773764610290527
    6. '   ' → logprob: -9.648764610290527
    7. ' ' → logprob: -10.523764610290527
    8. '	self' → logprob: -11.148764610290527
    9. ' identifier' → logprob: -11.773764610290527
    10. '(self' → logprob: -12.148764610290527

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014646274503320456
    2. '):' → logprob: -7.50146484375
    3. ')' → logprob: -7.62646484375
    4. ' :' → logprob: -9.00146484375
    5. ':list' → logprob: -9.00146484375
    6. ':str' → logprob: -9.50146484375
    7. '   ' → logprob: -10.50146484375
    8. ',' → logprob: -11.00146484375
    9. '<|end|>' → logprob: -11.12646484375
    10. '):
' → logprob: -11.50146484375

Token 74: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011083661578595638
    2. ' list' → logprob: -4.511083602905273
    3. '   ' → logprob: -10.636083602905273
    4. ')' → logprob: -12.386083602905273
    5. '[list' → logprob: -12.511083602905273
    6. ' ' → logprob: -13.261083602905273
    7. '       ' → logprob: -13.886083602905273
    8. 'List' → logprob: -14.761083602905273
    9. '  ' → logprob: -15.261083602905273
    10. '```' → logprob: -15.886083602905273

Token 75: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -13.125005722045898
    3. 'str' → logprob: -13.250005722045898
    4. ')' → logprob: -13.375005722045898
    5. '   ' → logprob: -16.1250057220459
    6. ' [' → logprob: -16.1250057220459
    7. ':str' → logprob: -17.2500057220459
    8. '	str' → logprob: -18.0000057220459
    9. ' str' → logprob: -18.0000057220459
    10. '[
' → logprob: -18.1250057220459

Token 76: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4783695638179779
    2. '])' → logprob: -0.9783695936203003
    3. ']' → logprob: -6.22836971282959
    4. ']):' → logprob: -6.47836971282959
    5. '):' → logprob: -8.47836971282959
    6. '   ' → logprob: -8.60336971282959
    7. ' ])' → logprob: -9.35336971282959
    8. ' )' → logprob: -9.60336971282959
    9. ')]' → logprob: -9.97836971282959
    10. '`)' → logprob: -10.10336971282959

Token 77: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.1721288561820984
    2. '->' → logprob: -1.9221289157867432
    3. ')' → logprob: -4.672128677368164
    4. ')->' → logprob: -6.297128677368164
    5. ':' → logprob: -8.047128677368164
    6. '   ' → logprob: -9.172128677368164
    7. '       ' → logprob: -9.297128677368164
    8. '):' → logprob: -10.797128677368164
    9. 'def' → logprob: -10.922128677368164
    10. ' def' → logprob: -11.047128677368164

Token 78: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.04859009385108948
    2. 'str' → logprob: -3.0485901832580566
    3. '	str' → logprob: -13.673589706420898
    4. '   ' → logprob: -14.423589706420898
    5. '[str' → logprob: -14.423589706420898
    6. ' ' → logprob: -16.4235897064209
    7. ' ' → logprob: -16.5485897064209
    8. ' None' → logprob: -16.7985897064209
    9. 's' → logprob: -17.2985897064209
    10. ':str' → logprob: -17.2985897064209

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036690791603177786
    2. '<|end|>' → logprob: -5.753669261932373
    3. '       ' → logprob: -8.878668785095215
    4. '):' → logprob: -9.003668785095215
    5. ':
' → logprob: -9.628668785095215
    6. '   ' → logprob: -10.128668785095215
    7. '<|end|>' → logprob: -10.128668785095215
    8. ' :' → logprob: -10.253668785095215
    9. ':return' → logprob: -10.753668785095215
    10. '():' → logprob: -11.753668785095215

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06237320974469185
    2. '<|end|>' → logprob: -2.812373161315918
    3. '   ' → logprob: -8.937373161315918
    4. ' ' → logprob: -9.312373161315918
    5. '    ' → logprob: -9.562373161315918
    6. '<|end|>' → logprob: -9.812373161315918
    7. '      ' → logprob: -10.562373161315918
    8. '     ' → logprob: -11.812373161315918
    9. '  ' → logprob: -12.437373161315918
    10. '        ' → logprob: -12.687373161315918

Token 81: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056575024500489235
    2. ' pass' → logprob: -5.75565767288208
    3. '   ' → logprob: -6.25565767288208
    4. 'pass' → logprob: -7.88065767288208
    5. '    ' → logprob: -10.130657196044922
    6. '      ' → logprob: -10.380657196044922
    7. ' ' → logprob: -10.505657196044922
    8. '	pass' → logprob: -10.630657196044922
    9. '<|end|>' → logprob: -10.755657196044922
    10. '     ' → logprob: -10.880657196044922

Token 82: 'Combine' (ID: 101588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016197534278035164
    2. '       ' → logprob: -4.766197681427002
    3. ' pass' → logprob: -5.891197681427002
    4. 'pass' → logprob: -6.391197681427002
    5. 'Pass' → logprob: -7.391197681427002
    6. '"""' → logprob: -7.516197681427002
    7. 'return' → logprob: -7.891197681427002
    8. 'Convert' → logprob: -7.891197681427002
    9. '```' → logprob: -7.891197681427002
    10. '  ' → logprob: -8.516197204589844

Token 83: ' words' (ID: 6391)
  Prédit: ' words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.3994480073451996
    2. ' ' → logprob: -1.274448037147522
    3. '<|end|>' → logprob: -3.5244479179382324
    4. ' the' → logprob: -4.399447917938232
    5. ' a' → logprob: -6.149447917938232
    6. '(words' → logprob: -6.899447917938232
    7. '    ' → logprob: -7.024447917938232
    8. ')' → logprob: -7.149447917938232
    9. '   ' → logprob: -7.274447917938232
    10. '_' → logprob: -7.774447917938232

Token 84: ' into' (ID: 1511)
  Prédit: ' into'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.24566932022571564
    2. '<|end|>' → logprob: -1.9956693649291992
    3. ' to' → logprob: -2.620669364929199
    4. 'into' → logprob: -4.995669364929199
    5. '<|end|>' → logprob: -7.120669364929199
    6. 'to' → logprob: -7.995669364929199
    7. ')' → logprob: -8.1206693649292
    8. '   ' → logprob: -8.3706693649292
    9. ' ' → logprob: -8.4956693649292
    10. '_into' → logprob: -8.8706693649292

Token 85: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10211750119924545
    2. ' an' → logprob: -2.7271175384521484
    3. 'a' → logprob: -3.4771175384521484
    4. ' ' → logprob: -8.477117538452148
    5. ' identifier' → logprob: -8.477117538452148
    6. ' the' → logprob: -8.727117538452148
    7. ' s' → logprob: -9.602117538452148
    8. 'an' → logprob: -9.602117538452148
    9. ' code' → logprob: -10.602117538452148
    10. '   ' → logprob: -11.977117538452148

Token 86: ' identifier' (ID: 24577)
  Prédit: ' identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identifier' → logprob: -0.056125275790691376
    2. 'identifier' → logprob: -3.1811251640319824
    3. ' ' → logprob: -4.556125164031982
    4. '_identifier' → logprob: -6.306125164031982
    5. '   ' → logprob: -8.05612564086914
    6. 'other' → logprob: -9.43112564086914
    7. ' appropriate' → logprob: -10.05612564086914
    8. '  ' → logprob: -10.43112564086914
    9. ' code' → logprob: -10.43112564086914
    10. ' string' → logprob: -10.55612564086914

Token 87: ' following' (ID: 3992)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4874509572982788
    2. '<|end|>' → logprob: -1.7374509572982788
    3. '```' → logprob: -2.2374510765075684
    4. '"""' → logprob: -2.7374510765075684
    5. '   ' → logprob: -4.737451076507568
    6. '."""' → logprob: -4.862451076507568
    7. '<|end|>' → logprob: -5.237451076507568
    8. ')' → logprob: -5.487451076507568
    9. ':' → logprob: -5.987451076507568
    10. '"' → logprob: -6.362451076507568

Token 88: ' this' (ID: 495)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3622460961341858
    2. ' the' → logprob: -1.237246036529541
    3. 'a' → logprob: -4.487246036529541
    4. 'the' → logprob: -6.362246036529541
    5. ' snake' → logprob: -8.2372465133667
    6. ' an' → logprob: -9.1122465133667
    7. ' specific' → logprob: -9.2372465133667
    8. 'snake' → logprob: -9.9872465133667
    9. ' camel' → logprob: -10.4872465133667
    10. ' their' → logprob: -10.4872465133667

Token 89: ' strategy' (ID: 10772)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.09137098491191864
    2. '_case' → logprob: -3.8413710594177246
    3. 'Case' → logprob: -4.091371059417725
    4. ' style' → logprob: -4.341371059417725
    5. ' strategy' → logprob: -4.591371059417725
    6. '   ' → logprob: -4.966371059417725
    7. ' convention' → logprob: -5.216371059417725
    8. 'case' → logprob: -5.716371059417725
    9. ' ' → logprob: -5.841371059417725
    10. ' conversion' → logprob: -6.591371059417725

Token 90: '."""
' (ID: 33044)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.0640538930892944
    2. '"""' → logprob: -1.1890538930892944
    3. '<|end|>' → logprob: -1.1890538930892944
    4. '   ' → logprob: -3.689054012298584
    5. '<|end|>' → logprob: -5.314054012298584
    6. '"' → logprob: -5.439054012298584
    7. '"""
' → logprob: -5.439054012298584
    8. ')' → logprob: -6.314054012298584
    9. '
' → logprob: -7.064054012298584
    10. '`' → logprob: -7.064054012298584

Token 91: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07275371253490448
    2. 'pass' (adapté à ' pass') → logprob: -2.822753667831421
    3. ' pass' → logprob: -4.94775390625
    4. '   ' → logprob: -5.69775390625
    5. '	pass' → logprob: -8.57275390625
    6. '```' → logprob: -10.44775390625
    7. '<|end|>' → logprob: -10.82275390625
    8. '     ' → logprob: -12.19775390625
    9. '      ' → logprob: -12.19775390625
    10. '    ' → logprob: -12.32275390625

Token 93: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14905045926570892
    2. '

' → logprob: -2.14905047416687
    3. 'class' → logprob: -3.89905047416687
    4. '\n' → logprob: -7.149050235748291
    5. '


' → logprob: -7.774050235748291
    6. '' → logprob: -8.52405071258545
    7. '
' → logprob: -9.77405071258545
    8. ' 
' → logprob: -10.52405071258545
    9. '```' → logprob: -10.64905071258545
    10. 'n' → logprob: -10.89905071258545

Token 94: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19782714545726776
    2. 'class' → logprob: -1.9478271007537842
    3. 'c' → logprob: -3.947827100753784
    4. '

' → logprob: -4.322827339172363
    5. '' → logprob: -6.447827339172363
    6. '\n' → logprob: -6.822827339172363
    7. 'n' → logprob: -7.197827339172363
    8. ' 
' → logprob: -8.447827339172363
    9. '```' → logprob: -8.947827339172363
    10. '
' → logprob: -9.322827339172363

Token 95: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0003491705865599215
    2. '
' → logprob: -8.000349044799805
    3. 'c' → logprob: -11.750349044799805
    4. ' class' → logprob: -13.375349044799805
    5. '\n' → logprob: -13.875349044799805
    6. 'cla' → logprob: -14.625349044799805
    7. 'clas' → logprob: -14.750349044799805
    8. ' 
' → logprob: -14.875349044799805
    9. '```' → logprob: -15.000349044799805
    10. 'newline' → logprob: -15.125349044799805

Token 96: ' convert' (ID: 8452)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7927736043930054
    2. ' ' → logprob: -1.0427736043930054
    3. '_' → logprob: -1.6677736043930054
    4. ' def' → logprob: -6.042773723602295
    5. ' space' → logprob: -7.167773723602295
    6. ' convert' → logprob: -7.292773723602295
    7. ' __' → logprob: -7.917773723602295
    8. '_space' → logprob: -8.042773246765137
    9. ' ▁' → logprob: -8.292773246765137
    10. ' concrete' → logprob: -8.292773246765137

Token 97: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5308449864387512
    2. '(' → logprob: -0.9058449864387512
    3. '_case' → logprob: -5.9058451652526855
    4. '_to' → logprob: -6.6558451652526855
    5. '_(' → logprob: -6.9058451652526855
    6. '(self' → logprob: -7.2808451652526855
    7. '_lower' → logprob: -8.155844688415527
    8. '_text' → logprob: -8.655844688415527
    9. '<|end|>' → logprob: -8.905844688415527
    10. '_token' → logprob: -9.030844688415527

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07145512849092484
    2. ')' → logprob: -3.321455240249634
    3. '_' → logprob: -3.821455240249634
    4. ')_' → logprob: -5.071455001831055
    5. '_,' → logprob: -6.196455001831055
    6. ',_' → logprob: -6.946455001831055
    7. ' ,' → logprob: -6.946455001831055
    8. '_identifier' → logprob: -9.446455001831055
    9. '_token' → logprob: -9.696455001831055
    10. '_)' → logprob: -9.821455001831055

Token 99: ' identifier' (ID: 24577)
  Prédit: ' identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identifier' → logprob: -0.37612685561180115
    2. 'identifier' → logprob: -1.7511268854141235
    3. ' self' → logprob: -2.251126766204834
    4. 'self' → logprob: -3.501126766204834
    5. ' s' → logprob: -6.251126766204834
    6. 's' → logprob: -7.126126766204834
    7. ' source' → logprob: -7.126126766204834
    8. 'source' → logprob: -7.751126766204834
    9. '_identifier' → logprob: -9.376127243041992
    10. ')' → logprob: -9.501127243041992

Token 100: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08963632583618164
    2. ')' → logprob: -2.5896363258361816
    3. ':' → logprob: -5.089636325836182
    4. ' ,' → logprob: -6.339636325836182
    5. '):' → logprob: -7.339636325836182
    6. ' ' → logprob: -7.589636325836182
    7. '   ' → logprob: -7.714636325836182
    8. '<|end|>' → logprob: -7.714636325836182
    9. '<|end|>' → logprob: -8.339635848999023
    10. ' )' → logprob: -8.464635848999023

Token 101: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.1761886179447174
    2. 'str' → logprob: -2.5511887073516846
    3. ')' → logprob: -3.5511887073516846
    4. ':str' → logprob: -3.9261887073516846
    5. ' ' → logprob: -4.3011884689331055
    6. ':' → logprob: -5.0511884689331055
    7. '"' → logprob: -5.9261884689331055
    8. ' '' → logprob: -5.9261884689331055
    9. '):' → logprob: -6.0511884689331055
    10. ' :' → logprob: -6.0511884689331055

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12397704273462296
    2. '):' → logprob: -2.623976945877075
    3. ',' → logprob: -3.123976945877075
    4. ' )' → logprob: -10.248976707458496
    5. ':' → logprob: -10.748976707458496
    6. '):
' → logprob: -10.873976707458496
    7. ' ):' → logprob: -11.373976707458496
    8. '   ' → logprob: -11.623976707458496
    9. ' ,' → logprob: -12.998976707458496
    10. ' ' → logprob: -13.498976707458496

Token 103: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029438480734825134
    2. '):' → logprob: -4.779438495635986
    3. ')' → logprob: -4.904438495635986
    4. '(self' → logprob: -5.279438495635986
    5. '->' → logprob: -5.779438495635986
    6. '(' → logprob: -6.404438495635986
    7. ' ->' → logprob: -6.779438495635986
    8. '   ' → logprob: -7.404438495635986
    9. ',' → logprob: -7.654438495635986
    10. '.' → logprob: -8.404438018798828

Token 104: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.036211561411619186
    2. ' ' → logprob: -3.7862114906311035
    3. 'str' → logprob: -5.2862114906311035
    4. '"' → logprob: -5.2862114906311035
    5. ''' → logprob: -6.5362114906311035
    6. ' "' → logprob: -7.2862114906311035
    7. ' '' → logprob: -8.161211967468262
    8. '   ' → logprob: -9.036211967468262
    9. ' ' → logprob: -10.536211967468262
    10. '  ' → logprob: -10.786211967468262

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001113189267925918
    2. '(' → logprob: -7.751113414764404
    3. '):' → logprob: -8.001112937927246
    4. '(self' → logprob: -8.876112937927246
    5. '   ' → logprob: -9.751112937927246
    6. ':
' → logprob: -10.001112937927246
    7. ' :' → logprob: -10.251112937927246
    8. '():' → logprob: -11.126112937927246
    9. ':**' → logprob: -11.376112937927246
    10. ')' → logprob: -11.876112937927246

Token 106: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1468898504972458
    2. '\n' → logprob: -2.5218899250030518
    3. '   ' → logprob: -3.6468899250030518
    4. '    ' → logprob: -4.146889686584473
    5. '    
' → logprob: -5.646889686584473
    6. ' ' → logprob: -6.146889686584473
    7. '        
' → logprob: -6.271889686584473
    8. '\' → logprob: -7.021889686584473
    9. 'newline' → logprob: -7.396889686584473
    10. ' return' → logprob: -7.521889686584473

Token 107: ' """' (ID: 9280)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.34439370036125183
    2. '       ' → logprob: -1.3443937301635742
    3. ' words' → logprob: -3.719393730163574
    4. 'return' → logprob: -5.844393730163574
    5. 'try' → logprob: -6.594393730163574
    6. 'tokens' → logprob: -7.344393730163574
    7. ' return' → logprob: -8.719393730163574
    8. 'pass' → logprob: -8.719393730163574
    9. 'if' → logprob: -8.719393730163574
    10. '   ' → logprob: -8.844393730163574

Token 108: 'Convert' (ID: 18702)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.7811629176139832
    2. 'words' → logprob: -1.031162977218628
    3. '       ' → logprob: -1.781162977218628
    4. 'tokens' → logprob: -5.531162738800049
    5. ' tokens' → logprob: -5.781162738800049
    6. '   ' → logprob: -6.281162738800049
    7. '    ' → logprob: -6.406162738800049
    8. 'return' → logprob: -6.781162738800049
    9. '#' → logprob: -7.031162738800049
    10. ' return' → logprob: -7.031162738800049

Token 109: ' identifier' (ID: 24577)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6103211641311646
    2. 'self' → logprob: -0.9853211641311646
    3. '_' → logprob: -3.360321044921875
    4. ' identifier' → logprob: -3.860321044921875
    5. ' ' → logprob: -4.735321044921875
    6. ' the' → logprob: -4.860321044921875
    7. 'identifier' → logprob: -5.735321044921875
    8. '   ' → logprob: -6.485321044921875
    9. 's' → logprob: -6.735321044921875
    10. ' a' → logprob: -6.860321044921875

Token 110: ' from' (ID: 591)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29013344645500183
    2. '   ' → logprob: -2.665133476257324
    3. '(' → logprob: -2.915133476257324
    4. ')' → logprob: -3.040133476257324
    5. ',' → logprob: -3.540133476257324
    6. '_to' → logprob: -4.290133476257324
    7. ' (' → logprob: -4.665133476257324
    8. '       ' → logprob: -5.290133476257324
    9. '_' → logprob: -5.415133476257324
    10. ' ' → logprob: -5.915133476257324

Token 111: ' unknown' (ID: 17927)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8988507390022278
    2. '"' → logprob: -1.523850679397583
    3. ' one' → logprob: -1.898850679397583
    4. ' '' → logprob: -2.523850679397583
    5. ' "' → logprob: -3.148850679397583
    6. ' str' → logprob: -3.523850679397583
    7. 'str' → logprob: -3.773850679397583
    8. 'one' → logprob: -4.148850917816162
    9. ''s' → logprob: -4.773850917816162
    10. ' a' → logprob: -4.898850917816162

Token 112: ' style' (ID: 2713)
  Prédit: '_case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.545343279838562
    2. ' case' → logprob: -2.1703433990478516
    3. '_' → logprob: -2.2953433990478516
    4. ' ' → logprob: -2.4203433990478516
    5. 'case' → logprob: -3.5453433990478516
    6. ' to' → logprob: -3.7953433990478516
    7. ')' → logprob: -3.9203433990478516
    8. ' casing' → logprob: -4.420343399047852
    9. '   ' → logprob: -4.545343399047852
    10. '_c' → logprob: -4.920343399047852

Token 113: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.011529813520610332
    2. '   ' → logprob: -5.011529922485352
    3. ' ' → logprob: -6.636529922485352
    4. 'to' → logprob: -6.886529922485352
    5. ',' → logprob: -7.261529922485352
    6. ' into' → logprob: -7.386529922485352
    7. ')' → logprob: -8.011529922485352
    8. '_' → logprob: -8.136529922485352
    9. '    ' → logprob: -9.136529922485352
    10. ' by' → logprob: -9.136529922485352

Token 114: ' this' (ID: 495)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9125320911407471
    2. ' target' → logprob: -1.662532091140747
    3. ' another' → logprob: -2.787532091140747
    4. 'snake' → logprob: -2.912532091140747
    5. '"' → logprob: -3.037532091140747
    6. ' camel' → logprob: -3.162532091140747
    7. ' space' → logprob: -3.287532091140747
    8. ' words' → logprob: -3.412532091140747
    9. ' snake' → logprob: -3.662532091140747
    10. 'target' → logprob: -3.787532091140747

Token 115: ' strategy' (ID: 10772)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.123743437230587
    2. '_' → logprob: -2.8737435340881348
    3. '   ' → logprob: -4.373743534088135
    4. ' case' → logprob: -4.623743534088135
    5. '.' → logprob: -5.373743534088135
    6. ')' → logprob: -5.373743534088135
    7. ' one' → logprob: -5.623743534088135
    8. ' newline' → logprob: -5.748743534088135
    9. '<|end|>' → logprob: -5.873743534088135
    10. ' line' → logprob: -5.998743534088135

Token 116: '."""
' (ID: 33044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8278211951255798
    2. ')' → logprob: -1.4528212547302246
    3. '   ' → logprob: -1.9528212547302246
    4. '):' → logprob: -2.5778212547302246
    5. '.' → logprob: -2.9528212547302246
    6. ',' → logprob: -3.2028212547302246
    7. '       ' → logprob: -4.827821254730225
    8. '    ' → logprob: -6.077821254730225
    9. '\n' → logprob: -6.827821254730225
    10. ':
' → logprob: -6.952821254730225

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15098954737186432
    2. '\n' → logprob: -2.400989532470703
    3. '   ' → logprob: -4.150989532470703
    4. '    ' → logprob: -4.775989532470703
    5. '\' → logprob: -4.900989532470703
    6. ' ' → logprob: -5.150989532470703
    7. '<|end|>' → logprob: -6.275989532470703
    8. '        
' → logprob: -6.400989532470703
    9. '    
' → logprob: -6.525989532470703
    10. 'newline' → logprob: -6.775989532470703

Token 118: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' (adapté à ' words') → logprob: -0.6105923652648926
    2. '       ' → logprob: -1.1105923652648926
    3. '#' → logprob: -2.9855923652648926
    4. 'try' → logprob: -3.6105923652648926
    5. 'if' → logprob: -3.8605923652648926
    6. '   ' → logprob: -4.360592365264893
    7. 'parts' → logprob: -5.610592365264893
    8. 'for' → logprob: -5.735592365264893
    9. 'tokens' → logprob: -6.110592365264893
    10. ' words' → logprob: -6.485592365264893

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005246568005532026
    2. '=' → logprob: -5.255246639251709
    3. '_' → logprob: -12.00524616241455
    4. ' ' → logprob: -12.88024616241455
    5. ')' → logprob: -13.50524616241455
    6. ' =
' → logprob: -14.13024616241455
    7. ',' → logprob: -15.00524616241455
    8. '.' → logprob: -15.38024616241455
    9. '   ' → logprob: -15.63024616241455
    10. ' =
' → logprob: -15.63024616241455

Token 120: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31567761301994324
    2. ' self' → logprob: -1.3156776428222656
    3. 're' → logprob: -6.690677642822266
    4. ' re' → logprob: -7.065677642822266
    5. '[self' → logprob: -9.315677642822266
    6. '[]' → logprob: -9.440677642822266
    7. '       ' → logprob: -9.690677642822266
    8. ' ' → logprob: -10.690677642822266
    9. '   ' → logprob: -10.940677642822266
    10. '	self' → logprob: -11.440677642822266

Token 121: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -0.004681457299739122
    2. '.' → logprob: -5.379681587219238
    3. 'to' → logprob: -10.254681587219238
    4. '._' → logprob: -11.129681587219238
    5. '.from' → logprob: -12.129681587219238
    6. '.convert' → logprob: -12.754681587219238
    7. ' .' → logprob: -13.629681587219238
    8. ''.' → logprob: -15.004681587219238
    9. '".' → logprob: -15.004681587219238
    10. '_to' → logprob: -15.004681587219238

Token 122: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.00031043673516251147
    2. '_' → logprob: -8.250310897827148
    3. 'words' → logprob: -10.500310897827148
    4. '_word' → logprob: -11.250310897827148
    5. '```' → logprob: -13.625310897827148
    6. '_tokens' → logprob: -13.750310897827148
    7. '(words' → logprob: -14.000310897827148
    8. 'Words' → logprob: -14.125310897827148
    9. '(' → logprob: -14.375310897827148
    10. '_w' → logprob: -14.500310897827148

Token 123: '(identifier' (ID: 126126)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20150408148765564
    2. '(identifier' → logprob: -1.701504111289978
    3. '('' → logprob: -9.95150375366211
    4. '(id' → logprob: -11.57650375366211
    5. '(identity' → logprob: -11.95150375366211
    6. '(
' → logprob: -12.07650375366211
    7. '(indent' → logprob: -12.32650375366211
    8. '("("' → logprob: -12.70150375366211
    9. '((' → logprob: -13.32650375366211
    10. '(

' → logprob: -13.70150375366211

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1637164789135568e-05
    2. ')
' → logprob: -11.750011444091797
    3. '   ' → logprob: -12.875011444091797
    4. ' )' → logprob: -14.500011444091797
    5. ')`' → logprob: -15.750011444091797
    6. '[' → logprob: -16.000011444091797
    7. '       ' → logprob: -16.125011444091797
    8. '))' → logprob: -16.250011444091797
    9. ').' → logprob: -16.875011444091797
    10. ')

' → logprob: -17.250011444091797

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37290000915527344
    2. '   ' → logprob: -2.1229000091552734
    3. '
' → logprob: -3.2479000091552734
    4. '    
' → logprob: -3.2479000091552734
    5. '\n' → logprob: -3.6229000091552734
    6. 'return' → logprob: -4.247900009155273
    7. '        
' → logprob: -4.247900009155273
    8. ' 
' → logprob: -4.497900009155273
    9. ' ' → logprob: -4.997900009155273
    10. '[' → logprob: -4.997900009155273

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20672382414340973
    2. ' return' → logprob: -2.206723928451538
    3. '       ' → logprob: -2.581723928451538
    4. '
' → logprob: -7.956723690032959
    5. ' ' → logprob: -8.956724166870117
    6. ' 
' → logprob: -9.081724166870117
    7. '   ' → logprob: -9.331724166870117
    8. '	return' → logprob: -9.581724166870117
    9. '        
' → logprob: -9.831724166870117
    10. '        ' → logprob: -9.956724166870117

Token 127: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25193649530410767
    2. 'self' → logprob: -1.501936435699463
    3. ' ' → logprob: -12.251936912536621
    4. '"' → logprob: -13.626936912536621
    5. ''' → logprob: -14.501936912536621
    6. '(self' → logprob: -15.876936912536621
    7. '	self' → logprob: -15.876936912536621
    8. '    ' → logprob: -16.251935958862305
    9. ' ' → logprob: -16.376935958862305
    10. '[self' → logprob: -16.501935958862305

Token 128: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.2519521713256836
    2. '.' → logprob: -1.5019521713256836
    3. 'from' → logprob: -11.251952171325684
    4. '.convert' → logprob: -12.626952171325684
    5. '._' → logprob: -12.751952171325684
    6. ' .' → logprob: -13.251952171325684
    7. '.f' → logprob: -13.626952171325684
    8. '.From' → logprob: -14.751952171325684
    9. '.to' → logprob: -16.376953125
    10. '.con' → logprob: -16.376953125

Token 129: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.0005687602679245174
    2. '_' → logprob: -7.500568866729736
    3. '_word' → logprob: -11.250568389892578
    4. '_w' → logprob: -13.875568389892578
    5. 'words' → logprob: -14.125568389892578
    6. ' _' → logprob: -16.000568389892578
    7. '_
' → logprob: -16.000568389892578
    8. 'Words' → logprob: -16.250568389892578
    9. ' ' → logprob: -16.250568389892578
    10. '_

' → logprob: -16.250568389892578

Token 130: '(words' (ID: 80550)
  Prédit: '(words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(words' → logprob: -0.018152514472603798
    2. '(' → logprob: -4.018152713775635
    3. '(word' → logprob: -14.393152236938477
    4. '(
' → logprob: -14.393152236938477
    5. ' (' → logprob: -14.518152236938477
    6. '(w' → logprob: -15.143152236938477
    7. '(users' → logprob: -15.893152236938477
    8. '("("' → logprob: -15.893152236938477
    9. '(

' → logprob: -16.393152236938477
    10. '('' → logprob: -16.643152236938477

Token 131: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ')
' → logprob: -10.625029563903809
    3. '<|end|>' → logprob: -13.000029563903809
    4. ' )' → logprob: -14.000029563903809
    5. ')return' → logprob: -14.500029563903809
    6. '[' → logprob: -15.250029563903809
    7. ']' → logprob: -15.625029563903809
    8. '   ' → logprob: -15.875029563903809
    9. '()' → logprob: -16.000030517578125
    10. '}' → logprob: -16.125030517578125

Token 132: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005520342383533716
    2. 'class' → logprob: -6.130520343780518
    3. '

' → logprob: -6.380520343780518
    4. '' → logprob: -7.130520343780518
    5. '\n' → logprob: -7.755520343780518
    6. '
' → logprob: -8.75551986694336
    7. '```' → logprob: -10.00551986694336
    8. 'c' → logprob: -10.50551986694336
    9. ' 
' → logprob: -10.50551986694336
    10. 'n' → logprob: -10.50551986694336

Token 133: ' Upper' (ID: 45714)
  Prédit: ' Snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Snake' → logprob: -0.6442014575004578
    2. 'Snake' → logprob: -0.8942014575004578
    3. 'Camel' → logprob: -3.2692015171051025
    4. ' Camel' → logprob: -3.7692015171051025
    5. ' Pascal' → logprob: -6.269201278686523
    6. '_S' → logprob: -6.519201278686523
    7. ' snake' → logprob: -7.519201278686523
    8. 'Pas' → logprob: -8.394201278686523
    9. '_sn' → logprob: -8.644201278686523
    10. 'snake' → logprob: -9.019201278686523

Token 134: 'Camel' (ID: 137910)
  Prédit: 'Snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Snake' → logprob: -0.5774046182632446
    2. 'Camel' → logprob: -1.0774046182632446
    3. 'Case' → logprob: -2.327404499053955
    4. 'Lower' → logprob: -7.952404499053955
    5. 'Und' → logprob: -9.202404975891113
    6. 'case' → logprob: -9.577404975891113
    7. 'snake' → logprob: -9.702404975891113
    8. 'camel' → logprob: -11.577404975891113
    9. 'Word' → logprob: -12.077404975891113
    10. 'Words' → logprob: -12.577404975891113

Token 135: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -2.2200749754119897e-06
    2. 'case' → logprob: -13.750001907348633
    3. 'C' → logprob: -15.250001907348633
    4. 'Cas' → logprob: -15.250001907348633
    5. ' case' → logprob: -15.750001907348633
    6. 'Converter' → logprob: -16.250001907348633
    7. 'Class' → logprob: -16.500001907348633
    8. ' Case' → logprob: -16.625001907348633
    9. '```' → logprob: -17.000001907348633
    10. '_case' → logprob: -17.250001907348633

Token 136: 'Converter' (ID: 18762)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.03205956891179085
    2. 'Case' → logprob: -3.532059669494629
    3. '(' → logprob: -6.157059669494629
    4. 'Converter' → logprob: -9.157059669494629
    5. ':' → logprob: -10.282059669494629
    6. '():' → logprob: -10.782059669494629
    7. 'C' → logprob: -11.907059669494629
    8. '(case' → logprob: -12.407059669494629
    9. '(Base' → logprob: -12.532059669494629
    10. '):' → logprob: -12.657059669494629

Token 137: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.3660790026187897
    2. '(' → logprob: -1.4910789728164673
    3. ':' → logprob: -2.741079092025757
    4. '():' → logprob: -4.116078853607178
    5. '(:' → logprob: -7.866078853607178
    6. '()' → logprob: -9.866079330444336
    7. ' :' → logprob: -9.991079330444336
    8. '(Base' → logprob: -10.491079330444336
    9. '(Abstract' → logprob: -10.991079330444336
    10. '(":' → logprob: -11.491079330444336

Token 138: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.004018210805952549
    2. 'lass' → logprob: -6.879018306732178
    3. 'a' → logprob: -7.004018306732178
    4. '(' → logprob: -7.129018306732178
    5. 'ass' → logprob: -7.379018306732178
    6. 'amel' → logprob: -8.12901782989502
    7. '```' → logprob: -9.00401782989502
    8. 'ap' → logprob: -10.25401782989502
    9. ')' → logprob: -10.50401782989502
    10. '(C' → logprob: -10.75401782989502

Token 139: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -6.0033853515051305e-05
    2. 'Conv' → logprob: -10.500060081481934
    3. 'C' → logprob: -11.375060081481934
    4. 'Convert' → logprob: -12.125060081481934
    5. 'converter' → logprob: -12.125060081481934
    6. 'Con' → logprob: -12.250060081481934
    7. 'Converters' → logprob: -13.625060081481934
    8. ' Converter' → logprob: -13.750060081481934
    9. ')' → logprob: -14.250060081481934
    10. 'Case' → logprob: -14.500060081481934

Token 140: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0001322639436693862
    2. ':' → logprob: -9.75013256072998
    3. '):
' → logprob: -10.12513256072998
    4. ')' → logprob: -10.50013256072998
    5. ' ):' → logprob: -12.37513256072998
    6. '():' → logprob: -14.37513256072998
    7. '   ' → logprob: -14.50013256072998
    8. '):
' → logprob: -15.00013256072998
    9. '):

' → logprob: -15.75013256072998
    10. '>):' → logprob: -16.125131607055664

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040995191782712936
    2. '
' → logprob: -3.2909951210021973
    3. '    
' → logprob: -6.165995121002197
    4. 'def' → logprob: -7.915995121002197
    5. '    ' → logprob: -8.790995597839355
    6. ' def' → logprob: -9.165995597839355
    7. '<|end|>' → logprob: -9.665995597839355
    8. '	def' → logprob: -10.915995597839355
    9. ' 
' → logprob: -11.290995597839355
    10. ' indentation' → logprob: -11.290995597839355

Token 142: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17234399914741516
    2. 'def' → logprob: -1.9223439693450928
    3. '   ' → logprob: -4.422344207763672
    4. '    ' → logprob: -10.297344207763672
    5. ' ' → logprob: -12.797344207763672
    6. '	def' → logprob: -13.422344207763672
    7. '    
' → logprob: -14.422344207763672
    8. ' _' → logprob: -14.547344207763672
    9. '  ' → logprob: -14.922344207763672
    10. '
' → logprob: -15.172344207763672

Token 143: 'Upper' (ID: 21403)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015015717595815659
    2. 'class' → logprob: -4.265015602111816
    3. ' def' → logprob: -7.140015602111816
    4. '"""' → logprob: -9.890015602111816
    5. '   ' → logprob: -12.140015602111816
    6. '
' → logprob: -13.515015602111816
    7. ' """' → logprob: -14.640015602111816
    8. 'import' → logprob: -15.515015602111816
    9. ' class' → logprob: -15.640015602111816
    10. '#' → logprob: -15.765015602111816

Token 144: ' Camel' (ID: 112127)
  Prédit: 'Camel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Camel' → logprob: -0.000182921823579818
    2. 'Case' → logprob: -8.75018310546875
    3. 'camel' → logprob: -11.50018310546875
    4. 'case' → logprob: -11.87518310546875
    5. ' Camel' → logprob: -13.12518310546875
    6. 'C' → logprob: -13.25018310546875
    7. 'Cam' → logprob: -13.50018310546875
    8. '   ' → logprob: -14.25018310546875
    9. ' camel' → logprob: -14.50018310546875
    10. 'Snake' → logprob: -14.75018310546875

Token 145: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -3.643152740551159e-05
    2. 'case' → logprob: -10.750036239624023
    3. ' Case' → logprob: -12.125036239624023
    4. 'C' → logprob: -12.375036239624023
    5. '
' → logprob: -13.250036239624023
    6. ' case' → logprob: -13.500036239624023
    7. '   ' → logprob: -13.875036239624023
    8. 'Cas' → logprob: -14.875036239624023
    9. 'Camel' → logprob: -15.000036239624023
    10. 'Class' → logprob: -15.750036239624023

Token 146: ':' (ID: 25)
  Prédit: 'Converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.5902426242828369
    2. '   ' → logprob: -1.465242624282837
    3. ' (' → logprob: -2.965242624282837
    4. '"""' → logprob: -3.465242624282837
    5. '"""
' → logprob: -3.465242624282837
    6. ' converter' → logprob: -3.590242624282837
    7. '
' → logprob: -3.715242624282837
    8. ':' → logprob: -4.965242385864258
    9. ' Converter' → logprob: -4.965242385864258
    10. 'Case' → logprob: -5.340242385864258

Token 147: ' Each' (ID: 11555)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0193508863449097
    2. '   ' → logprob: -1.5193508863449097
    3. '
' → logprob: -2.644351005554199
    4. 'Pas' → logprob: -2.769351005554199
    5. '"""' → logprob: -3.394351005554199
    6. ' Converts' → logprob: -3.644351005554199
    7. 'Example' → logprob: -3.769351005554199
    8. 'Each' → logprob: -3.894351005554199
    9. '    
' → logprob: -3.894351005554199
    10. ' def' → logprob: -4.144351005554199

Token 148: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.5263381004333496
    2. 'word' → logprob: -0.9013381004333496
    3. 'Word' → logprob: -5.90133810043335
    4. 'w' → logprob: -8.276338577270508
    5. '   ' → logprob: -9.526338577270508
    6. '	word' → logprob: -10.276338577270508
    7. ' Word' → logprob: -11.026338577270508
    8. '(word' → logprob: -11.151338577270508
    9. 'class' → logprob: -11.276338577270508
    10. '_word' → logprob: -11.401338577270508

Token 149: ' starts' (ID: 13217)
  Prédit: ' starts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starts' → logprob: -0.41033440828323364
    2. 'starts' → logprob: -1.7853343486785889
    3. ' capital' → logprob: -2.285334348678589
    4. 'capital' → logprob: -3.285334348678589
    5. ' is' → logprob: -4.285334587097168
    6. 'startswith' → logprob: -5.535334587097168
    7. 'is' → logprob: -6.035334587097168
    8. 'Starts' → logprob: -6.285334587097168
    9. ' begins' → logprob: -6.535334587097168
    10. 'starting' → logprob: -6.660334587097168

Token 150: ' uppercase' (ID: 79050)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.20154500007629395
    2. ' with' → logprob: -1.701545000076294
    3. '   ' → logprob: -9.951544761657715
    4. 'With' → logprob: -9.951544761657715
    5. 'uppercase' → logprob: -11.451544761657715
    6. ' ' → logprob: -11.826544761657715
    7. ' uppercase' → logprob: -12.076544761657715
    8. '	with' → logprob: -12.701544761657715
    9. 'A' → logprob: -13.451544761657715
    10. 'in' → logprob: -13.826544761657715

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.48978152871131897
    2. '   ' → logprob: -1.2397814989089966
    3. ' and' → logprob: -2.739781618118286
    4. ')' → logprob: -5.239781379699707
    5. '.' → logprob: -5.739781379699707
    6. ' with' → logprob: -5.989781379699707
    7. ' (' → logprob: -6.114781379699707
    8. '       ' → logprob: -6.239781379699707
    9. 'and' → logprob: -6.239781379699707
    10. '"""' → logprob: -6.239781379699707

Token 152: ' concaten' (ID: 121942)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.7250375151634216
    2. 'no' → logprob: -0.7250375151634216
    3. 'and' → logprob: -4.225037574768066
    4. ' and' → logprob: -5.350037574768066
    5. '   ' → logprob: -5.600037574768066
    6. 'rest' → logprob: -6.100037574768066
    7. 'with' → logprob: -6.225037574768066
    8. ' rest' → logprob: -6.225037574768066
    9. 'without' → logprob: -6.975037574768066
    10. ' with' → logprob: -8.350037574768066

Token 153: 'ated' (ID: 780)
  Prédit: 'ated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.014405123889446259
    2. 'ates' → logprob: -4.264405250549316
    3. 'ating' → logprob: -8.764405250549316
    4. 'ate' → logprob: -9.639405250549316
    5. 'a' → logprob: -11.764405250549316
    6. '```' → logprob: -12.014405250549316
    7. 'at' → logprob: -12.764405250549316
    8. '   ' → logprob: -13.764405250549316
    9. ' at' → logprob: -14.014405250549316
    10. 'aten' → logprob: -14.139405250549316

Token 154: '."""
' (ID: 33044)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.3535937964916229
    2. ' without' → logprob: -1.8535938262939453
    3. ',' → logprob: -2.7285938262939453
    4. 'without' → logprob: -3.3535938262939453
    5. '""' → logprob: -4.228593826293945
    6. 'with' → logprob: -4.853593826293945
    7. '```' → logprob: -5.228593826293945
    8. ' with' → logprob: -5.853593826293945
    9. '   ' → logprob: -5.978593826293945
    10. '.' → logprob: -6.353593826293945

Token 155: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05693787336349487
    2. '   ' → logprob: -3.1819379329681396
    3. '    
' → logprob: -4.9319376945495605
    4. '    ' → logprob: -6.4319376945495605
    5. '' → logprob: -6.4319376945495605
    6. ' 
' → logprob: -6.6819376945495605
    7. '\n' → logprob: -7.5569376945495605
    8. 'def' → logprob: -7.5569376945495605
    9. ' def' → logprob: -8.556938171386719
    10. '
' → logprob: -8.681938171386719

Token 156: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.38735830783843994
    2. 'def' (adapté à ' def') → logprob: -1.13735830783844
    3. '   ' → logprob: -7.63735818862915
    4. '	def' → logprob: -13.262358665466309
    5. '    ' → logprob: -13.637358665466309
    6. ' ' → logprob: -14.012358665466309
    7. '
' → logprob: -14.262358665466309
    8. ' _' → logprob: -15.512358665466309
    9. 'import' → logprob: -16.137357711791992
    10. ' indentation' → logprob: -16.762357711791992

Token 157: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12757395207881927
    2. 'to' → logprob: -2.1275739669799805
    3. ' def' → logprob: -7.3775739669799805
    4. '_to' → logprob: -11.25257396697998
    5. 'def' → logprob: -12.00257396697998
    6. ' ' → logprob: -14.62757396697998
    7. ' _' → logprob: -15.12757396697998
    8. '	to' → logprob: -15.37757396697998
    9. '   ' → logprob: -15.62757396697998
    10. '_' → logprob: -16.502573013305664

Token 158: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -6.034592388459714e-06
    2. '_' → logprob: -12.125005722045898
    3. '_word' → logprob: -15.375005722045898
    4. '_to' → logprob: -15.875005722045898
    5. '_w' → logprob: -16.5000057220459
    6. ' _' → logprob: -16.8750057220459
    7. '_tokens' → logprob: -17.6250057220459
    8. ')_' → logprob: -17.7500057220459
    9. '_bytes' → logprob: -17.8750057220459
    10. '_parts' → logprob: -18.6250057220459

Token 159: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036763211246579885
    2. '(' → logprob: -5.628676414489746
    3. ' (' → logprob: -9.878676414489746
    4. '(
' → logprob: -10.753676414489746
    5. '(s' → logprob: -12.878676414489746
    6. '(

' → logprob: -14.878676414489746
    7. 'self' → logprob: -15.878676414489746
    8. '   ' → logprob: -16.00367546081543
    9. ' ' → logprob: -16.00367546081543
    10. '(sel' → logprob: -16.25367546081543

Token 160: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2162671983242035
    2. '(self' → logprob: -1.7162672281265259
    3. '(
' → logprob: -4.841267108917236
    4. ' (' → logprob: -5.216267108917236
    5. ':' → logprob: -8.466267585754395
    6. ')' → logprob: -8.591267585754395
    7. '):' → logprob: -8.716267585754395
    8. 'self' → logprob: -8.716267585754395
    9. '   ' → logprob: -9.216267585754395
    10. '('' → logprob: -9.466267585754395

Token 161: ' identifier' (ID: 24577)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0024787187576294
    2. 'self' → logprob: -1.1274787187576294
    3. ' identifier' → logprob: -1.7524787187576294
    4. 'identifier' → logprob: -2.00247859954834
    5. '   ' → logprob: -7.62747859954834
    6. '       ' → logprob: -8.50247859954834
    7. ' ' → logprob: -10.00247859954834
    8. 's' → logprob: -11.00247859954834
    9. '_identifier' → logprob: -11.25247859954834
    10. '```' → logprob: -11.50247859954834

Token 162: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0801575183868408
    2. 'self' → logprob: -1.3301575183868408
    3. '):' → logprob: -2.330157518386841
    4. '   ' → logprob: -2.330157518386841
    5. ')' → logprob: -2.705157518386841
    6. ' self' → logprob: -3.080157518386841
    7. '       ' → logprob: -3.205157518386841
    8. '(self' → logprob: -3.455157518386841
    9. ' :' → logprob: -5.455157279968262
    10. '):
' → logprob: -5.705157279968262

Token 163: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.35015013813972473
    2. ' str' → logprob: -1.2251501083374023
    3. '   ' → logprob: -6.850150108337402
    4. ')' → logprob: -7.725150108337402
    5. ' ' → logprob: -9.475150108337402
    6. '       ' → logprob: -10.100150108337402
    7. '[str' → logprob: -11.475150108337402
    8. ':str' → logprob: -11.600150108337402
    9. '    ' → logprob: -11.725150108337402
    10. '  ' → logprob: -11.975150108337402

Token 164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7002048492431641
    2. '):' → logprob: -0.7002048492431641
    3. '):
' → logprob: -5.075204849243164
    4. ' ):' → logprob: -8.325204849243164
    5. '   ' → logprob: -8.700204849243164
    6. ' )' → logprob: -8.950204849243164
    7. '):
' → logprob: -9.200204849243164
    8. ')->' → logprob: -9.575204849243164
    9. ':' → logprob: -10.825204849243164
    10. '       ' → logprob: -10.950204849243164

Token 165: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3178066909313202
    2. ')' → logprob: -1.9428067207336426
    3. '):' → logprob: -2.1928067207336426
    4. ' ->' → logprob: -5.067806720733643
    5. ')->' → logprob: -5.567806720733643
    6. '->' → logprob: -5.692806720733643
    7. ' :' → logprob: -5.942806720733643
    8. '):
' → logprob: -7.442806720733643
    9. '   ' → logprob: -8.317806243896484
    10. ':return' → logprob: -9.317806243896484

Token 166: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.08133591711521149
    2. ' list' → logprob: -2.70633602142334
    3. 're' → logprob: -4.58133602142334
    4. ' re' → logprob: -8.08133602142334
    5. '   ' → logprob: -8.45633602142334
    6. ' ' → logprob: -8.58133602142334
    7. 'str' → logprob: -8.83133602142334
    8. '[list' → logprob: -9.33133602142334
    9. '       ' → logprob: -10.08133602142334
    10. '[str' → logprob: -10.58133602142334

Token 167: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6936954855918884
    2. '[str' → logprob: -0.6936954855918884
    3. '[
' → logprob: -7.693695545196533
    4. '[`' → logprob: -10.568695068359375
    5. '["' → logprob: -10.818695068359375
    6. '['' → logprob: -11.443695068359375
    7. '[]' → logprob: -11.818695068359375
    8. ' [' → logprob: -11.943695068359375
    9. '```' → logprob: -12.318695068359375
    10. '[:]' → logprob: -12.693695068359375

Token 168: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.019073285162448883
    2. ']:
' → logprob: -4.019073486328125
    3. ']:
' → logprob: -8.019073486328125
    4. ']' → logprob: -8.519073486328125
    5. '):' → logprob: -8.644073486328125
    6. ':' → logprob: -9.644073486328125
    7. '"]:' → logprob: -9.644073486328125
    8. '']:' → logprob: -10.394073486328125
    9. '):
' → logprob: -10.769073486328125
    10. '[' → logprob: -12.019073486328125

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004247163888067007
    2. ' words' → logprob: -8.8754243850708
    3. '        
' → logprob: -9.2504243850708
    4. ' tokens' → logprob: -10.3754243850708
    5. '   ' → logprob: -10.7504243850708
    6. '[' → logprob: -10.7504243850708
    7. ' return' → logprob: -11.0004243850708
    8. 'tokens' → logprob: -11.1254243850708
    9. '      ' → logprob: -11.5004243850708
    10. 'return' → logprob: -11.6254243850708

Token 170: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33737435936927795
    2. 'return' → logprob: -1.8373743295669556
    3. ' return' → logprob: -2.837374448776245
    4. ' words' → logprob: -3.337374448776245
    5. 'words' → logprob: -3.587374448776245
    6. 'matches' → logprob: -6.587374210357666
    7. 'import' → logprob: -6.837374210357666
    8. 'if' (adapté à ' if') → logprob: -7.212374210357666
    9. ' if' → logprob: -7.462374210357666
    10. ' #' → logprob: -7.962374210357666

Token 171: ' '_'' (ID: 86115)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004261346068233252
    2. 'not' → logprob: -5.504261493682861
    3. ' ' → logprob: -10.004261016845703
    4. ' identifier' → logprob: -10.004261016845703
    5. 'identifier' → logprob: -10.129261016845703
    6. '   ' → logprob: -10.879261016845703
    7. '  ' → logprob: -11.254261016845703
    8. '	not' → logprob: -11.254261016845703
    9. ' '' → logprob: -14.129261016845703
    10. ' re' → logprob: -14.254261016845703

Token 172: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08055347204208374
    2. 'in' → logprob: -2.5805535316467285
    3. 'not' → logprob: -7.0805535316467285
    4. ' not' → logprob: -7.2055535316467285
    5. 'n' → logprob: -10.33055305480957
    6. '  ' → logprob: -11.33055305480957
    7. ' ' → logprob: -11.83055305480957
    8. '   ' → logprob: -12.20555305480957
    9. '	in' → logprob: -12.20555305480957
    10. '.' → logprob: -12.45555305480957

Token 173: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.004079589620232582
    2. ' identifier' → logprob: -5.504079818725586
    3. '_identifier' → logprob: -14.504079818725586
    4. '(identifier' → logprob: -14.879079818725586
    5. '   ' → logprob: -17.004079818725586
    6. 'Identifier' → logprob: -17.129079818725586
    7. ' ' → logprob: -17.129079818725586
    8. '.identifier' → logprob: -17.254079818725586
    9. 'ident' → logprob: -17.629079818725586
    10. 'identity' → logprob: -18.629079818725586

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015702683478593826
    2. ' or' → logprob: -4.640702724456787
    3. ':
' → logprob: -5.390702724456787
    4. ' :' → logprob: -6.640702724456787
    5. ' and' → logprob: -10.515702247619629
    6. '):' → logprob: -11.265702247619629
    7. ' :
' → logprob: -11.390702247619629
    8. '       ' → logprob: -13.140702247619629
    9. 'or' → logprob: -13.140702247619629
    10. ':return' → logprob: -13.265702247619629

Token 175: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6840067505836487
    2. '           ' → logprob: -0.8090067505836487
    3. ' or' → logprob: -3.934006690979004
    4. '):' → logprob: -4.684006690979004
    5. '       ' → logprob: -5.559006690979004
    6. ':
' → logprob: -5.684006690979004
    7. ',' → logprob: -5.684006690979004
    8. ' :' → logprob: -5.809006690979004
    9. ' and' → logprob: -6.184006690979004
    10. '.' → logprob: -6.934006690979004

Token 176: ' #' (ID: 1069)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.38523998856544495
    2. 'return' → logprob: -2.260240077972412
    3. 'identifier' → logprob: -2.260240077972412
    4. ' words' → logprob: -3.635240077972412
    5. 'parts' → logprob: -3.635240077972412
    6. '       ' → logprob: -3.760240077972412
    7. 'raise' → logprob: -4.135240077972412
    8. '   ' → logprob: -4.635240077972412
    9. '#' (adapté à ' #') → logprob: -6.135240077972412
    10. ' raise' → logprob: -6.135240077972412

Token 177: ' underscore' (ID: 155582)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.10902141779661179
    2. 'parts' → logprob: -2.8590214252471924
    3. 'return' → logprob: -3.8590214252471924
    4. '#' → logprob: -4.734021186828613
    5. '       ' → logprob: -5.109021186828613
    6. ' words' → logprob: -5.359021186828613
    7. 'raise' → logprob: -5.984021186828613
    8. 'identifier' → logprob: -6.859021186828613
    9. '   ' → logprob: -7.859021186828613
    10. 'split' → logprob: -8.234021186828613

Token 178: ' separated' (ID: 33930)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.518715739250183
    2. '_split' → logprob: -1.518715739250183
    3. 'spl' → logprob: -2.1437158584594727
    4. 's' → logprob: -2.2687158584594727
    5. 'se' → logprob: -2.3937158584594727
    6. 'words' → logprob: -2.5187158584594727
    7. '_words' → logprob: -3.3937158584594727
    8. 'tokens' → logprob: -3.3937158584594727
    9. '_tokens' → logprob: -4.143715858459473
    10. '   ' → logprob: -4.643715858459473

Token 179: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.920744776725769
    2. ' words' → logprob: -1.295744776725769
    3. '<|end|>' → logprob: -2.6707448959350586
    4. '_words' → logprob: -3.5457448959350586
    5. '.split' → logprob: -3.6707448959350586
    6. 'words' → logprob: -3.6707448959350586
    7. '           ' → logprob: -3.6707448959350586
    8. '.words' → logprob: -3.9207448959350586
    9. ' or' → logprob: -4.170744895935059
    10. '<|end|>' → logprob: -4.170744895935059

Token 180: ' just' (ID: 1327)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.4654045104980469
    2. ' parts' → logprob: -1.5904045104980469
    3. 'words' → logprob: -2.840404510498047
    4. ' return' → logprob: -3.215404510498047
    5. '       ' → logprob: -4.090404510498047
    6. 'parts' → logprob: -4.090404510498047
    7. 'return' → logprob: -4.215404510498047
    8. '           ' → logprob: -4.965404510498047
    9. ' identifier' → logprob: -5.465404510498047
    10. 'identifier' → logprob: -5.590404510498047

Token 181: ' split' (ID: 12648)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2519558668136597
    2. 'split' → logprob: -1.3769558668136597
    3. ' return' → logprob: -1.7519558668136597
    4. 'identifier' → logprob: -1.7519558668136597
    5. ' split' → logprob: -3.001955986022949
    6. ' words' → logprob: -3.626955986022949
    7. ' identifier' → logprob: -3.626955986022949
    8. 'words' → logprob: -5.751955986022949
    9. '   ' → logprob: -6.001955986022949
    10. '.split' → logprob: -6.876955986022949

Token 182: ',' (ID: 11)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.18503955006599426
    2. 'identifier' → logprob: -2.435039520263672
    3. '       ' → logprob: -3.185039520263672
    4. '(identifier' → logprob: -3.935039520263672
    5. '("_' → logprob: -4.810039520263672
    6. '_' → logprob: -5.560039520263672
    7. '_identifier' → logprob: -6.185039520263672
    8. '(' → logprob: -6.685039520263672
    9. ' identifier' → logprob: -6.685039520263672
    10. '('' → logprob: -7.685039520263672

Token 183: ' all' (ID: 722)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.7988409399986267
    2. 'words' → logprob: -1.5488409996032715
    3. ' return' → logprob: -2.0488409996032715
    4. 'return' → logprob: -2.0488409996032715
    5. '           ' → logprob: -3.1738409996032715
    6. '       ' → logprob: -3.6738409996032715
    7. '.words' → logprob: -5.5488409996032715
    8. '[' → logprob: -6.4238409996032715
    9. '_words' → logprob: -6.5488409996032715
    10. 'tokens' → logprob: -7.0488409996032715

Token 184: ' lower' (ID: 6931)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7054708003997803
    2. '=' → logprob: -0.8304708003997803
    3. 'lower' → logprob: -3.2054708003997803
    4. '_words' → logprob: -5.080471038818359
    5. '.lower' → logprob: -5.455471038818359
    6. '_lower' → logprob: -5.455471038818359
    7. '   ' → logprob: -5.955471038818359
    8. 'identifier' → logprob: -6.330471038818359
    9. '()' → logprob: -6.330471038818359
    10. 'words' → logprob: -6.955471038818359

Token 185: ' assumed' (ID: 37703)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016829879954457283
    2. 'case' → logprob: -4.266829967498779
    3. '<|end|>' → logprob: -6.641829967498779
    4. '().' → logprob: -7.891829967498779
    5. '()
' → logprob: -7.891829967498779
    6. '()]' → logprob: -9.391829490661621
    7. '())' → logprob: -9.766829490661621
    8. '();' → logprob: -9.766829490661621
    9. '()<' → logprob: -10.016829490661621
    10. '()-' → logprob: -10.141829490661621

Token 186: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0398434400558472
    2. '       ' → logprob: -1.2898434400558472
    3. 'identifier' → logprob: -1.2898434400558472
    4. '_identifier' → logprob: -4.414843559265137
    5. '.lower' → logprob: -4.414843559265137
    6. '(identifier' → logprob: -4.664843559265137
    7. ',' → logprob: -4.914843559265137
    8. '_lower' → logprob: -5.164843559265137
    9. 'lower' → logprob: -5.414843559265137
    10. '=' → logprob: -5.789843559265137

Token 187: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11038769781589508
    2. '           ' → logprob: -2.3603878021240234
    3. 'return' → logprob: -5.485387802124023
    4. ' words' → logprob: -6.860387802124023
    5. 'words' → logprob: -6.985387802124023
    6. ' return' → logprob: -7.110387802124023
    7. 'tokens' → logprob: -7.110387802124023
    8. '.words' → logprob: -7.985387802124023
    9. '        
' → logprob: -8.360387802124023
    10. '   ' → logprob: -8.485387802124023

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0579717643558979
    2. 'words' → logprob: -3.807971715927124
    3. '           ' → logprob: -3.932971715927124
    4. ' return' → logprob: -4.557971954345703
    5. '       ' → logprob: -5.682971954345703
    6. ' words' → logprob: -7.682971954345703
    7. '   ' → logprob: -9.432971954345703
    8. 'parts' → logprob: -10.057971954345703
    9. '[' → logprob: -10.932971954345703
    10. 'identifier' → logprob: -11.682971954345703

Token 189: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.13783790171146393
    2. '[' → logprob: -2.6378378868103027
    3. ' [' → logprob: -3.5128378868103027
    4. ' identifier' → logprob: -3.6378378868103027
    5. '[i' → logprob: -7.887837886810303
    6. '   ' → logprob: -7.887837886810303
    7. '[id' → logprob: -9.512838363647461
    8. '[index' → logprob: -9.637838363647461
    9. ' ' → logprob: -10.137838363647461
    10. '(identifier' → logprob: -10.137838363647461

Token 190: '.lower' (ID: 41290)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.02549075148999691
    2. '.lower' → logprob: -3.7754907608032227
    3. '.' → logprob: -6.150490760803223
    4. ' .' → logprob: -9.900490760803223
    5. '.replace' → logprob: -9.900490760803223
    6. '.rstrip' → logprob: -12.775490760803223
    7. '.strip' → logprob: -13.025490760803223
    8. '       ' → logprob: -13.775490760803223
    9. '.upper' → logprob: -14.150490760803223
    10. 'split' → logprob: -14.400490760803223

Token 191: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12697356939315796
    2. '()' → logprob: -2.1269736289978027
    3. '().'' → logprob: -11.001973152160645
    4. '(' → logprob: -11.251973152160645
    5. ' ()' → logprob: -12.126973152160645
    6. ' ().' → logprob: -13.501973152160645
    7. '()['' → logprob: -13.501973152160645
    8. '().__' → logprob: -13.501973152160645
    9. 'split' → logprob: -13.626973152160645
    10. '()

' → logprob: -14.001973152160645

Token 192: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0280383548888494e-06
    2. ' split' → logprob: -14.000000953674316
    3. 'strip' → logprob: -15.875000953674316
    4. 'spl' → logprob: -18.375001907348633
    5. '(split' → logprob: -18.875001907348633
    6. 'plit' → logprob: -19.250001907348633
    7. 'replace' → logprob: -19.625001907348633
    8. 'rstrip' → logprob: -20.250001907348633
    9. '.split' → logprob: -20.750001907348633
    10. '_split' → logprob: -21.250001907348633

Token 193: '('_' (ID: 38248)
  Prédit: '('_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.0005213391850702465
    2. '("_' → logprob: -7.875521183013916
    3. '(' → logprob: -9.000521659851074
    4. '('' → logprob: -11.000521659851074
    5. '('__' → logprob: -15.000521659851074
    6. '(',' → logprob: -15.500521659851074
    7. '('.')' → logprob: -15.500521659851074
    8. ' ('' → logprob: -16.125520706176758
    9. '_' → logprob: -16.625520706176758
    10. ''_' → logprob: -16.875520706176758

Token 194: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043460913002491
    2. '')' → logprob: -5.504345893859863
    3. ')
' → logprob: -8.629345893859863
    4. ' )' → logprob: -9.629345893859863
    5. '")' → logprob: -11.754345893859863
    6. '       ' → logprob: -13.004345893859863
    7. '')
' → logprob: -13.129345893859863
    8. '   ' → logprob: -13.379345893859863
    9. ']' → logprob: -13.629345893859863
    10. ' ' → logprob: -13.754345893859863

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00644298829138279
    2. '        
' → logprob: -5.256443023681641
    3. '
' → logprob: -7.131443023681641
    4. '  
' → logprob: -9.38144302368164
    5. 'else' → logprob: -9.50644302368164
    6. '    
' → logprob: -9.75644302368164
    7. '   ' → logprob: -10.75644302368164
    8. ' else' → logprob: -10.88144302368164
    9. 'return' → logprob: -11.00644302368164
    10. '      ' → logprob: -11.25644302368164

Token 196: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02667226456105709
    2. 'return' → logprob: -4.15167236328125
    3. 'tokens' → logprob: -5.77667236328125
    4. '        
' → logprob: -6.27667236328125
    5. 'else' (adapté à ' else') → logprob: -6.40167236328125
    6. 'import' → logprob: -6.77667236328125
    7. 'words' → logprob: -7.02667236328125
    8. 'result' → logprob: -7.52667236328125
    9. 'match' → logprob: -8.52667236328125
    10. '
' → logprob: -8.52667236328125

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15128953754901886
    2. '       ' → logprob: -2.526289463043213
    3. ':
' → logprob: -2.901289463043213
    4. '           ' → logprob: -5.776289463043213
    5. ',' → logprob: -6.651289463043213
    6. ' :' → logprob: -8.526289939880371
    7. '[' → logprob: -8.776289939880371
    8. '        
' → logprob: -9.276289939880371
    9. '):' → logprob: -9.526289939880371
    10. '        ' → logprob: -9.901289939880371

Token 198: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27914854884147644
    2. 'return' → logprob: -1.5291485786437988
    3. ' return' → logprob: -4.154148578643799
    4. 're' → logprob: -5.279148578643799
    5. '           ' → logprob: -5.904148578643799
    6. 'words' → logprob: -6.779148578643799
    7. 'matches' → logprob: -7.779148578643799
    8. ' words' → logprob: -7.904148578643799
    9. 'tokens' → logprob: -8.27914810180664
    10. '   ' → logprob: -8.27914810180664

Token 199: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6419637203216553
    2. 'words' → logprob: -1.0169637203216553
    3. 'matches' → logprob: -2.8919637203216553
    4. '#' (adapté à ' #') → logprob: -3.6419637203216553
    5. '       ' → logprob: -3.7669637203216553
    6. ' return' → logprob: -5.891963958740234
    7. ' words' → logprob: -6.391963958740234
    8. 'tokens' → logprob: -6.766963958740234
    9. '   ' → logprob: -7.516963958740234
    10. 'parts' → logprob: -7.516963958740234

Token 200: ' Mixed' (ID: 83351)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9825389385223389
    2. 'matches' → logprob: -1.4825389385223389
    3. '#' → logprob: -1.6075389385223389
    4. ' return' → logprob: -2.857538938522339
    5. 'words' → logprob: -2.857538938522339
    6. '       ' → logprob: -3.857538938522339
    7. ' words' → logprob: -3.982538938522339
    8. ' #' → logprob: -3.982538938522339
    9. ' matches' → logprob: -4.232539176940918
    10. 'tokens' → logprob: -5.732539176940918

Token 201: ' case' (ID: 1890)
  Prédit: 'Case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.001304522156715393
    2. 'case' → logprob: -7.251304626464844
    3. '_case' → logprob: -8.376304626464844
    4. 'r' → logprob: -9.751304626464844
    5. '(?' → logprob: -9.876304626464844
    6. 'CASE' → logprob: -10.126304626464844
    7. ' case' → logprob: -10.251304626464844
    8. '   ' → logprob: -10.376304626464844
    9. '[A' → logprob: -10.751304626464844
    10. '([' → logprob: -10.876304626464844

Token 202: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3249806761741638
    2. 'return' → logprob: -1.8249807357788086
    3. ' return' → logprob: -2.8249807357788086
    4. ' words' → logprob: -3.5749807357788086
    5. 'words' → logprob: -4.574980735778809
    6. '
' → logprob: -4.824980735778809
    7. '        
' → logprob: -5.699980735778809
    8. ' tokens' → logprob: -6.699980735778809
    9. 'tokens' → logprob: -6.824980735778809
    10. '           ' → logprob: -6.949980735778809

Token 203: ' split' (ID: 12648)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.9823662042617798
    2. 'return' → logprob: -1.3573662042617798
    3. ' return' → logprob: -1.3573662042617798
    4. ' re' → logprob: -2.9823660850524902
    5. '       ' → logprob: -3.4823660850524902
    6. ' words' → logprob: -4.23236608505249
    7. '           ' → logprob: -4.98236608505249
    8. 'words' → logprob: -5.98236608505249
    9. ' tokens' → logprob: -6.73236608505249
    10. 'matches' → logprob: -6.85736608505249

Token 204: ' before' (ID: 2254)
  Prédit: '(?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(?' → logprob: -0.7389624714851379
    2. '(r' → logprob: -1.1139624118804932
    3. 'r' → logprob: -1.7389624118804932
    4. 're' → logprob: -4.988962650299072
    5. '       ' → logprob: -5.238962650299072
    6. ' r' → logprob: -5.988962650299072
    7. '   ' → logprob: -7.238962650299072
    8. '(' → logprob: -7.488962650299072
    9. '=r' → logprob: -7.738962650299072
    10. '('' → logprob: -7.738962650299072

Token 205: ' each' (ID: 2454)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.005811720620840788
    2. 'r' → logprob: -5.50581169128418
    3. 'A' → logprob: -7.13081169128418
    4. ' uppercase' → logprob: -7.88081169128418
    5. '[r' → logprob: -8.25581169128418
    6. 'uppercase' → logprob: -8.88081169128418
    7. '[' → logprob: -9.50581169128418
    8. '(?' → logprob: -10.88081169128418
    9. '([' → logprob: -11.25581169128418
    10. ' r' → logprob: -11.25581169128418

Token 206: ' uppercase' (ID: 79050)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0015406885650008917
    2. ' uppercase' → logprob: -7.126540660858154
    3. '[' → logprob: -8.501541137695312
    4. '(?' → logprob: -8.751541137695312
    5. 'A' → logprob: -9.126541137695312
    6. 'uppercase' → logprob: -9.376541137695312
    7. ' [' → logprob: -9.501541137695312
    8. '([' → logprob: -9.626541137695312
    9. ' capital' → logprob: -10.751541137695312
    10. 'capital' → logprob: -12.126541137695312

Token 207: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.24994973838329315
    2. 'letter' → logprob: -1.8749496936798096
    3. '(?' → logprob: -3.1249496936798096
    4. '[A' → logprob: -4.374949932098389
    5. '[' → logprob: -5.249949932098389
    6. '([' → logprob: -6.624949932098389
    7. '[a' → logprob: -6.749949932098389
    8. 'r' → logprob: -6.874949932098389
    9. ')' → logprob: -7.624949932098389
    10. '(letter' → logprob: -7.874949932098389

Token 208: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035005487501621246
    2. ',' → logprob: -4.160005569458008
    3. '(?' → logprob: -4.535005569458008
    4. '           ' → logprob: -5.910005569458008
    5. 'import' → logprob: -6.285005569458008
    6. '[' → logprob: -7.660005569458008
    7. '(' → logprob: -7.910005569458008
    8. 'return' → logprob: -7.910005569458008
    9. 'r' → logprob: -7.910005569458008
    10. 're' → logprob: -8.160005569458008

Token 209: ' preserving' (ID: 74564)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.11240913718938828
    2. ' words' → logprob: -2.9874091148376465
    3. '       ' → logprob: -3.9874091148376465
    4. '           ' → logprob: -3.9874091148376465
    5. 'result' → logprob: -5.2374091148376465
    6. 'tokens' → logprob: -5.4874091148376465
    7. 'return' → logprob: -5.8624091148376465
    8. 'r' → logprob: -6.1124091148376465
    9. 'except' → logprob: -6.6124091148376465
    10. 're' → logprob: -7.8624091148376465

Token 210: ' acr' (ID: 59978)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8483322858810425
    2. 'the' → logprob: -1.0983322858810425
    3. 'case' → logprob: -2.598332405090332
    4. ' them' → logprob: -3.848332405090332
    5. ' case' → logprob: -3.973332405090332
    6. ' uppercase' → logprob: -3.973332405090332
    7. ' any' → logprob: -4.473332405090332
    8. 'uppercase' → logprob: -4.848332405090332
    9. ' word' → logprob: -4.973332405090332
    10. 'positions' → logprob: -5.098332405090332

Token 211: 'onyms' (ID: 62218)
  Prédit: 'onym'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'onym' → logprob: -0.007720675319433212
    2. 'onyms' → logprob: -4.882720470428467
    3. 'on' → logprob: -10.007720947265625
    4. 'ony' → logprob: -10.632720947265625
    5. '[' → logprob: -11.132720947265625
    6. '[a' → logprob: -11.507720947265625
    7. '[A' → logprob: -11.632720947265625
    8. 'onyme' → logprob: -12.007720947265625
    9. '```' → logprob: -13.382720947265625
    10. '[^' → logprob: -14.507720947265625

Token 212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10113820433616638
    2. ',' → logprob: -2.601138114929199
    3. '           ' → logprob: -5.601138114929199
    4. '.' → logprob: -5.976138114929199
    5. '[' → logprob: -6.351138114929199
    6. 'import' → logprob: -6.351138114929199
    7. ' and' → logprob: -6.726138114929199
    8. ' =' → logprob: -6.726138114929199
    9. '   ' → logprob: -6.851138114929199
    10. '[
' → logprob: -6.851138114929199

Token 213: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004387510009109974
    2. '           ' → logprob: -6.879387378692627
    3. 'return' → logprob: -7.129387378692627
    4. 're' → logprob: -8.004387855529785
    5. ' return' → logprob: -8.004387855529785
    6. ' tokens' → logprob: -8.004387855529785
    7. 'r' → logprob: -8.379387855529785
    8. 'tokens' → logprob: -8.504387855529785
    9. ' words' → logprob: -8.754387855529785
    10. 'import' → logprob: -9.004387855529785

Token 214: ' parts' (ID: 7881)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8285278081893921
    2. '       ' → logprob: -1.703527808189392
    3. 'matches' → logprob: -1.703527808189392
    4. 'words' → logprob: -1.828527808189392
    5. 'parts' (adapté à ' parts') → logprob: -3.8285279273986816
    6. 'tokens' → logprob: -5.203527927398682
    7. ' return' → logprob: -5.328527927398682
    8. ' words' → logprob: -5.953527927398682
    9. 'pattern' → logprob: -6.828527927398682
    10. ' matches' → logprob: -6.953527927398682

Token 215: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059718117117881775
    2. '=' → logprob: -5.130971908569336
    3. '=re' → logprob: -10.255971908569336
    4. '=[]' → logprob: -12.380971908569336
    5. ' ' → logprob: -13.380971908569336
    6. '	' → logprob: -14.130971908569336
    7. ' =[' → logprob: -14.755971908569336
    8. '=[]
' → logprob: -15.380971908569336
    9. ',' → logprob: -15.630971908569336
    10. '   ' → logprob: -15.755971908569336

Token 216: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.04862801730632782
    2. ' re' → logprob: -3.048628091812134
    3. '	re' → logprob: -10.798627853393555
    4. '   ' → logprob: -12.048627853393555
    5. '[' → logprob: -12.423627853393555
    6. '[]
' → logprob: -12.548627853393555
    7. '[]' → logprob: -12.798627853393555
    8. ' ' → logprob: -13.173627853393555
    9. ' [' → logprob: -14.173627853393555
    10. '(re' → logprob: -15.048627853393555

Token 217: '.findall' (ID: 95997)
  Prédit: '.findall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.findall' → logprob: -0.00020056030189152807
    2. '.split' → logprob: -8.875200271606445
    3. '.find' → logprob: -9.875200271606445
    4. 'find' → logprob: -12.000200271606445
    5. '.compile' → logprob: -13.000200271606445
    6. '.' → logprob: -14.750200271606445
    7. '   ' → logprob: -15.625200271606445
    8. 'split' → logprob: -15.750200271606445
    9. '```' → logprob: -17.500200271606445
    10. 'spl' → logprob: -18.000200271606445

Token 218: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0053070466965436935
    2. 'r' → logprob: -5.630307197570801
    3. '('[' → logprob: -6.505307197570801
    4. '('' → logprob: -9.0053071975708
    5. '[r' → logprob: -10.0053071975708
    6. ''(' → logprob: -10.3803071975708
    7. '   ' → logprob: -12.8803071975708
    8. '('(' → logprob: -12.8803071975708
    9. ' r' → logprob: -13.6303071975708
    10. '(?:' → logprob: -13.7553071975708

Token 219: ''[' (ID: 187291)
  Prédit: ''['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''[' → logprob: -0.1835324764251709
    2. 'r' → logprob: -1.933532476425171
    3. ''(' → logprob: -3.933532476425171
    4. '[A' → logprob: -6.68353271484375
    5. ''' → logprob: -6.80853271484375
    6. ''.' → logprob: -7.80853271484375
    7. ' r' → logprob: -8.30853271484375
    8. '[r' → logprob: -8.43353271484375
    9. '(r' → logprob: -8.80853271484375
    10. '(?:' → logprob: -10.05853271484375

Token 220: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06110871955752373
    2. '[A' → logprob: -3.1861088275909424
    3. ''[' → logprob: -4.186108589172363
    4. ''A' → logprob: -6.811108589172363
    5. 'r' → logprob: -7.186108589172363
    6. ''(' → logprob: -8.186108589172363
    7. '(?:' → logprob: -8.311108589172363
    8. ''' → logprob: -8.561108589172363
    9. '(A' → logprob: -9.811108589172363
    10. '([' → logprob: -10.061108589172363

Token 221: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.00010616567305987701
    2. 'Z' → logprob: -9.375105857849121
    3. '-Za' → logprob: -11.125105857849121
    4. 'A' → logprob: -12.625105857849121
    5. '[A' → logprob: -12.875105857849121
    6. '-' → logprob: -15.000105857849121
    7. '_Z' → logprob: -15.875105857849121
    8. '[' → logprob: -16.875106811523438
    9. '(Z' → logprob: -17.375106811523438
    10. '(?:' → logprob: -17.375106811523438

Token 222: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.4102085828781128
    2. '][' → logprob: -1.4102085828781128
    3. '[A' → logprob: -3.1602087020874023
    4. '](' → logprob: -3.5352087020874023
    5. '(?:' → logprob: -4.660208702087402
    6. ']' → logprob: -5.035208702087402
    7. '[' → logprob: -6.410208702087402
    8. ']{' → logprob: -6.660208702087402
    9. 'A' → logprob: -7.160208702087402
    10. '?[' → logprob: -8.035208702087402

Token 223: '?[' (ID: 105379)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.43991291522979736
    2. '(?:' → logprob: -2.064912796020508
    3. '[' → logprob: -2.189912796020508
    4. '?[' → logprob: -2.439912796020508
    5. '[a' → logprob: -3.814912796020508
    6. '+[' → logprob: -5.564912796020508
    7. '{' → logprob: -6.439912796020508
    8. '+' → logprob: -7.689912796020508
    9. '[^' → logprob: -7.814912796020508
    10. '(?' → logprob: -7.939912796020508

Token 224: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005257833749055862
    2. 'A' → logprob: -5.255257606506348
    3. '[a' → logprob: -11.130257606506348
    4. '[A' → logprob: -11.630257606506348
    5. ']+' → logprob: -15.505257606506348
    6. ' a' → logprob: -15.505257606506348
    7. '0' → logprob: -16.505258560180664
    8. '^' → logprob: -17.130258560180664
    9. '(a' → logprob: -17.505258560180664
    10. '_a' → logprob: -17.505258560180664

Token 225: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.0015054593095555902
    2. '[a' → logprob: -7.126505374908447
    3. '-Za' → logprob: -8.001505851745605
    4. '-Z' → logprob: -8.376505851745605
    5. '-' → logprob: -9.126505851745605
    6. '[z' → logprob: -11.626505851745605
    7. 'a' → logprob: -12.001505851745605
    8. '[b' → logprob: -12.376505851745605
    9. 'z' → logprob: -12.376505851745605
    10. '[' → logprob: -13.126505851745605

Token 226: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.030530208721756935
    2. '0' → logprob: -3.6555302143096924
    3. ']*' → logprob: -5.905529975891113
    4. '+' → logprob: -6.780529975891113
    5. '*' → logprob: -9.030529975891113
    6. ']*)' → logprob: -9.030529975891113
    7. 'a' → logprob: -9.655529975891113
    8. 'A' → logprob: -11.030529975891113
    9. '[' → logprob: -11.405529975891113
    10. '[A' → logprob: -11.780529975891113

Token 227: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -2.856408536899835e-05
    2. '|\' → logprob: -11.375028610229492
    3. '[A' → logprob: -11.500028610229492
    4. 'r' → logprob: -13.000028610229492
    5. '|'' → logprob: -13.250028610229492
    6. ']|' → logprob: -13.750028610229492
    7. '|
' → logprob: -15.000028610229492
    8. '[' → logprob: -15.250028610229492
    9. '[r' → logprob: -15.375028610229492
    10. '',' → logprob: -15.625028610229492

Token 228: '[' (ID: 58)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.002220318652689457
    2. '[' → logprob: -6.127220153808594
    3. 'r' → logprob: -10.752220153808594
    4. '[r' → logprob: -12.127220153808594
    5. ''[' → logprob: -12.502220153808594
    6. '[I' → logprob: -13.627220153808594
    7. '[a' → logprob: -13.877220153808594
    8. '[T' → logprob: -14.127220153808594
    9. '(?:' → logprob: -14.627220153808594
    10. ' [' → logprob: -15.127220153808594

Token 229: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4974866644479334e-05
    2. '0' → logprob: -11.125015258789062
    3. '[A' → logprob: -16.625015258789062
    4. ' A' → logprob: -19.125015258789062
    5. 'a' → logprob: -19.500015258789062
    6. '[' → logprob: -19.625015258789062
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -19.750015258789062
    8. ''A' → logprob: -20.375015258789062
    9. '2' → logprob: -21.000015258789062
    10. '(A' → logprob: -21.000015258789062

Token 230: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.0011762974318116903
    2. 'Z' → logprob: -6.751176357269287
    3. 'A' → logprob: -12.876175880432129
    4. '-z' → logprob: -14.001175880432129
    5. '[A' → logprob: -14.126175880432129
    6. '_Z' → logprob: -14.876175880432129
    7. ']+' → logprob: -15.001175880432129
    8. '-' → logprob: -15.126175880432129
    9. '-Za' → logprob: -15.126175880432129
    10. '[' → logprob: -15.501175880432129

Token 231: ']+' (ID: 15344)
  Prédit: '+('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+(' → logprob: -0.42813682556152344
    2. '{' → logprob: -1.1781368255615234
    3. '(' → logprob: -4.053136825561523
    4. ']+' → logprob: -4.803136825561523
    5. '(?:' → logprob: -5.178136825561523
    6. '(?' → logprob: -5.178136825561523
    7. '+' → logprob: -6.053136825561523
    8. '*(' → logprob: -7.303136825561523
    9. ']{' → logprob: -8.178136825561523
    10. '[' → logprob: -9.553136825561523

Token 232: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0430738627910614
    2. '(?' → logprob: -3.168073892593384
    3. '(?:' → logprob: -10.418073654174805
    4. '|' → logprob: -11.168073654174805
    5. '(?)' → logprob: -11.543073654174805
    6. '[' → logprob: -12.043073654174805
    7. ''(' → logprob: -12.543073654174805
    8. '```' → logprob: -12.793073654174805
    9. ' (' → logprob: -12.918073654174805
    10. '(r' → logprob: -13.918073654174805

Token 233: '?!' (ID: 25309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02630714885890484
    2. '(?' → logprob: -3.6513071060180664
    3. '?(' → logprob: -12.901307106018066
    4. '(?)' → logprob: -13.776307106018066
    5. '(?:' → logprob: -13.901307106018066
    6. '*(' → logprob: -14.526307106018066
    7. '?!' → logprob: -14.651307106018066
    8. '[' → logprob: -15.026307106018066
    9. ')(' → logprob: -15.026307106018066
    10. '?' → logprob: -15.151307106018066

Token 234: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7324895262718201
    2. '[A' → logprob: -1.2324895858764648
    3. '[a' → logprob: -1.4824895858764648
    4. ')[' → logprob: -8.357489585876465
    5. '[b' → logprob: -9.357489585876465
    6. '[p' → logprob: -9.482489585876465
    7. '[I' → logprob: -9.482489585876465
    8. ')' → logprob: -9.857489585876465
    9. '[B' → logprob: -10.857489585876465
    10. '[F' → logprob: -11.107489585876465

Token 235: 'a' (ID: 64)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.09000876545906067
    2. '[' → logprob: -2.4650087356567383
    3. '[a' → logprob: -7.090008735656738
    4. '[B' → logprob: -9.465008735656738
    5. ')' → logprob: -9.715008735656738
    6. '[I' → logprob: -10.590008735656738
    7. ')[' → logprob: -11.215008735656738
    8. '[C' → logprob: -11.465008735656738
    9. '[N' → logprob: -11.715008735656738
    10. '[P' → logprob: -12.090008735656738

Token 236: '-z' (ID: 16826)
  Prédit: '-Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.608481764793396
    2. '[A' → logprob: -1.233481764793396
    3. '-z' → logprob: -2.2334818840026855
    4. 'Z' → logprob: -3.2334818840026855
    5. '[' → logprob: -4.8584818840026855
    6. '-' → logprob: -5.7334818840026855
    7. '[z' → logprob: -6.4834818840026855
    8. '[a' → logprob: -6.4834818840026855
    9. ')[' → logprob: -7.1084818840026855
    10. '[B' → logprob: -7.1084818840026855

Token 237: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4965274930000305
    2. ')',' → logprob: -0.9965274930000305
    3. '])' → logprob: -4.121527671813965
    4. ')])' → logprob: -6.121527671813965
    5. ')','' → logprob: -6.996527671813965
    6. ')'),' → logprob: -7.496527671813965
    7. ')'' → logprob: -7.496527671813965
    8. ')',
' → logprob: -7.746527671813965
    9. ')]' → logprob: -7.996527671813965
    10. ')|' → logprob: -8.121527671813965

Token 238: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.009198020212352276
    2. '|' → logprob: -5.384198188781738
    3. ')',' → logprob: -6.509198188781738
    4. ',' → logprob: -6.759198188781738
    5. '')' → logprob: -6.884198188781738
    6. ')' → logprob: -7.509198188781738
    7. ''' → logprob: -8.884198188781738
    8. ']',' → logprob: -9.259198188781738
    9. '','' → logprob: -10.384198188781738
    10. ']' → logprob: -11.384198188781738

Token 239: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.018150413408875465
    2. ' identifier' → logprob: -4.018150329589844
    3. '(identifier' → logprob: -16.018150329589844
    4. ')' → logprob: -16.143150329589844
    5. '   ' → logprob: -16.268150329589844
    6. ' ' → logprob: -16.643150329589844
    7. '.identifier' → logprob: -17.518150329589844
    8. '                   ' → logprob: -18.268150329589844
    9. 'Identifier' → logprob: -18.643150329589844
    10. '_identifier' → logprob: -18.768150329589844

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.249780638725497e-05
    2. ')
' → logprob: -10.875032424926758
    3. ' )' → logprob: -11.875032424926758
    4. '')' → logprob: -13.875032424926758
    5. '))' → logprob: -14.125032424926758
    6. ']' → logprob: -14.250032424926758
    7. ')`' → logprob: -14.375032424926758
    8. ',' → logprob: -14.500032424926758
    9. '<|end|>' → logprob: -14.500032424926758
    10. '       ' → logprob: -14.625032424926758

Token 241: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002190948696807027
    2. 'return' → logprob: -6.752191066741943
    3. '
' → logprob: -7.627191066741943
    4. ' return' → logprob: -8.127190589904785
    5. '	' → logprob: -9.252190589904785
    6. '           ' → logprob: -9.627190589904785
    7. '   ' → logprob: -10.377190589904785
    8. '	return' → logprob: -10.877190589904785
    9. '        
' → logprob: -12.502190589904785
    10. '      ' → logprob: -12.627190589904785

Token 242: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4294582009315491
    2. '       ' → logprob: -1.3044581413269043
    3. ' return' → logprob: -2.5544581413269043
    4. '
' → logprob: -10.804458618164062
    5. '	return' → logprob: -10.804458618164062
    6. '        
' → logprob: -11.179458618164062
    7. '   ' → logprob: -11.929458618164062
    8. '      ' → logprob: -12.179458618164062
    9. '           ' → logprob: -12.554458618164062
    10. '        ' → logprob: -12.679458618164062

Token 243: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2841506600379944
    2. '[word' → logprob: -1.7841506004333496
    3. '[p' → logprob: -3.5341506004333496
    4. '[i' → logprob: -3.7841506004333496
    5. ' [' → logprob: -4.40915060043335
    6. '[token' → logprob: -5.40915060043335
    7. '[list' → logprob: -5.65915060043335
    8. '[item' → logprob: -5.78415060043335
    9. '[w' → logprob: -6.65915060043335
    10. '[id' → logprob: -7.28415060043335

Token 244: 'word' (ID: 1801)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.40305963158607483
    2. 'p' → logprob: -1.1530596017837524
    3. 'word' → logprob: -4.278059482574463
    4. 'w' → logprob: -6.153059482574463
    5. 's' → logprob: -10.278059959411621
    6. ' part' → logprob: -11.653059959411621
    7. 'token' → logprob: -11.653059959411621
    8. ' p' → logprob: -12.778059959411621
    9. 'x' → logprob: -13.028059959411621
    10. 'parts' → logprob: -13.903059959411621

Token 245: '.lower' (ID: 41290)
  Prédit: '.lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.0015043864259496331
    2. '.' → logprob: -6.501504421234131
    3. ' .' → logprob: -13.501503944396973
    4. 'lower' → logprob: -15.251503944396973
    5. '.case' → logprob: -15.501503944396973
    6. '.upper' → logprob: -15.626503944396973
    7. ' ' → logprob: -16.75150489807129
    8. '   ' → logprob: -17.87650489807129
    9. '.to' → logprob: -18.50150489807129
    10. '.group' → logprob: -18.87650489807129

Token 246: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9153885558771435e-06
    2. 'for' → logprob: -12.500005722045898
    3. '()]' → logprob: -14.375005722045898
    4. ' ()' → logprob: -14.750005722045898
    5. '()
' → logprob: -14.750005722045898
    6. '(' → logprob: -15.375005722045898
    7. 'w' → logprob: -15.750005722045898
    8. '(word' → logprob: -15.875005722045898
    9. '()`' → logprob: -16.2500057220459
    10. '())' → logprob: -17.0000057220459

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4070163369178772
    2. ' for' → logprob: -1.5320162773132324
    3. '()' → logprob: -2.1570162773132324
    4. ')' → logprob: -6.907016277313232
    5. '(word' → logprob: -7.157016277313232
    6. ' ' → logprob: -7.907016277313232
    7. '(' → logprob: -8.40701675415039
    8. ']' → logprob: -8.78201675415039
    9. '()]' → logprob: -11.15701675415039
    10. 'word' → logprob: -11.15701675415039

Token 248: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.3868790566921234
    2. ' word' → logprob: -1.1368790864944458
    3. 'part' → logprob: -12.261878967285156
    4. '	word' → logprob: -13.136878967285156
    5. ' part' → logprob: -14.636878967285156
    6. '(word' → logprob: -14.886878967285156
    7. 'w' → logprob: -15.136878967285156
    8. '_word' → logprob: -16.386878967285156
    9. 'parts' → logprob: -16.886878967285156
    10. ' ' → logprob: -17.636878967285156

Token 249: ' in' (ID: 306)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.43628382682800293
    2. 'word' → logprob: -1.186283826828003
    3. ' in' → logprob: -4.061284065246582
    4. 'parts' → logprob: -4.186284065246582
    5. ' parts' → logprob: -4.186284065246582
    6. 'in' → logprob: -8.811284065246582
    7. 'part' → logprob: -9.061284065246582
    8. '(word' → logprob: -9.186284065246582
    9. ' ' → logprob: -9.811284065246582
    10. ' part' → logprob: -10.311284065246582

Token 250: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.023254914209246635
    2. ' parts' → logprob: -3.773254871368408
    3. '(parts' → logprob: -11.773255348205566
    4. '   ' → logprob: -14.148255348205566
    5. ' ' → logprob: -14.898255348205566
    6. '
' → logprob: -15.148255348205566
    7. 'part' → logprob: -15.773255348205566
    8. '  ' → logprob: -17.02325439453125
    9. '.parts' → logprob: -17.14825439453125
    10. ' partes' → logprob: -17.52325439453125

Token 251: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005961510818451643
    2. ' ]' → logprob: -5.1309614181518555
    3. '       ' → logprob: -11.505961418151855
    4. ']
' → logprob: -11.505961418151855
    5. '   ' → logprob: -12.130961418151855
    6. ' ' → logprob: -13.005961418151855
    7. '<|end|>' → logprob: -13.255961418151855
    8. '()]' → logprob: -14.255961418151855
    9. ')' → logprob: -14.880961418151855
    10. '<|end|>' → logprob: -14.880961418151855

Token 252: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005861836019903421
    2. '   ' → logprob: -5.255861759185791
    3. ' def' → logprob: -7.380861759185791
    4. '
' → logprob: -13.13086223602295
    5. '    
' → logprob: -13.50586223602295
    6. '  ' → logprob: -14.75586223602295
    7. ' ' → logprob: -14.88086223602295
    8. '```' → logprob: -15.25586223602295
    9. '	def' → logprob: -15.75586223602295
    10. ')' → logprob: -16.130861282348633

Token 254: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.22566626965999603
    2. ' from' → logprob: -1.6006662845611572
    3. '_from' → logprob: -8.475666046142578
    4. '_' → logprob: -10.600666046142578
    5. ' _' → logprob: -12.100666046142578
    6. ' to' → logprob: -12.600666046142578
    7. ' ' → logprob: -12.975666046142578
    8. '	from' → logprob: -13.225666046142578
    9. 'to' → logprob: -13.475666046142578
    10. '[from' → logprob: -13.975666046142578

Token 255: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.00044068231363780797
    2. '_' → logprob: -7.75044059753418
    3. '_word' → logprob: -11.75044059753418
    4. '_w' → logprob: -14.25044059753418
    5. '_parts' → logprob: -15.25044059753418
    6. '_strings' → logprob: -15.37544059753418
    7. ' _' → logprob: -15.62544059753418
    8. '_tokens' → logprob: -16.00044059753418
    9. '_letters' → logprob: -16.12544059753418
    10. '_lines' → logprob: -16.25044059753418

Token 256: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.031157969729975e-05
    2. '(' → logprob: -9.625090599060059
    3. ' (' → logprob: -10.875090599060059
    4. 'self' → logprob: -12.500090599060059
    5. ' self' → logprob: -14.375090599060059
    6. ' ' → logprob: -15.125090599060059
    7. '   ' → logprob: -15.250090599060059
    8. '(s' → logprob: -15.375090599060059
    9. '       ' → logprob: -16.250089645385742
    10. '(
' → logprob: -16.500089645385742

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02214515209197998
    2. 'self' → logprob: -4.3971452713012695
    3. '[self' → logprob: -5.1471452713012695
    4. '(self' → logprob: -6.1471452713012695
    5. ' ,' → logprob: -7.7721452713012695
    6. ',self' → logprob: -8.02214527130127
    7. ' self' → logprob: -8.14714527130127
    8. '[' → logprob: -8.14714527130127
    9. '   ' → logprob: -8.39714527130127
    10. '       ' → logprob: -10.77214527130127

Token 258: ' words' (ID: 6391)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14527857303619385
    2. ' self' → logprob: -2.0202784538269043
    3. 'words' → logprob: -6.270278453826904
    4. ' words' → logprob: -7.520278453826904
    5. '   ' → logprob: -9.395278930664062
    6. '       ' → logprob: -9.770278930664062
    7. '[self' → logprob: -11.645278930664062
    8. ' ' → logprob: -12.270278930664062
    9. '(self' → logprob: -12.395278930664062
    10. '	self' → logprob: -13.145278930664062

Token 259: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40190842747688293
    2. '):' → logprob: -2.1519083976745605
    3. '[self' → logprob: -2.7769083976745605
    4. 'self' → logprob: -2.9019083976745605
    5. '[' → logprob: -3.2769083976745605
    6. '   ' → logprob: -3.6519083976745605
    7. '(self' → logprob: -4.1519083976745605
    8. ' self' → logprob: -5.2769083976745605
    9. '       ' → logprob: -5.6519083976745605
    10. '):
' → logprob: -5.7769083976745605

Token 260: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.039509568363428116
    2. ' list' → logprob: -3.7895095348358154
    3. '[list' → logprob: -4.2895097732543945
    4. '[str' → logprob: -6.0395097732543945
    5. '[
' → logprob: -11.539509773254395
    6. '[List' → logprob: -12.164509773254395
    7. '[word' → logprob: -12.164509773254395
    8. 'str' → logprob: -12.539509773254395
    9. 'List' → logprob: -12.539509773254395
    10. '   ' → logprob: -12.664509773254395

Token 261: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.50001049041748
    4. ')' → logprob: -15.00001049041748
    5. ' [' → logprob: -15.50001049041748
    6. '[
' → logprob: -16.250009536743164
    7. '       ' → logprob: -16.250009536743164
    8. 'str' → logprob: -16.750009536743164
    9. ':' → logprob: -17.250009536743164
    10. ' ' → logprob: -17.375009536743164

Token 262: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31330937147140503
    2. ')' → logprob: -1.3133094310760498
    3. ']):' → logprob: -11.063309669494629
    4. ']' → logprob: -11.688309669494629
    5. ' ])' → logprob: -11.813309669494629
    6. '):' → logprob: -12.313309669494629
    7. '`)' → logprob: -12.938309669494629
    8. '   ' → logprob: -13.188309669494629
    9. ' )' → logprob: -13.188309669494629
    10. ')])' → logprob: -13.563309669494629

Token 263: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3442780375480652
    2. '->' → logprob: -1.84427809715271
    3. ' ->' → logprob: -2.46927809715271
    4. ')' → logprob: -3.46927809715271
    5. '(self' → logprob: -4.469277858734131
    6. ')->' → logprob: -5.719277858734131
    7. '   ' → logprob: -7.344277858734131
    8. '):' → logprob: -7.719277858734131
    9. '       ' → logprob: -7.719277858734131
    10. ':return' → logprob: -8.844278335571289

Token 264: ' str' (ID: 989)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.22703059017658234
    2. ' [' → logprob: -2.7270305156707764
    3. ' list' → logprob: -3.4770305156707764
    4. 'str' → logprob: -3.8520305156707764
    5. '[' → logprob: -3.8520305156707764
    6. '[
' → logprob: -4.1020307540893555
    7. ' str' → logprob: -4.1020307540893555
    8. 'list' → logprob: -4.1020307540893555
    9. '[list' → logprob: -4.6020307540893555
    10. ' ' → logprob: -6.1020307540893555

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018492704257369041
    2. ':
' → logprob: -6.876849174499512
    3. ':return' → logprob: -8.001849174499512
    4. '       ' → logprob: -9.001849174499512
    5. '(self' → logprob: -9.376849174499512
    6. '):' → logprob: -9.626849174499512
    7. '   ' → logprob: -9.751849174499512
    8. ' ->' → logprob: -9.876849174499512
    9. ' :' → logprob: -10.251849174499512
    10. '->' → logprob: -10.751849174499512

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005641150055453181
    2. ' return' → logprob: -7.750564098358154
    3. 'return' → logprob: -9.125564575195312
    4. '   ' → logprob: -10.875564575195312
    5. '      ' → logprob: -13.250564575195312
    6. '[' → logprob: -14.375564575195312
    7. '    ' → logprob: -14.625564575195312
    8. '        ' → logprob: -14.625564575195312
    9. '           ' → logprob: -14.625564575195312
    10. '     ' → logprob: -15.375564575195312

Token 267: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5286699533462524
    2. '       ' → logprob: -1.5286699533462524
    3. ' return' → logprob: -1.6536699533462524
    4. '   ' → logprob: -6.028669834136963
    5. '	return' → logprob: -11.528670310974121
    6. '
' → logprob: -11.903670310974121
    7. ' ' → logprob: -12.778670310974121
    8. '      ' → logprob: -13.403670310974121
    9. '           ' → logprob: -13.528670310974121
    10. '     ' → logprob: -13.653670310974121

Token 268: ' Capital' (ID: 23530)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3994728922843933
    2. '''.' → logprob: -1.399472951889038
    3. ' ''.' → logprob: -3.149472951889038
    4. ' return' → logprob: -3.274472951889038
    5. '   ' → logprob: -6.649472713470459
    6. ' "".' → logprob: -8.024473190307617
    7. '''' → logprob: -8.774473190307617
    8. '       ' → logprob: -10.399473190307617
    9. '"' → logprob: -10.774473190307617
    10. ' ' → logprob: -10.899473190307617

Token 269: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -8.65707261255011e-06
    2. 'ized' → logprob: -11.750008583068848
    3. 'iz' → logprob: -15.500008583068848
    4. '   ' → logprob: -15.750008583068848
    5. 'ise' → logprob: -16.500009536743164
    6. ' ' → logprob: -16.500009536743164
    7. 'i' → logprob: -16.750009536743164
    8. '       ' → logprob: -16.875009536743164
    9. 'IZE' → logprob: -17.000009536743164
    10. 'izer' → logprob: -17.250009536743164

Token 270: ' first' (ID: 1577)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.41744527220726013
    2. '()' → logprob: -1.7924453020095825
    3. 'word' → logprob: -2.167445182800293
    4. 'w' → logprob: -3.167445182800293
    5. ' word' → logprob: -4.917445182800293
    6. '().' → logprob: -6.042445182800293
    7. '[word' → logprob: -6.042445182800293
    8. '(w' → logprob: -6.292445182800293
    9. '(' → logprob: -6.667445182800293
    10. ' w' → logprob: -7.667445182800293

Token 271: ' letter' (ID: 10263)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36840954422950745
    2. 'word' → logprob: -1.868409514427185
    3. '(word' → logprob: -2.6184096336364746
    4. 'w' → logprob: -3.2434096336364746
    5. '().' → logprob: -4.618409633636475
    6. ' word' → logprob: -4.868409633636475
    7. 'letter' → logprob: -5.118409633636475
    8. '[word' → logprob: -5.993409633636475
    9. '(' → logprob: -6.118409633636475
    10. ' w' → logprob: -6.368409633636475

Token 272: ' of' (ID: 328)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5798426270484924
    2. 'w' → logprob: -1.8298425674438477
    3. '(word' → logprob: -1.8298425674438477
    4. 'word' → logprob: -3.8298425674438477
    5. '(' → logprob: -3.9548425674438477
    6. '(w' → logprob: -4.579842567443848
    7. '       ' → logprob: -4.579842567443848
    8. '(words' → logprob: -4.829842567443848
    9. 'for' → logprob: -5.079842567443848
    10. ' +' → logprob: -5.204842567443848

Token 273: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.5822475552558899
    2. 'each' → logprob: -0.8322475552558899
    3. 'word' → logprob: -5.332247734069824
    4. ' word' → logprob: -6.582247734069824
    5. 'w' → logprob: -10.082247734069824
    6. ' w' → logprob: -11.082247734069824
    7. 'Each' → logprob: -12.082247734069824
    8. ' every' → logprob: -12.957247734069824
    9. '   ' → logprob: -13.207247734069824
    10. 'every' → logprob: -14.582247734069824

Token 274: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.20150943100452423
    2. 'word' → logprob: -1.7015094757080078
    3. '(word' → logprob: -9.826509475708008
    4. '	word' → logprob: -10.701509475708008
    5. '   ' → logprob: -12.201509475708008
    6. ' words' → logprob: -12.326509475708008
    7. '_word' → logprob: -12.701509475708008
    8. '[word' → logprob: -13.201509475708008
    9. 'words' → logprob: -13.951509475708008
    10. 'w' → logprob: -14.076509475708008

Token 275: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7897049784660339
    2. '       ' → logprob: -1.7897050380706787
    3. 'w' → logprob: -2.7897050380706787
    4. 'return' → logprob: -2.9147050380706787
    5. '(word' → logprob: -3.0397050380706787
    6. 'word' → logprob: -3.1647050380706787
    7. '   ' → logprob: -3.4147050380706787
    8. '[word' → logprob: -3.4147050380706787
    9. '[' → logprob: -3.6647050380706787
    10. '(' → logprob: -4.0397047996521

Token 276: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5493954420089722
    2. '       ' → logprob: -1.1743954420089722
    3. '   ' → logprob: -2.2993955612182617
    4. ' return' → logprob: -4.674395561218262
    5. ' =' → logprob: -7.424395561218262
    6. '[word' → logprob: -7.424395561218262
    7. '[' → logprob: -7.799395561218262
    8. '(word' → logprob: -8.049395561218262
    9. '           ' → logprob: -8.299395561218262
    10. '.' → logprob: -8.424395561218262

Token 277: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.014504875987768173
    2. ' return' → logprob: -4.639504909515381
    3. '   ' → logprob: -5.389504909515381
    4. '       ' → logprob: -8.764504432678223
    5. '''.' → logprob: -11.389504432678223
    6. '	return' → logprob: -13.139504432678223
    7. ' ''.' → logprob: -14.514504432678223
    8. '           ' → logprob: -14.764504432678223
    9. 'word' → logprob: -15.014504432678223
    10. ' ' → logprob: -15.014504432678223

Token 278: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.1279572993516922
    2. ' ''.' → logprob: -2.127957344055176
    3. ' "".' → logprob: -7.627957344055176
    4. '"' → logprob: -7.752957344055176
    5. ''' → logprob: -9.752957344055176
    6. '''' → logprob: -9.877957344055176
    7. ' ' → logprob: -13.252957344055176
    8. '   ' → logprob: -14.377957344055176
    9. '""' → logprob: -14.877957344055176
    10. ''',' → logprob: -15.627957344055176

Token 279: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.7432603272027336e-06
    2. '''.' → logprob: -13.500001907348633
    3. '.join' → logprob: -16.625001907348633
    4. 'jo' → logprob: -16.875001907348633
    5. ' join' → logprob: -16.875001907348633
    6. '.' → logprob: -17.375001907348633
    7. 'concat' → logprob: -17.500001907348633
    8. 'j' → logprob: -17.625001907348633
    9. '```' → logprob: -18.375001907348633
    10. ''.' → logprob: -18.875001907348633

Token 280: '(word' (ID: 35459)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.6992982029914856
    2. '(word' → logprob: -0.9492982029914856
    3. '[word' → logprob: -2.199298143386841
    4. 'w' → logprob: -5.69929838180542
    5. '[w' → logprob: -7.07429838180542
    6. ' word' → logprob: -7.07429838180542
    7. '(w' → logprob: -9.574297904968262
    8. '[' → logprob: -10.574297904968262
    9. '	word' → logprob: -10.824297904968262
    10. '([' → logprob: -11.949297904968262

Token 281: '.capitalize' (ID: 195879)
  Prédit: '.capitalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capitalize' → logprob: -0.02975963056087494
    2. '.title' → logprob: -3.529759645462036
    3. '.' → logprob: -11.779759407043457
    4. 'capitalize' → logprob: -13.654759407043457
    5. '.cap' → logprob: -15.029759407043457
    6. '[' → logprob: -18.529760360717773
    7. ' .' → logprob: -18.654760360717773
    8. 'title' → logprob: -19.404760360717773
    9. '.upper' → logprob: -20.154760360717773
    10. '-cap' → logprob: -20.279760360717773

Token 282: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00020616286201402545
    2. '())' → logprob: -8.500205993652344
    3. ' ()' → logprob: -14.625205993652344
    4. ')' → logprob: -14.625205993652344
    5. 'for' → logprob: -15.125205993652344
    6. '()%' → logprob: -15.375205993652344
    7. '(' → logprob: -15.500205993652344
    8. '()]' → logprob: -15.750205993652344
    9. '()>' → logprob: -16.000205993652344
    10. '()*' → logprob: -16.000205993652344

Token 283: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7172502279281616
    2. '()' → logprob: -0.7172502279281616
    3. ' for' → logprob: -4.467250347137451
    4. '())' → logprob: -5.092250347137451
    5. 'for' → logprob: -5.092250347137451
    6. '   ' → logprob: -11.092249870300293
    7. ' )' → logprob: -11.717249870300293
    8. ' ()' → logprob: -12.217249870300293
    9. '       ' → logprob: -12.342249870300293
    10. ' ' → logprob: -12.467249870300293

Token 284: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.018266530707478523
    2. 'word' → logprob: -4.018266677856445
    3. ' words' → logprob: -9.143266677856445
    4. ' ' → logprob: -12.018266677856445
    5. 'words' → logprob: -12.768266677856445
    6. '	word' → logprob: -14.643266677856445
    7. '[word' → logprob: -16.268266677856445
    8. '(word' → logprob: -17.143266677856445
    9. ' ' → logprob: -17.393266677856445
    10. ' palavra' → logprob: -17.893266677856445

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22233977913856506
    2. 'in' → logprob: -1.7223397493362427
    3. 'words' → logprob: -4.222339630126953
    4. ' words' → logprob: -5.847339630126953
    5. '_words' → logprob: -6.972339630126953
    6. 'word' → logprob: -7.097339630126953
    7. '.words' → logprob: -7.222339630126953
    8. ' ' → logprob: -8.222339630126953
    9. ' word' → logprob: -8.597339630126953
    10. '(words' → logprob: -9.597339630126953

Token 286: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.003178306156769395
    2. ' words' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.503178596496582
    4. '(words' → logprob: -15.753178596496582
    5. ' ' → logprob: -16.003177642822266
    6. '.words' → logprob: -16.253177642822266
    7. 'word' → logprob: -16.753177642822266
    8. '_words' → logprob: -18.253177642822266
    9. '       ' → logprob: -18.253177642822266
    10. '  ' → logprob: -19.253177642822266

Token 287: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ' )' → logprob: -13.12500286102295
    3. ')
' → logprob: -14.87500286102295
    4. ')return' → logprob: -16.125001907348633
    5. ')}' → logprob: -17.250001907348633
    6. '<|end|>' → logprob: -17.875001907348633
    7. '))' → logprob: -18.500001907348633
    8. ')}}' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '       ' → logprob: -18.625001907348633

Token 288: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.3464544432936236e-05
    2. '
' → logprob: -10.250043869018555
    3. ' class' → logprob: -12.125043869018555
    4. '<|end|>' → logprob: -13.125043869018555
    5. '"class' → logprob: -15.875043869018555
    6. '<class' → logprob: -16.000043869018555
    7. '

' → logprob: -16.500043869018555
    8. '```' → logprob: -16.625043869018555
    9. '#' → logprob: -17.125043869018555
    10. '	class' → logprob: -17.125043869018555

Token 289: ' Lower' (ID: 42961)
  Prédit: 'Lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lower' → logprob: -0.7221415042877197
    2. 'Snake' → logprob: -0.7221415042877197
    3. 'snake' → logprob: -4.597141265869141
    4. ' Snake' → logprob: -4.722141265869141
    5. ' Lower' → logprob: -4.972141265869141
    6. ' snake' → logprob: -6.472141265869141
    7. 'Upper' → logprob: -7.722141265869141
    8. 'lower' → logprob: -8.09714126586914
    9. '_lower' → logprob: -8.84714126586914
    10. '_sn' → logprob: -9.34714126586914

Token 290: 'Camel' (ID: 137910)
  Prédit: 'Camel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Camel' → logprob: -0.004176221787929535
    2. 'Snake' → logprob: -5.504176139831543
    3. 'Case' → logprob: -9.504176139831543
    4. 'camel' → logprob: -11.504176139831543
    5. 'Und' → logprob: -12.004176139831543
    6. 'snake' → logprob: -12.504176139831543
    7. 'Upper' → logprob: -13.879176139831543
    8. '_' → logprob: -14.254176139831543
    9. 'case' → logprob: -14.379176139831543
    10. '_sn' → logprob: -15.504176139831543

Token 291: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: 0.0
    2. 'C' → logprob: -17.125
    3. ' Case' → logprob: -17.375
    4. 'Cas' → logprob: -19.75
    5. 'Camel' → logprob: -20.0
    6. 'case' → logprob: -20.125
    7. 'Cases' → logprob: -20.625
    8. ' case' → logprob: -20.875
    9. '_case' → logprob: -21.25
    10. '(C' → logprob: -21.625

Token 292: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -4.60414821645827e-06
    2. 'Case' → logprob: -12.875004768371582
    3. 'Convert' → logprob: -14.125004768371582
    4. ' Converter' → logprob: -14.250004768371582
    5. '_converter' → logprob: -15.625004768371582
    6. 'C' → logprob: -16.000003814697266
    7. 'converter' → logprob: -16.375003814697266
    8. ' converter' → logprob: -16.875003814697266
    9. 'Con' → logprob: -17.000003814697266
    10. 'Constructor' → logprob: -17.875003814697266

Token 293: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.00020735491125378758
    2. '(' → logprob: -8.50020694732666
    3. ':' → logprob: -13.00020694732666
    4. '(case' → logprob: -14.37520694732666
    5. 'Case' → logprob: -14.75020694732666
    6. '(Base' → logprob: -15.75020694732666
    7. ' (' → logprob: -16.000207901000977
    8. '((' → logprob: -16.125207901000977
    9. '(Code' → logprob: -17.250207901000977
    10. '():' → logprob: -17.375207901000977

Token 294: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.0014372545992955565
    2. 'Case' → logprob: -7.501437187194824
    3. '(' → logprob: -8.001437187194824
    4. 'a' → logprob: -8.251437187194824
    5. '```' → logprob: -9.251437187194824
    6. '(C' → logprob: -9.876437187194824
    7. 'ass' → logprob: -11.001437187194824
    8. 'amel' → logprob: -11.251437187194824
    9. 'on' → logprob: -11.376437187194824
    10. 'ases' → logprob: -11.626437187194824

Token 295: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -2.546478935983032e-05
    2. 'converter' → logprob: -11.375025749206543
    3. 'Case' → logprob: -12.375025749206543
    4. '_converter' → logprob: -12.500025749206543
    5. 'Conv' → logprob: -13.500025749206543
    6. '```' → logprob: -13.500025749206543
    7. ' Converter' → logprob: -14.000025749206543
    8. '   ' → logprob: -14.125025749206543
    9. 'Converters' → logprob: -14.875025749206543
    10. '(' → logprob: -15.000025749206543

Token 296: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043085284531116486
    2. '):
' → logprob: -3.1680853366851807
    3. ')' → logprob: -10.043085098266602
    4. ':' → logprob: -10.918085098266602
    5. '):
' → logprob: -11.418085098266602
    6. '   ' → logprob: -11.918085098266602
    7. '(C' → logprob: -12.918085098266602
    8. '):

' → logprob: -13.168085098266602
    9. '():' → logprob: -13.668085098266602
    10. '(' → logprob: -15.418085098266602

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.762356209335849e-05
    2. 'def' → logprob: -10.62503719329834
    3. ' def' → logprob: -11.62503719329834
    4. '
' → logprob: -13.37503719329834
    5. '    ' → logprob: -14.12503719329834
    6. '  ' → logprob: -14.50003719329834
    7. 'class' → logprob: -14.62503719329834
    8. '"""' → logprob: -14.62503719329834
    9. '```' → logprob: -15.25003719329834
    10. '    
' → logprob: -16.000038146972656

Token 298: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5009251832962036
    2. ' """' → logprob: -1.2509251832962036
    3. ' def' → logprob: -2.875925064086914
    4. '"""' (adapté à ' """') → logprob: -3.250925064086914
    5. 'def' → logprob: -4.375925064086914
    6. 'class' → logprob: -9.875925064086914
    7. '    ' → logprob: -10.750925064086914
    8. ' """
' → logprob: -11.625925064086914
    9. '
' → logprob: -11.875925064086914
    10. '	def' → logprob: -11.875925064086914

Token 299: 'Lower' (ID: 14653)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15059176087379456
    2. '"""' → logprob: -2.0255918502807617
    3. ' def' → logprob: -5.275591850280762
    4. '   ' → logprob: -6.525591850280762
    5. 'Upper' → logprob: -7.275591850280762
    6. ' """' → logprob: -8.400591850280762
    7. 'Lower' → logprob: -8.650591850280762
    8. '""' → logprob: -10.025591850280762
    9. 'class' → logprob: -10.150591850280762
    10. '"""
' → logprob: -10.150591850280762

Token 300: ' Camel' (ID: 112127)
  Prédit: 'Camel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Camel' → logprob: -0.0008004573755897582
    2. ' Camel' → logprob: -7.500800609588623
    3. ' ' → logprob: -9.250800132751465
    4. 'Case' → logprob: -10.125800132751465
    5. '   ' → logprob: -10.375800132751465
    6. 'case' → logprob: -10.750800132751465
    7. 'Upper' → logprob: -11.000800132751465
    8. '_' → logprob: -11.250800132751465
    9. ' camel' → logprob: -12.000800132751465
    10. '  ' → logprob: -12.500800132751465

Token 301: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: 0.0
    2. ' Case' → logprob: -17.625
    3. 'case' → logprob: -17.875
    4. 'C' → logprob: -18.125
    5. 'Class' → logprob: -19.625
    6. ' case' → logprob: -19.875
    7. 'Cases' → logprob: -20.0
    8. '
' → logprob: -20.75
    9. 'Cas' → logprob: -21.125
    10. 'Camel' → logprob: -21.625

Token 302: ':' (ID: 25)
  Prédit: 'Converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.009042317047715187
    2. ':' → logprob: -4.759042263031006
    3. ':
' → logprob: -8.759042739868164
    4. '   ' → logprob: -8.759042739868164
    5. ' Converter' → logprob: -10.884042739868164
    6. 'Case' → logprob: -10.884042739868164
    7. '"""' → logprob: -11.384042739868164
    8. '```' → logprob: -11.509042739868164
    9. 'converter' → logprob: -11.509042739868164
    10. '):' → logprob: -11.759042739868164

Token 303: ' first' (ID: 1577)
  Prédit: 'Each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Each' → logprob: -0.17046009004116058
    2. ' Each' → logprob: -2.7954599857330322
    3. '   ' → logprob: -3.0454599857330322
    4. 'def' → logprob: -3.7954599857330322
    5. ' def' → logprob: -4.045460224151611
    6. 'First' → logprob: -6.045460224151611
    7. '"""' → logprob: -6.045460224151611
    8. '  ' → logprob: -7.545460224151611
    9. 'from' → logprob: -7.670460224151611
    10. ' """' → logprob: -7.670460224151611

Token 304: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.5447790026664734
    2. '_' → logprob: -1.6697790622711182
    3. ' ' → logprob: -1.6697790622711182
    4. ' letter' → logprob: -4.169778823852539
    5. '   ' → logprob: -5.669778823852539
    6. ' _' → logprob: -5.669778823852539
    7. 'word' → logprob: -5.794778823852539
    8. '  ' → logprob: -5.794778823852539
    9. ' space' → logprob: -6.169778823852539
    10. ')' → logprob: -6.294778823852539

Token 305: ' lowercase' (ID: 90395)
  Prédit: ' starts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starts' → logprob: -0.1121993437409401
    2. 'starts' → logprob: -2.362199306488037
    3. ' lowercase' → logprob: -4.987199306488037
    4. ' is' → logprob: -6.362199306488037
    5. 'lower' → logprob: -7.112199306488037
    6. 'start' → logprob: -7.237199306488037
    7. '   ' → logprob: -7.862199306488037
    8. 'startswith' → logprob: -8.112199783325195
    9. ' ' → logprob: -8.237199783325195
    10. ' lower' → logprob: -8.862199783325195

Token 306: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004849342163652182
    2. ';' → logprob: -5.754849433898926
    3. '   ' → logprob: -6.504849433898926
    4. ' ,' → logprob: -9.254849433898926
    5. ':' → logprob: -10.254849433898926
    6. 'def' → logprob: -11.129849433898926
    7. ' ' → logprob: -11.504849433898926
    8. ' and' → logprob: -12.254849433898926
    9. '  ' → logprob: -12.629849433898926
    10. 'and' → logprob: -13.004849433898926

Token 307: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.31647413969039917
    2. ' rest' → logprob: -1.941474199295044
    3. 'sub' → logprob: -2.941474199295044
    4. ' subsequent' → logprob: -3.066474199295044
    5. 'others' → logprob: -5.316473960876465
    6. '   ' → logprob: -5.316473960876465
    7. 'then' → logprob: -5.691473960876465
    8. 'following' → logprob: -5.691473960876465
    9. 'remaining' → logprob: -5.691473960876465
    10. 'other' → logprob: -5.941473960876465

Token 308: ' capital' (ID: 9029)
  Prédit: ' capital'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capital' → logprob: -0.5689500570297241
    2. 'capital' → logprob: -1.3189500570297241
    3. 'Capital' → logprob: -2.9439501762390137
    4. 'start' → logprob: -3.0689501762390137
    5. ' start' → logprob: -3.9439501762390137
    6. 'capitalize' → logprob: -4.193950176239014
    7. ' ' → logprob: -5.193950176239014
    8. 'uppercase' → logprob: -5.193950176239014
    9. ' uppercase' → logprob: -5.318950176239014
    10. ' capitalize' → logprob: -5.443950176239014

Token 309: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.008618593215942383
    2. 'ize' → logprob: -4.758618354797363
    3. 'case' → logprob: -12.633618354797363
    4. ' ' → logprob: -15.133618354797363
    5. '   ' → logprob: -15.383618354797363
    6. 'ise' → logprob: -16.13361930847168
    7. '
' → logprob: -16.75861930847168
    8. '  ' → logprob: -17.50861930847168
    9. '```' → logprob: -17.50861930847168
    10. 'ised' → logprob: -17.75861930847168

Token 310: '."""
' (ID: 33044)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4093467891216278
    2. '   ' → logprob: -1.2843468189239502
    3. '):' → logprob: -3.78434681892395
    4. ',' → logprob: -4.784346580505371
    5. '.' → logprob: -5.159346580505371
    6. '"""' → logprob: -5.159346580505371
    7. '."""' → logprob: -5.659346580505371
    8. ':
' → logprob: -5.909346580505371
    9. '":' → logprob: -5.909346580505371
    10. '"""
' → logprob: -6.409346580505371

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00325459660962224
    2. 'def' → logprob: -5.753254413604736
    3. ' def' → logprob: -9.503254890441895
    4. '
' → logprob: -13.628254890441895
    5. '  ' → logprob: -14.878254890441895
    6. '    
' → logprob: -15.753254890441895
    7. '```' → logprob: -15.878254890441895
    8. 'class' → logprob: -16.003253936767578
    9. '   ' → logprob: -16.378253936767578
    10. '    ' → logprob: -16.503253936767578

Token 312: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01730017364025116
    2. '   ' → logprob: -4.267300128936768
    3. ' def' → logprob: -5.767300128936768
    4. 'class' → logprob: -12.767300605773926
    5. '	def' → logprob: -14.267300605773926
    6. '
' → logprob: -15.642300605773926
    7. '  ' → logprob: -17.39229965209961
    8. ' ' → logprob: -17.89229965209961
    9. '```' → logprob: -18.89229965209961
    10. '    
' → logprob: -19.89229965209961

Token 313: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25258880853652954
    2. 'to' → logprob: -1.5025887489318848
    3. ' def' → logprob: -7.377588748931885
    4. 'def' → logprob: -11.252589225769043
    5. ' ' → logprob: -11.752589225769043
    6. '_to' → logprob: -12.252589225769043
    7. ' _' → logprob: -12.752589225769043
    8. ' from' → logprob: -13.252589225769043
    9. 'from' → logprob: -13.877589225769043
    10. ' ' → logprob: -14.127589225769043

Token 314: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: 0.0
    2. '_' → logprob: -18.25
    3. '_to' → logprob: -18.375
    4. '```' → logprob: -18.625
    5. '_word' → logprob: -18.75
    6. 'words' → logprob: -19.0
    7. '_parts' → logprob: -19.125
    8. '_letters' → logprob: -19.5
    9. '_terms' → logprob: -19.875
    10. '_w' → logprob: -20.375

Token 315: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -16.375
    4. '(s' → logprob: -17.0
    5. 'self' → logprob: -17.75
    6. '   ' → logprob: -18.75
    7. '(
' → logprob: -19.375
    8. ' ' → logprob: -19.75
    9. '=self' → logprob: -19.875
    10. ',self' → logprob: -19.875

Token 316: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.016878880560398102
    2. ',' → logprob: -4.266879081726074
    3. '(' → logprob: -6.016879081726074
    4. ',self' → logprob: -9.016879081726074
    5. 'self' → logprob: -9.141879081726074
    6. ')' → logprob: -10.891879081726074
    7. ' (' → logprob: -11.641879081726074
    8. '   ' → logprob: -12.141879081726074
    9. ' self' → logprob: -12.766879081726074
    10. '(s' → logprob: -13.266879081726074

Token 317: ' identifier' (ID: 24577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007336281123571098
    2. ' self' → logprob: -7.250733852386475
    3. 'str' → logprob: -11.875733375549316
    4. '   ' → logprob: -12.000733375549316
    5. '       ' → logprob: -12.125733375549316
    6. 'def' → logprob: -12.875733375549316
    7. 's' → logprob: -14.000733375549316
    8. '(self' → logprob: -14.000733375549316
    9. ' ' → logprob: -15.500733375549316
    10. 'identifier' → logprob: -15.500733375549316

Token 318: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031225793063640594
    2. ')' → logprob: -6.753122806549072
    3. '   ' → logprob: -7.128122806549072
    4. ':str' → logprob: -8.128122329711914
    5. '):' → logprob: -8.253122329711914
    6. 'self' → logprob: -8.503122329711914
    7. '(self' → logprob: -8.878122329711914
    8. ',' → logprob: -9.378122329711914
    9. ' :' → logprob: -9.753122329711914
    10. '       ' → logprob: -10.503122329711914

Token 319: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.1269441694021225
    2. ' str' → logprob: -2.126944065093994
    3. '[str' → logprob: -12.626944541931152
    4. 's' → logprob: -12.751944541931152
    5. ':str' → logprob: -12.876944541931152
    6. '	str' → logprob: -13.126944541931152
    7. ' ' → logprob: -13.251944541931152
    8. '   ' → logprob: -14.001944541931152
    9. ')' → logprob: -14.251944541931152
    10. '(str' → logprob: -14.501944541931152

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. '`)' → logprob: -16.5
    4. '   ' → logprob: -17.0
    5. '):' → logprob: -18.75
    6. '")' → logprob: -19.25
    7. '')' → logprob: -19.25
    8. ')
' → logprob: -19.375
    9. 'def' → logprob: -19.75
    10. '=' → logprob: -19.875

Token 321: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35690242052078247
    2. '->' → logprob: -1.7319023609161377
    3. ':' → logprob: -2.4819023609161377
    4. ' ->' → logprob: -3.3569023609161377
    5. ')->' → logprob: -6.106902599334717
    6. ':
' → logprob: -6.606902599334717
    7. '   ' → logprob: -7.106902599334717
    8. '       ' → logprob: -9.231902122497559
    9. '=' → logprob: -9.606902122497559
    10. '):' → logprob: -9.731902122497559

Token 322: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.018780019134283066
    2. 'list' → logprob: -4.01878023147583
    3. ' str' → logprob: -7.89378023147583
    4. 'return' → logprob: -9.143779754638672
    5. '[str' → logprob: -9.143779754638672
    6. ' list' → logprob: -10.893779754638672
    7. ')' → logprob: -12.143779754638672
    8. 'def' → logprob: -12.518779754638672
    9. 'split' → logprob: -13.018779754638672
    10. 's' → logprob: -13.393779754638672

Token 323: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0003983760252594948
    2. '[' → logprob: -7.8753981590271
    3. '[
' → logprob: -11.250398635864258
    4. '[s' → logprob: -13.125398635864258
    5. '<|end|>' → logprob: -13.625398635864258
    6. '[int' → logprob: -14.375398635864258
    7. '[String' → logprob: -14.750398635864258
    8. '[string' → logprob: -15.000398635864258
    9. '```' → logprob: -16.125398635864258
    10. '[f' → logprob: -16.500398635864258

Token 324: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.4761696755886078
    2. ']:
' → logprob: -0.9761697053909302
    3. ']' → logprob: -6.351169586181641
    4. ']:
' → logprob: -8.72616958618164
    5. '):
' → logprob: -9.60116958618164
    6. ']:

' → logprob: -10.35116958618164
    7. '):' → logprob: -10.60116958618164
    8. ']>' → logprob: -11.47616958618164
    9. ':' → logprob: -11.72616958618164
    10. '[' → logprob: -11.72616958618164

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.815280696377158e-05
    2. ' if' → logprob: -9.625078201293945
    3. 'if' → logprob: -11.750078201293945
    4. '           ' → logprob: -13.250078201293945
    5. '   ' → logprob: -14.000078201293945
    6. '      ' → logprob: -14.500078201293945
    7. '        ' → logprob: -14.750078201293945
    8. 'return' → logprob: -15.250078201293945
    9. '```' → logprob: -15.750078201293945
    10. '#' → logprob: -16.250078201293945

Token 326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019533397629857063
    2. 'return' → logprob: -4.019533634185791
    3. ' if' → logprob: -7.144533634185791
    4. '       ' → logprob: -7.519533634185791
    5. '   ' → logprob: -10.769533157348633
    6. ' return' → logprob: -10.894533157348633
    7. '```' → logprob: -11.644533157348633
    8. '
' → logprob: -13.894533157348633
    9. '           ' → logprob: -13.894533157348633
    10. '        
' → logprob: -15.144533157348633

Token 327: ' '_'' (ID: 86115)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08913303911685944
    2. ' '_'' → logprob: -2.4641330242156982
    3. '"' → logprob: -9.464133262634277
    4. ' '' → logprob: -9.964133262634277
    5. ''_' → logprob: -10.714133262634277
    6. ' ' → logprob: -11.339133262634277
    7. ' not' → logprob: -11.339133262634277
    8. 'not' → logprob: -12.964133262634277
    9. '('_' → logprob: -13.214133262634277
    10. '   ' → logprob: -13.464133262634277

Token 328: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009793040342628956
    2. 'in' → logprob: -4.634792804718018
    3. '<|end|>' → logprob: -10.259793281555176
    4. '<|end|>' → logprob: -14.009793281555176
    5. ' ' → logprob: -14.384793281555176
    6. '	in' → logprob: -15.759793281555176
    7. '_in' → logprob: -16.13479232788086
    8. 'import' → logprob: -16.50979232788086
    9. '.startswith' → logprob: -16.63479232788086
    10. 'In' → logprob: -16.75979232788086

Token 329: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.014164921827614307
    2. ' identifier' → logprob: -4.264164924621582
    3. '_identifier' → logprob: -14.264164924621582
    4. '(identifier' → logprob: -14.264164924621582
    5. '.identifier' → logprob: -16.139163970947266
    6. 'Identifier' → logprob: -16.889163970947266
    7. ' ' → logprob: -18.264163970947266
    8. '   ' → logprob: -18.889163970947266
    9. 'the' → logprob: -19.389163970947266
    10. 'indent' → logprob: -19.514163970947266

Token 330: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20204606652259827
    2. ':' → logprob: -1.7020460367202759
    3. '           ' → logprob: -8.452046394348145
    4. '):
' → logprob: -8.452046394348145
    5. '       ' → logprob: -9.577046394348145
    6. ':

' → logprob: -10.452046394348145
    7. ':return' → logprob: -10.702046394348145
    8. '():
' → logprob: -10.827046394348145
    9. ':
' → logprob: -11.327046394348145
    10. '{
' → logprob: -11.577046394348145

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006193980108946562
    2. '       ' → logprob: -5.256194114685059
    3. ':' → logprob: -7.631194114685059
    4. '#' → logprob: -8.756194114685059
    5. ':
' → logprob: -8.756194114685059
    6. 'return' → logprob: -9.506194114685059
    7. '   ' → logprob: -10.256194114685059
    8. '          ' → logprob: -11.131194114685059
    9. '               ' → logprob: -12.381194114685059
    10. '	       ' → logprob: -12.381194114685059

Token 332: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5001732707023621
    2. 'return' → logprob: -1.0001733303070068
    3. '       ' → logprob: -3.875173330307007
    4. '#' (adapté à ' #') → logprob: -5.500173091888428
    5. ' return' → logprob: -7.375173091888428
    6. '
' → logprob: -9.000173568725586
    7. '   ' → logprob: -9.000173568725586
    8. ' ' → logprob: -11.375173568725586
    9. '```' → logprob: -11.375173568725586
    10. '          ' → logprob: -12.000173568725586

Token 333: ' underscore' (ID: 155582)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009669202379882336
    2. '           ' → logprob: -4.759669303894043
    3. ' return' → logprob: -7.259669303894043
    4. '       ' → logprob: -8.384669303894043
    5. '#' → logprob: -9.134669303894043
    6. '   ' → logprob: -11.634669303894043
    7. 'identifier' → logprob: -12.509669303894043
    8. '
' → logprob: -14.259669303894043
    9. '```' → logprob: -14.884669303894043
    10. '         ' → logprob: -15.509669303894043

Token 334: ' separated' (ID: 33930)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7255192995071411
    2. ' separated' → logprob: -0.7255192995071411
    3. ' not' → logprob: -4.475519180297852
    4. 'in' → logprob: -4.600519180297852
    5. 'import' → logprob: -6.225519180297852
    6. '.lower' → logprob: -6.600519180297852
    7. '<|end|>' → logprob: -6.850519180297852
    8. '   ' → logprob: -7.100519180297852
    9. 'se' → logprob: -7.225519180297852
    10. '.' → logprob: -7.225519180297852

Token 335: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1692257821559906
    2. ',' → logprob: -1.919225811958313
    3. ':
' → logprob: -5.669225692749023
    4. ':' → logprob: -5.669225692749023
    5. 'return' → logprob: -6.669225692749023
    6. '       ' → logprob: -8.169225692749023
    7. ':return' → logprob: -8.919225692749023
    8. ' return' → logprob: -9.544225692749023
    9. '):
' → logprob: -10.044225692749023
    10. '          ' → logprob: -10.169225692749023

Token 336: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004980900790542364
    2. 'return' → logprob: -5.50498104095459
    3. ':
' → logprob: -7.75498104095459
    4. ' return' → logprob: -8.62998104095459
    5. ',' → logprob: -9.37998104095459
    6. '       ' → logprob: -9.62998104095459
    7. ':' → logprob: -10.00498104095459
    8. ':return' → logprob: -10.50498104095459
    9. '               ' → logprob: -11.00498104095459
    10. '	       ' → logprob: -11.00498104095459

Token 337: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008585774339735508
    2. '           ' → logprob: -7.500858783721924
    3. '       ' → logprob: -8.500858306884766
    4. ' return' → logprob: -9.250858306884766
    5. '   ' → logprob: -12.000858306884766
    6. '	return' → logprob: -16.250858306884766
    7. '#' → logprob: -17.125858306884766
    8. ' ' → logprob: -18.250858306884766
    9. '         ' → logprob: -18.375858306884766
    10. '```' → logprob: -18.625858306884766

Token 338: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.03804987296462059
    2. ' identifier' → logprob: -3.2880499362945557
    3. '[' → logprob: -13.038049697875977
    4. ' [' → logprob: -13.038049697875977
    5. '(identifier' → logprob: -13.038049697875977
    6. '   ' → logprob: -13.413049697875977
    7. '.identifier' → logprob: -15.663049697875977
    8. ' ' → logprob: -17.038049697875977
    9. 'ident' → logprob: -17.413049697875977
    10. '_identifier' → logprob: -17.788049697875977

Token 339: '.lower' (ID: 41290)
  Prédit: '.lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -1.5928495486150496e-05
    2. '.split' → logprob: -11.375016212463379
    3. '.' → logprob: -13.000016212463379
    4. ' .' → logprob: -13.125016212463379
    5. '.low' → logprob: -16.875015258789062
    6. '.to' → logprob: -18.000015258789062
    7. '.strip' → logprob: -18.625015258789062
    8. '.down' → logprob: -18.750015258789062
    9. 'lower' → logprob: -19.125015258789062
    10. '   ' → logprob: -19.375015258789062

Token 340: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.52919222577475e-05
    2. '()' → logprob: -9.500075340270996
    3. '().__' → logprob: -15.375075340270996
    4. '(' → logprob: -16.25007438659668
    5. ' ().' → logprob: -16.62507438659668
    6. '().'' → logprob: -17.25007438659668
    7. '.' → logprob: -17.87507438659668
    8. '_' → logprob: -18.12507438659668
    9. '()
' → logprob: -18.37507438659668
    10. '.split' → logprob: -19.12507438659668

Token 341: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.25
    3. '(split' → logprob: -18.375
    4. '.split' → logprob: -19.5
    5. 'plit' → logprob: -19.75
    6. '_split' → logprob: -19.875
    7. 'strip' → logprob: -20.0
    8. '```' → logprob: -22.125
    9. 'spl' → logprob: -22.125
    10. 's' → logprob: -23.875

Token 342: '('_' (ID: 38248)
  Prédit: '('_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.875008583068848
    3. '("_' → logprob: -14.250008583068848
    4. '('' → logprob: -14.250008583068848
    5. '_' → logprob: -16.25000762939453
    6. '(',' → logprob: -17.50000762939453
    7. '['_' → logprob: -17.62500762939453
    8. '('.')' → logprob: -17.75000762939453
    9. '('__' → logprob: -17.75000762939453
    10. ''_' → logprob: -17.75000762939453

Token 343: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07684755325317383
    2. '')' → logprob: -3.326847553253174
    3. ')
' → logprob: -3.451847553253174
    4. '       ' → logprob: -5.451847553253174
    5. '')
' → logprob: -6.201847553253174
    6. ')
' → logprob: -10.201847076416016
    7. '   ' → logprob: -11.701847076416016
    8. ' )' → logprob: -12.201847076416016
    9. '")' → logprob: -13.576847076416016
    10. '')
' → logprob: -13.576847076416016

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00257328269071877
    2. 'else' → logprob: -6.002573490142822
    3. ' else' → logprob: -9.377573013305664
    4. 'return' → logprob: -12.377573013305664
    5. '```' → logprob: -12.752573013305664
    6. '
' → logprob: -13.002573013305664
    7. '   ' → logprob: -13.752573013305664
    8. 'elif' → logprob: -14.502573013305664
    9. '<|end|>' → logprob: -14.502573013305664
    10. '	' → logprob: -15.002573013305664

Token 345: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7056038975715637
    2. 'else' (adapté à ' else') → logprob: -0.7056038975715637
    3. ' else' → logprob: -4.455604076385498
    4. '   ' → logprob: -7.205604076385498
    5. '	else' → logprob: -11.45560359954834
    6. '           ' → logprob: -12.08060359954834
    7. 'elif' → logprob: -13.08060359954834
    8. '     ' → logprob: -13.33060359954834
    9. '
' → logprob: -13.95560359954834
    10. ' ' → logprob: -14.45560359954834

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28973710536956787
    2. ':
' → logprob: -1.4147371053695679
    3. '           ' → logprob: -4.789737224578857
    4. '       ' → logprob: -8.4147367477417
    5. ',' → logprob: -12.2897367477417
    6. '          ' → logprob: -13.4147367477417
    7. ':
' → logprob: -13.4147367477417
    8. ':

' → logprob: -13.5397367477417
    9. '):
' → logprob: -13.6647367477417
    10. '         ' → logprob: -14.2897367477417

Token 347: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05740339681506157
    2. '           ' → logprob: -2.932403326034546
    3. '#' → logprob: -6.307403564453125
    4. 'parts' → logprob: -7.557403564453125
    5. '   ' → logprob: -9.057403564453125
    6. ' parts' → logprob: -10.807403564453125
    7. ' #' → logprob: -11.307403564453125
    8. '        ' → logprob: -12.182403564453125
    9. '
' → logprob: -12.307403564453125
    10. '          ' → logprob: -12.682403564453125

Token 348: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0298406220972538
    2. '#' (adapté à ' #') → logprob: -4.029840469360352
    3. '       ' → logprob: -4.529840469360352
    4. '           ' → logprob: -7.904840469360352
    5. ' parts' → logprob: -8.279840469360352
    6. 'words' → logprob: -8.904840469360352
    7. 'return' → logprob: -10.279840469360352
    8. '   ' → logprob: -11.529840469360352
    9. 'part' → logprob: -12.029840469360352
    10. ' #' → logprob: -12.279840469360352

Token 349: ' Mixed' (ID: 83351)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.19409877061843872
    2. ' parts' → logprob: -1.944098711013794
    3. '           ' → logprob: -3.569098711013794
    4. '       ' → logprob: -5.444098949432373
    5. '#' → logprob: -7.694098949432373
    6. 'return' → logprob: -9.069098472595215
    7. '(parts' → logprob: -10.194098472595215
    8. '   ' → logprob: -10.319098472595215
    9. '          ' → logprob: -10.819098472595215
    10. '
' → logprob: -10.819098472595215

Token 350: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.1061747670173645
    2. 'case' → logprob: -2.3561747074127197
    3. 'Case' → logprob: -5.606174945831299
    4. '_case' → logprob: -6.106174945831299
    5. '   ' → logprob: -11.10617446899414
    6. ' ' → logprob: -11.73117446899414
    7. '-case' → logprob: -11.85617446899414
    8. ' Case' → logprob: -11.98117446899414
    9. '	case' → logprob: -12.60617446899414
    10. '
' → logprob: -13.85617446899414

Token 351: ' split' (ID: 12648)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24766577780246735
    2. '       ' → logprob: -2.1226658821105957
    3. ':
' → logprob: -2.9976658821105957
    4. ':' → logprob: -3.1226658821105957
    5. 'parts' → logprob: -6.122665882110596
    6. '
' → logprob: -6.747665882110596
    7. ' parts' → logprob: -6.747665882110596
    8. 'return' → logprob: -8.372665405273438
    9. ',' → logprob: -8.497665405273438
    10. '   ' → logprob: -9.122665405273438

Token 352: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8494545221328735
    2. ' parts' → logprob: -0.9744545221328735
    3. '           ' → logprob: -2.474454402923584
    4. 'parts' → logprob: -3.099454402923584
    5. ' before' → logprob: -3.349454402923584
    6. 'before' → logprob: -4.974454402923584
    7. '(parts' → logprob: -5.224454402923584
    8. '
' → logprob: -5.724454402923584
    9. ',' → logprob: -6.599454402923584
    10. 'Before' → logprob: -6.599454402923584

Token 353: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.8024755120277405
    2. '       ' → logprob: -1.1774754524230957
    3. '           ' → logprob: -1.8024754524230957
    4. ' parts' → logprob: -3.9274754524230957
    5. ' before' → logprob: -4.427475452423096
    6. 'r' → logprob: -4.552475452423096
    7. 'as' → logprob: -4.927475452423096
    8. '   ' → logprob: -5.302475452423096
    9. ':' → logprob: -5.552475452423096
    10. 'before' → logprob: -5.802475452423096

Token 354: ' Upper' (ID: 45714)
  Prédit: 'Upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Upper' → logprob: -0.004827038384974003
    2. ' Upper' → logprob: -5.87982702255249
    3. 're' → logprob: -6.75482702255249
    4. 'r' → logprob: -7.50482702255249
    5. 'class' → logprob: -9.129827499389648
    6. 'import' → logprob: -10.004827499389648
    7. '       ' → logprob: -10.629827499389648
    8. '[' → logprob: -10.879827499389648
    9. '```' → logprob: -11.004827499389648
    10. '   ' → logprob: -11.504827499389648

Token 355: 'Camel' (ID: 137910)
  Prédit: 'Camel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Camel' → logprob: -5.56233171664644e-05
    2. '[C' → logprob: -10.750055313110352
    3. '[A' → logprob: -11.375055313110352
    4. '_C' → logprob: -12.250055313110352
    5. 'C' → logprob: -12.375055313110352
    6. 'A' → logprob: -12.875055313110352
    7. '```' → logprob: -13.250055313110352
    8. 'camel' → logprob: -13.500055313110352
    9. ' Camel' → logprob: -13.750055313110352
    10. 'Cam' → logprob: -13.875055313110352

Token 356: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -6.704273118884885e-07
    2. 'case' → logprob: -15.125000953674316
    3. 'Class' → logprob: -15.750000953674316
    4. ' Case' → logprob: -17.125
    5. '       ' → logprob: -17.25
    6. '   ' → logprob: -17.5
    7. '_case' → logprob: -18.0
    8. ' case' → logprob: -18.0
    9. '```' → logprob: -18.25
    10. '           ' → logprob: -18.375

Token 357: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13804487884044647
    2. '           ' → logprob: -2.513044834136963
    3. '
' → logprob: -3.138044834136963
    4. ' parts' → logprob: -5.888044834136963
    5. 'parts' → logprob: -6.638044834136963
    6. '   ' → logprob: -9.013045310974121
    7. 'return' → logprob: -9.388045310974121
    8. '
' → logprob: -9.513045310974121
    9. '        
' → logprob: -9.763045310974121
    10. '               ' → logprob: -10.638045310974121

Token 358: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14348092675209045
    2. '           ' → logprob: -2.0184810161590576
    3. 'parts' → logprob: -7.7684807777404785
    4. 'return' → logprob: -8.643481254577637
    5. ' parts' → logprob: -8.893481254577637
    6. '   ' → logprob: -10.143481254577637
    7. '
' → logprob: -11.518481254577637
    8. ' return' → logprob: -11.643481254577637
    9. '               ' → logprob: -12.643481254577637
    10. '          ' → logprob: -13.768481254577637

Token 359: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.11490938067436218
    2. 'return' → logprob: -2.6149094104766846
    3. ' parts' → logprob: -4.1149091720581055
    4. '       ' → logprob: -4.2399091720581055
    5. '           ' → logprob: -5.6149091720581055
    6. ' return' → logprob: -6.9899091720581055
    7. '
' → logprob: -10.989909172058105
    8. '   ' → logprob: -11.239909172058105
    9. '```' → logprob: -11.864909172058105
    10. '(parts' → logprob: -11.989909172058105

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052342405542731285
    2. '=' → logprob: -5.255234241485596
    3. '       ' → logprob: -15.380233764648438
    4. '=re' → logprob: -16.880233764648438
    5. ' =
' → logprob: -17.380233764648438
    6. '   ' → logprob: -17.880233764648438
    7. '=self' → logprob: -18.005233764648438
    8. ' ' → logprob: -18.255233764648438
    9. 's' → logprob: -18.505233764648438
    10. '=
' → logprob: -19.255233764648438

Token 361: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.004078878089785576
    2. ' re' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.00407886505127
    4. ' ' → logprob: -16.004079818725586
    5. '	re' → logprob: -17.004079818725586
    6. '       ' → logprob: -18.004079818725586
    7. 'r' → logprob: -18.754079818725586
    8. 'Re' → logprob: -18.879079818725586
    9. '[' → logprob: -18.879079818725586
    10. '  ' → logprob: -19.004079818725586

Token 362: '.findall' (ID: 95997)
  Prédit: '.findall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.findall' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.375
    3. '\.' → logprob: -18.0
    4. '.find' → logprob: -18.625
    5. 'find' → logprob: -18.625
    6. ' .' → logprob: -20.625
    7. '```' → logprob: -20.875
    8. '.search' → logprob: -21.125
    9. '.fetchall' → logprob: -21.375
    10. '[' → logprob: -21.625

Token 363: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.875060081481934
    3. 'r' → logprob: -12.250060081481934
    4. '(rb' → logprob: -13.000060081481934
    5. '(
' → logprob: -13.875060081481934
    6. ' (' → logprob: -15.875060081481934
    7. '('' → logprob: -16.875059127807617
    8. '[r' → logprob: -17.125059127807617
    9. '```' → logprob: -17.750059127807617
    10. '(R' → logprob: -17.875059127807617

Token 364: ''[' (ID: 187291)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1270531564950943
    2. ''[' → logprob: -2.1270532608032227
    3. ' r' → logprob: -9.627053260803223
    4. '[A' → logprob: -10.377053260803223
    5. '[' → logprob: -11.252053260803223
    6. '[r' → logprob: -11.752053260803223
    7. '"[' → logprob: -12.752053260803223
    8. '   ' → logprob: -13.252053260803223
    9. '`' → logprob: -14.127053260803223
    10. ''' → logprob: -14.627053260803223

Token 365: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.000204851632588543
    2. '[A' → logprob: -8.625205039978027
    3. 'a' → logprob: -10.625205039978027
    4. ' A' → logprob: -14.500205039978027
    5. ''A' → logprob: -14.875205039978027
    6. '(A' → logprob: -16.75020408630371
    7. '`' → logprob: -17.62520408630371
    8. '"A' → logprob: -17.75020408630371
    9. 'r' → logprob: -17.75020408630371
    10. '   ' → logprob: -18.25020408630371

Token 366: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.0011939177056774497
    2. '[A' → logprob: -7.126194000244141
    3. 'Z' → logprob: -8.50119400024414
    4. '[' → logprob: -8.75119400024414
    5. 'A' → logprob: -11.25119400024414
    6. '[-' → logprob: -12.75119400024414
    7. '-Za' → logprob: -13.00119400024414
    8. '-' → logprob: -13.50119400024414
    9. ''[' → logprob: -13.50119400024414
    10. '-[' → logprob: -13.75119400024414

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014372545992955565
    2. ']?' → logprob: -6.626437187194824
    3. '']' → logprob: -10.001437187194824
    4. ']+' → logprob: -11.251437187194824
    5. ']*' → logprob: -11.501437187194824
    6. ' ]' → logprob: -11.626437187194824
    7. ']{' → logprob: -11.876437187194824
    8. '?' → logprob: -12.501437187194824
    9. 'a' → logprob: -12.501437187194824
    10. ']?.' → logprob: -12.563937187194824

Token 368: '?[' (ID: 105379)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004092235758434981
    2. ']?' → logprob: -8.375409126281738
    3. '']' → logprob: -9.375409126281738
    4. '?[' → logprob: -10.250409126281738
    5. '`' → logprob: -10.500409126281738
    6. '?' → logprob: -12.000409126281738
    7. ''' → logprob: -12.125409126281738
    8. ']?.' → logprob: -13.000409126281738
    9. ']{' → logprob: -13.250409126281738
    10. '`]' → logprob: -13.250409126281738

Token 369: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.531315314830863e-06
    2. '[a' → logprob: -12.750003814697266
    3. ' a' → logprob: -14.625003814697266
    4. ''a' → logprob: -16.250003814697266
    5. '	a' → logprob: -17.500003814697266
    6. 'A' → logprob: -18.125003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '#a' → logprob: -18.625003814697266
    9. ' ' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 370: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.28690361976623535
    2. '[a' → logprob: -1.6619036197662354
    3. 'a' → logprob: -2.9119036197662354
    4. '-Za' → logprob: -5.661903381347656
    5. 'z' → logprob: -6.661903381347656
    6. '-' → logprob: -8.536903381347656
    7. 'za' → logprob: -8.911903381347656
    8. '[z' → logprob: -9.411903381347656
    9. '[' → logprob: -10.661903381347656
    10. ''z' → logprob: -10.911903381347656

Token 371: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -6.73052782076411e-05
    2. '+' → logprob: -9.625067710876465
    3. ']' → logprob: -14.625067710876465
    4. 'A' → logprob: -15.750067710876465
    5. ']*' → logprob: -16.00006675720215
    6. '+]' → logprob: -16.62506675720215
    7. ']+\' → logprob: -16.62506675720215
    8. ']+=' → logprob: -16.75006675720215
    9. ''+' → logprob: -17.00006675720215
    10. '0' → logprob: -17.12506675720215

Token 372: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -5.319370302458992e-06
    2. ']|' → logprob: -12.875005722045898
    3. ' |' → logprob: -13.500005722045898
    4. '|
' → logprob: -14.500005722045898
    5. ')|' → logprob: -15.125005722045898
    6. 'r' → logprob: -16.0000057220459
    7. '|string' → logprob: -16.5000057220459
    8. '|'' → logprob: -16.6250057220459
    9. '   ' → logprob: -17.0000057220459
    10. '|`
' → logprob: -17.0000057220459

Token 373: '[' (ID: 58)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0006085559725761414
    2. 'r' → logprob: -8.250608444213867
    3. '[' → logprob: -8.375608444213867
    4. ''[' → logprob: -9.125608444213867
    5. ' [' → logprob: -12.625608444213867
    6. '[a' → logprob: -13.750608444213867
    7. '[B' → logprob: -14.250608444213867
    8. '[C' → logprob: -14.250608444213867
    9. '[r' → logprob: -14.500608444213867
    10. '[R' → logprob: -15.250608444213867

Token 374: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.07901614159345627
    2. '[A' → logprob: -2.5790162086486816
    3. '[' → logprob: -9.204015731811523
    4. 'Z' → logprob: -10.704015731811523
    5. 'a' → logprob: -14.454015731811523
    6. 'r' → logprob: -14.454015731811523
    7. ''[' → logprob: -14.704015731811523
    8. ' A' → logprob: -15.079015731811523
    9. '   ' → logprob: -15.079015731811523
    10. '[a' → logprob: -15.454015731811523

Token 375: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.0025003906339406967
    2. 'Z' → logprob: -6.002500534057617
    3. 'A' → logprob: -10.627500534057617
    4. '-' → logprob: -15.877500534057617
    5. '[A' → logprob: -16.377500534057617
    6. '[' → logprob: -16.627500534057617
    7. '-z' → logprob: -17.127500534057617
    8. '_Z' → logprob: -17.127500534057617
    9. '   ' → logprob: -18.127500534057617
    10. '-Za' → logprob: -18.127500534057617

Token 376: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -1.7432603272027336e-06
    2. ']' → logprob: -13.625001907348633
    3. '+' → logprob: -15.625001907348633
    4. ']+\' → logprob: -15.625001907348633
    5. ']+"' → logprob: -17.625001907348633
    6. '']' → logprob: -17.625001907348633
    7. '}+' → logprob: -17.875001907348633
    8. '+]' → logprob: -18.000001907348633
    9. ']*' → logprob: -18.250001907348633
    10. '+(' → logprob: -18.625001907348633

Token 377: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.6656825866666622e-05
    2. ''(' → logprob: -11.62502670288086
    3. '(?' → logprob: -12.12502670288086
    4. ' (' → logprob: -12.12502670288086
    5. '](' → logprob: -13.25002670288086
    6. ')(' → logprob: -13.50002670288086
    7. '\(' → logprob: -14.00002670288086
    8. '```' → logprob: -14.50002670288086
    9. '?(' → logprob: -14.87502670288086
    10. '|(' → logprob: -14.87502670288086

Token 378: '?!' (ID: 25309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5792626142501831
    2. '?!' → logprob: -0.8292626142501831
    3. '?(' → logprob: -6.079262733459473
    4. '?' → logprob: -7.579262733459473
    5. '?!
' → logprob: -8.579262733459473
    6. '(?' → logprob: -9.079262733459473
    7. '```' → logprob: -9.454262733459473
    8. '？！' → logprob: -10.454262733459473
    9. ' (' → logprob: -10.954262733459473
    10. '[' → logprob: -11.204262733459473

Token 379: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.113398477435112
    2. '[a' → logprob: -2.238398551940918
    3. '[A' → logprob: -7.613398551940918
    4. '\[' → logprob: -10.738398551940918
    5. ')[' → logprob: -11.363398551940918
    6. '[
' → logprob: -11.488398551940918
    7. '[u' → logprob: -12.113398551940918
    8. ')' → logprob: -12.238398551940918
    9. '[^' → logprob: -12.363398551940918
    10. ' [' → logprob: -13.113398551940918

Token 380: 'a' (ID: 64)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.004572173114866018
    2. 'a' → logprob: -5.50457239151001
    3. '[' → logprob: -7.62957239151001
    4. '[
' → logprob: -13.129571914672852
    5. ' a' → logprob: -13.879571914672852
    6. ' [' → logprob: -14.254571914672852
    7. '[A' → logprob: -14.254571914672852
    8. '[z' → logprob: -14.629571914672852
    9. '   ' → logprob: -14.879571914672852
    10. ')[' → logprob: -15.004571914672852

Token 381: '-z' (ID: 16826)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5257759094238281
    2. '-z' → logprob: -1.0257759094238281
    3. 'a' → logprob: -3.275775909423828
    4. 'z' → logprob: -4.525775909423828
    5. '[z' → logprob: -6.650775909423828
    6. '[' → logprob: -8.650775909423828
    7. 'za' → logprob: -9.275775909423828
    8. ''z' → logprob: -9.775775909423828
    9. '-' → logprob: -9.900775909423828
    10. '])' → logprob: -10.900775909423828

Token 382: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.016254419460892677
    2. ')',' → logprob: -4.641254425048828
    3. ')' → logprob: -5.141254425048828
    4. ''])' → logprob: -8.516254425048828
    5. ']',' → logprob: -9.016254425048828
    6. ')','' → logprob: -10.141254425048828
    7. '))' → logprob: -10.266254425048828
    8. '')' → logprob: -10.266254425048828
    9. ')'' → logprob: -10.516254425048828
    10. ')]' → logprob: -10.641254425048828

Token 383: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.07798293232917786
    2. ')',' → logprob: -2.8279829025268555
    3. ',' → logprob: -4.3279829025268555
    4. ']',' → logprob: -5.9529829025268555
    5. ')' → logprob: -9.827982902526855
    6. '')' → logprob: -10.577982902526855
    7. '",' → logprob: -12.702982902526855
    8. '}',' → logprob: -12.702982902526855
    9. ''',' → logprob: -13.077982902526855
    10. ''' → logprob: -13.952982902526855

Token 384: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.00317783304490149
    2. ' identifier' → logprob: -5.753177642822266
    3. '(identifier' → logprob: -17.378177642822266
    4. 'Identifier' → logprob: -17.878177642822266
    5. '.identifier' → logprob: -18.753177642822266
    6. '                   ' → logprob: -19.128177642822266
    7. '_identifier' → logprob: -20.128177642822266
    8. 'ident' → logprob: -20.753177642822266
    9. '   ' → logprob: -21.003177642822266
    10. ' ' → logprob: -21.253177642822266

Token 385: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20148965716362
    2. ')
' → logprob: -1.7014896869659424
    3. '       ' → logprob: -10.201489448547363
    4. ')
' → logprob: -10.451489448547363
    5. '   ' → logprob: -13.201489448547363
    6. ')`
' → logprob: -13.201489448547363
    7. ')`' → logprob: -13.451489448547363
    8. ')

' → logprob: -13.451489448547363
    9. ')return' → logprob: -13.826489448547363
    10. ']' → logprob: -13.951489448547363

Token 386: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073759001679718494
    2. 'return' → logprob: -5.132375717163086
    3. '           ' → logprob: -6.757375717163086
    4. ' return' → logprob: -8.507375717163086
    5. '
' → logprob: -9.632375717163086
    6. '   ' → logprob: -11.757375717163086
    7. '	return' → logprob: -13.132375717163086
    8. '        
' → logprob: -13.257375717163086
    9. '<|end|>' → logprob: -13.882375717163086
    10. '	       ' → logprob: -14.757375717163086

Token 387: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.045989856123924255
    2. '       ' → logprob: -3.795989751815796
    3. ' return' → logprob: -3.795989751815796
    4. '           ' → logprob: -10.670989990234375
    5. '   ' → logprob: -13.170989990234375
    6. '	return' → logprob: -13.670989990234375
    7. '
' → logprob: -15.295989990234375
    8. '               ' → logprob: -15.670989990234375
    9. '```' → logprob: -16.545989990234375
    10. ')return' → logprob: -16.670989990234375

Token 388: ' [' (ID: 723)
  Prédit: '[word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[word' → logprob: -0.024714522063732147
    2. ' [' → logprob: -3.774714469909668
    3. '[' → logprob: -6.524714469909668
    4. '[token' → logprob: -15.524714469909668
    5. 'word' → logprob: -15.899714469909668
    6. ' word' → logprob: -16.024715423583984
    7. '[key' → logprob: -16.149715423583984
    8. '[user' → logprob: -16.149715423583984
    9. '[str' → logprob: -16.649715423583984
    10. '[name' → logprob: -16.649715423583984

Token 389: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -2.7968066206085496e-05
    2. 'w' → logprob: -11.125027656555176
    3. ' word' → logprob: -11.250027656555176
    4. 'token' → logprob: -17.250028610229492
    5. '[word' → logprob: -17.375028610229492
    6. 'wor' → logprob: -17.625028610229492
    7. 'part' → logprob: -17.875028610229492
    8. '	word' → logprob: -18.250028610229492
    9. '   ' → logprob: -18.750028610229492
    10. '(word' → logprob: -18.875028610229492

Token 390: '.lower' (ID: 41290)
  Prédit: '.lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -5.8961017202818766e-05
    2. '.' → logprob: -9.750059127807617
    3. ' .' → logprob: -15.250059127807617
    4. 'lower' → logprob: -15.500059127807617
    5. '.to' → logprob: -16.625059127807617
    6. '.low' → logprob: -18.000059127807617
    7. '].' → logprob: -18.375059127807617
    8. '_lower' → logprob: -18.625059127807617
    9. '.word' → logprob: -19.250059127807617
    10. '   ' → logprob: -19.500059127807617

Token 391: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.45848218582978e-06
    2. '()
' → logprob: -13.25000286102295
    3. 'for' → logprob: -14.62500286102295
    4. '()]' → logprob: -16.250001907348633
    5. ' ()' → logprob: -16.750001907348633
    6. ' for' → logprob: -17.000001907348633
    7. '()[' → logprob: -17.750001907348633
    8. '(' → logprob: -18.375001907348633
    9. '()`' → logprob: -18.875001907348633
    10. '()

' → logprob: -18.875001907348633

Token 392: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16077066957950592
    2. ' for' → logprob: -1.9107706546783447
    3. '()' → logprob: -7.910770893096924
    4. ')' → logprob: -8.660770416259766
    5. ']' → logprob: -12.910770416259766
    6. 'word' → logprob: -13.535770416259766
    7. '   ' → logprob: -14.410770416259766
    8. '
' → logprob: -14.910770416259766
    9. ' ' → logprob: -15.285770416259766
    10. '(word' → logprob: -15.285770416259766

Token 393: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.29252228140830994
    2. ' word' → logprob: -1.4175223112106323
    3. 'parts' → logprob: -4.792522430419922
    4. ' parts' → logprob: -6.042522430419922
    5. 'part' → logprob: -7.417522430419922
    6. ' part' → logprob: -10.792522430419922
    7. ' ' → logprob: -11.292522430419922
    8. '   ' → logprob: -13.792522430419922
    9. '	word' → logprob: -13.917522430419922
    10. 'w' → logprob: -14.292522430419922

Token 394: ' in' (ID: 306)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.5157963037490845
    2. ' in' → logprob: -1.5157963037490845
    3. ' parts' → logprob: -1.7657963037490845
    4. '(parts' → logprob: -4.515796184539795
    5. 'in' → logprob: -6.765796184539795
    6. 's' → logprob: -9.765796661376953
    7. 'word' → logprob: -9.890796661376953
    8. 'words' → logprob: -10.515796661376953
    9. '   ' → logprob: -11.515796661376953
    10. 'Parts' → logprob: -11.765796661376953

Token 395: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0024763736873865128
    2. ' parts' → logprob: -6.002476215362549
    3. '(parts' → logprob: -14.502476692199707
    4. '   ' → logprob: -16.62747573852539
    5. ' ' → logprob: -17.12747573852539
    6. 'part' → logprob: -17.25247573852539
    7. '
' → logprob: -17.87747573852539
    8. 'words' → logprob: -18.25247573852539
    9. '.parts' → logprob: -19.00247573852539
    10. '  ' → logprob: -19.37747573852539

Token 396: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05207790434360504
    2. '<|end|>' → logprob: -3.6770780086517334
    3. '
' → logprob: -4.052077770233154
    4. 'def' → logprob: -5.177077770233154
    5. '```' → logprob: -6.427077770233154
    6. '<|end|>' → logprob: -7.677077770233154
    7. ' def' → logprob: -9.552078247070312
    8. '

' → logprob: -9.677078247070312
    9. '    
' → logprob: -9.927078247070312
    10. ')' → logprob: -10.302078247070312

Token 398: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.350386295001954e-05
    2. '   ' → logprob: -10.250073432922363
    3. ' def' → logprob: -10.875073432922363
    4. '
' → logprob: -10.875073432922363
    5. '```' → logprob: -16.25007438659668
    6. '    
' → logprob: -16.62507438659668
    7. '	def' → logprob: -16.75007438659668
    8. '

' → logprob: -18.75007438659668
    9. ' ' → logprob: -19.12507438659668
    10. '        
' → logprob: -19.87507438659668

Token 399: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.0015024791937321424
    2. ' from' → logprob: -6.501502513885498
    3. 'def' → logprob: -15.75150203704834
    4. '_from' → logprob: -18.876502990722656
    5. 'to' → logprob: -20.001502990722656
    6. 'From' → logprob: -20.126502990722656
    7. ' def' → logprob: -20.126502990722656
    8. '.from' → logprob: -20.126502990722656
    9. '	from' → logprob: -20.251502990722656
    10. '
' → logprob: -20.751502990722656

Token 400: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.875
    3. '```' → logprob: -16.5
    4. '_w' → logprob: -17.25
    5. '_
' → logprob: -18.375
    6. '_word' → logprob: -18.625
    7. '_letters' → logprob: -18.625
    8. '_terms' → logprob: -18.875
    9. '_keywords' → logprob: -19.25
    10. '_lines' → logprob: -19.25

Token 401: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.24310302757658e-05
    2. '(' → logprob: -9.750072479248047
    3. ' (' → logprob: -12.000072479248047
    4. 'self' → logprob: -12.250072479248047
    5. '(s' → logprob: -13.125072479248047
    6. '   ' → logprob: -14.500072479248047
    7. '(
' → logprob: -15.875072479248047
    8. ' self' → logprob: -16.000072479248047
    9. '[self' → logprob: -16.125072479248047
    10. ',' → logprob: -16.250072479248047

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2531145513057709
    2. '(self' → logprob: -1.5031145811080933
    3. 'self' → logprob: -7.128114700317383
    4. ',self' → logprob: -8.003114700317383
    5. ' (' → logprob: -11.503114700317383
    6. ' ,' → logprob: -11.628114700317383
    7. ' self' → logprob: -11.753114700317383
    8. '(' → logprob: -11.753114700317383
    9. ')' → logprob: -12.253114700317383
    10. '   ' → logprob: -12.503114700317383

Token 403: ' words' (ID: 6391)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07102661579847336
    2. 'words' → logprob: -2.946026563644409
    3. ' self' → logprob: -4.321026802062988
    4. ' words' → logprob: -5.946026802062988
    5. '   ' → logprob: -10.446026802062988
    6. '       ' → logprob: -10.696026802062988
    7. 'def' → logprob: -11.196026802062988
    8. '[self' → logprob: -11.196026802062988
    9. '(self' → logprob: -11.196026802062988
    10. 'list' → logprob: -11.446026802062988

Token 404: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001083302078768611
    2. ')' → logprob: -8.001083374023438
    3. '(self' → logprob: -8.126083374023438
    4. '[' → logprob: -8.251083374023438
    5. '):' → logprob: -9.876083374023438
    6. '   ' → logprob: -9.876083374023438
    7. '[self' → logprob: -10.001083374023438
    8. 'self' → logprob: -10.876083374023438
    9. ' :' → logprob: -12.376083374023438
    10. ',' → logprob: -12.501083374023438

Token 405: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03518157824873924
    2. ' list' → logprob: -3.7851815223693848
    3. '[list' → logprob: -4.535181522369385
    4. '[str' → logprob: -6.785181522369385
    5. 'str' → logprob: -11.910181999206543
    6. '[word' → logprob: -13.410181999206543
    7. ' [' → logprob: -14.910181999206543
    8. '[' → logprob: -15.035181999206543
    9. '[List' → logprob: -15.285181999206543
    10. '(list' → logprob: -15.410181999206543

Token 406: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.27099974633893e-05
    2. '[' → logprob: -11.500012397766113
    3. ':str' → logprob: -14.250012397766113
    4. '[
' → logprob: -14.625012397766113
    5. '[int' → logprob: -15.375012397766113
    6. 'str' → logprob: -15.500012397766113
    7. '```' → logprob: -15.500012397766113
    8. ':' → logprob: -15.500012397766113
    9. '   ' → logprob: -15.750012397766113
    10. ' [' → logprob: -16.00001335144043

Token 407: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4743533134460449
    2. '])' → logprob: -0.9743533134460449
    3. ']' → logprob: -8.224353790283203
    4. '):' → logprob: -13.349353790283203
    5. '   ' → logprob: -13.599353790283203
    6. ']):' → logprob: -13.974353790283203
    7. '[' → logprob: -14.349353790283203
    8. ')]' → logprob: -14.474353790283203
    9. '):
' → logprob: -14.599353790283203
    10. ' )' → logprob: -14.974353790283203

Token 408: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.04601774737238884
    2. ' ->' → logprob: -3.546017646789551
    3. ')' → logprob: -4.171017646789551
    4. ':' → logprob: -7.796017646789551
    5. '   ' → logprob: -9.29601764678955
    6. ')->' → logprob: -9.67101764678955
    7. '>' → logprob: -10.42101764678955
    8. '->[' → logprob: -10.54601764678955
    9. '       ' → logprob: -10.67101764678955
    10. ':
' → logprob: -10.92101764678955

Token 409: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.005586737301200628
    2. '[str' → logprob: -5.505586624145508
    3. ' str' → logprob: -6.505586624145508
    4. 'list' → logprob: -12.005586624145508
    5. '(str' → logprob: -12.630586624145508
    6. '[' → logprob: -13.880586624145508
    7. '[
' → logprob: -14.505586624145508
    8. '   ' → logprob: -15.005586624145508
    9. '
' → logprob: -15.630586624145508
    10. 's' → logprob: -15.755586624145508

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08753135800361633
    2. ':
' → logprob: -2.587531328201294
    3. '->' → logprob: -6.087531566619873
    4. ')' → logprob: -6.462531566619873
    5. '   ' → logprob: -6.712531566619873
    6. '       ' → logprob: -6.837531566619873
    7. ':return' → logprob: -6.962531566619873
    8. '(self' → logprob: -7.087531566619873
    9. ' ->' → logprob: -8.212531089782715
    10. '[' → logprob: -8.837531089782715

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05776847526431084
    2. '   ' → logprob: -3.3077685832977295
    3. 'return' → logprob: -4.30776834487915
    4. ' return' → logprob: -5.55776834487915
    5. 'if' → logprob: -6.80776834487915
    6. ' if' → logprob: -7.05776834487915
    7. '
' → logprob: -9.057768821716309
    8. 'words' → logprob: -9.932768821716309
    9. ' words' → logprob: -10.307768821716309
    10. '	return' → logprob: -11.432768821716309

Token 412: ' if' (ID: 538)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.21943628787994385
    2. 'return' → logprob: -2.2194361686706543
    3. 'if' (adapté à ' if') → logprob: -2.4694361686706543
    4. ' words' → logprob: -6.219436168670654
    5. '   ' → logprob: -6.969436168670654
    6. ' return' → logprob: -7.969436168670654
    7. ' if' → logprob: -8.469436645507812
    8. '       ' → logprob: -8.469436645507812
    9. '(words' → logprob: -10.969436645507812
    10. 'word' → logprob: -12.594436645507812

Token 413: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10039752721786499
    2. ' not' → logprob: -2.3503975868225098
    3. 'len' → logprob: -9.225397109985352
    4. 'words' → logprob: -9.350397109985352
    5. ' len' → logprob: -13.350397109985352
    6. ' words' → logprob: -13.475397109985352
    7. '	not' → logprob: -13.725397109985352
    8. '!' → logprob: -14.600397109985352
    9. '   ' → logprob: -15.600397109985352
    10. '(not' → logprob: -15.725397109985352

Token 414: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.16022595763206482
    2. ' words' → logprob: -1.9102259874343872
    3. '(words' → logprob: -13.660225868225098
    4. 'w' → logprob: -15.535225868225098
    5. '.words' → logprob: -16.035226821899414
    6. 'Words' → logprob: -16.410226821899414
    7. '_words' → logprob: -16.410226821899414
    8. '   ' → logprob: -16.660226821899414
    9. ' ' → logprob: -17.660226821899414
    10. 's' → logprob: -17.785226821899414

Token 415: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010800556279718876
    2. ':
' → logprob: -4.760800361633301
    3. ':return' → logprob: -6.135800361633301
    4. '<|end|>' → logprob: -12.1358003616333
    5. 'return' → logprob: -12.5108003616333
    6. ')' → logprob: -13.0108003616333
    7. ' :' → logprob: -13.1358003616333
    8. '[' → logprob: -13.2608003616333
    9. '   ' → logprob: -14.0108003616333
    10. '):' → logprob: -14.1358003616333

Token 416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13460750877857208
    2. 'return' → logprob: -2.5096075534820557
    3. ' return' → logprob: -3.5096075534820557
    4. '       ' → logprob: -4.384607315063477
    5. '   ' → logprob: -7.884607315063477
    6. '[' → logprob: -8.009607315063477
    7. '        
' → logprob: -8.759607315063477
    8. '        ' → logprob: -8.884607315063477
    9. ' ' → logprob: -9.134607315063477
    10. ',' → logprob: -9.134607315063477

Token 417: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2485474795103073
    2. '''' → logprob: -2.2485475540161133
    3. '''
' → logprob: -2.2485475540161133
    4. '""' → logprob: -5.123547554016113
    5. ' return' → logprob: -6.748547554016113
    6. '"' → logprob: -6.998547554016113
    7. '           ' → logprob: -7.248547554016113
    8. ''' → logprob: -9.123547554016113
    9. '       ' → logprob: -10.123547554016113
    10. '
' → logprob: -11.873547554016113

Token 418: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.01815333589911461
    2. '""' → logprob: -4.018153190612793
    3. '"' → logprob: -13.268153190612793
    4. '''
' → logprob: -13.518153190612793
    5. ''' → logprob: -15.018153190612793
    6. ' ''' → logprob: -19.01815414428711
    7. ''',' → logprob: -19.01815414428711
    8. '''.' → logprob: -21.26815414428711
    9. ' ""' → logprob: -21.39315414428711
    10. ''''' → logprob: -22.01815414428711

Token 419: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.26927056908607483
    2. '       ' → logprob: -1.7692705392837524
    3. 'words' → logprob: -3.019270658493042
    4. ' return' → logprob: -4.769270420074463
    5. '
' → logprob: -5.644270420074463
    6. ' words' → logprob: -5.894270420074463
    7. '   ' → logprob: -6.769270420074463
    8. 'first' → logprob: -7.769270420074463
    9. 'result' → logprob: -8.644270896911621
    10. '        
' → logprob: -8.769270896911621

Token 420: ' first' (ID: 1577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0029762759804725647
    2. 'first' (adapté à ' first') → logprob: -6.252976417541504
    3. 'result' → logprob: -7.002976417541504
    4. ' return' → logprob: -9.002976417541504
    5. 'words' → logprob: -11.252976417541504
    6. '   ' → logprob: -14.877976417541504
    7. '[first' → logprob: -14.877976417541504
    8. 'parts' → logprob: -15.002976417541504
    9. '	return' → logprob: -15.127976417541504
    10. ' first' → logprob: -15.502976417541504

Token 421: ' =' (ID: 314)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.14930923283100128
    2. ' =' → logprob: -2.2743091583251953
    3. '=' → logprob: -3.6493091583251953
    4. 'word' → logprob: -5.149309158325195
    5. '_' → logprob: -5.649309158325195
    6. ' word' → logprob: -8.899309158325195
    7. '_words' → logprob: -9.024309158325195
    8. ',' → logprob: -10.524309158325195
    9. '.' → logprob: -10.524309158325195
    10. '_token' → logprob: -10.524309158325195

Token 422: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -1.5048530030981055e-06
    2. ' words' → logprob: -13.500001907348633
    3. 'word' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '(words' → logprob: -19.500001907348633
    6. '       ' → logprob: -20.000001907348633
    7. 'w' → logprob: -21.500001907348633
    8. '.words' → logprob: -21.500001907348633
    9. '     ' → logprob: -22.875001907348633
    10. 'Words' → logprob: -23.125001907348633

Token 423: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '0' → logprob: -18.625
    3. '.lower' → logprob: -19.25
    4. '```' → logprob: -20.0
    5. ' [' → logprob: -21.625
    6. '   ' → logprob: -22.0
    7. '(' → logprob: -22.625
    8. 'lower' → logprob: -22.625
    9. '       ' → logprob: -23.25
    10. '1' → logprob: -23.25

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '[' → logprob: -17.25
    4. '   ' → logprob: -19.375
    5. '00' → logprob: -20.0
    6. '۰' → logprob: -20.6875
    7. '```' → logprob: -20.9375
    8. '1' → logprob: -21.1875
    9. '000' → logprob: -21.3125
    10. '
' → logprob: -21.3125

Token 425: '].' (ID: 1651)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.06338819116353989
    2. ']' → logprob: -2.8133881092071533
    3. '].' → logprob: -7.313388347625732
    4. ')' → logprob: -7.563388347625732
    5. 'lower' → logprob: -8.563387870788574
    6. ']
' → logprob: -10.438387870788574
    7. '.' → logprob: -12.563387870788574
    8. ').' → logprob: -12.688387870788574
    9. '])' → logprob: -13.438387870788574
    10. '_lower' → logprob: -13.938387870788574

Token 426: 'lower' (ID: 30330)
  Prédit: 'lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -3.128163257315464e-07
    2. '.lower' → logprob: -16.125
    3. ' lower' → logprob: -16.875
    4. 'low' → logprob: -17.25
    5. '_lower' → logprob: -19.125
    6. '(lower' → logprob: -19.625
    7. 'Lower' → logprob: -20.375
    8. 'l' → logprob: -22.0
    9. '```' → logprob: -22.0
    10. 'lo' → logprob: -22.875

Token 427: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.41866585687967e-06
    2. '()+' → logprob: -12.750008583068848
    3. '(' → logprob: -12.875008583068848
    4. '()
' → logprob: -13.000008583068848
    5. ' ()' → logprob: -15.125008583068848
    6. '())' → logprob: -15.875008583068848
    7. '(),' → logprob: -17.12500762939453
    8. '()*' → logprob: -17.12500762939453
    9. '()

' → logprob: -17.12500762939453
    10. '()]' → logprob: -17.37500762939453

Token 428: '       ' (ID: 309)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.020522037521004677
    2. '       ' → logprob: -4.145522117614746
    3. ' rest' → logprob: -5.520522117614746
    4. '_rest' → logprob: -8.645522117614746
    5. '(rest' → logprob: -9.145522117614746
    6. '''.' → logprob: -9.895522117614746
    7. '.rest' → logprob: -10.270522117614746
    8. 'second' → logprob: -10.895522117614746
    9. '
' → logprob: -11.145522117614746
    10. 'Rest' → logprob: -11.270522117614746

Token 429: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' (adapté à ' rest') → logprob: -0.00024144348572008312
    2. '       ' → logprob: -9.25024127960205
    3. ' rest' → logprob: -9.50024127960205
    4. '   ' → logprob: -10.37524127960205
    5. 'return' → logprob: -11.00024127960205
    6. 'others' → logprob: -11.37524127960205
    7. 're' → logprob: -12.00024127960205
    8. 'second' → logprob: -13.50024127960205
    9. 'remaining' → logprob: -13.87524127960205
    10. 'result' → logprob: -14.37524127960205

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04303789883852005
    2. ' =' → logprob: -3.1680378913879395
    3. '+=' → logprob: -11.418038368225098
    4. '='' → logprob: -12.043038368225098
    5. '.extend' → logprob: -12.418038368225098
    6. '=[' → logprob: -12.543038368225098
    7. '.' → logprob: -12.543038368225098
    8. '.=' → logprob: -12.793038368225098
    9. '+' → logprob: -13.293038368225098
    10. '.append' → logprob: -13.793038368225098

Token 431: ' [' (ID: 723)
  Prédit: '[word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[word' → logprob: -0.4516890048980713
    2. '''.' → logprob: -1.0766890048980713
    3. '[' → logprob: -4.201688766479492
    4. ' ''.' → logprob: -5.451688766479492
    5. ' [' → logprob: -6.201688766479492
    6. '(word' → logprob: -7.701688766479492
    7. 'word' → logprob: -7.826688766479492
    8. '''' → logprob: -8.326688766479492
    9. '[w' → logprob: -9.451688766479492
    10. '['' → logprob: -9.576688766479492

Token 432: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.00034023032640106976
    2. 'w' → logprob: -8.000340461730957
    3. ' word' → logprob: -12.250340461730957
    4. '   ' → logprob: -18.12533950805664
    5. ' w' → logprob: -18.50033950805664
    6. ' ' → logprob: -19.25033950805664
    7. '	word' → logprob: -19.62533950805664
    8. '(word' → logprob: -19.75033950805664
    9. '       ' → logprob: -20.87533950805664
    10. '[word' → logprob: -22.00033950805664

Token 433: '.capitalize' (ID: 195879)
  Prédit: '.capitalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.capitalize' → logprob: -0.0001434690784662962
    2. '.' → logprob: -9.625143051147461
    3. 'capitalize' → logprob: -10.000143051147461
    4. '.title' → logprob: -10.375143051147461
    5. '.cap' → logprob: -14.500143051147461
    6. ' .' → logprob: -16.00014305114746
    7. '   ' → logprob: -16.25014305114746
    8. ' capitalize' → logprob: -17.75014305114746
    9. '.Cap' → logprob: -18.37514305114746
    10. '.word' → logprob: -18.50014305114746

Token 434: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00037859921576455235
    2. '(word' → logprob: -8.000378608703613
    3. 'for' → logprob: -10.125378608703613
    4. ' ()' → logprob: -14.250378608703613
    5. '()
' → logprob: -14.625378608703613
    6. ' for' → logprob: -14.625378608703613
    7. '()[' → logprob: -14.875378608703613
    8. '()]' → logprob: -15.000378608703613
    9. '())' → logprob: -15.625378608703613
    10. 'word' → logprob: -15.750378608703613

Token 435: ' for' (ID: 395)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.011901638470590115
    2. '()' → logprob: -5.26190185546875
    3. 'for' → logprob: -5.26190185546875
    4. ' for' → logprob: -6.76190185546875
    5. 'word' → logprob: -9.13690185546875
    6. '(' → logprob: -9.51190185546875
    7. '(w' → logprob: -10.01190185546875
    8. ')' → logprob: -10.38690185546875
    9. ' word' → logprob: -10.63690185546875
    10. '[word' → logprob: -12.01190185546875

Token 436: ' word' (ID: 2195)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.18905387818813324
    2. 'words' → logprob: -2.439053773880005
    3. ' word' → logprob: -2.939053773880005
    4. 'word' → logprob: -3.439053773880005
    5. 'w' → logprob: -13.314053535461426
    6. '(words' → logprob: -14.564053535461426
    7. ' ' → logprob: -14.689053535461426
    8. '_words' → logprob: -14.939053535461426
    9. '	word' → logprob: -15.064053535461426
    10. '   ' → logprob: -15.439053535461426

Token 437: ' in' (ID: 306)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.02988007292151451
    2. ' words' → logprob: -3.5298800468444824
    3. '(words' → logprob: -9.02988052368164
    4. 'word' → logprob: -11.77988052368164
    5. '   ' → logprob: -13.65488052368164
    6. '.words' → logprob: -14.40488052368164
    7. '       ' → logprob: -15.15488052368164
    8. '_words' → logprob: -16.27988052368164
    9. ' word' → logprob: -17.52988052368164
    10. 'in' → logprob: -17.65488052368164

Token 438: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.011050531640648842
    2. ' words' → logprob: -4.511050701141357
    3. '   ' → logprob: -13.5110502243042
    4. '(words' → logprob: -14.0110502243042
    5. ' ' → logprob: -16.136051177978516
    6. '.words' → logprob: -16.261051177978516
    7. '       ' → logprob: -16.386051177978516
    8. 'word' → logprob: -16.511051177978516
    9. '_words' → logprob: -16.636051177978516
    10. '  ' → logprob: -17.011051177978516

Token 439: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015077205607667565
    2. '1' → logprob: -6.501507759094238
    3. '   ' → logprob: -12.876507759094238
    4. '       ' → logprob: -13.376507759094238
    5. ']' → logprob: -15.126507759094238
    6. '2' → logprob: -15.126507759094238
    7. ' [' → logprob: -15.376507759094238
    8. ' ' → logprob: -15.751507759094238
    9. '           ' → logprob: -15.876507759094238
    10. 'from' → logprob: -16.126506805419922

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.875001907348633
    3. '   ' → logprob: -14.375001907348633
    4. ' ' → logprob: -14.625001907348633
    5. 'from' → logprob: -17.875001907348633
    6. '```' → logprob: -18.000001907348633
    7. '       ' → logprob: -19.125001907348633
    8. '
' → logprob: -19.375001907348633
    9. '  ' → logprob: -19.750001907348633
    10. '(' → logprob: -20.125001907348633

Token 441: ':' (ID: 25)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.4520137310028076
    2. ':' → logprob: -1.0770137310028076
    3. ':]' → logprob: -4.327013969421387
    4. ']' → logprob: -5.452013969421387
    5. '[' → logprob: -6.077013969421387
    6. ')]' → logprob: -6.077013969421387
    7. '1' → logprob: -7.952013969421387
    8. '>]' → logprob: -8.827013969421387
    9. '']]' → logprob: -8.952013969421387
    10. '[]' → logprob: -8.952013969421387

Token 442: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019469641847535968
    2. ']
' → logprob: -6.251946926116943
    3. ')]' → logprob: -11.751947402954102
    4. '()]' → logprob: -12.126947402954102
    5. ' ]' → logprob: -12.751947402954102
    6. ']

' → logprob: -14.376947402954102
    7. ']]' → logprob: -14.501947402954102
    8. '])' → logprob: -15.001947402954102
    9. '       ' → logprob: -15.376947402954102
    10. ']
' → logprob: -15.501947402954102

Token 443: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030734827741980553
    2. 'return' → logprob: -3.7807347774505615
    3. '
' → logprob: -5.405735015869141
    4. ' return' → logprob: -5.905735015869141
    5. '	return' → logprob: -8.90573501586914
    6. '   ' → logprob: -10.03073501586914
    7. '<|end|>' → logprob: -10.40573501586914
    8. '        
' → logprob: -10.90573501586914
    9. '	' → logprob: -11.65573501586914
    10. '    
' → logprob: -13.40573501586914

Token 444: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7193167805671692
    2. 'return' (adapté à ' return') → logprob: -0.7193167805671692
    3. ' return' → logprob: -3.7193167209625244
    4. '
' → logprob: -6.5943169593811035
    5. '	return' → logprob: -8.719316482543945
    6. '   ' → logprob: -10.344316482543945
    7. '	' → logprob: -11.469316482543945
    8. '        
' → logprob: -12.969316482543945
    9. 'eturn' → logprob: -14.469316482543945
    10. ' ' → logprob: -14.969316482543945

Token 445: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.006729695480316877
    2. ' first' → logprob: -5.006729602813721
    3. 'f' → logprob: -11.256730079650879
    4. '[first' → logprob: -14.506730079650879
    5. '	first' → logprob: -14.506730079650879
    6. ' f' → logprob: -15.006730079650879
    7. '(first' → logprob: -16.131729125976562
    8. ' ' → logprob: -17.756729125976562
    9. '.first' → logprob: -18.131729125976562
    10. '''.' → logprob: -18.756729125976562

Token 446: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011049704626202583
    2. ' +' → logprob: -4.511049747467041
    3. '+
' → logprob: -14.136049270629883
    4. '''' → logprob: -14.386049270629883
    5. '+'' → logprob: -14.886049270629883
    6. '''.' → logprob: -16.761049270629883
    7. '+(' → logprob: -17.011049270629883
    8. '+"' → logprob: -17.136049270629883
    9. '+'.' → logprob: -17.261049270629883
    10. '+=' → logprob: -17.886049270629883

Token 447: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0112535385414958
    2. ' ''.' → logprob: -4.511253356933594
    3. '''' → logprob: -8.886253356933594
    4. 'rest' → logprob: -10.011253356933594
    5. ' rest' → logprob: -10.886253356933594
    6. ''' → logprob: -13.011253356933594
    7. '''
' → logprob: -14.511253356933594
    8. '('' → logprob: -15.261253356933594
    9. ' ' → logprob: -15.386253356933594
    10. ''',' → logprob: -16.011253356933594

Token 448: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.054500666621607e-06
    2. '''.' → logprob: -12.75000286102295
    3. 'jo' → logprob: -16.875003814697266
    4. 'j' → logprob: -17.875003814697266
    5. ' join' → logprob: -18.250003814697266
    6. ''.' → logprob: -19.125003814697266
    7. 'concat' → logprob: -19.250003814697266
    8. '''' → logprob: -19.875003814697266
    9. '(join' → logprob: -20.000003814697266
    10. '```' → logprob: -20.375003814697266

Token 449: '(rest' (ID: 117922)
  Prédit: '(rest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rest' → logprob: -0.0001584850688232109
    2. 'rest' → logprob: -8.750158309936523
    3. '(' → logprob: -20.125158309936523
    4. '.rest' → logprob: -20.500158309936523
    5. ' rest' → logprob: -20.625158309936523
    6. '(Rest' → logprob: -21.500158309936523
    7. 'Rest' → logprob: -22.000158309936523
    8. '(res' → logprob: -22.500158309936523
    9. '_rest' → logprob: -22.625158309936523
    10. '```' → logprob: -22.625158309936523

Token 450: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004935794277116656
    2. '<|end|>' → logprob: -7.62549352645874
    3. '<|end|>' → logprob: -13.625494003295898
    4. '')' → logprob: -13.625494003295898
    5. '}' → logprob: -14.125494003295898
    6. ')return' → logprob: -14.750494003295898
    7. '       ' → logprob: -15.000494003295898
    8. '())' → logprob: -15.250494003295898
    9. ']' → logprob: -15.625494003295898
    10. '   ' → logprob: -15.750494003295898

Token 451: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.6240566083070007e-06
    2. '_class' → logprob: -14.375001907348633
    3. ' class' → logprob: -14.500001907348633
    4. '"class' → logprob: -15.750001907348633
    5. '<class' → logprob: -16.875001907348633
    6. '#' → logprob: -17.500001907348633
    7. 'snake' → logprob: -17.625001907348633
    8. 'Class' → logprob: -18.125001907348633
    9. 'clas' → logprob: -18.250001907348633
    10. ''class' → logprob: -18.250001907348633

Token 452: ' Und' (ID: 13378)
  Prédit: 'Snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Snake' → logprob: -0.0017259917221963406
    2. 'Lower' → logprob: -6.751726150512695
    3. ' Snake' → logprob: -7.751726150512695
    4. 'snake' → logprob: -9.876726150512695
    5. '_sn' → logprob: -10.251726150512695
    6. 'Upper' → logprob: -11.001726150512695
    7. '_S' → logprob: -11.501726150512695
    8. ' snake' → logprob: -12.501726150512695
    9. 'Und' → logprob: -12.501726150512695
    10. 'S' → logprob: -13.251726150512695

Token 453: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.0015035520773380995
    2. 'er' → logprob: -6.5015034675598145
    3. 'es' → logprob: -14.001503944396973
    4. 'erc' → logprob: -14.751503944396973
    5. 'erd' → logprob: -18.501502990722656
    6. 'ert' → logprob: -20.251502990722656
    7. '```' → logprob: -20.376502990722656
    8. 'erse' → logprob: -20.751502990722656
    9. 'erground' → logprob: -20.876502990722656
    10. 'erp' → logprob: -21.001502990722656

Token 454: 'core' (ID: 6978)
  Prédit: 'core'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -15.875
    3. 'ore' → logprob: -15.875
    4. 'cores' → logprob: -17.5
    5. 'CORE' → logprob: -17.625
    6. 'Core' → logprob: -17.75
    7. 'score' → logprob: -17.875
    8. 'code' → logprob: -18.25
    9. 'ocre' → logprob: -18.375
    10. 'cor' → logprob: -19.375

Token 455: 'Converter' (ID: 18762)
  Prédit: 'Case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.004127792082726955
    2. 'Separated' → logprob: -5.5041279792785645
    3. 'Style' → logprob: -10.379127502441406
    4. '_case' → logprob: -11.754127502441406
    5. 'Lower' → logprob: -12.129127502441406
    6. 'Snake' → logprob: -13.629127502441406
    7. 'Separator' → logprob: -13.754127502441406
    8. 'Name' → logprob: -14.254127502441406
    9. 'case' → logprob: -14.504127502441406
    10. 'Se' → logprob: -15.004127502441406

Token 456: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.25
    3. '(case' → logprob: -18.0
    4. '(Base' → logprob: -19.75
    5. 'Case' → logprob: -20.25
    6. '((' → logprob: -20.75
    7. '(
' → logprob: -21.25
    8. ' (' → logprob: -21.375
    9. '(c' → logprob: -21.625
    10. '(Class' → logprob: -21.75

Token 457: 'ase' (ID: 618)
  Prédit: 'ase'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -6.301394023466855e-05
    2. 'Case' → logprob: -9.750062942504883
    3. 'case' → logprob: -12.750062942504883
    4. 'on' → logprob: -14.750062942504883
    5. '(' → logprob: -15.000062942504883
    6. '_case' → logprob: -15.375062942504883
    7. 'ASE' → logprob: -15.625062942504883
    8. '(C' → logprob: -16.125062942504883
    9. '_' → logprob: -16.250062942504883
    10. '```' → logprob: -16.500062942504883

Token 458: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.2520790696144104
    2. 'Case' → logprob: -1.5020790100097656
    3. 'Separator' → logprob: -9.502079010009766
    4. '_converter' → logprob: -10.877079010009766
    5. 'Snake' → logprob: -11.627079010009766
    6. '_' → logprob: -11.752079010009766
    7. 'Separated' → logprob: -12.377079010009766
    8. '_case' → logprob: -12.502079010009766
    9. '```' → logprob: -12.752079010009766
    10. 'Cases' → logprob: -13.002079010009766

Token 459: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18475140631198883
    2. '):
' → logprob: -1.8097513914108276
    3. '(C' → logprob: -5.559751510620117
    4. ':' → logprob: -7.184751510620117
    5. ')' → logprob: -8.684751510620117
    6. '(' → logprob: -9.559751510620117
    7. '   ' → logprob: -10.059751510620117
    8. '():' → logprob: -10.309751510620117
    9. ':
' → logprob: -10.434751510620117
    10. '):
' → logprob: -11.434751510620117

Token 460: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030674142180942
    2. '    ' → logprob: -9.250307083129883
    3. 'def' → logprob: -9.500307083129883
    4. '```' → logprob: -10.125307083129883
    5. ' def' → logprob: -10.375307083129883
    6. '    
' → logprob: -10.500307083129883
    7. '
' → logprob: -10.625307083129883
    8. '  ' → logprob: -12.375307083129883
    9. '"""' → logprob: -13.250307083129883
    10. ' ' → logprob: -13.750307083129883

Token 461: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6934614777565002
    2. '"""' (adapté à ' """') → logprob: -0.6934614777565002
    3. ' """' → logprob: -8.568461418151855
    4. 'def' → logprob: -9.693461418151855
    5. 'class' → logprob: -10.568461418151855
    6. '""""' → logprob: -11.068461418151855
    7. '"""
' → logprob: -11.318461418151855
    8. ' def' → logprob: -13.068461418151855
    9. '    ' → logprob: -13.193461418151855
    10. '""' → logprob: -13.568461418151855

Token 462: 'Und' (ID: 20013)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.12387962639331818
    2. 'def' → logprob: -2.8738796710968018
    3. 'Upper' → logprob: -3.8738796710968018
    4. 'Lower' → logprob: -3.9988796710968018
    5. 'Und' → logprob: -4.998879432678223
    6. '   ' → logprob: -5.123879432678223
    7. 'class' → logprob: -5.623879432678223
    8. ' """' → logprob: -7.123879432678223
    9. '"""
' → logprob: -7.748879432678223
    10. '"' → logprob: -7.748879432678223

Token 463: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -4.008129963040119e-06
    2. 'er' → logprob: -12.750003814697266
    3. '```' → logprob: -14.875003814697266
    4. 'es' → logprob: -15.250003814697266
    5. '_' → logprob: -16.875003814697266
    6. '   ' → logprob: -17.000003814697266
    7. '__' → logprob: -17.250003814697266
    8. ' ers' → logprob: -17.375003814697266
    9. 'score' → logprob: -17.625003814697266
    10. 'ERS' → logprob: -17.625003814697266

Token 464: 'core' (ID: 6978)
  Prédit: 'core'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' → logprob: -6.432518421206623e-05
    2. 'ore' → logprob: -10.2500638961792
    3. 'score' → logprob: -11.2500638961792
    4. '```' → logprob: -11.8750638961792
    5. 'code' → logprob: -12.6250638961792
    6. 'ocre' → logprob: -13.7500638961792
    7. 'c' → logprob: -14.0000638961792
    8. 'cores' → logprob: -14.0000638961792
    9. '__' → logprob: -14.7500638961792
    10. '_' → logprob: -14.8750638961792

Token 465: ':' (ID: 25)
  Prédit: 'Separated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Separated' → logprob: -0.2894829511642456
    2. '_se' → logprob: -2.164483070373535
    3. 'Case' → logprob: -2.664483070373535
    4. '_case' → logprob: -2.789483070373535
    5. 'Delimited' → logprob: -6.914483070373535
    6. ' separated' → logprob: -7.039483070373535
    7. '_' → logprob: -7.164483070373535
    8. 'Se' → logprob: -7.414483070373535
    9. '-separated' → logprob: -7.539483070373535
    10. 'se' → logprob: -8.164483070373535

Token 466: ' all' (ID: 722)
  Prédit: 'Words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Words' → logprob: -0.5160329341888428
    2. 'Lower' → logprob: -1.5160329341888428
    3. 'lower' → logprob: -3.3910329341888428
    4. '"""' → logprob: -3.7660329341888428
    5. 'Each' → logprob: -3.8910329341888428
    6. 'words' → logprob: -3.8910329341888428
    7. 'snake' → logprob: -4.141033172607422
    8. 'Snake' → logprob: -4.266033172607422
    9. '_words' → logprob: -4.391033172607422
    10. 'def' → logprob: -4.641033172607422

Token 467: ' lowercase' (ID: 90395)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -3.7385154428193346e-05
    2. '_lower' → logprob: -10.75003719329834
    3. ' lowercase' → logprob: -11.50003719329834
    4. ' lower' → logprob: -12.62503719329834
    5. 'snake' → logprob: -14.12503719329834
    6. '   ' → logprob: -14.50003719329834
    7. '```' → logprob: -14.62503719329834
    8. 'words' → logprob: -15.50003719329834
    9. 'low' → logprob: -15.62503719329834
    10. 'underscore' → logprob: -16.125038146972656

Token 468: ' words' (ID: 6391)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3399282395839691
    2. ' with' → logprob: -1.8399282693862915
    3. 'with' → logprob: -2.339928150177002
    4. '_words' → logprob: -3.839928150177002
    5. ' words' → logprob: -5.589928150177002
    6. '_with' → logprob: -6.214928150177002
    7. 'words' → logprob: -6.464928150177002
    8. '_se' → logprob: -6.714928150177002
    9. 'se' → logprob: -7.089928150177002
    10. '_,' → logprob: -7.464928150177002

Token 469: ' joined' (ID: 16863)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21341845393180847
    2. ' with' → logprob: -2.463418483734131
    3. ' separated' → logprob: -2.713418483734131
    4. ' joined' → logprob: -3.838418483734131
    5. 'se' → logprob: -4.963418483734131
    6. 'with' → logprob: -5.588418483734131
    7. '   ' → logprob: -5.713418483734131
    8. ' connected' → logprob: -6.088418483734131
    9. 'joined' → logprob: -6.338418483734131
    10. 'connected' → logprob: -8.213418006896973

Token 470: ' by' (ID: 656)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.46154695749282837
    2. 'by' → logprob: -1.4615468978881836
    3. ' by' → logprob: -2.5865468978881836
    4. ' with' → logprob: -2.8365468978881836
    5. '_' → logprob: -6.461546897888184
    6. '_with' → logprob: -6.586546897888184
    7. '   ' → logprob: -7.461546897888184
    8. '_by' → logprob: -8.586546897888184
    9. '('_' → logprob: -9.086546897888184
    10. '	with' → logprob: -10.836546897888184

Token 471: ' '_'' (ID: 86115)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1724572628736496
    2. '_' → logprob: -1.922457218170166
    3. 'unders' → logprob: -4.922457218170166
    4. ''_' → logprob: -5.922457218170166
    5. 'underscore' → logprob: -6.547457218170166
    6. '_'' → logprob: -7.797457218170166
    7. '"' → logprob: -8.297457695007324
    8. ' underscores' → logprob: -10.172457695007324
    9. ' '_'' → logprob: -10.672457695007324
    10. '_,' → logprob: -10.797457695007324

Token 472: '."""
' (ID: 33044)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.4547000229358673
    2. '"""' → logprob: -1.454699993133545
    3. '   ' → logprob: -2.079699993133545
    4. '."""
' → logprob: -5.579699993133545
    5. '."""' → logprob: -6.454699993133545
    6. 'class' → logprob: -7.454699993133545
    7. '"""
' → logprob: -8.204700469970703
    8. '```' → logprob: -8.454700469970703
    9. ',' → logprob: -8.954700469970703
    10. '."' → logprob: -9.204700469970703

Token 473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08094844967126846
    2. 'def' → logprob: -2.5809483528137207
    3. ' def' → logprob: -6.205948352813721
    4. '
' → logprob: -10.955948829650879
    5. '```' → logprob: -11.705948829650879
    6. '  ' → logprob: -12.455948829650879
    7. '    ' → logprob: -12.830948829650879
    8. 'class' → logprob: -12.830948829650879
    9. '    
' → logprob: -13.580948829650879
    10. ' ' → logprob: -13.580948829650879

Token 474: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000588417868129909
    2. ' def' → logprob: -7.500588417053223
    3. '   ' → logprob: -10.250588417053223
    4. '	def' → logprob: -20.12558937072754
    5. '
' → logprob: -20.25058937072754
    6. ' ' → logprob: -21.12558937072754
    7. '```' → logprob: -21.25058937072754
    8. '  ' → logprob: -21.87558937072754
    9. 'de' → logprob: -22.62558937072754
    10. 'Def' → logprob: -23.00058937072754

Token 475: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0001589618914294988
    2. ' to' → logprob: -8.75015926361084
    3. 'def' → logprob: -14.75015926361084
    4. 'from' → logprob: -17.500158309936523
    5. '```' → logprob: -20.000158309936523
    6. '	to' → logprob: -20.250158309936523
    7. 'class' → logprob: -20.875158309936523
    8. '_to' → logprob: -21.000158309936523
    9. '.to' → logprob: -21.000158309936523
    10. 'To' → logprob: -21.875158309936523

Token 476: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.0280383548888494e-06
    2. 'words' → logprob: -13.875000953674316
    3. 'Words' → logprob: -17.500001907348633
    4. 'to' → logprob: -17.500001907348633
    5. '```' → logprob: -18.250001907348633
    6. '_terms' → logprob: -19.625001907348633
    7. 'def' → logprob: -20.125001907348633
    8. '_letters' → logprob: -20.250001907348633
    9. '_to' → logprob: -20.375001907348633
    10. '_parts' → logprob: -20.375001907348633

Token 477: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.79811754100956e-05
    2. '(' → logprob: -10.500038146972656
    3. 'self' → logprob: -11.500038146972656
    4. ' (' → logprob: -16.000038146972656
    5. '(
' → logprob: -16.250038146972656
    6. '(s' → logprob: -17.125038146972656
    7. ' self' → logprob: -17.250038146972656
    8. 'def' → logprob: -18.000038146972656
    9. '=self' → logprob: -18.250038146972656
    10. '   ' → logprob: -18.375038146972656

Token 478: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006771261338144541
    2. ',' → logprob: -5.506771087646484
    3. '(' → logprob: -6.006771087646484
    4. 'self' → logprob: -8.506771087646484
    5. ' (' → logprob: -11.631771087646484
    6. ',self' → logprob: -12.131771087646484
    7. ')' → logprob: -12.756771087646484
    8. '   ' → logprob: -13.006771087646484
    9. ' self' → logprob: -13.381771087646484
    10. 'def' → logprob: -14.006771087646484

Token 479: ' identifier' (ID: 24577)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0023647055495530367
    2. ' self' → logprob: -6.377364635467529
    3. 'identifier' → logprob: -7.377364635467529
    4. '   ' → logprob: -11.127365112304688
    5. '       ' → logprob: -11.377365112304688
    6. ' identifier' → logprob: -11.752365112304688
    7. 'def' → logprob: -14.252365112304688
    8. '(self' → logprob: -14.752365112304688
    9. '	self' → logprob: -14.877365112304688
    10. '
' → logprob: -15.127365112304688

Token 480: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15579403936862946
    2. ')' → logprob: -2.030794143676758
    3. '   ' → logprob: -5.280794143676758
    4. '(self' → logprob: -5.405794143676758
    5. '):' → logprob: -6.280794143676758
    6. 'self' → logprob: -7.530794143676758
    7. '       ' → logprob: -7.780794143676758
    8. ':str' → logprob: -7.780794143676758
    9. '):
' → logprob: -9.155794143676758
    10. ' :' → logprob: -10.530794143676758

Token 481: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.02324908785521984
    2. ' str' → logprob: -3.7732491493225098
    3. '   ' → logprob: -13.773248672485352
    4. ')' → logprob: -14.398248672485352
    5. '[str' → logprob: -14.648248672485352
    6. 'self' → logprob: -15.273248672485352
    7. '(str' → logprob: -15.398248672485352
    8. '	str' → logprob: -15.398248672485352
    9. 'def' → logprob: -15.523248672485352
    10. ' ' → logprob: -15.648248672485352

Token 482: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016648273449391127
    2. ':' → logprob: -6.501664638519287
    3. ':str' → logprob: -9.376665115356445
    4. '   ' → logprob: -10.001665115356445
    5. '):
' → logprob: -11.001665115356445
    6. 'str' → logprob: -12.251665115356445
    7. '):' → logprob: -12.626665115356445
    8. ' )' → logprob: -12.751665115356445
    9. '       ' → logprob: -14.001665115356445
    10. ' ' → logprob: -14.126665115356445

Token 483: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.1495783030986786
    2. ':' → logprob: -2.274578332901001
    3. ' ->' → logprob: -4.024578094482422
    4. ')' → logprob: -4.149578094482422
    5. ')->' → logprob: -6.274578094482422
    6. '   ' → logprob: -7.899578094482422
    7. '>' → logprob: -9.899578094482422
    8. 'def' → logprob: -10.024578094482422
    9. ':str' → logprob: -10.399578094482422
    10. '->[' → logprob: -11.149578094482422

Token 484: ' list' (ID: 1562)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0016673270147293806
    2. ' str' → logprob: -6.626667499542236
    3. 'list' → logprob: -8.001667022705078
    4. '[str' → logprob: -12.876667022705078
    5. ' list' → logprob: -13.126667022705078
    6. ' ' → logprob: -14.251667022705078
    7. '   ' → logprob: -14.376667022705078
    8. 'return' → logprob: -15.876667022705078
    9. '	str' → logprob: -16.126667022705078
    10. '(str' → logprob: -16.251667022705078

Token 485: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -17.375
    3. '[' → logprob: -18.375
    4. ':str' → logprob: -19.0
    5. ' [' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. '[
' → logprob: -19.375
    8. '(str' → logprob: -19.625
    9. '[[' → logprob: -20.125
    10. '[self' → logprob: -20.25

Token 486: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5292260050773621
    2. '):
' → logprob: -1.1542260646820068
    3. ']:' → logprob: -2.904226064682007
    4. '       ' → logprob: -4.654225826263428
    5. '):' → logprob: -4.904225826263428
    6. ']' → logprob: -5.029225826263428
    7. '   ' → logprob: -5.154225826263428
    8. ':' → logprob: -5.654225826263428
    9. ':
' → logprob: -6.029225826263428
    10. '']:
' → logprob: -6.279225826263428

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003291067434474826
    2. 'if' → logprob: -5.753291130065918
    3. ' if' → logprob: -9.753291130065918
    4. 'return' → logprob: -9.878291130065918
    5. '   ' → logprob: -12.628291130065918
    6. '           ' → logprob: -15.503291130065918
    7. ' return' → logprob: -15.753291130065918
    8. '	' → logprob: -16.0032901763916
    9. '	if' → logprob: -16.3782901763916
    10. '      ' → logprob: -17.5032901763916

Token 488: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005570252425968647
    2. 'if' (adapté à ' if') → logprob: -5.255570411682129
    3. '       ' → logprob: -8.005570411682129
    4. ' return' → logprob: -13.005570411682129
    5. '   ' → logprob: -14.755570411682129
    6. '	return' → logprob: -15.880570411682129
    7. ' if' → logprob: -17.255569458007812
    8. '#' → logprob: -17.505569458007812
    9. '{return' → logprob: -19.130569458007812
    10. '```' → logprob: -19.130569458007812

Token 489: ' '_'' (ID: 86115)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002805110299959779
    2. 'identifier' → logprob: -6.127805233001709
    3. 'not' → logprob: -8.37780475616455
    4. ' '_'' → logprob: -9.12780475616455
    5. ' not' → logprob: -9.25280475616455
    6. ''_' → logprob: -9.87780475616455
    7. ''id' → logprob: -10.62780475616455
    8. 're' → logprob: -10.75280475616455
    9. ''ident' → logprob: -11.12780475616455
    10. ''.' → logprob: -11.25280475616455

Token 490: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.036560773849487305
    2. 'in' → logprob: -3.6615607738494873
    3. ' not' → logprob: -4.786561012268066
    4. 'not' → logprob: -6.286561012268066
    5. '	in' → logprob: -13.286561012268066
    6. ' ' → logprob: -14.036561012268066
    7. '   ' → logprob: -14.161561012268066
    8. 'In' → logprob: -15.161561012268066
    9. '_in' → logprob: -15.286561012268066
    10. '.' → logprob: -15.286561012268066

Token 491: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.0036023214925080538
    2. ' identifier' → logprob: -5.628602504730225
    3. '   ' → logprob: -13.503602027893066
    4. '(identifier' → logprob: -14.878602027893066
    5. '_identifier' → logprob: -15.378602027893066
    6. ' ' → logprob: -16.503602981567383
    7. '       ' → logprob: -16.753602981567383
    8. '.identifier' → logprob: -16.753602981567383
    9. 'Identifier' → logprob: -17.128602981567383
    10. 'ident' → logprob: -17.753602981567383

Token 492: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.040591999888420105
    2. ':' → logprob: -3.2905919551849365
    3. '           ' → logprob: -6.165592193603516
    4. '       ' → logprob: -7.915592193603516
    5. ':return' → logprob: -10.415592193603516
    6. ':
' → logprob: -10.665592193603516
    7. '):
' → logprob: -11.540592193603516
    8. ':

' → logprob: -12.165592193603516
    9. 'return' → logprob: -12.415592193603516
    10. '   ' → logprob: -13.165592193603516

Token 493: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01691322773694992
    2. 'return' → logprob: -4.141913414001465
    3. '       ' → logprob: -7.141913414001465
    4. '#' → logprob: -10.391913414001465
    5. ' return' → logprob: -10.641913414001465
    6. '   ' → logprob: -11.016913414001465
    7. '
' → logprob: -11.266913414001465
    8. '	   ' → logprob: -14.266913414001465
    9. '            
' → logprob: -14.516913414001465
    10. '               ' → logprob: -14.891913414001465

Token 494: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00551856542006135
    2. '       ' → logprob: -5.255518436431885
    3. '           ' → logprob: -8.505518913269043
    4. ' return' → logprob: -9.505518913269043
    5. '   ' → logprob: -11.880518913269043
    6. '	return' → logprob: -14.130518913269043
    7. '#' (adapté à ' #') → logprob: -16.130517959594727
    8. 'identifier' → logprob: -16.880517959594727
    9. '	   ' → logprob: -17.505517959594727
    10. ' ' → logprob: -17.880517959594727

Token 495: ' underscore' (ID: 155582)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001981687266379595
    2. '       ' → logprob: -6.376981735229492
    3. ' return' → logprob: -8.626981735229492
    4. '           ' → logprob: -9.251981735229492
    5. '   ' → logprob: -12.626981735229492
    6. '	return' → logprob: -14.876981735229492
    7. 'identifier' → logprob: -14.876981735229492
    8. '
' → logprob: -15.501981735229492
    9. '#' → logprob: -16.001981735229492
    10. ' ' → logprob: -16.876981735229492

Token 496: ' separated' (ID: 33930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6661854982376099
    2. '       ' → logprob: -1.5411854982376099
    3. ' separated' → logprob: -1.7911854982376099
    4. '.split' → logprob: -3.0411853790283203
    5. ' in' → logprob: -4.04118537902832
    6. 'return' → logprob: -4.79118537902832
    7. '	       ' → logprob: -5.54118537902832
    8. 'split' → logprob: -5.66618537902832
    9. '<|end|>' → logprob: -5.66618537902832
    10. '.lower' → logprob: -5.79118537902832

Token 497: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003305335296317935
    2. 'return' → logprob: -5.753305435180664
    3. '       ' → logprob: -9.503305435180664
    4. '
' → logprob: -10.753305435180664
    5. ' return' → logprob: -10.753305435180664
    6. '   ' → logprob: -12.628305435180664
    7. '	       ' → logprob: -13.128305435180664
    8. '          ' → logprob: -13.878305435180664
    9. '               ' → logprob: -13.878305435180664
    10. ':
' → logprob: -14.503305435180664

Token 498: ' direct' (ID: 2823)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011799386702477932
    2. '       ' → logprob: -4.761799335479736
    3. '           ' → logprob: -5.886799335479736
    4. ' return' → logprob: -7.886799335479736
    5. '   ' → logprob: -10.511799812316895
    6. '	return' → logprob: -14.261799812316895
    7. ' ' → logprob: -16.011798858642578
    8. '#' → logprob: -17.011798858642578
    9. '     ' → logprob: -17.011798858642578
    10. '               ' → logprob: -17.261798858642578

Token 499: ' split' (ID: 12648)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018160473555326462
    2. ' return' → logprob: -4.018160343170166
    3. '           ' → logprob: -12.143160820007324
    4. 'split' → logprob: -12.518160820007324
    5. '       ' → logprob: -14.018160820007324
    6. '	return' → logprob: -15.893160820007324
    7. '   ' → logprob: -16.018159866333008
    8. ' ' → logprob: -16.268159866333008
    9. 'tokens' → logprob: -16.643159866333008
    10. ' split' → logprob: -16.768159866333008

Token 500: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14442822337150574
    2. 'return' → logprob: -2.269428253173828
    3. '       ' → logprob: -3.519428253173828
    4. '
' → logprob: -6.894428253173828
    5. '	       ' → logprob: -8.644428253173828
    6. ' return' → logprob: -9.019428253173828
    7. '<|end|>' → logprob: -10.269428253173828
    8. ',' → logprob: -10.769428253173828
    9. '   ' → logprob: -11.144428253173828
    10. '               ' → logprob: -11.144428253173828

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03259982913732529
    2. 'return' → logprob: -3.532599925994873
    3. '       ' → logprob: -5.907599925994873
    4. ' return' → logprob: -9.532599449157715
    5. '	       ' → logprob: -10.657599449157715
    6. '   ' → logprob: -11.532599449157715
    7. '            
' → logprob: -12.032599449157715
    8. '               ' → logprob: -12.782599449157715
    9. '		' → logprob: -13.032599449157715
    10. '	return' → logprob: -13.282599449157715

Token 502: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.030348310247063637
    2. '       ' → logprob: -3.530348300933838
    3. ' return' → logprob: -8.030348777770996
    4. '           ' → logprob: -8.280348777770996
    5. '   ' → logprob: -11.030348777770996
    6. '	return' → logprob: -13.030348777770996
    7. '     ' → logprob: -16.40534782409668
    8. '
' → logprob: -17.03034782409668
    9. ' ' → logprob: -17.03034782409668
    10. '      ' → logprob: -17.28034782409668

Token 503: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.002808798337355256
    2. ' identifier' → logprob: -5.877808570861816
    3. '[' → logprob: -12.877808570861816
    4. ' [' → logprob: -14.502808570861816
    5. '(identifier' → logprob: -14.627808570861816
    6. '   ' → logprob: -15.377808570861816
    7. '.identifier' → logprob: -16.252809524536133
    8. ' ' → logprob: -16.627809524536133
    9. 're' → logprob: -17.002809524536133
    10. '_identifier' → logprob: -18.502809524536133

Token 504: '.lower' (ID: 41290)
  Prédit: '.lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -0.25225603580474854
    2. '.split' → logprob: -1.5022560358047485
    3. '.' → logprob: -8.127256393432617
    4. ' .' → logprob: -10.752256393432617
    5. '.strip' → logprob: -11.877256393432617
    6. 'lower' → logprob: -13.752256393432617
    7. '.rstrip' → logprob: -13.877256393432617
    8. '_lower' → logprob: -14.627256393432617
    9. '._' → logprob: -15.502256393432617
    10. '.replace' → logprob: -15.877256393432617

Token 505: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -16.375001907348633
    4. '.split' → logprob: -17.125001907348633
    5. '.' → logprob: -17.375001907348633
    6. '_' → logprob: -19.125001907348633
    7. '(' → logprob: -20.250001907348633
    8. '().'' → logprob: -20.500001907348633
    9. '().__' → logprob: -21.250001907348633
    10. '_split' → logprob: -21.500001907348633

Token 506: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.625000953674316
    3. 'strip' → logprob: -16.625
    4. '.split' → logprob: -17.875
    5. '(split' → logprob: -18.75
    6. '_split' → logprob: -20.0
    7. 'spl' → logprob: -20.0
    8. 'plit' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. 'rstrip' → logprob: -20.5

Token 507: '('_' (ID: 38248)
  Prédit: '('_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('_' → logprob: -3.702754474943504e-05
    2. '_' → logprob: -10.87503719329834
    3. '(' → logprob: -11.37503719329834
    4. ''_' → logprob: -12.50003719329834
    5. '("_' → logprob: -13.12503719329834
    6. '('' → logprob: -14.87503719329834
    7. ''' → logprob: -15.62503719329834
    8. '['_' → logprob: -16.250036239624023
    9. '(_)' → logprob: -16.250036239624023
    10. '('__' → logprob: -16.875036239624023

Token 508: '')
' (ID: 2515)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6140970587730408
    2. ')
' → logprob: -1.1140971183776855
    3. '')
' → logprob: -2.3640971183776855
    4. ')' → logprob: -3.7390971183776855
    5. '')' → logprob: -4.3640971183776855
    6. ')'
' → logprob: -10.364096641540527
    7. ''
' → logprob: -10.489096641540527
    8. '   ' → logprob: -11.114096641540527
    9. ')
' → logprob: -11.489096641540527
    10. '")
' → logprob: -12.239096641540527

Token 509: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.762356209335849e-05
    2. '
' → logprob: -10.62503719329834
    3. 'else' → logprob: -12.00003719329834
    4. 'return' → logprob: -12.25003719329834
    5. '           ' → logprob: -14.37503719329834
    6. '   ' → logprob: -14.50003719329834
    7. '```' → logprob: -14.75003719329834
    8. '	' → logprob: -15.00003719329834
    9. ' else' → logprob: -15.75003719329834
    10. '        
' → logprob: -16.125038146972656

Token 510: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25268206000328064
    2. 'else' (adapté à ' else') → logprob: -1.502682089805603
    3. 'elif' → logprob: -8.002681732177734
    4. ' else' → logprob: -8.377681732177734
    5. '   ' → logprob: -8.752681732177734
    6. '
' → logprob: -11.377681732177734
    7. 'return' → logprob: -11.627681732177734
    8. '           ' → logprob: -12.377681732177734
    9. '```' → logprob: -13.627681732177734
    10. 'if' → logprob: -13.877681732177734

Token 511: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6757863163948059
    2. ':' → logprob: -1.1757862567901611
    3. '       ' → logprob: -2.175786256790161
    4. '           ' → logprob: -2.675786256790161
    5. ',' → logprob: -8.925786018371582
    6. '   ' → logprob: -10.050786018371582
    7. '{' → logprob: -11.175786018371582
    8. '):
' → logprob: -11.300786018371582
    9. '{
' → logprob: -11.425786018371582
    10. ':
' → logprob: -11.425786018371582

Token 512: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16349095106124878
    2. 'parts' → logprob: -2.5384910106658936
    3. '#' → logprob: -2.6634910106658936
    4. '           ' → logprob: -6.4134907722473145
    5. '   ' → logprob: -8.413491249084473
    6. ' parts' → logprob: -8.663491249084473
    7. ' #' → logprob: -10.038491249084473
    8. '```' → logprob: -11.413491249084473
    9. '
' → logprob: -11.538491249084473
    10. 'return' → logprob: -11.913491249084473

Token 513: ' #' (ID: 1069)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.12084824591875076
    2. '#' (adapté à ' #') → logprob: -2.2458481788635254
    3. '       ' → logprob: -4.995848178863525
    4. '           ' → logprob: -6.995848178863525
    5. 'words' → logprob: -8.995848655700684
    6. 'return' → logprob: -9.370848655700684
    7. ' parts' → logprob: -9.620848655700684
    8. '   ' → logprob: -11.495848655700684
    9. ' #' → logprob: -11.870848655700684
    10. '(parts' → logprob: -12.745848655700684

Token 514: ' Mixed' (ID: 83351)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.01588643155992031
    2. '#' → logprob: -4.390886306762695
    3. ' parts' → logprob: -6.515886306762695
    4. '       ' → logprob: -6.640886306762695
    5. '           ' → logprob: -8.140886306762695
    6. 'words' → logprob: -9.015886306762695
    7. 'return' → logprob: -9.640886306762695
    8. '
' → logprob: -10.390886306762695
    9. '   ' → logprob: -10.640886306762695
    10. 'Parts' → logprob: -11.390886306762695

Token 515: ' case' (ID: 1890)
  Prédit: ' case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.5764654874801636
    2. 'case' → logprob: -0.8264654874801636
    3. '_case' → logprob: -8.076465606689453
    4. 'Case' → logprob: -8.701465606689453
    5. '   ' → logprob: -11.201465606689453
    6. ' parts' → logprob: -11.451465606689453
    7. 'tokens' → logprob: -12.451465606689453
    8. '-case' → logprob: -12.576465606689453
    9. 'parts' → logprob: -13.076465606689453
    10. '
' → logprob: -13.326465606689453

Token 516: ' split' (ID: 12648)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48231810331344604
    2. 'parts' → logprob: -1.9823181629180908
    3. '       ' → logprob: -2.607318162918091
    4. ':' → logprob: -2.857318162918091
    5. ':
' → logprob: -2.857318162918091
    6. ' parts' → logprob: -2.982318162918091
    7. '
' → logprob: -6.107317924499512
    8. '(parts' → logprob: -7.107317924499512
    9. 'return' → logprob: -7.232317924499512
    10. ',' → logprob: -7.857317924499512

Token 517: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6702496409416199
    2. '           ' → logprob: -1.4202497005462646
    3. 'parts' → logprob: -1.5452497005462646
    4. ' parts' → logprob: -3.9202497005462646
    5. '
' → logprob: -4.6702494621276855
    6. '(parts' → logprob: -5.6702494621276855
    7. '   ' → logprob: -9.045249938964844
    8. '               ' → logprob: -9.420249938964844
    9. '
' → logprob: -9.545249938964844
    10. '(
' → logprob: -9.545249938964844

Token 518: ' as' (ID: 472)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.003184244269505143
    2. ' as' → logprob: -6.3781843185424805
    3. '           ' → logprob: -6.8781843185424805
    4. 'parts' → logprob: -8.12818431854248
    5. '       ' → logprob: -10.25318431854248
    6. '   ' → logprob: -10.25318431854248
    7. 'r' → logprob: -10.62818431854248
    8. '=' → logprob: -11.12818431854248
    9. '          ' → logprob: -11.87818431854248
    10. '
' → logprob: -11.87818431854248

Token 519: ' others' (ID: 5036)
  Prédit: 'Upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Upper' → logprob: -0.00016945181414484978
    2. ' Upper' → logprob: -9.25016975402832
    3. 're' → logprob: -10.50016975402832
    4. 'Lower' → logprob: -10.87516975402832
    5. '[' → logprob: -11.50016975402832
    6. 'Camel' → logprob: -11.50016975402832
    7. 'self' → logprob: -13.25016975402832
    8. 'Und' → logprob: -13.62516975402832
    9. 'upper' → logprob: -14.12516975402832
    10. 'Pas' → logprob: -14.50016975402832

Token 520: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6087627410888672
    2. '       ' → logprob: -0.8587627410888672
    3. '
' → logprob: -3.608762741088867
    4. 'parts' → logprob: -5.608762741088867
    5. ' parts' → logprob: -6.733762741088867
    6. '   ' → logprob: -8.858762741088867
    7. 'return' → logprob: -10.108762741088867
    8. '(parts' → logprob: -10.608762741088867
    9. '        
' → logprob: -10.733762741088867
    10. '
' → logprob: -10.983762741088867

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5770391225814819
    2. '       ' → logprob: -0.8270391225814819
    3. 'parts' → logprob: -7.0770392417907715
    4. ' parts' → logprob: -8.577038764953613
    5. '   ' → logprob: -10.452038764953613
    6. ',' → logprob: -11.702038764953613
    7. '(parts' → logprob: -11.952038764953613
    8. '
' → logprob: -12.327038764953613
    9. '               ' → logprob: -12.327038764953613
    10. '	       ' → logprob: -12.952038764953613

Token 522: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.001967650605365634
    2. ' parts' → logprob: -6.626967430114746
    3. '       ' → logprob: -7.501967430114746
    4. '           ' → logprob: -9.376967430114746
    5. 'return' → logprob: -13.001967430114746
    6. '(parts' → logprob: -14.126967430114746
    7. '   ' → logprob: -14.376967430114746
    8. '
' → logprob: -15.251967430114746
    9. '```' → logprob: -15.251967430114746
    10. '.parts' → logprob: -15.626967430114746

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602245420217514
    2. ' =' → logprob: -1.9102245569229126
    3. '=re' → logprob: -15.410224914550781
    4. '=
' → logprob: -16.53522491455078
    5. '       ' → logprob: -17.28522491455078
    6. '   ' → logprob: -17.53522491455078
    7. 's' → logprob: -17.66022491455078
    8. '[' → logprob: -18.41022491455078
    9. ' ' → logprob: -18.78522491455078
    10. ' =
' → logprob: -18.91022491455078

Token 524: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0005543439765460789
    2. ' re' → logprob: -7.50055456161499
    3. '   ' → logprob: -13.875554084777832
    4. 'r' → logprob: -15.125554084777832
    5. ' ' → logprob: -16.87555503845215
    6. '	re' → logprob: -17.25055503845215
    7. '       ' → logprob: -17.50055503845215
    8. '[' → logprob: -18.12555503845215
    9. '  ' → logprob: -18.75055503845215
    10. '```' → logprob: -19.75055503845215

Token 525: '.findall' (ID: 95997)
  Prédit: '.findall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.findall' → logprob: -2.1008713702030946e-06
    2. 'find' → logprob: -13.125001907348633
    3. 'f' → logprob: -18.500001907348633
    4. 'finding' → logprob: -18.625001907348633
    5. 'finder' → logprob: -19.750001907348633
    6. '[' → logprob: -19.750001907348633
    7. '.find' → logprob: -20.500001907348633
    8. 'fin' → logprob: -20.625001907348633
    9. 'found' → logprob: -21.000001907348633
    10. '```' → logprob: -21.250001907348633

Token 526: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.00014323067443910986
    2. 'r' → logprob: -8.875143051147461
    3. '(' → logprob: -13.750143051147461
    4. '[r' → logprob: -13.875143051147461
    5. '   ' → logprob: -14.500143051147461
    6. ' (' → logprob: -14.875143051147461
    7. '```' → logprob: -15.375143051147461
    8. '(rb' → logprob: -16.12514305114746
    9. '('[' → logprob: -16.50014305114746
    10. '	r' → logprob: -16.87514305114746

Token 527: ''[' (ID: 187291)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.042251989245414734
    2. ''[' → logprob: -3.2922520637512207
    3. '[A' → logprob: -5.542252063751221
    4. '[r' → logprob: -8.667251586914062
    5. '[' → logprob: -10.167251586914062
    6. ' r' → logprob: -10.542251586914062
    7. '   ' → logprob: -11.042251586914062
    8. '`' → logprob: -11.542251586914062
    9. '"[' → logprob: -12.042251586914062
    10. ' [' → logprob: -12.792251586914062

Token 528: 'A' (ID: 32)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.002613944001495838
    2. ''[' → logprob: -6.1276140213012695
    3. 'r' → logprob: -7.8776140213012695
    4. 'A' → logprob: -10.87761402130127
    5. '[a' → logprob: -11.62761402130127
    6. ''A' → logprob: -11.87761402130127
    7. 'a' → logprob: -12.87761402130127
    8. '"[' → logprob: -12.87761402130127
    9. '([' → logprob: -13.25261402130127
    10. ' [' → logprob: -13.25261402130127

Token 529: '-Z' (ID: 17216)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.25273796916007996
    2. '-Z' → logprob: -1.7527379989624023
    3. 'Z' → logprob: -3.5027379989624023
    4. 'A' → logprob: -4.627737998962402
    5. '[' → logprob: -4.627737998962402
    6. ''[' → logprob: -9.377737998962402
    7. '[a' → logprob: -9.627737998962402
    8. '_Z' → logprob: -10.877737998962402
    9. 'a' → logprob: -10.877737998962402
    10. 'z' → logprob: -11.002737998962402

Token 530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003208037815056741
    2. '']' → logprob: -8.750320434570312
    3. ']?' → logprob: -9.125320434570312
    4. ']+' → logprob: -10.500320434570312
    5. ']{' → logprob: -12.375320434570312
    6. ' ]' → logprob: -12.625320434570312
    7. '`]' → logprob: -12.625320434570312
    8. '"]' → logprob: -12.750320434570312
    9. '`' → logprob: -12.875320434570312
    10. ''' → logprob: -13.125320434570312

Token 531: '?[' (ID: 105379)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019413677975535393
    2. '?[' → logprob: -4.269413471221924
    3. '`' → logprob: -6.269413471221924
    4. ''' → logprob: -6.644413471221924
    5. ']?' → logprob: -6.769413471221924
    6. '?' → logprob: -8.394413948059082
    7. ''?' → logprob: -9.019413948059082
    8. '']' → logprob: -9.769413948059082
    9. '?>' → logprob: -9.769413948059082
    10. '>?' → logprob: -10.144413948059082

Token 532: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006272526225075126
    2. '[a' → logprob: -7.375627040863037
    3. ' a' → logprob: -15.125627517700195
    4. '   ' → logprob: -15.875627517700195
    5. ''a' → logprob: -16.125627517700195
    6. '	a' → logprob: -16.750627517700195
    7. '```' → logprob: -17.000627517700195
    8. '#a' → logprob: -17.750627517700195
    9. ',a' → logprob: -17.750627517700195
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -18.000627517700195

Token 533: '-z' (ID: 16826)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.06829807162284851
    2. '-z' → logprob: -2.943298101425171
    3. '[z' → logprob: -5.443297863006592
    4. 'z' → logprob: -5.443297863006592
    5. 'a' → logprob: -5.693297863006592
    6. '?[' → logprob: -7.693297863006592
    7. '-Za' → logprob: -8.19329833984375
    8. 'za' → logprob: -8.44329833984375
    9. '[' → logprob: -8.69329833984375
    10. '[b' → logprob: -9.19329833984375

Token 534: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -6.670925358776003e-05
    2. '+' → logprob: -9.625066757202148
    3. '}+' → logprob: -16.00006675720215
    4. ']' → logprob: -16.12506675720215
    5. ')+' → logprob: -16.25006675720215
    6. ''+' → logprob: -16.37506675720215
    7. ']*' → logprob: -16.62506675720215
    8. '+]' → logprob: -17.87506675720215
    9. '```' → logprob: -18.12506675720215
    10. ']+\' → logprob: -18.12506675720215

Token 535: '|' (ID: 91)
  Prédit: '|'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -5.796184723294573e-06
    2. ']|' → logprob: -13.000005722045898
    3. ' |' → logprob: -13.375005722045898
    4. 'r' → logprob: -15.000005722045898
    5. ')|' → logprob: -15.000005722045898
    6. '?|' → logprob: -15.250005722045898
    7. '|
' → logprob: -15.750005722045898
    8. '[' → logprob: -16.1250057220459
    9. '|string' → logprob: -16.1250057220459
    10. '|'' → logprob: -16.1250057220459

Token 536: '[' (ID: 58)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.0006226073601283133
    2. 'r' → logprob: -7.500622749328613
    3. ''[' → logprob: -10.250622749328613
    4. '[' → logprob: -10.375622749328613
    5. '[r' → logprob: -13.375622749328613
    6. ' [' → logprob: -14.750622749328613
    7. '[C' → logprob: -15.375622749328613
    8. '[B' → logprob: -15.500622749328613
    9. '[a' → logprob: -15.500622749328613
    10. '[R' → logprob: -15.875622749328613

Token 537: 'A' (ID: 32)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.38702622056007385
    2. 'A' → logprob: -1.1370261907577515
    3. 'r' → logprob: -9.512025833129883
    4. '[' → logprob: -9.512025833129883
    5. ''[' → logprob: -12.637025833129883
    6. '   ' → logprob: -14.137025833129883
    7. ' A' → logprob: -14.387025833129883
    8. ''A' → logprob: -14.387025833129883
    9. ' [' → logprob: -14.512025833129883
    10. 'Z' → logprob: -15.012025833129883

Token 538: '-Z' (ID: 17216)
  Prédit: '-Z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-Z' → logprob: -0.11039772629737854
    2. ']+' → logprob: -2.4853978157043457
    3. 'Z' → logprob: -4.235397815704346
    4. '+' → logprob: -5.485397815704346
    5. 'A' → logprob: -6.610397815704346
    6. '[A' → logprob: -7.360397815704346
    7. '[' → logprob: -8.110397338867188
    8. '+[' → logprob: -8.360397338867188
    9. '-z' → logprob: -10.985397338867188
    10. '   ' → logprob: -11.485397338867188

Token 539: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -2.629921436891891e-05
    2. '+' → logprob: -10.75002670288086
    3. '+[' → logprob: -13.75002670288086
    4. ']' → logprob: -14.12502670288086
    5. '}+' → logprob: -14.12502670288086
    6. ''+' → logprob: -14.37502670288086
    7. ')+' → logprob: -14.37502670288086
    8. '+]' → logprob: -15.25002670288086
    9. ']+\' → logprob: -15.37502670288086
    10. '+(' → logprob: -15.50002670288086

Token 540: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.47495681833243e-05
    2. ''(' → logprob: -11.125024795532227
    3. '(?' → logprob: -12.250024795532227
    4. ' (' → logprob: -12.750024795532227
    5. 'r' → logprob: -14.750024795532227
    6. '+(' → logprob: -14.875024795532227
    7. '?(' → logprob: -15.125024795532227
    8. '   ' → logprob: -15.125024795532227
    9. '```' → logprob: -15.625024795532227
    10. '(?:' → logprob: -15.750024795532227

Token 541: '?!' (ID: 25309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0049895551055669785
    2. '?!' → logprob: -5.3799896240234375
    3. '?(' → logprob: -8.504989624023438
    4. '(?' → logprob: -9.129989624023438
    5. ' (' → logprob: -10.754989624023438
    6. ''(' → logprob: -11.879989624023438
    7. '```' → logprob: -12.004989624023438
    8. '?!
' → logprob: -12.629989624023438
    9. '
' → logprob: -12.754989624023438
    10. '?' → logprob: -12.879989624023438

Token 542: '[' (ID: 58)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.16043788194656372
    2. '[' → logprob: -1.910437822341919
    3. '[A' → logprob: -8.53543758392334
    4. '[u' → logprob: -12.28543758392334
    5. ')[' → logprob: -12.41043758392334
    6. '\[' → logprob: -13.41043758392334
    7. '[^' → logprob: -14.03543758392334
    8. '   ' → logprob: -14.41043758392334
    9. '[x' → logprob: -14.66043758392334
    10. '[r' → logprob: -14.78543758392334

Token 543: 'a' (ID: 64)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.007798021659255028
    2. '[' → logprob: -4.882798194885254
    3. 'a' → logprob: -8.632798194885254
    4. '[A' → logprob: -11.882798194885254
    5. ' [' → logprob: -13.507798194885254
    6. '[
' → logprob: -13.882798194885254
    7. '
' → logprob: -14.007798194885254
    8. '[^' → logprob: -14.507798194885254
    9. '```' → logprob: -14.632798194885254
    10. '[z' → logprob: -15.007798194885254

Token 544: '-z' (ID: 16826)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0022872837726026773
    2. '[z' → logprob: -6.5022873878479
    3. '[' → logprob: -7.5022873878479
    4. 'z' → logprob: -8.627286911010742
    5. '-z' → logprob: -10.252286911010742
    6. 'a' → logprob: -11.627286911010742
    7. '[b' → logprob: -13.627286911010742
    8. '[s' → logprob: -13.877286911010742
    9. ')' → logprob: -13.877286911010742
    10. 'za' → logprob: -14.002286911010742

Token 545: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.18703700602054596
    2. ')',' → logprob: -1.8120369911193848
    3. ')' → logprob: -5.187036991119385
    4. ']',' → logprob: -7.562036991119385
    5. ')','' → logprob: -7.812036991119385
    6. ''])' → logprob: -8.187037467956543
    7. '')' → logprob: -8.937037467956543
    8. ')'' → logprob: -9.187037467956543
    9. ')]' → logprob: -10.187037467956543
    10. '))' → logprob: -10.687037467956543

Token 546: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.023405728861689568
    2. ')',' → logprob: -3.8984057903289795
    3. ',' → logprob: -6.0234055519104
    4. ']',' → logprob: -8.148406028747559
    5. '')' → logprob: -9.898406028747559
    6. ')' → logprob: -10.398406028747559
    7. ''' → logprob: -11.273406028747559
    8. '|' → logprob: -11.273406028747559
    9. '}',' → logprob: -11.523406028747559
    10. 'identifier' → logprob: -11.898406028747559

Token 547: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.006718809716403484
    2. ' identifier' → logprob: -5.006718635559082
    3. '                   ' → logprob: -13.006718635559082
    4. '           ' → logprob: -14.881718635559082
    5. '(identifier' → logprob: -15.131718635559082
    6. '.identifier' → logprob: -15.756718635559082
    7. '       ' → logprob: -16.5067195892334
    8. '               ' → logprob: -16.5067195892334
    9. ' ' → logprob: -16.6317195892334
    10. '   ' → logprob: -16.7567195892334

Token 548: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4751056432723999
    2. ')' → logprob: -0.9751056432723999
    3. '       ' → logprob: -7.1001057624816895
    4. ')
' → logprob: -8.850105285644531
    5. '           ' → logprob: -10.600105285644531
    6. ')`
' → logprob: -11.225105285644531
    7. '   ' → logprob: -11.725105285644531
    8. ')`' → logprob: -13.100105285644531
    9. ' )
' → logprob: -13.600105285644531
    10. ')

' → logprob: -13.600105285644531

Token 549: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20888987183570862
    2. '       ' → logprob: -1.7088898420333862
    3. 'return' → logprob: -5.458889961242676
    4. ' return' → logprob: -5.958889961242676
    5. '   ' → logprob: -8.458889961242676
    6. '[' → logprob: -8.958889961242676
    7. '<|end|>' → logprob: -9.708889961242676
    8. '               ' → logprob: -9.833889961242676
    9. '	       ' → logprob: -10.458889961242676
    10. ')' → logprob: -10.458889961242676

Token 550: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03726644068956375
    2. '       ' → logprob: -3.787266492843628
    3. ' return' → logprob: -4.662266254425049
    4. '           ' → logprob: -5.412266254425049
    5. '   ' → logprob: -11.412266731262207
    6. '	return' → logprob: -12.787266731262207
    7. '               ' → logprob: -13.912266731262207
    8. '          ' → logprob: -15.162266731262207
    9. '         ' → logprob: -15.412266731262207
    10. '[' → logprob: -15.537266731262207

Token 551: ' [' (ID: 723)
  Prédit: '[word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[word' → logprob: -0.007158023305237293
    2. '[' → logprob: -5.257157802581787
    3. ' [' → logprob: -6.257157802581787
    4. '[token' → logprob: -13.632158279418945
    5. 'identifier' → logprob: -13.882158279418945
    6. '[key' → logprob: -14.507158279418945
    7. '[w' → logprob: -14.757158279418945
    8. '[name' → logprob: -14.882158279418945
    9. '[str' → logprob: -15.007158279418945
    10. 'parts' → logprob: -15.507158279418945

Token 552: 'word' (ID: 1801)
  Prédit: 'word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -3.2020991056924686e-05
    2. ' word' → logprob: -10.375032424926758
    3. 'w' → logprob: -14.875032424926758
    4. '[word' → logprob: -15.875032424926758
    5. 'token' → logprob: -16.625032424926758
    6. '   ' → logprob: -16.875032424926758
    7. '	word' → logprob: -17.625032424926758
    8. ' ' → logprob: -18.000032424926758
    9. '(word' → logprob: -18.750032424926758
    10. 'part' → logprob: -18.750032424926758

Token 553: '.lower' (ID: 41290)
  Prédit: '.lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -6.988221684878226e-06
    2. '.' → logprob: -12.000006675720215
    3. '.to' → logprob: -15.000006675720215
    4. ' .' → logprob: -15.750006675720215
    5. 'lower' → logprob: -16.00000762939453
    6. '.word' → logprob: -16.75000762939453
    7. '.low' → logprob: -17.87500762939453
    8. '].' → logprob: -18.12500762939453
    9. '[' → logprob: -18.12500762939453
    10. '[word' → logprob: -18.50000762939453

Token 554: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.372294698550832e-06
    2. '()
' → logprob: -12.125009536743164
    3. 'for' → logprob: -12.625009536743164
    4. '()]' → logprob: -15.375009536743164
    5. '()[' → logprob: -16.000009536743164
    6. ' for' → logprob: -16.375009536743164
    7. ' ()' → logprob: -16.500009536743164
    8. '()`' → logprob: -17.375009536743164
    9. '()
' → logprob: -17.625009536743164
    10. '()

' → logprob: -18.500009536743164

Token 555: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20142902433872223
    2. ' for' → logprob: -1.701429009437561
    3. ')' → logprob: -11.32642936706543
    4. '(word' → logprob: -13.70142936706543
    5. 'word' → logprob: -14.07642936706543
    6. '        ' → logprob: -14.95142936706543
    7. '           ' → logprob: -15.20142936706543
    8. '       ' → logprob: -15.45142936706543
    9. ']' → logprob: -15.57642936706543
    10. '         ' → logprob: -15.82642936706543

Token 556: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.10043170303106308
    2. ' word' → logprob: -2.3504316806793213
    3. 'part' → logprob: -8.475431442260742
    4. 'parts' → logprob: -11.725431442260742
    5. ' part' → logprob: -12.225431442260742
    6. '	word' → logprob: -13.725431442260742
    7. '[word' → logprob: -14.225431442260742
    8. '(word' → logprob: -14.600431442260742
    9. ' parts' → logprob: -14.725431442260742
    10. '
' → logprob: -15.100431442260742

Token 557: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6428881287574768
    2. 'parts' → logprob: -1.017888069152832
    3. ' parts' → logprob: -2.392888069152832
    4. 'in' → logprob: -4.142888069152832
    5. 'words' → logprob: -6.142888069152832
    6. 'word' → logprob: -6.267888069152832
    7. '(parts' → logprob: -6.642888069152832
    8. ' words' → logprob: -9.017888069152832
    9. ' word' → logprob: -9.892888069152832
    10. ']' → logprob: -10.517888069152832

Token 558: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0041247038170695305
    2. ' parts' → logprob: -5.504124641418457
    3. 'words' → logprob: -10.004124641418457
    4. '(parts' → logprob: -14.629124641418457
    5. 'part' → logprob: -15.754124641418457
    6. '
' → logprob: -16.004125595092773
    7. ' words' → logprob: -16.129125595092773
    8. '   ' → logprob: -16.754125595092773
    9. ' ' → logprob: -17.129125595092773
    10. 'word' → logprob: -18.004125595092773

Token 559: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004727371269837022
    2. '       ' → logprob: -8.125473022460938
    3. ')' → logprob: -9.500473022460938
    4. ']
' → logprob: -9.750473022460938
    5. ')]' → logprob: -10.750473022460938
    6. ' ]' → logprob: -11.125473022460938
    7. '   ' → logprob: -12.750473022460938
    8. '<|end|>' → logprob: -13.375473022460938
    9. ']

' → logprob: -14.125473022460938
    10. '])' → logprob: -14.125473022460938

Token 560: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3871847093105316
    2. '   ' → logprob: -1.137184739112854
    3. '
' → logprob: -8.637185096740723
    4. ' def' → logprob: -9.262185096740723
    5. '```' → logprob: -10.137185096740723
    6. '    
' → logprob: -13.762185096740723
    7. '  ' → logprob: -15.387185096740723
    8. '	def' → logprob: -15.512185096740723
    9. ' ' → logprob: -16.762184143066406
    10. '        
' → logprob: -17.262184143066406

Token 561: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.982165698194876e-05
    2. '   ' → logprob: -9.750080108642578
    3. '
' → logprob: -11.000080108642578
    4. ' def' → logprob: -12.250080108642578
    5. '    
' → logprob: -17.625080108642578
    6. '	def' → logprob: -18.875080108642578
    7. '```' → logprob: -20.750080108642578
    8. '

' → logprob: -21.625080108642578
    9. '        
' → logprob: -22.000080108642578
    10. '  ' → logprob: -22.125080108642578

Token 562: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -2.696889623621246e-06
    2. ' from' → logprob: -12.87500286102295
    3. 'def' → logprob: -17.500001907348633
    4. '_from' → logprob: -18.500001907348633
    5. 'to' → logprob: -18.750001907348633
    6. 'for' → logprob: -19.000001907348633
    7. '	from' → logprob: -20.000001907348633
    8. '.from' → logprob: -20.125001907348633
    9. '[from' → logprob: -20.750001907348633
    10. 'From' → logprob: -21.000001907348633

Token 563: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.000000953674316
    3. '_word' → logprob: -15.375000953674316
    4. '_strings' → logprob: -15.875000953674316
    5. '_tokens' → logprob: -16.000001907348633
    6. '_w' → logprob: -16.750001907348633
    7. '_parts' → logprob: -17.250001907348633
    8. '```' → logprob: -17.625001907348633
    9. '_terms' → logprob: -17.875001907348633
    10. 'words' → logprob: -18.000001907348633

Token 564: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00035155098885297775
    2. 'self' → logprob: -8.250351905822754
    3. '(' → logprob: -9.375351905822754
    4. ' (' → logprob: -13.375351905822754
    5. '   ' → logprob: -13.625351905822754
    6. 'def' → logprob: -14.125351905822754
    7. ' self' → logprob: -14.500351905822754
    8. ' ' → logprob: -15.000351905822754
    9. ',' → logprob: -15.375351905822754
    10. '(
' → logprob: -15.625351905822754

Token 565: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.32039812207221985
    2. 'self' → logprob: -1.9453980922698975
    3. ',' → logprob: -2.0703980922698975
    4. 'def' → logprob: -6.195398330688477
    5. '   ' → logprob: -6.820398330688477
    6. '[' → logprob: -7.320398330688477
    7. ' self' → logprob: -7.945398330688477
    8. ',self' → logprob: -8.195398330688477
    9. '[self' → logprob: -8.320398330688477
    10. '(' → logprob: -8.445398330688477

Token 566: ' words' (ID: 6391)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39281392097473145
    2. 'words' → logprob: -1.1428139209747314
    3. ' words' → logprob: -5.517813682556152
    4. ' self' → logprob: -6.267813682556152
    5. '[self' → logprob: -12.267813682556152
    6. '(self' → logprob: -12.892813682556152
    7. 'word' → logprob: -13.267813682556152
    8. '(words' → logprob: -13.767813682556152
    9. '       ' → logprob: -13.892813682556152
    10. '.words' → logprob: -14.017813682556152

Token 567: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017038638470694423
    2. '[' → logprob: -6.62670373916626
    3. ',' → logprob: -8.251704216003418
    4. ')' → logprob: -10.751704216003418
    5. ' :' → logprob: -10.876704216003418
    6. '):' → logprob: -11.001704216003418
    7. '(self' → logprob: -11.001704216003418
    8. '[self' → logprob: -11.251704216003418
    9. '   ' → logprob: -11.501704216003418
    10. 'self' → logprob: -13.001704216003418

Token 568: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07941833138465881
    2. ' list' → logprob: -2.579418420791626
    3. '[list' → logprob: -7.954418182373047
    4. '[word' → logprob: -9.204418182373047
    5. '[str' → logprob: -9.704418182373047
    6. '[
' → logprob: -12.704418182373047
    7. '[' → logprob: -12.954418182373047
    8. 'List' → logprob: -13.079418182373047
    9. '   ' → logprob: -13.329418182373047
    10. '['' → logprob: -13.704418182373047

Token 569: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. ')' → logprob: -16.875
    4. 'str' → logprob: -17.75
    5. '   ' → logprob: -18.0
    6. '[
' → logprob: -18.25
    7. ':str' → logprob: -19.0
    8. '```' → logprob: -19.25
    9. ' [' → logprob: -19.5
    10. '       ' → logprob: -19.875

Token 570: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07905877381563187
    2. ')' → logprob: -2.579058885574341
    3. ']' → logprob: -8.829058647155762
    4. '[str' → logprob: -11.829058647155762
    5. ' ])' → logprob: -12.079058647155762
    6. '   ' → logprob: -12.954058647155762
    7. ')]' → logprob: -12.954058647155762
    8. ''])' → logprob: -13.329058647155762
    9. ' )' → logprob: -14.329058647155762
    10. ')])' → logprob: -14.579058647155762

Token 571: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.05094507709145546
    2. ' ->' → logprob: -3.0509450435638428
    3. ')' → logprob: -6.800945281982422
    4. '   ' → logprob: -7.050945281982422
    5. ':' → logprob: -8.425945281982422
    6. '       ' → logprob: -9.800945281982422
    7. 'return' → logprob: -10.425945281982422
    8. ':return' → logprob: -10.925945281982422
    9. ':
' → logprob: -11.050945281982422
    10. ')->' → logprob: -11.800945281982422

Token 572: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.008165234699845314
    2. ' str' → logprob: -5.63316535949707
    3. 'return' → logprob: -6.00816535949707
    4. '[str' → logprob: -6.50816535949707
    5. 'list' → logprob: -8.50816535949707
    6. '['_' → logprob: -9.25816535949707
    7. ''' → logprob: -9.88316535949707
    8. '_str' → logprob: -9.88316535949707
    9. ' return' → logprob: -10.13316535949707
    10. ''_' → logprob: -10.13316535949707

Token 573: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.772995114326477
    2. ':' → logprob: -0.897995114326477
    3. 'return' → logprob: -2.8979949951171875
    4. '   ' → logprob: -3.1479949951171875
    5. ':return' → logprob: -4.2729949951171875
    6. '       ' → logprob: -5.0229949951171875
    7. '->' → logprob: -5.2729949951171875
    8. '=' → logprob: -6.0229949951171875
    9. ' return' → logprob: -6.7729949951171875
    10. '):
' → logprob: -7.1479949951171875

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004133610986173153
    2. 'return' → logprob: -5.754133701324463
    3. '   ' → logprob: -7.004133701324463
    4. ' return' → logprob: -10.004133224487305
    5. '	' → logprob: -13.879133224487305
    6. '	return' → logprob: -15.004133224487305
    7. '	   ' → logprob: -15.879133224487305
    8. '           ' → logprob: -16.004133224487305
    9. '```' → logprob: -16.004133224487305
    10. '      ' → logprob: -16.379133224487305

Token 575: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0060295225121080875
    2. ' return' → logprob: -5.5060296058654785
    3. '   ' → logprob: -6.2560296058654785
    4. '       ' → logprob: -10.50602912902832
    5. '	return' → logprob: -13.00602912902832
    6. '_return' → logprob: -15.00602912902832
    7. '_' → logprob: -15.75602912902832
    8. '```' → logprob: -16.13102912902832
    9. '
' → logprob: -17.00602912902832
    10. ''_' → logprob: -17.13102912902832

Token 576: ' '_' (ID: 20523)
  Prédit: ''_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''_' → logprob: -0.00020830852736253291
    2. ' '_' → logprob: -8.625207901000977
    3. '"_' → logprob: -10.625207901000977
    4. '('_' → logprob: -13.250207901000977
    5. ''' → logprob: -13.625207901000977
    6. ' ' → logprob: -14.125207901000977
    7. '   ' → logprob: -15.250207901000977
    8. 'words' → logprob: -16.250207901000977
    9. '['_' → logprob: -16.500207901000977
    10. '	' → logprob: -16.750207901000977

Token 577: ''.' (ID: 6120)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.05599238723516464
    2. 'join' → logprob: -3.305992364883423
    3. ''.' → logprob: -4.305992603302002
    4. '.' → logprob: -5.555992603302002
    5. '''.' → logprob: -8.430992126464844
    6. ' .' → logprob: -9.555992126464844
    7. '_join' → logprob: -9.805992126464844
    8. '._' → logprob: -10.055992126464844
    9. ''' → logprob: -10.680992126464844
    10. ' join' → logprob: -11.680992126464844

Token 578: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.5
    3. '.join' → logprob: -17.625
    4. '(join' → logprob: -18.625
    5. '_join' → logprob: -19.25
    6. '```' → logprob: -20.0
    7. 'j' → logprob: -20.5
    8. ''.' → logprob: -21.0
    9. 'jo' → logprob: -21.125
    10. '.' → logprob: -22.5

Token 579: '(words' (ID: 80550)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.06270824372768402
    2. '(words' → logprob: -2.8127081394195557
    3. 'word' → logprob: -7.312708377838135
    4. '(word' → logprob: -9.562707901000977
    5. '[word' → logprob: -12.937707901000977
    6. ' words' → logprob: -14.312707901000977
    7. 'w' → logprob: -16.812707901000977
    8. '(w' → logprob: -17.937707901000977
    9. '.words' → logprob: -17.937707901000977
    10. '[' → logprob: -18.812707901000977

Token 580: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. '<|end|>' → logprob: -13.875003814697266
    3. ' )' → logprob: -14.500003814697266
    4. ')
' → logprob: -15.250003814697266
    5. ')+' → logprob: -15.375003814697266
    6. ')return' → logprob: -15.375003814697266
    7. ')+'' → logprob: -15.500003814697266
    8. ')}' → logprob: -15.625003814697266
    9. ').' → logprob: -16.375003814697266
    10. '))' → logprob: -16.625003814697266

Token 581: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0025774401146918535
    2. '#' → logprob: -6.002577304840088
    3. 'def' → logprob: -10.127577781677246
    4. '```' → logprob: -10.377577781677246
    5. 'case' → logprob: -11.002577781677246
    6. 'converter' → logprob: -11.627577781677246
    7. 'import' → logprob: -14.502577781677246
    8. 'Upper' → logprob: -14.502577781677246
    9. 'code' → logprob: -14.627577781677246
    10. 'if' → logprob: -14.627577781677246

Token 582: ' Identifier' (ID: 70050)
  Prédit: 'Snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Snake' → logprob: -0.21075023710727692
    2. 'K' → logprob: -2.5857503414154053
    3. 'Upper' → logprob: -3.2107503414154053
    4. 'Lower' → logprob: -3.5857503414154053
    5. 'Pas' → logprob: -4.335750102996826
    6. 'All' → logprob: -4.710750102996826
    7. 'S' → logprob: -4.710750102996826
    8. 'Title' → logprob: -5.335750102996826
    9. ' Snake' → logprob: -6.335750102996826
    10. 'Dash' → logprob: -6.460750102996826

Token 583: 'Normalizer' (ID: 188213)
  Prédit: 'Converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.0336923822760582
    2. 'Style' → logprob: -4.408692359924316
    3. 'Case' → logprob: -4.783692359924316
    4. 'Detector' → logprob: -5.408692359924316
    5. 'Normalizer' → logprob: -5.783692359924316
    6. 'Type' → logprob: -6.158692359924316
    7. 'Recognizer' → logprob: -6.783692359924316
    8. 'Parser' → logprob: -8.033692359924316
    9. 'Strategy' → logprob: -8.158692359924316
    10. 'Format' → logprob: -8.533692359924316

Token 584: ':
' (ID: 734)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.02802637778222561
    2. ':' → logprob: -4.028026580810547
    3. '(' → logprob: -4.653026580810547
    4. '():' → logprob: -8.778026580810547
    5. '(Abstract' → logprob: -9.528026580810547
    6. '(Base' → logprob: -11.028026580810547
    7. '(object' → logprob: -11.153026580810547
    8. '(Code' → logprob: -12.403026580810547
    9. '(case' → logprob: -12.653026580810547
    10. ':
' → logprob: -13.028026580810547

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002613358374219388
    2. ' def' → logprob: -8.500261306762695
    3. 'def' → logprob: -9.875261306762695
    4. '    
' → logprob: -12.625261306762695
    5. '```' → logprob: -14.125261306762695
    6. '    ' → logprob: -14.500261306762695
    7. 'class' → logprob: -14.500261306762695
    8. '	def' → logprob: -15.250261306762695
    9. ':' → logprob: -15.375261306762695
    10. '   ' → logprob: -15.500261306762695

Token 586: ' """' (ID: 9280)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07419338822364807
    2. 'def' → logprob: -3.0741934776306152
    3. '   ' → logprob: -3.6991934776306152
    4. 'class' → logprob: -8.574193000793457
    5. ' converters' → logprob: -9.074193000793457
    6. 'strateg' → logprob: -9.449193000793457
    7. '"""' (adapté à ' """') → logprob: -10.574193000793457
    8. 'con' → logprob: -10.574193000793457
    9. '	def' → logprob: -11.199193000793457
    10. ' ' → logprob: -11.199193000793457

Token 587: 'Facade' (ID: 46826)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4042590260505676
    2. 'class' → logprob: -1.5292589664459229
    3. '"""' → logprob: -2.779258966445923
    4. ' def' → logprob: -3.029258966445923
    5. '   ' → logprob: -6.029259204864502
    6. ' """' → logprob: -6.779259204864502
    7. 'Strategies' → logprob: -8.154258728027344
    8. 'Converters' → logprob: -8.154258728027344
    9. 'Convert' → logprob: -8.279258728027344
    10. 'Con' → logprob: -8.529258728027344

Token 588: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32883691787719727
    2. 'class' → logprob: -1.8288369178771973
    3. 'for' → logprob: -2.2038369178771973
    4. ' class' → logprob: -5.078836917877197
    5. ' to' → logprob: -6.203836917877197
    6. '   ' → logprob: -7.328836917877197
    7. 'to' → logprob: -8.578836441040039
    8. ' ' → logprob: -9.828836441040039
    9. 'For' → logprob: -11.203836441040039
    10. 'and' → logprob: -11.328836441040039

Token 589: ' normalize' (ID: 44464)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.8288353085517883
    2. 'normalize' → logprob: -0.8288353085517883
    3. ' convert' → logprob: -2.4538352489471436
    4. ' normalize' → logprob: -3.4538352489471436
    5. 'def' → logprob: -6.203835487365723
    6. 'provide' → logprob: -6.578835487365723
    7. ' provide' → logprob: -6.703835487365723
    8. 'class' → logprob: -6.953835487365723
    9. ' def' → logprob: -7.203835487365723
    10. ' map' → logprob: -7.828835487365723

Token 590: ' identifier' (ID: 24577)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.04897905886173248
    2. ' identifiers' → logprob: -3.5489790439605713
    3. 'identifier' → logprob: -4.42397928237915
    4. 'and' → logprob: -5.42397928237915
    5. 'code' → logprob: -6.79897928237915
    6. 'different' → logprob: -7.29897928237915
    7. 'case' → logprob: -8.423978805541992
    8. '_ident' → logprob: -8.798978805541992
    9. 'var' → logprob: -8.798978805541992
    10. ' and' → logprob: -9.673978805541992

Token 591: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.304649293422699
    2. 'names' → logprob: -1.9296493530273438
    3. 'case' → logprob: -2.9296493530273438
    4. 'styles' → logprob: -3.8046493530273438
    5. 'style' → logprob: -4.054649353027344
    6. 'cases' → logprob: -4.554649353027344
    7. ' names' → logprob: -5.554649353027344
    8. ' case' → logprob: -5.804649353027344
    9. ' style' → logprob: -6.179649353027344
    10. ' styles' → logprob: -6.429649353027344

Token 592: ' specified' (ID: 10185)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0332274436950684
    2. 'a' → logprob: -1.5332274436950684
    3. ' different' → logprob: -2.0332274436950684
    4. 'different' → logprob: -2.2832274436950684
    5. ' any' → logprob: -2.4082274436950684
    6. 'any' → logprob: -3.0332274436950684
    7. ' various' → logprob: -3.2832274436950684
    8. 'desired' → logprob: -5.033227443695068
    9. 'var' → logprob: -5.408227443695068
    10. ' desired' → logprob: -6.533227443695068

Token 593: ' naming' (ID: 64882)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' case' → logprob: -0.2852918207645416
    2. 'case' → logprob: -1.7852917909622192
    3. ' style' → logprob: -2.660291910171509
    4. 'style' → logprob: -5.41029167175293
    5. ' target' → logprob: -6.53529167175293
    6. ' casing' → logprob: -6.78529167175293
    7. 'Case' → logprob: -7.03529167175293
    8. ' styles' → logprob: -7.28529167175293
    9. 'cases' → logprob: -8.16029167175293
    10. 'target' → logprob: -8.28529167175293

Token 594: ' convention' (ID: 39395)
  Prédit: 'style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'style' → logprob: -0.5241210460662842
    2. ' style' → logprob: -1.5241210460662842
    3. ' convention' → logprob: -2.274121046066284
    4. 'con' → logprob: -2.774121046066284
    5. '_style' → logprob: -4.774121284484863
    6. 'styles' → logprob: -4.899121284484863
    7. ' conventions' → logprob: -5.274121284484863
    8. ' styles' → logprob: -6.024121284484863
    9. '_con' → logprob: -7.024121284484863
    10. 'strategy' → logprob: -8.274121284484863

Token 595: '."""

' (ID: 68934)
  Prédit: '."""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '."""
' → logprob: -0.5285356044769287
    2. '"""
' → logprob: -2.1535356044769287
    3. '."""' → logprob: -2.2785356044769287
    4. '   ' → logprob: -2.9035356044769287
    5. '"""' → logprob: -3.0285356044769287
    6. ' and' → logprob: -3.0285356044769287
    7. '.' → logprob: -3.7785356044769287
    8. 'and' → logprob: -5.778535842895508
    9. 'class' → logprob: -5.903535842895508
    10. ',' → logprob: -6.403535842895508

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05300845205783844
    2. 'def' → logprob: -3.053008556365967
    3. ' def' → logprob: -5.428008556365967
    4. '```' → logprob: -12.178008079528809
    5. 'class' → logprob: -12.303008079528809
    6. 'indent' → logprob: -12.303008079528809
    7. '    ' → logprob: -13.053008079528809
    8. '	def' → logprob: -14.303008079528809
    9. '    
' → logprob: -14.303008079528809
    10. '   ' → logprob: -14.803008079528809

Token 597: ' _' (ID: 1175)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014463870786130428
    2. ' def' → logprob: -4.264463901519775
    3. '   ' → logprob: -8.139463424682617
    4. 'converter' → logprob: -13.264463424682617
    5. 'con' → logprob: -13.389463424682617
    6. 'available' → logprob: -13.764463424682617
    7. 'class' → logprob: -14.139463424682617
    8. '_def' → logprob: -14.639463424682617
    9. '	def' → logprob: -14.764463424682617
    10. '__' → logprob: -15.264463424682617

Token 598: 'con' (ID: 542)
  Prédit: 'con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.2903973162174225
    2. 'strateg' → logprob: -1.4153972864151
    3. 'strategy' → logprob: -5.6653971672058105
    4. '_con' → logprob: -5.7903971672058105
    5. 'converter' → logprob: -7.1653971672058105
    6. 'CON' → logprob: -7.4153971672058105
    7. 'convert' → logprob: -8.415397644042969
    8. 'STR' → logprob: -8.790397644042969
    9. 'mapping' → logprob: -8.915397644042969
    10. '_str' → logprob: -8.915397644042969

Token 599: 'verters' (ID: 79313)
  Prédit: 'verters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verters' → logprob: -0.030099181458353996
    2. 'verter' → logprob: -3.5300991535186768
    3. 'vert' → logprob: -8.655098915100098
    4. 'vention' → logprob: -9.780098915100098
    5. 'vent' → logprob: -10.155098915100098
    6. 'ver' → logprob: -10.405098915100098
    7. 'version' → logprob: -10.905098915100098
    8. 'ventions' → logprob: -11.280098915100098
    9. 'v' → logprob: -12.405098915100098
    10. '```' → logprob: -12.530098915100098

Token 600: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12403665482997894
    2. '=' → logprob: -2.3740365505218506
    3. ':' → logprob: -3.7490365505218506
    4. ' :' → logprob: -12.49903678894043
    5. '   ' → logprob: -13.62403678894043
    6. ' ' → logprob: -13.87403678894043
    7. '[' → logprob: -14.37403678894043
    8. '={'' → logprob: -15.12403678894043
    9. '{' → logprob: -15.37403678894043
    10. '```' → logprob: -15.62403678894043

Token 601: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.31336191296577454
    2. '{' → logprob: -1.3133618831634521
    3. '{'' → logprob: -9.563362121582031
    4. ' {
' → logprob: -10.938362121582031
    5. ' {' → logprob: -11.938362121582031
    6. '{
' → logprob: -13.188362121582031
    7. '{"' → logprob: -13.563362121582031
    8. '{}' → logprob: -13.563362121582031
    9. '{

' → logprob: -14.938362121582031
    10. '[' → logprob: -15.313362121582031

Token 602: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5490598082542419
    2. '       ' → logprob: -0.9240598082542419
    3. '   ' → logprob: -4.174059867858887
    4. '"' → logprob: -4.674059867858887
    5. ' '' → logprob: -7.174059867858887
    6. ' "' → logprob: -10.174059867858887
    7. ''U' → logprob: -10.424059867858887
    8. ''US' → logprob: -11.549059867858887
    9. ' ' → logprob: -12.424059867858887
    10. '     ' → logprob: -12.549059867858887

Token 603: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -0.04607420787215233
    2. '"' → logprob: -3.171074151992798
    3. '   ' → logprob: -5.921074390411377
    4. ''s' → logprob: -8.921073913574219
    5. ' '' → logprob: -9.296073913574219
    6. '       ' → logprob: -9.421073913574219
    7. ' "' → logprob: -10.296073913574219
    8. 'Upper' → logprob: -11.671073913574219
    9. ''US' → logprob: -12.296073913574219
    10. ' ' → logprob: -12.421073913574219

Token 604: 'U' (ID: 52)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11159124225378036
    2. 'upper' → logprob: -2.361591339111328
    3. '"' → logprob: -4.611591339111328
    4. 'Upper' → logprob: -7.111591339111328
    5. 'camel' → logprob: -8.486591339111328
    6. 'uppercase' → logprob: -9.611591339111328
    7. '   ' → logprob: -9.986591339111328
    8. ''s' → logprob: -10.236591339111328
    9. ' '' → logprob: -10.236591339111328
    10. 'lower' → logprob: -10.361591339111328

Token 605: '':' (ID: 2337)
  Prédit: 'pper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pper' → logprob: -0.22917382419109344
    2. 'PPER' → logprob: -1.7291737794876099
    3. 'p' → logprob: -4.35417366027832
    4. 'CC' → logprob: -5.22917366027832
    5. 'P' → logprob: -5.85417366027832
    6. 'C' → logprob: -6.60417366027832
    7. ''' → logprob: -6.60417366027832
    8. 'PC' → logprob: -6.72917366027832
    9. 'pp' → logprob: -7.85417366027832
    10. '"' → logprob: -7.85417366027832

Token 606: ' Upper' (ID: 45714)
  Prédit: 'Upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Upper' → logprob: -0.023245595395565033
    2. ' Upper' → logprob: -3.7732455730438232
    3. '   ' → logprob: -16.773244857788086
    4. ' upper' → logprob: -18.148244857788086
    5. '_upper' → logprob: -18.148244857788086
    6. 'upper' → logprob: -18.398244857788086
    7. '       ' → logprob: -18.523244857788086
    8. 'Lower' → logprob: -18.648244857788086
    9. ' ' → logprob: -19.023244857788086
    10. 'Up' → logprob: -19.773244857788086

Token 607: 'Camel' (ID: 137910)
  Prédit: 'Camel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Camel' → logprob: -1.0280383548888494e-06
    2. ' Camel' → logprob: -15.000000953674316
    3. 'camel' → logprob: -15.000000953674316
    4. '```' → logprob: -15.375000953674316
    5. '_C' → logprob: -16.875001907348633
    6. 'Cam' → logprob: -16.875001907348633
    7. 'C' → logprob: -17.625001907348633
    8. 'Case' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '.camel' → logprob: -18.000001907348633

Token 608: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -3.292907877039397e-06
    2. 'C' → logprob: -12.75000286102295
    3. 'case' → logprob: -16.375003814697266
    4. '```' → logprob: -17.375003814697266
    5. 'Camel' → logprob: -17.625003814697266
    6. ' Case' → logprob: -18.125003814697266
    7. '_case' → logprob: -18.500003814697266
    8. '[' → logprob: -18.625003814697266
    9. 'Cases' → logprob: -18.750003814697266
    10. 'Converter' → logprob: -18.875003814697266

Token 609: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.0017086135921999812
    2. 'Case' → logprob: -6.376708507537842
    3. '}' → logprob: -13.501708984375
    4. 'Convert' → logprob: -13.876708984375
    5. '```' → logprob: -13.876708984375
    6. ',' → logprob: -14.501708984375
    7. 'Convention' → logprob: -14.751708984375
    8. '   ' → logprob: -14.876708984375
    9. 'converter' → logprob: -15.001708984375
    10. ' Converter' → logprob: -15.126708984375

Token 610: '(),
' (ID: 5757)
  Prédit: '(),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),
' → logprob: -0.38778525590896606
    2. '(),' → logprob: -1.1377851963043213
    3. '()' → logprob: -7.1377854347229
    4. '(),

' → logprob: -9.887784957885742
    5. '(),
' → logprob: -10.387784957885742
    6. '()},
' → logprob: -11.137784957885742
    7. ' (),
' → logprob: -11.262784957885742
    8. '()},' → logprob: -12.512784957885742
    9. '(),"' → logprob: -13.137784957885742
    10. '(),'' → logprob: -13.887784957885742

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7903137803077698
    2. ''L' → logprob: -0.7903137803077698
    3. ''' → logprob: -2.915313720703125
    4. ' '' → logprob: -3.290313720703125
    5. '   ' → logprob: -7.540313720703125
    6. ''l' → logprob: -8.665313720703125
    7. ' L' → logprob: -9.290313720703125
    8. ' ' → logprob: -9.540313720703125
    9. ''U' → logprob: -10.040313720703125
    10. ''S' → logprob: -10.165313720703125

Token 612: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.004229766316711903
    2. '       ' → logprob: -6.004229545593262
    3. ''l' → logprob: -7.254229545593262
    4. ' '' → logprob: -7.879229545593262
    5. '   ' → logprob: -8.379229545593262
    6. '"L' → logprob: -8.879229545593262
    7. ''' (adapté à ' '') → logprob: -9.254229545593262
    8. 'L' → logprob: -9.379229545593262
    9. ' ' → logprob: -10.254229545593262
    10. ''C' → logprob: -10.379229545593262

Token 613: 'L' (ID: 43)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.18478013575077057
    2. 'L' → logprob: -1.8097801208496094
    3. ''l' → logprob: -6.059780120849609
    4. 'l' → logprob: -6.559780120849609
    5. '"L' → logprob: -7.184780120849609
    6. ' L' → logprob: -8.93478012084961
    7. ''' → logprob: -9.43478012084961
    8. ' ' → logprob: -9.43478012084961
    9. ' '' → logprob: -10.18478012084961
    10. '   ' → logprob: -10.43478012084961

Token 614: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04938853159546852
    2. 'Lower' → logprob: -3.6743886470794678
    3. 'Camel' → logprob: -3.9243886470794678
    4. ':' → logprob: -6.799388408660889
    5. ''' → logprob: -6.924388408660889
    6. 'lower' → logprob: -8.049388885498047
    7. '_lower' → logprob: -8.924388885498047
    8. 'camel' → logprob: -9.049388885498047
    9. 'ower' → logprob: -9.299388885498047
    10. '':'' → logprob: -9.674388885498047

Token 615: ' Lower' (ID: 42961)
  Prédit: 'Lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Lower' → logprob: -0.0040785204619169235
    2. ' Lower' → logprob: -5.504078388214111
    3. 'Low' → logprob: -16.754077911376953
    4. 'lower' → logprob: -18.504077911376953
    5. '_lower' → logprob: -18.879077911376953
    6. ' lower' → logprob: -19.504077911376953
    7. 'Upper' → logprob: -20.629077911376953
    8. ' ' → logprob: -20.879077911376953
    9. '   ' → logprob: -21.254077911376953
    10. 'L' → logprob: -22.879077911376953

Token 616: 'Camel' (ID: 137910)
  Prédit: 'Camel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Camel' → logprob: -4.961759259458631e-06
    2. 'camel' → logprob: -12.250004768371582
    3. '.camel' → logprob: -16.8750057220459
    4. ' Camel' → logprob: -17.1250057220459
    5. 'Cam' → logprob: -18.2500057220459
    6. '```' → logprob: -18.7500057220459
    7. 'C' → logprob: -19.1250057220459
    8. 'Lower' → logprob: -19.2500057220459
    9. 'Case' → logprob: -19.8750057220459
    10. ' camel' → logprob: -20.3750057220459

Token 617: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -1.7432603272027336e-06
    2. 'case' → logprob: -14.375001907348633
    3. 'Camel' → logprob: -14.625001907348633
    4. '_case' → logprob: -15.375001907348633
    5. 'C' → logprob: -16.500001907348633
    6. '_CASE' → logprob: -16.750001907348633
    7. ' Case' → logprob: -16.750001907348633
    8. 'ase' → logprob: -16.875001907348633
    9. 'CASE' → logprob: -18.125001907348633
    10. ' case' → logprob: -18.125001907348633

Token 618: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -9.996708104154095e-05
    2. 'Case' → logprob: -9.250100135803223
    3. 'Convert' → logprob: -13.000100135803223
    4. 'converter' → logprob: -14.125100135803223
    5. 'Converters' → logprob: -15.375100135803223
    6. ' Converter' → logprob: -15.500100135803223
    7. 'Conv' → logprob: -15.875100135803223
    8. '_converter' → logprob: -16.125099182128906
    9. 'Camel' → logprob: -16.875099182128906
    10. 'C' → logprob: -17.000099182128906

Token 619: '(),
' (ID: 5757)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.17671284079551697
    2. '(),
' → logprob: -1.9267128705978394
    3. ',' → logprob: -4.426712989807129
    4. '()' → logprob: -5.926712989807129
    5. '(),'' → logprob: -7.301712989807129
    6. '(),

' → logprob: -7.801712989807129
    7. '(),
' → logprob: -8.051712989807129
    8. '   ' → logprob: -8.801712989807129
    9. ',
' → logprob: -8.926712989807129
    10. '       ' → logprob: -10.926712989807129

Token 620: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09864745289087296
    2. ''U' → logprob: -2.473647356033325
    3. ''' → logprob: -4.723647594451904
    4. ' '' → logprob: -8.223647117614746
    5. '   ' → logprob: -8.348647117614746
    6. ''S' → logprob: -8.848647117614746
    7. ''_' → logprob: -11.098647117614746
    8. '        
' → logprob: -11.223647117614746
    9. ''N' → logprob: -11.223647117614746
    10. ''L' → logprob: -11.223647117614746

Token 621: ' '' (ID: 461)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.007380982395261526
    2. '       ' → logprob: -5.507380962371826
    3. ''_' → logprob: -6.007380962371826
    4. ''' (adapté à ' '') → logprob: -8.007381439208984
    5. '   ' → logprob: -8.132381439208984
    6. ''S' → logprob: -9.007381439208984
    7. ''u' → logprob: -11.007381439208984
    8. ''O' → logprob: -11.257381439208984
    9. ' '' → logprob: -11.257381439208984
    10. ''US' → logprob: -12.007381439208984

Token 622: 'D' (ID: 35)
  Prédit: ''_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''_' → logprob: -0.5188952684402466
    2. ''U' → logprob: -1.0188952684402466
    3. ''S' → logprob: -3.768895149230957
    4. '_' → logprob: -4.143895149230957
    5. ''' → logprob: -5.768895149230957
    6. ''US' → logprob: -7.643895149230957
    7. 'U' → logprob: -7.768895149230957
    8. ''O' → logprob: -8.018895149230957
    9. ''N' → logprob: -9.268895149230957
    10. '_'' → logprob: -9.518895149230957

Token 623: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.9255191087722778
    2. '_' → logprob: -1.0505191087722778
    3. ''' → logprob: -1.8005191087722778
    4. '}' → logprob: -4.050518989562988
    5. ''}' → logprob: -4.050518989562988
    6. '_:' → logprob: -4.550518989562988
    7. ''_' → logprob: -4.675518989562988
    8. '']' → logprob: -5.050518989562988
    9. '')' → logprob: -5.175518989562988
    10. ''):' → logprob: -5.550518989562988

Token 624: ' Und' (ID: 13378)
  Prédit: 'Und'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Und' → logprob: -0.0002036595979006961
    2. ' Und' → logprob: -8.500204086303711
    3. 'underscore' → logprob: -16.37520408630371
    4. '_' → logprob: -17.00020408630371
    5. '   ' → logprob: -17.37520408630371
    6. 'Under' → logprob: -17.87520408630371
    7. ' underscore' → logprob: -19.37520408630371
    8. ' ' → logprob: -19.50020408630371
    9. 'Underline' → logprob: -20.25020408630371
    10. 'und' → logprob: -20.50020408630371

Token 625: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -1.9361264946837764e-07
    2. 'er' → logprob: -16.625
    3. '_' → logprob: -17.625
    4. '```' → logprob: -18.0
    5. 'ERS' → logprob: -18.125
    6. 'es' → logprob: -18.375
    7. '``' → logprob: -19.375
    8. ' ers' → logprob: -19.375
    9. '   ' → logprob: -20.75
    10. 'nders' → logprob: -20.875

Token 626: 'core' (ID: 6978)
  Prédit: 'core'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' → logprob: -8.41866585687967e-06
    2. 'score' → logprob: -11.750008583068848
    3. 'code' → logprob: -15.000008583068848
    4. 'c' → logprob: -17.25000762939453
    5. 't' → logprob: -17.50000762939453
    6. '_score' → logprob: -17.87500762939453
    7. '_' → logprob: -18.00000762939453
    8. 'ore' → logprob: -18.00000762939453
    9. 'ocre' → logprob: -18.37500762939453
    10. '```' → logprob: -18.37500762939453

Token 627: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -5.512236498361744e-07
    2. 'Convert' → logprob: -15.375000953674316
    3. 'Con' → logprob: -16.25
    4. '_converter' → logprob: -16.25
    5. 'converter' → logprob: -17.75
    6. 'Converters' → logprob: -17.875
    7. 'Connector' → logprob: -18.25
    8. 'Separator' → logprob: -18.625
    9. '```' → logprob: -18.75
    10. ' Converter' → logprob: -18.875

Token 628: '(),
' (ID: 5757)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2310873419046402
    2. ',' → logprob: -1.606087327003479
    3. '   ' → logprob: -5.6060872077941895
    4. '()' → logprob: -7.1060872077941895
    5. '(),' → logprob: -7.4810872077941895
    6. ',
' → logprob: -7.9810872077941895
    7. '()}' → logprob: -8.481087684631348
    8. ')' → logprob: -11.106087684631348
    9. '(),
' → logprob: -11.356087684631348
    10. ' }' → logprob: -11.606087684631348

Token 629: '   ' (ID: 271)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.12692947685718536
    2. '   ' → logprob: -2.126929521560669
    3. ' }' → logprob: -14.37692928314209
    4. '       ' → logprob: -14.75192928314209
    5. '}
' → logprob: -15.37692928314209
    6. '}

' → logprob: -15.50192928314209
    7. ''' → logprob: -16.876930236816406
    8. '	' → logprob: -17.126930236816406
    9. ''}' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.376930236816406

Token 630: ' }

' (ID: 758)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -6.504040356958285e-05
    2. '   ' → logprob: -9.750064849853516
    3. '}

' (adapté à ' }

') → logprob: -12.750064849853516
    4. ' }' → logprob: -12.875064849853516
    5. '}
' → logprob: -13.750064849853516
    6. ''' → logprob: -16.000064849853516
    7. ',' → logprob: -17.125064849853516
    8. ''}' → logprob: -17.500064849853516
    9. '       ' → logprob: -17.875064849853516
    10. ' ' → logprob: -18.000064849853516

Token 631: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06837312132120132
    2. 'def' → logprob: -2.818373203277588
    3. ' def' → logprob: -5.068373203277588
    4. '	def' → logprob: -9.69337272644043
    5. '```' → logprob: -11.31837272644043
    6. 'indent' → logprob: -11.81837272644043
    7. ' ' → logprob: -12.94337272644043
    8. '  ' → logprob: -13.31837272644043
    9. '    ' → logprob: -13.31837272644043
    10. 'ind' → logprob: -13.44337272644043

Token 632: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.2519392669200897
    2. 'def' (adapté à ' def') → logprob: -1.501939296722412
    3. ' def' → logprob: -11.626938819885254
    4. ' @' → logprob: -14.376938819885254
    5. '@property' → logprob: -15.501938819885254
    6. '   ' → logprob: -16.25193977355957
    7. '@param' → logprob: -16.62693977355957
    8. '@s' → logprob: -16.75193977355957
    9. '@
' → logprob: -17.00193977355957
    10. '
' → logprob: -17.12693977355957

Token 633: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.35428595542907715
    2. ' __' → logprob: -1.3542859554290771
    3. 'def' → logprob: -3.229285955429077
    4. '__' → logprob: -7.479286193847656
    5. 'init' → logprob: -10.979286193847656
    6. ' init' → logprob: -11.229286193847656
    7. ' convert' → logprob: -12.979286193847656
    8. ' _' → logprob: -13.104286193847656
    9. '_init' → logprob: -13.229286193847656
    10. 'staticmethod' → logprob: -13.354286193847656

Token 634: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.0
    3. 'new' → logprob: -18.875
    4. '_init' → logprob: -21.875
    5. 'ini' → logprob: -23.125
    6. 'inite' → logprob: -23.375
    7. '	init' → logprob: -23.75
    8. 'int' → logprob: -24.0
    9. '(init' → logprob: -24.5
    10. 'call' → logprob: -24.75

Token 635: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -6.861651490908116e-05
    2. '__' → logprob: -10.125068664550781
    3. '__(
' → logprob: -10.750068664550781
    4. '(self' → logprob: -12.250068664550781
    5. '_(' → logprob: -13.250068664550781
    6. '__('' → logprob: -15.750068664550781
    7. '__((' → logprob: -16.12506866455078
    8. '(' → logprob: -16.50006866455078
    9. '__("' → logprob: -17.12506866455078
    10. 'self' → logprob: -17.25006866455078

Token 636: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.000000953674316
    3. ' self' → logprob: -15.000000953674316
    4. '(self' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.750001907348633
    6. 's' → logprob: -19.125001907348633
    7. '0' → logprob: -20.000001907348633
    8. '=self' → logprob: -20.250001907348633
    9. ')' → logprob: -20.375001907348633
    10. 'name' → logprob: -20.500001907348633

Token 637: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2275465875864029
    2. 'self' → logprob: -1.6025465726852417
    3. '(self' → logprob: -6.477546691894531
    4. ')' → logprob: -8.602546691894531
    5. ',self' → logprob: -8.977546691894531
    6. '   ' → logprob: -9.602546691894531
    7. ' self' → logprob: -9.727546691894531
    8. ',
' → logprob: -10.102546691894531
    9. ' ,' → logprob: -10.352546691894531
    10. '):
' → logprob: -10.602546691894531

Token 638: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.1329667866230011
    2. 'style' → logprob: -2.5079667568206787
    3. 'self' → logprob: -3.8829667568206787
    4. 'desired' → logprob: -4.507966995239258
    5. 'default' → logprob: -5.382966995239258
    6. 'to' → logprob: -6.132966995239258
    7. 'from' → logprob: -6.632966995239258
    8. 'dest' → logprob: -7.632966995239258
    9. ' target' → logprob: -7.757966995239258
    10. 'source' → logprob: -7.757966995239258

Token 639: '_type' (ID: 3804)
  Prédit: '_style'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_style' → logprob: -0.12594503164291382
    2. '_case' → logprob: -2.6259450912475586
    3. ':' → logprob: -3.3759450912475586
    4. '_format' → logprob: -5.125945091247559
    5. '):' → logprob: -5.625945091247559
    6. '_con' → logprob: -6.750945091247559
    7. '_type' → logprob: -7.500945091247559
    8. '_mode' → logprob: -9.500945091247559
    9. '_code' → logprob: -9.875945091247559
    10. '_strategy' → logprob: -9.875945091247559

Token 640: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1331651657819748
    2. '):' → logprob: -2.133165121078491
    3. ':str' → logprob: -5.25816535949707
    4. '):
' → logprob: -7.38316535949707
    5. ')' → logprob: -8.50816535949707
    6. ' :' → logprob: -9.00816535949707
    7. '   ' → logprob: -11.13316535949707
    8. ' ):' → logprob: -11.25816535949707
    9. '):
' → logprob: -11.88316535949707
    10. '_:' → logprob: -12.00816535949707

Token 641: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -8.590104698669165e-05
    2. ' str' → logprob: -9.750085830688477
    3. ')' → logprob: -10.625085830688477
    4. '[str' → logprob: -13.875085830688477
    5. '):
' → logprob: -14.250085830688477
    6. '(str' → logprob: -15.250085830688477
    7. ':str' → logprob: -15.250085830688477
    8. '   ' → logprob: -15.750085830688477
    9. '
' → logprob: -15.750085830688477
    10. 'self' → logprob: -15.875085830688477

Token 642: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008228848688304424
    2. ')' → logprob: -5.008228778839111
    3. '):
' → logprob: -6.508228778839111
    4. ':' → logprob: -10.88322925567627
    5. '   ' → logprob: -13.63322925567627
    6. '):
' → logprob: -14.25822925567627
    7. ' ):' → logprob: -15.25822925567627
    8. ''):' → logprob: -16.258228302001953
    9. '       ' → logprob: -16.383228302001953
    10. ',' → logprob: -17.008228302001953

Token 643: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057392907328903675
    2. ' self' → logprob: -5.630739212036133
    3. 'self' → logprob: -6.255739212036133
    4. '   ' → logprob: -9.005739212036133
    5. ' if' → logprob: -9.880739212036133
    6. 'assert' → logprob: -12.005739212036133
    7. '<|end|>' → logprob: -12.130739212036133
    8. 'if' → logprob: -12.255739212036133
    9. '	self' → logprob: -12.255739212036133
    10. ',' → logprob: -12.880739212036133

Token 644: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5885311365127563
    2. 'if' (adapté à ' if') → logprob: -0.8385311365127563
    3. ' if' → logprob: -4.838531017303467
    4. '       ' → logprob: -5.838531017303467
    5. ' self' → logprob: -6.838531017303467
    6. 'assert' → logprob: -7.588531017303467
    7. 'target' → logprob: -9.213531494140625
    8. ' assert' → logprob: -12.713531494140625
    9. ' target' → logprob: -15.213531494140625
    10. '   ' → logprob: -16.338531494140625

Token 645: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.12693051993846893
    2. ' target' → logprob: -2.1269304752349854
    3. ' not' → logprob: -13.501930236816406
    4. 'not' → logprob: -14.126930236816406
    5. 'len' → logprob: -15.376930236816406
    6. '(target' → logprob: -16.126930236816406
    7. '	target' → logprob: -17.376930236816406
    8. ' len' → logprob: -17.626930236816406
    9. '       ' → logprob: -18.376930236816406
    10. '[target' → logprob: -18.501930236816406

Token 646: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -8.2994620242971e-06
    2. '_' → logprob: -11.875008583068848
    3. 'type' → logprob: -14.875008583068848
    4. ' _' → logprob: -15.750008583068848
    5. '   ' → logprob: -15.875008583068848
    6. '```' → logprob: -16.12500762939453
    7. '_TYPE' → logprob: -16.37500762939453
    8. '_token' → logprob: -16.37500762939453
    9. 'Type' → logprob: -16.50000762939453
    10. '_t' → logprob: -17.12500762939453

Token 647: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0019347082125023007
    2. 'not' → logprob: -6.25193452835083
    3. '	not' → logprob: -13.376935005187988
    4. ')' → logprob: -14.001935005187988
    5. ' ' → logprob: -14.001935005187988
    6. '.upper' → logprob: -14.376935005187988
    7. ' in' → logprob: -14.501935005187988
    8. '[' → logprob: -15.126935005187988
    9. ' no' → logprob: -15.251935005187988
    10. '=' → logprob: -15.251935005187988

Token 648: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11131685972213745
    2. ' self' → logprob: -2.7363169193267822
    3. '(self' → logprob: -4.111316680908203
    4. '('' → logprob: -4.236316680908203
    5. ' in' → logprob: -4.861316680908203
    6. '['' → logprob: -7.236316680908203
    7. 'in' → logprob: -7.861316680908203
    8. '(' → logprob: -8.236316680908203
    9. ' ('' → logprob: -8.861316680908203
    10. ''' → logprob: -9.736316680908203

Token 649: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004940323997288942
    2. ' self' → logprob: -5.879940509796143
    3. 'Identifier' → logprob: -6.879940509796143
    4. '{'' → logprob: -6.879940509796143
    5. ''' → logprob: -10.004940032958984
    6. '['' → logprob: -11.004940032958984
    7. ' Identifier' → logprob: -12.379940032958984
    8. ' {'' → logprob: -12.879940032958984
    9. '('' → logprob: -12.879940032958984
    10. '(self' → logprob: -12.879940032958984

Token 650: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.180258191714529e-06
    2. '_con' → logprob: -12.000008583068848
    3. '.__' → logprob: -14.125008583068848
    4. ' .' → logprob: -14.250008583068848
    5. '.' → logprob: -14.750008583068848
    6. '   ' → logprob: -17.12500762939453
    7. ']._' → logprob: -17.37500762939453
    8. '."_' → logprob: -17.62500762939453
    9. '.\' → logprob: -18.00000762939453
    10. '.con' → logprob: -18.00000762939453

Token 651: 'con' (ID: 542)
  Prédit: 'con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.00043126524542458355
    2. '_con' → logprob: -7.750431060791016
    3. 'convert' → logprob: -14.625431060791016
    4. '.con' → logprob: -18.250431060791016
    5. '	con' → logprob: -18.250431060791016
    6. 'conv' → logprob: -18.500431060791016
    7. 'Converters' → logprob: -18.750431060791016
    8. 'converter' → logprob: -18.875431060791016
    9. ' converters' → logprob: -19.250431060791016
    10. '(con' → logprob: -19.500431060791016

Token 652: 'verters' (ID: 79313)
  Prédit: 'verters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verters' → logprob: -2.939851037808694e-05
    2. 'ver' → logprob: -11.500029563903809
    3. 'vert' → logprob: -11.625029563903809
    4. 'verter' → logprob: -12.375029563903809
    5. '```' → logprob: -13.000029563903809
    6. '{' → logprob: -13.750029563903809
    7. 'v' → logprob: -13.875029563903809
    8. 'verts' → logprob: -14.500029563903809
    9. 'verte' → logprob: -15.250029563903809
    10. 'Converters' → logprob: -15.625029563903809

Token 653: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28673645853996277
    2. ':' → logprob: -1.4117364883422852
    3. '):
' → logprob: -5.536736488342285
    4. ' :
' → logprob: -7.411736488342285
    5. ' :' → logprob: -8.161736488342285
    6. '):' → logprob: -8.536736488342285
    7. '   ' → logprob: -8.786736488342285
    8. '():
' → logprob: -9.036736488342285
    9. '.keys' → logprob: -9.161736488342285
    10. '       ' → logprob: -9.411736488342285

Token 654: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0586615614593029
    2. '           ' → logprob: -2.933661460876465
    3. ' raise' → logprob: -6.433661460876465
    4. ':' → logprob: -6.683661460876465
    5. 'raise' → logprob: -8.183661460876465
    6. ':
' → logprob: -8.933661460876465
    7. ',' → logprob: -9.183661460876465
    8. '<|end|>' → logprob: -9.558661460876465
    9. '	raise' → logprob: -9.558661460876465
    10. ' or' → logprob: -9.808661460876465

Token 655: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4165087938308716
    2. 'raise' (adapté à ' raise') → logprob: -1.1665087938308716
    3. '           ' → logprob: -3.541508674621582
    4. '	raise' → logprob: -8.791508674621582
    5. '_raise' → logprob: -9.916508674621582
    6. '       ' → logprob: -11.041508674621582
    7. 'Raise' → logprob: -11.916508674621582
    8. 'raises' → logprob: -12.666508674621582
    9. '.raise' → logprob: -13.416508674621582
    10. '               ' → logprob: -13.666508674621582

Token 656: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0001589618914294988
    2. ' Value' → logprob: -8.75015926361084
    3. 'Key' → logprob: -14.87515926361084
    4. '	Value' → logprob: -16.500158309936523
    5. '_value' → logprob: -17.500158309936523
    6. 'Type' → logprob: -17.750158309936523
    7. '_Value' → logprob: -17.875158309936523
    8. '(Value' → logprob: -18.500158309936523
    9. 'Runtime' → logprob: -18.500158309936523
    10. 'value' → logprob: -18.500158309936523

Token 657: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.01641121692955494
    2. 'rror' → logprob: -4.141411304473877
    3. 'Value' → logprob: -8.141410827636719
    4. 'ror' → logprob: -10.266410827636719
    5. 'n' → logprob: -10.391410827636719
    6. 'r' → logprob: -11.766410827636719
    7. 'SError' → logprob: -11.766410827636719
    8. 'ption' → logprob: -14.016410827636719
    9. 'alue' → logprob: -14.391410827636719
    10. 'error' → logprob: -14.391410827636719

Token 658: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.01967460662126541
    2. '("' → logprob: -4.019674777984619
    3. '(' → logprob: -6.519674777984619
    4. '(
' → logprob: -10.019674301147461
    5. '('' → logprob: -12.269674301147461
    6. 'f' → logprob: -16.14467430114746
    7. '(F' → logprob: -17.51967430114746
    8. '("'' → logprob: -17.51967430114746
    9. '(

' → logprob: -17.89467430114746
    10. '(
' → logprob: -19.51967430114746

Token 659: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007004851475358009
    2. ''' → logprob: -5.632004737854004
    3. 'f' → logprob: -6.132004737854004
    4. '("' → logprob: -7.382004737854004
    5. '(f' → logprob: -7.632004737854004
    6. ' f' → logprob: -10.382004737854004
    7. '(' → logprob: -11.007004737854004
    8. '       ' → logprob: -11.132004737854004
    9. '   ' → logprob: -11.382004737854004
    10. 'Invalid' → logprob: -11.507004737854004

Token 660: 'Unsupported' (ID: 71142)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.23315364122390747
    2. 'Invalid' → logprob: -1.9831535816192627
    3. 'Unsupported' → logprob: -3.4831535816192627
    4. 'Unknown' → logprob: -3.8581535816192627
    5. ''' → logprob: -4.858153820037842
    6. 'f' → logprob: -5.108153820037842
    7. 'Target' → logprob: -5.733153820037842
    8. 'target' → logprob: -7.233153820037842
    9. 'Unexpected' → logprob: -8.358153343200684
    10. 'Un' → logprob: -9.233153343200684

Token 661: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.07889749854803085
    2. ' target' → logprob: -2.578897476196289
    3. '(target' → logprob: -11.953897476196289
    4. 'case' → logprob: -15.078897476196289
    5. '_target' → logprob: -15.203897476196289
    6. ' naming' → logprob: -16.07889747619629
    7. '	target' → logprob: -16.20389747619629
    8. '
' → logprob: -16.32889747619629
    9. '[target' → logprob: -16.45389747619629
    10. 'identifier' → logprob: -16.70389747619629

Token 662: ' type' (ID: 1490)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.00013786651834379882
    2. '_' → logprob: -9.250138282775879
    3. '_case' → logprob: -11.125138282775879
    4. 'type' → logprob: -11.250138282775879
    5. ' type' → logprob: -11.625138282775879
    6. ' case' → logprob: -13.375138282775879
    7. 'case' → logprob: -14.125138282775879
    8. '_name' → logprob: -14.875138282775879
    9. 'Type' → logprob: -14.875138282775879
    10. '_types' → logprob: -15.000138282775879

Token 663: ':' (ID: 25)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.444373220205307
    2. '{' → logprob: -1.3193732500076294
    3. ':' → logprob: -2.81937313079834
    4. ''{' → logprob: -3.69437313079834
    5. 'target' → logprob: -5.56937313079834
    6. ' target' → logprob: -6.69437313079834
    7. '[target' → logprob: -7.44437313079834
    8. ' '{' → logprob: -7.69437313079834
    9. '':' → logprob: -9.06937313079834
    10. ' for' → logprob: -9.06937313079834

Token 664: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.009626230224967003
    2. 'target' → logprob: -5.259626388549805
    3. ' {' → logprob: -5.509626388549805
    4. ' target' → logprob: -8.009626388549805
    5. '[target' → logprob: -13.009626388549805
    6. '(target' → logprob: -14.884626388549805
    7. '	target' → logprob: -16.634626388549805
    8. ''{' → logprob: -17.134626388549805
    9. '{
' → logprob: -17.134626388549805
    10. '   ' → logprob: -17.384626388549805

Token 665: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00033593899570405483
    2. '{' → logprob: -8.000335693359375
    3. ' target' → logprob: -14.625335693359375
    4. '[target' → logprob: -17.250335693359375
    5. 'arget' → logprob: -17.500335693359375
    6. '(target' → logprob: -17.625335693359375
    7. '	target' → logprob: -18.500335693359375
    8. '{
' → logprob: -18.750335693359375
    9. ',target' → logprob: -19.500335693359375
    10. '}{' → logprob: -21.500335693359375

Token 666: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -1.9361264946837764e-07
    2. 'ype' → logprob: -16.125
    3. 'type' → logprob: -16.875
    4. '}' → logprob: -18.75
    5. '```' → logprob: -19.125
    6. '{' → logprob: -19.625
    7. '_' → logprob: -20.125
    8. '}_' → logprob: -20.375
    9. '_TYPE' → logprob: -20.5
    10. '   ' → logprob: -20.75

Token 667: '}")
' (ID: 23577)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0015650922432541847
    2. '}")
' → logprob: -6.501564979553223
    3. '")' → logprob: -9.876564979553223
    4. '}' → logprob: -12.626564979553223
    5. ' }' → logprob: -13.001564979553223
    6. '}")
' → logprob: -13.126564979553223
    7. '}')' → logprob: -13.626564979553223
    8. '}"' → logprob: -13.876564979553223
    9. '}")

' → logprob: -14.626564979553223
    10. '')' → logprob: -14.751564979553223

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.836499985889532e-05
    2. 'self' → logprob: -10.3750581741333
    3. '
' → logprob: -11.0000581741333
    4. ' self' → logprob: -12.3750581741333
    5. '<|end|>' → logprob: -13.1250581741333
    6. '   ' → logprob: -13.3750581741333
    7. '        
' → logprob: -13.5000581741333
    8. '           ' → logprob: -15.5000581741333
    9. '	' → logprob: -15.5000581741333
    10. '      ' → logprob: -15.6250581741333

Token 669: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3181968927383423
    2. 'self' (adapté à ' self') → logprob: -1.3181968927383423
    3. ' self' → logprob: -5.318196773529053
    4. '   ' → logprob: -10.943197250366211
    5. '	self' → logprob: -13.068197250366211
    6. ' ' → logprob: -14.443197250366211
    7. '	' → logprob: -15.443197250366211
    8. '(self' → logprob: -15.693197250366211
    9. 'def' → logprob: -16.31819725036621
    10. '      ' → logprob: -16.31819725036621

Token 670: '.converter' (ID: 105910)
  Prédit: '.target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.0161480363458395
    2. '._' → logprob: -4.266148090362549
    3. '.converter' → logprob: -6.891148090362549
    4. 'target' → logprob: -7.891148090362549
    5. '.' → logprob: -8.01614761352539
    6. '_target' → logprob: -8.89114761352539
    7. '.con' → logprob: -10.76614761352539
    8. '.convert' → logprob: -10.89114761352539
    9. '_converter' → logprob: -10.89114761352539
    10. '.selected' → logprob: -11.39114761352539

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931536197662354
    2. ' =' → logprob: -0.6931536197662354
    3. 's' → logprob: -12.193153381347656
    4. ' ' → logprob: -14.818153381347656
    5. '  ' → logprob: -15.068153381347656
    6. '   ' → logprob: -15.318153381347656
    7. ':' → logprob: -15.318153381347656
    8. '_' → logprob: -15.818153381347656
    9. '	' → logprob: -16.318153381347656
    10. '_id' → logprob: -17.943153381347656

Token 672: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002475777640938759
    2. ' self' → logprob: -6.002475738525391
    3. 'Identifier' → logprob: -15.87747573852539
    4. '(self' → logprob: -17.75247573852539
    5. '	self' → logprob: -18.62747573852539
    6. '
' → logprob: -18.87747573852539
    7. '=self' → logprob: -18.87747573852539
    8. '   ' → logprob: -20.25247573852539
    9. '       ' → logprob: -20.50247573852539
    10. ' Identifier' → logprob: -21.00247573852539

Token 673: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.27099974633893e-05
    2. '_con' → logprob: -12.000012397766113
    3. ')._' → logprob: -12.625012397766113
    4. ']._' → logprob: -13.625012397766113
    5. '.__' → logprob: -14.125012397766113
    6. '
' → logprob: -15.000012397766113
    7. '.' → logprob: -15.375012397766113
    8. '_conv' → logprob: -15.750012397766113
    9. '   ' → logprob: -16.25001335144043
    10. '."_' → logprob: -16.37501335144043

Token 674: 'con' (ID: 542)
  Prédit: 'con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.00023178798437584192
    2. '_con' → logprob: -8.375231742858887
    3. 'convert' → logprob: -14.875231742858887
    4. '_' → logprob: -15.750231742858887
    5. 'converter' → logprob: -15.875231742858887
    6. '.con' → logprob: -16.125232696533203
    7. '_converter' → logprob: -16.250232696533203
    8. '_convert' → logprob: -16.625232696533203
    9. '	con' → logprob: -16.750232696533203
    10. '$con' → logprob: -16.875232696533203

Token 675: 'verters' (ID: 79313)
  Prédit: 'verters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verters' → logprob: -0.0002120038407156244
    2. 'verter' → logprob: -8.875211715698242
    3. 'er' → logprob: -9.875211715698242
    4. 'ver' → logprob: -11.125211715698242
    5. 'ters' → logprob: -13.125211715698242
    6. '```' → logprob: -13.500211715698242
    7. 'vert' → logprob: -14.500211715698242
    8. 'verte' → logprob: -14.625211715698242
    9. '``' → logprob: -15.500211715698242
    10. 'con' → logprob: -15.750211715698242

Token 676: '[target' (ID: 123448)
  Prédit: '[target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -5.080963092041202e-06
    2. 'target' → logprob: -12.500004768371582
    3. '[' → logprob: -14.000004768371582
    4. '[token' → logprob: -14.750004768371582
    5. '[source' → logprob: -17.3750057220459
    6. '[type' → logprob: -19.2500057220459
    7. '[to' → logprob: -19.2500057220459
    8. '[self' → logprob: -19.5000057220459
    9. ' [' → logprob: -19.6250057220459
    10. '[t' → logprob: -19.7500057220459

Token 677: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -5.512236498361744e-07
    2. 'type' → logprob: -14.625000953674316
    3. 'ype' → logprob: -17.875
    4. '```' → logprob: -18.875
    5. 'Type' → logprob: -19.875
    6. '_TYPE' → logprob: -20.125
    7. '_' → logprob: -20.625
    8. '"type' → logprob: -20.75
    9. '   ' → logprob: -21.0
    10. '_key' → logprob: -21.125

Token 678: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0039024308789521456
    2. '<|end|>' → logprob: -5.628902435302734
    3. ' ]' → logprob: -8.378902435302734
    4. '}' → logprob: -10.128902435302734
    5. '<|end|>' → logprob: -11.253902435302734
    6. ']
' → logprob: -12.128902435302734
    7. ')' → logprob: -12.253902435302734
    8. '']' → logprob: -12.878902435302734
    9. ']()' → logprob: -13.253902435302734
    10. ' ' → logprob: -13.753902435302734

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030578646808862686
    2. 'def' → logprob: -3.78057861328125
    3. ' def' → logprob: -6.03057861328125
    4. '<|end|>' → logprob: -6.15557861328125
    5. '    
' → logprob: -6.40557861328125
    6. '
' → logprob: -7.53057861328125
    7. '        
' → logprob: -8.53057861328125
    8. '	def' → logprob: -8.90557861328125
    9. '<|end|>' → logprob: -9.15557861328125
    10. '```' → logprob: -9.40557861328125

Token 680: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001173321157693863
    2. ' def' → logprob: -6.751173496246338
    3. '   ' → logprob: -12.75117301940918
    4. '	def' → logprob: -15.75117301940918
    5. ' ' → logprob: -18.12617301940918
    6. ')' → logprob: -18.75117301940918
    7. '```' → logprob: -18.75117301940918
    8. 'Def' → logprob: -19.62617301940918
    9. '_def' → logprob: -19.75117301940918
    10. '    
' → logprob: -19.87617301940918

Token 681: ' normalize' (ID: 44464)
  Prédit: 'normalize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normalize' → logprob: -0.04674825072288513
    2. 'convert' → logprob: -3.296748161315918
    3. ' normalize' → logprob: -4.796748161315918
    4. ' convert' → logprob: -7.796748161315918
    5. 'normal' → logprob: -14.046748161315918
    6. '.normalize' → logprob: -15.671748161315918
    7. 'normalized' → logprob: -15.671748161315918
    8. ' ' → logprob: -17.171749114990234
    9. 'def' → logprob: -17.171749114990234
    10. 'to' → logprob: -17.296749114990234

Token 682: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002192852320149541
    2. '(' → logprob: -6.127192974090576
    3. '(
' → logprob: -13.127192497253418
    4. ' (' → logprob: -13.127192497253418
    5. '_identifier' → logprob: -13.377192497253418
    6. 'self' → logprob: -14.127192497253418
    7. '(identifier' → logprob: -14.252192497253418
    8. '(s' → logprob: -15.377192497253418
    9. '<|end|>' → logprob: -15.752192497253418
    10. 'def' → logprob: -16.377193450927734

Token 683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022642381372861564
    2. ' ,' → logprob: -9.125226020812988
    3. 'self' → logprob: -9.375226020812988
    4. '_identifier' → logprob: -11.625226020812988
    5. '_,' → logprob: -11.875226020812988
    6. 'identifier' → logprob: -12.125226020812988
    7. ',self' → logprob: -12.375226020812988
    8. ')' → logprob: -13.000226020812988
    9. '(self' → logprob: -13.375226020812988
    10. '<|end|>' → logprob: -14.500226020812988

Token 684: ' identifier' (ID: 24577)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.09294071048498154
    2. 'self' → logprob: -2.9679408073425293
    3. ' identifier' → logprob: -3.3429408073425293
    4. ' self' → logprob: -6.217940807342529
    5. 'ident' → logprob: -12.717940330505371
    6. 'text' → logprob: -12.967940330505371
    7. 'Identifier' → logprob: -13.217940330505371
    8. '_identifier' → logprob: -13.217940330505371
    9. '   ' → logprob: -13.592940330505371
    10. 'name' → logprob: -14.092940330505371

Token 685: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022813379764556885
    2. '):' → logprob: -6.127281188964844
    3. ')' → logprob: -10.377281188964844
    4. ',' → logprob: -10.627281188964844
    5. ':str' → logprob: -10.877281188964844
    6. ' :' → logprob: -11.627281188964844
    7. '):
' → logprob: -11.877281188964844
    8. '   ' → logprob: -12.252281188964844
    9. 'self' → logprob: -14.627281188964844
    10. '       ' → logprob: -15.377281188964844

Token 686: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03806581720709801
    2. ' str' → logprob: -3.2880659103393555
    3. ')' → logprob: -11.038065910339355
    4. 'self' → logprob: -11.913065910339355
    5. ':str' → logprob: -14.663065910339355
    6. '[str' → logprob: -15.038065910339355
    7. '   ' → logprob: -15.163065910339355
    8. 's' → logprob: -16.28806495666504
    9. '	str' → logprob: -16.28806495666504
    10. ' self' → logprob: -16.53806495666504

Token 687: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.659005157416686e-05
    2. '):' → logprob: -9.750066757202148
    3. ':' → logprob: -12.000066757202148
    4. '):
' → logprob: -13.875066757202148
    5. ')->' → logprob: -14.750066757202148
    6. ' )' → logprob: -14.875066757202148
    7. '   ' → logprob: -14.875066757202148
    8. ' ' → logprob: -18.12506675720215
    9. '):
' → logprob: -18.25006675720215
    10. '):

' → logprob: -18.75006675720215

Token 688: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8341598510742188
    2. '->' → logprob: -0.8341598510742188
    3. ' ->' → logprob: -2.0841598510742188
    4. ')->' → logprob: -5.584159851074219
    5. ')' → logprob: -6.209159851074219
    6. '   ' → logprob: -7.709159851074219
    7. ':
' → logprob: -8.334159851074219
    8. '):' → logprob: -8.959159851074219
    9. '()->' → logprob: -8.959159851074219
    10. '       ' → logprob: -9.334159851074219

Token 689: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.039506252855062485
    2. ' str' → logprob: -3.289506196975708
    3. 'self' → logprob: -6.539506435394287
    4. ' self' → logprob: -11.164505958557129
    5. '[str' → logprob: -12.539505958557129
    6. '(str' → logprob: -15.164505958557129
    7. 's' → logprob: -15.414505958557129
    8. '	str' → logprob: -16.039506912231445
    9. ':str' → logprob: -16.789506912231445
    10. '=str' → logprob: -17.039506912231445

Token 690: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13316141068935394
    2. '       ' → logprob: -2.7581613063812256
    3. ':
' → logprob: -3.0081613063812256
    4. '(self' → logprob: -5.258161544799805
    5. '   ' → logprob: -5.633161544799805
    6. '):' → logprob: -7.133161544799805
    7. '):
' → logprob: -7.383161544799805
    8. 'self' → logprob: -7.508161544799805
    9. '->' → logprob: -8.758161544799805
    10. ')' → logprob: -8.758161544799805

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003789865644648671
    2. 'return' → logprob: -6.128789901733398
    3. ' return' → logprob: -6.503789901733398
    4. '   ' → logprob: -10.003789901733398
    5. '```' → logprob: -11.253789901733398
    6. '<|end|>' → logprob: -11.753789901733398
    7. '
' → logprob: -12.003789901733398
    8. '        
' → logprob: -12.003789901733398
    9. '{return' → logprob: -12.253789901733398
    10. '    
' → logprob: -13.128789901733398

Token 692: ' """' (ID: 9280)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1912865936756134
    2. '       ' → logprob: -2.441286563873291
    3. ' return' → logprob: -2.441286563873291
    4. '   ' → logprob: -12.44128704071045
    5. '	return' → logprob: -13.06628704071045
    6. '```' → logprob: -15.56628704071045
    7. ' ' → logprob: -16.316286087036133
    8. '{return' → logprob: -16.566286087036133
    9. 'try' → logprob: -16.691286087036133
    10. '           ' → logprob: -17.316286087036133

Token 693: 'Convert' (ID: 18702)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00011367550177965313
    2. '       ' → logprob: -9.625113487243652
    3. ' return' → logprob: -10.375113487243652
    4. 'Return' → logprob: -11.125113487243652
    5. '"""' → logprob: -14.875113487243652
    6. '   ' → logprob: -15.000113487243652
    7. '```' → logprob: -15.500113487243652
    8. '	return' → logprob: -15.625113487243652
    9. 'try' → logprob: -15.875113487243652
    10. '
' → logprob: -16.12511444091797

Token 694: ' given' (ID: 4335)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.02064524218440056
    2. ' identifier' → logprob: -4.0206451416015625
    3. '       ' → logprob: -7.0206451416015625
    4. '(identifier' → logprob: -7.0206451416015625
    5. 'self' → logprob: -7.2706451416015625
    6. ' self' → logprob: -12.520645141601562
    7. '(self' → logprob: -13.145645141601562
    8. '        
' → logprob: -13.895645141601562
    9. '```' → logprob: -14.145645141601562
    10. '.identifier' → logprob: -14.645645141601562

Token 695: ' identifier' (ID: 24577)
  Prédit: ' identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' identifier' → logprob: -0.12693703174591064
    2. 'identifier' → logprob: -2.126936912536621
    3. '_identifier' → logprob: -12.376936912536621
    4. '   ' → logprob: -12.876936912536621
    5. '(identifier' → logprob: -13.751936912536621
    6. ' ' → logprob: -14.626936912536621
    7. '.identifier' → logprob: -15.126936912536621
    8. 'Identifier' → logprob: -15.876936912536621
    9. 'string' → logprob: -16.876937866210938
    10. 'indent' → logprob: -17.251937866210938

Token 696: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2324560433626175
    2. '       ' → logprob: -2.7324559688568115
    3. 'to' → logprob: -2.8574559688568115
    4. ',' → logprob: -3.1074559688568115
    5. ')' → logprob: -3.9824559688568115
    6. ' into' → logprob: -4.232456207275391
    7. '   ' → logprob: -6.357456207275391
    8. 'self' → logprob: -6.607456207275391
    9. 'into' → logprob: -6.982456207275391
    10. '<|end|>' → logprob: -7.107456207275391

Token 697: ' target' (ID: 3783)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03814832493662834
    2. ' self' → logprob: -3.2881484031677246
    3. ' the' → logprob: -9.413147926330566
    4. 'the' → logprob: -10.913147926330566
    5. '       ' → logprob: -12.038147926330566
    6. '(self' → logprob: -15.163147926330566
    7. '	self' → logprob: -15.663147926330566
    8. 'target' → logprob: -16.663148880004883
    9. 'this' → logprob: -17.038148880004883
    10. '
' → logprob: -17.038148880004883

Token 698: ' naming' (ID: 64882)
  Prédit: ' case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' case' → logprob: -1.3325295448303223
    2. ' style' → logprob: -1.4575295448303223
    3. '   ' → logprob: -2.4575295448303223
    4. '_case' → logprob: -2.5825295448303223
    5. '_type' → logprob: -2.8325295448303223
    6. ' format' → logprob: -2.9575295448303223
    7. ' casing' → logprob: -3.2075295448303223
    8. ' convention' → logprob: -3.5825295448303223
    9. ' naming' → logprob: -3.5825295448303223
    10. '```' → logprob: -3.8325295448303223

Token 699: ' convention' (ID: 39395)
  Prédit: ' convention'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convention' → logprob: -0.05221356824040413
    2. 'con' → logprob: -3.052213668823242
    3. ' style' → logprob: -6.427213668823242
    4. '_con' → logprob: -6.552213668823242
    5. 'style' → logprob: -8.302213668823242
    6. 'Convention' → logprob: -9.677213668823242
    7. '       ' → logprob: -10.302213668823242
    8. '   ' → logprob: -10.302213668823242
    9. ' conventions' → logprob: -10.552213668823242
    10. ')' → logprob: -10.802213668823242

Token 700: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5388247966766357
    2. ')' → logprob: -0.9138247966766357
    3. '   ' → logprob: -4.663825035095215
    4. ',' → logprob: -6.288825035095215
    5. '.' → logprob: -6.538825035095215
    6. ')
' → logprob: -6.788825035095215
    7. '```' → logprob: -7.538825035095215
    8. '):
' → logprob: -8.163825035095215
    9. '):' → logprob: -8.913825035095215
    10. '<|end|>' → logprob: -9.038825035095215

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012468093074858189
    2. 'return' → logprob: -4.512467861175537
    3. ' return' → logprob: -6.637467861175537
    4. '   ' → logprob: -9.387468338012695
    5. '	return' → logprob: -11.137468338012695
    6. '```' → logprob: -12.262468338012695
    7. '
' → logprob: -13.262468338012695
    8. '{return' → logprob: -14.012468338012695
    9. '	' → logprob: -14.262468338012695
    10. 'result' → logprob: -14.762468338012695

Token 702: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0033849377650767565
    2. '       ' → logprob: -6.003385066986084
    3. ' return' → logprob: -7.003385066986084
    4. '	return' → logprob: -16.503385543823242
    5. '   ' → logprob: -17.753385543823242
    6. '
' → logprob: -18.878385543823242
    7. '{return' → logprob: -18.878385543823242
    8. 'result' → logprob: -19.628385543823242
    9. '```' → logprob: -20.003385543823242
    10. 'try' → logprob: -21.003385543823242

Token 703: ' Input' (ID: 10090)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001088543445803225
    2. '       ' → logprob: -7.501088619232178
    3. 'words' → logprob: -7.751088619232178
    4. ' return' → logprob: -10.00108814239502
    5. 'try' → logprob: -10.62608814239502
    6. 'converted' → logprob: -10.87608814239502
    7. 'identifier' → logprob: -11.87608814239502
    8. 'result' → logprob: -12.12608814239502
    9. 'tokens' → logprob: -14.00108814239502
    10. 'normalized' → logprob: -14.75108814239502

Token 704: ' identifier' (ID: 24577)
  Prédit: '_words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.4025953710079193
    2. ' =' → logprob: -2.402595281600952
    3. '_identifier' → logprob: -2.402595281600952
    4. '_tokens' → logprob: -2.777595281600952
    5. '=' → logprob: -3.527595281600952
    6. '_lower' → logprob: -4.652595520019531
    7. '_str' → logprob: -4.902595520019531
    8. 'identifier' → logprob: -4.902595520019531
    9. '_type' → logprob: -5.152595520019531
    10. '_strip' → logprob: -5.402595520019531

Token 705: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2244022786617279
    2. ' =' → logprob: -1.8494023084640503
    3. '_words' → logprob: -3.7244021892547607
    4. ')' → logprob: -5.09940242767334
    5. '_tokens' → logprob: -5.72440242767334
    6. 'words' → logprob: -6.22440242767334
    7. '_lower' → logprob: -6.34940242767334
    8. 'tokens' → logprob: -6.72440242767334
    9. ' is' → logprob: -7.09940242767334
    10. ',' → logprob: -7.34940242767334

Token 706: ' guaranteed' (ID: 21862)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.5251114964485168
    2. 'self' → logprob: -0.9001114964485168
    3. ' identifier' → logprob: -6.775111675262451
    4. ' self' → logprob: -7.400111675262451
    5. 're' → logprob: -10.150111198425293
    6. '       ' → logprob: -10.150111198425293
    7. 'not' → logprob: -10.150111198425293
    8. '   ' → logprob: -10.275111198425293
    9. '(identifier' → logprob: -10.525111198425293
    10. 'unknown' → logprob: -12.400111198425293

Token 707: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8133090138435364
    2. ' not' → logprob: -1.1883089542388916
    3. 'not' → logprob: -1.5633089542388916
    4. 'to' → logprob: -3.1883089542388916
    5. '       ' → logprob: -7.063309192657471
    6. '<|end|>' → logprob: -8.813308715820312
    7. ',' → logprob: -9.938308715820312
    8. '        
' → logprob: -9.938308715820312
    9. '.' → logprob: -11.688308715820312
    10. '<|end|>' → logprob: -11.813308715820312

Token 708: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.1293727308511734
    2. ' be' → logprob: -2.2543728351593018
    3. 'not' → logprob: -4.629372596740723
    4. 'str' → logprob: -5.629372596740723
    5. 'convert' → logprob: -6.629372596740723
    6. 'strip' → logprob: -7.379372596740723
    7. ' not' → logprob: -7.379372596740723
    8. 'contain' → logprob: -9.129372596740723
    9. 'have' → logprob: -9.379372596740723
    10. 'self' → logprob: -9.379372596740723

Token 709: ' one' (ID: 1001)
  Prédit: 'identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identifier' → logprob: -0.9105279445648193
    2. 'str' → logprob: -1.6605279445648193
    3. 'a' → logprob: -1.9105279445648193
    4. 'non' → logprob: -2.1605279445648193
    5. 'self' → logprob: -2.2855279445648193
    6. 'not' → logprob: -3.5355279445648193
    7. 'any' → logprob: -5.285528182983398
    8. 'valid' → logprob: -6.035528182983398
    9. ' identifier' → logprob: -6.660528182983398
    10. ' a' → logprob: -6.660528182983398

Token 710: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.44155246019363403
    2. 'of' → logprob: -1.1915524005889893
    3. '       ' → logprob: -3.9415524005889893
    4. 'token' → logprob: -4.316552639007568
    5. 'word' → logprob: -5.316552639007568
    6. '   ' → logprob: -5.316552639007568
    7. ' word' → logprob: -5.816552639007568
    8. ' token' → logprob: -5.941552639007568
    9. ' line' → logprob: -6.816552639007568
    10. ' ' → logprob: -7.066552639007568

Token 711: ' the' (ID: 290)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7264474630355835
    2. ''U' → logprob: -1.4764474630355835
    3. 'self' → logprob: -1.8514474630355835
    4. 'U' → logprob: -3.476447582244873
    5. 'the' → logprob: -3.601447582244873
    6. 'Upper' → logprob: -3.601447582244873
    7. '['' → logprob: -4.101447582244873
    8. '   ' → logprob: -5.601447582244873
    9. ''s' → logprob: -5.976447582244873
    10. '_U' → logprob: -6.101447582244873

Token 712: ' three' (ID: 3407)
  Prédit: 'supported'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'supported' → logprob: -0.9523434042930603
    2. '['' → logprob: -1.702343463897705
    3. 'following' → logprob: -1.827343463897705
    4. ''U' → logprob: -2.452343463897705
    5. 'known' → logprob: -3.827343463897705
    6. 'U' → logprob: -4.077343463897705
    7. 'recognized' → logprob: -4.077343463897705
    8. 'types' → logprob: -4.202343463897705
    9. ''' → logprob: -4.202343463897705
    10. 'three' → logprob: -4.327343463897705

Token 713: ' styles' (ID: 12849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006795499939471483
    2. ' types' → logprob: -9.375679969787598
    3. ' or' → logprob: -9.625679969787598
    4. '        
' → logprob: -9.875679969787598
    5. '
' → logprob: -10.125679969787598
    6. 'types' → logprob: -10.250679969787598
    7. '   ' → logprob: -10.500679969787598
    8. 'return' → logprob: -10.750679969787598
    9. 'case' → logprob: -10.875679969787598
    10. ' formats' → logprob: -11.000679969787598

Token 714: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.755678961984813e-05
    2. 'return' → logprob: -10.000077247619629
    3. ' return' → logprob: -11.125077247619629
    4. ',' → logprob: -12.000077247619629
    5. '        
' → logprob: -12.375077247619629
    6. '<|end|>' → logprob: -12.625077247619629
    7. '
' → logprob: -13.250077247619629
    8. '      ' → logprob: -14.875077247619629
    9. '   ' → logprob: -15.125077247619629
    10. '<|end|>' → logprob: -15.750077247619629

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002943479048553854
    2. 'return' → logprob: -8.25029468536377
    3. ' return' → logprob: -10.37529468536377
    4. '        
' → logprob: -14.62529468536377
    5. '           ' → logprob: -14.75029468536377
    6. '      ' → logprob: -14.87529468536377
    7. '   ' → logprob: -15.62529468536377
    8. '        ' → logprob: -16.250293731689453
    9. 'but' → logprob: -16.625293731689453
    10. ' but' → logprob: -16.750293731689453

Token 716: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000351670227246359
    2. 'return' → logprob: -8.250351905822754
    3. ' return' → logprob: -10.000351905822754
    4. ' so' → logprob: -10.500351905822754
    5. ' but' → logprob: -12.375351905822754
    6. '           ' → logprob: -12.500351905822754
    7. ' and' → logprob: -13.375351905822754
    8. '        
' → logprob: -13.625351905822754
    9. 'but' → logprob: -13.750351905822754
    10. ' which' → logprob: -13.750351905822754

Token 717: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08948637545108795
    2. 'return' → logprob: -2.5894863605499268
    3. ' return' → logprob: -4.589486598968506
    4. '#' → logprob: -7.964486598968506
    5. 'words' → logprob: -11.464486122131348
    6. ' #' → logprob: -11.589486122131348
    7. '   ' → logprob: -12.839486122131348
    8. '
' → logprob: -13.089486122131348
    9. 'tokens' → logprob: -13.339486122131348
    10. ' words' → logprob: -13.339486122131348

Token 718: ' unknown' (ID: 17927)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9959302544593811
    2. ' the' → logprob: -1.4959301948547363
    3. '       ' → logprob: -2.2459301948547363
    4. 'self' → logprob: -2.6209301948547363
    5. 'not' → logprob: -2.8709301948547363
    6. ' may' → logprob: -3.2459301948547363
    7. ' self' → logprob: -3.9959301948547363
    8. ' we' → logprob: -3.9959301948547363
    9. 'the' → logprob: -4.120930194854736
    10. ' sometimes' → logprob: -4.120930194854736

Token 719: ' which' (ID: 1118)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05076051130890846
    2. '
' → logprob: -3.425760507583618
    3. '        
' → logprob: -4.300760746002197
    4. ',' → logprob: -6.675760746002197
    5. '<|end|>' → logprob: -7.050760746002197
    6. '  
' → logprob: -8.550760269165039
    7. '.' → logprob: -8.550760269165039
    8. '<|end|>' → logprob: -8.800760269165039
    9. '   ' → logprob: -9.050760269165039
    10. '    
' → logprob: -9.175760269165039

Token 720: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012355535291135311
    2. ',' → logprob: -5.387355327606201
    3. ' to' → logprob: -6.387355327606201
    4. '<|end|>' → logprob: -6.387355327606201
    5. '
' → logprob: -6.637355327606201
    6. '.' → logprob: -6.637355327606201
    7. '        
' → logprob: -7.137355327606201
    8. '<|end|>' → logprob: -8.63735580444336
    9. ' before' → logprob: -9.51235580444336
    10. ' prior' → logprob: -9.63735580444336

Token 721: ' We' (ID: 1416)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008671772666275501
    2. 'return' → logprob: -5.008671760559082
    3. ' return' → logprob: -6.258671760559082
    4. '   ' → logprob: -10.383671760559082
    5. '
' → logprob: -11.883671760559082
    6. '        
' → logprob: -14.008671760559082
    7. '           ' → logprob: -14.508671760559082
    8. '      ' → logprob: -15.133671760559082
    9. '```' → logprob: -15.133671760559082
    10. 'tokens' → logprob: -15.508671760559082

Token 722: ' exploit' (ID: 55310)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.1844706535339355
    2. ' assume' → logprob: -1.4344706535339355
    3. '       ' → logprob: -1.8094706535339355
    4. '   ' → logprob: -2.5594706535339355
    5. ' use' → logprob: -2.5594706535339355
    6. ' try' → logprob: -3.3094706535339355
    7. ' don't' → logprob: -3.9344706535339355
    8. ' first' → logprob: -4.0594706535339355
    9. ' return' → logprob: -4.0594706535339355
    10. ' need' → logprob: -5.5594706535339355

Token 723: ' converter' (ID: 41696)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3452010750770569
    2. 'self' → logprob: -1.970201015472412
    3. ' self' → logprob: -2.345201015472412
    4. 'the' → logprob: -2.970201015472412
    5. '   ' → logprob: -5.595201015472412
    6. ' that' → logprob: -8.09520149230957
    7. '       ' → logprob: -8.22020149230957
    8. '
' → logprob: -8.34520149230957
    9. '    
' → logprob: -9.47020149230957
    10. '    ' → logprob: -9.47020149230957

Token 724: '.to' (ID: 3552)
  Prédit: '.convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.convert' → logprob: -0.22130608558654785
    2. '.' → logprob: -1.8463060855865479
    3. ''s' → logprob: -4.471305847167969
    4. '   ' → logprob: -4.471305847167969
    5. 's' → logprob: -4.596305847167969
    6. ' to' → logprob: -6.346305847167969
    7. ' .' → logprob: -6.471305847167969
    8. ' for' → logprob: -7.221305847167969
    9. 'def' → logprob: -7.471305847167969
    10. 'convert' → logprob: -7.721305847167969

Token 725: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -1.5213274309644476e-05
    2. '_tokens' → logprob: -11.125015258789062
    3. '_word' → logprob: -15.625015258789062
    4. '_' → logprob: -15.875015258789062
    5. 'words' → logprob: -17.000015258789062
    6. '_spaces' → logprob: -17.000015258789062
    7. '```' → logprob: -17.375015258789062
    8. '_parts' → logprob: -17.625015258789062
    9. '_w' → logprob: -18.000015258789062
    10. '_letters' → logprob: -18.750015258789062

Token 726: ' to' (ID: 316)
  Prédit: '(identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(identifier' → logprob: -0.2782783508300781
    2. '(' → logprob: -1.7782783508300781
    3. ' to' → logprob: -3.278278350830078
    4. ' for' → logprob: -4.278278350830078
    5. ' and' → logprob: -5.278278350830078
    6. ',' → logprob: -5.778278350830078
    7. '       ' → logprob: -6.028278350830078
    8. '   ' → logprob: -6.278278350830078
    9. '<|end|>' → logprob: -6.653278350830078
    10. 'and' → logprob: -6.903278350830078

Token 727: ' parse' (ID: 8420)
  Prédit: 'extract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extract' → logprob: -0.6294094920158386
    2. 'get' → logprob: -1.2544095516204834
    3. 'parse' → logprob: -2.0044095516204834
    4. ' get' → logprob: -4.504409313201904
    5. 'convert' → logprob: -4.629409313201904
    6. ' extract' → logprob: -4.754409313201904
    7. 'ob' → logprob: -5.129409313201904
    8. ' parse' → logprob: -6.004409313201904
    9. 'normalize' → logprob: -6.004409313201904
    10. 'split' → logprob: -6.254409313201904

Token 728: '.
' (ID: 558)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9405933022499084
    2. '       ' → logprob: -1.4405932426452637
    3. 'identifier' → logprob: -2.0655932426452637
    4. '(identifier' → logprob: -2.4405932426452637
    5. ' identifier' → logprob: -2.8155932426452637
    6. ' it' → logprob: -2.9405932426452637
    7. 'the' → logprob: -3.4405932426452637
    8. ' and' → logprob: -4.940593242645264
    9. '   ' → logprob: -6.440593242645264
    10. 'it' → logprob: -6.815593242645264

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046165118692442775
    2. 'return' → logprob: -8.12546157836914
    3. '
' → logprob: -9.12546157836914
    4. ' return' → logprob: -10.00046157836914
    5. '   ' → logprob: -12.37546157836914
    6. '```' → logprob: -12.50046157836914
    7. '        
' → logprob: -13.12546157836914
    8. 'tokens' → logprob: -14.62546157836914
    9. '           ' → logprob: -15.12546157836914
    10. 'token' → logprob: -16.12546157836914

Token 730: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5574045181274414
    2. 'return' (adapté à ' return') → logprob: -1.0574045181274414
    3. ' return' → logprob: -2.5574045181274414
    4. 'words' → logprob: -6.432404518127441
    5. ' words' → logprob: -7.182404518127441
    6. '```' → logprob: -10.682404518127441
    7. 'tokens' → logprob: -11.182404518127441
    8. '   ' → logprob: -11.182404518127441
    9. '	return' → logprob: -12.307404518127441
    10. ' tokens' → logprob: -12.557404518127441

Token 731: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020354038861114532
    2. ' self' → logprob: -8.500203132629395
    3. '(self' → logprob: -19.75020408630371
    4. '[self' → logprob: -19.75020408630371
    5. 'Self' → logprob: -20.62520408630371
    6. '	self' → logprob: -21.25020408630371
    7. '`' → logprob: -21.50020408630371
    8. '       ' → logprob: -21.87520408630371
    9. '=self' → logprob: -22.37520408630371
    10. '   ' → logprob: -22.50020408630371

Token 732: '.converter' (ID: 105910)
  Prédit: '.converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.converter' → logprob: -1.1994775377388578e-05
    2. '.convert' → logprob: -11.625012397766113
    3. '.' → logprob: -13.375012397766113
    4. 'converter' → logprob: -14.375012397766113
    5. '.conv' → logprob: -15.250012397766113
    6. '.encoder' → logprob: -15.625012397766113
    7. ' .' → logprob: -15.750012397766113
    8. '.decoder' → logprob: -16.250011444091797
    9. '.con' → logprob: -16.500011444091797
    10. '.connector' → logprob: -16.750011444091797

Token 733: '.convert' (ID: 37827)
  Prédit: '.convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.convert' → logprob: -0.0001863750658230856
    2. '.' → logprob: -8.6251859664917
    3. ' .' → logprob: -12.3751859664917
    4. '.to' → logprob: -13.7501859664917
    5. 'convert' → logprob: -14.6251859664917
    6. '.normalize' → logprob: -16.125186920166016
    7. '`.' → logprob: -16.250186920166016
    8. '.from' → logprob: -16.375186920166016
    9. '​.' → logprob: -16.375186920166016
    10. '().' → logprob: -16.500186920166016

Token 734: '(identifier' (ID: 126126)
  Prédit: '(identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(identifier' → logprob: -0.0031865055207163095
    2. '(' → logprob: -5.7531867027282715
    3. '(id' → logprob: -13.003186225891113
    4. '(identity' → logprob: -13.253186225891113
    5. '(
' → logprob: -13.503186225891113
    6. 'identifier' → logprob: -13.753186225891113
    7. ' (' → logprob: -14.253186225891113
    8. '(indent' → logprob: -14.503186225891113
    9. '(operator' → logprob: -14.878186225891113
    10. '(argument' → logprob: -15.628186225891113

Token 735: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '<|end|>' → logprob: -16.875001907348633
    5. ')return' → logprob: -18.125001907348633
    6. '),' → logprob: -18.250001907348633
    7. '))' → logprob: -18.625001907348633
    8. ')`' → logprob: -18.750001907348633
    9. ')

' → logprob: -18.875001907348633
    10. ').' → logprob: -18.875001907348633

Token 736: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2622363865375519
    2. '<|end|>' → logprob: -1.5122363567352295
    3. '```' → logprob: -5.012236595153809
    4. 'def' → logprob: -6.387236595153809
    5. '<|end|>' → logprob: -6.887236595153809
    6. ')' → logprob: -8.387236595153809
    7. '.' → logprob: -8.512236595153809
    8. '
' → logprob: -8.887236595153809
    9. ' ' → logprob: -9.262236595153809
    10. 'a' → logprob: -10.262236595153809

Token 737: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.19300661981105804
    2. ' test' → logprob: -1.8180066347122192
    3. ' normalize' → logprob: -4.69300651550293
    4. ' run' → logprob: -6.06800651550293
    5. ' example' → logprob: -7.69300651550293
    6. 'main' → logprob: -8.19300651550293
    7. 'test' → logprob: -8.44300651550293
    8. '_' → logprob: -8.44300651550293
    9. ' convert' → logprob: -8.94300651550293
    10. ' _' → logprob: -8.94300651550293

Token 738: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0003123439964838326
    2. '():
' → logprob: -8.750312805175781
    3. '()' → logprob: -8.875312805175781
    4. ' ():' → logprob: -11.625312805175781
    5. '()>' → logprob: -13.375312805175781
    6. '():
' → logprob: -13.500312805175781
    7. '(' → logprob: -14.625312805175781
    8. '()">' → logprob: -15.125312805175781
    9. '():

' → logprob: -15.125312805175781
    10. '_' → logprob: -15.500312805175781

Token 739: '   ' (ID: 271)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3598083257675171
    2. '   ' → logprob: -1.609808325767517
    3. ' import' → logprob: -2.3598084449768066
    4. 'input' → logprob: -6.234808444976807
    5. '```' → logprob: -6.609808444976807
    6. ' lines' → logprob: -6.734808444976807
    7. ' input' → logprob: -7.234808444976807
    8. '	import' → logprob: -7.984808444976807
    9. 'indent' → logprob: -8.109807968139648
    10. ' for' → logprob: -8.109807968139648

Token 740: ' normal' (ID: 6078)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2276904284954071
    2. 'import' → logprob: -1.6026904582977295
    3. '   ' → logprob: -6.60269021987915
    4. ' target' → logprob: -8.102690696716309
    5. ' input' → logprob: -9.227690696716309
    6. ' for' → logprob: -9.227690696716309
    7. 'target' → logprob: -9.227690696716309
    8. ' lines' → logprob: -9.352690696716309
    9. 'input' → logprob: -10.102690696716309
    10. 'n' → logprob: -10.727690696716309

Token 741: 'izers' (ID: 24223)
  Prédit: 'izer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -3.1424973713001236e-05
    2. 'ize' → logprob: -10.500031471252441
    3. 'IZER' → logprob: -13.625031471252441
    4. 'izr' → logprob: -13.875031471252441
    5. 'izers' → logprob: -14.000031471252441
    6. '_' → logprob: -15.625031471252441
    7. 'iz' → logprob: -15.875031471252441
    8. ' =' → logprob: -16.125030517578125
    9. 'y' → logprob: -16.375030517578125
    10. ' ' → logprob: -16.375030517578125

Token 742: '_cache' (ID: 27045)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248156532645226
    2. '=' → logprob: -3.7732481956481934
    3. '.' → logprob: -14.023247718811035
    4. '   ' → logprob: -14.648247718811035
    5. ':' → logprob: -14.773247718811035
    6. ')' → logprob: -15.648247718811035
    7. '  ' → logprob: -15.773247718811035
    8. ' ' → logprob: -15.773247718811035
    9. '[' → logprob: -15.898247718811035
    10. ' =
' → logprob: -16.14824867248535

Token 743: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06256178766489029
    2. '=' → logprob: -2.8125617504119873
    3. ':' → logprob: -7.437561988830566
    4. '={}' → logprob: -12.687561988830566
    5. ' :' → logprob: -13.937561988830566
    6. '   ' → logprob: -15.312561988830566
    7. '[' → logprob: -15.687561988830566
    8. '=[]' → logprob: -15.812561988830566
    9. '={}
' → logprob: -15.937561988830566
    10. '={' → logprob: -16.18756103515625

Token 744: ' {
' (ID: 405)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1472419600977446e-06
    2. '{}
' → logprob: -14.875000953674316
    3. 'dict' → logprob: -14.875000953674316
    4. ' {}' → logprob: -15.750000953674316
    5. '{' → logprob: -16.125001907348633
    6. '{}

' → logprob: -16.625001907348633
    7. '={}' → logprob: -18.625001907348633
    8. '{
' → logprob: -19.500001907348633
    9. '{})' → logprob: -19.625001907348633
    10. '{}_' → logprob: -19.750001907348633

Token 745: '       ' (ID: 309)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.016632940620183945
    2. ''' → logprob: -4.641633033752441
    3. '   ' → logprob: -5.391633033752441
    4. ''L' → logprob: -6.766633033752441
    5. '       ' → logprob: -7.766633033752441
    6. ''N' → logprob: -7.891633033752441
    7. ''A' → logprob: -9.391633033752441
    8. ' '' → logprob: -9.516633033752441
    9. ''D' → logprob: -10.141633033752441
    10. '’U' → logprob: -10.516633033752441

Token 746: ' '' (ID: 461)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.027370426803827286
    2. ''L' → logprob: -4.527370452880859
    3. ''T' → logprob: -4.652370452880859
    4. ''' (adapté à ' '') → logprob: -5.777370452880859
    5. ''t' → logprob: -7.277370452880859
    6. 'key' → logprob: -7.277370452880859
    7. '   ' → logprob: -7.902370452880859
    8. 'target' → logprob: -8.27737045288086
    9. ' '' → logprob: -8.27737045288086
    10. 'type' → logprob: -8.52737045288086

Token 747: 'U' (ID: 52)
  Prédit: ''U'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''U' → logprob: -0.04527489095926285
    2. 'U' → logprob: -3.1702749729156494
    3. ''L' → logprob: -6.92027473449707
    4. ''' → logprob: -8.04527473449707
    5. ''D' → logprob: -8.67027473449707
    6. ''u' → logprob: -9.04527473449707
    7. 'L' → logprob: -9.17027473449707
    8. ' '' → logprob: -9.42027473449707
    9. '   ' → logprob: -9.42027473449707
    10. '’U' → logprob: -9.54527473449707

Token 748: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0008666796493344009
    2. ''' → logprob: -7.125866889953613
    3. ':' → logprob: -10.125866889953613
    4. '':'' → logprob: -11.000866889953613
    5. ''U' → logprob: -12.875866889953613
    6. ' ':' → logprob: -13.500866889953613
    7. '":' → logprob: -14.375866889953613
    8. ''):' → logprob: -15.375866889953613
    9. '   ' → logprob: -16.000865936279297
    10. '',' → logprob: -16.125865936279297

Token 749: ' Identifier' (ID: 70050)
  Prédit: 'Upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Upper' → logprob: -0.12692926824092865
    2. ' Upper' → logprob: -2.12692928314209
    3. ' upper' → logprob: -14.62692928314209
    4. 'Identifier' → logprob: -15.12692928314209
    5. 'upper' → logprob: -15.25192928314209
    6. 'Und' → logprob: -16.376928329467773
    7. '_upper' → logprob: -16.376928329467773
    8. 'None' → logprob: -17.251928329467773
    9. '   ' → logprob: -17.876928329467773
    10. ' ' → logprob: -18.251928329467773

Token 750: 'Normalizer' (ID: 188213)
  Prédit: 'Normalizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: 0.0
    2. 'Normal' → logprob: -17.5
    3. 'normal' → logprob: -18.25
    4. '  ' → logprob: -18.625
    5. '_Normal' → logprob: -18.75
    6. 'Normalize' → logprob: -18.75
    7. '
' → logprob: -19.125
    8. 'ormal' → logprob: -19.25
    9. 'N' → logprob: -19.5
    10. 'Unmarshaller' → logprob: -19.75

Token 751: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011803467059507966
    2. '(' → logprob: -7.001180171966553
    3. '(U' → logprob: -8.876180648803711
    4. ''U' → logprob: -9.876180648803711
    5. '(('' → logprob: -10.751180648803711
    6. '("' → logprob: -11.376180648803711
    7. '   ' → logprob: -11.501180648803711
    8. ''' → logprob: -11.751180648803711
    9. '(
' → logprob: -12.251180648803711
    10. ' ('' → logprob: -12.376180648803711

Token 752: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -8.685467764735222e-05
    2. 'L' → logprob: -10.250086784362793
    3. ''U' → logprob: -10.625086784362793
    4. ' U' → logprob: -11.000086784362793
    5. 'D' → logprob: -12.125086784362793
    6. '	U' → logprob: -13.500086784362793
    7. ''' → logprob: -14.250086784362793
    8. '
' → logprob: -14.375086784362793
    9. ' ' → logprob: -15.000086784362793
    10. '   ' → logprob: -15.062586784362793

Token 753: ''),
' (ID: 7239)
  Prédit: ''),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),
' → logprob: -0.0622599720954895
    2. ''),' → logprob: -2.8122599124908447
    3. '')' → logprob: -8.312259674072266
    4. ''),

' → logprob: -10.937259674072266
    5. ''),
' → logprob: -10.937259674072266
    6. '),
' → logprob: -13.062259674072266
    7. '   ' → logprob: -13.312259674072266
    8. ' '' → logprob: -13.437259674072266
    9. '"),
' → logprob: -13.562259674072266
    10. ''' → logprob: -13.562259674072266

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00997776910662651
    2. '   ' → logprob: -5.1349778175354
    3. ''' → logprob: -6.5099778175354
    4. ''U' → logprob: -6.5099778175354
    5. ''L' → logprob: -7.0099778175354
    6. '	' → logprob: -9.509977340698242
    7. '     ' → logprob: -10.759977340698242
    8. ' '' → logprob: -11.134977340698242
    9. ' ' → logprob: -11.259977340698242
    10. '           ' → logprob: -11.384977340698242

Token 755: ' '' (ID: 461)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.01312175765633583
    2. '       ' → logprob: -4.638121604919434
    3. '   ' → logprob: -6.513121604919434
    4. ' '' → logprob: -6.888121604919434
    5. ''' (adapté à ' '') → logprob: -7.388121604919434
    6. ''U' → logprob: -8.763121604919434
    7. ''S' → logprob: -11.138121604919434
    8. ''D' → logprob: -11.263121604919434
    9. ' ' → logprob: -11.638121604919434
    10. '           ' → logprob: -11.763121604919434

Token 756: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.009805197827517986
    2. ''L' → logprob: -4.634805202484131
    3. ' L' → logprob: -10.384804725646973
    4. ''' → logprob: -11.634804725646973
    5. '   ' → logprob: -12.259804725646973
    6. ' '' → logprob: -13.509804725646973
    7. '"L' → logprob: -14.134804725646973
    8. '	L' → logprob: -14.134804725646973
    9. ' ' → logprob: -14.509804725646973
    10. '       ' → logprob: -15.134804725646973

Token 757: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6948704123497009
    2. '':' → logprob: -0.6948704123497009
    3. ''' → logprob: -6.819870471954346
    4. '':'' → logprob: -7.819870471954346
    5. ' :' → logprob: -8.694869995117188
    6. '   ' → logprob: -11.069869995117188
    7. ' ':' → logprob: -11.444869995117188
    8. ''U' → logprob: -11.444869995117188
    9. ':'' → logprob: -11.444869995117188
    10. ''):' → logprob: -12.819869995117188

Token 758: ' Identifier' (ID: 70050)
  Prédit: 'Identifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Identifier' → logprob: -0.04859498515725136
    2. ' Identifier' → logprob: -3.0485949516296387
    3. ''' → logprob: -12.673595428466797
    4. '.Identifier' → logprob: -13.673595428466797
    5. '_identifier' → logprob: -14.423595428466797
    6. '                   ' → logprob: -14.548595428466797
    7. '   ' → logprob: -14.923595428466797
    8. '-Identifier' → logprob: -15.048595428466797
    9. '           ' → logprob: -15.048595428466797
    10. '_IDENTIFIER' → logprob: -15.173595428466797

Token 759: 'Normalizer' (ID: 188213)
  Prédit: 'Normalizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: -5.200166469876422e-06
    2. 'ormal' → logprob: -13.000004768371582
    3. '('' → logprob: -14.250004768371582
    4. 'normal' → logprob: -14.875004768371582
    5. 'Camel' → logprob: -15.000004768371582
    6. 'izer' → logprob: -15.000004768371582
    7. ''' → logprob: -15.625004768371582
    8. 'Normal' → logprob: -15.750004768371582
    9. 'Converter' → logprob: -16.0000057220459
    10. 'Normalize' → logprob: -16.2500057220459

Token 760: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0012109491508454084
    2. ''L' → logprob: -7.376211166381836
    3. ''D' → logprob: -8.376211166381836
    4. ' ('' → logprob: -8.876211166381836
    5. ''' → logprob: -9.126211166381836
    6. '(' → logprob: -10.501211166381836
    7. ''U' → logprob: -10.626211166381836
    8. '   ' → logprob: -11.126211166381836
    9. '(
' → logprob: -11.376211166381836
    10. ' '' → logprob: -11.501211166381836

Token 761: 'L' (ID: 43)
  Prédit: ''L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''L' → logprob: -0.3505198061466217
    2. 'L' → logprob: -1.2255197763442993
    3. ''D' → logprob: -6.22551965713501
    4. ''' → logprob: -10.850520133972168
    5. ''l' → logprob: -10.975520133972168
    6. '"L' → logprob: -11.100520133972168
    7. 'D' → logprob: -11.225520133972168
    8. ' L' → logprob: -11.600520133972168
    9. '   ' → logprob: -12.350520133972168
    10. '	L' → logprob: -12.725520133972168

Token 762: ''),
' (ID: 7239)
  Prédit: ''),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''),
' → logprob: -0.04518112912774086
    2. ''),' → logprob: -3.4201810359954834
    3. '       ' → logprob: -5.1701812744140625
    4. '),
' → logprob: -5.9201812744140625
    5. '   ' → logprob: -6.0451812744140625
    6. ''' → logprob: -8.670181274414062
    7. '')' → logprob: -8.795181274414062
    8. '),' → logprob: -8.920181274414062
    9. ',' → logprob: -9.295181274414062
    10. '',' → logprob: -9.920181274414062

Token 763: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022047359962016344
    2. ''D' → logprob: -6.252204895019531
    3. ''' → logprob: -8.252204895019531
    4. '   ' → logprob: -11.877204895019531
    5. ''U' → logprob: -13.002204895019531
    6. ' '' → logprob: -13.502204895019531
    7. '	' → logprob: -13.627204895019531
    8. ''S' → logprob: -13.877204895019531
    9. '      ' → logprob: -14.252204895019531
    10. '     ' → logprob: -14.627204895019531

Token 764: ' '' (ID: 461)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.029868628829717636
    2. '       ' → logprob: -3.5298686027526855
    3. ' '' → logprob: -10.279869079589844
    4. ''' (adapté à ' '') → logprob: -10.279869079589844
    5. ''S' → logprob: -10.529869079589844
    6. '   ' → logprob: -11.904869079589844
    7. ''U' → logprob: -11.904869079589844
    8. ''T' → logprob: -12.654869079589844
    9. ''A' → logprob: -13.279869079589844
    10. ' ' → logprob: -13.654869079589844

Token 765: 'D' (ID: 35)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.06198213994503021
    2. 'D' → logprob: -2.8119821548461914
    3. ''' → logprob: -11.936982154846191
    4. '"D' → logprob: -12.811982154846191
    5. ''d' → logprob: -12.936982154846191
    6. ' D' → logprob: -13.811982154846191
    7. ' '' → logprob: -14.436982154846191
    8. '	D' → logprob: -14.936982154846191
    9. '   ' → logprob: -15.311982154846191
    10. '       ' → logprob: -15.936982154846191

Token 766: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3323458731174469
    2. ''}' → logprob: -1.7073458433151245
    3. '')' → logprob: -3.457345962524414
    4. '}' → logprob: -3.457345962524414
    5. ''' → logprob: -4.082345962524414
    6. '',' → logprob: -4.707345962524414
    7. ':' → logprob: -5.707345962524414
    8. ''):' → logprob: -5.707345962524414
    9. ''),' → logprob: -6.082345962524414
    10. ''},' → logprob: -6.582345962524414

Token 767: ' Identifier' (ID: 70050)
  Prédit: ' Identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Identifier' → logprob: -0.4498475193977356
    2. 'Identifier' → logprob: -1.1998474597930908
    3. ''' → logprob: -2.824847459793091
    4. ' '' → logprob: -6.94984769821167
    5. 'Und' → logprob: -8.074847221374512
    6. ' Und' → logprob: -9.074847221374512
    7. '   ' → logprob: -9.199847221374512
    8. '_identifier' → logprob: -10.074847221374512
    9. '       ' → logprob: -10.449847221374512
    10. ' identifier' → logprob: -10.574847221374512

Token 768: 'Normalizer' (ID: 188213)
  Prédit: 'Normalizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Normalizer' → logprob: -0.0026270237285643816
    2. 'Converter' → logprob: -6.127626895904541
    3. '('_' → logprob: -8.6276273727417
    4. '('' → logprob: -8.8776273727417
    5. 'ormal' → logprob: -10.2526273727417
    6. 'normal' → logprob: -10.7526273727417
    7. '   ' → logprob: -11.5026273727417
    8. 'izer' → logprob: -11.6276273727417
    9. '_converter' → logprob: -11.8776273727417
    10. 'underscore' → logprob: -12.3776273727417

Token 769: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0004462812503334135
    2. ''D' → logprob: -8.250446319580078
    3. ' ('' → logprob: -9.750446319580078
    4. '(' → logprob: -9.875446319580078
    5. ''' → logprob: -10.000446319580078
    6. '(
' → logprob: -11.375446319580078
    7. ')' → logprob: -11.750446319580078
    8. '   ' → logprob: -12.375446319580078
    9. '')' → logprob: -14.000446319580078
    10. '(('' → logprob: -14.125446319580078

Token 770: 'D' (ID: 35)
  Prédit: ''D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''D' → logprob: -0.13325144350528717
    2. ''' → logprob: -2.883251428604126
    3. 'D' → logprob: -2.883251428604126
    4. ''U' → logprob: -4.633251667022705
    5. ''d' → logprob: -6.258251667022705
    6. '')' → logprob: -7.883251667022705
    7. ')' → logprob: -8.258251190185547
    8. 'U' → logprob: -8.508251190185547
    9. 'd' → logprob: -9.008251190185547
    10. '   ' → logprob: -9.883251190185547

Token 771: ''),
' (ID: 7239)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.47847750782966614
    2. ''),' → logprob: -0.9784774780273438
    3. ''),
' → logprob: -6.103477478027344
    4. '')
' → logprob: -6.853477478027344
    5. '   ' → logprob: -7.353477478027344
    6. '')}' → logprob: -8.478477478027344
    7. '}' → logprob: -8.978477478027344
    8. ')' → logprob: -9.353477478027344
    9. ''}' → logprob: -11.103477478027344
    10. '),' → logprob: -11.353477478027344

Token 772: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005258303135633469
    2. '}' → logprob: -5.255258083343506
    3. '       ' → logprob: -11.255258560180664
    4. ' }' → logprob: -12.005258560180664
    5. ''' → logprob: -13.130258560180664
    6. '	' → logprob: -13.255258560180664
    7. '}
' → logprob: -13.880258560180664
    8. '}

' → logprob: -15.380258560180664
    9. '   ' → logprob: -15.755258560180664
    10. '```' → logprob: -16.005258560180664

Token 773: ' }
' (ID: 606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34064194560050964
    2. '}' → logprob: -1.340641975402832
    3. '}
' (adapté à ' }
') → logprob: -3.715641975402832
    4. '}

' → logprob: -5.965641975402832
    5. '       ' → logprob: -10.090641975402832
    6. ' }' → logprob: -10.840641975402832
    7. '
' → logprob: -11.465641975402832
    8. 'input' → logprob: -11.590641975402832
    9. ' }
' → logprob: -11.965641975402832
    10. '}
' → logprob: -12.340641975402832

Token 774: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010081153362989426
    2. 'for' → logprob: -5.1350812911987305
    3. ' for' → logprob: -6.1350812911987305
    4. 'while' → logprob: -6.7600812911987305
    5. ' while' → logprob: -7.2600812911987305
    6. '```' → logprob: -9.38508129119873
    7. '
' → logprob: -12.01008129119873
    8. 'input' → logprob: -12.01008129119873
    9. '    
' → logprob: -12.26008129119873
    10. ' lines' → logprob: -12.38508129119873

Token 775: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5193683505058289
    2. 'while' → logprob: -1.0193684101104736
    3. '   ' → logprob: -3.3943684101104736
    4. 'args' → logprob: -5.7693681716918945
    5. 'line' → logprob: -6.1443681716918945
    6. 'choice' → logprob: -6.2693681716918945
    7. ' while' → logprob: -7.1443681716918945
    8. ' for' → logprob: -7.3943681716918945
    9. 'import' → logprob: -7.6443681716918945
    10. 'input' → logprob: -7.7693681716918945

Token 776: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5759815573692322
    2. 'line' → logprob: -0.8259815573692322
    3. '_line' → logprob: -10.200981140136719
    4. '	line' → logprob: -13.075981140136719
    5. '_' → logprob: -13.575981140136719
    6. 'lin' → logprob: -14.450981140136719
    7. ' _' → logprob: -14.825981140136719
    8. '(line' → logprob: -15.075981140136719
    9. 'target' → logprob: -15.950981140136719
    10. ' sys' → logprob: -16.07598114013672

Token 777: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005961153190582991
    2. 'in' → logprob: -5.130960941314697
    3. ' ' → logprob: -10.880961418151855
    4. '	in' → logprob: -12.880961418151855
    5. '_in' → logprob: -13.380961418151855
    6. '()' → logprob: -13.505961418151855
    7. 's' → logprob: -13.505961418151855
    8. 'import' → logprob: -13.505961418151855
    9. '   ' → logprob: -13.880961418151855
    10. '_' → logprob: -14.255961418151855

Token 778: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07889033854007721
    2. ' sys' → logprob: -2.578890323638916
    3. '	sys' → logprob: -15.078890800476074
    4. '(sys' → logprob: -15.828890800476074
    5. '=sys' → logprob: -15.953890800476074
    6. '   ' → logprob: -18.203889846801758
    7. ' ' → logprob: -19.703889846801758
    8. 'stdin' → logprob: -19.703889846801758
    9. '```' → logprob: -20.578889846801758
    10. '.sys' → logprob: -20.828889846801758

Token 779: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004426439758390188
    2. 'stdin' → logprob: -5.5044264793396
    3. 'in' → logprob: -8.754426002502441
    4. '(stdin' → logprob: -9.129426002502441
    5. ' stdin' → logprob: -10.129426002502441
    6. '.' → logprob: -10.379426002502441
    7. 'import' → logprob: -12.254426002502441
    8. ' in' → logprob: -12.754426002502441
    9. '.stdout' → logprob: -13.879426002502441
    10. '.readline' → logprob: -13.879426002502441

Token 780: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4898747205734253
    2. '.strip' → logprob: -1.8648747205734253
    3. '.readline' → logprob: -2.114874839782715
    4. '.rstrip' → logprob: -2.739874839782715
    5. ' in' → logprob: -3.989874839782715
    6. ':
' → logprob: -4.489874839782715
    7. '.readlines' → logprob: -4.989874839782715
    8. '   ' → logprob: -5.364874839782715
    9. 'rstrip' → logprob: -6.114874839782715
    10. '.' → logprob: -7.489874839782715

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02505301497876644
    2. ' line' → logprob: -4.150053024291992
    3. '   ' → logprob: -4.775053024291992
    4. 'line' → logprob: -9.025053024291992
    5. '```' → logprob: -9.025053024291992
    6. '	line' → logprob: -9.900053024291992
    7. '(line' → logprob: -10.150053024291992
    8. '#line' → logprob: -10.400053024291992
    9. '<|end|>' → logprob: -10.525053024291992
    10. '     ' → logprob: -10.650053024291992

Token 782: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.44949159026145935
    2. '       ' → logprob: -1.1994916200637817
    3. 'line' (adapté à ' line') → logprob: -2.949491500854492
    4. ' identifier' → logprob: -4.949491500854492
    5. 'identifier' → logprob: -7.699491500854492
    6. '   ' → logprob: -8.574491500854492
    7. '	line' → logprob: -8.949491500854492
    8. '           ' → logprob: -9.324491500854492
    9. ' s' → logprob: -9.449491500854492
    10. 's' → logprob: -9.574491500854492

Token 783: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06545675545930862
    2. ' =' → logprob: -2.8154568672180176
    3. '=line' → logprob: -5.690456867218018
    4. '.strip' → logprob: -9.94045639038086
    5. '_strip' → logprob: -10.94045639038086
    6. 'rstrip' → logprob: -11.19045639038086
    7. '.rstrip' → logprob: -11.31545639038086
    8. 'strip' → logprob: -11.69045639038086
    9. '=
' → logprob: -12.94045639038086
    10. '.=' → logprob: -14.56545639038086

Token 784: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.005233882926404476
    2. ' line' → logprob: -5.2552337646484375
    3. '=line' → logprob: -17.005233764648438
    4. '#line' → logprob: -18.130233764648438
    5. '(line' → logprob: -18.505233764648438
    6. '	line' → logprob: -18.755233764648438
    7. 'Line' → logprob: -20.130233764648438
    8. '[line' → logprob: -21.380233764648438
    9. 'lin' → logprob: -21.755233764648438
    10. '_line' → logprob: -22.130233764648438

Token 785: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.014189830049872398
    2. '.rstrip' → logprob: -4.264189720153809
    3. '.' → logprob: -10.639189720153809
    4. 'strip' → logprob: -13.264189720153809
    5. 'rstrip' → logprob: -15.014189720153809
    6. '.chomp' → logprob: -15.764189720153809
    7. '.readline' → logprob: -15.889189720153809
    8. ' .' → logprob: -16.639190673828125
    9. '.str' → logprob: -17.764190673828125
    10. '.trim' → logprob: -17.764190673828125

Token 786: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012002123519778252
    2. '()
' → logprob: -5.512001991271973
    3. '()' → logprob: -5.512001991271973
    4. 'if' → logprob: -6.262001991271973
    5. '<|end|>' → logprob: -7.262001991271973
    6. ' if' → logprob: -7.387001991271973
    7. '<|end|>' → logprob: -9.137001991271973
    8. '
' → logprob: -9.387001991271973
    9. '   ' → logprob: -9.637001991271973
    10. ',' → logprob: -9.762001991271973

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005933052161708474
    2. '   ' → logprob: -8.375593185424805
    3. 'if' → logprob: -8.375593185424805
    4. ' if' → logprob: -9.125593185424805
    5. '<|end|>' → logprob: -10.875593185424805
    6. '           ' → logprob: -13.625593185424805
    7. ' ' → logprob: -14.250593185424805
    8. '        
' → logprob: -14.250593185424805
    9. '<|end|>' → logprob: -14.625593185424805
    10. ',' → logprob: -15.000593185424805

Token 788: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -6.869017852295656e-06
    2. ' if' → logprob: -12.000006675720215
    3. '       ' → logprob: -14.500006675720215
    4. '   ' → logprob: -16.50000762939453
    5. '	if' → logprob: -18.62500762939453
    6. '```' → logprob: -19.12500762939453
    7. '#' → logprob: -19.50000762939453
    8. 'If' → logprob: -19.75000762939453
    9. '           ' → logprob: -20.50000762939453
    10. 'i' → logprob: -20.75000762939453

Token 789: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2521669268608093
    2. 'not' → logprob: -1.502166986465454
    3. 'line' → logprob: -8.627166748046875
    4. ' line' → logprob: -9.752166748046875
    5. '   ' → logprob: -15.877166748046875
    6. ' ' → logprob: -16.127166748046875
    7. '	not' → logprob: -16.377166748046875
    8. '!' → logprob: -16.502166748046875
    9. 'n't' → logprob: -17.502166748046875
    10. ' ' → logprob: -18.127166748046875

Token 790: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.061967797577381134
    2. ' line' → logprob: -2.8119678497314453
    3. '#line' → logprob: -17.061967849731445
    4. '	line' → logprob: -17.061967849731445
    5. '(line' → logprob: -17.186967849731445
    6. '[line' → logprob: -18.186967849731445
    7. '
' → logprob: -18.686967849731445
    8. ' ' → logprob: -18.811967849731445
    9. 'Line' → logprob: -19.436967849731445
    10. '=line' → logprob: -19.811967849731445

Token 791: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2969837784767151
    2. ':
' → logprob: -1.4219837188720703
    3. ' or' → logprob: -4.17198371887207
    4. ':return' → logprob: -9.04698371887207
    5. 'or' → logprob: -9.54698371887207
    6. '.startswith' → logprob: -9.67198371887207
    7. '<|end|>' → logprob: -10.92198371887207
    8. '   ' → logprob: -12.29698371887207
    9. ':
' → logprob: -13.29698371887207
    10. 'continue' → logprob: -13.54698371887207

Token 792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016138063743710518
    2. '       ' → logprob: -4.141138076782227
    3. ',' → logprob: -10.266138076782227
    4. 'continue' → logprob: -11.141138076782227
    5. '               ' → logprob: -11.266138076782227
    6. ' continue' → logprob: -11.266138076782227
    7. ':' → logprob: -11.266138076782227
    8. ' or' → logprob: -12.266138076782227
    9. '	       ' → logprob: -13.391138076782227
    10. '.' → logprob: -13.516138076782227

Token 793: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6828252673149109
    2. 'break' → logprob: -1.1828253269195557
    3. 'continue' (adapté à ' continue') → logprob: -1.6828253269195557
    4. ' break' → logprob: -6.807825088500977
    5. ' continue' → logprob: -7.057825088500977
    6. '       ' → logprob: -7.557825088500977
    7. '               ' → logprob: -9.932825088500977
    8. '   ' → logprob: -12.057825088500977
    9. '	break' → logprob: -12.557825088500977
    10. '```' → logprob: -12.932825088500977

Token 794: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007942587835714221
    2. '
' → logprob: -7.875794410705566
    3. '        
' → logprob: -8.000794410705566
    4. '<|end|>' → logprob: -9.750794410705566
    5. ',' → logprob: -12.375794410705566
    6. '   ' → logprob: -13.000794410705566
    7. '       
' → logprob: -13.250794410705566
    8. '           ' → logprob: -13.375794410705566
    9. 'tokens' → logprob: -13.625794410705566
    10. '<|end|>' → logprob: -13.625794410705566

Token 795: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.301394023466855e-05
    2. 'tokens' → logprob: -10.625062942504883
    3. 'token' → logprob: -11.375062942504883
    4. '   ' → logprob: -11.375062942504883
    5. '<|end|>' → logprob: -12.250062942504883
    6. ' tokens' → logprob: -12.375062942504883
    7. ' token' → logprob: -13.750062942504883
    8. '           ' → logprob: -13.875062942504883
    9. '        
' → logprob: -13.875062942504883
    10. ' parts' → logprob: -14.375062942504883

Token 796: ' if' (ID: 538)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5757595896720886
    2. 'parts' → logprob: -1.2007596492767334
    3. 'cmd' → logprob: -2.5757596492767334
    4. 't' → logprob: -3.9507596492767334
    5. 'try' → logprob: -4.825759410858154
    6. 'if' (adapté à ' if') → logprob: -5.075759410858154
    7. 'command' → logprob: -5.200759410858154
    8. 'mode' → logprob: -5.450759410858154
    9. 'type' → logprob: -5.450759410858154
    10. 'tokens' → logprob: -5.575759410858154

Token 797: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.4508090615272522
    2. ' line' → logprob: -1.2008090019226074
    3. 'len' → logprob: -3.0758090019226074
    4. ' len' → logprob: -4.200809001922607
    5. ''' → logprob: -7.450809001922607
    6. ' not' → logprob: -8.700809478759766
    7. ' '' → logprob: -10.950809478759766
    8. ' ' → logprob: -11.450809478759766
    9. 'not' → logprob: -12.200809478759766
    10. '	line' → logprob: -12.575809478759766

Token 798: '.endswith' (ID: 100591)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.08170994371175766
    2. ' ==' → logprob: -3.081709861755371
    3. '[' → logprob: -3.456709861755371
    4. '==' → logprob: -7.581709861755371
    5. '.' → logprob: -8.081709861755371
    6. 'startswith' → logprob: -8.706709861755371
    7. '.endswith' → logprob: -10.831709861755371
    8. '   ' → logprob: -11.331709861755371
    9. ' .' → logprob: -11.956709861755371
    10. '.split' → logprob: -11.956709861755371

Token 799: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16493840515613556
    2. '('?' → logprob: -2.164938449859619
    3. '('\' → logprob: -4.414938449859619
    4. '(':' → logprob: -5.164938449859619
    5. '('.')' → logprob: -5.414938449859619
    6. '("' → logprob: -5.414938449859619
    7. '(';' → logprob: -5.789938449859619
    8. '('#' → logprob: -6.039938449859619
    9. '(',' → logprob: -6.664938449859619
    10. '("?' → logprob: -7.164938449859619

Token 800: ' X' (ID: 2127)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.14335399866104126
    2. '\n' → logprob: -3.1433539390563965
    3. '?' → logprob: -3.6433539390563965
    4. ''):' → logprob: -4.2683539390563965
    5. ' '' → logprob: -4.3933539390563965
    6. ' U' → logprob: -5.1433539390563965
    7. ''U' → logprob: -5.3933539390563965
    8. ''' → logprob: -5.7683539390563965
    9. '=' → logprob: -5.8933539390563965
    10. '!' → logprob: -5.8933539390563965

Token 801: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.2903110980987549
    2. '\n' → logprob: -1.9153110980987549
    3. ''):' → logprob: -2.290311098098755
    4. ' '' → logprob: -6.665310859680176
    5. ''):
' → logprob: -6.790310859680176
    6. '')' → logprob: -7.290310859680176
    7. ''' → logprob: -8.915310859680176
    8. '\r' → logprob: -10.665310859680176
    9. '):
' → logprob: -10.665310859680176
    10. '"):
' → logprob: -10.665310859680176

Token 802: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25880464911460876
    2. ':' → logprob: -2.1338045597076416
    3. '           ' → logprob: -2.6338045597076416
    4. '<|end|>' → logprob: -4.258804798126221
    5. ':
' → logprob: -4.758804798126221
    6. '<|end|>' → logprob: -4.883804798126221
    7. ',' → logprob: -6.258804798126221
    8. ' and' → logprob: -6.633804798126221
    9. '        
' → logprob: -7.133804798126221
    10. '):
' → logprob: -7.508804798126221

Token 803: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02510974183678627
    2. ' break' → logprob: -4.275109767913818
    3. 'break' → logprob: -4.650109767913818
    4. '       ' → logprob: -6.650109767913818
    5. '	break' → logprob: -11.15010929107666
    6. '               ' → logprob: -12.02510929107666
    7. '   ' → logprob: -12.65010929107666
    8. 'return' → logprob: -13.02510929107666
    9. '          ' → logprob: -13.27510929107666
    10. '
' → logprob: -13.90010929107666

Token 804: ' End' (ID: 6437)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3069572448730469
    2. 'break' → logprob: -1.5569572448730469
    3. '       ' → logprob: -2.931957244873047
    4. '           ' → logprob: -8.806957244873047
    5. '	break' → logprob: -9.431957244873047
    6. 'return' → logprob: -11.681957244873047
    7. '   ' → logprob: -12.931957244873047
    8. ' return' → logprob: -13.181957244873047
    9. '_break' → logprob: -13.306957244873047
    10. 'Break' → logprob: -14.181957244873047

Token 805: 'Of' (ID: 2566)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05848999693989754
    2. '       ' → logprob: -2.933490037918091
    3. 'break' → logprob: -6.808489799499512
    4. '<|end|>' → logprob: -7.183489799499512
    5. '               ' → logprob: -7.808489799499512
    6. '		' → logprob: -8.058489799499512
    7. '
' → logprob: -8.308489799499512
    8. '	       ' → logprob: -9.183489799499512
    9. '	break' → logprob: -9.558489799499512
    10. '<|end|>' → logprob: -9.683489799499512

Token 806: 'Input' (ID: 3275)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: ' signal' (ID: 12884)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005154654383659363
    2. '       ' → logprob: -5.505154609680176
    3. '
' → logprob: -7.380154609680176
    4. '		' → logprob: -9.005154609680176
    5. 'break' → logprob: -9.505154609680176
    6. '<|end|>' → logprob: -9.505154609680176
    7. '	       ' → logprob: -9.880154609680176
    8. '               ' → logprob: -10.380154609680176
    9. ' break' → logprob: -10.380154609680176
    10. '          ' → logprob: -10.880154609680176

Token 808: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00032271104282699525
    2. '
' → logprob: -8.500322341918945
    3. '		' → logprob: -10.375322341918945
    4. '\n' → logprob: -10.500322341918945
    5. '       ' → logprob: -10.750322341918945
    6. '               ' → logprob: -10.875322341918945
    7. '<|end|>' → logprob: -12.125322341918945
    8. '          ' → logprob: -12.625322341918945
    9. '	       ' → logprob: -13.125322341918945
    10. '\' → logprob: -13.625322341918945

Token 809: ' stop' (ID: 5666)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.31691214442253113
    2. ' break' → logprob: -1.5669121742248535
    3. '           ' → logprob: -2.8169121742248535
    4. '       ' → logprob: -5.8169121742248535
    5. '	break' → logprob: -9.066911697387695
    6. '               ' → logprob: -11.191911697387695
    7. 'return' → logprob: -11.441911697387695
    8. '```' → logprob: -12.691911697387695
    9. '_break' → logprob: -13.441911697387695
    10. '   ' → logprob: -13.691911697387695

Token 810: ' processing' (ID: 12323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031532408320344985
    2. '		' → logprob: -9.12531566619873
    3. '               ' → logprob: -9.37531566619873
    4. '       ' → logprob: -9.87531566619873
    5. '<|end|>' → logprob: -10.50031566619873
    6. 'break' → logprob: -11.25031566619873
    7. '          ' → logprob: -12.12531566619873
    8. '	       ' → logprob: -12.37531566619873
    9. ' break' → logprob: -12.50031566619873
    10. '
' → logprob: -12.75031566619873

Token 811: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015800826076883823
    2. '       ' → logprob: -9.750158309936523
    3. '
' → logprob: -10.125158309936523
    4. '<|end|>' → logprob: -10.750158309936523
    5. '               ' → logprob: -11.000158309936523
    6. '\n' → logprob: -11.750158309936523
    7. '		' → logprob: -12.250158309936523
    8. '          ' → logprob: -13.375158309936523
    9. ',' → logprob: -13.875158309936523
    10. '   ' → logprob: -14.125158309936523

Token 812: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.15441757265944e-05
    2. '       ' → logprob: -10.875031471252441
    3. '               ' → logprob: -12.000031471252441
    4. '		' → logprob: -12.500031471252441
    5. '          ' → logprob: -13.750031471252441
    6. '<|end|>' → logprob: -14.625031471252441
    7. ',' → logprob: -15.000031471252441
    8. '.' → logprob: -15.750031471252441
    9. '	       ' → logprob: -15.750031471252441
    10. '            ' → logprob: -16.125032424926758

Token 813: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5799676775932312
    2. '           ' → logprob: -1.079967737197876
    3. ' break' → logprob: -2.329967737197876
    4. '       ' → logprob: -5.829967498779297
    5. 'return' → logprob: -9.204967498779297
    6. '	break' → logprob: -9.204967498779297
    7. '               ' → logprob: -10.829967498779297
    8. '
' → logprob: -11.954967498779297
    9. '		' → logprob: -12.329967498779297
    10. '   ' → logprob: -13.329967498779297

Token 814: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04443808272480965
    2. '
' → logprob: -3.169438123703003
    3. '        
' → logprob: -6.669437885284424
    4. '<|end|>' → logprob: -9.544438362121582
    5. '    
' → logprob: -10.294438362121582
    6. '   ' → logprob: -10.794438362121582
    7. '	' → logprob: -12.044438362121582
    8. '
' → logprob: -12.169438362121582
    9. '		
' → logprob: -12.294438362121582
    10. '  
' → logprob: -12.544438362121582

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039170795935206115
    2. '
' → logprob: -8.375391960144043
    3. '        
' → logprob: -9.000391960144043
    4. '<|end|>' → logprob: -10.750391960144043
    5. '   ' → logprob: -12.125391960144043
    6. '           ' → logprob: -12.875391960144043
    7. '  
' → logprob: -13.000391960144043
    8. '    
' → logprob: -13.875391960144043
    9. '```' → logprob: -14.125391960144043
    10. '       
' → logprob: -14.375391960144043

Token 816: ' try' (ID: 2075)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09933438152074814
    2. 'type' → logprob: -2.974334478378296
    3. 'target' → logprob: -3.849334478378296
    4. 'parts' → logprob: -4.224334239959717
    5. ' parts' → logprob: -6.224334239959717
    6. 't' → logprob: -7.224334239959717
    7. 'code' → logprob: -7.349334239959717
    8. ' type' → logprob: -7.349334239959717
    9. ' target' → logprob: -7.474334239959717
    10. 'mode' → logprob: -7.724334239959717

Token 817: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0683695524930954
    2. ':
' → logprob: -2.8183696269989014
    3. '       ' → logprob: -5.443369388580322
    4. '           ' → logprob: -7.193369388580322
    5. '        ' → logprob: -7.693369388580322
    6. '<|end|>' → logprob: -8.06836986541748
    7. '{' → logprob: -8.44336986541748
    8. ' :' → logprob: -9.19336986541748
    9. '<|end|>' → logprob: -9.81836986541748
    10. '):
' → logprob: -10.56836986541748

Token 818: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10341578722000122
    2. '       ' → logprob: -2.3534157276153564
    3. ':' → logprob: -6.4784159660339355
    4. '	       ' → logprob: -7.1034159660339355
    5. ':
' → logprob: -8.353415489196777
    6. '<|end|>' → logprob: -9.103415489196777
    7. 'token' → logprob: -9.478415489196777
    8. 'tokens' → logprob: -9.728415489196777
    9. '```' → logprob: -9.853415489196777
    10. '{' → logprob: -10.103415489196777

Token 819: ' identifier' (ID: 24577)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.6597926020622253
    2. 'type' → logprob: -1.5347926616668701
    3. 'style' → logprob: -2.03479266166687
    4. 'mode' → logprob: -2.28479266166687
    5. 't' → logprob: -4.409792423248291
    6. 'code' → logprob: -5.034792423248291
    7. 'cmd' → logprob: -5.534792423248291
    8. 'typ' → logprob: -6.284792423248291
    9. '           ' → logprob: -6.409792423248291
    10. 'command' → logprob: -6.659792423248291

Token 820: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029995047952979803
    2. ' ,' → logprob: -8.625300407409668
    3. 'type' → logprob: -9.500300407409668
    4. ',type' → logprob: -10.875300407409668
    5. '=' → logprob: -11.500300407409668
    6. '_type' → logprob: -12.250300407409668
    7. ' =' → logprob: -13.250300407409668
    8. ',target' → logprob: -13.250300407409668
    9. '_,' → logprob: -13.500300407409668
    10. ',line' → logprob: -13.625300407409668

Token 821: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.430190771818161
    2. 'target' → logprob: -1.0551908016204834
    3. ' tgt' → logprob: -8.180191040039062
    4. 'style' → logprob: -8.305191040039062
    5. ' style' → logprob: -8.680191040039062
    6. 'to' → logprob: -8.680191040039062
    7. 't' → logprob: -8.805191040039062
    8. ' conversion' → logprob: -9.555191040039062
    9. 'conversion' → logprob: -10.055191040039062
    10. 'space' → logprob: -10.055191040039062

Token 822: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0025529502891004086
    2. '_' → logprob: -6.7525529861450195
    3. '=' → logprob: -7.1275529861450195
    4. ' =' → logprob: -7.7525529861450195
    5. 'type' → logprob: -9.50255298614502
    6. '_target' → logprob: -10.25255298614502
    7. '_=' → logprob: -10.62755298614502
    8. '=_' → logprob: -12.37755298614502
    9. 'Type' → logprob: -12.75255298614502
    10. '_char' → logprob: -13.62755298614502

Token 823: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4754425585269928
    2. '=' → logprob: -0.9754425287246704
    3. ',' → logprob: -6.600442409515381
    4. ' ' → logprob: -12.600442886352539
    5. ' ,' → logprob: -14.475442886352539
    6. ' =
' → logprob: -15.600442886352539
    7. ')' → logprob: -15.725442886352539
    8. ' =
' → logprob: -16.10044288635254
    9. '    ' → logprob: -16.72544288635254
    10. '   ' → logprob: -16.85044288635254

Token 824: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04859202727675438
    2. 'line' → logprob: -3.0485920906066895
    3. '	line' → logprob: -12.923591613769531
    4. '=line' → logprob: -13.548591613769531
    5. '[line' → logprob: -15.048591613769531
    6. '(line' → logprob: -15.173591613769531
    7. '   ' → logprob: -16.04859161376953
    8. '#line' → logprob: -16.17359161376953
    9. ' ' → logprob: -17.42359161376953
    10. '    ' → logprob: -17.67359161376953

Token 825: '.r' (ID: 2951)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -1.188701868057251
    2. '=' → logprob: -1.313701868057251
    3. ',' → logprob: -1.438701868057251
    4. ' =' → logprob: -2.188701868057251
    5. '.r' → logprob: -2.688701868057251
    6. '.' → logprob: -5.188701629638672
    7. '.rstrip' → logprob: -5.938701629638672
    8. ',r' → logprob: -7.938701629638672
    9. '[:-' → logprob: -8.688701629638672
    10. ' .' → logprob: -8.688701629638672

Token 826: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.726595241460018e-05
    2. 'strip' → logprob: -10.50003719329834
    3. 'partition' → logprob: -11.75003719329834
    4. 'find' → logprob: -13.50003719329834
    5. 'plit' → logprob: -15.62503719329834
    6. 'index' → logprob: -16.375038146972656
    7. ' split' → logprob: -16.750038146972656
    8. '_split' → logprob: -17.250038146972656
    9. '.split' → logprob: -17.625038146972656
    10. 'Split' → logprob: -19.375038146972656

Token 827: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0009395699598826468
    2. ''' → logprob: -7.00093936920166
    3. '(None' → logprob: -11.25093936920166
    4. '(' → logprob: -11.50093936920166
    5. '(max' → logprob: -13.37593936920166
    6. '("' → logprob: -13.75093936920166
    7. 'None' → logprob: -14.12593936920166
    8. '"' → logprob: -15.00093936920166
    9. '('',' → logprob: -15.12593936920166
    10. ''s' → logprob: -15.25093936920166

Token 828: ' ',' (ID: 14089)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.034812767058610916
    2. '('' → logprob: -3.4098126888275146
    3. ' ' → logprob: -7.909812927246094
    4. 'None' → logprob: -8.034812927246094
    5. '(None' → logprob: -8.409812927246094
    6. ' '' → logprob: -9.784812927246094
    7. '(max' → logprob: -9.909812927246094
    8. ' None' → logprob: -10.534812927246094
    9. '(' → logprob: -10.659812927246094
    10. '1' → logprob: -10.784812927246094

Token 829: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. 'max' → logprob: -15.0
    3. ' ' → logprob: -18.0
    4. '   ' → logprob: -22.75
    5. '
' → logprob: -23.125
    6. ')' → logprob: -23.25
    7. '```' → logprob: -23.25
    8. '`' → logprob: -23.375
    9. ' max' → logprob: -23.75
    10. '１' → logprob: -24.5

Token 830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.375
    3. 'max' → logprob: -18.625
    4. ')' → logprob: -23.875
    5. '```' → logprob: -24.125
    6. '
' → logprob: -24.5
    7. '2' → logprob: -24.625
    8. '   ' → logprob: -24.75
    9. '１' → logprob: -25.125
    10. '`' → logprob: -25.5

Token 831: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007992653991095722
    2. '       ' → logprob: -7.875799179077148
    3. ')
' → logprob: -8.625799179077148
    4. '           ' → logprob: -9.000799179077148
    5. '<|end|>' → logprob: -9.625799179077148
    6. ',' → logprob: -11.500799179077148
    7. '),' → logprob: -12.250799179077148
    8. ')\' → logprob: -12.375799179077148
    9. ')`' → logprob: -12.625799179077148
    10. '')' → logprob: -12.750799179077148

Token 832: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4346718192100525
    2. '           ' → logprob: -1.0596718788146973
    3. '<|end|>' → logprob: -5.434671878814697
    4. '        
' → logprob: -6.684671878814697
    5. '            
' → logprob: -9.684671401977539
    6. 'except' → logprob: -9.684671401977539
    7. '        ' → logprob: -10.059671401977539
    8. '<|end|>' → logprob: -10.434671401977539
    9. '   ' → logprob: -10.934671401977539
    10. ')' → logprob: -11.184671401977539

Token 833: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010690123308449984
    2. '<|end|>' → logprob: -7.501069068908691
    3. '        
' → logprob: -8.251069068908691
    4. 'except' (adapté à ' except') → logprob: -9.251069068908691
    5. ' except' → logprob: -9.376069068908691
    6. '        ' → logprob: -10.626069068908691
    7. '           ' → logprob: -11.126069068908691
    8. '      ' → logprob: -11.876069068908691
    9. '<|end|>' → logprob: -12.376069068908691
    10. '   ' → logprob: -12.626069068908691

Token 834: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00081796565791592
    2. ' Value' → logprob: -7.125817775726318
    3. '(Value' → logprob: -12.500818252563477
    4. 'Val' → logprob: -12.625818252563477
    5. '	Value' → logprob: -12.750818252563477
    6. '.Value' → logprob: -13.625818252563477
    7. 'Index' → logprob: -13.750818252563477
    8. '_value' → logprob: -14.625818252563477
    9. '_Value' → logprob: -14.750818252563477
    10. ' ' → logprob: -15.750818252563477

Token 835: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00014478032244369388
    2. 'Value' → logprob: -9.500144958496094
    3. 'rror' → logprob: -9.625144958496094
    4. 'error' → logprob: -13.000144958496094
    5. 'Exception' → logprob: -14.375144958496094
    6. 'SError' → logprob: -14.375144958496094
    7. 'Index' → logprob: -16.500144958496094
    8. 'LError' → logprob: -16.750144958496094
    9. 'Warning' → logprob: -17.000144958496094
    10. 'Errors' → logprob: -17.500144958496094

Token 836: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006882557645440102
    2. ':
' → logprob: -5.006882667541504
    3. '[' → logprob: -9.881882667541504
    4. '           ' → logprob: -10.506882667541504
    5. '<|end|>' → logprob: -10.756882667541504
    6. '       ' → logprob: -11.006882667541504
    7. '):' → logprob: -11.256882667541504
    8. ' as' → logprob: -12.506882667541504
    9. '{' → logprob: -12.506882667541504
    10. '   ' → logprob: -12.631882667541504

Token 837: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023122141137719154
    2. '       ' → logprob: -3.8981220722198486
    3. ':' → logprob: -6.273122310638428
    4. ' continue' → logprob: -7.648122310638428
    5. 'continue' → logprob: -10.27312183380127
    6. '	       ' → logprob: -10.89812183380127
    7. '   ' → logprob: -10.89812183380127
    8. '{' → logprob: -11.02312183380127
    9. ',' → logprob: -11.02312183380127
    10. '<|end|>' → logprob: -11.02312183380127

Token 838: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8012403845787048
    2. 'continue' (adapté à ' continue') → logprob: -0.8012403845787048
    3. '       ' → logprob: -2.3012404441833496
    4. ' continue' → logprob: -6.30124044418335
    5. 'print' → logprob: -7.92624044418335
    6. '   ' → logprob: -9.926239967346191
    7. '	continue' → logprob: -10.551239967346191
    8. '```' → logprob: -10.551239967346191
    9. '               ' → logprob: -10.926239967346191
    10. ' ' → logprob: -13.176239967346191

Token 839: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029697378631681204
    2. '        
' → logprob: -6.002969741821289
    3. '
' → logprob: -8.252969741821289
    4. '<|end|>' → logprob: -8.627969741821289
    5. '```' → logprob: -10.877969741821289
    6. '           ' → logprob: -12.127969741821289
    7. '    
' → logprob: -12.377969741821289
    8. '#' → logprob: -12.502969741821289
    9. '        

' → logprob: -12.502969741821289
    10. '        
        
' → logprob: -12.627969741821289

Token 840: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004270477220416069
    2. '        
' → logprob: -5.629270553588867
    3. '
' → logprob: -7.379270553588867
    4. '<|end|>' → logprob: -10.254270553588867
    5. '            
' → logprob: -13.254270553588867
    6. '       
' → logprob: -13.379270553588867
    7. '        

' → logprob: -13.629270553588867
    8. '           ' → logprob: -13.879270553588867
    9. '    
' → logprob: -14.004270553588867
    10. '        
        
' → logprob: -14.129270553588867

Token 841: ' malformed' (ID: 152298)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013170232065021992
    2. 'print' → logprob: -4.88817024230957
    3. 'continue' → logprob: -5.51317024230957
    4. '```' → logprob: -6.76317024230957
    5. '   ' → logprob: -8.88817024230957
    6. '#' → logprob: -9.01317024230957
    7. '           ' → logprob: -10.13817024230957
    8. 'if' → logprob: -10.51317024230957
    9. '
' → logprob: -11.13817024230957
    10. ' continue' → logprob: -11.63817024230957

Token 842: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033508528023958206
    2. '
' → logprob: -3.908508539199829
    3. '        
' → logprob: -4.40850830078125
    4. '<|end|>' → logprob: -7.40850830078125
    5. '       
' → logprob: -11.03350830078125
    6. '  
' → logprob: -11.65850830078125
    7. '<|end|>' → logprob: -11.78350830078125
    8. '            
' → logprob: -11.78350830078125
    9. '           ' → logprob: -11.90850830078125
    10. '    
' → logprob: -11.90850830078125

Token 843: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004848511423915625
    2. '        
' → logprob: -5.504848480224609
    3. '
' → logprob: -7.879848480224609
    4. '<|end|>' → logprob: -8.37984848022461
    5. '```' → logprob: -9.37984848022461
    6. '    
' → logprob: -10.75484848022461
    7. '           ' → logprob: -11.50484848022461
    8. '<|end|>' → logprob: -11.62984848022461
    9. '  
' → logprob: -12.00484848022461
    10. '       
' → logprob: -12.00484848022461

Token 844: ' ignore' (ID: 17887)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06985761970281601
    2. '           ' → logprob: -2.819857597351074
    3. 'continue' → logprob: -5.319857597351074
    4. ' continue' → logprob: -5.944857597351074
    5. '   ' → logprob: -8.694857597351074
    6. '               ' → logprob: -9.819857597351074
    7. '```' → logprob: -9.944857597351074
    8. ' ' → logprob: -10.819857597351074
    9. '<|end|>' → logprob: -10.819857597351074
    10. '		' → logprob: -11.694857597351074

Token 845: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001960512949153781
    2. '        
' → logprob: -6.751960277557373
    3. '<|end|>' → logprob: -7.251960277557373
    4. '```' → logprob: -10.751960754394531
    5. '
' → logprob: -11.251960754394531
    6. '<|end|>' → logprob: -11.751960754394531
    7. '           ' → logprob: -12.001960754394531
    8. '  
' → logprob: -12.251960754394531
    9. '   ' → logprob: -12.876960754394531
    10. '    
' → logprob: -12.876960754394531

Token 846: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.170270353322849e-05
    2. '        
' → logprob: -10.125061988830566
    3. '```' → logprob: -11.750061988830566
    4. '   ' → logprob: -12.250061988830566
    5. '           ' → logprob: -12.875061988830566
    6. '<|end|>' → logprob: -13.375061988830566
    7. 'try' → logprob: -13.750061988830566
    8. '    
' → logprob: -14.250061988830566
    9. '
' → logprob: -14.375061988830566
    10. 'token' → logprob: -14.750061988830566

Token 847: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.646207869052887
    2. 'normal' → logprob: -0.896207869052887
    3. 'try' → logprob: -3.396207809448242
    4. '       ' → logprob: -3.396207809448242
    5. ' if' → logprob: -8.146207809448242
    6. ' normal' → logprob: -8.646207809448242
    7. 'converter' → logprob: -8.896207809448242
    8. 'norm' → logprob: -9.771207809448242
    9. 'result' → logprob: -10.021207809448242
    10. '
' → logprob: -10.021207809448242

Token 848: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5759434103965759
    2. ' target' → logprob: -0.8259434103965759
    3. ' not' → logprob: -12.825942993164062
    4. 'not' → logprob: -13.700942993164062
    5. '(target' → logprob: -15.825942993164062
    6. '	target' → logprob: -16.575942993164062
    7. '[target' → logprob: -18.200942993164062
    8. 'arget' → logprob: -18.450942993164062
    9. '       ' → logprob: -18.825942993164062
    10. ' ' → logprob: -19.075942993164062

Token 849: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -1.6240566083070007e-06
    2. 'type' → logprob: -14.875001907348633
    3. '_' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.750001907348633
    5. '_TYPE' → logprob: -16.125001907348633
    6. 'ype' → logprob: -16.250001907348633
    7. ' _' → logprob: -16.500001907348633
    8. '_t' → logprob: -16.750001907348633
    9. '_types' → logprob: -16.750001907348633
    10. 'not' → logprob: -17.000001907348633

Token 850: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0066508338786661625
    2. 'not' → logprob: -5.131650924682617
    3. ' in' → logprob: -7.256650924682617
    4. 'in' → logprob: -11.131650924682617
    5. '	not' → logprob: -14.381650924682617
    6. ' no' → logprob: -14.631650924682617
    7. ' ' → logprob: -15.006650924682617
    8. ')' → logprob: -16.131650924682617
    9. '=' → logprob: -16.506650924682617
    10. '[' → logprob: -16.631650924682617

Token 851: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0879768654704094
    2. 'in' → logprob: -2.8379769325256348
    3. ' normal' → logprob: -3.7129769325256348
    4. 'normal' → logprob: -6.712976932525635
    5. '('' → logprob: -10.837976455688477
    6. '['' → logprob: -10.962976455688477
    7. ' ('' → logprob: -12.212976455688477
    8. ')' → logprob: -12.587976455688477
    9. ' ['' → logprob: -13.587976455688477
    10. '   ' → logprob: -13.712976455688477

Token 852: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.006044812500476837
    2. ' normal' → logprob: -5.756044864654541
    3. '{'' → logprob: -6.006044864654541
    4. '('' → logprob: -8.006044387817383
    5. '['' → logprob: -10.006044387817383
    6. ''' → logprob: -11.506044387817383
    7. ' {'' → logprob: -11.881044387817383
    8. ' ('' → logprob: -13.381044387817383
    9. ' ['' → logprob: -14.506044387817383
    10. 'valid' → logprob: -15.006044387817383

Token 853: 'izers' (ID: 24223)
  Prédit: 'izers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izers' → logprob: -3.128163257315464e-07
    2. 'iz' → logprob: -15.875
    3. 'izer' → logprob: -16.75
    4. 'zers' → logprob: -17.625
    5. 'ize' → logprob: -17.75
    6. '_' → logprob: -18.0
    7. 'azers' → logprob: -18.5
    8. '_normal' → logprob: -19.75
    9. '_
' → logprob: -19.875
    10. '_m' → logprob: -19.875

Token 854: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -2.2246291337069124e-05
    2. '_' → logprob: -10.875021934509277
    3. ':' → logprob: -13.000021934509277
    4. 'cache' → logprob: -14.125021934509277
    5. '_:' → logprob: -15.875021934509277
    6. '\' → logprob: -17.125022888183594
    7. '_CACHE' → logprob: -17.125022888183594
    8. 'Cache' → logprob: -17.250022888183594
    9. '_cached' → logprob: -17.625022888183594
    10. 's' → logprob: -18.000022888183594

Token 855: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032752682454884052
    2. ':
' → logprob: -5.753275394439697
    3. '       ' → logprob: -9.753274917602539
    4. '           ' → logprob: -11.003274917602539
    5. 'continue' → logprob: -12.503274917602539
    6. '   ' → logprob: -12.628274917602539
    7. '<|end|>' → logprob: -12.878274917602539
    8. '):' → logprob: -13.003274917602539
    9. '[' → logprob: -13.378274917602539
    10. ' continue' → logprob: -13.503274917602539

Token 856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008943788707256317
    2. ' continue' → logprob: -5.008943557739258
    3. 'continue' → logprob: -6.133943557739258
    4. ':' → logprob: -11.133943557739258
    5. ' continues' → logprob: -11.883943557739258
    6. '       ' → logprob: -12.008943557739258
    7. '```' → logprob: -12.008943557739258
    8. '_continue' → logprob: -12.008943557739258
    9. '	continue' → logprob: -12.508943557739258
    10. '<|end|>' → logprob: -12.758943557739258

Token 857: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5282185673713684
    2. '           ' → logprob: -1.0282185077667236
    3. ' continue' → logprob: -3.0282185077667236
    4. 'print' → logprob: -6.028218746185303
    5. '       ' → logprob: -6.528218746185303
    6. '   ' → logprob: -7.903218746185303
    7. ' print' → logprob: -10.653218269348145
    8. '	continue' → logprob: -11.028218269348145
    9. '               ' → logprob: -11.778218269348145
    10. '```' → logprob: -12.028218269348145

Token 858: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023930100724101067
    2. '
' → logprob: -6.3773932456970215
    3. '        
' → logprob: -7.3773932456970215
    4. '<|end|>' → logprob: -10.377392768859863
    5. '    
' → logprob: -11.252392768859863
    6. '  
' → logprob: -12.127392768859863
    7. '   ' → logprob: -12.377392768859863
    8. '       
' → logprob: -12.877392768859863
    9. '           ' → logprob: -13.377392768859863
    10. '```' → logprob: -13.502392768859863

Token 859: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051356807351112366
    2. '
' → logprob: -3.051356792449951
    3. '        
' → logprob: -5.926356792449951
    4. '
' → logprob: -10.30135726928711
    5. '  
' → logprob: -11.05135726928711
    6. '    
' → logprob: -11.17635726928711
    7. '       
' → logprob: -11.55135726928711
    8. '<|end|>' → logprob: -11.67635726928711
    9. '            
' → logprob: -12.92635726928711
    10. '        

' → logprob: -13.17635726928711

Token 860: ' invalid' (ID: 15796)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0750131830573082
    2. '           ' → logprob: -3.3250131607055664
    3. '   ' → logprob: -4.325013160705566
    4. '#' → logprob: -4.450013160705566
    5. 'continue' → logprob: -5.075013160705566
    6. '```' → logprob: -5.575013160705566
    7. '
' → logprob: -7.825013160705566
    8. 'print' → logprob: -8.325013160705566
    9. '               ' → logprob: -8.825013160705566
    10. ' continue' → logprob: -9.200013160705566

Token 861: ' type' (ID: 1490)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5642321705818176
    2. ' target' → logprob: -0.9392321705818176
    3. '<|end|>' → logprob: -3.314232110977173
    4. '_target' → logprob: -6.689232349395752
    5. 'token' → logprob: -7.064232349395752
    6. ' line' → logprob: -8.564231872558594
    7. ' input' → logprob: -8.564231872558594
    8. 'input' → logprob: -8.814231872558594
    9. '<|end|>' → logprob: -8.939231872558594
    10. ' command' → logprob: -9.189231872558594

Token 862: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018265239894390106
    2. '
' → logprob: -4.143265247344971
    3. '        
' → logprob: -6.143265247344971
    4. '    
' → logprob: -10.768264770507812
    5. '  
' → logprob: -10.893264770507812
    6. '<|end|>' → logprob: -11.018264770507812
    7. '   ' → logprob: -12.143264770507812
    8. '
' → logprob: -12.393264770507812
    9. '       
' → logprob: -12.518264770507812
    10. '```' → logprob: -13.268264770507812

Token 863: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007206532754935324
    2. 'print' → logprob: -7.750720500946045
    3. 'output' → logprob: -8.375720977783203
    4. 'result' → logprob: -10.375720977783203
    5. '```' → logprob: -11.375720977783203
    6. '        
' → logprob: -12.375720977783203
    7. '   ' → logprob: -12.500720977783203
    8. 'response' → logprob: -12.875720977783203
    9. ' print' → logprob: -13.375720977783203
    10. ' output' → logprob: -13.625720977783203

Token 864: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' (adapté à ' normal') → logprob: -1.1444542407989502
    2. 'output' → logprob: -1.6444542407989502
    3. 'print' → logprob: -1.7694542407989502
    4. 'result' → logprob: -2.14445424079895
    5. '       ' → logprob: -2.64445424079895
    6. 'converter' → logprob: -2.64445424079895
    7. 'normalized' → logprob: -2.89445424079895
    8. 'converted' → logprob: -6.394454002380371
    9. ' normal' → logprob: -7.644454002380371
    10. 'try' → logprob: -7.769454002380371

Token 865: 'izer' (ID: 4492)
  Prédit: 'izers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izers' → logprob: -0.17992626130580902
    2. 'izer' → logprob: -1.8049262762069702
    3. '_' → logprob: -9.429925918579102
    4. 'iz' → logprob: -10.054925918579102
    5. 'ize' → logprob: -10.179925918579102
    6. 'IZER' → logprob: -12.679925918579102
    7. '   ' → logprob: -12.804925918579102
    8. ' ' → logprob: -13.179925918579102
    9. 'zers' → logprob: -13.179925918579102
    10. 'ized' → logprob: -13.554925918579102

Token 866: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048605188727378845
    2. '=' → logprob: -3.04860520362854
    3. '.' → logprob: -11.173604965209961
    4. '   ' → logprob: -14.048604965209961
    5. '[' → logprob: -14.298604965209961
    6. '.convert' → logprob: -14.673604965209961
    7. ' =
' → logprob: -15.173604965209961
    8. ')' → logprob: -15.298604965209961
    9. '    ' → logprob: -15.423604965209961
    10. ' .' → logprob: -15.423604965209961

Token 867: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.0485873706638813
    2. ' normal' → logprob: -3.0485873222351074
    3. 'norm' → logprob: -21.048587799072266
    4. '(normal' → logprob: -21.423587799072266
    5. 'Normal' → logprob: -21.673587799072266
    6. '_normal' → logprob: -21.798587799072266
    7. '
' → logprob: -22.048587799072266
    8. '正常' → logprob: -22.173587799072266
    9. '   ' → logprob: -22.298587799072266
    10. '.normal' → logprob: -22.548587799072266

Token 868: 'izers' (ID: 24223)
  Prédit: 'izers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izers' → logprob: -1.3856492842023727e-06
    2. 'izer' → logprob: -14.500000953674316
    3. 's' → logprob: -15.000000953674316
    4. 'zers' → logprob: -15.625000953674316
    5. 'iz' → logprob: -16.250001907348633
    6. 'ers' → logprob: -17.000001907348633
    7. '_' → logprob: -17.250001907348633
    8. 'azers' → logprob: -17.375001907348633
    9. '_normal' → logprob: -18.000001907348633
    10. '```' → logprob: -18.250001907348633

Token 869: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -1.9361264946837764e-07
    2. 'Cache' → logprob: -15.875
    3. '_CACHE' → logprob: -18.0
    4. 'cache' → logprob: -18.5
    5. '_c' → logprob: -19.625
    6. '_cached' → logprob: -19.625
    7. '[_' → logprob: -20.75
    8. '\' → logprob: -21.125
    9. '_cash' → logprob: -21.5
    10. '[' → logprob: -21.625

Token 870: '[target' (ID: 123448)
  Prédit: '[target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[target' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.250015258789062
    3. '[token' → logprob: -13.125015258789062
    4. '[t' → logprob: -16.625015258789062
    5. 'target' → logprob: -17.125015258789062
    6. '[source' → logprob: -17.750015258789062
    7. '[temp' → logprob: -18.875015258789062
    8. '[tmp' → logprob: -19.500015258789062
    9. '[top' → logprob: -19.750015258789062
    10. '[type' → logprob: -19.875015258789062

Token 871: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -1.1875571544806007e-05
    2. 'type' → logprob: -11.500011444091797
    3. 'ype' → logprob: -13.375011444091797
    4. 'Type' → logprob: -16.625011444091797
    5. '[' → logprob: -17.750011444091797
    6. '_TYPE' → logprob: -17.750011444091797
    7. '   ' → logprob: -18.000011444091797
    8. '```' → logprob: -18.000011444091797
    9. ']' → logprob: -18.375011444091797
    10. '[type' → logprob: -19.000011444091797

Token 872: ']
' (ID: 1592)
  Prédit: '.convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.convert' → logprob: -0.668877124786377
    2. ')' → logprob: -0.793877124786377
    3. ']' → logprob: -4.293877124786377
    4. ').' → logprob: -4.793877124786377
    5. '   ' → logprob: -5.418877124786377
    6. '       ' → logprob: -5.668877124786377
    7. '<|end|>' → logprob: -5.918877124786377
    8. 'convert' → logprob: -7.418877124786377
    9. '.' → logprob: -7.418877124786377
    10. ' ' → logprob: -8.168876647949219

Token 873: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0052213058806955814
    2. 'print' → logprob: -5.505221366882324
    3. 'output' → logprob: -6.880221366882324
    4. 'result' → logprob: -9.630221366882324
    5. ' print' → logprob: -10.380221366882324
    6. ' output' → logprob: -11.755221366882324
    7. '   ' → logprob: -12.630221366882324
    8. 'response' → logprob: -13.255221366882324
    9. '```' → logprob: -13.755221366882324
    10. '        
' → logprob: -14.255221366882324

Token 874: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08110202103853226
    2. 'output' → logprob: -3.081102132797241
    3. 'result' (adapté à ' result') → logprob: -3.581102132797241
    4. '       ' → logprob: -6.456101894378662
    5. ' print' → logprob: -6.456101894378662
    6. 'converted' → logprob: -7.581101894378662
    7. ' output' → logprob: -7.956101894378662
    8. ' result' → logprob: -9.33110237121582
    9. 'normalized' → logprob: -9.95610237121582
    10. 'try' → logprob: -12.45610237121582

Token 875: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020806640386581
    2. '=' → logprob: -2.350208044052124
    3. ')' → logprob: -14.725208282470703
    4. '.' → logprob: -14.975208282470703
    5. ' ' → logprob: -16.100208282470703
    6. ',' → logprob: -16.100208282470703
    7. '   ' → logprob: -16.600208282470703
    8. '```' → logprob: -16.725208282470703
    9. ' =
' → logprob: -17.100208282470703
    10. '    ' → logprob: -17.225208282470703

Token 876: ' normal' (ID: 6078)
  Prédit: 'normal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'normal' → logprob: -0.3868710398674011
    2. ' normal' → logprob: -1.136871099472046
    3. '(normal' → logprob: -18.636871337890625
    4. '   ' → logprob: -21.136871337890625
    5. 'Normal' → logprob: -21.136871337890625
    6. '_normal' → logprob: -21.136871337890625
    7. 'normalize' → logprob: -21.261871337890625
    8. 'norm' → logprob: -21.636871337890625
    9. '.normal' → logprob: -22.261871337890625
    10. '
' → logprob: -22.511871337890625

Token 877: 'izer' (ID: 4492)
  Prédit: 'izer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izer' → logprob: -1.2664456789934775e-06
    2. 'ize' → logprob: -13.875000953674316
    3. 'ormal' → logprob: -15.625000953674316
    4. 'IZER' → logprob: -16.875001907348633
    5. 'alyzer' → logprob: -17.125001907348633
    6. 'al' → logprob: -18.000001907348633
    7. 'ar' → logprob: -18.375001907348633
    8. 'orm' → logprob: -18.500001907348633
    9. 'ator' → logprob: -18.750001907348633
    10. 'Normalizer' → logprob: -19.375001907348633

Token 878: '.normalize' (ID: 92881)
  Prédit: '.normalize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.normalize' → logprob: -5.6457742175552994e-05
    2. '.' → logprob: -10.250056266784668
    3. 'normalize' → logprob: -11.500056266784668
    4. '.convert' → logprob: -12.250056266784668
    5. ' .' → logprob: -12.750056266784668
    6. '.normal' → logprob: -13.375056266784668
    7. '.Normalize' → logprob: -14.625056266784668
    8. '_normal' → logprob: -15.625056266784668
    9. '(normal' → logprob: -15.625056266784668
    10. '```' → logprob: -16.250057220458984

Token 879: '(identifier' (ID: 126126)
  Prédit: '(identifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(identifier' → logprob: -0.001553547801449895
    2. '(result' → logprob: -6.501553535461426
    3. '(' → logprob: -10.376553535461426
    4. 'identifier' → logprob: -11.126553535461426
    5. '(line' → logprob: -12.751553535461426
    6. 'result' → logprob: -13.876553535461426
    7. '(identity' → logprob: -14.751553535461426
    8. '(id' → logprob: -15.376553535461426
    9. '(indent' → logprob: -15.501553535461426
    10. ' (' → logprob: -15.751553535461426

Token 880: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26601409912109375
    2. ')' → logprob: -1.5160140991210938
    3. ')
' → logprob: -4.391014099121094
    4. '           ' → logprob: -7.516014099121094
    5. '        
' → logprob: -7.766014099121094
    6. '
' → logprob: -9.391014099121094
    7. '<|end|>' → logprob: -9.391014099121094
    8. '   ' → logprob: -9.641014099121094
    9. '```' → logprob: -9.891014099121094
    10. '        ' → logprob: -10.266014099121094

Token 881: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06227397173643112
    2. 'print' → logprob: -2.8122739791870117
    3. ' print' → logprob: -8.187273979187012
    4. '<|end|>' → logprob: -11.437273979187012
    5. '```' → logprob: -11.812273979187012
    6. '
' → logprob: -12.312273979187012
    7. '        
' → logprob: -13.062273979187012
    8. '   ' → logprob: -13.437273979187012
    9. '	print' → logprob: -14.687273979187012
    10. '#print' → logprob: -14.937273979187012

Token 882: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1637164789135568e-05
    2. '       ' → logprob: -11.500011444091797
    3. ' print' → logprob: -13.500011444091797
    4. '```' → logprob: -19.375011444091797
    5. '
' → logprob: -19.625011444091797
    6. '	print' → logprob: -20.750011444091797
    7. '   ' → logprob: -22.125011444091797
    8. 'sys' → logprob: -22.750011444091797
    9. '.print' → logprob: -22.750011444091797
    10. '#print' → logprob: -22.875011444091797

Token 883: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. 'result' → logprob: -16.5
    4. '(f' → logprob: -17.625
    5. '(results' → logprob: -19.75
    6. '(res' → logprob: -19.75
    7. '=result' → logprob: -20.0
    8. ' (' → logprob: -21.125
    9. '()' → logprob: -21.125
    10. '(resultado' → logprob: -22.0

Token 884: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.375
    3. '())' → logprob: -16.375
    4. ')
' → logprob: -16.875
    5. ' )' → logprob: -17.25
    6. '       ' → logprob: -17.625
    7. '   ' → logprob: -17.75
    8. '')' → logprob: -17.75
    9. ')`' → logprob: -18.0
    10. '))' → logprob: -18.375

Token 885: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.001818097778595984
    2. '
' → logprob: -7.1268181800842285
    3. '```' → logprob: -7.3768181800842285
    4. '<|end|>' → logprob: -8.00181770324707
    5. ' if' → logprob: -10.87681770324707
    6. '        
' → logprob: -11.37681770324707
    7. '  
' → logprob: -12.00181770324707
    8. '``' → logprob: -12.50181770324707
    9. '    
' → logprob: -12.50181770324707
    10. '\n' → logprob: -13.25181770324707

Token 886: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3868784010410309
    2. '__' → logprob: -1.1368783712387085
    3. '_' → logprob: -12.63687801361084
    4. '___' → logprob: -13.76187801361084
    5. 'name' → logprob: -14.13687801361084
    6. '_name' → logprob: -14.38687801361084
    7. '.__' → logprob: -15.01187801361084
    8. '____' → logprob: -15.01187801361084
    9. '/__' → logprob: -15.38687801361084
    10. 'if' → logprob: -15.76187801361084

Token 887: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002478508511558175
    2. '==' → logprob: -6.87747859954834
    3. ' ==' → logprob: -6.87747859954834
    4. 'name' → logprob: -8.12747859954834
    5. ' __' → logprob: -10.62747859954834
    6. '=="' → logprob: -10.62747859954834
    7. '.__' → logprob: -10.62747859954834
    8. '__.__' → logprob: -11.12747859954834
    9. 'if' → logprob: -11.50247859954834
    10. '=='' → logprob: -11.87747859954834

Token 888: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.420598219847307e-05
    2. '__.__' → logprob: -9.7500638961792
    3. '==' → logprob: -12.3750638961792
    4. '__
' → logprob: -14.2500638961792
    5. '__.' → logprob: -14.7500638961792
    6. '=="' → logprob: -15.8750638961792
    7. '__
' → logprob: -16.000064849853516
    8. '__["' → logprob: -16.000064849853516
    9. '__('' → logprob: -16.375064849853516
    10. '____' → logprob: -16.625064849853516

Token 889: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13477057218551636
    2. '==' → logprob: -2.134770631790161
    3. ' ==' → logprob: -4.884770393371582
    4. '=="' → logprob: -9.384770393371582
    5. '__.__' → logprob: -9.509770393371582
    6. '=='' → logprob: -10.259770393371582
    7. '.__' → logprob: -10.259770393371582
    8. '=' → logprob: -12.259770393371582
    9. '__.' → logprob: -12.259770393371582
    10. '===' → logprob: -12.384770393371582

Token 890: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38688430190086365
    2. '"' → logprob: -1.136884331703186
    3. '__' → logprob: -11.386884689331055
    4. ' "__' → logprob: -13.636884689331055
    5. ' '__' → logprob: -14.636884689331055
    6. ''"' → logprob: -16.136884689331055
    7. ''name' → logprob: -16.636884689331055
    8. '   ' → logprob: -16.761884689331055
    9. '"name' → logprob: -17.636884689331055
    10. ''m' → logprob: -17.761884689331055

Token 891: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.5094070477061905e-05
    2. '__' → logprob: -11.750015258789062
    3. 'name' → logprob: -11.875015258789062
    4. ' main' → logprob: -16.250015258789062
    5. '_main' → logprob: -18.375015258789062
    6. 'm' → logprob: -18.375015258789062
    7. 'ma' → logprob: -19.000015258789062
    8. 'python' → logprob: -19.250015258789062
    9. 'py' → logprob: -19.500015258789062
    10. '-main' → logprob: -20.250015258789062

Token 892: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.04861915484070778
    2. '__' → logprob: -3.048619270324707
    3. '_' → logprob: -11.298619270324707
    4. '__":
' → logprob: -11.423619270324707
    5. ''' → logprob: -12.048619270324707
    6. '':
' → logprob: -14.423619270324707
    7. '___' → logprob: -15.173619270324707
    8. '__:' → logprob: -15.298619270324707
    9. '__.' → logprob: -15.423619270324707
    10. '__
' → logprob: -15.423619270324707

Token 893: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16134196519851685
    2. '__' → logprob: -1.911341905593872
    3. ' main' → logprob: -7.536342144012451
    4. '_main' → logprob: -8.161341667175293
    5. '____' → logprob: -9.411341667175293
    6. '__':
' → logprob: -9.536341667175293
    7. '   ' → logprob: -10.411341667175293
    8. '	main' → logprob: -10.411341667175293
    9. '__":
' → logprob: -11.161341667175293
    10. '```' → logprob: -11.286341667175293

Token 894: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -22.125
    4. '   ' → logprob: -23.125
    5. '(main' → logprob: -26.5
    6. '_main' → logprob: -26.5
    7. 'import' → logprob: -27.0
    8. '.main' → logprob: -27.125
    9. '
' → logprob: -29.25
    10. '主' → logprob: -29.75

Token 895: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 893
Tokens correctement prédits (1ère position, stricte): 369
Tokens correctement prédits (1ère position, avec adaptation): 401
Tokens correctement prédits (top 10): 736
Précision stricte (1ère position): 41.32%
Précision adaptée (1ère position): 44.90%
Précision (top 10): 82.42%
================================================================================
