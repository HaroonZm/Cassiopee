================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re

input = sys.stdin.readline

pattern_A = re.compile(r"^>'(=+)#\1~$")
pattern_B = re.compile(r"^>\^((Q=)+)~~$")

n = int(input())
for _ in range(n):
    s = input().rstrip('\n')
    if pattern_A.match(s):
        print("A")
    elif pattern_B.match(s):
        print("B")
    else:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -16.875125885009766

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.05587988719344139
    2. '\' → logprob: -4.180880069732666
    3. 'import' → logprob: -4.430880069732666
    4. '.' → logprob: -4.930880069732666
    5. '```' → logprob: -5.180880069732666
    6. '' → logprob: -6.055880069732666
    7. '[' → logprob: -6.055880069732666
    8. '<|end|>' → logprob: -6.055880069732666
    9. ',' → logprob: -6.680880069732666
    10. '
' → logprob: -6.805880069732666

Token 6: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7094216346740723
    2. '\n' → logprob: -1.7094216346740723
    3. '#' → logprob: -1.8344216346740723
    4. 'import' → logprob: -2.2094216346740723
    5. 'def' → logprob: -2.2094216346740723
    6. '^' → logprob: -2.8344216346740723
    7. '```' → logprob: -2.8344216346740723
    8. '\' → logprob: -2.9594216346740723
    9. '[' → logprob: -3.5844216346740723
    10. ',' → logprob: -4.584421634674072

Token 7: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5742148160934448
    2. '(' → logprob: -1.0742148160934448
    3. '.' → logprob: -2.5742149353027344
    4. '=' → logprob: -5.574214935302734
    5. ' =' → logprob: -5.574214935302734
    6. '_data' → logprob: -5.949214935302734
    7. '_text' → logprob: -5.949214935302734
    8. ' (' → logprob: -6.574214935302734
    9. '_file' → logprob: -7.449214935302734
    10. '[' → logprob: -7.574214935302734

Token 8: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06005249544978142
    2. 'sys' → logprob: -3.3100523948669434
    3. ' input' → logprob: -4.060052394866943
    4. 'input' → logprob: -5.435052394866943
    5. ' ' → logprob: -9.310052871704102
    6. ' open' → logprob: -10.685052871704102
    7. '	sys' → logprob: -11.435052871704102
    8. '=sys' → logprob: -11.685052871704102
    9. ' []' → logprob: -12.435052871704102
    10. ' system' → logprob: -12.435052871704102

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015973414992913604
    2. '.stdin' → logprob: -6.6265974044799805
    3. '.argv' → logprob: -9.62659740447998
    4. '.readline' → logprob: -9.75159740447998
    5. '.input' → logprob: -9.87659740447998
    6. '.import' → logprob: -10.50159740447998
    7. ' .' → logprob: -11.25159740447998
    8. '.stdout' → logprob: -11.25159740447998
    9. '.path' → logprob: -11.50159740447998
    10. '.exit' → logprob: -11.87659740447998

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.47967401146888733
    2. '.' → logprob: -0.9796739816665649
    3. '.read' → logprob: -5.229673862457275
    4. 'read' → logprob: -9.354674339294434
    5. '.readlines' → logprob: -9.854674339294434
    6. '.Read' → logprob: -10.354674339294434
    7. '```' → logprob: -11.354674339294434
    8. '[' → logprob: -12.354674339294434
    9. ' readline' → logprob: -12.479674339294434
    10. '.READ' → logprob: -12.479674339294434

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011328263208270073
    2. '(' → logprob: -4.761328220367432
    3. '()
' → logprob: -6.761328220367432
    4. '().' → logprob: -7.011328220367432
    5. '()\' → logprob: -8.13632869720459
    6. '(
' → logprob: -8.76132869720459
    7. '()

' → logprob: -9.38632869720459
    8. '
' → logprob: -11.13632869720459
    9. ')' → logprob: -11.26132869720459
    10. '()
' → logprob: -11.38632869720459

Token 12: 'pattern' (ID: 29563)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2570718228816986
    2. '()' → logprob: -1.507071852684021
    3. 'def' → logprob: -6.6320719718933105
    4. 'for' → logprob: -7.3820719718933105
    5. 'data' → logprob: -7.8820719718933105
    6. '(
' → logprob: -8.132071495056152
    7. '#' → logprob: -8.257071495056152
    8. 'pattern' → logprob: -8.257071495056152
    9. 'r' → logprob: -8.382071495056152
    10. '(\' → logprob: -8.632071495056152

Token 13: '_A' (ID: 6829)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33813437819480896
    2. '(' → logprob: -2.088134288787842
    3. '=' → logprob: -2.088134288787842
    4. '\s' → logprob: -3.338134288787842
    5. '\' → logprob: -6.588134288787842
    6. 's' → logprob: -6.963134288787842
    7. ' ' → logprob: -7.588134288787842
    8. '_' → logprob: -8.463134765625
    9. '\(' → logprob: -9.588134765625
    10. ')' → logprob: -9.713134765625

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020065635442733765
    2. '\s' → logprob: -4.145065784454346
    3. ' ' → logprob: -6.145065784454346
    4. '=' → logprob: -7.020065784454346
    5. 's' → logprob: -8.020065307617188
    6. '_' → logprob: -8.270065307617188
    7. '\' → logprob: -9.270065307617188
    8. '[' → logprob: -9.520065307617188
    9. '  ' → logprob: -10.270065307617188
    10. '[:]' → logprob: -10.395065307617188

Token 15: ' re' (ID: 322)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03567841276526451
    2. 're' → logprob: -3.7856783866882324
    3. ' r' → logprob: -4.535678386688232
    4. ' re' → logprob: -6.785678386688232
    5. '"' → logprob: -8.16067886352539
    6. ''' → logprob: -10.66067886352539
    7. '[r' → logprob: -10.66067886352539
    8. '"\' → logprob: -10.78567886352539
    9. 'rf' → logprob: -10.91067886352539
    10. '"[' → logprob: -11.03567886352539

Token 16: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.01613149791955948
    2. '.' → logprob: -4.391131401062012
    3. '\.' → logprob: -5.891131401062012
    4. '.Comp' → logprob: -8.266131401062012
    5. '.comp' → logprob: -9.016131401062012
    6. '.findall' → logprob: -9.141131401062012
    7. '.Pattern' → logprob: -9.141131401062012
    8. '.search' → logprob: -9.516131401062012
    9. '.\' → logprob: -9.766131401062012
    10. '.com' → logprob: -10.016131401062012

Token 17: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0037234800402075052
    2. '(' → logprob: -5.878723621368408
    3. '('\' → logprob: -7.753723621368408
    4. '('' → logprob: -8.75372314453125
    5. '\(' → logprob: -9.12872314453125
    6. '("\' → logprob: -9.62872314453125
    7. '(rb' → logprob: -10.00372314453125
    8. '("("' → logprob: -10.25372314453125
    9. '\' → logprob: -10.62872314453125
    10. '('\\' → logprob: -11.25372314453125

Token 18: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4903815686702728
    2. '"\' → logprob: -1.3653815984725952
    3. '"[' → logprob: -2.7403814792633057
    4. ''' → logprob: -3.6153814792633057
    5. ''\' → logprob: -4.615381717681885
    6. ''^' → logprob: -4.865381717681885
    7. 'r' → logprob: -5.115381717681885
    8. '"A' → logprob: -5.615381717681885
    9. '^\' → logprob: -5.865381717681885
    10. ''[' → logprob: -6.115381717681885

Token 19: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6189836859703064
    2. '^\' → logprob: -1.3689837455749512
    3. '^[' → logprob: -2.243983745574951
    4. '[A' → logprob: -3.743983745574951
    5. '\d' → logprob: -3.993983745574951
    6. '^(' → logprob: -4.618983745574951
    7. 'A' → logprob: -4.868983745574951
    8. '\' → logprob: -4.868983745574951
    9. 'a' → logprob: -5.118983745574951
    10. '[' → logprob: -5.618983745574951

Token 20: '>'' (ID: 12747)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[A' → logprob: -1.013640284538269
    2. 'A' → logprob: -1.388640284538269
    3. '\d' → logprob: -2.2636404037475586
    4. '\' → logprob: -2.7636404037475586
    5. '[' → logprob: -2.8886404037475586
    6. 'a' → logprob: -2.8886404037475586
    7. '[a' → logprob: -3.8886404037475586
    8. 'abc' → logprob: -4.263640403747559
    9. 'ABC' → logprob: -5.013640403747559
    10. '\[' → logprob: -5.263640403747559

Token 21: '(' (ID: 7)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3770197629928589
    2. '.*' → logprob: -1.5020197629928589
    3. '[' → logprob: -1.7520197629928589
    4. '[A' → logprob: -1.8770197629928589
    5. '>' → logprob: -2.7520198822021484
    6. '\[' → logprob: -3.5020198822021484
    7. '[^' → logprob: -3.8770198822021484
    8. '.+' → logprob: -4.252019882202148
    9. '\s' → logprob: -4.752019882202148
    10. '@\' → logprob: -5.002019882202148

Token 22: '=' (ID: 28)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4498953819274902
    2. '[' → logprob: -1.5748953819274902
    3. ')' → logprob: -2.0748953819274902
    4. '.*' → logprob: -2.4498953819274902
    5. '.*?)' → logprob: -2.5748953819274902
    6. '[^' → logprob: -2.6998953819274902
    7. '>' → logprob: -3.3248953819274902
    8. '[A' → logprob: -3.6998953819274902
    9. '\[' → logprob: -3.6998953819274902
    10. '.+' → logprob: -3.8248953819274902

Token 23: '+)' (ID: 63829)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3844401836395264
    2. '=' → logprob: -1.5094401836395264
    3. '[' → logprob: -2.2594401836395264
    4. '.*?)' → logprob: -2.6344401836395264
    5. ')' → logprob: -2.8844401836395264
    6. '\[' → logprob: -2.8844401836395264
    7. '[^' → logprob: -3.0094401836395264
    8. '|' → logprob: -3.3844401836395264
    9. '.*' → logprob: -4.2594404220581055
    10. ')\' → logprob: -4.3844404220581055

Token 24: '#' (ID: 2)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0955660343170166
    2. ''' → logprob: -1.7205660343170166
    3. '[' → logprob: -2.4705660343170166
    4. ')' → logprob: -2.5955660343170166
    5. '=' → logprob: -2.7205660343170166
    6. '')' → logprob: -3.2205660343170166
    7. '")' → logprob: -3.4705660343170166
    8. ''>' → logprob: -3.8455660343170166
    9. ')")' → logprob: -3.9705660343170166
    10. '\' → logprob: -4.2205657958984375

Token 25: '\' (ID: 59)
  Prédit: '\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.3786897659301758
    2. ''' → logprob: -1.5036897659301758
    3. '[' → logprob: -2.003689765930176
    4. ''>' → logprob: -2.503689765930176
    5. '\[' → logprob: -2.753689765930176
    6. '<|end|>' → logprob: -3.128689765930176
    7. '>' → logprob: -3.378689765930176
    8. '">' → logprob: -3.378689765930176
    9. '"' → logprob: -3.628689765930176
    10. ')' → logprob: -4.253689765930176

Token 26: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.629664421081543
    2. '\' → logprob: -2.129664421081543
    3. '[' → logprob: -2.754664421081543
    4. '+' → logprob: -3.004664421081543
    5. '$' → logprob: -3.254664421081543
    6. '>' → logprob: -3.629664421081543
    7. '{' → logprob: -3.754664421081543
    8. ''\' → logprob: -4.129664421081543
    9. '"' → logprob: -4.254664421081543
    10. ''>' → logprob: -4.379664421081543

Token 27: '~' (ID: 93)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7513992786407471
    2. '$' → logprob: -1.251399278640747
    3. '>' → logprob: -3.501399278640747
    4. '#' → logprob: -3.876399278640747
    5. '[' → logprob: -3.876399278640747
    6. ''>' → logprob: -3.876399278640747
    7. '\' → logprob: -4.126399040222168
    8. '{' → logprob: -4.251399040222168
    9. '(' → logprob: -4.501399040222168
    10. ''$' → logprob: -4.501399040222168

Token 28: '$")
' (ID: 176684)
  Prédit: '$'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '$' → logprob: -0.5452539324760437
    2. ''' → logprob: -1.4202539920806885
    3. '{' → logprob: -3.1702539920806885
    4. ''$' → logprob: -3.5452539920806885
    5. '[' → logprob: -4.670253753662109
    6. '>' → logprob: -4.670253753662109
    7. '#' → logprob: -4.795253753662109
    8. '\' → logprob: -4.795253753662109
    9. ''>' → logprob: -5.170253753662109
    10. '+' → logprob: -5.295253753662109

Token 29: 'pattern' (ID: 29563)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36442625522613525
    2. '#' → logprob: -2.9894261360168457
    3. '[' → logprob: -3.1144261360168457
    4. ':' → logprob: -3.3644261360168457
    5. '(' → logprob: -3.7394261360168457
    6. '*' → logprob: -4.114426136016846
    7. ''' → logprob: -4.114426136016846
    8. '+' → logprob: -4.239426136016846
    9. '_' → logprob: -4.364426136016846
    10. '<|end|>' → logprob: -4.614426136016846

Token 30: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.6871283650398254
    2. '_A' → logprob: -0.8121283650398254
    3. '_' → logprob: -2.9371283054351807
    4. '_C' → logprob: -11.687128067016602
    5. '_=' → logprob: -12.187128067016602
    6. '_S' → logprob: -12.562128067016602
    7. '_D' → logprob: -12.562128067016602
    8. '```' → logprob: -12.812128067016602
    9. '_a' → logprob: -13.062128067016602
    10. ' _' → logprob: -13.062128067016602

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046210684813559055
    2. '=' → logprob: -5.3796210289001465
    3. ' ' → logprob: -14.254621505737305
    4. '=re' → logprob: -15.754621505737305
    5. ' =[' → logprob: -17.004621505737305
    6. 's' → logprob: -17.379621505737305
    7. ' =)' → logprob: -18.504621505737305
    8. ' ' → logprob: -18.754621505737305
    9. ' *=' → logprob: -18.754621505737305
    10. ')' → logprob: -18.754621505737305

Token 32: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.1801372617483139
    2. ' re' → logprob: -1.805137276649475
    3. 'r' → logprob: -8.055137634277344
    4. ' ' → logprob: -11.055137634277344
    5. 'pattern' → logprob: -11.430137634277344
    6. '```' → logprob: -11.555137634277344
    7. ' r' → logprob: -12.055137634277344
    8. '(re' → logprob: -12.180137634277344
    9. '	re' → logprob: -12.180137634277344
    10. '=re' → logprob: -12.555137634277344

Token 33: '.compile' (ID: 38900)
  Prédit: '.compile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compile' → logprob: -0.0030801480170339346
    2. 'compile' → logprob: -6.003080368041992
    3. '.' → logprob: -8.253080368041992
    4. '.com' → logprob: -8.878080368041992
    5. 'com' → logprob: -9.253080368041992
    6. '.comp' → logprob: -9.753080368041992
    7. 'compl' → logprob: -10.753080368041992
    8. 'comp' → logprob: -11.628080368041992
    9. '\.' → logprob: -11.628080368041992
    10. 'compiled' → logprob: -12.253080368041992

Token 34: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.057672034949064255
    2. '\(' → logprob: -2.9326720237731934
    3. '(' → logprob: -6.807672023773193
    4. '(rb' → logprob: -6.807672023773193
    5. '\' → logprob: -7.557672023773193
    6. '(\' → logprob: -10.557672500610352
    7. '\r' → logprob: -12.182672500610352
    8. 'r' → logprob: -12.432672500610352
    9. '(re' → logprob: -12.932672500610352
    10. ' \(' → logprob: -13.057672500610352

Token 35: '"' (ID: 1)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2058979868888855
    2. '(r' → logprob: -1.7058980464935303
    3. '"' → logprob: -6.955897808074951
    4. 'rb' → logprob: -7.080897808074951
    5. ' r' → logprob: -7.455897808074951
    6. 'br' → logprob: -7.705897808074951
    7. '(rb' → logprob: -7.705897808074951
    8. '```' → logprob: -8.45589828491211
    9. '	r' → logprob: -8.58089828491211
    10. '[r' → logprob: -9.20589828491211

Token 36: '^' (ID: 61)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.2178153991699219
    2. '\' → logprob: -1.7178153991699219
    3. '#' → logprob: -2.092815399169922
    4. '(' → logprob: -3.092815399169922
    5. '+' → logprob: -3.092815399169922
    6. '"' → logprob: -3.342815399169922
    7. '[' → logprob: -3.717815399169922
    8. '*' → logprob: -3.842815399169922
    9. '{' → logprob: -3.842815399169922
    10. '')' → logprob: -3.842815399169922

Token 37: '>\' (ID: 16656)
  Prédit: '>''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>'' → logprob: -0.8593184947967529
    2. ''' → logprob: -1.609318494796753
    3. ''>' → logprob: -2.484318494796753
    4. '\' → logprob: -2.734318494796753
    5. '>' → logprob: -3.109318494796753
    6. '#' → logprob: -3.484318494796753
    7. '(' → logprob: -3.859318494796753
    8. ''(' → logprob: -3.859318494796753
    9. ''\' → logprob: -4.234318733215332
    10. '.*' → logprob: -4.859318733215332

Token 38: '^' (ID: 61)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3747087717056274
    2. '='' → logprob: -1.4997087717056274
    3. ''(' → logprob: -1.4997087717056274
    4. '=' → logprob: -2.499708652496338
    5. ''\' → logprob: -3.624708652496338
    6. '(' → logprob: -4.124708652496338
    7. '=(' → logprob: -4.124708652496338
    8. ''=' → logprob: -4.249708652496338
    9. '#' → logprob: -4.374708652496338
    10. '\' → logprob: -4.499708652496338

Token 39: '((' (ID: 2054)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.47302961349487305
    2. '\' → logprob: -2.473029613494873
    3. '{' → logprob: -2.973029613494873
    4. ''\' → logprob: -2.973029613494873
    5. '=' → logprob: -3.473029613494873
    6. '\(' → logprob: -3.598029613494873
    7. '='' → logprob: -3.723029613494873
    8. '(' → logprob: -3.973029613494873
    9. ''=' → logprob: -4.473029613494873
    10. '#' → logprob: -4.473029613494873

Token 40: 'Q' (ID: 48)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12656515836715698
    2. '\' → logprob: -3.0015652179718018
    3. '[' → logprob: -3.3765652179718018
    4. '=\' → logprob: -5.126564979553223
    5. '[^' → logprob: -5.501564979553223
    6. '.+' → logprob: -5.876564979553223
    7. '-' → logprob: -6.126564979553223
    8. '=[' → logprob: -6.501564979553223
    9. '[\' → logprob: -6.876564979553223
    10. '=*' → logprob: -6.876564979553223

Token 41: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37296193838119507
    2. '[' → logprob: -2.62296199798584
    3. ')+' → logprob: -2.87296199798584
    4. '\' → logprob: -3.37296199798584
    5. '+' → logprob: -3.37296199798584
    6. '+)' → logprob: -3.49796199798584
    7. '|' → logprob: -4.49796199798584
    8. '(' → logprob: -5.12296199798584
    9. '+=' → logprob: -5.24796199798584
    10. ')' → logprob: -5.24796199798584

Token 42: ')+' (ID: 16161)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.009387493133545
    2. ')+' → logprob: -2.134387493133545
    3. '+' → logprob: -2.384387493133545
    4. '+)' → logprob: -2.384387493133545
    5. '[' → logprob: -2.509387493133545
    6. '\' → logprob: -2.634387493133545
    7. ')' → logprob: -3.759387493133545
    8. ')=' → logprob: -4.259387493133545
    9. '|' → logprob: -4.384387493133545
    10. '+=' → logprob: -4.634387493133545

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4761766791343689
    2. ')#' → logprob: -1.4761767387390137
    3. '#' → logprob: -2.7261767387390137
    4. ')\' → logprob: -3.6011767387390137
    5. ')+' → logprob: -4.351176738739014
    6. 'Q' → logprob: -4.601176738739014
    7. ')'' → logprob: -5.476176738739014
    8. ')"' → logprob: -5.601176738739014
    9. '\' → logprob: -6.101176738739014
    10. '')' → logprob: -6.351176738739014

Token 44: '~~' (ID: 7739)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19789426028728485
    2. '\' → logprob: -2.572894334793091
    3. '~' → logprob: -3.947894334793091
    4. '{' → logprob: -4.197894096374512
    5. ')' → logprob: -4.947894096374512
    6. '*' → logprob: -5.322894096374512
    7. '.*' → logprob: -5.447894096374512
    8. ')#' → logprob: -5.447894096374512
    9. '+' → logprob: -5.572894096374512
    10. ''' → logprob: -5.697894096374512

Token 45: '$' (ID: 3)
  Prédit: '$'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '$' → logprob: -0.02062702737748623
    2. '\$' → logprob: -5.270627021789551
    3. ')$' → logprob: -5.395627021789551
    4. '\' → logprob: -5.395627021789551
    5. '$\' → logprob: -6.895627021789551
    6. '*$' → logprob: -7.270627021789551
    7. ''$' → logprob: -7.270627021789551
    8. ')' → logprob: -7.645627021789551
    9. '?$' → logprob: -7.645627021789551
    10. '#' → logprob: -7.770627021789551

Token 46: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5525364875793457
    2. ')' → logprob: -1.0525364875793457
    3. '"' → logprob: -2.6775364875793457
    4. ''' → logprob: -5.927536487579346
    5. '')' → logprob: -6.052536487579346
    6. ')"' → logprob: -6.802536487579346
    7. ')")' → logprob: -7.802536487579346
    8. '```' → logprob: -10.177536010742188
    9. ''"' → logprob: -10.802536010742188
    10. '')"' → logprob: -11.177536010742188

Token 47: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9002352356910706
    2. 'for' → logprob: -1.6502351760864258
    3. 'def' → logprob: -2.525235176086426
    4. 'match' → logprob: -2.900235176086426
    5. 'result' → logprob: -3.150235176086426
    6. '#' → logprob: -3.400235176086426
    7. 'pattern' → logprob: -3.775235176086426
    8. 'data' → logprob: -4.025235176086426
    9. 'valid' → logprob: -4.150235176086426
    10. 'count' → logprob: -4.275235176086426

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09536650776863098
    2. '=' → logprob: -2.4703664779663086
    3. ' ' → logprob: -5.095366477966309
    4. 'u' → logprob: -8.720366477966309
    5. '  ' → logprob: -9.970366477966309
    6. ' =)' → logprob: -10.970366477966309
    7. '.' → logprob: -11.220366477966309
    8. ' =
' → logprob: -11.720366477966309
    9. ')' → logprob: -11.845366477966309
    10. 'space' → logprob: -12.845366477966309

Token 49: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023249439895153046
    2. ' int' → logprob: -3.773249387741089
    3. '10' → logprob: -12.898249626159668
    4. '0' → logprob: -14.648249626159668
    5. '5' → logprob: -15.648249626159668
    6. ' ' → logprob: -15.648249626159668
    7. '[int' → logprob: -15.648249626159668
    8. 'input' → logprob: -15.773249626159668
    9. '<int' → logprob: -15.773249626159668
    10. '=int' → logprob: -15.773249626159668

Token 50: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.05206703394651413
    2. '(' → logprob: -3.0520670413970947
    3. 'input' → logprob: -5.677066802978516
    4. '(sys' → logprob: -10.927066802978516
    5. ' input' → logprob: -11.302066802978516
    6. ' (' → logprob: -11.427066802978516
    7. '('' → logprob: -12.052066802978516
    8. '(in' → logprob: -14.552066802978516
    9. '=input' → logprob: -14.802066802978516
    10. '(
' → logprob: -14.927066802978516

Token 51: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05124276131391525
    2. '()' → logprob: -3.0512428283691406
    3. ')' → logprob: -6.051242828369141
    4. '().' → logprob: -8.55124282836914
    5. ' ())' → logprob: -9.80124282836914
    6. '())
' → logprob: -10.67624282836914
    7. '(' → logprob: -11.42624282836914
    8. '()
' → logprob: -11.80124282836914
    9. '()))' → logprob: -13.42624282836914
    10. '();)' → logprob: -13.55124282836914

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007637747563421726
    2. '\n' → logprob: -5.507637977600098
    3. '
' → logprob: -6.007637977600098
    4. ' for' → logprob: -7.007637977600098
    5. '<|end|>' → logprob: -9.382637977600098
    6. '\' → logprob: -10.507637977600098
    7. '```' → logprob: -11.007637977600098
    8. ' 
' → logprob: -11.257637977600098
    9. '' → logprob: -11.882637977600098
    10. '\r' → logprob: -12.382637977600098

Token 53: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3253784775733948
    2. ' _' → logprob: -1.32537841796875
    3. ' i' → logprob: -4.45037841796875
    4. '_' → logprob: -7.95037841796875
    5. '  ' → logprob: -12.07537841796875
    6. ' ‌' → logprob: -12.32537841796875
    7. ' ▁' → logprob: -12.95037841796875
    8. ' line' → logprob: -13.45037841796875
    9. ' ' → logprob: -13.95037841796875
    10. ' I' → logprob: -14.45037841796875

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01513759233057499
    2. 'in' → logprob: -5.140137672424316
    3. ' range' → logprob: -5.265137672424316
    4. 'range' → logprob: -6.265137672424316
    5. ' ' → logprob: -6.640137672424316
    6. ' _' → logprob: -7.890137672424316
    7. '_' → logprob: -8.265137672424316
    8. ' n' → logprob: -9.140137672424316
    9. 'n' → logprob: -11.140137672424316
    10. ' xrange' → logprob: -11.265137672424316

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197149679064751
    2. ' range' → logprob: -2.811971426010132
    3. '(range' → logprob: -13.811971664428711
    4. '	range' → logprob: -14.061971664428711
    5. ' xrange' → logprob: -14.561971664428711
    6. '```' → logprob: -14.686971664428711
    7. 'n' → logprob: -14.811971664428711
    8. 'rang' → logprob: -15.061971664428711
    9. 'ange' → logprob: -16.31197166442871
    10. 'input' → logprob: -16.31197166442871

Token 56: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5789811015129089
    2. '(' → logprob: -0.8289811015129089
    3. ' (' → logprob: -5.828980922698975
    4. '(range' → logprob: -9.828981399536133
    5. ' n' → logprob: -10.578981399536133
    6. 'n' → logprob: -12.078981399536133
    7. '(
' → logprob: -12.703981399536133
    8. ' range' → logprob: -13.328981399536133
    9. '```' → logprob: -13.828981399536133
    10. '(len' → logprob: -14.078981399536133

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010402228683233261
    2. ':' → logprob: -4.635402202606201
    3. ')' → logprob: -7.635402202606201
    4. '):
' → logprob: -8.76040267944336
    5. ' ):' → logprob: -13.63540267944336
    6. ':)' → logprob: -14.13540267944336
    7. '>:' → logprob: -14.13540267944336
    8. ':
' → logprob: -14.13540267944336
    9. '():' → logprob: -14.63540267944336
    10. '}:' → logprob: -14.76040267944336

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035312979016453028
    2. ' line' → logprob: -6.253531455993652
    3. '    
' → logprob: -6.878531455993652
    4. ' readline' → logprob: -8.878531455993652
    5. 'input' → logprob: -9.503531455993652
    6. 'line' → logprob: -9.628531455993652
    7. '	line' → logprob: -9.628531455993652
    8. ' input' → logprob: -9.753531455993652
    9. '<|end|>' → logprob: -10.253531455993652
    10. '   ' → logprob: -10.253531455993652

Token 59: ' s' (ID: 265)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.33843502402305603
    2. ' line' → logprob: -1.4634350538253784
    3. 's' (adapté à ' s') → logprob: -3.213434934616089
    4. '   ' → logprob: -5.338435173034668
    5. ' s' → logprob: -5.838435173034668
    6. 'data' → logprob: -5.838435173034668
    7. 'code' → logprob: -6.588435173034668
    8. 'text' → logprob: -6.963435173034668
    9. 'string' → logprob: -7.588435173034668
    10. ' data' → logprob: -7.838435173034668

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02634628303349018
    2. '=' → logprob: -3.651346206665039
    3. '=input' → logprob: -10.526346206665039
    4. ' ' → logprob: -11.026346206665039
    5. '   ' → logprob: -14.276346206665039
    6. '  ' → logprob: -14.526346206665039
    7. ' s' → logprob: -14.901346206665039
    8. 's' → logprob: -15.151346206665039
    9. ' =)' → logprob: -15.276346206665039
    10. ' =
' → logprob: -15.651346206665039

Token 61: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.25193002820014954
    2. 'input' → logprob: -1.5019299983978271
    3. '=input' → logprob: -14.376930236816406
    4. '(input' → logprob: -15.626930236816406
    5. '	input' → logprob: -16.751930236816406
    6. '<input' → logprob: -17.126930236816406
    7. 's' → logprob: -17.501930236816406
    8. 'int' → logprob: -17.626930236816406
    9. '_input' → logprob: -18.126930236816406
    10. 'strip' → logprob: -18.251930236816406

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12701189517974854
    2. '()' → logprob: -2.127011775970459
    3. '())' → logprob: -9.627012252807617
    4. ')' → logprob: -11.627012252807617
    5. '.strip' → logprob: -12.377012252807617
    6. '.rstrip' → logprob: -13.377012252807617
    7. ' ().' → logprob: -13.877012252807617
    8. '()
' → logprob: -14.627012252807617
    9. '()).' → logprob: -15.252012252807617
    10. '()

' → logprob: -15.252012252807617

Token 63: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.16022443771362305
    2. 'rstrip' → logprob: -1.910224437713623
    3. 'str' → logprob: -15.410224914550781
    4. ' strip' → logprob: -17.16022491455078
    5. 'rst' → logprob: -17.41022491455078
    6. 'decode' → logprob: -17.78522491455078
    7. 'split' → logprob: -17.91022491455078
    8. '.rstrip' → logprob: -18.41022491455078
    9. 'r' → logprob: -18.53522491455078
    10. '```' → logprob: -18.66022491455078

Token 64: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005460034008137882
    2. '()
' → logprob: -7.750545978546143
    3. '(' → logprob: -9.3755464553833
    4. '()\' → logprob: -11.2505464553833
    5. ')' → logprob: -11.7505464553833
    6. '()

' → logprob: -12.3755464553833
    7. '(
' → logprob: -13.0005464553833
    8. '())' → logprob: -14.2505464553833
    9. '()
' → logprob: -14.6255464553833
    10. '()`' → logprob: -14.7505464553833

Token 65: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. '\n' → logprob: -13.750000953674316
    3. 'newline' → logprob: -19.000001907348633
    4. 'r' → logprob: -19.500001907348633
    5. ' n' → logprob: -20.875001907348633
    6. ')' → logprob: -21.375001907348633
    7. '\' → logprob: -22.500001907348633
    8. '``' → logprob: -23.000001907348633
    9. ')\' → logprob: -23.000001907348633
    10. '```' → logprob: -23.125001907348633

Token 66: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2528763711452484
    2. ')' → logprob: -1.5028764009475708
    3. '')
' → logprob: -7.502876281738281
    4. '")' → logprob: -8.252876281738281
    5. '()' → logprob: -9.877876281738281
    6. ''' → logprob: -10.252876281738281
    7. ')
' → logprob: -10.252876281738281
    8. ')'' → logprob: -12.877876281738281
    9. '')

' → logprob: -13.377876281738281
    10. '')"' → logprob: -13.502876281738281

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025846417993307114
    2. '<|end|>' → logprob: -4.775846481323242
    3. ':' → logprob: -4.900846481323242
    4. 'if' → logprob: -5.025846481323242
    5. ' if' → logprob: -6.525846481323242
    6. ':
' → logprob: -7.400846481323242
    7. ' ' → logprob: -8.400846481323242
    8. '
' → logprob: -8.400846481323242
    9. '    
' → logprob: -8.900846481323242
    10. ')' → logprob: -9.025846481323242

Token 68: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018858060240745544
    2. ' if' → logprob: -4.018857955932617
    3. '   ' → logprob: -7.268857955932617
    4. 'i' → logprob: -12.268857955932617
    5. 'match' → logprob: -12.518857955932617
    6. ' ' → logprob: -14.143857955932617
    7. ' match' → logprob: -14.893857955932617
    8. 'm' → logprob: -15.018857955932617
    9. '```' → logprob: -15.143857955932617
    10. 'If' → logprob: -15.268857955932617

Token 69: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.03366713970899582
    2. 'pattern' → logprob: -3.4086670875549316
    3. ' s' → logprob: -11.28366756439209
    4. ' not' → logprob: -11.90866756439209
    5. '(pattern' → logprob: -14.28366756439209
    6. 's' → logprob: -14.78366756439209
    7. ' ' → logprob: -14.90866756439209
    8. ' re' → logprob: -15.15866756439209
    9. ' ' → logprob: -16.158666610717773
    10. 'not' → logprob: -16.283666610717773

Token 70: '_A' (ID: 6829)
  Prédit: '_A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_A' → logprob: -4.084206375409849e-05
    2. '_B' → logprob: -10.125041007995605
    3. '_' → logprob: -14.250041007995605
    4. 'A' → logprob: -16.87504005432129
    5. '```' → logprob: -18.25004005432129
    6. ' _' → logprob: -18.75004005432129
    7. ')_' → logprob: -19.62504005432129
    8. '._' → logprob: -19.75004005432129
    9. '_AB' → logprob: -20.37504005432129
    10. '_S' → logprob: -20.87504005432129

Token 71: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -0.029965918511152267
    2. '.full' → logprob: -3.529965877532959
    3. '.' → logprob: -9.154966354370117
    4. '.search' → logprob: -9.279966354370117
    5. ' .' → logprob: -11.529966354370117
    6. '.findall' → logprob: -12.154966354370117
    7. 'match' → logprob: -14.404966354370117
    8. '```' → logprob: -15.404966354370117
    9. '.mat' → logprob: -15.654966354370117
    10. '.matcher' → logprob: -15.779966354370117

Token 72: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.264322317088954e-05
    2. '(' → logprob: -10.500052452087402
    3. ' (' → logprob: -10.625052452087402
    4. 's' → logprob: -14.125052452087402
    5. ')(' → logprob: -17.50005340576172
    6. '(
' → logprob: -18.12505340576172
    7. ')' → logprob: -19.25005340576172
    8. '('' → logprob: -20.25005340576172
    9. '`s' → logprob: -20.37505340576172
    10. ')s' → logprob: -21.00005340576172

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002763518423307687
    2. ')' → logprob: -8.875276565551758
    3. '):
' → logprob: -9.500276565551758
    4. ':' → logprob: -9.875276565551758
    5. ' ):' → logprob: -11.750276565551758
    6. '   ' → logprob: -14.125276565551758
    7. ' and' → logprob: -14.875276565551758
    8. ')==' → logprob: -15.500276565551758
    9. '):
' → logprob: -15.625276565551758
    10. '>:' → logprob: -16.500276565551758

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.217095747590065
    2. '   ' → logprob: -1.9670957326889038
    3. ':' → logprob: -2.9670958518981934
    4. ' print' → logprob: -6.467095851898193
    5. 'print' → logprob: -6.717095851898193
    6. ':
' → logprob: -7.467095851898193
    7. '    ' → logprob: -9.717095375061035
    8. '	   ' → logprob: -9.717095375061035
    9. '     ' → logprob: -10.217095375061035
    10. ' :' → logprob: -10.467095375061035

Token 75: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.44409194588661194
    2. 'print' (adapté à ' print') → logprob: -1.6940919160842896
    3. '   ' → logprob: -2.069092035293579
    4. '       ' → logprob: -3.194092035293579
    5. '    ' → logprob: -5.319091796875
    6. '	print' → logprob: -7.694091796875
    7. '
' → logprob: -8.069091796875
    8. '```' → logprob: -8.194091796875
    9. ' ' → logprob: -8.319091796875
    10. '    
' → logprob: -8.569091796875

Token 76: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10264874994754791
    2. '(' → logprob: -2.8526487350463867
    3. '('' → logprob: -3.3526487350463867
    4. '("(' → logprob: -6.227648735046387
    5. '(s' → logprob: -7.352648735046387
    6. '(":' → logprob: -7.477648735046387
    7. '("'' → logprob: -7.602648735046387
    8. '("("' → logprob: -7.727648735046387
    9. '(True' → logprob: -8.602648735046387
    10. '(-' → logprob: -9.102648735046387

Token 77: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7688226699829102
    2. 'Yes' → logprob: -2.14382266998291
    3. 'Accepted' → logprob: -3.14382266998291
    4. 'YES' → logprob: -3.39382266998291
    5. 'Match' → logprob: -3.45632266998291
    6. 'Good' → logprob: -4.14382266998291
    7. 'match' → logprob: -4.14382266998291
    8. 'OK' → logprob: -4.26882266998291
    9. 'AC' → logprob: -4.33132266998291
    10. 'yes' → logprob: -4.39382266998291

Token 78: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.008672011084854603
    2. '")
' → logprob: -5.38367223739624
    3. ')")' → logprob: -7.00867223739624
    4. 'A' → logprob: -7.88367223739624
    5. '!")' → logprob: -7.88367223739624
    6. '")
' → logprob: -8.258671760559082
    7. ')' → logprob: -8.883671760559082
    8. '')' → logprob: -9.196171760559082
    9. '1' → logprob: -9.383671760559082
    10. 'C' → logprob: -9.446171760559082

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05236879736185074
    2. 'elif' → logprob: -3.1773688793182373
    3. ' elif' → logprob: -4.802368640899658
    4. 'else' → logprob: -7.802368640899658
    5. ' else' → logprob: -7.802368640899658
    6. '	elif' → logprob: -8.302369117736816
    7. ' ' → logprob: -10.927369117736816
    8. ')' → logprob: -11.427369117736816
    9. '<|end|>' → logprob: -11.552369117736816
    10. '	else' → logprob: -12.427369117736816

Token 80: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.136652871966362
    2. '   ' → logprob: -2.636652946472168
    3. ' elif' → logprob: -2.886652946472168
    4. '	elif' → logprob: -8.636652946472168
    5. 'else' → logprob: -8.886652946472168
    6. ' else' → logprob: -10.761652946472168
    7. ' ' → logprob: -11.011652946472168
    8. 'el' → logprob: -12.261652946472168
    9. ')' → logprob: -13.636652946472168
    10. '  ' → logprob: -14.136652946472168

Token 81: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.011048170737922192
    2. 'pattern' → logprob: -4.511048316955566
    3. '(pattern' → logprob: -15.011048316955566
    4. ' ' → logprob: -17.38604736328125
    5. ' ' → logprob: -18.26104736328125
    6. ' s' → logprob: -18.63604736328125
    7. '.pattern' → logprob: -18.63604736328125
    8. 's' → logprob: -19.38604736328125
    9. '_pattern' → logprob: -19.38604736328125
    10. 'attern' → logprob: -20.01104736328125

Token 82: '_B' (ID: 3201)
  Prédit: '_B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_B' → logprob: -0.0006782424170523882
    2. '_A' → logprob: -7.750678062438965
    3. '_' → logprob: -9.000678062438965
    4. ' _' → logprob: -10.500678062438965
    5. 'pattern' → logprob: -11.000678062438965
    6. '```' → logprob: -11.000678062438965
    7. ')_' → logprob: -11.500678062438965
    8. '_pattern' → logprob: -12.000678062438965
    9. '=_' → logprob: -12.375678062438965
    10. '._' → logprob: -12.375678062438965

Token 83: '.match' (ID: 21348)
  Prédit: '.match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.match' → logprob: -1.580929347255733e-05
    2. '.' → logprob: -11.125016212463379
    3. ' .' → logprob: -14.625016212463379
    4. '.findall' → logprob: -14.875016212463379
    5. 'match' → logprob: -16.500015258789062
    6. '.matches' → logprob: -16.750015258789062
    7. '	match' → logprob: -17.000015258789062
    8. '.matcher' → logprob: -17.250015258789062
    9. '.Match' → logprob: -18.000015258789062
    10. '.search' → logprob: -18.000015258789062

Token 84: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -15.50000286102295
    4. 's' → logprob: -16.875001907348633
    5. '('' → logprob: -19.000001907348633
    6. '\(' → logprob: -19.000001907348633
    7. '(S' → logprob: -19.500001907348633
    8. '("("' → logprob: -20.000001907348633
    9. '('(' → logprob: -20.000001907348633
    10. '("(' → logprob: -20.500001907348633

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005295606097206473
    2. ':' → logprob: -8.000529289245605
    3. ')' → logprob: -9.250529289245605
    4. '):
' → logprob: -9.375529289245605
    5. '(s' → logprob: -12.625529289245605
    6. 's' → logprob: -13.125529289245605
    7. '==' → logprob: -13.500529289245605
    8. '   ' → logprob: -13.625529289245605
    9. ' ):' → logprob: -13.750529289245605
    10. '():' → logprob: -14.250529289245605

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25321513414382935
    2. 'print' → logprob: -1.5032150745391846
    3. '   ' → logprob: -6.753215312957764
    4. ' print' → logprob: -9.128214836120605
    5. '	print' → logprob: -12.628214836120605
    6. '```' → logprob: -13.003214836120605
    7. '           ' → logprob: -13.878214836120605
    8. '      ' → logprob: -14.128214836120605
    9. ' ' → logprob: -14.503214836120605
    10. '     ' → logprob: -14.628214836120605

Token 87: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011391802690923214
    2. ' print' → logprob: -4.511391639709473
    3. '   ' → logprob: -8.761391639709473
    4. '       ' → logprob: -8.761391639709473
    5. '	print' → logprob: -10.511391639709473
    6. ' ' → logprob: -13.136391639709473
    7. '  ' → logprob: -15.136391639709473
    8. '    ' → logprob: -15.136391639709473
    9. '```' → logprob: -15.511391639709473
    10. '           ' → logprob: -15.886391639709473

Token 88: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.6132633686065674
    2. '(' → logprob: -1.1132633686065674
    3. '("("' → logprob: -2.1132633686065674
    4. '("(' → logprob: -4.738263130187988
    5. '('' → logprob: -8.363263130187988
    6. '("""' → logprob: -10.238263130187988
    7. '(""' → logprob: -10.863263130187988
    8. '("")' → logprob: -10.863263130187988
    9. ' ("' → logprob: -11.863263130187988
    10. '"(' → logprob: -12.113263130187988

Token 89: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00017636561824474484
    2. 'BQ' → logprob: -9.625176429748535
    3. '"B' → logprob: -10.500176429748535
    4. 'Q' → logprob: -10.625176429748535
    5. '"' → logprob: -10.875176429748535
    6. ' B' → logprob: -11.250176429748535
    7. 'A' → logprob: -12.937676429748535
    8. '>B' → logprob: -13.000176429748535
    9. ')' → logprob: -13.125176429748535
    10. 'BB' → logprob: -13.375176429748535

Token 90: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.11609558016061783
    2. ')' → logprob: -2.241095542907715
    3. '")
' → logprob: -6.241095542907715
    4. ')")' → logprob: -7.116095542907715
    5. ')
' → logprob: -7.741095542907715
    6. '()' → logprob: -11.116095542907715
    7. '   ' → logprob: -11.366095542907715
    8. '')' → logprob: -11.616095542907715
    9. '"' → logprob: -11.866095542907715
    10. '```' → logprob: -12.116095542907715

Token 91: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.04274006560444832
    2. '<|end|>' → logprob: -3.4177401065826416
    3. ' else' → logprob: -5.2927398681640625
    4. '```' → logprob: -5.7927398681640625
    5. '   ' → logprob: -7.7927398681640625
    6. 'elif' → logprob: -7.9177398681640625
    7. ')' → logprob: -9.417739868164062
    8. '	else' → logprob: -10.542739868164062
    9. '<|end|>' → logprob: -10.667739868164062
    10. '``' → logprob: -11.417739868164062

Token 92: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0012660634238272905
    2. ' else' → logprob: -7.251266002655029
    3. '<|end|>' → logprob: -8.126266479492188
    4. 'elif' → logprob: -8.876266479492188
    5. '   ' → logprob: -9.251266479492188
    6. '```' → logprob: -11.751266479492188
    7. ')' → logprob: -12.626266479492188
    8. '.' → logprob: -13.126266479492188
    9. 'continue' → logprob: -13.751266479492188
    10. 's' → logprob: -13.751266479492188

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015100015327334404
    2. ':
' → logprob: -4.265100002288818
    3. '       ' → logprob: -7.015100002288818
    4. '   ' → logprob: -11.140100479125977
    5. '):' → logprob: -12.015100479125977
    6. '<|end|>' → logprob: -12.140100479125977
    7. '():
' → logprob: -12.515100479125977
    8. '():' → logprob: -12.765100479125977
    9. '):
' → logprob: -13.640100479125977
    10. ':

' → logprob: -13.765100479125977

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07251637428998947
    2. 'print' → logprob: -2.697516441345215
    3. '   ' → logprob: -6.197516441345215
    4. ' print' → logprob: -7.572516441345215
    5. '```' → logprob: -11.447516441345215
    6. '	print' → logprob: -11.947516441345215
    7. '<|end|>' → logprob: -12.572516441345215
    8. '           ' → logprob: -13.197516441345215
    9. '	' → logprob: -13.822516441345215
    10. '	   ' → logprob: -13.947516441345215

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.1186566047836095e-05
    2. ' print' → logprob: -10.750031471252441
    3. '   ' → logprob: -12.750031471252441
    4. 'None' → logprob: -12.875031471252441
    5. 'C' → logprob: -13.875031471252441
    6. '```' → logprob: -13.875031471252441
    7. 'pass' → logprob: -14.125031471252441
    8. '	print' → logprob: -14.250031471252441
    9. 'continue' → logprob: -15.750031471252441
    10. 'none' → logprob: -16.000030517578125

Token 96: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4780614674091339
    2. '(' → logprob: -0.9780614376068115
    3. '("")' → logprob: -6.103061676025391
    4. '("("' → logprob: -6.478061676025391
    5. '()' → logprob: -9.35306167602539
    6. '('' → logprob: -10.10306167602539
    7. '("""' → logprob: -10.85306167602539
    8. '(""' → logprob: -11.10306167602539
    9. '(None' → logprob: -11.10306167602539
    10. '("(' → logprob: -11.22806167602539

Token 97: 'NA' (ID: 9555)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1443556547164917
    2. 'Unknown' → logprob: -1.6443556547164917
    3. 'None' → logprob: -2.1443557739257812
    4. 'C' → logprob: -2.1443557739257812
    5. 'Invalid' → logprob: -2.2693557739257812
    6. '?' → logprob: -3.1443557739257812
    7. 'NA' → logprob: -3.5193557739257812
    8. 'No' → logprob: -4.394355773925781
    9. 'unknown' → logprob: -4.394355773925781
    10. 'NO' → logprob: -4.769355773925781

Token 98: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0015798516105860472
    2. ')' → logprob: -6.501579761505127
    3. ')")' → logprob: -10.001580238342285
    4. '")
' → logprob: -10.376580238342285
    5. '"' → logprob: -14.501580238342285
    6. ')
' → logprob: -15.376580238342285
    7. '```' → logprob: -15.876580238342285
    8. '')' → logprob: -16.25157928466797
    9. '}")' → logprob: -16.87657928466797
    10. '`)' → logprob: -17.25157928466797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 74
Précision stricte (1ère position): 46.88%
Précision adaptée (1ère position): 52.08%
Précision (top 10): 77.08%
================================================================================
