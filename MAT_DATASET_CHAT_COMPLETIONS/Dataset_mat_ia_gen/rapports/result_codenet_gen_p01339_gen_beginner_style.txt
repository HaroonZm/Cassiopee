================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m = map(int, input().split())
rules = {}
for _ in range(m):
    s, d = map(int, input().split())
    rules[s] = d

mod = 1000000007

count = 0
for state in range(1 << n):
    valid = True
    for s, d in rules.items():
        if (state & (1 << (s - 1))) != 0:  # finger s bends
            if (state & (1 << (d - 1))) == 0:  # finger d does not bend
                valid = False
                break
    if valid:
        count += 1

print(count % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14440923929214478
    2. ',' → logprob: -2.2694091796875
    3. ' =' → logprob: -3.5194091796875
    4. ';' → logprob: -8.0194091796875
    5. ')' → logprob: -8.1444091796875
    6. '```' → logprob: -8.2694091796875
    7. '.' → logprob: -9.0194091796875
    8. '#' → logprob: -9.5194091796875
    9. '*' → logprob: -9.7694091796875
    10. ' ' → logprob: -9.8944091796875

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17804254591464996
    2. ' map' → logprob: -2.5530426502227783
    3. ' input' → logprob: -3.0530426502227783
    4. 'input' → logprob: -4.428042411804199
    5. '0' → logprob: -4.428042411804199
    6. 'map' → logprob: -4.928042411804199
    7. ' n' → logprob: -5.803042411804199
    8. '10' → logprob: -6.053042411804199
    9. ' int' → logprob: -7.428042411804199
    10. '1' → logprob: -8.0530424118042

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08954467624425888
    2. '(lambda' → logprob: -3.3395447731018066
    3. '```' → logprob: -3.9645447731018066
    4. '(int' → logprob: -4.839544773101807
    5. '(str' → logprob: -5.214544773101807
    6. '<|end|>' → logprob: -5.714544773101807
    7. ')' → logprob: -6.464544773101807
    8. '[' → logprob: -6.464544773101807
    9. '_' → logprob: -6.839544773101807
    10. '(n' → logprob: -6.839544773101807

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1487172245979309
    2. '(' → logprob: -2.273717164993286
    3. ')' → logprob: -3.523717164993286
    4. '(str' → logprob: -6.023717403411865
    5. '```' → logprob: -6.898717403411865
    6. '(user' → logprob: -7.648717403411865
    7. '(int' → logprob: -7.773717403411865
    8. '(data' → logprob: -8.523716926574707
    9. 'input' → logprob: -9.023716926574707
    10. '(
' → logprob: -9.273716926574707

Token 7: ' input' (ID: 3422)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7557715773582458
    2. '(' → logprob: -1.6307716369628906
    3. '()' → logprob: -1.8807716369628906
    4. ')' → logprob: -2.0057716369628906
    5. '('' → logprob: -4.130771636962891
    6. '```' → logprob: -5.380771636962891
    7. '(""))' → logprob: -5.880771636962891
    8. '().' → logprob: -5.880771636962891
    9. '`()' → logprob: -5.880771636962891
    10. '(()' → logprob: -6.380771636962891

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001966343028470874
    2. 'strip' → logprob: -6.25196647644043
    3. 'rstrip' → logprob: -10.62696647644043
    4. ')' → logprob: -12.00196647644043
    5. ' split' → logprob: -12.37696647644043
    6. 'read' → logprob: -12.87696647644043
    7. '(split' → logprob: -14.87696647644043
    8. 'spl' → logprob: -16.62696647644043
    9. '_split' → logprob: -16.62696647644043
    10. 'startswith' → logprob: -16.75196647644043

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031831078231334686
    2. '))' → logprob: -3.9068310260772705
    3. '())' → logprob: -4.53183126449585
    4. '()' → logprob: -8.656830787658691
    5. '`)' → logprob: -8.781830787658691
    6. '(' → logprob: -10.281830787658691
    7. ')`' → logprob: -10.281830787658691
    8. '()))' → logprob: -10.531830787658691
    9. ')))' → logprob: -11.906830787658691
    10. ' )' → logprob: -12.156830787658691

Token 11: 'rules' (ID: 50321)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20283782482147217
    2. 'for' → logprob: -2.8278379440307617
    3. '\' → logprob: -3.5778379440307617
    4. '#' → logprob: -4.077837944030762
    5. '```' → logprob: -4.327837944030762
    6. '
' → logprob: -4.327837944030762
    7. '`' → logprob: -4.577837944030762
    8. 'x' → logprob: -4.952837944030762
    9. 'a' → logprob: -5.327837944030762
    10. ',' → logprob: -5.452837944030762

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0689597129821777
    2. ' =' → logprob: -1.0689597129821777
    3. '[' → logprob: -1.9439597129821777
    4. '.' → logprob: -1.9439597129821777
    5. ':' → logprob: -4.068959712982178
    6. '[:]' → logprob: -5.943959712982178
    7. ',' → logprob: -6.193959712982178
    8. '_' → logprob: -6.318959712982178
    9. '[
' → logprob: -7.693959712982178
    10. '```' → logprob: -7.818959712982178

Token 13: ' {}
' (ID: 11421)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.19808924198150635
    2. '[]' → logprob: -1.9480892419815063
    3. '{}' → logprob: -3.948089122772217
    4. ' {}' → logprob: -4.448089122772217
    5. '[' → logprob: -5.198089122772217
    6. ' [' → logprob: -7.448089122772217
    7. 'set' → logprob: -11.323089599609375
    8. '[]}' → logprob: -11.448089599609375
    9. ' ' → logprob: -11.573089599609375
    10. 'dict' → logprob: -12.573089599609375

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008303331211209297
    2. ' for' → logprob: -5.383303165435791
    3. 'f' → logprob: -6.133303165435791
    4. 'a' → logprob: -7.633303165435791
    5. '[' → logprob: -8.00830364227295
    6. 'r' → logprob: -8.25830364227295
    7. 'n' → logprob: -8.38330364227295
    8. '```' → logprob: -10.25830364227295
    9. '\' → logprob: -10.38330364227295
    10. '`' → logprob: -10.75830364227295

Token 15: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47788822650909424
    2. ' ' → logprob: -1.2278882265090942
    3. ' _' → logprob: -2.7278881072998047
    4. '_' → logprob: -3.8528881072998047
    5. 'i' → logprob: -8.602888107299805
    6. ' ‌' → logprob: -8.727888107299805
    7. '  ' → logprob: -10.227888107299805
    8. ' )' → logprob: -12.352888107299805
    9. ' ▁' → logprob: -12.352888107299805
    10. '_i' → logprob: -12.352888107299805

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4227173328399658
    2. 'in' → logprob: -1.1727173328399658
    3. 'n' → logprob: -3.422717332839966
    4. ' ' → logprob: -6.672717094421387
    5. 'i' → logprob: -7.172717094421387
    6. ' n' → logprob: -8.547717094421387
    7. '_' → logprob: -9.047717094421387
    8. ' i' → logprob: -9.172717094421387
    9. ',' → logprob: -10.297717094421387
    10. 'r' → logprob: -10.672717094421387

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011050650849938393
    2. ' range' → logprob: -4.511050701141357
    3. 'n' → logprob: -14.3860502243042
    4. 'input' → logprob: -14.5110502243042
    5. '(range' → logprob: -15.2610502243042
    6. 'r' → logprob: -15.6360502243042
    7. '```' → logprob: -15.6360502243042
    8. '	range' → logprob: -15.6360502243042
    9. ' ' → logprob: -15.8860502243042
    10. 'm' → logprob: -16.136051177978516

Token 18: '(m' (ID: 2145)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2439129501581192
    2. '(' → logprob: -1.743912935256958
    3. ' (' → logprob: -3.743912935256958
    4. ' n' → logprob: -4.118913173675537
    5. 'n' → logprob: -6.493913173675537
    6. ' ' → logprob: -9.993912696838379
    7. ' range' → logprob: -10.118912696838379
    8. '(range' → logprob: -10.368912696838379
    9. 'range' → logprob: -10.618912696838379
    10. '(m' → logprob: -10.993912696838379

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005237548612058163
    2. ')' → logprob: -5.880237579345703
    3. ':' → logprob: -6.755237579345703
    4. ' ):' → logprob: -7.130237579345703
    5. '):
' → logprob: -7.755237579345703
    6. ' )' → logprob: -11.505237579345703
    7. ' :' → logprob: -12.005237579345703
    8. '```' → logprob: -12.630237579345703
    9. '+' → logprob: -12.755237579345703
    10. ',' → logprob: -13.380237579345703

Token 20: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3329371213912964
    2. '   ' → logprob: -1.8329371213912964
    3. ' rule' → logprob: -2.332937240600586
    4. ' key' → logprob: -4.332937240600586
    5. ' s' → logprob: -6.457937240600586
    6. '    ' → logprob: -6.582937240600586
    7. 'rule' → logprob: -6.582937240600586
    8. ' input' → logprob: -6.957937240600586
    9. ' word' → logprob: -6.957937240600586
    10. 'line' → logprob: -6.957937240600586

Token 21: ' s' (ID: 265)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8109130263328552
    2. ' key' → logprob: -1.4359130859375
    3. ' rule' → logprob: -2.1859130859375
    4. 'rule' → logprob: -2.1859130859375
    5. 'line' → logprob: -3.3109130859375
    6. 'key' → logprob: -3.4359130859375
    7. '   ' → logprob: -5.6859130859375
    8. 'a' → logprob: -5.8109130859375
    9. 'k' → logprob: -5.9359130859375
    10. ' k' → logprob: -6.1859130859375

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26463815569877625
    2. 'tr' → logprob: -2.0146381855010986
    3. 't' → logprob: -3.3896381855010986
    4. ' ,' → logprob: -3.6396381855010986
    5. ' =' → logprob: -3.6396381855010986
    6. ']' → logprob: -6.1396379470825195
    7. 'tring' → logprob: -6.3896379470825195
    8. 'ource' → logprob: -6.3896379470825195
    9. ',t' → logprob: -6.5146379470825195
    10. '=' → logprob: -6.6396379470825195

Token 23: ' d' (ID: 272)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6810045838356018
    2. 'e' → logprob: -1.306004524230957
    3. 'd' → logprob: -1.556004524230957
    4. 'c' → logprob: -5.931004524230957
    5. ' t' → logprob: -6.056004524230957
    6. 'p' → logprob: -6.056004524230957
    7. ' e' → logprob: -6.681004524230957
    8. 'a' → logprob: -7.181004524230957
    9. ' d' → logprob: -7.306004524230957
    10. 'r' → logprob: -7.306004524230957

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23437166213989258
    2. ' =' → logprob: -1.6093716621398926
    3. ',' → logprob: -4.734371662139893
    4. ')' → logprob: -9.609371185302734
    5. 's' → logprob: -10.609371185302734
    6. ' ,' → logprob: -11.109371185302734
    7. ' ' → logprob: -12.109371185302734
    8. '_' → logprob: -12.359371185302734
    9. ']' → logprob: -13.609371185302734
    10. '=int' → logprob: -13.609371185302734

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.23291851580142975
    2. ' input' → logprob: -1.7329185009002686
    3. 'map' → logprob: -4.107918739318848
    4. 'input' → logprob: -4.232918739318848
    5. '   ' → logprob: -10.482918739318848
    6. ' ' → logprob: -10.982918739318848
    7. '    ' → logprob: -12.732918739318848
    8. '	map' → logprob: -12.732918739318848
    9. '  ' → logprob: -12.857918739318848
    10. ' ' → logprob: -13.670418739318848

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0020750751718878746
    2. '(' → logprob: -6.8770751953125
    3. '(str' → logprob: -6.8770751953125
    4. '<int' → logprob: -13.1270751953125
    5. ' (' → logprob: -13.5020751953125
    6. 'int' → logprob: -13.6270751953125
    7. '[int' → logprob: -13.6270751953125
    8. '(
' → logprob: -13.7520751953125
    9. '(lambda' → logprob: -14.6270751953125
    10. '<|end|>' → logprob: -14.6270751953125

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024913568049669266
    2. ',input' → logprob: -6.002491474151611
    3. '(),' → logprob: -11.752490997314453
    4. '(' → logprob: -12.752490997314453
    5. 'input' → logprob: -13.252490997314453
    6. ' ,' → logprob: -13.502490997314453
    7. ',int' → logprob: -14.502490997314453
    8. '(input' → logprob: -14.752490997314453
    9. '`,' → logprob: -15.002490997314453
    10. ')' → logprob: -16.002490997314453

Token 28: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759415030479431
    2. 'input' → logprob: -0.8259415030479431
    3. ')' → logprob: -14.70094108581543
    4. ',input' → logprob: -14.95094108581543
    5. '(input' → logprob: -15.20094108581543
    6. '	input' → logprob: -15.45094108581543
    7. '=input' → logprob: -15.45094108581543
    8. ' ' → logprob: -15.70094108581543
    9. '_input' → logprob: -15.70094108581543
    10. 's' → logprob: -16.20094108581543

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -17.625001907348633
    4. '(' → logprob: -17.750001907348633
    5. '.' → logprob: -18.000001907348633
    6. '.split' → logprob: -18.750001907348633
    7. ')' → logprob: -18.750001907348633
    8. '())' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.250001907348633
    10. '()-' → logprob: -20.250001907348633

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'spl' → logprob: -15.625
    3. '(split' → logprob: -16.25
    4. 'strip' → logprob: -16.5
    5. ' split' → logprob: -16.875
    6. ')' → logprob: -18.5
    7. 'rstrip' → logprob: -18.5
    8. 's' → logprob: -19.125
    9. 'plit' → logprob: -20.0
    10. '.split' → logprob: -20.5

Token 31: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008468599058687687
    2. '()' → logprob: -5.1334686279296875
    3. '())' → logprob: -6.0084686279296875
    4. '))' → logprob: -9.633468627929688
    5. ')
' → logprob: -12.633468627929688
    6. ')`' → logprob: -12.633468627929688
    7. '`)' → logprob: -13.008468627929688
    8. '(' → logprob: -13.883468627929688
    9. ' )' → logprob: -14.133468627929688
    10. '),' → logprob: -14.508468627929688

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0897149071097374
    2. 'rules' → logprob: -2.589715003967285
    3. ' if' → logprob: -5.464715003967285
    4. ' rules' → logprob: -5.714715003967285
    5. 'if' → logprob: -6.464715003967285
    6. '    
' → logprob: -7.214715003967285
    7. '```' → logprob: -7.714715003967285
    8. 's' → logprob: -8.214715003967285
    9. 'r' → logprob: -9.589715003967285
    10. ' ' → logprob: -10.839715003967285

Token 33: ' rules' (ID: 9607)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0619262233376503
    2. ' rules' → logprob: -3.6869261264801025
    3. ' if' → logprob: -3.8119261264801025
    4. 'rules' (adapté à ' rules') → logprob: -4.436926364898682
    5. 'if' → logprob: -7.436926364898682
    6. '    
' → logprob: -8.686925888061523
    7. '```' → logprob: -9.061925888061523
    8. '_rules' → logprob: -9.686925888061523
    9. ')' → logprob: -10.436925888061523
    10. '.rules' → logprob: -10.811925888061523

Token 34: '[s' (ID: 24177)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.622532308101654
    2. '[s' → logprob: -0.872532308101654
    3. '.setdefault' → logprob: -3.122532367706299
    4. '[(' → logprob: -6.997532367706299
    5. '.' → logprob: -7.872532367706299
    6. '[...]' → logprob: -9.62253189086914
    7. '[n' → logprob: -10.74753189086914
    8. '[]' → logprob: -11.37253189086914
    9. '[f' → logprob: -11.62253189086914
    10. '```' → logprob: -11.74753189086914

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006293614394962788
    2. ']=' → logprob: -5.506293773651123
    3. '].' → logprob: -6.131293773651123
    4. ' ]' → logprob: -11.131293296813965
    5. '])' → logprob: -11.756293296813965
    6. ')]' → logprob: -12.006293296813965
    7. ')' → logprob: -13.006293296813965
    8. ']+=' → logprob: -13.631293296813965
    9. ']={' → logprob: -13.631293296813965
    10. '[' → logprob: -13.881293296813965

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13776499032974243
    2. ' =' → logprob: -2.6377649307250977
    3. '[' → logprob: -3.1377649307250977
    4. ']' → logprob: -5.012764930725098
    5. '.append' → logprob: -5.887764930725098
    6. '.' → logprob: -6.387764930725098
    7. '.setdefault' → logprob: -7.012764930725098
    8. '=[' → logprob: -7.387764930725098
    9. ' ' → logprob: -8.637764930725098
    10. ']=' → logprob: -8.762764930725098

Token 37: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1270715296268463
    2. ' d' → logprob: -2.1270716190338135
    3. '[' → logprob: -10.502071380615234
    4. '[d' → logprob: -10.502071380615234
    5. ' ' → logprob: -10.752071380615234
    6. '[]' → logprob: -10.877071380615234
    7. 'rules' → logprob: -11.877071380615234
    8. ' [' → logprob: -12.127071380615234
    9. ' rules' → logprob: -12.127071380615234
    10. '	d' → logprob: -12.252071380615234

Token 38: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8116340637207031
    2. '
' → logprob: -1.3116340637207031
    3. '[' → logprob: -2.186634063720703
    4. '<|end|>' → logprob: -3.561634063720703
    5. 'for' → logprob: -3.811634063720703
    6. ' ' → logprob: -3.811634063720703
    7. '#' → logprob: -4.311634063720703
    8. 'n' → logprob: -4.436634063720703
    9. '' → logprob: -4.811634063720703
    10. ',' → logprob: -4.936634063720703

Token 39: 'mod' (ID: 4847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25557467341423035
    2. 'f' → logprob: -2.6305747032165527
    3. 'n' → logprob: -3.2555747032165527
    4. 'a' → logprob: -3.5055747032165527
    5. 'i' → logprob: -3.5055747032165527
    6. 'b' → logprob: -4.255574703216553
    7. 'p' → logprob: -5.380574703216553
    8. 'result' → logprob: -5.505574703216553
    9. 't' → logprob: -5.630574703216553
    10. 'count' → logprob: -5.880574703216553

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06276680529117584
    2. 'ulus' → logprob: -4.312767028808594
    3. '=' → logprob: -4.562767028808594
    4. ' =' → logprob: -4.812767028808594
    5. 'ul' → logprob: -5.062767028808594
    6. 'ulo' → logprob: -5.562767028808594
    7. '_mod' → logprob: -5.812767028808594
    8. 'ulu' → logprob: -6.187767028808594
    9. 'u' → logprob: -6.562767028808594
    10. 'ules' → logprob: -6.562767028808594

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11479704082012177
    2. '10' → logprob: -2.2397971153259277
    3. '100' → logprob: -6.239797115325928
    4. '1' → logprob: -10.86479663848877
    5. '998' → logprob: -13.61479663848877
    6. ' int' → logprob: -14.36479663848877
    7. 'int' → logprob: -14.86479663848877
    8. ' (' → logprob: -14.98979663848877
    9. ' ' → logprob: -15.48979663848877
    10. '109' → logprob: -15.86479663848877

Token 42: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07038351893424988
    2. '100' → logprob: -2.6953835487365723
    3. '1' → logprob: -8.445383071899414
    4. '998' → logprob: -9.070383071899414
    5. ' ' → logprob: -9.320383071899414
    6. '(' → logprob: -10.695383071899414
    7. 'int' → logprob: -12.945383071899414
    8. 'pow' → logprob: -14.320383071899414
    9. '2' → logprob: -14.695383071899414
    10. '0' → logprob: -15.195383071899414

Token 43: '000' (ID: 1302)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.2590116262435913
    2. '%' → logprob: -1.6340116262435913
    3. '+' → logprob: -2.009011745452881
    4. '**' → logprob: -2.634011745452881
    5. '0' → logprob: -3.009011745452881
    6. '\n' → logprob: -3.009011745452881
    7. '100' → logprob: -3.384011745452881
    8. '```' → logprob: -3.509011745452881
    9. '=' → logprob: -3.634011745452881
    10. ' ' → logprob: -3.759011745452881

Token 44: '000' (ID: 1302)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6514500975608826
    2. '0' → logprob: -1.0264501571655273
    3. 'dp' → logprob: -2.5264501571655273
    4. '_' → logprob: -4.026450157165527
    5. '=' → logprob: -4.776450157165527
    6. '#' → logprob: -6.526450157165527
    7. ' =' → logprob: -6.651450157165527
    8. '_dp' → logprob: -6.776450157165527
    9. ')' → logprob: -7.026450157165527
    10. '1' → logprob: -7.026450157165527

Token 45: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04600135609507561
    2. '+' → logprob: -3.796001434326172
    3. '0' → logprob: -4.171001434326172
    4. '9' → logprob: -5.046001434326172
    5. ')' → logprob: -8.296001434326172
    6. ' +' → logprob: -8.421001434326172
    7. ' ' → logprob: -9.671001434326172
    8. '```' → logprob: -10.921001434326172
    9. ']' → logprob: -11.171001434326172
    10. '}' → logprob: -11.921001434326172

Token 46: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18144886195659637
    2. 'dp' → logprob: -1.9314488172531128
    3. '\n' → logprob: -5.056448936462402
    4. 'n' → logprob: -5.306448936462402
    5. '
' → logprob: -5.806448936462402
    6. 'result' → logprob: -6.556448936462402
    7. ' 
' → logprob: -6.806448936462402
    8. '' → logprob: -6.931448936462402
    9. '  
' → logprob: -7.306448936462402
    10. 'a' → logprob: -7.806448936462402

Token 47: 'count' (ID: 5420)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0014726031804457307
    2. 'dist' → logprob: -7.001472473144531
    3. 'ways' → logprob: -8.876472473144531
    4. 'result' → logprob: -9.251472473144531
    5. 'ans' → logprob: -9.626472473144531
    6. 'paths' → logprob: -9.876472473144531
    7. 'f' → logprob: -10.751472473144531
    8. 'for' → logprob: -10.876472473144531
    9. 'def' → logprob: -10.876472473144531
    10. '#' → logprob: -11.001472473144531

Token 48: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5057253837585449
    2. 's' → logprob: -1.005725383758545
    3. '[' → logprob: -4.255725383758545
    4. '(' → logprob: -4.880725383758545
    5. ' =' → logprob: -5.005725383758545
    6. '=' → logprob: -6.505725383758545
    7. '_s' → logprob: -8.380725860595703
    8. ' ' → logprob: -8.755725860595703
    9. '[]' → logprob: -8.755725860595703
    10. '(s' → logprob: -10.005725860595703

Token 49: ' ' (ID: 220)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.027257798239588737
    2. '[' → logprob: -3.9022576808929443
    3. '[n' → logprob: -5.902257919311523
    4. ' ' → logprob: -6.402257919311523
    5. '0' → logprob: -6.902257919311523
    6. '1' → logprob: -7.402257919311523
    7. ' {' → logprob: -8.277257919311523
    8. '{' → logprob: -8.777257919311523
    9. '{}' → logprob: -9.527257919311523
    10. ' n' → logprob: -9.527257919311523

Token 50: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0836532860994339
    2. '[n' → logprob: -2.583653211593628
    3. '{' → logprob: -5.833653450012207
    4. '0' → logprob: -7.458653450012207
    5. '1' → logprob: -7.583653450012207
    6. '[m' → logprob: -7.958653450012207
    7. '[int' → logprob: -8.583653450012207
    8. '[s' → logprob: -9.833653450012207
    9. 'n' → logprob: -10.083653450012207
    10. ' [' → logprob: -10.458653450012207

Token 51: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3662649095058441
    2. ' for' → logprob: -1.9912649393081665
    3. '<|end|>' → logprob: -2.741264820098877
    4. '
' → logprob: -3.366264820098877
    5. ' ' → logprob: -3.741264820098877
    6. '\' → logprob: -3.866264820098877
    7. 'n' → logprob: -5.491264820098877
    8. ',' → logprob: -5.616264820098877
    9. '\n' → logprob: -5.616264820098877
    10. ' 
' → logprob: -5.991264820098877

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20546622574329376
    2. 'dp' → logprob: -2.8304662704467773
    3. ' for' → logprob: -2.9554662704467773
    4. 'def' → logprob: -3.5804662704467773
    5. '
' → logprob: -5.080466270446777
    6. ',' → logprob: -5.330466270446777
    7. 'f' → logprob: -5.330466270446777
    8. ' ' → logprob: -5.455466270446777
    9. 'a' → logprob: -5.705466270446777
    10. '(' → logprob: -5.955466270446777

Token 53: ' state' (ID: 2608)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2607239782810211
    2. ' _' → logprob: -1.6357239484786987
    3. ' ' → logprob: -4.135724067687988
    4. '_' → logprob: -4.885724067687988
    5. ' s' → logprob: -5.135724067687988
    6. ' n' → logprob: -5.635724067687988
    7. ' range' → logprob: -7.135724067687988
    8. 'i' → logprob: -8.010724067687988
    9. ' x' → logprob: -9.385724067687988
    10. ' in' → logprob: -9.760724067687988

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12764446437358856
    2. ',' → logprob: -2.6276445388793945
    3. '_' → logprob: -3.8776445388793945
    4. 'in' → logprob: -4.0026445388793945
    5. ' ' → logprob: -5.7526445388793945
    6. ' ,' → logprob: -6.0026445388793945
    7. 's' → logprob: -6.8776445388793945
    8. '1' → logprob: -7.5026445388793945
    9. ' _' → logprob: -8.252644538879395
    10. '_,' → logprob: -8.877644538879395

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020765867084264755
    2. 'range' → logprob: -3.895765781402588
    3. ' rules' → logprob: -9.145766258239746
    4. 'rules' → logprob: -10.520766258239746
    5. ' r' → logprob: -10.770766258239746
    6. '(range' → logprob: -10.895766258239746
    7. ' ' → logprob: -11.020766258239746
    8. ' rang' → logprob: -11.895766258239746
    9. 'r' → logprob: -12.145766258239746
    10. '	range' → logprob: -12.395766258239746

Token 56: '(' (ID: 7)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21369007229804993
    2. '1' → logprob: -1.7136900424957275
    3. ' n' → logprob: -4.713690280914307
    4. '(' → logprob: -6.588690280914307
    5. '2' → logprob: -6.963690280914307
    6. '(n' → logprob: -7.713690280914307
    7. ' ' → logprob: -8.213689804077148
    8. '   ' → logprob: -9.338689804077148
    9. ')' → logprob: -10.838689804077148
    10. '0' → logprob: -11.213689804077148

Token 58: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0041330186650156975
    2. ',n' → logprob: -6.129133224487305
    3. ' ,' → logprob: -6.254133224487305
    4. '+' → logprob: -12.004133224487305
    5. ',m' → logprob: -12.004133224487305
    6. '1' → logprob: -12.379133224487305
    7. ',
' → logprob: -13.629133224487305
    8. 'n' → logprob: -13.629133224487305
    9. ',

' → logprob: -14.129133224487305
    10. 'm' → logprob: -14.504133224487305

Token 59: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009254236705601215
    2. 'm' → logprob: -4.759254455566406
    3. ' n' → logprob: -7.384254455566406
    4. '(n' → logprob: -11.509254455566406
    5. ' m' → logprob: -12.759254455566406
    6. '_n' → logprob: -13.509254455566406
    7. ')n' → logprob: -14.009254455566406
    8. '   ' → logprob: -14.259254455566406
    9. '```' → logprob: -14.509254455566406
    10. ')' → logprob: -14.509254455566406

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003337969828862697
    2. ' ):' → logprob: -8.875333786010742
    3. ':' → logprob: -9.000333786010742
    4. ')' → logprob: -9.750333786010742
    5. '):
' → logprob: -11.875333786010742
    6. '():' → logprob: -13.750333786010742
    7. ',' → logprob: -14.250333786010742
    8. ']:' → logprob: -14.375333786010742
    9. '}:' → logprob: -14.625333786010742
    10. '+' → logprob: -15.375333786010742

Token 61: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28527891635894775
    2. '   ' → logprob: -2.035278797149658
    3. ' :' → logprob: -2.785278797149658
    4. '    ' → logprob: -3.535278797149658
    5. ' ' → logprob: -4.535278797149658
    6. ':
' → logprob: -5.410278797149658
    7. ' :
' → logprob: -6.035278797149658
    8. '    
' → logprob: -6.410278797149658
    9. ' 
' → logprob: -6.535278797149658
    10. '<|end|>' → logprob: -6.660278797149658

Token 62: ' valid' (ID: 4529)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.0707125663757324
    2. ' :' → logprob: -1.0707125663757324
    3. ' ' → logprob: -1.9457125663757324
    4. ':' → logprob: -1.9457125663757324
    5. '     
' → logprob: -4.195712566375732
    6. ' :
' → logprob: -5.445712566375732
    7. ' 
' → logprob: -5.945712566375732
    8. '   ' → logprob: -6.195712566375732
    9. '
' → logprob: -7.195712566375732
    10. ' if' → logprob: -7.320712566375732

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28385481238365173
    2. '=' → logprob: -2.1588547229766846
    3. '_' → logprob: -2.2838547229766846
    4. ' ' → logprob: -3.5338547229766846
    5. ':' → logprob: -8.158854484558105
    6. ' _' → logprob: -10.033854484558105
    7. 'if' → logprob: -10.408854484558105
    8. ' |=' → logprob: -10.533854484558105
    9. '_=' → logprob: -10.533854484558105
    10. '  ' → logprob: -10.658854484558105

Token 64: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.12695813179016113
    2. 'True' → logprob: -2.126958131790161
    3. '   ' → logprob: -11.626957893371582
    4. '(True' → logprob: -11.626957893371582
    5. ' ' → logprob: -12.251957893371582
    6. '1' → logprob: -12.751957893371582
    7. 'False' → logprob: -13.251957893371582
    8. '0' → logprob: -13.876957893371582
    9. ' False' → logprob: -14.126957893371582
    10. '=True' → logprob: -14.376957893371582

Token 65: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5432047247886658
    2. '<|end|>' → logprob: -1.5432047843933105
    3. '   ' → logprob: -1.7932047843933105
    4. ':' → logprob: -4.4182047843933105
    5. ' 
' → logprob: -4.5432047843933105
    6. ' ' → logprob: -5.4182047843933105
    7. '    
' → logprob: -5.7932047843933105
    8. '  
' → logprob: -5.9182047843933105
    9. ' for' → logprob: -6.7932047843933105
    10. '\n' → logprob: -6.9182047843933105

Token 67: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762508511543274
    2. 'for' (adapté à ' for') → logprob: -1.5762507915496826
    3. ' 
' → logprob: -1.8262507915496826
    4. ' ' → logprob: -3.7012507915496826
    5. '\n' → logprob: -4.076251029968262
    6. '
' → logprob: -4.076251029968262
    7. '    
' → logprob: -5.701251029968262
    8. '\' → logprob: -6.451251029968262
    9. '   ' → logprob: -6.451251029968262
    10. '<|end|>' → logprob: -6.826251029968262

Token 68: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07934334874153137
    2. 's' → logprob: -2.704343318939209
    3. ' key' → logprob: -5.204343318939209
    4. ' k' → logprob: -7.329343318939209
    5. ' rule' → logprob: -7.329343318939209
    6. ' u' → logprob: -7.829343318939209
    7. 'key' → logprob: -7.954343318939209
    8. ' i' → logprob: -8.079343795776367
    9. 'rule' → logprob: -8.204343795776367
    10. ' state' → logprob: -8.579343795776367

Token 69: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033207718282938004
    2. 'in' → logprob: -3.783207654953003
    3. ',' → logprob: -4.658207893371582
    4. ' ' → logprob: -8.158207893371582
    5. ' ,' → logprob: -10.033207893371582
    6. 'n' → logprob: -10.908207893371582
    7. ' i' → logprob: -11.158207893371582
    8. '	in' → logprob: -11.158207893371582
    9. 's' → logprob: -11.533207893371582
    10. '<|end|>' → logprob: -11.658207893371582

Token 70: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019299437990412116
    2. ' d' → logprob: -6.251929759979248
    3. ' ' → logprob: -14.251930236816406
    4. 't' → logprob: -15.376930236816406
    5. '   ' → logprob: -15.751930236816406
    6. '	d' → logprob: -16.126930236816406
    7. 's' → logprob: -17.501930236816406
    8. 'e' → logprob: -17.501930236816406
    9. ' in' → logprob: -18.001930236816406
    10. '>d' → logprob: -18.001930236816406

Token 71: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5761394500732422
    2. ' in' → logprob: -0.8261394500732422
    3. ' ' → logprob: -9.576139450073242
    4. ',' → logprob: -9.701139450073242
    5. 's' → logprob: -10.951139450073242
    6. 'n' → logprob: -11.451139450073242
    7. '<|end|>' → logprob: -11.451139450073242
    8. 'i' → logprob: -11.701139450073242
    9. '	in' → logprob: -12.326139450073242
    10. '_in' → logprob: -13.076139450073242

Token 72: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.0003357006062287837
    2. ' rules' → logprob: -8.000335693359375
    3. '.rules' → logprob: -15.750335693359375
    4. 'rule' → logprob: -16.375335693359375
    5. '_rules' → logprob: -18.000335693359375
    6. 'r' → logprob: -18.250335693359375
    7. 'items' → logprob: -18.625335693359375
    8. 'Rules' → logprob: -18.750335693359375
    9. '```' → logprob: -20.500335693359375
    10. 'ules' → logprob: -20.875335693359375

Token 73: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0017685896018519998
    2. '.' → logprob: -6.376768589019775
    3. 'items' → logprob: -9.751769065856934
    4. '.iteritems' → logprob: -11.876769065856934
    5. '.Items' → logprob: -14.126769065856934
    6. ' .' → logprob: -15.626769065856934
    7. ' items' → logprob: -15.876769065856934
    8. '.values' → logprob: -16.001768112182617
    9. '_items' → logprob: -16.126768112182617
    10. '	items' → logprob: -18.001768112182617

Token 74: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011071049608290195
    2. '()' → logprob: -4.51107120513916
    3. '():
' → logprob: -11.38607120513916
    4. '(' → logprob: -12.26107120513916
    5. ':' → logprob: -13.01107120513916
    6. ' ():' → logprob: -13.26107120513916
    7. '()>' → logprob: -13.76107120513916
    8. ' ()' → logprob: -14.26107120513916
    9. '():

' → logprob: -15.13607120513916
    10. '()">' → logprob: -15.63607120513916

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06913622468709946
    2. '<|end|>' → logprob: -3.319136142730713
    3. '   ' → logprob: -4.569136142730713
    4. ':' → logprob: -4.819136142730713
    5. ' ' → logprob: -5.569136142730713
    6. '
' → logprob: -5.944136142730713
    7. '    ' → logprob: -6.194136142730713
    8. ' if' → logprob: -7.319136142730713
    9. '<|end|>' → logprob: -7.819136142730713
    10. ':
' → logprob: -7.819136142730713

Token 76: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7325019240379333
    2. ' (' → logprob: -1.7325019836425781
    3. '((' → logprob: -1.9825019836425781
    4. '(state' → logprob: -2.357501983642578
    5. ' ((' → logprob: -2.482501983642578
    6. '(not' → logprob: -4.732501983642578
    7. 'not' → logprob: -4.857501983642578
    8. '(((' → logprob: -5.357501983642578
    9. '(' → logprob: -6.482501983642578
    10. ' state' → logprob: -6.982501983642578

Token 78: 'state' (ID: 5294)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.5501538515090942
    2. 'state' → logprob: -1.5501538515090942
    3. ' (' → logprob: -1.9251538515090942
    4. ' state' → logprob: -2.8001537322998047
    5. '   ' → logprob: -6.300153732299805
    6. ' not' → logprob: -7.300153732299805
    7. ' ((' → logprob: -7.425153732299805
    8. '((' → logprob: -7.675153732299805
    9. ')' → logprob: -8.425153732299805
    10. 'not' → logprob: -8.800153732299805

Token 79: ' &' (ID: 827)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.3314313590526581
    2. '&' → logprob: -1.7064313888549805
    3. ' &' → logprob: -2.3314313888549805
    4. ' >>' → logprob: -5.7064313888549805
    5. ' ' → logprob: -10.33143138885498
    6. ' ' → logprob: -10.58143138885498
    7. '&gt' → logprob: -11.83143138885498
    8. '```' → logprob: -11.83143138885498
    9. '&r' → logprob: -12.08143138885498
    10. '&nbsp' → logprob: -12.45643138885498

Token 80: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4770110845565796
    2. ' (' → logprob: -0.9770110845565796
    3. ')' → logprob: -5.977011203765869
    4. 's' → logprob: -8.852010726928711
    5. '(s' → logprob: -9.352010726928711
    6. '   ' → logprob: -10.227010726928711
    7. ')(' → logprob: -10.227010726928711
    8. '(d' → logprob: -10.977010726928711
    9. 'd' → logprob: -11.102010726928711
    10. ' s' → logprob: -11.227010726928711

Token 81: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10282730311155319
    2. ' (' → logprob: -2.852827310562134
    3. '1' → logprob: -3.227827310562134
    4. ' ' → logprob: -8.102827072143555
    5. ')' → logprob: -9.852827072143555
    6. '   ' → logprob: -10.852827072143555
    7. '```' → logprob: -12.477827072143555
    8. '           ' → logprob: -12.602827072143555
    9. ')(' → logprob: -13.727827072143555
    10. '  ' → logprob: -13.727827072143555

Token 82: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.49143755435943604
    2. '<<' → logprob: -1.116437554359436
    3. '<' → logprob: -2.8664374351501465
    4. ' <' → logprob: -6.2414374351501465
    5. ')' → logprob: -6.8664374351501465
    6. ' ' → logprob: -7.4914374351501465
    7. '<<(' → logprob: -9.116437911987305
    8. '>' → logprob: -9.616437911987305
    9. '&lt' → logprob: -10.741437911987305
    10. '  ' → logprob: -10.866437911987305

Token 83: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023039663210511208
    2. '(s' → logprob: -4.023039817810059
    3. ' s' → logprob: -5.773039817810059
    4. 'd' → logprob: -7.648039817810059
    5. ')' → logprob: -7.773039817810059
    6. ' (' → logprob: -8.148039817810059
    7. '(' → logprob: -8.648039817810059
    8. '(n' → logprob: -9.273039817810059
    9. 'n' → logprob: -9.648039817810059
    10. '   ' → logprob: -9.773039817810059

Token 84: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.045004844665527344
    2. '(s' → logprob: -3.5450048446655273
    3. 'd' → logprob: -5.045004844665527
    4. 'n' → logprob: -5.545004844665527
    5. '(n' → logprob: -6.295004844665527
    6. ' s' → logprob: -6.920004844665527
    7. ')' → logprob: -7.545004844665527
    8. '(d' → logprob: -7.670004844665527
    9. '(' → logprob: -7.795004844665527
    10. ' (' → logprob: -8.045004844665527

Token 85: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31396710872650146
    2. ')))' → logprob: -2.063967227935791
    3. ' -' → logprob: -2.063967227935791
    4. '))' → logprob: -4.313967227935791
    5. '1' → logprob: -7.313967227935791
    6. ' ' → logprob: -7.438967227935791
    7. ' ))' → logprob: -7.813967227935791
    8. ')' → logprob: -8.438966751098633
    9. ' n' → logprob: -9.938966751098633
    10. '   ' → logprob: -10.188966751098633

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008963356958702207
    2. ' ' → logprob: -7.125896453857422
    3. '2' → logprob: -9.875896453857422
    4. 'd' → logprob: -10.875896453857422
    5. '   ' → logprob: -12.438396453857422
    6. ' d' → logprob: -12.688396453857422
    7. '```' → logprob: -12.813396453857422
    8. ')' → logprob: -13.000896453857422
    9. '0' → logprob: -13.750896453857422
    10. 's' → logprob: -13.875896453857422

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.375538163818419e-05
    2. '2' → logprob: -9.875083923339844
    3. ' ' → logprob: -10.875083923339844
    4. ')' → logprob: -12.250083923339844
    5. 's' → logprob: -13.125083923339844
    6. 'd' → logprob: -13.500083923339844
    7. 'n' → logprob: -13.750083923339844
    8. '```' → logprob: -13.812583923339844
    9. '   ' → logprob: -14.875083923339844
    10. '))' → logprob: -14.937583923339844

Token 88: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01992015726864338
    2. '))' → logprob: -4.019920349121094
    3. ' ' → logprob: -6.894920349121094
    4. ')' → logprob: -7.269920349121094
    5. '))))' → logprob: -11.019920349121094
    6. '   ' → logprob: -11.394920349121094
    7. ' ))' → logprob: -11.394920349121094
    8. '')))' → logprob: -12.519920349121094
    9. '0' → logprob: -13.394920349121094
    10. '  ' → logprob: -13.519920349121094

Token 89: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0055683632381260395
    2. ' and' → logprob: -5.505568504333496
    3. ' )' → logprob: -7.880568504333496
    4. ')!=' → logprob: -7.880568504333496
    5. 'and' → logprob: -8.255568504333496
    6. ')>' → logprob: -8.755568504333496
    7. ')==' → logprob: -9.130568504333496
    8. '!=' → logprob: -9.255568504333496
    9. '>' → logprob: -10.380568504333496
    10. '==' → logprob: -10.505568504333496

Token 90: ' ' (ID: 220)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5830543637275696
    2. '0' → logprob: -1.0830543041229248
    3. '(' → logprob: -2.583054304122925
    4. ' ((' → logprob: -4.458054542541504
    5. ' ' → logprob: -4.958054542541504
    6. '((' → logprob: -5.208054542541504
    7. '(d' → logprob: -5.958054542541504
    8. '>' → logprob: -7.833054542541504
    9. '(s' → logprob: -8.208054542541504
    10. 'd' → logprob: -10.333054542541504

Token 91: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38519230484962463
    2. '0' → logprob: -1.5101922750473022
    3. ' (' → logprob: -2.385192394256592
    4. ' ' → logprob: -6.135192394256592
    5. '(d' → logprob: -6.260192394256592
    6. '((' → logprob: -6.260192394256592
    7. ' ((' → logprob: -7.635192394256592
    8. '(s' → logprob: -9.010191917419434
    9. '>' → logprob: -10.510191917419434
    10. 'd' → logprob: -10.885191917419434

Token 92: ':' (ID: 25)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003862427780404687
    2. 'and' → logprob: -5.753862380981445
    3. ' ' → logprob: -7.378862380981445
    4. ':' → logprob: -10.128862380981445
    5. '   ' → logprob: -12.503862380981445
    6. '    ' → logprob: -12.753862380981445
    7. '  ' → logprob: -13.003862380981445
    8. '	and' → logprob: -13.253862380981445
    9. ':
' → logprob: -13.253862380981445
    10. '<|end|>' → logprob: -13.378862380981445

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5803507566452026
    2. ' and' → logprob: -1.7053507566452026
    3. '<|end|>' → logprob: -1.7053507566452026
    4. '           ' → logprob: -3.955350875854492
    5. '       ' → logprob: -4.205350875854492
    6. ' 
' → logprob: -4.580350875854492
    7. '
' → logprob: -4.955350875854492
    8. ' if' → logprob: -5.080350875854492
    9. '        ' → logprob: -5.955350875854492
    10. '  ' → logprob: -5.955350875854492

Token 94: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6491067409515381
    2. '           ' → logprob: -1.274106740951538
    3. '       ' → logprob: -2.774106740951538
    4. ' ' → logprob: -3.149106740951538
    5. 'if' → logprob: -3.149106740951538
    6. ' 
' → logprob: -4.399106979370117
    7. ' continue' → logprob: -4.774106979370117
    8. ' and' → logprob: -5.649106979370117
    9. '        
' → logprob: -5.649106979370117
    10. '            
' → logprob: -5.649106979370117

Token 95: ' finger' (ID: 24104)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6304372549057007
    2. ' if' → logprob: -1.2554372549057007
    3. '(state' → logprob: -2.5054373741149902
    4. '           ' → logprob: -3.0054373741149902
    5. 'if' → logprob: -3.3804373741149902
    6. ' not' → logprob: -4.38043737411499
    7. '   ' → logprob: -7.25543737411499
    8. ' ((' → logprob: -7.25543737411499
    9. ' ' → logprob: -7.63043737411499
    10. '       ' → logprob: -7.75543737411499

Token 96: ' s' (ID: 265)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35497546195983887
    2. 's' → logprob: -2.104975461959839
    3. ' not' → logprob: -2.229975461959839
    4. ' ' → logprob: -4.479975700378418
    5. '   ' → logprob: -4.604975700378418
    6. ' s' → logprob: -5.104975700378418
    7. ' if' → logprob: -5.104975700378418
    8. ' in' → logprob: -5.229975700378418
    9. ' raised' → logprob: -5.479975700378418
    10. 'and' → logprob: -5.604975700378418

Token 97: ' bends' (ID: 192338)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1347060203552246
    2. ' must' → logprob: -1.5097060203552246
    3. ' is' → logprob: -1.6347060203552246
    4. ' and' → logprob: -2.1347060203552246
    5. ' should' → logprob: -3.6347060203552246
    6. '           ' → logprob: -3.7597060203552246
    7. ')' → logprob: -4.009706020355225
    8. ' has' → logprob: -4.134706020355225
    9. ' cannot' → logprob: -4.759706020355225
    10. ' in' → logprob: -4.759706020355225

Token 98: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.569225549697876
    2. '           ' → logprob: -1.569225549697876
    3. ' and' → logprob: -1.569225549697876
    4. ' if' → logprob: -4.194225311279297
    5. '<|end|>' → logprob: -7.569225311279297
    6. '
' → logprob: -8.069225311279297
    7. ' or' → logprob: -8.444225311279297
    8. '   ' → logprob: -8.444225311279297
    9. ',' → logprob: -8.444225311279297
    10. ':' → logprob: -8.944225311279297

Token 100: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7015080451965332
    2. ' if' → logprob: -0.7015080451965332
    3. '           ' → logprob: -4.826508045196533
    4. '               ' → logprob: -8.451507568359375
    5. '   ' → logprob: -10.326507568359375
    6. ' ' → logprob: -10.826507568359375
    7. '       ' → logprob: -10.951507568359375
    8. '            ' → logprob: -12.326507568359375
    9. '```' → logprob: -12.951507568359375
    10. '
' → logprob: -13.076507568359375

Token 101: ' (' (ID: 350)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.1276184469461441
    2. ' (' → logprob: -2.1276185512542725
    3. '(states' → logprob: -8.377618789672852
    4. ' not' → logprob: -9.252618789672852
    5. '           ' → logprob: -9.752618789672852
    6. ' ' → logprob: -9.877618789672852
    7. '(status' → logprob: -10.127618789672852
    8. '   ' → logprob: -10.252618789672852
    9. '(not' → logprob: -10.502618789672852
    10. '(s' → logprob: -10.752618789672852

Token 102: 'state' (ID: 5294)
  Prédit: 'state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.2781168818473816
    2. '(state' → logprob: -1.5281169414520264
    3. ' state' → logprob: -3.7781169414520264
    4. ' (' → logprob: -5.903116703033447
    5. '   ' → logprob: -9.903117179870605
    6. ' not' → logprob: -10.528117179870605
    7. 'not' → logprob: -10.528117179870605
    8. ',state' → logprob: -10.778117179870605
    9. ')' → logprob: -10.903117179870605
    10. '[state' → logprob: -10.903117179870605

Token 103: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.029763683676719666
    2. '&' → logprob: -3.529763698577881
    3. ' ' → logprob: -11.654763221740723
    4. '&amp' → logprob: -13.029763221740723
    5. ' ' → logprob: -14.279763221740723
    6. ')' → logprob: -15.279763221740723
    7. '&(' → logprob: -15.279763221740723
    8. '&nbsp' → logprob: -15.404763221740723
    9. '＆' → logprob: -15.529763221740723
    10. ' &
' → logprob: -16.27976417541504

Token 104: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.007613017223775387
    2. '(' → logprob: -4.882613182067871
    3. ')' → logprob: -12.507613182067871
    4. ' ' → logprob: -13.257613182067871
    5. '<|end|>' → logprob: -13.882613182067871
    6. '            ' → logprob: -16.132612228393555
    7. '```' → logprob: -16.507612228393555
    8. ' ' → logprob: -17.382612228393555
    9. ' ((' → logprob: -17.382612228393555
    10. '           ' → logprob: -17.382612228393555

Token 105: '1' (ID: 16)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' <<' (ID: 2256)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.14307889342308044
    2. ' (' → logprob: -2.0180788040161133
    3. '(' → logprob: -8.143078804016113
    4. '(n' → logprob: -10.893078804016113
    5. '           ' → logprob: -11.143078804016113
    6. '(s' → logprob: -11.393078804016113
    7. ')' → logprob: -11.643078804016113
    8. ' d' → logprob: -11.893078804016113
    9. '                   ' → logprob: -12.018078804016113
    10. '(m' → logprob: -12.143078804016113

Token 108: 'd' (ID: 67)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.35162439942359924
    2. 'd' → logprob: -1.2266243696212769
    3. ' d' → logprob: -6.476624488830566
    4. ' (' → logprob: -6.726624488830566
    5. '           ' → logprob: -8.101624488830566
    6. '                   ' → logprob: -9.976624488830566
    7. '               ' → logprob: -10.101624488830566
    8. '   ' → logprob: -11.726624488830566
    9. '(' → logprob: -12.226624488830566
    10. '                           ' → logprob: -12.351624488830566

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.143712118268013
    2. '-' → logprob: -2.018712043762207
    3. '))' → logprob: -7.643712043762207
    4. ')))' → logprob: -8.393712043762207
    5. ' ' → logprob: -8.768712043762207
    6. ' (' → logprob: -10.018712043762207
    7. ' ))' → logprob: -10.143712043762207
    8. '   ' → logprob: -10.643712043762207
    9. '1' → logprob: -11.143712043762207
    10. '(' → logprob: -11.393712043762207

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08897338807582855
    2. ' ' → logprob: -2.4639732837677
    3. '   ' → logprob: -10.963973045349121
    4. ')' → logprob: -12.463973045349121
    5. '2' → logprob: -12.588973045349121
    6. '  ' → logprob: -13.588973045349121
    7. '0' → logprob: -13.651473045349121
    8. '```' → logprob: -13.838973045349121
    9. 's' → logprob: -14.213973045349121
    10. '           ' → logprob: -14.338973045349121

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.125016212463379
    3. 'd' → logprob: -13.875016212463379
    4. ')' → logprob: -15.375016212463379
    5. 's' → logprob: -15.500016212463379
    6. '   ' → logprob: -15.500016212463379
    7. '```' → logprob: -16.625017166137695
    8. '2' → logprob: -16.750017166137695
    9. '           ' → logprob: -17.625017166137695
    10. '0' → logprob: -17.750017166137695

Token 112: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.10039051622152328
    2. '))' → logprob: -2.3503904342651367
    3. ')' → logprob: -9.725390434265137
    4. ' ' → logprob: -9.725390434265137
    5. ' ))' → logprob: -10.600390434265137
    6. '   ' → logprob: -11.725390434265137
    7. '')))' → logprob: -11.725390434265137
    8. '           ' → logprob: -11.975390434265137
    9. '))))' → logprob: -12.350390434265137
    10. '       ' → logprob: -12.600390434265137

Token 113: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007938889786601067
    2. ')==' → logprob: -4.882938861846924
    3. ' )' → logprob: -8.757939338684082
    4. '==' → logprob: -8.757939338684082
    5. ')!=' → logprob: -11.507939338684082
    6. ' ==' → logprob: -12.507939338684082
    7. '）' → logprob: -13.882939338684082
    8. '")' → logprob: -14.007939338684082
    9. '   ' → logprob: -14.757939338684082
    10. '')' → logprob: -15.007939338684082

Token 114: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014152854681015
    2. ' ' → logprob: -1.7014153003692627
    3. '1' → logprob: -14.451415061950684
    4. ' ' → logprob: -14.576415061950684
    5. '=' → logprob: -15.201415061950684
    6. ')' → logprob: -15.701415061950684
    7. '>' → logprob: -15.826415061950684
    8. '   ' → logprob: -16.326416015625
    9. ' (' → logprob: -16.513916015625
    10. '```' → logprob: -16.826416015625

Token 115: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026301460340619087
    2. ' ' → logprob: -3.651301383972168
    3. '   ' → logprob: -14.276301383972168
    4. '1' → logprob: -15.151301383972168
    5. '=' → logprob: -16.401302337646484
    6. '(' → logprob: -16.651302337646484
    7. '  ' → logprob: -17.526302337646484
    8. ' ' → logprob: -18.026302337646484
    9. ' (' → logprob: -18.276302337646484
    10. ')' → logprob: -18.588802337646484

Token 116: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10612352192401886
    2. '       ' → logprob: -2.981123447418213
    3. ':
' → logprob: -3.606123447418213
    4. '           ' → logprob: -3.981123447418213
    5. '               ' → logprob: -5.731123447418213
    6. '):' → logprob: -7.981123447418213
    7. '):
' → logprob: -8.981123924255371
    8. ',' → logprob: -8.981123924255371
    9. '   ' → logprob: -9.481123924255371
    10. ')' → logprob: -9.481123924255371

Token 117: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24487745761871338
    2. ' valid' → logprob: -2.494877338409424
    3. 'valid' → logprob: -2.619877338409424
    4. '           ' → logprob: -3.244877338409424
    5. '
' → logprob: -3.869877338409424
    6. '                   ' → logprob: -7.494877338409424
    7. '       ' → logprob: -7.869877338409424
    8. '                
' → logprob: -7.869877338409424
    9. '   ' → logprob: -8.244877815246582
    10. '(valid' → logprob: -8.744877815246582

Token 118: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8408777117729187
    2. ' valid' → logprob: -0.8408777117729187
    3. '               ' → logprob: -2.2158777713775635
    4. '           ' → logprob: -3.7158777713775635
    5. '       ' → logprob: -6.590877532958984
    6. '(valid' → logprob: -6.965877532958984
    7. '	valid' → logprob: -7.090877532958984
    8. '   ' → logprob: -8.215877532958984
    9. '
' → logprob: -8.965877532958984
    10. '                
' → logprob: -9.215877532958984

Token 119: ' finger' (ID: 24104)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.3518766462802887
    2. 'valid' → logprob: -1.4768766164779663
    3. ' not' → logprob: -3.351876735687256
    4. 'not' → logprob: -4.226876735687256
    5. ' finger' → logprob: -5.351876735687256
    6. '           ' → logprob: -5.601876735687256
    7. ' fingers' → logprob: -5.851876735687256
    8. 'finger' → logprob: -6.601876735687256
    9. ' invalid' → logprob: -7.226876735687256
    10. '#' → logprob: -7.476876735687256

Token 120: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.0792030543088913
    2. 'd' → logprob: -3.5792031288146973
    3. ' s' → logprob: -3.5792031288146973
    4. ' not' → logprob: -4.204203128814697
    5. 's' → logprob: -6.454203128814697
    6. ' (' → logprob: -6.954203128814697
    7. ' bent' → logprob: -6.954203128814697
    8. ' is' → logprob: -7.454203128814697
    9. ' bends' → logprob: -7.954203128814697
    10. ' ' → logprob: -8.079202651977539

Token 121: ' does' (ID: 2226)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5625792145729065
    2. '==' → logprob: -1.3125791549682617
    3. '           ' → logprob: -2.8125791549682617
    4. ')' → logprob: -3.5625791549682617
    5. '               ' → logprob: -3.5625791549682617
    6. ' ' → logprob: -4.062579154968262
    7. ' !=' → logprob: -4.437579154968262
    8. ')==' → logprob: -5.437579154968262
    9. ' continue' → logprob: -5.687579154968262
    10. '!=' → logprob: -6.562579154968262

Token 122: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25205379724502563
    2. 'not' → logprob: -1.5020537376403809
    3. 'n't' → logprob: -9.002054214477539
    4. '	not' → logprob: -14.002054214477539
    5. 'n' → logprob: -15.377054214477539
    6. '   ' → logprob: -15.627054214477539
    7. ' ' → logprob: -16.12705421447754
    8. '```' → logprob: -16.37705421447754
    9. '_not' → logprob: -17.00205421447754
    10. '0' → logprob: -17.37705421447754

Token 123: ' bend' (ID: 40158)
  Prédit: 'bend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bend' → logprob: -0.052361998707056046
    2. ' bend' → logprob: -3.1773619651794434
    3. 'b' → logprob: -4.677361965179443
    4. ' bent' → logprob: -11.802362442016602
    5. ' ' → logprob: -12.552362442016602
    6. ')' → logprob: -12.802362442016602
    7. '1' → logprob: -15.052362442016602
    8. ' bending' → logprob: -15.052362442016602
    9. '<|end|>' → logprob: -15.177362442016602
    10. '-b' → logprob: -15.802362442016602

Token 124: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30584633350372314
    2. ':' → logprob: -2.1808462142944336
    3. '           ' → logprob: -2.6808462142944336
    4. 'valid' → logprob: -3.5558462142944336
    5. ' valid' → logprob: -4.305846214294434
    6. ':
' → logprob: -4.305846214294434
    7. '       ' → logprob: -4.930846214294434
    8. ')' → logprob: -5.430846214294434
    9. '):' → logprob: -5.680846214294434
    10. '(valid' → logprob: -5.680846214294434

Token 125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05238168686628342
    2. '           ' → logprob: -3.052381753921509
    3. 'valid' → logprob: -6.05238151550293
    4. ' valid' → logprob: -7.55238151550293
    5. '(valid' → logprob: -7.67738151550293
    6. '                
' → logprob: -8.80238151550293
    7. '                   ' → logprob: -10.05238151550293
    8. '            
' → logprob: -10.17738151550293
    9. '```' → logprob: -10.42738151550293
    10. '       ' → logprob: -10.42738151550293

Token 126: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' (adapté à ' valid') → logprob: -0.6158658266067505
    2. '                   ' → logprob: -1.1158658266067505
    3. ' valid' → logprob: -2.115865707397461
    4. '               ' → logprob: -4.990865707397461
    5. '
' → logprob: -5.865865707397461
    6. '           ' → logprob: -6.490865707397461
    7. '	valid' → logprob: -8.615865707397461
    8. '                    
' → logprob: -8.990865707397461
    9. '   ' → logprob: -9.240865707397461
    10. '                       ' → logprob: -10.490865707397461

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759721398353577
    2. '=' → logprob: -0.8259721398353577
    3. '=False' → logprob: -10.825972557067871
    4. ' ' → logprob: -11.325972557067871
    5. '   ' → logprob: -15.700972557067871
    6. '  ' → logprob: -15.825972557067871
    7. '=True' → logprob: -15.950972557067871
    8. ')' → logprob: -16.200971603393555
    9. 's' → logprob: -16.575971603393555
    10. '    ' → logprob: -16.700971603393555

Token 128: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.03804149478673935
    2. ' False' → logprob: -3.288041591644287
    3. '=False' → logprob: -17.288042068481445
    4. '(False' → logprob: -17.288042068481445
    5. '_false' → logprob: -19.788042068481445
    6. ' ' → logprob: -20.413042068481445
    7. '   ' → logprob: -20.663042068481445
    8. 'True' → logprob: -20.788042068481445
    9. '.False' → logprob: -20.788042068481445
    10. 'false' → logprob: -22.038042068481445

Token 129: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.227250610711053e-05
    2. '       ' → logprob: -10.750041961669922
    3. '                ' → logprob: -12.500041961669922
    4. '<|end|>' → logprob: -12.500041961669922
    5. '              ' → logprob: -12.625041961669922
    6. '                   ' → logprob: -12.875041961669922
    7. '           ' → logprob: -12.875041961669922
    8. '                
' → logprob: -13.000041961669922
    9. '   ' → logprob: -14.375041961669922
    10. '			' → logprob: -14.500041961669922

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1517960956552997e-05
    2. '       ' → logprob: -11.750011444091797
    3. '                   ' → logprob: -14.250011444091797
    4. '           ' → logprob: -14.375011444091797
    5. '                
' → logprob: -14.375011444091797
    6. '              ' → logprob: -14.625011444091797
    7. '			' → logprob: -14.875011444091797
    8. '                ' → logprob: -15.125011444091797
    9. '   ' → logprob: -15.500011444091797
    10. '		       ' → logprob: -16.375011444091797

Token 131: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6942335367202759
    2. ' break' → logprob: -0.9442335367202759
    3. '               ' → logprob: -2.1942334175109863
    4. '	break' → logprob: -9.694233894348145
    5. '                   ' → logprob: -10.694233894348145
    6. '       ' → logprob: -10.819233894348145
    7. '           ' → logprob: -11.944233894348145
    8. '   ' → logprob: -11.944233894348145
    9. '_break' → logprob: -13.819233894348145
    10. '                
' → logprob: -14.444233894348145

Token 132: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034674981143325567
    2. '    
' → logprob: -5.753467559814453
    3. '
' → logprob: -9.378467559814453
    4. ')' → logprob: -9.628467559814453
    5. '                
' → logprob: -10.253467559814453
    6. ' 
' → logprob: -10.878467559814453
    7. '        
' → logprob: -11.003467559814453
    8. '  
' → logprob: -11.253467559814453
    9. '   
' → logprob: -11.628467559814453
    10. '    ' → logprob: -11.628467559814453

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0036748945713043213
    2. '    
' → logprob: -5.8786749839782715
    3. ' 
' → logprob: -8.128674507141113
    4. '
' → logprob: -8.128674507141113
    5. ')' → logprob: -9.503674507141113
    6. '                
' → logprob: -10.003674507141113
    7. '    ' → logprob: -10.628674507141113
    8. ' count' → logprob: -10.878674507141113
    9. '   
' → logprob: -10.878674507141113
    10. '  
' → logprob: -10.878674507141113

Token 134: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5661564469337463
    2. '   ' → logprob: -0.9411564469337463
    3. ' if' → logprob: -3.1911563873291016
    4. '    
' → logprob: -7.566156387329102
    5. ')' → logprob: -8.691156387329102
    6. ' ' → logprob: -9.316156387329102
    7. ' 
' → logprob: -9.566156387329102
    8. '
' → logprob: -9.941156387329102
    9. '```' → logprob: -10.191156387329102
    10. '  ' → logprob: -10.941156387329102

Token 135: ' valid' (ID: 4529)
  Prédit: ' valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.0005601812736131251
    2. 'valid' → logprob: -7.500560283660889
    3. ' not' → logprob: -11.87555980682373
    4. ' ' → logprob: -16.500560760498047
    5. '(valid' → logprob: -16.625560760498047
    6. '	valid' → logprob: -17.125560760498047
    7. ' val' → logprob: -17.500560760498047
    8. '_valid' → logprob: -17.500560760498047
    9. 'not' → logprob: -17.875560760498047
    10. ' valide' → logprob: -18.750560760498047

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006786654703319073
    2. ':
' → logprob: -5.006786823272705
    3. '       ' → logprob: -10.506786346435547
    4. '   ' → logprob: -10.631786346435547
    5. '):' → logprob: -11.381786346435547
    6. '=' → logprob: -13.256786346435547
    7. ',' → logprob: -13.381786346435547
    8. ' :' → logprob: -13.631786346435547
    9. '):
' → logprob: -13.631786346435547
    10. ' +=' → logprob: -14.381786346435547

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23297499120235443
    2. '   ' → logprob: -1.8579750061035156
    3. 'count' → logprob: -3.3579750061035156
    4. ' count' → logprob: -4.107975006103516
    5. '
' → logprob: -7.982975006103516
    6. '```' → logprob: -9.482975006103516
    7. '	count' → logprob: -9.482975006103516
    8. '_count' → logprob: -10.732975006103516
    9. '    
' → logprob: -11.607975006103516
    10. ',count' → logprob: -11.607975006103516

Token 138: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.06295554339885712
    2. '   ' → logprob: -2.812955617904663
    3. ' count' → logprob: -6.937955379486084
    4. '	count' → logprob: -11.812955856323242
    5. '       ' → logprob: -12.312955856323242
    6. '
' → logprob: -12.812955856323242
    7. '    
' → logprob: -14.062955856323242
    8. '  ' → logprob: -14.187955856323242
    9. '_count' → logprob: -15.062955856323242
    10. ' ' → logprob: -15.187955856323242

Token 139: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.043112464249134064
    2. '+=' → logprob: -3.1681125164031982
    3. '+' → logprob: -9.668112754821777
    4. ' =' → logprob: -10.668112754821777
    5. '=' → logprob: -11.043112754821777
    6. ' ' → logprob: -12.043112754821777
    7. '   ' → logprob: -13.918112754821777
    8. ']+=' → logprob: -14.168112754821777
    9. ' <<=' → logprob: -14.543112754821777
    10. ' ^=' → logprob: -14.918112754821777

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010355490958318114
    2. ' ' → logprob: -6.876035690307617
    3. '   ' → logprob: -14.126035690307617
    4. 'count' → logprob: -14.251035690307617
    5. '(' → logprob: -14.376035690307617
    6. 'pow' → logprob: -14.876035690307617
    7. 'mod' → logprob: -15.626035690307617
    8. 'state' → logprob: -15.876035690307617
    9. ' (' → logprob: -17.688535690307617
    10. '```' → logprob: -17.751035690307617

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. 'pow' → logprob: -11.625015258789062
    3. ' ' → logprob: -12.500015258789062
    4. '(' → logprob: -13.375015258789062
    5. 'count' → logprob: -14.750015258789062
    6. 'state' → logprob: -15.125015258789062
    7. '   ' → logprob: -15.125015258789062
    8. 'bin' → logprob: -16.000015258789062
    9. 'powers' → logprob: -17.375015258789062
    10. 'power' → logprob: -17.875015258789062

Token 142: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11469192802906036
    2. '
' → logprob: -2.239691972732544
    3. '%' → logprob: -6.739691734313965
    4. 'count' → logprob: -7.614691734313965
    5. ' print' → logprob: -9.864691734313965
    6. '%
' → logprob: -10.114691734313965
    7. '```' → logprob: -10.739691734313965
    8. ' 
' → logprob: -10.989691734313965
    9. '

' → logprob: -10.989691734313965
    10. '
' → logprob: -11.114691734313965

Token 143: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00022451656695920974
    2. ' print' → logprob: -8.500224113464355
    3. '
' → logprob: -11.125224113464355
    4. '%' → logprob: -12.875224113464355
    5. '```' → logprob: -13.125224113464355
    6. 'count' → logprob: -13.875224113464355
    7. ' 
' → logprob: -15.000224113464355
    8. ')' → logprob: -16.125225067138672
    9. '#print' → logprob: -16.250225067138672
    10. '(print' → logprob: -16.500225067138672

Token 144: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759457349777222
    2. '(count' → logprob: -0.8259457349777222
    3. '((' → logprob: -13.575945854187012
    4. ' (' → logprob: -14.075945854187012
    5. '("("' → logprob: -14.200945854187012
    6. '('' → logprob: -14.325945854187012
    7. '(`' → logprob: -14.325945854187012
    8. '()' → logprob: -14.325945854187012
    9. '(cnt' → logprob: -14.825945854187012
    10. '(
' → logprob: -15.325945854187012

Token 145: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0039159688167274
    2. '%' → logprob: -6.003915786743164
    3. ' %' → logprob: -6.878915786743164
    4. ' )' → logprob: -7.878915786743164
    5. '+' → logprob: -11.503915786743164
    6. '(' → logprob: -11.878915786743164
    7. ')%' → logprob: -12.503915786743164
    8. ' %)' → logprob: -12.753915786743164
    9. '%)' → logprob: -12.878915786743164
    10. ' ' → logprob: -12.878915786743164

Token 146: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.07889959216117859
    2. 'mod' → logprob: -2.578899621963501
    3. '(mod' → logprob: -11.578899383544922
    4. ' ' → logprob: -15.078899383544922
    5. '	mod' → logprob: -16.203899383544922
    6. ' мод' → logprob: -16.828899383544922
    7. ' MOD' → logprob: -18.578899383544922
    8. '_mod' → logprob: -18.703899383544922
    9. '```' → logprob: -19.328899383544922
    10. '100' → logprob: -19.328899383544922

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. '<|end|>' → logprob: -12.37501335144043
    3. '```' → logprob: -12.62501335144043
    4. ' )' → logprob: -13.37501335144043
    5. ')
' → logprob: -13.50001335144043
    6. '#' → logprob: -14.37501335144043
    7. '()' → logprob: -14.50001335144043
    8. '')' → logprob: -15.37501335144043
    9. '())' → logprob: -15.50001335144043
    10. '
' → logprob: -15.62501335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 145
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 33.79%
Précision adaptée (1ère position): 37.24%
Précision (top 10): 78.62%
================================================================================
