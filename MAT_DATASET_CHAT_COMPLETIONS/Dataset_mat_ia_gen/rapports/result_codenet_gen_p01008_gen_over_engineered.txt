================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Dict, Tuple, Optional, Iterator
import sys

class BaseConverter:
    _symbols = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
    _char_to_value: Dict[str, int] = {c: i for i, c in enumerate(_symbols)}

    @classmethod
    def to_decimal(cls, base: int, value: str) -> int:
        result = 0
        for ch in value:
            v = cls._char_to_value[ch]
            if v >= base:
                raise ValueError(f"Digit '{ch}' invalid for base {base}")
            result = result * base + v
        return result

class BinarySegmenter:
    """
    Segments binary strings obtained after removing all zeros from binary representation
    and splitting into contiguous '1' runs.
    """

    @staticmethod
    def segment(binary_str: str) -> List[int]:
        # binary_str consists only of '0' or '1'
        segments = []
        run_len = 0
        for ch in binary_str:
            if ch == '1':
                run_len += 1
            else:
                if run_len > 0:
                    segments.append(run_len)
                    run_len = 0
        if run_len > 0:
            segments.append(run_len)
        return segments

class NimGame:
    """
    Models the game described, with abstractions for steps and piles.
    """

    def __init__(self, piles: List[int]):
        self.piles = piles

    def step1_transform(self) -> None:
        """
        Remove all piles, convert each to binary, remove zeros, segment runs of ones,
        and set piles to concatenation of those segments.
        """
        new_piles = []
        for pile in self.piles:
            binary_repr = bin(pile)[2:]
            segments = BinarySegmenter.segment(binary_repr)
            new_piles.extend(segments)
        self.piles = new_piles

    def is_lost(self) -> bool:
        return len(self.piles) == 0

    def nim_sum(self) -> int:
        from functools import reduce
        from operator import ixor
        return reduce(ixor, self.piles, 0)

    def optimal_move(self) -> Tuple[int, int]:
        """
        Returns (pile index, amount to remove) that is optimal, or (-1, -1) if no move.
        """
        xor_sum = self.nim_sum()
        if xor_sum == 0:
            return (-1, -1)
        for i, pile in enumerate(self.piles):
            target = pile ^ xor_sum
            if target < pile:
                return (i, pile - target)
        return (-1, -1)

    def play_turn(self) -> Optional[bool]:
        """
        Conducts one full turn:
        Step1: transform piles
        Step2: if empty piles, current player loses => return False
        Step3: reduce one pile by x (optimal move)
        Returns True if current player has not lost; False if lost.
        """
        self.step1_transform()
        if self.is_lost():
            return False
        # choose optimal move (pile, remove amount)
        idx, rem = self.optimal_move()
        if idx == -1:
            # no move possible => lose
            return False
        self.piles[idx] -= rem
        if self.piles[idx] == 0:
            self.piles.pop(idx)
        return True

class GameRunner:
    """
    Runs the two-player alternating game using NimGame abstraction.
    """

    def __init__(self, piles: List[int]):
        self.game = NimGame(piles)
        self.current_player = 0  # 0 you, 1 friend A

    def run(self) -> str:
        """
        Runs until one player loses by empty set after Step1.
        Return "win" if player 0 wins, else "lose".
        """
        while True:
            alive = self.game.play_turn()
            if not alive:
                # current player lost
                return "lose" if self.current_player == 0 else "win"
            self.current_player = 1 - self.current_player

def parse_input() -> List[int]:
    input = sys.stdin.read().strip().split('\n')
    n = int(input[0])
    piles = []
    index = 1
    for _ in range(n):
        p_s, m_s = input[index].split()
        index += 1
        base = int(p_s)
        value = m_s.strip()
        decimal = BaseConverter.to_decimal(base, value)
        piles.append(decimal)
    return piles

def main():
    piles = parse_input()
    runner = GameRunner(piles)
    print(runner.run())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.07681288570165634
    2. ' Any' → logprob: -2.826812982559204
    3. ' Optional' → logprob: -4.576812744140625
    4. 'Any' → logprob: -6.576812744140625
    5. 'List' → logprob: -6.701812744140625
    6. ' Union' → logprob: -6.951812744140625
    7. ' ' → logprob: -7.951812744140625
    8. ' Generator' → logprob: -8.201812744140625
    9. 'Optional' → logprob: -9.576812744140625
    10. ' Iterable' → logprob: -9.826812744140625

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2815455198287964
    2. 'def' → logprob: -1.7815455198287964
    3. '
' → logprob: -3.781545639038086
    4. '\n' → logprob: -4.156545639038086
    5. '<|end|>' → logprob: -4.906545639038086
    6. '\' → logprob: -5.031545639038086
    7. '[' → logprob: -5.406545639038086
    8. 'import' → logprob: -5.906545639038086
    9. '`' → logprob: -6.156545639038086
    10. '  
' → logprob: -6.281545639038086

Token 5: ' Dict' (ID: 55179)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.441298246383667
    2. ' Optional' → logprob: -1.066298246383667
    3. 'Dict' → logprob: -5.316298484802246
    4. 'Tuple' → logprob: -5.441298484802246
    5. ' Dict' → logprob: -6.566298484802246
    6. ' Union' → logprob: -7.441298484802246
    7. ' Tuple' → logprob: -7.816298484802246
    8. 'Union' → logprob: -7.816298484802246
    9. 'Any' → logprob: -8.691298484802246
    10. 'Iterable' → logprob: -9.066298484802246

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9695792198181152
    2. '```' → logprob: -1.2195792198181152
    3. 'import' → logprob: -2.0945792198181152
    4. 'def' → logprob: -2.3445792198181152
    5. '<|end|>' → logprob: -3.9695792198181152
    6. '\' → logprob: -4.219579219818115
    7. ' ' → logprob: -4.469579219818115
    8. '\n' → logprob: -4.719579219818115
    9. 'a' → logprob: -4.844579219818115
    10. '`' → logprob: -4.844579219818115

Token 7: ' Tuple' (ID: 50841)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.8717671632766724
    2. 'Set' → logprob: -1.3717671632766724
    3. 'Optional' → logprob: -2.121767044067383
    4. 'Tuple' → logprob: -2.496767044067383
    5. 'Union' → logprob: -3.371767044067383
    6. ' Any' → logprob: -3.496767044067383
    7. ' Union' → logprob: -3.746767044067383
    8. ' Optional' → logprob: -4.246767044067383
    9. ' Tuple' → logprob: -4.621767044067383
    10. ' Set' → logprob: -4.746767044067383

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7779284119606018
    2. '[' → logprob: -1.152928352355957
    3. ':' → logprob: -2.902928352355957
    4. 'a' → logprob: -3.277928352355957
    5. 'def' → logprob: -3.277928352355957
    6. '(' → logprob: -3.402928352355957
    7. '.' → logprob: -3.777928352355957
    8. 'd' → logprob: -4.652928352355957
    9. '```' → logprob: -4.652928352355957
    10. 'import' → logprob: -5.277928352355957

Token 9: ' Optional' (ID: 19351)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.2394956648349762
    2. 'Optional' → logprob: -2.7394957542419434
    3. 'Any' → logprob: -3.2394957542419434
    4. 'Union' → logprob: -3.3644957542419434
    5. ' Set' → logprob: -3.7394957542419434
    6. ' Union' → logprob: -3.8644957542419434
    7. ' Optional' → logprob: -3.9894957542419434
    8. ' Any' → logprob: -5.614495754241943
    9. 'Iterable' → logprob: -5.739495754241943
    10. 'set' → logprob: -6.614495754241943

Token 10: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: ' Iterator' (ID: 41994)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.5207233428955078
    2. 'Any' → logprob: -1.5207233428955078
    3. 'Union' → logprob: -1.7707233428955078
    4. ' Union' → logprob: -5.020723342895508
    5. 'Iterable' → logprob: -5.520723342895508
    6. 'Callable' → logprob: -5.645723342895508
    7. ' Set' → logprob: -7.270723342895508
    8. 'set' → logprob: -7.395723342895508
    9. ' Any' → logprob: -7.645723342895508
    10. 'Iterator' → logprob: -8.145723342895508

Token 12: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1933904886245728
    2. '[' → logprob: -1.4433904886245728
    3. ',' → logprob: -1.6933904886245728
    4. '<|end|>' → logprob: -2.443390369415283
    5. ':' → logprob: -3.068390369415283
    6. 'import' → logprob: -3.193390369415283
    7. '.' → logprob: -3.943390369415283
    8. 'a' → logprob: -4.068390369415283
    9. 'def' → logprob: -4.193390369415283
    10. '\[' → logprob: -4.693390369415283

Token 13: 'import' (ID: 561)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.1257513165473938
    2. ' sys' → logprob: -2.375751256942749
    3. ' typing' → logprob: -4.125751495361328
    4. ' re' → logprob: -5.000751495361328
    5. ' requests' → logprob: -7.250751495361328
    6. ' itertools' → logprob: -7.875751495361328
    7. ' collections' → logprob: -8.375751495361328
    8. ' ' → logprob: -8.500751495361328
    9. ' pandas' → logprob: -8.625751495361328
    10. ' json' → logprob: -8.625751495361328

Token 15: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28765690326690674
    2. '\n' → logprob: -2.162656784057617
    3. '

' → logprob: -2.787656784057617
    4. 'import' → logprob: -3.662656784057617
    5. '<|end|>' → logprob: -4.412656784057617
    6. '\' → logprob: -4.537656784057617
    7. '```' → logprob: -4.662656784057617
    8. '' → logprob: -5.537656784057617
    9. '.' → logprob: -5.662656784057617
    10. '<|end|>' → logprob: -6.037656784057617

Token 16: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4453496932983398
    2. '```' → logprob: -1.4453496932983398
    3. 'def' → logprob: -1.8203496932983398
    4. '\n' → logprob: -2.44534969329834
    5. '.' → logprob: -2.82034969329834
    6. '
' → logprob: -2.94534969329834
    7. '`' → logprob: -2.94534969329834
    8. '\' → logprob: -2.94534969329834
    9. 'import' → logprob: -3.82034969329834
    10. '

' → logprob: -4.82034969329834

Token 17: ' Base' (ID: 8729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6260247230529785
    2. ' My' → logprob: -1.0010247230529785
    3. ' Parser' → logprob: -3.2510247230529785
    4. ' Data' → logprob: -3.8760247230529785
    5. ' Space' → logprob: -4.6260247230529785
    6. ' User' → logprob: -5.6260247230529785
    7. ' System' → logprob: -5.8760247230529785
    8. ' Processor' → logprob: -6.2510247230529785
    9. ' Serializer' → logprob: -6.5010247230529785
    10. ' Analyzer' → logprob: -6.5010247230529785

Token 18: 'Converter' (ID: 18762)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02371894381940365
    2. '(' → logprob: -4.39871883392334
    3. ' :' → logprob: -5.89871883392334
    4. 'Class' → logprob: -5.89871883392334
    5. '(Exception' → logprob: -6.52371883392334
    6. 'Exception' → logprob: -7.02371883392334
    7. ' (' → logprob: -7.39871883392334
    8. 'Handler' → logprob: -7.77371883392334
    9. 'C' → logprob: -7.77371883392334
    10. '(Base' → logprob: -7.89871883392334

Token 19: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00048167374916374683
    2. '(' → logprob: -7.750481605529785
    3. '(Base' → logprob: -10.875481605529785
    4. '():' → logprob: -11.500481605529785
    5. '```' → logprob: -12.125481605529785
    6. '(Abstract' → logprob: -12.875481605529785
    7. ' :' → logprob: -12.875481605529785
    8. ':**' → logprob: -13.500481605529785
    9. '):' → logprob: -13.625481605529785
    10. '<|end|>' → logprob: -13.625481605529785

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012263685464859009
    2. ':' → logprob: -5.262263774871826
    3. ' def' → logprob: -5.887263774871826
    4. 'def' → logprob: -6.387263774871826
    5. '    
' → logprob: -6.762263774871826
    6. '    ' → logprob: -7.012263774871826
    7. ' ' → logprob: -9.137263298034668
    8. '```' → logprob: -9.887263298034668
    9. '<|end|>' → logprob: -10.137263298034668
    10. ' 
' → logprob: -10.387263298034668

Token 21: ' _' (ID: 1175)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.19565898180007935
    2. 'def' → logprob: -2.3206589221954346
    3. '   ' → logprob: -2.5706589221954346
    4. '    ' → logprob: -6.070659160614014
    5. '    
' → logprob: -8.570658683776855
    6. ' ' → logprob: -9.320658683776855
    7. ' pass' → logprob: -9.445658683776855
    8. 'class' → logprob: -9.570658683776855
    9. '_' (adapté à ' _') → logprob: -10.195658683776855
    10. ' 
' → logprob: -10.445658683776855

Token 22: 'symbols' (ID: 134245)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -0.8668097853660583
    2. 'base' → logprob: -1.6168098449707031
    3. 'cache' → logprob: -2.366809844970703
    4. 'registry' → logprob: -2.616809844970703
    5. 'name' → logprob: -3.366809844970703
    6. 'm' → logprob: -3.991809844970703
    7. 'value' → logprob: -4.241809844970703
    8. 'type' → logprob: -4.366809844970703
    9. 'conversion' → logprob: -4.491809844970703
    10. 'bases' → logprob: -4.491809844970703

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008113090880215168
    2. ':' → logprob: -5.383112907409668
    3. '=' → logprob: -5.758112907409668
    4. ' :' → logprob: -9.008112907409668
    5. ' ' → logprob: -9.633112907409668
    6. '  ' → logprob: -9.633112907409668
    7. '   ' → logprob: -10.133112907409668
    8. '<|end|>' → logprob: -11.383112907409668
    9. '=[]' → logprob: -12.008112907409668
    10. '_' → logprob: -12.758112907409668

Token 24: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8233620524406433
    2. ''' → logprob: -1.323362112045288
    3. ' "' → logprob: -1.698362112045288
    4. '"' → logprob: -2.198362112045288
    5. '['' → logprob: -8.198362350463867
    6. ' ['' → logprob: -8.323362350463867
    7. ' ' → logprob: -9.198362350463867
    8. ''b' → logprob: -10.073362350463867
    9. ''s' → logprob: -10.698362350463867
    10. '   ' → logprob: -10.698362350463867

Token 25: '012' (ID: 19267)
  Prédit: '012'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '012' → logprob: -0.0018808044260367751
    2. '01' → logprob: -6.501880645751953
    3. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -8.751880645751953
    4. ''' → logprob: -9.126880645751953
    5. ' ' → logprob: -10.126880645751953
    6. '"' → logprob: -10.251880645751953
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -11.126880645751953
    8. '`' → logprob: -12.626880645751953
    9. '```' → logprob: -12.751880645751953
    10. '234' → logprob: -12.876880645751953

Token 26: '345' (ID: 22901)
  Prédit: '345'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '345' → logprob: -8.180258191714529e-06
    2. '012' → logprob: -11.750008583068848
    3. '346' → logprob: -16.62500762939453
    4. '789' → logprob: -17.25000762939453
    5. '348' → logprob: -17.50000762939453
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -17.50000762939453
    7. '340' → logprob: -18.12500762939453
    8. '3' → logprob: -18.50000762939453
    9. 'abcdefghijklmnopqrstuvwxyz' → logprob: -18.75000762939453
    10. '234' → logprob: -19.00000762939453

Token 27: '678' (ID: 30833)
  Prédit: '678'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '678' → logprob: -5.676981345459353e-06
    2. '679' → logprob: -12.375005722045898
    3. '789' → logprob: -13.875005722045898
    4. '67' → logprob: -15.125005722045898
    5. '689' → logprob: -16.5000057220459
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -17.1250057220459
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -17.2500057220459
    8. '467' → logprob: -17.5000057220459
    9. '687' → logprob: -17.6250057220459
    10. '012' → logprob: -17.7500057220459

Token 28: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -15.500000953674316
    3. '９' → logprob: -16.625
    4. '987' → logprob: -16.875
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -16.875
    6. 'abcdef' → logprob: -17.25
    7. '678' → logprob: -17.875
    8. 'nine' → logprob: -18.5
    9. '679' → logprob: -18.625
    10. '九' → logprob: -18.75

Token 29: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' (ID: 184150)
  Prédit: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -0.22319509088993073
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.8481950759887695
    3. 'ABC' → logprob: -3.2231950759887695
    4. 'abcdef' → logprob: -5.9731950759887695
    5. 'ABCDEFGHIJKLMNOP' → logprob: -9.59819507598877
    6. 'ABCDEFGHI' → logprob: -9.84819507598877
    7. 'ABCDEFG' → logprob: -11.34819507598877
    8. 'abcdefghijkl' → logprob: -12.09819507598877
    9. ' ABC' → logprob: -12.84819507598877
    10. 'ABCDE' → logprob: -13.59819507598877

Token 30: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -0.01284359022974968
    2. '"' → logprob: -4.387843608856201
    3. '_"' → logprob: -8.512843132019043
    4. '_' → logprob: -9.887843132019043
    5. 'abcdefghijkl' → logprob: -10.012843132019043
    6. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -11.637843132019043
    7. 'abcdef' → logprob: -12.137843132019043
    8. 'QRSTUVWXYZ' → logprob: -12.262843132019043
    9. '"""' → logprob: -12.637843132019043
    10. ''' → logprob: -13.137843132019043

Token 31: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06107654049992561
    2. '+' → logprob: -3.4360766410827637
    3. '+"' → logprob: -4.686076641082764
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.561076641082764
    5. '"
' → logprob: -5.811076641082764
    6. '<|end|>' → logprob: -6.061076641082764
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.311076641082764
    8. '_"' → logprob: -6.436076641082764
    9. '+="' → logprob: -6.686076641082764
    10. '_' → logprob: -7.436076641082764

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31189846992492676
    2. '<|end|>' → logprob: -1.5618984699249268
    3. '_' → logprob: -4.061898231506348
    4. '
' → logprob: -4.436898231506348
    5. '<|end|>' → logprob: -4.686898231506348
    6. ' ' → logprob: -4.936898231506348
    7. '    
' → logprob: -5.186898231506348
    8. '  ' → logprob: -6.936898231506348
    9. '_token' → logprob: -7.311898231506348
    10. 'newline' → logprob: -7.436898231506348

Token 33: ' _' (ID: 1175)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.300116628408432
    2. ':' → logprob: -2.800116539001465
    3. '<|end|>' → logprob: -2.800116539001465
    4. ' ' → logprob: -2.925116539001465
    5. 'def' → logprob: -3.675116539001465
    6. '    
' → logprob: -4.050116539001465
    7. '_' (adapté à ' _') → logprob: -4.675116539001465
    8. '
' → logprob: -4.925116539001465
    9. '"' → logprob: -5.550116539001465
    10. '<|end|>' → logprob: -5.800116539001465

Token 34: 'char' (ID: 3257)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.03240446373820305
    2. 'BASE' → logprob: -4.78240442276001
    3. 'max' → logprob: -5.03240442276001
    4. 'symbols' → logprob: -5.15740442276001
    5. 'digits' → logprob: -5.65740442276001
    6. 'rad' → logprob: -6.28240442276001
    7. 'default' → logprob: -6.53240442276001
    8. 'min' → logprob: -6.65740442276001
    9. 'alphabet' → logprob: -7.03240442276001
    10. 'symbol' → logprob: -7.40740442276001

Token 35: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0037131423596292734
    2. '_map' → logprob: -6.628713130950928
    3. '2' → logprob: -7.128713130950928
    4. 's' → logprob: -7.128713130950928
    5. '_index' → logprob: -8.503713607788086
    6. 'To' → logprob: -8.878713607788086
    7. 'acters' → logprob: -9.253713607788086
    8. '_t' → logprob: -9.378713607788086
    9. '_indices' → logprob: -9.753713607788086
    10. '_idx' → logprob: -9.878713607788086

Token 36: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.2030239850282669
    2. '_index' → logprob: -1.7030240297317505
    3. '_val' → logprob: -7.203023910522461
    4. '_int' → logprob: -7.578023910522461
    5. '_symbol' → logprob: -8.703023910522461
    6. 'value' → logprob: -9.203023910522461
    7. 'index' → logprob: -9.828023910522461
    8. '_idx' → logprob: -11.078023910522461
    9. '_digit' → logprob: -11.328023910522461
    10. 'int' → logprob: -13.453023910522461

Token 37: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007868282496929169
    2. '=' → logprob: -4.88286828994751
    3. ':' → logprob: -9.007867813110352
    4. ' ' → logprob: -9.132867813110352
    5. '   ' → logprob: -11.632867813110352
    6. '  ' → logprob: -12.007867813110352
    7. ' :' → logprob: -12.257867813110352
    8. '[' → logprob: -12.382867813110352
    9. 's' → logprob: -13.007867813110352
    10. '<|end|>' → logprob: -13.507867813110352

Token 38: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.05729162320494652
    2. ' Dict' → logprob: -2.9322915077209473
    3. 'dict' → logprob: -6.557291507720947
    4. ' dict' → logprob: -6.932291507720947
    5. '_dict' → logprob: -13.182291984558105
    6. '.Dict' → logprob: -13.307291984558105
    7. '   ' → logprob: -13.557291984558105
    8. ' ' → logprob: -13.557291984558105
    9. '{' → logprob: -13.932291984558105
    10. '  ' → logprob: -13.932291984558105

Token 39: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -7.255023956531659e-05
    2. '[' → logprob: -10.250072479248047
    3. '[int' → logprob: -10.250072479248047
    4. '```' → logprob: -14.625072479248047
    5. '<char' → logprob: -14.875072479248047
    6. 'str' → logprob: -14.875072479248047
    7. '{' → logprob: -15.250072479248047
    8. '=str' → logprob: -16.000072479248047
    9. ' =' → logprob: -16.375072479248047
    10. 'Str' → logprob: -17.250072479248047

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01253979280591011
    2. '[int' → logprob: -4.512539863586426
    3. ',int' → logprob: -6.637539863586426
    4. ' ,' → logprob: -9.512539863586426
    5. 'int' → logprob: -9.887539863586426
    6. ']int' → logprob: -10.387539863586426
    7. ':int' → logprob: -11.262539863586426
    8. '<int' → logprob: -12.887539863586426
    9. '<|end|>' → logprob: -13.137539863586426
    10. '[' → logprob: -13.262539863586426

Token 41: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011052416637539864
    2. ' int' → logprob: -4.51105260848999
    3. '[int' → logprob: -13.511052131652832
    4. ']int' → logprob: -13.761052131652832
    5. '	int' → logprob: -14.011052131652832
    6. '<int' → logprob: -14.386052131652832
    7. ' ' → logprob: -15.136052131652832
    8. '   ' → logprob: -16.26105308532715
    9. '```' → logprob: -16.26105308532715
    10. '  ' → logprob: -16.63605308532715

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.073596548754722e-05
    2. ' ]' → logprob: -10.37505054473877
    3. ']=' → logprob: -11.37505054473877
    4. '"]' → logprob: -12.87505054473877
    5. ']={' → logprob: -13.25005054473877
    6. '   ' → logprob: -13.87505054473877
    7. '>' → logprob: -14.12505054473877
    8. ']>' → logprob: -14.25005054473877
    9. '']' → logprob: -15.00005054473877
    10. '`]' → logprob: -15.50005054473877

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12702974677085876
    2. '=' → logprob: -2.1270296573638916
    3. ' ' → logprob: -10.127029418945312
    4. '<|end|>' → logprob: -10.127029418945312
    5. ' ={' → logprob: -12.127029418945312
    6. '={}' → logprob: -12.252029418945312
    7. '  ' → logprob: -12.502029418945312
    8. '   ' → logprob: -13.002029418945312
    9. '<|end|>' → logprob: -13.877029418945312
    10. ' =
' → logprob: -14.127029418945312

Token 44: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.14680947363376617
    2. ' {' → logprob: -2.3968095779418945
    3. '{}' → logprob: -3.1468095779418945
    4. ' {}' → logprob: -6.0218095779418945
    5. 'dict' → logprob: -10.021809577941895
    6. '{
' → logprob: -10.896809577941895
    7. ' ' → logprob: -11.646809577941895
    8. '{}.' → logprob: -11.896809577941895
    9. '{i' → logprob: -12.146809577941895
    10. ' dict' → logprob: -12.271809577941895

Token 45: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17647245526313782
    2. 's' → logprob: -2.5514724254608154
    3. '   ' → logprob: -3.8014724254608154
    4. 'symbol' → logprob: -3.9264724254608154
    5. 'char' → logprob: -4.1764726638793945
    6. 'ch' → logprob: -4.1764726638793945
    7. 'sym' → logprob: -4.9264726638793945
    8. '}' → logprob: -6.1764726638793945
    9. 'k' → logprob: -7.8014726638793945
    10. ' c' → logprob: -7.9264726638793945

Token 46: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019424550235271454
    2. ':i' → logprob: -4.0194244384765625
    3. ':c' → logprob: -6.8944244384765625
    4. ':index' → logprob: -9.269424438476562
    5. ':v' → logprob: -10.519424438476562
    6. ':k' → logprob: -10.519424438476562
    7. ':self' → logprob: -10.644424438476562
    8. ' :' → logprob: -10.644424438476562
    9. ':x' → logprob: -10.644424438476562
    10. ':n' → logprob: -11.894424438476562

Token 47: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1272762268781662
    2. ' i' → logprob: -2.1272761821746826
    3. 'v' → logprob: -8.127276420593262
    4. ' v' → logprob: -10.377276420593262
    5. 'idx' → logprob: -11.127276420593262
    6. ' idx' → logprob: -12.502276420593262
    7. ' ' → logprob: -13.627276420593262
    8. 'index' → logprob: -14.377276420593262
    9. '	i' → logprob: -14.627276420593262
    10. '   ' → logprob: -14.877276420593262

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04302316531538963
    2. 'for' → logprob: -3.168023109436035
    3. ' ' → logprob: -11.668023109436035
    4. '   ' → logprob: -11.918023109436035
    5. '	for' → logprob: -12.668023109436035
    6. '    ' → logprob: -12.793023109436035
    7. '<|end|>' → logprob: -13.793023109436035
    8. '<|end|>' → logprob: -14.418023109436035
    9. '  ' → logprob: -14.668023109436035
    10. '}' → logprob: -15.543023109436035

Token 49: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.26205122470855713
    2. 'c' → logprob: -2.1370511054992676
    3. ' i' → logprob: -2.5120511054992676
    4. 'i' → logprob: -3.5120511054992676
    5. ' range' → logprob: -7.762051105499268
    6. ' ' → logprob: -7.887051105499268
    7. ' _' → logprob: -8.262051582336426
    8. '_' → logprob: -8.512051582336426
    9. 'range' → logprob: -8.887051582336426
    10. '  ' → logprob: -10.887051582336426

Token 50: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9876805543899536
    2. ',' → logprob: -1.1126805543899536
    3. ' in' → logprob: -1.3626805543899536
    4. 'in' → logprob: -3.487680435180664
    5. 'c' → logprob: -4.987680435180664
    6. ' c' → logprob: -6.112680435180664
    7. ',c' → logprob: -7.112680435180664
    8. '<|end|>' → logprob: -7.112680435180664
    9. 'range' → logprob: -8.237680435180664
    10. ' n' → logprob: -8.612680435180664

Token 51: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08121590316295624
    2. ' c' → logprob: -2.7062158584594727
    3. ' in' → logprob: -5.081215858459473
    4. '<|end|>' → logprob: -5.331215858459473
    5. 'in' → logprob: -9.081215858459473
    6. '<|end|>' → logprob: -11.206215858459473
    7. ' ' → logprob: -11.706215858459473
    8. 'enumer' → logprob: -11.706215858459473
    9. '(c' → logprob: -12.456215858459473
    10. 's' → logprob: -12.706215858459473

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04325631260871887
    2. 'in' → logprob: -3.1682562828063965
    3. 'n' → logprob: -8.668256759643555
    4. ' ' → logprob: -9.918256759643555
    5. 's' → logprob: -11.543256759643555
    6. '	in' → logprob: -11.543256759643555
    7. '<|end|>' → logprob: -12.543256759643555
    8. ')' → logprob: -12.793256759643555
    9. '```' → logprob: -13.418256759643555
    10. '  ' → logprob: -13.543256759643555

Token 53: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.38687798380851746
    2. 'enumer' → logprob: -1.1368780136108398
    3. '```' → logprob: -12.26187801361084
    4. ' enumer' → logprob: -14.26187801361084
    5. ' ' → logprob: -14.51187801361084
    6. 'en' → logprob: -14.76187801361084
    7. '(en' → logprob: -15.76187801361084
    8. ' en' → logprob: -16.136877059936523
    9. ')' → logprob: -16.261877059936523
    10. 'enum' → logprob: -16.761877059936523

Token 54: '(_' (ID: 4963)
  Prédit: '(Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Base' → logprob: -0.162016361951828
    2. '(_' → logprob: -2.7870163917541504
    3. 'Base' → logprob: -3.0370163917541504
    4. '_base' → logprob: -3.2870163917541504
    5. '_Base' → logprob: -6.28701639175415
    6. ' Base' → logprob: -8.037015914916992
    7. '(base' → logprob: -8.787015914916992
    8. '(' → logprob: -9.162015914916992
    9. '(cls' → logprob: -10.037015914916992
    10. '	Base' → logprob: -10.537015914916992

Token 55: 'symbols' (ID: 134245)
  Prédit: 'symbols'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'symbols' → logprob: -0.0015397422248497605
    2. '_symbols' → logprob: -6.501539707183838
    3. 'symbol' → logprob: -11.376540184020996
    4. ' symbols' → logprob: -11.751540184020996
    5. 'sym' → logprob: -11.751540184020996
    6. 's' → logprob: -12.001540184020996
    7. 'characters' → logprob: -13.501540184020996
    8. 'char' → logprob: -14.126540184020996
    9. '_char' → logprob: -14.751540184020996
    10. '_symbol' → logprob: -15.001540184020996

Token 56: ')}

' (ID: 184554)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00016992862219922245
    2. ')' → logprob: -9.25016975402832
    3. '}' → logprob: -10.00016975402832
    4. ' )' → logprob: -10.87516975402832
    5. '")}' → logprob: -13.00016975402832
    6. ')}
' → logprob: -13.37516975402832
    7. ' ' → logprob: -13.75016975402832
    8. '   ' → logprob: -14.00016975402832
    9. ');}' → logprob: -14.25016975402832
    10. ')}}' → logprob: -14.50016975402832

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11671769618988037
    2. ':' → logprob: -2.24171781539917
    3. ' ' → logprob: -6.61671781539917
    4. 'def' → logprob: -7.36671781539917
    5. '
' → logprob: -7.49171781539917
    6. '```' → logprob: -8.241717338562012
    7. '  ' → logprob: -8.741717338562012
    8. '<|end|>' → logprob: -8.991717338562012
    9. '    
' → logprob: -9.116717338562012
    10. '(' → logprob: -9.616717338562012

Token 58: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6692107319831848
    2. 'def' → logprob: -0.9192107319831848
    3. '   ' → logprob: -2.54421067237854
    4. ' ' → logprob: -4.669210910797119
    5. '    ' → logprob: -7.294210910797119
    6. '    
' → logprob: -9.044210433959961
    7. '  ' → logprob: -9.294210433959961
    8. ' 
' → logprob: -9.419210433959961
    9. '	def' → logprob: -9.919210433959961
    10. '_' → logprob: -10.794210433959961

Token 59: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.27513498067855835
    2. 'classmethod' → logprob: -1.5251350402832031
    3. 'property' → logprob: -3.775135040283203
    4. 'static' → logprob: -12.775135040283203
    5. 'dat' → logprob: -14.025135040283203
    6. 'abstract' → logprob: -14.150135040283203
    7. 'class' → logprob: -15.525135040283203
    8. '@' → logprob: -17.150135040283203
    9. 'st' → logprob: -17.400135040283203
    10. '@property' → logprob: -17.525135040283203

Token 60: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014185008592903614
    2. ' def' → logprob: -4.264184951782227
    3. 'de' → logprob: -11.139184951782227
    4. '   ' → logprob: -12.639184951782227
    5. '
' → logprob: -14.514184951782227
    6. '(' → logprob: -14.639184951782227
    7. ' ' → logprob: -14.764184951782227
    8. '<|end|>' → logprob: -14.889184951782227
    9. '    ' → logprob: -15.014184951782227
    10. 'd' → logprob: -15.139184951782227

Token 61: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00019138160860165954
    2. ' def' → logprob: -8.625191688537598
    3. '   ' → logprob: -11.875191688537598
    4. '
' → logprob: -13.125191688537598
    5. 'de' → logprob: -14.125191688537598
    6. '	def' → logprob: -14.625191688537598
    7. '```' → logprob: -14.875191688537598
    8. '<|end|>' → logprob: -15.375191688537598
    9. '  ' → logprob: -15.750191688537598
    10. '_def' → logprob: -15.875191688537598

Token 62: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00033558503491804004
    2. ' def' → logprob: -8.000335693359375
    3. '
' → logprob: -16.500335693359375
    4. 'staticmethod' → logprob: -18.000335693359375
    5. 'classmethod' → logprob: -18.125335693359375
    6. 'de' → logprob: -18.250335693359375
    7. 'd' → logprob: -19.125335693359375
    8. '```' → logprob: -20.500335693359375
    9. 'property' → logprob: -20.750335693359375
    10. '   ' → logprob: -21.125335693359375

Token 63: ' to' (ID: 316)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.05469934269785881
    2. ' encode' → logprob: -3.179699420928955
    3. ' decode' → logprob: -5.429699420928955
    4. 'def' → logprob: -5.804699420928955
    5. 'encode' → logprob: -6.429699420928955
    6. ' convert' → logprob: -6.554699420928955
    7. ' to' → logprob: -7.929699420928955
    8. 'decode' → logprob: -7.929699420928955
    9. 'convert' → logprob: -8.929698944091797
    10. ' int' → logprob: -9.429698944091797

Token 64: '_decimal' (ID: 178716)
  Prédit: '_base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_base' → logprob: -0.028679223731160164
    2. '_string' → logprob: -4.153679370880127
    3. '_decimal' → logprob: -4.653679370880127
    4. '_' → logprob: -6.528679370880127
    5. '_int' → logprob: -7.028679370880127
    6. '_str' → logprob: -8.153678894042969
    7. '_integer' → logprob: -9.153678894042969
    8. '_digits' → logprob: -9.653678894042969
    9. '_number' → logprob: -9.778678894042969
    10. '_value' → logprob: -9.778678894042969

Token 65: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.0007401806069537997
    2. '(' → logprob: -7.250740051269531
    3. '(
' → logprob: -10.500740051269531
    4. 'cls' → logprob: -13.125740051269531
    5. '(clazz' → logprob: -15.000740051269531
    6. ' (' → logprob: -16.25074005126953
    7. '   ' → logprob: -16.50074005126953
    8. ' cls' → logprob: -16.87574005126953
    9. '(ctx' → logprob: -17.00074005126953
    10. '(self' → logprob: -17.12574005126953

Token 66: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.35690584778785706
    2. ',' → logprob: -1.2319058179855347
    3. ')(' → logprob: -5.356905937194824
    4. ')' → logprob: -5.856905937194824
    5. 'cls' → logprob: -8.231905937194824
    6. '(' → logprob: -8.231905937194824
    7. '   ' → logprob: -9.356905937194824
    8. ' (' → logprob: -9.356905937194824
    9. ' ,' → logprob: -9.606905937194824
    10. ' cls' → logprob: -10.731905937194824

Token 67: ' base' (ID: 3611)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5605486035346985
    2. ' value' → logprob: -1.6855485439300537
    3. 'cls' → logprob: -2.0605485439300537
    4. ' cls' → logprob: -2.4355485439300537
    5. 'number' → logprob: -4.185548782348633
    6. ' number' → logprob: -4.560548782348633
    7. ' s' → logprob: -6.810548782348633
    8. 's' → logprob: -6.810548782348633
    9. 'num' → logprob: -7.935548782348633
    10. 'string' → logprob: -8.310548782348633

Token 68: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060684628784656525
    2. ',' → logprob: -2.9356846809387207
    3. ':str' → logprob: -5.685684680938721
    4. ':int' → logprob: -6.560684680938721
    5. '_string' → logprob: -8.310684204101562
    6. '):' → logprob: -9.060684204101562
    7. '_str' → logprob: -9.060684204101562
    8. ' :' → logprob: -9.185684204101562
    9. ':number' → logprob: -9.685684204101562
    10. 'string' → logprob: -9.810684204101562

Token 69: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006461578421294689
    2. 'str' → logprob: -5.8814616203308105
    3. ' int' → logprob: -6.0064616203308105
    4. ')' → logprob: -7.3814616203308105
    5. ',' → logprob: -8.131461143493652
    6. '10' → logprob: -9.506461143493652
    7. ':int' → logprob: -9.506461143493652
    8. ' str' → logprob: -10.006461143493652
    9. ',int' → logprob: -10.381461143493652
    10. '[int' → logprob: -10.881461143493652

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ' ,' → logprob: -11.375012397766113
    3. ')' → logprob: -15.250012397766113
    4. '‌,' → logprob: -16.375011444091797
    5. ',
' → logprob: -16.750011444091797
    6. '   ' → logprob: -17.250011444091797
    7. ' ' → logprob: -17.500011444091797
    8. ',value' → logprob: -18.125011444091797
    9. '‍,' → logprob: -18.500011444091797
    10. ',int' → logprob: -18.875011444091797

Token 71: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.6640550494194031
    2. ' value' → logprob: -0.9140550494194031
    3. ' number' → logprob: -3.289055109024048
    4. 'number' → logprob: -3.914055109024048
    5. 's' → logprob: -4.289054870605469
    6. ' s' → logprob: -4.414054870605469
    7. ' digits' → logprob: -8.039054870605469
    8. 'digits' → logprob: -8.164054870605469
    9. 'num' → logprob: -8.789054870605469
    10. 'string' → logprob: -9.664054870605469

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001037815964082256
    2. ':str' → logprob: -9.250103950500488
    3. '):' → logprob: -13.250103950500488
    4. ')' → logprob: -13.250103950500488
    5. 'str' → logprob: -13.500103950500488
    6. '_str' → logprob: -13.750103950500488
    7. ' :' → logprob: -13.750103950500488
    8. '_:' → logprob: -15.250103950500488
    9. 's' → logprob: -16.125102996826172
    10. '_string' → logprob: -17.375102996826172

Token 73: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.11310255527496338
    2. ' str' → logprob: -2.238102436065674
    3. ')' → logprob: -8.613102912902832
    4. ' ' → logprob: -10.363102912902832
    5. '   ' → logprob: -10.613102912902832
    6. 's' → logprob: -11.613102912902832
    7. '[str' → logprob: -11.738102912902832
    8. '  ' → logprob: -12.238102912902832
    9. 'List' → logprob: -12.363102912902832
    10. '	str' → logprob: -12.613102912902832

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014478032244369388
    2. '):' → logprob: -8.875144958496094
    3. ' )' → logprob: -12.875144958496094
    4. '   ' → logprob: -13.625144958496094
    5. ')->' → logprob: -14.375144958496094
    6. '`)' → logprob: -15.375144958496094
    7. '")' → logprob: -16.625144958496094
    8. '')' → logprob: -16.625144958496094
    9. ':' → logprob: -16.625144958496094
    10. ' ' → logprob: -17.750144958496094

Token 75: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37855854630470276
    2. ':' → logprob: -1.6285585165023804
    3. '->' → logprob: -2.75355863571167
    4. '):' → logprob: -3.50355863571167
    5. ' ->' → logprob: -3.87855863571167
    6. ')->' → logprob: -5.50355863571167
    7. '   ' → logprob: -8.128558158874512
    8. '>' → logprob: -10.503558158874512
    9. '       ' → logprob: -11.128558158874512
    10. ' :' → logprob: -11.253558158874512

Token 76: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10055148601531982
    2. 'int' → logprob: -2.3505516052246094
    3. ' Optional' → logprob: -8.10055160522461
    4. 'Optional' → logprob: -10.22555160522461
    5. '	int' → logprob: -13.60055160522461
    6. ' ' → logprob: -13.72555160522461
    7. '[int' → logprob: -13.85055160522461
    8. '   ' → logprob: -14.10055160522461
    9. '  ' → logprob: -15.10055160522461
    10. '(int' → logprob: -15.97555160522461

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007817775011062622
    2. '):' → logprob: -4.88281774520874
    3. '():' → logprob: -9.007818222045898
    4. ':**' → logprob: -10.882818222045898
    5. ':return' → logprob: -10.882818222045898
    6. ' :' → logprob: -11.132818222045898
    7. '       ' → logprob: -11.882818222045898
    8. ',' → logprob: -12.007818222045898
    9. '>:' → logprob: -12.132818222045898
    10. '}:' → logprob: -12.257818222045898

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038830959238111973
    2. ':' → logprob: -5.628882884979248
    3. '    ' → logprob: -9.628883361816406
    4. ' :' → logprob: -10.378883361816406
    5. '        
' → logprob: -10.378883361816406
    6. '   ' → logprob: -10.503883361816406
    7. '      ' → logprob: -10.628883361816406
    8. '        ' → logprob: -10.753883361816406
    9. '(' → logprob: -11.378883361816406
    10. ',' → logprob: -11.753883361816406

Token 79: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5430797934532166
    2. 'result' (adapté à ' result') → logprob: -1.2930798530578613
    3. ' result' → logprob: -2.0430798530578613
    4. ' ' → logprob: -5.543079853057861
    5. '        ' → logprob: -5.918079853057861
    6. 'r' → logprob: -6.043079853057861
    7. 'n' → logprob: -6.543079853057861
    8. '   ' → logprob: -6.668079853057861
    9. '    ' → logprob: -7.543079853057861
    10. 'int' → logprob: -7.668079853057861

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020835798233747482
    2. '=' → logprob: -3.8958358764648438
    3. ' ' → logprob: -8.270835876464844
    4. ')' → logprob: -11.020835876464844
    5. '<|end|>' → logprob: -11.770835876464844
    6. '  ' → logprob: -12.145835876464844
    7. ' =)' → logprob: -13.020835876464844
    8. ' +=' → logprob: -13.020835876464844
    9. ' =
' → logprob: -13.520835876464844
    10. '<|end|>' → logprob: -15.020835876464844

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00760887423530221
    2. ' ' → logprob: -4.882608890533447
    3. '       ' → logprob: -12.882608413696289
    4. '   ' → logprob: -15.757608413696289
    5. ' ' → logprob: -17.88260841369629
    6. '        ' → logprob: -18.25760841369629
    7. '  ' → logprob: -18.88260841369629
    8. '    ' → logprob: -19.50760841369629
    9. '           ' → logprob: -19.50760841369629
    10. '۰' → logprob: -20.13260841369629

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -17.000003814697266
    4. '```' → logprob: -19.750003814697266
    5. '۰' → logprob: -20.750003814697266
    6. '  ' → logprob: -20.750003814697266
    7. '       ' → logprob: -21.500003814697266
    8. ' ' → logprob: -21.875003814697266
    9. 'int' → logprob: -21.875003814697266
    10. 'sum' → logprob: -22.312503814697266

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12311597168445587
    2. ' for' → logprob: -2.9981160163879395
    3. 'for' → logprob: -3.7481160163879395
    4. '
' → logprob: -3.8731160163879395
    5. '        
' → logprob: -4.4981160163879395
    6. ' ' → logprob: -5.9981160163879395
    7. ' 
' → logprob: -6.2481160163879395
    8. '<|end|>' → logprob: -6.6231160163879395
    9. '   ' → logprob: -7.1231160163879395
    10. '        ' → logprob: -7.2481160163879395

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2948484718799591
    2. ' for' → logprob: -1.9198484420776367
    3. ' ' → logprob: -3.2948484420776367
    4. 'for' → logprob: -3.4198484420776367
    5. '        
' → logprob: -4.169848442077637
    6. '
' → logprob: -5.044848442077637
    7. '<|end|>' → logprob: -5.169848442077637
    8. ' 
' → logprob: -5.669848442077637
    9. '        ' → logprob: -6.044848442077637
    10. '   ' → logprob: -6.919848442077637

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3877759575843811
    2. 'for' (adapté à ' for') → logprob: -1.1377758979797363
    3. '       ' → logprob: -7.012775897979736
    4. ' multiplier' → logprob: -13.262776374816895
    5. '   ' → logprob: -14.512776374816895
    6. 'mult' → logprob: -14.637776374816895
    7. '        
' → logprob: -15.512776374816895
    8. ' base' → logprob: -15.762776374816895
    9. '	for' → logprob: -15.762776374816895
    10. 'base' → logprob: -15.887776374816895

Token 86: ' ch' (ID: 549)
  Prédit: ' char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' char' → logprob: -0.43346354365348816
    2. ' c' → logprob: -1.3084635734558105
    3. ' ch' → logprob: -2.9334635734558105
    4. 'char' → logprob: -3.9334635734558105
    5. 'c' → logprob: -5.6834635734558105
    6. ' digit' → logprob: -6.1834635734558105
    7. 'ch' → logprob: -6.5584635734558105
    8. ' i' → logprob: -6.5584635734558105
    9. ' index' → logprob: -9.308463096618652
    10. 'digit' → logprob: -9.433463096618652

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001442972687073052
    2. 'in' → logprob: -7.001442909240723
    3. ' ' → logprob: -7.626442909240723
    4. '  ' → logprob: -10.626442909240723
    5. '   ' → logprob: -12.501442909240723
    6. '        ' → logprob: -12.751442909240723
    7. '    ' → logprob: -12.751442909240723
    8. 's' → logprob: -13.251442909240723
    9. '       ' → logprob: -13.626442909240723
    10. '<|end|>' → logprob: -13.751442909240723

Token 88: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3132686913013458
    2. 'value' → logprob: -1.3132686614990234
    3. ')value' → logprob: -13.063268661499023
    4. ' ' → logprob: -13.813268661499023
    5. '	value' → logprob: -14.063268661499023
    6. '"value' → logprob: -14.313268661499023
    7. 'alue' → logprob: -14.688268661499023
    8. '.value' → logprob: -14.813268661499023
    9. '(value' → logprob: -14.938268661499023
    10. '$value' → logprob: -15.313268661499023

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001654825289733708
    2. '):' → logprob: -7.126654624938965
    3. ':
' → logprob: -7.626654624938965
    4. ' :' → logprob: -8.001654624938965
    5. '           ' → logprob: -12.001654624938965
    6. '       ' → logprob: -12.126654624938965
    7. ')' → logprob: -12.751654624938965
    8. '):
' → logprob: -12.876654624938965
    9. '.' → logprob: -13.501654624938965
    10. '':' → logprob: -13.626654624938965

Token 90: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011270632967352867
    2. ' ' → logprob: -5.636270523071289
    3. '            ' → logprob: -6.136270523071289
    4. 'result' → logprob: -6.636270523071289
    5. '        ' → logprob: -6.761270523071289
    6. '            
' → logprob: -7.386270523071289
    7. '       ' → logprob: -7.511270523071289
    8. '<|end|>' → logprob: -8.261270523071289
    9. '0' → logprob: -8.636270523071289
    10. ' 
' → logprob: -8.636270523071289

Token 91: ' v' (ID: 323)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.18147532641887665
    2. 'result' → logprob: -1.806475281715393
    3. '               ' → logprob: -7.0564751625061035
    4. '           ' → logprob: -7.5564751625061035
    5. ' value' → logprob: -9.306475639343262
    6. ' ' → logprob: -9.556475639343262
    7. 'value' → logprob: -9.931475639343262
    8. '```' → logprob: -10.681475639343262
    9. '            ' → logprob: -10.806475639343262
    10. ' if' → logprob: -10.806475639343262

Token 92: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4812779426574707
    2. 'al' → logprob: -1.2312779426574707
    3. ' =' → logprob: -2.7312779426574707
    4. 'alue' → logprob: -3.8562779426574707
    5. 'a' → logprob: -5.856277942657471
    6. 'alu' → logprob: -7.481277942657471
    7. 'alid' → logprob: -8.356277465820312
    8. 'ALUE' → logprob: -9.981277465820312
    9. '   ' → logprob: -10.231277465820312
    10. 'als' → logprob: -11.106277465820312

Token 93: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.048587825149297714
    2. ' cls' → logprob: -3.0485877990722656
    3. '(cls' → logprob: -15.548587799072266
    4. '.cls' → logprob: -16.798587799072266
    5. '_cls' → logprob: -16.923587799072266
    6. 'cl' → logprob: -17.048587799072266
    7. 'class' → logprob: -17.798587799072266
    8. '   ' → logprob: -19.423587799072266
    9. 'classmethod' → logprob: -19.548587799072266
    10. 'Cls' → logprob: -20.423587799072266

Token 94: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3869258165359497
    2. '_char' → logprob: -1.1369258165359497
    3. '_chars' → logprob: -10.76192569732666
    4. '.' → logprob: -11.51192569732666
    5. ' _' → logprob: -11.88692569732666
    6. '   ' → logprob: -12.13692569732666
    7. '_CHAR' → logprob: -12.88692569732666
    8. '.char' → logprob: -13.01192569732666
    9. ' ' → logprob: -13.63692569732666
    10. ' .' → logprob: -14.01192569732666

Token 95: 'char' (ID: 3257)
  Prédit: 'char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -1.4021237802808173e-05
    2. '_char' → logprob: -11.250014305114746
    3. '<char' → logprob: -15.125014305114746
    4. ' char' → logprob: -15.500014305114746
    5. 'symbols' → logprob: -16.25001335144043
    6. 'symbol' → logprob: -16.50001335144043
    7. '.char' → logprob: -17.50001335144043
    8. '(char' → logprob: -17.75001335144043
    9. '	char' → logprob: -17.87501335144043
    10. ' ' → logprob: -17.87501335144043

Token 96: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -20.375
    3. '_value' → logprob: -20.75
    4. '_TO' → logprob: -20.875
    5. '-to' → logprob: -21.125
    6. ' to' → logprob: -22.5
    7. 'To' → logprob: -22.875
    8. '_values' → logprob: -23.125
    9. '_from' → logprob: -23.5
    10. '_t' → logprob: -24.25

Token 97: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.100346639752388
    2. 'value' → logprob: -2.350346565246582
    3. 'alue' → logprob: -8.975346565246582
    4. ' value' → logprob: -12.350346565246582
    5. 'v' → logprob: -13.225346565246582
    6. '_' → logprob: -13.350346565246582
    7. '_VALUE' → logprob: -13.600346565246582
    8. 'valu' → logprob: -13.975346565246582
    9. '"value' → logprob: -14.475346565246582
    10. ''value' → logprob: -14.975346565246582

Token 98: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -8.537868779967539e-06
    2. '[' → logprob: -12.250008583068848
    3. '.get' → logprob: -13.000008583068848
    4. '[c' → logprob: -14.000008583068848
    5. '[get' → logprob: -15.250008583068848
    6. '(ch' → logprob: -15.500008583068848
    7. ' [' → logprob: -17.12500762939453
    8. 'ch' → logprob: -17.25000762939453
    9. '[v' → logprob: -17.50000762939453
    10. ' ch' → logprob: -18.50000762939453

Token 99: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02981286123394966
    2. ']
' → logprob: -3.529812812805176
    3. '       ' → logprob: -10.529812812805176
    4. ']
' → logprob: -10.904812812805176
    5. ' ]' → logprob: -11.529812812805176
    6. '           ' → logprob: -12.904812812805176
    7. ' ]
' → logprob: -13.154812812805176
    8. ']

' → logprob: -13.154812812805176
    9. '               ' → logprob: -15.404812812805176
    10. '   ' → logprob: -15.404812812805176

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6507017016410828
    2. '       ' → logprob: -0.9007017016410828
    3. '<|end|>' → logprob: -3.6507017612457275
    4. '        
' → logprob: -3.9007017612457275
    5. '        ' → logprob: -4.400701522827148
    6. 'result' → logprob: -4.900701522827148
    7. ' ' → logprob: -6.650701522827148
    8. '<|end|>' → logprob: -6.775701522827148
    9. ')' → logprob: -7.025701522827148
    10. '   ' → logprob: -8.025701522827148

Token 101: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.25820744037628174
    2. ' result' → logprob: -2.008207321166992
    3. '       ' → logprob: -2.383207321166992
    4. ' if' → logprob: -8.008207321166992
    5. '           ' → logprob: -8.133207321166992
    6. '
' → logprob: -8.383207321166992
    7. 'if' (adapté à ' if') → logprob: -8.758207321166992
    8. '        
' → logprob: -10.883207321166992
    9. '   ' → logprob: -11.258207321166992
    10. '```' → logprob: -11.383207321166992

Token 102: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.02326621301472187
    2. 'v' → logprob: -3.773266315460205
    3. '           ' → logprob: -11.523265838623047
    4. ' not' → logprob: -12.148265838623047
    5. '	v' → logprob: -13.273265838623047
    6. '            ' → logprob: -13.523265838623047
    7. ' ' → logprob: -14.398265838623047
    8. ' ' → logprob: -14.648265838623047
    9. '<|end|>' → logprob: -15.273265838623047
    10. '   ' → logprob: -15.648265838623047

Token 103: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.142953559756279
    2. ' >=' → logprob: -2.017953634262085
    3. ']>=' → logprob: -8.642953872680664
    4. ')>=' → logprob: -10.142953872680664
    5. '≥' → logprob: -10.892953872680664
    6. '<|end|>' → logprob: -10.892953872680664
    7. '>' → logprob: -11.267953872680664
    8. '==' → logprob: -12.642953872680664
    9. ' ' → logprob: -13.392953872680664
    10. ' ' → logprob: -13.642953872680664

Token 104: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.04858805239200592
    2. ' base' → logprob: -3.0485880374908447
    3. '(base' → logprob: -15.798587799072266
    4. 'Base' → logprob: -15.923587799072266
    5. '	base' → logprob: -16.423587799072266
    6. '   ' → logprob: -16.798587799072266
    7. 'b' → logprob: -16.923587799072266
    8. '0' → logprob: -17.048587799072266
    9. ' ' → logprob: -17.423587799072266
    10. '_base' → logprob: -18.173587799072266

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28529030084609985
    2. ':
' → logprob: -1.410290241241455
    3. '               ' → logprob: -5.785290241241455
    4. '           ' → logprob: -7.035290241241455
    5. '):
' → logprob: -10.285290718078613
    6. ' or' → logprob: -10.285290718078613
    7. ':return' → logprob: -10.410290718078613
    8. ':

' → logprob: -11.035290718078613
    9. '):' → logprob: -11.160290718078613
    10. '<|end|>' → logprob: -11.285290718078613

Token 106: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000701707205735147
    2. ' raise' → logprob: -7.625701904296875
    3. '                
' → logprob: -9.750701904296875
    4. ':' → logprob: -10.250701904296875
    5. 'raise' → logprob: -10.375701904296875
    6. ' return' → logprob: -10.750701904296875
    7. '                ' → logprob: -10.875701904296875
    8. ':
' → logprob: -11.250701904296875
    9. '           ' → logprob: -11.500701904296875
    10. '              ' → logprob: -12.500701904296875

Token 107: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.36827510595321655
    2. ' raise' → logprob: -1.3682751655578613
    3. '               ' → logprob: -3.1182751655578613
    4. '                ' → logprob: -5.493275165557861
    5. '                   ' → logprob: -5.743275165557861
    6. '           ' → logprob: -7.618275165557861
    7. '
' → logprob: -7.743275165557861
    8. '            ' → logprob: -7.993275165557861
    9. '	raise' → logprob: -8.743274688720703
    10. '                
' → logprob: -8.868274688720703

Token 108: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.02976241149008274
    2. 'Value' → logprob: -3.5297625064849854
    3. '	Value' → logprob: -11.779762268066406
    4. '_value' → logprob: -13.404762268066406
    5. '_Value' → logprob: -13.779762268066406
    6. 'value' → logprob: -14.654762268066406
    7. ' ' → logprob: -14.654762268066406
    8. '(Value' → logprob: -15.404762268066406
    9. '<Value' → logprob: -15.654762268066406
    10. '```' → logprob: -16.029762268066406

Token 109: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.07894299924373627
    2. 'rror' → logprob: -2.5789430141448975
    3. 'ror' → logprob: -9.953943252563477
    4. 'alue' → logprob: -12.828943252563477
    5. 'r' → logprob: -14.203943252563477
    6. 'error' → logprob: -14.453943252563477
    7. '   ' → logprob: -14.703943252563477
    8. '           ' → logprob: -14.703943252563477
    9. 'SError' → logprob: -14.953943252563477
    10. '       ' → logprob: -15.828943252563477

Token 110: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3715933859348297
    2. '(f' → logprob: -1.3715933561325073
    3. '(' → logprob: -2.871593475341797
    4. '(
' → logprob: -10.371593475341797
    5. '('' → logprob: -10.871593475341797
    6. 'f' → logprob: -12.871593475341797
    7. '(

' → logprob: -14.121593475341797
    8. '("'' → logprob: -14.871593475341797
    9. '()' → logprob: -15.121593475341797
    10. '(
' → logprob: -17.371593475341797

Token 111: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0007666255696676672
    2. ''' → logprob: -8.00076675415039
    3. 'Invalid' → logprob: -8.12576675415039
    4. 'f' → logprob: -9.87576675415039
    5. '")' → logprob: -11.12576675415039
    6. '"value' → logprob: -11.12576675415039
    7. 'invalid' → logprob: -11.50076675415039
    8. ')' → logprob: -11.62576675415039
    9. '("' → logprob: -11.87576675415039
    10. ' f' → logprob: -12.12576675415039

Token 112: 'Digit' (ID: 46997)
  Prédit: 'Invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Invalid' → logprob: -0.03962644934654236
    2. 'Digit' → logprob: -3.914626359939575
    3. 'Character' → logprob: -4.414626598358154
    4. '"' → logprob: -5.539626598358154
    5. 'invalid' → logprob: -6.664626598358154
    6. 'Value' → logprob: -7.414626598358154
    7. ' Invalid' → logprob: -7.914626598358154
    8. ' invalid' → logprob: -8.414626121520996
    9. 'digit' → logprob: -8.664626121520996
    10. ''' → logprob: -10.039626121520996

Token 113: ' '{' (ID: 24918)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.2964811325073242
    2. ' '{' → logprob: -1.6714811325073242
    3. ' value' → logprob: -3.546481132507324
    4. '{' → logprob: -3.921481132507324
    5. ' out' → logprob: -4.421481132507324
    6. 'value' → logprob: -5.671481132507324
    7. ''{' → logprob: -6.296481132507324
    8. ' '' → logprob: -7.546481132507324
    9. ' not' → logprob: -7.546481132507324
    10. ' for' → logprob: -7.546481132507324

Token 114: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.2519509494304657
    2. '{' → logprob: -1.501950979232788
    3. '[ch' → logprob: -11.376951217651367
    4. ' ch' → logprob: -11.751951217651367
    5. '{
' → logprob: -13.626951217651367
    6. '	ch' → logprob: -14.126951217651367
    7. ' {' → logprob: -15.876951217651367
    8. '```' → logprob: -16.376951217651367
    9. 'v' → logprob: -16.751951217651367
    10. 'c' → logprob: -17.126951217651367

Token 115: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2520061731338501
    2. '}'' → logprob: -1.50200617313385
    3. '}' → logprob: -10.002006530761719
    4. ''s' → logprob: -11.752006530761719
    5. ' is' → logprob: -12.127006530761719
    6. ''}' → logprob: -12.252006530761719
    7. 'not' → logprob: -12.877006530761719
    8. '''' → logprob: -13.127006530761719
    9. '{' → logprob: -13.252006530761719
    10. 'is' → logprob: -13.377006530761719

Token 116: ' invalid' (ID: 15796)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4999176263809204
    2. ' is' → logprob: -0.9999176263809204
    3. 'not' → logprob: -3.874917507171631
    4. 'is' → logprob: -6.374917507171631
    5. ' cannot' → logprob: -6.499917507171631
    6. ' out' → logprob: -7.499917507171631
    7. ' does' → logprob: -8.124917984008789
    8. ')' → logprob: -8.624917984008789
    9. 'cannot' → logprob: -8.999917984008789
    10. ' has' → logprob: -9.249917984008789

Token 117: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02170570008456707
    2. ' in' → logprob: -4.271705627441406
    3. 'for' → logprob: -4.896705627441406
    4. ' ' → logprob: -10.646705627441406
    5. 'in' → logprob: -11.521705627441406
    6. '<|end|>' → logprob: -12.396705627441406
    7. ')' → logprob: -13.521705627441406
    8. '	for' → logprob: -14.896705627441406
    9. ' f' → logprob: -14.896705627441406
    10. '.' → logprob: -15.146705627441406

Token 118: ' base' (ID: 3611)
  Prédit: ' base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.0017731155967339873
    2. 'base' → logprob: -6.376772880554199
    3. ' the' → logprob: -10.0017728805542
    4. ' ' → logprob: -11.7517728805542
    5. ' {' → logprob: -12.0017728805542
    6. ' ' → logprob: -12.5017728805542
    7. '{' → logprob: -12.8767728805542
    8. ' number' → logprob: -14.2517728805542
    9. ' given' → logprob: -14.2517728805542
    10. '	base' → logprob: -14.3767728805542

Token 119: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.07889661937952042
    2. '{' → logprob: -2.5788965225219727
    3. ' '{' → logprob: -12.578896522521973
    4. ''{' → logprob: -13.578896522521973
    5. '{k' → logprob: -14.453896522521973
    6. '{x' → logprob: -14.703896522521973
    7. '"{' → logprob: -15.078896522521973
    8. '{s' → logprob: -15.578896522521973
    9. ' ' → logprob: -15.703896522521973
    10. '{sub' → logprob: -16.07889747619629

Token 120: 'base' (ID: 5423)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.24334271252155304
    2. 'base' → logprob: -1.9933427572250366
    3. ' base' → logprob: -3.368342638015747
    4. ' {' → logprob: -3.493342638015747
    5. '}' → logprob: -4.243342876434326
    6. '(base' → logprob: -8.243342399597168
    7. '}")' → logprob: -9.243342399597168
    8. '}{' → logprob: -9.493342399597168
    9. ' }' → logprob: -10.493342399597168
    10. ' ' → logprob: -10.993342399597168

Token 121: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09885255247354507
    2. '}")' → logprob: -2.7238526344299316
    3. '')' → logprob: -4.223852634429932
    4. '")
' → logprob: -4.723852634429932
    5. '}")
' → logprob: -6.098852634429932
    6. '.")' → logprob: -6.848852634429932
    7. ')")' → logprob: -7.098852634429932
    8. '")
' → logprob: -8.598852157592773
    9. ')")
' → logprob: -9.223852157592773
    10. '       ' → logprob: -9.223852157592773

Token 122: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047001905739307404
    2. '       ' → logprob: -3.422001838684082
    3. '
' → logprob: -5.672001838684082
    4. '        
' → logprob: -5.797001838684082
    5. 'result' → logprob: -6.047001838684082
    6. '            
' → logprob: -6.172001838684082
    7. ' result' → logprob: -6.922001838684082
    8. '    
' → logprob: -7.797001838684082
    9. ' 
' → logprob: -7.922001838684082
    10. ')' → logprob: -9.297001838684082

Token 123: ' result' (ID: 1534)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7079026699066162
    2. ' result' → logprob: -1.3329026699066162
    3. 'result' (adapté à ' result') → logprob: -1.4579026699066162
    4. '        
' → logprob: -5.207902908325195
    5. '           ' → logprob: -5.832902908325195
    6. '
' → logprob: -6.332902908325195
    7. '            
' → logprob: -8.207902908325195
    8. '    
' → logprob: -9.082902908325195
    9. '   ' → logprob: -9.582902908325195
    10. ' 
' → logprob: -9.707902908325195

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20803174376487732
    2. '=' → logprob: -1.7080317735671997
    3. ' *=' → logprob: -5.20803165435791
    4. '*=' → logprob: -8.08303165435791
    5. ' <<=' → logprob: -8.20803165435791
    6. ' ' → logprob: -8.45803165435791
    7. '        ' → logprob: -8.95803165435791
    8. ' +=' → logprob: -9.45803165435791
    9. '       ' → logprob: -9.83303165435791
    10. '    ' → logprob: -10.95803165435791

Token 125: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.20141421258449554
    2. 'result' → logprob: -1.7014142274856567
    3. '(result' → logprob: -14.951414108276367
    4. '	result' → logprob: -15.326414108276367
    5. '   ' → logprob: -16.201414108276367
    6. ' ' → logprob: -17.201414108276367
    7. '$result' → logprob: -17.326414108276367
    8. '           ' → logprob: -17.451414108276367
    9. '=result' → logprob: -17.451414108276367
    10. '_result' → logprob: -17.576414108276367

Token 126: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.008627578616142273
    2. '*' → logprob: -4.758627414703369
    3. ' ' → logprob: -12.133627891540527
    4. '       ' → logprob: -12.383627891540527
    5. 'result' → logprob: -13.758627891540527
    6. ' ' → logprob: -14.133627891540527
    7. '           ' → logprob: -15.133627891540527
    8. '   ' → logprob: -15.133627891540527
    9. 's' → logprob: -15.258627891540527
    10. '
' → logprob: -15.258627891540527

Token 127: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.02975083328783512
    2. ' base' → logprob: -3.5297508239746094
    3. '(base' → logprob: -15.65475082397461
    4. ' ' → logprob: -16.15475082397461
    5. '_base' → logprob: -17.02975082397461
    6. '	base' → logprob: -17.27975082397461
    7. '   ' → logprob: -17.90475082397461
    8. '```' → logprob: -17.90475082397461
    9. ';base' → logprob: -19.02975082397461
    10. 'b' → logprob: -19.27975082397461

Token 128: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020699352025986
    2. ' +' → logprob: -2.3502070903778076
    3. ' plus' → logprob: -15.725207328796387
    4. '+
' → logprob: -16.35020637512207
    5. 'plus' → logprob: -16.97520637512207
    6. ' ' → logprob: -17.60020637512207
    7. '+x' → logprob: -17.72520637512207
    8. '+r' → logprob: -17.72520637512207
    9. '+c' → logprob: -18.10020637512207
    10. ' ' → logprob: -18.35020637512207

Token 129: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0485873706638813
    2. ' v' → logprob: -3.0485873222351074
    3. '	v' → logprob: -17.798587799072266
    4. ' ' → logprob: -19.048587799072266
    5. '_v' → logprob: -19.923587799072266
    6. '   ' → logprob: -20.423587799072266
    7. '```' → logprob: -20.423587799072266
    8. '
' → logprob: -20.548587799072266
    9. '    ' → logprob: -21.173587799072266
    10. ')v' → logprob: -21.298587799072266

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019942589104175568
    2. '
' → logprob: -4.394942760467529
    3. 'return' → logprob: -5.644942760467529
    4. ' return' → logprob: -6.769942760467529
    5. '   ' → logprob: -6.769942760467529
    6. '        
' → logprob: -7.519942760467529
    7. '' → logprob: -7.644942760467529
    8. 'newline' → logprob: -9.019942283630371
    9. '    
' → logprob: -9.269942283630371
    10. '\n' → logprob: -9.269942283630371

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005349211278371513
    2. 'return' → logprob: -8.875535011291504
    3. '
' → logprob: -9.000535011291504
    4. ' return' → logprob: -9.125535011291504
    5. '   ' → logprob: -9.375535011291504
    6. '        
' → logprob: -10.125535011291504
    7. '' → logprob: -11.750535011291504
    8. '    
' → logprob: -12.250535011291504
    9. 'newline' → logprob: -12.250535011291504
    10. '	' → logprob: -12.500535011291504

Token 132: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10680222511291504
    2. 'return' (adapté à ' return') → logprob: -2.606802225112915
    3. ' return' → logprob: -3.606802225112915
    4. '   ' → logprob: -8.231801986694336
    5. '	return' → logprob: -9.481801986694336
    6. '
' → logprob: -11.106801986694336
    7. ':return' → logprob: -11.231801986694336
    8. '        
' → logprob: -12.606801986694336
    9. ' ' → logprob: -12.731801986694336
    10. '	' → logprob: -12.981801986694336

Token 133: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.20141352713108063
    2. 'result' → logprob: -1.7014135122299194
    3. '(result' → logprob: -16.451414108276367
    4. ' ' → logprob: -17.326414108276367
    5. '	result' → logprob: -17.326414108276367
    6. '_result' → logprob: -17.451414108276367
    7. '$result' → logprob: -18.201414108276367
    8. '=result' → logprob: -18.201414108276367
    9. ' ' → logprob: -18.326414108276367
    10. '[result' → logprob: -19.076414108276367

Token 134: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2719338536262512
    2. '<|end|>' → logprob: -1.7719337940216064
    3. '   ' → logprob: -3.3969337940216064
    4. '    
' → logprob: -4.0219340324401855
    5. ' ' → logprob: -5.1469340324401855
    6. '```' → logprob: -5.6469340324401855
    7. '  
' → logprob: -5.8969340324401855
    8. ' 
' → logprob: -6.3969340324401855
    9. '<|end|>' → logprob: -7.0219340324401855
    10. '   
' → logprob: -7.6469340324401855

Token 136: ' Binary' (ID: 32672)
  Prédit: ' Hex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Hex' → logprob: -0.7627626061439514
    2. ' Custom' → logprob: -1.3877625465393066
    3. ' Decimal' → logprob: -1.7627625465393066
    4. ' Binary' → logprob: -3.3877625465393066
    5. 'Hex' → logprob: -3.7627625465393066
    6. ' Advanced' → logprob: -4.137762546539307
    7. ' Derived' → logprob: -4.762762546539307
    8. ' Extended' → logprob: -4.887762546539307
    9. 'Custom' → logprob: -5.387762546539307
    10. ' Base' → logprob: -5.387762546539307

Token 137: 'Segment' (ID: 24880)
  Prédit: 'Converter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -0.00013488641707226634
    2. ':' → logprob: -9.500134468078613
    3. 'To' → logprob: -11.125134468078613
    4. 'Convert' → logprob: -11.500134468078613
    5. 'Reader' → logprob: -12.000134468078613
    6. 'Encoder' → logprob: -12.125134468078613
    7. 'Base' → logprob: -12.250134468078613
    8. 'Operator' → logprob: -12.875134468078613
    9. 'Conversion' → logprob: -13.250134468078613
    10. 'Conv' → logprob: -13.375134468078613

Token 138: 'er' (ID: 259)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02786269597709179
    2. '(' → logprob: -4.902862548828125
    3. 'Converter' → logprob: -5.027862548828125
    4. 'Parser' → logprob: -5.777862548828125
    5. '(Base' → logprob: -6.402862548828125
    6. 'Iterator' → logprob: -6.527862548828125
    7. 'Splitter' → logprob: -6.527862548828125
    8. ':
' → logprob: -6.652862548828125
    9. '):' → logprob: -6.777862548828125
    10. 'Reader' → logprob: -7.277862548828125

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.73052782076411e-05
    2. ':
' → logprob: -10.000067710876465
    3. '(' → logprob: -11.625067710876465
    4. ' :' → logprob: -12.000067710876465
    5. ':def' → logprob: -12.750067710876465
    6. '(Base' → logprob: -13.625067710876465
    7. '):' → logprob: -14.375067710876465
    8. ':

' → logprob: -14.875067710876465
    9. '<|end|>' → logprob: -14.875067710876465
    10. '(B' → logprob: -15.375067710876465

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003190193965565413
    2. 'def' → logprob: -8.625319480895996
    3. '    
' → logprob: -9.375319480895996
    4. ' def' → logprob: -9.875319480895996
    5. ':' → logprob: -14.625319480895996
    6. '
' → logprob: -14.875319480895996
    7. '(' → logprob: -15.000319480895996
    8. '   ' → logprob: -15.000319480895996
    9. ' 
' → logprob: -15.625319480895996
    10. '#' → logprob: -15.625319480895996

Token 141: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.11359704285860062
    2. '   ' → logprob: -2.8635971546173096
    3. 'def' → logprob: -3.1135971546173096
    4. ' @' → logprob: -5.3635969161987305
    5. ' _' → logprob: -7.1135969161987305
    6. '@' → logprob: -8.11359691619873
    7. '_' → logprob: -10.98859691619873
    8. '_def' → logprob: -11.23859691619873
    9. '_indent' → logprob: -12.11359691619873
    10. '    ' → logprob: -12.36359691619873

Token 142: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005721505265682936
    2. ' def' → logprob: -5.380721569061279
    3. '@' → logprob: -7.630721569061279
    4. 'class' → logprob: -8.255721092224121
    5. '   ' → logprob: -8.505721092224121
    6. '__' → logprob: -9.380721092224121
    7. '_def' → logprob: -11.005721092224121
    8. '"""' → logprob: -11.630721092224121
    9. '@property' → logprob: -12.005721092224121
    10. '_' → logprob: -12.005721092224121

Token 143: ' Seg' (ID: 13616)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7838473916053772
    2. 'class' → logprob: -1.5338473320007324
    3. '   ' → logprob: -2.2838473320007324
    4. 'def' → logprob: -3.5338473320007324
    5. ' def' → logprob: -3.5338473320007324
    6. 'Class' → logprob: -3.9088473320007324
    7. 'Spl' → logprob: -3.9088473320007324
    8. ' Converts' → logprob: -3.9088473320007324
    9. 'Segments' → logprob: -4.033847332000732
    10. 'Binary' → logprob: -4.158847332000732

Token 144: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.10039256513118744
    2. 'ment' → logprob: -2.3503925800323486
    3. 'mentation' → logprob: -8.97539234161377
    4. 'mentor' → logprob: -10.22539234161377
    5. 'm' → logprob: -12.10039234161377
    6. '```' → logprob: -12.10039234161377
    7. 'mental' → logprob: -12.85039234161377
    8. 'Ment' → logprob: -12.85039234161377
    9. 'mentar' → logprob: -12.97539234161377
    10. 'mented' → logprob: -13.72539234161377

Token 145: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.17308640480041504
    2. 'binary' → logprob: -2.048086404800415
    3. ' a' → logprob: -3.798086404800415
    4. ' bytes' → logprob: -6.048086166381836
    5. ' an' → logprob: -6.673086166381836
    6. ' bits' → logprob: -6.923086166381836
    7. ':' → logprob: -7.173086166381836
    8. 'bits' → logprob: -7.673086166381836
    9. ' bit' → logprob: -7.923086166381836
    10. '_binary' → logprob: -8.423086166381836

Token 146: ' strings' (ID: 18279)
  Prédit: ' strings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' strings' → logprob: -0.43709754943847656
    2. ' data' → logprob: -1.4370975494384766
    3. 'strings' → logprob: -2.6870975494384766
    4. 'data' → logprob: -3.4370975494384766
    5. ' sequences' → logprob: -4.812097549438477
    6. 'string' → logprob: -6.062097549438477
    7. ' streams' → logprob: -6.312097549438477
    8. ' code' → logprob: -6.437097549438477
    9. ' string' → logprob: -7.437097549438477
    10. ' numbers' → logprob: -7.437097549438477

Token 147: ' obtained' (ID: 17747)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.08615767955780029
    2. ' by' → logprob: -3.33615779876709
    3. '   ' → logprob: -3.83615779876709
    4. ' for' → logprob: -4.46115779876709
    5. 'into' → logprob: -5.21115779876709
    6. ' based' → logprob: -5.96115779876709
    7. '.' → logprob: -6.46115779876709
    8. ' to' → logprob: -6.46115779876709
    9. ',' → logprob: -7.58615779876709
    10. '```' → logprob: -8.08615779876709

Token 148: ' after' (ID: 1934)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5760394334793091
    2. 'from' → logprob: -0.8260394334793091
    3. '   ' → logprob: -9.82603931427002
    4. ' through' → logprob: -11.57603931427002
    5. ' ' → logprob: -11.82603931427002
    6. ',' → logprob: -12.20103931427002
    7. ' after' → logprob: -12.32603931427002
    8. ' as' → logprob: -12.32603931427002
    9. '=' → logprob: -13.07603931427002
    10. ' via' → logprob: -13.45103931427002

Token 149: ' removing' (ID: 28559)
  Prédit: 'conversion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conversion' → logprob: -0.25343844294548035
    2. 'base' → logprob: -2.3784384727478027
    3. 'Base' → logprob: -3.2534384727478027
    4. ' conversion' → logprob: -3.6284384727478027
    5. ' Base' → logprob: -3.7534384727478027
    6. 'encoding' → logprob: -4.253438472747803
    7. ' base' → logprob: -4.253438472747803
    8. 'hex' → logprob: -6.378438472747803
    9. ' decoding' → logprob: -6.378438472747803
    10. 'binary' → logprob: -6.753438472747803

Token 150: ' all' (ID: 722)
  Prédit: 'wh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wh' → logprob: -1.202888011932373
    2. ' whitespace' → logprob: -1.577888011932373
    3. ' spaces' → logprob: -1.827888011932373
    4. ' leading' → logprob: -2.077888011932373
    5. 'leading' → logprob: -2.952888011932373
    6. 'spaces' → logprob: -3.202888011932373
    7. ' comments' → logprob: -3.702888011932373
    8. 'comments' → logprob: -3.827888011932373
    9. 'padding' → logprob: -4.077888011932373
    10. ' whites' → logprob: -4.077888011932373

Token 151: ' zeros' (ID: 42274)
  Prédit: ' whitespace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' whitespace' → logprob: -0.32292070984840393
    2. 'wh' → logprob: -2.322920799255371
    3. ' spaces' → logprob: -2.322920799255371
    4. ' whites' → logprob: -3.572920799255371
    5. '0' → logprob: -4.447920799255371
    6. 'spaces' → logprob: -4.572920799255371
    7. '_' → logprob: -4.697920799255371
    8. ' leading' → logprob: -5.572920799255371
    9. ' comments' → logprob: -5.822920799255371
    10. ' vowels' → logprob: -6.697920799255371

Token 152: ' from' (ID: 591)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2528245449066162
    2. ' into' → logprob: -2.877824544906616
    3. 'from' → logprob: -3.127824544906616
    4. ',' → logprob: -3.377824544906616
    5. ' from' → logprob: -3.377824544906616
    6. ' and' → logprob: -3.627824544906616
    7. 'and' → logprob: -4.877824783325195
    8. '<|end|>' → logprob: -5.002824783325195
    9. '"""' → logprob: -5.502824783325195
    10. '```' → logprob: -6.502824783325195

Token 153: ' binary' (ID: 15600)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4911843538284302
    2. ' the' → logprob: -1.1161843538284302
    3. ' input' → logprob: -3.7411842346191406
    4. 'a' → logprob: -3.9911842346191406
    5. 'input' → logprob: -4.616184234619141
    6. ' a' → logprob: -5.116184234619141
    7. 'binary' → logprob: -8.36618423461914
    8. 'code' → logprob: -8.74118423461914
    9. 'base' → logprob: -8.74118423461914
    10. 'doc' → logprob: -8.74118423461914

Token 154: ' representation' (ID: 22311)
  Prédit: 'strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strings' → logprob: -0.4332786798477173
    2. ' strings' → logprob: -1.0582786798477173
    3. 'string' → logprob: -6.058278560638428
    4. 'numbers' → logprob: -7.308278560638428
    5. ' numbers' → logprob: -7.933278560638428
    6. ' segments' → logprob: -8.683279037475586
    7. 'segments' → logprob: -8.683279037475586
    8. ' string' → logprob: -8.933279037475586
    9. 's' → logprob: -9.308279037475586
    10. '_strings' → logprob: -9.558279037475586

Token 155: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6031056046485901
    2. ' of' → logprob: -1.4781055450439453
    3. ' into' → logprob: -2.7281055450439453
    4. '   ' → logprob: -3.1031055450439453
    5. 's' → logprob: -3.6031055450439453
    6. 'of' → logprob: -3.8531055450439453
    7. '"""' → logprob: -4.103105545043945
    8. ',' → logprob: -4.228105545043945
    9. ' and' → logprob: -4.353105545043945
    10. 'and' → logprob: -4.853105545043945

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9285504221916199
    2. '.' → logprob: -1.5535504817962646
    3. ' into' → logprob: -1.6785504817962646
    4. ' of' → logprob: -2.0535504817962646
    5. '"""' → logprob: -3.4285504817962646
    6. ')' → logprob: -4.3035502433776855
    7. ' strings' → logprob: -5.0535502433776855
    8. ' to' → logprob: -5.0535502433776855
    9. ',' → logprob: -5.3035502433776855
    10. '"' → logprob: -5.3035502433776855

Token 157: ' and' (ID: 326)
  Prédit: ' into'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' into' → logprob: -0.8396487832069397
    2. '.' → logprob: -1.214648723602295
    3. ',' → logprob: -2.714648723602295
    4. '"""' → logprob: -2.714648723602295
    5. ' of' → logprob: -2.964648723602295
    6. ' and' → logprob: -3.839648723602295
    7. ' to' → logprob: -4.089648723602295
    8. '   ' → logprob: -4.214648723602295
    9. 'into' → logprob: -4.714648723602295
    10. 'and' (adapté à ' and') → logprob: -4.964648723602295

Token 158: ' splitting' (ID: 87130)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -1.7276606559753418
    2. ' splitting' → logprob: -2.352660655975342
    3. ' replacing' → logprob: -2.477660655975342
    4. 'rem' → logprob: -2.477660655975342
    5. 'group' → logprob: -2.477660655975342
    6. ' grouping' → logprob: -2.602660655975342
    7. ' then' → logprob: -2.727660655975342
    8. 're' → logprob: -2.727660655975342
    9. 'keeping' → logprob: -3.727660655975342
    10. 'then' → logprob: -3.727660655975342

Token 159: ' into' (ID: 1511)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.9279454946517944
    2. ' by' → logprob: -1.3029454946517944
    3. ' the' → logprob: -1.8029454946517944
    4. ' into' → logprob: -2.677945613861084
    5. ' them' → logprob: -3.302945613861084
    6. ' at' → logprob: -3.927945613861084
    7. 'the' → logprob: -4.302945613861084
    8. 'on' → logprob: -4.927945613861084
    9. 'by' → logprob: -5.052945613861084
    10. ' based' → logprob: -5.677945613861084

Token 160: ' contiguous' (ID: 130997)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.1110413074493408
    2. 'groups' → logprob: -1.2360413074493408
    3. ' groups' → logprob: -2.361041307449341
    4. 'runs' → logprob: -2.486041307449341
    5. ' segments' → logprob: -3.111041307449341
    6. 'blocks' → logprob: -3.611041307449341
    7. 'chunks' → logprob: -3.861041307449341
    8. 'con' → logprob: -4.361041069030762
    9. 'fixed' → logprob: -4.486041069030762
    10. '1' → logprob: -4.611041069030762

Token 161: ' '' (ID: 461)
  Prédit: ' segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segments' → logprob: -0.9406806826591492
    2. 'segments' → logprob: -1.565680742263794
    3. ' sequences' → logprob: -2.315680742263794
    4. ' blocks' → logprob: -2.315680742263794
    5. ' non' → logprob: -3.065680742263794
    6. 'non' → logprob: -3.065680742263794
    7. ' substr' → logprob: -3.940680742263794
    8. 'blocks' → logprob: -3.940680742263794
    9. ' ones' → logprob: -4.315680503845215
    10. 'se' → logprob: -4.815680503845215

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06456835567951202
    2. 'ones' → logprob: -2.814568281173706
    3. ' ones' → logprob: -6.814568519592285
    4. '11' → logprob: -7.564568519592285
    5. 'runs' → logprob: -7.814568519592285
    6. 'one' → logprob: -8.564568519592285
    7. '111' → logprob: -8.689568519592285
    8. ''' → logprob: -10.189568519592285
    9. 'segments' → logprob: -10.189568519592285
    10. 'groups' → logprob: -10.314568519592285

Token 163: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5851112008094788
    2. ''s' → logprob: -0.8351112008094788
    3. 's' → logprob: -4.710111141204834
    4. 'segments' → logprob: -10.710111618041992
    5. ''*' → logprob: -10.710111618041992
    6. '+'' → logprob: -10.960111618041992
    7. '''' → logprob: -11.960111618041992
    8. '"s' → logprob: -12.210111618041992
    9. '`s' → logprob: -12.210111618041992
    10. ''''' → logprob: -12.460111618041992

Token 164: ' runs' (ID: 13719)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6369277238845825
    2. ''s' → logprob: -0.7619277238845825
    3. ''' → logprob: -5.511927604675293
    4. ' segments' → logprob: -9.261927604675293
    5. ' s' → logprob: -10.261927604675293
    6. '`s' → logprob: -10.386927604675293
    7. '"s' → logprob: -10.386927604675293
    8. '1' → logprob: -10.511927604675293
    9. 'segments' → logprob: -11.261927604675293
    10. '```' → logprob: -11.386927604675293

Token 165: '.
' (ID: 558)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.8140649795532227
    2. '   ' → logprob: -1.1890649795532227
    3. '.' → logprob: -1.4390649795532227
    4. '"' → logprob: -5.314064979553223
    5. '
' → logprob: -6.064064979553223
    6. ':' → logprob: -6.064064979553223
    7. '."""' → logprob: -6.939064979553223
    8. '```' → logprob: -7.064064979553223
    9. ',' → logprob: -7.439064979553223
    10. ')' → logprob: -7.939064979553223

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005947998259216547
    2. '"""' → logprob: -5.380948066711426
    3. '
' → logprob: -7.130948066711426
    4. '    
' → logprob: -7.755948066711426
    5. '```' → logprob: -10.880948066711426
    6. ')' → logprob: -10.880948066711426
    7. ' """' → logprob: -11.255948066711426
    8. 'def' → logprob: -11.505948066711426
    9. '"' → logprob: -11.630948066711426
    10. 'class' → logprob: -12.255948066711426

Token 167: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6447805166244507
    2. '"""' → logprob: -0.7697805166244507
    3. '
' → logprob: -4.64478063583374
    4. ' """' → logprob: -7.39478063583374
    5. '```' → logprob: -7.64478063583374
    6. '"""
' → logprob: -7.89478063583374
    7. '""' → logprob: -7.89478063583374
    8. '    
' → logprob: -8.144780158996582
    9. '"' → logprob: -8.519780158996582
    10. ')' → logprob: -10.269780158996582

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47458168864250183
    2. 'def' → logprob: -0.9745817184448242
    3. ' def' → logprob: -7.599581718444824
    4. '    
' → logprob: -12.974581718444824
    5. 'class' → logprob: -14.599581718444824
    6. '@' → logprob: -14.849581718444824
    7. '	def' → logprob: -15.224581718444824
    8. '_' → logprob: -15.849581718444824
    9. '   ' → logprob: -16.474580764770508
    10. '    ' → logprob: -16.724580764770508

Token 169: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026451824232935905
    2. '@' (adapté à ' @') → logprob: -3.651451826095581
    3. '   ' → logprob: -9.65145206451416
    4. ' def' → logprob: -9.77645206451416
    5. '_def' → logprob: -10.77645206451416
    6. '_de' → logprob: -13.52645206451416
    7. ' @' → logprob: -13.65145206451416
    8. '__' → logprob: -13.65145206451416
    9. '@property' → logprob: -13.65145206451416
    10. '_segment' → logprob: -13.90145206451416

Token 170: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.018866823986172676
    2. 'classmethod' → logprob: -4.018867015838623
    3. 'dat' → logprob: -7.268867015838623
    4. 'property' → logprob: -10.893866539001465
    5. 'static' → logprob: -13.768866539001465
    6. 'class' → logprob: -17.26886749267578
    7. 'typing' → logprob: -17.76886749267578
    8. 'Static' → logprob: -18.26886749267578
    9. 'init' → logprob: -18.51886749267578
    10. '__' → logprob: -19.01886749267578

Token 171: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06134418025612831
    2. '   ' → logprob: -3.4363441467285156
    3. ' def' → logprob: -3.8113441467285156
    4. '
' → logprob: -5.311344146728516
    5. '(' → logprob: -9.061344146728516
    6. ' ' → logprob: -10.061344146728516
    7. '    
' → logprob: -10.436344146728516
    8. '(def' → logprob: -10.686344146728516
    9. '  ' → logprob: -11.561344146728516
    10. '()' → logprob: -11.686344146728516

Token 172: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4871947169303894
    2. 'def' → logprob: -0.9871947169303894
    3. ' def' → logprob: -4.987194538116455
    4. '   ' → logprob: -5.112194538116455
    5. '    
' → logprob: -9.112195014953613
    6. '  
' → logprob: -10.237195014953613
    7. ' 
' → logprob: -12.112195014953613
    8. '\' → logprob: -12.112195014953613
    9. '(' → logprob: -12.237195014953613
    10. '	def' → logprob: -12.362195014953613

Token 173: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00041398804751224816
    2. 'segment' → logprob: -7.87541389465332
    3. ' def' → logprob: -10.37541389465332
    4. 'split' → logprob: -13.37541389465332
    5. 'seg' → logprob: -14.87541389465332
    6. '
' → logprob: -15.25041389465332
    7. 'from' → logprob: -15.62541389465332
    8. ' segment' → logprob: -15.87541389465332
    9. 'remove' → logprob: -16.12541389465332
    10. 'Segment' → logprob: -17.12541389465332

Token 174: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.03824034705758095
    2. ' segment' → logprob: -3.288240432739258
    3. 'split' → logprob: -9.538240432739258
    4. '_segment' → logprob: -9.788240432739258
    5. 'remove' → logprob: -9.913240432739258
    6. 'from' → logprob: -11.538240432739258
    7. 'def' → logprob: -13.413240432739258
    8. ' remove' → logprob: -13.413240432739258
    9. 'segments' → logprob: -13.413240432739258
    10. '(segment' → logprob: -13.538240432739258

Token 175: '(binary' (ID: 139383)
  Prédit: '(binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(binary' → logprob: -0.007816120982170105
    2. '(value' → logprob: -5.257816314697266
    3. '(bin' → logprob: -6.132816314697266
    4. '(s' → logprob: -8.882816314697266
    5. '(data' → logprob: -9.757816314697266
    6. '(bits' → logprob: -10.007816314697266
    7. '(b' → logprob: -10.007816314697266
    8. '(' → logprob: -10.382816314697266
    9. '(input' → logprob: -10.632816314697266
    10. 'binary' → logprob: -10.882816314697266

Token 176: '_str' (ID: 6182)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.4426272213459015
    2. '_str' → logprob: -1.692627191543579
    3. ':' → logprob: -2.442627191543579
    4. 'string' → logprob: -2.817627191543579
    5. 'str' → logprob: -4.067627429962158
    6. '):' → logprob: -4.817627429962158
    7. ':str' → logprob: -7.317627429962158
    8. '):
' → logprob: -8.317626953125
    9. '_strings' → logprob: -8.817626953125
    10. '_:' → logprob: -8.942626953125

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006016841623932123
    2. '):' → logprob: -5.131016731262207
    3. ')' → logprob: -9.631016731262207
    4. ':str' → logprob: -11.381016731262207
    5. '):
' → logprob: -11.756016731262207
    6. ' :' → logprob: -13.631016731262207
    7. '   ' → logprob: -14.006016731262207
    8. '():' → logprob: -14.256016731262207
    9. ' ):' → logprob: -16.131017684936523
    10. 's' → logprob: -16.131017684936523

Token 178: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.14459124207496643
    2. ' str' → logprob: -2.0195913314819336
    3. ')' → logprob: -6.269591331481934
    4. '   ' → logprob: -12.394591331481934
    5. '[str' → logprob: -12.394591331481934
    6. ' ' → logprob: -12.769591331481934
    7. 'binary' → logprob: -13.144591331481934
    8. 's' → logprob: -13.644591331481934
    9. ' )' → logprob: -13.644591331481934
    10. '):
' → logprob: -13.644591331481934

Token 179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')->' → logprob: -16.0
    3. ' )' → logprob: -16.375
    4. '   ' → logprob: -16.5
    5. '):' → logprob: -17.25
    6. '")' → logprob: -17.5
    7. ':' → logprob: -18.0
    8. '`)' → logprob: -18.625
    9. ',)' → logprob: -18.875
    10. '')' → logprob: -19.0

Token 180: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.11912116408348083
    2. ' ->' → logprob: -2.2441210746765137
    3. ')' → logprob: -5.744121074676514
    4. '   ' → logprob: -5.869121074676514
    5. ':' → logprob: -8.869121551513672
    6. ')->' → logprob: -9.994121551513672
    7. '       ' → logprob: -10.619121551513672
    8. ' ' → logprob: -10.744121551513672
    9. '>' → logprob: -11.994121551513672
    10. '  ' → logprob: -12.244121551513672

Token 181: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.11035033315420151
    2. ' List' → logprob: -2.6103503704071045
    3. ' Iterator' → logprob: -4.110350131988525
    4. 'Iterator' → logprob: -4.235350131988525
    5. '[List' → logprob: -9.610350608825684
    6. ' ' → logprob: -11.360350608825684
    7. 'list' → logprob: -12.360350608825684
    8. ' list' → logprob: -12.985350608825684
    9. 'Optional' → logprob: -13.610350608825684
    10. 'Iterable' → logprob: -13.735350608825684

Token 182: '[int' (ID: 40124)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.274932143744081e-05
    2. '[List' → logprob: -10.375042915344238
    3. '[int' → logprob: -11.500042915344238
    4. '[' → logprob: -13.625042915344238
    5. 'str' → logprob: -16.375041961669922
    6. '[String' → logprob: -19.125041961669922
    7. '[
' → logprob: -19.750041961669922
    8. '[string' → logprob: -20.125041961669922
    9. ' [' → logprob: -20.125041961669922
    10. '(str' → logprob: -20.250041961669922

Token 183: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008597672916948795
    2. ']:
' → logprob: -5.1335978507995605
    3. ']' → logprob: -6.0085978507995605
    4. '):' → logprob: -9.133597373962402
    5. ']:
' → logprob: -9.383597373962402
    6. '"]:' → logprob: -12.008597373962402
    7. '):
' → logprob: -12.883597373962402
    8. '']:' → logprob: -13.133597373962402
    9. ']:

' → logprob: -13.383597373962402
    10. ']):' → logprob: -14.008597373962402

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13273349404335022
    2. '[]' → logprob: -2.2577335834503174
    3. 'result' → logprob: -4.257733345031738
    4. 'tokens' → logprob: -6.382733345031738
    5. 'segments' → logprob: -6.507733345031738
    6. 'indices' → logprob: -7.757733345031738
    7. '[' → logprob: -7.882733345031738
    8. '   ' → logprob: -8.382733345031738
    9. ' []' → logprob: -8.632733345031738
    10. 'return' → logprob: -8.882733345031738

Token 185: ' #' (ID: 1069)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.1513972282409668
    2. 'result' → logprob: -2.026397228240967
    3. 'return' → logprob: -6.026397228240967
    4. ' segments' → logprob: -6.401397228240967
    5. '[' → logprob: -6.401397228240967
    6. '       ' → logprob: -7.276397228240967
    7. ' result' → logprob: -7.401397228240967
    8. 'results' → logprob: -8.151397705078125
    9. 'length' → logprob: -8.526397705078125
    10. 'parts' → logprob: -8.526397705078125

Token 186: ' binary' (ID: 15600)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.07349485158920288
    2. 'result' → logprob: -3.0734949111938477
    3. 'ones' → logprob: -5.073494911193848
    4. ' segments' → logprob: -5.073494911193848
    5. 'runs' → logprob: -5.448494911193848
    6. 'return' → logprob: -5.948494911193848
    7. 'parts' → logprob: -6.198494911193848
    8. ' result' → logprob: -7.198494911193848
    9. '   ' → logprob: -7.323494911193848
    10. 'res' → logprob: -8.573494911193848

Token 187: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.009198139421641827
    2. '_segments' → logprob: -5.759198188781738
    3. '_parts' → logprob: -6.384198188781738
    4. '_strings' → logprob: -7.134198188781738
    5. 'str' → logprob: -7.259198188781738
    6. '_list' → logprob: -7.259198188781738
    7. '_runs' → logprob: -7.509198188781738
    8. '_values' → logprob: -7.884198188781738
    9. '_' → logprob: -8.509198188781738
    10. ' =' → logprob: -9.134198188781738

Token 188: ' consists' (ID: 20083)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07926857471466064
    2. '=' → logprob: -2.704268455505371
    3. '.split' → logprob: -6.079268455505371
    4. '       ' → logprob: -6.704268455505371
    5. '   ' → logprob: -6.829268455505371
    6. '_tokens' → logprob: -7.329268455505371
    7. ')' → logprob: -7.954268455505371
    8. '.replace' → logprob: -8.204268455505371
    9. ':' → logprob: -8.329268455505371
    10. '_' → logprob: -8.329268455505371

Token 189: ' only' (ID: 1606)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.0990065336227417
    2. ' of' → logprob: -1.3490065336227417
    3. '   ' → logprob: -1.5990065336227417
    4. 'only' → logprob: -1.8490065336227417
    5. ' only' → logprob: -3.4740066528320312
    6. '       ' → logprob: -5.224006652832031
    7. ' solely' → logprob: -5.224006652832031
    8. 'ent' → logprob: -6.474006652832031
    9. ' exclusively' → logprob: -6.474006652832031
    10. ' entirely' → logprob: -7.099006652832031

Token 190: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.694065511226654
    2. 'of' → logprob: -0.694065511226654
    3. '   ' → logprob: -7.069065570831299
    4. ' ' → logprob: -10.56906509399414
    5. '       ' → logprob: -11.19406509399414
    6. ''' → logprob: -11.44406509399414
    7. '  ' → logprob: -12.44406509399414
    8. '
' → logprob: -12.69406509399414
    9. '1' → logprob: -13.31906509399414
    10. '('' → logprob: -13.56906509399414

Token 191: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011788899078965187
    2. '1' → logprob: -4.761788845062256
    3. ' '' → logprob: -6.011788845062256
    4. '"' → logprob: -7.386788845062256
    5. 'ones' → logprob: -10.636789321899414
    6. '['' → logprob: -11.136789321899414
    7. ' ones' → logprob: -11.136789321899414
    8. ' ' → logprob: -11.261789321899414
    9. 'binary' → logprob: -11.761789321899414
    10. '`' → logprob: -12.136789321899414

Token 192: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.898723561083898e-05
    2. ''' → logprob: -10.250079154968262
    3. ''s' → logprob: -11.250079154968262
    4. 'ones' → logprob: -11.625079154968262
    5. '11' → logprob: -12.000079154968262
    6. '0' → logprob: -12.750079154968262
    7. '10' → logprob: -13.187579154968262
    8. '111' → logprob: -13.250079154968262
    9. ' ' → logprob: -13.562579154968262
    10. '"' → logprob: -14.000079154968262

Token 193: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10051407665014267
    2. ''s' → logprob: -2.4755141735076904
    3. 's' → logprob: -4.850513935089111
    4. '1' → logprob: -5.975513935089111
    5. 'and' → logprob: -7.100513935089111
    6. ' and' → logprob: -8.97551441192627
    7. '')' → logprob: -10.22551441192627
    8. ''''' → logprob: -10.35051441192627
    9. '''' → logprob: -10.35051441192627
    10. ''or' → logprob: -10.60051441192627

Token 194: ' or' (ID: 503)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026980500668287277
    2. ' and' → logprob: -4.401980400085449
    3. 'and' → logprob: -4.901980400085449
    4. ''s' → logprob: -5.276980400085449
    5. ''' → logprob: -6.651980400085449
    6. ' or' → logprob: -7.901980400085449
    7. '1' → logprob: -9.77698040008545
    8. ' s' → logprob: -10.02698040008545
    9. ',' → logprob: -10.27698040008545
    10. ' ' → logprob: -11.90198040008545

Token 195: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.028691964223980904
    2. ' '' → logprob: -4.15369176864624
    3. '1' → logprob: -4.40369176864624
    4. 's' → logprob: -8.653692245483398
    5. ' ' → logprob: -8.903692245483398
    6. '"' → logprob: -11.778692245483398
    7. '`' → logprob: -12.028692245483398
    8. ''s' → logprob: -12.028692245483398
    9. '['' → logprob: -12.403692245483398
    10. '   ' → logprob: -13.028692245483398

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009007388725876808
    2. ''' → logprob: -7.125900745391846
    3. ''s' → logprob: -9.625900268554688
    4. 's' → logprob: -11.125900268554688
    5. ' ' → logprob: -12.750900268554688
    6. '')' → logprob: -12.875900268554688
    7. '"' → logprob: -13.375900268554688
    8. '0' → logprob: -13.750900268554688
    9. '11' → logprob: -14.000900268554688
    10. 'ones' → logprob: -14.125900268554688

Token 197: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6618367433547974
    2. ''s' → logprob: -1.1618367433547974
    3. ''
' → logprob: -2.286836624145508
    4. '')' → logprob: -3.036836624145508
    5. '')
' → logprob: -4.536836624145508
    6. '']' → logprob: -5.786836624145508
    7. 's' → logprob: -5.786836624145508
    8. ']'
' → logprob: -6.536836624145508
    9. ']'' → logprob: -6.786836624145508
    10. '',' → logprob: -7.786836624145508

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026460483204573393
    2. 'tokens' → logprob: -6.752645969390869
    3. 'segments' → logprob: -7.127645969390869
    4. 'indices' → logprob: -8.252646446228027
    5. 'result' → logprob: -8.502646446228027
    6. '        
' → logprob: -9.502646446228027
    7. 's' → logprob: -10.877646446228027
    8. '   ' → logprob: -11.252646446228027
    9. 'parts' → logprob: -11.752646446228027
    10. ' segments' → logprob: -11.752646446228027

Token 199: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.3291439414024353
    2. '       ' → logprob: -1.57914400100708
    3. 'result' → logprob: -2.70414400100708
    4. ' segments' → logprob: -5.95414400100708
    5. 'runs' → logprob: -6.95414400100708
    6. 'indices' → logprob: -7.32914400100708
    7. ' result' → logprob: -7.57914400100708
    8. 'res' → logprob: -7.70414400100708
    9. 'results' → logprob: -7.82914400100708
    10. '   ' → logprob: -8.079143524169922

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038242533802986145
    2. ' =' → logprob: -3.2882425785064697
    3. '=[]' → logprob: -8.53824234008789
    4. '=[]
' → logprob: -12.91324234008789
    5. ':' → logprob: -13.16324234008789
    6. ',' → logprob: -15.41324234008789
    7. ' ' → logprob: -15.78824234008789
    8. '   ' → logprob: -15.91324234008789
    9. '[]' → logprob: -16.28824234008789
    10. '.append' → logprob: -16.41324234008789

Token 201: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4744607210159302
    2. '[]
' → logprob: -0.9744607210159302
    3. ' []
' → logprob: -8.34946060180664
    4. ' []' → logprob: -8.97446060180664
    5. '[' → logprob: -11.59946060180664
    6. '[]

' → logprob: -11.72446060180664
    7. '[]}' → logprob: -14.09946060180664
    8. '[]>' → logprob: -14.34946060180664
    9. 'binary' → logprob: -14.97446060180664
    10. ' ' → logprob: -15.09946060180664

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060625385493040085
    2. 'current' → logprob: -3.3106253147125244
    3. ' current' → logprob: -4.1856255531311035
    4. 'count' → logprob: -5.1856255531311035
    5. 'start' → logprob: -7.8106255531311035
    6. 'i' → logprob: -7.8106255531311035
    7. ' i' → logprob: -8.310625076293945
    8. 'length' → logprob: -8.685625076293945
    9. ' count' → logprob: -9.560625076293945
    10. ' length' → logprob: -9.810625076293945

Token 203: ' run' (ID: 2461)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1094764843583107
    2. 'current' → logprob: -2.3594765663146973
    3. ' count' → logprob: -5.734476566314697
    4. ' current' → logprob: -5.859476566314697
    5. '       ' → logprob: -6.609476566314697
    6. 'i' → logprob: -7.109476566314697
    7. 'length' → logprob: -7.234476566314697
    8. 'run' (adapté à ' run') → logprob: -9.484476089477539
    9. '   ' → logprob: -9.859476089477539
    10. 'start' → logprob: -10.109476089477539

Token 204: '_len' (ID: 13683)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.001566876657307148
    2. '_start' → logprob: -7.0015668869018555
    3. '_len' → logprob: -7.6265668869018555
    4. '_' → logprob: -9.001566886901855
    5. ' =' → logprob: -10.376566886901855
    6. '=' → logprob: -12.251566886901855
    7. 'length' → logprob: -12.251566886901855
    8. '_count' → logprob: -13.001566886901855
    9. '_l' → logprob: -14.876566886901855
    10. 'len' → logprob: -14.876566886901855

Token 205: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062384627759456635
    2. ' =' → logprob: -2.812384605407715
    3. 'g' → logprob: -7.937384605407715
    4. 't' → logprob: -10.062384605407715
    5. '   ' → logprob: -12.187384605407715
    6. 'th' → logprob: -12.437384605407715
    7. ' ' → logprob: -12.937384605407715
    8. '+=' → logprob: -13.187384605407715
    9. 'ght' → logprob: -14.062384605407715
    10. ',' → logprob: -14.687384605407715

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031781906727701426
    2. ' ' → logprob: -5.753178119659424
    3. '1' → logprob: -14.753178596496582
    4. '   ' → logprob: -17.003177642822266
    5. '۰' → logprob: -17.628177642822266
    6. ' ' → logprob: -18.253177642822266
    7. '```' → logprob: -18.503177642822266
    8. '  ' → logprob: -18.565677642822266
    9. '０' → logprob: -19.065677642822266
    10. 'int' → logprob: -19.315677642822266

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -15.000008583068848
    4. 'len' → logprob: -18.25000762939453
    5. '۰' → logprob: -18.37500762939453
    6. '   ' → logprob: -18.37500762939453
    7. '```' → logprob: -18.62500762939453
    8. '０' → logprob: -19.43750762939453
    9. 'None' → logprob: -19.50000762939453
    10. 'int' → logprob: -19.62500762939453

Token 208: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15022191405296326
    2. ' for' → logprob: -2.650221824645996
    3. 'for' → logprob: -3.775221824645996
    4. '<|end|>' → logprob: -4.025221824645996
    5. '
' → logprob: -5.150221824645996
    6. ' 
' → logprob: -5.275221824645996
    7. ' ' → logprob: -5.400221824645996
    8. '   ' → logprob: -5.900221824645996
    9. '        
' → logprob: -6.025221824645996
    10. '	' → logprob: -6.150221824645996

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2345968335866928
    2. ' for' → logprob: -1.734596848487854
    3. 'for' → logprob: -3.9845967292785645
    4. ' ' → logprob: -5.2345967292785645
    5. '   ' → logprob: -5.8595967292785645
    6. '<|end|>' → logprob: -6.2345967292785645
    7. '        
' → logprob: -6.4845967292785645
    8. ' 
' → logprob: -7.8595967292785645
    9. '
' → logprob: -7.9845967292785645
    10. '        ' → logprob: -7.9845967292785645

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06200991943478584
    2. ' for' → logprob: -2.812009811401367
    3. '   ' → logprob: -10.812009811401367
    4. '       ' → logprob: -10.812009811401367
    5. 'i' → logprob: -13.937009811401367
    6. '	for' → logprob: -14.437009811401367
    7. '
' → logprob: -15.687009811401367
    8. ' i' → logprob: -16.437009811401367
    9. 'prev' → logprob: -16.562009811401367
    10. ' ' → logprob: -16.812009811401367

Token 211: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.1324843019247055
    2. ' ch' → logprob: -2.132484197616577
    3. 'c' → logprob: -5.382484436035156
    4. 'bit' → logprob: -7.382484436035156
    5. 'b' → logprob: -8.632484436035156
    6. 'char' → logprob: -9.382484436035156
    7. ' c' → logprob: -9.882484436035156
    8. ' bit' → logprob: -11.757484436035156
    9. ' char' → logprob: -14.507484436035156
    10. ' b' → logprob: -15.007484436035156

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0059355515986680984
    2. 'in' → logprob: -5.1309356689453125
    3. ' ' → logprob: -12.255935668945312
    4. 's' → logprob: -14.255935668945312
    5. '	in' → logprob: -14.880935668945312
    6. 'i' → logprob: -15.505935668945312
    7. '  ' → logprob: -15.755935668945312
    8. ',' → logprob: -16.130935668945312
    9. ' i' → logprob: -16.255935668945312
    10. 'In' → logprob: -16.255935668945312

Token 213: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.048605531454086304
    2. ' binary' → logprob: -3.048605442047119
    3. '(binary' → logprob: -11.173605918884277
    4. '_binary' → logprob: -13.298605918884277
    5. ' ' → logprob: -14.173605918884277
    6. 'Binary' → logprob: -14.548605918884277
    7. 'b' → logprob: -14.548605918884277
    8. '.binary' → logprob: -14.673605918884277
    9. '   ' → logprob: -15.798605918884277
    10. 'python' → logprob: -17.67360496520996

Token 214: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.000720891694072634
    2. 'str' → logprob: -7.250720977783203
    3. 'Str' → logprob: -11.500720977783203
    4. '	str' → logprob: -15.125720977783203
    5. '_' → logprob: -15.500720977783203
    6. '   ' → logprob: -17.000720977783203
    7. '_s' → logprob: -17.250720977783203
    8. ' str' → logprob: -17.500720977783203
    9. '_string' → logprob: -17.750720977783203
    10. '_segment' → logprob: -17.875720977783203

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018369650468230247
    2. ':
' → logprob: -4.018369674682617
    3. '=' → logprob: -9.643369674682617
    4. '<|end|>' → logprob: -10.018369674682617
    5. ' in' → logprob: -10.643369674682617
    6. '   ' → logprob: -10.768369674682617
    7. ' :' → logprob: -11.268369674682617
    8. '           ' → logprob: -11.518369674682617
    9. '==' → logprob: -11.893369674682617
    10. '<|end|>' → logprob: -12.018369674682617

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011296173324808478
    2. ' if' → logprob: -7.626129627227783
    3. ' ' → logprob: -8.251129150390625
    4. 'if' → logprob: -9.376129150390625
    5. '   ' → logprob: -9.626129150390625
    6. '            ' → logprob: -9.751129150390625
    7. '            
' → logprob: -9.876129150390625
    8. ' 
' → logprob: -10.001129150390625
    9. '       ' → logprob: -10.501129150390625
    10. '        ' → logprob: -12.001129150390625

Token 217: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08069093525409698
    2. '           ' → logprob: -3.205690860748291
    3. 'if' (adapté à ' if') → logprob: -3.455690860748291
    4. '            ' → logprob: -5.705690860748291
    5. ' ' → logprob: -7.580690860748291
    6. ' 
' → logprob: -7.705690860748291
    7. '        ' → logprob: -8.20569133758545
    8. '   ' → logprob: -8.45569133758545
    9. '       ' → logprob: -8.58069133758545
    10. '    ' → logprob: -8.58069133758545

Token 218: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16022524237632751
    2. ' ch' → logprob: -1.91022527217865
    3. 'c' → logprob: -15.160224914550781
    4. '(ch' → logprob: -15.410224914550781
    5. '	ch' → logprob: -15.410224914550781
    6. '[ch' → logprob: -16.03522491455078
    7. '   ' → logprob: -16.53522491455078
    8. ' ' → logprob: -16.53522491455078
    9. '           ' → logprob: -16.78522491455078
    10. '_ch' → logprob: -17.41022491455078

Token 219: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5807263851165771
    2. ' ==' → logprob: -0.8307263851165771
    3. ''' → logprob: -5.580726623535156
    4. '=='' → logprob: -7.205726623535156
    5. '=' → logprob: -8.455726623535156
    6. '==
' → logprob: -10.705726623535156
    7. '"' → logprob: -11.455726623535156
    8. ' '' → logprob: -12.455726623535156
    9. ' =='' → logprob: -12.955726623535156
    10. '=="' → logprob: -12.955726623535156

Token 220: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00010092071170220152
    2. '"' → logprob: -9.375101089477539
    3. '1' → logprob: -11.625101089477539
    4. ' '' → logprob: -11.875101089477539
    5. '`' → logprob: -17.37510108947754
    6. '0' → logprob: -17.87510108947754
    7. '   ' → logprob: -18.25010108947754
    8. '('' → logprob: -18.37510108947754
    9. ' ' → logprob: -18.62510108947754
    10. '‘' → logprob: -18.75010108947754

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001438266917830333
    2. '0' → logprob: -8.875144004821777
    3. ''' → logprob: -12.625144004821777
    4. ' ' → logprob: -14.750144004821777
    5. '')' → logprob: -16.12514305114746
    6. ''s' → logprob: -16.50014305114746
    7. ' '' → logprob: -17.68764305114746
    8. '' → logprob: -18.25014305114746
    9. '11' → logprob: -18.25014305114746
    10. '```' → logprob: -18.43764305114746

Token 222: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.23261362314224243
    2. '':' → logprob: -1.6076135635375977
    3. ':' → logprob: -5.732613563537598
    4. ':
' → logprob: -5.982613563537598
    5. ''' → logprob: -7.482613563537598
    6. '':
' → logprob: -7.607613563537598
    7. '           ' → logprob: -9.232613563537598
    8. ''):
' → logprob: -9.357613563537598
    9. '):
' → logprob: -9.357613563537598
    10. '       ' → logprob: -10.107613563537598

Token 223: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.816591434879228e-05
    2. '           ' → logprob: -10.00008773803711
    3. '<|end|>' → logprob: -10.50008773803711
    4. '                
' → logprob: -12.75008773803711
    5. '              ' → logprob: -13.12508773803711
    6. '
' → logprob: -13.25008773803711
    7. '                   ' → logprob: -13.50008773803711
    8. '<|end|>' → logprob: -13.75008773803711
    9. '	           ' → logprob: -14.00008773803711
    10. '```' → logprob: -14.50008773803711

Token 224: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.5864009261131287
    2. 'run' (adapté à ' run') → logprob: -0.8364009261131287
    3. '               ' → logprob: -4.586400985717773
    4. '           ' → logprob: -8.586400985717773
    5. '   ' → logprob: -11.336400985717773
    6. '                   ' → logprob: -11.586400985717773
    7. '(run' → logprob: -12.836400985717773
    8. '
' → logprob: -13.586400985717773
    9. '	run' → logprob: -13.586400985717773
    10. ' ' → logprob: -13.836400985717773

Token 225: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. 'len' → logprob: -15.875
    3. 'Len' → logprob: -19.25
    4. '_l' → logprob: -19.5
    5. '_LEN' → logprob: -19.625
    6. '_le' → logprob: -20.625
    7. ' _' → logprob: -20.75
    8. '<len' → logprob: -20.875
    9. '_length' → logprob: -21.0
    10. 'length' → logprob: -21.0

Token 226: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931982636451721
    2. '+=' → logprob: -0.6931982636451721
    3. '=' → logprob: -9.943198204040527
    4. ']+=' → logprob: -13.068198204040527
    5. ' =' → logprob: -14.943198204040527
    6. '+' → logprob: -15.943198204040527
    7. ' ' → logprob: -16.693199157714844
    8. '           ' → logprob: -16.693199157714844
    9. '   ' → logprob: -16.818199157714844
    10. '               ' → logprob: -17.318199157714844

Token 227: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -18.875009536743164
    4. '```' → logprob: -19.125009536743164
    5. '   ' → logprob: -19.625009536743164
    6. '       ' → logprob: -22.375009536743164
    7. '  ' → logprob: -22.625009536743164
    8. '۱' → logprob: -22.625009536743164
    9. '
' → logprob: -22.625009536743164
    10. '0' → logprob: -23.062509536743164

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '<|end|>' → logprob: -19.500001907348633
    4. '```' → logprob: -19.750001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '
' → logprob: -20.375001907348633
    7. '۱' → logprob: -20.750001907348633
    8. '111' → logprob: -20.812501907348633
    9. '

' → logprob: -21.187501907348633
    10. '１' → logprob: -21.812501907348633

Token 229: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00036025288864038885
    2. '
' → logprob: -8.000360488891602
    3. '<|end|>' → logprob: -11.375360488891602
    4. '       ' → logprob: -11.750360488891602
    5. 'else' → logprob: -14.125360488891602
    6. ';' → logprob: -14.250360488891602
    7. '<|end|>' → logprob: -14.250360488891602
    8. ' else' → logprob: -14.250360488891602
    9. '               ' → logprob: -14.875360488891602
    10. '          ' → logprob: -15.000360488891602

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.580929347255733e-05
    2. ' else' → logprob: -11.750016212463379
    3. 'else' → logprob: -12.500016212463379
    4. '       ' → logprob: -12.750016212463379
    5. '
' → logprob: -14.625016212463379
    6. '```' → logprob: -15.125016212463379
    7. '               ' → logprob: -16.625015258789062
    8. '          ' → logprob: -16.625015258789062
    9. ' elif' → logprob: -16.750015258789062
    10. '		' → logprob: -17.000015258789062

Token 231: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07520172744989395
    2. ' else' → logprob: -2.9502017498016357
    3. '           ' → logprob: -4.075201511383057
    4. '       ' → logprob: -5.950201511383057
    5. 'elif' → logprob: -7.700201511383057
    6. ' elif' → logprob: -9.825201988220215
    7. '	else' → logprob: -11.825201988220215
    8. '```' → logprob: -12.700201988220215
    9. '   ' → logprob: -13.575201988220215
    10. '_else' → logprob: -15.200201988220215

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5517784357070923
    2. '               ' → logprob: -1.3017784357070923
    3. ':
' → logprob: -1.9267784357070923
    4. '           ' → logprob: -5.301778316497803
    5. '       ' → logprob: -8.301778793334961
    6. ' if' → logprob: -8.551778793334961
    7. ' :' → logprob: -8.551778793334961
    8. '<|end|>' → logprob: -8.551778793334961
    9. ' :
' → logprob: -9.176778793334961
    10. ',' → logprob: -10.051778793334961

Token 233: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5843229293823242
    2. ' if' → logprob: -0.8343229293823242
    3. '               ' → logprob: -4.959322929382324
    4. '           ' → logprob: -7.209322929382324
    5. '       ' → logprob: -7.459322929382324
    6. 'If' → logprob: -11.959322929382324
    7. '   ' → logprob: -12.459322929382324
    8. ' ' → logprob: -13.209322929382324
    9. '	if' → logprob: -13.584322929382324
    10. '```' → logprob: -14.459322929382324

Token 234: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1609557867050171
    2. 'if' (adapté à ' if') → logprob: -1.910955786705017
    3. '           ' → logprob: -7.285955905914307
    4. '               ' → logprob: -10.035955429077148
    5. '   ' → logprob: -14.035955429077148
    6. '       ' → logprob: -14.160955429077148
    7. '                   ' → logprob: -14.785955429077148
    8. ' ' → logprob: -15.035955429077148
    9. '            ' → logprob: -16.28595542907715
    10. '	if' → logprob: -16.78595542907715

Token 235: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.25193288922309875
    2. ' run' → logprob: -1.5019328594207764
    3. '	run' → logprob: -13.126933097839355
    4. '   ' → logprob: -13.876933097839355
    5. '(run' → logprob: -15.001933097839355
    6. ' ' → logprob: -15.376933097839355
    7. '  ' → logprob: -15.501933097839355
    8. '           ' → logprob: -18.00193214416504
    9. '       ' → logprob: -18.00193214416504
    10. '_run' → logprob: -18.37693214416504

Token 236: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.2664456789934775e-06
    2. 'len' → logprob: -14.250000953674316
    3. 'Len' → logprob: -14.875000953674316
    4. '_LEN' → logprob: -16.625001907348633
    5. '<len' → logprob: -19.500001907348633
    6. '_length' → logprob: -20.125001907348633
    7. 'en' → logprob: -20.375001907348633
    8. '[len' → logprob: -20.500001907348633
    9. '_l' → logprob: -20.625001907348633
    10. ' len' → logprob: -20.750001907348633

Token 237: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6326243877410889
    2. ' >' → logprob: -0.7576243877410889
    3. ')>' → logprob: -12.257624626159668
    4. ')' → logprob: -12.507624626159668
    5. '">' → logprob: -12.507624626159668
    6. ':' → logprob: -12.882624626159668
    7. '<|end|>' → logprob: -13.257624626159668
    8. ' ' → logprob: -13.382624626159668
    9. ' ' → logprob: -13.632624626159668
    10. '&gt' → logprob: -14.007624626159668

Token 238: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164448715746403
    2. ' ' → logprob: -4.264164447784424
    3. '<|end|>' → logprob: -15.076664924621582
    4. '   ' → logprob: -16.701663970947266
    5. '=' → logprob: -16.951663970947266
    6. '  ' → logprob: -17.014163970947266
    7. '<|end|>' → logprob: -17.014163970947266
    8. '۰' → logprob: -17.076663970947266
    9. ' ' → logprob: -17.076663970947266
    10. '1' → logprob: -17.139163970947266

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'zero' → logprob: -17.750024795532227
    4. '۰' → logprob: -18.000024795532227
    5. '1' → logprob: -18.312524795532227
    6. '<|end|>' → logprob: -18.437524795532227
    7. '[' → logprob: -18.937524795532227
    8. '=' → logprob: -19.062524795532227
    9. ' zero' → logprob: -19.500024795532227
    10. '   ' → logprob: -19.687524795532227

Token 240: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4780130982398987
    2. ':' → logprob: -0.9780130982398987
    3. '                   ' → logprob: -5.728013038635254
    4. '):
' → logprob: -8.103013038635254
    5. ',' → logprob: -8.478013038635254
    6. '               ' → logprob: -9.103013038635254
    7. '           ' → logprob: -11.603013038635254
    8. ':
' → logprob: -11.728013038635254
    9. '):' → logprob: -11.978013038635254
    10. ')' → logprob: -11.978013038635254

Token 241: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10269102454185486
    2. 'segments' → logprob: -2.3526909351348877
    3. '           ' → logprob: -6.602691173553467
    4. ' segments' → logprob: -7.477691173553467
    5. '               ' → logprob: -7.602691173553467
    6. '                       ' → logprob: -11.102690696716309
    7. '_segments' → logprob: -11.227690696716309
    8. '```' → logprob: -11.602690696716309
    9. '       ' → logprob: -11.727690696716309
    10. '   ' → logprob: -12.477690696716309

Token 242: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.008761109784245491
    2. ' segments' → logprob: -4.758760929107666
    3. '                   ' → logprob: -8.883761405944824
    4. '                       ' → logprob: -12.008761405944824
    5. '_segments' → logprob: -14.258761405944824
    6. '               ' → logprob: -14.633761405944824
    7. '   ' → logprob: -14.883761405944824
    8. '           ' → logprob: -15.508761405944824
    9. '       ' → logprob: -16.008760452270508
    10. 'Segments' → logprob: -16.258760452270508

Token 243: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005547016044147313
    2. '.' → logprob: -7.50055456161499
    3. 'append' → logprob: -13.500555038452148
    4. '.Append' → logprob: -15.625555038452148
    5. '.app' → logprob: -16.50055503845215
    6. '.ap' → logprob: -17.75055503845215
    7. '_append' → logprob: -18.37555503845215
    8. '.push' → logprob: -18.50055503845215
    9. '.extend' → logprob: -18.50055503845215
    10. 'Append' → logprob: -18.50055503845215

Token 244: '(run' (ID: 89040)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.21325771510601044
    2. '(run' → logprob: -1.9632576704025269
    3. ' run' → logprob: -2.9632577896118164
    4. '	run' → logprob: -14.338257789611816
    5. ' (' → logprob: -15.463257789611816
    6. '_run' → logprob: -15.588257789611816
    7. '(' → logprob: -15.838257789611816
    8. '/run' → logprob: -16.7132568359375
    9. '.run' → logprob: -16.8382568359375
    10. ')' → logprob: -16.9632568359375

Token 245: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.214019307051785e-05
    2. 'len' → logprob: -10.375032424926758
    3. 'Len' → logprob: -14.875032424926758
    4. '_LEN' → logprob: -15.125032424926758
    5. 'run' → logprob: -15.500032424926758
    6. 'segments' → logprob: -16.500032424926758
    7. '[len' → logprob: -18.250032424926758
    8. '<len' → logprob: -18.375032424926758
    9. '```' → logprob: -18.500032424926758
    10. '_l' → logprob: -18.875032424926758

Token 246: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04916394501924515
    2. ')
' → logprob: -3.049164056777954
    3. '               ' → logprob: -7.674163818359375
    4. '                   ' → logprob: -9.674163818359375
    5. ')
' → logprob: -11.049163818359375
    6. '<|end|>' → logprob: -11.299163818359375
    7. ' )' → logprob: -12.424163818359375
    8. '<|end|>' → logprob: -12.924163818359375
    9. '           ' → logprob: -13.174163818359375
    10. ')

' → logprob: -13.174163818359375

Token 247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06209496036171913
    2. '               ' → logprob: -2.8120949268341064
    3. '           ' → logprob: -9.687094688415527
    4. '       ' → logprob: -9.937094688415527
    5. '                       ' → logprob: -12.562094688415527
    6. '                    
' → logprob: -12.687094688415527
    7. '                  ' → logprob: -13.062094688415527
    8. '                
' → logprob: -13.687094688415527
    9. '                ' → logprob: -13.812094688415527
    10. '```' → logprob: -13.937094688415527

Token 248: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.10025228559970856
    2. ' run' → logprob: -2.350252389907837
    3. '           ' → logprob: -11.350252151489258
    4. '                   ' → logprob: -11.350252151489258
    5. '               ' → logprob: -11.725252151489258
    6. '       ' → logprob: -12.100252151489258
    7. '   ' → logprob: -12.850252151489258
    8. '(run' → logprob: -13.350252151489258
    9. '
' → logprob: -13.600252151489258
    10. '	run' → logprob: -14.100252151489258

Token 249: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.128163257315464e-07
    2. 'len' → logprob: -15.125
    3. '_LEN' → logprob: -18.25
    4. 'Len' → logprob: -18.625
    5. '_l' → logprob: -18.875
    6. 'run' → logprob: -19.625
    7. 'en' → logprob: -20.375
    8. '_le' → logprob: -20.875
    9. '_run' → logprob: -20.875
    10. '_' → logprob: -20.875

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. ' ' → logprob: -19.703889846801758
    4. '＝' → logprob: -19.703889846801758
    5. '=
' → logprob: -20.578889846801758
    6. ',' → logprob: -20.578889846801758
    7. ' =
' → logprob: -20.953889846801758
    8. ')' → logprob: -21.078889846801758
    9. '.=' → logprob: -21.578889846801758
    10. '   ' → logprob: -21.703889846801758

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '۰' → logprob: -20.625139236450195
    4. '   ' → logprob: -21.375139236450195
    5. '```' → logprob: -22.375139236450195
    6. '=' → logprob: -22.812639236450195
    7. '  ' → logprob: -23.187639236450195
    8. '٠' → logprob: -23.250139236450195
    9. '０' → logprob: -23.312639236450195
    10. '<|end|>' → logprob: -23.375139236450195

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۰' → logprob: -19.5
    4. '<|end|>' → logprob: -21.0
    5. '```' → logprob: -21.25
    6. '٠' → logprob: -21.9375
    7. '   ' → logprob: -22.0625
    8. 'zero' → logprob: -22.0625
    9. '০' → logprob: -22.25
    10. '０' → logprob: -22.5

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004867499694228172
    2. '
' → logprob: -5.5048675537109375
    3. '        
' → logprob: -7.7548675537109375
    4. '<|end|>' → logprob: -8.754867553710938
    5. '\n' → logprob: -9.004867553710938
    6. '    
' → logprob: -10.504867553710938
    7. '  
' → logprob: -11.254867553710938
    8. ' else' → logprob: -11.879867553710938
    9. ' 
' → logprob: -12.254867553710938
    10. '               ' → logprob: -12.629867553710938

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014084660506341606
    2. '
' → logprob: -9.000141143798828
    3. '        
' → logprob: -12.125141143798828
    4. ' else' → logprob: -12.625141143798828
    5. 'else' → logprob: -13.375141143798828
    6. '```' → logprob: -13.500141143798828
    7. '           ' → logprob: -13.625141143798828
    8. '   ' → logprob: -13.875141143798828
    9. '\n' → logprob: -14.375141143798828
    10. '               ' → logprob: -14.625141143798828

Token 255: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034882856998592615
    2. ' if' → logprob: -6.628488063812256
    3. '
' → logprob: -6.753488063812256
    4. 'if' (adapté à ' if') → logprob: -7.003488063812256
    5. '   ' → logprob: -10.503488540649414
    6. '        
' → logprob: -11.378488540649414
    7. ')' → logprob: -11.503488540649414
    8. '#' → logprob: -11.753488540649414
    9. '```' → logprob: -11.753488540649414
    10. '<|end|>' → logprob: -12.378488540649414

Token 256: ' run' (ID: 2461)
  Prédit: ' run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.03804171830415726
    2. 'run' → logprob: -3.288041830062866
    3. '(run' → logprob: -15.413042068481445
    4. '	run' → logprob: -17.663042068481445
    5. ' ' → logprob: -18.413042068481445
    6. '_run' → logprob: -19.163042068481445
    7. 'Run' → logprob: -20.788042068481445
    8. '.run' → logprob: -21.163042068481445
    9. '
' → logprob: -21.788042068481445
    10. '   ' → logprob: -22.038042068481445

Token 257: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.512236498361744e-07
    2. 'run' → logprob: -15.875000953674316
    3. 'len' → logprob: -16.125
    4. '_l' → logprob: -16.375
    5. '_' → logprob: -16.75
    6. '__' → logprob: -17.375
    7. ' _' → logprob: -17.625
    8. '_run' → logprob: -17.625
    9. '_LEN' → logprob: -18.375
    10. '_le' → logprob: -18.625

Token 258: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06196768581867218
    2. ' >' → logprob: -2.811967611312866
    3. ' ' → logprob: -16.811967849731445
    4. ':' → logprob: -17.311967849731445
    5. ')>' → logprob: -17.561967849731445
    6. ' ' → logprob: -19.061967849731445
    7. '   ' → logprob: -19.311967849731445
    8. '()>' → logprob: -19.436967849731445
    9. '&gt' → logprob: -19.436967849731445
    10. '">' → logprob: -20.061967849731445

Token 259: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.381715774536133
    4. ' ' → logprob: -18.756715774536133
    5. '>' → logprob: -19.006715774536133
    6. '<|end|>' → logprob: -19.006715774536133
    7. '۰' → logprob: -19.256715774536133
    8. '=' → logprob: -19.381715774536133
    9. '```' → logprob: -19.756715774536133
    10. '  ' → logprob: -19.881715774536133

Token 260: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -20.375003814697266
    4. '<|end|>' → logprob: -21.500003814697266
    5. '00' → logprob: -21.750003814697266
    6. '=' → logprob: -22.250003814697266
    7. '   ' → logprob: -22.375003814697266
    8. 'zero' → logprob: -22.375003814697266
    9. '```' → logprob: -22.375003814697266
    10. '٠' → logprob: -22.500003814697266

Token 261: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6981568336486816
    2. ':
' → logprob: -0.6981568336486816
    3. '           ' → logprob: -5.323156833648682
    4. '):
' → logprob: -10.448156356811523
    5. 'segments' → logprob: -10.448156356811523
    6. ',' → logprob: -10.948156356811523
    7. '       ' → logprob: -11.198156356811523
    8. ' segments' → logprob: -12.198156356811523
    9. '):' → logprob: -12.573156356811523
    10. '_segments' → logprob: -12.698156356811523

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.051683224737644196
    2. 'segments' → logprob: -3.051683187484741
    3. ' segments' → logprob: -5.80168342590332
    4. '       ' → logprob: -9.80168342590332
    5. '_segments' → logprob: -12.17668342590332
    6. '   ' → logprob: -12.92668342590332
    7. '          ' → logprob: -13.42668342590332
    8. '```' → logprob: -13.42668342590332
    9. '               ' → logprob: -13.55168342590332
    10. 'Segments' → logprob: -14.67668342590332

Token 263: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' (adapté à ' segments') → logprob: -0.038350947201251984
    2. ' segments' → logprob: -3.288351058959961
    3. '       ' → logprob: -8.663351058959961
    4. '           ' → logprob: -8.913351058959961
    5. '   ' → logprob: -13.913351058959961
    6. '_segments' → logprob: -14.413351058959961
    7. '               ' → logprob: -14.913351058959961
    8. 'Segments' → logprob: -16.03835105895996
    9. 'segment' → logprob: -17.03835105895996
    10. '          ' → logprob: -17.78835105895996

Token 264: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002856497303582728
    2. '.' → logprob: -8.250286102294922
    3. 'append' → logprob: -10.750286102294922
    4. ' .' → logprob: -13.375286102294922
    5. ').' → logprob: -14.750286102294922
    6. '           ' → logprob: -14.875286102294922
    7. '.app' → logprob: -15.750286102294922
    8. '_append' → logprob: -16.125286102294922
    9. 'Append' → logprob: -16.750286102294922
    10. '       ' → logprob: -16.750286102294922

Token 265: '(run' (ID: 89040)
  Prédit: '(run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(run' → logprob: -3.173704271830502e-06
    2. 'run' → logprob: -12.75000286102295
    3. '(' → logprob: -15.50000286102295
    4. '(r' → logprob: -19.125003814697266
    5. ' run' → logprob: -20.125003814697266
    6. '(return' → logprob: -22.000003814697266
    7. '/run' → logprob: -22.250003814697266
    8. '(
' → logprob: -22.500003814697266
    9. '	run' → logprob: -22.500003814697266
    10. '_run' → logprob: -22.500003814697266

Token 266: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.8624639324116288e-06
    2. 'len' → logprob: -13.375001907348633
    3. 'run' → logprob: -15.250001907348633
    4. 'Len' → logprob: -17.625001907348633
    5. 'n' → logprob: -17.875001907348633
    6. '_LEN' → logprob: -18.625001907348633
    7. 'en' → logprob: -18.875001907348633
    8. '_run' → logprob: -19.875001907348633
    9. 'r' → logprob: -20.250001907348633
    10. '_val' → logprob: -20.375001907348633

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032045694533735514
    2. ')
' → logprob: -5.753204345703125
    3. '       ' → logprob: -10.753204345703125
    4. ')return' → logprob: -12.253204345703125
    5. ' )' → logprob: -15.503204345703125
    6. ')
' → logprob: -15.503204345703125
    7. ')

' → logprob: -17.003204345703125
    8. ')`' → logprob: -17.753204345703125
    9. ')\
' → logprob: -18.003204345703125
    10. ')`
' → logprob: -18.003204345703125

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.204720582696609e-05
    2. 'return' → logprob: -10.625052452087402
    3. ' return' → logprob: -10.750052452087402
    4. '	' → logprob: -13.250052452087402
    5. '<|end|>' → logprob: -13.500052452087402
    6. '   ' → logprob: -13.750052452087402
    7. '	return' → logprob: -13.875052452087402
    8. '
' → logprob: -15.125052452087402
    9. '           ' → logprob: -15.375052452087402
    10. '[' → logprob: -15.875052452087402

Token 269: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33069831132888794
    2. 'return' (adapté à ' return') → logprob: -1.5806982517242432
    3. ' return' → logprob: -2.580698251724243
    4. '	return' → logprob: -11.330698013305664
    5. '   ' → logprob: -11.455698013305664
    6. ' ' → logprob: -14.330698013305664
    7. '
' → logprob: -14.330698013305664
    8. ')return' → logprob: -14.955698013305664
    9. ':return' → logprob: -15.080698013305664
    10. '<|end|>' → logprob: -15.080698013305664

Token 270: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.004078401252627373
    2. ' segments' → logprob: -5.504078388214111
    3. '[' → logprob: -18.504077911376953
    4. '_segments' → logprob: -19.379077911376953
    5. 'sections' → logprob: -19.504077911376953
    6. 'segment' → logprob: -19.754077911376953
    7. 'Segments' → logprob: -19.754077911376953
    8. 'se' → logprob: -19.879077911376953
    9. '[]' → logprob: -20.504077911376953
    10. '   ' → logprob: -20.629077911376953

Token 271: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' Nim' (ID: 117458)
  Prédit: ' Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Base' → logprob: -1.3886178731918335
    2. ' Hex' → logprob: -2.138617992401123
    3. 'Hex' → logprob: -2.263617992401123
    4. 'Base' → logprob: -2.263617992401123
    5. ' Decimal' → logprob: -3.513617992401123
    6. 'Segment' → logprob: -3.513617992401123
    7. 'Number' → logprob: -3.638617992401123
    8. 'Decimal' → logprob: -3.638617992401123
    9. ' Number' → logprob: -3.763617992401123
    10. 'Binary' → logprob: -4.013617992401123

Token 274: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0024283365346491337
    2. 'Solver' → logprob: -7.0024285316467285
    3. ':' → logprob: -7.1274285316467285
    4. '(Game' → logprob: -8.87742805480957
    5. ' ' → logprob: -9.12742805480957
    6. 'Pile' → logprob: -9.50242805480957
    7. 'Heap' → logprob: -9.87742805480957
    8. ' Game' → logprob: -9.87742805480957
    9. ':
' → logprob: -10.25242805480957
    10. 'Sum' → logprob: -10.37742805480957

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.314625690924004e-05
    2. ':
' → logprob: -9.750073432922363
    3. '(' → logprob: -12.250073432922363
    4. '():' → logprob: -12.375073432922363
    5. '(Base' → logprob: -13.125073432922363
    6. ':

' → logprob: -14.000073432922363
    7. '(object' → logprob: -14.500073432922363
    8. ' :' → logprob: -14.625073432922363
    9. '(Abstract' → logprob: -15.000073432922363
    10. '<|end|>' → logprob: -15.000073432922363

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009308716980740428
    2. 'def' → logprob: -7.6259307861328125
    3. ' def' → logprob: -8.000930786132812
    4. '    
' → logprob: -9.750930786132812
    5. ':' → logprob: -10.875930786132812
    6. '   ' → logprob: -11.625930786132812
    7. '    ' → logprob: -11.625930786132812
    8. '(' → logprob: -13.375930786132812
    9. '   ' → logprob: -13.375930786132812
    10. '	def' → logprob: -13.625930786132812

Token 277: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.0588461235165596
    2. 'def' → logprob: -2.9338462352752686
    3. '   ' → logprob: -5.5588459968566895
    4. ' __' → logprob: -11.058846473693848
    5. ' 
' → logprob: -11.433846473693848
    6. ' @' → logprob: -11.683846473693848
    7. ' _' → logprob: -11.933846473693848
    8. '    ' → logprob: -12.058846473693848
    9. ':def' → logprob: -12.058846473693848
    10. ':' → logprob: -12.183846473693848

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09562156349420547
    2. 'class' → logprob: -2.8456215858459473
    3. ' def' → logprob: -3.9706215858459473
    4. 'def' → logprob: -5.845621585845947
    5. ' doc' → logprob: -5.845621585845947
    6. ' """
' → logprob: -6.220621585845947
    7. '"""
' → logprob: -6.595621585845947
    8. '"""' → logprob: -6.970621585845947
    9. ' class' → logprob: -7.345621585845947
    10. '
' → logprob: -7.470621585845947

Token 279: ' Models' (ID: 50258)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16466735303401947
    2. 'def' → logprob: -2.0396673679351807
    3. 'class' → logprob: -4.789667129516602
    4. '   ' → logprob: -5.039667129516602
    5. '"""' → logprob: -6.039667129516602
    6. ' """
' → logprob: -6.664667129516602
    7. '"""
' → logprob: -7.039667129516602
    8. 'Rep' → logprob: -7.289667129516602
    9. ' Represents' → logprob: -8.414667129516602
    10. ' A' → logprob: -8.789667129516602

Token 280: ' the' (ID: 290)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.09917322546243668
    2. ' the' → logprob: -2.4741733074188232
    3. 'a' → logprob: -4.724173069000244
    4. ' an' → logprob: -7.099173069000244
    5. 'the' → logprob: -7.974173069000244
    6. ' ' → logprob: -9.974173545837402
    7. ' Nim' → logprob: -10.849173545837402
    8. ' impartial' → logprob: -11.224173545837402
    9. ' binary' → logprob: -11.849173545837402
    10. ' nim' → logprob: -12.224173545837402

Token 281: ' game' (ID: 2813)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8368744850158691
    2. 'classic' → logprob: -1.7118744850158691
    3. 'game' → logprob: -1.8368744850158691
    4. 'class' → logprob: -1.9618744850158691
    5. ' game' → logprob: -2.836874485015869
    6. 'Game' → logprob: -4.586874485015869
    7. 'standard' → logprob: -6.086874485015869
    8. ' Nim' → logprob: -6.336874485015869
    9. ' classical' → logprob: -6.461874485015869
    10. 'nim' → logprob: -6.586874485015869

Token 282: ' described' (ID: 13394)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04577866941690445
    2. ' Nim' → logprob: -3.420778751373291
    3. ':' → logprob: -5.670778751373291
    4. ' ' → logprob: -6.420778751373291
    5. ' states' → logprob: -6.545778751373291
    6. '   ' → logprob: -7.170778751373291
    7. ' where' → logprob: -7.295778751373291
    8. 'of' → logprob: -7.295778751373291
    9. ' logic' → logprob: -7.420778751373291
    10. '<|end|>' → logprob: -7.795778751373291

Token 283: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24275879561901093
    2. ' here' → logprob: -2.7427587509155273
    3. 'in' → logprob: -2.9927587509155273
    4. ':' → logprob: -3.3677587509155273
    5. 'class' → logprob: -3.7427587509155273
    6. '.' → logprob: -3.7427587509155273
    7. '<|end|>' → logprob: -5.117758750915527
    8. ',' → logprob: -5.242758750915527
    9. ' by' → logprob: -5.867758750915527
    10. '<|end|>' → logprob: -6.492758750915527

Token 284: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.339912086725235
    2. ' with' → logprob: -2.464912176132202
    3. ' where' → logprob: -3.214912176132202
    4. ' including' → logprob: -3.214912176132202
    5. ' focusing' → logprob: -3.839912176132202
    6. ' which' → logprob: -3.964912176132202
    7. 'def' → logprob: -4.339911937713623
    8. 'with' → logprob: -4.714911937713623
    9. ' def' → logprob: -4.839911937713623
    10. ' allowing' → logprob: -5.089911937713623

Token 285: ' abstra' (ID: 186216)
  Prédit: ' methods'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' methods' → logprob: -0.4116102159023285
    2. 'methods' → logprob: -1.2866102457046509
    3. 'a' → logprob: -5.036610126495361
    4. 'def' → logprob: -5.161610126495361
    5. 'static' → logprob: -5.411610126495361
    6. ' static' → logprob: -5.411610126495361
    7. 'the' → logprob: -5.411610126495361
    8. 'binary' → logprob: -5.661610126495361
    9. 'initial' → logprob: -5.786610126495361
    10. 'staticmethod' → logprob: -5.911610126495361

Token 286: 'ctions' (ID: 2620)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ct' → logprob: -5.676981345459353e-06
    2. 'act' → logprob: -12.875005722045898
    3. 'cts' → logprob: -12.875005722045898
    4. 'cte' → logprob: -16.0000057220459
    5. ' ct' → logprob: -16.3750057220459
    6. '(ct' → logprob: -16.5000057220459
    7. '
' → logprob: -16.8750057220459
    8. 'CT' → logprob: -17.0000057220459
    9. 'cture' → logprob: -17.3750057220459
    10. ' ' → logprob: -17.7500057220459

Token 287: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02489500492811203
    2. ' to' → logprob: -4.774895191192627
    3. 'for' → logprob: -4.774895191192627
    4. ' of' → logprob: -5.399895191192627
    5. '   ' → logprob: -6.524895191192627
    6. ' and' → logprob: -6.899895191192627
    7. ' around' → logprob: -8.899894714355469
    8. 'to' → logprob: -9.399894714355469
    9. ' about' → logprob: -9.524894714355469
    10. 'and' → logprob: -9.524894714355469

Token 288: ' steps' (ID: 10331)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.9800580143928528
    2. 'the' → logprob: -1.730057954788208
    3. 'moves' → logprob: -2.480057954788208
    4. 'calcul' → logprob: -2.480057954788208
    5. 'state' → logprob: -2.730057954788208
    6. 'comput' → logprob: -3.105057954788208
    7. 'positions' → logprob: -3.355057954788208
    8. 'N' → logprob: -3.730057954788208
    9. 'pile' → logprob: -4.355058193206787
    10. 'move' → logprob: -4.605058193206787

Token 289: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1208842992782593
    2. ' and' → logprob: -1.1208842992782593
    3. '   ' → logprob: -1.2458842992782593
    4. '.' → logprob: -3.870884418487549
    5. '<|end|>' → logprob: -3.995884418487549
    6. 'and' → logprob: -4.870884418487549
    7. 's' → logprob: -5.745884418487549
    8. '  ' → logprob: -5.995884418487549
    9. '...' → logprob: -6.745884418487549
    10. '<|end|>' → logprob: -6.995884418487549

Token 290: ' piles' (ID: 90498)
  Prédit: 'moves'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moves' → logprob: -0.24163559079170227
    2. 'states' → logprob: -2.86663556098938
    3. 'positions' → logprob: -3.36663556098938
    4. 'state' → logprob: -3.61663556098938
    5. 'strateg' → logprob: -3.74163556098938
    6. 'p' → logprob: -3.74163556098938
    7. ' states' → logprob: -4.741635799407959
    8. ' moves' → logprob: -4.991635799407959
    9. 'rules' → logprob: -5.116635799407959
    10. 'winning' → logprob: -5.241635799407959

Token 291: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5664042830467224
    2. '.' → logprob: -1.6914043426513672
    3. ':' → logprob: -1.6914043426513672
    4. ',' → logprob: -2.941404342651367
    5. '<|end|>' → logprob: -5.316404342651367
    6. ' and' → logprob: -6.066404342651367
    7. ':
' → logprob: -6.941404342651367
    8. '<|end|>' → logprob: -7.191404342651367
    9. 'and' → logprob: -7.316404342651367
    10. ' to' → logprob: -7.941404342651367

Token 292: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48158571124076843
    2. '   ' → logprob: -0.9815857410430908
    3. '<|end|>' → logprob: -5.856585502624512
    4. '    
' → logprob: -6.356585502624512
    5. '"""' → logprob: -6.856585502624512
    6. '```' → logprob: -6.856585502624512
    7. 'class' → logprob: -7.731585502624512
    8. '<|end|>' → logprob: -9.106585502624512
    9. ')' → logprob: -9.981585502624512
    10. '  
' → logprob: -10.356585502624512

Token 293: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3386539816856384
    2. '
' → logprob: -1.3386540412902832
    3. '    
' → logprob: -3.838654041290283
    4. 'def' → logprob: -5.963654041290283
    5. ' def' → logprob: -7.838654041290283
    6. ' 
' → logprob: -8.713653564453125
    7. 'class' → logprob: -9.213653564453125
    8. '

' → logprob: -9.463653564453125
    9. '```' → logprob: -9.463653564453125
    10. '   
' → logprob: -10.338653564453125

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4856923222541809
    2. 'def' → logprob: -0.9856923222541809
    3. ' def' → logprob: -4.610692501068115
    4. 'class' → logprob: -6.735692501068115
    5. '_' → logprob: -8.735692024230957
    6. ' _' → logprob: -9.985692024230957
    7. 'from' → logprob: -10.610692024230957
    8. '_symbols' → logprob: -10.610692024230957
    9. '_def' → logprob: -10.610692024230957
    10. '...' → logprob: -11.110692024230957

Token 295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1951562613248825
    2. ' def' → logprob: -1.945156216621399
    3. '   ' → logprob: -3.6951563358306885
    4. '_symbols' → logprob: -5.695156097412109
    5. '_symbol' → logprob: -6.070156097412109
    6. '_def' → logprob: -6.820156097412109
    7. '_SYMBOL' → logprob: -7.820156097412109
    8. '_s' → logprob: -8.19515609741211
    9. '_' → logprob: -8.19515609741211
    10. '_p' → logprob: -8.44515609741211

Token 296: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3562327027320862
    2. ' def' → logprob: -1.2312326431274414
    3. 'def' → logprob: -5.981232643127441
    4. '__' → logprob: -6.106232643127441
    5. 'init' → logprob: -6.606232643127441
    6. ' init' → logprob: -6.731232643127441
    7. '_init' → logprob: -7.856232643127441
    8. ' ' → logprob: -10.231232643127441
    9. '```' → logprob: -11.106232643127441
    10. '   ' → logprob: -12.606232643127441

Token 297: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -19.5
    3. 'new' → logprob: -19.625
    4. 'slots' → logprob: -19.875
    5. 'int' → logprob: -20.75
    6. 'doc' → logprob: -20.875
    7. 'post' → logprob: -22.125
    8. 'name' → logprob: -22.25
    9. 'staticmethod' → logprob: -22.5
    10. 'initi' → logprob: -22.75

Token 298: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006982576451264322
    2. '(self' → logprob: -7.375698089599609
    3. '__' → logprob: -9.62569808959961
    4. '__(
' → logprob: -12.37569808959961
    5. '_(' → logprob: -14.87569808959961
    6. ' (' → logprob: -14.87569808959961
    7. 'self' → logprob: -15.50069808959961
    8. '(' → logprob: -16.00069808959961
    9. '__((' → logprob: -16.00069808959961
    10. ')(' → logprob: -16.62569808959961

Token 299: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015979631280060858
    2. ' self' → logprob: -8.750160217285156
    3. ')' → logprob: -13.875160217285156
    4. 'p' → logprob: -15.750160217285156
    5. '
' → logprob: -16.500160217285156
    6. '):
' → logprob: -16.625160217285156
    7. ',' → logprob: -16.875160217285156
    8. '       ' → logprob: -17.375160217285156
    9. '0' → logprob: -17.500160217285156
    10. '   ' → logprob: -18.625160217285156

Token 300: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014547165483236313
    2. 'self' → logprob: -4.264547348022461
    3. '):' → logprob: -8.389547348022461
    4. ' ,' → logprob: -9.389547348022461
    5. '):
' → logprob: -10.639547348022461
    6. ',self' → logprob: -11.139547348022461
    7. '   ' → logprob: -11.264547348022461
    8. ' self' → logprob: -11.764547348022461
    9. ')' → logprob: -12.389547348022461
    10. '(self' → logprob: -12.889547348022461

Token 301: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.27457061409950256
    2. ' piles' → logprob: -2.6495707035064697
    3. 'initial' → logprob: -3.2745707035064697
    4. ' initial' → logprob: -3.5245707035064697
    5. 'steps' → logprob: -3.7745707035064697
    6. 'n' → logprob: -3.7745707035064697
    7. 'pile' → logprob: -3.8995707035064697
    8. 'self' → logprob: -4.524570465087891
    9. 'num' → logprob: -4.524570465087891
    10. ' steps' → logprob: -5.649570465087891

Token 302: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.661626634420827e-05
    2. '):' → logprob: -9.375086784362793
    3. ' :' → logprob: -14.125086784362793
    4. ')' → logprob: -14.500086784362793
    5. '_:' → logprob: -15.500086784362793
    6. '}:' → logprob: -15.875086784362793
    7. ' ):' → logprob: -16.375085830688477
    8. '):
' → logprob: -16.375085830688477
    9. '=' → logprob: -16.750085830688477
    10. ',' → logprob: -17.125085830688477

Token 303: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -2.7848862373502925e-05
    2. ' List' → logprob: -10.500027656555176
    3. '[List' → logprob: -15.250027656555176
    4. 'Tuple' → logprob: -19.000028610229492
    5. 'Dict' → logprob: -19.500028610229492
    6. ')' → logprob: -19.500028610229492
    7. '	List' → logprob: -20.000028610229492
    8. 'self' → logprob: -20.875028610229492
    9. '       ' → logprob: -20.875028610229492
    10. '   ' → logprob: -21.000028610229492

Token 304: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.762356209335849e-05
    2. 'int' → logprob: -10.25003719329834
    3. '[' → logprob: -14.00003719329834
    4. '   ' → logprob: -14.50003719329834
    5. '[List' → logprob: -14.87503719329834
    6. ')' → logprob: -16.125038146972656
    7. '<int' → logprob: -16.250038146972656
    8. '       ' → logprob: -16.750038146972656
    9. ',int' → logprob: -16.875038146972656
    10. ',' → logprob: -17.750038146972656

Token 305: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.09628709405660629
    2. '])' → logprob: -2.8462870121002197
    3. '):' → logprob: -4.096287250518799
    4. ']):
' → logprob: -4.596287250518799
    5. ')' → logprob: -5.596287250518799
    6. ']' → logprob: -5.846287250518799
    7. ']:' → logprob: -8.72128677368164
    8. '>):' → logprob: -9.34628677368164
    9. '],' → logprob: -9.72128677368164
    10. ',' → logprob: -9.72128677368164

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004485461104195565
    2. 'self' → logprob: -7.875448703765869
    3. ' self' → logprob: -9.625448226928711
    4. '   ' → logprob: -13.250448226928711
    5. ',' → logprob: -14.875448226928711
    6. '      ' → logprob: -16.50044822692871
    7. 'super' → logprob: -17.00044822692871
    8. '	self' → logprob: -17.25044822692871
    9. '(self' → logprob: -17.50044822692871
    10. '           ' → logprob: -17.62544822692871

Token 307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07074443995952606
    2. ' self' → logprob: -3.070744514465332
    3. '       ' → logprob: -3.820744514465332
    4. '   ' → logprob: -13.445744514465332
    5. ' ' → logprob: -15.820744514465332
    6. '	self' → logprob: -16.320743560791016
    7. 'super' → logprob: -16.445743560791016
    8. 'import' → logprob: -16.945743560791016
    9. '      ' → logprob: -18.070743560791016
    10. '           ' → logprob: -18.570743560791016

Token 308: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0004160145472269505
    2. '.' → logprob: -8.625415802001953
    3. 'p' → logprob: -8.875415802001953
    4. ' .' → logprob: -9.750415802001953
    5. '._' → logprob: -10.250415802001953
    6. '   ' → logprob: -14.750415802001953
    7. ' p' → logprob: -15.125415802001953
    8. '```' → logprob: -15.125415802001953
    9. '<p' → logprob: -15.250415802001953
    10. 'import' → logprob: -15.875415802001953

Token 309: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -2.927930654550437e-05
    2. '_' → logprob: -10.750029563903809
    3. 'ile' → logprob: -13.500029563903809
    4. 'p' → logprob: -14.000029563903809
    5. 'iless' → logprob: -14.500029563903809
    6. '`' → logprob: -14.875029563903809
    7. '1' → logprob: -14.875029563903809
    8. '>' → logprob: -15.125029563903809
    9. 'i' → logprob: -15.250029563903809
    10. '#' → logprob: -15.250029563903809

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868718445301056
    2. ' =' → logprob: -1.1368718147277832
    3. ')' → logprob: -15.261872291564941
    4. ':' → logprob: -15.636872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '   ' → logprob: -15.761872291564941
    7. '[:]' → logprob: -16.386871337890625
    8. '.extend' → logprob: -17.386871337890625
    9. '=[]' → logprob: -17.511871337890625
    10. '=}' → logprob: -18.011871337890625

Token 311: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007633247412741184
    2. ' piles' → logprob: -4.882633209228516
    3. '[p' → logprob: -11.257633209228516
    4. 'list' → logprob: -11.882633209228516
    5. '[' → logprob: -12.257633209228516
    6. 'pile' → logprob: -13.632633209228516
    7. ' p' → logprob: -14.257633209228516
    8. ' [' → logprob: -14.632633209228516
    9. ' list' → logprob: -15.382633209228516
    10. ' ' → logprob: -17.007633209228516

Token 312: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.255023956531659e-05
    2. ' def' → logprob: -9.750072479248047
    3. 'from' → logprob: -12.000072479248047
    4. '   ' → logprob: -12.250072479248047
    5. '@' → logprob: -13.625072479248047
    6. '@property' → logprob: -13.875072479248047
    7. 'import' → logprob: -14.000072479248047
    8. '
' → logprob: -15.500072479248047
    9. 'staticmethod' → logprob: -18.000072479248047
    10. 'classmethod' → logprob: -18.500072479248047

Token 315: ' step' (ID: 5983)
  Prédit: ' nim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nim' → logprob: -0.7195063233375549
    2. ' calculate' → logprob: -1.4695062637329102
    3. ' is' → logprob: -2.71950626373291
    4. ' def' → logprob: -3.09450626373291
    5. ' compute' → logprob: -3.34450626373291
    6. ' can' → logprob: -3.46950626373291
    7. 'calculate' → logprob: -3.71950626373291
    8. ' get' → logprob: -4.21950626373291
    9. ' grund' → logprob: -4.21950626373291
    10. 'def' → logprob: -4.46950626373291

Token 316: '1' (ID: 16)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003045994380954653
    2. '(' → logprob: -9.000304222106934
    3. '_count' → logprob: -9.500304222106934
    4. 's' → logprob: -10.250304222106934
    5. '()' → logprob: -10.750304222106934
    6. 'self' → logprob: -11.375304222106934
    7. '(s' → logprob: -12.000304222106934
    8. ' (' → logprob: -12.125304222106934
    9. '_size' → logprob: -12.750304222106934
    10. '():' → logprob: -12.750304222106934

Token 317: '_transform' (ID: 46795)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0013659505639225245
    2. '_count' → logprob: -7.501366138458252
    3. '_state' → logprob: -9.001365661621094
    4. '(' → logprob: -9.126365661621094
    5. '_remove' → logprob: -9.126365661621094
    6. '_value' → logprob: -9.501365661621094
    7. ' (' → logprob: -10.126365661621094
    8. '_size' → logprob: -10.251365661621094
    9. '_possible' → logprob: -10.376365661621094
    10. '_p' → logprob: -10.501365661621094

Token 318: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.069664333248511e-05
    2. '(' → logprob: -11.000020980834961
    3. 'self' → logprob: -13.250020980834961
    4. ' (' → logprob: -13.625020980834961
    5. '(s' → logprob: -14.750020980834961
    6. '()' → logprob: -15.750020980834961
    7. '(
' → logprob: -16.12502098083496
    8. 's' → logprob: -16.25002098083496
    9. '(p' → logprob: -17.75002098083496
    10. '(se' → logprob: -17.75002098083496

Token 319: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4646987318992615
    2. '):
' → logprob: -1.5896987915039062
    3. ')' → logprob: -1.8396987915039062
    4. 'self' → logprob: -5.339698791503906
    5. ',' → logprob: -5.964698791503906
    6. ' ):' → logprob: -7.964698791503906
    7. '):
' → logprob: -7.964698791503906
    8. '(self' → logprob: -8.089698791503906
    9. '):

' → logprob: -8.714698791503906
    10. ' )' → logprob: -8.839698791503906

Token 320: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014168102643452585
    2. ':' → logprob: -9.750142097473145
    3. '(' → logprob: -10.250142097473145
    4. 'self' → logprob: -10.625142097473145
    5. ' ->' → logprob: -11.125142097473145
    6. ' (' → logprob: -12.875142097473145
    7. '->' → logprob: -12.875142097473145
    8. '       ' → logprob: -13.750142097473145
    9. '   ' → logprob: -14.375142097473145
    10. ')' → logprob: -14.375142097473145

Token 321: ' None' (ID: 4662)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.14731554687023163
    2. ' List' → logprob: -2.022315502166748
    3. 'int' → logprob: -6.397315502166748
    4. 'str' → logprob: -6.647315502166748
    5. 'Binary' → logprob: -7.772315502166748
    6. 'Optional' → logprob: -8.147315979003906
    7. ' str' → logprob: -8.272315979003906
    8. ' int' → logprob: -8.647315979003906
    9. 'None' → logprob: -8.772315979003906
    10. 'Tuple' → logprob: -9.022315979003906

Token 322: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2419714331626892
    2. ':
' → logprob: -1.616971492767334
    3. '       ' → logprob: -4.116971492767334
    4. '):
' → logprob: -9.741971015930176
    5. '():
' → logprob: -11.116971015930176
    6. ',' → logprob: -11.366971015930176
    7. '   ' → logprob: -11.491971015930176
    8. ':
' → logprob: -11.741971015930176
    9. '):' → logprob: -11.866971015930176
    10. '<|end|>' → logprob: -12.241971015930176

Token 323: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006080791936255991
    2. ' for' → logprob: -8.750608444213867
    3. 'self' → logprob: -8.875608444213867
    4. 's' → logprob: -10.125608444213867
    5. 'for' → logprob: -10.250608444213867
    6. '#' → logprob: -10.625608444213867
    7. ' self' → logprob: -10.750608444213867
    8. 'n' → logprob: -10.875608444213867
    9. 'new' → logprob: -11.000608444213867
    10. 'trans' → logprob: -11.125608444213867

Token 324: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1322689056396484
    2. ' for' → logprob: -1.5072689056396484
    3. 'for' → logprob: -1.7572689056396484
    4. 'self' → logprob: -2.0072689056396484
    5. ' new' → logprob: -2.7572689056396484
    6. 'new' → logprob: -3.2572689056396484
    7. ' self' → logprob: -3.5072689056396484
    8. '#' → logprob: -4.757268905639648
    9. 'binary' → logprob: -6.257268905639648
    10. 'trans' → logprob: -6.382268905639648

Token 325: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7906205654144287
    2. ' new' → logprob: -0.9156205654144287
    3. 'for' → logprob: -2.6656205654144287
    4. '       ' → logprob: -3.0406205654144287
    5. 'new' → logprob: -3.6656205654144287
    6. '#' → logprob: -7.665620803833008
    7. ' result' → logprob: -7.915620803833008
    8. 'n' → logprob: -8.290620803833008
    9. 'result' → logprob: -8.290620803833008
    10. ' transformed' → logprob: -8.415620803833008

Token 326: ' Remove' (ID: 18141)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.616280198097229
    2. '"""
' → logprob: -1.741280198097229
    3. '"""' → logprob: -1.991280198097229
    4. 'binary' → logprob: -3.2412800788879395
    5. 'for' → logprob: -4.1162800788879395
    6. 'Remove' (adapté à ' Remove') → logprob: -4.2412800788879395
    7. '       ' → logprob: -4.8662800788879395
    8. 'pass' → logprob: -4.9912800788879395
    9. ' #' → logprob: -5.1162800788879395
    10. 'Transforms' → logprob: -5.1162800788879395

Token 327: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2138662487268448
    2. ' zeros' → logprob: -2.2138662338256836
    3. 'all' → logprob: -2.5888662338256836
    4. ' zero' → logprob: -5.838866233825684
    5. '0' → logprob: -5.963866233825684
    6. 'zeros' → logprob: -6.838866233825684
    7. 'zero' → logprob: -7.088866233825684
    8. ' ' → logprob: -7.713866233825684
    9. ' the' → logprob: -9.213866233825684
    10. ' leading' → logprob: -9.838866233825684

Token 328: ' piles' (ID: 90498)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.09373762458562851
    2. 'zeros' → logprob: -2.5937376022338867
    3. '0' → logprob: -4.968737602233887
    4. ' zero' → logprob: -5.843737602233887
    5. 'zero' → logprob: -5.968737602233887
    6. ' ' → logprob: -6.593737602233887
    7. ' the' → logprob: -7.843737602233887
    8. 'the' → logprob: -9.343737602233887
    9. ' all' → logprob: -9.468737602233887
    10. 'p' → logprob: -9.468737602233887

Token 329: ',' (ID: 11)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.7357070446014404
    2. ' of' → logprob: -1.7357070446014404
    3. 'of' → logprob: -1.8607070446014404
    4. ' with' → logprob: -1.8607070446014404
    5. ' that' → logprob: -4.1107072830200195
    6. 'that' → logprob: -4.3607072830200195
    7. ' equal' → logprob: -6.3607072830200195
    8. 'equal' → logprob: -6.4857072830200195
    9. '   ' → logprob: -8.61070728302002
    10. 's' → logprob: -8.73570728302002

Token 330: ' convert' (ID: 8452)
  Prédit: ' keeping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keeping' → logprob: -0.7025944590568542
    2. 'keeping' → logprob: -1.952594518661499
    3. 'replace' → logprob: -2.577594518661499
    4. '       ' → logprob: -3.077594518661499
    5. ' replacing' → logprob: -3.702594518661499
    6. ' convert' → logprob: -3.702594518661499
    7. ' or' → logprob: -3.952594518661499
    8. 'convert' → logprob: -4.07759428024292
    9. ' but' → logprob: -4.20259428024292
    10. ' leaving' → logprob: -4.32759428024292

Token 331: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.6948756575584412
    2. 'each' → logprob: -0.8198756575584412
    3. 'self' → logprob: -4.069875717163086
    4. ' the' → logprob: -4.944875717163086
    5. ' them' → logprob: -4.944875717163086
    6. 'p' → logprob: -5.194875717163086
    7. 'them' → logprob: -5.194875717163086
    8. 'pile' → logprob: -5.569875717163086
    9. ' self' → logprob: -5.819875717163086
    10. 'the' → logprob: -6.069875717163086

Token 332: ' to' (ID: 316)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.0609697625041008
    2. ' pile' → logprob: -3.560969829559326
    3. 'to' → logprob: -4.185969829559326
    4. ' to' → logprob: -4.810969829559326
    5. 'p' → logprob: -4.935969829559326
    6. 'number' → logprob: -10.060969352722168
    7. '   ' → logprob: -10.435969352722168
    8. ' number' → logprob: -11.185969352722168
    9. '```' → logprob: -11.185969352722168
    10. 'int' → logprob: -11.435969352722168

Token 333: ' binary' (ID: 15600)
  Prédit: 'binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binary' → logprob: -0.1430797129869461
    2. ' binary' → logprob: -2.2680797576904297
    3. 'bin' → logprob: -3.7680797576904297
    4. 'Binary' → logprob: -5.26807975769043
    5. '_binary' → logprob: -7.39307975769043
    6. ' bin' → logprob: -7.89307975769043
    7. 'base' → logprob: -8.39307975769043
    8. ' Binary' → logprob: -9.26807975769043
    9. 'int' → logprob: -10.39307975769043
    10. ' its' → logprob: -10.39307975769043

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2501659393310547
    2. 'string' → logprob: -2.2501659393310547
    3. ' representation' → logprob: -2.8751659393310547
    4. 'representation' → logprob: -3.5001659393310547
    5. 'and' → logprob: -4.375165939331055
    6. ' and' → logprob: -5.000165939331055
    7. ' string' → logprob: -5.125165939331055
    8. 'str' → logprob: -6.750165939331055
    9. 'strings' → logprob: -7.000165939331055
    10. ' ,' → logprob: -8.000165939331055

Token 335: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.7302072048187256
    2. ' remove' → logprob: -0.8552072048187256
    3. ' then' → logprob: -3.7302072048187256
    4. '       ' → logprob: -4.230207443237305
    5. 'and' → logprob: -4.605207443237305
    6. ' strip' → logprob: -4.855207443237305
    7. 'then' → logprob: -4.980207443237305
    8. 'strip' → logprob: -5.230207443237305
    9. ' convert' → logprob: -5.355207443237305
    10. ' and' → logprob: -5.605207443237305

Token 336: ' zeros' (ID: 42274)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0223796367645264
    2. ' all' → logprob: -1.1473796367645264
    3. 'all' → logprob: -1.3973796367645264
    4. ' zeros' → logprob: -3.3973796367645264
    5. ' '' → logprob: -3.8973796367645264
    6. 'zeros' → logprob: -4.2723798751831055
    7. ''all' → logprob: -5.6473798751831055
    8. '0' → logprob: -5.8973798751831055
    9. ''s' → logprob: -7.6473798751831055
    10. '"' → logprob: -8.022379875183105

Token 337: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23102328181266785
    2. 'from' → logprob: -2.1060233116149902
    3. ' from' → logprob: -3.2310233116149902
    4. 'and' → logprob: -3.4810233116149902
    5. ' and' → logprob: -4.35602331161499
    6. ' ,' → logprob: -6.98102331161499
    7. 's' → logprob: -8.106022834777832
    8. ' in' → logprob: -10.731022834777832
    9. ' then' → logprob: -10.731022834777832
    10. ',
' → logprob: -10.856022834777832

Token 338: ' segment' (ID: 14806)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1715785264968872
    2. ' and' → logprob: -2.1715784072875977
    3. ' then' → logprob: -4.171578407287598
    4. 'then' → logprob: -4.296578407287598
    5. 'split' → logprob: -5.171578407287598
    6. ' concatenate' → logprob: -6.171578407287598
    7. 'replace' → logprob: -6.421578407287598
    8. 'convert' → logprob: -6.796578407287598
    9. 'conc' → logprob: -6.796578407287598
    10. 'keep' → logprob: -7.296578407287598

Token 339: ' runs' (ID: 13719)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9257153272628784
    2. 'them' → logprob: -1.9257153272628784
    3. 'the' → logprob: -2.050715446472168
    4. ' their' → logprob: -2.300715446472168
    5. ' each' → logprob: -2.675715446472168
    6. 'their' → logprob: -3.050715446472168
    7. ' them' → logprob: -3.175715446472168
    8. 'each' → logprob: -3.550715446472168
    9. '   ' → logprob: -4.925715446472168
    10. 'and' → logprob: -5.300715446472168

Token 340: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3576168417930603
    2. '       ' → logprob: -1.982616901397705
    3. ',' → logprob: -2.482616901397705
    4. 'of' → logprob: -2.607616901397705
    5. ' and' → logprob: -6.232616901397705
    6. 'and' → logprob: -6.982616901397705
    7. '   ' → logprob: -7.857616901397705
    8. '.' → logprob: -7.857616901397705
    9. '=' → logprob: -8.107616424560547
    10. '<|end|>' → logprob: -8.107616424560547

Token 341: ' ones' (ID: 8104)
  Prédit: 'ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.44654756784439087
    2. '1' → logprob: -1.196547508239746
    3. ' ones' → logprob: -3.321547508239746
    4. ''' → logprob: -3.946547508239746
    5. 'one' → logprob: -7.071547508239746
    6. ''s' → logprob: -7.196547508239746
    7. '`' → logprob: -7.946547508239746
    8. ' '' → logprob: -8.696547508239746
    9. '```' → logprob: -9.321547508239746
    10. ' ' → logprob: -9.571547508239746

Token 342: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11143481731414795
    2. '.' → logprob: -2.9864349365234375
    3. '       ' → logprob: -3.8614349365234375
    4. ' and' → logprob: -3.9864349365234375
    5. ' into' → logprob: -4.8614349365234375
    6. 'and' → logprob: -5.2364349365234375
    7. 'into' → logprob: -7.6114349365234375
    8. ' as' → logprob: -7.8614349365234375
    9. ' in' → logprob: -7.9864349365234375
    10. 'from' → logprob: -8.736434936523438

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17823238670825958
    2. 'and' → logprob: -1.9282324314117432
    3. ' and' → logprob: -4.053232192993164
    4. '#' → logprob: -8.928232192993164
    5. '   ' → logprob: -8.928232192993164
    6. 'then' → logprob: -8.928232192993164
    7. ' then' → logprob: -10.053232192993164
    8. ',' → logprob: -11.303232192993164
    9. 'def' → logprob: -12.053232192993164
    10. '           ' → logprob: -12.303232192993164

Token 344: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' (adapté à ' and') → logprob: -0.2821285128593445
    2. '       ' → logprob: -1.5321285724639893
    3. ' and' → logprob: -3.6571285724639893
    4. 'then' → logprob: -5.90712833404541
    5. ' then' → logprob: -8.03212833404541
    6. '#' → logprob: -8.28212833404541
    7. '   ' → logprob: -8.40712833404541
    8. 'replace' → logprob: -8.78212833404541
    9. 'collect' → logprob: -9.90712833404541
    10. 're' → logprob: -10.40712833404541

Token 345: ' set' (ID: 920)
  Prédit: 'replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replace' → logprob: -0.839631974697113
    2. 're' → logprob: -1.0896320343017578
    3. 'collect' → logprob: -1.5896320343017578
    4. 'acc' → logprob: -4.839632034301758
    5. 'combine' → logprob: -5.214632034301758
    6. 'aggregate' → logprob: -5.339632034301758
    7. '       ' → logprob: -5.714632034301758
    8. 'update' → logprob: -6.714632034301758
    9. 'build' → logprob: -6.839632034301758
    10. 'set' → logprob: -7.089632034301758

Token 346: ' piles' (ID: 90498)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010010108351707458
    2. ' self' → logprob: -4.635010242462158
    3. ' the' → logprob: -9.385009765625
    4. 'new' → logprob: -9.760009765625
    5. '       ' → logprob: -10.135009765625
    6. ' new' → logprob: -10.635009765625
    7. 'the' → logprob: -10.760009765625
    8. '   ' → logprob: -11.010009765625
    9. '
' → logprob: -12.135009765625
    10. 'p' → logprob: -13.885009765625

Token 347: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8502733707427979
    2. '       ' → logprob: -1.3502733707427979
    3. '(self' → logprob: -1.9752733707427979
    4. '=' → logprob: -2.350273370742798
    5. 'self' → logprob: -2.850273370742798
    6. '=self' → logprob: -4.850273132324219
    7. ' self' → logprob: -5.100273132324219
    8. ':' → logprob: -6.475273132324219
    9. '   ' → logprob: -6.475273132324219
    10. ',' → logprob: -6.850273132324219

Token 348: ' concaten' (ID: 121942)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -1.136602759361267
    2. 'the' → logprob: -1.386602759361267
    3. 'segments' → logprob: -2.0116028785705566
    4. ' the' → logprob: -2.1366028785705566
    5. 'self' → logprob: -2.2616028785705566
    6. ' Binary' → logprob: -3.0116028785705566
    7. ' segments' → logprob: -5.136602878570557
    8. ' self' → logprob: -5.386602878570557
    9. '[' → logprob: -5.386602878570557
    10. 'segment' → logprob: -5.636602878570557

Token 349: 'ation' (ID: 387)
  Prédit: 'ated'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ated' → logprob: -0.0033707963302731514
    2. 'ate' → logprob: -6.503370761871338
    3. 'ation' → logprob: -6.628370761871338
    4. '[' → logprob: -7.753370761871338
    5. 'ed' → logprob: -9.753371238708496
    6. 'aten' → logprob: -10.878371238708496
    7. 'e' → logprob: -12.128371238708496
    8. 'ating' → logprob: -12.753371238708496
    9. 'ates' → logprob: -12.753371238708496
    10. '
' → logprob: -12.878371238708496

Token 350: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.47125524282455444
    2. '       ' → logprob: -1.0962553024291992
    3. 'of' → logprob: -3.346255302429199
    4. '=' → logprob: -6.221255302429199
    5. '[' → logprob: -6.846255302429199
    6. ' =' → logprob: -7.221255302429199
    7. '[]' → logprob: -7.346255302429199
    8. '   ' → logprob: -7.721255302429199
    9. '[
' → logprob: -7.971255302429199
    10. '_of' → logprob: -8.3462553024292

Token 351: ' those' (ID: 2617)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5615297555923462
    2. 'all' → logprob: -2.0615296363830566
    3. 'Binary' → logprob: -2.1865296363830566
    4. '[' → logprob: -2.3115296363830566
    5. 'segment' → logprob: -3.5615296363830566
    6. 'the' → logprob: -3.6865296363830566
    7. ' Binary' → logprob: -4.811529636383057
    8. ' all' → logprob: -4.936529636383057
    9. '[
' → logprob: -5.061529636383057
    10. ' segments' → logprob: -5.436529636383057

Token 352: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -1.1674039363861084
    2. ' of' → logprob: -2.0424039363861084
    3. '       ' → logprob: -2.4174039363861084
    4. '   ' → logprob: -2.4174039363861084
    5. ' lengths' → logprob: -2.6674039363861084
    6. ':' → logprob: -3.0424039363861084
    7. 'segments' → logprob: -3.0424039363861084
    8. ':
' → logprob: -3.4174039363861084
    9. '```' → logprob: -3.5424039363861084
    10. ' lists' → logprob: -3.5424039363861084

Token 353: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047888532280921936
    2. '.' → logprob: -4.17288875579834
    3. '
' → logprob: -4.17288875579834
    4. '        
' → logprob: -5.54788875579834
    5. ',' → logprob: -5.92288875579834
    6. '.
' → logprob: -6.29788875579834
    7. ':
' → logprob: -6.42288875579834
    8. '(self' → logprob: -6.42288875579834
    9. '   ' → logprob: -6.42288875579834
    10. ':' → logprob: -7.17288875579834

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022650440223515034
    2. '
' → logprob: -6.127264976501465
    3. '```' → logprob: -10.252264976501465
    4. '        
' → logprob: -11.127264976501465
    5. '   ' → logprob: -11.377264976501465
    6. 'def' → logprob: -11.502264976501465
    7. '"""' → logprob: -12.752264976501465
    8. '    
' → logprob: -13.877264976501465
    9. '"""
' → logprob: -14.002264976501465
    10. '<|end|>' → logprob: -14.377264976501465

Token 355: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005043879151344299
    2. '
' → logprob: -6.005043983459473
    3. 'def' → logprob: -6.505043983459473
    4. '        
' → logprob: -7.880043983459473
    5. '"""' → logprob: -8.755043983459473
    6. '   ' → logprob: -9.005043983459473
    7. '```' → logprob: -9.005043983459473
    8. '"""
' (adapté à ' """
') → logprob: -10.005043983459473
    9. 'n' → logprob: -10.380043983459473
    10. ')' → logprob: -10.505043983459473

Token 356: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006084868218749762
    2. 'self' → logprob: -5.25608491897583
    3. 'p' → logprob: -8.006084442138672
    4. 'segments' → logprob: -8.381084442138672
    5. ' self' → logprob: -9.756084442138672
    6. 'all' → logprob: -10.381084442138672
    7. 'binary' → logprob: -10.756084442138672
    8. 'n' → logprob: -10.756084442138672
    9. 'new' → logprob: -10.881084442138672
    10. '```' → logprob: -11.131084442138672

Token 357: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.06973621994256973
    2. ' new' → logprob: -3.3197362422943115
    3. '       ' → logprob: -3.5697362422943115
    4. 'segments' → logprob: -6.444736003875732
    5. 'all' → logprob: -7.569736003875732
    6. 'next' → logprob: -8.19473648071289
    7. 'trans' → logprob: -8.44473648071289
    8. 'result' → logprob: -8.44473648071289
    9. 'self' → logprob: -9.56973648071289
    10. 'binary' → logprob: -9.81973648071289

Token 358: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00021724513499066234
    2. '_segments' → logprob: -8.75021743774414
    3. 'p' → logprob: -9.75021743774414
    4. 'segments' → logprob: -16.25021743774414
    5. '=' → logprob: -16.62521743774414
    6. '_' → logprob: -16.62521743774414
    7. '_sizes' → logprob: -16.87521743774414
    8. '   ' → logprob: -16.87521743774414
    9. '_positions' → logprob: -17.25021743774414
    10. 's' → logprob: -17.25021743774414

Token 359: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.00011749001714633778
    2. '_' → logprob: -9.500117301940918
    3. 'p' → logprob: -11.500117301940918
    4. 'ile' → logprob: -12.250117301940918
    5. '1' → logprob: -12.750117301940918
    6. 'ies' → logprob: -13.125117301940918
    7. '
' → logprob: -13.250117301940918
    8. '=' → logprob: -13.375117301940918
    9. '`' → logprob: -13.750117301940918
    10. '   ' → logprob: -13.750117301940918

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132705092430115
    2. ' =' → logprob: -1.3132705688476562
    3. ':' → logprob: -11.688270568847656
    4. '=[]' → logprob: -14.938270568847656
    5. '=[]
' → logprob: -18.313270568847656
    6. ' ' → logprob: -18.688270568847656
    7. '[:]' → logprob: -19.313270568847656
    8. '.clear' → logprob: -19.938270568847656
    9. '   ' → logprob: -20.063270568847656
    10. '.=' → logprob: -20.563270568847656

Token 361: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3868919014930725
    2. '[]
' → logprob: -1.1368918418884277
    3. '[]

' → logprob: -10.886892318725586
    4. ' []
' → logprob: -14.011892318725586
    5. ' []' → logprob: -14.136892318725586
    6. '[])
' → logprob: -15.636892318725586
    7. '[' → logprob: -15.636892318725586
    8. '[
' → logprob: -16.261892318725586
    9. '[]>' → logprob: -16.261892318725586
    10. '[]}' → logprob: -16.636892318725586

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011708663776516914
    2. 'for' → logprob: -4.886708736419678
    3. ' for' → logprob: -5.511708736419678
    4. '<|end|>' → logprob: -11.13670825958252
    5. '[' → logprob: -11.88670825958252
    6. '```' → logprob: -12.51170825958252
    7. '        
' → logprob: -12.63670825958252
    8. '
' → logprob: -12.88670825958252
    9. '=' → logprob: -12.88670825958252
    10. ',' → logprob: -13.01170825958252

Token 363: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.019324474036693573
    2. '       ' → logprob: -4.26932430267334
    3. ' for' → logprob: -5.26932430267334
    4. '   ' → logprob: -15.14432430267334
    5. '	for' → logprob: -15.76932430267334
    6. '
' → logprob: -16.894325256347656
    7. '           ' → logprob: -16.894325256347656
    8. '```' → logprob: -17.019325256347656
    9. '        
' → logprob: -18.519325256347656
    10. ' ' → logprob: -18.644325256347656

Token 364: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.03093276359140873
    2. 'p' → logprob: -3.530932664871216
    3. ' pile' → logprob: -6.780932903289795
    4. ' p' → logprob: -10.030932426452637
    5. 'x' → logprob: -14.155932426452637
    6. 'size' → logprob: -14.655932426452637
    7. 'pi' → logprob: -15.405932426452637
    8. 'self' → logprob: -16.155933380126953
    9. '   ' → logprob: -16.155933380126953
    10. 'value' → logprob: -16.280933380126953

Token 365: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023292995989322662
    2. 'in' → logprob: -3.7732930183410645
    3. '_size' → logprob: -10.773292541503906
    4. 'size' → logprob: -11.648292541503906
    5. '_in' → logprob: -12.273292541503906
    6. 'count' → logprob: -12.398292541503906
    7. '   ' → logprob: -12.898292541503906
    8. '_count' → logprob: -13.148292541503906
    9. ' ' → logprob: -13.648292541503906
    10. '	in' → logprob: -14.148292541503906

Token 366: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009206312242895365
    2. ' self' → logprob: -7.12592077255249
    3. 'str' → logprob: -9.750920295715332
    4. 'map' → logprob: -11.125920295715332
    5. '[' → logprob: -11.250920295715332
    6. '(self' → logprob: -11.500920295715332
    7. '[self' → logprob: -11.625920295715332
    8. 'bin' → logprob: -12.625920295715332
    9. '   ' → logprob: -12.875920295715332
    10. ' [' → logprob: -14.500920295715332

Token 367: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.318681188422488e-05
    2. '.' → logprob: -11.87501335144043
    3. ' .' → logprob: -12.50001335144043
    4. 'p' → logprob: -14.75001335144043
    5. '._' → logprob: -14.87501335144043
    6. '_.' → logprob: -15.25001335144043
    7. 'class' → logprob: -15.37501335144043
    8. '1' → logprob: -15.87501335144043
    9. '   ' → logprob: -15.87501335144043
    10. 'Binary' → logprob: -16.31251335144043

Token 368: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.00025311444187536836
    2. 'self' → logprob: -9.375252723693848
    3. 'ile' → logprob: -9.500252723693848
    4. 'p' → logprob: -11.625252723693848
    5. 'les' → logprob: -11.625252723693848
    6. '
' → logprob: -11.625252723693848
    7. '>' → logprob: -12.125252723693848
    8. '(self' → logprob: -12.125252723693848
    9. '[' → logprob: -12.250252723693848
    10. ')' → logprob: -12.250252723693848

Token 369: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40649211406707764
    2. ':
' → logprob: -1.1564921140670776
    3. '           ' → logprob: -4.031492233276367
    4. '):
' → logprob: -7.281492233276367
    5. '       ' → logprob: -7.531492233276367
    6. ' :' → logprob: -9.531492233276367
    7. ',' → logprob: -9.656492233276367
    8. ':
' → logprob: -9.656492233276367
    9. '):' → logprob: -9.781492233276367
    10. ' binary' → logprob: -10.031492233276367

Token 370: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015689069405198097
    2. ' binary' → logprob: -5.015688896179199
    3. 'binary' → logprob: -5.390688896179199
    4. '       ' → logprob: -6.140688896179199
    5. 'bin' → logprob: -6.765688896179199
    6. 'b' → logprob: -7.390688896179199
    7. '            
' → logprob: -9.1406888961792
    8. ' bin' → logprob: -9.5156888961792
    9. '   ' → logprob: -9.8906888961792
    10. '#' → logprob: -10.2656888961792

Token 371: ' binary' (ID: 15600)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.5690613389015198
    2. 'binary' (adapté à ' binary') → logprob: -1.069061279296875
    3. 'b' → logprob: -2.569061279296875
    4. ' binary' → logprob: -4.444061279296875
    5. ' bin' → logprob: -6.194061279296875
    6. '           ' → logprob: -9.694061279296875
    7. ' b' → logprob: -9.819061279296875
    8. 'bits' → logprob: -10.069061279296875
    9. 'bs' → logprob: -11.069061279296875
    10. '   ' → logprob: -11.444061279296875

Token 372: '_repr' (ID: 193246)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.707831621170044
    2. '_repr' → logprob: -0.707831621170044
    3. ' =' → logprob: -4.457831382751465
    4. '_rep' → logprob: -6.332831382751465
    5. '=' → logprob: -6.832831382751465
    6. 'str' → logprob: -9.332831382751465
    7. '_bin' → logprob: -10.582831382751465
    8. 'repr' → logprob: -12.082831382751465
    9. '=str' → logprob: -12.707831382751465
    10. 'rep' → logprob: -12.957831382751465

Token 373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687190413475037
    2. ' =' → logprob: -1.1368719339370728
    3. 'b' → logprob: -14.761872291564941
    4. '=b' → logprob: -15.386872291564941
    5. '   ' → logprob: -16.136871337890625
    6. ' ' → logprob: -17.136871337890625
    7. ':' → logprob: -17.261871337890625
    8. 's' → logprob: -17.386871337890625
    9. '       ' → logprob: -17.511871337890625
    10. '＝' → logprob: -17.511871337890625

Token 374: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -4.620622712536715e-05
    2. 'format' → logprob: -10.625045776367188
    3. ' bin' → logprob: -10.750045776367188
    4. '(bin' → logprob: -15.500045776367188
    5. 'f' → logprob: -16.750045776367188
    6. 'Bin' → logprob: -17.250045776367188
    7. '   ' → logprob: -17.875045776367188
    8. '/bin' → logprob: -17.875045776367188
    9. 'base' → logprob: -18.000045776367188
    10. '_bin' → logprob: -18.250045776367188

Token 375: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. 'p' → logprob: -15.750001907348633
    4. 'pile' → logprob: -15.875001907348633
    5. ' (' → logprob: -18.125001907348633
    6. '[p' → logprob: -18.750001907348633
    7. '	p' → logprob: -18.750001907348633
    8. ')p' → logprob: -20.000001907348633
    9. '(
' → logprob: -20.125001907348633
    10. ' pile' → logprob: -20.250001907348633

Token 376: 'ile' (ID: 554)
  Prédit: 'ile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.00014048899174667895
    2. 'pile' → logprob: -9.500140190124512
    3. '(p' → logprob: -9.875140190124512
    4. ')' → logprob: -12.625140190124512
    5. 'il' → logprob: -12.750140190124512
    6. 'ule' → logprob: -14.250140190124512
    7. '[p' → logprob: -14.250140190124512
    8. '[' → logprob: -14.250140190124512
    9. 'p' → logprob: -14.625140190124512
    10. ')p' → logprob: -14.625140190124512

Token 377: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.00020663968462031335
    2. '())[' → logprob: -8.62520694732666
    3. '(p' → logprob: -11.37520694732666
    4. '(' → logprob: -12.12520694732666
    5. ' )[' → logprob: -12.37520694732666
    6. ')' → logprob: -13.25020694732666
    7. '[' → logprob: -13.62520694732666
    8. '()[' → logprob: -13.62520694732666
    9. 'p' → logprob: -15.00020694732666
    10. ')(' → logprob: -15.25020694732666

Token 378: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.56364209135063e-05
    2. '3' → logprob: -9.750065803527832
    3. ')[' → logprob: -12.625065803527832
    4. '[' → logprob: -13.375065803527832
    5. '][' → logprob: -14.250065803527832
    6. '```' → logprob: -14.750065803527832
    7. ':' → logprob: -14.875065803527832
    8. '(' → logprob: -15.000065803527832
    9. '1' → logprob: -16.250064849853516
    10. 'len' → logprob: -16.625064849853516

Token 379: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.010446110740303993
    2. ':]
' → logprob: -4.635446071624756
    3. ':].' → logprob: -7.385446071624756
    4. ']' → logprob: -9.760446548461914
    5. ':' → logprob: -12.135446548461914
    6. ' :]' → logprob: -12.760446548461914
    7. ':]

' → logprob: -13.635446548461914
    8. '()]' → logprob: -13.885446548461914
    9. '       ' → logprob: -15.135446548461914
    10. ':],' → logprob: -15.260446548461914

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005003432277590036
    2. 'filtered' → logprob: -6.255003452301025
    3. 'no' → logprob: -6.755003452301025
    4. '
' → logprob: -7.755003452301025
    5. 'zero' → logprob: -7.755003452301025
    6. '            
' → logprob: -8.380002975463867
    7. 'without' → logprob: -8.755002975463867
    8. 'removed' → logprob: -9.005002975463867
    9. 'zeros' → logprob: -9.380002975463867
    10. 'binary' → logprob: -9.880002975463867

Token 381: ' segments' (ID: 33749)
  Prédit: 'filtered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'filtered' → logprob: -0.5770865082740784
    2. 'ones' → logprob: -1.9520864486694336
    3. 'no' → logprob: -2.2020864486694336
    4. 'one' → logprob: -2.8270864486694336
    5. 'binary' → logprob: -2.8270864486694336
    6. '           ' → logprob: -3.3270864486694336
    7. ' ones' → logprob: -4.202086448669434
    8. 'clean' → logprob: -5.452086448669434
    9. ' filtered' → logprob: -5.952086448669434
    10. 'without' → logprob: -6.077086448669434

Token 382: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762603878974915
    2. ' =' → logprob: -0.8262603878974915
    3. '.extend' → logprob: -8.076260566711426
    4. '+=' → logprob: -12.451260566711426
    5. ' +=' → logprob: -12.451260566711426
    6. '.append' → logprob: -14.201260566711426
    7. '           ' → logprob: -14.326260566711426
    8. '       ' → logprob: -15.701260566711426
    9. '   ' → logprob: -15.701260566711426
    10. ':' → logprob: -16.07625961303711

Token 383: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.000504062045365572
    2. ' Binary' → logprob: -8.125504493713379
    3. '[' → logprob: -8.500504493713379
    4. '(Binary' → logprob: -13.375504493713379
    5. '[]
' → logprob: -14.375504493713379
    6. ' [' → logprob: -14.500504493713379
    7. '           ' → logprob: -14.750504493713379
    8. '   ' → logprob: -14.875504493713379
    9. '       ' → logprob: -15.000504493713379
    10. ' ' → logprob: -15.625504493713379

Token 384: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -3.128163257315464e-07
    2. '_segment' → logprob: -15.875
    3. 'segment' → logprob: -15.875
    4. 'egment' → logprob: -17.75
    5. ' Segment' → logprob: -18.375
    6. 'Segments' → logprob: -19.5
    7. 'Seg' → logprob: -20.625
    8. '_SEG' → logprob: -21.375
    9. ' segment' → logprob: -21.75
    10. 'Binary' → logprob: -22.25

Token 385: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.9361264946837764e-07
    2. 'Binary' → logprob: -15.875
    3. 'Segment' → logprob: -17.125
    4. '```' → logprob: -17.25
    5. '[' → logprob: -18.5
    6. 'ed' → logprob: -18.625
    7. 'er's' → logprob: -18.75
    8. 'ер' → logprob: -19.0
    9. 'ter' → logprob: -19.125
    10. 'erer' → logprob: -19.25

Token 386: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -13.625001907348633
    3. 'segment' → logprob: -16.625001907348633
    4. ' .' → logprob: -16.750001907348633
    5. '(segment' → logprob: -17.625001907348633
    6. '.seg' → logprob: -18.000001907348633
    7. '.se' → logprob: -18.125001907348633
    8. '().' → logprob: -19.875001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '.separator' → logprob: -21.125001907348633

Token 387: '(binary' (ID: 139383)
  Prédit: '(binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(binary' → logprob: -0.0003571535926312208
    2. '('' → logprob: -8.625357627868652
    3. 'binary' → logprob: -9.125357627868652
    4. '(' → logprob: -10.000357627868652
    5. '(f' → logprob: -11.875357627868652
    6. '("' → logprob: -12.125357627868652
    7. '(bin' → logprob: -12.625357627868652
    8. '(b' → logprob: -12.750357627868652
    9. '(remove' → logprob: -14.000357627868652
    10. '([' → logprob: -14.375357627868652

Token 388: '_repr' (ID: 193246)
  Prédit: '_repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_repr' → logprob: -9.639096970204264e-05
    2. 'repr' → logprob: -9.250096321105957
    3. '_rep' → logprob: -17.375097274780273
    4. '_str' → logprob: -17.500097274780273
    5. '
' → logprob: -17.625097274780273
    6. 's' → logprob: -17.875097274780273
    7. '```' → logprob: -18.000097274780273
    8. ' repr' → logprob: -18.000097274780273
    9. '1' → logprob: -18.500097274780273
    10. ')' → logprob: -18.625097274780273

Token 389: ')
' (ID: 446)
  Prédit: '.replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.860357403755188
    2. ')
' → logprob: -0.985357403755188
    3. ')' → logprob: -1.610357403755188
    4. '           ' → logprob: -5.610357284545898
    5. 'replace' → logprob: -9.985357284545898
    6. '       ' → logprob: -10.860357284545898
    7. ')

' → logprob: -10.985357284545898
    8. ').' → logprob: -11.110357284545898
    9. '[::-' → logprob: -11.235357284545898
    10. ')
' → logprob: -11.360357284545898

Token 390: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027615370228886604
    2. 'new' → logprob: -3.6526153087615967
    3. ' new' → logprob: -6.652615547180176
    4. '
' → logprob: -12.152615547180176
    5. '   ' → logprob: -12.277615547180176
    6. '       ' → logprob: -13.027615547180176
    7. '               ' → logprob: -13.027615547180176
    8. '[new' → logprob: -13.777615547180176
    9. ' for' → logprob: -13.902615547180176
    10. 'for' → logprob: -14.027615547180176

Token 391: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.49101459980010986
    2. ' new' → logprob: -0.9910145998001099
    3. '           ' → logprob: -4.11601448059082
    4. '
' → logprob: -8.11601448059082
    5. '       ' → logprob: -9.74101448059082
    6. ' for' → logprob: -9.86601448059082
    7. '   ' → logprob: -10.49101448059082
    8. 'for' → logprob: -10.74101448059082
    9. '               ' → logprob: -12.24101448059082
    10. '	new' → logprob: -12.36601448059082

Token 392: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.392202976712724e-06
    2. '_segments' → logprob: -12.125006675720215
    3. '_' → logprob: -14.125006675720215
    4. 'segments' → logprob: -16.5000057220459
    5. ' _' → logprob: -17.3750057220459
    6. '\' → logprob: -17.7500057220459
    7. 'p' → logprob: -17.8750057220459
    8. 'new' → logprob: -18.3750057220459
    9. '_segment' → logprob: -18.6250057220459
    10. '_append' → logprob: -18.7500057220459

Token 393: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0010590101592242718
    2. 'p' → logprob: -6.876059055328369
    3. 'new' → logprob: -11.626058578491211
    4. '_p' → logprob: -12.001058578491211
    5. 'ile' → logprob: -12.751058578491211
    6. 'segments' → logprob: -12.751058578491211
    7. '_' → logprob: -13.126058578491211
    8. 'iled' → logprob: -14.751058578491211
    9. '```' → logprob: -15.001058578491211
    10. 'ILES' → logprob: -15.251058578491211

Token 394: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.00020544764993246645
    2. '.' → logprob: -8.500205039978027
    3. 'extend' → logprob: -13.250205039978027
    4. ' +=' → logprob: -16.750205993652344
    5. '+=' → logprob: -16.875205993652344
    6. '.ext' → logprob: -16.875205993652344
    7. ' .' → logprob: -18.500205993652344
    8. 'Extend' → logprob: -18.875205993652344
    9. '   ' → logprob: -19.000205993652344
    10. ' extend' → logprob: -19.000205993652344

Token 395: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. 'segments' → logprob: -13.250001907348633
    3. '([' → logprob: -14.875001907348633
    4. '(segment' → logprob: -17.250001907348633
    5. '((' → logprob: -17.500001907348633
    6. '(seg' → logprob: -18.000001907348633
    7. '(
' → logprob: -18.000001907348633
    8. ' (' → logprob: -18.125001907348633
    9. '(s' → logprob: -19.625001907348633
    10. ' segments' → logprob: -20.500001907348633

Token 396: 'segments' (ID: 110314)
  Prédit: 'segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -3.309382373117842e-05
    2. '[' → logprob: -10.375033378601074
    3. 'segment' → logprob: -13.750033378601074
    4. ' segments' → logprob: -15.000033378601074
    5. 'seg' → logprob: -15.125033378601074
    6. '[i' → logprob: -16.375032424926758
    7. '[s' → logprob: -17.500032424926758
    8. ' [' → logprob: -18.125032424926758
    9. '(' → logprob: -18.125032424926758
    10. '[str' → logprob: -18.250032424926758

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07118527591228485
    2. ')
' → logprob: -2.696185350418091
    3. '       ' → logprob: -6.696185111999512
    4. ')return' → logprob: -12.571185111999512
    5. '
' → logprob: -12.946185111999512
    6. ' )' → logprob: -13.071185111999512
    7. ')
' → logprob: -13.321185111999512
    8. ')

' → logprob: -13.946185111999512
    9. '           ' → logprob: -14.946185111999512
    10. ' )
' → logprob: -15.196185111999512

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015762827824801207
    2. 'self' → logprob: -6.6265764236450195
    3. '   ' → logprob: -8.75157642364502
    4. ' self' → logprob: -9.75157642364502
    5. '
' → logprob: -11.00157642364502
    6. ' ' → logprob: -12.12657642364502
    7. '           ' → logprob: -12.37657642364502
    8. '```' → logprob: -12.75157642364502
    9. '        
' → logprob: -13.62657642364502
    10. '      ' → logprob: -14.12657642364502

Token 399: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1040625274181366
    2. '       ' → logprob: -2.354062557220459
    3. ' self' → logprob: -5.604062557220459
    4. '
' → logprob: -9.4790620803833
    5. '        
' → logprob: -9.9790620803833
    6. '   ' → logprob: -11.1040620803833
    7. ' ' → logprob: -12.2290620803833
    8. '	self' → logprob: -12.4790620803833
    9. 'new' → logprob: -12.7290620803833
    10. '(self' → logprob: -13.1040620803833

Token 400: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.41866585687967e-06
    2. 'p' → logprob: -12.250008583068848
    3. '.' → logprob: -12.875008583068848
    4. '_p' → logprob: -14.625008583068848
    5. '._' → logprob: -15.500008583068848
    6. '```' → logprob: -16.12500762939453
    7. ' .' → logprob: -16.62500762939453
    8. '.py' → logprob: -18.00000762939453
    9. '.п' → logprob: -18.00000762939453
    10. '.pkl' → logprob: -18.12500762939453

Token 401: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -1.688212614681106e-05
    2. '_' → logprob: -11.500017166137695
    3. 'p' → logprob: -13.125017166137695
    4. 'ile' → logprob: -14.000017166137695
    5. '
' → logprob: -14.625017166137695
    6. '**' → logprob: -14.750017166137695
    7. 'i' → logprob: -15.000017166137695
    8. 'illes' → logprob: -15.250017166137695
    9. '`' → logprob: -15.500017166137695
    10. '>' → logprob: -15.500017166137695

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196768581867218
    2. '=' → logprob: -2.811967611312866
    3. '[:]' → logprob: -17.311967849731445
    4. '＝' → logprob: -17.811967849731445
    5. ' ' → logprob: -18.061967849731445
    6. '.=' → logprob: -19.436967849731445
    7. ',' → logprob: -19.686967849731445
    8. '_' → logprob: -19.936967849731445
    9. ' =
' → logprob: -20.186967849731445
    10. ')' → logprob: -20.561967849731445

Token 403: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00154533376917243
    2. ' new' → logprob: -6.501545429229736
    3. '[new' → logprob: -10.251544952392578
    4. '[' → logprob: -11.876544952392578
    5. ' [' → logprob: -14.751544952392578
    6. '   ' → logprob: -16.001544952392578
    7. ' ' → logprob: -16.376544952392578
    8. '	new' → logprob: -17.126544952392578
    9. 'list' → logprob: -17.501544952392578
    10. 'sorted' → logprob: -17.501544952392578

Token 404: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.07910877466201782
    2. 'p' → logprob: -2.579108715057373
    3. 'iles' → logprob: -8.454109191894531
    4. '.p' → logprob: -12.829109191894531
    5. '```' → logprob: -14.079109191894531
    6. 'new' → logprob: -14.329109191894531
    7. 'plies' → logprob: -15.329109191894531
    8. 'P' → logprob: -15.454109191894531
    9. 'ples' → logprob: -15.579109191894531
    10. '[' → logprob: -15.704109191894531

Token 405: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -5.319370302458992e-06
    2. '_' → logprob: -12.500005722045898
    3. '[' → logprob: -14.875005722045898
    4. '>' → logprob: -16.0000057220459
    5. '
' → logprob: -16.0000057220459
    6. 'p' → logprob: -16.1250057220459
    7. 'iled' → logprob: -16.3750057220459
    8. '`' → logprob: -16.6250057220459
    9. 'ILES' → logprob: -16.6250057220459
    10. 'ile' → logprob: -16.7500057220459

Token 406: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 407: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.13382793962955475
    2. '   ' → logprob: -2.6338279247283936
    3. '<|end|>' → logprob: -3.0088279247283936
    4. ' def' → logprob: -6.508828163146973
    5. '
' → logprob: -6.508828163146973
    6. '<|end|>' → logprob: -7.758828163146973
    7. ' ' → logprob: -8.258828163146973
    8. '    
' → logprob: -8.258828163146973
    9. '  ' → logprob: -9.633828163146973
    10. '```' → logprob: -10.383828163146973

Token 409: ' is' (ID: 382)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.7023201584815979
    2. 'step' → logprob: -0.7023201584815979
    3. ' nim' → logprob: -6.202320098876953
    4. '_step' → logprob: -6.577320098876953
    5. 'grund' → logprob: -7.452320098876953
    6. ' grund' → logprob: -7.702320098876953
    7. ' can' → logprob: -7.952320098876953
    8. 'nim' → logprob: -8.077320098876953
    9. 'can' → logprob: -8.202320098876953
    10. 'calculate' → logprob: -8.202320098876953

Token 410: '_l' (ID: 1478)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.005785162560641766
    2. '_n' → logprob: -6.13078498840332
    3. '_empty' → logprob: -7.25578498840332
    4. '_l' → logprob: -7.63078498840332
    5. '_first' → logprob: -7.63078498840332
    6. '_win' → logprob: -8.00578498840332
    7. '_next' → logprob: -8.13078498840332
    8. '_' → logprob: -8.75578498840332
    9. '_finished' → logprob: -9.00578498840332
    10. '_terminal' → logprob: -9.00578498840332

Token 411: 'ost' (ID: 564)
  Prédit: 'osing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osing' → logprob: -0.06752987205982208
    2. 'e' → logprob: -3.5675299167633057
    3. 'oss' → logprob: -3.8175299167633057
    4. 'ose' → logprob: -5.567529678344727
    5. 'ost' → logprob: -5.692529678344727
    6. 'egal' → logprob: -5.692529678344727
    7. 'oser' → logprob: -6.192529678344727
    8. 'ast' → logprob: -7.692529678344727
    9. 'east' → logprob: -7.942529678344727
    10. 'o' → logprob: -8.442529678344727

Token 412: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000340945553034544
    2. '(' → logprob: -8.250341415405273
    3. 'self' → logprob: -9.625341415405273
    4. '()' → logprob: -11.875341415405273
    5. 'def' → logprob: -12.750341415405273
    6. '   ' → logprob: -13.500341415405273
    7. ')' → logprob: -14.625341415405273
    8. 'for' → logprob: -15.000341415405273
    9. '       ' → logprob: -15.250341415405273
    10. '(
' → logprob: -15.375341415405273

Token 413: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6478122472763062
    2. 'self' → logprob: -1.0228122472763062
    3. '(self' → logprob: -2.1478123664855957
    4. '   ' → logprob: -8.522811889648438
    5. '       ' → logprob: -9.897811889648438
    6. ' self' → logprob: -10.147811889648438
    7. ' ' → logprob: -10.272811889648438
    8. '(' → logprob: -10.272811889648438
    9. ')(' → logprob: -10.397811889648438
    10. 'def' → logprob: -10.397811889648438

Token 414: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006764543941244483
    2. 'self' → logprob: -7.37567663192749
    3. '(' → logprob: -10.000676155090332
    4. '   ' → logprob: -13.750676155090332
    5. '       ' → logprob: -13.875676155090332
    6. 'def' → logprob: -13.875676155090332
    7. ' (' → logprob: -14.750676155090332
    8. ' self' → logprob: -15.000676155090332
    9. ')' → logprob: -15.625676155090332
    10. '```' → logprob: -16.25067710876465

Token 415: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.3134615123271942
    2. ' bool' → logprob: -1.3134615421295166
    3. '   ' → logprob: -9.938461303710938
    4. 'False' → logprob: -10.188461303710938
    5. ' ' → logprob: -10.438461303710938
    6. 'True' → logprob: -11.188461303710938
    7. '       ' → logprob: -11.688461303710938
    8. '(bool' → logprob: -11.688461303710938
    9. ' False' → logprob: -12.063461303710938
    10. ' True' → logprob: -12.063461303710938

Token 416: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.759022057056427
    2. '(self' → logprob: -1.1340219974517822
    3. ':' → logprob: -1.6340219974517822
    4. ':
' → logprob: -4.384022235870361
    5. 'self' → logprob: -7.134022235870361
    6. '(' → logprob: -7.384022235870361
    7. '   ' → logprob: -7.634022235870361
    8. '(
' → logprob: -8.259021759033203
    9. '():
' → logprob: -9.759021759033203
    10. ')' → logprob: -10.259021759033203

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9385402993066236e-05
    2. 'return' → logprob: -11.375019073486328
    3. ' return' → logprob: -12.250019073486328
    4. 'n' → logprob: -14.625019073486328
    5. '
' → logprob: -14.625019073486328
    6. '   ' → logprob: -14.750019073486328
    7. '0' → logprob: -15.125019073486328
    8. '      ' → logprob: -15.750019073486328
    9. '#' → logprob: -16.125019073486328
    10. 'result' → logprob: -16.250019073486328

Token 418: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14114011824131012
    2. 'return' (adapté à ' return') → logprob: -2.1411402225494385
    3. ' return' → logprob: -4.516139984130859
    4. 'xor' → logprob: -6.266139984130859
    5. '   ' → logprob: -8.01613998413086
    6. '#' → logprob: -8.14113998413086
    7. 'from' → logprob: -8.26613998413086
    8. 'n' → logprob: -9.26613998413086
    9. ' xor' → logprob: -9.76613998413086
    10. 'nim' → logprob: -10.39113998413086

Token 419: ' len' (ID: 4631)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3562023639678955
    2. 'len' → logprob: -1.6062023639678955
    3. 'sum' → logprob: -2.4812023639678955
    4. ' all' → logprob: -4.356202125549316
    5. 'self' → logprob: -6.731202125549316
    6. ' len' → logprob: -7.356202125549316
    7. 'not' → logprob: -8.106202125549316
    8. ' sum' → logprob: -8.481202125549316
    9. '(len' → logprob: -9.356202125549316
    10. '(sum' → logprob: -9.856202125549316

Token 420: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.750027656555176
    3. 'self' → logprob: -12.500027656555176
    4. '([' → logprob: -13.125027656555176
    5. ' (' → logprob: -15.250027656555176
    6. '[self' → logprob: -15.500027656555176
    7. '(set' → logprob: -15.625027656555176
    8. '==' → logprob: -17.500028610229492
    9. '{' → logprob: -17.625028610229492
    10. '({' → logprob: -17.875028610229492

Token 421: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.2664456789934775e-06
    2. ' .' → logprob: -14.625000953674316
    3. ')' → logprob: -15.125000953674316
    4. 'p' → logprob: -15.375000953674316
    5. '.' → logprob: -16.125001907348633
    6. ').' → logprob: -16.875001907348633
    7. '```' → logprob: -17.750001907348633
    8. '(p' → logprob: -18.000001907348633
    9. '.s' → logprob: -18.000001907348633
    10. 'self' → logprob: -18.125001907348633

Token 422: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.013367156498134136
    2. '.p' → logprob: -4.388367176055908
    3. ')' → logprob: -8.13836669921875
    4. '>' → logprob: -8.76336669921875
    5. 'ile' → logprob: -8.76336669921875
    6. '.' → logprob: -9.76336669921875
    7. '.s' → logprob: -10.13836669921875
    8. '==' → logprob: -10.51336669921875
    9. ' ==' → logprob: -11.26336669921875
    10. '.l' → logprob: -11.38836669921875

Token 423: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022403046023100615
    2. ')==' → logprob: -6.252240180969238
    3. '==' → logprob: -8.127240180969238
    4. ' ==' → logprob: -11.627240180969238
    5. '%' → logprob: -12.127240180969238
    6. ' )' → logprob: -14.252240180969238
    7. ')%' → logprob: -14.752240180969238
    8. '[' → logprob: -15.002240180969238
    9. '0' → logprob: -15.502240180969238
    10. '()' → logprob: -16.252241134643555

Token 424: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.029809964820742607
    2. ' ==' → logprob: -3.5298099517822266
    3. '()==' → logprob: -10.154809951782227
    4. '%' → logprob: -12.029809951782227
    5. '=' → logprob: -12.154809951782227
    6. '0' → logprob: -12.529809951782227
    7. '()' → logprob: -12.654809951782227
    8. ')' → logprob: -13.779809951782227
    9. ')==' → logprob: -13.779809951782227
    10. '===' → logprob: -15.779809951782227

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033646851778030396
    2. ' ' → logprob: -3.408646821975708
    3. '1' → logprob: -14.158646583557129
    4. '```' → logprob: -16.596147537231445
    5. ' ' → logprob: -16.846147537231445
    6. '   ' → logprob: -16.908647537231445
    7. '  ' → logprob: -16.971147537231445
    8. '۰' → logprob: -17.658647537231445
    9. '(' → logprob: -18.158647537231445
    10. 'zero' → logprob: -18.346147537231445

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0087516784551553e-05
    2. ' ' → logprob: -11.62501049041748
    3. '1' → logprob: -14.00001049041748
    4. '```' → logprob: -16.875009536743164
    5. 'zero' → logprob: -17.062509536743164
    6. '   ' → logprob: -18.375009536743164
    7. '[' → logprob: -18.375009536743164
    8. '۰' → logprob: -18.437509536743164
    9. '=' → logprob: -18.875009536743164
    10. '2' → logprob: -18.875009536743164

Token 427: '

' (ID: 279)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.21167780458927155
    2. ' and' → logprob: -2.0866777896881104
    3. '<|end|>' → logprob: -2.8366777896881104
    4. '       ' → logprob: -5.4616780281066895
    5. '
' → logprob: -6.5866780281066895
    6. 'or' → logprob: -6.7116780281066895
    7. '<|end|>' → logprob: -7.5866780281066895
    8. 'and' → logprob: -7.5866780281066895
    9. '   ' → logprob: -9.586677551269531
    10. '

' → logprob: -10.336677551269531

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9414236545562744
    2. 'def' → logprob: -0.9414236545562744
    3. '<|end|>' → logprob: -1.5664236545562744
    4. '
' → logprob: -5.191423416137695
    5. '<|end|>' → logprob: -6.066423416137695
    6. ' def' → logprob: -6.941423416137695
    7. ' ' → logprob: -7.441423416137695
    8. '    
' → logprob: -7.566423416137695
    9. '```' → logprob: -8.066423416137695
    10. '       ' → logprob: -8.316423416137695

Token 429: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.6240566083070007e-06
    2. ' def' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '@property' → logprob: -16.750001907348633
    5. '#' → logprob: -17.625001907348633
    6. '@' → logprob: -18.375001907348633
    7. 'from' → logprob: -18.500001907348633
    8. '<|end|>' → logprob: -19.875001907348633
    9. 'import' → logprob: -20.500001907348633
    10. '```' → logprob: -20.750001907348633

Token 430: ' nim' (ID: 26845)
  Prédit: ' nim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nim' → logprob: -0.8365001678466797
    2. ' step' → logprob: -1.0865001678466797
    3. ' grund' → logprob: -2.9615001678466797
    4. ' xor' → logprob: -3.0865001678466797
    5. 'nim' → logprob: -3.3365001678466797
    6. 'grund' → logprob: -4.08650016784668
    7. ' compute' → logprob: -4.08650016784668
    8. 'step' → logprob: -4.46150016784668
    9. ' calculate' → logprob: -4.71150016784668
    10. ' def' → logprob: -5.08650016784668

Token 431: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.008541285991668701
    2. 'ber' → logprob: -4.883541107177734
    3. '_' → logprob: -7.633541107177734
    4. '_move' → logprob: -8.758541107177734
    5. '_x' → logprob: -9.508541107177734
    6. 'bers' → logprob: -9.758541107177734
    7. '_s' → logprob: -10.008541107177734
    8. 'sum' → logprob: -10.008541107177734
    9. '_heap' → logprob: -11.008541107177734
    10. '_value' → logprob: -11.258541107177734

Token 432: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006763094570487738
    2. '(' → logprob: -5.131762981414795
    3. '()' → logprob: -7.256762981414795
    4. ' (' → logprob: -9.756763458251953
    5. 'self' → logprob: -10.881763458251953
    6. '<|end|>' → logprob: -10.881763458251953
    7. ')' → logprob: -11.756763458251953
    8. '(
' → logprob: -12.131763458251953
    9. '   ' → logprob: -12.256763458251953
    10. '<|end|>' → logprob: -12.631763458251953

Token 433: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4294719994068146
    2. '(self' → logprob: -1.6794719696044922
    3. '()' → logprob: -2.054471969604492
    4. '   ' → logprob: -4.429471969604492
    5. '(' → logprob: -4.929471969604492
    6. '<|end|>' → logprob: -5.429471969604492
    7. '())' → logprob: -5.804471969604492
    8. 'self' → logprob: -6.304471969604492
    9. '       ' → logprob: -6.929471969604492
    10. ' )' → logprob: -7.054471969604492

Token 434: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00609575817361474
    2. '(' → logprob: -5.131095886230469
    3. 'self' → logprob: -9.131095886230469
    4. '   ' → logprob: -10.756095886230469
    5. '       ' → logprob: -11.506095886230469
    6. 'def' → logprob: -12.006095886230469
    7. ')' → logprob: -12.131095886230469
    8. ' (' → logprob: -12.631095886230469
    9. '(
' → logprob: -13.006095886230469
    10. '=' → logprob: -13.006095886230469

Token 435: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002521561225876212
    2. ' ' → logprob: -6.127521514892578
    3. 'int' → logprob: -8.002521514892578
    4. ' int' → logprob: -13.877521514892578
    5. '   ' → logprob: -15.002521514892578
    6. '
' → logprob: -15.252521514892578
    7. 'xor' → logprob: -15.752521514892578
    8. '[int' → logprob: -15.877521514892578
    9. 'def' → logprob: -17.877521514892578
    10. 'import' → logprob: -17.877521514892578

Token 436: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009167186915874481
    2. '       ' → logprob: -4.759167194366455
    3. '(' → logprob: -9.134166717529297
    4. ':' → logprob: -9.134166717529297
    5. '   ' → logprob: -9.259166717529297
    6. ' =' → logprob: -9.384166717529297
    7. '():
' → logprob: -10.134166717529297
    8. '()' → logprob: -10.509166717529297
    9. '(
' → logprob: -10.634166717529297
    10. '=' → logprob: -10.634166717529297

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05541589483618736
    2. '0' → logprob: -2.9304158687591553
    3. '
' → logprob: -8.680416107177734
    4. 'sum' → logprob: -9.180416107177734
    5. 'result' → logprob: -9.305416107177734
    6. 'n' → logprob: -10.180416107177734
    7. '1' → logprob: -10.430416107177734
    8. '   ' → logprob: -11.055416107177734
    9. ' ' → logprob: -11.055416107177734
    10. 'return' → logprob: -11.305416107177734

Token 438: ' from' (ID: 591)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5002055764198303
    2. 'result' → logprob: -1.0002055168151855
    3. '       ' → logprob: -3.8752055168151855
    4. 'from' (adapté à ' from') → logprob: -6.1252055168151855
    5. 'res' → logprob: -6.8752055168151855
    6. 'xor' → logprob: -7.1252055168151855
    7. '   ' → logprob: -7.5002055168151855
    8. 'sum' → logprob: -8.750205993652344
    9. ' result' → logprob: -8.875205993652344
    10. ' ' → logprob: -9.500205993652344

Token 439: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.025058485567569733
    2. 'operator' → logprob: -4.275058269500732
    3. ' functools' → logprob: -4.525058269500732
    4. ' operator' → logprob: -14.15005874633789
    5. 'reduce' → logprob: -14.65005874633789
    6. 'func' → logprob: -15.15005874633789
    7. 'ft' → logprob: -15.65005874633789
    8. '.operator' → logprob: -16.77505874633789
    9. 'math' → logprob: -16.77505874633789
    10. 'typing' → logprob: -17.27505874633789

Token 440: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11305421590805054
    2. ' import' → logprob: -2.2380542755126953
    3. '	import' → logprob: -8.863054275512695
    4. 'reduce' → logprob: -10.363054275512695
    5. ' reduce' → logprob: -10.988054275512695
    6. '_import' → logprob: -11.488054275512695
    7. ' functools' → logprob: -11.863054275512695
    8. '.reduce' → logprob: -11.988054275512695
    9. ' ' → logprob: -12.238054275512695
    10. '   ' → logprob: -12.488054275512695

Token 441: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.000431861262768507
    2. ' reduce' → logprob: -7.750432014465332
    3. '.reduce' → logprob: -13.875432014465332
    4. '_reduce' → logprob: -16.625431060791016
    5. 'import' → logprob: -17.000431060791016
    6. 'redu' → logprob: -17.125431060791016
    7. '   ' → logprob: -18.250431060791016
    8. ' ' → logprob: -19.375431060791016
    9. '```' → logprob: -19.375431060791016
    10. '  ' → logprob: -19.625431060791016

Token 442: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6665934324264526
    2. 'import' → logprob: -0.7915934324264526
    3. ',' → logprob: -3.916593551635742
    4. 'from' → logprob: -5.416593551635742
    5. '
' → logprob: -5.666593551635742
    6. '^' → logprob: -5.916593551635742
    7. ' ' → logprob: -7.666593551635742
    8. ' from' → logprob: -7.666593551635742
    9. '<|end|>' → logprob: -7.666593551635742
    10. ' import' → logprob: -8.166593551635742

Token 443: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4105367660522461
    2. '       ' → logprob: -1.160536766052246
    3. ',' → logprob: -4.285536766052246
    4. '^' → logprob: -5.660536766052246
    5. '
' → logprob: -6.160536766052246
    6. ' import' → logprob: -7.035536766052246
    7. 'lambda' → logprob: -7.035536766052246
    8. 'operator' → logprob: -7.660536766052246
    9. ' ' → logprob: -8.285536766052246
    10. 'xor' → logprob: -8.785536766052246

Token 444: ' from' (ID: 591)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4479484260082245
    2. 'return' → logprob: -1.1979484558105469
    3. ' return' → logprob: -3.447948455810547
    4. 'from' (adapté à ' from') → logprob: -3.822948455810547
    5. '       ' → logprob: -6.072948455810547
    6. '   ' → logprob: -6.697948455810547
    7. ' from' → logprob: -6.947948455810547
    8. '^' → logprob: -7.447948455810547
    9. ' import' → logprob: -8.572948455810547
    10. ' ' → logprob: -9.447948455810547

Token 445: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0005542247672565281
    2. ' operator' → logprob: -7.500554084777832
    3. '.operator' → logprob: -14.125554084777832
    4. '	operator' → logprob: -15.125554084777832
    5. '_operator' → logprob: -15.250554084777832
    6. '(operator' → logprob: -17.50055503845215
    7. '/operator' → logprob: -17.87555503845215
    8. 'import' → logprob: -18.75055503845215
    9. 'op' → logprob: -19.75055503845215
    10. 'oper' → logprob: -21.37555503845215

Token 446: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47443798184394836
    2. 'import' → logprob: -0.974437952041626
    3. ' xor' → logprob: -8.599437713623047
    4. ' ' → logprob: -9.224437713623047
    5. '	import' → logprob: -10.224437713623047
    6. '^' → logprob: -11.349437713623047
    7. '_import' → logprob: -11.474437713623047
    8. 'xor' → logprob: -11.974437713623047
    9. ' imports' → logprob: -13.474437713623047
    10. ' importar' → logprob: -13.474437713623047

Token 447: ' ix' (ID: 44402)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.038191936910152435
    2. 'xor' → logprob: -3.2881920337677
    3. ' ix' → logprob: -9.788191795349121
    4. '```' → logprob: -10.413191795349121
    5. 'icon' → logprob: -11.038191795349121
    6. '^' → logprob: -11.663191795349121
    7. '_ix' → logprob: -11.788191795349121
    8. '`' → logprob: -12.038191795349121
    9. 'Ix' → logprob: -12.163191795349121
    10. 'ior' → logprob: -12.288191795349121

Token 448: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -4.320199877838604e-07
    2. '_or' → logprob: -16.25
    3. '(or' → logprob: -16.5
    4. '^' → logprob: -16.75
    5. 'xor' → logprob: -17.0
    6. ''or' → logprob: -17.125
    7. '```' → logprob: -17.625
    8. 'o' → logprob: -17.75
    9. '
' → logprob: -18.875
    10. 'ort' → logprob: -19.0

Token 449: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3565255105495453
    2. 'reduce' → logprob: -2.106525421142578
    3. 'import' → logprob: -2.231525421142578
    4. ',' → logprob: -3.231525421142578
    5. '       ' → logprob: -3.731525421142578
    6. '   ' → logprob: -6.481525421142578
    7. 'or' → logprob: -6.606525421142578
    8. ' reduce' → logprob: -7.231525421142578
    9. ' ' → logprob: -7.481525421142578
    10. '        
' → logprob: -7.606525421142578

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21349406242370605
    2. ',' → logprob: -2.338494062423706
    3. '
' → logprob: -2.963494062423706
    4. 'import' → logprob: -3.588494062423706
    5. '=' → logprob: -4.963494300842285
    6. ' =' → logprob: -5.588494300842285
    7. '   ' → logprob: -6.963494300842285
    8. ' ' → logprob: -7.463494300842285
    9. ',
' → logprob: -7.463494300842285
    10. '        
' → logprob: -7.588494300842285

Token 451: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08648987859487534
    2. 'reduce' → logprob: -3.2114899158477783
    3. ' return' → logprob: -4.336489677429199
    4. '       ' → logprob: -4.336489677429199
    5. 'import' → logprob: -4.586489677429199
    6. 'result' → logprob: -6.336489677429199
    7. '   ' → logprob: -6.711489677429199
    8. '
' → logprob: -7.086489677429199
    9. 'eturn' → logprob: -8.2114896774292
    10. 'r' → logprob: -8.3364896774292

Token 452: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.12743164598941803
    2. ' reduce' → logprob: -2.127431631088257
    3. '0' → logprob: -7.752431869506836
    4. ' ' → logprob: -10.002431869506836
    5. '   ' → logprob: -11.002431869506836
    6. 're' → logprob: -12.752431869506836
    7. ' functools' → logprob: -13.002431869506836
    8. '.reduce' → logprob: -13.252431869506836
    9. '_reduce' → logprob: -13.752431869506836
    10. ' ' → logprob: -14.252431869506836

Token 453: '(ix' (ID: 183917)
  Prédit: '(ix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ix' → logprob: -0.16348791122436523
    2. '(lambda' → logprob: -2.0384879112243652
    3. '(' → logprob: -3.9134879112243652
    4. '(operator' → logprob: -7.663487911224365
    5. '((' → logprob: -9.663488388061523
    6. '(int' → logprob: -10.038488388061523
    7. '(self' → logprob: -11.038488388061523
    8. '(i' → logprob: -11.538488388061523
    9. ' (' → logprob: -12.413488388061523
    10. ' ix' → logprob: -12.788488388061523

Token 454: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -3.128163257315464e-07
    2. 'xor' → logprob: -16.5
    3. '```' → logprob: -16.625
    4. '_or' → logprob: -17.625
    5. '(or' → logprob: -17.875
    6. '   ' → logprob: -18.125
    7. ' or' → logprob: -18.25
    8. '#' → logprob: -18.875
    9. '^' → logprob: -18.875
    10. '[' → logprob: -19.0

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.438573680294212e-06
    2. ' ,' → logprob: -12.750005722045898
    3. ',self' → logprob: -13.125005722045898
    4. 'self' → logprob: -14.750005722045898
    5. '_,' → logprob: -16.6250057220459
    6. '0' → logprob: -17.0000057220459
    7. '1' → logprob: -17.3750057220459
    8. '   ' → logprob: -18.2500057220459
    9. ',int' → logprob: -18.6250057220459
    10. ',
' → logprob: -18.6250057220459

Token 456: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008620958775281906
    2. ' self' → logprob: -4.758620738983154
    3. '(self' → logprob: -12.258621215820312
    4. '[self' → logprob: -13.883621215820312
    5. '       ' → logprob: -14.633621215820312
    6. '           ' → logprob: -16.008621215820312
    7. '	self' → logprob: -16.133621215820312
    8. '   ' → logprob: -17.133621215820312
    9. '[' → logprob: -17.883621215820312
    10. ')' → logprob: -18.133621215820312

Token 457: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.0280383548888494e-06
    2. ').' → logprob: -14.750000953674316
    3. ' .' → logprob: -14.750000953674316
    4. '.' → logprob: -16.125001907348633
    5. 'p' → logprob: -17.500001907348633
    6. '}.' → logprob: -18.625001907348633
    7. '`.' → logprob: -18.625001907348633
    8. ',p' → logprob: -19.125001907348633
    9. '```' → logprob: -19.250001907348633
    10. '.п' → logprob: -19.250001907348633

Token 458: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.004283653572201729
    2. 'ile' → logprob: -6.254283428192139
    3. 'self' → logprob: -6.254283428192139
    4. '.p' → logprob: -8.254283905029297
    5. 'p' → logprob: -10.254283905029297
    6. '[' → logprob: -10.629283905029297
    7. '.s' → logprob: -10.879283905029297
    8. '[self' → logprob: -11.004283905029297
    9. '.' → logprob: -11.504283905029297
    10. ')' → logprob: -11.754283905029297

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009808151982724667
    2. ')' → logprob: -4.63480806350708
    3. ' ,' → logprob: -10.009808540344238
    4. ' )' → logprob: -13.134808540344238
    5. ' if' → logprob: -13.134808540344238
    6. ' or' → logprob: -13.259808540344238
    7. '   ' → logprob: -14.259808540344238
    8. '       ' → logprob: -14.634808540344238
    9. 'if' → logprob: -15.759808540344238
    10. ' ' → logprob: -16.634807586669922

Token 460: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.125017166137695
    4. '       ' → logprob: -19.000017166137695
    5. '           ' → logprob: -19.125017166137695
    6. ')' → logprob: -19.375017166137695
    7. '۰' → logprob: -19.500017166137695
    8. ' ' → logprob: -20.000017166137695
    9. '  ' → logprob: -20.125017166137695
    10. '```' → logprob: -20.687517166137695

Token 461: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -20.375
    4. '۰' → logprob: -20.75
    5. '00' → logprob: -22.25
    6. '０' → logprob: -22.5
    7. ')' → logprob: -22.5
    8. '```' → logprob: -22.75
    9. '  ' → logprob: -23.125
    10. '           ' → logprob: -23.375

Token 462: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.62500286102295
    4. '<|end|>' → logprob: -14.62500286102295
    5. ')return' → logprob: -16.125003814697266
    6. '       ' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.750003814697266
    8. ')#' → logprob: -17.625003814697266
    9. ')

' → logprob: -18.125003814697266
    10. '}' → logprob: -19.000003814697266

Token 463: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 464: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00017553119687363505
    2. '   ' → logprob: -8.875175476074219
    3. ' def' → logprob: -10.250175476074219
    4. '	def' → logprob: -15.375175476074219
    5. '
' → logprob: -17.25017547607422
    6. ' ' → logprob: -18.00017547607422
    7. '<|end|>' → logprob: -18.00017547607422
    8. '    
' → logprob: -18.12517547607422
    9. '  ' → logprob: -18.62517547607422
    10. '#' → logprob: -19.00017547607422

Token 465: ' optimal' (ID: 24174)
  Prédit: ' play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' play' → logprob: -0.9984164834022522
    2. ' step' → logprob: -1.4984164237976074
    3. ' can' → logprob: -1.7484164237976074
    4. 'can' → logprob: -3.1234164237976074
    5. 'step' → logprob: -3.6234164237976074
    6. ' winning' → logprob: -3.7484164237976074
    7. 'play' → logprob: -3.8734164237976074
    8. ' make' → logprob: -3.9984164237976074
    9. ' optimal' → logprob: -4.123416423797607
    10. ' is' → logprob: -4.373416423797607

Token 466: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -5.2762428822461516e-05
    2. '_moves' → logprob: -10.750052452087402
    3. '_' → logprob: -11.250052452087402
    4. '_remove' → logprob: -12.000052452087402
    5. '_play' → logprob: -12.500052452087402
    6. '_step' → logprob: -13.250052452087402
    7. '_strategy' → logprob: -13.500052452087402
    8. '_next' → logprob: -13.875052452087402
    9. '_response' → logprob: -14.375052452087402
    10. 'move' → logprob: -14.375052452087402

Token 467: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.273621405242011e-05
    2. '(' → logprob: -10.500032424926758
    3. ' (' → logprob: -12.375032424926758
    4. 'self' → logprob: -14.250032424926758
    5. '(
' → logprob: -16.500032424926758
    6. '   ' → logprob: -17.250032424926758
    7. '(s' → logprob: -17.375032424926758
    8. '()' → logprob: -17.500032424926758
    9. '_(' → logprob: -17.500032424926758
    10. 'def' → logprob: -18.125032424926758

Token 468: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08881032466888428
    2. 'self' → logprob: -2.588810443878174
    3. '(self' → logprob: -4.838810443878174
    4. '):
' → logprob: -7.088810443878174
    5. '):' → logprob: -7.463810443878174
    6. ',' → logprob: -8.088809967041016
    7. '   ' → logprob: -8.713809967041016
    8. ' self' → logprob: -10.838809967041016
    9. ' )' → logprob: -11.713809967041016
    10. '       ' → logprob: -11.713809967041016

Token 469: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002823120157700032
    2. '(' → logprob: -8.375282287597656
    3. 'self' → logprob: -10.000282287597656
    4. ' (' → logprob: -12.625282287597656
    5. 'def' → logprob: -14.250282287597656
    6. '   ' → logprob: -14.375282287597656
    7. '(
' → logprob: -14.500282287597656
    8. ':' → logprob: -14.875282287597656
    9. '       ' → logprob: -15.250282287597656
    10. ' self' → logprob: -15.250282287597656

Token 470: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.005257833749055862
    2. ' Optional' → logprob: -5.255257606506348
    3. 'Tuple' → logprob: -11.255257606506348
    4. 'None' → logprob: -12.630257606506348
    5. 'List' → logprob: -12.880257606506348
    6. 'int' → logprob: -13.130257606506348
    7. '(Optional' → logprob: -13.255257606506348
    8. 'optional' → logprob: -14.255257606506348
    9. '	Optional' → logprob: -14.630257606506348
    10. ' Tuple' → logprob: -15.630257606506348

Token 471: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.023262716829776764
    2. '[' → logprob: -3.7732627391815186
    3. 'int' → logprob: -11.648262977600098
    4. '[List' → logprob: -11.898262977600098
    5. '(Optional' → logprob: -14.648262977600098
    6. '(int' → logprob: -14.648262977600098
    7. 'Optional' → logprob: -15.023262977600098
    8. '[
' → logprob: -15.898262977600098
    9. '[Int' → logprob: -15.898262977600098
    10. '[str' → logprob: -17.14826202392578

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001872094871941954
    2. ',int' → logprob: -8.625186920166016
    3. 'int' → logprob: -12.125186920166016
    4. ' ,' → logprob: -13.750186920166016
    5. '[int' → logprob: -13.875186920166016
    6. ']int' → logprob: -17.250186920166016
    7. ',bool' → logprob: -17.625186920166016
    8. 'import' → logprob: -17.625186920166016
    9. ',float' → logprob: -17.750186920166016
    10. ',List' → logprob: -18.125186920166016

Token 473: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.315936429426074e-05
    2. ' int' → logprob: -9.625082969665527
    3. 'List' → logprob: -11.750082969665527
    4. 'Optional' → logprob: -11.875082969665527
    5. '[int' → logprob: -13.750082969665527
    6. '...' → logprob: -14.500082969665527
    7. '   ' → logprob: -15.375082969665527
    8. '
' → logprob: -16.625083923339844
    9. '(int' → logprob: -16.750083923339844
    10. ' ' → logprob: -16.875083923339844

Token 474: ']:
' (ID: 22152)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009588662651367486
    2. ']:' → logprob: -7.1259589195251465
    3. ']' → logprob: -8.875958442687988
    4. ',int' → logprob: -11.625958442687988
    5. ']:
' → logprob: -13.000958442687988
    6. ']:
' → logprob: -13.875958442687988
    7. '):' → logprob: -14.250958442687988
    8. ' ,' → logprob: -14.500958442687988
    9. '[int' → logprob: -14.500958442687988
    10. '   ' → logprob: -15.625958442687988

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004882152716163546
    2. ' for' → logprob: -7.87548828125
    3. '#' → logprob: -10.50048828125
    4. 'for' → logprob: -10.50048828125
    5. 'n' → logprob: -11.25048828125
    6. ':' → logprob: -12.00048828125
    7. ' #' → logprob: -12.00048828125
    8. '
' → logprob: -12.25048828125
    9. '   ' → logprob: -12.37548828125
    10. '        
' → logprob: -12.50048828125

Token 476: ' """
' (ID: 7037)
  Prédit: 'nim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nim' → logprob: -0.7038830518722534
    2. 'xor' → logprob: -1.8288830518722534
    3. '       ' → logprob: -2.453883171081543
    4. 'for' → logprob: -2.578883171081543
    5. 'n' → logprob: -2.703883171081543
    6. ' nim' → logprob: -3.078883171081543
    7. '   ' → logprob: -3.453883171081543
    8. ' for' → logprob: -3.953883171081543
    9. ' xor' → logprob: -4.578883171081543
    10. ' n' → logprob: -6.203883171081543

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1458277702331543
    2. 'n' → logprob: -2.7708277702331543
    3. 'nim' → logprob: -3.1458277702331543
    4. 'xor' → logprob: -4.145827770233154
    5. 'current' → logprob: -5.770827770233154
    6. 'for' → logprob: -5.895827770233154
    7. '   ' → logprob: -6.145827770233154
    8. 'x' → logprob: -6.395827770233154
    9. ' nim' → logprob: -6.895827770233154
    10. ' n' → logprob: -7.395827770233154

Token 478: ' Returns' (ID: 9609)
  Prédit: 'nim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nim' → logprob: -0.2646472156047821
    2. 'n' → logprob: -2.7646472454071045
    3. 'xor' → logprob: -2.7646472454071045
    4. 'target' → logprob: -3.0146472454071045
    5. 'for' → logprob: -3.6396472454071045
    6. '#' → logprob: -4.264647006988525
    7. 'total' → logprob: -5.389647006988525
    8. ' nim' → logprob: -6.139647006988525
    9. '   ' → logprob: -6.264647006988525
    10. 'current' → logprob: -6.764647006988525

Token 479: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22643382847309113
    2. ' the' → logprob: -3.226433753967285
    3. ' index' → logprob: -3.226433753967285
    4. 'index' → logprob: -3.476433753967285
    5. '(int' → logprob: -3.726433753967285
    6. ' next' → logprob: -4.226433753967285
    7. ' pile' → logprob: -4.726433753967285
    8. 'pile' → logprob: -4.726433753967285
    9. '(Optional' → logprob: -4.851433753967285
    10. ' a' → logprob: -4.976433753967285

Token 480: 'pile' (ID: 112229)
  Prédit: 'pile'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.01988416351377964
    2. 'index' → logprob: -4.01988410949707
    3. 'idx' → logprob: -6.39488410949707
    4. ' pile' → logprob: -9.89488410949707
    5. 'heap' → logprob: -12.51988410949707
    6. ' index' → logprob: -12.89488410949707
    7. 'p' → logprob: -13.26988410949707
    8. 'int' → logprob: -13.89488410949707
    9. ')' → logprob: -14.26988410949707
    10. 'move' → logprob: -14.39488410949707

Token 481: ' index' (ID: 3472)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0004931025905534625
    2. '_idx' → logprob: -7.750493049621582
    3. 'index' → logprob: -10.125493049621582
    4. '_id' → logprob: -11.250493049621582
    5. ' index' → logprob: -12.125493049621582
    6. ',' → logprob: -12.875493049621582
    7. 'Index' → logprob: -13.750493049621582
    8. '_' → logprob: -16.2504940032959
    9. 'idx' → logprob: -16.3754940032959
    10. '_,' → logprob: -16.7504940032959

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -12.875003814697266
    3. ',
' → logprob: -14.625003814697266
    4. ')' → logprob: -14.625003814697266
    5. '),' → logprob: -17.000003814697266
    6. ',int' → logprob: -17.250003814697266
    7. '<|end|>' → logprob: -17.750003814697266
    8. ',index' → logprob: -18.625003814697266
    9. '       ' → logprob: -18.750003814697266
    10. '‌,' → logprob: -18.875003814697266

Token 483: ' amount' (ID: 4527)
  Prédit: ' amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' amount' → logprob: -1.266455888748169
    2. 'new' → logprob: -1.516455888748169
    3. 'amount' → logprob: -1.766455888748169
    4. ' new' → logprob: -1.891455888748169
    5. 'remove' → logprob: -2.141455888748169
    6. ' remove' → logprob: -4.76645565032959
    7. 'move' → logprob: -4.89145565032959
    8. 'target' → logprob: -4.89145565032959
    9. 'reduce' → logprob: -4.89145565032959
    10. ' stones' → logprob: -5.01645565032959

Token 484: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38453906774520874
    2. '_to' → logprob: -1.5095391273498535
    3. ' to' → logprob: -2.5095391273498535
    4. 'to' → logprob: -4.1345391273498535
    5. ' )' → logprob: -7.8845391273498535
    6. ')
' → logprob: -8.259538650512695
    7. '<|end|>' → logprob: -9.509538650512695
    8. 'To' → logprob: -10.009538650512695
    9. '   ' → logprob: -10.634538650512695
    10. ' ' → logprob: -10.884538650512695

Token 485: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.009059689939022064
    2. ' remove' → logprob: -4.759059906005859
    3. 'reduce' → logprob: -8.13405990600586
    4. 'subtract' → logprob: -9.13405990600586
    5. 'take' → logprob: -10.25905990600586
    6. ' subtract' → logprob: -12.50905990600586
    7. ' reduce' → logprob: -13.00905990600586
    8. ' take' → logprob: -13.13405990600586
    9. 'cut' → logprob: -15.13405990600586
    10. '_remove' → logprob: -15.38405990600586

Token 486: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.968934758333489e-05
    2. ')
' → logprob: -9.625069618225098
    3. ' )' → logprob: -13.375069618225098
    4. '       ' → logprob: -13.750069618225098
    5. '   ' → logprob: -15.625069618225098
    6. '):' → logprob: -15.750069618225098
    7. ')

' → logprob: -15.875069618225098
    8. '),' → logprob: -15.875069618225098
    9. ')`' → logprob: -15.875069618225098
    10. ').' → logprob: -16.000070571899414

Token 487: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9563236236572266
    2. ':' → logprob: -1.3313236236572266
    3. '
' → logprob: -1.3313236236572266
    4. ':
' → logprob: -2.7063236236572266
    5. '        
' → logprob: -4.206323623657227
    6. '):
' → logprob: -6.831323623657227
    7. '\n' → logprob: -7.081323623657227
    8. ')' → logprob: -7.081323623657227
    9. '  
' → logprob: -7.206323623657227
    10. '):' → logprob: -7.956323623657227

Token 488: ' is' (ID: 382)
  Prédit: ' maxim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maxim' → logprob: -0.5692554116249084
    2. ' guarantees' → logprob: -2.3192553520202637
    3. ' will' → logprob: -2.5692553520202637
    4. ' ensures' → logprob: -2.8192553520202637
    5. ' leads' → logprob: -3.0692553520202637
    6. ' achieves' → logprob: -3.3192553520202637
    7. ' optim' → logprob: -3.5692553520202637
    8. ' minimizes' → logprob: -3.8192553520202637
    9. ' makes' → logprob: -4.194255352020264
    10. ' maximize' → logprob: -4.569255352020264

Token 489: ' optimal' (ID: 24174)
  Prédit: 'optimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimal' → logprob: -0.5082995295524597
    2. ' optimal' → logprob: -1.0082995891571045
    3. ' best' → logprob: -5.258299350738525
    4. ' winning' → logprob: -5.383299350738525
    5. 'best' → logprob: -5.633299350738525
    6. ' guaranteed' → logprob: -5.758299350738525
    7. ' not' → logprob: -5.758299350738525
    8. ' the' → logprob: -6.133299350738525
    9. 'winning' → logprob: -6.133299350738525
    10. '>' → logprob: -6.383299350738525

Token 490: ',' (ID: 11)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7171614766120911
    2. '       ' → logprob: -0.9671614766120911
    3. ' for' → logprob: -2.3421614170074463
    4. '.' → logprob: -4.342161655426025
    5. ':' → logprob: -4.717161655426025
    6. '   ' → logprob: -4.967161655426025
    7. ',' → logprob: -6.592161655426025
    8. ' if' → logprob: -6.717161655426025
    9. ' in' → logprob: -6.967161655426025
    10. '
' → logprob: -7.217161655426025

Token 491: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.42360591888427734
    2. '       ' → logprob: -1.2986059188842773
    3. ' if' → logprob: -3.2986059188842773
    4. 'or' → logprob: -3.9236059188842773
    5. 'if' → logprob: -5.298605918884277
    6. '
' → logprob: -5.298605918884277
    7. ' assuming' → logprob: -6.923605918884277
    8. 'None' → logprob: -7.173605918884277
    9. ' None' → logprob: -7.423605918884277
    10. ' based' → logprob: -7.423605918884277

Token 492: ' (-' (ID: 21382)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12796947360038757
    2. ' None' → logprob: -2.12796950340271
    3. '(None' → logprob: -7.252969264984131
    4. '(' → logprob: -8.627969741821289
    5. ' (' → logprob: -9.377969741821289
    6. '   ' → logprob: -10.252969741821289
    7. 'Optional' → logprob: -10.877969741821289
    8. '(-' → logprob: -12.002969741821289
    9. '()' → logprob: -12.627969741821289
    10. ' (-' → logprob: -13.252969741821289

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.625
    3. '   ' → logprob: -19.125
    4. '
' → logprob: -19.125
    5. '

' → logprob: -19.375
    6. ')' → logprob: -20.25
    7. '１' → logprob: -20.5
    8. '```' → logprob: -21.125
    9. '۱' → logprob: -21.5
    10. ' -' → logprob: -21.5

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001576506474521011
    2. ',-' → logprob: -9.500157356262207
    3. '1' → logprob: -9.625157356262207
    4. ')' → logprob: -11.625157356262207
    5. ' ,' → logprob: -12.375157356262207
    6. ',
' → logprob: -13.375157356262207
    7. '<|end|>' → logprob: -14.000157356262207
    8. '```' → logprob: -14.625157356262207
    9. ',None' → logprob: -15.000157356262207
    10. '-' → logprob: -16.125158309936523

Token 495: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0058274720795452595
    2. ' -' → logprob: -5.6308274269104
    3. '0' → logprob: -6.1308274269104
    4. ' ' → logprob: -10.255827903747559
    5. '1' → logprob: -11.255827903747559
    6. ')' → logprob: -13.255827903747559
    7. '
' → logprob: -16.505826950073242
    8. '```' → logprob: -16.880826950073242
    9. '   ' → logprob: -17.380826950073242
    10. '(-' → logprob: -17.505826950073242

Token 496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -19.375
    5. '-' → logprob: -19.625
    6. '१' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '１' → logprob: -21.5
    9. '``' → logprob: -21.5
    10. ' -' → logprob: -21.625

Token 497: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.875003814697266
    3. ').' → logprob: -14.750003814697266
    4. '<|end|>' → logprob: -16.125003814697266
    5. ' )' → logprob: -16.500003814697266
    6. '),' → logprob: -16.875003814697266
    7. '):' → logprob: -17.250003814697266
    8. ')`' → logprob: -17.875003814697266
    9. ')

' → logprob: -17.875003814697266
    10. ' if' → logprob: -18.125003814697266

Token 498: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1569291055202484
    2. '       ' → logprob: -2.0319290161132812
    3. ' to' → logprob: -4.906929016113281
    4. ' for' → logprob: -5.781929016113281
    5. ',' → logprob: -7.156929016113281
    6. 'if' → logprob: -7.406929016113281
    7. ' in' → logprob: -7.531929016113281
    8. ' when' → logprob: -7.656929016113281
    9. ')' → logprob: -7.781929016113281
    10. '<|end|>' → logprob: -8.031929016113281

Token 499: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.160866379737854
    2. ' self' → logprob: -2.7858662605285645
    3. 'self' → logprob: -2.9108662605285645
    4. 'no' → logprob: -4.0358662605285645
    5. ' not' → logprob: -4.6608662605285645
    6. ' all' → logprob: -6.1608662605285645
    7. 'not' → logprob: -6.9108662605285645
    8. ' impossible' → logprob: -7.9108662605285645
    9. ' there' → logprob: -8.035866737365723
    10. 'True' → logprob: -8.410866737365723

Token 500: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.5819873213768005
    2. ' valid' → logprob: -1.5819873809814453
    3. ' optimal' → logprob: -2.3319873809814453
    4. ' moves' → logprob: -2.8319873809814453
    5. 'optimal' → logprob: -3.3319873809814453
    6. 'move' → logprob: -3.9569873809814453
    7. 'moves' → logprob: -4.331987380981445
    8. ' winning' → logprob: -5.581987380981445
    9. 'valid' → logprob: -6.081987380981445
    10. ' possible' → logprob: -6.081987380981445

Token 501: '.
' (ID: 558)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.45052632689476013
    2. ' possible' → logprob: -1.7005263566970825
    3. 'possible' → logprob: -2.325526237487793
    4. ' available' → logprob: -3.575526237487793
    5. 'is' → logprob: -3.950526237487793
    6. '_possible' → logprob: -4.075526237487793
    7. 'available' → logprob: -4.200526237487793
    8. ' can' → logprob: -7.075526237487793
    9. '```' → logprob: -7.450526237487793
    10. '.' → logprob: -7.825526237487793

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024518413469195366
    2. '
' → logprob: -3.7745184898376465
    3. '        
' → logprob: -7.1495184898376465
    4. '<|end|>' → logprob: -8.399518013000488
    5. '  
' → logprob: -9.024518013000488
    6. '```' → logprob: -10.524518013000488
    7. '    
' → logprob: -10.774518013000488
    8. '\n' → logprob: -10.774518013000488
    9. ' 
' → logprob: -11.149518013000488
    10. '   ' → logprob: -11.274518013000488

Token 503: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005355432629585266
    2. '
' → logprob: -5.380355358123779
    3. '        
' → logprob: -8.255355834960938
    4. ')' → logprob: -9.255355834960938
    5. '```' → logprob: -9.255355834960938
    6. '  
' → logprob: -9.880355834960938
    7. ' for' → logprob: -10.005355834960938
    8. 'n' → logprob: -10.380355834960938
    9. ' 
' → logprob: -10.880355834960938
    10. '   ' → logprob: -10.880355834960938

Token 504: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027163133025169373
    2. 'n' → logprob: -3.902163028717041
    3. ' n' → logprob: -6.277163028717041
    4. ' if' → logprob: -6.902163028717041
    5. ' xor' → logprob: -7.277163028717041
    6. ' for' → logprob: -7.652163028717041
    7. 'xor' → logprob: -7.652163028717041
    8. ' current' → logprob: -7.902163028717041
    9. 'x' → logprob: -8.4021635055542
    10. ' x' → logprob: -8.5271635055542

Token 505: ' xor' (ID: 106402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0943586826324463
    2. 'n' → logprob: -1.3443586826324463
    3. 'xor' (adapté à ' xor') → logprob: -1.7193586826324463
    4. 'nim' → logprob: -1.8443586826324463
    5. '   ' → logprob: -3.0943586826324463
    6. 'target' → logprob: -4.969358444213867
    7. 'total' → logprob: -5.094358444213867
    8. 'x' → logprob: -6.094358444213867
    9. 'for' → logprob: -6.219358444213867
    10. ' nim' → logprob: -6.594358444213867

Token 506: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47776153683662415
    2. '_sum' → logprob: -1.4777615070343018
    3. '=' → logprob: -2.4777615070343018
    4. '_' → logprob: -3.3527615070343018
    5. 's' → logprob: -4.352761745452881
    6. '_val' → logprob: -4.602761745452881
    7. 'sum' → logprob: -5.102761745452881
    8. '_s' → logprob: -6.727761745452881
    9. '_value' → logprob: -6.977761745452881
    10. '_total' → logprob: -7.352761745452881

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023250950500369072
    2. '=' → logprob: -3.7732510566711426
    3. '       ' → logprob: -12.273250579833984
    4. ')' → logprob: -15.648250579833984
    5. ',' → logprob: -15.648250579833984
    6. '   ' → logprob: -15.898250579833984
    7. ' ' → logprob: -16.148250579833984
    8. '        ' → logprob: -16.898250579833984
    9. '_' → logprob: -17.523250579833984
    10. ' ' → logprob: -17.523250579833984

Token 508: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023287750780582428
    2. ' self' → logprob: -3.773287773132324
    3. '0' → logprob: -10.273287773132324
    4. '       ' → logprob: -12.023287773132324
    5. ' ' → logprob: -14.148287773132324
    6. '(self' → logprob: -14.648287773132324
    7. '   ' → logprob: -14.898287773132324
    8. '[self' → logprob: -16.023286819458008
    9. '	self' → logprob: -16.398286819458008
    10. '=self' → logprob: -17.398286819458008

Token 509: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.006721876095980406
    2. 'nim' → logprob: -5.0067219734191895
    3. ' nim' → logprob: -13.756721496582031
    4. 'n' → logprob: -14.006721496582031
    5. '.' → logprob: -14.506721496582031
    6. '```' → logprob: -14.506721496582031
    7. '<n' → logprob: -14.631721496582031
    8. '	n' → logprob: -15.381721496582031
    9. '(n' → logprob: -15.506721496582031
    10. '**' → logprob: -15.506721496582031

Token 510: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.006982237100601196
    2. '_sum' → logprob: -5.131982326507568
    3. 'import' → logprob: -8.00698184967041
    4. 'sum' → logprob: -8.13198184967041
    5. 'um' → logprob: -8.63198184967041
    6. 'nim' → logprob: -9.50698184967041
    7. 'p' → logprob: -10.38198184967041
    8. '_s' → logprob: -10.50698184967041
    9. '_' → logprob: -10.75698184967041
    10. 'ims' → logprob: -10.75698184967041

Token 511: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00047475993051193655
    2. '_' → logprob: -7.75047492980957
    3. '_s' → logprob: -10.12547492980957
    4. 'sum' → logprob: -12.87547492980957
    5. ' _' → logprob: -14.75047492980957
    6. 's' → logprob: -15.25047492980957
    7. ')_' → logprob: -16.00047492980957
    8. '__' → logprob: -16.37547492980957
    9. '_
' → logprob: -16.37547492980957
    10. '```' → logprob: -16.37547492980957

Token 512: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01468450203537941
    2. '       ' → logprob: -4.264684677124023
    3. '        
' → logprob: -9.014684677124023
    4. ')
' → logprob: -9.139684677124023
    5. '
' → logprob: -9.514684677124023
    6. '<|end|>' → logprob: -9.639684677124023
    7. ')' → logprob: -10.264684677124023
    8. '()
' → logprob: -10.764684677124023
    9. '  
' → logprob: -10.764684677124023
    10. ' 
' → logprob: -11.014684677124023

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017847048118710518
    2. '
' → logprob: -4.142847061157227
    3. ' if' → logprob: -6.767847061157227
    4. '        
' → logprob: -8.767847061157227
    5. '<|end|>' → logprob: -9.392847061157227
    6. 'if' → logprob: -9.767847061157227
    7. ':' → logprob: -9.892847061157227
    8. '0' → logprob: -9.892847061157227
    9. ',' → logprob: -10.017847061157227
    10. '\n' → logprob: -10.517847061157227

Token 514: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3747066855430603
    2. 'for' → logprob: -1.374706745147705
    3. ' if' → logprob: -3.249706745147705
    4. ' for' → logprob: -4.124706745147705
    5. '       ' → logprob: -5.374706745147705
    6. '   ' → logprob: -11.999706268310547
    7. 'n' → logprob: -13.874706268310547
    8. ' ' → logprob: -14.124706268310547
    9. '	if' → logprob: -15.249706268310547
    10. '        
' → logprob: -15.249706268310547

Token 515: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -0.007607339881360531
    2. ' xor' → logprob: -4.882607460021973
    3. 'x' → logprob: -14.757607460021973
    4. 'not' → logprob: -15.382607460021973
    5. '   ' → logprob: -15.757607460021973
    6. ' not' → logprob: -15.882607460021973
    7. ' ' → logprob: -16.257606506347656
    8. 'self' → logprob: -16.382606506347656
    9. '  ' → logprob: -17.132606506347656
    10. 'xref' → logprob: -18.132606506347656

Token 516: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.988221684878226e-06
    2. 'sum' → logprob: -12.625006675720215
    3. '==' → logprob: -13.125006675720215
    4. '_' → logprob: -13.750006675720215
    5. '=' → logprob: -15.125006675720215
    6. '_s' → logprob: -16.50000762939453
    7. 's' → logprob: -16.87500762939453
    8. ' ==' → logprob: -17.37500762939453
    9. '_SUM' → logprob: -18.00000762939453
    10. '__' → logprob: -18.75000762939453

Token 517: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10020763427019119
    2. '==' → logprob: -2.350207567214966
    3. '=' → logprob: -14.975207328796387
    4. ')==' → logprob: -15.350207328796387
    5. ' ' → logprob: -15.600207328796387
    6. ')' → logprob: -16.100208282470703
    7. '0' → logprob: -16.100208282470703
    8. '()==' → logprob: -17.475208282470703
    9. ']==' → logprob: -17.725208282470703
    10. ' =' → logprob: -17.725208282470703

Token 518: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004311460361350328
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.000431060791016
    4. '       ' → logprob: -16.125431060791016
    5. '  ' → logprob: -18.375431060791016
    6. '           ' → logprob: -18.375431060791016
    7. '۰' → logprob: -19.375431060791016
    8. '     ' → logprob: -19.625431060791016
    9. '    ' → logprob: -20.125431060791016
    10. '```' → logprob: -20.375431060791016

Token 519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.750035285949707
    4. '۰' → logprob: -17.687536239624023
    5. '```' → logprob: -18.000036239624023
    6. '       ' → logprob: -18.187536239624023
    7. '00' → logprob: -18.812536239624023
    8. '  ' → logprob: -18.937536239624023
    9. '`' → logprob: -19.000036239624023
    10. '000' → logprob: -19.187536239624023

Token 520: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2016773223876953
    2. ':
' → logprob: -1.7016773223876953
    3. ':return' → logprob: -8.451677322387695
    4. ' or' → logprob: -10.826677322387695
    5. '           ' → logprob: -11.201677322387695
    6. '       ' → logprob: -11.826677322387695
    7. '):
' → logprob: -12.451677322387695
    8. ':
' → logprob: -13.451677322387695
    9. ',' → logprob: -13.451677322387695
    10. ' and' → logprob: -14.201677322387695

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011813003802672029
    2. 'return' → logprob: -7.501181125640869
    3. ' return' → logprob: -7.626181125640869
    4. '
' → logprob: -9.376181602478027
    5. '       ' → logprob: -10.501181602478027
    6. '   ' → logprob: -11.501181602478027
    7. '		' → logprob: -11.876181602478027
    8. '	       ' → logprob: -12.626181602478027
    9. '	return' → logprob: -13.001181602478027
    10. '               ' → logprob: -13.376181602478027

Token 522: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011228896677494049
    2. ' return' → logprob: -4.761229038238525
    3. '           ' → logprob: -6.011229038238525
    4. '       ' → logprob: -8.886228561401367
    5. '	return' → logprob: -11.136228561401367
    6. '   ' → logprob: -12.136228561401367
    7. '
' → logprob: -14.636228561401367
    8. ' ' → logprob: -15.011228561401367
    9. '		' → logprob: -15.136228561401367
    10. '	       ' → logprob: -16.011228561401367

Token 523: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.001935065840370953
    2. '-' → logprob: -6.251935005187988
    3. ' -' → logprob: -12.376935005187988
    4. ' (-' → logprob: -13.126935005187988
    5. '   ' → logprob: -15.251935005187988
    6. '(' → logprob: -18.376935958862305
    7. '[-' → logprob: -20.126935958862305
    8. '       ' → logprob: -20.626935958862305
    9. '  ' → logprob: -21.001935958862305
    10. '{-' → logprob: -21.126935958862305

Token 524: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -19.5625
    5. '0' → logprob: -19.9375
    6. '
' → logprob: -20.25
    7. '۱' → logprob: -20.3125
    8. '１' → logprob: -20.3125
    9. '১' → logprob: -20.5625
    10. '१' → logprob: -20.75

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ' ,' → logprob: -12.125007629394531
    3. ',-' → logprob: -13.375007629394531
    4. ',
' → logprob: -15.375007629394531
    5. ',None' → logprob: -18.25000762939453
    6. '<|end|>' → logprob: -18.50000762939453
    7. '   ' → logprob: -18.87500762939453
    8. '‌,' → logprob: -19.00000762939453
    9. ',user' → logprob: -19.75000762939453
    10. '-' → logprob: -19.87500762939453

Token 526: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00861456897109747
    2. ' -' → logprob: -4.758614540100098
    3. '(-' → logprob: -17.883615493774414
    4. ' ' → logprob: -18.758615493774414
    5. '   ' → logprob: -20.008615493774414
    6. '	' → logprob: -20.258615493774414
    7. '–' → logprob: -21.008615493774414
    8. '```' → logprob: -21.133615493774414
    9. ')' → logprob: -21.258615493774414
    10. '  ' → logprob: -21.383615493774414

Token 527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -17.9375
    4. 'int' → logprob: -18.25
    5. ')' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. '-' → logprob: -18.75
    8. '
' → logprob: -19.125
    9. '0' → logprob: -19.3125
    10. '

' → logprob: -19.5

Token 528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017529279284644872
    2. ')
' → logprob: -8.750175476074219
    3. '       ' → logprob: -11.000175476074219
    4. '),' → logprob: -17.12517547607422
    5. ')

' → logprob: -17.25017547607422
    6. ')return' → logprob: -17.37517547607422
    7. ' )' → logprob: -17.50017547607422
    8. '   ' → logprob: -17.87517547607422
    9. ',' → logprob: -17.87517547607422
    10. ')\
' → logprob: -17.87517547607422

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1912992000579834
    2. '
' → logprob: -1.8162992000579834
    3. '        
' → logprob: -4.5662994384765625
    4. '  
' → logprob: -7.4412994384765625
    5. '    
' → logprob: -9.066299438476562
    6. ' for' → logprob: -9.191299438476562
    7. 'for' → logprob: -9.316299438476562
    8. '
' → logprob: -10.191299438476562
    9. '       
' → logprob: -10.441299438476562
    10. ' 
' → logprob: -10.566299438476562

Token 530: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.27472883462905884
    2. '       ' → logprob: -1.774728775024414
    3. ' for' → logprob: -2.649728775024414
    4. '   ' → logprob: -11.524728775024414
    5. '	for' → logprob: -11.649728775024414
    6. '        
' → logprob: -13.774728775024414
    7. '
' → logprob: -14.024728775024414
    8. '```' → logprob: -14.649728775024414
    9. '           ' → logprob: -15.274728775024414
    10. '#' → logprob: -15.649728775024414

Token 531: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6944314241409302
    2. ' i' → logprob: -0.6944314241409302
    3. ' idx' → logprob: -6.944431304931641
    4. 'idx' → logprob: -8.19443130493164
    5. 'index' → logprob: -10.44443130493164
    6. ' index' → logprob: -11.19443130493164
    7. '_i' → logprob: -15.69443130493164
    8. '0' → logprob: -17.19443130493164
    9. '(i' → logprob: -17.19443130493164
    10. '	i' → logprob: -17.19443130493164

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6608572602272034
    2. ' in' → logprob: -0.7858572602272034
    3. 'in' → logprob: -3.7858572006225586
    4. ' ,' → logprob: -5.285857200622559
    5. ' ' → logprob: -9.660857200622559
    6. '_' → logprob: -11.660857200622559
    7. ')' → logprob: -12.035857200622559
    8. '_,' → logprob: -12.410857200622559
    9. '  ' → logprob: -12.535857200622559
    10. ',in' → logprob: -12.660857200622559

Token 533: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.0062160128727555275
    2. ' pile' → logprob: -5.131216049194336
    3. 'p' → logprob: -8.256216049194336
    4. ' p' → logprob: -12.506216049194336
    5. 'segment' → logprob: -12.506216049194336
    6. 'val' → logprob: -12.631216049194336
    7. 'size' → logprob: -12.631216049194336
    8. ' segment' → logprob: -12.756216049194336
    9. 'count' → logprob: -13.381216049194336
    10. 'seg' → logprob: -13.631216049194336

Token 534: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013504724483937025
    2. 'in' → logprob: -7.126350402832031
    3. ' in' → logprob: -7.751350402832031
    4. ' ,' → logprob: -9.251350402832031
    5. '_,' → logprob: -12.001350402832031
    6. ',p' → logprob: -12.126350402832031
    7. ',in' → logprob: -13.251350402832031
    8. 's' → logprob: -13.376350402832031
    9. '_in' → logprob: -13.501350402832031
    10. ',_' → logprob: -13.751350402832031

Token 535: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.03804171830415726
    2. 'enumer' → logprob: -3.288041830062866
    3. ' in' → logprob: -16.788042068481445
    4. 'Enumer' → logprob: -16.913042068481445
    5. '(en' → logprob: -17.413042068481445
    6. 'self' → logprob: -18.038042068481445
    7. 'in' → logprob: -18.788042068481445
    8. '(' → logprob: -18.788042068481445
    9. ' enumer' → logprob: -18.788042068481445
    10. 'en' → logprob: -19.038042068481445

Token 536: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03811952471733093
    2. '(self' → logprob: -3.5381195545196533
    3. ' self' → logprob: -4.788119316101074
    4. ',' → logprob: -13.913119316101074
    5. '	self' → logprob: -14.038119316101074
    6. '       ' → logprob: -14.038119316101074
    7. '(' → logprob: -14.413119316101074
    8. 's' → logprob: -14.538119316101074
    9. '   ' → logprob: -14.538119316101074
    10. ')' → logprob: -15.163119316101074

Token 537: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.4849443838757e-06
    2. 'self' → logprob: -13.125004768371582
    3. ' .' → logprob: -13.375004768371582
    4. '.' → logprob: -15.125004768371582
    5. '.n' → logprob: -16.375003814697266
    6. ')' → logprob: -16.375003814697266
    7. ').' → logprob: -16.375003814697266
    8. 'p' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.125003814697266
    10. '```' → logprob: -17.250003814697266

Token 538: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -1.2352385965641588e-05
    2. 'self' → logprob: -11.625012397766113
    3. 'ile' → logprob: -13.500012397766113
    4. 'les' → logprob: -15.250012397766113
    5. 'lies' → logprob: -15.500012397766113
    6. 'ails' → logprob: -16.000011444091797
    7. 'iless' → logprob: -16.000011444091797
    8. 's' → logprob: -16.125011444091797
    9. '(self' → logprob: -16.250011444091797
    10. '`' → logprob: -16.250011444091797

Token 539: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011831194162368774
    2. '):' → logprob: -4.511831283569336
    3. ':' → logprob: -7.511831283569336
    4. ':
' → logprob: -9.136831283569336
    5. '):
' → logprob: -9.261831283569336
    6. '       ' → logprob: -10.636831283569336
    7. '():
' → logprob: -12.136831283569336
    8. '           ' → logprob: -13.511831283569336
    9. '   ' → logprob: -13.886831283569336
    10. ')' → logprob: -14.636831283569336

Token 540: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009328982559964061
    2. ' if' → logprob: -7.625932693481445
    3. ':' → logprob: -8.250932693481445
    4. ',' → logprob: -10.125932693481445
    5. ':
' → logprob: -10.625932693481445
    6. 'if' → logprob: -11.000932693481445
    7. ' for' → logprob: -11.000932693481445
    8. '          ' → logprob: -11.000932693481445
    9. '            
' → logprob: -11.625932693481445
    10. '       ' → logprob: -11.625932693481445

Token 541: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.17322395741939545
    2. ' target' → logprob: -1.9232239723205566
    3. 'desired' → logprob: -5.548223972320557
    4. '           ' → logprob: -5.673223972320557
    5. 't' → logprob: -6.423223972320557
    6. 'xor' → logprob: -6.923223972320557
    7. '   ' → logprob: -7.798223972320557
    8. ' desired' → logprob: -7.923223972320557
    9. '       ' → logprob: -8.298223495483398
    10. ' targ' → logprob: -8.298223495483398

Token 542: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04323279857635498
    2. '=' → logprob: -3.1682329177856445
    3. '_size' → logprob: -9.043232917785645
    4. '_p' → logprob: -9.543232917785645
    5. 'pile' → logprob: -10.918232917785645
    6. 'size' → logprob: -11.793232917785645
    7. '   ' → logprob: -12.793232917785645
    8. '_amount' → logprob: -12.918232917785645
    9. '=p' → logprob: -13.168232917785645
    10. '_value' → logprob: -13.543232917785645

Token 543: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.004080420359969139
    2. ' pile' → logprob: -5.504080295562744
    3. 'p' → logprob: -13.629080772399902
    4. 'xor' → logprob: -14.629080772399902
    5. '(p' → logprob: -15.754080772399902
    6. ' ' → logprob: -16.504079818725586
    7. '	p' → logprob: -17.504079818725586
    8. 'pit' → logprob: -17.754079818725586
    9. 'PILE' → logprob: -17.754079818725586
    10. '   ' → logprob: -17.879079818725586

Token 544: ' ^' (ID: 7602)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.42900702357292175
    2. ' ^' → logprob: -1.0540070533752441
    3. '^(' → logprob: -8.429006576538086
    4. '^{' → logprob: -10.054006576538086
    5. ' ^=' → logprob: -10.804006576538086
    6. '=' → logprob: -11.179006576538086
    7. ',' → logprob: -13.554006576538086
    8. ' xor' → logprob: -13.554006576538086
    9. '^\' → logprob: -13.679006576538086
    10. ' ' → logprob: -13.679006576538086

Token 545: ' xor' (ID: 106402)
  Prédit: 'xor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xor' → logprob: -2.4391956685576588e-05
    2. ' xor' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.000024795532227
    4. '       ' → logprob: -18.125024795532227
    5. 'x' → logprob: -18.875024795532227
    6. ' ' → logprob: -19.000024795532227
    7. '           ' → logprob: -19.000024795532227
    8. '         ' → logprob: -19.250024795532227
    9. 'xref' → logprob: -19.250024795532227
    10. 'xo' → logprob: -20.125024795532227

Token 546: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0087516784551553e-05
    2. 'sum' → logprob: -12.25001049041748
    3. 'xor' → logprob: -12.25001049041748
    4. 's' → logprob: -15.87501049041748
    5. 'x' → logprob: -16.125009536743164
    6. 'i' → logprob: -16.125009536743164
    7. '_SUM' → logprob: -17.375009536743164
    8. 'Sum' → logprob: -17.375009536743164
    9. '_s' → logprob: -17.750009536743164
    10. '_x' → logprob: -18.375009536743164

Token 547: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10763206332921982
    2. '
' → logprob: -2.3576321601867676
    3. '<|end|>' → logprob: -5.357632160186768
    4. '               ' → logprob: -7.607632160186768
    5. '<|end|>' → logprob: -7.607632160186768
    6. '            
' → logprob: -7.857632160186768
    7. ' if' → logprob: -8.23263168334961
    8. '		' → logprob: -8.60763168334961
    9. ',' → logprob: -8.85763168334961
    10. '          ' → logprob: -9.48263168334961

Token 548: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009552901610732079
    2. '<|end|>' → logprob: -7.750955104827881
    3. ' if' → logprob: -8.875955581665039
    4. '               ' → logprob: -9.000955581665039
    5. '		' → logprob: -9.625955581665039
    6. ',' → logprob: -10.250955581665039
    7. '
' → logprob: -10.500955581665039
    8. '<|end|>' → logprob: -10.750955581665039
    9. ')' → logprob: -10.875955581665039
    10. ':' → logprob: -11.000955581665039

Token 549: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6064029932022095
    2. ' if' → logprob: -1.4814029932022095
    3. 'if' (adapté à ' if') → logprob: -1.4814029932022095
    4. '               ' → logprob: -11.606403350830078
    5. '<|end|>' → logprob: -11.606403350830078
    6. 'If' → logprob: -11.731403350830078
    7. ',' → logprob: -12.231403350830078
    8. '   ' → logprob: -12.731403350830078
    9. '		' → logprob: -12.856403350830078
    10. '       ' → logprob: -12.856403350830078

Token 550: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.04859452322125435
    2. ' target' → logprob: -3.0485944747924805
    3. 'pile' → logprob: -12.42359447479248
    4. '	target' → logprob: -12.92359447479248
    5. '(target' → logprob: -14.67359447479248
    6. '   ' → logprob: -16.798595428466797
    7. '[target' → logprob: -17.173595428466797
    8. ' pile' → logprob: -17.673595428466797
    9. '           ' → logprob: -17.798595428466797
    10. ' cible' → logprob: -17.923595428466797

Token 551: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1427597850561142
    2. ' <' → logprob: -2.0177597999572754
    3. '<|end|>' → logprob: -9.767759323120117
    4. '<p' → logprob: -11.517759323120117
    5. '<|end|>' → logprob: -12.642759323120117
    6. '<Player' → logprob: -13.142759323120117
    7. '[' → logprob: -13.267759323120117
    8. '<int' → logprob: -14.017759323120117
    9. '<size' → logprob: -14.017759323120117
    10. ' ' → logprob: -14.392759323120117

Token 552: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -7.553032628493384e-05
    2. ' pile' → logprob: -9.500075340270996
    3. '           ' → logprob: -14.875075340270996
    4. '       ' → logprob: -16.750076293945312
    5. 'Pile' → logprob: -16.875076293945312
    6. 'PILE' → logprob: -17.000076293945312
    7. '   ' → logprob: -17.125076293945312
    8. 'pil' → logprob: -17.875076293945312
    9. 'pit' → logprob: -18.125076293945312
    10. 'pie' → logprob: -18.250076293945312

Token 553: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6002518534660339
    2. ':' → logprob: -0.8502518534660339
    3. ' and' → logprob: -3.8502519130706787
    4. '               ' → logprob: -6.4752516746521
    5. '           ' → logprob: -7.3502516746521
    6. '):
' → logprob: -8.100252151489258
    7. '<|end|>' → logprob: -9.350252151489258
    8. ',' → logprob: -9.475252151489258
    9. ':return' → logprob: -10.725252151489258
    10. 'and' → logprob: -10.975252151489258

Token 554: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010044389637187123
    2. ' return' → logprob: -10.000100135803223
    3. '           ' → logprob: -10.375100135803223
    4. '<|end|>' → logprob: -11.750100135803223
    5. '                   ' → logprob: -12.875100135803223
    6. ',' → logprob: -12.875100135803223
    7. ' and' → logprob: -13.875100135803223
    8. '                       ' → logprob: -13.875100135803223
    9. ' (' → logprob: -14.000100135803223
    10. '       ' → logprob: -14.000100135803223

Token 555: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0862908735871315
    2. '               ' → logprob: -2.9612908363342285
    3. ' amount' → logprob: -4.2112908363342285
    4. 'return' (adapté à ' return') → logprob: -4.3362908363342285
    5. 'amount' → logprob: -6.5862908363342285
    6. '                   ' → logprob: -6.7112908363342285
    7. ' move' → logprob: -7.9612908363342285
    8. 'move' → logprob: -11.461291313171387
    9. '   ' → logprob: -11.586291313171387
    10. '                       ' → logprob: -11.836291313171387

Token 556: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.25227001309394836
    2. '(i' → logprob: -1.502269983291626
    3. ' i' → logprob: -8.127269744873047
    4. 'i' → logprob: -10.002269744873047
    5. '   ' → logprob: -16.877269744873047
    6. ' ' → logprob: -18.002269744873047
    7. '[i' → logprob: -18.127269744873047
    8. '_i' → logprob: -18.502269744873047
    9. '(' → logprob: -18.627269744873047
    10. ',i' → logprob: -18.752269744873047

Token 557: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004315036640036851
    2. ' i' → logprob: -7.750431537628174
    3. '               ' → logprob: -14.875431060791016
    4. '           ' → logprob: -15.125431060791016
    5. '   ' → logprob: -16.000431060791016
    6. ')i' → logprob: -16.875431060791016
    7. '                   ' → logprob: -17.875431060791016
    8. '	i' → logprob: -18.375431060791016
    9. ')' → logprob: -18.375431060791016
    10. '(i' → logprob: -18.625431060791016

Token 558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ' ,' → logprob: -10.625031471252441
    3. ',p' → logprob: -12.000031471252441
    4. ',
' → logprob: -14.750031471252441
    5. '           ' → logprob: -16.750030517578125
    6. '),' → logprob: -17.000030517578125
    7. 'pile' → logprob: -17.875030517578125
    8. '`,' → logprob: -18.250030517578125
    9. '       ' → logprob: -18.500030517578125
    10. '               ' → logprob: -18.625030517578125

Token 559: ' pile' (ID: 39732)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.08894579112529755
    2. ' pile' → logprob: -2.4639458656311035
    3. '(p' → logprob: -13.588945388793945
    4. 'p' → logprob: -13.838945388793945
    5. '   ' → logprob: -13.838945388793945
    6. '	p' → logprob: -13.963945388793945
    7. ' ' → logprob: -14.713945388793945
    8. '           ' → logprob: -14.713945388793945
    9. 'Pile' → logprob: -15.213945388793945
    10. '       ' → logprob: -15.588945388793945

Token 560: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25193122029304504
    2. '-' → logprob: -1.5019311904907227
    3. '-target' → logprob: -13.126931190490723
    4. ' ' → logprob: -17.12693214416504
    5. ' ' → logprob: -18.12693214416504
    6. '   ' → logprob: -18.25193214416504
    7. ')' → logprob: -18.25193214416504
    8. ',' → logprob: -18.87693214416504
    9. '−' → logprob: -19.50193214416504
    10. '-
' → logprob: -19.50193214416504

Token 561: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00033546582562848926
    2. ' target' → logprob: -8.000335693359375
    3. '(target' → logprob: -18.250335693359375
    4. '[target' → logprob: -19.375335693359375
    5. '	target' → logprob: -19.500335693359375
    6. '   ' → logprob: -19.875335693359375
    7. '           ' → logprob: -20.625335693359375
    8. ' ' → logprob: -21.125335693359375
    9. 'arget' → logprob: -21.500335693359375
    10. '               ' → logprob: -21.625335693359375

Token 562: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00038717821007594466
    2. ')
' → logprob: -7.875387191772461
    3. '<|end|>' → logprob: -12.000387191772461
    4. ')return' → logprob: -15.000387191772461
    5. ' )' → logprob: -15.500387191772461
    6. '       ' → logprob: -15.750387191772461
    7. ')

' → logprob: -16.50038719177246
    8. '),' → logprob: -16.62538719177246
    9. '')' → logprob: -17.12538719177246
    10. ')#' → logprob: -17.25038719177246

Token 563: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 564: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12548017501831055
    2. 'return' (adapté à ' return') → logprob: -2.3754801750183105
    3. '(-' → logprob: -4.2504801750183105
    4. '<|end|>' → logprob: -5.2504801750183105
    5. '   ' → logprob: -6.1254801750183105
    6. '
' → logprob: -7.0004801750183105
    7. '-' → logprob: -7.3754801750183105
    8. ' return' → logprob: -7.6254801750183105
    9. '```' → logprob: -7.8754801750183105
    10. '        
' → logprob: -8.500480651855469

Token 565: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -1.5094070477061905e-05
    2. ' (-' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.625015258789062
    4. '(' → logprob: -16.875015258789062
    5. '-' → logprob: -17.375015258789062
    6. ' ' → logprob: -19.000015258789062
    7. '       ' → logprob: -19.250015258789062
    8. '	' → logprob: -20.750015258789062
    9. '[-' → logprob: -21.000015258789062
    10. ' ' → logprob: -21.375015258789062

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.75
    3. ' ' → logprob: -17.0
    4. '```' → logprob: -17.375
    5. ' -' → logprob: -17.875
    6. '(' → logprob: -18.875
    7. '(-' → logprob: -19.0
    8. '   ' → logprob: -19.5625
    9. '`' → logprob: -19.875
    10. '0' → logprob: -19.875

Token 567: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ',-' → logprob: -12.250007629394531
    3. ' ,' → logprob: -12.750007629394531
    4. ',
' → logprob: -16.00000762939453
    5. '   ' → logprob: -17.00000762939453
    6. '1' → logprob: -18.37500762939453
    7. '-' → logprob: -18.50000762939453
    8. '       ' → logprob: -18.50000762939453
    9. '<|end|>' → logprob: -18.62500762939453
    10. ',None' → logprob: -19.00000762939453

Token 568: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0067154900170862675
    2. ' -' → logprob: -5.006715297698975
    3. '1' → logprob: -16.256715774536133
    4. '(-' → logprob: -17.381715774536133
    5. ' ' → logprob: -19.881715774536133
    6. '	' → logprob: -21.006715774536133
    7. '   ' → logprob: -21.131715774536133
    8. ' (-' → logprob: -21.631715774536133
    9. '−' → logprob: -21.631715774536133
    10. '[-' → logprob: -22.381715774536133

Token 569: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '-' → logprob: -13.625001907348633
    3. ' ' → logprob: -14.000001907348633
    4. ' -' → logprob: -16.500001907348633
    5. '   ' → logprob: -19.062501907348633
    6. '```' → logprob: -19.562501907348633
    7. '(-' → logprob: -19.687501907348633
    8. '2' → logprob: -19.875001907348633
    9. '  ' → logprob: -20.125001907348633
    10. ')' → logprob: -20.187501907348633

Token 570: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012558852904476225
    2. ')
' → logprob: -9.250125885009766
    3. '<|end|>' → logprob: -10.500125885009766
    4. ')return' → logprob: -13.750125885009766
    5. '}' → logprob: -15.500125885009766
    6. '```' → logprob: -16.000125885009766
    7. ')}' → logprob: -16.125125885009766
    8. '),' → logprob: -16.875125885009766
    9. ')#' → logprob: -17.250125885009766
    10. ' )' → logprob: -17.250125885009766

Token 571: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 572: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0706004872918129
    2. '   ' → logprob: -2.6956005096435547
    3. '#' → logprob: -7.945600509643555
    4. '<|end|>' → logprob: -8.570600509643555
    5. 'if' → logprob: -10.445600509643555
    6. ' def' → logprob: -10.570600509643555
    7. '
' → logprob: -11.195600509643555
    8. '```' → logprob: -11.570600509643555
    9. '	def' → logprob: -11.695600509643555
    10. ')' → logprob: -11.945600509643555

Token 573: ' play' (ID: 2107)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.48968592286109924
    2. ' play' → logprob: -1.8646858930587769
    3. 'step' → logprob: -2.3646860122680664
    4. ' step' → logprob: -3.3646860122680664
    5. 'apply' → logprob: -3.4896860122680664
    6. 'make' → logprob: -3.6146860122680664
    7. 'simulate' → logprob: -4.614686012268066
    8. 'can' → logprob: -4.739686012268066
    9. ' apply' → logprob: -4.864686012268066
    10. 'optimal' → logprob: -5.614686012268066

Token 574: '_turn' (ID: 89223)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.8990762233734131
    2. '_move' → logprob: -1.024076223373413
    3. '()' → logprob: -1.899076223373413
    4. '_step' → logprob: -3.274076223373413
    5. '():' → logprob: -3.899076223373413
    6. '(' → logprob: -4.399076461791992
    7. '_' → logprob: -4.774076461791992
    8. '_turn' → logprob: -6.274076461791992
    9. '_next' → logprob: -7.149076461791992
    10. '():
' → logprob: -7.274076461791992

Token 575: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.7689099018462e-05
    2. '(' → logprob: -9.37508773803711
    3. 'self' → logprob: -13.37508773803711
    4. ' (' → logprob: -14.37508773803711
    5. '   ' → logprob: -15.12508773803711
    6. '(
' → logprob: -16.37508773803711
    7. '():
' → logprob: -16.37508773803711
    8. '()' → logprob: -16.37508773803711
    9. '       ' → logprob: -16.62508773803711
    10. 'def' → logprob: -17.37508773803711

Token 576: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07495644688606262
    2. ')' → logprob: -3.4499564170837402
    3. 'self' → logprob: -3.4499564170837402
    4. '):
' → logprob: -5.44995641708374
    5. ',' → logprob: -6.19995641708374
    6. '):' → logprob: -6.94995641708374
    7. '   ' → logprob: -7.44995641708374
    8. ')(' → logprob: -7.57495641708374
    9. '       ' → logprob: -8.449956893920898
    10. ' self' → logprob: -10.199956893920898

Token 577: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039468807517550886
    2. '(' → logprob: -7.875394821166992
    3. 'self' → logprob: -11.750394821166992
    4. '(
' → logprob: -12.625394821166992
    5. '   ' → logprob: -13.500394821166992
    6. '       ' → logprob: -14.125394821166992
    7. 'def' → logprob: -15.125394821166992
    8. '():' → logprob: -15.625394821166992
    9. ':' → logprob: -15.750394821166992
    10. ' (' → logprob: -16.000394821166992

Token 578: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.6651499271392822
    2. 'None' → logprob: -1.2901499271392822
    3. 'Tuple' → logprob: -2.0401499271392822
    4. 'bool' → logprob: -3.2901499271392822
    5. ' Optional' → logprob: -4.040149688720703
    6. ' None' → logprob: -4.290149688720703
    7. ' Tuple' → logprob: -4.540149688720703
    8. ' bool' → logprob: -7.290149688720703
    9. '   ' → logprob: -7.540149688720703
    10. 'optional' → logprob: -10.165149688720703

Token 579: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '[int' → logprob: -13.750001907348633
    3. 'Tuple' → logprob: -14.500001907348633
    4. '[
' → logprob: -15.500001907348633
    5. '[str' → logprob: -17.875001907348633
    6. '<Tuple' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.250001907348633
    8. '[(' → logprob: -18.625001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '[List' → logprob: -18.750001907348633

Token 580: 'bool' (ID: 9037)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -1.9385402993066236e-05
    2. ' Tuple' → logprob: -11.250019073486328
    3. 'tuple' → logprob: -12.000019073486328
    4. 'int' → logprob: -17.000019073486328
    5. 'None' → logprob: -18.250019073486328
    6. '[' → logprob: -18.500019073486328
    7. '_tuple' → logprob: -19.125019073486328
    8. ' tuple' → logprob: -19.250019073486328
    9. '   ' → logprob: -19.500019073486328
    10. 'Tu' → logprob: -19.875019073486328

Token 581: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4733743965625763
    2. '):' → logprob: -1.598374366760254
    3. '():
' → logprob: -2.098374366760254
    4. '():' → logprob: -3.973374366760254
    5. ')' → logprob: -4.098374366760254
    6. '(self' → logprob: -5.098374366760254
    7. '   ' → logprob: -5.348374366760254
    8. '()' → logprob: -6.098374366760254
    9. '       ' → logprob: -6.598374366760254
    10. 'self' → logprob: -7.098374366760254

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007643607095815241
    2. '
' → logprob: -7.2507643699646
    3. '        
' → logprob: -10.375763893127441
    4. ' if' → logprob: -11.625763893127441
    5. '   ' → logprob: -12.750763893127441
    6. '    
' → logprob: -12.750763893127441
    7. '  
' → logprob: -13.125763893127441
    8. '#' → logprob: -13.625763893127441
    9. 'if' → logprob: -14.375763893127441
    10. '```' → logprob: -14.375763893127441

Token 583: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0840948298573494
    2. 'move' → logprob: -3.584094762802124
    3. 'if' → logprob: -3.834094762802124
    4. ' if' → logprob: -3.959094762802124
    5. 'xor' → logprob: -4.959095001220703
    6. ' move' → logprob: -5.459095001220703
    7. ' xor' → logprob: -7.459095001220703
    8. 'optimal' → logprob: -8.959095001220703
    9. 'moves' → logprob: -10.084095001220703
    10. '#' → logprob: -10.584095001220703

Token 584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49872803688049316
    2. 'if' → logprob: -0.9987280368804932
    3. ' if' → logprob: -3.748728036880493
    4. '   ' → logprob: -7.498727798461914
    5. 'self' → logprob: -8.373727798461914
    6. '	if' → logprob: -13.123727798461914
    7. '
' → logprob: -13.248727798461914
    8. ' self' → logprob: -13.248727798461914
    9. 'def' → logprob: -13.248727798461914
    10. '```' → logprob: -13.248727798461914

Token 585: ' Conduct' (ID: 70423)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.1157284751534462
    2. ' move' → logprob: -3.3657283782958984
    3. 'if' → logprob: -3.8657283782958984
    4. 'xor' → logprob: -3.8657283782958984
    5. '       ' → logprob: -4.740728378295898
    6. ' if' → logprob: -4.865728378295898
    7. '   ' → logprob: -5.115728378295898
    8. 'optimal' → logprob: -5.615728378295898
    9. 'opt' → logprob: -5.865728378295898
    10. ' xor' → logprob: -7.115728378295898

Token 586: 's' (ID: 82)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.042642515152692795
    2. ' the' → logprob: -3.917642593383789
    3. ' an' → logprob: -4.917642593383789
    4. '       ' → logprob: -5.292642593383789
    5. 'e' → logprob: -5.917642593383789
    6. 'a' → logprob: -6.042642593383789
    7. 'def' → logprob: -6.417642593383789
    8. '   ' → logprob: -7.042642593383789
    9. 's' → logprob: -7.417642593383789
    10. 'self' → logprob: -8.292642593383789

Token 587: ' one' (ID: 1001)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32433152198791504
    2. ' a' → logprob: -2.574331521987915
    3. 'self' → logprob: -2.574331521987915
    4. 'move' → logprob: -2.949331521987915
    5. '       ' → logprob: -3.699331521987915
    6. ' move' → logprob: -4.074331283569336
    7. 'optimal' → logprob: -4.199331283569336
    8. 'the' → logprob: -5.199331283569336
    9. ' an' → logprob: -5.449331283569336
    10. 'an' → logprob: -6.199331283569336

Token 588: ' full' (ID: 3149)
  Prédit: ' turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.39004459977149963
    2. 'turn' → logprob: -1.2650445699691772
    3. ' move' → logprob: -3.765044689178467
    4. 'move' → logprob: -4.765044689178467
    5. ' step' → logprob: -5.140044689178467
    6. '       ' → logprob: -7.015044689178467
    7. 'step' → logprob: -7.015044689178467
    8. '   ' → logprob: -7.140044689178467
    9. ' ' → logprob: -8.265044212341309
    10. '_turn' → logprob: -8.515044212341309

Token 589: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.6107326745986938
    2. 'turn' → logprob: -0.8607326745986938
    3. ' move' → logprob: -4.110732555389404
    4. 'move' → logprob: -4.235732555389404
    5. ' step' → logprob: -6.735732555389404
    6. 'step' → logprob: -6.735732555389404
    7. '       ' → logprob: -8.360733032226562
    8. '   ' → logprob: -8.360733032226562
    9. 'play' → logprob: -8.735733032226562
    10. '_turn' → logprob: -8.860733032226562

Token 590: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04696301370859146
    2. '       ' → logprob: -3.1719629764556885
    3. '()' → logprob: -6.546963214874268
    4. '
' → logprob: -7.421963214874268
    5. ':' → logprob: -7.546963214874268
    6. '   ' → logprob: -7.921963214874268
    7. '(
' → logprob: -8.29696273803711
    8. ',' → logprob: -8.54696273803711
    9. '()
' → logprob: -8.79696273803711
    10. '(' → logprob: -8.92196273803711

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013596025295555592
    2. ' if' → logprob: -5.013596057891846
    3. 'if' → logprob: -5.013596057891846
    4. '
' → logprob: -8.888595581054688
    5. '#' → logprob: -10.763595581054688
    6. '```' → logprob: -11.388595581054688
    7. '   ' → logprob: -12.138595581054688
    8. 'self' → logprob: -12.388595581054688
    9. 'move' → logprob: -12.513595581054688
    10. '        
' → logprob: -12.638595581054688

Token 592: ' Step' (ID: 22291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05255532264709473
    2. 'if' → logprob: -3.6775553226470947
    3. ' if' → logprob: -3.9275553226470947
    4. 'self' → logprob: -5.302555084228516
    5. '#' → logprob: -7.552555084228516
    6. ' self' → logprob: -8.177555084228516
    7. '
' → logprob: -8.927555084228516
    8. 'If' → logprob: -9.177555084228516
    9. 'move' → logprob: -9.677555084228516
    10. '"""
' → logprob: -10.427555084228516

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024846551241353154
    2. '_' → logprob: -9.250248908996582
    3. ' ' → logprob: -10.250248908996582
    4. '=' → logprob: -10.500248908996582
    5. ' =' → logprob: -10.625248908996582
    6. '       ' → logprob: -10.625248908996582
    7. '()' → logprob: -11.250248908996582
    8. '(' → logprob: -12.000248908996582
    9. ':' → logprob: -12.500248908996582
    10. '2' → logprob: -12.750248908996582

Token 594: ':' (ID: 25)
  Prédit: '_transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_transform' → logprob: -0.020360147580504417
    2. '()
' → logprob: -4.145359992980957
    3. '()' → logprob: -5.770359992980957
    4. '       ' → logprob: -7.770359992980957
    5. '_' → logprob: -8.645359992980957
    6. ':' → logprob: -8.770359992980957
    7. '   ' → logprob: -9.520359992980957
    8. '():
' → logprob: -9.770359992980957
    9. '(self' → logprob: -9.895359992980957
    10. '_convert' → logprob: -10.145359992980957

Token 595: ' transform' (ID: 7118)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7798690795898438
    2. 'self' → logprob: -0.7798690795898438
    3. '       ' → logprob: -2.6548690795898438
    4. ' if' → logprob: -4.904869079589844
    5. 'if' → logprob: -5.279869079589844
    6. '
' → logprob: -9.154869079589844
    7. 'If' → logprob: -9.529869079589844
    8. '#' → logprob: -11.029869079589844
    9. '```' → logprob: -11.529869079589844
    10. '        
' → logprob: -11.779869079589844

Token 596: ' piles' (ID: 90498)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.013194707222282887
    2. '()' → logprob: -4.388194561004639
    3. '       ' → logprob: -7.388194561004639
    4. '()

' → logprob: -10.763195037841797
    5. '()
' → logprob: -11.263195037841797
    6. 'self' → logprob: -11.513195037841797
    7. '
' → logprob: -12.138195037841797
    8. '()\' → logprob: -12.263195037841797
    9. '(self' → logprob: -12.638195037841797
    10. '();' → logprob: -13.513195037841797

Token 597: '
' (ID: 198)
  Prédit: '()
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.19741754233837128
    2. '()' → logprob: -2.1974174976348877
    3. '       ' → logprob: -2.8224174976348877
    4. '
' → logprob: -4.822417736053467
    5. '()

' → logprob: -8.197417259216309
    6. '()\' → logprob: -10.322417259216309
    7. '        
' → logprob: -10.447417259216309
    8. ',' → logprob: -10.572417259216309
    9. ')' → logprob: -10.572417259216309
    10. '();' → logprob: -10.822417259216309

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6341444849967957
    2. '
' → logprob: -0.7591444849967957
    3. '        
' → logprob: -6.634144306182861
    4. ',' → logprob: -10.25914478302002
    5. '  
' → logprob: -10.50914478302002
    6. '\n' → logprob: -10.63414478302002
    7. '```' → logprob: -10.63414478302002
    8. '
' → logprob: -10.75914478302002
    9. '<|end|>' → logprob: -10.88414478302002
    10. ',
' → logprob: -11.38414478302002

Token 599: ' Step' (ID: 22291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4749513268470764
    2. '
' → logprob: -0.9749513268470764
    3. 'self' → logprob: -7.349951267242432
    4. '        
' → logprob: -8.84995174407959
    5. '```' → logprob: -10.72495174407959
    6. ' self' → logprob: -11.09995174407959
    7. '
' → logprob: -11.22495174407959
    8. '\n' → logprob: -11.84995174407959
    9. '  
' → logprob: -12.09995174407959
    10. 'if' → logprob: -12.97495174407959

Token 600: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009423012845218182
    2. '2' → logprob: -4.884422779083252
    3. '   ' → logprob: -7.134422779083252
    4. '       ' → logprob: -7.884422779083252
    5. ' =' → logprob: -8.88442325592041
    6. ' ' → logprob: -8.88442325592041
    7. ':' → logprob: -9.13442325592041
    8. '=' → logprob: -10.13442325592041
    9. 'play' → logprob: -10.25942325592041
    10. '_' → logprob: -10.75942325592041

Token 601: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005806379020214081
    2. ':
' → logprob: -5.8808064460754395
    3. '       ' → logprob: -6.1308064460754395
    4. '   ' → logprob: -8.005805969238281
    5. ' =' → logprob: -8.130805969238281
    6. '=' → logprob: -9.755805969238281
    7. ' :' → logprob: -10.505805969238281
    8. 'def' → logprob: -11.005805969238281
    9. '_transform' → logprob: -11.130805969238281
    10. '():' → logprob: -11.505805969238281

Token 602: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.125107541680336
    2. ' if' → logprob: -2.250107526779175
    3. '       ' → logprob: -5.500107765197754
    4. 'optimal' → logprob: -6.375107765197754
    5. 'self' → logprob: -6.500107765197754
    6. 'If' → logprob: -7.250107765197754
    7. '
' → logprob: -7.750107765197754
    8. '#' → logprob: -7.875107765197754
    9. 'nim' → logprob: -7.875107765197754
    10. '   ' → logprob: -8.000107765197754

Token 603: ' empty' (ID: 8213)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12707361578941345
    2. ' self' → logprob: -2.1270735263824463
    3. ' not' → logprob: -9.377073287963867
    4. 'not' → logprob: -9.877073287963867
    5. 'len' → logprob: -12.752073287963867
    6. '   ' → logprob: -13.252073287963867
    7. '(self' → logprob: -13.627073287963867
    8. '	self' → logprob: -13.627073287963867
    9. ' len' → logprob: -14.377073287963867
    10. '
' → logprob: -14.752073287963867

Token 604: ' piles' (ID: 90498)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8250909447669983
    2. ':
' → logprob: -1.2000908851623535
    3. ',' → logprob: -1.7000908851623535
    4. '       ' → logprob: -3.4500908851623535
    5. 'self' → logprob: -3.8250908851623535
    6. '(self' → logprob: -4.9500908851623535
    7. ' self' → logprob: -5.3250908851623535
    8. '           ' → logprob: -6.2000908851623535
    9. '():' → logprob: -6.2000908851623535
    10. '():
' → logprob: -6.4500908851623535

Token 605: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5015441179275513
    2. ':
' → logprob: -1.5015441179275513
    3. ',' → logprob: -1.8765441179275513
    4. '       ' → logprob: -4.501543998718262
    5. ':return' → logprob: -5.626543998718262
    6. '           ' → logprob: -6.876543998718262
    7. '   ' → logprob: -7.251543998718262
    8. ' or' → logprob: -7.626543998718262
    9. '():
' → logprob: -7.751543998718262
    10. ' return' → logprob: -8.001543998718262

Token 606: ' current' (ID: 2208)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.38721591234207153
    2. 'return' → logprob: -1.1372158527374268
    3. '       ' → logprob: -8.012215614318848
    4. '           ' → logprob: -12.137215614318848
    5. '#' → logprob: -12.512215614318848
    6. ':return' → logprob: -13.762215614318848
    7. '   ' → logprob: -14.512215614318848
    8. '	return' → logprob: -14.512215614318848
    9. '{return' → logprob: -14.637215614318848
    10. '
' → logprob: -14.637215614318848

Token 607: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.18549616634845734
    2. 'player' → logprob: -2.0604960918426514
    3. '_player' → logprob: -3.1854960918426514
    4. '_' → logprob: -8.06049633026123
    5. ' player's' → logprob: -9.93549633026123
    6. '
' → logprob: -10.06049633026123
    7. 'ly' → logprob: -11.18549633026123
    8. 'Player' → logprob: -11.18549633026123
    9. '=True' → logprob: -11.68549633026123
    10. '(player' → logprob: -11.68549633026123

Token 608: ' loses' (ID: 63582)
  Prédit: ' loses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.06254599988460541
    2. 'los' → logprob: -2.8125460147857666
    3. ' has' → logprob: -8.437545776367188
    4. 'lose' → logprob: -9.437545776367188
    5. 'lost' → logprob: -9.562545776367188
    6. 'has' → logprob: -10.062545776367188
    7. 'wins' → logprob: -10.312545776367188
    8. '   ' → logprob: -10.437545776367188
    9. ' lost' → logprob: -10.687545776367188
    10. '       ' → logprob: -10.937545776367188

Token 609: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03397069126367569
    2. '
' → logprob: -3.408970594406128
    3. ',' → logprob: -8.783970832824707
    4. '<|end|>' → logprob: -9.158970832824707
    5. '        
' → logprob: -10.158970832824707
    6. '
' → logprob: -11.908970832824707
    7. '  
' → logprob: -12.533970832824707
    8. '   ' → logprob: -12.783970832824707
    9. '```' → logprob: -12.908970832824707
    10. ' and' → logprob: -13.033970832824707

Token 610: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.023808348923921585
    2. ' return' → logprob: -3.773808240890503
    3. 'False' → logprob: -7.648808479309082
    4. '       ' → logprob: -9.898808479309082
    5. 'True' → logprob: -10.648808479309082
    6. '   ' → logprob: -12.273808479309082
    7. ' False' → logprob: -12.523808479309082
    8. 'None' → logprob: -13.523808479309082
    9. '           ' → logprob: -14.023808479309082
    10. '
' → logprob: -14.773808479309082

Token 611: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10099262744188309
    2. 'True' → logprob: -2.3509926795959473
    3. ' False' → logprob: -7.350992679595947
    4. ' True' → logprob: -8.850992202758789
    5. 'None' → logprob: -14.600992202758789
    6. '   ' → logprob: -16.97599220275879
    7. '(False' → logprob: -18.35099220275879
    8. '(True' → logprob: -19.60099220275879
    9. '       ' → logprob: -20.85099220275879
    10. '  ' → logprob: -20.85099220275879

Token 612: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5314372777938843
    2. '
' → logprob: -0.9064372777938843
    3. '        
' → logprob: -4.906437397003174
    4. '    
' → logprob: -8.156436920166016
    5. '  
' → logprob: -8.281436920166016
    6. '\n' → logprob: -9.656436920166016
    7. '
' → logprob: -9.906436920166016
    8. '

' → logprob: -10.031436920166016
    9. '   ' → logprob: -10.281436920166016
    10. '```' → logprob: -10.406436920166016

Token 613: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5772863030433655
    2. '       ' → logprob: -0.8272863030433655
    3. '        
' → logprob: -6.702286243438721
    4. '  
' → logprob: -10.327286720275879
    5. '    
' → logprob: -10.452286720275879
    6. '

' → logprob: -11.327286720275879
    7. '```' → logprob: -11.452286720275879
    8. '
' → logprob: -11.452286720275879
    9. '<|end|>' → logprob: -11.827286720275879
    10. '   ' → logprob: -12.077286720275879

Token 614: ' Step' (ID: 22291)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07036707550287247
    2. '
' → logprob: -2.6953670978546143
    3. '        
' → logprob: -8.445366859436035
    4. 'self' → logprob: -8.820366859436035
    5. ' self' → logprob: -10.570366859436035
    6. '   ' → logprob: -11.320366859436035
    7. '  
' → logprob: -11.820366859436035
    8. '    
' → logprob: -12.445366859436035
    9. '

' → logprob: -12.695366859436035
    10. ' 
' → logprob: -12.820366859436035

Token 615: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4709697365760803
    2. '2' → logprob: -1.2209696769714355
    3. '       ' → logprob: -2.7209696769714355
    4. '   ' → logprob: -4.5959696769714355
    5. '3' → logprob: -5.7209696769714355
    6. ' ' → logprob: -7.5959696769714355
    7. ' =' → logprob: -8.595970153808594
    8. ':' → logprob: -8.720970153808594
    9. '        
' → logprob: -9.345970153808594
    10. '#' → logprob: -9.970970153808594

Token 616: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027408355847001076
    2. '       ' → logprob: -3.7774083614349365
    3. ':
' → logprob: -5.527408123016357
    4. '   ' → logprob: -9.652408599853516
    5. ' =' → logprob: -10.152408599853516
    6. '=' → logprob: -11.027408599853516
    7. '
' → logprob: -11.277408599853516
    8. ' :' → logprob: -11.402408599853516
    9. ',' → logprob: -12.027408599853516
    10. '        
' → logprob: -12.777408599853516

Token 617: ' reduce' (ID: 10389)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.9407190680503845
    2. ' move' → logprob: -1.3157191276550293
    3. 'xor' → logprob: -2.0657191276550293
    4. 'optimal' → logprob: -2.8157191276550293
    5. ' xor' → logprob: -3.0657191276550293
    6. ' optimal' → logprob: -3.8157191276550293
    7. 'opt' → logprob: -3.9407191276550293
    8. '       ' → logprob: -4.190719127655029
    9. '   ' → logprob: -5.190719127655029
    10. 'Move' → logprob: -5.315719127655029

Token 618: ' one' (ID: 1001)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5413811802864075
    2. 'self' → logprob: -1.6663811206817627
    3. ' piles' → logprob: -1.9163811206817627
    4. '   ' → logprob: -4.291381359100342
    5. ' self' → logprob: -4.416381359100342
    6. '_p' → logprob: -4.541381359100342
    7. 'pile' → logprob: -4.541381359100342
    8. ' one' → logprob: -4.541381359100342
    9. 's' → logprob: -5.041381359100342
    10. '(self' → logprob: -5.666381359100342

Token 619: ' pile' (ID: 39732)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.918106734752655
    2. 'pile' → logprob: -1.0431067943572998
    3. ' pile' → logprob: -2.0431067943573
    4. ' of' → logprob: -2.4181067943573
    5. '   ' → logprob: -4.793106555938721
    6. '       ' → logprob: -5.043106555938721
    7. 'of' → logprob: -5.043106555938721
    8. 'p' → logprob: -5.418106555938721
    9. '_' → logprob: -6.293106555938721
    10. ' _' → logprob: -7.418106555938721

Token 620: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1840948760509491
    2. ' by' → logprob: -2.4340949058532715
    3. '
' → logprob: -2.6840949058532715
    4. ' to' → logprob: -5.6840949058532715
    5. ',' → logprob: -6.1840949058532715
    6. 'by' → logprob: -6.9340949058532715
    7. '        
' → logprob: -7.1840949058532715
    8. ' and' → logprob: -7.1840949058532715
    9. ' (' → logprob: -7.3090949058532715
    10. '(' → logprob: -7.5590949058532715

Token 621: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0948682352900505
    2. 'amount' → logprob: -3.5948681831359863
    3. ' ' → logprob: -4.094868183135986
    4. ' amount' → logprob: -4.344868183135986
    5. ' the' → logprob: -4.469868183135986
    6. 'the' → logprob: -4.719868183135986
    7. 'optimal' → logprob: -5.469868183135986
    8. ' one' → logprob: -5.719868183135986
    9. 'one' → logprob: -6.094868183135986
    10. ' an' → logprob: -6.219868183135986

Token 622: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05789368972182274
    2. '
' → logprob: -4.057893753051758
    3. 'amount' → logprob: -4.182893753051758
    4. ' amount' → logprob: -4.557893753051758
    5. '   ' → logprob: -5.057893753051758
    6. '_amount' → logprob: -5.557893753051758
    7. '           ' → logprob: -6.807893753051758
    8. ',' → logprob: -7.807893753051758
    9. '               ' → logprob: -7.932893753051758
    10. ' (' → logprob: -9.057893753051758

Token 623: 'optimal' (ID: 142273)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.6207060217857361
    2. ' amount' → logprob: -1.1207060813903809
    3. ')' → logprob: -2.870706081390381
    4. '       ' → logprob: -3.370706081390381
    5. 'x' → logprob: -4.620706081390381
    6. '
' → logprob: -4.620706081390381
    7. ')
' → logprob: -4.870706081390381
    8. '),' → logprob: -6.120706081390381
    9. '):
' → logprob: -6.245706081390381
    10. ',' → logprob: -6.245706081390381

Token 624: ' move' (ID: 5275)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.9136102795600891
    2. ' amount' → logprob: -1.4136102199554443
    3. 'amount' → logprob: -1.7886102199554443
    4. ' move' → logprob: -2.7886102199554443
    5. 'move' → logprob: -3.0386102199554443
    6. '_amount' → logprob: -3.5386102199554443
    7. ')
' → logprob: -3.6636102199554443
    8. ')' → logprob: -4.413610458374023
    9. '
' → logprob: -4.788610458374023
    10. '   ' → logprob: -6.913610458374023

Token 625: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3643261790275574
    2. ')' → logprob: -1.2393262386322021
    3. ' amount' → logprob: -4.989326000213623
    4. 'amount' → logprob: -5.614326000213623
    5. '       ' → logprob: -6.239326000213623
    6. '),' → logprob: -6.614326000213623
    7. ')

' → logprob: -7.489326000213623
    8. '   ' → logprob: -7.864326000213623
    9. '):
' → logprob: -8.489326477050781
    10. ')
' → logprob: -8.489326477050781

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22845236957073212
    2. '
' → logprob: -1.6034523248672485
    3. '        
' → logprob: -5.978452205657959
    4. '<|end|>' → logprob: -8.228452682495117
    5. '  
' → logprob: -9.853452682495117
    6. '
' → logprob: -10.228452682495117
    7. '    
' → logprob: -10.353452682495117
    8. '```' → logprob: -10.603452682495117
    9. '

' → logprob: -11.103452682495117
    10. '<|end|>' → logprob: -11.353452682495117

Token 627: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3871172070503235
    2. '
' → logprob: -1.1371171474456787
    3. '        
' → logprob: -9.012117385864258
    4. '
' → logprob: -10.012117385864258
    5. '```' → logprob: -10.387117385864258
    6. '   ' → logprob: -11.637117385864258
    7. '    
' → logprob: -11.887117385864258
    8. '<|end|>' → logprob: -12.012117385864258
    9. '  
' → logprob: -12.512117385864258
    10. '\n' → logprob: -12.637117385864258

Token 628: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5781862735748291
    2. 'True' → logprob: -0.8281862735748291
    3. 'False' → logprob: -6.32818603515625
    4. ' False' → logprob: -7.82818603515625
    5. 'None' → logprob: -10.20318603515625
    6. ' None' → logprob: -10.70318603515625
    7. '   ' → logprob: -14.70318603515625
    8. ' not' → logprob: -14.95318603515625
    9. '(True' → logprob: -15.57818603515625
    10. '=True' → logprob: -16.82818603515625

Token 629: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' current' (ID: 2208)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2026915550231934
    2. ' the' → logprob: -1.7026915550231934
    3. 'True' → logprob: -2.0776915550231934
    4. 'not' → logprob: -2.4526915550231934
    5. ' True' → logprob: -2.4526915550231934
    6. ' game' → logprob: -2.8276915550231934
    7. 'the' → logprob: -3.0776915550231934
    8. ' there' → logprob: -3.4526915550231934
    9. ' move' → logprob: -3.4526915550231934
    10. 'play' → logprob: -4.577691555023193

Token 631: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.13467971980571747
    2. '_player' → logprob: -2.3846797943115234
    3. 'player' → logprob: -4.009679794311523
    4. '_' → logprob: -4.259679794311523
    5. ' _' → logprob: -7.134679794311523
    6. '_turn' → logprob: -7.884679794311523
    7. ' player's' → logprob: -9.134679794311523
    8. ' turn' → logprob: -9.634679794311523
    9. '_move' → logprob: -9.759679794311523
    10. ')' → logprob: -10.009679794311523

Token 632: ' has' (ID: 853)
  Prédit: 'wins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wins' → logprob: -0.27705052495002747
    2. 'can' → logprob: -2.027050495147705
    3. ' wins' → logprob: -2.902050495147705
    4. ' can' → logprob: -3.527050495147705
    5. 'contin' → logprob: -4.527050495147705
    6. ' continues' → logprob: -5.027050495147705
    7. 'won' → logprob: -5.402050495147705
    8. '_w' → logprob: -6.402050495147705
    9. '_can' → logprob: -7.277050495147705
    10. ' still' → logprob: -7.527050495147705

Token 633: ' not' (ID: 625)
  Prédit: 'won'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'won' → logprob: -0.2775740325450897
    2. 'moves' → logprob: -2.277574062347412
    3. 'm' → logprob: -2.902574062347412
    4. ' won' → logprob: -3.527574062347412
    5. 'not' → logprob: -3.777574062347412
    6. ' moves' → logprob: -4.527574062347412
    7. ' moved' → logprob: -4.902574062347412
    8. 'move' → logprob: -5.152574062347412
    9. ' not' → logprob: -5.777574062347412
    10. 'w' → logprob: -6.277574062347412

Token 634: ' lost' (ID: 8803)
  Prédit: 'lost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lost' → logprob: -0.0024918261915445328
    2. ' lost' → logprob: -6.0024919509887695
    3. 'los' → logprob: -12.00249195098877
    4. '_l' → logprob: -12.87749195098877
    5. '```' → logprob: -13.00249195098877
    6. 'won' → logprob: -13.62749195098877
    7. 'already' → logprob: -14.00249195098877
    8. '_' → logprob: -14.25249195098877
    9. 'lose' → logprob: -14.50249195098877
    10. 'Lost' → logprob: -14.62749195098877

Token 635: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2170420140028
    2. '
' → logprob: -1.7170419692993164
    3. ':
' → logprob: -5.217041969299316
    4. '):
' → logprob: -5.467041969299316
    5. '(self' → logprob: -6.217041969299316
    6. ':' → logprob: -6.842041969299316
    7. '():
' → logprob: -7.092041969299316
    8. '        
' → logprob: -7.717041969299316
    9. '()
' → logprob: -8.217041969299316
    10. '```' → logprob: -8.217041969299316

Token 636: ' False' (ID: 7983)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.23066696524620056
    2. ' False' → logprob: -2.3556668758392334
    3. 'None' → logprob: -2.6056668758392334
    4. '       ' → logprob: -3.9806668758392334
    5. 'False' → logprob: -4.3556671142578125
    6. ' else' → logprob: -5.3556671142578125
    7. ' return' → logprob: -8.105667114257812
    8. 'else' → logprob: -8.105667114257812
    9. ' otherwise' → logprob: -8.855667114257812
    10. '
' → logprob: -9.105667114257812

Token 637: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6522987484931946
    2. '
' → logprob: -1.2772986888885498
    3. '<|end|>' → logprob: -2.15229868888855
    4. '       ' → logprob: -3.27729868888855
    5. ' otherwise' → logprob: -3.90229868888855
    6. ',' → logprob: -4.027298927307129
    7. ' else' → logprob: -5.652298927307129
    8. '   ' → logprob: -6.277298927307129
    9. 'otherwise' → logprob: -7.527298927307129
    10. 'if' → logprob: -7.652298927307129

Token 638: ' lost' (ID: 8803)
  Prédit: ' lost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lost' → logprob: -0.8795160055160522
    2. 'lost' → logprob: -0.8795160055160522
    3. ' they' → logprob: -2.629516124725342
    4. 'True' → logprob: -3.879516124725342
    5. 'they' → logprob: -4.004516124725342
    6. ' has' → logprob: -4.004516124725342
    7. 'los' → logprob: -4.629516124725342
    8. 'has' → logprob: -4.879516124725342
    9. ' True' → logprob: -5.504516124725342
    10. 'len' → logprob: -5.754516124725342

Token 639: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5280851125717163
    2. '
' → logprob: -0.9030851125717163
    3. '<|end|>' → logprob: -6.028085231781006
    4. ',' → logprob: -7.028085231781006
    5. '        
' → logprob: -7.278085231781006
    6. ',
' → logprob: -8.903084754943848
    7. '.' → logprob: -9.028084754943848
    8. ':
' → logprob: -9.028084754943848
    9. '    
' → logprob: -9.153084754943848
    10. '   ' → logprob: -9.403084754943848

Token 640: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3491276800632477
    2. '
' → logprob: -1.2241276502609253
    3. '        
' → logprob: -7.974127769470215
    4. '```' → logprob: -8.349127769470215
    5. 'self' → logprob: -10.724127769470215
    6. '    
' → logprob: -11.224127769470215
    7. '
' → logprob: -11.349127769470215
    8. '   ' → logprob: -11.849127769470215
    9. '\n' → logprob: -12.099127769470215
    10. 'n' → logprob: -12.224127769470215

Token 641: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00075459701474756
    2. '
' → logprob: -7.6257548332214355
    3. 'self' → logprob: -8.750754356384277
    4. '   ' → logprob: -10.375754356384277
    5. '```' → logprob: -10.875754356384277
    6. '        
' → logprob: -11.000754356384277
    7. 'def' → logprob: -11.125754356384277
    8. ' self' → logprob: -12.000754356384277
    9. '<|end|>' → logprob: -12.250754356384277
    10. ')' → logprob: -12.625754356384277

Token 642: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035377019084990025
    2. 'self' → logprob: -6.253537654876709
    3. '   ' → logprob: -6.503537654876709
    4. 'def' → logprob: -9.878538131713867
    5. '```' → logprob: -10.253538131713867
    6. ' self' → logprob: -11.253538131713867
    7. '#' → logprob: -12.878538131713867
    8. '
' → logprob: -13.253538131713867
    9. ' ' → logprob: -13.503538131713867
    10. '        
' → logprob: -13.753538131713867

Token 643: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012207048945128918
    2. '       ' → logprob: -4.51220703125
    3. ' self' → logprob: -6.76220703125
    4. '   ' → logprob: -14.13720703125
    5. '```' → logprob: -14.76220703125
    6. '	self' → logprob: -15.51220703125
    7. '
' → logprob: -16.01220703125
    8. 'def' → logprob: -16.13720703125
    9. '(self' → logprob: -16.26220703125
    10. '#' → logprob: -16.26220703125

Token 644: '.step' (ID: 43723)
  Prédit: '.step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.step' → logprob: -2.5776860184123507e-06
    2. '.p' → logprob: -13.25000286102295
    3. '.steps' → logprob: -14.87500286102295
    4. '.Step' → logprob: -16.125001907348633
    5. '.' → logprob: -16.250001907348633
    6. '._' → logprob: -16.750001907348633
    7. ' .' → logprob: -17.000001907348633
    8. '.segment' → logprob: -17.500001907348633
    9. '.phase' → logprob: -17.750001907348633
    10. '.point' → logprob: -19.125001907348633

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -19.5
    3. '```' → logprob: -21.75
    4. '１' → logprob: -21.875
    5. ' ' → logprob: -22.625
    6. '۱' → logprob: -24.0
    7. '`' → logprob: -25.125
    8. '_step' → logprob: -25.25
    9. '' → logprob: -25.875
    10. '   ' → logprob: -26.25

Token 646: '_transform' (ID: 46795)
  Prédit: '_transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_transform' → logprob: -1.2664456789934775e-06
    2. 'transform' → logprob: -13.750000953674316
    3. 'Transform' → logprob: -16.625001907348633
    4. '_' → logprob: -17.125001907348633
    5. '_convert' → logprob: -19.125001907348633
    6. '.transform' → logprob: -20.625001907348633
    7. '_trans' → logprob: -20.875001907348633
    8. '(transform' → logprob: -21.000001907348633
    9. '```' → logprob: -21.125001907348633
    10. '__' → logprob: -21.125001907348633

Token 647: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040384672582149506
    2. 'if' → logprob: -3.6653847694396973
    3. '
' → logprob: -4.915384769439697
    4. ' if' → logprob: -5.040384769439697
    5. '        
' → logprob: -8.915384292602539
    6. '<|end|>' → logprob: -11.165384292602539
    7. '   ' → logprob: -11.415384292602539
    8. '  
' → logprob: -12.540384292602539
    9. '
' → logprob: -12.915384292602539
    10. '```' → logprob: -13.040384292602539

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23001326620578766
    2. ' if' → logprob: -1.8550132513046265
    3. 'if' → logprob: -3.730013370513916
    4. '
' → logprob: -3.730013370513916
    5. '        
' → logprob: -7.355013370513916
    6. ' 
' → logprob: -9.605012893676758
    7. '   ' → logprob: -9.855012893676758
    8. '```' → logprob: -9.980012893676758
    9. 'result' → logprob: -10.230012893676758
    10. '        ' → logprob: -10.730012893676758

Token 649: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00013643606507685035
    2. '       ' → logprob: -9.000136375427246
    3. ' if' → logprob: -11.250136375427246
    4. '```' → logprob: -18.875137329101562
    5. '   ' → logprob: -20.250137329101562
    6. 'return' → logprob: -20.875137329101562
    7. '	if' → logprob: -21.125137329101562
    8. 'If' → logprob: -21.750137329101562
    9. '           ' → logprob: -23.000137329101562
    10. '      ' → logprob: -24.125137329101562

Token 650: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2930479943752289
    2. 'len' → logprob: -1.5430480241775513
    3. ' self' → logprob: -3.7930479049682617
    4. ' len' → logprob: -4.043047904968262
    5. ' not' → logprob: -9.043047904968262
    6. 'not' → logprob: -9.293047904968262
    7. '   ' → logprob: -13.418047904968262
    8. '       ' → logprob: -13.668047904968262
    9. '(len' → logprob: -14.293047904968262
    10. ' ' → logprob: -15.043047904968262

Token 651: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0002613358374219388
    2. 'is' → logprob: -8.250261306762695
    3. 's' → logprob: -17.750261306762695
    4. '.' → logprob: -17.875261306762695
    5. '_is' → logprob: -18.750261306762695
    6. '_.' → logprob: -19.125261306762695
    7. '.len' → logprob: -19.375261306762695
    8. ').' → logprob: -19.500261306762695
    9. '	is' → logprob: -19.500261306762695
    10. '.isnan' → logprob: -19.625261306762695

Token 652: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -2.816093228830141e-06
    2. 'lost' → logprob: -13.75000286102295
    3. '_empty' → logprob: -14.12500286102295
    4. 'Lost' → logprob: -14.87500286102295
    5. '_' → logprob: -14.87500286102295
    6. '_loss' → logprob: -16.000001907348633
    7. '```' → logprob: -17.625001907348633
    8. 'empty' → logprob: -17.750001907348633
    9. ' lost' → logprob: -18.000001907348633
    10. 'l' → logprob: -18.625001907348633

Token 653: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -1.843177233240567e-05
    2. 'osed' → logprob: -12.250018119812012
    3. 'lost' → logprob: -12.875018119812012
    4. 'oss' → logprob: -13.250018119812012
    5. 'Lost' → logprob: -13.375018119812012
    6. '_' → logprob: -13.375018119812012
    7. ' ost' → logprob: -13.750018119812012
    8. '[' → logprob: -14.500018119812012
    9. '{' → logprob: -14.625018119812012
    10. '0' → logprob: -14.625018119812012

Token 654: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011735594598576427
    2. '():
' → logprob: -6.751173496246338
    3. '()' → logprob: -12.876173973083496
    4. '():
' → logprob: -14.501173973083496
    5. ' ():' → logprob: -15.126173973083496
    6. '():

' → logprob: -17.62617301940918
    7. '()==' → logprob: -18.25117301940918
    8. ':' → logprob: -19.50117301940918
    9. '()>' → logprob: -19.62617301940918
    10. '()">' → logprob: -21.12617301940918

Token 655: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.872261317563243e-05
    2. 'return' → logprob: -9.875059127807617
    3. ' return' → logprob: -12.000059127807617
    4. '		' → logprob: -15.625059127807617
    5. '
' → logprob: -15.750059127807617
    6. '	       ' → logprob: -15.750059127807617
    7. '               ' → logprob: -15.750059127807617
    8. '       ' → logprob: -16.000059127807617
    9. '          ' → logprob: -16.625059127807617
    10. '```' → logprob: -17.125059127807617

Token 656: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.019347382709383965
    2. ' return' → logprob: -4.019347190856934
    3. '           ' → logprob: -6.769347190856934
    4. '       ' → logprob: -10.394347190856934
    5. '   ' → logprob: -11.519347190856934
    6. '	return' → logprob: -11.894347190856934
    7. '               ' → logprob: -15.019347190856934
    8. ' ' → logprob: -15.269347190856934
    9. '{return' → logprob: -15.394347190856934
    10. ':return' → logprob: -16.01934814453125

Token 657: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. '(False' → logprob: -20.75009536743164
    4. 'false' → logprob: -23.50009536743164
    5. '=False' → logprob: -24.50009536743164
    6. '_false' → logprob: -24.62509536743164
    7. 'True' → logprob: -25.12509536743164
    8. '.False' → logprob: -27.00009536743164
    9. '   ' → logprob: -27.25009536743164
    10. 'FALSE' → logprob: -27.62509536743164

Token 658: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4079647660255432
    2. '
' → logprob: -1.1579647064208984
    3. '        
' → logprob: -3.9079647064208984
    4. '
' → logprob: -7.657964706420898
    5. '  
' → logprob: -9.157964706420898
    6. '    
' → logprob: -9.407964706420898
    7. '       
' → logprob: -10.782964706420898
    8. ' 
' → logprob: -10.907964706420898
    9. '

' → logprob: -11.032964706420898
    10. 'import' → logprob: -11.657964706420898

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010945827700197697
    2. '
' → logprob: -4.760945796966553
    3. 'move' → logprob: -7.010945796966553
    4. '        
' → logprob: -7.635945796966553
    5. 'pile' → logprob: -8.260946273803711
    6. ' move' → logprob: -8.510946273803711
    7. 'optimal' → logprob: -8.635946273803711
    8. '
' → logprob: -9.885946273803711
    9. 'p' → logprob: -10.010946273803711
    10. 'import' → logprob: -10.510946273803711

Token 660: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5362520813941956
    2. 'move' → logprob: -1.2862520217895508
    3. 'pile' → logprob: -2.036252021789551
    4. 'idx' → logprob: -5.286252021789551
    5. '       ' → logprob: -6.411252021789551
    6. '(i' → logprob: -7.286252021789551
    7. 'index' → logprob: -7.411252021789551
    8. '   ' → logprob: -9.66125202178955
    9. ' i' → logprob: -9.91125202178955
    10. ' move' → logprob: -10.41125202178955

Token 661: ' choose' (ID: 5655)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.3854433000087738
    2. 'i' → logprob: -1.8854433298110962
    3. 'move' → logprob: -2.1354432106018066
    4. 'idx' → logprob: -3.3854432106018066
    5. 'index' → logprob: -5.260443210601807
    6. '       ' → logprob: -5.635443210601807
    7. 'pi' → logprob: -6.510443210601807
    8. ' move' → logprob: -7.010443210601807
    9. ' pile' → logprob: -7.135443210601807
    10. '(i' → logprob: -7.260443210601807

Token 662: ' optimal' (ID: 24174)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3547760546207428
    2. 'pile' → logprob: -1.7297760248184204
    3. 'move' → logprob: -3.47977614402771
    4. '       ' → logprob: -3.60477614402771
    5. ' i' → logprob: -3.97977614402771
    6. '_move' → logprob: -4.229775905609131
    7. ' move' → logprob: -5.229775905609131
    8. 'optimal' → logprob: -5.354775905609131
    9. '(i' → logprob: -5.479775905609131
    10. 'index' → logprob: -5.479775905609131

Token 663: ' move' (ID: 5275)
  Prédit: '_move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.04870489239692688
    2. 'move' → logprob: -3.0487048625946045
    3. '(i' → logprob: -10.548705101013184
    4. 'i' → logprob: -10.673705101013184
    5. 'pile' → logprob: -10.673705101013184
    6. ' move' → logprob: -10.923705101013184
    7. 'Move' → logprob: -12.173705101013184
    8. '       ' → logprob: -12.298705101013184
    9. '_i' → logprob: -12.923705101013184
    10. 'm' → logprob: -12.923705101013184

Token 664: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5509933829307556
    2. '       ' → logprob: -1.5509934425354004
    3. 'pile' → logprob: -1.9259934425354004
    4. 'move' → logprob: -3.5509934425354004
    5. 'idx' → logprob: -3.9259934425354004
    6. 'index' → logprob: -4.5509934425354
    7. '(i' → logprob: -5.0509934425354
    8. ' i' → logprob: -8.550992965698242
    9. 'for' → logprob: -9.800992965698242
    10. '(move' → logprob: -10.425992965698242

Token 665: 'pile' (ID: 112229)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5189045071601868
    2. 'i' → logprob: -1.143904447555542
    3. 'pile' → logprob: -3.268904447555542
    4. '       ' → logprob: -3.893904447555542
    5. 'idx' → logprob: -5.018904685974121
    6. 'index' → logprob: -5.018904685974121
    7. ')i' → logprob: -5.518904685974121
    8. ')
' → logprob: -5.768904685974121
    9. '           ' → logprob: -6.643904685974121
    10. 'self' → logprob: -6.893904685974121

Token 666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2052290439605713
    2. '_index' → logprob: -2.2052290439605713
    3. '_idx' → logprob: -2.7052290439605713
    4. 'index' → logprob: -5.080228805541992
    5. 'idx' → logprob: -6.705228805541992
    6. 'Index' → logprob: -7.955228805541992
    7. ' index' → logprob: -8.830228805541992
    8. 'i' → logprob: -8.955228805541992
    9. ',index' → logprob: -9.080228805541992
    10. '_i' → logprob: -9.580228805541992

Token 667: ' remove' (ID: 6234)
  Prédit: 'amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amount' → logprob: -0.4589185416698456
    2. ' amount' → logprob: -1.208918571472168
    3. 'remove' → logprob: -2.833918571472168
    4. ' remove' → logprob: -4.708918571472168
    5. ' amt' → logprob: -7.333918571472168
    6. 'amt' → logprob: -7.458918571472168
    7. 'rem' → logprob: -8.333918571472168
    8. 'count' → logprob: -8.958918571472168
    9. 'reduce' → logprob: -10.208918571472168
    10. ' count' → logprob: -11.208918571472168

Token 668: ' amount' (ID: 4527)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.2061609923839569
    2. ')' → logprob: -1.9561610221862793
    3. '_amt' → logprob: -3.3311610221862793
    4. '_count' → logprob: -5.456161022186279
    5. ')
' → logprob: -5.706161022186279
    6. '_' → logprob: -6.956161022186279
    7. ')_' → logprob: -8.956160545349121
    8. '_qty' → logprob: -9.081160545349121
    9. '_)' → logprob: -9.706160545349121
    10. '=' → logprob: -9.831160545349121

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4404725730419159
    2. ')
' → logprob: -1.0654726028442383
    3. '       ' → logprob: -4.565472602844238
    4. ')
' → logprob: -6.940472602844238
    5. ' =' → logprob: -9.065472602844238
    6. '):
' → logprob: -9.940472602844238
    7. ')=' → logprob: -10.065472602844238
    8. '   ' → logprob: -10.565472602844238
    9. '           ' → logprob: -11.440472602844238
    10. ' )' → logprob: -11.690472602844238

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4573139548301697
    2. 'i' → logprob: -1.7073140144348145
    3. ' i' → logprob: -1.9573140144348145
    4. 'pile' → logprob: -3.9573140144348145
    5. '(i' → logprob: -5.2073140144348145
    6. ',' → logprob: -5.2073140144348145
    7. ' (' → logprob: -5.3323140144348145
    8. ' pile' → logprob: -6.2073140144348145
    9. 'index' → logprob: -6.5823140144348145
    10. 'idx' → logprob: -6.7073140144348145

Token 671: ' idx' (ID: 14016)
  Prédit: 'pile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pile' → logprob: -0.18332397937774658
    2. 'i' → logprob: -2.308323860168457
    3. '       ' → logprob: -2.933323860168457
    4. 'move' → logprob: -4.433323860168457
    5. 'idx' (adapté à ' idx') → logprob: -6.683323860168457
    6. 'index' → logprob: -7.558323860168457
    7. ' i' → logprob: -7.808323860168457
    8. '(i' → logprob: -8.058323860168457
    9. ' pile' → logprob: -8.808323860168457
    10. 'p' → logprob: -9.808323860168457

Token 672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.718606891809031e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '_,' → logprob: -14.375066757202148
    4. ',value' → logprob: -16.12506675720215
    5. '‌,' → logprob: -16.75006675720215
    6. ',target' → logprob: -17.00006675720215
    7. ',opt' → logprob: -17.25006675720215
    8. ' =' → logprob: -17.37506675720215
    9. '=' → logprob: -17.50006675720215
    10. ',item' → logprob: -17.87506675720215

Token 673: ' rem' (ID: 1662)
  Prédit: 'amt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amt' → logprob: -0.6353732943534851
    2. 'amount' → logprob: -1.3853733539581299
    3. 'rem' → logprob: -2.13537335395813
    4. ' amt' → logprob: -2.88537335395813
    5. 'remove' → logprob: -3.13537335395813
    6. ' amount' → logprob: -6.635373115539551
    7. ' remove' → logprob: -7.760373115539551
    8. 'rm' → logprob: -7.885373115539551
    9. ' rem' → logprob: -8.76037311553955
    10. 'count' → logprob: -9.38537311553955

Token 674: ' =' (ID: 314)
  Prédit: 'ove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ove' → logprob: -0.008501817472279072
    2. '=' → logprob: -4.883502006530762
    3. ' =' → logprob: -7.258502006530762
    4. 'ov' → logprob: -9.133502006530762
    5. 'oval' → logprob: -10.258502006530762
    6. 'oved' → logprob: -10.508502006530762
    7. '   ' → logprob: -12.508502006530762
    8. '=-' → logprob: -12.508502006530762
    9. '```' → logprob: -12.883502006530762
    10. '=(' → logprob: -13.508502006530762

Token 675: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.061973292380571365
    2. ' self' → logprob: -2.8119733333587646
    3. '       ' → logprob: -12.811973571777344
    4. '(self' → logprob: -12.936973571777344
    5. '=self' → logprob: -15.561973571777344
    6. '	self' → logprob: -16.311973571777344
    7. '_self' → logprob: -17.186973571777344
    8. '   ' → logprob: -17.561973571777344
    9. ' =' → logprob: -17.686973571777344
    10. '0' → logprob: -17.936973571777344

Token 676: '.opt' (ID: 50855)
  Prédit: '.opt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.opt' → logprob: -0.004515804350376129
    2. 'optimal' → logprob: -5.504515647888184
    3. '.optim' → logprob: -8.254515647888184
    4. '_opt' → logprob: -9.879515647888184
    5. '.' → logprob: -10.129515647888184
    6. ' optimal' → logprob: -10.629515647888184
    7. '.p' → logprob: -11.129515647888184
    8. 'opt' → logprob: -11.254515647888184
    9. '._' → logprob: -11.379515647888184
    10. ' .' → logprob: -12.254515647888184

Token 677: 'imal' (ID: 3882)
  Prédit: 'imal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imal' → logprob: -0.007764800917357206
    2. 't' → logprob: -4.88276481628418
    3. 'tim' → logprob: -9.38276481628418
    4. 'ional' → logprob: -11.38276481628418
    5. 'tion' → logprob: -11.50776481628418
    6. 'inal' → logprob: -11.75776481628418
    7. 'optimal' → logprob: -11.88276481628418
    8. 'tal' → logprob: -12.00776481628418
    9. '_move' → logprob: -12.13276481628418
    10. 'im' → logprob: -12.38276481628418

Token 678: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -5.5027299822540954e-05
    2. 'move' → logprob: -10.000055313110352
    3. 'Move' → logprob: -11.750055313110352
    4. '_MOVE' → logprob: -14.625055313110352
    5. '_remove' → logprob: -15.125055313110352
    6. ' move' → logprob: -15.625055313110352
    7. '   ' → logprob: -15.750055313110352
    8. '_moves' → logprob: -15.875055313110352
    9. '_Move' → logprob: -16.62505531311035
    10. '	move' → logprob: -16.87505531311035

Token 679: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2788439691066742
    2. '
' → logprob: -1.7788439989089966
    3. '<|end|>' → logprob: -2.653843879699707
    4. '<|end|>' → logprob: -6.028843879699707
    5. ':' → logprob: -7.903843879699707
    6. ')' → logprob: -8.653843879699707
    7. '        
' → logprob: -8.903843879699707
    8. ':
' → logprob: -9.028843879699707
    9. '
' → logprob: -9.403843879699707
    10. ',' → logprob: -9.528843879699707

Token 680: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006654949975199997
    2. ' if' → logprob: -8.000665664672852
    3. '<|end|>' → logprob: -8.250665664672852
    4. '   ' → logprob: -10.750665664672852
    5. 'if' → logprob: -10.750665664672852
    6. '        
' → logprob: -11.625665664672852
    7. '           ' → logprob: -12.375665664672852
    8. ' ' → logprob: -13.250665664672852
    9. '```' → logprob: -13.250665664672852
    10. '<|end|>' → logprob: -13.500665664672852

Token 681: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21331994235515594
    2. '       ' → logprob: -1.7133198976516724
    3. 'self' → logprob: -4.963319778442383
    4. ' if' → logprob: -5.338319778442383
    5. ' self' → logprob: -11.088319778442383
    6. '	if' → logprob: -11.338319778442383
    7. '
' → logprob: -12.838319778442383
    8. '   ' → logprob: -12.838319778442383
    9. 'assert' → logprob: -12.838319778442383
    10. '        
' → logprob: -13.463319778442383

Token 682: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.34999942779541016
    2. 'idx' → logprob: -1.2249994277954102
    3. ' rem' → logprob: -6.97499942779541
    4. 'rem' → logprob: -7.47499942779541
    5. '	idx' → logprob: -10.22499942779541
    6. '(idx' → logprob: -11.72499942779541
    7. '   ' → logprob: -12.59999942779541
    8. '_idx' → logprob: -13.97499942779541
    9. '[idx' → logprob: -14.59999942779541
    10. '  ' → logprob: -14.84999942779541

Token 683: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.027512505650520325
    2. '==' → logprob: -3.652512550354004
    3. '==-' → logprob: -6.902512550354004
    4. '<' → logprob: -10.152512550354004
    5. ' is' → logprob: -10.277512550354004
    6. ' <' → logprob: -10.277512550354004
    7. '=' → logprob: -10.527512550354004
    8. ' ' → logprob: -10.652512550354004
    9. ' !=' → logprob: -10.902512550354004
    10. '[' → logprob: -12.027512550354004

Token 684: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005530327325686812
    2. ' -' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.750553131103516
    4. ' ' → logprob: -20.375553131103516
    5. '       ' → logprob: -21.125553131103516
    6. '  ' → logprob: -21.625553131103516
    7. '−' → logprob: -22.500553131103516
    8. '	' → logprob: -23.000553131103516
    9. '     ' → logprob: -24.125553131103516
    10. '(-' → logprob: -24.250553131103516

Token 685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ',' → logprob: -18.4375
    4. ' -' → logprob: -18.8125
    5. '```' → logprob: -18.875
    6. '   ' → logprob: -19.125
    7. '۱' → logprob: -20.125
    8. '১' → logprob: -20.125
    9. '१' → logprob: -20.375
    10. '１' → logprob: -20.6875

Token 686: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2181000709533691
    2. ',' → logprob: -1.4681000709533691
    3. ':
' → logprob: -1.5931000709533691
    4. ':' → logprob: -1.7181000709533691
    5. ' or' → logprob: -2.593100070953369
    6. 'and' → logprob: -4.218100070953369
    7. '<|end|>' → logprob: -6.968100070953369
    8. 'or' → logprob: -8.468099594116211
    9. '       ' → logprob: -8.843099594116211
    10. '           ' → logprob: -9.093099594116211

Token 687: '           ' (ID: 352)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5586990714073181
    2. ' -' → logprob: -0.9336990714073181
    3. '           ' → logprob: -3.683699131011963
    4. '1' → logprob: -4.933699131011963
    5. ' ' → logprob: -6.683699131011963
    6. ',' → logprob: -7.558699131011963
    7. ' return' → logprob: -7.683699131011963
    8. 'return' → logprob: -8.308698654174805
    9. '               ' → logprob: -9.808698654174805
    10. '		' → logprob: -11.058698654174805

Token 688: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.001926374970935285
    2. '           ' → logprob: -6.751926422119141
    3. ' return' → logprob: -7.251926422119141
    4. '#' (adapté à ' #') → logprob: -10.25192642211914
    5. '       ' → logprob: -11.50192642211914
    6. '   ' → logprob: -13.87692642211914
    7. '               ' → logprob: -15.12692642211914
    8. 'raise' → logprob: -15.12692642211914
    9. '	return' → logprob: -15.75192642211914
    10. ' ' → logprob: -16.75192642211914

Token 689: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0230143740773201
    2. '#' → logprob: -4.273014545440674
    3. ' return' → logprob: -5.023014545440674
    4. '           ' → logprob: -6.398014545440674
    5. '       ' → logprob: -7.523014545440674
    6. ' #' → logprob: -11.648014068603516
    7. '   ' → logprob: -12.023014068603516
    8. 'self' → logprob: -12.648014068603516
    9. 'raise' → logprob: -13.023014068603516
    10. '               ' → logprob: -14.398014068603516

Token 690: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.48754510283470154
    2. ' valid' → logprob: -1.362545132637024
    3. 'move' → logprob: -2.4875450134277344
    4. ' moves' → logprob: -3.3625450134277344
    5. 'moves' → logprob: -4.862545013427734
    6. 'valid' → logprob: -6.112545013427734
    7. ' possible' → logprob: -6.362545013427734
    8. 'possible' → logprob: -9.362545013427734
    9. '_move' → logprob: -9.737545013427734
    10. ' more' → logprob: -9.737545013427734

Token 691: ' possible' (ID: 4149)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8501546382904053
    2. '
' → logprob: -0.9751546382904053
    3. ' return' → logprob: -2.3501546382904053
    4. 'return' → logprob: -3.3501546382904053
    5. '       ' → logprob: -3.4751546382904053
    6. ':' → logprob: -4.975154876708984
    7. ' possible' → logprob: -5.100154876708984
    8. '            
' → logprob: -5.600154876708984
    9. ':
' → logprob: -5.725154876708984
    10. ',' → logprob: -5.725154876708984

Token 692: ' =>' (ID: 871)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.260817289352417
    2. '           ' → logprob: -1.885817289352417
    3. 'return' → logprob: -3.385817289352417
    4. '       ' → logprob: -3.635817289352417
    5. ' return' → logprob: -4.135817527770996
    6. '
' → logprob: -7.760817527770996
    7. '   ' → logprob: -8.135817527770996
    8. '               ' → logprob: -8.510817527770996
    9. '\n' → logprob: -8.760817527770996
    10. '            
' → logprob: -9.010817527770996

Token 693: ' lose' (ID: 12577)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01105442550033331
    2. ' return' → logprob: -4.511054515838623
    3. '#' → logprob: -12.886054039001465
    4. '   ' → logprob: -13.011054039001465
    5. '       ' → logprob: -13.511054039001465
    6. '           ' → logprob: -15.136054039001465
    7. 'False' → logprob: -16.63605499267578
    8. '	return' → logprob: -17.01105499267578
    9. '  ' → logprob: -18.26105499267578
    10. ' ' → logprob: -19.01105499267578

Token 694: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036523377057164907
    2. '
' → logprob: -6.503652572631836
    3. ' return' → logprob: -6.753652572631836
    4. 'return' → logprob: -7.128652572631836
    5. '       ' → logprob: -8.878652572631836
    6. '               ' → logprob: -11.003652572631836
    7. '   ' → logprob: -11.128652572631836
    8. '
' → logprob: -13.253652572631836
    9. '\n' → logprob: -13.253652572631836
    10. '          ' → logprob: -13.878652572631836

Token 695: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020992294885218143
    2. ' return' → logprob: -7.12709903717041
    3. '       ' → logprob: -7.37709903717041
    4. 'return' → logprob: -7.50209903717041
    5. '
' → logprob: -10.00209903717041
    6. '   ' → logprob: -10.25209903717041
    7. '               ' → logprob: -10.37709903717041
    8. '          ' → logprob: -13.62709903717041
    9. '		' → logprob: -14.00209903717041
    10. ' ' → logprob: -14.62709903717041

Token 696: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7446388006210327
    2. 'return' (adapté à ' return') → logprob: -0.7446388006210327
    3. '           ' → logprob: -2.9946389198303223
    4. '               ' → logprob: -9.494638442993164
    5. '       ' → logprob: -9.994638442993164
    6. '   ' → logprob: -11.744638442993164
    7. ' ' → logprob: -12.994638442993164
    8. '	return' → logprob: -14.119638442993164
    9. '
' → logprob: -14.619638442993164
    10. '                   ' → logprob: -14.869638442993164

Token 697: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002613358374219388
    2. ' False' → logprob: -8.250261306762695
    3. '(False' → logprob: -18.750261306762695
    4. '=False' → logprob: -22.000261306762695
    5. 'True' → logprob: -22.750261306762695
    6. '_false' → logprob: -23.375261306762695
    7. 'false' → logprob: -24.125261306762695
    8. '.False' → logprob: -24.250261306762695
    9. 'F' → logprob: -25.750261306762695
    10. 'None' → logprob: -25.875261306762695

Token 698: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09102538228034973
    2. '
' → logprob: -2.4660253524780273
    3. '        
' → logprob: -6.216025352478027
    4. '    
' → logprob: -10.966025352478027
    5. '
' → logprob: -11.216025352478027
    6. '  
' → logprob: -11.466025352478027
    7. ',' → logprob: -11.966025352478027
    8. '\n' → logprob: -12.091025352478027
    9. 'self' → logprob: -12.466025352478027
    10. '<|end|>' → logprob: -12.466025352478027

Token 699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006154587608762085
    2. 'self' → logprob: -7.50061559677124
    3. '
' → logprob: -10.000615119934082
    4. '        
' → logprob: -11.250615119934082
    5. '   ' → logprob: -13.875615119934082
    6. ' self' → logprob: -14.000615119934082
    7. 'p' → logprob: -14.375615119934082
    8. '	' → logprob: -15.000615119934082
    9. '#' → logprob: -15.250615119934082
    10. '​' → logprob: -15.375615119934082

Token 700: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47583848237991333
    2. 'self' (adapté à ' self') → logprob: -0.9758384823799133
    3. ' self' → logprob: -6.350838661193848
    4. '   ' → logprob: -11.600838661193848
    5. '	self' → logprob: -13.100838661193848
    6. '#' → logprob: -13.850838661193848
    7. '	' → logprob: -14.100838661193848
    8. '        
' → logprob: -14.225838661193848
    9. '           ' → logprob: -15.100838661193848
    10. ' ' → logprob: -15.725838661193848

Token 701: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.1008713702030946e-06
    2. 'p' → logprob: -13.500001907348633
    3. '.' → logprob: -15.875001907348633
    4. 'self' → logprob: -16.125001907348633
    5. ' .' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '```' → logprob: -17.000001907348633
    8. '_p' → logprob: -17.125001907348633
    9. '_.' → logprob: -17.125001907348633
    10. 's' → logprob: -17.625001907348633

Token 702: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0007924780366010964
    2. 'p' → logprob: -7.625792503356934
    3. 'ile' → logprob: -8.500792503356934
    4. 'self' → logprob: -10.000792503356934
    5. '_p' → logprob: -11.750792503356934
    6. '_' → logprob: -11.875792503356934
    7. '(self' → logprob: -12.125792503356934
    8. 'lies' → logprob: -12.375792503356934
    9. '   ' → logprob: -12.750792503356934
    10. '[self' → logprob: -12.875792503356934

Token 703: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.5776860184123507e-06
    2. '[self' → logprob: -13.75000286102295
    3. '[' → logprob: -13.87500286102295
    4. '[i' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.125001907348633
    6. '       ' → logprob: -16.500001907348633
    7. 'idx' → logprob: -17.000001907348633
    8. '```' → logprob: -17.125001907348633
    9. '[index' → logprob: -17.875001907348633
    10. '
' → logprob: -17.875001907348633

Token 704: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.47547879815101624
    2. '-=' → logprob: -0.9754787683486938
    3. '-' → logprob: -6.725478649139404
    4. '=' → logprob: -8.975479125976562
    5. '   ' → logprob: -10.475479125976562
    6. '    ' → logprob: -11.225479125976562
    7. ')' → logprob: -11.350479125976562
    8. ']' → logprob: -11.850479125976562
    9. '>' → logprob: -11.975479125976562
    10. ' -' → logprob: -12.850479125976562

Token 705: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.003221206832677126
    2. ' -=' → logprob: -5.753221035003662
    3. '-' → logprob: -10.25322151184082
    4. '=' → logprob: -11.75322151184082
    5. '   ' → logprob: -14.87822151184082
    6. '    ' → logprob: -18.00322151184082
    7. '	' → logprob: -18.12822151184082
    8. '>' → logprob: -18.50322151184082
    9. '+=' → logprob: -18.75322151184082
    10. '```' → logprob: -18.87822151184082

Token 706: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.004078401252627373
    2. ' rem' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.254077911376953
    4. 'rep' → logprob: -19.379077911376953
    5. '(rem' → logprob: -19.754077911376953
    6. 'ret' → logprob: -19.879077911376953
    7. 'res' → logprob: -20.504077911376953
    8. 'reman' → logprob: -21.004077911376953
    9. '       ' → logprob: -21.129077911376953
    10. ' ' → logprob: -21.379077911376953

Token 707: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003171533579006791
    2. '<|end|>' → logprob: -6.003171443939209
    3. '
' → logprob: -7.753171443939209
    4. 'return' → logprob: -8.753171920776367
    5. '   ' → logprob: -9.878171920776367
    6. ' return' → logprob: -11.128171920776367
    7. '	' → logprob: -11.253171920776367
    8. '<|end|>' → logprob: -11.628171920776367
    9. ',' → logprob: -12.503171920776367
    10. ' ' → logprob: -12.753171920776367

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.457669562427327e-05
    2. 'return' → logprob: -10.37507438659668
    3. '   ' → logprob: -10.87507438659668
    4. '
' → logprob: -11.75007438659668
    5. '<|end|>' → logprob: -11.75007438659668
    6. '	' → logprob: -12.25007438659668
    7. ' return' → logprob: -13.50007438659668
    8. '           ' → logprob: -14.37507438659668
    9. '	return' → logprob: -15.00007438659668
    10. '	   ' → logprob: -15.25007438659668

Token 709: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5249335169792175
    2. 'if' (adapté à ' if') → logprob: -1.0249335765838623
    3. '       ' → logprob: -3.0249335765838623
    4. ' if' → logprob: -7.149933338165283
    5. ' return' → logprob: -8.399933815002441
    6. '   ' → logprob: -12.024933815002441
    7. '#' → logprob: -12.399933815002441
    8. 'self' → logprob: -14.024933815002441
    9. 'while' → logprob: -14.149933815002441
    10. '
' → logprob: -14.274933815002441

Token 710: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804665803909302
    2. ' self' → logprob: -3.2880465984344482
    3. '0' → logprob: -13.288046836853027
    4. 'rem' → logprob: -14.163046836853027
    5. '	self' → logprob: -14.288046836853027
    6. '(self' → logprob: -14.413046836853027
    7. '   ' → logprob: -15.163046836853027
    8. ' ' → logprob: -15.163046836853027
    9. 'Self' → logprob: -16.10054588317871
    10. 's' → logprob: -16.16304588317871

Token 711: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.512236498361744e-07
    2. ' .' → logprob: -15.750000953674316
    3. '.' → logprob: -16.25
    4. 'self' → logprob: -16.625
    5. '._' → logprob: -18.0
    6. 'p' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '   ' → logprob: -19.5
    9. '_p' → logprob: -19.5
    10. '.py' → logprob: -19.5

Token 712: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0004586711002048105
    2. 'self' → logprob: -7.750458717346191
    3. 'ile' → logprob: -11.875458717346191
    4. '[self' → logprob: -12.750458717346191
    5. '(self' → logprob: -12.875458717346191
    6. 'p' → logprob: -13.000458717346191
    7. 'lies' → logprob: -13.250458717346191
    8. 'ILES' → logprob: -13.625458717346191
    9. 's' → logprob: -13.750458717346191
    10. 'iless' → logprob: -13.875458717346191

Token 713: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: 0.0
    2. 'idx' → logprob: -17.375
    3. '[' → logprob: -18.625
    4. '	idx' → logprob: -19.875
    5. '[i' → logprob: -20.0
    6. '(idx' → logprob: -20.25
    7. '[int' → logprob: -20.875
    8. ' idx' → logprob: -20.875
    9. '
' → logprob: -21.0
    10. '[
' → logprob: -21.375

Token 714: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31362295150756836
    2. ' ==' → logprob: -1.3136229515075684
    3. '<=' → logprob: -8.188623428344727
    4. ' <=' → logprob: -9.688623428344727
    5. ']==' → logprob: -11.438623428344727
    6. ')==' → logprob: -12.438623428344727
    7. '===' → logprob: -12.688623428344727
    8. '=' → logprob: -12.938623428344727
    9. ')' → logprob: -15.063623428344727
    10. '()==' → logprob: -15.688623428344727

Token 715: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03818321228027344
    2. ' ==' → logprob: -3.2881832122802734
    3. '<=' → logprob: -8.913183212280273
    4. ' <=' → logprob: -12.663183212280273
    5. ']==' → logprob: -13.663183212280273
    6. '===' → logprob: -13.788183212280273
    7. ')==' → logprob: -14.163183212280273
    8. '=' → logprob: -14.163183212280273
    9. '==
' → logprob: -15.913183212280273
    10. '()==' → logprob: -16.913183212280273

Token 716: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -17.375059127807617
    4. '```' → logprob: -19.625059127807617
    5. '<|end|>' → logprob: -20.750059127807617
    6. '۰' → logprob: -21.000059127807617
    7. '00' → logprob: -21.125059127807617
    8. '  ' → logprob: -21.500059127807617
    9. '000' → logprob: -21.875059127807617
    10. 's' → logprob: -22.000059127807617

Token 717: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.50009536743164
    4. '۰' → logprob: -19.50009536743164
    5. '```' → logprob: -20.12509536743164
    6. '  ' → logprob: -20.75009536743164
    7. '<|end|>' → logprob: -21.18759536743164
    8. '٠' → logprob: -21.25009536743164
    9. '=' → logprob: -21.31259536743164
    10. '000' → logprob: -21.68759536743164

Token 718: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3176436722278595
    2. ':
' → logprob: -1.442643642425537
    3. '           ' → logprob: -3.442643642425537
    4. '       ' → logprob: -6.067643642425537
    5. '<|end|>' → logprob: -7.067643642425537
    6. '               ' → logprob: -8.442644119262695
    7. ' or' → logprob: -9.442644119262695
    8. '   ' → logprob: -9.692644119262695
    9. ',' → logprob: -9.817644119262695
    10. '<|end|>' → logprob: -10.317644119262695

Token 719: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00048381939996033907
    2. ' del' → logprob: -8.625483512878418
    3. 'del' → logprob: -9.250483512878418
    4. '       ' → logprob: -9.250483512878418
    5. '               ' → logprob: -9.500483512878418
    6. '	       ' → logprob: -11.500483512878418
    7. 'self' → logprob: -11.625483512878418
    8. '```' → logprob: -12.125483512878418
    9. ' self' → logprob: -12.625483512878418
    10. '   ' → logprob: -13.375483512878418

Token 720: ' self' (ID: 1051)
  Prédit: ' del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' del' → logprob: -1.0788285732269287
    2. 'del' → logprob: -1.0788285732269287
    3. 'self' (adapté à ' self') → logprob: -1.3288285732269287
    4. '           ' → logprob: -3.0788285732269287
    5. ' self' → logprob: -4.703828811645508
    6. '	del' → logprob: -9.078828811645508
    7. '   ' → logprob: -11.328828811645508
    8. '               ' → logprob: -11.828828811645508
    9. '```' → logprob: -12.328828811645508
    10. '	self' → logprob: -12.578828811645508

Token 721: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.127333340875339e-06
    2. ' .' → logprob: -13.500003814697266
    3. '```' → logprob: -14.000003814697266
    4. '           ' → logprob: -14.500003814697266
    5. '<p' → logprob: -15.500003814697266
    6. 'p' → logprob: -15.875003814697266
    7. '<|end|>' → logprob: -16.125003814697266
    8. '       ' → logprob: -16.125003814697266
    9. ':' → logprob: -16.250003814697266
    10. '].' → logprob: -16.875003814697266

Token 722: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -1.4378848391061183e-05
    2. 'ile' → logprob: -12.000014305114746
    3. 'self' → logprob: -12.875014305114746
    4. 'p' → logprob: -14.250014305114746
    5. '   ' → logprob: -14.250014305114746
    6. 'iless' → logprob: -14.375014305114746
    7. 'i' → logprob: -14.500014305114746
    8. 'ils' → logprob: -15.125014305114746
    9. '```' → logprob: -15.125014305114746
    10. '_' → logprob: -15.375014305114746

Token 723: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -5.931863051955588e-05
    2. '.' → logprob: -10.375059127807617
    3. '.remove' → logprob: -11.000059127807617
    4. 'pop' → logprob: -11.750059127807617
    5. '=' → logprob: -12.875059127807617
    6. '[idx' → logprob: -14.625059127807617
    7. ' =' → logprob: -15.250059127807617
    8. ' .' → logprob: -16.625059127807617
    9. '	pop' → logprob: -16.875059127807617
    10. '```' → logprob: -17.750059127807617

Token 724: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -2.6060808522743173e-05
    2. 'idx' → logprob: -10.625025749206543
    3. '[idx' → logprob: -13.500025749206543
    4. '(i' → logprob: -15.250025749206543
    5. '	idx' → logprob: -16.75002670288086
    6. '(' → logprob: -17.12502670288086
    7. '(index' → logprob: -17.12502670288086
    8. '(id' → logprob: -18.12502670288086
    9. ' idx' → logprob: -18.37502670288086
    10. '(
' → logprob: -18.50002670288086

Token 725: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007643607095815241
    2. ')
' → logprob: -7.3757643699646
    3. '       ' → logprob: -9.250763893127441
    4. '()' → logprob: -10.750763893127441
    5. '())' → logprob: -11.250763893127441
    6. '<|end|>' → logprob: -12.125763893127441
    7. ')return' → logprob: -14.625763893127441
    8. '()
' → logprob: -15.125763893127441
    9. '),' → logprob: -15.750763893127441
    10. '')' → logprob: -15.750763893127441

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.203409844194539e-05
    2. '<|end|>' → logprob: -10.500041961669922
    3. '
' → logprob: -12.375041961669922
    4. 'return' → logprob: -12.500041961669922
    5. ' return' → logprob: -13.125041961669922
    6. '   ' → logprob: -13.375041961669922
    7. '           ' → logprob: -13.750041961669922
    8. '```' → logprob: -14.250041961669922
    9. '<|end|>' → logprob: -15.000041961669922
    10. '               ' → logprob: -15.375041961669922

Token 727: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38696351647377014
    2. 'return' (adapté à ' return') → logprob: -1.1369634866714478
    3. ' return' → logprob: -9.511963844299316
    4. '   ' → logprob: -11.136963844299316
    5. '	return' → logprob: -13.261963844299316
    6. '
' → logprob: -13.761963844299316
    7. '	' → logprob: -14.511963844299316
    8. '```' → logprob: -15.386963844299316
    9. '           ' → logprob: -16.011962890625
    10. '      ' → logprob: -16.511962890625

Token 728: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -2.15310683415737e-05
    2. ' True' → logprob: -10.750021934509277
    3. '       ' → logprob: -21.25002098083496
    4. 'true' → logprob: -21.37502098083496
    5. '   ' → logprob: -21.62502098083496
    6. '(True' → logprob: -22.12502098083496
    7. '           ' → logprob: -25.50002098083496
    8. 'False' → logprob: -25.87502098083496
    9. '=True' → logprob: -26.12502098083496
    10. 'TRUE' → logprob: -26.37502098083496

Token 729: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 730: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 731: ' Game' (ID: 7022)
  Prédit: ' Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Game' → logprob: -1.174356460571289
    2. ' Nim' → logprob: -1.674356460571289
    3. ' Solution' → logprob: -2.049356460571289
    4. ' Solver' → logprob: -2.299356460571289
    5. ' Perfect' → logprob: -3.049356460571289
    6. 'Game' → logprob: -3.174356460571289
    7. ' Advanced' → logprob: -3.424356460571289
    8. 'Solution' → logprob: -3.799356460571289
    9. ' Main' → logprob: -3.924356460571289
    10. 'Solver' → logprob: -4.299356460571289

Token 732: 'Runner' (ID: 26032)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46898746490478516
    2. 'Runner' → logprob: -1.7189874649047852
    3. 'Manager' → logprob: -2.218987464904785
    4. ':
' → logprob: -2.968987464904785
    5. 'Controller' → logprob: -4.593987464904785
    6. 'State' → logprob: -5.218987464904785
    7. 'Interactor' → logprob: -5.843987464904785
    8. 'Handler' → logprob: -6.093987464904785
    9. 'Session' → logprob: -6.468987464904785
    10. 'Solver' → logprob: -6.718987464904785

Token 733: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016718693950679153
    2. ':
' → logprob: -8.875166893005371
    3. '<|end|>' → logprob: -11.500166893005371
    4. ':

' → logprob: -11.875166893005371
    5. ':def' → logprob: -12.375166893005371
    6. '(' → logprob: -13.125166893005371
    7. '```' → logprob: -13.750166893005371
    8. '):' → logprob: -14.000166893005371
    9. '{' → logprob: -14.875166893005371
    10. '():' → logprob: -15.625166893005371

Token 734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03178649768233299
    2. 'class' → logprob: -3.5317864418029785
    3. '```' → logprob: -6.2817864418029785
    4. ' class' → logprob: -9.406786918640137
    5. 'def' → logprob: -10.906786918640137
    6. ':' → logprob: -10.906786918640137
    7. '<|end|>' → logprob: -11.156786918640137
    8. '    
' → logprob: -11.906786918640137
    9. '
' → logprob: -12.406786918640137
    10. '<class' → logprob: -12.531786918640137

Token 735: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048506394028663635
    2. 'class' → logprob: -3.673506498336792
    3. 'def' → logprob: -4.548506259918213
    4. '```' → logprob: -4.798506259918213
    5. '
' → logprob: -6.548506259918213
    6. ':' → logprob: -7.173506259918213
    7. ' def' → logprob: -8.048506736755371
    8. '    
' → logprob: -8.423506736755371
    9. '<|end|>' → logprob: -9.048506736755371
    10. ':
' → logprob: -9.548506736755371

Token 736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009604028426110744
    2. 'def' → logprob: -5.134603977203369
    3. 'class' → logprob: -5.884603977203369
    4. '
' → logprob: -8.634604454040527
    5. '```' → logprob: -8.759604454040527
    6. '"""' → logprob: -9.009604454040527
    7. '    
' → logprob: -9.384604454040527
    8. ' def' → logprob: -9.384604454040527
    9. ':' → logprob: -9.634604454040527
    10. '"""
' → logprob: -10.009604454040527

Token 737: ' Runs' (ID: 106285)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14369353652000427
    2. '
' → logprob: -2.893693447113037
    3. 'def' → logprob: -2.893693447113037
    4. 'class' → logprob: -4.018693447113037
    5. ' def' → logprob: -5.643693447113037
    6. '```' → logprob: -7.643693447113037
    7. '"""
' → logprob: -7.893693447113037
    8. '"""' → logprob: -8.143693923950195
    9. '    
' → logprob: -9.768693923950195
    10. ':
' → logprob: -10.143693923950195

Token 738: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.16426131129264832
    2. 'a' → logprob: -2.4142613410949707
    3. 'games' → logprob: -3.1642613410949707
    4. 'multiple' → logprob: -4.789261341094971
    5. '   ' → logprob: -5.664261341094971
    6. ' the' → logprob: -5.664261341094971
    7. 'def' → logprob: -6.289261341094971
    8. 'game' → logprob: -6.914261341094971
    9. '"""
' → logprob: -8.164260864257812
    10. '```' → logprob: -8.289260864257812

Token 739: ' two' (ID: 1920)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.007912516593933105
    2. ' game' → logprob: -4.882912635803223
    3. 'games' → logprob: -8.507912635803223
    4. 'code' → logprob: -9.757912635803223
    5. '
' → logprob: -11.632912635803223
    6. 'full' → logprob: -12.007912635803223
    7. 'sequence' → logprob: -12.132912635803223
    8. 'current' → logprob: -12.132912635803223
    9. 'simulation' → logprob: -12.632912635803223
    10. 'play' → logprob: -12.757912635803223

Token 740: '-player' (ID: 92135)
  Prédit: 'player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'player' → logprob: -0.10341062396764755
    2. '-player' → logprob: -2.3534107208251953
    3. ' player' → logprob: -5.978410720825195
    4. '_player' → logprob: -7.978410720825195
    5. 'players' → logprob: -8.353410720825195
    6. 'class' → logprob: -9.853410720825195
    7. ' players' → logprob: -11.353410720825195
    8. 'Player' → logprob: -11.353410720825195
    9. 'def' → logprob: -12.478410720825195
    10. '
' → logprob: -13.103410720825195

Token 741: ' alternating' (ID: 125099)
  Prédit: ' game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' game' → logprob: -0.11312511563301086
    2. 'game' → logprob: -2.2381250858306885
    3. 'class' → logprob: -9.11312484741211
    4. 'Game' → logprob: -9.86312484741211
    5. ' code' → logprob: -10.73812484741211
    6. '_game' → logprob: -10.73812484741211
    7. ' turn' → logprob: -10.86312484741211
    8. 'turn' → logprob: -11.11312484741211
    9. 'code' → logprob: -11.11312484741211
    10. ' Nim' → logprob: -11.61312484741211

Token 742: ' game' (ID: 2813)
  Prédit: 'game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'game' → logprob: -0.580647885799408
    2. ' game' → logprob: -0.830647885799408
    3. 'turn' → logprob: -6.330647945404053
    4. 'play' → logprob: -6.830647945404053
    5. ' gameplay' → logprob: -7.080647945404053
    6. 'class' → logprob: -8.455647468566895
    7. ' turn' → logprob: -8.830647468566895
    8. 'def' → logprob: -8.955647468566895
    9. '
' → logprob: -8.955647468566895
    10. ' turns' → logprob: -9.205647468566895

Token 743: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4258100390434265
    2. '
' → logprob: -1.5508100986480713
    3. 'class' → logprob: -2.8008100986480713
    4. ' with' → logprob: -4.050809860229492
    5. ':
' → logprob: -4.425809860229492
    6. ',' → logprob: -4.675809860229492
    7. 'with' → logprob: -4.675809860229492
    8. ':' → logprob: -5.050809860229492
    9. '.' → logprob: -5.050809860229492
    10. 'from' → logprob: -5.425809860229492

Token 744: ' Nim' (ID: 117458)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6864768862724304
    2. 'the' → logprob: -0.8114768862724304
    3. ' the' → logprob: -3.186476945877075
    4. 'p' → logprob: -5.436476707458496
    5. 'class' → logprob: -6.311476707458496
    6. ' N' → logprob: -6.686476707458496
    7. 'a' → logprob: -6.811476707458496
    8. ' given' → logprob: -7.686476707458496
    9. 'initial' → logprob: -8.311476707458496
    10. 'provided' → logprob: -8.311476707458496

Token 745: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.015428505837917328
    2. '   ' → logprob: -4.64042854309082
    3. 'class' → logprob: -6.14042854309082
    4. 'game' → logprob: -6.76542854309082
    5. '
' → logprob: -7.01542854309082
    6. ' Game' → logprob: -8.39042854309082
    7. '

' → logprob: -8.51542854309082
    8. ' rules' → logprob: -9.01542854309082
    9. ' game' → logprob: -9.14042854309082
    10. '_game' → logprob: -9.51542854309082

Token 746: ' abstraction' (ID: 129564)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3410975933074951
    2. ':' → logprob: -1.3410975933074951
    3. '   ' → logprob: -4.091097831726074
    4. ':

' → logprob: -4.966097831726074
    5. '
' → logprob: -5.841097831726074
    6. 'class' → logprob: -8.091097831726074
    7. '.' → logprob: -8.716097831726074
    8. '.
' → logprob: -9.341097831726074
    9. ',' → logprob: -10.091097831726074
    10. '):
' → logprob: -10.091097831726074

Token 747: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45129555463790894
    2. ':
' → logprob: -1.2012956142425537
    3. '   ' → logprob: -2.8262956142425537
    4. '.' → logprob: -6.201295375823975
    5. ':

' → logprob: -8.076295852661133
    6. '
' → logprob: -8.326295852661133
    7. ',' → logprob: -8.951295852661133
    8. '):
' → logprob: -9.326295852661133
    9. '<|end|>' → logprob: -9.451295852661133
    10. ' and' → logprob: -10.201295852661133

Token 748: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5259785652160645
    2. '
' → logprob: -0.9009785652160645
    3. '    
' → logprob: -6.4009785652160645
    4. 'def' → logprob: -7.4009785652160645
    5. '```' → logprob: -8.650978088378906
    6. 'class' → logprob: -8.900978088378906
    7. '<|end|>' → logprob: -9.025978088378906
    8. '

' → logprob: -9.900978088378906
    9. '
' → logprob: -10.400978088378906
    10. '<|end|>' → logprob: -11.150978088378906

Token 749: ' """

' (ID: 28800)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7262794375419617
    2. '   ' → logprob: -0.7262794375419617
    3. 'def' → logprob: -3.7262794971466064
    4. 'class' → logprob: -5.101279258728027
    5. '    
' → logprob: -6.351279258728027
    6. ' def' → logprob: -8.226279258728027
    7. '```' → logprob: -8.226279258728027
    8. '

' → logprob: -10.351279258728027
    9. '<|end|>' → logprob: -10.476279258728027
    10. ')' → logprob: -11.226279258728027

Token 750: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02422872558236122
    2. '   ' → logprob: -3.774228811264038
    3. ' def' → logprob: -7.024228572845459
    4. 'class' → logprob: -9.399229049682617
    5. '```' → logprob: -11.649229049682617
    6. '	def' → logprob: -14.524229049682617
    7. '
' → logprob: -15.149229049682617
    8. '    
' → logprob: -15.524229049682617
    9. ' ' → logprob: -16.149229049682617
    10. '__' → logprob: -16.399229049682617

Token 751: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00017886889690998942
    2. '__' → logprob: -9.000179290771484
    3. ' def' → logprob: -10.375179290771484
    4. 'class' → logprob: -10.750179290771484
    5. '@' → logprob: -14.250179290771484
    6. '   ' → logprob: -14.375179290771484
    7. 'from' → logprob: -14.625179290771484
    8. '```' → logprob: -15.125179290771484
    9. '	def' → logprob: -16.000179290771484
    10. '
' → logprob: -16.000179290771484

Token 752: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10747136920690536
    2. 'init' → logprob: -2.357471466064453
    3. ' __' → logprob: -5.982471466064453
    4. 'staticmethod' → logprob: -5.982471466064453
    5. 'def' → logprob: -6.732471466064453
    6. '_init' → logprob: -7.357471466064453
    7. 'classmethod' → logprob: -8.232471466064453
    8. ' def' → logprob: -10.482471466064453
    9. 'python' → logprob: -10.982471466064453
    10. '```' → logprob: -11.232471466064453

Token 753: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.723352049040841e-06
    2. 'class' → logprob: -13.375004768371582
    3. 'iter' → logprob: -13.750004768371582
    4. 'new' → logprob: -14.125004768371582
    5. '__' → logprob: -14.875004768371582
    6. ' init' → logprob: -15.000004768371582
    7. 'int' → logprob: -15.125004768371582
    8. '```' → logprob: -16.375003814697266
    9. 'name' → logprob: -16.625003814697266
    10. 'call' → logprob: -16.750003814697266

Token 754: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.010487168096005917
    2. '__(
' → logprob: -4.635487079620361
    3. '__' → logprob: -7.385487079620361
    4. '(self' → logprob: -9.26048755645752
    5. '__((' → logprob: -12.01048755645752
    6. '   ' → logprob: -12.76048755645752
    7. '__
' → logprob: -13.13548755645752
    8. 'self' → logprob: -13.51048755645752
    9. '(' → logprob: -14.51048755645752
    10. '(
' → logprob: -14.63548755645752

Token 755: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.208653162000701e-05
    2. 'p' → logprob: -9.500082015991211
    3. ' self' → logprob: -12.375082015991211
    4. '   ' → logprob: -13.125082015991211
    5. ')' → logprob: -15.000082015991211
    6. ',' → logprob: -15.375082015991211
    7. '(self' → logprob: -15.625082015991211
    8. '       ' → logprob: -16.00008201599121
    9. '
' → logprob: -16.37508201599121
    10. '```' → logprob: -17.12508201599121

Token 756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35221612453460693
    2. 'self' → logprob: -1.227216124534607
    3. 'p' → logprob: -5.7272162437438965
    4. ',p' → logprob: -8.352215766906738
    5. ' self' → logprob: -8.977215766906738
    6. ' ,' → logprob: -10.227215766906738
    7. '   ' → logprob: -10.352215766906738
    8. '(self' → logprob: -10.352215766906738
    9. ',self' → logprob: -10.727215766906738
    10. '__,' → logprob: -11.602215766906738

Token 757: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016644196584820747
    2. 'initial' → logprob: -4.14164400100708
    3. 'self' → logprob: -8.266644477844238
    4. 'starting' → logprob: -8.266644477844238
    5. 'player' → logprob: -10.891644477844238
    6. 'start' → logprob: -11.391644477844238
    7. 'pile' → logprob: -11.391644477844238
    8. '   ' → logprob: -11.516644477844238
    9. ' piles' → logprob: -11.891644477844238
    10. 'players' → logprob: -12.141644477844238

Token 758: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023357603640761226
    2. '):' → logprob: -8.50023365020752
    3. '=' → logprob: -11.00023365020752
    4. '):
' → logprob: -11.37523365020752
    5. ')' → logprob: -14.12523365020752
    6. '   ' → logprob: -14.87523365020752
    7. ',' → logprob: -15.12523365020752
    8. '=None' → logprob: -15.37523365020752
    9. '_:' → logprob: -16.500232696533203
    10. ' :' → logprob: -16.500232696533203

Token 759: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00035369666875340044
    2. ' List' → logprob: -8.000353813171387
    3. 'p' → logprob: -11.875353813171387
    4. '[List' → logprob: -12.000353813171387
    5. 'list' → logprob: -12.250353813171387
    6. '   ' → logprob: -15.625353813171387
    7. ')' → logprob: -16.37535285949707
    8. '_list' → logprob: -16.37535285949707
    9. '       ' → logprob: -17.50035285949707
    10. '[' → logprob: -17.50035285949707

Token 760: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -13.625001907348633
    3. '<int' → logprob: -14.625001907348633
    4. '   ' → logprob: -16.375001907348633
    5. '):
' → logprob: -16.625001907348633
    6. '=int' → logprob: -18.125001907348633
    7. '[' → logprob: -19.000001907348633
    8. '):' → logprob: -19.125001907348633
    9. '[Int' → logprob: -19.500001907348633
    10. ']int' → logprob: -19.500001907348633

Token 761: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.06983526796102524
    2. '):
' → logprob: -2.9448351860046387
    3. ']):' → logprob: -4.444835186004639
    4. '):' → logprob: -6.694835186004639
    5. '])' → logprob: -7.319835186004639
    6. ')' → logprob: -7.319835186004639
    7. '   ' → logprob: -8.319835662841797
    8. ']' → logprob: -8.569835662841797
    9. '']):
' → logprob: -10.194835662841797
    10. '       ' → logprob: -10.569835662841797

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014255529269576073
    2. 'self' → logprob: -4.264255523681641
    3. ' self' → logprob: -9.38925552368164
    4. '   ' → logprob: -12.13925552368164
    5. 'def' → logprob: -13.01425552368164
    6. '(self' → logprob: -15.63925552368164
    7. ',' → logprob: -15.88925552368164
    8. '```' → logprob: -16.38925552368164
    9. '           ' → logprob: -16.51425552368164
    10. '	self' → logprob: -16.88925552368164

Token 763: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007379194721579552
    2. '       ' → logprob: -7.250738143920898
    3. ' self' → logprob: -10.500738143920898
    4. '   ' → logprob: -14.875738143920898
    5. '	self' → logprob: -18.2507381439209
    6. '```' → logprob: -18.6257381439209
    7. 'def' → logprob: -19.0007381439209
    8. '(self' → logprob: -19.7507381439209
    9. '
' → logprob: -19.7507381439209
    10. ' ' → logprob: -19.7507381439209

Token 764: '.game' (ID: 17309)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32292312383651733
    2. 'game' → logprob: -2.572923183441162
    3. 'current' → logprob: -2.572923183441162
    4. 'n' → logprob: -3.072923183441162
    5. 'player' → logprob: -3.947923183441162
    6. 'nim' → logprob: -3.947923183441162
    7. '.n' → logprob: -4.072923183441162
    8. '   ' → logprob: -4.322923183441162
    9. '.p' → logprob: -5.697923183441162
    10. '_n' → logprob: -7.072923183441162

Token 765: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16033847630023956
    2. ' =' → logprob: -1.9103385210037231
    3. '   ' → logprob: -9.410338401794434
    4. ':' → logprob: -10.785338401794434
    5. ')' → logprob: -12.910338401794434
    6. '       ' → logprob: -13.160338401794434
    7. '=N' → logprob: -13.160338401794434
    8. '  ' → logprob: -14.035338401794434
    9. ' ' → logprob: -14.285338401794434
    10. '.' → logprob: -14.410338401794434

Token 766: ' Nim' (ID: 117458)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03804275393486023
    2. ' Nim' → logprob: -3.2880427837371826
    3. '   ' → logprob: -14.288043022155762
    4. ' N' → logprob: -14.913043022155762
    5. ' ' → logprob: -15.538043022155762
    6. '	N' → logprob: -16.538042068481445
    7. '(N' → logprob: -17.038042068481445
    8. '[N' → logprob: -18.288042068481445
    9. '       ' → logprob: -18.413042068481445
    10. 'Nib' → logprob: -18.913042068481445

Token 767: 'Game' (ID: 6627)
  Prédit: 'Game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.9361264946837764e-07
    2. 'game' → logprob: -16.875
    3. '<Game' → logprob: -17.25
    4. '(Game' → logprob: -17.75
    5. '	Game' → logprob: -18.625
    6. '   ' → logprob: -19.0
    7. 'G' → logprob: -19.25
    8. '_Game' → logprob: -19.25
    9. ' Game' → logprob: -19.625
    10. '_game' → logprob: -19.75

Token 768: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0009119403548538685
    2. 'p' → logprob: -7.000911712646484
    3. '.p' → logprob: -16.375911712646484
    4. '(' → logprob: -16.375911712646484
    5. 'self' → logprob: -16.500911712646484
    6. '(self' → logprob: -16.875911712646484
    7. '       ' → logprob: -17.000911712646484
    8. '   ' → logprob: -17.250911712646484
    9. '(
' → logprob: -17.875911712646484
    10. '
' → logprob: -18.000911712646484

Token 769: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -2.4868770196917467e-05
    2. 'p' → logprob: -10.875024795532227
    3. 'ile' → logprob: -12.625024795532227
    4. '
' → logprob: -14.875024795532227
    5. '[' → logprob: -15.125024795532227
    6. 'ILES' → logprob: -15.375024795532227
    7. ')' → logprob: -15.500024795532227
    8. 'illes' → logprob: -15.500024795532227
    9. '`' → logprob: -16.000024795532227
    10. 'lies' → logprob: -16.250024795532227

Token 770: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009842199506238103
    2. '   ' → logprob: -7.000984191894531
    3. ')

' → logprob: -10.125984191894531
    4. '       ' → logprob: -10.750984191894531
    5. ')
' → logprob: -11.500984191894531
    6. ' )' → logprob: -14.875984191894531
    7. ' ' → logprob: -15.000984191894531
    8. '<|end|>' → logprob: -16.50098419189453
    9. '[' → logprob: -16.75098419189453
    10. '  ' → logprob: -16.75098419189453

Token 771: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01639726385474205
    2. '
' → logprob: -4.266397476196289
    3. 'def' → logprob: -6.141397476196289
    4. '    
' → logprob: -10.266397476196289
    5. ' def' → logprob: -11.016397476196289
    6. '```' → logprob: -11.266397476196289
    7. '<|end|>' → logprob: -11.516397476196289
    8. ')' → logprob: -13.891397476196289
    9. '	def' → logprob: -14.141397476196289
    10. ',' → logprob: -14.266397476196289

Token 772: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0950532853603363
    2. 'self' (adapté à ' self') → logprob: -2.595053195953369
    3. '
' → logprob: -4.720053195953369
    4. '   ' → logprob: -5.345053195953369
    5. ' def' → logprob: -6.595053195953369
    6. '       ' → logprob: -7.095053195953369
    7. ' self' → logprob: -9.095053672790527
    8. '    
' → logprob: -11.720053672790527
    9. '        
' → logprob: -12.720053672790527
    10. ' ' → logprob: -12.720053672790527

Token 773: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.4752329885959625
    2. 'current' → logprob: -0.9752329587936401
    3. '.player' → logprob: -8.10023307800293
    4. 'player' → logprob: -8.10023307800293
    5. '.turn' → logprob: -8.10023307800293
    6. '_current' → logprob: -8.72523307800293
    7. ' current' → logprob: -10.60023307800293
    8. 'turn' → logprob: -11.35023307800293
    9. '.players' → logprob: -11.47523307800293
    10. '.next' → logprob: -11.85023307800293

Token 774: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.00018387178715784103
    2. '_turn' → logprob: -8.625184059143066
    3. '_move' → logprob: -13.250184059143066
    4. 'player' → logprob: -13.875184059143066
    5. '_' → logprob: -14.625184059143066
    6. '_user' → logprob: -15.375184059143066
    7. '_players' → logprob: -16.00018310546875
    8. '_token' → logprob: -16.00018310546875
    9. ' _' → logprob: -16.12518310546875
    10. '_step' → logprob: -16.12518310546875

Token 775: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47412168979644775
    2. '=' → logprob: -0.9741216897964478
    3. '_id' → logprob: -10.224122047424316
    4. '_index' → logprob: -12.599122047424316
    5. '_idx' → logprob: -12.724122047424316
    6. ':' → logprob: -13.474122047424316
    7. 'id' → logprob: -15.974122047424316
    8. ' ' → logprob: -16.22412109375
    9. 'index' → logprob: -16.34912109375
    10. '=int' → logprob: -16.59912109375

Token 776: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008390100672841072
    2. ' ' → logprob: -5.133389949798584
    3. '1' → logprob: -6.008389949798584
    4. '"' → logprob: -14.883390426635742
    5. '   ' → logprob: -17.633390426635742
    6. ''' → logprob: -17.883390426635742
    7. 'True' → logprob: -18.508390426635742
    8. '2' → logprob: -18.883390426635742
    9. 'False' → logprob: -18.883390426635742
    10. '  ' → logprob: -19.008390426635742

Token 777: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009126556105911732
    2. '1' → logprob: -7.000912666320801
    3. '"' → logprob: -14.2509126663208
    4. ''' → logprob: -14.8759126663208
    5. ' ' → logprob: -15.7509126663208
    6. 'True' → logprob: -17.875911712646484
    7. ''A' → logprob: -18.750911712646484
    8. '"A' → logprob: -19.500911712646484
    9. 'False' → logprob: -20.125911712646484
    10. ''s' → logprob: -21.250911712646484

Token 778: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1480197161436081
    2. '
' → logprob: -2.148019790649414
    3. '<|end|>' → logprob: -4.023019790649414
    4. 'def' → logprob: -6.648019790649414
    5. '    
' → logprob: -7.398019790649414
    6. '       ' → logprob: -8.023019790649414
    7. '<|end|>' → logprob: -8.148019790649414
    8. ' def' → logprob: -8.398019790649414
    9. '

' → logprob: -9.398019790649414
    10. '```' → logprob: -10.023019790649414

Token 779: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 780: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28561538457870483
    2. ' ' → logprob: -1.4106154441833496
    3. '1' → logprob: -6.78561544418335
    4. '#' → logprob: -6.78561544418335
    5. ' #' → logprob: -6.78561544418335
    6. '<|end|>' → logprob: -7.53561544418335
    7. ' self' → logprob: -8.535614967346191
    8. 'self' → logprob: -8.910614967346191
    9. '  ' → logprob: -10.035614967346191
    10. '2' → logprob: -10.160614967346191

Token 781: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038431864231824875
    2. '#' → logprob: -5.753843307495117
    3. 'self' → logprob: -7.628843307495117
    4. ' ' → logprob: -9.003843307495117
    5. '1' → logprob: -10.128843307495117
    6. 'player' → logprob: -12.378843307495117
    7. ' #' → logprob: -12.628843307495117
    8. 'int' → logprob: -12.628843307495117
    9. '   ' → logprob: -13.628843307495117
    10. '+' → logprob: -13.878843307495117

Token 782: ' you' (ID: 481)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03002144955098629
    2. ' ' → logprob: -3.5300214290618896
    3. '
' → logprob: -9.155021667480469
    4. 'self' → logprob: -9.280021667480469
    5. ' self' → logprob: -10.530021667480469
    6. '   ' → logprob: -11.280021667480469
    7. '       ' → logprob: -12.030021667480469
    8. '

' → logprob: -12.530021667480469
    9. '                   ' → logprob: -13.030021667480469
    10. '  ' → logprob: -13.155021667480469

Token 785: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '
' → logprob: -15.6251802444458
    4. '   ' → logprob: -15.8751802444458
    5. '  ' → logprob: -18.250179290771484
    6. 'and' → logprob: -18.375179290771484
    7. '#' → logprob: -18.875179290771484
    8. '    ' → logprob: -19.000179290771484
    9. '       ' → logprob: -19.000179290771484
    10. '

' → logprob: -19.250179290771484

Token 786: ' friend' (ID: 5168)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26733073592185974
    2. ' opponent' → logprob: -1.7673307657241821
    3. ' ' → logprob: -3.1423306465148926
    4. ' for' → logprob: -5.142330646514893
    5. 'op' → logprob: -5.142330646514893
    6. ':' → logprob: -6.767330646514893
    7. '   ' → logprob: -6.892330646514893
    8. '#' → logprob: -7.017330646514893
    9. ' op' → logprob: -7.017330646514893
    10. ' #' → logprob: -7.017330646514893

Token 787: ' A' (ID: 355)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07712536305189133
    2. '   ' → logprob: -2.702125310897827
    3. 'def' → logprob: -6.077125549316406
    4. '

' → logprob: -6.327125549316406
    5. '<|end|>' → logprob: -6.327125549316406
    6. '    
' → logprob: -7.077125549316406
    7. ' def' → logprob: -9.202125549316406
    8. '        
' → logprob: -9.452125549316406
    9. '
' → logprob: -9.577125549316406
    10. '<|end|>' → logprob: -9.702125549316406

Token 788: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40810489654541016
    2. '   ' → logprob: -1.2831048965454102
    3. '       ' → logprob: -3.03310489654541
    4. '

' → logprob: -5.15810489654541
    5. 'def' → logprob: -6.65810489654541
    6. '<|end|>' → logprob: -6.90810489654541
    7. '    
' → logprob: -7.15810489654541
    8. '        
' → logprob: -8.53310489654541
    9. 'self' → logprob: -9.03310489654541
    10. ',' → logprob: -9.03310489654541

Token 789: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07218082249164581
    2. 'def' → logprob: -3.19718074798584
    3. '
' → logprob: -3.57218074798584
    4. '    
' → logprob: -8.44718074798584
    5. ' def' → logprob: -8.69718074798584
    6. '<|end|>' → logprob: -9.19718074798584
    7. '```' → logprob: -10.07218074798584
    8. '       ' → logprob: -10.07218074798584
    9. '	def' → logprob: -10.19718074798584
    10. '        
' → logprob: -10.94718074798584

Token 790: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -5.526570384972729e-05
    2. '   ' → logprob: -10.500055313110352
    3. ' def' → logprob: -10.500055313110352
    4. '	def' → logprob: -15.875055313110352
    5. '
' → logprob: -18.50005531311035
    6. '    
' → logprob: -19.37505531311035
    7. ' ' → logprob: -20.25005531311035
    8. 'de' → logprob: -21.12505531311035
    9. '```' → logprob: -21.37505531311035
    10. '  ' → logprob: -21.50005531311035

Token 791: ' run' (ID: 2461)
  Prédit: 'play'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'play' → logprob: -0.031642843037843704
    2. ' play' → logprob: -4.281642913818359
    3. 'next' → logprob: -4.781642913818359
    4. 'switch' → logprob: -4.781642913818359
    5. 'def' → logprob: -8.78164291381836
    6. 'make' → logprob: -9.03164291381836
    7. 'run' → logprob: -9.40664291381836
    8. ' next' → logprob: -9.53164291381836
    9. ' switch' → logprob: -9.90664291381836
    10. 'take' → logprob: -11.28164291381836

Token 792: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00046737297088839114
    2. '()' → logprob: -8.125467300415039
    3. '(' → logprob: -9.125467300415039
    4. '_game' → logprob: -10.250467300415039
    5. '_turn' → logprob: -11.500467300415039
    6. 'self' → logprob: -12.000467300415039
    7. '   ' → logprob: -12.500467300415039
    8. '():
' → logprob: -13.250467300415039
    9. '_(' → logprob: -13.625467300415039
    10. '_' → logprob: -13.875467300415039

Token 793: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025094160810112953
    2. ')' → logprob: -3.7750942707061768
    3. '_turn' → logprob: -7.400094032287598
    4. 'self' → logprob: -8.025094032287598
    5. '())' → logprob: -8.275094032287598
    6. '   ' → logprob: -8.775094032287598
    7. '):
' → logprob: -8.900094032287598
    8. '_game' → logprob: -9.275094032287598
    9. '()):
' → logprob: -9.775094032287598
    10. '()' → logprob: -10.150094032287598

Token 794: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -11.125024795532227
    3. '():
' → logprob: -12.500024795532227
    4. '   ' → logprob: -13.375024795532227
    5. '       ' → logprob: -13.375024795532227
    6. 'self' → logprob: -13.500024795532227
    7. '():' → logprob: -14.000024795532227
    8. 'def' → logprob: -15.375024795532227
    9. '(
' → logprob: -15.750024795532227
    10. ':' → logprob: -16.000024795532227

Token 795: ' str' (ID: 989)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.052787959575653076
    2. 'Optional' → logprob: -3.302788019180298
    3. ' bool' → logprob: -4.927787780761719
    4. 'int' → logprob: -5.302787780761719
    5. 'Iterator' → logprob: -6.927787780761719
    6. ' Optional' → logprob: -7.302787780761719
    7. 'None' → logprob: -7.802787780761719
    8. 'str' → logprob: -8.177787780761719
    9. ' int' → logprob: -10.552787780761719
    10. 'List' → logprob: -11.177787780761719

Token 796: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21087315678596497
    2. '       ' → logprob: -1.7108731269836426
    3. ':
' → logprob: -5.835873126983643
    4. '(' → logprob: -6.085873126983643
    5. '(
' → logprob: -6.335873126983643
    6. ':' → logprob: -6.710873126983643
    7. '   ' → logprob: -7.210873126983643
    8. '():
' → logprob: -7.960873126983643
    9. '():' → logprob: -9.7108736038208
    10. 'self' → logprob: -10.4608736038208

Token 797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031004699412733316
    2. ' while' → logprob: -6.253100395202637
    3. 'while' → logprob: -6.753100395202637
    4. '   ' → logprob: -13.378100395202637
    5. '```' → logprob: -15.128100395202637
    6. '      ' → logprob: -15.128100395202637
    7. '    ' → logprob: -15.253100395202637
    8. ' if' → logprob: -15.253100395202637
    9. '           ' → logprob: -15.503100395202637
    10. 'if' → logprob: -15.628100395202637

Token 798: ' """
' (ID: 7037)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18006497621536255
    2. '       ' → logprob: -1.9300649166107178
    3. ' while' → logprob: -3.9300649166107178
    4. '	while' → logprob: -13.055065155029297
    5. '   ' → logprob: -14.680065155029297
    6. 'import' → logprob: -16.055065155029297
    7. 'While' → logprob: -16.805065155029297
    8. '           ' → logprob: -17.930065155029297
    9. '```' → logprob: -17.930065155029297
    10. 'turn' → logprob: -18.180065155029297

Token 799: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06691639870405197
    2. '       ' → logprob: -2.8169164657592773
    3. ' while' → logprob: -5.441916465759277
    4. 'player' → logprob: -8.066916465759277
    5. 'result' → logprob: -8.566916465759277
    6. 'current' → logprob: -9.691916465759277
    7. '           ' → logprob: -11.441916465759277
    8. 'prev' → logprob: -11.566916465759277
    9. 'if' → logprob: -12.191916465759277
    10. '"' → logprob: -12.816916465759277

Token 800: ' Runs' (ID: 106285)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4802922308444977
    2. '       ' → logprob: -1.4802922010421753
    3. 'player' → logprob: -2.355292320251465
    4. 'current' → logprob: -3.605292320251465
    5. 'turn' → logprob: -4.355292320251465
    6. 'result' → logprob: -4.855292320251465
    7. ' while' → logprob: -4.980292320251465
    8. 'state' → logprob: -6.605292320251465
    9. 'status' → logprob: -7.230292320251465
    10. ' player' → logprob: -7.605292320251465

Token 801: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15257003903388977
    2. ' the' → logprob: -2.4025700092315674
    3. ' until' → logprob: -4.7775702476501465
    4. 'while' → logprob: -4.7775702476501465
    5. '()' → logprob: -5.0275702476501465
    6. ' while' → logprob: -5.1525702476501465
    7. '
' → logprob: -5.2775702476501465
    8. 'the' → logprob: -5.2775702476501465
    9. '()
' → logprob: -5.5275702476501465
    10. ' a' → logprob: -6.5275702476501465

Token 802: ' one' (ID: 1001)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.35108405351638794
    2. 'self' → logprob: -1.8510839939117432
    3. ' True' → logprob: -2.101083993911743
    4. ' self' → logprob: -4.351084232330322
    5. '       ' → logprob: -5.851084232330322
    6. 'the' → logprob: -8.351083755493164
    7. ' the' → logprob: -8.351083755493164
    8. 'not' → logprob: -8.851083755493164
    9. '(True' → logprob: -9.351083755493164
    10. ' not' → logprob: -9.476083755493164

Token 803: ' player' (ID: 5033)
  Prédit: ' player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' player' → logprob: -0.060846395790576935
    2. 'player' → logprob: -3.1858463287353516
    3. ' of' → logprob: -4.435846328735352
    4. ' player's' → logprob: -5.935846328735352
    5. '   ' → logprob: -6.685846328735352
    6. '_player' → logprob: -7.685846328735352
    7. '       ' → logprob: -8.310846328735352
    8. 'of' → logprob: -8.435846328735352
    9. 'def' → logprob: -9.060846328735352
    10. '(player' → logprob: -9.060846328735352

Token 804: ' loses' (ID: 63582)
  Prédit: 'los'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'los' → logprob: -0.6993847489356995
    2. ' loses' → logprob: -0.6993847489356995
    3. 'cannot' → logprob: -6.199384689331055
    4. '   ' → logprob: -6.324384689331055
    5. '       ' → logprob: -7.449384689331055
    6. 'fails' → logprob: -7.699384689331055
    7. ' cannot' → logprob: -8.074384689331055
    8. '_' → logprob: -8.199384689331055
    9. '```' → logprob: -9.074384689331055
    10. 'def' → logprob: -9.074384689331055

Token 805: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11414565145969391
    2. '.' → logprob: -3.4891457557678223
    3. '():' → logprob: -3.6141457557678223
    4. '()' → logprob: -3.9891457557678223
    5. ':' → logprob: -4.114145755767822
    6. '():
' → logprob: -4.989145755767822
    7. '().' → logprob: -5.989145755767822
    8. '()
' → logprob: -6.239145755767822
    9. ',' → logprob: -7.114145755767822
    10. ':
' → logprob: -7.239145755767822

Token 806: ' empty' (ID: 8213)
  Prédit: 'los'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'los' → logprob: -0.5005256533622742
    2. ' losing' → logprob: -1.625525712966919
    3. 'self' → logprob: -2.625525712966919
    4. 'having' → logprob: -3.625525712966919
    5. 'not' → logprob: -3.750525712966919
    6. 'return' → logprob: -3.875525712966919
    7. ' having' → logprob: -4.50052547454834
    8. 'f' → logprob: -4.75052547454834
    9. 'running' → logprob: -5.12552547454834
    10. ' self' → logprob: -5.37552547454834

Token 807: ' set' (ID: 920)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9043840765953064
    2. 'self' → logprob: -1.4043841361999512
    3. ' piles' → logprob: -2.029384136199951
    4. ' self' → logprob: -2.404384136199951
    5. ' pile' → logprob: -2.779384136199951
    6. '(self' → logprob: -3.404384136199951
    7. 'pile' → logprob: -4.279384136199951
    8. '   ' → logprob: -5.404384136199951
    9. ' list' → logprob: -5.529384136199951
    10. '_p' → logprob: -5.529384136199951

Token 808: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7352171540260315
    2. ' of' → logprob: -0.8602171540260315
    3. '   ' → logprob: -2.9852170944213867
    4. ' piles' → logprob: -3.9852170944213867
    5. '
' → logprob: -5.110217094421387
    6. ' or' → logprob: -5.485217094421387
    7. '.
' → logprob: -5.610217094421387
    8. ':
' → logprob: -6.110217094421387
    9. '.' → logprob: -6.110217094421387
    10. 'p' → logprob: -6.235217094421387

Token 809: ' Step' (ID: 22291)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0290441513061523
    2. 'play' → logprob: -1.1540441513061523
    3. 'step' → logprob: -2.1540441513061523
    4. ' a' → logprob: -2.9040441513061523
    5. 'move' → logprob: -3.4040441513061523
    6. 'their' → logprob: -3.5290441513061523
    7. 'turn' → logprob: -3.7790441513061523
    8. 'transform' → logprob: -3.7790441513061523
    9. 'self' → logprob: -4.779044151306152
    10. ' move' → logprob: -4.904044151306152

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014358828775584698
    2. '2' → logprob: -9.500144004821777
    3. ' ' → logprob: -9.875144004821777
    4. '   ' → logprob: -12.375144004821777
    5. '_' → logprob: -12.500144004821777
    6. '       ' → logprob: -12.625144004821777
    7. '3' → logprob: -13.250144004821777
    8. '(' → logprob: -14.000144004821777
    9. '-' → logprob: -14.500144004821777
    10. '#' → logprob: -14.625144004821777

Token 811: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02329963445663452
    2. '
' → logprob: -3.8982996940612793
    3. '()
' → logprob: -7.023299694061279
    4. '.
' → logprob: -7.773299694061279
    5. '.' → logprob: -7.898299694061279
    6. '        
' → logprob: -8.148299217224121
    7. ':
' → logprob: -8.773299217224121
    8. ',' → logprob: -8.898299217224121
    9. '()' → logprob: -9.023299217224121
    10. ':' → logprob: -9.023299217224121

Token 812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004848922253586352
    2. 'while' → logprob: -8.000484466552734
    3. '
' → logprob: -9.500484466552734
    4. ' while' → logprob: -9.625484466552734
    5. '```' → logprob: -12.125484466552734
    6. '   ' → logprob: -13.500484466552734
    7. '        
' → logprob: -14.250484466552734
    8. '           ' → logprob: -14.375484466552734
    9. '``' → logprob: -16.250484466552734
    10. 'While' → logprob: -16.750484466552734

Token 813: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019159071380272508
    2. '
' → logprob: -7.00191593170166
    3. 'while' → logprob: -7.00191593170166
    4. 'player' → logprob: -10.12691593170166
    5. ' while' → logprob: -10.37691593170166
    6. '```' → logprob: -11.75191593170166
    7. '   ' → logprob: -11.87691593170166
    8. 'current' → logprob: -12.50191593170166
    9. ' player' → logprob: -14.25191593170166
    10. 'result' → logprob: -14.50191593170166

Token 814: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07097232341766357
    2. ' "' → logprob: -2.820972442626953
    3. ''' → logprob: -5.070972442626953
    4. '"You' → logprob: -7.070972442626953
    5. '   ' → logprob: -7.445972442626953
    6. '"user' → logprob: -8.070972442626953
    7. '"The' → logprob: -8.195972442626953
    8. '["' → logprob: -8.570972442626953
    9. ' '' → logprob: -9.070972442626953
    10. '"A' → logprob: -9.445972442626953

Token 815: 'win' (ID: 11668)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.35544493794441223
    2. 'You' → logprob: -1.6054449081420898
    3. '"You' → logprob: -2.73044490814209
    4. 'YOU' → logprob: -4.35544490814209
    5. ''' → logprob: -4.98044490814209
    6. 'you' → logprob: -5.98044490814209
    7. '"A' → logprob: -6.23044490814209
    8. 'First' → logprob: -6.35544490814209
    9. 'Player' → logprob: -6.35544490814209
    10. 'A' → logprob: -7.48044490814209

Token 816: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0004883344518020749
    2. '"
' → logprob: -8.25048828125
    3. '\n' → logprob: -9.00048828125
    4. 'ner' → logprob: -10.00048828125
    5. 'ning' → logprob: -10.62548828125
    6. '"\' → logprob: -11.50048828125
    7. '"
' → logprob: -11.87548828125
    8. 'n' → logprob: -12.62548828125
    9. ' "' → logprob: -12.87548828125
    10. '"

' → logprob: -13.50048828125

Token 817: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34983113408088684
    2. ' or' → logprob: -1.4748311042785645
    3. '       ' → logprob: -3.2248311042785645
    4. ' for' → logprob: -4.2248311042785645
    5. 'if' → logprob: -4.7248311042785645
    6. '   ' → logprob: -7.0998311042785645
    7. 'or' → logprob: -7.8498311042785645
    8. 'self' → logprob: -7.9748311042785645
    9. ' ' → logprob: -8.224831581115723
    10. '"' → logprob: -8.474831581115723

Token 818: ' player' (ID: 5033)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020552983507514
    2. ' self' → logprob: -3.89555287361145
    3. '"' → logprob: -12.645552635192871
    4. ' ' → logprob: -12.770552635192871
    5. '
' → logprob: -13.145552635192871
    6. '(self' → logprob: -13.770552635192871
    7. '   ' → logprob: -14.395552635192871
    8. '[self' → logprob: -15.145552635192871
    9. '       ' → logprob: -15.645552635192871
    10. ' "' → logprob: -16.145553588867188

Token 819: ' ' (ID: 220)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.583518147468567
    2. '1' → logprob: -1.833518147468567
    3. ' ' → logprob: -1.833518147468567
    4. 's' → logprob: -1.958518147468567
    5. 'self' → logprob: -2.4585180282592773
    6. '0' → logprob: -2.7085180282592773
    7. '_' → logprob: -2.9585180282592773
    8. ' self' → logprob: -3.4585180282592773
    9. ' _' → logprob: -3.7085180282592773
    10. '==' → logprob: -3.8335180282592773

Token 820: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1210893914103508
    2. ' self' → logprob: -3.496089458465576
    3. 's' → logprob: -3.621089458465576
    4. '==' → logprob: -3.746089458465576
    5. ' ==' → logprob: -4.246089458465576
    6. '0' → logprob: -5.371089458465576
    7. ' ' → logprob: -5.496089458465576
    8. '   ' → logprob: -6.246089458465576
    9. '[self' → logprob: -6.621089458465576
    10. '1' → logprob: -6.746089458465576

Token 821: ' wins' (ID: 25327)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4766465723514557
    2. ' wins' → logprob: -1.6016465425491333
    3. ' can' → logprob: -1.8516465425491333
    4. 'wins' → logprob: -4.851646423339844
    5. ' ==' → logprob: -4.976646423339844
    6. ' will' → logprob: -6.476646423339844
    7. 'else' → logprob: -6.976646423339844
    8. ' has' → logprob: -6.976646423339844
    9. '   ' → logprob: -7.726646423339844
    10. ' ' → logprob: -7.851646423339844

Token 822: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21589837968349457
    2. ',' → logprob: -1.9658983945846558
    3. ' else' → logprob: -3.590898275375366
    4. '
' → logprob: -3.965898275375366
    5. ' or' → logprob: -5.840898513793945
    6. '\n' → logprob: -5.840898513793945
    7. ' and' → logprob: -7.840898513793945
    8. 'else' → logprob: -7.965898513793945
    9. ',
' → logprob: -8.590898513793945
    10. '()' → logprob: -8.715898513793945

Token 823: ' else' (ID: 1203)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.020221959799528122
    2. ' else' → logprob: -4.145222187042236
    3. '       ' → logprob: -6.145222187042236
    4. ' "' → logprob: -6.770222187042236
    5. '"\' → logprob: -8.145221710205078
    6. 'else' → logprob: -8.270221710205078
    7. ' or' → logprob: -8.770221710205078
    8. '           ' → logprob: -9.895221710205078
    9. ' return' → logprob: -10.395221710205078
    10. '
' → logprob: -10.520221710205078

Token 824: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47410285472869873
    2. ' "' → logprob: -0.9741028547286987
    3. ''' → logprob: -11.224102973937988
    4. '"user' → logprob: -12.224102973937988
    5. ' '' → logprob: -12.849102973937988
    6. ' ' → logprob: -13.349102973937988
    7. '
' → logprob: -13.849102973937988
    8. ' ' → logprob: -13.849102973937988
    9. '   ' → logprob: -15.349102973937988
    10. '"\' → logprob: -16.224102020263672

Token 825: 'lose' (ID: 6719)
  Prédit: 'lose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.2667802572250366
    2. '"' → logprob: -1.7667802572250366
    3. 'loss' → logprob: -2.766780376434326
    4. ' lose' → logprob: -8.141779899597168
    5. ''' → logprob: -9.641779899597168
    6. 'lo' → logprob: -10.766779899597168
    7. 'LOSE' → logprob: -11.516779899597168
    8. 'los' → logprob: -12.266779899597168
    9. 'fail' → logprob: -12.266779899597168
    10. ' loss' → logprob: -12.641779899597168

Token 826: '".
' (ID: 26880)
  Prédit: '"
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.25201693177223206
    2. '"' → logprob: -1.5020169019699097
    3. '\n' → logprob: -10.2520170211792
    4. '()' → logprob: -11.1270170211792
    5. '"
' → logprob: -11.1270170211792
    6. '"""
' → logprob: -11.6270170211792
    7. '()"' → logprob: -12.2520170211792
    8. '"\' → logprob: -13.0020170211792
    9. 'def' → logprob: -13.3770170211792
    10. '")' → logprob: -13.6270170211792

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04868513345718384
    2. '
' → logprob: -3.048685073852539
    3. '        
' → logprob: -10.423685073852539
    4. ' while' → logprob: -10.673685073852539
    5. '```' → logprob: -10.673685073852539
    6. 'while' → logprob: -11.298685073852539
    7. '
' → logprob: -12.548685073852539
    8. '    
' → logprob: -13.548685073852539
    9. '   ' → logprob: -13.548685073852539
    10. '\n' → logprob: -13.923685073852539

Token 828: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005398084758780897
    2. '
' → logprob: -8.125539779663086
    3. 'while' → logprob: -8.750539779663086
    4. 'current' → logprob: -10.625539779663086
    5. '```' → logprob: -11.000539779663086
    6. 'player' → logprob: -11.000539779663086
    7. '        
' → logprob: -11.375539779663086
    8. ' while' → logprob: -11.750539779663086
    9. '   ' → logprob: -12.625539779663086
    10. '           ' → logprob: -13.875539779663086

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009343287092633545
    2. 'while' → logprob: -7.00093412399292
    3. ' while' → logprob: -11.250934600830078
    4. '   ' → logprob: -12.000934600830078
    5. '```' → logprob: -13.000934600830078
    6. '
' → logprob: -14.000934600830078
    7. 'current' → logprob: -14.750934600830078
    8. '           ' → logprob: -16.375934600830078
    9. '	while' → logprob: -16.375934600830078
    10. 'player' → logprob: -17.625934600830078

Token 830: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00929191429167986
    2. '       ' → logprob: -5.259292125701904
    3. ' while' → logprob: -5.509292125701904
    4. '	while' → logprob: -14.009291648864746
    5. '   ' → logprob: -17.384292602539062
    6. 'While' → logprob: -18.384292602539062
    7. '```' → logprob: -18.384292602539062
    8. '
' → logprob: -18.884292602539062
    9. 'import' → logprob: -19.009292602539062
    10. 'current' → logprob: -19.634292602539062

Token 831: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5842975974082947
    2. 'True' → logprob: -1.4592976570129395
    3. ' True' → logprob: -2.3342976570129395
    4. ' self' → logprob: -2.7092976570129395
    5. ' not' → logprob: -3.7092976570129395
    6. 'not' → logprob: -3.8342976570129395
    7. '       ' → logprob: -8.334297180175781
    8. '   ' → logprob: -8.834297180175781
    9. '(True' → logprob: -9.834297180175781
    10. 'len' → logprob: -10.459297180175781

Token 832: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43153879046440125
    2. ':
' → logprob: -1.0565388202667236
    3. '           ' → logprob: -5.9315385818481445
    4. '():
' → logprob: -10.306538581848145
    5. '<|end|>' → logprob: -10.306538581848145
    6. '):
' → logprob: -10.681538581848145
    7. '<|end|>' → logprob: -10.806538581848145
    8. ',' → logprob: -10.806538581848145
    9. '[' → logprob: -11.806538581848145
    10. '=' → logprob: -12.056538581848145

Token 833: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.755678961984813e-05
    2. 'if' → logprob: -9.750077247619629
    3. 'result' → logprob: -12.000077247619629
    4. ' if' → logprob: -12.125077247619629
    5. 'success' → logprob: -13.250077247619629
    6. '
' → logprob: -13.750077247619629
    7. 'player' → logprob: -14.125077247619629
    8. 'play' → logprob: -14.125077247619629
    9. '       ' → logprob: -14.250077247619629
    10. '```' → logprob: -15.000077247619629

Token 834: ' alive' (ID: 23757)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5992071032524109
    2. '           ' → logprob: -1.2242071628570557
    3. 'if' → logprob: -2.0992071628570557
    4. 'res' → logprob: -4.599206924438477
    5. 'has' → logprob: -5.849206924438477
    6. '               ' → logprob: -5.849206924438477
    7. 'success' → logprob: -5.974206924438477
    8. 'continue' → logprob: -5.974206924438477
    9. 'alive' (adapté à ' alive') → logprob: -6.474206924438477
    10. 'continued' → logprob: -6.474206924438477

Token 835: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0992165133357048
    2. ':' → logprob: -2.7242164611816406
    3. '=' → logprob: -4.099216461181641
    4. ':
' → logprob: -5.474216461181641
    5. '_player' → logprob: -5.974216461181641
    6. '_' → logprob: -6.849216461181641
    7. '_alive' → logprob: -7.474216461181641
    8. 'player' → logprob: -7.724216461181641
    9. ' and' → logprob: -7.724216461181641
    10. '_players' → logprob: -7.974216461181641

Token 836: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029760558158159256
    2. ' self' → logprob: -3.5297605991363525
    3. '           ' → logprob: -11.529760360717773
    4. '(self' → logprob: -15.904760360717773
    5. '               ' → logprob: -17.779760360717773
    6. '	self' → logprob: -17.904760360717773
    7. '[self' → logprob: -18.654760360717773
    8. '=self' → logprob: -19.279760360717773
    9. '                   ' → logprob: -19.654760360717773
    10. '   ' → logprob: -19.779760360717773

Token 837: '.game' (ID: 17309)
  Prédit: '.game'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.game' → logprob: -0.02327168732881546
    2. 'game' → logprob: -3.7732717990875244
    3. '.play' → logprob: -11.648271560668945
    4. '.current' → logprob: -12.398271560668945
    5. '.' → logprob: -12.523271560668945
    6. '.run' → logprob: -12.648271560668945
    7. '	game' → logprob: -12.898271560668945
    8. 'play' → logprob: -13.648271560668945
    9. ' .' → logprob: -14.398271560668945
    10. 'current' → logprob: -14.898271560668945

Token 838: '.play' (ID: 23389)
  Prédit: '.play'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.play' → logprob: -1.8789383830153383e-05
    2. 'play' → logprob: -11.250019073486328
    3. '.step' → logprob: -12.500019073486328
    4. '.' → logprob: -13.375019073486328
    5. '	play' → logprob: -16.375019073486328
    6. ' .' → logprob: -16.500019073486328
    7. '   ' → logprob: -16.875019073486328
    8. '(play' → logprob: -17.125019073486328
    9. ' play' → logprob: -17.500019073486328
    10. '.perform' → logprob: -17.500019073486328

Token 839: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -6.0629870858974755e-05
    2. 'turn' → logprob: -10.37506103515625
    3. '()' → logprob: -10.62506103515625
    4. 'Turn' → logprob: -13.50006103515625
    5. '()
' → logprob: -13.87506103515625
    6. '1' → logprob: -14.25006103515625
    7. '```' → logprob: -14.50006103515625
    8. '_' → logprob: -14.62506103515625
    9. '   ' → logprob: -15.12506103515625
    10. 'eturn' → logprob: -16.00006103515625

Token 840: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.13157393038272858
    2. '()' → logprob: -2.1315739154815674
    3. '           ' → logprob: -5.3815741539001465
    4. '()
' → logprob: -10.631573677062988
    5. '()

' → logprob: -12.756573677062988
    6. '            
' → logprob: -13.131573677062988
    7. '               ' → logprob: -13.756573677062988
    8. '       ' → logprob: -14.131573677062988
    9. '()\' → logprob: -14.131573677062988
    10. '():
' → logprob: -14.756573677062988

Token 841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.688212614681106e-05
    2. '               ' → logprob: -11.625017166137695
    3. '<|end|>' → logprob: -12.875017166137695
    4. '
' → logprob: -13.875017166137695
    5. ' if' → logprob: -14.000017166137695
    6. '       ' → logprob: -14.000017166137695
    7. '```' → logprob: -14.000017166137695
    8. '            
' → logprob: -14.125017166137695
    9. 'if' → logprob: -15.000017166137695
    10. '<|end|>' → logprob: -15.000017166137695

Token 842: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04047683626413345
    2. '           ' → logprob: -3.5404767990112305
    3. ' if' → logprob: -4.5404767990112305
    4. '       ' → logprob: -14.91547679901123
    5. '   ' → logprob: -15.66547679901123
    6. '	if' → logprob: -16.040477752685547
    7. 'If' → logprob: -16.915477752685547
    8. '               ' → logprob: -16.915477752685547
    9. '		' → logprob: -18.040477752685547
    10. ' ' → logprob: -18.415477752685547

Token 843: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.19031552970409393
    2. 'not' → logprob: -1.8153154850006104
    3. ' alive' → logprob: -5.1903157234191895
    4. 'alive' → logprob: -5.4403157234191895
    5. '           ' → logprob: -7.4403157234191895
    6. ' ' → logprob: -12.565315246582031
    7. '(not' → logprob: -12.690315246582031
    8. '	not' → logprob: -12.690315246582031
    9. '               ' → logprob: -13.065315246582031
    10. '            ' → logprob: -13.065315246582031

Token 844: ' alive' (ID: 23757)
  Prédit: ' alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alive' → logprob: -0.6931659579277039
    2. 'alive' → logprob: -0.6931659579277039
    3. '_alive' → logprob: -11.19316577911377
    4. ' ' → logprob: -12.56816577911377
    5. 'Alive' → logprob: -14.06816577911377
    6. 'al' → logprob: -14.31816577911377
    7. 'self' → logprob: -17.443166732788086
    8. '
' → logprob: -17.443166732788086
    9. ' ' → logprob: -18.693166732788086
    10. '   ' → logprob: -18.943166732788086

Token 845: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.38700446486473083
    2. ':' → logprob: -1.1370044946670532
    3. '           ' → logprob: -9.762004852294922
    4. ' or' → logprob: -10.137004852294922
    5. '               ' → logprob: -10.887004852294922
    6. ':
' → logprob: -11.512004852294922
    7. ':return' → logprob: -12.887004852294922
    8. ':

' → logprob: -13.012004852294922
    9. '):
' → logprob: -14.512004852294922
    10. '       ' → logprob: -14.512004852294922

Token 846: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001203923486173153
    2. '           ' → logprob: -7.251204013824463
    3. '
' → logprob: -8.501203536987305
    4. ' return' → logprob: -8.876203536987305
    5. ':
' → logprob: -9.126203536987305
    6. ':' → logprob: -10.876203536987305
    7. 'return' → logprob: -12.126203536987305
    8. ',' → logprob: -13.126203536987305
    9. ' break' → logprob: -13.251203536987305
    10. '\n' → logprob: -13.376203536987305

Token 847: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4990597069263458
    2. 'return' → logprob: -0.9990596771240234
    3. '               ' → logprob: -3.7490596771240234
    4. '           ' → logprob: -6.874059677124023
    5. ' break' → logprob: -9.874059677124023
    6. 'break' → logprob: -10.124059677124023
    7. ' if' → logprob: -13.124059677124023
    8. 'if' → logprob: -13.624059677124023
    9. '       ' → logprob: -14.124059677124023
    10. '                   ' → logprob: -14.249059677124023

Token 848: ' current' (ID: 2208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008016125299036503
    2. ' return' → logprob: -5.008016109466553
    3. '               ' → logprob: -7.008016109466553
    4. 'winner' → logprob: -8.133016586303711
    5. 'if' → logprob: -9.758016586303711
    6. '#' → logprob: -11.008016586303711
    7. ' winner' → logprob: -11.008016586303711
    8. 'break' → logprob: -12.008016586303711
    9. 'result' → logprob: -13.008016586303711
    10. '           ' → logprob: -13.633016586303711

Token 849: ' player' (ID: 5033)
  Prédit: '_player'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.00012166214582975954
    2. '_' → logprob: -9.7501220703125
    3. ' _' → logprob: -10.2501220703125
    4. ' player' → logprob: -11.5001220703125
    5. 'player' → logprob: -11.5001220703125
    6. 'Player' → logprob: -13.1251220703125
    7. '           ' → logprob: -13.5001220703125
    8. '_PLAYER' → logprob: -13.6251220703125
    9. '_user' → logprob: -14.0001220703125
    10. '   ' → logprob: -14.0001220703125

Token 850: ' lost' (ID: 8803)
  Prédit: ' loses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loses' → logprob: -0.09121386706829071
    2. ' lost' → logprob: -2.7162139415740967
    3. 'lost' → logprob: -4.466213703155518
    4. 'los' → logprob: -5.716213703155518
    5. 'lose' → logprob: -5.716213703155518
    6. ' has' → logprob: -7.091213703155518
    7. ' lose' → logprob: -7.716213703155518
    8. '           ' → logprob: -7.841213703155518
    9. '_losses' → logprob: -7.966213703155518
    10. '               ' → logprob: -8.216214179992676

Token 851: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008835558779537678
    2. '
' → logprob: -4.758835792541504
    3. ' return' → logprob: -9.383835792541504
    4. ',' → logprob: -10.883835792541504
    5. ' and' → logprob: -10.883835792541504
    6. ':
' → logprob: -11.008835792541504
    7. '                
' → logprob: -11.008835792541504
    8. '\n' → logprob: -11.508835792541504
    9. 'return' → logprob: -11.508835792541504
    10. '           ' → logprob: -11.633835792541504

Token 852: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007619839743711054
    2. '
' → logprob: -7.250761985778809
    3. ' return' → logprob: -11.250761985778809
    4. 'return' → logprob: -11.625761985778809
    5. '\n' → logprob: -12.125761985778809
    6. ':
' → logprob: -12.250761985778809
    7. '                
' → logprob: -12.375761985778809
    8. ' =' → logprob: -12.875761985778809
    9. '                   ' → logprob: -12.875761985778809
    10. ' and' → logprob: -13.000761985778809

Token 853: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.47689229249954224
    2. 'return' (adapté à ' return') → logprob: -0.9768922924995422
    3. '               ' → logprob: -5.976892471313477
    4. ' if' → logprob: -8.601892471313477
    5. 'if' → logprob: -9.476892471313477
    6. ' winner' → logprob: -12.226892471313477
    7. '           ' → logprob: -12.351892471313477
    8. ' break' → logprob: -13.601892471313477
    9. 'winner' → logprob: -13.601892471313477
    10. 'break' → logprob: -13.976892471313477

Token 854: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2523561716079712
    2. ' "' → logprob: -1.5023561716079712
    3. ''' → logprob: -8.12735652923584
    4. ' '' → logprob: -10.00235652923584
    5. ' ' → logprob: -10.25235652923584
    6. '("' → logprob: -10.87735652923584
    7. ' ("' → logprob: -11.12735652923584
    8. '   ' → logprob: -12.00235652923584
    9. '["' → logprob: -12.50235652923584
    10. '"user' → logprob: -12.75235652923584

Token 855: 'lose' (ID: 6719)
  Prédit: 'lose'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.0012088033836334944
    2. 'win' → logprob: -6.751208782196045
    3. ' lose' → logprob: -10.751209259033203
    4. '"' → logprob: -11.126209259033203
    5. 'loss' → logprob: -13.251209259033203
    6. 'LOSE' → logprob: -14.376209259033203
    7. 'los' → logprob: -16.626209259033203
    8. 'fail' → logprob: -17.751209259033203
    9. 'Lose' → logprob: -18.626209259033203
    10. ' win' → logprob: -19.251209259033203

Token 856: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07908200472593307
    2. '"
' → logprob: -2.5790820121765137
    3. '\n' → logprob: -8.579081535339355
    4. '0' → logprob: -13.704081535339355
    5. 'if' → logprob: -13.829081535339355
    6. '"
' → logprob: -14.329081535339355
    7. ' if' → logprob: -14.829081535339355
    8. ''' → logprob: -15.204081535339355
    9. '"`
' → logprob: -15.829081535339355
    10. '"

' → logprob: -15.954081535339355

Token 857: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029920801520347595
    2. '
' → logprob: -4.15492057800293
    3. ' if' → logprob: -5.02992057800293
    4. '\n' → logprob: -6.15492057800293
    5. '            
' → logprob: -6.40492057800293
    6. '<|end|>' → logprob: -7.40492057800293
    7. 'if' → logprob: -7.52992057800293
    8. 'else' → logprob: -7.52992057800293
    9. '		' → logprob: -7.77992057800293
    10. ' else' → logprob: -8.27992057800293

Token 858: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00865960493683815
    2. ' self' → logprob: -4.758659839630127
    3. '           ' → logprob: -10.008659362792969
    4. '(self' → logprob: -16.88365936279297
    5. '               ' → logprob: -18.63365936279297
    6. '                   ' → logprob: -19.13365936279297
    7. '       ' → logprob: -19.63365936279297
    8. '   ' → logprob: -19.63365936279297
    9. 'not' → logprob: -20.13365936279297
    10. '	self' → logprob: -20.38365936279297

Token 859: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00020973898062948138
    2. 'current' → logprob: -8.50020980834961
    3. '.user' → logprob: -12.00020980834961
    4. '.' → logprob: -17.37520980834961
    5. ' current' → logprob: -17.75020980834961
    6. 'user' → logprob: -18.00020980834961
    7. '           ' → logprob: -18.00020980834961
    8. 'urrent' → logprob: -18.50020980834961
    9. '[current' → logprob: -18.62520980834961
    10. 'Current' → logprob: -19.00020980834961

Token 860: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -0.0015834240475669503
    2. '.player' → logprob: -7.126583576202393
    3. 'player' → logprob: -7.501583576202393
    4. '_user' → logprob: -8.501583099365234
    5. '_PLAYER' → logprob: -12.001583099365234
    6. 'Player' → logprob: -12.751583099365234
    7. ' player' → logprob: -12.876583099365234
    8. '   ' → logprob: -13.376583099365234
    9. 'self' → logprob: -13.501583099365234
    10. '_game' → logprob: -13.626583099365234

Token 861: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47632476687431335
    2. ' ==' → logprob: -0.9763247966766357
    3. ' else' → logprob: -6.351324558258057
    4. 'else' → logprob: -7.601324558258057
    5. '==
' → logprob: -15.476325035095215
    6. ' ' → logprob: -15.726325035095215
    7. ' ' → logprob: -16.1013240814209
    8. '=' → logprob: -16.1013240814209
    9. '()==' → logprob: -16.7263240814209
    10. '
' → logprob: -16.9763240814209

Token 862: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005969968624413013
    2. '1' → logprob: -7.62559700012207
    3. ' ' → logprob: -9.12559700012207
    4. '   ' → logprob: -16.37559700012207
    5. 'self' → logprob: -17.68809700012207
    6. '
' → logprob: -18.18809700012207
    7. '```' → logprob: -18.43809700012207
    8. '=' → logprob: -18.56309700012207
    9. '  ' → logprob: -18.81309700012207
    10. '[' → logprob: -18.87559700012207

Token 863: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. ' ' → logprob: -11.000020980834961
    3. '1' → logprob: -12.500020980834961
    4. 'user' → logprob: -17.31252098083496
    5. '```' → logprob: -17.93752098083496
    6. '۰' → logprob: -18.31252098083496
    7. '   ' → logprob: -18.68752098083496
    8. '=' → logprob: -18.81252098083496
    9. '
' → logprob: -19.56252098083496
    10. 'player' → logprob: -19.81252098083496

Token 864: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.07889044284820557
    2. 'else' → logprob: -2.578890323638916
    3. '
' → logprob: -15.203890800476074
    4. '	else' → logprob: -15.703890800476074
    5. '           ' → logprob: -15.828890800476074
    6. '```' → logprob: -16.578889846801758
    7. '        ' → logprob: -17.328889846801758
    8. ' ' → logprob: -17.703889846801758
    9. '       ' → logprob: -17.828889846801758
    10. '_else' → logprob: -18.078889846801758

Token 865: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003392767102923244
    2. ' "' → logprob: -8.00033950805664
    3. '           ' → logprob: -13.62533950805664
    4. ''' → logprob: -13.62533950805664
    5. '
' → logprob: -14.00033950805664
    6. '       ' → logprob: -15.25033950805664
    7. '               ' → logprob: -15.87533950805664
    8. ' win' → logprob: -16.62533950805664
    9. ' ' → logprob: -17.75033950805664
    10. '        ' → logprob: -17.75033950805664

Token 866: 'win' (ID: 11668)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04863528162240982
    2. 'win' → logprob: -3.048635244369507
    3. ''' → logprob: -10.048635482788086
    4. ' win' → logprob: -13.298635482788086
    5. '(win' → logprob: -13.423635482788086
    6. '	win' → logprob: -14.173635482788086
    7. '
' → logprob: -15.548635482788086
    8. '.win' → logprob: -15.798635482788086
    9. '_win' → logprob: -16.423635482788086
    10. 'return' → logprob: -16.423635482788086

Token 867: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.010892652906477451
    2. '\n' → logprob: -5.385892868041992
    3. '           ' → logprob: -5.885892868041992
    4. '
' → logprob: -6.135892868041992
    5. '"' → logprob: -6.885892868041992
    6. '               ' → logprob: -8.760892868041992
    7. '"
' → logprob: -10.010892868041992
    8. '       ' → logprob: -10.385892868041992
    9. '"\' → logprob: -11.260892868041992
    10. '"""
' → logprob: -11.510892868041992

Token 868: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018054300919175148
    2. '
' → logprob: -4.143054485321045
    3. '\n' → logprob: -6.268054485321045
    4. '            
' → logprob: -10.018054008483887
    5. '		' → logprob: -10.393054008483887
    6. '       ' → logprob: -11.268054008483887
    7. '
' → logprob: -12.268054008483887
    8. '\' → logprob: -12.393054008483887
    9. '    
' → logprob: -12.393054008483887
    10. '\
' → logprob: -12.393054008483887

Token 869: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013166792632546276
    2. 'self' (adapté à ' self') → logprob: -9.000131607055664
    3. ' self' → logprob: -12.375131607055664
    4. '		' → logprob: -13.125131607055664
    5. '
' → logprob: -14.000131607055664
    6. '       ' → logprob: -14.250131607055664
    7. '               ' → logprob: -16.000131607055664
    8. '\' → logprob: -16.250131607055664
    9. '   ' → logprob: -16.375131607055664
    10. '            
' → logprob: -16.375131607055664

Token 870: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.1455582082271576
    2. 'current' → logprob: -2.0205581188201904
    3. '_current' → logprob: -6.1455583572387695
    4. ' current' → logprob: -7.5205583572387695
    5. '	current' → logprob: -9.64555835723877
    6. '   ' → logprob: -10.27055835723877
    7. '
' → logprob: -10.77055835723877
    8. '.' → logprob: -10.77055835723877
    9. '=current' → logprob: -10.77055835723877
    10. ' =' → logprob: -11.77055835723877

Token 871: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -7.553032628493384e-05
    2. 'player' → logprob: -9.500075340270996
    3. ' player' → logprob: -15.125075340270996
    4. '   ' → logprob: -16.250076293945312
    5. '_user' → logprob: -16.250076293945312
    6. '_PLAYER' → logprob: -16.625076293945312
    7. 'Player' → logprob: -16.750076293945312
    8. ' игрок' → logprob: -17.625076293945312
    9. '
' → logprob: -17.750076293945312
    10. '_' → logprob: -18.250076293945312

Token 872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007235666736960411
    2. ' =' → logprob: -5.007235527038574
    3. ' ^=' → logprob: -7.632235527038574
    4. '^' → logprob: -10.257235527038574
    5. '   ' → logprob: -15.507235527038574
    6. '	' → logprob: -16.63223648071289
    7. '+=' → logprob: -16.63223648071289
    8. '.=' → logprob: -17.75723648071289
    9. ' ' → logprob: -17.88223648071289
    10. '＝' → logprob: -18.63223648071289

Token 873: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025429665111005306
    2. ' ' → logprob: -6.002542972564697
    3. '(' → logprob: -10.377542495727539
    4. ' (' → logprob: -10.377542495727539
    5. '(self' → logprob: -12.252542495727539
    6. '   ' → logprob: -15.752542495727539
    7. '(not' → logprob: -16.87754249572754
    8. '```' → logprob: -17.25254249572754
    9. 'self' → logprob: -17.37754249572754
    10. '  ' → logprob: -19.12754249572754

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001617035741219297
    2. '(' → logprob: -8.750162124633789
    3. ' ' → logprob: -13.250162124633789
    4. '(self' → logprob: -13.500162124633789
    5. ' (' → logprob: -16.50016212463379
    6. '   ' → logprob: -18.25016212463379
    7. '```' → logprob: -18.50016212463379
    8. 'self' → logprob: -19.37516212463379
    9. '(not' → logprob: -19.62516212463379
    10. '`' → logprob: -20.12516212463379

Token 875: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12700463831424713
    2. ' -' → logprob: -2.127004623413086
    3. '-self' → logprob: -9.502004623413086
    4. ' if' → logprob: -13.377004623413086
    5. 'self' → logprob: -16.127004623413086
    6. '-current' → logprob: -16.377004623413086
    7. '-if' → logprob: -16.377004623413086
    8. 'if' → logprob: -16.502004623413086
    9. '−' → logprob: -17.127004623413086
    10. '   ' → logprob: -17.377004623413086

Token 876: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033546582562848926
    2. ' self' → logprob: -8.000335693359375
    3. '           ' → logprob: -20.625335693359375
    4. '(self' → logprob: -20.875335693359375
    5. '[self' → logprob: -21.125335693359375
    6. '<|end|>' → logprob: -21.125335693359375
    7. '	self' → logprob: -21.375335693359375
    8. '1' → logprob: -21.625335693359375
    9. '=self' → logprob: -21.750335693359375
    10. '0' → logprob: -22.125335693359375

Token 877: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.474097341299057
    2. 'current' → logprob: -0.9740973711013794
    3. '_current' → logprob: -10.97409725189209
    4. 'user' → logprob: -13.84909725189209
    5. '	current' → logprob: -14.22409725189209
    6. '$current' → logprob: -14.72409725189209
    7. ' current' → logprob: -14.97409725189209
    8. 'urrent' → logprob: -15.09909725189209
    9. '.' → logprob: -15.22409725189209
    10. '.user' → logprob: -16.599098205566406

Token 878: '_player' (ID: 34918)
  Prédit: '_player'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_player' → logprob: -4.5491004129871726e-05
    2. 'player' → logprob: -10.000045776367188
    3. '_PLAYER' → logprob: -17.500045776367188
    4. '_user' → logprob: -17.750045776367188
    5. ' player' → logprob: -18.375045776367188
    6. '-player' → logprob: -18.750045776367188
    7. 'Player' → logprob: -19.250045776367188
    8. '_layer' → logprob: -19.625045776367188
    9. '_play' → logprob: -20.125045776367188
    10. '_players' → logprob: -20.500045776367188

Token 879: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 880: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1576232761144638
    2. '<|end|>' → logprob: -2.657623291015625
    3. 'def' → logprob: -2.782623291015625
    4. 'if' → logprob: -4.407623291015625
    5. '```' → logprob: -7.032623291015625
    6. '<|end|>' → logprob: -7.782623291015625
    7. '...' → logprob: -9.407623291015625
    8. 'import' → logprob: -9.407623291015625
    9. 'from' → logprob: -10.282623291015625
    10. 'p' → logprob: -10.407623291015625

Token 881: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016659671440720558
    2. ' solve' → logprob: -4.766659736633301
    3. ' parse' → logprob: -5.891659736633301
    4. '_' → logprob: -6.766659736633301
    5. ' run' → logprob: -6.891659736633301
    6. ' __' → logprob: -7.141659736633301
    7. ' ' → logprob: -7.391659736633301
    8. 'main' → logprob: -8.1416597366333
    9. ' test' → logprob: -8.2666597366333
    10. ' _' → logprob: -8.5166597366333

Token 882: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.17837312817573547
    2. '_p' → logprob: -2.178373098373413
    3. '_line' → logprob: -3.428373098373413
    4. '(input' → logprob: -4.803373336791992
    5. '_args' → logprob: -5.553373336791992
    6. 'input' → logprob: -5.678373336791992
    7. '(line' → logprob: -8.303373336791992
    8. '(p' → logprob: -8.428373336791992
    9. '_inputs' → logprob: -8.678373336791992
    10. 'p' → logprob: -8.803373336791992

Token 883: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0065337116830050945
    2. '():
' → logprob: -5.881533622741699
    3. '()' → logprob: -6.006533622741699
    4. '_line' → logprob: -7.256533622741699
    5. '(line' → logprob: -7.756533622741699
    6. '(input' → logprob: -10.2565336227417
    7. '(lines' → logprob: -11.0065336227417
    8. '(prompt' → logprob: -11.2565336227417
    9. 'line' → logprob: -11.3815336227417
    10. ' ():' → logprob: -11.5065336227417

Token 884: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.017383236438035965
    2. '()' → logprob: -4.142383098602295
    3. '():
' → logprob: -7.017383098602295
    4. '()->' → logprob: -7.767383098602295
    5. ':' → logprob: -11.392383575439453
    6. '(' → logprob: -11.642383575439453
    7. '->' → logprob: -12.392383575439453
    8. ' ():' → logprob: -13.392383575439453
    9. '()>' → logprob: -14.392383575439453
    10. ' ->' → logprob: -14.517383575439453

Token 885: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.01427010539919138
    2. 'Tuple' → logprob: -4.264270305633545
    3. ' List' → logprob: -9.389269828796387
    4. 'int' → logprob: -12.014269828796387
    5. 'None' → logprob: -12.139269828796387
    6. ' Tuple' → logprob: -12.139269828796387
    7. '[List' → logprob: -12.264269828796387
    8. 'tuple' → logprob: -14.889269828796387
    9. 'list' → logprob: -15.139269828796387
    10. '	List' → logprob: -15.139269828796387

Token 886: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.6656825866666622e-05
    2. 'int' → logprob: -10.62502670288086
    3. '[str' → logprob: -14.12502670288086
    4. '<int' → logprob: -14.12502670288086
    5. '(int' → logprob: -15.00002670288086
    6. '[List' → logprob: -15.25002670288086
    7. '[Int' → logprob: -15.87502670288086
    8. '=int' → logprob: -16.50002670288086
    9. ']int' → logprob: -17.25002670288086
    10. '[]' → logprob: -17.75002670288086

Token 887: ']:
' (ID: 22152)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.050906334072351456
    2. '():' → logprob: -3.5509064197540283
    3. ']:
' → logprob: -4.300906181335449
    4. '()' → logprob: -5.675906181335449
    5. ']:' → logprob: -6.050906181335449
    6. '():
' → logprob: -7.300906181335449
    7. '):
' → logprob: -7.675906181335449
    8. ']' → logprob: -8.30090618133545
    9. '()]' → logprob: -10.05090618133545
    10. ']()' → logprob: -10.05090618133545

Token 888: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07461852580308914
    2. ' lines' → logprob: -3.5746185779571533
    3. ' n' → logprob: -3.8246185779571533
    4. ' return' → logprob: -4.574618339538574
    5. 'n' → logprob: -4.949618339538574
    6. ' line' → logprob: -6.574618339538574
    7. 'return' → logprob: -6.699618339538574
    8. 'lines' → logprob: -6.949618339538574
    9. 'line' → logprob: -8.199618339538574
    10. 'num' → logprob: -9.074618339538574

Token 889: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03940138965845108
    2. '   ' → logprob: -3.5394012928009033
    3. ' n' → logprob: -4.789401531219482
    4. 'import' → logprob: -7.414401531219482
    5. 'num' → logprob: -8.039401054382324
    6. 'lines' → logprob: -9.039401054382324
    7. 'return' → logprob: -9.289401054382324
    8. 'input' (adapté à ' input') → logprob: -9.789401054382324
    9. 'line' → logprob: -9.789401054382324
    10. 'raw' → logprob: -11.664401054382324

Token 890: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04241997003555298
    2. '().' → logprob: -3.417419910430908
    3. '_lines' → logprob: -5.167419910430908
    4. '_line' → logprob: -6.167419910430908
    5. '_data' → logprob: -8.167420387268066
    6. '()
' → logprob: -8.417420387268066
    7. '_str' → logprob: -8.917420387268066
    8. '_numbers' → logprob: -9.792420387268066
    9. '=' → logprob: -9.917420387268066
    10. '()[' → logprob: -10.042420387268066

Token 891: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0019255406223237514
    2. ' sys' → logprob: -6.751925468444824
    3. 'input' → logprob: -7.251925468444824
    4. '(sys' → logprob: -10.751925468444824
    5. 'list' → logprob: -11.501925468444824
    6. '=sys' → logprob: -12.001925468444824
    7. 'lambda' → logprob: -13.126925468444824
    8. '	sys' → logprob: -13.126925468444824
    9. 'int' → logprob: -13.251925468444824
    10. '[]' → logprob: -13.501925468444824

Token 892: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07600581645965576
    2. '().' → logprob: -2.7010059356689453
    3. '.readline' → logprob: -5.451005935668945
    4. '.' → logprob: -6.451005935668945
    5. '.stdout' → logprob: -9.701005935668945
    6. 'stdin' → logprob: -10.201005935668945
    7. '(stdin' → logprob: -10.701005935668945
    8. '()' → logprob: -10.701005935668945
    9. '.argv' → logprob: -10.951005935668945
    10. '._' → logprob: -12.201005935668945

Token 893: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005408813012763858
    2. '.' → logprob: -8.375540733337402
    3. '.readlines' → logprob: -8.625540733337402
    4. '.read' → logprob: -9.750540733337402
    5. '.stdin' → logprob: -10.000540733337402
    6. 'read' → logprob: -11.875540733337402
    7. '_buffer' → logprob: -12.250540733337402
    8. '_lines' → logprob: -12.750540733337402
    9. 'buffer' → logprob: -12.750540733337402
    10. '.buffer' → logprob: -13.125540733337402

Token 894: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.16058002412319183
    2. '()' → logprob: -1.910580039024353
    3. '()
' → logprob: -8.285579681396484
    4. 'line' → logprob: -9.660579681396484
    5. 'lines' → logprob: -10.910579681396484
    6. 'split' → logprob: -12.035579681396484
    7. '()

' → logprob: -12.535579681396484
    8. '(' → logprob: -12.910579681396484
    9. '_line' → logprob: -13.160579681396484
    10. '()\' → logprob: -13.285579681396484

Token 895: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.003992204088717699
    2. 'read' → logprob: -6.003992080688477
    3. 'split' → logprob: -6.503992080688477
    4. 'rstrip' → logprob: -11.128992080688477
    5. 'decode' → logprob: -13.003992080688477
    6. '().' → logprob: -15.378992080688477
    7. '(strip' → logprob: -15.378992080688477
    8. ' strip' → logprob: -15.628992080688477
    9. '.strip' → logprob: -16.378992080688477
    10. '()' → logprob: -17.253992080688477

Token 896: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6987784504890442
    2. '().' → logprob: -0.6987784504890442
    3. '()
' → logprob: -5.1987786293029785
    4. 'split' → logprob: -10.44877815246582
    5. '()\' → logprob: -10.69877815246582
    6. '()

' → logprob: -11.07377815246582
    7. '.split' → logprob: -12.32377815246582
    8. '()
' → logprob: -12.57377815246582
    9. '()`' → logprob: -12.57377815246582
    10. '())' → logprob: -12.69877815246582

Token 897: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. '(split' → logprob: -16.75
    3. 'spl' → logprob: -18.5
    4. ' split' → logprob: -18.5
    5. '.split' → logprob: -20.125
    6. 'sp' → logprob: -22.625
    7. 'strip' → logprob: -23.25
    8. 'rstrip' → logprob: -23.5
    9. '_split' → logprob: -23.75
    10. '```' → logprob: -23.875

Token 898: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03762275353074074
    2. '()
' → logprob: -3.7876226902008057
    3. '(' → logprob: -5.412622928619385
    4. 'def' → logprob: -5.662622928619385
    5. '   ' → logprob: -6.287622928619385
    6. '_' → logprob: -7.412622928619385
    7. 'return' → logprob: -7.662622928619385
    8. '()[' → logprob: -7.662622928619385
    9. '[' → logprob: -7.787622928619385
    10. 'lines' → logprob: -8.162622451782227

Token 899: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3557705879211426
    2. 'lines' → logprob: -1.8557705879211426
    3. ')' → logprob: -2.4807705879211426
    4. 'newline' → logprob: -3.1057705879211426
    5. '\n' → logprob: -5.605770587921143
    6. '()' → logprob: -5.605770587921143
    7. '')' → logprob: -5.855770587921143
    8. '('\' → logprob: -6.230770587921143
    9. ''\' → logprob: -7.230770587921143
    10. '())' → logprob: -7.355770587921143

Token 900: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6518570184707642
    2. ')' → logprob: -0.7768570184707642
    3. '')
' → logprob: -5.026856899261475
    4. '')' → logprob: -5.276856899261475
    5. '())
' → logprob: -6.401856899261475
    6. '   ' → logprob: -6.651856899261475
    7. ')[' → logprob: -6.651856899261475
    8. '()' → logprob: -6.776856899261475
    9. '[' → logprob: -6.901856899261475
    10. '())' → logprob: -7.776856899261475

Token 901: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6591005325317383
    2. 'n' → logprob: -0.7841005325317383
    3. 'nums' → logprob: -4.409100532531738
    4. 'return' → logprob: -5.409100532531738
    5. 't' → logprob: -5.784100532531738
    6. ' n' → logprob: -6.159100532531738
    7. '_,' → logprob: -6.659100532531738
    8. 'num' → logprob: -6.784100532531738
    9. 'numbers' → logprob: -7.909100532531738
    10. 'counts' → logprob: -8.159100532531738

Token 902: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01518513634800911
    2. 'return' → logprob: -5.890185356140137
    3. '   ' → logprob: -6.015185356140137
    4. 'nums' → logprob: -6.015185356140137
    5. 'N' → logprob: -6.265185356140137
    6. '_,' → logprob: -6.515185356140137
    7. 't' → logprob: -6.890185356140137
    8. '_' → logprob: -6.890185356140137
    9. 'num' → logprob: -7.015185356140137
    10. 'T' → logprob: -7.515185356140137

Token 903: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4793146252632141
    2. '=' → logprob: -0.9793146252632141
    3. '_tokens' → logprob: -6.229314804077148
    4. '   ' → logprob: -6.604314804077148
    5. '=int' → logprob: -7.354314804077148
    6. '[' → logprob: -7.729314804077148
    7. ',' → logprob: -8.229314804077148
    8. 'okens' → logprob: -8.604314804077148
    9. 'tokens' → logprob: -9.104314804077148
    10. 's' → logprob: -9.479314804077148

Token 904: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.960946772480384e-05
    2. ' int' → logprob: -9.250099182128906
    3. '   ' → logprob: -12.750099182128906
    4. 'len' → logprob: -15.500099182128906
    5. '[int' → logprob: -15.625099182128906
    6. '  ' → logprob: -16.500099182128906
    7. '=int' → logprob: -17.250099182128906
    8. '(int' → logprob: -17.750099182128906
    9. 'n' → logprob: -17.750099182128906
    10. 'input' → logprob: -18.000099182128906

Token 905: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06199323385953903
    2. '(input' → logprob: -2.81199312210083
    3. ' input' → logprob: -10.686993598937988
    4. '[input' → logprob: -13.186993598937988
    5. '(' → logprob: -15.061993598937988
    6. '=input' → logprob: -15.436993598937988
    7. '[' → logprob: -15.561993598937988
    8. '	input' → logprob: -16.311992645263672
    9. '<input' → logprob: -16.311992645263672
    10. ',input' → logprob: -17.561992645263672

Token 906: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.5776860184123507e-06
    2. '()[' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.62500286102295
    4. 's' → logprob: -15.00000286102295
    5. ' [' → logprob: -15.50000286102295
    6. '(' → logprob: -15.87500286102295
    7. '0' → logprob: -16.000001907348633
    8. '\[' → logprob: -16.125001907348633
    9. ')[' → logprob: -16.250001907348633
    10. '```' → logprob: -17.375001907348633

Token 907: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.727905979962088e-05
    2. '[' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.25004768371582
    4. '1' → logprob: -17.50004768371582
    5. '   ' → logprob: -17.75004768371582
    6. '```' → logprob: -19.37504768371582
    7. '  ' → logprob: -19.87504768371582
    8. ' [' → logprob: -20.37504768371582
    9. '][' → logprob: -20.37504768371582
    10. '
' → logprob: -20.62504768371582

Token 908: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4583633244037628
    2. '])' → logprob: -1.0833632946014404
    3. ')
' → logprob: -3.7083632946014404
    4. '])
' → logprob: -5.4583635330200195
    5. ']' → logprob: -8.70836353302002
    6. '[' → logprob: -8.83336353302002
    7. '   ' → logprob: -10.70836353302002
    8. ' )' → logprob: -11.20836353302002
    9. '.split' → logprob: -11.33336353302002
    10. ''])' → logprob: -11.33336353302002

Token 909: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3871878981590271
    2. '   ' → logprob: -1.1371879577636719
    3. 'pile' → logprob: -9.262187957763672
    4. ' piles' → logprob: -9.637187957763672
    5. 'numbers' → logprob: -10.262187957763672
    6. 'return' → logprob: -10.512187957763672
    7. 'arr' → logprob: -10.637187957763672
    8. 'lines' → logprob: -10.887187957763672
    9. 'data' → logprob: -11.637187957763672
    10. 'nums' → logprob: -12.012187957763672

Token 910: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0011283133644610643
    2. 'return' → logprob: -6.876128196716309
    3. '   ' → logprob: -9.751128196716309
    4. 'arr' → logprob: -11.126128196716309
    5. 'numbers' → logprob: -12.001128196716309
    6. 'values' → logprob: -12.626128196716309
    7. 'pile' → logprob: -12.876128196716309
    8. 'nums' → logprob: -13.001128196716309
    9. ' piles' → logprob: -13.001128196716309
    10. 'lines' → logprob: -13.626128196716309

Token 911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193390250205994
    2. ' =' → logprob: -1.5019339323043823
    3. '   ' → logprob: -13.126934051513672
    4. '=[]' → logprob: -13.376934051513672
    5. '=p' → logprob: -15.001934051513672
    6. '=int' → logprob: -15.876934051513672
    7. ',' → logprob: -15.876934051513672
    8. '=parse' → logprob: -16.251934051513672
    9. '=[]
' → logprob: -16.376934051513672
    10. '=list' → logprob: -16.751934051513672

Token 912: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011147446930408478
    2. '[list' → logprob: -4.761147499084473
    3. ' list' → logprob: -6.011147499084473
    4. '[' → logprob: -9.511147499084473
    5. ' [' → logprob: -12.636147499084473
    6. '[List' → logprob: -14.011147499084473
    7. '[i' → logprob: -16.511146545410156
    8. '=list' → logprob: -16.636146545410156
    9. '[int' → logprob: -16.761146545410156
    10. 'List' → logprob: -17.136146545410156

Token 913: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32872191071510315
    2. 'for' → logprob: -1.3287218809127808
    3. ' for' → logprob: -4.20372200012207
    4. '	for' → logprob: -7.82872200012207
    5. '[' → logprob: -14.45372200012207
    6. '       ' → logprob: -14.70372200012207
    7. ' ' → logprob: -14.70372200012207
    8. ',' → logprob: -14.95372200012207
    9. '
' → logprob: -15.45372200012207
    10. 'from' → logprob: -15.70372200012207

Token 914: ' index' (ID: 3472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033030740451067686
    2. '   ' → logprob: -5.753303050994873
    3. ' for' → logprob: -9.003303527832031
    4. 'i' → logprob: -13.878303527832031
    5. '	for' → logprob: -14.128303527832031
    6. 'idx' → logprob: -14.378303527832031
    7. '
' → logprob: -15.878303527832031
    8. '       ' → logprob: -19.12830352783203
    9. 'index' (adapté à ' index') → logprob: -19.25330352783203
    10. 'line' → logprob: -19.50330352783203

Token 915: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06202269345521927
    2. ' =' → logprob: -2.8120226860046387
    3. '0' → logprob: -11.312023162841797
    4. '   ' → logprob: -11.562023162841797
    5. ' ' → logprob: -11.812023162841797
    6. ')' → logprob: -11.937023162841797
    7. 'for' → logprob: -12.812023162841797
    8. '_' → logprob: -13.312023162841797
    9. '    ' → logprob: -13.437023162841797
    10. '  ' → logprob: -13.562023162841797

Token 916: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.12501335144043
    4. '0' → logprob: -17.12501335144043
    5. '=' → logprob: -18.00001335144043
    6. '2' → logprob: -18.37501335144043
    7. '```' → logprob: -18.50001335144043
    8. '  ' → logprob: -19.81251335144043
    9. ' =' → logprob: -19.93751335144043
    10. '    ' → logprob: -20.31251335144043

Token 917: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -18.625
    5. 'int' → logprob: -19.125
    6. '0' → logprob: -19.5
    7. 'from' → logprob: -19.75
    8. '=' → logprob: -20.3125
    9. 'n' → logprob: -20.5625
    10. 'range' → logprob: -20.6875

Token 918: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18519380688667297
    2. '   ' → logprob: -2.1851937770843506
    3. ' for' → logprob: -2.9351937770843506
    4. '	for' → logprob: -5.93519401550293
    5. 'while' → logprob: -7.81019401550293
    6. '<|end|>' → logprob: -9.06019401550293
    7. '
' → logprob: -9.56019401550293
    8. '    ' → logprob: -10.06019401550293
    9. ',' → logprob: -10.06019401550293
    10. ' ' → logprob: -10.31019401550293

Token 919: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21885758638381958
    2. '   ' → logprob: -1.7188575267791748
    3. ' for' → logprob: -4.218857765197754
    4. 'while' → logprob: -6.218857765197754
    5. '	for' → logprob: -7.593857765197754
    6. ':' → logprob: -10.843857765197754
    7. '
' → logprob: -11.343857765197754
    8. ',' → logprob: -11.468857765197754
    9. ' while' → logprob: -11.593857765197754
    10. '	while' → logprob: -11.718857765197754

Token 920: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00023572170175611973
    2. 'while' → logprob: -8.750235557556152
    3. ' for' → logprob: -9.500235557556152
    4. '   ' → logprob: -13.000235557556152
    5. '	for' → logprob: -15.875235557556152
    6. '
' → logprob: -17.37523651123047
    7. '```' → logprob: -17.87523651123047
    8. ' while' → logprob: -18.37523651123047
    9. 'n' → logprob: -19.25023651123047
    10. 'i' → logprob: -20.62523651123047

Token 921: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015194186009466648
    2. '_i' → logprob: -4.265194416046143
    3. 'i' → logprob: -7.015194416046143
    4. ' _' → logprob: -9.265193939208984
    5. '_line' → logprob: -10.515193939208984
    6. ' i' → logprob: -11.765193939208984
    7. '_index' → logprob: -14.515193939208984
    8. '_range' → logprob: -14.640193939208984
    9. '_=' → logprob: -14.640193939208984
    10. '_in' → logprob: -14.890193939208984

Token 922: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6332404613494873
    2. 'in' → logprob: -1.0082404613494873
    3. ' in' → logprob: -2.3832404613494873
    4. ' range' → logprob: -4.508240699768066
    5. '_' → logprob: -7.008240699768066
    6. 'index' → logprob: -11.133240699768066
    7. 'n' → logprob: -11.133240699768066
    8. ')' → logprob: -11.133240699768066
    9. 'i' → logprob: -11.633240699768066
    10. '...' → logprob: -12.008240699768066

Token 923: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015669701679144055
    2. ' range' → logprob: -8.87515640258789
    3. 'input' → logprob: -11.00015640258789
    4. 'p' → logprob: -16.75015640258789
    5. '	range' → logprob: -17.50015640258789
    6. '(range' → logprob: -18.00015640258789
    7. '
' → logprob: -18.00015640258789
    8. 'in' → logprob: -18.12515640258789
    9. 'n' → logprob: -19.62515640258789
    10. '   ' → logprob: -20.00015640258789

Token 924: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005243833642452955
    2. 'n' → logprob: -5.25524377822876
    3. '(' → logprob: -12.005244255065918
    4. ' n' → logprob: -12.630244255065918
    5. '   ' → logprob: -15.755244255065918
    6. '	n' → logprob: -16.1302433013916
    7. 'range' → logprob: -16.3802433013916
    8. ' (' → logprob: -16.5052433013916
    9. '_n' → logprob: -16.6302433013916
    10. ',' → logprob: -17.0052433013916

Token 925: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6759546399116516
    2. '):
' → logprob: -0.8009546399116516
    3. ':' → logprob: -3.550954580307007
    4. ':
' → logprob: -5.050954818725586
    5. ',' → logprob: -5.300954818725586
    6. '   ' → logprob: -6.300954818725586
    7. '       ' → logprob: -8.800954818725586
    8. ')' → logprob: -9.925954818725586
    9. '():
' → logprob: -10.050954818725586
    10. ']:' → logprob: -10.050954818725586

Token 926: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005802943836897612
    2. '   ' → logprob: -5.505803108215332
    3. ' line' → logprob: -7.380803108215332
    4. ',' → logprob: -7.880803108215332
    5. 'tokens' → logprob: -8.505803108215332
    6. 'line' → logprob: -8.880803108215332
    7. '```' → logprob: -9.755803108215332
    8. ',p' → logprob: -9.880803108215332
    9. '<|end|>' → logprob: -10.130803108215332
    10. 'p' → logprob: -10.380803108215332

Token 927: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.03132055699825287
    2. 'pile' → logprob: -3.906320571899414
    3. '       ' → logprob: -5.281320571899414
    4. ' piles' → logprob: -5.906320571899414
    5. '   ' → logprob: -7.031320571899414
    6. 'value' → logprob: -7.656320571899414
    7. ' p' → logprob: -7.906320571899414
    8. ' pile' → logprob: -8.406320571899414
    9. 'val' → logprob: -8.531320571899414
    10. 'size' → logprob: -8.656320571899414

Token 928: '_s' (ID: 1278)
  Prédit: 'ile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ile' → logprob: -0.2933753728866577
    2. ' =' → logprob: -1.9183753728866577
    3. '=' → logprob: -2.4183754920959473
    4. 'p' → logprob: -4.918375492095947
    5. '=p' → logprob: -5.543375492095947
    6. 'iles' → logprob: -5.668375492095947
    7. '   ' → logprob: -6.293375492095947
    8. '=int' → logprob: -7.543375492095947
    9. 'pile' → logprob: -8.043375015258789
    10. '       ' → logprob: -8.668375015258789

Token 929: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7323684692382812
    2. ' =' → logprob: -0.7323684692382812
    3. 'ile' → logprob: -3.7323684692382812
    4. 'tr' → logprob: -4.357368469238281
    5. '=p' → logprob: -7.857368469238281
    6. '=int' → logprob: -8.232368469238281
    7. 'ize' → logprob: -8.357368469238281
    8. '=line' → logprob: -9.357368469238281
    9. '   ' → logprob: -9.482368469238281
    10. 'p' → logprob: -9.607368469238281

Token 930: ' m' (ID: 284)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10842078924179077
    2. 'q' → logprob: -3.4834208488464355
    3. 'k' → logprob: -3.6084208488464355
    4. 'm' → logprob: -3.6084208488464355
    5. 'c' → logprob: -4.9834208488464355
    6. 's' → logprob: -5.8584208488464355
    7. 'l' → logprob: -6.6084208488464355
    8. '_' → logprob: -6.8584208488464355
    9. 't' → logprob: -6.8584208488464355
    10. '_p' → logprob: -6.9834208488464355

Token 931: '_s' (ID: 1278)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15949852764606476
    2. ' =' → logprob: -2.034498453140259
    3. 'tr' → logprob: -4.659498691558838
    4. '_s' → logprob: -5.409498691558838
    5. '_p' → logprob: -7.534498691558838
    6. 'p' → logprob: -7.659498691558838
    7. ',' → logprob: -8.15949821472168
    8. '   ' → logprob: -8.28449821472168
    9. '_tokens' → logprob: -8.53449821472168
    10. '=line' → logprob: -8.53449821472168

Token 932: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014164801687002182
    2. ' =' → logprob: -4.264164924621582
    3. '=p' → logprob: -14.514164924621582
    4. '=line' → logprob: -14.889164924621582
    5. 'p' → logprob: -15.264164924621582
    6. ',' → logprob: -16.639163970947266
    7. '=input' → logprob: -17.264163970947266
    8. 'tokens' → logprob: -17.389163970947266
    9. '=user' → logprob: -17.639163970947266
    10. '＝' → logprob: -17.639163970947266

Token 933: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004902417422272265
    2. ' input' → logprob: -7.625490188598633
    3. '(input' → logprob: -13.500490188598633
    4. '=input' → logprob: -14.625490188598633
    5. 'map' → logprob: -16.250490188598633
    6. 'output' → logprob: -16.500490188598633
    7. '[input' → logprob: -17.125490188598633
    8. ' ' → logprob: -17.875490188598633
    9. ',input' → logprob: -18.000490188598633
    10. '_input' → logprob: -18.125490188598633

Token 934: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0011822503292933106
    2. 'index' → logprob: -7.2511820793151855
    3. '=index' → logprob: -8.876182556152344
    4. '[_' → logprob: -9.001182556152344
    5. '=' → logprob: -9.376182556152344
    6. ' =' → logprob: -10.001182556152344
    7. '
' → logprob: -11.126182556152344
    8. '_index' → logprob: -11.376182556152344
    9. '[' → logprob: -11.501182556152344
    10. '   ' → logprob: -11.876182556152344

Token 935: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.0022549629211426
    2. ']' → logprob: -1.2522549629211426
    3. '[index' → logprob: -2.3772549629211426
    4. '=index' → logprob: -2.5022549629211426
    5. '.split' → logprob: -2.8772549629211426
    6. '=' → logprob: -3.0022549629211426
    7. ']=' → logprob: -3.3772549629211426
    8. ' =' → logprob: -4.002254962921143
    9. 'index' → logprob: -5.002254962921143
    10. 'split' → logprob: -6.127254962921143

Token 936: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024762547109276056
    2. 'strip' → logprob: -6.002476215362549
    3. ' split' → logprob: -14.877476692199707
    4. 'rstrip' → logprob: -15.377476692199707
    5. '.split' → logprob: -17.25247573852539
    6. '(split' → logprob: -17.50247573852539
    7. '_split' → logprob: -17.50247573852539
    8. 'spl' → logprob: -18.12747573852539
    9. 'plit' → logprob: -18.75247573852539
    10. '.strip' → logprob: -20.00247573852539

Token 937: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006999758537858725
    2. '()
' → logprob: -5.006999969482422
    3. '('' → logprob: -8.506999969482422
    4. '();' → logprob: -10.006999969482422
    5. '(' → logprob: -10.756999969482422
    6. '()[' → logprob: -12.506999969482422
    7. '(),' → logprob: -13.006999969482422
    8. '=' → logprob: -13.631999969482422
    9. '()
' → logprob: -13.756999969482422
    10. '())' → logprob: -14.131999969482422

Token 938: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029386388137936592
    2. '<|end|>' → logprob: -4.654386520385742
    3. ',' → logprob: -4.779386520385742
    4. '        
' → logprob: -5.654386520385742
    5. '=' → logprob: -6.404386520385742
    6. '   ' → logprob: -6.529386520385742
    7. ' =' → logprob: -7.029386520385742
    8. '<|end|>' → logprob: -7.529386520385742
    9. ',p' → logprob: -7.654386520385742
    10. 'index' → logprob: -7.654386520385742

Token 939: ' index' (ID: 3472)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.019859502092003822
    2. '       ' → logprob: -4.394859313964844
    3. ' p' → logprob: -5.894859313964844
    4. 'index' (adapté à ' index') → logprob: -6.144859313964844
    5. 'pile' → logprob: -6.269859313964844
    6. ' index' → logprob: -8.519859313964844
    7. '   ' → logprob: -8.519859313964844
    8. ' piles' → logprob: -9.894859313964844
    9. 'value' → logprob: -11.269859313964844
    10. ' pile' → logprob: -11.644859313964844

Token 940: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.35485032200813293
    2. '=' → logprob: -1.6048502922058105
    3. ' +=' → logprob: -2.3548502922058105
    4. ' =' → logprob: -5.8548502922058105
    5. '   ' → logprob: -11.479850769042969
    6. '```' → logprob: -12.229850769042969
    7. '+' → logprob: -12.354850769042969
    8. ']+=' → logprob: -12.979850769042969
    9. '       ' → logprob: -13.229850769042969
    10. ')' → logprob: -13.854850769042969

Token 941: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.625003814697266
    3. '2' → logprob: -14.000003814697266
    4. '   ' → logprob: -18.375003814697266
    5. '
' → logprob: -19.500003814697266
    6. '```' → logprob: -19.750003814697266
    7. 'p' → logprob: -20.562503814697266
    8. 's' → logprob: -21.312503814697266
    9. '=' → logprob: -21.437503814697266
    10. '0' → logprob: -21.500003814697266

Token 942: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009128939709626138
    2. '2' → logprob: -7.000912666320801
    3. ' ' → logprob: -13.5009126663208
    4. 'p' → logprob: -16.750913619995117
    5. '   ' → logprob: -17.750913619995117
    6. '```' → logprob: -18.125913619995117
    7. 'int' → logprob: -19.500913619995117
    8. ' p' → logprob: -20.500913619995117
    9. '3' → logprob: -20.875913619995117
    10. 's' → logprob: -20.875913619995117

Token 943: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005938397720456123
    2. ',p' → logprob: -5.755938529968262
    3. ',' → logprob: -6.255938529968262
    4. 'p' → logprob: -7.380938529968262
    5. '   ' → logprob: -9.005938529968262
    6. '	p' → logprob: -10.130938529968262
    7. '	' → logprob: -11.755938529968262
    8. ' =' → logprob: -12.005938529968262
    9. '	   ' → logprob: -12.255938529968262
    10. '           ' → logprob: -12.380938529968262

Token 944: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07113466411828995
    2. 'p' → logprob: -2.696134567260742
    3. '   ' → logprob: -6.821134567260742
    4. '	p' → logprob: -10.196134567260742
    5. ',p' → logprob: -10.321134567260742
    6. 'pile' → logprob: -11.446134567260742
    7. ',' → logprob: -12.196134567260742
    8. ' p' → logprob: -12.321134567260742
    9. '           ' → logprob: -12.571134567260742
    10. '```' → logprob: -13.196134567260742

Token 945: ' base' (ID: 3611)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0033986021298915148
    2. ' p' → logprob: -6.753398418426514
    3. '   ' → logprob: -7.128398418426514
    4. 'pile' → logprob: -7.128398418426514
    5. '       ' → logprob: -7.628398418426514
    6. ' piles' → logprob: -10.003398895263672
    7. 'for' → logprob: -10.878398895263672
    8. 'a' → logprob: -11.503398895263672
    9. 'base' (adapté à ' base') → logprob: -12.253398895263672
    10. '	p' → logprob: -12.378398895263672

Token 946: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38276687264442444
    2. '=' → logprob: -1.382766842842102
    3. ' =' → logprob: -2.7577669620513916
    4. ',p' → logprob: -6.1327667236328125
    5. '=int' → logprob: -7.3827667236328125
    6. '   ' → logprob: -7.8827667236328125
    7. ' ,' → logprob: -8.507766723632812
    8. '_,' → logprob: -9.382766723632812
    9. ',int' → logprob: -10.132766723632812
    10. '       ' → logprob: -10.132766723632812

Token 947: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027402563020586967
    2. 'Base' → logprob: -4.152402400970459
    3. ' int' → logprob: -4.527402400970459
    4. ' Base' → logprob: -7.777402400970459
    5. '10' → logprob: -10.402402877807617
    6. '   ' → logprob: -11.777402877807617
    7. '=int' → logprob: -11.777402877807617
    8. '(int' → logprob: -12.527402877807617
    9. '       ' → logprob: -12.652402877807617
    10. '2' → logprob: -12.652402877807617

Token 948: '(p' (ID: 2407)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.10526508092880249
    2. 'm' → logprob: -2.9802651405334473
    3. '(p' → logprob: -3.1052651405334473
    4. 'p' → logprob: -5.480265140533447
    5. '(' → logprob: -9.105264663696289
    6. '10' → logprob: -10.855264663696289
    7. ' m' → logprob: -12.105264663696289
    8. 'base' → logprob: -12.980264663696289
    9. '(base' → logprob: -13.230264663696289
    10. '   ' → logprob: -13.480264663696289

Token 949: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.03965292125940323
    2. 'm' → logprob: -3.4146528244018555
    3. 's' → logprob: -5.4146528244018555
    4. 'p' → logprob: -7.4146528244018555
    5. ')' → logprob: -8.289652824401855
    6. '_m' → logprob: -8.414652824401855
    7. '[' → logprob: -9.414652824401855
    8. '(p' → logprob: -9.414652824401855
    9. '(m' → logprob: -9.664652824401855
    10. ')m' → logprob: -10.414652824401855

Token 950: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4253924489021301
    2. ')
' → logprob: -1.1753923892974854
    3. ',' → logprob: -3.3003923892974854
    4. '       ' → logprob: -8.050392150878906
    5. '),' → logprob: -8.550392150878906
    6. '           ' → logprob: -9.175392150878906
    7. '=' → logprob: -9.425392150878906
    8. '.split' → logprob: -10.175392150878906
    9. '[' → logprob: -10.425392150878906
    10. '   ' → logprob: -10.550392150878906

Token 951: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20924879610538483
    2. 'value' → logprob: -1.7092487812042236
    3. ',' → logprob: -5.334249019622803
    4. ' value' → logprob: -6.334249019622803
    5. ',value' → logprob: -7.459249019622803
    6. 'number' → logprob: -7.959249019622803
    7. '   ' → logprob: -9.709248542785645
    8. 'num' → logprob: -10.209248542785645
    9. 'val' → logprob: -10.459248542785645
    10. '	value' → logprob: -10.459248542785645

Token 952: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' (adapté à ' value') → logprob: -0.034280844032764435
    2. 'number' → logprob: -3.909280776977539
    3. 'num' → logprob: -4.909280776977539
    4. 'val' → logprob: -5.409280776977539
    5. 'digits' → logprob: -6.409280776977539
    6. '       ' → logprob: -10.409280776977539
    7. 'raw' → logprob: -10.534280776977539
    8. 'v' → logprob: -10.909280776977539
    9. 'length' → logprob: -11.409280776977539
    10. ' value' → logprob: -11.409280776977539

Token 953: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141518115997314
    2. ' =' → logprob: -1.7014151811599731
    3. ' ' → logprob: -13.951415061950684
    4. '   ' → logprob: -14.826415061950684
    5. ',' → logprob: -16.076416015625
    6. '=value' → logprob: -16.076416015625
    7. '=int' → logprob: -16.201416015625
    8. '       ' → logprob: -16.326416015625
    9. '=line' → logprob: -16.326416015625
    10. '  ' → logprob: -16.701416015625

Token 954: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004382893908768892
    2. 'input' → logprob: -5.879383087158203
    3. ' m' → logprob: -6.754383087158203
    4. 'value' → logprob: -8.004383087158203
    5. ' input' → logprob: -10.004383087158203
    6. 'p' → logprob: -11.129383087158203
    7. 'int' → logprob: -11.879383087158203
    8. ' value' → logprob: -12.254383087158203
    9. 'str' → logprob: -14.004383087158203
    10. ' ' → logprob: -14.254383087158203

Token 955: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0076278080232441425
    2. '[index' → logprob: -5.007627964019775
    3. 's' → logprob: -7.382627964019775
    4. 'index' → logprob: -8.882627487182617
    5. 'input' → logprob: -9.257627487182617
    6. '   ' → logprob: -11.007627487182617
    7. '       ' → logprob: -12.007627487182617
    8. '(index' → logprob: -12.257627487182617
    9. '=index' → logprob: -12.632627487182617
    10. '=' → logprob: -12.757627487182617

Token 956: '.strip' (ID: 40613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6732857823371887
    2. ' =' → logprob: -1.173285722732544
    3. '
' → logprob: -1.923285722732544
    4. '=' → logprob: -3.923285722732544
    5. '        
' → logprob: -5.173285961151123
    6. 'tokens' → logprob: -6.298285961151123
    7. ')' → logprob: -6.798285961151123
    8. ',' → logprob: -7.048285961151123
    9. '_tokens' → logprob: -7.173285961151123
    10. '
' → logprob: -7.923285961151123

Token 957: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2966790199279785
    2. '       ' → logprob: -1.5466790199279785
    3. ')' → logprob: -3.4216790199279785
    4. ')
' → logprob: -5.5466790199279785
    5. '           ' → logprob: -7.2966790199279785
    6. '<|end|>' → logprob: -7.2966790199279785
    7. '[::-' → logprob: -7.4216790199279785
    8. '()' → logprob: -7.4216790199279785
    9. '<|end|>' → logprob: -7.4216790199279785
    10. '        
' → logprob: -7.6716790199279785

Token 958: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06062830612063408
    2. 'p' → logprob: -3.5606284141540527
    3. 'num' → logprob: -4.435628414154053
    4. 'number' → logprob: -4.435628414154053
    5. 'pile' → logprob: -5.810628414154053
    6. '   ' → logprob: -6.185628414154053
    7. 'decimal' → logprob: -7.435628414154053
    8. 'value' → logprob: -7.560628414154053
    9. '```' → logprob: -8.685627937316895
    10. 'val' → logprob: -8.935627937316895

Token 959: ' decimal' (ID: 26964)
  Prédit: 'decimal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decimal' (adapté à ' decimal') → logprob: -0.821882426738739
    2. 'num' → logprob: -1.4468824863433838
    3. '       ' → logprob: -1.5718824863433838
    4. 'number' → logprob: -3.071882486343384
    5. 'pile' → logprob: -3.446882486343384
    6. 'p' → logprob: -3.571882486343384
    7. 'dec' → logprob: -5.196882247924805
    8. 'val' → logprob: -6.196882247924805
    9. 'n' → logprob: -7.071882247924805
    10. 'decoded' → logprob: -7.446882247924805

Token 960: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032145459204912186
    2. '_value' → logprob: -4.0321455001831055
    3. ' =' → logprob: -4.2821455001831055
    4. '_val' → logprob: -9.532145500183105
    5. 'value' → logprob: -11.532145500183105
    6. '_=' → logprob: -13.532145500183105
    7. '=value' → logprob: -15.282145500183105
    8. '=int' → logprob: -15.282145500183105
    9. '_number' → logprob: -15.532145500183105
    10. '_' → logprob: -15.907145500183105

Token 961: ' Base' (ID: 8729)
  Prédit: 'Base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Base' → logprob: -0.0019287518225610256
    2. ' Base' → logprob: -6.251928806304932
    3. '	Base' → logprob: -16.251928329467773
    4. '_Base' → logprob: -18.626928329467773
    5. '(Base' → logprob: -19.001928329467773
    6. '       ' → logprob: -19.126928329467773
    7. '   ' → logprob: -20.626928329467773
    8. 'Binary' → logprob: -20.876928329467773
    9. 'base' → logprob: -21.501928329467773
    10. '<Base' → logprob: -21.626928329467773

Token 962: 'Converter' (ID: 18762)
  Prédit: 'Converter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Converter' → logprob: -1.318681188422488e-05
    2. 'converter' → logprob: -11.75001335144043
    3. 'Decimal' → logprob: -12.75001335144043
    4. '_converter' → logprob: -13.50001335144043
    5. 'decimal' → logprob: -15.37501335144043
    6. 'Base' → logprob: -15.87501335144043
    7. 'Conv' → logprob: -16.25001335144043
    8. 'Converters' → logprob: -16.25001335144043
    9. 'int' → logprob: -16.87501335144043
    10. ' Converter' → logprob: -16.87501335144043

Token 963: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -8.435139898210764e-05
    2. 'to' → logprob: -9.750083923339844
    3. '.' → logprob: -10.625083923339844
    4. '.from' → logprob: -13.625083923339844
    5. 'To' → logprob: -16.500083923339844
    6. ').' → logprob: -16.875083923339844
    7. ' .' → logprob: -16.875083923339844
    8. ' to' → logprob: -17.000083923339844
    9. '   ' → logprob: -17.125083923339844
    10. '```' → logprob: -17.250083923339844

Token 964: '_decimal' (ID: 178716)
  Prédit: '_decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_decimal' → logprob: -0.2519303858280182
    2. 'decimal' → logprob: -1.5019303560256958
    3. ' decimal' → logprob: -14.001930236816406
    4. 'Decimal' → logprob: -15.126930236816406
    5. '(decimal' → logprob: -17.126930236816406
    6. 'int' → logprob: -17.376930236816406
    7. '_base' → logprob: -18.001930236816406
    8. 'def' → logprob: -18.376930236816406
    9. '_binary' → logprob: -18.751930236816406
    10. 'd' → logprob: -18.876930236816406

Token 965: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -9.253090865968261e-06
    2. '(' → logprob: -12.250009536743164
    3. 'base' → logprob: -12.375009536743164
    4. ' base' → logprob: -16.625009536743164
    5. ' (' → logprob: -17.250009536743164
    6. '(
' → logprob: -17.375009536743164
    7. ';base' → logprob: -19.500009536743164
    8. '```' → logprob: -19.625009536743164
    9. '(None' → logprob: -20.250009536743164
    10. '/base' → logprob: -20.250009536743164

Token 966: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005886562867090106
    2. ',value' → logprob: -7.500588893890381
    3. ' ,' → logprob: -10.500588417053223
    4. '(value' → logprob: -12.500588417053223
    5. ',int' → logprob: -13.000588417053223
    6. 'value' → logprob: -14.000588417053223
    7. '       ' → logprob: -15.000588417053223
    8. ',len' → logprob: -15.625588417053223
    9. '(' → logprob: -16.12558937072754
    10. '        ' → logprob: -16.25058937072754

Token 967: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0009117019944824278
    2. ' value' → logprob: -7.000911712646484
    3. ')value' → logprob: -16.375911712646484
    4. '(value' → logprob: -17.750911712646484
    5. ')' → logprob: -18.000911712646484
    6. ''value' → logprob: -18.375911712646484
    7. '"value' → logprob: -18.375911712646484
    8. '.value' → logprob: -19.875911712646484
    9. '[value' → logprob: -20.125911712646484
    10. '$value' → logprob: -20.250911712646484

Token 968: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5767045617103577
    2. ')' → logprob: -0.8267045617103577
    3. '       ' → logprob: -7.201704502105713
    4. ')
' → logprob: -11.076704978942871
    5. ')return' → logprob: -14.076704978942871
    6. ')`
' → logprob: -14.326704978942871
    7. ')

' → logprob: -14.826704978942871
    8. '<|end|>' → logprob: -14.951704978942871
    9. ' )
' → logprob: -15.201704978942871
    10. '),' → logprob: -15.701704978942871

Token 969: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00025311444187536836
    2. 'p' → logprob: -8.750252723693848
    3. '   ' → logprob: -9.875252723693848
    4. '<|end|>' → logprob: -10.375252723693848
    5. ',p' → logprob: -12.500252723693848
    6. '```' → logprob: -13.375252723693848
    7. '        
' → logprob: -13.500252723693848
    8. '           ' → logprob: -13.750252723693848
    9. '<|end|>' → logprob: -14.125252723693848
    10. ',' → logprob: -14.625252723693848

Token 970: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0027838386595249176
    2. '       ' → logprob: -6.00278377532959
    3. '   ' → logprob: -8.12778377532959
    4. 'pile' → logprob: -12.00278377532959
    5. ' piles' → logprob: -12.25278377532959
    6. '	p' → logprob: -14.12778377532959
    7. '```' → logprob: -14.75278377532959
    8. ' p' → logprob: -14.75278377532959
    9. ')p' → logprob: -16.377784729003906
    10. '           ' → logprob: -16.752784729003906

Token 971: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005258183926343918
    2. '.' → logprob: -5.255258083343506
    3. '.extend' → logprob: -11.005258560180664
    4. '.ap' → logprob: -12.630258560180664
    5. '.app' → logprob: -13.005258560180664
    6. ' .' → logprob: -13.880258560180664
    7. 'append' → logprob: -14.505258560180664
    8. '.Append' → logprob: -16.005258560180664
    9. ').' → logprob: -16.255258560180664
    10. '_append' → logprob: -16.380258560180664

Token 972: '(decimal' (ID: 171225)
  Prédit: '(decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decimal' → logprob: -0.011055837385356426
    2. 'decimal' → logprob: -4.511055946350098
    3. ' decimal' → logprob: -11.761055946350098
    4. '(' → logprob: -15.761055946350098
    5. '(dec' → logprob: -16.51105499267578
    6. 'Decimal' → logprob: -17.38605499267578
    7. '_decimal' → logprob: -18.63605499267578
    8. ' (' → logprob: -19.38605499267578
    9. 'dec' → logprob: -20.63605499267578
    10. '(
' → logprob: -21.01105499267578

Token 973: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022761584841646254
    2. '<|end|>' → logprob: -8.625227928161621
    3. ')return' → logprob: -10.625227928161621
    4. ')
' → logprob: -11.000227928161621
    5. '       ' → logprob: -12.625227928161621
    6. '<|end|>' → logprob: -13.500227928161621
    7. ' )' → logprob: -14.625227928161621
    8. '
' → logprob: -15.250227928161621
    9. '   ' → logprob: -15.375227928161621
    10. ')#' → logprob: -15.875227928161621

Token 974: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6935142874717712
    2. 'return' → logprob: -0.6935142874717712
    3. ' return' → logprob: -7.943514347076416
    4. '	return' → logprob: -12.068513870239258
    5. '       ' → logprob: -12.818513870239258
    6. '<|end|>' → logprob: -13.693513870239258
    7. '
' → logprob: -14.193513870239258
    8. ' ' → logprob: -15.068513870239258
    9. ':return' → logprob: -15.068513870239258
    10. '  ' → logprob: -15.193513870239258

Token 975: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01824605092406273
    2. '   ' → logprob: -4.018246173858643
    3. ' return' → logprob: -9.268245697021484
    4. '	return' → logprob: -13.518245697021484
    5. '       ' → logprob: -15.893245697021484
    6. ':return' → logprob: -16.518245697021484
    7. ' ' → logprob: -16.643245697021484
    8. '```' → logprob: -17.143245697021484
    9. '<|end|>' → logprob: -17.143245697021484
    10. '{return' → logprob: -17.143245697021484

Token 976: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0206720617134124e-05
    2. ' piles' → logprob: -11.50001049041748
    3. 'pile' → logprob: -16.750009536743164
    4. 'pies' → logprob: -17.625009536743164
    5. ' p' → logprob: -19.875009536743164
    6. '(p' → logprob: -20.625009536743164
    7. 'plies' → logprob: -21.125009536743164
    8. '[p' → logprob: -21.625009536743164
    9. '   ' → logprob: -21.625009536743164
    10. '	p' → logprob: -21.750009536743164

Token 977: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3890264332294464
    2. 'if' → logprob: -1.139026403427124
    3. '```' → logprob: -6.764026641845703
    4. '<|end|>' → logprob: -7.264026641845703
    5. '
' → logprob: -8.889026641845703
    6. ' if' → logprob: -9.389026641845703
    7. '#' → logprob: -10.014026641845703
    8. 'import' → logprob: -11.389026641845703
    9. 'from' → logprob: -12.139026641845703
    10. '    
' → logprob: -12.514026641845703

Token 978: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12692853808403015
    2. 'def' → logprob: -2.1269285678863525
    3. ' if' → logprob: -14.751928329467773
    4. '```' → logprob: -17.126928329467773
    5. '#' → logprob: -18.501928329467773
    6. 'import' → logprob: -19.501928329467773
    7. 'for' → logprob: -20.626928329467773
    8. ' def' → logprob: -20.876928329467773
    9. '	if' → logprob: -21.126928329467773
    10. 'If' → logprob: -21.251928329467773

Token 979: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.173704271830502e-06
    2. ' main' → logprob: -13.00000286102295
    3. 'def' → logprob: -14.00000286102295
    4. 'solve' → logprob: -20.250003814697266
    5. 'run' → logprob: -20.375003814697266
    6. '_main' → logprob: -20.500003814697266
    7. '	main' → logprob: -21.250003814697266
    8. '__' → logprob: -21.625003814697266
    9. '
' → logprob: -22.250003814697266
    10. 'if' → logprob: -22.875003814697266

Token 980: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.5597102396423e-05
    2. '():
' → logprob: -10.375035285949707
    3. '()' → logprob: -12.750035285949707
    4. ' ():' → logprob: -13.750035285949707
    5. '():
' → logprob: -15.625035285949707
    6. '()>' → logprob: -16.500036239624023
    7. '()">' → logprob: -17.625036239624023
    8. '():

' → logprob: -18.125036239624023
    9. '(' → logprob: -18.375036239624023
    10. '().' → logprob: -18.500036239624023

Token 981: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16976864635944366
    2. 'p' → logprob: -1.9197686910629272
    3. 'import' → logprob: -4.669768810272217
    4. ' piles' → logprob: -10.169768333435059
    5. '	p' → logprob: -10.544768333435059
    6. 'input' → logprob: -10.544768333435059
    7. 'pile' → logprob: -11.669768333435059
    8. '```' → logprob: -11.669768333435059
    9. '  ' → logprob: -12.544768333435059
    10. 'def' → logprob: -12.669768333435059

Token 982: ' piles' (ID: 90498)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0045724110677838326
    2. '   ' → logprob: -5.50457239151001
    3. ' piles' → logprob: -7.75457239151001
    4. 'import' → logprob: -9.879572868347168
    5. ' p' → logprob: -11.504572868347168
    6. 'pile' → logprob: -13.379572868347168
    7. 'initial' → logprob: -14.629572868347168
    8. 'input' → logprob: -14.754572868347168
    9. '	p' → logprob: -15.504572868347168
    10. 'def' → logprob: -15.629572868347168

Token 983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14278356730937958
    2. '=' → logprob: -2.0177836418151855
    3. '   ' → logprob: -9.392783164978027
    4. '=p' → logprob: -10.767783164978027
    5. '=[]' → logprob: -13.767783164978027
    6. '<|end|>' → logprob: -14.767783164978027
    7. '<|end|>' → logprob: -15.142783164978027
    8. 'p' → logprob: -15.142783164978027
    9. ' ' → logprob: -15.267783164978027
    10. '=input' → logprob: -15.267783164978027

Token 984: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -3.7697225252486533e-06
    2. ' parse' → logprob: -12.500003814697266
    3. '	parse' → logprob: -23.000003814697266
    4. '(parse' → logprob: -23.125003814697266
    5. '=parse' → logprob: -24.125003814697266
    6. '   ' → logprob: -24.250003814697266
    7. 'parser' → logprob: -25.500003814697266
    8. '.parse' → logprob: -26.125003814697266
    9. ' ' → logprob: -26.125003814697266
    10. 'par' → logprob: -27.500003814697266

Token 985: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -6.32523515378125e-05
    2. 'p' → logprob: -10.500062942504883
    3. 'input' → logprob: -11.000062942504883
    4. 'Input' → logprob: -11.125062942504883
    5. '_p' → logprob: -12.500062942504883
    6. '(p' → logprob: -16.500062942504883
    7. 'int' → logprob: -17.000062942504883
    8. '_INPUT' → logprob: -17.125062942504883
    9. '_inputs' → logprob: -17.250062942504883
    10. '_Input' → logprob: -17.250062942504883

Token 986: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0227406807243824
    2. '
' → logprob: -4.022740840911865
    3. ' runner' → logprob: -6.147740840911865
    4. 'runner' → logprob: -6.772740840911865
    5. 'game' → logprob: -7.397740840911865
    6. 'r' → logprob: -8.397740364074707
    7. ' game' → logprob: -8.397740364074707
    8. '_runner' → logprob: -9.897740364074707
    9. '    
' → logprob: -10.147740364074707
    10. 'gr' → logprob: -10.522740364074707

Token 987: '   ' (ID: 271)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' → logprob: -0.4911331832408905
    2. '   ' → logprob: -0.9911332130432129
    3. ' runner' → logprob: -4.116133213043213
    4. 'game' → logprob: -7.991133213043213
    5. 'r' → logprob: -8.866132736206055
    6. '
' → logprob: -9.616132736206055
    7. 'result' → logprob: -10.866132736206055
    8. '_runner' → logprob: -11.366132736206055
    9. 'run' → logprob: -11.866132736206055
    10. 'Runner' → logprob: -11.991132736206055

Token 988: ' runner' (ID: 39201)
  Prédit: 'runner'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'runner' (adapté à ' runner') → logprob: -0.002101252321153879
    2. '   ' → logprob: -7.002101421356201
    3. 'game' → logprob: -7.002101421356201
    4. ' runner' → logprob: -8.252100944519043
    5. 'gr' → logprob: -11.627100944519043
    6. 'result' → logprob: -11.877100944519043
    7. '
' → logprob: -13.877100944519043
    8. 'r' → logprob: -14.502100944519043
    9. '    
' → logprob: -14.502100944519043
    10. 'GR' → logprob: -15.627100944519043

Token 989: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018491249531507492
    2. '=' → logprob: -4.143491268157959
    3. '.run' → logprob: -6.018491268157959
    4. '.' → logprob: -11.2684907913208
    5. '   ' → logprob: -12.7684907913208
    6. ' ' → logprob: -12.8934907913208
    7. '.Run' → logprob: -14.6434907913208
    8. '.runner' → logprob: -14.7684907913208
    9. '  ' → logprob: -15.0184907913208
    10. '.=' → logprob: -15.7684907913208

Token 990: ' Game' (ID: 7022)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.0001234428636962548
    2. ' Game' → logprob: -9.000123023986816
    3. '	Game' → logprob: -21.875123977661133
    4. '   ' → logprob: -22.125123977661133
    5. '_Game' → logprob: -22.500123977661133
    6. '(Game' → logprob: -22.750123977661133
    7. '<Game' → logprob: -22.875123977661133
    8. '.Game' → logprob: -24.000123977661133
    9. 'User' → logprob: -24.750123977661133
    10. 'Graph' → logprob: -26.125123977661133

Token 991: 'Runner' (ID: 26032)
  Prédit: 'Runner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Runner' → logprob: -4.320199877838604e-07
    2. 'runner' → logprob: -15.0
    3. 'Run' → logprob: -18.125
    4. ' Runner' → logprob: -18.25
    5. '_runner' → logprob: -18.25
    6. 'R' → logprob: -19.25
    7. '(Game' → logprob: -19.375
    8. 'Game' → logprob: -19.875
    9. 'unner' → logprob: -20.125
    10. ' runner' → logprob: -20.25

Token 992: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.500006675720215
    3. 'p' → logprob: -13.500006675720215
    4. '(r' → logprob: -14.125006675720215
    5. 'r' → logprob: -16.0000057220459
    6. '(
' → logprob: -16.2500057220459
    7. ' (' → logprob: -16.7500057220459
    8. '   ' → logprob: -16.7500057220459
    9. 'Game' → logprob: -17.8750057220459
    10. '```' → logprob: -18.6250057220459

Token 993: 'iles' (ID: 2892)
  Prédit: 'iles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iles' → logprob: -0.0013483305228874087
    2. 'p' → logprob: -6.626348495483398
    3. 'ile' → logprob: -11.001348495483398
    4. 'ils' → logprob: -13.501348495483398
    5. '(p' → logprob: -14.126348495483398
    6. 'l' → logprob: -14.751348495483398
    7. 'ails' → logprob: -14.876348495483398
    8. 'lies' → logprob: -15.126348495483398
    9. 'ILES' → logprob: -15.251348495483398
    10. ')' → logprob: -15.376348495483398

Token 994: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1479932963848114
    2. '   ' → logprob: -2.272993326187134
    3. ')
' → logprob: -3.397993326187134
    4. '()
' → logprob: -7.647993087768555
    5. '()' → logprob: -8.147993087768555
    6. ').' → logprob: -8.772993087768555
    7. ' ' → logprob: -10.397993087768555
    8. '.run' → logprob: -10.522993087768555
    9. '())' → logprob: -10.647993087768555
    10. '  ' → logprob: -10.897993087768555

Token 995: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.2700522541999817
    2. 'print' → logprob: -2.020052194595337
    3. '   ' → logprob: -2.270052194595337
    4. ' result' → logprob: -7.520052433013916
    5. '```' → logprob: -9.645051956176758
    6. ' print' → logprob: -9.895051956176758
    7. '
' → logprob: -10.395051956176758
    8. 'res' → logprob: -11.770051956176758
    9. 'output' → logprob: -12.645051956176758
    10. '	result' → logprob: -13.020051956176758

Token 996: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.004081485792994499
    2. 'print' (adapté à ' print') → logprob: -5.5040812492370605
    3. ' result' → logprob: -13.754081726074219
    4. 'res' → logprob: -14.004081726074219
    5. '   ' → logprob: -14.254081726074219
    6. 'out' → logprob: -14.629081726074219
    7. 'output' → logprob: -18.25408172607422
    8. ' print' → logprob: -18.25408172607422
    9. 'winner' → logprob: -18.37908172607422
    10. 'status' → logprob: -18.75408172607422

Token 997: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -3.2378600735682994e-05
    2. 'runner' → logprob: -10.500032424926758
    3. '(' → logprob: -13.000032424926758
    4. 'r' → logprob: -13.375032424926758
    5. ' runner' → logprob: -14.875032424926758
    6. '(
' → logprob: -15.000032424926758
    7. '(run' → logprob: -15.375032424926758
    8. '.runner' → logprob: -17.625032424926758
    9. '_runner' → logprob: -17.750032424926758
    10. '("' → logprob: -17.875032424926758

Token 998: 'unner' (ID: 49975)
  Prédit: 'unner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unner' → logprob: -7.3458322731312364e-06
    2. 'runner' → logprob: -12.250007629394531
    3. 'un' → logprob: -13.000007629394531
    4. 'uner' → logprob: -15.875007629394531
    5. '"' → logprob: -16.00000762939453
    6. 'unning' → logprob: -16.75000762939453
    7. 'nner' → logprob: -16.75000762939453
    8. 'unners' → logprob: -17.75000762939453
    9. ''' → logprob: -17.75000762939453
    10. ' runner' → logprob: -18.12500762939453

Token 999: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.00010044389637187123
    2. '.' → logprob: -9.625100135803223
    3. ').' → logprob: -10.750100135803223
    4. ' .' → logprob: -11.750100135803223
    5. ')' → logprob: -12.875100135803223
    6. 'run' → logprob: -13.875100135803223
    7. '   ' → logprob: -15.000100135803223
    8. ' ' → logprob: -15.875100135803223
    9. '.play' → logprob: -15.875100135803223
    10. '().' → logprob: -16.00010108947754

Token 1000: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00016325322212651372
    2. '()' → logprob: -8.750163078308105
    3. ')' → logprob: -12.875163078308105
    4. '())
' → logprob: -13.125163078308105
    5. ' ())' → logprob: -16.375164031982422
    6. '();)' → logprob: -16.750164031982422
    7. '())

' → logprob: -17.500164031982422
    8. '()
' → logprob: -18.500164031982422
    9. '(),' → logprob: -18.750164031982422
    10. '());' → logprob: -18.750164031982422

Token 1001: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2471589798224159e-05
    2. ' if' → logprob: -11.625012397766113
    3. '<|end|>' → logprob: -13.250012397766113
    4. '```' → logprob: -13.875012397766113
    5. '#' → logprob: -14.500012397766113
    6. '
' → logprob: -15.375012397766113
    7. '	if' → logprob: -17.37501335144043
    8. '#if' → logprob: -18.12501335144043
    9. '<|end|>' → logprob: -18.25001335144043
    10. '    
' → logprob: -18.37501335144043

Token 1002: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6933615207672119
    2. ' __' → logprob: -0.6933615207672119
    3. 'name' → logprob: -8.568361282348633
    4. '_name' → logprob: -10.943361282348633
    5. '___' → logprob: -13.193361282348633
    6. '```' → logprob: -13.568361282348633
    7. '  ' → logprob: -14.193361282348633
    8. ' ' → logprob: -14.568361282348633
    9. '.__' → logprob: -14.693361282348633
    10. ' name' → logprob: -14.693361282348633

Token 1003: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.28545859456062317
    2. ' ==' → logprob: -1.9104585647583008
    3. '==' → logprob: -2.660458564758301
    4. 'name' → logprob: -3.535458564758301
    5. '=="' → logprob: -7.035458564758301
    6. ' __' → logprob: -8.9104585647583
    7. 'main' → logprob: -9.6604585647583
    8. '=='' → logprob: -9.7854585647583
    9. 'if' → logprob: -10.5354585647583
    10. '[' → logprob: -10.5354585647583

Token 1004: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.3676733690081164e-05
    2. '==' → logprob: -11.12502384185791
    3. '__.__' → logprob: -11.75002384185791
    4. '=="' → logprob: -14.75002384185791
    5. '__.' → logprob: -15.25002384185791
    6. '___' → logprob: -16.250022888183594
    7. ' ==' → logprob: -16.500022888183594
    8. '__["' → logprob: -17.000022888183594
    9. 'name' → logprob: -17.125022888183594
    10. '____' → logprob: -17.500022888183594

Token 1005: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14148403704166412
    2. '==' → logprob: -2.141484022140503
    3. ' ==' → logprob: -4.266484260559082
    4. '=="' → logprob: -7.891484260559082
    5. '=='' → logprob: -10.891484260559082
    6. '__.__' → logprob: -11.016484260559082
    7. '.__' → logprob: -13.266484260559082
    8. '===' → logprob: -13.266484260559082
    9. '==
' → logprob: -13.766484260559082
    10. '=' → logprob: -13.891484260559082

Token 1006: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0181527491658926
    2. ''' → logprob: -4.018152713775635
    3. '__' → logprob: -12.893153190612793
    4. ' "__' → logprob: -15.143153190612793
    5. '"name' → logprob: -19.018152236938477
    6. '   ' → logprob: -19.518152236938477
    7. ' '__' → logprob: -19.518152236938477
    8. '("__' → logprob: -19.893152236938477
    9. ''"' → logprob: -20.143152236938477
    10. 'main' → logprob: -20.143152236938477

Token 1007: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006750782020390034
    2. '__' → logprob: -5.131750583648682
    3. '"' → logprob: -7.631750583648682
    4. 'name' → logprob: -8.50675106048584
    5. ''' → logprob: -9.13175106048584
    6. '_main' → logprob: -11.00675106048584
    7. ' main' → logprob: -12.38175106048584
    8. '__":
' → logprob: -13.88175106048584
    9. '"name' → logprob: -14.13175106048584
    10. 'py' → logprob: -14.38175106048584

Token 1008: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3139720559120178
    2. '__' → logprob: -1.313971996307373
    3. '__':
' → logprob: -7.313971996307373
    4. '__["' → logprob: -11.313972473144531
    5. '__.__' → logprob: -11.563972473144531
    6. '__.' → logprob: -11.688972473144531
    7. '__
' → logprob: -11.688972473144531
    8. '__",' → logprob: -13.188972473144531
    9. '__
' → logprob: -13.563972473144531
    10. '__("' → logprob: -15.063972473144531

Token 1009: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.02766929566860199
    2. '__' → logprob: -3.6526691913604736
    3. '   ' → logprob: -7.402669429779053
    4. ' main' → logprob: -7.902669429779053
    5. '	main' → logprob: -8.277668952941895
    6. '_main' → logprob: -9.152668952941895
    7. '____' → logprob: -11.152668952941895
    8. '(main' → logprob: -12.652668952941895
    9. '```' → logprob: -12.902668952941895
    10. '    
' → logprob: -12.902668952941895

Token 1010: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' main' → logprob: -15.500001907348633
    4. '	main' → logprob: -17.250001907348633
    5. 'import' → logprob: -19.625001907348633
    6. '_main' → logprob: -22.125001907348633
    7. '.main' → logprob: -23.125001907348633
    8. '(main' → logprob: -23.500001907348633
    9. '  ' → logprob: -25.625001907348633
    10. 'Main' → logprob: -25.750001907348633

Token 1011: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1009
Tokens correctement prédits (1ère position, stricte): 414
Tokens correctement prédits (1ère position, avec adaptation): 457
Tokens correctement prédits (top 10): 836
Précision stricte (1ère position): 41.03%
Précision adaptée (1ère position): 45.29%
Précision (top 10): 82.85%
================================================================================
