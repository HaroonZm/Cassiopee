================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    line = input()
    if line == '0 0':
        break
    M, W = map(int, line.split())
    bm = list(map(int, input().split()))
    bw = list(map(int, input().split()))

    max_energy = 0
    for i in range(M):
        for j in range(W):
            diff = abs(bm[i] - bw[j])
            energy = diff * (diff - 30) * (diff - 30)
            if energy > max_energy:
                max_energy = energy
    print(max_energy)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957265496253967
    2. '\' → logprob: -2.220726490020752
    3. ' ' → logprob: -2.470726490020752
    4. '```' → logprob: -2.845726490020752
    5. '    ' → logprob: -2.970726490020752
    6. '    
' → logprob: -3.220726490020752
    7. '\n' → logprob: -3.720726490020752
    8. ' 
' → logprob: -3.845726490020752
    9. '<|end|>' → logprob: -3.970726490020752
    10. '  
' → logprob: -5.095726490020752

Token 4: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19949382543563843
    2. '=' → logprob: -1.8244938850402832
    3. 's' → logprob: -4.699493885040283
    4. '.' → logprob: -5.824493885040283
    5. '.startswith' → logprob: -6.324493885040283
    6. '_' → logprob: -6.699493885040283
    7. '[' → logprob: -7.449493885040283
    8. '.readline' → logprob: -7.449493885040283
    9. '[:]' → logprob: -7.449493885040283
    10. '   ' → logprob: -7.574493885040283

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08899911493062973
    2. 'input' → logprob: -2.463999032974243
    3. ' ' → logprob: -10.963998794555664
    4. ' f' → logprob: -10.963998794555664
    5. ' file' → logprob: -11.588998794555664
    6. ' readline' → logprob: -12.213998794555664
    7. '=input' → logprob: -12.963998794555664
    8. 'file' → logprob: -12.963998794555664
    9. '(input' → logprob: -14.088998794555664
    10. 'f' → logprob: -14.338998794555664

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01445717178285122
    2. '()' → logprob: -4.5144572257995605
    3. '('' → logprob: -5.8894572257995605
    4. '("("' → logprob: -7.6394572257995605
    5. '("")' → logprob: -10.014456748962402
    6. '```' → logprob: -10.264456748962402
    7. ''' → logprob: -11.264456748962402
    8. '("' → logprob: -11.764456748962402
    9. ')' → logprob: -11.889456748962402
    10. '(`' → logprob: -12.139456748962402

Token 8: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 9: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11822997033596039
    2. '   ' → logprob: -2.993229866027832
    3. 'if' (adapté à ' if') → logprob: -3.368229866027832
    4. ' ' → logprob: -4.118229866027832
    5. '    ' → logprob: -5.243229866027832
    6. '.' → logprob: -5.743229866027832
    7. '  ' → logprob: -8.243229866027832
    8. '\n' → logprob: -8.368229866027832
    9. '=' → logprob: -8.493229866027832
    10. 'i' → logprob: -8.743229866027832

Token 10: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05100409686565399
    2. ' line' → logprob: -3.05100417137146
    3. ' ' → logprob: -6.551003932952881
    4. 'not' → logprob: -7.051003932952881
    5. 'line' → logprob: -9.426004409790039
    6. ' len' → logprob: -11.176004409790039
    7. '  ' → logprob: -11.676004409790039
    8. '<|end|>' → logprob: -12.301004409790039
    9. '    ' → logprob: -13.051004409790039
    10. ' lines' → logprob: -13.801004409790039

Token 11: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15226173400878906
    2. '.' → logprob: -2.652261734008789
    3. '.startswith' → logprob: -3.527261734008789
    4. ' ' → logprob: -4.152261734008789
    5. '==' → logprob: -4.402261734008789
    6. '.strip' → logprob: -5.277261734008789
    7. '<|end|>' → logprob: -6.027261734008789
    8. ' .' → logprob: -6.277261734008789
    9. ' !=' → logprob: -7.027261734008789
    10. '<|end|>' → logprob: -7.152261734008789

Token 12: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.08197477459907532
    2. ''' → logprob: -3.206974744796753
    3. '""' → logprob: -3.456974744796753
    4. '''' → logprob: -6.081974983215332
    5. ' "' → logprob: -6.206974983215332
    6. ' ""' → logprob: -6.581974983215332
    7. ' '' → logprob: -7.581974983215332
    8. ' ' → logprob: -8.456974983215332
    9. ' ''' → logprob: -8.456974983215332
    10. '"":' → logprob: -11.456974983215332

Token 13: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3881124258041382
    2. '':' → logprob: -1.6381124258041382
    3. 'exit' → logprob: -3.2631125450134277
    4. 'quit' → logprob: -3.3881125450134277
    5. '\n' → logprob: -3.8881125450134277
    6. ''\' → logprob: -5.013112545013428
    7. '''' → logprob: -5.263112545013428
    8. '```' → logprob: -5.263112545013428
    9. ''''' → logprob: -5.513112545013428
    10. ''ex' → logprob: -5.638112545013428

Token 14: ' ' (ID: 220)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.14732059836387634
    2. ''' → logprob: -2.022320508956909
    3. '\n' → logprob: -6.147320747375488
    4. ':' → logprob: -6.272320747375488
    5. ' ':' → logprob: -8.397320747375488
    6. '':
' → logprob: -8.897320747375488
    7. ' '' → logprob: -9.897320747375488
    8. '':
' → logprob: -10.147320747375488
    9. '0' → logprob: -10.647320747375488
    10. ' or' → logprob: -10.772320747375488

Token 15: '0' (ID: 15)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.08441709727048874
    2. ''' → logprob: -2.9594171047210693
    3. ' ':' → logprob: -4.45941686630249
    4. '0' → logprob: -4.83441686630249
    5. ' ' → logprob: -5.08441686630249
    6. ' '' → logprob: -6.45941686630249
    7. '':
' → logprob: -7.33441686630249
    8. '\n' → logprob: -8.084417343139648
    9. '':
' → logprob: -8.209417343139648
    10. ':' → logprob: -8.334417343139648

Token 16: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.031592369079589844
    2. ':' → logprob: -4.15659236907959
    3. ''' → logprob: -4.90659236907959
    4. '\n' → logprob: -4.90659236907959
    5. ' ':' → logprob: -9.53159236907959
    6. '':
' → logprob: -9.53159236907959
    7. ''):' → logprob: -9.53159236907959
    8. ''or' → logprob: -9.90659236907959
    9. '':
' → logprob: -10.03159236907959
    10. '<|end|>' → logprob: -10.15659236907959

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002545101335272193
    2. ':' → logprob: -6.12754487991333
    3. ' break' → logprob: -8.877545356750488
    4. '   ' → logprob: -8.877545356750488
    5. '\n' → logprob: -11.377545356750488
    6. '     ' → logprob: -11.377545356750488
    7. '	break' → logprob: -11.377545356750488
    8. '    ' → logprob: -11.502545356750488
    9. ':
' → logprob: -11.752545356750488
    10. '      ' → logprob: -11.752545356750488

Token 18: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4784976840019226
    2. ' break' → logprob: -0.9784976840019226
    3. 'break' (adapté à ' break') → logprob: -5.853497505187988
    4. '   ' → logprob: -6.728497505187988
    5. '	break' → logprob: -8.353497505187988
    6. '\n' → logprob: -9.603497505187988
    7. '           ' → logprob: -11.353497505187988
    8. '_break' → logprob: -11.853497505187988
    9. '```' → logprob: -11.978497505187988
    10. '-break' → logprob: -12.853497505187988

Token 19: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2683198153972626
    2. '    
' → logprob: -1.768319845199585
    3. '\n' → logprob: -3.268319845199585
    4. '  
' → logprob: -4.893319606781006
    5. '
' → logprob: -5.018319606781006
    6. '   
' → logprob: -5.143319606781006
    7. '  ' → logprob: -6.643319606781006
    8. ' 
' → logprob: -7.018319606781006
    9. '<|end|>' → logprob: -7.018319606781006
    10. ' ' → logprob: -7.268319606781006

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2836182415485382
    2. '    
' → logprob: -1.9086182117462158
    3. '\n' → logprob: -2.658618211746216
    4. '   
' → logprob: -5.033618450164795
    5. '
' → logprob: -5.158618450164795
    6. '  
' → logprob: -5.158618450164795
    7. ' 
' → logprob: -6.408618450164795
    8. 'n' → logprob: -6.658618450164795
    9. '  ' → logprob: -6.908618450164795
    10. '```' → logprob: -6.908618450164795

Token 21: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.314839243888855
    2. 'n' → logprob: -2.3148393630981445
    3. ' ' → logprob: -3.3148393630981445
    4. 'a' → logprob: -3.8148393630981445
    5. '    ' → logprob: -4.1898393630981445
    6. '    
' → logprob: -4.3148393630981445
    7. ' n' → logprob: -4.4398393630981445
    8. '[' → logprob: -4.5648393630981445
    9. '\n' → logprob: -4.5648393630981445
    10. 'x' → logprob: -5.3148393630981445

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020422483794391155
    2. ' ,' → logprob: -6.877042293548584
    3. ' =' → logprob: -7.377042293548584
    4. '=' → logprob: -8.877041816711426
    5. ',N' → logprob: -9.377041816711426
    6. 'a' → logprob: -10.127041816711426
    7. ',A' → logprob: -11.502041816711426
    8. ' ' → logprob: -11.502041816711426
    9. ',M' → logprob: -11.627041816711426
    10. ',S' → logprob: -11.752041816711426

Token 23: ' W' (ID: 486)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.22751305997371674
    2. ' N' → logprob: -1.602513074874878
    3. ' ' → logprob: -7.102512836456299
    4. 'n' → logprob: -7.977512836456299
    5. 'line' → logprob: -9.102513313293457
    6. ' line' → logprob: -9.227513313293457
    7. ' n' → logprob: -9.477513313293457
    8. 'space' → logprob: -9.477513313293457
    9. '  ' → logprob: -9.727513313293457
    10. 'D' → logprob: -10.102513313293457

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09376519173383713
    2. '=' → logprob: -2.4687652587890625
    3. ',' → logprob: -5.3437652587890625
    4. ' ' → logprob: -10.843765258789062
    5. ' ,' → logprob: -11.468765258789062
    6. ')' → logprob: -12.968765258789062
    7. '   ' → logprob: -13.468765258789062
    8. '    ' → logprob: -14.843765258789062
    9. '  ' → logprob: -15.343765258789062
    10. '```' → logprob: -15.406265258789062

Token 25: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.004802953451871872
    2. 'map' → logprob: -5.62980318069458
    3. ' line' → logprob: -6.87980318069458
    4. ' [' → logprob: -9.629802703857422
    5. '[' → logprob: -10.504802703857422
    6. '   ' → logprob: -10.754802703857422
    7. ' list' → logprob: -11.004802703857422
    8. ' ' → logprob: -11.004802703857422
    9. 'line' → logprob: -11.254802703857422
    10. '[line' → logprob: -12.754802703857422

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005066533572971821
    2. '(str' → logprob: -5.880066394805908
    3. '(' → logprob: -6.255066394805908
    4. '(lambda' → logprob: -8.130066871643066
    5. '(input' → logprob: -10.630066871643066
    6. 'int' → logprob: -11.630066871643066
    7. '[int' → logprob: -12.505066871643066
    8. 'str' → logprob: -13.755066871643066
    9. '<int' → logprob: -13.880066871643066
    10. '(eval' → logprob: -13.880066871643066

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5681506991386414
    2. '(line' → logprob: -0.9431506991386414
    3. ',line' → logprob: -3.193150758743286
    4. ')' → logprob: -6.318150520324707
    5. '(' → logprob: -7.193150520324707
    6. ' line' → logprob: -8.818150520324707
    7. 'line' → logprob: -8.818150520324707
    8. ' ,' → logprob: -10.443150520324707
    9. '	line' → logprob: -10.568150520324707
    10. '#line' → logprob: -11.068150520324707

Token 28: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5768342018127441
    2. ' line' → logprob: -0.8268342018127441
    3. ')' → logprob: -7.451834201812744
    4. '(line' → logprob: -9.201833724975586
    5. '   ' → logprob: -9.576833724975586
    6. '	line' → logprob: -10.076833724975586
    7. 'input' → logprob: -10.701833724975586
    8. '[line' → logprob: -10.951833724975586
    9. '=line' → logprob: -11.201833724975586
    10. ' ' → logprob: -11.326833724975586

Token 29: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.1886308640241623
    2. '.' → logprob: -1.8136308193206787
    3. '.strip' → logprob: -4.813631057739258
    4. ' .' → logprob: -8.313631057739258
    5. ').' → logprob: -8.438631057739258
    6. ')' → logprob: -8.938631057739258
    7. '().' → logprob: -9.188631057739258
    8. '.rstrip' → logprob: -10.938631057739258
    9. '   ' → logprob: -12.063631057739258
    10. 'split' → logprob: -12.563631057739258

Token 30: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.10200135409832001
    2. '())' → logprob: -2.352001428604126
    3. '()' → logprob: -6.852001190185547
    4. ')' → logprob: -8.227001190185547
    5. '(','' → logprob: -8.477001190185547
    6. '(' → logprob: -8.727001190185547
    7. '("' → logprob: -10.602001190185547
    8. '()))' → logprob: -10.977001190185547
    9. '())
' → logprob: -11.102001190185547
    10. '(',' → logprob: -11.602001190185547

Token 31: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5335975289344788
    2. '   ' → logprob: -2.033597469329834
    3. '\n' → logprob: -2.283597469329834
    4. '<|end|>' → logprob: -2.533597469329834
    5. '    
' → logprob: -3.658597469329834
    6. ')' → logprob: -4.033597469329834
    7. ' 
' → logprob: -4.408597469329834
    8. '  
' → logprob: -4.408597469329834
    9. ':' → logprob: -4.908597469329834
    10. '<|end|>' → logprob: -5.533597469329834

Token 32: ' bm' (ID: 83295)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6953204870223999
    2. ' 
' → logprob: -1.0703204870224
    3. '\n' → logprob: -3.8203206062316895
    4. ',' → logprob: -3.9453206062316895
    5. 'n' → logprob: -4.0703206062316895
    6. '\' → logprob: -4.1953206062316895
    7. ' if' → logprob: -4.8203206062316895
    8. 'if' → logprob: -4.8203206062316895
    9. '<|end|>' → logprob: -4.8203206062316895
    10. ' \' → logprob: -5.4453206062316895

Token 33: ' =' (ID: 314)
  Prédit: 'ask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ask' → logprob: -0.7638066411018372
    2. 'ap' → logprob: -2.0138065814971924
    3. 's' → logprob: -2.5138065814971924
    4. 'asks' → logprob: -2.6388065814971924
    5. ' =' → logprob: -2.7638065814971924
    6. 'p' → logprob: -2.8888065814971924
    7. 'm' → logprob: -3.3888065814971924
    8. '=' → logprob: -3.6388065814971924
    9. '_' → logprob: -4.1388068199157715
    10. 'aps' → logprob: -4.6388068199157715

Token 34: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0123590230941772
    2. ' [' → logprob: -1.8873590230941772
    3. ' ' → logprob: -2.012359142303467
    4. ' (' → logprob: -2.262359142303467
    5. '[' → logprob: -2.512359142303467
    6. '1' → logprob: -3.012359142303467
    7. '(' → logprob: -3.512359142303467
    8. ' M' → logprob: -3.512359142303467
    9. '[]' → logprob: -4.387359142303467
    10. ' []' → logprob: -4.387359142303467

Token 35: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.03410031646490097
    2. '(' → logprob: -3.409100294113159
    3. '(range' → logprob: -8.659100532531738
    4. '()' → logprob: -8.784100532531738
    5. '(int' → logprob: -9.534100532531738
    6. '(input' → logprob: -10.909100532531738
    7. '(
' → logprob: -11.159100532531738
    8. '(filter' → logprob: -12.034100532531738
    9. 'map' → logprob: -13.159100532531738
    10. '[int' → logprob: -13.409100532531738

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0025575917679816484
    2. '(' → logprob: -6.002557754516602
    3. 'int' → logprob: -10.252557754516602
    4. ')' → logprob: -11.752557754516602
    5. ',int' → logprob: -11.752557754516602
    6. '<int' → logprob: -11.877557754516602
    7. '[int' → logprob: -12.002557754516602
    8. '(lambda' → logprob: -12.127557754516602
    9. '(
' → logprob: -12.752557754516602
    10. '=int' → logprob: -12.877557754516602

Token 37: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07125521451234818
    2. ',input' → logprob: -3.0712552070617676
    3. '(' → logprob: -4.071255207061768
    4. ',' → logprob: -5.321255207061768
    5. 'input' → logprob: -7.946255207061768
    6. ')' → logprob: -10.446255683898926
    7. '(),' → logprob: -10.571255683898926
    8. ' input' → logprob: -10.946255683898926
    9. '=input' → logprob: -11.196255683898926
    10. '(
' → logprob: -11.196255683898926

Token 38: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.38699719309806824
    2. ' input' → logprob: -1.1369972229003906
    3. '	input' → logprob: -10.51199722290039
    4. ')' → logprob: -10.63699722290039
    5. ' ' → logprob: -10.88699722290039
    6. '   ' → logprob: -11.13699722290039
    7. '(input' → logprob: -11.38699722290039
    8. '=input' → logprob: -11.94949722290039
    9. ',input' → logprob: -12.26199722290039
    10. '[input' → logprob: -12.94949722290039

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1875571544806007e-05
    2. '()' → logprob: -11.375011444091797
    3. '()))' → logprob: -16.125011444091797
    4. ' ().' → logprob: -16.125011444091797
    5. '(' → logprob: -16.750011444091797
    6. '())' → logprob: -18.500011444091797
    7. '.' → logprob: -18.875011444091797
    8. '   ' → logprob: -18.875011444091797
    9. ')' → logprob: -19.125011444091797
    10. '()
' → logprob: -19.250011444091797

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015085970517247915
    2. 'strip' → logprob: -8.875150680541992
    3. ' split' → logprob: -11.625150680541992
    4. 'rstrip' → logprob: -13.625150680541992
    5. '(split' → logprob: -14.875150680541992
    6. 's' → logprob: -15.375150680541992
    7. 'spl' → logprob: -15.500150680541992
    8. 'sp' → logprob: -17.500150680541992
    9. ')' → logprob: -18.250150680541992
    10. '.split' → logprob: -18.500150680541992

Token 41: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011522965505719185
    2. '()' → logprob: -5.1365227699279785
    3. '())' → logprob: -5.7615227699279785
    4. '))' → logprob: -6.1365227699279785
    5. '()))
' → logprob: -8.886523246765137
    6. '(' → logprob: -9.261523246765137
    7. ')' → logprob: -11.636523246765137
    8. '()));' → logprob: -11.761523246765137
    9. '()))

' → logprob: -11.886523246765137
    10. '())))' → logprob: -12.636523246765137

Token 42: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0923643708229065
    2. '<|end|>' → logprob: -2.9673643112182617
    3. '()' → logprob: -4.592364311218262
    4. '   ' → logprob: -4.842364311218262
    5. ' )' → logprob: -5.092364311218262
    6. ' 
' → logprob: -6.217364311218262
    7. '[' → logprob: -6.217364311218262
    8. ' ' → logprob: -6.717364311218262
    9. '    ' → logprob: -6.842364311218262
    10. ')
' → logprob: -7.217364311218262

Token 43: ' bw' (ID: 20824)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' (adapté à ' bw') → logprob: -0.05274374410510063
    2. ' bw' → logprob: -3.802743673324585
    3. '   ' → logprob: -4.677743911743164
    4. 'b' → logprob: -4.927743911743164
    5. 'bm' → logprob: -5.677743911743164
    6. 'dw' → logprob: -6.052743911743164
    7. ' ' → logprob: -7.302743911743164
    8. 'bs' → logprob: -7.927743911743164
    9. 'dp' → logprob: -7.990243911743164
    10. 'bc' → logprob: -8.177743911743164

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859475791454315
    2. ' =' → logprob: -3.0485947132110596
    3. ',' → logprob: -13.04859447479248
    4. '   ' → logprob: -13.54859447479248
    5. ')' → logprob: -13.79859447479248
    6. ' ' → logprob: -14.29859447479248
    7. '=list' → logprob: -14.42359447479248
    8. '.' → logprob: -15.04859447479248
    9. 's' → logprob: -15.42359447479248
    10. '=[]' → logprob: -15.79859447479248

Token 45: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3133428394794464
    2. ' list' → logprob: -1.313342809677124
    3. '(list' → logprob: -9.438343048095703
    4. '=list' → logprob: -13.813343048095703
    5. 'ist' → logprob: -15.313343048095703
    6. '	list' → logprob: -16.063343048095703
    7. ':list' → logprob: -16.938343048095703
    8. 'int' → logprob: -17.563343048095703
    9. 'map' → logprob: -17.938343048095703
    10. 'List' → logprob: -18.063343048095703

Token 46: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2579425871372223
    2. '(map' → logprob: -1.5079425573349
    3. '(int' → logprob: -5.3829426765441895
    4. ' (' → logprob: -6.6329426765441895
    5. '(
' → logprob: -9.882942199707031
    6. '(list' → logprob: -12.007942199707031
    7. '(

' → logprob: -12.507942199707031
    8. '(s' → logprob: -12.632942199707031
    9. '(lambda' → logprob: -13.007942199707031
    10. '(max' → logprob: -13.507942199707031

Token 47: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.747814349073451e-05
    2. '<int' → logprob: -11.625017166137695
    3. 'int' → logprob: -12.750017166137695
    4. '=int' → logprob: -13.125017166137695
    5. '[int' → logprob: -13.375017166137695
    6. '(' → logprob: -13.750017166137695
    7. ',int' → logprob: -14.875017166137695
    8. ' (' → logprob: -15.250017166137695
    9. ']int' → logprob: -16.125017166137695
    10. '(lambda' → logprob: -16.250017166137695

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009139667963609099
    2. ',int' → logprob: -7.250914096832275
    3. '(int' → logprob: -8.750913619995117
    4. 'int' → logprob: -10.375913619995117
    5. ',input' → logprob: -11.750913619995117
    6. ' ,' → logprob: -12.750913619995117
    7. '   ' → logprob: -13.875913619995117
    8. '<int' → logprob: -14.500913619995117
    9. '[int' → logprob: -14.500913619995117
    10. '```' → logprob: -15.000913619995117

Token 49: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5250521302223206
    2. ' input' → logprob: -0.9000521302223206
    3. 'int' → logprob: -6.275052070617676
    4. ' int' → logprob: -10.650052070617676
    5. '(input' → logprob: -11.025052070617676
    6. '<input' → logprob: -14.150052070617676
    7. ' ' → logprob: -14.150052070617676
    8. '=input' → logprob: -14.275052070617676
    9. ',input' → logprob: -14.900052070617676
    10. '   ' → logprob: -15.150052070617676

Token 50: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7968066206085496e-05
    2. '()' → logprob: -10.500027656555176
    3. ' ().' → logprob: -16.000028610229492
    4. '.' → logprob: -16.500028610229492
    5. '()).' → logprob: -16.625028610229492
    6. '(' → logprob: -16.750028610229492
    7. '())' → logprob: -18.875028610229492
    8. '   ' → logprob: -18.875028610229492
    9. '()[' → logprob: -19.250028610229492
    10. '()
' → logprob: -19.375028610229492

Token 51: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.75
    3. 'spl' → logprob: -16.75
    4. '(split' → logprob: -17.125
    5. ' split' → logprob: -17.375
    6. 'strip' → logprob: -17.5
    7. 'plit' → logprob: -17.5
    8. ').' → logprob: -17.75
    9. '.split' → logprob: -18.75
    10. '))' → logprob: -18.75

Token 52: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1955266296863556
    2. '())' → logprob: -2.195526599884033
    3. '))' → logprob: -2.945526599884033
    4. '()' → logprob: -4.820526599884033
    5. ')' → logprob: -5.195526599884033
    6. '()))
' → logprob: -9.695527076721191
    7. '(' → logprob: -10.320527076721191
    8. '())
' → logprob: -11.820527076721191
    9. '()));' → logprob: -11.945527076721191
    10. '()))

' → logprob: -13.070527076721191

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0967114195227623
    2. 'n' → logprob: -3.8467113971710205
    3. 'result' → logprob: -4.2217116355896
    4. '    
' → logprob: -4.4717116355896
    5. 'total' → logprob: -4.9717116355896
    6. ')' → logprob: -5.4717116355896
    7. '
' → logprob: -5.4717116355896
    8. '<|end|>' → logprob: -5.5967116355896
    9. 'sum' → logprob: -6.0967116355896
    10. 's' → logprob: -6.0967116355896

Token 54: ' max' (ID: 2999)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2339876890182495
    2. 'bm' → logprob: -3.483987808227539
    3. 'pairs' → logprob: -3.733987808227539
    4. 'count' → logprob: -3.983987808227539
    5. 'res' → logprob: -4.358987808227539
    6. 'score' → logprob: -4.358987808227539
    7. 'result' → logprob: -4.733987808227539
    8. 'sum' → logprob: -5.108987808227539
    9. 'ans' → logprob: -5.108987808227539
    10. 'for' → logprob: -5.108987808227539

Token 55: '_energy' (ID: 87157)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46883097290992737
    2. '_sum' → logprob: -2.0938310623168945
    3. '_weight' → logprob: -2.8438310623168945
    4. '_score' → logprob: -3.2188310623168945
    5. '_diff' → logprob: -3.3438310623168945
    6. '_value' → logprob: -3.4688310623168945
    7. '_val' → logprob: -3.8438310623168945
    8. '_b' → logprob: -3.9688310623168945
    9. '_profit' → logprob: -4.5938310623168945
    10. '_m' → logprob: -4.9688310623168945

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2258150279521942
    2. '=' → logprob: -1.6008150577545166
    3. '_energy' → logprob: -9.475814819335938
    4. '_' → logprob: -9.600814819335938
    5. 's' → logprob: -10.350814819335938
    6. '[' → logprob: -10.350814819335938
    7. ' ' → logprob: -10.350814819335938
    8. ',' → logprob: -10.475814819335938
    9. '   ' → logprob: -10.850814819335938
    10. '_idx' → logprob: -11.350814819335938

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13166974484920502
    2. ' ' → logprob: -2.631669759750366
    3. 'max' → logprob: -4.506669521331787
    4. 'float' → logprob: -4.506669521331787
    5. '-' → logprob: -4.631669521331787
    6. ' max' → logprob: -4.881669521331787
    7. ' float' → logprob: -5.131669521331787
    8. 'sum' → logprob: -6.131669521331787
    9. ' sum' → logprob: -6.506669521331787
    10. ' -' → logprob: -7.631669521331787

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03568439185619354
    2. 'max' → logprob: -4.285684585571289
    3. 'float' → logprob: -4.535684585571289
    4. 'sum' → logprob: -5.285684585571289
    5. '-' → logprob: -5.785684585571289
    6. 'bm' → logprob: -7.660684585571289
    7. ' ' → logprob: -8.160684585571289
    8. '[' → logprob: -8.410684585571289
    9. 'M' → logprob: -8.660684585571289
    10. '[[' → logprob: -8.785684585571289

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02857947163283825
    2. '<|end|>' → logprob: -4.028579235076904
    3. '
' → logprob: -5.028579235076904
    4. ' for' → logprob: -6.528579235076904
    5. '    
' → logprob: -6.903579235076904
    6. '<|end|>' → logprob: -7.653579235076904
    7. 'for' → logprob: -7.903579235076904
    8. '    ' → logprob: -9.153579711914062
    9. ' ' → logprob: -9.278579711914062
    10. '\n' → logprob: -9.278579711914062

Token 61: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06863860040903091
    2. '   ' → logprob: -3.318638563156128
    3. ' for' → logprob: -3.568638563156128
    4. 'dp' → logprob: -6.318638801574707
    5. 'energy' → logprob: -10.068638801574707
    6. '	for' → logprob: -11.068638801574707
    7. ' dp' → logprob: -11.193638801574707
    8. '```' → logprob: -11.318638801574707
    9. '  ' → logprob: -12.693638801574707
    10. '    ' → logprob: -12.818638801574707

Token 62: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014183126389980316
    2. ' m' → logprob: -4.389183044433594
    3. 'i' → logprob: -6.764183044433594
    4. 'm' → logprob: -9.014183044433594
    5. ' bm' → logprob: -9.014183044433594
    6. ' _' → logprob: -9.139183044433594
    7. ' j' → logprob: -9.889183044433594
    8. '_i' → logprob: -10.764183044433594
    9. ' ' → logprob: -10.889183044433594
    10. '_' → logprob: -11.264183044433594

Token 63: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025466508232057095
    2. 'in' → logprob: -6.002546787261963
    3. ' ' → logprob: -10.127546310424805
    4. ',' → logprob: -11.252546310424805
    5. '	in' → logprob: -11.627546310424805
    6. '  ' → logprob: -12.252546310424805
    7. '<|end|>' → logprob: -13.877546310424805
    8. 'n' → logprob: -14.252546310424805
    9. ' i' → logprob: -14.377546310424805
    10. ')' → logprob: -14.377546310424805

Token 64: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0005549400229938328
    2. 'range' → logprob: -7.500555038452148
    3. ' bm' → logprob: -13.625555038452148
    4. ' ' → logprob: -15.500555038452148
    5. '	range' → logprob: -15.500555038452148
    6. ' xrange' → logprob: -15.875555038452148
    7. '(range' → logprob: -16.37555503845215
    8. ' ran' → logprob: -17.62555503845215
    9. ' r' → logprob: -17.81305503845215
    10. '  ' → logprob: -17.87555503845215

Token 65: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.01961510442197323
    2. '(' → logprob: -4.144615173339844
    3. '(len' → logprob: -5.769615173339844
    4. '(W' → logprob: -8.269615173339844
    5. '(m' → logprob: -9.019615173339844
    6. '(min' → logprob: -10.644615173339844
    7. '(i' → logprob: -11.644615173339844
    8. '(b' → logprob: -11.769615173339844
    9. '(max' → logprob: -11.894615173339844
    10. ' (' → logprob: -12.269615173339844

Token 66: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007238718098960817
    2. '+' → logprob: -7.875723838806152
    3. '):
' → logprob: -8.500723838806152
    4. ' ):' → logprob: -9.625723838806152
    5. ')' → logprob: -10.000723838806152
    6. '   ' → logprob: -11.500723838806152
    7. ':' → logprob: -11.875723838806152
    8. '-' → logprob: -12.625723838806152
    9. ',' → logprob: -12.875723838806152
    10. ' +' → logprob: -13.000723838806152

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5510022640228271
    2. '   ' → logprob: -1.5510022640228271
    3. ':' → logprob: -2.426002264022827
    4. '<|end|>' → logprob: -2.551002264022827
    5. ' ' → logprob: -3.801002264022827
    6. ' for' → logprob: -4.301002502441406
    7. '    ' → logprob: -5.551002502441406
    8. '  ' → logprob: -6.926002502441406
    9. '<|end|>' → logprob: -6.926002502441406
    10. 'for' → logprob: -7.301002502441406

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.019266357645392418
    2. 'for' (adapté à ' for') → logprob: -4.394266128540039
    3. '   ' → logprob: -5.394266128540039
    4. ' ' → logprob: -6.519266128540039
    5. '	for' → logprob: -8.394266128540039
    6. '    ' → logprob: -9.019266128540039
    7. '<|end|>' → logprob: -9.019266128540039
    8. '  ' → logprob: -9.394266128540039
    9. ' max' → logprob: -9.519266128540039
    10. '       ' → logprob: -10.144266128540039

Token 69: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.17108336091041565
    2. 'j' → logprob: -2.046083450317383
    3. ' range' → logprob: -3.921083450317383
    4. 'range' → logprob: -5.171083450317383
    5. ' W' → logprob: -6.921083450317383
    6. 'W' → logprob: -7.546083450317383
    7. '   ' → logprob: -7.796083450317383
    8. '    ' → logprob: -8.546083450317383
    9. ' w' → logprob: -9.296083450317383
    10. ' ' → logprob: -9.421083450317383

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0018165516667068005
    2. 'in' → logprob: -6.376816749572754
    3. '<|end|>' → logprob: -10.001816749572754
    4. ' ' → logprob: -10.126816749572754
    5. '   ' → logprob: -11.126816749572754
    6. '	in' → logprob: -12.626816749572754
    7. '    ' → logprob: -12.751816749572754
    8. '  ' → logprob: -13.376816749572754
    9. 'range' → logprob: -13.376816749572754
    10. '(' → logprob: -14.126816749572754

Token 71: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3469999134540558
    2. 'range' → logprob: -1.3469998836517334
    3. ' W' → logprob: -3.8469998836517334
    4. 'W' → logprob: -4.4720001220703125
    5. '(range' → logprob: -8.722000122070312
    6. ' ' → logprob: -9.347000122070312
    7. '(W' → logprob: -10.097000122070312
    8. 'Range' → logprob: -10.097000122070312
    9. '   ' → logprob: -10.722000122070312
    10. '_range' → logprob: -11.472000122070312

Token 72: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.003753647906705737
    2. '(' → logprob: -6.003753662109375
    3. ' (' → logprob: -7.253753662109375
    4. '(M' → logprob: -8.753753662109375
    5. '   ' → logprob: -9.003753662109375
    6. ')' → logprob: -9.628753662109375
    7. 'W' → logprob: -9.753753662109375
    8. ' W' → logprob: -10.503753662109375
    9. '(w' → logprob: -10.878753662109375
    10. 'range' → logprob: -11.128753662109375

Token 73: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00025871701654978096
    2. ':' → logprob: -8.875258445739746
    3. '):
' → logprob: -10.000258445739746
    4. '+' → logprob: -10.500258445739746
    5. ' ):' → logprob: -10.750258445739746
    6. ')' → logprob: -11.500258445739746
    7. '   ' → logprob: -11.625258445739746
    8. '       ' → logprob: -13.000258445739746
    9. ',' → logprob: -13.875258445739746
    10. ']:' → logprob: -14.500258445739746

Token 74: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2393598109483719
    2. ':' → logprob: -2.1143598556518555
    3. '           ' → logprob: -2.4893598556518555
    4. ':
' → logprob: -5.1143598556518555
    5. '<|end|>' → logprob: -6.6143598556518555
    6. '   ' → logprob: -7.3643598556518555
    7. ' if' → logprob: -8.239359855651855
    8. '               ' → logprob: -9.239359855651855
    9. ',' → logprob: -9.364359855651855
    10. ' and' → logprob: -9.489359855651855

Token 75: ' diff' (ID: 8868)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3632091283798218
    2. ' if' → logprob: -1.9882091283798218
    3. 'max' → logprob: -2.3632092475891113
    4. '               ' → logprob: -3.7382092475891113
    5. 'if' → logprob: -3.8632092475891113
    6. '           ' → logprob: -4.488209247589111
    7. ':' → logprob: -4.988209247589111
    8. ':
' → logprob: -5.613209247589111
    9. '(max' → logprob: -6.613209247589111
    10. ' ' → logprob: -6.738209247589111

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996322423219681
    2. '=' → logprob: -2.694963216781616
    3. '   ' → logprob: -11.694963455200195
    4. ')' → logprob: -12.194963455200195
    5. ' ' → logprob: -12.194963455200195
    6. 's' → logprob: -13.319963455200195
    7. '_' → logprob: -13.569963455200195
    8. '  ' → logprob: -13.944963455200195
    9. '=max' → logprob: -14.194963455200195
    10. '=int' → logprob: -14.444963455200195

Token 77: ' abs' (ID: 8443)
  Prédit: ' bm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bm' → logprob: -0.41347500681877136
    2. ' abs' → logprob: -1.5384750366210938
    3. 'abs' → logprob: -2.4134750366210938
    4. 'bm' → logprob: -3.4134750366210938
    5. '   ' → logprob: -7.413475036621094
    6. ' ' → logprob: -8.038475036621094
    7. ' bw' → logprob: -8.663475036621094
    8. ' max' → logprob: -9.038475036621094
    9. 'b' → logprob: -10.163475036621094
    10. '	b' → logprob: -10.350975036621094

Token 78: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.8444881536415778e-05
    2. '(' → logprob: -10.500028610229492
    3. 'bm' → logprob: -15.500028610229492
    4. '(i' → logprob: -16.000028610229492
    5. '(B' → logprob: -16.000028610229492
    6. 'b' → logprob: -16.250028610229492
    7. '(bs' → logprob: -16.250028610229492
    8. '(bp' → logprob: -16.875028610229492
    9. ' (' → logprob: -17.250028610229492
    10. '((' → logprob: -17.375028610229492

Token 79: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0564331205387134e-05
    2. 'w' → logprob: -11.75001049041748
    3. '[m' → logprob: -13.00001049041748
    4. '[i' → logprob: -15.62501049041748
    5. 'м' → logprob: -16.625011444091797
    6. '[' → logprob: -16.750011444091797
    7. ' m' → logprob: -16.750011444091797
    8. 'j' → logprob: -17.625011444091797
    9. 'i' → logprob: -18.125011444091797
    10. '[j' → logprob: -18.250011444091797

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.894790981779806e-05
    2. '[j' → logprob: -10.000048637390137
    3. '[' → logprob: -12.625048637390137
    4. '[I' → logprob: -16.250049591064453
    5. 'i' → logprob: -16.750049591064453
    6. '[m' → logprob: -17.375049591064453
    7. '[
' → logprob: -18.500049591064453
    8. '[M' → logprob: -18.625049591064453
    9. '[s' → logprob: -18.875049591064453
    10. ' [' → logprob: -19.125049591064453

Token 81: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.37607842683792114
    2. ' -' → logprob: -1.3760783672332764
    3. ']' → logprob: -2.8760783672332764
    4. '[j' → logprob: -5.6260786056518555
    5. '-j' → logprob: -7.3760786056518555
    6. ']-' → logprob: -9.126078605651855
    7. '   ' → logprob: -9.626078605651855
    8. '-b' → logprob: -10.126078605651855
    9. '[' → logprob: -10.376078605651855
    10. ' ' → logprob: -10.876078605651855

Token 82: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0796131044626236
    2. ' -' → logprob: -2.579613208770752
    3. '-b' → logprob: -7.329613208770752
    4. '-j' → logprob: -10.079612731933594
    5. ' ' → logprob: -11.704612731933594
    6. '   ' → logprob: -12.454612731933594
    7. ')' → logprob: -12.954612731933594
    8. '-w' → logprob: -12.954612731933594
    9. '  ' → logprob: -13.204612731933594
    10. '<|end|>' → logprob: -13.454612731933594

Token 83: ' bw' (ID: 20824)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' → logprob: -0.08905451744794846
    2. ' bw' → logprob: -2.464054584503174
    3. '	bw' → logprob: -9.339054107666016
    4. ' ' → logprob: -11.589054107666016
    5. '   ' → logprob: -11.839054107666016
    6. '_bw' → logprob: -12.464054107666016
    7. 'b' → logprob: -12.714054107666016
    8. '  ' → logprob: -13.589054107666016
    9. '    ' → logprob: -14.839054107666016
    10. 'bm' → logprob: -14.964054107666016

Token 84: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.7146746763028204e-05
    2. 'j' → logprob: -10.62503719329834
    3. '[' → logprob: -12.62503719329834
    4. '][' → logprob: -12.62503719329834
    5. '[i' → logprob: -13.37503719329834
    6. ')' → logprob: -13.75003719329834
    7. ']' → logprob: -13.75003719329834
    8. ' [' → logprob: -14.25003719329834
    9. '])' → logprob: -14.75003719329834
    10. '   ' → logprob: -15.00003719329834

Token 85: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.024940116330981255
    2. ')' → logprob: -4.149940013885498
    3. '])
' → logprob: -4.774940013885498
    4. ']' → logprob: -8.774940490722656
    5. ')
' → logprob: -9.274940490722656
    6. '))' → logprob: -9.774940490722656
    7. '])
' → logprob: -10.149940490722656
    8. '])

' → logprob: -10.524940490722656
    9. ''])' → logprob: -11.399940490722656
    10. ')**' → logprob: -11.899940490722656

Token 86: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09634436666965485
    2. '
' → logprob: -2.721344470977783
    3. 'max' → logprob: -3.846344470977783
    4. ')
' → logprob: -6.846344470977783
    5. ')' → logprob: -7.096344470977783
    6. ' max' → logprob: -7.471344470977783
    7. '            
' → logprob: -7.596344470977783
    8. 'if' → logprob: -7.846344470977783
    9. '   ' → logprob: -8.221343994140625
    10. '       ' → logprob: -8.721343994140625

Token 87: ' energy' (ID: 5954)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.44544607400894165
    2. 'energy' (adapté à ' energy') → logprob: -1.9454460144042969
    3. '           ' → logprob: -2.320446014404297
    4. 'if' → logprob: -2.445446014404297
    5. ' max' → logprob: -4.070446014404297
    6. ' if' → logprob: -5.070446014404297
    7. ' energy' → logprob: -5.695446014404297
    8. '               ' → logprob: -6.320446014404297
    9. '   ' → logprob: -6.570446014404297
    10. '                   ' → logprob: -8.570446014404297

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39806652069091797
    2. '=' → logprob: -1.148066520690918
    3. ' +=' → logprob: -5.023066520690918
    4. '+=' → logprob: -5.398066520690918
    5. '+' → logprob: -11.648066520690918
    6. ' ' → logprob: -12.023066520690918
    7. '   ' → logprob: -13.148066520690918
    8. '=max' → logprob: -13.148066520690918
    9. '	' → logprob: -14.273066520690918
    10. '  ' → logprob: -14.398066520690918

Token 89: ' diff' (ID: 8868)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.34872138500213623
    2. ' ' → logprob: -1.7237213850021362
    3. 'diff' → logprob: -2.598721504211426
    4. ' diff' → logprob: -3.973721504211426
    5. '1' → logprob: -4.723721504211426
    6. ' (' → logprob: -5.723721504211426
    7. '(' → logprob: -6.223721504211426
    8. 'max' → logprob: -6.348721504211426
    9. '10' → logprob: -6.598721504211426
    10. ' max' → logprob: -7.223721504211426

Token 90: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8408994674682617
    2. '*' → logprob: -0.9658994674682617
    3. '**' → logprob: -1.7158994674682617
    4. ' **' → logprob: -4.840899467468262
    5. ' ' → logprob: -9.840899467468262
    6. '***' → logprob: -10.403399467468262
    7. '+' → logprob: -10.653399467468262
    8. '*(' → logprob: -10.903399467468262
    9. ' +' → logprob: -11.028399467468262
    10. '2' → logprob: -11.278399467468262

Token 91: ' (' (ID: 350)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.03411275893449783
    2. ' diff' → logprob: -3.5341126918792725
    3. '2' → logprob: -5.784112930297852
    4. '	diff' → logprob: -8.034112930297852
    5. '3' → logprob: -8.909112930297852
    6. '4' → logprob: -9.159112930297852
    7. ' ' → logprob: -9.159112930297852
    8. '*' → logprob: -9.409112930297852
    9. '10' → logprob: -9.659112930297852
    10. '(diff' → logprob: -9.659112930297852

Token 92: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.04411932826042175
    2. ' diff' → logprob: -3.919119358062744
    3. '2' → logprob: -4.794119358062744
    4. 'bm' → logprob: -5.294119358062744
    5. 'min' → logprob: -6.169119358062744
    6. '(diff' → logprob: -6.794119358062744
    7. 'i' → logprob: -7.044119358062744
    8. ' ' → logprob: -7.669119358062744
    9. ' min' → logprob: -7.669119358062744
    10. ' bm' → logprob: -7.669119358062744

Token 93: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4440738558769226
    2. '+' → logprob: -1.3190739154815674
    3. ' +' → logprob: -2.4440739154815674
    4. ' )' → logprob: -5.944073677062988
    5. '-' → logprob: -7.694073677062988
    6. '<|end|>' → logprob: -7.694073677062988
    7. ' -' → logprob: -8.069073677062988
    8. ')+' → logprob: -8.694073677062988
    9. '<|end|>' → logprob: -9.444073677062988
    10. '+)' → logprob: -9.569073677062988

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016910063102841377
    2. ' ' → logprob: -4.141910076141357
    3. '2' → logprob: -8.3919095993042
    4. '4' → logprob: -9.6419095993042
    5. '   ' → logprob: -9.7669095993042
    6. '3' → logprob: -9.7669095993042
    7. '+' → logprob: -9.9544095993042
    8. ')' → logprob: -10.1419095993042
    9. '0' → logprob: -10.1419095993042
    10. '-' → logprob: -10.7669095993042

Token 95: '30' (ID: 1130)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002043436747044325
    2. ' ' → logprob: -6.6270432472229
    3. '2' → logprob: -8.127043724060059
    4. '3' → logprob: -9.627043724060059
    5. '4' → logprob: -9.877043724060059
    6. '100' → logprob: -10.002043724060059
    7. '10' → logprob: -10.502043724060059
    8. '   ' → logprob: -10.564543724060059
    9. '9' → logprob: -11.127043724060059
    10. '5' → logprob: -11.252043724060059

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0254789050668478
    2. ')
' → logprob: -4.400478839874268
    3. ')**' → logprob: -4.900478839874268
    4. ' )' → logprob: -5.775478839874268
    5. '   ' → logprob: -7.025478839874268
    6. ' if' → logprob: -7.275478839874268
    7. '       ' → logprob: -8.775479316711426
    8. 'if' → logprob: -9.275479316711426
    9. '           ' → logprob: -9.525479316711426
    10. ' )
' → logprob: -9.525479316711426

Token 97: ' *' (ID: 425)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8868300318717957
    2. '           ' → logprob: -1.1368300914764404
    3. 'if' → logprob: -1.6368300914764404
    4. '
' → logprob: -2.8868300914764404
    5. '   ' → logprob: -4.511829853057861
    6. ' ' → logprob: -6.511829853057861
    7. '               ' → logprob: -6.636829853057861
    8. '       ' → logprob: -7.886829853057861
    9. 'max' → logprob: -7.886829853057861
    10. '<|end|>' → logprob: -8.13683032989502

Token 98: ' (' (ID: 350)
  Prédit: ' diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.7243716716766357
    2. 'diff' → logprob: -1.0993716716766357
    3. ' (' → logprob: -2.4743716716766357
    4. '(diff' → logprob: -3.0993716716766357
    5. '-' → logprob: -3.9743716716766357
    6. ' ' → logprob: -4.724371910095215
    7. '2' → logprob: -5.099371910095215
    8. ' -' → logprob: -5.349371910095215
    9. '(' → logprob: -6.099371910095215
    10. '	diff' → logprob: -6.349371910095215

Token 99: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.04198284447193146
    2. ' diff' → logprob: -4.041982650756836
    3. '-' → logprob: -4.666982650756836
    4. '(diff' → logprob: -5.416982650756836
    5. ' ' → logprob: -6.791982650756836
    6. '2' → logprob: -6.791982650756836
    7. '30' → logprob: -6.916982650756836
    8. '1' → logprob: -7.291982650756836
    9. '100' → logprob: -7.416982650756836
    10. '20' → logprob: -7.416982650756836

Token 100: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3054129481315613
    2. '<|end|>' → logprob: -1.805413007736206
    3. '<|end|>' → logprob: -3.430413007736206
    4. ' -' → logprob: -4.180412769317627
    5. ' ' → logprob: -4.555412769317627
    6. ' if' → logprob: -4.680412769317627
    7. 'diff' → logprob: -4.930412769317627
    8. '  ' → logprob: -6.055412769317627
    9. '-' → logprob: -6.055412769317627
    10. '   ' → logprob: -6.180412769317627

Token 101: ' ' (ID: 220)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.8741100430488586
    2. '70' → logprob: -1.8741099834442139
    3. '100' → logprob: -2.374109983444214
    4. '90' → logprob: -2.499109983444214
    5. '150' → logprob: -2.874109983444214
    6. '120' → logprob: -3.249109983444214
    7. '50' → logprob: -3.624109983444214
    8. '30' → logprob: -3.749109983444214
    9. ' ' → logprob: -3.999109983444214
    10. '-' → logprob: -4.124110221862793

Token 102: '30' (ID: 1130)
  Prédit: '60'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '60' → logprob: -0.36671343445777893
    2. '70' → logprob: -1.7417134046554565
    3. '150' → logprob: -2.366713523864746
    4. '30' → logprob: -4.491713523864746
    5. '50' → logprob: -4.616713523864746
    6. '100' → logprob: -5.616713523864746
    7. '40' → logprob: -6.366713523864746
    8. '90' → logprob: -6.366713523864746
    9. '120' → logprob: -6.491713523864746
    10. '80' → logprob: -6.741713523864746

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007712039165198803
    2. '           ' → logprob: -5.257711887359619
    3. ')
' → logprob: -6.757711887359619
    4. ' )' → logprob: -7.632711887359619
    5. '       ' → logprob: -8.257712364196777
    6. '   ' → logprob: -8.382712364196777
    7. ' ' → logprob: -9.507712364196777
    8. '
' → logprob: -10.257712364196777
    9. 'if' → logprob: -10.382712364196777
    10. '<|end|>' → logprob: -10.757712364196777

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017637170385569334
    2. ' if' → logprob: -6.626763820648193
    3. 'if' → logprob: -8.626763343811035
    4. '       ' → logprob: -9.126763343811035
    5. '
' → logprob: -9.376763343811035
    6. '   ' → logprob: -10.751763343811035
    7. '		' → logprob: -11.876763343811035
    8. ' ' → logprob: -11.876763343811035
    9. '               ' → logprob: -12.001763343811035
    10. '```' → logprob: -12.751763343811035

Token 105: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9287316203117371
    2. 'if' (adapté à ' if') → logprob: -1.1787316799163818
    3. '           ' → logprob: -1.3037316799163818
    4. 'max' → logprob: -4.553731441497803
    5. '
' → logprob: -5.053731441497803
    6. '   ' → logprob: -5.053731441497803
    7. '       ' → logprob: -7.928731441497803
    8. ' max' → logprob: -7.928731441497803
    9. ' ' → logprob: -8.053731918334961
    10. ')' → logprob: -8.053731918334961

Token 106: ' energy' (ID: 5954)
  Prédit: ' energy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' energy' → logprob: -0.038048841059207916
    2. 'energy' → logprob: -3.28804874420166
    3. 'Energy' → logprob: -13.16304874420166
    4. ' ' → logprob: -13.41304874420166
    5. ' energia' → logprob: -14.03804874420166
    6. ' ' → logprob: -14.78804874420166
    7. ' energi' → logprob: -14.78804874420166
    8. ' energie' → logprob: -14.91304874420166
    9. '.energy' → logprob: -15.03804874420166
    10. '   ' → logprob: -15.16304874420166

Token 107: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.026321901008486748
    2. '>' → logprob: -3.6513218879699707
    3. ' ' → logprob: -11.276322364807129
    4. ' <' → logprob: -12.401322364807129
    5. '   ' → logprob: -13.276322364807129
    6. ' >=' → logprob: -13.901322364807129
    7. ' ' → logprob: -14.401322364807129
    8. '  ' → logprob: -14.776322364807129
    9. ' <=' → logprob: -14.901322364807129
    10. '<' → logprob: -15.526322364807129

Token 108: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2014150768518448
    2. 'max' → logprob: -1.7014150619506836
    3. '	max' → logprob: -14.201415061950684
    4. '0' → logprob: -14.326415061950684
    5. '(max' → logprob: -15.201415061950684
    6. ' ' → logprob: -16.201416015625
    7. 'Max' → logprob: -16.951416015625
    8. '=max' → logprob: -17.076416015625
    9. '_max' → logprob: -17.201416015625
    10. ':max' → logprob: -18.326416015625

Token 109: '_energy' (ID: 87157)
  Prédit: '_energy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_energy' → logprob: -3.128163257315464e-07
    2. 'energy' → logprob: -15.75
    3. '_max' → logprob: -16.375
    4. '_' → logprob: -17.625
    5. 'max' → logprob: -19.125
    6. ' energy' → logprob: -20.625
    7. 'Energy' → logprob: -20.75
    8. 'nergy' → logprob: -20.875
    9. '-energy' → logprob: -21.25
    10. '   ' → logprob: -21.375

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2632654905319214
    2. ':
' → logprob: -1.5132654905319214
    3. '               ' → logprob: -4.513265609741211
    4. '           ' → logprob: -8.513265609741211
    5. '):
' → logprob: -9.888265609741211
    6. ':
' → logprob: -11.513265609741211
    7. ' :
' → logprob: -11.638265609741211
    8. ':max' → logprob: -11.888265609741211
    9. 'max' → logprob: -12.263265609741211
    10. ' :' → logprob: -12.263265609741211

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013259568950161338
    2. ' max' → logprob: -6.751326084136963
    3. 'max' → logprob: -9.251325607299805
    4. '           ' → logprob: -10.501325607299805
    5. '   ' → logprob: -11.376325607299805
    6. '                   ' → logprob: -12.126325607299805
    7. '(max' → logprob: -12.501325607299805
    8. '       ' → logprob: -13.126325607299805
    9. '```' → logprob: -13.251325607299805
    10. '                       ' → logprob: -13.501325607299805

Token 112: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.23142996430397034
    2. 'max' (adapté à ' max') → logprob: -2.1064300537109375
    3. '               ' → logprob: -2.4814300537109375
    4. '                   ' → logprob: -6.8564300537109375
    5. '           ' → logprob: -9.106430053710938
    6. '                ' → logprob: -9.856430053710938
    7. '   ' → logprob: -10.231430053710938
    8. '                       ' → logprob: -11.231430053710938
    9. '       ' → logprob: -11.356430053710938
    10. '```' → logprob: -12.231430053710938

Token 113: '_energy' (ID: 87157)
  Prédit: '_energy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_energy' → logprob: -1.9743012671824545e-05
    2. 'energy' → logprob: -10.875020027160645
    3. 'Energy' → logprob: -14.500020027160645
    4. ' energy' → logprob: -16.250019073486328
    5. '_' → logprob: -16.500019073486328
    6. '```' → logprob: -18.000019073486328
    7. '               ' → logprob: -18.250019073486328
    8. '-energy' → logprob: -18.250019073486328
    9. '.energy' → logprob: -18.500019073486328
    10. '           ' → logprob: -18.625019073486328

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022655367851257
    2. '=' → logprob: -1.910226583480835
    3. '=max' → logprob: -13.035226821899414
    4. '<|end|>' → logprob: -16.535226821899414
    5. ' ' → logprob: -16.660226821899414
    6. 'max' → logprob: -17.035226821899414
    7. '＝' → logprob: -17.535226821899414
    8. 'energy' → logprob: -17.785226821899414
    9. ' energy' → logprob: -18.285226821899414
    10. '```' → logprob: -18.785226821899414

Token 115: ' energy' (ID: 5954)
  Prédit: 'energy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'energy' → logprob: -0.026304712519049644
    2. ' energy' → logprob: -3.6513047218322754
    3. 'energ' → logprob: -13.776304244995117
    4. 'Energy' → logprob: -14.651304244995117
    5. '.energy' → logprob: -14.651304244995117
    6. '   ' → logprob: -14.901304244995117
    7. '_energy' → logprob: -15.026304244995117
    8. ' energia' → logprob: -15.276304244995117
    9. 'ener' → logprob: -15.401304244995117
    10. 'energia' → logprob: -15.401304244995117

Token 116: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04965796321630478
    2. 'print' → logprob: -3.4246580600738525
    3. '
' → logprob: -4.174657821655273
    4. '    
' → logprob: -7.799657821655273
    5. '```' → logprob: -10.549657821655273
    6. ' print' → logprob: -11.049657821655273
    7. '
' → logprob: -11.674657821655273
    8. '           ' → logprob: -11.799657821655273
    9. '  
' → logprob: -11.799657821655273
    10. '       ' → logprob: -12.049657821655273

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16108781099319458
    2. 'print' → logprob: -1.9110877513885498
    3. '
' → logprob: -7.286087989807129
    4. '    
' → logprob: -9.661087989807129
    5. ' print' → logprob: -9.911087989807129
    6. '```' → logprob: -10.536087989807129
    7. '           ' → logprob: -11.036087989807129
    8. '       ' → logprob: -11.161087989807129
    9. '            
' → logprob: -13.161087989807129
    10. '  
' → logprob: -13.661087989807129

Token 118: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00992171186953783
    2. '   ' → logprob: -4.634921550750732
    3. ' print' → logprob: -8.88492202758789
    4. '
' → logprob: -11.00992202758789
    5. '    
' → logprob: -11.75992202758789
    6. '```' → logprob: -13.13492202758789
    7. '	print' → logprob: -15.50992202758789
    8. '  
' → logprob: -15.75992202758789
    9. '       ' → logprob: -16.13492202758789
    10. '        
' → logprob: -16.50992202758789

Token 119: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0031837786082178354
    2. '(' → logprob: -5.753183841705322
    3. '(f' → logprob: -12.378183364868164
    4. 'max' → logprob: -14.503183364868164
    5. '('' → logprob: -14.628183364868164
    6. '()' → logprob: -15.503183364868164
    7. '("("' → logprob: -15.753183364868164
    8. ' (' → logprob: -15.878183364868164
    9. '((' → logprob: -16.628183364868164
    10. '(m' → logprob: -16.753183364868164

Token 120: '_energy' (ID: 87157)
  Prédit: '_energy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_energy' → logprob: -4.320199877838604e-07
    2. 'energy' → logprob: -15.75
    3. '_space' → logprob: -16.0
    4. '_' → logprob: -16.625
    5. ' _' → logprob: -17.75
    6. '(_' → logprob: -18.375
    7. '_entropy' → logprob: -18.875
    8. 'Energy' → logprob: -19.125
    9. ')_' → logprob: -19.5
    10. ' energy' → logprob: -19.875

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -13.250005722045898
    3. ' )' → logprob: -13.250005722045898
    4. '())' → logprob: -14.125005722045898
    5. ')`' → logprob: -15.375005722045898
    6. '()' → logprob: -15.500005722045898
    7. '   ' → logprob: -15.500005722045898
    8. '))' → logprob: -15.625005722045898
    9. ')}' → logprob: -16.3750057220459
    10. '```' → logprob: -16.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 50.42%
Précision adaptée (1ère position): 52.94%
Précision (top 10): 86.55%
================================================================================
