================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

used = set()
max_turns = 50
turn = 0

def print_and_flush(word):
    print("?" + word)
    sys.stdout.flush()

def is_valid_word(word):
    if len(word) < 1 or len(word) > 10:
        return False
    for c in word:
        if c < 'a' or c > 'z':
            return False
    return True

def is_ai_word_valid(ai_word, last_word):
    # AI word length between 1 and 2
    if len(ai_word) < 1 or len(ai_word) > 2:
        return False
    if not ai_word.islower():
        return False
    if ai_word in used:
        return False
    if ai_word[0] != last_word[-1]:
        return False
    return True

# Start with a simple initial word
my_word = "a"
used.add(my_word)
print_and_flush(my_word)
turn += 1

last_word = my_word

while turn < max_turns:
    ai_word = input()
    if ai_word in used:
        # AI repeated a word
        print("!OUT")
        sys.stdout.flush()
        break
    if not is_ai_word_valid(ai_word, last_word):
        print("!OUT")
        sys.stdout.flush()
        break
    used.add(ai_word)
    last_word = ai_word

    # Find next word to say
    # next word must start with last char of ai_word
    start_char = ai_word[-1]
    # Try to find a single-char word not used starting with start_char
    # To force AI to fail quickly, use single char words
    found = False
    for c in "abcdefghijklmnopqrstuvwxyz":
        candidate = start_char + c  # two-letter word
        if candidate not in used and is_valid_word(candidate) and candidate[0] == start_char:
            my_word = candidate
            used.add(my_word)
            print_and_flush(my_word)
            turn += 1
            last_word = my_word
            found = True
            break
    if not found:
        # no word found, just print a word starting with start_char
        my_word = start_char
        if my_word in used:
            # no possible move, end here
            break
        used.add(my_word)
        print_and_flush(my_word)
        turn += 1
        last_word = my_word
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'used' (ID: 4943)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2504518926143646
    2. '\n' → logprob: -2.1254518032073975
    3. 'import' → logprob: -3.1254518032073975
    4. '<|end|>' → logprob: -3.2504518032073975
    5. 'newline' → logprob: -5.625452041625977
    6. '\' → logprob: -5.625452041625977
    7. '' → logprob: -6.125452041625977
    8. '<|end|>' → logprob: -6.125452041625977
    9. 'print' → logprob: -6.875452041625977
    10. '\r' → logprob: -6.875452041625977

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00010723850573413074
    2. ',' → logprob: -10.500106811523438
    3. '=' → logprob: -10.500106811523438
    4. '_' → logprob: -11.250106811523438
    5. ' .' → logprob: -11.500106811523438
    6. '(' → logprob: -11.875106811523438
    7. ':' → logprob: -12.750106811523438
    8. '.
' → logprob: -12.875106811523438
    9. '```' → logprob: -12.875106811523438
    10. '[' → logprob: -13.125106811523438

Token 5: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6452682614326477
    2. ' set' → logprob: -0.7702682614326477
    3. ' ' → logprob: -5.395268440246582
    4. ' {}' → logprob: -5.645268440246582
    5. '{}' → logprob: -5.770268440246582
    6. ' []' → logprob: -7.145268440246582
    7. '=set' → logprob: -8.645268440246582
    8. '[]' → logprob: -9.520268440246582
    9. ' {' → logprob: -9.520268440246582
    10. '  ' → logprob: -10.020268440246582

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007660295814275742
    2. '()' → logprob: -7.500765800476074
    3. '(
' → logprob: -9.875765800476074
    4. '.' → logprob: -10.250765800476074
    5. ')' → logprob: -10.625765800476074
    6. '((' → logprob: -10.750765800476074
    7. '('' → logprob: -11.250765800476074
    8. '```' → logprob: -11.250765800476074
    9. '(

' → logprob: -11.375765800476074
    10. '(`' → logprob: -12.000765800476074

Token 7: 'max' (ID: 3228)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04124780371785164
    2. ',' → logprob: -4.666247844696045
    3. '_' → logprob: -4.791247844696045
    4. '(' → logprob: -5.166247844696045
    5. '=' → logprob: -5.416247844696045
    6. 'def' → logprob: -5.791247844696045
    7. 'for' → logprob: -5.916247844696045
    8. '\' → logprob: -6.416247844696045
    9. 'a' → logprob: -6.916247844696045
    10. '\n' → logprob: -7.791247844696045

Token 8: '_turn' (ID: 89223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08901874721050262
    2. '_length' → logprob: -3.3390188217163086
    3. '_value' → logprob: -3.8390188217163086
    4. '_len' → logprob: -4.214018821716309
    5. '_val' → logprob: -4.964018821716309
    6. '_size' → logprob: -6.214018821716309
    7. '_count' → logprob: -7.214018821716309
    8. '(' → logprob: -7.464018821716309
    9. '_used' → logprob: -7.589018821716309
    10. '_usage' → logprob: -7.839018821716309

Token 9: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0029788874089717865
    2. '_' → logprob: -6.627978801727295
    3. '=' → logprob: -6.752978801727295
    4. ' =' → logprob: -8.252979278564453
    5. '_length' → logprob: -9.502979278564453
    6. '_s' → logprob: -9.752979278564453
    7. '_len' → logprob: -11.002979278564453
    8. ' ' → logprob: -11.127979278564453
    9. 'over' → logprob: -11.377979278564453
    10. ' s' → logprob: -11.502979278564453

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07938200235366821
    2. '=' → logprob: -2.5793819427490234
    3. '_' → logprob: -8.454381942749023
    4. ' ' → logprob: -8.454381942749023
    5. '  ' → logprob: -11.079381942749023
    6. '_space' → logprob: -11.204381942749023
    7. ')' → logprob: -11.329381942749023
    8. ',' → logprob: -11.829381942749023
    9. '.' → logprob: -12.704381942749023
    10. 'space' → logprob: -13.079381942749023

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11261195689439774
    2. '10' → logprob: -2.987612009048462
    3. '100' → logprob: -2.987612009048462
    4. '20' → logprob: -5.862611770629883
    5. '5' → logprob: -6.862611770629883
    6. '3' → logprob: -6.987611770629883
    7. '50' → logprob: -7.487611770629883
    8. '30' → logprob: -9.987611770629883
    9. '1' → logprob: -10.112611770629883
    10. '0' → logprob: -10.237611770629883

Token 12: '50' (ID: 1434)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5119190812110901
    2. '10' → logprob: -1.0119190216064453
    3. '3' → logprob: -4.136919021606445
    4. '5' → logprob: -4.386919021606445
    5. '20' → logprob: -5.511919021606445
    6. '50' → logprob: -6.386919021606445
    7. '6' → logprob: -6.761919021606445
    8. ' ' → logprob: -7.386919021606445
    9. 'int' → logprob: -8.011919021606445
    10. '30' → logprob: -8.761919021606445

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12070193141698837
    2. 'for' → logprob: -2.870702028274536
    3. '

' → logprob: -4.120701789855957
    4. '' → logprob: -4.370701789855957
    5. 'while' → logprob: -5.245701789855957
    6. ',' → logprob: -5.745701789855957
    7. '
' → logprob: -5.745701789855957
    8. '\n' → logprob: -5.870701789855957
    9. ' 
' → logprob: -6.120701789855957
    10. '\' → logprob: -6.120701789855957

Token 14: 'turn' (ID: 529)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17579974234104156
    2. 'while' → logprob: -3.17579984664917
    3. '=' → logprob: -3.55079984664917
    4. '
' → logprob: -3.92579984664917
    5. ',' → logprob: -4.05079984664917
    6. ' for' → logprob: -4.80079984664917
    7. '_' → logprob: -5.05079984664917
    8. 'def' → logprob: -5.05079984664917
    9. ':' → logprob: -5.30079984664917
    10. '.' → logprob: -5.30079984664917

Token 15: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02937944419682026
    2. '_' → logprob: -4.154379367828369
    3. '_s' → logprob: -4.404379367828369
    4. ' =' → logprob: -7.779379367828369
    5. '_count' → logprob: -7.904379367828369
    6. '=' → logprob: -9.654379844665527
    7. '_length' → logprob: -9.904379844665527
    8. ' s' → logprob: -10.279379844665527
    9. '_number' → logprob: -11.029379844665527
    10. '_limit' → logprob: -11.279379844665527

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4288950562477112
    2. ' ' → logprob: -1.0538949966430664
    3. '1' → logprob: -8.553894996643066
    4. ' ' → logprob: -13.803894996643066
    5. ' =' → logprob: -16.678895950317383
    6. '  ' → logprob: -16.803895950317383
    7. '```' → logprob: -17.116395950317383
    8. '2' → logprob: -17.241395950317383
    9. '3' → logprob: -17.303895950317383
    10. '10' → logprob: -17.366395950317383

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001207615016028285
    2. ' ' → logprob: -7.0012078285217285
    3. '1' → logprob: -8.12620735168457
    4. '=' → logprob: -16.93870735168457
    5. 'int' → logprob: -17.12620735168457
    6. '100' → logprob: -17.31370735168457
    7. '50' → logprob: -17.56370735168457
    8. '```' → logprob: -17.62620735168457
    9. '  ' → logprob: -17.68870735168457
    10. '3' → logprob: -17.68870735168457

Token 18: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5530458688735962
    2. '
' → logprob: -0.9280458688735962
    3. ' while' → logprob: -3.6780457496643066
    4. '\n' → logprob: -6.678045749664307
    5. '

' → logprob: -7.178045749664307
    6. '<|end|>' → logprob: -7.553045749664307
    7. '\' → logprob: -8.053046226501465
    8. '#' → logprob: -8.178046226501465
    9. ',' → logprob: -8.303046226501465
    10. '' → logprob: -8.428046226501465

Token 19: 'def' (ID: 1314)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010291678830981255
    2. ' while' → logprob: -5.135291576385498
    3. 'w' → logprob: -5.760291576385498
    4. '
' → logprob: -7.510291576385498
    5. 'wh' → logprob: -8.260292053222656
    6. '\n' → logprob: -8.635292053222656
    7. '#' → logprob: -10.010292053222656
    8. '\' → logprob: -10.510292053222656
    9. 'for' → logprob: -10.635292053222656
    10. ',' → logprob: -10.885292053222656

Token 20: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5604767203330994
    2. ' play' → logprob: -1.4354767799377441
    3. ' game' → logprob: -3.185476779937744
    4. ' process' → logprob: -3.310476779937744
    5. ' check' → logprob: -3.560476779937744
    6. ' next' → logprob: -3.685476779937744
    7. ' ' → logprob: -3.685476779937744
    8. ' guess' → logprob: -4.810476779937744
    9. ' player' → logprob: -6.060476779937744
    10. ' make' → logprob: -6.185476779937744

Token 21: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008443537168204784
    2. '_' → logprob: -5.008443355560303
    3. '("("' → logprob: -7.758443355560303
    4. '("' → logprob: -8.383443832397461
    5. '("")' → logprob: -8.633443832397461
    6. '()' → logprob: -9.008443832397461
    7. '_turn' → logprob: -9.258443832397461
    8. '(_' → logprob: -9.508443832397461
    9. '_user' → logprob: -9.508443832397461
    10. '('' → logprob: -9.508443832397461

Token 22: '_flush' (ID: 105932)
  Prédit: '_flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flush' → logprob: -0.6785145401954651
    2. 'flush' → logprob: -1.4285144805908203
    3. '_exit' → logprob: -2.0535144805908203
    4. 'input' → logprob: -3.9285144805908203
    5. 'exit' → logprob: -4.17851448059082
    6. 'increment' → logprob: -4.30351448059082
    7. '_execute' → logprob: -4.55351448059082
    8. 'return' → logprob: -4.67851448059082
    9. '_increment' → logprob: -4.80351448059082
    10. ' flush' → logprob: -4.92851448059082

Token 23: '(word' (ID: 35459)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011712945997714996
    2. '(text' → logprob: -8.001171112060547
    3. '():' → logprob: -8.251171112060547
    4. '(message' → logprob: -8.376171112060547
    5. '(user' → logprob: -9.751171112060547
    6. '(prompt' → logprob: -10.376171112060547
    7. '(print' → logprob: -10.501171112060547
    8. '(s' → logprob: -10.501171112060547
    9. '(token' → logprob: -10.876171112060547
    10. ' (' → logprob: -11.001171112060547

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000464035285403952
    2. ')' → logprob: -8.00046443939209
    3. '(word' → logprob: -9.75046443939209
    4. '):
' → logprob: -10.12546443939209
    5. ' ):' → logprob: -11.25046443939209
    6. ':' → logprob: -12.12546443939209
    7. '(' → logprob: -12.37546443939209
    8. '):

' → logprob: -13.50046443939209
    9. ',' → logprob: -13.50046443939209
    10. '   ' → logprob: -13.75046443939209

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5377796292304993
    2. ':' → logprob: -0.9127796292304993
    3. '():' → logprob: -4.662779808044434
    4. '):' → logprob: -6.037779808044434
    5. ' print' → logprob: -7.287779808044434
    6. '(' → logprob: -7.412779808044434
    7. 'print' → logprob: -7.537779808044434
    8. '(print' → logprob: -8.287779808044434
    9. ':
' → logprob: -8.537779808044434
    10. ')' → logprob: -9.412779808044434

Token 26: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2888888418674469
    2. ' print' → logprob: -1.4138888120651245
    3. 'print' (adapté à ' print') → logprob: -4.913888931274414
    4. ' sys' → logprob: -8.038888931274414
    5. '```' → logprob: -10.413888931274414
    6. 'sys' → logprob: -12.538888931274414
    7. '    ' → logprob: -12.788888931274414
    8. 'import' → logprob: -14.038888931274414
    9. ' for' → logprob: -14.163888931274414
    10. '	print' → logprob: -14.413888931274414

Token 27: '("' (ID: 568)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.01818927936255932
    2. '(' → logprob: -4.018189430236816
    3. '(f' → logprob: -10.268189430236816
    4. '('' → logprob: -12.768189430236816
    5. 'word' → logprob: -14.643189430236816
    6. '()' → logprob: -15.143189430236816
    7. '("' → logprob: -15.393189430236816
    8. ' (' → logprob: -15.518189430236816
    9. ' word' → logprob: -16.0181884765625
    10. '((' → logprob: -16.5181884765625

Token 28: '?"' (ID: 16842)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.492669016122818
    2. '(word' → logprob: -1.2426689863204956
    3. 'word' → logprob: -3.117669105529785
    4. '")' → logprob: -3.992669105529785
    5. ' ",' → logprob: -4.492669105529785
    6. '"' → logprob: -4.867669105529785
    7. '{' → logprob: -5.367669105529785
    8. '(",' → logprob: -5.617669105529785
    9. ' word' → logprob: -5.617669105529785
    10. '"+' → logprob: -5.992669105529785

Token 29: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1463528722524643
    2. '{' → logprob: -2.646352767944336
    3. 'word' → logprob: -3.396352767944336
    4. '(word' → logprob: -3.896352767944336
    5. '[word' → logprob: -5.146352767944336
    6. '+' → logprob: -6.396352767944336
    7. ' ,' → logprob: -6.396352767944336
    8. ' +' → logprob: -7.271352767944336
    9. ' word' → logprob: -7.521352767944336
    10. ')' → logprob: -7.771352767944336

Token 30: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.05498248338699341
    2. ' word' → logprob: -2.9299824237823486
    3. '(word' → logprob: -10.17998218536377
    4. '{' → logprob: -10.42998218536377
    5. '[word' → logprob: -10.92998218536377
    6. '"' → logprob: -12.42998218536377
    7. '	word' → logprob: -12.67998218536377
    8. ' ' → logprob: -13.42998218536377
    9. 'str' → logprob: -13.67998218536377
    10. '{}' → logprob: -13.92998218536377

Token 31: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1382216066122055
    2. ')' → logprob: -2.138221502304077
    3. ')
' → logprob: -4.638221740722656
    4. '+' → logprob: -7.138221740722656
    5. '   ' → logprob: -7.888221740722656
    6. ',end' → logprob: -8.888221740722656
    7. ' +' → logprob: -9.388221740722656
    8. '?' → logprob: -10.388221740722656
    9. ' ,' → logprob: -10.638221740722656
    10. '")' → logprob: -11.013221740722656

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00601767236366868
    2. '<|end|>' → logprob: -5.881017684936523
    3. 'sys' → logprob: -6.256017684936523
    4. ' sys' → logprob: -7.256017684936523
    5. '    
' → logprob: -9.131017684936523
    6. '    ' → logprob: -9.631017684936523
    7. ' ' → logprob: -9.631017684936523
    8. '
' → logprob: -9.631017684936523
    9. '<|end|>' → logprob: -9.631017684936523
    10. ')' → logprob: -9.881017684936523

Token 33: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022797435522079468
    2. ' sys' → logprob: -3.8977973461151123
    3. 'sys' (adapté à ' sys') → logprob: -6.272797584533691
    4. '<|end|>' → logprob: -8.647797584533691
    5. '    ' → logprob: -9.772797584533691
    6. '    
' → logprob: -10.272797584533691
    7. '	sys' → logprob: -10.647797584533691
    8. ' ' → logprob: -11.022797584533691
    9. '```' → logprob: -11.647797584533691
    10. '<|end|>' → logprob: -11.897797584533691

Token 34: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -5.32392441527918e-05
    2. '.' → logprob: -11.000053405761719
    3. '.stderr' → logprob: -11.000053405761719
    4. '.stdin' → logprob: -11.000053405761719
    5. '.flush' → logprob: -13.500053405761719
    6. '.exit' → logprob: -13.500053405761719
    7. ' .' → logprob: -15.750053405761719
    8. 'stdout' → logprob: -16.62505340576172
    9. '.std' → logprob: -18.00005340576172
    10. '.setdefault' → logprob: -18.25005340576172

Token 35: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -10.750022888183594
    3. '.stdout' → logprob: -14.250022888183594
    4. '.write' → logprob: -15.250022888183594
    5. '.Flush' → logprob: -15.625022888183594
    6. '.readline' → logprob: -15.750022888183594
    7. 'flush' → logprob: -16.375022888183594
    8. ' .' → logprob: -16.625022888183594
    9. '.flip' → logprob: -16.875022888183594
    10. '.fl' → logprob: -16.875022888183594

Token 36: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00021867557370569557
    2. '(' → logprob: -8.500218391418457
    3. '()
' → logprob: -11.750218391418457
    4. '()`' → logprob: -12.875218391418457
    5. ' ()' → logprob: -13.875218391418457
    6. '()

' → logprob: -13.875218391418457
    7. '`()' → logprob: -14.000218391418457
    8. ')' → logprob: -14.750218391418457
    9. '();' → logprob: -15.250218391418457
    10. '())' → logprob: -15.375218391418457

Token 37: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19514743983745575
    2. '\n' → logprob: -2.6951475143432617
    3. '<|end|>' → logprob: -3.4451475143432617
    4. 'def' → logprob: -3.5701475143432617
    5. '\' → logprob: -3.6951475143432617
    6. '    
' → logprob: -5.070147514343262
    7. ' 
' → logprob: -5.195147514343262
    8. '

' → logprob: -5.695147514343262
    9. '  
' → logprob: -5.695147514343262
    10. '#' → logprob: -6.695147514343262

Token 38: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.44445377588272095
    2. ' play' → logprob: -1.6944537162780762
    3. ' user' → logprob: -3.069453716278076
    4. ' process' → logprob: -3.569453716278076
    5. ' input' → logprob: -3.819453716278076
    6. ' check' → logprob: -3.819453716278076
    7. ' get' → logprob: -4.569453716278076
    8. ' guess' → logprob: -4.819453716278076
    9. ' start' → logprob: -5.069453716278076
    10. ' next' → logprob: -5.569453716278076

Token 39: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.8148559927940369
    2. '_word' → logprob: -1.3148560523986816
    3. '_pal' → logprob: -2.1898560523986816
    4. '_' → logprob: -2.9398560523986816
    5. '_v' → logprob: -3.4398560523986816
    6. '_correct' → logprob: -4.064856052398682
    7. '_w' → logprob: -4.314856052398682
    8. '_used' → logprob: -4.689856052398682
    9. '_game' → logprob: -4.939856052398682
    10. '_allowed' → logprob: -5.689856052398682

Token 40: '_word' (ID: 32074)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.6919528841972351
    2. '(' → logprob: -0.9419528841972351
    3. '_word' → logprob: -2.69195294380188
    4. '_' → logprob: -3.44195294380188
    5. '_token' → logprob: -5.566952705383301
    6. '_identifier' → logprob: -6.691952705383301
    7. '(token' → logprob: -6.816952705383301
    8. '_name' → logprob: -8.0669527053833
    9. '_input' → logprob: -8.0669527053833
    10. '_parent' → logprob: -8.3169527053833

Token 41: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.06204364821314812
    2. '(' → logprob: -2.8120436668395996
    3. ' (' → logprob: -9.812043190002441
    4. '(token' → logprob: -11.937043190002441
    5. '("("' → logprob: -12.437043190002441
    6. '(world' → logprob: -13.187043190002441
    7. '(user' → logprob: -13.312043190002441
    8. '_word' → logprob: -13.687043190002441
    9. '(w' → logprob: -13.937043190002441
    10. '(line' → logprob: -14.187043190002441

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024013224174268544
    2. ')' → logprob: -9.250240325927734
    3. '):
' → logprob: -9.250240325927734
    4. ':' → logprob: -10.625240325927734
    5. ' ):' → logprob: -11.000240325927734
    6. '   ' → logprob: -12.875240325927734
    7. ' ' → logprob: -13.750240325927734
    8. ',' → logprob: -14.000240325927734
    9. '):
' → logprob: -14.125240325927734
    10. '():' → logprob: -15.375240325927734

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017620481085032225
    2. '<|end|>' → logprob: -7.2517619132995605
    3. ' return' → logprob: -7.7517619132995605
    4. ')' → logprob: -8.751762390136719
    5. ':' → logprob: -8.876762390136719
    6. 'return' → logprob: -9.626762390136719
    7. '    
' → logprob: -9.751762390136719
    8. '    ' → logprob: -10.251762390136719
    9. '<|end|>' → logprob: -10.376762390136719
    10. ' ' → logprob: -10.876762390136719

Token 44: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050814446061849594
    2. ' return' → logprob: -3.050814390182495
    3. 'return' → logprob: -6.675814628601074
    4. ' if' → logprob: -8.425814628601074
    5. ' ' → logprob: -8.550814628601074
    6. '    ' → logprob: -8.675814628601074
    7. '  ' → logprob: -9.425814628601074
    8. ' word' → logprob: -10.175814628601074
    9. ' #' → logprob: -10.300814628601074
    10. '	return' → logprob: -10.550814628601074

Token 45: ' len' (ID: 4631)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.3250691294670105
    2. ' len' → logprob: -1.3250691890716553
    3. 'len' → logprob: -5.325068950653076
    4. ' not' → logprob: -5.825068950653076
    5. ' ' → logprob: -6.200068950653076
    6. 'word' → logprob: -6.325068950653076
    7. ' ' → logprob: -11.075069427490234
    8. '(word' → logprob: -11.450069427490234
    9. '	word' → logprob: -11.450069427490234
    10. 'not' → logprob: -11.575069427490234

Token 46: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.00035060103982686996
    2. '(' → logprob: -8.000350952148438
    3. 'word' → logprob: -11.875350952148438
    4. ' (' → logprob: -12.500350952148438
    5. ' word' → logprob: -13.375350952148438
    6. '[word' → logprob: -14.250350952148438
    7. '(words' → logprob: -14.375350952148438
    8. '	word' → logprob: -14.875350952148438
    9. '(user' → logprob: -15.000350952148438
    10. ')' → logprob: -15.500350952148438

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00047595196519978344
    2. ')<' → logprob: -8.250475883483887
    3. '==' → logprob: -9.500475883483887
    4. ')==' → logprob: -9.875475883483887
    5. '<' → logprob: -9.875475883483887
    6. ' )' → logprob: -10.875475883483887
    7. ' <' → logprob: -12.500475883483887
    8. ' ==' → logprob: -13.125475883483887
    9. ')<=' → logprob: -13.125475883483887
    10. ')!=' → logprob: -13.500475883483887

Token 48: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.24308370053768158
    2. ' <' → logprob: -1.6180837154388428
    3. '==' → logprob: -4.493083477020264
    4. ' ==' → logprob: -6.493083477020264
    5. '>' → logprob: -6.618083477020264
    6. '<=' → logprob: -6.743083477020264
    7. ')' → logprob: -6.868083477020264
    8. ' <=' → logprob: -7.993083477020264
    9. '   ' → logprob: -8.993083953857422
    10. '>=' → logprob: -8.993083953857422

Token 49: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7901798486709595
    2. '2' → logprob: -1.0401798486709595
    3. ' ' → logprob: -1.7901798486709595
    4. '1' → logprob: -3.79017972946167
    5. '4' → logprob: -5.79017972946167
    6. '5' → logprob: -9.040180206298828
    7. '   ' → logprob: -10.415180206298828
    8. '6' → logprob: -10.540180206298828
    9. '=' → logprob: -10.852680206298828
    10. '>' → logprob: -11.102680206298828

Token 50: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2630830705165863
    2. '3' → logprob: -1.5130831003189087
    3. '1' → logprob: -4.763082981109619
    4. '4' → logprob: -6.138082981109619
    5. ' ' → logprob: -8.013083457946777
    6. '5' → logprob: -10.388083457946777
    7. '   ' → logprob: -11.950583457946777
    8. '6' → logprob: -12.263083457946777
    9. '  ' → logprob: -12.825583457946777
    10. '>' → logprob: -13.200583457946777

Token 51: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16412900388240814
    2. ':' → logprob: -1.9141290187835693
    3. '   ' → logprob: -6.78912878036499
    4. ':return' → logprob: -6.78912878036499
    5. ':
' → logprob: -7.03912878036499
    6. 'or' → logprob: -7.78912878036499
    7. ' :' → logprob: -9.039129257202148
    8. ' and' → logprob: -9.914129257202148
    9. '0' → logprob: -9.914129257202148
    10. ' ' → logprob: -10.164129257202148

Token 52: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6306381225585938
    2. ' not' → logprob: -1.2556381225585938
    3. ' word' → logprob: -2.0056381225585938
    4. 'len' → logprob: -3.2556381225585938
    5. 'word' → logprob: -5.005638122558594
    6. 'not' → logprob: -6.505638122558594
    7. ' any' → logprob: -7.380638122558594
    8. ''' → logprob: -8.130638122558594
    9. ' ' → logprob: -8.380638122558594
    10. '"' → logprob: -8.880638122558594

Token 53: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.00012201975914649665
    2. '(' → logprob: -9.2501220703125
    3. 'word' → logprob: -11.7501220703125
    4. ' word' → logprob: -12.1251220703125
    5. '[word' → logprob: -12.1251220703125
    6. ' (' → logprob: -12.6251220703125
    7. '	word' → logprob: -13.7501220703125
    8. '(user' → logprob: -14.3751220703125
    9. '_word' → logprob: -14.8751220703125
    10. ' ' → logprob: -15.2501220703125

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007683531381189823
    2. '>' → logprob: -5.632683753967285
    3. ')>' → logprob: -6.257683753967285
    4. ' >' → logprob: -6.757683753967285
    5. ' )' → logprob: -7.007683753967285
    6. '==' → logprob: -10.757683753967285
    7. ')==' → logprob: -11.132683753967285
    8. '()' → logprob: -11.132683753967285
    9. '=' → logprob: -11.882683753967285
    10. '[' → logprob: -12.132683753967285

Token 55: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2018672078847885
    2. ' >' → logprob: -1.7018672227859497
    3. '()>' → logprob: -8.57686710357666
    4. '==' → logprob: -9.70186710357666
    5. '<' → logprob: -10.07686710357666
    6. '>=' → logprob: -10.45186710357666
    7. ' ' → logprob: -10.70186710357666
    8. ' >=' → logprob: -10.70186710357666
    9. ' <' → logprob: -10.82686710357666
    10. '()' → logprob: -11.07686710357666

Token 56: ' ' (ID: 220)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.677914023399353
    2. '15' → logprob: -1.677914023399353
    3. '50' → logprob: -1.802914023399353
    4. '10' → logprob: -3.1779141426086426
    5. '30' → logprob: -3.1779141426086426
    6. '100' → logprob: -3.8029141426086426
    7. ' ' → logprob: -3.8029141426086426
    8. '25' → logprob: -4.927914142608643
    9. '12' → logprob: -6.677914142608643
    10. '7' → logprob: -6.927914142608643

Token 57: '10' (ID: 702)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.8671713471412659
    2. '50' → logprob: -1.242171287536621
    3. '100' → logprob: -2.117171287536621
    4. '15' → logprob: -2.742171287536621
    5. '30' → logprob: -2.867171287536621
    6. '10' → logprob: -3.117171287536621
    7. '25' → logprob: -5.992171287536621
    8. '12' → logprob: -7.617171287536621
    9. '40' → logprob: -7.617171287536621
    10. '16' → logprob: -7.992171287536621

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02402612380683422
    2. ' or' → logprob: -4.024025917053223
    3. ':return' → logprob: -5.774025917053223
    4. '   ' → logprob: -6.274025917053223
    5. ':
' → logprob: -7.649025917053223
    6. ' :' → logprob: -8.274025917053223
    7. '):' → logprob: -9.649025917053223
    8. ')' → logprob: -11.024025917053223
    9. ' ' → logprob: -11.024025917053223
    10. '       ' → logprob: -11.524025917053223

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008302384987473488
    2. ':' → logprob: -5.008302211761475
    3. '   ' → logprob: -6.633302211761475
    4. ':return' → logprob: -9.133302688598633
    5. '<|end|>' → logprob: -10.008302688598633
    6. ':
' → logprob: -10.258302688598633
    7. ')' → logprob: -11.383302688598633
    8. ' or' → logprob: -11.508302688598633
    9. ' return' → logprob: -11.633302688598633
    10. ',' → logprob: -11.758302688598633

Token 60: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8311780095100403
    2. '   ' → logprob: -1.2061779499053955
    3. '       ' → logprob: -1.5811779499053955
    4. 'return' (adapté à ' return') → logprob: -2.8311779499053955
    5. '
' → logprob: -8.206177711486816
    6. '	return' → logprob: -9.831177711486816
    7. '    ' → logprob: -10.206177711486816
    8. ':return' → logprob: -10.206177711486816
    9. '```' → logprob: -11.706177711486816
    10. 'eturn' → logprob: -11.831177711486816

Token 61: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3132631778717041
    2. 'False' → logprob: -1.313263177871704
    3. ' True' → logprob: -14.063262939453125
    4. 'True' → logprob: -15.188262939453125
    5. ' ' → logprob: -15.563262939453125
    6. '(False' → logprob: -15.688262939453125
    7. ' None' → logprob: -16.688262939453125
    8. 'None' → logprob: -17.813262939453125
    9. ' false' → logprob: -17.938262939453125
    10. '=False' → logprob: -18.188262939453125

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005150265991687775
    2. '
' → logprob: -5.630150318145752
    3. '<|end|>' → logprob: -6.630150318145752
    4. '    
' → logprob: -9.130149841308594
    5. ',' → logprob: -10.505149841308594
    6. '<|end|>' → logprob: -10.755149841308594
    7. '  
' → logprob: -11.505149841308594
    8. ' ' → logprob: -11.630149841308594
    9. '	return' → logprob: -11.755149841308594
    10. '  ' → logprob: -11.880149841308594

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017162315780296922
    2. '
' → logprob: -6.626716136932373
    3. '<|end|>' → logprob: -8.626716613769531
    4. '    
' → logprob: -8.876716613769531
    5. '```' → logprob: -11.376716613769531
    6. '  
' → logprob: -11.376716613769531
    7. '	return' → logprob: -12.126716613769531
    8. ' ' → logprob: -12.251716613769531
    9. '<|end|>' → logprob: -12.501716613769531
    10. '       ' → logprob: -12.626716613769531

Token 64: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012851596809923649
    2. ' if' → logprob: -4.637851715087891
    3. 'if' → logprob: -6.137851715087891
    4. ' for' → logprob: -7.887851715087891
    5. 'return' → logprob: -8.38785171508789
    6. 'for' (adapté à ' for') → logprob: -9.01285171508789
    7. ' return' → logprob: -9.76285171508789
    8. ' ' → logprob: -10.38785171508789
    9. '<|end|>' → logprob: -10.38785171508789
    10. '
' → logprob: -10.76285171508789

Token 65: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6136649250984192
    2. 'c' → logprob: -0.8636649250984192
    3. ' ch' → logprob: -3.9886648654937744
    4. 'ch' → logprob: -4.6136651039123535
    5. ' char' → logprob: -4.9886651039123535
    6. 'char' → logprob: -6.3636651039123535
    7. ' letter' → logprob: -10.613664627075195
    8. ' ' → logprob: -11.238664627075195
    9. ' w' → logprob: -12.863664627075195
    10. '	c' → logprob: -13.738664627075195

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001985140610486269
    2. 'in' → logprob: -6.2519850730896
    3. ' ' → logprob: -9.876985549926758
    4. 'n' → logprob: -13.251985549926758
    5. 'a' → logprob: -14.126985549926758
    6. 's' → logprob: -14.251985549926758
    7. 'import' → logprob: -14.626985549926758
    8. '<|end|>' → logprob: -15.001985549926758
    9. '  ' → logprob: -15.126985549926758
    10. 'i' → logprob: -16.251985549926758

Token 67: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.07965174317359924
    2. 'word' → logprob: -2.5796518325805664
    3. '"' → logprob: -7.329651832580566
    4. '(word' → logprob: -10.579651832580566
    5. ''' → logprob: -10.704651832580566
    6. ' "' → logprob: -10.954651832580566
    7. '[word' → logprob: -10.954651832580566
    8. '	word' → logprob: -11.454651832580566
    9. ' range' → logprob: -12.579651832580566
    10. ' ' → logprob: -13.454651832580566

Token 68: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014267049729824066
    2. ':' → logprob: -4.3892669677734375
    3. ' not' → logprob: -7.8892669677734375
    4. 'in' → logprob: -7.8892669677734375
    5. '<|end|>' → logprob: -8.139266967773438
    6. ' :' → logprob: -8.639266967773438
    7. ' if' → logprob: -8.889266967773438
    8. '<|end|>' → logprob: -9.639266967773438
    9. '   ' → logprob: -9.764266967773438
    10. '    ' → logprob: -10.014266967773438

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04092343896627426
    2. '<|end|>' → logprob: -3.7909233570098877
    3. ' if' → logprob: -4.915923595428467
    4. '   ' → logprob: -5.540923595428467
    5. '<|end|>' → logprob: -7.165923595428467
    6. ' ' → logprob: -7.290923595428467
    7. ' not' → logprob: -7.540923595428467
    8. 'if' → logprob: -7.665923595428467
    9. 'e' → logprob: -7.665923595428467
    10. ',' → logprob: -8.040923118591309

Token 70: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03426390886306763
    2. 'if' (adapté à ' if') → logprob: -4.534264087677002
    3. '<|end|>' → logprob: -4.534264087677002
    4. '       ' → logprob: -4.784264087677002
    5. ' ' → logprob: -6.659264087677002
    6. '   ' → logprob: -6.909264087677002
    7. '    ' → logprob: -7.034264087677002
    8. ' s' → logprob: -8.659263610839844
    9. '<|end|>' → logprob: -8.909263610839844
    10. ' not' → logprob: -10.034263610839844

Token 71: ' c' (ID: 274)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006452458444982767
    2. 'not' → logprob: -5.256452560424805
    3. ' c' → logprob: -6.756452560424805
    4. 'c' → logprob: -9.881452560424805
    5. ' ord' → logprob: -13.506452560424805
    6. '   ' → logprob: -14.506452560424805
    7. ' ' → logprob: -14.631452560424805
    8. 'ord' → logprob: -14.881452560424805
    9. '	not' → logprob: -14.881452560424805
    10. ''' → logprob: -15.756452560424805

Token 72: ' <' (ID: 464)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006145992316305637
    2. ' <' → logprob: -5.50614595413208
    3. 'not' → logprob: -7.00614595413208
    4. '<' → logprob: -7.13114595413208
    5. '<|end|>' → logprob: -8.756146430969238
    6. 'ot' → logprob: -9.756146430969238
    7. '.is' → logprob: -10.006146430969238
    8. '<'' → logprob: -10.006146430969238
    9. '   ' → logprob: -10.756146430969238
    10. '.' → logprob: -12.506146430969238

Token 73: ' '' (ID: 461)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.06286028772592545
    2. ' '' → logprob: -3.1878602504730225
    3. ''' → logprob: -3.9378602504730225
    4. ''A' → logprob: -9.187860488891602
    5. '"a' → logprob: -10.687860488891602
    6. 'a' → logprob: -10.812860488891602
    7. '"' → logprob: -11.687860488891602
    8. ''u' → logprob: -12.687860488891602
    9. ''o' → logprob: -12.937860488891602
    10. ''s' → logprob: -13.187860488891602

Token 74: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0008882334805093706
    2. ''a' → logprob: -7.125888347625732
    3. ''' → logprob: -9.500887870788574
    4. 'а' → logprob: -12.000887870788574
    5. ' a' → logprob: -13.000887870788574
    6. 'A' → logprob: -15.375887870788574
    7. '```' → logprob: -16.75088882446289
    8. ''A' → logprob: -17.00088882446289
    9. ' '' → logprob: -17.25088882446289
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -17.25088882446289

Token 75: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023199817165732384
    2. ' or' → logprob: -4.398200035095215
    3. ''or' → logprob: -5.023200035095215
    4. 'or' → logprob: -5.773200035095215
    5. 'a' → logprob: -7.148200035095215
    6. ''a' → logprob: -9.273200035095215
    7. ' '' → logprob: -10.898200035095215
    8. ''s' → logprob: -11.648200035095215
    9. ''''' → logprob: -11.773200035095215
    10. '<|end|>' → logprob: -12.523200035095215

Token 76: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.043101731687784195
    2. 'or' → logprob: -3.1681017875671387
    3. ''or' → logprob: -9.79310131072998
    4. ''' → logprob: -10.54310131072998
    5. 'a' → logprob: -12.16810131072998
    6. '<|end|>' → logprob: -12.16810131072998
    7. '```' → logprob: -12.91810131072998
    8. '	or' → logprob: -13.41810131072998
    9. ' and' → logprob: -13.91810131072998
    10. 'and' → logprob: -13.91810131072998

Token 77: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6326597929000854
    2. ' c' → logprob: -0.7576597929000854
    3. '<|end|>' → logprob: -11.132659912109375
    4. '	c' → logprob: -11.507659912109375
    5. '   ' → logprob: -11.757659912109375
    6. '>' → logprob: -12.132659912109375
    7. ' or' → logprob: -12.382659912109375
    8. 'z' → logprob: -12.632659912109375
    9. '       ' → logprob: -13.007659912109375
    10. '  ' → logprob: -13.007659912109375

Token 78: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14276641607284546
    2. ' >' → logprob: -2.0177664756774902
    3. 'c' → logprob: -9.517765998840332
    4. '>'' → logprob: -12.517765998840332
    5. '   ' → logprob: -12.517765998840332
    6. ' c' → logprob: -12.517765998840332
    7. '  ' → logprob: -13.767765998840332
    8. '       ' → logprob: -14.142765998840332
    9. 'z' → logprob: -14.767765998840332
    10. ' ' → logprob: -15.142765998840332

Token 79: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.00020544764993246645
    2. 'z' → logprob: -9.250205039978027
    3. '‘z' → logprob: -9.500205039978027
    4. ''' → logprob: -11.125205039978027
    5. ' '' → logprob: -11.250205039978027
    6. ''s' → logprob: -12.500205039978027
    7. ''y' → logprob: -13.750205039978027
    8. '’z' → logprob: -14.500205039978027
    9. ' z' → logprob: -15.000205039978027
    10. ''t' → logprob: -15.375205039978027

Token 80: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.306760805164231e-05
    2. ''z' → logprob: -11.25001335144043
    3. ''' → logprob: -17.87501335144043
    4. ' z' → logprob: -18.50001335144043
    5. '	z' → logprob: -19.25001335144043
    6. 'y' → logprob: -20.37501335144043
    7. '-z' → logprob: -21.37501335144043
    8. '‘z' → logprob: -21.50001335144043
    9. '```' → logprob: -21.62501335144043
    10. 'a' → logprob: -22.75001335144043

Token 81: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02870609238743782
    2. ':' → logprob: -3.9037060737609863
    3. ''' → logprob: -4.903706073760986
    4. ''):' → logprob: -8.153706550598145
    5. '':
' → logprob: -8.403706550598145
    6. '):' → logprob: -9.403706550598145
    7. '":' → logprob: -10.528706550598145
    8. ' ':' → logprob: -10.528706550598145
    9. '<|end|>' → logprob: -10.903706550598145
    10. ':
' → logprob: -12.153706550598145

Token 82: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5526573657989502
    2. ':' → logprob: -0.9276573657989502
    3. ':return' → logprob: -4.302657127380371
    4. ':
' → logprob: -5.052657127380371
    5. '           ' → logprob: -5.177657127380371
    6. ' return' → logprob: -6.802657127380371
    7. '<|end|>' → logprob: -6.802657127380371
    8. ' :' → logprob: -7.802657127380371
    9. '   ' → logprob: -7.802657127380371
    10. ' :
' → logprob: -9.677657127380371

Token 83: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7428567409515381
    2. '       ' → logprob: -0.9928567409515381
    3. ' return' → logprob: -2.117856740951538
    4. 'return' (adapté à ' return') → logprob: -4.367856979370117
    5. ' 
' → logprob: -4.617856979370117
    6. '   ' → logprob: -5.492856979370117
    7. '
' → logprob: -6.117856979370117
    8. ' ' → logprob: -6.367856979370117
    9. ':return' → logprob: -7.117856979370117
    10. '               ' → logprob: -7.367856979370117

Token 84: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004078401252627373
    2. ' False' → logprob: -5.504078388214111
    3. 'True' → logprob: -18.129077911376953
    4. '(False' → logprob: -19.629077911376953
    5. '=False' → logprob: -20.754077911376953
    6. 'false' → logprob: -21.879077911376953
    7. '_false' → logprob: -21.879077911376953
    8. 'F' → logprob: -22.129077911376953
    9. ' ' → logprob: -22.754077911376953
    10. ' True' → logprob: -23.004077911376953

Token 85: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036595143377780914
    2. '<|end|>' → logprob: -4.161595344543457
    3. '	return' → logprob: -5.036595344543457
    4. '
' → logprob: -5.036595344543457
    5. '    
' → logprob: -6.786595344543457
    6. '  
' → logprob: -6.786595344543457
    7. ' 
' → logprob: -7.036595344543457
    8. '  ' → logprob: -7.411595344543457
    9. ' return' → logprob: -7.411595344543457
    10. ':return' → logprob: -7.661595344543457

Token 86: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013095269969198853
    2. ' return' → logprob: -9.625130653381348
    3. '	return' → logprob: -10.500130653381348
    4. '<|end|>' → logprob: -11.250130653381348
    5. '       ' → logprob: -11.375130653381348
    6. '    
' → logprob: -12.375130653381348
    7. 'return' → logprob: -12.625130653381348
    8. '
' → logprob: -13.875130653381348
    9. '   ' → logprob: -14.250130653381348
    10. ',' → logprob: -14.500130653381348

Token 87: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4171331822872162
    2. ' return' → logprob: -1.4171332120895386
    3. 'return' (adapté à ' return') → logprob: -2.542133092880249
    4. '
' → logprob: -5.042133331298828
    5. '	return' → logprob: -5.042133331298828
    6. ' ' → logprob: -5.917133331298828
    7. '<|end|>' → logprob: -6.792133331298828
    8. '    
' → logprob: -7.167133331298828
    9. '  
' → logprob: -7.417133331298828
    10. ' 
' → logprob: -7.542133331298828

Token 88: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.008614808320999146
    2. 'True' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.258614540100098
    4. ' Tru' → logprob: -17.133615493774414
    5. ' ' → logprob: -18.633615493774414
    6. '   ' → logprob: -21.258615493774414
    7. ' true' → logprob: -21.758615493774414
    8. ' Tr' → logprob: -21.758615493774414
    9. '(True' → logprob: -21.883615493774414
    10. 'Tr' → logprob: -22.008615493774414

Token 89: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27667635679244995
    2. '<|end|>' → logprob: -2.2766764163970947
    3. '
' → logprob: -2.5266764163970947
    4. 'def' → logprob: -3.7766764163970947
    5. '\' → logprob: -4.026676177978516
    6. '\n' → logprob: -5.401676177978516
    7. '

' → logprob: -5.526676177978516
    8. 'n' → logprob: -6.151676177978516
    9. '#' → logprob: -6.401676177978516
    10. 'a' → logprob: -7.276676177978516

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006893092766404152
    2. '#' → logprob: -6.006893157958984
    3. 'w' → logprob: -6.631893157958984
    4. '_' → logprob: -6.756893157958984
    5. '\' → logprob: -7.256893157958984
    6. 'a' → logprob: -8.131893157958984
    7. 'n' → logprob: -8.506893157958984
    8. '<|end|>' → logprob: -8.881893157958984
    9. '
' → logprob: -9.631893157958984
    10. '```' → logprob: -10.006893157958984

Token 91: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13103900849819183
    2. ' next' → logprob: -3.7560389041900635
    3. ' can' → logprob: -4.006039142608643
    4. ' get' → logprob: -4.006039142608643
    5. ' valid' → logprob: -4.381039142608643
    6. ' check' → logprob: -4.631039142608643
    7. ' starts' → logprob: -4.756039142608643
    8. ' play' → logprob: -5.006039142608643
    9. ' start' → logprob: -5.131039142608643
    10. ' generate' → logprob: -5.506039142608643

Token 92: '_ai' (ID: 175198)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.1660262942314148
    2. '_' → logprob: -2.9160263538360596
    3. '_pal' → logprob: -3.4160263538360596
    4. '_word' → logprob: -3.7910263538360596
    5. '_possible' → logprob: -4.5410261154174805
    6. '_unique' → logprob: -4.5410261154174805
    7. '_prefix' → logprob: -5.7910261154174805
    8. '_used' → logprob: -6.2910261154174805
    9. ' _' → logprob: -6.5410261154174805
    10. '_suffix' → logprob: -6.6660261154174805

Token 93: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.22375115752220154
    2. '_' → logprob: -1.973751187324524
    3. '_turn' → logprob: -4.223751068115234
    4. '_input' → logprob: -4.598751068115234
    5. 'n' → logprob: -4.598751068115234
    6. '_answer' → logprob: -5.223751068115234
    7. '_guess' → logprob: -5.723751068115234
    8. '_n' → logprob: -5.973751068115234
    9. 'word' → logprob: -6.473751068115234
    10. '_move' → logprob: -6.473751068115234

Token 94: '_valid' (ID: 23321)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.0023938443046063185
    2. '(' → logprob: -6.25239372253418
    3. ' (' → logprob: -8.00239372253418
    4. '(w' → logprob: -10.37739372253418
    5. '_(' → logprob: -11.12739372253418
    6. '(user' → logprob: -11.12739372253418
    7. '(world' → logprob: -11.87739372253418
    8. '(valid' → logprob: -12.00239372253418
    9. '(words' → logprob: -12.12739372253418
    10. '(next' → logprob: -12.50239372253418

Token 95: '(ai' (ID: 172264)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.07911527156829834
    2. '(' → logprob: -2.579115390777588
    3. ' (' → logprob: -9.20411491394043
    4. '(user' → logprob: -10.20411491394043
    5. '(w' → logprob: -10.70411491394043
    6. '(world' → logprob: -11.20411491394043
    7. '(ai' → logprob: -11.20411491394043
    8. '(a' → logprob: -12.57911491394043
    9. '(words' → logprob: -12.57911491394043
    10. '(last' → logprob: -13.07911491394043

Token 96: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.006897116545587778
    2. 'word' → logprob: -5.75689697265625
    3. '(word' → logprob: -5.75689697265625
    4. ')' → logprob: -8.63189697265625
    5. '_' → logprob: -9.13189697265625
    6. ')_' → logprob: -9.38189697265625
    7. 's' → logprob: -10.63189697265625
    8. ' word' → logprob: -10.88189697265625
    9. 'Word' → logprob: -11.25689697265625
    10. '(' → logprob: -11.25689697265625

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033767418935894966
    2. ' ,' → logprob: -5.8783769607543945
    3. '):' → logprob: -7.6283769607543945
    4. ',last' → logprob: -9.878376960754395
    5. '_,' → logprob: -12.128376960754395
    6. ',user' → logprob: -12.503376960754395
    7. ' ' → logprob: -12.628376960754395
    8. ',current' → logprob: -12.753376960754395
    9. ',start' → logprob: -13.253376960754395
    10. '   ' → logprob: -13.378376960754395

Token 98: ' last' (ID: 2174)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.1101590394973755
    2. 'used' → logprob: -1.2351590394973755
    3. 'user' → logprob: -1.9851590394973755
    4. ' user' → logprob: -2.235158920288086
    5. 'prev' → logprob: -3.735158920288086
    6. 'last' → logprob: -4.110158920288086
    7. ' last' → logprob: -4.235158920288086
    8. ' prev' → logprob: -4.360158920288086
    9. 'player' → logprob: -4.360158920288086
    10. ' previous' → logprob: -4.485158920288086

Token 99: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.08271682262420654
    2. '_char' → logprob: -2.957716941833496
    3. '_user' → logprob: -4.332716941833496
    4. '_letter' → logprob: -4.832716941833496
    5. '_' → logprob: -6.082716941833496
    6. '_ai' → logprob: -6.582716941833496
    7. '_used' → logprob: -7.582716941833496
    8. '_character' → logprob: -7.582716941833496
    9. '_player' → logprob: -7.957716941833496
    10. '_turn' → logprob: -8.082716941833496

Token 100: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006844374001957476
    2. '):
' → logprob: -7.6256842613220215
    3. ',' → logprob: -9.12568473815918
    4. ')' → logprob: -9.62568473815918
    5. ' ):' → logprob: -11.50068473815918
    6. ':' → logprob: -12.25068473815918
    7. '):
' → logprob: -13.12568473815918
    8. ' ' → logprob: -14.00068473815918
    9. '):

' → logprob: -14.12568473815918
    10. '   ' → logprob: -14.75068473815918

Token 101: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1747911125421524
    2. '   ' → logprob: -2.174791097640991
    3. '(' → logprob: -3.174791097640991
    4. '():' → logprob: -6.29979133605957
    5. ':
' → logprob: -6.79979133605957
    6. ' :' → logprob: -6.92479133605957
    7. '):' → logprob: -8.17479133605957
    8. '(word' → logprob: -8.92479133605957
    9. '(":' → logprob: -9.29979133605957
    10. ',' → logprob: -9.42479133605957

Token 102: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001142241875641048
    2. ':' → logprob: -7.6261420249938965
    3. ' if' → logprob: -7.7511420249938965
    4. 'if' → logprob: -9.626142501831055
    5. ' return' → logprob: -9.751142501831055
    6. ':
' → logprob: -10.876142501831055
    7. '    
' → logprob: -11.001142501831055
    8. 'return' → logprob: -11.251142501831055
    9. ' :' → logprob: -12.126142501831055
    10. ',' → logprob: -12.251142501831055

Token 103: ' AI' (ID: 20837)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5261593461036682
    2. ' if' → logprob: -1.0261592864990234
    3. '   ' → logprob: -3.2761592864990234
    4. 'return' → logprob: -4.901159286499023
    5. ' return' → logprob: -5.401159286499023
    6. 'def' → logprob: -7.651159286499023
    7. 'If' → logprob: -8.901159286499023
    8. ' ' → logprob: -9.151159286499023
    9. 'eturn' → logprob: -9.276159286499023
    10. '#' → logprob: -10.026159286499023

Token 104: ' word' (ID: 2195)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40063998103141785
    2. '_word' → logprob: -2.4006400108337402
    3. '   ' → logprob: -3.0256400108337402
    4. ' if' → logprob: -3.2756400108337402
    5. 'def' → logprob: -3.2756400108337402
    6. '_prefix' → logprob: -3.6506400108337402
    7. '_start' → logprob: -4.65064001083374
    8. '_last' → logprob: -4.77564001083374
    9. '_len' → logprob: -4.77564001083374
    10. '_' → logprob: -4.90064001083374

Token 105: ' length' (ID: 5517)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.6053413152694702
    2. '   ' → logprob: -1.6053413152694702
    3. 'startswith' → logprob: -2.7303414344787598
    4. ' starts' → logprob: -2.9803414344787598
    5. 's' → logprob: -3.6053414344787598
    6. ':' → logprob: -3.9803414344787598
    7. 'if' → logprob: -4.23034143447876
    8. 'def' → logprob: -4.48034143447876
    9. 'starts' → logprob: -4.48034143447876
    10. ' =' → logprob: -4.73034143447876

Token 106: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.630075216293335
    2. ' >=' → logprob: -1.505075216293335
    3. ' <=' → logprob: -2.380075216293335
    4. '=' → logprob: -2.505075216293335
    5. '>=' → logprob: -3.630075216293335
    6. '   ' → logprob: -4.005075454711914
    7. '<=' → logprob: -4.755075454711914
    8. 'diff' → logprob: -5.880075454711914
    9. '_valid' → logprob: -5.880075454711914
    10. ')' → logprob: -6.255075454711914

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13115757703781128
    2. '2' → logprob: -2.256157636642456
    3. ' ' → logprob: -4.506157398223877
    4. 'len' → logprob: -5.381157398223877
    5. '3' → logprob: -6.256157398223877
    6. ' len' → logprob: -8.006157875061035
    7. '   ' → logprob: -9.006157875061035
    8. '4' → logprob: -9.131157875061035
    9. 'max' → logprob: -12.131157875061035
    10. 'length' → logprob: -12.131157875061035

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4772409200668335
    2. '2' → logprob: -0.9772409200668335
    3. '3' → logprob: -6.227241039276123
    4. ' ' → logprob: -7.352241039276123
    5. 'len' → logprob: -7.852241039276123
    6. '4' → logprob: -9.852240562438965
    7. 'last' → logprob: -10.852240562438965
    8. 'two' → logprob: -10.977240562438965
    9. '   ' → logprob: -11.102240562438965
    10. ' len' → logprob: -11.602240562438965

Token 109: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5779823064804077
    2. 'and' → logprob: -0.8279823064804077
    3. '   ' → logprob: -6.202982425689697
    4. '    ' → logprob: -12.577981948852539
    5. 'def' → logprob: -12.702981948852539
    6. '<=' → logprob: -12.827981948852539
    7. ' <=' → logprob: -12.827981948852539
    8. ' ' → logprob: -13.702981948852539
    9. ',' → logprob: -14.327981948852539
    10. ':' → logprob: -14.577981948852539

Token 110: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009892907924950123
    2. ' ' → logprob: -4.63489294052124
    3. '50' → logprob: -9.759892463684082
    4. '7' → logprob: -11.259892463684082
    5. '5' → logprob: -11.759892463684082
    6. '
' → logprob: -11.822392463684082
    7. '   ' → logprob: -11.822392463684082
    8. '9' → logprob: -11.947392463684082
    9. '1' → logprob: -12.259892463684082
    10. '20' → logprob: -12.509892463684082

Token 111: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000639169302303344
    2. ' ' → logprob: -7.500638961791992
    3. '9' → logprob: -11.000638961791992
    4. '7' → logprob: -11.250638961791992
    5. '50' → logprob: -11.375638961791992
    6. '20' → logprob: -11.938138961791992
    7. '5' → logprob: -12.063138961791992
    8. '15' → logprob: -12.188138961791992
    9. '1' → logprob: -12.438138961791992
    10. '100' → logprob: -12.750638961791992

Token 112: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36033353209495544
    2. ' and' → logprob: -1.3603335618972778
    3. 'and' → logprob: -3.3603334426879883
    4. '5' → logprob: -5.110333442687988
    5. '6' → logprob: -6.235333442687988
    6. ' ' → logprob: -6.360333442687988
    7. '1' → logprob: -6.735333442687988
    8. ':' → logprob: -9.985333442687988
    9. '7' → logprob: -10.610333442687988
    10. '
' → logprob: -10.610333442687988

Token 113: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0341491661965847
    2. ' and' → logprob: -3.909149169921875
    3. 'and' → logprob: -5.284149169921875
    4. '6' → logprob: -5.534149169921875
    5. ' ' → logprob: -6.534149169921875
    6. '5' → logprob: -6.659149169921875
    7. '1' → logprob: -7.159149169921875
    8. 'len' → logprob: -9.034149169921875
    9. '10' → logprob: -9.409149169921875
    10. '2' → logprob: -9.409149169921875

Token 114: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33052536845207214
    2. 'if' (adapté à ' if') → logprob: -1.5805253982543945
    3. '   ' → logprob: -2.8305253982543945
    4. ' <=' → logprob: -5.2055253982543945
    5. ' ' → logprob: -5.7055253982543945
    6. ' >=' → logprob: -6.3305253982543945
    7. '<=' → logprob: -6.4555253982543945
    8. 'def' → logprob: -6.8305253982543945
    9. ' return' → logprob: -6.9555253982543945
    10. '>=' → logprob: -7.4555253982543945

Token 115: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10961227118968964
    2. ' not' → logprob: -2.859612226486206
    3. 'len' → logprob: -3.109612226486206
    4. ' ' → logprob: -7.234612464904785
    5. 'not' → logprob: -7.359612464904785
    6. '   ' → logprob: -7.984612464904785
    7. '1' → logprob: -8.859612464904785
    8. '(len' → logprob: -10.359612464904785
    9. '	len' → logprob: -11.734612464904785
    10. ' ai' → logprob: -11.859612464904785

Token 116: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -3.333223139634356e-05
    2. '_ai' → logprob: -10.875033378601074
    3. '(' → logprob: -11.625033378601074
    4. 'ai' → logprob: -13.375033378601074
    5. ' (' → logprob: -13.500033378601074
    6. '(word' → logprob: -14.125033378601074
    7. '(a' → logprob: -14.500033378601074
    8. ' ai' → logprob: -14.750033378601074
    9. '.ai' → logprob: -15.250033378601074
    10. '(an' → logprob: -16.250032424926758

Token 117: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.4498052223643754e-05
    2. '_' → logprob: -11.750014305114746
    3. '_ai' → logprob: -12.875014305114746
    4. ')_' → logprob: -13.750014305114746
    5. '_w' → logprob: -14.000014305114746
    6. 'word' → logprob: -14.125014305114746
    7. ' _' → logprob: -14.375014305114746
    8. ')' → logprob: -15.750014305114746
    9. '_words' → logprob: -15.875014305114746
    10. ' ' → logprob: -16.375015258789062

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029944628477096558
    2. ' <' → logprob: -4.02994441986084
    3. ' )' → logprob: -4.77994441986084
    4. '<' → logprob: -6.90494441986084
    5. ' >' → logprob: -7.15494441986084
    6. ')<' → logprob: -7.40494441986084
    7. ' ' → logprob: -8.15494441986084
    8. ' not' → logprob: -8.40494441986084
    9. '>' → logprob: -8.65494441986084
    10. ')>' → logprob: -9.15494441986084

Token 119: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.14287854731082916
    2. ' >' → logprob: -2.517878532409668
    3. '<' → logprob: -3.642878532409668
    4. ' ' → logprob: -4.017878532409668
    5. '>' → logprob: -5.517878532409668
    6. ' not' → logprob: -5.767878532409668
    7. ' !=' → logprob: -7.517878532409668
    8. ' ==' → logprob: -8.267878532409668
    9. ' >=' → logprob: -9.517878532409668
    10. ' <=' → logprob: -9.767878532409668

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6949697136878967
    2. ' ' → logprob: -0.6949697136878967
    3. '2' → logprob: -6.319969654083252
    4. '3' → logprob: -11.69497013092041
    5. ' or' → logprob: -13.38247013092041
    6. ')' → logprob: -13.38247013092041
    7. '0' → logprob: -13.63247013092041
    8. '=' → logprob: -13.88247013092041
    9. '>' → logprob: -14.50747013092041
    10. '```' → logprob: -14.69497013092041

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012851139763370156
    2. ' ' → logprob: -6.876285076141357
    3. '2' → logprob: -8.376285552978516
    4. '12' → logprob: -11.501285552978516
    5. '
' → logprob: -13.313785552978516
    6. '3' → logprob: -13.626285552978516
    7. '   ' → logprob: -13.876285552978516
    8. '```' → logprob: -14.188785552978516
    9. '`' → logprob: -14.751285552978516
    10. 'len' → logprob: -14.876285552978516

Token 122: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002983883023262024
    2. 'or' → logprob: -6.252984046936035
    3. ' ' → logprob: -6.877984046936035
    4. '2' → logprob: -11.002984046936035
    5. ')' → logprob: -13.127984046936035
    6. '0' → logprob: -13.252984046936035
    7. '1' → logprob: -13.502984046936035
    8. '  ' → logprob: -15.002984046936035
    9. ' o' → logprob: -15.002984046936035
    10. ' and' → logprob: -15.252984046936035

Token 123: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.2830056846141815
    2. 'len' → logprob: -1.408005714416504
    3. '2' → logprob: -7.033005714416504
    4. ' ' → logprob: -7.033005714416504
    5. '	len' → logprob: -10.283005714416504
    6. '(len' → logprob: -11.158005714416504
    7. '   ' → logprob: -11.908005714416504
    8. ' or' → logprob: -12.408005714416504
    9. '>' → logprob: -12.533005714416504
    10. '3' → logprob: -12.908005714416504

Token 124: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.0006050990778021514
    2. 'ai' → logprob: -8.375604629516602
    3. ' ai' → logprob: -8.625604629516602
    4. '(' → logprob: -9.250604629516602
    5. ' (' → logprob: -10.000604629516602
    6. ' ' → logprob: -10.375604629516602
    7. '_ai' → logprob: -11.750604629516602
    8. ')' → logprob: -12.625604629516602
    9. '.ai' → logprob: -12.750604629516602
    10. '(a' → logprob: -12.875604629516602

Token 125: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.00010413920972496271
    2. '_' → logprob: -10.000103950500488
    3. 'word' → logprob: -10.500103950500488
    4. '_ai' → logprob: -10.875103950500488
    5. '_w' → logprob: -11.875103950500488
    6. '_world' → logprob: -13.875103950500488
    7. 'Word' → logprob: -14.375103950500488
    8. '_words' → logprob: -14.375103950500488
    9. '_WORD' → logprob: -14.875103950500488
    10. ')' → logprob: -14.875103950500488

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5353257060050964
    2. '>' → logprob: -1.4103257656097412
    3. ' >' → logprob: -1.7853257656097412
    4. ')>' → logprob: -6.160325527191162
    5. ' ' → logprob: -8.16032600402832
    6. ' )' → logprob: -8.28532600402832
    7. '()>' → logprob: -11.41032600402832
    8. '()' → logprob: -11.78532600402832
    9. '[' → logprob: -11.78532600402832
    10. '2' → logprob: -11.78532600402832

Token 127: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20268362760543823
    2. '>' → logprob: -1.702683687210083
    3. ' ' → logprob: -6.702683448791504
    4. '2' → logprob: -11.702683448791504
    5. ')' → logprob: -12.077683448791504
    6. ' >
' → logprob: -12.452683448791504
    7. '()>' → logprob: -12.702683448791504
    8. '<|end|>' → logprob: -12.952683448791504
    9. '1' → logprob: -13.077683448791504
    10. ' >

' → logprob: -13.327683448791504

Token 128: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11287928372621536
    2. ' ' → logprob: -2.2378792762756348
    3. '3' → logprob: -10.862879753112793
    4. '10' → logprob: -11.112879753112793
    5. '20' → logprob: -11.737879753112793
    6. '  ' → logprob: -13.050379753112793
    7. '
' → logprob: -13.112879753112793
    8. '```' → logprob: -13.487879753112793
    9. '   ' → logprob: -13.550379753112793
    10. '1' → logprob: -13.987879753112793

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005159787251614034
    2. ' ' → logprob: -7.625515937805176
    3. '3' → logprob: -11.875515937805176
    4. '10' → logprob: -12.000515937805176
    5. '
' → logprob: -12.375515937805176
    6. '20' → logprob: -13.000515937805176
    7. '```' → logprob: -13.813015937805176
    8. '5' → logprob: -13.938015937805176
    9. '   ' → logprob: -14.125515937805176
    10. '22' → logprob: -14.250515937805176

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034770287573337555
    2. ':
' → logprob: -3.4097702503204346
    3. '   ' → logprob: -7.909770488739014
    4. ':return' → logprob: -8.159770011901855
    5. ' or' → logprob: -8.409770011901855
    6. '       ' → logprob: -8.659770011901855
    7. '):' → logprob: -10.534770011901855
    8. '):
' → logprob: -11.284770011901855
    9. ')' → logprob: -11.534770011901855
    10. ' :' → logprob: -11.784770011901855

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08641039580106735
    2. ':' → logprob: -2.7114102840423584
    3. '   ' → logprob: -4.7114105224609375
    4. ':
' → logprob: -5.0864105224609375
    5. ' or' → logprob: -7.0864105224609375
    6. ':return' → logprob: -8.711410522460938
    7. ',' → logprob: -10.961410522460938
    8. '
' → logprob: -10.961410522460938
    9. '<|end|>' → logprob: -11.086410522460938
    10. '    ' → logprob: -11.086410522460938

Token 132: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5966120958328247
    2. '   ' → logprob: -1.4716120958328247
    3. '       ' → logprob: -1.5966120958328247
    4. 'return' (adapté à ' return') → logprob: -4.096611976623535
    5. '
' → logprob: -8.596611976623535
    6. '    ' → logprob: -8.846611976623535
    7. ' ' → logprob: -9.596611976623535
    8. '	return' → logprob: -10.221611976623535
    9. ' 
' → logprob: -10.596611976623535
    10. '  ' → logprob: -10.971611976623535

Token 133: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4740772247314453
    2. ' False' → logprob: -0.9740772247314453
    3. 'True' → logprob: -16.474077224731445
    4. ' True' → logprob: -16.724077224731445
    5. '(False' → logprob: -17.599077224731445
    6. ' ' → logprob: -17.974077224731445
    7. 'F' → logprob: -18.349077224731445
    8. ' false' → logprob: -18.724077224731445
    9. '=False' → logprob: -19.099077224731445
    10. 'false' → logprob: -19.724077224731445

Token 134: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015672342851758003
    2. '    
' → logprob: -7.876567363739014
    3. '<|end|>' → logprob: -7.876567363739014
    4. '
' → logprob: -8.001566886901855
    5. ')' → logprob: -9.126566886901855
    6. ',' → logprob: -9.501566886901855
    7. '.' → logprob: -9.751566886901855
    8. ' ' → logprob: -10.251566886901855
    9. '  
' → logprob: -10.376566886901855
    10. '\n' → logprob: -10.626566886901855

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012788156978785992
    2. '
' → logprob: -4.38778829574585
    3. '    
' → logprob: -8.637787818908691
    4. '<|end|>' → logprob: -10.387787818908691
    5. '  
' → logprob: -11.262787818908691
    6. ' ' → logprob: -11.262787818908691
    7. ' if' → logprob: -12.137787818908691
    8. ',' → logprob: -12.262787818908691
    9. ' 
' → logprob: -12.637787818908691
    10. '   
' → logprob: -12.762787818908691

Token 136: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07264596968889236
    2. '
' → logprob: -3.697645902633667
    3. 'if' (adapté à ' if') → logprob: -3.822645902633667
    4. ' if' → logprob: -3.822645902633667
    5. 'return' → logprob: -7.322646141052246
    6. ' return' → logprob: -8.447646141052246
    7. 'for' → logprob: -8.697646141052246
    8. '    
' → logprob: -8.822646141052246
    9. 'def' → logprob: -9.072646141052246
    10. ' for' → logprob: -9.072646141052246

Token 137: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6634669899940491
    2. ' ai' → logprob: -1.0384669303894043
    3. ' len' → logprob: -2.7884669303894043
    4. 'ai' → logprob: -3.5384669303894043
    5. ' last' → logprob: -4.163466930389404
    6. ' used' → logprob: -4.413466930389404
    7. 'len' → logprob: -5.413466930389404
    8. 'not' → logprob: -5.788466930389404
    9. 'used' → logprob: -6.788466930389404
    10. ' (' → logprob: -6.788466930389404

Token 138: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.12415754050016403
    2. ' all' → logprob: -2.749157428741455
    3. ' is' → logprob: -3.374157428741455
    4. 'ai' → logprob: -4.499157428741455
    5. ' (' → logprob: -5.624157428741455
    6. '(ai' → logprob: -6.249157428741455
    7. '(' → logprob: -7.374157428741455
    8. 'is' → logprob: -7.624157428741455
    9. 'all' → logprob: -7.874157428741455
    10. ' any' → logprob: -9.749157905578613

Token 139: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.4617256056226324e-05
    2. '_' → logprob: -11.875014305114746
    3. 'word' → logprob: -12.125014305114746
    4. '_words' → logprob: -14.250014305114746
    5. 'Word' → logprob: -14.500014305114746
    6. '_ai' → logprob: -15.375014305114746
    7. '_WORD' → logprob: -15.500014305114746
    8. '_world' → logprob: -15.625014305114746
    9. '_token' → logprob: -15.875014305114746
    10. '_w' → logprob: -16.250015258789062

Token 140: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.021940844133496284
    2. ' in' → logprob: -4.3969407081604
    3. '.' → logprob: -5.0219407081604
    4. '.startswith' → logprob: -6.2719407081604
    5. ' .' → logprob: -7.3969407081604
    6. '.endswith' → logprob: -8.521941184997559
    7. '[' → logprob: -10.521941184997559
    8. 'is' → logprob: -10.646941184997559
    9. ' ' → logprob: -12.021941184997559
    10. 'in' → logprob: -12.271941184997559

Token 141: 'lower' (ID: 30330)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.006729337852448225
    2. 'lower' → logprob: -5.0067291259765625
    3. 'al' → logprob: -11.631729125976562
    4. 'ascii' → logprob: -12.756729125976562
    5. '_alpha' → logprob: -13.756729125976562
    6. ' alpha' → logprob: -14.756729125976562
    7. 'a' → logprob: -15.256729125976562
    8. '(alpha' → logprob: -15.881729125976562
    9. '.alpha' → logprob: -16.256729125976562
    10. 'alphabet' → logprob: -16.631729125976562

Token 142: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3868848979473114
    2. '()' → logprob: -1.1368849277496338
    3. '():
' → logprob: -11.636884689331055
    4. '():

' → logprob: -12.761884689331055
    5. '().' → logprob: -14.886884689331055
    6. '(' → logprob: -15.011884689331055
    7. '()==' → logprob: -15.511884689331055
    8. ' ()' → logprob: -15.636884689331055
    9. '()>' → logprob: -15.761884689331055
    10. ' ():' → logprob: -15.761884689331055

Token 143: '       ' (ID: 309)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.24259613454341888
    2. '():
' → logprob: -2.24259614944458
    3. '       ' → logprob: -3.36759614944458
    4. '()' → logprob: -3.36759614944458
    5. ' or' → logprob: -4.11759614944458
    6. ':' → logprob: -4.36759614944458
    7. '   ' → logprob: -4.74259614944458
    8. ':return' → logprob: -6.74259614944458
    9. ':
' → logprob: -7.74259614944458
    10. ' and' → logprob: -8.242595672607422

Token 144: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1525682955980301
    2. ' return' → logprob: -2.5275683403015137
    3. 'return' (adapté à ' return') → logprob: -3.4025683403015137
    4. '   ' → logprob: -4.152568340301514
    5. '
' → logprob: -4.402568340301514
    6. ' ' → logprob: -9.277567863464355
    7. '	return' → logprob: -9.777567863464355
    8. 'False' → logprob: -9.902567863464355
    9. ':return' → logprob: -10.027567863464355
    10. ' False' → logprob: -10.277567863464355

Token 145: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004078401252627373
    2. ' False' → logprob: -5.504078388214111
    3. 'True' → logprob: -17.629077911376953
    4. '(False' → logprob: -17.754077911376953
    5. '=False' → logprob: -19.254077911376953
    6. 'false' → logprob: -19.504077911376953
    7. '_false' → logprob: -20.504077911376953
    8. ' ' → logprob: -21.379077911376953
    9. 'FALSE' → logprob: -22.004077911376953
    10. 'F' → logprob: -22.129077911376953

Token 146: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007179115782491863
    2. '
' → logprob: -7.500718116760254
    3. '    
' → logprob: -9.250718116760254
    4. 'return' → logprob: -10.625718116760254
    5. '<|end|>' → logprob: -10.750718116760254
    6. ' return' → logprob: -12.125718116760254
    7. ')' → logprob: -12.250718116760254
    8. '  
' → logprob: -12.500718116760254
    9. ',' → logprob: -13.375718116760254
    10. '<|end|>' → logprob: -13.750718116760254

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008273754501715302
    2. '    
' → logprob: -7.500827312469482
    3. '
' → logprob: -8.50082778930664
    4. '<|end|>' → logprob: -9.87582778930664
    5. '  
' → logprob: -12.00082778930664
    6. '<|end|>' → logprob: -12.62582778930664
    7. ' return' → logprob: -13.25082778930664
    8. 'return' → logprob: -13.25082778930664
    9. '   
' → logprob: -13.75082778930664
    10. ')' → logprob: -14.12582778930664

Token 148: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007441143970936537
    2. 'if' (adapté à ' if') → logprob: -7.625744342803955
    3. '
' → logprob: -9.125743865966797
    4. 'return' → logprob: -9.250743865966797
    5. ' if' → logprob: -10.375743865966797
    6. '    
' → logprob: -11.375743865966797
    7. 'def' → logprob: -12.625743865966797
    8. ' return' → logprob: -13.250743865966797
    9. '#' → logprob: -14.375743865966797
    10. 'for' → logprob: -14.500743865966797

Token 149: ' ai' (ID: 8440)
  Prédit: ' ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ai' → logprob: -0.28819918632507324
    2. ' len' → logprob: -2.1631991863250732
    3. ' not' → logprob: -2.2881991863250732
    4. 'ai' → logprob: -4.413199424743652
    5. ' used' → logprob: -4.538199424743652
    6. ' last' → logprob: -5.288199424743652
    7. 'len' → logprob: -5.788199424743652
    8. 'used' → logprob: -7.163199424743652
    9. ' (' → logprob: -7.413199424743652
    10. '(ai' → logprob: -7.413199424743652

Token 150: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0007600766839459538
    2. 'word' → logprob: -7.875760078430176
    3. '_' → logprob: -8.125760078430176
    4. '_words' → logprob: -9.750760078430176
    5. 'Word' → logprob: -12.250760078430176
    6. '_token' → logprob: -12.375760078430176
    7. '_w' → logprob: -12.625760078430176
    8. '_WORD' → logprob: -12.625760078430176
    9. '_ai' → logprob: -13.375760078430176
    10. 'w' → logprob: -13.500760078430176

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03272835537791252
    2. 'in' → logprob: -3.657728433609009
    3. ' not' → logprob: -5.65772819519043
    4. '[' → logprob: -6.78272819519043
    5. ' ' → logprob: -7.15772819519043
    6. ' ==' → logprob: -7.40772819519043
    7. '.startswith' → logprob: -9.15772819519043
    8. ' <' → logprob: -9.40772819519043
    9. '[:' → logprob: -9.53272819519043
    10. '==' → logprob: -9.90772819519043

Token 152: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.11282698810100555
    2. 'used' → logprob: -2.2378270626068115
    3. '.used' → logprob: -12.73782730102539
    4. ' ' → logprob: -14.36282730102539
    5. '_used' → logprob: -14.73782730102539
    6. '<|end|>' → logprob: -15.11282730102539
    7. '   ' → logprob: -16.48782730102539
    8. '  ' → logprob: -16.73782730102539
    9. 'Used' → logprob: -16.73782730102539
    10. 'user' → logprob: -17.48782730102539

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012320152018219233
    2. ' or' → logprob: -8.001232147216797
    3. '<|end|>' → logprob: -8.001232147216797
    4. '):' → logprob: -8.126232147216797
    5. ':return' → logprob: -8.876232147216797
    6. ':
' → logprob: -9.501232147216797
    7. '<|end|>' → logprob: -11.376232147216797
    8. '>:' → logprob: -11.501232147216797
    9. ' :' → logprob: -11.876232147216797
    10. '}:' → logprob: -11.876232147216797

Token 154: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5456251502037048
    2. '       ' → logprob: -0.9206251502037048
    3. ':
' → logprob: -4.29562520980835
    4. ' or' → logprob: -5.79562520980835
    5. ':return' → logprob: -5.79562520980835
    6. '   ' → logprob: -6.17062520980835
    7. '<|end|>' → logprob: -9.295624732971191
    8. ' :' → logprob: -9.545624732971191
    9. ' and' → logprob: -9.670624732971191
    10. ' :
' → logprob: -10.545624732971191

Token 155: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021061811596155167
    2. ' return' → logprob: -4.396061897277832
    3. '   ' → logprob: -5.271061897277832
    4. ' False' → logprob: -6.396061897277832
    5. '
' → logprob: -7.771061897277832
    6. 'False' → logprob: -7.771061897277832
    7. ' True' → logprob: -8.021061897277832
    8. '    ' → logprob: -8.896061897277832
    9. ':return' → logprob: -9.396061897277832
    10. 'return' (adapté à ' return') → logprob: -9.521061897277832

Token 156: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12701429426670074
    2. ' True' → logprob: -2.127014398574829
    3. 'False' → logprob: -9.37701416015625
    4. ' False' → logprob: -13.37701416015625
    5. '(True' → logprob: -17.25201416015625
    6. ' ' → logprob: -18.12701416015625
    7. '=True' → logprob: -20.00201416015625
    8. '  ' → logprob: -21.12701416015625
    9. '   ' → logprob: -21.37701416015625
    10. ' ' → logprob: -23.25201416015625

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002238013403257355
    2. '    
' → logprob: -9.250224113464355
    3. '
' → logprob: -9.625224113464355
    4. '<|end|>' → logprob: -10.000224113464355
    5. 'return' → logprob: -12.500224113464355
    6. '<|end|>' → logprob: -13.000224113464355
    7. ' return' → logprob: -13.125224113464355
    8. '  
' → logprob: -13.125224113464355
    9. '	return' → logprob: -13.750224113464355
    10. ')' → logprob: -14.000224113464355

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034805629402399063
    2. '
' → logprob: -5.878480434417725
    3. '    
' → logprob: -7.628480434417725
    4. '  
' → logprob: -9.628480911254883
    5. '<|end|>' → logprob: -10.128480911254883
    6. ' if' → logprob: -10.878480911254883
    7. 'if' → logprob: -10.878480911254883
    8. '   
' → logprob: -11.753480911254883
    9. 'return' → logprob: -12.128480911254883
    10. '  ' → logprob: -12.253480911254883

Token 159: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04497043415904045
    2. 'if' (adapté à ' if') → logprob: -3.2949705123901367
    3. '
' → logprob: -5.669970512390137
    4. 'return' → logprob: -6.419970512390137
    5. ' if' → logprob: -6.419970512390137
    6. '    
' → logprob: -9.544970512390137
    7. 'def' → logprob: -10.419970512390137
    8. ' return' → logprob: -10.544970512390137
    9. '#' → logprob: -11.419970512390137
    10. '  ' → logprob: -11.544970512390137

Token 160: ' ai' (ID: 8440)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5043519735336304
    2. 'len' → logprob: -1.8793519735336304
    3. 'not' → logprob: -2.12935209274292
    4. ' not' → logprob: -3.12935209274292
    5. ' last' → logprob: -3.50435209274292
    6. 'ai' → logprob: -3.75435209274292
    7. '(last' → logprob: -4.25435209274292
    8. ' len' → logprob: -5.25435209274292
    9. '(not' → logprob: -5.75435209274292
    10. ' ai' → logprob: -6.50435209274292

Token 161: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -2.8325677703833207e-05
    2. 'word' → logprob: -11.000028610229492
    3. '_' → logprob: -11.625028610229492
    4. '_words' → logprob: -13.500028610229492
    5. 'Word' → logprob: -14.125028610229492
    6. '_ai' → logprob: -15.875028610229492
    7. '_WORD' → logprob: -16.125028610229492
    8. '_world' → logprob: -16.500028610229492
    9. '_token' → logprob: -16.500028610229492
    10. '_w' → logprob: -16.750028610229492

Token 162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1293529272079468
    2. ' not' → logprob: -1.3793529272079468
    3. '.startswith' → logprob: -1.6293529272079468
    4. '[:' → logprob: -2.0043530464172363
    5. ' ==' → logprob: -3.2543530464172363
    6. ' !=' → logprob: -4.254353046417236
    7. '==' → logprob: -4.504353046417236
    8. ' in' → logprob: -4.629353046417236
    9. ' <' → logprob: -4.629353046417236
    10. 'not' → logprob: -5.254353046417236

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004905446898192167
    2. ':' → logprob: -5.8799052238464355
    3. ' ' → logprob: -6.2549052238464355
    4. '[' → logprob: -9.379905700683594
    5. ' :' → logprob: -9.879905700683594
    6. '-' → logprob: -11.004905700683594
    7. ':]' → logprob: -12.254905700683594
    8. 's' → logprob: -12.692405700683594
    9. '
' → logprob: -12.942405700683594
    10. '(' → logprob: -13.192405700683594

Token 164: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4753477871417999
    2. ' !=' → logprob: -0.9753477573394775
    3. ']' → logprob: -7.850347995758057
    4. ')' → logprob: -7.975347995758057
    5. '()!=' → logprob: -8.600347518920898
    6. ']!=' → logprob: -8.725347518920898
    7. ')!=' → logprob: -9.350347518920898
    8. '!='' → logprob: -10.350347518920898
    9. '!=(' → logprob: -11.100347518920898
    10. '()' → logprob: -11.350347518920898

Token 165: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2014862298965454
    2. ' !=' → logprob: -1.7014862298965454
    3. '==' → logprob: -11.326486587524414
    4. ']!=' → logprob: -11.451486587524414
    5. ' ' → logprob: -11.701486587524414
    6. '()!=' → logprob: -11.826486587524414
    7. ' not' → logprob: -11.826486587524414
    8. '```' → logprob: -12.451486587524414
    9. ')!=' → logprob: -12.576486587524414
    10. '!='' → logprob: -12.826486587524414

Token 166: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.47410061955451965
    2. ' last' → logprob: -0.9741005897521973
    3. ' ' → logprob: -11.349101066589355
    4. '(last' → logprob: -12.099101066589355
    5. '[last' → logprob: -12.974101066589355
    6. '	last' → logprob: -13.474101066589355
    7. '_last' → logprob: -14.474101066589355
    8. ':last' → logprob: -14.599101066589355
    9. '   ' → logprob: -14.724101066589355
    10. 'word' → logprob: -15.724101066589355

Token 167: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.625001907348633
    3. 'word' → logprob: -14.750001907348633
    4. '_w' → logprob: -17.000001907348633
    5. 'Word' → logprob: -17.250001907348633
    6. '_char' → logprob: -17.250001907348633
    7. '_token' → logprob: -17.500001907348633
    8. '_WORD' → logprob: -18.000001907348633
    9. ' word' → logprob: -18.250001907348633
    10. '_letter' → logprob: -18.250001907348633

Token 168: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.5094070477061905e-05
    2. '[' → logprob: -11.375015258789062
    3. ' [-' → logprob: -13.125015258789062
    4. '-' → logprob: -14.500015258789062
    5. ''s' → logprob: -15.000015258789062
    6. '][-' → logprob: -15.500015258789062
    7. '[
' → logprob: -15.625015258789062
    8. ' ' → logprob: -16.125015258789062
    9. '   ' → logprob: -16.375015258789062
    10. '
' → logprob: -16.500015258789062

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0037443831097334623
    2. '2' → logprob: -5.628744602203369
    3. ' ' → logprob: -9.003744125366211
    4. '3' → logprob: -11.441244125366211
    5. 'len' → logprob: -13.316244125366211
    6. ']' → logprob: -13.941244125366211
    7. ')' → logprob: -14.066244125366211
    8. '  ' → logprob: -14.066244125366211
    9. '   ' → logprob: -14.878744125366211
    10. '(' → logprob: -15.003744125366211

Token 170: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7896082401275635
    2. '):' → logprob: -0.7896082401275635
    3. ':' → logprob: -3.1646082401275635
    4. ']:' → logprob: -3.5396082401275635
    5. ':
' → logprob: -4.789608001708984
    6. ']:
' → logprob: -5.039608001708984
    7. ')' → logprob: -5.414608001708984
    8. ']' → logprob: -7.039608001708984
    9. '   ' → logprob: -7.914608001708984
    10. ' ' → logprob: -10.664608001708984

Token 171: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0370657742023468
    2. ':
' → logprob: -3.4120657444000244
    3. '       ' → logprob: -6.4120659828186035
    4. ':' → logprob: -6.4120659828186035
    5. ':return' → logprob: -9.912065505981445
    6. ' return' → logprob: -11.162065505981445
    7. ' :
' → logprob: -11.162065505981445
    8. '):
' → logprob: -11.412065505981445
    9. '	return' → logprob: -11.787065505981445
    10. '
' → logprob: -11.787065505981445

Token 172: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29359734058380127
    2. 'return' (adapté à ' return') → logprob: -2.0435972213745117
    3. '   ' → logprob: -2.9185972213745117
    4. '       ' → logprob: -3.6685972213745117
    5. ' False' → logprob: -3.9185972213745117
    6. '
' → logprob: -4.168597221374512
    7. 'False' → logprob: -4.793597221374512
    8. ' 
' → logprob: -7.293597221374512
    9. '	return' → logprob: -7.918597221374512
    10. ' True' → logprob: -8.918597221374512

Token 173: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1269298940896988
    2. ' False' → logprob: -2.126929998397827
    3. 'True' → logprob: -13.501930236816406
    4. ' True' → logprob: -14.751930236816406
    5. '(False' → logprob: -18.501930236816406
    6. '=False' → logprob: -20.126930236816406
    7. '   ' → logprob: -21.751930236816406
    8. ' ' → logprob: -21.876930236816406
    9. '_false' → logprob: -22.126930236816406
    10. 'false' → logprob: -22.626930236816406

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037228144356049597
    2. 'return' → logprob: -8.500371932983398
    3. '
' → logprob: -9.000371932983398
    4. '    
' → logprob: -10.875371932983398
    5. ' return' → logprob: -11.125371932983398
    6. '	return' → logprob: -12.000371932983398
    7. '<|end|>' → logprob: -13.500371932983398
    8. '  
' → logprob: -13.750371932983398
    9. 'def' → logprob: -14.375371932983398
    10. ')' → logprob: -14.375371932983398

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001050434890203178
    2. 'return' → logprob: -6.8760504722595215
    3. '
' → logprob: -11.876049995422363
    4. ' return' → logprob: -12.251049995422363
    5. '    
' → logprob: -12.501049995422363
    6. '	return' → logprob: -13.376049995422363
    7. '       ' → logprob: -15.751049995422363
    8. 'True' → logprob: -16.00105094909668
    9. '  
' → logprob: -16.50105094909668
    10. 'import' → logprob: -16.62605094909668

Token 176: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014309466816484928
    2. 'return' (adapté à ' return') → logprob: -4.264309406280518
    3. ' return' → logprob: -9.639309883117676
    4. '
' → logprob: -10.014309883117676
    5. '    
' → logprob: -10.514309883117676
    6. '	return' → logprob: -12.139309883117676
    7. '  
' → logprob: -13.889309883117676
    8. 'eturn' → logprob: -14.764309883117676
    9. '       ' → logprob: -15.014309883117676
    10. '  ' → logprob: -15.139309883117676

Token 177: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5759397745132446
    2. ' True' → logprob: -0.8259397745132446
    3. ' ' → logprob: -15.200940132141113
    4. '   ' → logprob: -17.075939178466797
    5. 'False' → logprob: -17.950939178466797
    6. ' ' → logprob: -19.325939178466797
    7. '(True' → logprob: -19.575939178466797
    8. ' Tru' → logprob: -19.700939178466797
    9. 'true' → logprob: -21.200939178466797
    10. ' False' → logprob: -21.200939178466797

Token 178: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 179: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.683953046798706
    2. '
' → logprob: -1.058953046798706
    3. '

' → logprob: -2.808953046798706
    4. '<|end|>' → logprob: -3.433953046798706
    5. '\' → logprob: -3.808953046798706
    6. '\n' → logprob: -4.183953285217285
    7. '#' → logprob: -4.558953285217285
    8. 'n' → logprob: -5.808953285217285
    9. 'a' → logprob: -7.058953285217285
    10. 'w' → logprob: -7.308953285217285

Token 180: ' Start' (ID: 7972)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2068902850151062
    2. 'while' → logprob: -1.706890344619751
    3. 'if' → logprob: -6.331890106201172
    4. 'import' → logprob: -6.456890106201172
    5. '#' → logprob: -7.206890106201172
    6. ' while' → logprob: -7.331890106201172
    7. 'last' → logprob: -7.956890106201172
    8. ' def' → logprob: -8.956890106201172
    9. 'for' → logprob: -9.956890106201172
    10. 'try' → logprob: -10.331890106201172

Token 181: ' with' (ID: 483)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.2476171255111694
    2. 'def' → logprob: -1.3726171255111694
    3. 'word' → logprob: -1.3726171255111694
    4. 'turn' → logprob: -1.8726171255111694
    5. 'while' → logprob: -4.247617244720459
    6. '#' → logprob: -4.497617244720459
    7. 'used' → logprob: -4.497617244720459
    8. ':' → logprob: -5.622617244720459
    9. '
' → logprob: -5.997617244720459
    10. 'input' → logprob: -6.997617244720459

Token 182: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.34144043922424316
    2. 'last' → logprob: -2.216440439224243
    3. ''' → logprob: -3.216440439224243
    4. '"a' → logprob: -3.466440439224243
    5. 'input' → logprob: -3.716440439224243
    6. 'a' → logprob: -3.716440439224243
    7. ''a' → logprob: -4.091440200805664
    8. 'print' → logprob: -4.591440200805664
    9. 'word' → logprob: -4.966440200805664
    10. '""' → logprob: -5.341440200805664

Token 183: ' simple' (ID: 4705)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3489297032356262
    2. 'b' → logprob: -2.0989296436309814
    3. '"' → logprob: -2.5989296436309814
    4. 'word' → logprob: -3.9739296436309814
    5. 'a' → logprob: -4.0989298820495605
    6. ' word' → logprob: -4.2239298820495605
    7. ''' → logprob: -4.9739298820495605
    8. ''s' → logprob: -5.7239298820495605
    9. '_' → logprob: -5.8489298820495605
    10. 'w' → logprob: -5.9739298820495605

Token 184: ' initial' (ID: 4871)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.2472643405199051
    2. ' word' → logprob: -2.1222643852233887
    3. 'print' → logprob: -3.4972643852233887
    4. 'def' → logprob: -3.6222643852233887
    5. 'ai' → logprob: -4.497264385223389
    6. 'if' → logprob: -4.872264385223389
    7. 'while' → logprob: -5.247264385223389
    8. '"' → logprob: -5.622264385223389
    9. 'prompt' → logprob: -6.372264385223389
    10. 'last' → logprob: -6.997264385223389

Token 185: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.05819268524646759
    2. ' word' → logprob: -3.058192729949951
    3. '_word' → logprob: -5.308192729949951
    4. '_' → logprob: -5.933192729949951
    5. '"' → logprob: -7.308192729949951
    6. 'a' → logprob: -8.308192253112793
    7. 'def' → logprob: -8.308192253112793
    8. 'last' → logprob: -8.433192253112793
    9. 'print' → logprob: -9.058192253112793
    10. '#' → logprob: -10.058192253112793

Token 186: '
' (ID: 198)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.629116415977478
    2. 'word' → logprob: -1.754116415977478
    3. 'current' → logprob: -2.0041165351867676
    4. 'initial' → logprob: -2.1291165351867676
    5. '"' → logprob: -4.129116535186768
    6. 'start' → logprob: -4.254116535186768
    7. 'first' → logprob: -5.129116535186768
    8. 'init' → logprob: -6.629116535186768
    9. '
' → logprob: -7.504116535186768
    10. 'next' → logprob: -8.12911605834961

Token 187: 'my' (ID: 3825)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.20223772525787354
    2. 'current' → logprob: -1.8272377252578735
    3. 'word' → logprob: -3.952237606048584
    4. 'initial' → logprob: -6.077237606048584
    5. 'start' → logprob: -8.327238082885742
    6. ' last' → logprob: -9.327238082885742
    7. 'cur' → logprob: -9.577238082885742
    8. 'turn' → logprob: -9.702238082885742
    9. 'curr' → logprob: -9.702238082885742
    10. 'init' → logprob: -9.952238082885742

Token 188: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.00013953536108601838
    2. 'word' → logprob: -9.500139236450195
    3. '_' → logprob: -9.750139236450195
    4. '_w' → logprob: -12.500139236450195
    5. '_words' → logprob: -14.625139236450195
    6. ' word' → logprob: -14.625139236450195
    7. '_turn' → logprob: -14.750139236450195
    8. ' _' → logprob: -14.875139236450195
    9. '_world' → logprob: -15.375139236450195
    10. 'Word' → logprob: -15.625139236450195

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008618354797363281
    2. '=' → logprob: -4.758618354797363
    3. ' ' → logprob: -13.133618354797363
    4. 's' → logprob: -14.258618354797363
    5. '_' → logprob: -14.383618354797363
    6. ' ="' → logprob: -14.883618354797363
    7. ' ' → logprob: -16.383617401123047
    8. ',' → logprob: -16.508617401123047
    9. ' ='' → logprob: -17.258617401123047
    10. '="' → logprob: -17.383617401123047

Token 190: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6816399097442627
    2. ' "' → logprob: -1.0566399097442627
    3. '"a' → logprob: -2.5566399097442627
    4. ''a' → logprob: -3.1816399097442627
    5. ' '' → logprob: -4.306639671325684
    6. ''' → logprob: -4.806639671325684
    7. 'a' → logprob: -6.431639671325684
    8. ''s' → logprob: -6.806639671325684
    9. ' a' → logprob: -6.806639671325684
    10. ''ap' → logprob: -7.431639671325684

Token 191: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1424052715301514
    2. 'apple' → logprob: -1.1424052715301514
    3. 'hi' → logprob: -1.8924052715301514
    4. 'start' → logprob: -2.8924052715301514
    5. 'hello' → logprob: -3.0174052715301514
    6. 'cat' → logprob: -3.6424052715301514
    7. 'go' → logprob: -3.6424052715301514
    8. 'ab' → logprob: -4.5174055099487305
    9. 'at' → logprob: -4.6424055099487305
    10. 'an' → logprob: -4.8924055099487305

Token 192: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22087375819683075
    2. 'a' → logprob: -2.7208738327026367
    3. 'pp' → logprob: -2.8458738327026367
    4. 'p' → logprob: -3.3458738327026367
    5. 'l' → logprob: -4.095873832702637
    6. 'i' → logprob: -4.595873832702637
    7. 'n' → logprob: -5.095873832702637
    8. 'b' → logprob: -5.345873832702637
    9. 't' → logprob: -7.970873832702637
    10. '")' → logprob: -8.595873832702637

Token 193: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.43685299158096313
    2. '<|end|>' → logprob: -1.9368529319763184
    3. '
' → logprob: -2.3118529319763184
    4. ' used' → logprob: -2.6868529319763184
    5. 'while' → logprob: -4.061852931976318
    6. 'print' → logprob: -4.436852931976318
    7. 'turn' → logprob: -5.561852931976318
    8. '_used' → logprob: -6.061852931976318
    9. '<|end|>' → logprob: -6.061852931976318
    10. 'import' → logprob: -7.311852931976318

Token 194: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.003178782993927598
    2. '.' → logprob: -5.753178596496582
    3. '.append' → logprob: -14.003178596496582
    4. '.update' → logprob: -16.1281795501709
    5. 'add' → logprob: -16.7531795501709
    6. ' .' → logprob: -17.3781795501709
    7. '.setdefault' → logprob: -17.6281795501709
    8. '.Add' → logprob: -18.3781795501709
    9. '.=' → logprob: -18.8781795501709
    10. '.insert' → logprob: -19.0031795501709

Token 195: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -0.25340956449508667
    2. '("' → logprob: -1.5034096240997314
    3. '(' → logprob: -6.753409385681152
    4. '('' → logprob: -8.128409385681152
    5. '("("' → logprob: -11.378409385681152
    6. '(me' → logprob: -13.128409385681152
    7. '(m' → logprob: -14.003409385681152
    8. 'my' → logprob: -14.378409385681152
    9. ' ("' → logprob: -14.503409385681152
    10. '("(' → logprob: -14.628409385681152

Token 196: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -7.107425062713446e-06
    2. 'word' → logprob: -12.500006675720215
    3. '_' → logprob: -12.875006675720215
    4. '_w' → logprob: -14.625006675720215
    5. '_words' → logprob: -16.87500762939453
    6. '_WORD' → logprob: -16.87500762939453
    7. ' word' → logprob: -17.00000762939453
    8. '_world' → logprob: -17.25000762939453
    9. ' _' → logprob: -17.62500762939453
    10. 'Word' → logprob: -17.87500762939453

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -15.375006675720215
    4. ')

' → logprob: -16.2500057220459
    5. ')`' → logprob: -18.6250057220459
    6. '),' → logprob: -18.6250057220459
    7. '))' → logprob: -18.8750057220459
    8. ')#' → logprob: -19.1250057220459
    9. ')return' → logprob: -19.3750057220459
    10. '")' → logprob: -19.6250057220459

Token 198: 'print' (ID: 1598)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20084671676158905
    2. '<|end|>' → logprob: -2.3258466720581055
    3. '\n' → logprob: -3.3258466720581055
    4. 'turn' → logprob: -3.4508466720581055
    5. 'while' → logprob: -4.7008466720581055
    6. 'print' → logprob: -6.2008466720581055
    7. '\' → logprob: -6.8258466720581055
    8. ' turn' → logprob: -6.8258466720581055
    9. '<|end|>' → logprob: -6.9508466720581055
    10. ' 
' → logprob: -7.5758466720581055

Token 199: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.015858277678489685
    2. '("_' → logprob: -4.390858173370361
    3. '("("' → logprob: -6.390858173370361
    4. '("' → logprob: -7.015858173370361
    5. '('_' → logprob: -8.51585865020752
    6. '("(' → logprob: -8.64085865020752
    7. '('' → logprob: -9.39085865020752
    8. '(f' → logprob: -9.51585865020752
    9. '(' → logprob: -9.64085865020752
    10. '_' → logprob: -10.01585865020752

Token 200: '_flush' (ID: 105932)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.048707276582717896
    2. '_flush' → logprob: -3.0487072467803955
    3. ' flush' → logprob: -9.048707008361816
    4. 'Flush' → logprob: -13.423707008361816
    5. 'lush' → logprob: -15.548707008361816
    6. '.flush' → logprob: -15.923707008361816
    7. 'f' → logprob: -16.173707962036133
    8. ' ' → logprob: -16.298707962036133
    9. '```' → logprob: -16.423707962036133
    10. ' _' → logprob: -17.298707962036133

Token 201: '(my' (ID: 23725)
  Prédit: '("("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("("' → logprob: -0.288176953792572
    2. '(my' → logprob: -2.163177013397217
    3. '(' → logprob: -2.538177013397217
    4. '("(' → logprob: -2.913177013397217
    5. '("' → logprob: -6.538177013397217
    6. '('' → logprob: -7.663177013397217
    7. '("")' → logprob: -10.288176536560059
    8. '("\"' → logprob: -10.538176536560059
    9. ' ("' → logprob: -10.913176536560059
    10. '"(' → logprob: -10.913176536560059

Token 202: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -9.078839502763003e-05
    2. '_' → logprob: -9.375090599060059
    3. '_w' → logprob: -12.875090599060059
    4. ' _' → logprob: -13.750090599060059
    5. 'word' → logprob: -13.875090599060059
    6. '_WORD' → logprob: -14.875090599060059
    7. '_words' → logprob: -15.875090599060059
    8. 'Word' → logprob: -16.000091552734375
    9. 'w' → logprob: -16.375091552734375
    10. '_world' → logprob: -16.500091552734375

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -15.375015258789062
    4. ')

' → logprob: -16.625015258789062
    5. '))' → logprob: -17.000015258789062
    6. ')`' → logprob: -17.000015258789062
    7. '")' → logprob: -17.750015258789062
    8. ')#' → logprob: -18.625015258789062
    9. '
' → logprob: -18.750015258789062
    10. '),' → logprob: -19.000015258789062

Token 204: 'turn' (ID: 529)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26162898540496826
    2. '
' → logprob: -1.7616289854049683
    3. 'turn' → logprob: -3.636629104614258
    4. '<|end|>' → logprob: -4.136629104614258
    5. ' while' → logprob: -4.886629104614258
    6. '\n' → logprob: -5.011629104614258
    7. ' 
' → logprob: -7.136629104614258
    8. ' turn' → logprob: -8.386629104614258
    9. '<|end|>' → logprob: -8.511629104614258
    10. '  
' → logprob: -8.886629104614258

Token 205: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0011684374185279012
    2. ' =' → logprob: -6.876168251037598
    3. '+=' → logprob: -9.251168251037598
    4. ' ' → logprob: -10.751168251037598
    5. ' +' → logprob: -11.501168251037598
    6. '=' → logprob: -12.126168251037598
    7. '+' → logprob: -12.876168251037598
    8. ' -=' → logprob: -17.001169204711914
    9. ' ' → logprob: -17.876169204711914
    10. ' |=' → logprob: -18.001169204711914

Token 206: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -19.000179290771484
    4. '```' → logprob: -19.375179290771484
    5. '0' → logprob: -19.500179290771484
    6. '１' → logprob: -19.625179290771484
    7. '2' → logprob: -20.000179290771484
    8. '  ' → logprob: -20.125179290771484
    9. '۱' → logprob: -20.562679290771484
    10. ' ' → logprob: -20.562679290771484

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '0' → logprob: -18.625001907348633
    4. '2' → logprob: -19.625001907348633
    5. '１' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.750001907348633
    7. '```' → logprob: -21.000001907348633
    8. '۱' → logprob: -21.375001907348633
    9. '
' → logprob: -21.500001907348633
    10. '3' → logprob: -21.500001907348633

Token 208: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0002694416616577655
    2. ' while' → logprob: -8.875269889831543
    3. '
' → logprob: -9.125269889831543
    4. 'try' → logprob: -12.125269889831543
    5. 'import' → logprob: -12.250269889831543
    6. '```' → logprob: -12.875269889831543
    7. 'word' → logprob: -13.000269889831543
    8. 'last' → logprob: -13.000269889831543
    9. 'ai' → logprob: -14.000269889831543
    10. 'for' → logprob: -14.125269889831543

Token 209: 'last' (ID: 6684)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00010568885772954673
    2. 'for' → logprob: -9.625105857849121
    3. ' while' → logprob: -10.375105857849121
    4. 'last' → logprob: -12.500105857849121
    5. 'import' → logprob: -12.750105857849121
    6. 'try' → logprob: -13.500105857849121
    7. '
' → logprob: -15.375105857849121
    8. '```' → logprob: -15.875105857849121
    9. '	while' → logprob: -17.875104904174805
    10. 'While' → logprob: -18.000104904174805

Token 210: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.014202646911144257
    2. '_' → logprob: -4.26420259475708
    3. '_line' → logprob: -11.514203071594238
    4. '_input' → logprob: -12.389203071594238
    5. 'word' → logprob: -12.514203071594238
    6. '_turn' → logprob: -12.639203071594238
    7. '_letter' → logprob: -12.889203071594238
    8. '_w' → logprob: -12.889203071594238
    9. '_words' → logprob: -13.014203071594238
    10. ' =' → logprob: -13.264203071594238

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975245751440525
    2. '=' → logprob: -3.529752492904663
    3. ' ' → logprob: -13.779752731323242
    4. '_' → logprob: -14.279752731323242
    5. ',' → logprob: -15.654752731323242
    6. 'space' → logprob: -16.904752731323242
    7. ' ' → logprob: -17.529752731323242
    8. ' =
' → logprob: -17.529752731323242
    9. ')' → logprob: -17.779752731323242
    10. '_space' → logprob: -18.279752731323242

Token 212: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.10443899035453796
    2. ' my' → logprob: -2.4794390201568604
    3. '"a' → logprob: -4.479438781738281
    4. 'a' → logprob: -6.104438781738281
    5. '"' → logprob: -7.104438781738281
    6. ' a' → logprob: -7.479438781738281
    7. ' "' → logprob: -7.979438781738281
    8. ''a' → logprob: -9.729438781738281
    9. ' ' → logprob: -11.854438781738281
    10. '_my' → logprob: -13.229438781738281

Token 213: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.9981420336989686e-05
    2. '_' → logprob: -11.250020027160645
    3. 'word' → logprob: -12.000020027160645
    4. '_w' → logprob: -14.375020027160645
    5. 'Word' → logprob: -16.625019073486328
    6. '_
' → logprob: -17.750019073486328
    7. '__' → logprob: -17.875019073486328
    8. '_world' → logprob: -18.000019073486328
    9. '_WORD' → logprob: -18.125019073486328
    10. '._' → logprob: -18.500019073486328

Token 214: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.747814349073451e-05
    2. ' while' → logprob: -11.625017166137695
    3. 'for' → logprob: -12.375017166137695
    4. '
' → logprob: -13.000017166137695
    5. 'try' → logprob: -13.875017166137695
    6. 'import' → logprob: -13.875017166137695
    7. 'While' → logprob: -16.750017166137695
    8. '```' → logprob: -17.000017166137695
    9. '	while' → logprob: -17.625017166137695
    10. 'wh' → logprob: -17.750017166137695

Token 215: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00085678935283795
    2. 'for' → logprob: -7.250856876373291
    3. ' while' → logprob: -8.875856399536133
    4. 'try' → logprob: -12.000856399536133
    5. 'import' → logprob: -14.375856399536133
    6. '```' → logprob: -16.500856399536133
    7. 'ai' → logprob: -16.625856399536133
    8. 'def' → logprob: -16.750856399536133
    9. '#' → logprob: -17.000856399536133
    10. '	while' → logprob: -17.125856399536133

Token 216: ' turn' (ID: 3716)
  Prédit: ' turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' turn' → logprob: -0.004100604448467493
    2. 'turn' → logprob: -5.504100799560547
    3. ' True' → logprob: -11.379100799560547
    4. '(turn' → logprob: -12.129100799560547
    5. 'True' → logprob: -12.254100799560547
    6. ' ' → logprob: -15.254100799560547
    7. '_turn' → logprob: -16.879100799560547
    8. ' ' → logprob: -17.379100799560547
    9. '.turn' → logprob: -17.379100799560547
    10. 'Turn' → logprob: -17.504100799560547

Token 217: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011067395098507404
    2. '<' → logprob: -4.5110673904418945
    3. ' <=' → logprob: -11.386067390441895
    4. ' ' → logprob: -11.761067390441895
    5. '<=' → logprob: -16.01106834411621
    6. ' <
' → logprob: -16.13606834411621
    7. '<len' → logprob: -17.38606834411621
    8. '<n' → logprob: -17.38606834411621
    9. ' ' → logprob: -17.88606834411621
    10. '<size' → logprob: -18.13606834411621

Token 218: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.20147991180419922
    2. ' max' → logprob: -1.7014799118041992
    3. '50' → logprob: -9.7014799118042
    4. ' ' → logprob: -12.2014799118042
    5. '	max' → logprob: -15.7014799118042
    6. '   ' → logprob: -16.576480865478516
    7. '(max' → logprob: -17.451480865478516
    8. '
' → logprob: -17.451480865478516
    9. '_max' → logprob: -17.826480865478516
    10. '=max' → logprob: -17.826480865478516

Token 219: '_turn' (ID: 89223)
  Prédit: '_turn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_turn' → logprob: -4.246537173457909e-06
    2. 'turn' → logprob: -13.000003814697266
    3. '_' → logprob: -13.250003814697266
    4. ' _' → logprob: -16.875003814697266
    5. '_
' → logprob: -17.500003814697266
    6. '
' → logprob: -17.750003814697266
    7. '(turn' → logprob: -18.000003814697266
    8. '_max' → logprob: -18.625003814697266
    9. '_t' → logprob: -18.625003814697266
    10. ' turns' → logprob: -19.250003814697266

Token 220: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.349075556499884e-05
    2. '_turn' → logprob: -9.7500638961792
    3. 'turn' → logprob: -13.2500638961792
    4. '_' → logprob: -13.7500638961792
    5. ' s' → logprob: -14.1250638961792
    6. '_s' → logprob: -14.5000638961792
    7. '   ' → logprob: -15.5000638961792
    8. 'es' → logprob: -15.6250638961792
    9. 'urn' → logprob: -15.7500638961792
    10. '```' → logprob: -16.250062942504883

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015788980526849627
    2. ':
' → logprob: -6.5015788078308105
    3. ' :' → logprob: -9.501579284667969
    4. ' :
' → logprob: -13.876579284667969
    5. ' and' → logprob: -14.376579284667969
    6. ':

' → logprob: -16.25157928466797
    7. '   ' → logprob: -16.37657928466797
    8. 'and' → logprob: -17.12657928466797
    9. ':
' → logprob: -17.12657928466797
    10. '):' → logprob: -17.75157928466797

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00246483669616282
    2. 'ai' → logprob: -7.502464771270752
    3. 'try' → logprob: -7.627464771270752
    4. '    
' → logprob: -7.877464771270752
    5. '
' → logprob: -8.37746524810791
    6. 'word' → logprob: -8.50246524810791
    7. ' try' → logprob: -8.75246524810791
    8. 'input' → logprob: -8.75246524810791
    9. ' word' → logprob: -9.12746524810791
    10. ' ai' → logprob: -9.75246524810791

Token 223: ' ai' (ID: 8440)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.20005682110786438
    2. 'try' → logprob: -2.825056791305542
    3. 'input' → logprob: -3.075056791305542
    4. 'inp' → logprob: -3.325056791305542
    5. '   ' → logprob: -4.200057029724121
    6. 'response' → logprob: -4.700057029724121
    7. 'user' → logprob: -4.950057029724121
    8. 'ai' (adapté à ' ai') → logprob: -5.575057029724121
    9. 'answer' → logprob: -6.950057029724121
    10. 'raw' → logprob: -7.075057029724121

Token 224: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.5323712229728699
    2. '_input' → logprob: -1.0323712825775146
    3. '_response' → logprob: -3.5323712825775146
    4. '_' → logprob: -3.9073712825775146
    5. '_reply' → logprob: -5.7823710441589355
    6. '_answer' → logprob: -6.2823710441589355
    7. '_line' → logprob: -6.5323710441589355
    8. '_output' → logprob: -7.7823710441589355
    9. '_in' → logprob: -9.157371520996094
    10. '_ai' → logprob: -9.782371520996094

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2811722159385681
    2. '=' → logprob: -1.406172275543213
    3. ' ' → logprob: -11.781171798706055
    4. '_input' → logprob: -12.281171798706055
    5. '=input' → logprob: -12.781171798706055
    6. '_' → logprob: -13.281171798706055
    7. '   ' → logprob: -13.656171798706055
    8. ',' → logprob: -13.781171798706055
    9. 'input' → logprob: -13.781171798706055
    10. ' =
' → logprob: -15.156171798706055

Token 226: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.052315179258584976
    2. 'sys' → logprob: -3.4273152351379395
    3. ' input' → logprob: -4.0523152351379395
    4. ' sys' → logprob: -6.8023152351379395
    5. '<input' → logprob: -14.052314758300781
    6. ' ' → logprob: -14.177314758300781
    7. 'None' → logprob: -15.427314758300781
    8. '(sys' → logprob: -15.552314758300781
    9. '""' → logprob: -15.677314758300781
    10. '(input' → logprob: -15.677314758300781

Token 227: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20324008166790009
    2. '().' → logprob: -1.7032400369644165
    3. '()
' → logprob: -6.328239917755127
    4. ' ()' → logprob: -11.203240394592285
    5. '(' → logprob: -11.828240394592285
    6. '()

' → logprob: -11.953240394592285
    7. ' ().' → logprob: -12.578240394592285
    8. '("")' → logprob: -13.203240394592285
    9. '("").' → logprob: -13.578240394592285
    10. '()>' → logprob: -13.953240394592285

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012387208640575409
    2. '    
' → logprob: -5.137387275695801
    3. '
' → logprob: -5.637387275695801
    4. 'if' → logprob: -6.762387275695801
    5. ' if' → logprob: -7.137387275695801
    6. '.strip' → logprob: -8.6373872756958
    7. '    ' → logprob: -8.8873872756958
    8. '<|end|>' → logprob: -9.0123872756958
    9. '   
' → logprob: -9.1373872756958
    10. ' 
' → logprob: -9.5123872756958

Token 229: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0931747779250145
    2. ' if' → logprob: -2.718174695968628
    3. '   ' → logprob: -3.843174695968628
    4. 'ai' → logprob: -6.843174934387207
    5. '    
' → logprob: -8.093174934387207
    6. '
' → logprob: -9.593174934387207
    7. '	if' → logprob: -10.093174934387207
    8. '  ' → logprob: -10.718174934387207
    9. '    ' → logprob: -11.343174934387207
    10. '   
' → logprob: -12.093174934387207

Token 230: ' ai' (ID: 8440)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.012606542557477951
    2. ' ai' → logprob: -4.512606620788574
    3. 'not' → logprob: -6.762606620788574
    4. 'ai' → logprob: -8.137606620788574
    5. ' is' → logprob: -9.512606620788574
    6. ' ' → logprob: -10.887606620788574
    7. '(not' → logprob: -13.200106620788574
    8. '_ai' → logprob: -13.262606620788574
    9. ' len' → logprob: -13.325106620788574
    10. '	not' → logprob: -13.325106620788574

Token 231: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -9.253090865968261e-06
    2. 'word' → logprob: -12.875009536743164
    3. '_' → logprob: -13.125009536743164
    4. '_words' → logprob: -13.250009536743164
    5. '_WORD' → logprob: -14.250009536743164
    6. '   ' → logprob: -14.375009536743164
    7. ' _' → logprob: -14.750009536743164
    8. '_world' → logprob: -15.250009536743164
    9. 'Word' → logprob: -15.375009536743164
    10. ' ' → logprob: -15.625009536743164

Token 232: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16697238385677338
    2. '==' → logprob: -2.1669723987579346
    3. ' not' → logprob: -3.2919723987579346
    4. 'not' → logprob: -7.0419721603393555
    5. ' is' → logprob: -7.2919721603393555
    6. ' in' → logprob: -8.666972160339355
    7. '.strip' → logprob: -9.041972160339355
    8. ' ' → logprob: -9.416972160339355
    9. '.' → logprob: -9.791972160339355
    10. '=="' → logprob: -10.666972160339355

Token 233: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.08285355567932129
    2. 'used' → logprob: -2.5828535556793213
    3. '["' → logprob: -6.457853317260742
    4. ' ["' → logprob: -7.582853317260742
    5. '{"' → logprob: -7.707853317260742
    6. ' ("' → logprob: -7.832853317260742
    7. '['' → logprob: -8.582853317260742
    8. ' sys' → logprob: -8.582853317260742
    9. ' ' → logprob: -8.832853317260742
    10. '("' → logprob: -9.207853317260742

Token 234: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2913627028465271
    2. ':
' → logprob: -1.5413627624511719
    3. ':' → logprob: -3.291362762451172
    4. '   ' → logprob: -6.791362762451172
    5. 'or' → logprob: -8.166362762451172
    6. '       ' → logprob: -11.291362762451172
    7. ' ' → logprob: -11.291362762451172
    8. '	or' → logprob: -12.041362762451172
    9. ' :
' → logprob: -12.041362762451172
    10. '    ' → logprob: -12.166362762451172

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10646523535251617
    2. ' or' → logprob: -2.6064653396606445
    3. ':
' → logprob: -3.9814653396606445
    4. ':' → logprob: -4.9814653396606445
    5. '   ' → logprob: -6.4814653396606445
    6. ' and' → logprob: -9.231465339660645
    7. '    ' → logprob: -12.106465339660645
    8. ',' → logprob: -12.231465339660645
    9. 'or' → logprob: -12.231465339660645
    10. '     ' → logprob: -12.231465339660645

Token 236: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011881384998559952
    2. '   ' → logprob: -5.636881351470947
    3. 'print' → logprob: -5.636881351470947
    4. 'break' → logprob: -6.136881351470947
    5. ' break' → logprob: -6.386881351470947
    6. ' print' → logprob: -7.886881351470947
    7. '
' → logprob: -8.886881828308105
    8. '        
' → logprob: -9.636881828308105
    9. '    ' → logprob: -9.761881828308105
    10. '           ' → logprob: -10.136881828308105

Token 237: ' AI' (ID: 20837)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00535968691110611
    2. ' print' → logprob: -5.630359649658203
    3. '   ' → logprob: -6.380359649658203
    4. '#print' → logprob: -11.130359649658203
    5. '#' → logprob: -11.255359649658203
    6. ' ' → logprob: -11.505359649658203
    7. 'sys' → logprob: -11.880359649658203
    8. '       ' → logprob: -12.255359649658203
    9. 'break' → logprob: -12.380359649658203
    10. '
' → logprob: -13.755359649658203

Token 238: ' repeated' (ID: 24161)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.44449323415756226
    2. 'print' → logprob: -1.944493293762207
    3. '   ' → logprob: -2.319493293762207
    4. '_words' → logprob: -3.819493293762207
    5. ' print' → logprob: -4.319493293762207
    6. 'break' → logprob: -4.694493293762207
    7. ' ' → logprob: -4.944493293762207
    8. '#' → logprob: -5.194493293762207
    9. 'word' → logprob: -5.319493293762207
    10. ':' → logprob: -5.444493293762207

Token 239: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24034945666790009
    2. '   ' → logprob: -1.8653494119644165
    3. ' print' → logprob: -4.365349292755127
    4. '
' → logprob: -4.365349292755127
    5. '       ' → logprob: -5.240349292755127
    6. '"' → logprob: -5.490349292755127
    7. '    
' → logprob: -5.615349292755127
    8. 'break' → logprob: -5.615349292755127
    9. 'and' → logprob: -5.990349292755127
    10. 'word' → logprob: -6.115349292755127

Token 240: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.07769565284252167
    2. 'word' → logprob: -2.827695608139038
    3. '_word' → logprob: -5.827695846557617
    4. 'nd' → logprob: -6.452695846557617
    5. 'print' → logprob: -6.452695846557617
    6. 'n' → logprob: -6.702695846557617
    7. ' used' → logprob: -7.202695846557617
    8. ' ' → logprob: -7.327695846557617
    9. 'sk' → logprob: -7.327695846557617
    10. '   ' → logprob: -7.702695846557617

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03228131681680679
    2. '   ' → logprob: -3.9072813987731934
    3. '
' → logprob: -5.657281398773193
    4. ',' → logprob: -5.907281398773193
    5. ' or' → logprob: -6.282281398773193
    6. 'print' → logprob: -6.532281398773193
    7. ':
' → logprob: -7.157281398773193
    8. ' print' → logprob: -8.407280921936035
    9. '.' → logprob: -8.532280921936035
    10. ':' → logprob: -8.782280921936035

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009832708165049553
    2. '   ' → logprob: -4.884832859039307
    3. '
' → logprob: -6.884832859039307
    4. 'print' → logprob: -7.134832859039307
    5. '        
' → logprob: -8.634832382202148
    6. ' print' → logprob: -9.384832382202148
    7. '    
' → logprob: -10.259832382202148
    8. ',' → logprob: -10.634832382202148
    9. '           ' → logprob: -11.009832382202148
    10. 'continue' → logprob: -11.384832382202148

Token 243: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015590202528983355
    2. '   ' → logprob: -7.501559257507324
    3. 'break' → logprob: -7.501559257507324
    4. ' print' → logprob: -7.751559257507324
    5. '       ' → logprob: -12.251559257507324
    6. ' break' → logprob: -12.501559257507324
    7. '#print' → logprob: -12.626559257507324
    8. ' ' → logprob: -12.876559257507324
    9. 'exit' → logprob: -13.251559257507324
    10. '    
' → logprob: -13.376559257507324

Token 244: '("' (ID: 568)
  Prédit: '_and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.2704152762889862
    2. '("' → logprob: -2.0204153060913086
    3. '("_' → logprob: -2.2704153060913086
    4. '("&' → logprob: -8.145415306091309
    5. '(' → logprob: -8.895415306091309
    6. 'And' → logprob: -9.145415306091309
    7. 'and' → logprob: -9.395415306091309
    8. '("?' → logprob: -9.770415306091309
    9. '("+' → logprob: -10.020415306091309
    10. '("#' → logprob: -10.145415306091309

Token 245: '!' (ID: 0)
  Prédit: '!'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.056827157735824585
    2. '!")' → logprob: -3.4318270683288574
    3. '!"' → logprob: -5.056827068328857
    4. 'Invalid' → logprob: -5.431827068328857
    5. '?' → logprob: -6.056827068328857
    6. 'No' → logprob: -6.306827068328857
    7. '!")
' → logprob: -6.306827068328857
    8. '"' → logprob: -6.556827068328857
    9. 'Wrong' → logprob: -7.431827068328857
    10. '-' → logprob: -7.806827068328857

Token 246: 'OUT' (ID: 5858)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6959590911865234
    2. 'Invalid' → logprob: -1.6959590911865234
    3. ' Invalid' → logprob: -1.9459590911865234
    4. '"' → logprob: -3.6959590911865234
    5. 'Repeated' → logprob: -3.9459590911865234
    6. ' AI' → logprob: -4.195959091186523
    7. 'Incorrect' → logprob: -4.195959091186523
    8. ' ")' → logprob: -4.445959091186523
    9. 'AI' → logprob: -4.820959091186523
    10. 'Wrong' → logprob: -4.820959091186523

Token 247: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3977817893028259
    2. '\n' → logprob: -1.1477818489074707
    3. '")
' → logprob: -5.272781848907471
    4. '_' → logprob: -6.522781848907471
    5. '_OF' → logprob: -6.772781848907471
    6. '\r' → logprob: -7.147781848907471
    7. '!' → logprob: -8.147781372070312
    8. '"' → logprob: -8.647781372070312
    9. '
' → logprob: -8.772781372070312
    10. '!")' → logprob: -8.772781372070312

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001698094274615869
    2. '   ' → logprob: -9.37516975402832
    3. '
' → logprob: -9.62516975402832
    4. '	break' → logprob: -12.50016975402832
    5. ' break' → logprob: -12.87516975402832
    6. '           ' → logprob: -13.25016975402832
    7. '<|end|>' → logprob: -13.25016975402832
    8. ')' → logprob: -13.25016975402832
    9. '        
' → logprob: -13.62516975402832
    10. '	' → logprob: -13.87516975402832

Token 249: ' sys' (ID: 12228)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5300961136817932
    2. 'break' → logprob: -1.5300960540771484
    3. ' break' → logprob: -1.6550960540771484
    4. '	break' → logprob: -6.280096054077148
    5. '   ' → logprob: -6.405096054077148
    6. '
' → logprob: -9.030096054077148
    7. 'sys' (adapté à ' sys') → logprob: -9.530096054077148
    8. '        
' → logprob: -10.155096054077148
    9. ' sys' → logprob: -10.530096054077148
    10. ' ' → logprob: -10.780096054077148

Token 250: '.stdout' (ID: 59462)
  Prédit: '.exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.011196243576705456
    2. '.stdout' → logprob: -4.511196136474609
    3. '.stderr' → logprob: -9.76119613647461
    4. '.' → logprob: -9.76119613647461
    5. 'exit' → logprob: -10.51119613647461
    6. '.stdin' → logprob: -12.88619613647461
    7. 'stdout' → logprob: -14.26119613647461
    8. '	exit' → logprob: -14.76119613647461
    9. '.ex' → logprob: -14.76119613647461
    10. '.EXIT' → logprob: -14.88619613647461

Token 251: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.00015407454338856041
    2. '.' → logprob: -9.500154495239258
    3. '.exit' → logprob: -9.500154495239258
    4. 'flush' → logprob: -12.500154495239258
    5. ' .' → logprob: -14.750154495239258
    6. '.stdout' → logprob: -15.875154495239258
    7. '.quit' → logprob: -16.625154495239258
    8. '.write' → logprob: -17.125154495239258
    9. '.Flush' → logprob: -17.500154495239258
    10. '.close' → logprob: -17.875154495239258

Token 252: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13277076184749603
    2. ')' → logprob: -2.7577707767486572
    3. ')
' → logprob: -3.6327707767486572
    4. '()
' → logprob: -4.007770538330078
    5. '()' → logprob: -4.257770538330078
    6. '
' → logprob: -6.882770538330078
    7. '   ' → logprob: -7.632770538330078
    8. '())
' → logprob: -8.382770538330078
    9. '<|end|>' → logprob: -9.507770538330078
    10. '())' → logprob: -9.757770538330078

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004231667553540319
    2. '   ' → logprob: -7.875422954559326
    3. '
' → logprob: -10.750423431396484
    4. '	break' → logprob: -12.375423431396484
    5. '        
' → logprob: -12.625423431396484
    6. 'break' → logprob: -12.750423431396484
    7. '      ' → logprob: -13.250423431396484
    8. ' break' → logprob: -13.500423431396484
    9. '	' → logprob: -13.500423431396484
    10. '    
' → logprob: -13.875423431396484

Token 254: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34957870841026306
    2. 'break' (adapté à ' break') → logprob: -1.3495787382125854
    3. ' break' → logprob: -3.349578619003296
    4. '   ' → logprob: -7.724578857421875
    5. '	break' → logprob: -9.099578857421875
    6. '
' → logprob: -12.099578857421875
    7. ' ' → logprob: -13.349578857421875
    8. '      ' → logprob: -13.474578857421875
    9. '        
' → logprob: -13.974578857421875
    10. '           ' → logprob: -14.099578857421875

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014534479705616832
    2. '
' → logprob: -7.126453399658203
    3. '    
' → logprob: -7.376453399658203
    4. '<|end|>' → logprob: -11.251453399658203
    5. '  
' → logprob: -12.501453399658203
    6. '        
' → logprob: -12.876453399658203
    7. 'elif' → logprob: -13.501453399658203
    8. '   
' → logprob: -14.376453399658203
    9. ' 
' → logprob: -14.751453399658203
    10. '<|end|>' → logprob: -15.251453399658203

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005100222188048065
    2. '
' → logprob: -8.000510215759277
    3. '    
' → logprob: -8.750510215759277
    4. '<|end|>' → logprob: -11.500510215759277
    5. '  
' → logprob: -13.000510215759277
    6. '        
' → logprob: -13.875510215759277
    7. '   
' → logprob: -14.125510215759277
    8. 'elif' → logprob: -14.375510215759277
    9. ' 
' → logprob: -15.250510215759277
    10. '<|end|>' → logprob: -15.375510215759277

Token 257: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004058098420500755
    2. 'if' (adapté à ' if') → logprob: -5.754057884216309
    3. '
' → logprob: -7.879057884216309
    4. ' if' → logprob: -8.129057884216309
    5. '    
' → logprob: -8.629057884216309
    6. ' ' → logprob: -11.754057884216309
    7. 'elif' → logprob: -12.254057884216309
    8. '  ' → logprob: -12.504057884216309
    9. '  
' → logprob: -12.754057884216309
    10. '        
' → logprob: -12.879057884216309

Token 258: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5760545134544373
    2. 'not' → logprob: -0.8260545134544373
    3. '   ' → logprob: -10.076054573059082
    4. 'len' → logprob: -10.701054573059082
    5. 'ai' → logprob: -11.326054573059082
    6. ' len' → logprob: -11.701054573059082
    7. ' no' → logprob: -11.701054573059082
    8. 'no' → logprob: -12.326054573059082
    9. ' ai' → logprob: -12.326054573059082
    10. ' is' → logprob: -12.576054573059082

Token 259: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.34847328066825867
    2. 'is' → logprob: -1.223473310470581
    3. 'ai' → logprob: -11.34847354888916
    4. '(is' → logprob: -11.72347354888916
    5. ' ai' → logprob: -12.34847354888916
    6. ' (' → logprob: -13.59847354888916
    7. '(' → logprob: -13.97347354888916
    8. ' ' → logprob: -14.22347354888916
    9. '	is' → logprob: -15.16097354888916
    10. '_is' → logprob: -15.47347354888916

Token 260: '_ai' (ID: 175198)
  Prédit: '_ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ai' → logprob: -0.2519720792770386
    2. '_valid' → logprob: -1.5019720792770386
    3. 'ai' → logprob: -10.751972198486328
    4. 'valid' → logprob: -11.251972198486328
    5. '_AI' → logprob: -13.126972198486328
    6. 'AI' → logprob: -13.376972198486328
    7. '_word' → logprob: -13.501972198486328
    8. '_' → logprob: -13.751972198486328
    9. 'Valid' → logprob: -14.751972198486328
    10. ' ai' → logprob: -15.126972198486328

Token 261: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0006776464288122952
    2. '_valid' → logprob: -8.000678062438965
    3. '_ai' → logprob: -8.000678062438965
    4. ' _' → logprob: -13.250678062438965
    5. '_w' → logprob: -13.625678062438965
    6. '_' → logprob: -13.875678062438965
    7. '_words' → logprob: -14.125678062438965
    8. 'word' → logprob: -14.750678062438965
    9. ''_' → logprob: -15.125678062438965
    10. '_world' → logprob: -15.125678062438965

Token 262: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.00014096579980105162
    2. 'valid' → logprob: -8.875141143798828
    3. 'alid' → logprob: -14.125141143798828
    4. 'Valid' → logprob: -16.000141143798828
    5. '_' → logprob: -16.625141143798828
    6. '_VALID' → logprob: -17.750141143798828
    7. ' valid' → logprob: -17.750141143798828
    8. '_word' → logprob: -18.000141143798828
    9. 'al' → logprob: -18.625141143798828
    10. '_invalid' → logprob: -18.750141143798828

Token 263: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. ' (' → logprob: -16.125001907348633
    4. '(a' → logprob: -17.250001907348633
    5. 'ai' → logprob: -18.375001907348633
    6. '(
' → logprob: -18.750001907348633
    7. '.ai' → logprob: -19.125001907348633
    8. '(api' → logprob: -20.125001907348633
    9. '(ast' → logprob: -20.125001907348633
    10. '(ans' → logprob: -20.250001907348633

Token 264: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0012791648041456938
    2. 'word' → logprob: -6.751279354095459
    3. 'ord' → logprob: -9.7512788772583
    4. 'rd' → logprob: -10.6262788772583
    5. 'Word' → logprob: -11.7512788772583
    6. '(ai' → logprob: -11.8762788772583
    7. '(word' → logprob: -12.7512788772583
    8. 'd' → logprob: -13.3762788772583
    9. '_' → logprob: -13.8762788772583
    10. '_words' → logprob: -14.1262788772583

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000793185958173126
    2. ',last' → logprob: -7.625792980194092
    3. ' ,' → logprob: -8.12579345703125
    4. 'last' → logprob: -12.50079345703125
    5. ' ' → logprob: -13.12579345703125
    6. '(last' → logprob: -13.50079345703125
    7. ',
' → logprob: -14.75079345703125
    8. ' last' → logprob: -14.87579345703125
    9. '   ' → logprob: -15.12579345703125
    10. '[last' → logprob: -15.25079345703125

Token 266: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.20142298936843872
    2. ' last' → logprob: -1.701422929763794
    3. '   ' → logprob: -12.701422691345215
    4. ' ' → logprob: -13.201422691345215
    5. '(last' → logprob: -13.201422691345215
    6. '	last' → logprob: -13.826422691345215
    7. '[last' → logprob: -14.076422691345215
    8. ',last' → logprob: -15.326422691345215
    9. '_last' → logprob: -15.451422691345215
    10. 'Last' → logprob: -15.451422691345215

Token 267: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -7.896309739408025e-07
    2. 'word' → logprob: -15.000000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_w' → logprob: -16.375
    5. 'Word' → logprob: -18.75
    6. '_world' → logprob: -18.875
    7. ' word' → logprob: -20.0
    8. '_words' → logprob: -20.0
    9. '_WORD' → logprob: -20.375
    10. '-word' → logprob: -21.25

Token 268: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3873394727706909
    2. '):' → logprob: -1.137339472770691
    3. '   ' → logprob: -7.8873395919799805
    4. ')' → logprob: -9.88733959197998
    5. ' ):
' → logprob: -11.38733959197998
    6. ' ):' → logprob: -11.51233959197998
    7. '):
' → logprob: -11.88733959197998
    8. ':' → logprob: -12.13733959197998
    9. '       ' → logprob: -12.26233959197998
    10. '):

' → logprob: -13.38733959197998

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011280750622972846
    2. ':
' → logprob: -7.001128196716309
    3. ':' → logprob: -9.126128196716309
    4. '   ' → logprob: -9.376128196716309
    5. '):
' → logprob: -11.876128196716309
    6. '
' → logprob: -11.876128196716309
    7. 'print' → logprob: -12.376128196716309
    8. '():
' → logprob: -13.876128196716309
    9. ' print' → logprob: -14.251128196716309
    10. '      ' → logprob: -14.376128196716309

Token 270: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.694927453994751
    2. '   ' → logprob: -1.194927453994751
    3. 'print' (adapté à ' print') → logprob: -2.194927453994751
    4. ' print' → logprob: -2.444927453994751
    5. ' ' → logprob: -10.819927215576172
    6. '	print' → logprob: -10.819927215576172
    7. '
' → logprob: -12.319927215576172
    8. '    ' → logprob: -12.444927215576172
    9. '#' → logprob: -12.694927215576172
    10. '  ' → logprob: -13.444927215576172

Token 271: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.4034345187828876e-05
    2. '("?' → logprob: -10.75002384185791
    3. '(' → logprob: -13.00002384185791
    4. ' ("' → logprob: -16.250024795532227
    5. '("_' → logprob: -17.000024795532227
    6. '(":' → logprob: -17.875024795532227
    7. '(">' → logprob: -17.875024795532227
    8. '("+' → logprob: -18.125024795532227
    9. '('' → logprob: -18.125024795532227
    10. '("#' → logprob: -18.375024795532227

Token 272: '!' (ID: 0)
  Prédit: '!'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!' → logprob: -0.0020624727476388216
    2. '"!' → logprob: -6.2520623207092285
    3. '"' → logprob: -9.377062797546387
    4. '!("' → logprob: -11.252062797546387
    5. '?' → logprob: -11.502062797546387
    6. '!?' → logprob: -11.752062797546387
    7. '"?' → logprob: -12.002062797546387
    8. '!"' → logprob: -12.877062797546387
    9. '!")' → logprob: -13.252062797546387
    10. '!
' → logprob: -13.627062797546387

Token 273: 'OUT' (ID: 5858)
  Prédit: 'OUT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUT' → logprob: -0.008422610349953175
    2. 'WR' → logprob: -5.258422374725342
    3. 'INVALID' → logprob: -7.383422374725342
    4. 'ERR' → logprob: -7.508422374725342
    5. 'LOSE' → logprob: -7.633422374725342
    6. 'FAIL' → logprob: -8.3834228515625
    7. 'WIN' → logprob: -8.6334228515625
    8. 'IN' → logprob: -8.8834228515625
    9. 'END' → logprob: -9.0084228515625
    10. 'INC' → logprob: -9.3834228515625

Token 274: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.03013412095606327
    2. '")' → logprob: -3.5301342010498047
    3. ')
' → logprob: -8.280134201049805
    4. '")
' → logprob: -9.405134201049805
    5. '       ' → logprob: -10.530134201049805
    6. ')' → logprob: -11.030134201049805
    7. '   ' → logprob: -13.155134201049805
    8. ')")
' → logprob: -13.655134201049805
    9. '')
' → logprob: -14.655134201049805
    10. ' ")
' → logprob: -14.780134201049805

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043162284418940544
    2. '
' → logprob: -7.875431537628174
    3. '   ' → logprob: -10.625432014465332
    4. '<|end|>' → logprob: -11.125432014465332
    5. '        
' → logprob: -12.500432014465332
    6. '```' → logprob: -13.125432014465332
    7. ')' → logprob: -13.500432014465332
    8. ')
' → logprob: -13.625432014465332
    9. '  
' → logprob: -14.125432014465332
    10. 'sys' → logprob: -14.250432014465332

Token 276: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' (adapté à ' sys') → logprob: -0.009133044630289078
    2. '       ' → logprob: -4.8841328620910645
    3. ' sys' → logprob: -6.8841328620910645
    4. '
' → logprob: -7.6341328620910645
    5. '        
' → logprob: -11.884133338928223
    6. '   ' → logprob: -13.009133338928223
    7. '	sys' → logprob: -13.009133338928223
    8. '           ' → logprob: -13.259133338928223
    9. '    
' → logprob: -14.009133338928223
    10. '```' → logprob: -14.384133338928223

Token 277: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -2.7133641196996905e-05
    2. 'stdout' → logprob: -10.87502670288086
    3. '.exit' → logprob: -12.12502670288086
    4. '.stdin' → logprob: -13.37502670288086
    5. '.stderr' → logprob: -13.87502670288086
    6. '.' → logprob: -16.37502670288086
    7. '.argv' → logprob: -16.50002670288086
    8. '.std' → logprob: -16.62502670288086
    9. '(stdout' → logprob: -17.62502670288086
    10. '.out' → logprob: -18.50002670288086

Token 278: '.flush' (ID: 42867)
  Prédit: '.flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.flush' → logprob: -0.008615872822701931
    2. 'flush' → logprob: -4.758615970611572
    3. '.' → logprob: -15.133615493774414
    4. ' .' → logprob: -15.133615493774414
    5. ' flush' → logprob: -15.758615493774414
    6. '_flush' → logprob: -15.758615493774414
    7. '.stdout' → logprob: -16.008615493774414
    8. 'stdout' → logprob: -16.133615493774414
    9. '.Flush' → logprob: -16.258615493774414
    10. 'lush' → logprob: -16.383615493774414

Token 279: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006791924242861569
    2. '()' → logprob: -7.500679016113281
    3. ')' → logprob: -9.250679016113281
    4. '   ' → logprob: -11.125679016113281
    5. '()
' → logprob: -12.250679016113281
    6. ',' → logprob: -12.875679016113281
    7. '(' → logprob: -12.875679016113281
    8. '<|end|>' → logprob: -13.375679016113281
    9. ')
' → logprob: -14.000679016113281
    10. '           ' → logprob: -14.125679016113281

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008068907191045582
    2. '   ' → logprob: -7.12580680847168
    3. '        
' → logprob: -14.75080680847168
    4. '	' → logprob: -15.00080680847168
    5. '           ' → logprob: -15.25080680847168
    6. '<|end|>' → logprob: -15.37580680847168
    7. '      ' → logprob: -15.50080680847168
    8. '    
' → logprob: -15.62580680847168
    9. '
' → logprob: -15.75080680847168
    10. '     ' → logprob: -15.87580680847168

Token 281: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6215822100639343
    2. '       ' → logprob: -0.8715822100639343
    3. ' break' → logprob: -3.121582269668579
    4. '   ' → logprob: -7.87158203125
    5. '	break' → logprob: -8.87158203125
    6. ' ' → logprob: -12.87158203125
    7. '
' → logprob: -13.37158203125
    8. '      ' → logprob: -13.62158203125
    9. '     ' → logprob: -14.12158203125
    10. '  ' → logprob: -14.74658203125

Token 282: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010131197050213814
    2. '
' → logprob: -4.885131359100342
    3. 'used' → logprob: -6.135131359100342
    4. '    
' → logprob: -8.510130882263184
    5. ' used' → logprob: -9.260130882263184
    6. '<|end|>' → logprob: -10.135130882263184
    7. '  
' → logprob: -12.010130882263184
    8. '  ' → logprob: -12.510130882263184
    9. 'if' → logprob: -12.885130882263184
    10. '        
' → logprob: -13.635130882263184

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009170551202259958
    2. 'used' → logprob: -7.375916957855225
    3. 'if' → logprob: -9.250917434692383
    4. '
' → logprob: -9.250917434692383
    5. '    
' → logprob: -9.500917434692383
    6. ' used' → logprob: -11.000917434692383
    7. '<|end|>' → logprob: -12.750917434692383
    8. ' if' → logprob: -13.250917434692383
    9. '  
' → logprob: -14.125917434692383
    10. '        
' → logprob: -15.000917434692383

Token 284: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -3.7697225252486533e-06
    2. ' used' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.250003814697266
    4. 'last' → logprob: -15.500003814697266
    5. '    
' → logprob: -17.875003814697266
    6. 'print' → logprob: -18.625003814697266
    7. 'turn' → logprob: -18.875003814697266
    8. '
' → logprob: -19.000003814697266
    9. 'Used' → logprob: -19.750003814697266
    10. 'if' → logprob: -20.125003814697266

Token 285: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -8.566264295950532e-05
    2. '.' → logprob: -9.375085830688477
    3. '.append' → logprob: -14.500085830688477
    4. '.update' → logprob: -16.500085830688477
    5. '.insert' → logprob: -16.875085830688477
    6. '.Add' → logprob: -17.500085830688477
    7. '.setdefault' → logprob: -17.500085830688477
    8. ' .' → logprob: -17.750085830688477
    9. ').' → logprob: -18.250085830688477
    10. '.remove' → logprob: -18.625085830688477

Token 286: '(ai' (ID: 172264)
  Prédit: '(ai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: 0.0
    2. '(' → logprob: -17.25
    3. '(a' → logprob: -18.75
    4. 'ai' → logprob: -23.75
    5. '(an' → logprob: -24.125
    6. '(ui' → logprob: -24.25
    7. '(
' → logprob: -24.25
    8. '(A' → logprob: -24.5
    9. '(api' → logprob: -25.25
    10. '(ax' → logprob: -25.625

Token 287: '_word' (ID: 32074)
  Prédit: '(ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ai' → logprob: -0.2614183723926544
    2. '_word' → logprob: -1.511418342590332
    3. '_ai' → logprob: -4.886418342590332
    4. 'ai' → logprob: -6.511418342590332
    5. 'word' → logprob: -7.886418342590332
    6. ' ai' → logprob: -11.761418342590332
    7. 'Word' → logprob: -12.011418342590332
    8. '(' → logprob: -12.636418342590332
    9. ')' → logprob: -12.886418342590332
    10. 'a' → logprob: -13.011418342590332

Token 288: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04809453338384628
    2. ')
' → logprob: -3.2980945110321045
    3. '   ' → logprob: -4.923094749450684
    4. '
' → logprob: -6.298094749450684
    5. ' last' → logprob: -7.548094749450684
    6. 'last' → logprob: -8.673094749450684
    7. '<|end|>' → logprob: -9.923094749450684
    8. '[last' → logprob: -10.173094749450684
    9. '    
' → logprob: -10.548094749450684
    10. '(last' → logprob: -11.298094749450684

Token 289: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06853698194026947
    2. '
' → logprob: -3.0685369968414307
    3. '   ' → logprob: -4.193536758422852
    4. ' last' → logprob: -5.443536758422852
    5. '	last' → logprob: -8.568536758422852
    6. '    
' → logprob: -9.818536758422852
    7. 'turn' → logprob: -10.193536758422852
    8. '
' → logprob: -10.318536758422852
    9. 'if' → logprob: -11.818536758422852
    10. '[last' → logprob: -12.443536758422852

Token 290: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.0017183773452416062
    2. 'print' → logprob: -6.626718521118164
    3. 'turn' → logprob: -8.376718521118164
    4. ' last' → logprob: -8.751718521118164
    5. '   ' → logprob: -12.751718521118164
    6. '    
' → logprob: -15.001718521118164
    7. ' turn' → logprob: -15.251718521118164
    8. ' print' → logprob: -15.626718521118164
    9. 'used' → logprob: -16.126718521118164
    10. '
' → logprob: -16.251718521118164

Token 291: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -5.676981345459353e-06
    2. '_' → logprob: -12.125005722045898
    3. '_w' → logprob: -16.1250057220459
    4. 'word' → logprob: -17.1250057220459
    5. 'Word' → logprob: -19.1250057220459
    6. '_words' → logprob: -19.5000057220459
    7. ' _' → logprob: -19.8750057220459
    8. '_world' → logprob: -20.1250057220459
    9. '_WORD' → logprob: -20.3750057220459
    10. '=' → logprob: -21.5000057220459

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '_' → logprob: -18.773244857788086
    4. ',' → logprob: -19.148244857788086
    5. '=

' → logprob: -19.648244857788086
    6. '＝' → logprob: -20.398244857788086
    7. '_=' → logprob: -20.398244857788086
    8. ' ' → logprob: -21.023244857788086
    9. '.=' → logprob: -21.148244857788086
    10. '=}' → logprob: -21.773244857788086

Token 293: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.029751067981123924
    2. ' ai' → logprob: -3.5297510623931885
    3. '_ai' → logprob: -14.65475082397461
    4. '(ai' → logprob: -16.40475082397461
    5. 'a' → logprob: -17.65475082397461
    6. '-ai' → logprob: -17.77975082397461
    7. '.ai' → logprob: -18.77975082397461
    8. '   ' → logprob: -19.77975082397461
    9. ' ' → logprob: -20.15475082397461
    10. 'ui' → logprob: -20.52975082397461

Token 294: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0011703446507453918
    2. 'word' → logprob: -6.7511701583862305
    3. 'Word' → logprob: -16.001171112060547
    4. 'w' → logprob: -18.501171112060547
    5. '_WORD' → logprob: -19.001171112060547
    6. '-word' → logprob: -19.001171112060547
    7. ' word' → logprob: -19.626171112060547
    8. '_' → logprob: -20.001171112060547
    9. '_words' → logprob: -20.376171112060547
    10. '_w' → logprob: -20.626171112060547

Token 295: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9464526176452637
    2. 'turn' → logprob: -1.0714526176452637
    3. '   ' → logprob: -1.4464526176452637
    4. '
' → logprob: -4.071452617645264
    5. '    
' → logprob: -4.196452617645264
    6. ' turn' → logprob: -6.696452617645264
    7. 'my' → logprob: -8.446453094482422
    8. '  
' → logprob: -9.446453094482422
    9. ' print' → logprob: -9.696453094482422
    10. '   
' → logprob: -9.821453094482422

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8657795786857605
    2. 'turn' → logprob: -1.2407796382904053
    3. 'print' → logprob: -1.7407796382904053
    4. '    
' → logprob: -2.6157796382904053
    5. '
' → logprob: -3.2407796382904053
    6. '```' → logprob: -7.240779399871826
    7. '  
' → logprob: -7.365779399871826
    8. ' turn' → logprob: -7.990779399871826
    9. '   
' → logprob: -8.365779876708984
    10. 'my' → logprob: -9.240779876708984

Token 297: ' #' (ID: 1069)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.40330201387405396
    2. '#' (adapté à ' #') → logprob: -1.6533019542694092
    3. 'print' → logprob: -2.153301954269409
    4. 'if' → logprob: -4.278302192687988
    5. 'while' → logprob: -5.528302192687988
    6. 'next' → logprob: -6.278302192687988
    7. 'word' → logprob: -6.528302192687988
    8. 'user' → logprob: -6.778302192687988
    9. 'new' → logprob: -6.903302192687988
    10. 'response' → logprob: -8.153302192687988

Token 298: ' Find' (ID: 9764)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.6057778596878052
    2. '#' → logprob: -0.9807778596878052
    3. 'while' → logprob: -3.4807777404785156
    4. 'next' → logprob: -4.230777740478516
    5. 'print' → logprob: -4.355777740478516
    6. 'response' → logprob: -4.980777740478516
    7. 'word' → logprob: -5.980777740478516
    8. 'user' → logprob: -5.980777740478516
    9. 'ai' → logprob: -6.230777740478516
    10. 'candidate' → logprob: -6.230777740478516

Token 299: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5919907689094543
    2. 'next' → logprob: -0.8419907689094543
    3. 'found' → logprob: -5.341990947723389
    4. 'ai' → logprob: -5.591990947723389
    5. 'possible' → logprob: -6.341990947723389
    6. ' found' → logprob: -7.091990947723389
    7. ' possible' → logprob: -7.091990947723389
    8. ' valid' → logprob: -7.216990947723389
    9. 'a' → logprob: -7.341990947723389
    10. ' the' → logprob: -7.591990947723389

Token 300: ' word' (ID: 2195)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.023077739402651787
    2. 'word' → logprob: -3.8980777263641357
    3. '_' → logprob: -7.148077964782715
    4. '_possible' → logprob: -7.398077964782715
    5. 'for' → logprob: -8.398077964782715
    6. '_candidate' → logprob: -8.523077964782715
    7. 'possible' → logprob: -8.648077964782715
    8. '_letter' → logprob: -8.898077964782715
    9. 'my' → logprob: -9.523077964782715
    10. '_ai' → logprob: -9.773077964782715

Token 301: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3576315641403198
    2. '=' → logprob: -1.4826315641403198
    3. ' =' → logprob: -1.8576315641403198
    4. ' for' → logprob: -2.6076316833496094
    5. '#' → logprob: -2.8576316833496094
    6. '_' → logprob: -3.1076316833496094
    7. 'found' → logprob: -3.4826316833496094
    8. ':' → logprob: -3.6076316833496094
    9. ',' → logprob: -4.482631683349609
    10. 'last' → logprob: -4.607631683349609

Token 302: ' say' (ID: 2891)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7803948521614075
    2. 'use' → logprob: -0.9053948521614075
    3. 'play' → logprob: -2.2803947925567627
    4. 'used' → logprob: -4.530395030975342
    5. 'start' → logprob: -4.530395030975342
    6. 'add' → logprob: -5.030395030975342
    7. 'continue' → logprob: -6.780395030975342
    8. 'output' → logprob: -6.905395030975342
    9. 'put' → logprob: -7.530395030975342
    10. 'input' → logprob: -7.655395030975342

Token 303: '
' (ID: 198)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.1846245527267456
    2. 'for' → logprob: -2.809624671936035
    3. 'next' → logprob: -3.059624671936035
    4. '   ' → logprob: -3.434624671936035
    5. 'last' → logprob: -4.059624671936035
    6. '=' → logprob: -5.559624671936035
    7. ' found' → logprob: -5.809624671936035
    8. ' for' → logprob: -6.559624671936035
    9. 'while' → logprob: -7.309624671936035
    10. ' =' → logprob: -7.559624671936035

Token 304: '   ' (ID: 271)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.1374574899673462
    2. 'next' → logprob: -2.5124573707580566
    3. 'for' → logprob: -3.3874573707580566
    4. 'last' → logprob: -5.262457370758057
    5. 'possible' → logprob: -5.262457370758057
    6. ' found' → logprob: -6.512457370758057
    7. '   ' → logprob: -7.637457370758057
    8. ' next' → logprob: -8.012457847595215
    9. ' for' → logprob: -8.387457847595215
    10. 'candidate' → logprob: -9.262457847595215

Token 305: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.47731128334999084
    2. 'next' → logprob: -0.9773112535476685
    3. 'for' → logprob: -6.477311134338379
    4. 'possible' → logprob: -6.602311134338379
    5. 'last' → logprob: -8.852311134338379
    6. 'candidate' → logprob: -9.352311134338379
    7. 'def' → logprob: -9.602311134338379
    8. '#' (adapté à ' #') → logprob: -11.102311134338379
    9. ' found' → logprob: -11.727311134338379
    10. ' next' → logprob: -12.727311134338379

Token 306: ' next' (ID: 2613)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.18262916803359985
    2. 'next' → logprob: -1.932629108428955
    3. 'for' → logprob: -3.932629108428955
    4. 'possible' → logprob: -6.182629108428955
    5. 'last' → logprob: -8.057629585266113
    6. ' found' → logprob: -9.557629585266113
    7. 'candidate' → logprob: -10.057629585266113
    8. ' next' → logprob: -10.932629585266113
    9. 'def' → logprob: -11.307629585266113
    10. 'valid' → logprob: -11.932629585266113

Token 307: ' word' (ID: 2195)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.011561851017177105
    2. '_letter' → logprob: -4.886561870574951
    3. '_char' → logprob: -6.011561870574951
    4. '_' → logprob: -7.261561870574951
    5. '_candidates' → logprob: -8.011561393737793
    6. '_turn' → logprob: -9.386561393737793
    7. '_candidate' → logprob: -9.386561393737793
    8. '_last' → logprob: -9.761561393737793
    9. '_letters' → logprob: -10.011561393737793
    10. '_found' → logprob: -10.511561393737793

Token 308: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38950014114379883
    2. ' =' → logprob: -1.8895001411437988
    3. '_found' → logprob: -2.014500141143799
    4. 'found' → logprob: -3.514500141143799
    5. '_length' → logprob: -6.014500141143799
    6. '_candidates' → logprob: -6.264500141143799
    7. 's' → logprob: -6.514500141143799
    8. '_len' → logprob: -7.639500141143799
    9. '_candidate' → logprob: -7.639500141143799
    10. '_start' → logprob: -8.26449966430664

Token 309: ' start' (ID: 1604)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.6074314117431641
    2. '=' → logprob: -1.982431411743164
    3. ' =' → logprob: -2.107431411743164
    4. 'be' → logprob: -2.107431411743164
    5. 'start' → logprob: -3.232431411743164
    6. '_length' → logprob: -4.857431411743164
    7. '_start' → logprob: -4.982431411743164
    8. '_word' → logprob: -5.482431411743164
    9. ' start' → logprob: -5.607431411743164
    10. 'length' → logprob: -5.857431411743164

Token 310: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.21427448093891144
    2. '=' → logprob: -1.964274525642395
    3. ' with' → logprob: -2.9642744064331055
    4. ' =' → logprob: -6.9642744064331055
    5. 'last' → logprob: -10.589274406433105
    6. '_with' → logprob: -10.964274406433105
    7. 's' → logprob: -12.339274406433105
    8. '   ' → logprob: -12.589274406433105
    9. ')' → logprob: -12.589274406433105
    10. ',' → logprob: -12.964274406433105

Token 311: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.010159638710319996
    2. 'ai' → logprob: -4.760159492492676
    3. ' last' → logprob: -6.510159492492676
    4. ' ai' → logprob: -9.885159492492676
    5. '	last' → logprob: -13.760159492492676
    6. '(last' → logprob: -14.010159492492676
    7. '[last' → logprob: -14.135159492492676
    8. 'lasti' → logprob: -14.510159492492676
    9. ' ' → logprob: -15.135159492492676
    10. 'a' → logprob: -15.135159492492676

Token 312: ' char' (ID: 1826)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_word' → logprob: -4.60414821645827e-06
    2. 'word' → logprob: -13.000004768371582
    3. '_' → logprob: -13.250004768371582
    4. '_w' → logprob: -15.125004768371582
    5. 'Word' → logprob: -16.000003814697266
    6. '_letter' → logprob: -17.375003814697266
    7. ' word' → logprob: -18.000003814697266
    8. '_char' → logprob: -18.000003814697266
    9. '__' → logprob: -18.625003814697266
    10. '_WORD' → logprob: -18.750003814697266

Token 313: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021826423704624176
    2. '=' → logprob: -4.521826267242432
    3. ' of' → logprob: -6.271826267242432
    4. 'of' → logprob: -6.396826267242432
    5. '   ' → logprob: -6.521826267242432
    6. '_of' → logprob: -6.521826267242432
    7. '_' → logprob: -6.646826267242432
    8. '_last' → logprob: -6.771826267242432
    9. '_char' → logprob: -7.146826267242432
    10. '_letter' → logprob: -8.77182674407959

Token 314: ' ai' (ID: 8440)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2835979759693146
    2. 'ai' → logprob: -1.4085979461669922
    3. ' last' → logprob: -6.533597946166992
    4. ' ai' → logprob: -7.033597946166992
    5. '   ' → logprob: -9.658597946166992
    6. ' ' → logprob: -11.908597946166992
    7. 'word' → logprob: -12.033597946166992
    8. '(ai' → logprob: -12.283597946166992
    9. '_ai' → logprob: -12.971097946166992
    10. 'AI' → logprob: -13.096097946166992

Token 315: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.00030841029365547
    2. 'word' → logprob: -8.1253080368042
    3. '_' → logprob: -11.5003080368042
    4. '_w' → logprob: -14.1253080368042
    5. 'Word' → logprob: -14.6253080368042
    6. 'w' → logprob: -15.1253080368042
    7. '_words' → logprob: -15.7503080368042
    8. '_WORD' → logprob: -16.125308990478516
    9. '_world' → logprob: -16.125308990478516
    10. '_ai' → logprob: -16.125308990478516

Token 316: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7001954317092896
    2. 'found' → logprob: -1.9501954317092896
    3. 'next' → logprob: -2.0751953125
    4. ' next' → logprob: -2.8251953125
    5. 'start' → logprob: -3.2001953125
    6. 'last' → logprob: -3.4501953125
    7. 'c' → logprob: -3.7001953125
    8. ' found' → logprob: -3.9501953125
    9. ' last' → logprob: -4.2001953125
    10. '    
' → logprob: -4.8251953125

Token 317: '   ' (ID: 271)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.756679356098175
    2. 'found' → logprob: -1.0066792964935303
    3. 'possible' → logprob: -2.8816792964935303
    4. 'for' → logprob: -3.0066792964935303
    5. 'start' → logprob: -3.2566792964935303
    6. 'last' → logprob: -5.506679534912109
    7. 'prefix' → logprob: -5.631679534912109
    8. 'first' → logprob: -5.631679534912109
    9. 'c' → logprob: -6.506679534912109
    10. '#' → logprob: -6.631679534912109

Token 318: ' start' (ID: 1604)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.1889495849609375
    2. 'next' → logprob: -1.8139495849609375
    3. 'for' → logprob: -5.6889495849609375
    4. 'possible' → logprob: -6.0639495849609375
    5. 'start' (adapté à ' start') → logprob: -6.4389495849609375
    6. ' found' → logprob: -7.5639495849609375
    7. 'prefix' → logprob: -7.9389495849609375
    8. 'first' → logprob: -7.9389495849609375
    9. ' next' → logprob: -8.438949584960938
    10. 'c' → logprob: -9.188949584960938

Token 319: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.03422727808356285
    2. ' =' → logprob: -4.15922737121582
    3. '_letter' → logprob: -4.28422737121582
    4. '=' → logprob: -5.53422737121582
    5. '_' → logprob: -8.53422737121582
    6. 'char' → logprob: -9.90922737121582
    7. '_character' → logprob: -11.28422737121582
    8. '_chars' → logprob: -11.40922737121582
    9. 'Char' → logprob: -11.90922737121582
    10. '_chr' → logprob: -12.40922737121582

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326398253440857
    2. ' =' → logprob: -1.313264012336731
    3. '=
' → logprob: -14.313263893127441
    4. '=start' → logprob: -14.688263893127441
    5. '_' → logprob: -15.563263893127441
    6. 's' → logprob: -16.063264846801758
    7. ',' → logprob: -16.188264846801758
    8. '   ' → logprob: -16.313264846801758
    9. '_=' → logprob: -16.313264846801758
    10. '=

' → logprob: -16.313264846801758

Token 321: ' ai' (ID: 8440)
  Prédit: 'ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ai' → logprob: -0.31354227662086487
    2. ' ai' → logprob: -1.3135422468185425
    3. 'last' → logprob: -8.563542366027832
    4. ' last' → logprob: -9.688542366027832
    5. '_ai' → logprob: -11.938542366027832
    6. '(ai' → logprob: -12.063542366027832
    7. '   ' → logprob: -12.188542366027832
    8. ' ' → logprob: -12.813542366027832
    9. '.ai' → logprob: -13.313542366027832
    10. 'a' → logprob: -13.438542366027832

Token 322: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -2.141186450899113e-05
    2. 'word' → logprob: -11.000020980834961
    3. '_' → logprob: -13.000020980834961
    4. 'Word' → logprob: -14.250020980834961
    5. '_w' → logprob: -14.500020980834961
    6. '_words' → logprob: -14.750020980834961
    7. 'w' → logprob: -15.250020980834961
    8. '_WORD' → logprob: -15.750020980834961
    9. '_char' → logprob: -15.750020980834961
    10. '_world' → logprob: -16.25002098083496

Token 323: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00018161057960242033
    2. '[' → logprob: -8.625181198120117
    3. '[
' → logprob: -14.250181198120117
    4. ' [-' → logprob: -14.750181198120117
    5. '
' → logprob: -15.375181198120117
    6. '=' → logprob: -15.375181198120117
    7. ':' → logprob: -16.125181198120117
    8. ' =' → logprob: -16.125181198120117
    9. '][-' → logprob: -16.750181198120117
    10. '[len' → logprob: -16.875181198120117

Token 324: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -12.000007629394531
    3. '2' → logprob: -14.625007629394531
    4. '
' → logprob: -15.125007629394531
    5. '   ' → logprob: -16.43750762939453
    6. '  ' → logprob: -16.87500762939453
    7. '```' → logprob: -17.31250762939453
    8. '3' → logprob: -17.87500762939453
    9. '１' → logprob: -18.00000762939453
    10. '0' → logprob: -18.12500762939453

Token 325: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03862510249018669
    2. ']' → logprob: -3.7886250019073486
    3. ')
' → logprob: -4.413625240325928
    4. '   ' → logprob: -6.288625240325928
    5. '
' → logprob: -7.663625240325928
    6. ' )' → logprob: -7.913625240325928
    7. ']
' → logprob: -9.03862476348877
    8. 'for' → logprob: -9.53862476348877
    9. '  
' → logprob: -10.03862476348877
    10. '])' → logprob: -10.16362476348877

Token 326: '   ' (ID: 271)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.08327966183423996
    2. 'next' → logprob: -2.708279609680176
    3. ' found' → logprob: -5.333279609680176
    4. 'possible' → logprob: -5.333279609680176
    5. 'for' → logprob: -6.458279609680176
    6. ' next' → logprob: -6.958279609680176
    7. '   ' → logprob: -7.958279609680176
    8. 'candidate' → logprob: -8.208279609680176
    9. '    
' → logprob: -9.083279609680176
    10. ' possible' → logprob: -9.458279609680176

Token 327: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.2524341344833374
    2. 'next' → logprob: -1.5024341344833374
    3. 'possible' → logprob: -8.627433776855469
    4. 'candidate' → logprob: -8.877433776855469
    5. 'for' → logprob: -9.252433776855469
    6. ' found' → logprob: -10.252433776855469
    7. 'word' → logprob: -10.502433776855469
    8. ' next' → logprob: -11.627433776855469
    9. 'def' → logprob: -12.002433776855469
    10. '#' (adapté à ' #') → logprob: -12.127433776855469

Token 328: ' Try' (ID: 14720)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.16375663876533508
    2. 'next' → logprob: -1.9137566089630127
    3. 'for' → logprob: -6.163756847381592
    4. 'possible' → logprob: -7.163756847381592
    5. 'candidate' → logprob: -7.663756847381592
    6. 'word' → logprob: -9.788756370544434
    7. 'def' → logprob: -10.163756370544434
    8. '#' → logprob: -10.288756370544434
    9. ' found' → logprob: -10.913756370544434
    10. 'my' → logprob: -11.038756370544434

Token 329: ' to' (ID: 316)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.8677070736885071
    2. ' to' → logprob: -2.1177070140838623
    3. ':
' → logprob: -2.4927070140838623
    4. 'for' → logprob: -2.6177070140838623
    5. 'to' → logprob: -2.7427070140838623
    6. ' found' → logprob: -2.7427070140838623
    7. ':' → logprob: -3.3677070140838623
    8. 'next' → logprob: -3.4927070140838623
    9. ' for' → logprob: -3.7427070140838623
    10. ' next' → logprob: -3.8677070140838623

Token 330: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5217564702033997
    2. 'found' → logprob: -1.3967564105987549
    3. 'find' → logprob: -2.146756410598755
    4. ' find' → logprob: -4.021756649017334
    5. ' for' → logprob: -4.771756649017334
    6. ' found' → logprob: -5.146756649017334
    7. 'next' → logprob: -5.271756649017334
    8. '
' → logprob: -6.021756649017334
    9. 'import' → logprob: -6.771756649017334
    10. ' next' → logprob: -7.771756649017334

Token 331: ' a' (ID: 261)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.5029365420341492
    2. 'next' → logprob: -1.877936601638794
    3. ' for' → logprob: -2.627936601638794
    4. ' found' → logprob: -2.877936601638794
    5. 'found' → logprob: -2.877936601638794
    6. 'for' → logprob: -3.002936601638794
    7. ' a' → logprob: -5.502936363220215
    8. 'a' → logprob: -6.377936363220215
    9. ' possible' → logprob: -7.252936363220215
    10. 'word' → logprob: -7.752936363220215

Token 332: ' single' (ID: 4590)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5435606241226196
    2. 'next' → logprob: -1.5435606241226196
    3. ' for' → logprob: -2.54356050491333
    4. 'word' → logprob: -2.91856050491333
    5. ' next' → logprob: -3.41856050491333
    6. 'found' → logprob: -4.16856050491333
    7. ' valid' → logprob: -5.04356050491333
    8. ' word' → logprob: -5.29356050491333
    9. 'valid' → logprob: -5.41856050491333
    10. 'possible' → logprob: -6.04356050491333

Token 333: '-char' (ID: 127189)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.09330128878355026
    2. 'letter' → logprob: -2.843301296234131
    3. 'c' → logprob: -4.968301296234131
    4. ' letter' → logprob: -5.218301296234131
    5. ' char' → logprob: -5.718301296234131
    6. 'chr' → logprob: -5.843301296234131
    7. '_char' → logprob: -5.843301296234131
    8. '-letter' → logprob: -5.968301296234131
    9. 'a' → logprob: -6.843301296234131
    10. 'for' → logprob: -6.843301296234131

Token 334: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.4322846829891205
    2. 'word' → logprob: -1.1822847127914429
    3. ' for' → logprob: -4.307284832000732
    4. ' next' → logprob: -4.432284832000732
    5. 'w' → logprob: -4.932284832000732
    6. 'for' → logprob: -5.307284832000732
    7. ' w' → logprob: -6.057284832000732
    8. 'next' → logprob: -6.057284832000732
    9. ' candidate' → logprob: -7.682284832000732
    10. 's' → logprob: -7.932284832000732

Token 335: ' not' (ID: 625)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.644239604473114
    2. ' for' → logprob: -1.1442396640777588
    3. 'found' → logprob: -2.769239664077759
    4. ' =' → logprob: -3.144239664077759
    5. ' found' → logprob: -3.644239664077759
    6. '=' → logprob: -4.39423942565918
    7. 'next' → logprob: -5.39423942565918
    8. ' next' → logprob: -5.64423942565918
    9. 'c' → logprob: -7.01923942565918
    10. 'word' → logprob: -7.39423942565918

Token 336: ' used' (ID: 2061)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42915621399879456
    2. ' in' → logprob: -1.0541561841964722
    3. 'used' → logprob: -8.179156303405762
    4. ' used' → logprob: -8.929156303405762
    5. ' ' → logprob: -12.054156303405762
    6. 'already' → logprob: -12.179156303405762
    7. '=' → logprob: -12.554156303405762
    8. ' =' → logprob: -12.804156303405762
    9. ' equal' → logprob: -12.929156303405762
    10. 's' → logprob: -13.054156303405762

Token 337: ' starting' (ID: 8601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.478649377822876
    2. ' for' → logprob: -1.478649377822876
    3. 'found' → logprob: -2.478649377822876
    4. ' found' → logprob: -3.478649377822876
    5. '   ' → logprob: -3.603649377822876
    6. 'next' → logprob: -5.728649139404297
    7. ' next' → logprob: -6.103649139404297
    8. ' =' → logprob: -6.228649139404297
    9. '_found' → logprob: -6.853649139404297
    10. 'c' → logprob: -8.103649139404297

Token 338: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.010000905022025108
    2. ' with' → logprob: -5.010000705718994
    3. 'start' → logprob: -5.760000705718994
    4. 'from' → logprob: -9.385001182556152
    5. '=start' → logprob: -10.760001182556152
    6. '=' → logprob: -11.135001182556152
    7. ' start' → logprob: -12.760001182556152
    8. '[start' → logprob: -13.510001182556152
    9. '
' → logprob: -14.135001182556152
    10. 'for' → logprob: -14.510001182556152

Token 339: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.01251129899173975
    2. ' start' → logprob: -4.387511253356934
    3. '[start' → logprob: -14.762511253356934
    4. '=start' → logprob: -15.012511253356934
    5. 'a' → logprob: -15.137511253356934
    6. 'next' → logprob: -15.887511253356934
    7. ' ' → logprob: -16.38751220703125
    8. 'the' → logprob: -16.51251220703125
    9. 's' → logprob: -16.51251220703125
    10. '(start' → logprob: -16.76251220703125

Token 340: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0025684027932584286
    2. 'char' → logprob: -6.002568244934082
    3. 'start' → logprob: -10.002568244934082
    4. '_' → logprob: -10.502568244934082
    5. 'Char' → logprob: -11.252568244934082
    6. '_CHAR' → logprob: -14.002568244934082
    7. ' =' → logprob: -14.377568244934082
    8. '=' → logprob: -14.377568244934082
    9. '_c' → logprob: -14.377568244934082
    10. 'with' → logprob: -14.627568244934082

Token 341: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25269538164138794
    2. 'found' → logprob: -1.7526953220367432
    3. ' for' → logprob: -3.252695322036743
    4. ' found' → logprob: -5.502695560455322
    5. 'next' → logprob: -6.002695560455322
    6. 'word' → logprob: -6.627695560455322
    7. '   ' → logprob: -7.002695560455322
    8. 'c' → logprob: -7.877695560455322
    9. 'possible' → logprob: -7.877695560455322
    10. '
' → logprob: -8.002695083618164

Token 342: '   ' (ID: 271)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.6518111824989319
    2. 'for' → logprob: -0.9018111824989319
    3. 'next' → logprob: -3.276811122894287
    4. ' for' → logprob: -4.151811122894287
    5. ' found' → logprob: -4.901811122894287
    6. '   ' → logprob: -5.276811122894287
    7. 'word' → logprob: -6.151811122894287
    8. ' next' → logprob: -6.401811122894287
    9. 'possible' → logprob: -6.901811122894287
    10. 'candidate' → logprob: -7.151811122894287

Token 343: ' #' (ID: 1069)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.3395916521549225
    2. 'for' → logprob: -1.5895916223526
    3. 'next' → logprob: -3.0895917415618896
    4. ' found' → logprob: -3.7145917415618896
    5. ' for' → logprob: -4.8395915031433105
    6. ' next' → logprob: -5.7145915031433105
    7. 'candidate' → logprob: -6.5895915031433105
    8. 'possible' → logprob: -7.0895915031433105
    9. 'word' → logprob: -8.589591979980469
    10. ' candidate' → logprob: -9.089591979980469

Token 344: ' To' (ID: 2514)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.045223284512758255
    2. 'for' → logprob: -3.5452232360839844
    3. 'next' → logprob: -4.295223236083984
    4. ' found' → logprob: -7.170223236083984
    5. '   ' → logprob: -8.045223236083984
    6. 'possible' → logprob: -8.045223236083984
    7. 'candidate' → logprob: -8.295223236083984
    8. ' next' → logprob: -10.420223236083984
    9. ' for' → logprob: -11.545223236083984
    10. 'word' → logprob: -11.920223236083984

Token 345: ' force' (ID: 9578)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8147637844085693
    2. 'found' → logprob: -0.8147637844085693
    3. ' found' → logprob: -3.5647637844085693
    4. ' for' → logprob: -3.9397637844085693
    5. '_found' → logprob: -3.9397637844085693
    6. ' find' → logprob: -4.314764022827148
    7. 'find' → logprob: -4.689764022827148
    8. 'r' → logprob: -4.939764022827148
    9. '
' → logprob: -5.939764022827148
    10. 'while' → logprob: -6.064764022827148

Token 346: ' AI' (ID: 20837)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.992835283279419
    2. 'found' → logprob: -1.367835283279419
    3. ' for' → logprob: -1.617835283279419
    4. ' found' → logprob: -1.992835283279419
    5. ' next' → logprob: -4.24283504486084
    6. 'word' → logprob: -4.86783504486084
    7. ' possible' → logprob: -5.24283504486084
    8. 'next' → logprob: -5.49283504486084
    9. 'possible' → logprob: -5.86783504486084
    10. ' word' → logprob: -6.49283504486084

Token 347: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3893234431743622
    2. ' for' → logprob: -1.7643234729766846
    3. 'found' → logprob: -2.3893234729766846
    4. ' =' → logprob: -3.8893234729766846
    5. 'next' → logprob: -4.6393232345581055
    6. ' found' → logprob: -4.8893232345581055
    7. 'word' → logprob: -5.2643232345581055
    8. ' next' → logprob: -5.3893232345581055
    9. 'candidate' → logprob: -6.0143232345581055
    10. '   ' → logprob: -6.3893232345581055

Token 348: ' fail' (ID: 7111)
  Prédit: 'lose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lose' → logprob: -0.3090163469314575
    2. 'print' → logprob: -2.684016227722168
    3. 'win' → logprob: -2.934016227722168
    4. 'end' → logprob: -3.559016227722168
    5. 'continue' → logprob: -3.559016227722168
    6. 'use' → logprob: -3.934016227722168
    7. ' lose' → logprob: -3.934016227722168
    8. 'exit' → logprob: -4.934016227722168
    9. 'quit' → logprob: -5.059016227722168
    10. 'give' → logprob: -5.059016227722168

Token 349: ' quickly' (ID: 8065)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6080441474914551
    2. 'found' → logprob: -1.108044147491455
    3. ' for' → logprob: -2.733044147491455
    4. ' found' → logprob: -3.483044147491455
    5. 'next' → logprob: -4.233044147491455
    6. 'word' → logprob: -4.983044147491455
    7. ' next' → logprob: -5.358044147491455
    8. '   ' → logprob: -7.108044147491455
    9. ' word' → logprob: -7.233044147491455
    10. 'possible' → logprob: -7.983044147491455

Token 350: ',' (ID: 11)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.5312814712524414
    2. 'for' → logprob: -1.0312814712524414
    3. 'next' → logprob: -3.5312814712524414
    4. ' found' → logprob: -4.656281471252441
    5. ' for' → logprob: -4.656281471252441
    6. 'word' → logprob: -5.906281471252441
    7. ' next' → logprob: -6.531281471252441
    8. '   ' → logprob: -6.781281471252441
    9. 'possible' → logprob: -6.906281471252441
    10. '
' → logprob: -8.031281471252441

Token 351: ' use' (ID: 1199)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.582054078578949
    2. 'for' → logprob: -1.4570541381835938
    3. ' found' → logprob: -1.9570541381835938
    4. 'next' → logprob: -3.2070541381835938
    5. ' next' → logprob: -4.207054138183594
    6. ' for' → logprob: -4.707054138183594
    7. 'word' → logprob: -6.707054138183594
    8. 'possible' → logprob: -7.957054138183594
    9. '   ' → logprob: -8.082054138183594
    10. ' word' → logprob: -8.582054138183594

Token 352: ' single' (ID: 4590)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07559340447187424
    2. 'chr' → logprob: -3.0755934715270996
    3. ' start' → logprob: -4.0755934715271
    4. ''a' → logprob: -6.4505934715271
    5. ''' → logprob: -6.5755934715271
    6. 'a' → logprob: -6.8255934715271
    7. ' chr' → logprob: -6.9505934715271
    8. 'for' → logprob: -6.9505934715271
    9. ''s' → logprob: -7.0755934715271
    10. '"' → logprob: -7.3255934715271

Token 353: ' char' (ID: 1826)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.007894663140177727
    2. 'char' → logprob: -5.382894515991211
    3. '_letter' → logprob: -7.257894515991211
    4. '_chars' → logprob: -7.507894515991211
    5. '_character' → logprob: -7.507894515991211
    6. '_word' → logprob: -8.132894515991211
    7. '=' → logprob: -8.257894515991211
    8. ' =' → logprob: -8.382894515991211
    9. '-char' → logprob: -8.507894515991211
    10. 'Char' → logprob: -9.507894515991211

Token 354: ' words' (ID: 6391)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8678358793258667
    2. ' =' → logprob: -1.7428358793258667
    3. ' for' → logprob: -1.7428358793258667
    4. '=' → logprob: -2.9928359985351562
    5. '_word' → logprob: -2.9928359985351562
    6. 'word' → logprob: -3.4928359985351562
    7. 's' → logprob: -3.6178359985351562
    8. 'w' → logprob: -4.117835998535156
    9. '_' → logprob: -4.742835998535156
    10. '   ' → logprob: -4.992835998535156

Token 355: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2733633518218994
    2. ' for' → logprob: -1.3983633518218994
    3. 'found' → logprob: -1.3983633518218994
    4. ' found' → logprob: -1.7733633518218994
    5. '   ' → logprob: -3.7733633518218994
    6. ' next' → logprob: -4.27336311340332
    7. 'next' → logprob: -4.77336311340332
    8. '    
' → logprob: -6.27336311340332
    9. 'while' → logprob: -6.77336311340332
    10. ' =' → logprob: -6.89836311340332

Token 356: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6496729850769043
    2. 'found' → logprob: -1.2746729850769043
    3. 'for' → logprob: -1.7746729850769043
    4. 'possible' → logprob: -4.649672985076904
    5. 'next' → logprob: -5.024672985076904
    6. ' for' → logprob: -5.149672985076904
    7. ' found' → logprob: -5.524672985076904
    8. 'while' → logprob: -7.024672985076904
    9. '    
' → logprob: -8.024673461914062
    10. ' possible' → logprob: -8.399673461914062

Token 357: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.521000325679779
    2. 'for' → logprob: -1.0210003852844238
    3. 'next' → logprob: -3.271000385284424
    4. ' found' → logprob: -5.271000385284424
    5. ' for' → logprob: -6.521000385284424
    6. ' next' → logprob: -7.771000385284424
    7. 'word' → logprob: -8.145999908447266
    8. 'possible' → logprob: -8.395999908447266
    9. 'candidate' → logprob: -8.645999908447266
    10. 'while' → logprob: -10.270999908447266

Token 358: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7776579260826111
    2. '_word' → logprob: -1.0276579856872559
    3. '_' → logprob: -1.9026579856872559
    4. '=' → logprob: -3.402657985687256
    5. '_=' → logprob: -9.652657508850098
    6. '_words' → logprob: -10.277657508850098
    7. '_char' → logprob: -10.527657508850098
    8. ' ' → logprob: -10.652657508850098
    9. '=_' → logprob: -11.152657508850098
    10. 'ed' → logprob: -11.402657508850098

Token 359: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00015920029545668513
    2. ' False' → logprob: -8.75015926361084
    3. 'None' → logprob: -14.12515926361084
    4. 'True' → logprob: -17.125158309936523
    5. '   ' → logprob: -18.750158309936523
    6. '(False' → logprob: -18.750158309936523
    7. 'false' → logprob: -19.375158309936523
    8. '=False' → logprob: -19.500158309936523
    9. '"' → logprob: -20.000158309936523
    10. 'F' → logprob: -20.125158309936523

Token 360: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8208317160606384
    2. 'for' → logprob: -1.0708317756652832
    3. '
' → logprob: -2.070831775665283
    4. '   ' → logprob: -2.820831775665283
    5. ' 
' → logprob: -4.195831775665283
    6. '  
' → logprob: -5.070831775665283
    7. '    
' → logprob: -5.195831775665283
    8. '	for' → logprob: -6.695831775665283
    9. 'a' → logprob: -7.445831775665283
    10. '   
' → logprob: -7.570831775665283

Token 361: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12929198145866394
    2. 'for' → logprob: -2.1292920112609863
    3. ' 
' → logprob: -6.379292011260986
    4. '
' → logprob: -7.754292011260986
    5. '   ' → logprob: -8.879291534423828
    6. '    
' → logprob: -10.004291534423828
    7. '	for' → logprob: -10.754291534423828
    8. '  
' → logprob: -11.504291534423828
    9. ' ' → logprob: -12.504291534423828
    10. '	
' → logprob: -13.254291534423828

Token 362: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016131849959492683
    2. ' for' → logprob: -4.14113187789917
    3. '   ' → logprob: -9.266131401062012
    4. '	for' → logprob: -14.516131401062012
    5. 'import' → logprob: -14.641131401062012
    6. '    
' → logprob: -14.641131401062012
    7. ' 
' → logprob: -15.016131401062012
    8. '
' → logprob: -15.016131401062012
    9. ' ' → logprob: -15.016131401062012
    10. 'from' → logprob: -15.766131401062012

Token 363: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2274983525276184
    2. 'ch' → logprob: -1.7274982929229736
    3. 'char' → logprob: -3.9774982929229736
    4. 'word' → logprob: -6.102498531341553
    5. 'i' → logprob: -6.352498531341553
    6. 'next' → logprob: -6.727498531341553
    7. 'w' → logprob: -7.227498531341553
    8. 'candidate' → logprob: -7.352498531341553
    9. ' c' → logprob: -8.102498054504395
    10. 'chr' → logprob: -9.852498054504395

Token 364: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326248399913311
    2. 'in' → logprob: -3.7732625007629395
    3. ' ' → logprob: -12.273262023925781
    4. 'range' → logprob: -12.273262023925781
    5. 'import' → logprob: -12.898262023925781
    6. 'from' → logprob: -13.523262023925781
    7. 'a' → logprob: -14.023262023925781
    8. '   ' → logprob: -14.773262023925781
    9. 's' → logprob: -15.148262023925781
    10. ' range' → logprob: -15.273262023925781

Token 365: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8842961192131042
    2. 'range' → logprob: -1.634296178817749
    3. ' range' → logprob: -1.634296178817749
    4. ''' → logprob: -2.884296178817749
    5. ''a' → logprob: -3.259296178817749
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -4.00929594039917
    7. ' '' → logprob: -4.50929594039917
    8. 'chr' → logprob: -4.50929594039917
    9. 'start' → logprob: -4.50929594039917
    10. '[start' → logprob: -4.63429594039917

Token 366: 'abcdefghijklmnopqrstuvwxyz' (ID: 161518)
  Prédit: 'abcdefghijklmnopqrstuvwxyz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.12127808178775e-05
    2. 'abcdefghijkl' → logprob: -10.125051498413086
    3. 'a' → logprob: -13.000051498413086
    4. 'abcdefgh' → logprob: -13.125051498413086
    5. 'abcdef' → logprob: -13.250051498413086
    6. 'az' → logprob: -13.625051498413086
    7. '"' → logprob: -13.750051498413086
    8. 'abc' → logprob: -14.000051498413086
    9. 'ab' → logprob: -14.000051498413086
    10. 'z' → logprob: -14.625051498413086

Token 367: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.00680193305015564
    2. '":' → logprob: -5.256802082061768
    3. '"' → logprob: -7.131802082061768
    4. ':
' → logprob: -8.00680160522461
    5. ' "' → logprob: -8.75680160522461
    6. '":
' → logprob: -9.38180160522461
    7. ':' → logprob: -10.00680160522461
    8. '":

' → logprob: -10.00680160522461
    9. '   ' → logprob: -10.50680160522461
    10. '"):
' → logprob: -10.88180160522461

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030084146186709404
    2. '   ' → logprob: -3.9050841331481934
    3. ' if' → logprob: -5.530084133148193
    4. ':' → logprob: -6.530084133148193
    5. '    ' → logprob: -7.030084133148193
    6. '	   ' → logprob: -7.530084133148193
    7. ' ' → logprob: -7.655084133148193
    8. '<|end|>' → logprob: -8.030084609985352
    9. '    
' → logprob: -8.405084609985352
    10. 'if' → logprob: -8.405084609985352

Token 369: ' candidate' (ID: 17098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49150702357292175
    2. ' word' → logprob: -1.6165070533752441
    3. ' if' → logprob: -2.116507053375244
    4. 'word' → logprob: -3.491507053375244
    5. 'if' → logprob: -4.241507053375244
    6. ' next' → logprob: -4.866507053375244
    7. '   ' → logprob: -5.241507053375244
    8. 'next' → logprob: -5.991507053375244
    9. ' w' → logprob: -6.116507053375244
    10. '	word' → logprob: -6.241507053375244

Token 370: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10032065212726593
    2. '=' → logprob: -2.35032057762146
    3. '_word' → logprob: -9.350320816040039
    4. '_candidate' → logprob: -10.725320816040039
    5. ' ' → logprob: -12.975320816040039
    6. 'candidate' → logprob: -13.975320816040039
    7. '=c' → logprob: -13.975320816040039
    8. 'word' → logprob: -14.975320816040039
    9. 's' → logprob: -15.475320816040039
    10. '_' → logprob: -16.47532081604004

Token 371: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6042373776435852
    2. ' start' → logprob: -0.8542373776435852
    3. ' c' → logprob: -4.1042375564575195
    4. 'c' → logprob: -4.4792375564575195
    5. 'str' → logprob: -10.72923755645752
    6. ' ' → logprob: -11.47923755645752
    7. ' str' → logprob: -11.97923755645752
    8. '[start' → logprob: -11.97923755645752
    9. 'star' → logprob: -13.35423755645752
    10. '=start' → logprob: -13.60423755645752

Token 372: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -9.341087570646778e-05
    2. 'char' → logprob: -9.375093460083008
    3. '_' → logprob: -13.000093460083008
    4. '_c' → logprob: -13.375093460083008
    5. '_word' → logprob: -13.625093460083008
    6. '_CHAR' → logprob: -14.375093460083008
    7. 'Char' → logprob: -14.625093460083008
    8. 'with' → logprob: -14.750093460083008
    9. '+' → logprob: -15.250093460083008
    10. 'c' → logprob: -15.375093460083008

Token 373: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.5559386610984802
    2. ' +' → logprob: -0.9309386610984802
    3. '+' → logprob: -3.555938720703125
    4. 'c' → logprob: -5.930938720703125
    5. '<|end|>' → logprob: -7.305938720703125
    6. 'if' → logprob: -8.805938720703125
    7. ' if' → logprob: -9.555938720703125
    8. ' c' → logprob: -9.680938720703125
    9. ')c' → logprob: -11.055938720703125
    10. ' ' → logprob: -11.180938720703125

Token 374: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02076026052236557
    2. ' c' → logprob: -3.8957602977752686
    3. '""' → logprob: -8.895760536193848
    4. '''' → logprob: -9.895760536193848
    5. '"' → logprob: -11.770760536193848
    6. ' ' → logprob: -11.895760536193848
    7. '	c' → logprob: -12.145760536193848
    8. ''' → logprob: -12.895760536193848
    9. ' ''' → logprob: -13.270760536193848
    10. '(c' → logprob: -13.395760536193848

Token 375: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8590141534805298
    2. 'if' → logprob: -1.3590141534805298
    3. '<|end|>' → logprob: -1.4840141534805298
    4. ' if' → logprob: -2.6090140342712402
    5. '  
' → logprob: -5.35901403427124
    6. '   ' → logprob: -5.85901403427124
    7. '<|end|>' → logprob: -6.23401403427124
    8. ' 
' → logprob: -6.35901403427124
    9. '    
' → logprob: -6.35901403427124
    10. '"' → logprob: -6.73401403427124

Token 376: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7848386764526367
    2. ' if' → logprob: -1.6598386764526367
    3. '
' → logprob: -1.9098386764526367
    4. '<|end|>' → logprob: -1.9098386764526367
    5. '       ' → logprob: -2.9098386764526367
    6. '           ' → logprob: -7.784838676452637
    7. '<|end|>' → logprob: -7.784838676452637
    8. '  
' → logprob: -8.034838676452637
    9. '        
' → logprob: -8.034838676452637
    10. '   ' → logprob: -8.159838676452637

Token 377: ' two' (ID: 1920)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0894700139760971
    2. '<|end|>' → logprob: -2.9644699096679688
    3. ' 
' → logprob: -3.9644699096679688
    4. ' if' → logprob: -4.964469909667969
    5. 'if' → logprob: -5.964469909667969
    6. '  
' → logprob: -6.089469909667969
    7. '       ' → logprob: -6.589469909667969
    8. '        
' → logprob: -7.214469909667969
    9. ' ' → logprob: -7.964469909667969
    10. '    
' → logprob: -8.214469909667969

Token 378: '-letter' (ID: 176596)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' word' (ID: 2195)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4916694760322571
    2. '<|end|>' → logprob: -1.1166694164276123
    3. '
' → logprob: -2.9916694164276123
    4. '<|end|>' → logprob: -5.366669654846191
    5. ')' → logprob: -5.991669654846191
    6. ' if' → logprob: -6.241669654846191
    7. ' 
' → logprob: -7.491669654846191
    8. ' ' → logprob: -7.991669654846191
    9. '        
' → logprob: -8.491669654846191
    10. '  
' → logprob: -8.866669654846191

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001772638875991106
    2. '<|end|>' → logprob: -6.751772403717041
    3. '
' → logprob: -8.1267728805542
    4. ' if' → logprob: -8.7517728805542
    5. '   ' → logprob: -9.5017728805542
    6. '<|end|>' → logprob: -11.1267728805542
    7. '        
' → logprob: -11.2517728805542
    8. 'if' → logprob: -11.5017728805542
    9. '  
' → logprob: -12.0017728805542
    10. ' ' → logprob: -12.1267728805542

Token 382: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030428912490606308
    2. ' if' → logprob: -3.655428886413574
    3. '<|end|>' → logprob: -6.405428886413574
    4. 'if' (adapté à ' if') → logprob: -6.655428886413574
    5. '   ' → logprob: -7.405428886413574
    6. '
' → logprob: -8.155428886413574
    7. ' ' → logprob: -9.030428886413574
    8. '<|end|>' → logprob: -9.905428886413574
    9. '	if' → logprob: -10.905428886413574
    10. ')' → logprob: -10.905428886413574

Token 383: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.07085439562797546
    2. ' candidate' → logprob: -2.695854425430298
    3. 'len' → logprob: -7.320854187011719
    4. '(candidate' → logprob: -8.570854187011719
    5. ' len' → logprob: -10.320854187011719
    6. 'c' → logprob: -11.570854187011719
    7. 'not' → logprob: -11.820854187011719
    8. ' not' → logprob: -12.195854187011719
    9. ' ' → logprob: -12.695854187011719
    10. ' candidat' → logprob: -13.070854187011719

Token 384: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.009761521592736244
    2. 'not' → logprob: -4.634761333465576
    3. '<|end|>' → logprob: -12.759761810302734
    4. '	not' → logprob: -13.884761810302734
    5. ')' → logprob: -14.009761810302734
    6. '[' → logprob: -15.259761810302734
    7. ' in' → logprob: -15.884761810302734
    8. '.startswith' → logprob: -16.009761810302734
    9. '<|end|>' → logprob: -16.384761810302734
    10. 'and' → logprob: -16.509761810302734

Token 385: ' in' (ID: 306)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.8159757256507874
    2. ' used' → logprob: -1.3159756660461426
    3. ' in' → logprob: -1.4409756660461426
    4. 'in' → logprob: -3.0659756660461426
    5. '<|end|>' → logprob: -5.315975666046143
    6. '_used' → logprob: -7.565975666046143
    7. ' to' → logprob: -8.1909761428833
    8. '<|end|>' → logprob: -9.0659761428833
    9. ' ' → logprob: -9.1909761428833
    10. '.used' → logprob: -9.5659761428833

Token 386: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.011049000546336174
    2. ' used' → logprob: -4.511048793792725
    3. '.used' → logprob: -14.886049270629883
    4. ' ' → logprob: -15.636049270629883
    5. '   ' → logprob: -15.636049270629883
    6. 'use' → logprob: -15.761049270629883
    7. '_used' → logprob: -16.386049270629883
    8. 'Used' → logprob: -16.511049270629883
    9. 'user' → logprob: -16.886049270629883
    10. '-used' → logprob: -17.386049270629883

Token 387: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7811974883079529
    2. ' and' → logprob: -0.7811974883079529
    3. ':
' → logprob: -2.5311975479125977
    4. 'and' → logprob: -5.406197547912598
    5. '   ' → logprob: -9.156197547912598
    6. '       ' → logprob: -9.406197547912598
    7. ' :' → logprob: -11.656197547912598
    8. ':

' → logprob: -12.031197547912598
    9. '           ' → logprob: -12.156197547912598
    10. '):
' → logprob: -12.281197547912598

Token 388: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.49079713225364685
    2. 'len' → logprob: -1.3657971620559692
    3. 'candidate' → logprob: -2.4907970428466797
    4. ' is' → logprob: -3.3657970428466797
    5. ' candidate' → logprob: -5.11579704284668
    6. ' len' → logprob: -5.11579704284668
    7. 'c' → logprob: -6.49079704284668
    8. ''' → logprob: -7.61579704284668
    9. 'all' → logprob: -8.11579704284668
    10. 'start' → logprob: -8.49079704284668

Token 389: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.2087029665708542
    2. '_ai' → logprob: -1.7087029218673706
    3. 'valid' → logprob: -5.08370304107666
    4. 'ai' → logprob: -6.95870304107666
    5. ' valid' → logprob: -10.20870304107666
    6. '_is' → logprob: -10.95870304107666
    7. 'is' → logprob: -11.45870304107666
    8. '_a' → logprob: -11.58370304107666
    9. '_word' → logprob: -11.95870304107666
    10. 'AI' → logprob: -12.33370304107666

Token 390: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.3856492842023727e-06
    2. 'word' → logprob: -14.250000953674316
    3. '_' → logprob: -15.625000953674316
    4. 'Word' → logprob: -15.750000953674316
    5. '(word' → logprob: -15.875000953674316
    6. ' word' → logprob: -16.500001907348633
    7. '_token' → logprob: -16.875001907348633
    8. '_WORD' → logprob: -17.000001907348633
    9. '_char' → logprob: -18.125001907348633
    10. '[word' → logprob: -18.125001907348633

Token 391: '(candidate' (ID: 145201)
  Prédit: '(candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.125007629394531
    3. ' (' → logprob: -13.375007629394531
    4. 'candidate' → logprob: -14.500007629394531
    5. ')' → logprob: -17.12500762939453
    6. '(
' → logprob: -17.87500762939453
    7. ' candidate' → logprob: -18.12500762939453
    8. ' ' → logprob: -18.62500762939453
    9. '```' → logprob: -19.62500762939453
    10. '(c' → logprob: -19.75000762939453

Token 392: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016148271039128304
    2. '):
' → logprob: -4.141148090362549
    3. ' ):' → logprob: -9.641148567199707
    4. ')' → logprob: -11.016148567199707
    5. '(candidate' → logprob: -11.766148567199707
    6. '   ' → logprob: -12.141148567199707
    7. ':' → logprob: -12.141148567199707
    8. 'candidate' → logprob: -12.391148567199707
    9. '):

' → logprob: -13.141148567199707
    10. '):
' → logprob: -13.141148567199707

Token 393: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009298411197960377
    2. ':
' → logprob: -5.134298324584961
    3. ' and' → logprob: -5.759298324584961
    4. '       ' → logprob: -9.134298324584961
    5. '):' → logprob: -10.259298324584961
    6. 'and' → logprob: -10.634298324584961
    7. '           ' → logprob: -11.634298324584961
    8. '=' → logprob: -12.009298324584961
    9. ' :' → logprob: -12.259298324584961
    10. '():' → logprob: -12.259298324584961

Token 394: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.015204273164272308
    2. ' candidate' → logprob: -4.640204429626465
    3. 'len' → logprob: -5.515204429626465
    4. '(candidate' → logprob: -6.890204429626465
    5. 'is' → logprob: -9.140204429626465
    6. 'c' → logprob: -9.640204429626465
    7. 'start' → logprob: -9.890204429626465
    8. ' len' → logprob: -10.015204429626465
    9. 'True' → logprob: -10.265204429626465
    10. '   ' → logprob: -10.390204429626465

Token 395: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4382573664188385
    2. '.startswith' → logprob: -1.0632573366165161
    3. ' not' → logprob: -5.188257217407227
    4. '.endswith' → logprob: -6.188257217407227
    5. '.' → logprob: -7.563257217407227
    6. '.is' → logprob: -7.938257217407227
    7. 'startswith' → logprob: -8.313257217407227
    8. '[-' → logprob: -8.813257217407227
    9. ' in' → logprob: -8.813257217407227
    10. 'not' → logprob: -9.063257217407227

Token 396: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001980856526643038
    2. ' ' → logprob: -6.751980781555176
    3. ':' → logprob: -8.501980781555176
    4. '[' → logprob: -8.501980781555176
    5. '1' → logprob: -9.001980781555176
    6. ')' → logprob: -9.751980781555176
    7. 'startswith' → logprob: -10.251980781555176
    8. '<|end|>' → logprob: -10.626980781555176
    9. ' :' → logprob: -11.001980781555176
    10. '.startswith' → logprob: -11.001980781555176

Token 397: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1671343743801117
    2. ' ==' → logprob: -2.2921342849731445
    3. ']==' → logprob: -3.1671342849731445
    4. ']' → logprob: -4.5421342849731445
    5. '=' → logprob: -10.167134284973145
    6. '==
' → logprob: -11.292134284973145
    7. ')==' → logprob: -11.542134284973145
    8. ' ]' → logprob: -11.667134284973145
    9. '[' → logprob: -12.417134284973145
    10. ')' → logprob: -12.792134284973145

Token 398: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02055099606513977
    2. ' ==' → logprob: -3.8955509662628174
    3. '==
' → logprob: -12.520550727844238
    4. '=' → logprob: -13.020550727844238
    5. ']==' → logprob: -14.520550727844238
    6. 'is' → logprob: -14.645550727844238
    7. 'and' → logprob: -15.145550727844238
    8. '=='' → logprob: -15.270550727844238
    9. ')==' → logprob: -15.270550727844238
    10. '!=' → logprob: -15.395550727844238

Token 399: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006907652597874403
    2. 'last' → logprob: -5.6319074630737305
    3. ' start' → logprob: -5.7569074630737305
    4. 'ai' → logprob: -9.13190746307373
    5. ' last' → logprob: -11.00690746307373
    6. ' ai' → logprob: -12.13190746307373
    7. ' ' → logprob: -12.88190746307373
    8. '   ' → logprob: -13.13190746307373
    9. 'c' → logprob: -13.13190746307373
    10. '	start' → logprob: -13.75690746307373

Token 400: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -6.034592388459714e-06
    2. 'char' → logprob: -12.625005722045898
    3. '_' → logprob: -13.250005722045898
    4. '_c' → logprob: -15.500005722045898
    5. '_chat' → logprob: -15.625005722045898
    6. '_CHAR' → logprob: -15.750005722045898
    7. 'Char' → logprob: -15.875005722045898
    8. '_chart' → logprob: -16.5000057220459
    9. '_word' → logprob: -17.1250057220459
    10. '_token' → logprob: -17.5000057220459

Token 401: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050568658858537674
    2. ' and' → logprob: -3.3005685806274414
    3. ':
' → logprob: -4.425568580627441
    4. 'and' → logprob: -8.300568580627441
    5. '       ' → logprob: -8.550568580627441
    6. '):' → logprob: -11.425568580627441
    7. '           ' → logprob: -11.925568580627441
    8. ' :' → logprob: -12.050568580627441
    9. '   ' → logprob: -12.800568580627441
    10. ',' → logprob: -12.925568580627441

Token 402: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027522826567292213
    2. '       ' → logprob: -3.9025228023529053
    3. ' and' → logprob: -5.277523040771484
    4. ':' → logprob: -7.277523040771484
    5. ':
' → logprob: -7.277523040771484
    6. '          ' → logprob: -9.027523040771484
    7. ' found' → logprob: -9.027523040771484
    8. '   ' → logprob: -9.277523040771484
    9. '<|end|>' → logprob: -10.402523040771484
    10. '               ' → logprob: -10.777523040771484

Token 403: ' my' (ID: 922)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.22499024868011475
    2. ' used' → logprob: -1.7249902486801147
    3. '       ' → logprob: -3.9749903678894043
    4. '   ' → logprob: -5.849990367889404
    5. '           ' → logprob: -6.599990367889404
    6. 'found' → logprob: -8.599989891052246
    7. '               ' → logprob: -10.224989891052246
    8. ' found' → logprob: -10.349989891052246
    9. 'print' → logprob: -11.849989891052246
    10. ' ' → logprob: -11.849989891052246

Token 404: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0008706060471013188
    2. '_' → logprob: -8.000870704650879
    3. 'word' → logprob: -8.000870704650879
    4. ' word' → logprob: -9.500870704650879
    5. '_used' → logprob: -10.375870704650879
    6. ' _' → logprob: -10.875870704650879
    7. '_candidate' → logprob: -11.000870704650879
    8. '_token' → logprob: -11.375870704650879
    9. 'Word' → logprob: -11.750870704650879
    10. '_words' → logprob: -11.750870704650879

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ' ' → logprob: -14.568148612976074
    4. 's' → logprob: -15.193148612976074
    5. ' +=' → logprob: -15.443148612976074
    6. ' =
' → logprob: -15.693148612976074
    7. '+=' → logprob: -15.818148612976074
    8. '=
' → logprob: -16.06814956665039
    9. ')' → logprob: -16.19314956665039
    10. '   ' → logprob: -16.94314956665039

Token 406: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.0007100477814674377
    2. ' candidate' → logprob: -7.2507100105285645
    3. 'c' → logprob: -15.625710487365723
    4. '(candidate' → logprob: -17.125709533691406
    5. '_candidate' → logprob: -19.500709533691406
    6. 'cand' → logprob: -19.500709533691406
    7. ' candidat' → logprob: -19.625709533691406
    8. 'start' → logprob: -19.875709533691406
    9. '   ' → logprob: -21.375709533691406
    10. '候' → logprob: -21.750709533691406

Token 407: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01875287853181362
    2. '
' → logprob: -4.1437530517578125
    3. '       ' → logprob: -6.1437530517578125
    4. '<|end|>' → logprob: -8.518753051757812
    5. '            
' → logprob: -9.018753051757812
    6. '   ' → logprob: -9.643753051757812
    7. '<|end|>' → logprob: -10.393753051757812
    8. '               ' → logprob: -10.518753051757812
    9. 'found' → logprob: -10.643753051757812
    10. ' used' → logprob: -11.018753051757812

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010005362564697862
    2. '       ' → logprob: -7.25100040435791
    3. '
' → logprob: -8.75100040435791
    4. '            
' → logprob: -9.75100040435791
    5. '<|end|>' → logprob: -10.25100040435791
    6. '   ' → logprob: -11.00100040435791
    7. '               ' → logprob: -11.87600040435791
    8. '        
' → logprob: -12.75100040435791
    9. '<|end|>' → logprob: -12.87600040435791
    10. '    
' → logprob: -13.50100040435791

Token 409: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.5372758507728577
    2. 'used' (adapté à ' used') → logprob: -1.412275791168213
    3. '           ' → logprob: -2.412275791168213
    4. ' found' → logprob: -3.162275791168213
    5. 'found' → logprob: -3.287275791168213
    6. '       ' → logprob: -6.287275791168213
    7. '   ' → logprob: -7.412275791168213
    8. '
' → logprob: -9.287276268005371
    9. 'print' → logprob: -9.412276268005371
    10. ' break' → logprob: -10.287276268005371

Token 410: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -12.625003814697266
    3. '.Add' → logprob: -17.750003814697266
    4. '.append' → logprob: -18.250003814697266
    5. ' .' → logprob: -18.625003814697266
    6. '.update' → logprob: -19.000003814697266
    7. 'add' → logprob: -19.125003814697266
    8. ')add' → logprob: -20.000003814697266
    9. '.ad' → logprob: -20.125003814697266
    10. '.insert' → logprob: -20.375003814697266

Token 411: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -9.162282367469743e-05
    2. '(' → logprob: -10.000091552734375
    3. '(candidate' → logprob: -10.000091552734375
    4. '(m' → logprob: -14.625091552734375
    5. 'my' → logprob: -16.375091552734375
    6. ' (' → logprob: -17.625091552734375
    7. '(c' → logprob: -17.625091552734375
    8. '(me' → logprob: -18.000091552734375
    9. '(mi' → logprob: -18.000091552734375
    10. '(
' → logprob: -18.625091552734375

Token 412: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0003398726985324174
    2. 'word' → logprob: -8.12533950805664
    3. 'candidate' → logprob: -10.25033950805664
    4. 'my' → logprob: -12.37533950805664
    5. '_candidate' → logprob: -12.75033950805664
    6. 'Word' → logprob: -14.00033950805664
    7. '_WORD' → logprob: -16.25033950805664
    8. '(candidate' → logprob: -16.75033950805664
    9. ' word' → logprob: -17.00033950805664
    10. '_' → logprob: -17.12533950805664

Token 413: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14887768030166626
    2. ')' → logprob: -2.5238776206970215
    3. ')
' → logprob: -2.8988776206970215
    4. '
' → logprob: -6.0238776206970215
    5. '       ' → logprob: -8.27387809753418
    6. ',' → logprob: -9.14887809753418
    7. '<|end|>' → logprob: -9.39887809753418
    8. '               ' → logprob: -9.52387809753418
    9. '   ' → logprob: -9.77387809753418
    10. '            
' → logprob: -10.02387809753418

Token 414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011300918646156788
    2. '
' → logprob: -4.511301040649414
    3. 'print' → logprob: -9.261301040649414
    4. '   ' → logprob: -10.136301040649414
    5. '       ' → logprob: -10.261301040649414
    6. '            
' → logprob: -10.761301040649414
    7. '<|end|>' → logprob: -10.886301040649414
    8. '    
' → logprob: -11.136301040649414
    9. '  
' → logprob: -12.261301040649414
    10. ' print' → logprob: -12.386301040649414

Token 415: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06600931286811829
    2. ' print' → logprob: -2.816009283065796
    3. '           ' → logprob: -5.566009521484375
    4. '   ' → logprob: -8.691009521484375
    5. '       ' → logprob: -10.691009521484375
    6. ' turn' → logprob: -11.816009521484375
    7. 'turn' → logprob: -12.441009521484375
    8. ' ' → logprob: -13.066009521484375
    9. '
' → logprob: -13.816009521484375
    10. '	print' → logprob: -14.316009521484375

Token 416: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.000937547127250582
    2. '("_' → logprob: -7.000937461853027
    3. '("' → logprob: -11.625937461853027
    4. '("("' → logprob: -12.125937461853027
    5. '_' → logprob: -12.375937461853027
    6. '('_' → logprob: -13.250937461853027
    7. '"' → logprob: -13.375937461853027
    8. '(' → logprob: -13.750937461853027
    9. '_AND' → logprob: -13.875937461853027
    10. 'And' → logprob: -14.375937461853027

Token 417: '_flush' (ID: 105932)
  Prédit: 'flush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flush' → logprob: -0.25193333625793457
    2. '_flush' → logprob: -1.5019333362579346
    3. ' flush' → logprob: -12.876933097839355
    4. 'Flush' → logprob: -13.876933097839355
    5. 'print' → logprob: -14.626933097839355
    6. 'word' → logprob: -16.501934051513672
    7. 'my' → logprob: -16.501934051513672
    8. '.flush' → logprob: -17.001934051513672
    9. '```' → logprob: -17.751934051513672
    10. 'sys' → logprob: -18.626934051513672

Token 418: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -0.00011951648048125207
    2. '(' → logprob: -9.25011920928955
    3. 'my' → logprob: -11.12511920928955
    4. '("("' → logprob: -11.75011920928955
    5. ' (' → logprob: -15.25011920928955
    6. '("(' → logprob: -15.87511920928955
    7. '(m' → logprob: -16.000120162963867
    8. '(word' → logprob: -16.500120162963867
    9. '('' → logprob: -17.125120162963867
    10. '("' → logprob: -17.125120162963867

Token 419: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.008637377060949802
    2. 'word' → logprob: -4.758637428283691
    3. 'my' → logprob: -11.508637428283691
    4. 'Word' → logprob: -12.133637428283691
    5. 'ord' → logprob: -13.258637428283691
    6. ' word' → logprob: -13.383637428283691
    7. '_' → logprob: -14.133637428283691
    8. '_WORD' → logprob: -14.758637428283691
    9. '   ' → logprob: -14.883637428283691
    10. 'w' → logprob: -14.883637428283691

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6938169002532959
    2. ')
' → logprob: -0.6938169002532959
    3. '           ' → logprob: -7.568817138671875
    4. '   ' → logprob: -9.193817138671875
    5. '       ' → logprob: -10.193817138671875
    6. ')
' → logprob: -12.193817138671875
    7. '
' → logprob: -12.818817138671875
    8. '()
' → logprob: -14.193817138671875
    9. ')

' → logprob: -14.318817138671875
    10. '),' → logprob: -14.318817138671875

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.125081866979599
    2. '
' → logprob: -2.500081777572632
    3. '    
' → logprob: -4.750082015991211
    4. '   ' → logprob: -5.000082015991211
    5. '       ' → logprob: -5.125082015991211
    6. '<|end|>' → logprob: -5.375082015991211
    7. '            
' → logprob: -5.875082015991211
    8. '  
' → logprob: -6.000082015991211
    9. '<|end|>' → logprob: -6.875082015991211
    10. '        
' → logprob: -7.125082015991211

Token 422: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -0.08523441106081009
    2. ' turn' → logprob: -2.7102344036102295
    3. '   ' → logprob: -4.835234642028809
    4. '           ' → logprob: -5.335234642028809
    5. '
' → logprob: -6.085234642028809
    6. '    
' → logprob: -9.585234642028809
    7. '            
' → logprob: -10.835234642028809
    8. '(turn' → logprob: -11.210234642028809
    9. '       ' → logprob: -11.585234642028809
    10. '
' → logprob: -12.335234642028809

Token 423: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12693051993846893
    2. '+=' → logprob: -2.1269304752349854
    3. '+' → logprob: -13.001930236816406
    4. '=' → logprob: -16.876930236816406
    5. ' +' → logprob: -17.126930236816406
    6. ']+=' → logprob: -17.251930236816406
    7. '++' → logprob: -18.626930236816406
    8. ' ' → logprob: -18.626930236816406
    9. '```' → logprob: -19.376930236816406
    10. ' ' → logprob: -19.501930236816406

Token 424: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029613598599098623
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.250295639038086
    4. '１' → logprob: -18.625295639038086
    5. '2' → logprob: -18.687795639038086
    6. '=' → logprob: -19.125295639038086
    7. '```' → logprob: -19.125295639038086
    8. '0' → logprob: -19.437795639038086
    9. '  ' → logprob: -19.625295639038086
    10. ' ' → logprob: -19.875295639038086

Token 425: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '2' → logprob: -18.0000057220459
    4. '   ' → logprob: -19.5625057220459
    5. '１' → logprob: -20.4375057220459
    6. '0' → logprob: -20.5625057220459
    7. '۱' → logprob: -20.7500057220459
    8. '```' → logprob: -20.8125057220459
    9. '  ' → logprob: -21.2500057220459
    10. '3' → logprob: -21.3750057220459

Token 426: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008168661966919899
    2. '
' → logprob: -5.258168697357178
    3. '<|end|>' → logprob: -6.633168697357178
    4. '       ' → logprob: -7.133168697357178
    5. '            
' → logprob: -8.00816822052002
    6. '    
' → logprob: -9.13316822052002
    7. '               ' → logprob: -9.38316822052002
    8. '   ' → logprob: -9.63316822052002
    9. '<|end|>' → logprob: -9.63316822052002
    10. '  
' → logprob: -10.00816822052002

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.214019307051785e-05
    2. '       ' → logprob: -10.625032424926758
    3. '   ' → logprob: -12.250032424926758
    4. 'break' → logprob: -14.375032424926758
    5. '            
' → logprob: -14.375032424926758
    6. '               ' → logprob: -14.500032424926758
    7. '<|end|>' → logprob: -14.500032424926758
    8. '		' → logprob: -15.250032424926758
    9. '          ' → logprob: -15.500032424926758
    10. '```' → logprob: -16.250032424926758

Token 428: ' last' (ID: 2174)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1824905127286911
    2. 'found' → logprob: -2.057490587234497
    3. ' found' → logprob: -3.682490587234497
    4. 'break' → logprob: -4.557490348815918
    5. ' break' → logprob: -5.932490348815918
    6. '   ' → logprob: -7.807490348815918
    7. '       ' → logprob: -8.182490348815918
    8. '               ' → logprob: -11.307490348815918
    9. '
' → logprob: -11.807490348815918
    10. '	found' → logprob: -12.057490348815918

Token 429: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0002807623823173344
    2. '_' → logprob: -8.375280380249023
    3. 'word' → logprob: -10.125280380249023
    4. '_char' → logprob: -11.875280380249023
    5. 'Word' → logprob: -13.125280380249023
    6. '=' → logprob: -15.625280380249023
    7. ' =' → logprob: -15.750280380249023
    8. '_WORD' → logprob: -16.000280380249023
    9. '_character' → logprob: -16.000280380249023
    10. '_words' → logprob: -16.250280380249023

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '=

' → logprob: -18.023244857788086
    4. '＝' → logprob: -19.273244857788086
    5. '.=' → logprob: -20.523244857788086
    6. '=}' → logprob: -20.523244857788086
    7. '=end' → logprob: -20.773244857788086
    8. ' ' → logprob: -20.898244857788086
    9. '=user' → logprob: -21.148244857788086
    10. '=cut' → logprob: -21.898244857788086

Token 431: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.00016265720478259027
    2. ' my' → logprob: -9.250163078308105
    3. 'candidate' → logprob: -9.625163078308105
    4. ' candidate' → logprob: -15.625163078308105
    5. '	my' → logprob: -16.50016212463379
    6. '   ' → logprob: -17.12516212463379
    7. ' ' → logprob: -17.37516212463379
    8. 'm' → logprob: -17.50016212463379
    9. '  ' → logprob: -18.12516212463379
    10. 'myp' → logprob: -18.12516212463379

Token 432: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.00016146517009474337
    2. 'word' → logprob: -8.750161170959473
    3. 'Word' → logprob: -13.500161170959473
    4. '_' → logprob: -13.500161170959473
    5. '_WORD' → logprob: -17.00016212463379
    6. '_ai' → logprob: -17.25016212463379
    7. ' word' → logprob: -17.37516212463379
    8. '_w' → logprob: -17.62516212463379
    9. '_char' → logprob: -17.62516212463379
    10. 'w' → logprob: -17.75016212463379

Token 433: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027921271976083517
    2. '
' → logprob: -8.625279426574707
    3. '            
' → logprob: -9.625279426574707
    4. '<|end|>' → logprob: -11.125279426574707
    5. '<|end|>' → logprob: -12.250279426574707
    6. '  
' → logprob: -12.375279426574707
    7. '    
' → logprob: -12.750279426574707
    8. '       ' → logprob: -13.000279426574707
    9. '               ' → logprob: -14.000279426574707
    10. '   ' → logprob: -14.375279426574707

Token 434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23204956948757172
    2. '<|end|>' → logprob: -2.3570494651794434
    3. '   ' → logprob: -2.7320494651794434
    4. '
' → logprob: -3.3570494651794434
    5. '       ' → logprob: -4.607049465179443
    6. '<|end|>' → logprob: -6.607049465179443
    7. '    
' → logprob: -7.232049465179443
    8. '               ' → logprob: -9.732049942016602
    9. '            
' → logprob: -9.857049942016602
    10. '    ' → logprob: -10.107049942016602

Token 435: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.657694418914616e-05
    2. 'found' (adapté à ' found') → logprob: -10.750056266784668
    3. 'break' → logprob: -11.125056266784668
    4. ' found' → logprob: -11.875056266784668
    5. '   ' → logprob: -12.250056266784668
    6. ' break' → logprob: -13.125056266784668
    7. '       ' → logprob: -13.250056266784668
    8. '            
' → logprob: -13.375056266784668
    9. '
' → logprob: -13.750056266784668
    10. '          ' → logprob: -14.000056266784668

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740896224975586
    2. ' =' → logprob: -0.9740896224975586
    3. '=True' → logprob: -11.349089622497559
    4. ' ' → logprob: -14.349089622497559
    5. '=true' → logprob: -16.349090576171875
    6. 's' → logprob: -16.724090576171875
    7. '	' → logprob: -17.474090576171875
    8. ' |=' → logprob: -18.099090576171875
    9. '<|end|>' → logprob: -18.099090576171875
    10. ' =
' → logprob: -18.224090576171875

Token 437: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0019286326132714748
    2. ' True' → logprob: -6.251928806304932
    3. '(True' → logprob: -21.126928329467773
    4. '=True' → logprob: -22.001928329467773
    5. 'Tr' → logprob: -23.251928329467773
    6. 'true' → logprob: -23.876928329467773
    7. '   ' → logprob: -24.251928329467773
    8. ' ' → logprob: -25.251928329467773
    9. '.True' → logprob: -25.876928329467773
    10. 'TRUE' → logprob: -26.001928329467773

Token 438: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.2987729102605954e-05
    2. '<|end|>' → logprob: -11.250042915344238
    3. '		' → logprob: -11.500042915344238
    4. '   ' → logprob: -12.000042915344238
    5. '       ' → logprob: -12.125042915344238
    6. '            
' → logprob: -13.250042915344238
    7. '	       ' → logprob: -13.500042915344238
    8. '
' → logprob: -13.500042915344238
    9. '    
' → logprob: -13.875042915344238
    10. '               ' → logprob: -14.500042915344238

Token 439: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005532912444323301
    2. '		' → logprob: -5.505532741546631
    3. '   ' → logprob: -7.380532741546631
    4. '       ' → logprob: -8.005533218383789
    5. '	       ' → logprob: -8.255533218383789
    6. '	   ' → logprob: -9.255533218383789
    7. '		   ' → logprob: -10.005533218383789
    8. '	if' → logprob: -10.880533218383789
    9. ' if' → logprob: -11.380533218383789
    10. '<|end|>' → logprob: -11.505533218383789

Token 440: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.149051427608356e-05
    2. '		' → logprob: -9.875081062316895
    3. '   ' → logprob: -11.375081062316895
    4. '       ' → logprob: -11.875081062316895
    5. '	       ' → logprob: -11.875081062316895
    6. '	   ' → logprob: -13.500081062316895
    7. '		   ' → logprob: -13.875081062316895
    8. 'if' → logprob: -14.375081062316895
    9. 'break' (adapté à ' break') → logprob: -14.625081062316895
    10. '               ' → logprob: -14.750081062316895

Token 441: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0452999547123909
    2. 'if' → logprob: -3.795300006866455
    3. '
' → logprob: -3.920300006866455
    4. '    
' → logprob: -6.545300006866455
    5. ' if' → logprob: -8.045299530029297
    6. '<|end|>' → logprob: -9.920299530029297
    7. 'else' → logprob: -10.045299530029297
    8. '  
' → logprob: -10.170299530029297
    9. 'If' → logprob: -10.545299530029297
    10. '	if' → logprob: -10.795299530029297

Token 442: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010037137195467949
    2. 'if' → logprob: -4.635036945343018
    3. '    
' → logprob: -9.260037422180176
    4. ' if' → logprob: -9.385037422180176
    5. 'else' → logprob: -9.885037422180176
    6. '
' → logprob: -10.135037422180176
    7. '<|end|>' → logprob: -12.260037422180176
    8. 'If' → logprob: -13.260037422180176
    9. '  
' → logprob: -13.510037422180176
    10. '	if' → logprob: -13.635037422180176

Token 443: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4746144413948059
    2. 'if' (adapté à ' if') → logprob: -0.9746144413948059
    3. 'else' → logprob: -8.099614143371582
    4. ' if' → logprob: -8.599614143371582
    5. '    
' → logprob: -10.599614143371582
    6. 'If' → logprob: -10.974614143371582
    7. '	if' → logprob: -13.099614143371582
    8. ';if' → logprob: -13.349614143371582
    9. 'i' → logprob: -13.974614143371582
    10. '<|end|>' → logprob: -14.224614143371582

Token 444: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759462714195251
    2. 'not' → logprob: -0.8259462714195251
    3. '   ' → logprob: -12.325945854187012
    4. '	not' → logprob: -13.950945854187012
    5. '
' → logprob: -14.200945854187012
    6. 'found' → logprob: -15.075945854187012
    7. ' ' → logprob: -15.325945854187012
    8. 'n' → logprob: -16.450946807861328
    9. '!' → logprob: -16.950946807861328
    10. '(not' → logprob: -17.075946807861328

Token 445: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.16022422909736633
    2. ' found' → logprob: -1.910224199295044
    3. '	found' → logprob: -16.28522491455078
    4. '(found' → logprob: -18.28522491455078
    5. '_found' → logprob: -18.53522491455078
    6. 'Found' → logprob: -18.91022491455078
    7. ' used' → logprob: -19.53522491455078
    8. 'used' → logprob: -19.78522491455078
    9. ' ' → logprob: -20.28522491455078
    10. 'find' → logprob: -20.53522491455078

Token 446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2811813950538635
    2. ':
' → logprob: -1.4061813354492188
    3. '   ' → logprob: -11.781181335449219
    4. ':

' → logprob: -12.156181335449219
    5. ' or' → logprob: -12.531181335449219
    6. '():
' → logprob: -12.656181335449219
    7. '):
' → logprob: -12.781181335449219
    8. ':
' → logprob: -13.281181335449219
    9. 'or' → logprob: -13.656181335449219
    10. ' and' → logprob: -13.781181335449219

Token 447: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008617881685495377
    2. '   ' → logprob: -4.758617877960205
    3. 'print' → logprob: -13.883618354797363
    4. '```' → logprob: -14.883618354797363
    5. ' break' → logprob: -14.883618354797363
    6. '#' → logprob: -15.008618354797363
    7. 'break' → logprob: -15.258618354797363
    8. '           ' → logprob: -15.383618354797363
    9. '      ' → logprob: -15.758618354797363
    10. '     ' → logprob: -15.883618354797363

Token 448: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007145598530769348
    2. '   ' → logprob: -5.257145404815674
    3. 'break' → logprob: -6.632145404815674
    4. ' print' → logprob: -7.507145404815674
    5. '#' (adapté à ' #') → logprob: -10.507145881652832
    6. ' break' → logprob: -11.632145881652832
    7. '#print' → logprob: -12.882145881652832
    8. '       ' → logprob: -13.257145881652832
    9. ' ' → logprob: -13.382145881652832
    10. '	print' → logprob: -14.507145881652832

Token 449: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00048405781853944063
    2. '#' → logprob: -8.125484466552734
    3. 'break' → logprob: -8.625484466552734
    4. '   ' → logprob: -12.625484466552734
    5. ' print' → logprob: -12.750484466552734
    6. '#print' → logprob: -13.125484466552734
    7. '       ' → logprob: -17.250484466552734
    8. 'for' → logprob: -17.250484466552734
    9. ' #' → logprob: -17.500484466552734
    10. ' ' → logprob: -17.500484466552734

Token 450: ' word' (ID: 2195)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5944842100143433
    2. '!' → logprob: -2.219484329223633
    3. ' print' → logprob: -2.594484329223633
    4. '#' → logprob: -2.844484329223633
    5. '   ' → logprob: -2.844484329223633
    6. ' more' → logprob: -3.219484329223633
    7. ' next' → logprob: -3.719484329223633
    8. ' valid' → logprob: -3.844484329223633
    9. ' words' → logprob: -4.844484329223633
    10. 'next' → logprob: -5.344484329223633

Token 451: ' found' (ID: 2491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3016207218170166
    2. '   ' → logprob: -1.9266207218170166
    3. 'print' → logprob: -2.8016207218170166
    4. '!' → logprob: -5.1766204833984375
    5. ' =' → logprob: -5.1766204833984375
    6. ' to' → logprob: -5.1766204833984375
    7. '           ' → logprob: -5.1766204833984375
    8. 'available' → logprob: -5.4266204833984375
    9. '=' → logprob: -5.5516204833984375
    10. 'to' → logprob: -5.8016204833984375

Token 452: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07161103934049606
    2. '   ' → logprob: -2.946610927581787
    3. 'print' → logprob: -4.446610927581787
    4. ':
' → logprob: -6.196610927581787
    5. ' print' → logprob: -7.071610927581787
    6. ',' → logprob: -7.196610927581787
    7. '
' → logprob: -8.071611404418945
    8. ':' → logprob: -8.196611404418945
    9. '           ' → logprob: -8.446611404418945
    10. '#' → logprob: -9.821611404418945

Token 453: ' just' (ID: 1327)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016707850620150566
    2. ' print' → logprob: -4.766707897186279
    3. '   ' → logprob: -5.016707897186279
    4. 'break' → logprob: -6.891707897186279
    5. '       ' → logprob: -8.391707420349121
    6. ' break' → logprob: -8.641707420349121
    7. ' ' → logprob: -12.141707420349121
    8. '#' → logprob: -13.016707420349121
    9. '	print' → logprob: -13.141707420349121
    10. '  ' → logprob: -13.391707420349121

Token 454: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016408398747444153
    2. 'break' → logprob: -4.766408443450928
    3. ' print' → logprob: -5.141408443450928
    4. '   ' → logprob: -6.641408443450928
    5. ' break' → logprob: -7.641408443450928
    6. ' ' → logprob: -11.01640796661377
    7. '#' → logprob: -11.01640796661377
    8. '
' → logprob: -11.01640796661377
    9. 'exit' → logprob: -11.14140796661377
    10. '  ' → logprob: -11.51640796661377

Token 455: ' a' (ID: 261)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10304078459739685
    2. '"!' → logprob: -2.3530406951904297
    3. '!' → logprob: -5.97804069519043
    4. '!("' → logprob: -8.97804069519043
    5. '"' → logprob: -9.47804069519043
    6. '(' → logprob: -10.60304069519043
    7. '('' → logprob: -10.72804069519043
    8. '("?' → logprob: -11.10304069519043
    9. '()' → logprob: -12.22804069519043
    10. '(!' → logprob: -12.72804069519043

Token 456: ' word' (ID: 2195)
  Prédit: '"!'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"!' → logprob: -0.6912144422531128
    2. '!' → logprob: -0.8162144422531128
    3. '"' → logprob: -2.9412145614624023
    4. '"?' → logprob: -7.066214561462402
    5. '!"' → logprob: -7.316214561462402
    6. ''' → logprob: -8.066214561462402
    7. '!
' → logprob: -8.066214561462402
    8. '!\' → logprob: -8.191214561462402
    9. 'newline' → logprob: -8.191214561462402
    10. '
' → logprob: -8.816214561462402

Token 457: ' starting' (ID: 8601)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1491395235061646
    2. '!' → logprob: -1.2741395235061646
    3. '   ' → logprob: -2.149139404296875
    4. ' =' → logprob: -2.899139404296875
    5. '       ' → logprob: -2.899139404296875
    6. '="_' → logprob: -3.149139404296875
    7. '
' → logprob: -3.899139404296875
    8. '"!' → logprob: -4.024139404296875
    9. '"_' → logprob: -4.024139404296875
    10. '=' → logprob: -4.399139404296875

Token 458: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.0618031844496727
    2. ' with' → logprob: -3.186803102493286
    3. 'start' → logprob: -4.061803340911865
    4. 'last' → logprob: -7.561803340911865
    5. 'from' → logprob: -7.811803340911865
    6. ' start' → logprob: -8.311802864074707
    7. '#' → logprob: -8.686802864074707
    8. ' last' → logprob: -10.686802864074707
    9. 'a' → logprob: -11.186802864074707
    10. 'print' → logprob: -11.561802864074707

Token 459: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.018530912697315216
    2. 'last' → logprob: -4.39353084564209
    3. 'ai' → logprob: -5.26853084564209
    4. ' start' → logprob: -8.01853084564209
    5. 'a' → logprob: -9.01853084564209
    6. '"' → logprob: -9.01853084564209
    7. 'my' → logprob: -9.14353084564209
    8. '?' → logprob: -9.51853084564209
    9. ''' → logprob: -10.76853084564209
    10. 'print' → logprob: -11.39353084564209

Token 460: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00015085970517247915
    2. 'char' → logprob: -9.000150680541992
    3. 'last' → logprob: -11.500150680541992
    4. '_' → logprob: -12.500150680541992
    5. 'Char' → logprob: -12.500150680541992
    6. '_ai' → logprob: -12.750150680541992
    7. '_word' → logprob: -12.875150680541992
    8. 'ai' → logprob: -14.250150680541992
    9. '_CHAR' → logprob: -14.500150680541992
    10. '_c' → logprob: -14.500150680541992

Token 461: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18078476190567017
    2. ' and' → logprob: -3.0557847023010254
    3. 'start' → logprob: -3.3057847023010254
    4. ' =' → logprob: -3.9307847023010254
    5. ' start' → logprob: -4.055784702301025
    6. ' +' → logprob: -4.305784702301025
    7. ',' → logprob: -4.930784702301025
    8. 'a' → logprob: -5.555784702301025
    9. '    
' → logprob: -5.680784702301025
    10. '=' → logprob: -5.680784702301025

Token 462: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35481613874435425
    2. '       ' → logprob: -1.354816198348999
    3. ' and' → logprob: -3.604816198348999
    4. ' =' → logprob: -5.72981595993042
    5. ',' → logprob: -5.97981595993042
    6. 'print' → logprob: -6.35481595993042
    7. '    
' → logprob: -6.60481595993042
    8. ' with' → logprob: -7.47981595993042
    9. ' print' → logprob: -7.60481595993042
    10. '        
' → logprob: -7.60481595993042

Token 463: ' my' (ID: 922)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.060173045843839645
    2. 'my' (adapté à ' my') → logprob: -3.1851730346679688
    3. 'candidate' → logprob: -4.685173034667969
    4. 'for' → logprob: -5.935173034667969
    5. ' print' → logprob: -6.185173034667969
    6. '   ' → logprob: -7.310173034667969
    7. 'single' → logprob: -7.435173034667969
    8. 'word' → logprob: -7.685173034667969
    9. '       ' → logprob: -7.935173034667969
    10. 'next' → logprob: -8.560173034667969

Token 464: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.500000953674316
    3. '_w' → logprob: -15.750000953674316
    4. 'word' → logprob: -18.0
    5. 'Word' → logprob: -18.25
    6. '_WORD' → logprob: -18.625
    7. '_words' → logprob: -18.75
    8. '_print' → logprob: -19.0
    9. '_token' → logprob: -20.75
    10. '_char' → logprob: -21.125

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519293427467346
    2. ' =' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.751930236816406
    4. '+=' → logprob: -17.501930236816406
    5. '=

' → logprob: -17.751930236816406
    6. ' ="' → logprob: -17.876930236816406
    7. ' +=' → logprob: -18.001930236816406
    8. '="' → logprob: -18.376930236816406
    9. '	' → logprob: -18.626930236816406
    10. '   ' → logprob: -18.626930236816406

Token 466: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.000553151941858232
    2. ' start' → logprob: -7.500553131103516
    3. 'star' → logprob: -16.125553131103516
    4. '[start' → logprob: -17.000553131103516
    5. '(start' → logprob: -18.875553131103516
    6. '=start' → logprob: -19.125553131103516
    7. ' ' → logprob: -19.250553131103516
    8. 'str' → logprob: -19.375553131103516
    9. '	start' → logprob: -20.250553131103516
    10. '"' → logprob: -20.250553131103516

Token 467: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -4.961759259458631e-06
    2. 'char' → logprob: -12.250004768371582
    3. 'Char' → logprob: -16.1250057220459
    4. '_word' → logprob: -17.2500057220459
    5. '_' → logprob: -18.2500057220459
    6. '_CHAR' → logprob: -18.3750057220459
    7. 'with' → logprob: -19.0000057220459
    8. 's' → logprob: -19.8750057220459
    9. 'ing' → logprob: -21.1250057220459
    10. '_chat' → logprob: -21.2500057220459

Token 468: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5524361729621887
    2. 'print' → logprob: -1.552436113357544
    3. '<|end|>' → logprob: -2.302436113357544
    4. 'a' → logprob: -2.802436113357544
    5. '
' → logprob: -3.677436113357544
    6. ' +' → logprob: -4.552436351776123
    7. '*' → logprob: -4.802436351776123
    8. '+a' → logprob: -5.927436351776123
    9. '+
' → logprob: -6.302436351776123
    10. '<|end|>' → logprob: -6.802436351776123

Token 469: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46964341402053833
    2. 'print' → logprob: -1.0946433544158936
    3. 'used' → logprob: -3.9696433544158936
    4. '
' → logprob: -4.344643592834473
    5. ' used' → logprob: -5.719643592834473
    6. '       ' → logprob: -5.719643592834473
    7. '    
' → logprob: -7.844643592834473
    8. ')
' → logprob: -8.219643592834473
    9. '```' → logprob: -8.969643592834473
    10. '           ' → logprob: -8.969643592834473

Token 470: ' if' (ID: 538)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2575509548187256
    2. 'print' → logprob: -2.1325509548187256
    3. 'if' (adapté à ' if') → logprob: -2.2575509548187256
    4. '
' → logprob: -6.507551193237305
    5. ' used' → logprob: -6.757551193237305
    6. '   ' → logprob: -7.257551193237305
    7. 'while' → logprob: -8.257551193237305
    8. ' if' → logprob: -8.382551193237305
    9. ' print' → logprob: -10.632551193237305
    10. '       ' → logprob: -11.882551193237305

Token 471: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.004084455315023661
    2. ' my' → logprob: -5.504084587097168
    3. 'start' → logprob: -12.504084587097168
    4. '	my' → logprob: -13.754084587097168
    5. 'not' → logprob: -15.129084587097168
    6. ' start' → logprob: -15.129084587097168
    7. 'len' → logprob: -15.254084587097168
    8. ' ' → logprob: -15.629084587097168
    9. '(my' → logprob: -16.37908363342285
    10. '   ' → logprob: -16.62908363342285

Token 472: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0005320638883858919
    2. 'word' → logprob: -7.750532150268555
    3. '_' → logprob: -9.750532150268555
    4. 'wo' → logprob: -11.750532150268555
    5. 'w' → logprob: -12.000532150268555
    6. '_char' → logprob: -12.500532150268555
    7. 'my' → logprob: -12.625532150268555
    8. 'Word' → logprob: -12.625532150268555
    9. 'm' → logprob: -12.750532150268555
    10. '_w' → logprob: -12.875532150268555

Token 473: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23460416495800018
    2. 'not' → logprob: -1.9846041202545166
    3. ' in' → logprob: -2.9846041202545166
    4. 'in' → logprob: -3.8596041202545166
    5. ')' → logprob: -10.734603881835938
    6. ' ' → logprob: -11.484603881835938
    7. '	not' → logprob: -12.234603881835938
    8. '   ' → logprob: -13.234603881835938
    9. 'n' → logprob: -14.234603881835938
    10. '[' → logprob: -14.359603881835938

Token 474: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.0206720617134124e-05
    2. ' used' → logprob: -11.50001049041748
    3. '.used' → logprob: -20.500009536743164
    4. 'use' → logprob: -21.125009536743164
    5. '   ' → logprob: -21.375009536743164
    6. '_used' → logprob: -22.000009536743164
    7. 'Used' → logprob: -22.625009536743164
    8. '
' → logprob: -23.250009536743164
    9. 'USED' → logprob: -23.750009536743164
    10. ' ' → logprob: -24.250009536743164

Token 475: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14461804926395416
    2. ':
' → logprob: -2.019618034362793
    3. ' or' → logprob: -6.769618034362793
    4. '       ' → logprob: -7.519618034362793
    5. '==' → logprob: -9.769618034362793
    6. '           ' → logprob: -10.144618034362793
    7. ' and' → logprob: -10.394618034362793
    8. '=' → logprob: -10.519618034362793
    9. '   ' → logprob: -11.019618034362793
    10. '):
' → logprob: -11.269618034362793

Token 476: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7252476811408997
    2. ':' → logprob: -1.7252476215362549
    3. '       ' → logprob: -1.7252476215362549
    4. '           ' → logprob: -1.8502476215362549
    5. ' or' → logprob: -6.475247859954834
    6. '   ' → logprob: -8.475247383117676
    7. ' and' → logprob: -8.600247383117676
    8. '):
' → logprob: -9.100247383117676
    9. '```' → logprob: -9.600247383117676
    10. '():
' → logprob: -9.725247383117676

Token 477: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07467859983444214
    2. '       ' → logprob: -3.449678659439087
    3. '           ' → logprob: -3.824678659439087
    4. ' print' → logprob: -4.199678421020508
    5. 'break' → logprob: -6.074678421020508
    6. ' break' → logprob: -7.324678421020508
    7. '   ' → logprob: -8.199678421020508
    8. '               ' → logprob: -9.074678421020508
    9. '	print' → logprob: -11.324678421020508
    10. ' ' → logprob: -11.949678421020508

Token 478: ' no' (ID: 860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005516904406249523
    2. ' print' → logprob: -5.50551700592041
    3. '           ' → logprob: -7.25551700592041
    4. '       ' → logprob: -7.75551700592041
    5. 'break' → logprob: -8.50551700592041
    6. '   ' → logprob: -10.13051700592041
    7. '!' → logprob: -10.50551700592041
    8. ' break' → logprob: -10.75551700592041
    9. '#' → logprob: -12.00551700592041
    10. '#print' → logprob: -13.50551700592041

Token 479: ' possible' (ID: 4149)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1254754215478897
    2. ' print' → logprob: -4.1254754066467285
    3. '_words' → logprob: -4.1254754066467285
    4. ' words' → logprob: -4.2504754066467285
    5. 'words' → logprob: -4.5004754066467285
    6. '
' → logprob: -4.5004754066467285
    7. '!' → logprob: -4.6254754066467285
    8. 'break' → logprob: -5.5004754066467285
    9. ' more' → logprob: -5.6254754066467285
    10. 'more' → logprob: -5.7504754066467285

Token 480: ' move' (ID: 5275)
  Prédit: ' words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' words' → logprob: -0.35884466767311096
    2. 'words' → logprob: -1.4838446378707886
    3. 'print' → logprob: -3.483844757080078
    4. 'word' → logprob: -4.608844757080078
    5. '
' → logprob: -5.108844757080078
    6. '_words' → logprob: -5.483844757080078
    7. 'exit' → logprob: -5.858844757080078
    8. 'valid' → logprob: -5.983844757080078
    9. ' word' → logprob: -5.983844757080078
    10. ' valid' → logprob: -6.108844757080078

Token 481: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07940853387117386
    2. '       ' → logprob: -2.579408645629883
    3. ':
' → logprob: -8.829408645629883
    4. '   ' → logprob: -8.954408645629883
    5. '               ' → logprob: -9.204408645629883
    6. ',' → logprob: -10.329408645629883
    7. ' or' → logprob: -10.954408645629883
    8. ' and' → logprob: -11.204408645629883
    9. '!' → logprob: -11.329408645629883
    10. '```' → logprob: -11.329408645629883

Token 482: ' end' (ID: 1268)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5541756749153137
    2. ' print' → logprob: -1.179175615310669
    3. ' break' → logprob: -2.804175615310669
    4. '           ' → logprob: -3.554175615310669
    5. '       ' → logprob: -4.054175853729248
    6. 'break' → logprob: -4.804175853729248
    7. '   ' → logprob: -5.804175853729248
    8. ' ' → logprob: -9.17917537689209
    9. '               ' → logprob: -10.80417537689209
    10. '	break' → logprob: -11.05417537689209

Token 483: ' here' (ID: 2105)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8071759939193726
    2. 'game' → logprob: -2.057176113128662
    3. 'break' → logprob: -2.182176113128662
    4. '   ' → logprob: -2.557176113128662
    5. '
' → logprob: -2.682176113128662
    6. '!' → logprob: -2.682176113128662
    7. '           ' → logprob: -3.557176113128662
    8. '    
' → logprob: -3.932176113128662
    9. 'play' → logprob: -3.932176113128662
    10. '       ' → logprob: -5.057176113128662

Token 484: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006892150267958641
    2. '       ' → logprob: -5.006892204284668
    3. '   ' → logprob: -9.631892204284668
    4. '
' → logprob: -10.256892204284668
    5. '               ' → logprob: -10.381892204284668
    6. '!' → logprob: -12.006892204284668
    7. 'print' → logprob: -12.256892204284668
    8. '	       ' → logprob: -12.506892204284668
    9. '          ' → logprob: -12.506892204284668
    10. '<|end|>' → logprob: -12.506892204284668

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0188100878149271
    2. '       ' → logprob: -4.143810272216797
    3. '   ' → logprob: -6.768810272216797
    4. '               ' → logprob: -7.518810272216797
    5. '
' → logprob: -7.893810272216797
    6. '\n' → logprob: -7.893810272216797
    7. '    
' → logprob: -9.643810272216797
    8. '            
' → logprob: -9.643810272216797
    9. '!' → logprob: -10.268810272216797
    10. '          ' → logprob: -10.393810272216797

Token 486: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00014299227041192353
    2. 'break' (adapté à ' break') → logprob: -9.000143051147461
    3. ' print' → logprob: -11.125143051147461
    4. '           ' → logprob: -12.375143051147461
    5. '       ' → logprob: -14.750143051147461
    6. ' break' → logprob: -16.75014305114746
    7. '   ' → logprob: -18.12514305114746
    8. '```' → logprob: -18.87514305114746
    9. '	print' → logprob: -19.25014305114746
    10. '               ' → logprob: -20.25014305114746

Token 487: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3792836666107178
    2. '       ' → logprob: -1.2542836666107178
    3. '
' → logprob: -4.254283905029297
    4. 'print' → logprob: -4.379283905029297
    5. '    
' → logprob: -6.004283905029297
    6. '        
' → logprob: -7.754283905029297
    7. '  
' → logprob: -8.254283905029297
    8. '<|end|>' → logprob: -8.629283905029297
    9. 'else' → logprob: -9.254283905029297
    10. '```' → logprob: -10.254283905029297

Token 488: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011123628355562687
    2. '       ' → logprob: -4.7611236572265625
    3. 'print' → logprob: -6.5111236572265625
    4. 'else' → logprob: -7.6361236572265625
    5. '    
' → logprob: -8.261123657226562
    6. '
' → logprob: -8.886123657226562
    7. ' else' → logprob: -10.136123657226562
    8. '```' → logprob: -10.136123657226562
    9. '        
' → logprob: -10.636123657226562
    10. ' print' → logprob: -11.761123657226562

Token 489: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.04189436137676239
    2. '   ' → logprob: -3.2918944358825684
    3. '       ' → logprob: -5.791894435882568
    4. ' used' → logprob: -7.166894435882568
    5. 'print' → logprob: -11.04189395904541
    6. 'else' → logprob: -12.54189395904541
    7. '    ' → logprob: -14.66689395904541
    8. '     ' → logprob: -15.04189395904541
    9. 'usage' → logprob: -15.16689395904541
    10. '           ' → logprob: -15.66689395904541

Token 490: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0005538671393878758
    2. '.' → logprob: -7.500554084777832
    3. '.remove' → logprob: -15.125554084777832
    4. '.append' → logprob: -15.250554084777832
    5. ' .' → logprob: -16.500553131103516
    6. ').' → logprob: -16.625553131103516
    7. '.Add' → logprob: -16.625553131103516
    8. '.setdefault' → logprob: -17.125553131103516
    9. '.insert' → logprob: -17.250553131103516
    10. '.update' → logprob: -17.500553131103516

Token 491: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. '(m' → logprob: -15.25000286102295
    4. '(mi' → logprob: -17.500001907348633
    5. '(me' → logprob: -19.625001907348633
    6. '(man' → logprob: -19.625001907348633
    7. '(mu' → logprob: -20.125001907348633
    8. '(ma' → logprob: -20.125001907348633
    9. '(main' → logprob: -20.250001907348633
    10. '(My' → logprob: -20.625001907348633

Token 492: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0027751552406698465
    2. '_my' → logprob: -6.627775192260742
    3. 'my' → logprob: -7.627775192260742
    4. '(my' → logprob: -7.627775192260742
    5. 'word' → logprob: -7.752775192260742
    6. '(word' → logprob: -10.252775192260742
    7. '(_' → logprob: -13.127775192260742
    8. '(' → logprob: -13.252775192260742
    9. '_' → logprob: -13.252775192260742
    10. '_words' → logprob: -13.627775192260742

Token 493: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931589245796204
    2. ')
' → logprob: -0.6931589245796204
    3. ')
' → logprob: -11.943159103393555
    4. '   ' → logprob: -12.693159103393555
    5. ')

' → logprob: -14.318159103393555
    6. ' )
' → logprob: -15.568159103393555
    7. '#' → logprob: -15.818159103393555
    8. '()' → logprob: -16.068159103393555
    9. ' )' → logprob: -16.068159103393555
    10. '())
' → logprob: -16.193159103393555

Token 494: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04728495329618454
    2. '       ' → logprob: -3.1722848415374756
    3. '   ' → logprob: -5.547285079956055
    4. '           ' → logprob: -8.672285079956055
    5. ' print' → logprob: -8.672285079956055
    6. '
' → logprob: -11.047285079956055
    7. '	print' → logprob: -12.922285079956055
    8. '```' → logprob: -12.922285079956055
    9. '#print' → logprob: -13.047285079956055
    10. '        ' → logprob: -13.047285079956055

Token 495: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.375
    3. '   ' → logprob: -18.375
    4. '       ' → logprob: -19.5
    5. '
' → logprob: -19.75
    6. '```' → logprob: -22.5
    7. '(print' → logprob: -22.5
    8. '.print' → logprob: -22.75
    9. '        
' → logprob: -22.75
    10. 'printf' → logprob: -22.875

Token 496: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.0004067202680744231
    2. '("_' → logprob: -7.875406742095947
    3. '("("' → logprob: -11.750406265258789
    4. '_' → logprob: -11.875406265258789
    5. 'and' → logprob: -12.375406265258789
    6. '(' → logprob: -12.750406265258789
    7. '("' → logprob: -13.500406265258789
    8. '"' → logprob: -14.125406265258789
    9. 'And' → logprob: -14.250406265258789
    10. '"_' → logprob: -14.500406265258789

Token 497: '_flush' (ID: 105932)
  Prédit: '_flush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flush' → logprob: -0.38687729835510254
    2. 'flush' → logprob: -1.1368772983551025
    3. 'Flush' → logprob: -12.261877059936523
    4. 'my' → logprob: -14.261877059936523
    5. ' flush' → logprob: -14.386877059936523
    6. '.flush' → logprob: -16.011877059936523
    7. 'lush' → logprob: -16.886877059936523
    8. '```' → logprob: -17.011877059936523
    9. 'fl' → logprob: -17.386877059936523
    10. '_flash' → logprob: -17.511877059936523

Token 498: '(my' (ID: 23725)
  Prédit: '(my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(my' → logprob: -2.534558552724775e-05
    2. 'my' → logprob: -11.000025749206543
    3. '(' → logprob: -12.000025749206543
    4. '(start' → logprob: -13.375025749206543
    5. '(last' → logprob: -14.000025749206543
    6. '(m' → logprob: -17.750024795532227
    7. '("("' → logprob: -17.750024795532227
    8. ' (' → logprob: -18.375024795532227
    9. '(max' → logprob: -18.500024795532227
    10. '(main' → logprob: -19.125024795532227

Token 499: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.001517238444648683
    2. 'word' → logprob: -6.501517295837402
    3. '(word' → logprob: -11.501517295837402
    4. 'my' → logprob: -12.876517295837402
    5. '_char' → logprob: -14.501517295837402
    6. '_my' → logprob: -14.626517295837402
    7. 'Word' → logprob: -14.626517295837402
    8. '_' → logprob: -15.376517295837402
    9. '(my' → logprob: -15.876517295837402
    10. '_w' → logprob: -16.001516342163086

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009119403548538685
    2. ')
' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.125911712646484
    4. ' )' → logprob: -16.375911712646484
    5. '")' → logprob: -16.625911712646484
    6. ')
' → logprob: -16.750911712646484
    7. ')

' → logprob: -16.875911712646484
    8. '))' → logprob: -17.625911712646484
    9. ')#' → logprob: -17.625911712646484
    10. ')`' → logprob: -18.250911712646484

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017474839463829994
    2. '   ' → logprob: -4.51747465133667
    3. 'turn' → logprob: -5.76747465133667
    4. '
' → logprob: -7.01747465133667
    5. ' turn' → logprob: -7.01747465133667
    6. '           ' → logprob: -7.39247465133667
    7. '(turn' → logprob: -7.89247465133667
    8. '<|end|>' → logprob: -9.017475128173828
    9. '	' → logprob: -9.392475128173828
    10. ')' → logprob: -9.642475128173828

Token 502: ' turn' (ID: 3716)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' (adapté à ' turn') → logprob: -5.621933451038785e-05
    2. '       ' → logprob: -10.375056266784668
    3. ' turn' → logprob: -10.625056266784668
    4. '   ' → logprob: -14.750056266784668
    5. '(turn' → logprob: -15.500056266784668
    6. '           ' → logprob: -16.50005531311035
    7. '.turn' → logprob: -18.12505531311035
    8. '        
' → logprob: -18.62505531311035
    9. '
' → logprob: -18.75005531311035
    10. '_turn' → logprob: -18.75005531311035

Token 503: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2519323229789734
    2. '+=' → logprob: -1.5019323825836182
    3. '+' → logprob: -12.751932144165039
    4. ']+=' → logprob: -15.751932144165039
    5. '```' → logprob: -17.00193214416504
    6. '=' → logprob: -17.37693214416504
    7. ' +' → logprob: -17.50193214416504
    8. '   ' → logprob: -17.75193214416504
    9. '+='' → logprob: -17.75193214416504
    10. '+="' → logprob: -17.87693214416504

Token 504: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. ' ' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.268150329589844
    4. '```' → logprob: -18.143150329589844
    5. '１' → logprob: -19.143150329589844
    6. ' 
' → logprob: -19.143150329589844
    7. '0' → logprob: -19.518150329589844
    8. '   ' → logprob: -20.205650329589844
    9. '2' → logprob: -20.705650329589844
    10. '۱' → logprob: -20.768150329589844

Token 505: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.625001907348633
    4. '```' → logprob: -21.500001907348633
    5. '
' → logprob: -21.750001907348633
    6. '  ' → logprob: -23.250001907348633
    7. '0' → logprob: -23.625001907348633
    8. '=' → logprob: -23.750001907348633
    9. '１' → logprob: -24.125001907348633
    10. '	' → logprob: -24.625001907348633

Token 506: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 507: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 508: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -6.630610641877865e-06
    2. ' last' → logprob: -12.000006675720215
    3. '   ' → logprob: -15.000006675720215
    4. '       ' → logprob: -18.2500057220459
    5. '	last' → logprob: -18.3750057220459
    6. 'break' → logprob: -18.7500057220459
    7. '
' → logprob: -22.0000057220459
    8. ' ' → logprob: -22.2500057220459
    9. '           ' → logprob: -22.3750057220459
    10. 'Last' → logprob: -22.6250057220459

Token 509: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.750001907348633
    3. 'word' → logprob: -14.750001907348633
    4. '_char' → logprob: -17.500001907348633
    5. 'Word' → logprob: -17.875001907348633
    6. '_words' → logprob: -18.750001907348633
    7. '_w' → logprob: -18.750001907348633
    8. '_name' → logprob: -19.250001907348633
    9. '_WORD' → logprob: -19.250001907348633
    10. '_line' → logprob: -19.875001907348633

Token 510: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '.=' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '=

' → logprob: -18.001928329467773
    6. ' +=' → logprob: -18.376928329467773
    7. '.' → logprob: -18.376928329467773
    8. '＝' → logprob: -18.376928329467773
    9. '=}' → logprob: -18.751928329467773
    10. '=end' → logprob: -19.251928329467773

Token 511: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.00030066570616327226
    2. ' my' → logprob: -8.500300407409668
    3. 'start' → logprob: -9.250300407409668
    4. 'last' → logprob: -14.625300407409668
    5. ' start' → logprob: -15.000300407409668
    6. '	my' → logprob: -17.375301361083984
    7. ' ' → logprob: -17.375301361083984
    8. 'm' → logprob: -17.500301361083984
    9. 'word' → logprob: -17.875301361083984
    10. 'mys' → logprob: -17.875301361083984

Token 512: '_word' (ID: 32074)
  Prédit: '_word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.0011709370883181691
    2. 'word' → logprob: -6.751171112060547
    3. 'Word' → logprob: -14.751171112060547
    4. '_' → logprob: -16.251171112060547
    5. '_char' → logprob: -16.751171112060547
    6. '_w' → logprob: -17.001171112060547
    7. ' word' → logprob: -17.376171112060547
    8. 'w' → logprob: -18.376171112060547
    9. '-word' → logprob: -18.751171112060547
    10. 'my' → logprob: -18.876171112060547


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 510
Tokens correctement prédits (1ère position, stricte): 197
Tokens correctement prédits (1ère position, avec adaptation): 211
Tokens correctement prédits (top 10): 418
Précision stricte (1ère position): 38.63%
Précision adaptée (1ère position): 41.37%
Précision (top 10): 81.96%
================================================================================
