================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Programme pour compter le nombre de chaînes palindromes dans des entrées multiples
# Chaque ligne contient une chaîne composée de caractères alphabétiques en demi-largeur
# Les chaînes peuvent contenir jusqu'à 100 caractères, et il y en a au plus 50
# Une chaîne de un seul caractère est considérée comme un palindrome

def is_palindrome(s):
    """
    Vérifie si une chaîne s est un palindrome.
    Un palindrome est identique lu de gauche à droite ou de droite à gauche.
    """
    return s == s[::-1]  # La chaîne inversée doit être identique à la chaîne originale

def main():
    count = 0  # Compteur pour le nombre de palindromes
    
    try:
        while True:
            line = input()
            if line == '':
                # Ligne vide, on arrête la lecture
                break
            
            # Vérification que la ligne est composée uniquement de demi-largeur alphabets
            # et que sa longueur est au plus 100
            if len(line) <= 100 and line.isascii() and line.isalpha():
                # Si la chaîne est palindrome, incrémenter le compteur
                if is_palindrome(line):
                    count += 1
            else:
                # Si la ligne ne respecte pas les contraintes, on peut choisir d'ignorer
                # ou sortir, ici on ignore simplement
                pass
    except EOFError:
        # Fin des entrées standard atteinte
        pass
    
    # Affichage du nombre de chaînes palindromes trouvées
    print(count)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Programme' (ID: 50667)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' compter' (ID: 81694)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.7201563715934753
    2. ' calcul' → logprob: -0.8451563715934753
    3. ' afficher' → logprob: -3.59515643119812
    4. ' compter' → logprob: -4.595156192779541
    5. 'aff' → logprob: -5.220156192779541
    6. ' le' → logprob: -5.345156192779541
    7. ' tr' → logprob: -5.595156192779541
    8. ' l' → logprob: -5.845156192779541
    9. 'le' → logprob: -5.970156192779541
    10. 'comp' → logprob: -5.970156192779541

Token 4: ' le' (ID: 505)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2390063852071762
    2. 'les' → logprob: -2.614006280899048
    3. '_le' → logprob: -3.239006280899048
    4. ' le' → logprob: -3.739006280899048
    5. ' ' → logprob: -3.864006280899048
    6. ' les' → logprob: -3.989006280899048
    7. 'le' → logprob: -4.114006519317627
    8. '#' → logprob: -4.989006519317627
    9. 's' → logprob: -6.364006519317627
    10. '```' → logprob: -6.489006519317627

Token 5: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.021606072783470154
    2. 's' → logprob: -4.396605968475342
    3. ' nombre' → logprob: -5.146605968475342
    4. 'n' → logprob: -6.396605968475342
    5. 'nb' → logprob: -7.396605968475342
    6. ' ' → logprob: -8.5216064453125
    7. 'nbr' → logprob: -8.8966064453125
    8. ' nombres' → logprob: -9.0216064453125
    9. 'nom' → logprob: -9.3966064453125
    10. '#' → logprob: -9.5216064453125

Token 6: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3027077913284302
    2. ' ' → logprob: -1.8027077913284302
    3. 's' → logprob: -3.6777076721191406
    4. 'd' → logprob: -3.9277076721191406
    5. ' de' → logprob: -4.177707672119141
    6. '\' → logprob: -4.802707672119141
    7. ' d' → logprob: -4.927707672119141
    8. '_de' → logprob: -5.177707672119141
    9. '#' → logprob: -5.427707672119141
    10. '```' → logprob: -5.802707672119141

Token 7: ' chaînes' (ID: 179904)
  Prédit: ' mots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mots' → logprob: -0.8493457436561584
    2. 'm' → logprob: -1.3493456840515137
    3. 'voy' → logprob: -2.2243456840515137
    4. ' lignes' → logprob: -3.2243456840515137
    5. 'v' → logprob: -3.5993456840515137
    6. 'l' → logprob: -3.5993456840515137
    7. ' ' → logprob: -3.7243456840515137
    8. '\n' → logprob: -3.8493456840515137
    9. ' voy' → logprob: -4.599345684051514
    10. ' caractères' → logprob: -4.849345684051514

Token 8: ' pal' (ID: 5337)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9367420673370361
    2. '\' → logprob: -1.0617420673370361
    3. '_' → logprob: -2.311742067337036
    4. '\n' → logprob: -2.561742067337036
    5. ' ' → logprob: -3.811742067337036
    6. ':' → logprob: -3.936742067337036
    7. ' \' → logprob: -4.311741828918457
    8. ' :' → logprob: -4.811741828918457
    9. '```' → logprob: -5.436741828918457
    10. ' de' → logprob: -6.061741828918457

Token 9: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.028409508988261223
    2. '```' → logprob: -4.528409481048584
    3. 'indrome' → logprob: -4.653409481048584
    4. '``' → logprob: -5.903409481048584
    5. 'in' → logprob: -7.028409481048584
    6. 'í' → logprob: -7.278409481048584
    7. '\' → logprob: -7.778409481048584
    8. '_' → logprob: -7.778409481048584
    9. '#' → logprob: -7.903409481048584
    10. '`' → logprob: -7.903409481048584

Token 10: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.4951538145542145
    2. 'ro' → logprob: -1.245153784751892
    3. 'r' → logprob: -2.4951539039611816
    4. '`' → logprob: -4.995153903961182
    5. '```' → logprob: -5.870153903961182
    6. '\' → logprob: -6.245153903961182
    7. '``' → logprob: -6.370153903961182
    8. 'rom' → logprob: -6.620153903961182
    9. '#' → logprob: -7.120153903961182
    10. '_' → logprob: -7.245153903961182

Token 11: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9307127594947815
    2. ':' → logprob: -2.0557126998901367
    3. '```' → logprob: -2.1807126998901367
    4. '\' → logprob: -2.3057126998901367
    5. '_' → logprob: -2.6807126998901367
    6. 'def' → logprob: -3.5557126998901367
    7. ' ' → logprob: -3.5557126998901367
    8. '#' → logprob: -3.6807126998901367
    9. ' :' → logprob: -3.8057126998901367
    10. '.' → logprob: -4.180712699890137

Token 12: ' des' (ID: 731)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.6269422769546509
    2. ' une' → logprob: -1.5019422769546509
    3. ' un' → logprob: -2.0019421577453613
    4. 'un' → logprob: -2.7519421577453613
    5. ' ' → logprob: -3.7519421577453613
    6. 'le' → logprob: -5.126942157745361
    7. ' la' → logprob: -5.376942157745361
    8. ' le' → logprob: -5.626942157745361
    9. 'la' → logprob: -6.376942157745361
    10. '```' → logprob: -6.751942157745361

Token 13: ' entr' (ID: 7072)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8894113898277283
    2. '_' → logprob: -1.014411449432373
    3. ' chaînes' → logprob: -2.014411449432373
    4. '\' → logprob: -4.514411449432373
    5. ' ' → logprob: -4.514411449432373
    6. '   ' → logprob: -4.514411449432373
    7. ' lignes' → logprob: -4.639411449432373
    8. ' espaces' → logprob: -5.139411449432373
    9. ' la' → logprob: -5.514411449432373
    10. '```' → logprob: -5.514411449432373

Token 14: 'ées' (ID: 5161)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15998868644237518
    2. 'ées' → logprob: -2.9099886417388916
    3. 't' → logprob: -3.7849886417388916
    4. 'êt' → logprob: -3.9099886417388916
    5. 'ê' → logprob: -4.159988880157471
    6. 'é' → logprob: -4.659988880157471
    7. 'êtes' → logprob: -5.534988880157471
    8. '#' → logprob: -5.659988880157471
    9. '```' → logprob: -5.909988880157471
    10. '�' → logprob: -6.534988880157471

Token 15: ' multiples' (ID: 70720)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2218875885009766
    2. ':' → logprob: -2.0968875885009766
    3. '\' → logprob: -2.2218875885009766
    4. '```' → logprob: -2.4718875885009766
    5. '#' → logprob: -2.5968875885009766
    6. ''''' → logprob: -2.8468875885009766
    7. ' ' → logprob: -2.9718875885009766
    8. 's' → logprob: -3.0968875885009766
    9. 'def' → logprob: -3.2218875885009766
    10. 'd' → logprob: -3.9718875885009766

Token 16: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7798808813095093
    2. '```' → logprob: -1.6548808813095093
    3. '
' → logprob: -1.9048808813095093
    4. '\n' → logprob: -2.779881000518799
    5. ':' → logprob: -2.904881000518799
    6. '#' → logprob: -3.654881000518799
    7. 'def' → logprob: -4.279881000518799
    8. 'n' → logprob: -4.779881000518799
    9. 's' → logprob: -5.029881000518799
    10. 'd' → logprob: -5.404881000518799

Token 17: '#' (ID: 2)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.1112799644470215
    2. '
' → logprob: -1.8612799644470215
    3. ':' → logprob: -2.1112799644470215
    4. '#' → logprob: -2.1112799644470215
    5. 'd' → logprob: -2.3612799644470215
    6. 'def' → logprob: -2.8612799644470215
    7. '\' → logprob: -2.9862799644470215
    8. 'n' → logprob: -3.6112799644470215
    9. '\n' → logprob: -3.8612799644470215
    10. 'i' → logprob: -5.6112799644470215

Token 18: ' Chaque' (ID: 94758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3551510572433472
    2. '\n' → logprob: -1.6051510572433472
    3. ' 
' → logprob: -1.7301510572433472
    4. '
' → logprob: -1.7301510572433472
    5. ' 

' → logprob: -2.9801511764526367
    6. '```' → logprob: -3.1051511764526367
    7. '#' → logprob: -3.2301511764526367
    8. '  
' → logprob: -4.480151176452637
    9. '\' → logprob: -4.605151176452637
    10. ' \' → logprob: -5.230151176452637

Token 19: ' ligne' (ID: 19583)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01909058913588524
    2. '_' → logprob: -4.14409065246582
    3. ' ' → logprob: -7.39409065246582
    4. '\' → logprob: -7.89409065246582
    5. 'entrée' → logprob: -8.01909065246582
    6. ' _' → logprob: -8.26909065246582
    7. ' entr' → logprob: -8.39409065246582
    8. '  ' → logprob: -8.51909065246582
    9. 'l' → logprob: -8.64409065246582
    10. ' \' → logprob: -8.76909065246582

Token 20: ' contient' (ID: 89067)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02504894696176052
    2. ' \' → logprob: -5.150048732757568
    3. 's' → logprob: -5.275048732757568
    4. '\' → logprob: -5.775048732757568
    5. ''' → logprob: -6.650048732757568
    6. ' =' → logprob: -7.025048732757568
    7. ' est' → logprob: -7.150048732757568
    8. ' :' → logprob: -7.275048732757568
    9. ' d' → logprob: -7.275048732757568
    10. '_' → logprob: -7.400048732757568

Token 21: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.2467411309480667
    2. 'une' → logprob: -1.6217411756515503
    3. ' un' → logprob: -4.62174129486084
    4. ' ' → logprob: -5.49674129486084
    5. ' le' → logprob: -6.12174129486084
    6. 'le' → logprob: -7.12174129486084
    7. 'au' → logprob: -7.24674129486084
    8. ' la' → logprob: -7.37174129486084
    9. 'un' → logprob: -7.49674129486084
    10. ' au' → logprob: -7.99674129486084

Token 22: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.09842503070831299
    2. 'chaine' → logprob: -2.8484249114990234
    3. 'cha' → logprob: -4.223424911499023
    4. ' ' → logprob: -4.848424911499023
    5. ' chaine' → logprob: -5.348424911499023
    6. ' phrase' → logprob: -6.223424911499023
    7. 's' → logprob: -6.598424911499023
    8. '   ' → logprob: -6.598424911499023
    9. 'entrée' → logprob: -6.973424911499023
    10. 'suite' → logprob: -7.348424911499023

Token 23: ' composée' (ID: 146865)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6448614001274109
    2. 'def' → logprob: -1.0198614597320557
    3. 'n' → logprob: -2.5198614597320557
    4. 'i' → logprob: -4.394861221313477
    5. '```' → logprob: -4.519861221313477
    6. '#' → logprob: -6.019861221313477
    7. 'for' → logprob: -6.394861221313477
    8. 's' → logprob: -6.519861221313477
    9. '
' → logprob: -6.894861221313477
    10. '\' → logprob: -7.269861221313477

Token 24: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7327840924263
    2. '_d' → logprob: -2.1077840328216553
    3. '_' → logprob: -2.2327840328216553
    4. ' de' → logprob: -2.3577840328216553
    5. ' ' → logprob: -2.8577840328216553
    6. '_de' → logprob: -2.9827840328216553
    7. 'd' → logprob: -3.1077840328216553
    8. 'de' → logprob: -3.6077840328216553
    9. 's' → logprob: -4.482784271240234
    10. '_s' → logprob: -6.607784271240234

Token 25: ' caractères' (ID: 183106)
  Prédit: ' lettres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -0.9797218441963196
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.6047217845916748
    3. 'car' → logprob: -1.9797217845916748
    4. ' caractères' → logprob: -2.104721784591675
    5. 'a' → logprob: -2.729721784591675
    6. 'lett' → logprob: -2.979721784591675
    7. ' minus' → logprob: -4.854722023010254
    8. ' ' → logprob: -4.979722023010254
    9. ' car' → logprob: -5.479722023010254
    10. 'l' → logprob: -5.604722023010254

Token 26: ' alph' (ID: 133679)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.72899329662323
    2. ' 
' → logprob: -2.1039934158325195
    3. 'n' → logprob: -2.6039934158325195
    4. 'i' → logprob: -2.7289934158325195
    5. 'def' → logprob: -2.7289934158325195
    6. '
' → logprob: -3.2289934158325195
    7. '#' → logprob: -3.3539934158325195
    8. '```' → logprob: -3.6039934158325195
    9. '\' → logprob: -3.8539934158325195
    10. 's' → logprob: -3.8539934158325195

Token 27: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.07223372906446457
    2. 'a' → logprob: -2.6972336769104004
    3. '#' → logprob: -6.6972336769104
    4. '```' → logprob: -8.447234153747559
    5. 'étiques' → logprob: -8.697234153747559
    6. 'аб' → logprob: -9.572234153747559
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.947234153747559
    8. 'abet' → logprob: -9.947234153747559
    9. 'b' → logprob: -9.947234153747559
    10. ' ab' → logprob: -10.072234153747559

Token 28: 'étiques' (ID: 124984)
  Prédit: 'étiques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étiques' → logprob: -0.003496246412396431
    2. 'et' → logprob: -6.628496170043945
    3. 'é' → logprob: -7.253496170043945
    4. 'étique' → logprob: -7.253496170043945
    5. '#' → logprob: -7.628496170043945
    6. '`' → logprob: -10.003496170043945
    7. 'e' → logprob: -10.003496170043945
    8. 'è' → logprob: -10.253496170043945
    9. '```' → logprob: -10.253496170043945
    10. 'ets' → logprob: -11.128496170043945

Token 29: ' en' (ID: 469)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3842969238758087
    2. 'n' → logprob: -2.3842968940734863
    3. ':' → logprob: -2.7592968940734863
    4. 'i' → logprob: -3.1342968940734863
    5. 'def' → logprob: -3.2592968940734863
    6. '```' → logprob: -4.009296894073486
    7. ' 
' → logprob: -4.259296894073486
    8. '#' → logprob: -4.259296894073486
    9. '\' → logprob: -4.509296894073486
    10. '
' → logprob: -4.884296894073486

Token 30: ' demi' (ID: 61771)
  Prédit: ' maj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maj' → logprob: -0.9734030961990356
    2. 'minus' → logprob: -1.5984030961990356
    3. ' minus' → logprob: -1.7234030961990356
    4. 'maj' → logprob: -2.223402976989746
    5. 's' → logprob: -3.348402976989746
    6. 'min' → logprob: -3.348402976989746
    7. ' min' → logprob: -3.848402976989746
    8. ' ' → logprob: -4.473402976989746
    9. 'ma' → logprob: -4.598402976989746
    10. '```' → logprob: -5.098402976989746

Token 31: '-large' (ID: 87117)
  Prédit: '-m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-m' → logprob: -1.1596322059631348
    2. '-' → logprob: -2.0346322059631348
    3. 'e' → logprob: -2.0346322059631348
    4. '-l' → logprob: -2.9096322059631348
    5. '-c' → logprob: -2.9096322059631348
    6. 'es' → logprob: -3.1596322059631348
    7. '-car' → logprob: -3.2846322059631348
    8. '-é' → logprob: -3.2846322059631348
    9. 'c' → logprob: -3.6596322059631348
    10. '-es' → logprob: -4.159632205963135

Token 32: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.14677056670188904
    2. 'u' → logprob: -2.021770477294922
    3. 'r' → logprob: -6.146770477294922
    4. 'urs' → logprob: -7.521770477294922
    5. 'width' → logprob: -8.271770477294922
    6. 'ure' → logprob: -8.771770477294922
    7. 'e' → logprob: -9.021770477294922
    8. ' ' → logprob: -9.146770477294922
    9. '```' → logprob: -9.459270477294922
    10. 'urn' → logprob: -9.584270477294922

Token 33: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.248908519744873
    2. ':' → logprob: -1.373908519744873
    3. '```' → logprob: -2.248908519744873
    4. 'n' → logprob: -2.498908519744873
    5. 'def' → logprob: -2.498908519744873
    6. '\' → logprob: -3.123908519744873
    7. '
' → logprob: -3.248908519744873
    8. 'i' → logprob: -3.248908519744873
    9. '#' → logprob: -3.998908519744873
    10. ' 
' → logprob: -4.123908519744873

Token 34: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5466251969337463
    2. ':' → logprob: -1.6716251373291016
    3. '\' → logprob: -3.0466251373291016
    4. '#' → logprob: -3.0466251373291016
    5. 'def' → logprob: -3.0466251373291016
    6. '```' → logprob: -3.1716251373291016
    7. 'i' → logprob: -4.171625137329102
    8. 'n' → logprob: -4.296625137329102
    9. '
' → logprob: -5.671625137329102
    10. ' 
' → logprob: -6.171625137329102

Token 35: ' Les' (ID: 7029)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015085223130881786
    2. 'def' → logprob: -5.140085220336914
    3. 'n' → logprob: -5.265085220336914
    4. 'i' → logprob: -5.890085220336914
    5. '#' → logprob: -7.765085220336914
    6. '```' → logprob: -8.390085220336914
    7. '\' → logprob: -8.765085220336914
    8. '
' → logprob: -9.265085220336914
    9. ' 
' → logprob: -9.265085220336914
    10. 'de' → logprob: -9.640085220336914

Token 36: ' chaînes' (ID: 179904)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07487659156322479
    2. ' espaces' → logprob: -3.949876546859741
    3. ' \' → logprob: -4.19987678527832
    4. ' entr' → logprob: -4.57487678527832
    5. '  ' → logprob: -4.57487678527832
    6. '_' → logprob: -5.94987678527832
    7. 'l' → logprob: -6.19987678527832
    8. '\' → logprob: -6.44987678527832
    9. ' chaînes' → logprob: -6.44987678527832
    10. ' #' → logprob: -6.57487678527832

Token 37: ' peuvent' (ID: 21321)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20607484877109528
    2. '_' → logprob: -2.4560749530792236
    3. 's' → logprob: -3.2060749530792236
    4. ' _' → logprob: -3.8310749530792236
    5. ' =' → logprob: -4.2060747146606445
    6. ' ,' → logprob: -5.2060747146606445
    7. ' s' → logprob: -5.4560747146606445
    8. ',' → logprob: -6.5810747146606445
    9. ' ' → logprob: -6.5810747146606445
    10. ' sont' → logprob: -6.7060747146606445

Token 38: ' conten' (ID: 23523)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -1.3640949726104736
    2. ' conten' → logprob: -1.3640949726104736
    3. ' être' → logprob: -1.6140949726104736
    4. ' comport' → logprob: -1.9890949726104736
    5. ' s' → logprob: -4.1140947341918945
    6. ' avoir' → logprob: -4.1140947341918945
    7. 'con' → logprob: -4.1140947341918945
    8. 's' → logprob: -4.2390947341918945
    9. ' ' → logprob: -4.4890947341918945
    10. 'conten' → logprob: -4.7390947341918945

Token 39: 'ir' (ID: 380)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.01583058573305607
    2. 'u' → logprob: -4.6408305168151855
    3. 'ir' → logprob: -6.1408305168151855
    4. 'r' → logprob: -7.1408305168151855
    5. 'ues' → logprob: -7.1408305168151855
    6. 'e' → logprob: -7.5158305168151855
    7. '#' → logprob: -7.6408305168151855
    8. 'ter' → logprob: -8.390830993652344
    9. '\' → logprob: -8.890830993652344
    10. 's' → logprob: -9.515830993652344

Token 40: ' jusqu' (ID: 21961)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.33809545636177063
    2. 'des' → logprob: -1.9630954265594482
    3. '_' → logprob: -2.9630954265594482
    4. ' ' → logprob: -3.4630954265594482
    5. 's' → logprob: -4.088095664978027
    6. 'a' → logprob: -4.963095664978027
    7. 'à' → logprob: -5.213095664978027
    8. ' plusieurs' → logprob: -5.213095664978027
    9. 'un' → logprob: -5.838095664978027
    10. 'es' → logprob: -6.213095664978027

Token 41: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.19813978672027588
    2. ' à' → logprob: -2.0731396675109863
    3. 'à' → logprob: -3.0731396675109863
    4. '’à' → logprob: -4.948139667510986
    5. 'a' → logprob: -8.323140144348145
    6. ' ' → logprob: -9.073140144348145
    7. '```' → logprob: -9.948140144348145
    8. '  ' → logprob: -10.573140144348145
    9. '`' → logprob: -10.573140144348145
    10. '100' → logprob: -10.698140144348145

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023753056302666664
    2. '100' → logprob: -4.0237531661987305
    3. '50' → logprob: -6.1487531661987305
    4. '10' → logprob: -6.3987531661987305
    5. '20' → logprob: -6.8987531661987305
    6. '32' → logprob: -8.39875316619873
    7. '1' → logprob: -9.27375316619873
    8. '25' → logprob: -9.89875316619873
    9. '200' → logprob: -9.89875316619873
    10. '  ' → logprob: -10.14875316619873

Token 43: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.33971571922302246
    2. '10' → logprob: -1.4647157192230225
    3. '20' → logprob: -3.9647157192230225
    4. '50' → logprob: -4.214715957641602
    5. '200' → logprob: -4.839715957641602
    6. ' ' → logprob: -5.089715957641602
    7. '500' → logprob: -5.714715957641602
    8. '1' → logprob: -5.964715957641602
    9. '2' → logprob: -7.339715957641602
    10. '30' → logprob: -7.464715957641602

Token 44: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.31983810663223267
    2. 'car' → logprob: -1.944838047027588
    3. '0' → logprob: -2.694838047027588
    4. '_' → logprob: -4.069838047027588
    5. ' ' → logprob: -4.319838047027588
    6. 's' → logprob: -4.819838047027588
    7. ' caracteres' → logprob: -5.319838047027588
    8. '_car' → logprob: -5.444838047027588
    9. ' car' → logprob: -5.444838047027588
    10. ' caract' → logprob: -5.944838047027588

Token 45: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9636288285255432
    2. 'def' → logprob: -1.4636287689208984
    3. 'n' → logprob: -1.7136287689208984
    4. '\' → logprob: -2.5886287689208984
    5. '```' → logprob: -2.9636287689208984
    6. 'i' → logprob: -3.4636287689208984
    7. '
' → logprob: -4.213628768920898
    8. ':' → logprob: -4.463628768920898
    9. 'import' → logprob: -5.338628768920898
    10. '#' → logprob: -5.338628768920898

Token 46: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0467559099197388
    2. '#' → logprob: -2.046755790710449
    3. ' 
' → logprob: -2.296755790710449
    4. 's' → logprob: -2.546755790710449
    5. 'def' → logprob: -2.921755790710449
    6. '\n' → logprob: -2.921755790710449
    7. '\' → logprob: -3.046755790710449
    8. 'n' → logprob: -3.171755790710449
    9. 'import' → logprob: -3.671755790710449
    10. '```' → logprob: -4.171755790710449

Token 47: ' il' (ID: 1793)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.5490578413009644
    2. 'le' → logprob: -1.7990578413009644
    3. ' les' → logprob: -2.049057960510254
    4. ' la' → logprob: -2.799057960510254
    5. ' il' → logprob: -2.799057960510254
    6. 'les' → logprob: -2.924057960510254
    7. '#' → logprob: -3.299057960510254
    8. ' jusqu' → logprob: -3.299057960510254
    9. 's' → logprob: -3.549057960510254
    10. ' plusieurs' → logprob: -4.049057960510254

Token 48: ' y' (ID: 342)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0246541500091553
    2. ' faut' → logprob: -1.0246541500091553
    3. 's' → logprob: -2.2746541500091553
    4. ' est' → logprob: -2.8996541500091553
    5. ' y' → logprob: -3.5246541500091553
    6. ' faudra' → logprob: -3.7746541500091553
    7. 'f' → logprob: -4.024654388427734
    8. 'n' → logprob: -4.149654388427734
    9. ' peut' → logprob: -4.399654388427734
    10. 'est' → logprob: -4.774654388427734

Token 49: ' en' (ID: 469)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7027416229248047
    2. 'a' → logprob: -0.9527416229248047
    3. ''a' → logprob: -2.2027416229248047
    4. 's' → logprob: -5.827741622924805
    5. '#' → logprob: -6.702741622924805
    6. 'space' → logprob: -7.327741622924805
    7. '_a' → logprob: -7.577741622924805
    8. '#a' → logprob: -7.702741622924805
    9. '```' → logprob: -8.077741622924805
    10. ' ' → logprob: -8.077741622924805

Token 50: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5049812197685242
    2. 'a' → logprob: -2.254981279373169
    3. ' avoir' → logprob: -2.254981279373169
    4. ' jusqu' → logprob: -2.379981279373169
    5. ' peut' → logprob: -3.254981279373169
    6. 'ont' → logprob: -4.62998104095459
    7. '#' → logprob: -5.00498104095459
    8. ' ' → logprob: -5.37998104095459
    9. ' au' → logprob: -5.50498104095459
    10. ' peuvent' → logprob: -5.62998104095459

Token 51: ' au' (ID: 2791)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -1.0025556087493896
    2. ' plusieurs' → logprob: -1.5025556087493896
    3. ' au' → logprob: -1.7525556087493896
    4. ' ' → logprob: -2.0025556087493896
    5. ' un' → logprob: -3.5025556087493896
    6. ' multiple' → logprob: -4.377555847167969
    7. ' plus' → logprob: -4.627555847167969
    8. '100' → logprob: -4.752555847167969
    9. 'au' → logprob: -5.252555847167969
    10. '10' → logprob: -5.377555847167969

Token 52: ' plus' (ID: 2932)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.16182191669940948
    2. 'plus' → logprob: -2.5368218421936035
    3. ' moins' → logprob: -3.1618218421936035
    4. 'maximum' → logprob: -4.2868218421936035
    5. 'max' → logprob: -5.6618218421936035
    6. ' maximum' → logprob: -5.6618218421936035
    7. ' plus' → logprob: -6.1618218421936035
    8. '  ' → logprob: -6.5368218421936035
    9. '   ' → logprob: -6.9118218421936035
    10. 'total' → logprob: -7.5368218421936035

Token 53: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6491686701774597
    2. '100' → logprob: -1.1491687297821045
    3. ' ' → logprob: -2.1491687297821045
    4. '1' → logprob: -3.5241687297821045
    5. '5' → logprob: -5.399168491363525
    6. '20' → logprob: -5.524168491363525
    7. '2' → logprob: -6.024168491363525
    8. '50' → logprob: -6.774168491363525
    9. '  ' → logprob: -7.899168491363525
    10. '200' → logprob: -8.024168968200684

Token 54: '50' (ID: 1434)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.27170348167419434
    2. '100' → logprob: -1.6467034816741943
    3. '1' → logprob: -3.5217034816741943
    4. '20' → logprob: -5.521703720092773
    5. ' ' → logprob: -5.646703720092773
    6. '5' → logprob: -5.646703720092773
    7. '50' → logprob: -5.771703720092773
    8. '3' → logprob: -7.896703720092773
    9. '2' → logprob: -7.896703720092773
    10. '500' → logprob: -8.771703720092773

Token 55: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5205527544021606
    2. '```' → logprob: -2.020552635192871
    3. '#' → logprob: -2.895552635192871
    4. ':' → logprob: -3.020552635192871
    5. '
' → logprob: -3.020552635192871
    6. 'n' → logprob: -3.145552635192871
    7. 'def' → logprob: -3.645552635192871
    8. ' 
' → logprob: -4.145552635192871
    9. 'i' → logprob: -4.145552635192871
    10. '\' → logprob: -5.270552635192871

Token 56: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07023061811923981
    2. 'i' → logprob: -3.445230722427368
    3. 'def' → logprob: -3.945230722427368
    4. '```' → logprob: -4.945230484008789
    5. 'n' → logprob: -5.195230484008789
    6. 'a' → logprob: -6.320230484008789
    7. '#' → logprob: -7.320230484008789
    8. 'de' → logprob: -7.445230484008789
    9. 'import' → logprob: -8.820230484008789
    10. 's' → logprob: -9.320230484008789

Token 57: ' Une' (ID: 19758)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.019561689347028732
    2. 'i' → logprob: -4.769561767578125
    3. 'def' → logprob: -4.894561767578125
    4. 'n' → logprob: -6.644561767578125
    5. '```' → logprob: -7.019561767578125
    6. '#' → logprob: -7.019561767578125
    7. 'import' → logprob: -8.769561767578125
    8. 'de' → logprob: -10.019561767578125
    9. '\' → logprob: -10.769561767578125
    10. 'a' → logprob: -11.019561767578125

Token 58: ' chaîne' (ID: 89288)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.184678554534912
    2. ' chaîne' → logprob: -1.684678554534912
    3. 'n' → logprob: -2.059678554534912
    4. 'def' → logprob: -2.434678554534912
    5. 'import' → logprob: -2.934678554534912
    6. ' fois' → logprob: -3.184678554534912
    7. ' ' → logprob: -3.434678554534912
    8. ' chaine' → logprob: -4.184678554534912
    9. 'l' → logprob: -4.559678554534912
    10. ' boucle' → logprob: -4.559678554534912

Token 59: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29694056510925293
    2. ' ' → logprob: -1.671940565109253
    3. '_' → logprob: -3.671940565109253
    4. ' =' → logprob: -3.671940565109253
    5. ' s' → logprob: -4.921940803527832
    6. 'def' → logprob: -6.046940803527832
    7. '=' → logprob: -6.671940803527832
    8. ' de' → logprob: -7.046940803527832
    9. 'import' → logprob: -7.046940803527832
    10. '#' → logprob: -7.546940803527832

Token 60: ' un' (ID: 537)
  Prédit: ' caractères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.6258829236030579
    2. 'car' → logprob: -1.000882863998413
    3. ' caracteres' → logprob: -3.875882863998413
    4. 's' → logprob: -4.750883102416992
    5. ' ' → logprob: -4.750883102416992
    6. ' caractère' → logprob: -5.125883102416992
    7. 't' → logprob: -5.125883102416992
    8. 'pal' → logprob: -5.375883102416992
    9. ' car' → logprob: -5.500883102416992
    10. 'n' → logprob: -5.500883102416992

Token 61: ' seul' (ID: 33041)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.5683298110961914
    2. 'car' → logprob: -1.4433298110961914
    3. ' ' → logprob: -2.8183298110961914
    4. ' seul' → logprob: -3.0683298110961914
    5. ' car' → logprob: -3.4433298110961914
    6. ' caract' → logprob: -3.6933298110961914
    7. 'e' → logprob: -4.318329811096191
    8. ' seule' → logprob: -5.818329811096191
    9. '```' → logprob: -5.818329811096191
    10. ' caractères' → logprob: -5.943329811096191

Token 62: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.26543301343917847
    2. ' caractère' → logprob: -1.5154330730438232
    3. ' caract' → logprob: -4.890432834625244
    4. ' ' → logprob: -6.390432834625244
    5. ' caractères' → logprob: -6.640432834625244
    6. ' car' → logprob: -6.890432834625244
    7. 'c' → logprob: -7.515432834625244
    8. 'char' → logprob: -8.890433311462402
    9. ' token' → logprob: -8.890433311462402
    10. 'e' → logprob: -8.890433311462402

Token 63: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.0955161526799202
    2. 'est' → logprob: -2.9705162048339844
    3. 's' → logprob: -3.7205162048339844
    4. '#' → logprob: -5.345516204833984
    5. ' n' → logprob: -5.595516204833984
    6. ' ' → logprob: -5.970516204833984
    7. 'n' → logprob: -6.595516204833984
    8. ' is' → logprob: -7.095516204833984
    9. ' ' → logprob: -8.220516204833984
    10. '```' → logprob: -8.220516204833984

Token 64: ' considér' (ID: 68502)
  Prédit: ' aussi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aussi' → logprob: -1.159935712814331
    2. ' considér' → logprob: -1.284935712814331
    3. ' également' → logprob: -1.659935712814331
    4. 'égal' → logprob: -2.784935712814331
    5. ' toujours' → logprob: -3.284935712814331
    6. 'consider' → logprob: -3.409935712814331
    7. 'a' → logprob: -3.784935712814331
    8. ' considéré' → logprob: -4.40993595123291
    9. ' consid' → logprob: -4.65993595123291
    10. ' un' → logprob: -4.90993595123291

Token 65: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5781259536743164
    2. 'ée' → logprob: -0.8281259536743164
    3. 'e' → logprob: -6.203125953674316
    4. '#' → logprob: -9.453125953674316
    5. '�' → logprob: -10.828125953674316
    6. 'è' → logprob: -11.328125953674316
    7. '```' → logprob: -11.953125953674316
    8. 'rée' → logprob: -12.078125953674316
    9. 'ê' → logprob: -12.828125953674316
    10. 'ç' → logprob: -13.078125953674316

Token 66: ' comme' (ID: 7971)
  Prédit: ' comme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comme' → logprob: -0.0859127789735794
    2. 'comme' → logprob: -2.7109127044677734
    3. ' ' → logprob: -5.460912704467773
    4. ' as' → logprob: -5.835912704467773
    5. '  ' → logprob: -6.460912704467773
    6. 's' → logprob: -6.585912704467773
    7. '<|end|>' → logprob: -7.085912704467773
    8. '```' → logprob: -7.335912704467773
    9. ' ' → logprob: -7.710912704467773
    10. '_pal' → logprob: -7.710912704467773

Token 67: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.5053790211677551
    2. ' palindrome' → logprob: -1.7553789615631104
    3. 'un' → logprob: -1.8803789615631104
    4. 'pal' → logprob: -3.2553789615631104
    5. ' une' → logprob: -4.3803791999816895
    6. 'une' → logprob: -4.7553791999816895
    7. ' pal' → logprob: -4.8803791999816895
    8. 'a' → logprob: -6.3803791999816895
    9. ' toujours' → logprob: -8.005378723144531
    10. ' ' → logprob: -8.255378723144531

Token 68: ' palindrome' (ID: 160469)
  Prédit: ' palindrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.028179366141557693
    2. 'pal' → logprob: -3.903179407119751
    3. ' pal' → logprob: -4.903179168701172
    4. '_pal' → logprob: -9.278179168701172
    5. 'a' → logprob: -10.653179168701172
    6. 'Palindrome' → logprob: -11.028179168701172
    7. ' ' → logprob: -11.028179168701172
    8. 'e' → logprob: -11.903179168701172
    9. '#' → logprob: -13.028179168701172
    10. ' a' → logprob: -13.153179168701172

Token 69: '

' (ID: 279)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4374884366989136
    2. ':' → logprob: -2.187488555908203
    3. 'i' → logprob: -2.687488555908203
    4. 'n' → logprob: -3.312488555908203
    5. 'def' → logprob: -3.312488555908203
    6. 'a' → logprob: -4.062488555908203
    7. '#' → logprob: -4.187488555908203
    8. '\' → logprob: -4.187488555908203
    9. '```' → logprob: -4.312488555908203
    10. '_' → logprob: -4.437488555908203

Token 70: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20662173628807068
    2. '```' → logprob: -3.0816216468811035
    3. 'i' → logprob: -3.2066216468811035
    4. 'n' → logprob: -3.2066216468811035
    5. 'def' → logprob: -3.2066216468811035
    6. 'a' → logprob: -4.3316216468811035
    7. '#' → logprob: -5.8316216468811035
    8. 'import' → logprob: -6.0816216468811035
    9. '\' → logprob: -8.081622123718262
    10. 'e' → logprob: -9.206622123718262

Token 71: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8138018250465393
    2. ' compter' → logprob: -1.3138017654418945
    3. ' _' → logprob: -2.4388017654418945
    4. ' is' → logprob: -2.4388017654418945
    5. ' ' → logprob: -2.6888017654418945
    6. ' count' → logprob: -4.3138017654418945
    7. ' pal' → logprob: -4.8138017654418945
    8. '_pal' → logprob: -4.9388017654418945
    9. ' ' → logprob: -5.3138017654418945
    10. '_count' → logprob: -5.9388017654418945

Token 72: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.00016599490481894463
    2. '_' → logprob: -8.750165939331055
    3. '_p' → logprob: -12.250165939331055
    4. ' _' → logprob: -13.125165939331055
    5. '_pa' → logprob: -15.250165939331055
    6. 'Palindrome' → logprob: -15.625165939331055
    7. '_prime' → logprob: -15.875165939331055
    8. 'pal' → logprob: -17.625165939331055
    9. ' palindrome' → logprob: -17.625165939331055
    10. '_str' → logprob: -17.875165939331055

Token 73: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.006611280143260956
    2. 'ind' → logprob: -5.131611347198486
    3. 'ndrome' → logprob: -8.256610870361328
    4. 'd' → logprob: -9.131610870361328
    5. '```' → logprob: -9.256610870361328
    6. 'id' → logprob: -9.881610870361328
    7. 'indre' → logprob: -9.881610870361328
    8. '_' → logprob: -9.881610870361328
    9. 'inder' → logprob: -11.381610870361328
    10. '   ' → logprob: -12.131610870361328

Token 74: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005114919506013393
    2. '(s' → logprob: -5.380115032196045
    3. '(string' → logprob: -8.505114555358887
    4. 's' → logprob: -9.255114555358887
    5. ' (' → logprob: -9.255114555358887
    6. '_' → logprob: -10.380114555358887
    7. '(str' → logprob: -10.755114555358887
    8. '(word' → logprob: -11.630114555358887
    9. '_string' → logprob: -11.755114555358887
    10. '(text' → logprob: -12.130114555358887

Token 75: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06219231337308884
    2. ')' → logprob: -2.81219220161438
    3. '[' → logprob: -8.9371919631958
    4. ':' → logprob: -9.9371919631958
    5. '):
' → logprob: -10.6871919631958
    6. ' ):' → logprob: -12.0621919631958
    7. 's' → logprob: -12.1871919631958
    8. '[]):' → logprob: -12.8121919631958
    9. '):

' → logprob: -13.6871919631958
    10. ')：' → logprob: -14.4371919631958

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006426189211197197
    2. ':' → logprob: -8.125642776489258
    3. ' return' → logprob: -8.125642776489258
    4. ' :' → logprob: -11.000642776489258
    5. '   ' → logprob: -11.125642776489258
    6. 'return' → logprob: -12.000642776489258
    7. ':
' → logprob: -12.625642776489258
    8. ':return' → logprob: -13.000642776489258
    9. '    ' → logprob: -13.250642776489258
    10. '	return' → logprob: -13.875642776489258

Token 77: ' """
' (ID: 7037)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39085835218429565
    2. '   ' → logprob: -1.5158584117889404
    3. 'return' → logprob: -2.2658584117889404
    4. ' s' → logprob: -9.51585865020752
    5. '    ' → logprob: -10.14085865020752
    6. '```' → logprob: -10.64085865020752
    7. 's' → logprob: -11.26585865020752
    8. '	return' → logprob: -12.89085865020752
    9. '    
' → logprob: -13.01585865020752
    10. ' for' → logprob: -13.14085865020752

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04597095400094986
    2. 'return' → logprob: -3.420970916748047
    3. 'Retour' → logprob: -5.295970916748047
    4. 'Returns' → logprob: -6.420970916748047
    5. 'if' → logprob: -6.920970916748047
    6. '"""' → logprob: -7.045970916748047
    7. 'Return' → logprob: -7.420970916748047
    8. 'v' → logprob: -7.670970916748047
    9. '       ' → logprob: -8.045970916748047
    10. '"""
' → logprob: -8.170970916748047

Token 79: ' Vér' (ID: 159169)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025695499032735825
    2. 'return' → logprob: -4.025695323944092
    3. 'if' → logprob: -5.775695323944092
    4. ' return' → logprob: -6.525695323944092
    5. '       ' → logprob: -7.025695323944092
    6. 'Retour' → logprob: -8.02569580078125
    7. ' if' → logprob: -8.15069580078125
    8. '"""' → logprob: -8.27569580078125
    9. '    ' → logprob: -8.40069580078125
    10. 'Return' → logprob: -8.65069580078125

Token 80: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.00016039233014453202
    2. 'ifi' → logprob: -9.250160217285156
    3. 'if' → logprob: -10.125160217285156
    4. 'ifier' → logprob: -11.750160217285156
    5. 'ifié' → logprob: -12.250160217285156
    6. 'ifiez' → logprob: -12.500160217285156
    7. 'i' → logprob: -13.125160217285156
    8. 'ify' → logprob: -13.250160217285156
    9. 'éf' → logprob: -13.750160217285156
    10. 'e' → logprob: -13.750160217285156

Token 81: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.07520769536495209
    2. ' if' → logprob: -2.7002077102661133
    3. '   ' → logprob: -5.825207710266113
    4. 'si' → logprob: -6.200207710266113
    5. ' ' → logprob: -8.950207710266113
    6. 'if' → logprob: -9.450207710266113
    7. '  ' → logprob: -10.825207710266113
    8. '    ' → logprob: -11.200207710266113
    9. 's' → logprob: -11.825207710266113
    10. 'Si' → logprob: -11.950207710266113

Token 82: ' une' (ID: 2463)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0346716046333313
    2. 's' → logprob: -3.4096715450286865
    3. ' la' → logprob: -7.409671783447266
    4. ' le' → logprob: -8.659671783447266
    5. ' un' → logprob: -8.784671783447266
    6. ' une' → logprob: -9.909671783447266
    7. '   ' → logprob: -10.784671783447266
    8. 'le' → logprob: -12.034671783447266
    9. ' ' → logprob: -12.159671783447266
    10. 'une' → logprob: -13.034671783447266

Token 83: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.06253715604543686
    2. ' chaine' → logprob: -3.68753719329834
    3. ' ' → logprob: -3.93753719329834
    4. '   ' → logprob: -5.31253719329834
    5. ' string' → logprob: -5.31253719329834
    6. 'chaine' → logprob: -6.06253719329834
    7. ' s' → logprob: -6.06253719329834
    8. 's' → logprob: -6.81253719329834
    9. '  ' → logprob: -9.06253719329834
    10. 'string' → logprob: -9.31253719329834

Token 84: ' s' (ID: 265)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5120956301689148
    2. ' s' → logprob: -1.0120956897735596
    3. 's' → logprob: -4.2620954513549805
    4. '(s' → logprob: -4.3870954513549805
    5. ' ' → logprob: -5.7620954513549805
    6. '   ' → logprob: -6.0120954513549805
    7. 'est' → logprob: -6.5120954513549805
    8. ' is' → logprob: -7.0120954513549805
    9. '_' → logprob: -7.3870954513549805
    10. ')' → logprob: -8.01209545135498

Token 85: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.1579555720090866
    2. 'est' → logprob: -2.0329556465148926
    3. ' ==' → logprob: -5.032955646514893
    4. '"""' → logprob: -5.782955646514893
    5. '   ' → logprob: -6.157955646514893
    6. '==' → logprob: -6.907955646514893
    7. ' ' → logprob: -7.407955646514893
    8. ' is' → logprob: -7.657955646514893
    9. '[::-' → logprob: -8.157955169677734
    10. ')' → logprob: -8.532955169677734

Token 86: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.032686006277799606
    2. ' palindrome' → logprob: -3.9076859951019287
    3. 'un' → logprob: -4.907686233520508
    4. 'pal' → logprob: -5.782686233520508
    5. ' pal' → logprob: -7.157686233520508
    6. ' une' → logprob: -8.282686233520508
    7. '_pal' → logprob: -8.407686233520508
    8. ' a' → logprob: -9.282686233520508
    9. ' ég' → logprob: -9.282686233520508
    10. '   ' → logprob: -9.782686233520508

Token 87: ' palindrome' (ID: 160469)
  Prédit: ' palindrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' palindrome' → logprob: -0.12366664409637451
    2. 'pal' → logprob: -2.248666763305664
    3. ' pal' → logprob: -4.623666763305664
    4. '_pal' → logprob: -7.248666763305664
    5. 'e' → logprob: -8.623666763305664
    6. 'Palindrome' → logprob: -10.373666763305664
    7. ' ' → logprob: -11.373666763305664
    8. 'p' → logprob: -11.998666763305664
    9. ' pali' → logprob: -12.373666763305664
    10. ' пал' → logprob: -12.373666763305664

Token 88: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7894032001495361
    2. ')' → logprob: -1.2894032001495361
    3. '"""' → logprob: -1.6644032001495361
    4. ' """' → logprob: -3.414403200149536
    5. ' """
' → logprob: -4.414402961730957
    6. '"' → logprob: -4.789402961730957
    7. ':' → logprob: -4.789402961730957
    8. '.' → logprob: -5.789402961730957
    9. ' )' → logprob: -5.914402961730957
    10. '"""
' → logprob: -6.414402961730957

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08415204286575317
    2. '"""' → logprob: -2.9591519832611084
    3. '"' → logprob: -4.2091522216796875
    4. '"""
' → logprob: -4.8341522216796875
    5. ' """
' → logprob: -5.5841522216796875
    6. ' """' → logprob: -6.7091522216796875
    7. '    ' → logprob: -8.459152221679688
    8. ''' → logprob: -8.584152221679688
    9. '""' → logprob: -8.834152221679688
    10. '  ' → logprob: -9.084152221679688

Token 90: ' Un' (ID: 1367)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07849256694316864
    2. '"""' → logprob: -2.7034926414489746
    3. '"""
' → logprob: -5.203492641448975
    4. '
' → logprob: -7.578492641448975
    5. '"' → logprob: -7.703492641448975
    6. '    ' → logprob: -7.828492641448975
    7. ' """
' → logprob: -8.078492164611816
    8. '    
' → logprob: -8.078492164611816
    9. ' """' → logprob: -8.578492164611816
    10. '""' → logprob: -8.578492164611816

Token 91: ' palindrome' (ID: 160469)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.018229544162750244
    2. ' e' → logprob: -4.5182294845581055
    3. ' palindrome' → logprob: -5.6432294845581055
    4. ' ' → logprob: -7.0182294845581055
    5. 'a' → logprob: -7.0182294845581055
    6. ' s' → logprob: -7.2682294845581055
    7. 's' → logprob: -8.018229484558105
    8. ' a' → logprob: -8.393229484558105
    9. 'es' → logprob: -8.393229484558105
    10. ' pal' → logprob: -9.268229484558105

Token 92: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.182198166847229
    2. ' ' → logprob: -2.6821980476379395
    3. '   ' → logprob: -3.6821980476379395
    4. ' s' → logprob: -3.8071980476379395
    5. ' "' → logprob: -4.0571980476379395
    6. 's' → logprob: -4.8071980476379395
    7. '  ' → logprob: -5.8071980476379395
    8. ' )' → logprob: -6.1821980476379395
    9. ')' → logprob: -6.3071980476379395
    10. ',' → logprob: -6.4321980476379395

Token 93: ' ident' (ID: 3951)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.1875743418931961
    2. 's' → logprob: -2.5625743865966797
    3. ' une' → logprob: -2.9375743865966797
    4. ' ident' → logprob: -4.68757438659668
    5. ' ég' → logprob: -5.06257438659668
    6. ' égal' → logprob: -5.18757438659668
    7. ' la' → logprob: -5.31257438659668
    8. '   ' → logprob: -5.43757438659668
    9. ' un' → logprob: -5.93757438659668
    10. 'une' → logprob: -6.06257438659668

Token 94: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.0034577527549117804
    2. 'ical' → logprob: -6.253457546234131
    3. 'al' → logprob: -6.628457546234131
    4. 'i' → logprob: -9.378458023071289
    5. 'iq' → logprob: -10.128458023071289
    6. 'que' → logprob: -11.003458023071289
    7. 'e' → logprob: -11.253458023071289
    8. 'ic' → logprob: -11.253458023071289
    9. 'iqu' → logprob: -12.003458023071289
    10. '#' → logprob: -12.253458023071289

Token 95: ' lu' (ID: 8620)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.015225887298583984
    2. ' au' → logprob: -5.015225887298584
    3. ' ' → logprob: -5.265225887298584
    4. 's' → logprob: -6.765225887298584
    5. ' a' → logprob: -7.515225887298584
    6. ' s' → logprob: -8.015226364135742
    7. '  ' → logprob: -8.015226364135742
    8. '   ' → logprob: -8.140226364135742
    9. ' aux' → logprob: -8.265226364135742
    10. '<|end|>' → logprob: -9.015226364135742

Token 96: ' de' (ID: 334)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.912193775177002
    2. ' ' → logprob: -0.912193775177002
    3. ' e' → logprob: -2.287193775177002
    4. ' de' → logprob: -2.787193775177002
    5. ' à' → logprob: -3.912193775177002
    6. ' a' → logprob: -5.537193775177002
    7. ' en' → logprob: -6.037193775177002
    8. 's' → logprob: -6.537193775177002
    9. ' dans' → logprob: -7.412193775177002
    10. 'es' → logprob: -7.537193775177002

Token 97: ' gauche' (ID: 58367)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7971358299255371
    2. ' l' → logprob: -0.7971358299255371
    3. 'l' → logprob: -3.797135829925537
    4. ' gauche' → logprob: -3.797135829925537
    5. ' la' → logprob: -4.797135829925537
    6. ' devant' → logprob: -4.922135829925537
    7. 'a' → logprob: -5.172135829925537
    8. ' face' → logprob: -5.422135829925537
    9. 'g' → logprob: -5.422135829925537
    10. ' bout' → logprob: -5.547135829925537

Token 98: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.021746987476944923
    2. 'à' → logprob: -4.02174711227417
    3. ' a' → logprob: -6.64674711227417
    4. ' ' → logprob: -7.39674711227417
    5. '  ' → logprob: -7.39674711227417
    6. '   ' → logprob: -7.64674711227417
    7. ')' → logprob: -9.646746635437012
    8. ' á' → logprob: -9.771746635437012
    9. ' ou' → logprob: -10.021746635437012
    10. 'e' → logprob: -10.021746635437012

Token 99: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.2572554051876068
    2. 'dro' → logprob: -1.5072554349899292
    3. ' ' → logprob: -5.882255554199219
    4. ' dro' → logprob: -6.757255554199219
    5. 'd' → logprob: -8.132255554199219
    6. '-dro' → logprob: -8.257255554199219
    7. ' droit' → logprob: -8.507255554199219
    8. 'right' → logprob: -9.507255554199219
    9. ' direita' → logprob: -9.882255554199219
    10. ' right' → logprob: -9.882255554199219

Token 100: ' ou' (ID: 2031)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.6518564224243164
    2. ' ou' → logprob: -0.9018564224243164
    3. ' ' → logprob: -2.9018564224243164
    4. '   ' → logprob: -4.401856422424316
    5. ' à' → logprob: -6.401856422424316
    6. '  ' → logprob: -6.776856422424316
    7. ' e' → logprob: -7.026856422424316
    8. ',' → logprob: -7.526856422424316
    9. ' or' → logprob: -7.776856422424316
    10. 'et' → logprob: -8.401856422424316

Token 101: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1450156420469284
    2. 'de' → logprob: -2.1450157165527344
    3. ' droite' → logprob: -4.270015716552734
    4. ' ' → logprob: -5.645015716552734
    5. '   ' → logprob: -8.895015716552734
    6. '```' → logprob: -9.270015716552734
    7. 'dro' → logprob: -9.770015716552734
    8. ' from' → logprob: -10.770015716552734
    9. 'def' → logprob: -11.270015716552734
    10. '  ' → logprob: -11.520015716552734

Token 102: ' droite' (ID: 61428)
  Prédit: ' droite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.051720134913921356
    2. 'dro' → logprob: -3.176720142364502
    3. ' ' → logprob: -5.301720142364502
    4. ' dro' → logprob: -6.676720142364502
    5. ' droit' → logprob: -6.676720142364502
    6. 'd' → logprob: -8.051719665527344
    7. ' dr' → logprob: -9.301719665527344
    8. ' dre' → logprob: -9.301719665527344
    9. ' right' → logprob: -9.301719665527344
    10. '```' → logprob: -9.801719665527344

Token 103: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.0006591808632947505
    2. 'à' → logprob: -7.375658988952637
    3. '   ' → logprob: -10.875658988952637
    4. ' ' → logprob: -12.250658988952637
    5. '```' → logprob: -12.625658988952637
    6. ''à' → logprob: -13.500658988952637
    7. '  ' → logprob: -13.750658988952637
    8. ' á' → logprob: -14.000658988952637
    9. ' À' → logprob: -14.625658988952637
    10. '’à' → logprob: -14.750658988952637

Token 104: ' gauche' (ID: 58367)
  Prédit: ' droite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' droite' → logprob: -0.2731742262840271
    2. 'dro' → logprob: -1.5231742858886719
    3. ' gauche' → logprob: -4.023174285888672
    4. 'g' → logprob: -6.148174285888672
    5. ' ' → logprob: -8.023174285888672
    6. '```' → logprob: -8.273174285888672
    7. 'd' → logprob: -8.648174285888672
    8. 'right' → logprob: -9.648174285888672
    9. ' droit' → logprob: -9.898174285888672
    10. 'l' → logprob: -10.523174285888672

Token 105: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29595503211021423
    2. '.' → logprob: -1.5459550619125366
    3. '"' → logprob: -4.170955181121826
    4. '"""' → logprob: -4.545955181121826
    5. ')' → logprob: -5.295955181121826
    6. '"""
' → logprob: -5.545955181121826
    7. ' """
' → logprob: -6.420955181121826
    8. ',' → logprob: -6.670955181121826
    9. 's' → logprob: -6.795955181121826
    10. '.
' → logprob: -7.295955181121826

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18723225593566895
    2. '"""' → logprob: -2.437232255935669
    3. '"' → logprob: -2.562232255935669
    4. '"""
' → logprob: -5.31223201751709
    5. ')' → logprob: -7.68723201751709
    6. ' """
' → logprob: -8.56223201751709
    7. ' """' → logprob: -8.68723201751709
    8. '
' → logprob: -8.93723201751709
    9. '    
' → logprob: -9.81223201751709
    10. ' ' → logprob: -10.18723201751709

Token 107: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3802223801612854
    2. '"""' → logprob: -1.2552223205566406
    3. '"""
' (adapté à ' """
') → logprob: -3.5052223205566406
    4. ' """
' → logprob: -7.880222320556641
    5. '
' → logprob: -8.00522232055664
    6. '"' → logprob: -8.50522232055664
    7. ' """' → logprob: -9.38022232055664
    8. '```' → logprob: -9.38022232055664
    9. '""' → logprob: -10.25522232055664
    10. '    ' → logprob: -10.38022232055664

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.8351892473874614e-05
    2. ' return' → logprob: -10.250048637390137
    3. 'return' → logprob: -11.375048637390137
    4. '    ' → logprob: -14.250048637390137
    5. '    
' → logprob: -14.500048637390137
    6. '
' → logprob: -15.750048637390137
    7. ' if' → logprob: -16.12504768371582
    8. '  ' → logprob: -16.37504768371582
    9. '   ' → logprob: -16.87504768371582
    10. '       ' → logprob: -17.00004768371582

Token 109: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015294316224753857
    2. '   ' → logprob: -4.765294551849365
    3. ' return' → logprob: -5.015294551849365
    4. 's' → logprob: -11.515294075012207
    5. 'n' → logprob: -12.140294075012207
    6. 'for' → logprob: -12.140294075012207
    7. '    
' → logprob: -15.515294075012207
    8. '	return' → logprob: -15.640294075012207
    9. ' ' → logprob: -15.765294075012207
    10. '```' → logprob: -15.890294075012207

Token 110: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0024756586644798517
    2. 's' → logprob: -6.002475738525391
    3. '	s' → logprob: -18.62747573852539
    4. ' ' → logprob: -20.00247573852539
    5. '(s' → logprob: -20.25247573852539
    6. '_s' → logprob: -20.75247573852539
    7. ' ' → logprob: -23.00247573852539
    8. '   ' → logprob: -23.37747573852539
    9. 'str' → logprob: -23.50247573852539
    10. '{s' → logprob: -23.75247573852539

Token 111: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5855002403259277
    2. '[::-' → logprob: -1.0855002403259277
    3. ' ==' → logprob: -2.3355002403259277
    4. '[' → logprob: -4.835500240325928
    5. '=' → logprob: -7.960500240325928
    6. '[:]' → logprob: -8.335500717163086
    7. 's' → logprob: -9.335500717163086
    8. '[]' → logprob: -10.460500717163086
    9. ')==' → logprob: -11.710500717163086
    10. '==
' → logprob: -12.085500717163086

Token 112: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759395360946655
    2. 's' → logprob: -0.8259395360946655
    3. '	s' → logprob: -16.200939178466797
    4. '(s' → logprob: -17.575939178466797
    5. '_s' → logprob: -18.325939178466797
    6. '[::-' → logprob: -18.700939178466797
    7. ' ' → logprob: -20.075939178466797
    8. '   ' → logprob: -20.450939178466797
    9. 'reverse' → logprob: -20.700939178466797
    10. '```' → logprob: -20.700939178466797

Token 113: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -5.836499985889532e-05
    2. '[' → logprob: -9.7500581741333
    3. '[-' → logprob: -17.875059127807617
    4. '[
' → logprob: -19.250059127807617
    5. ' [' → logprob: -19.250059127807617
    6. 're' → logprob: -19.375059127807617
    7. '[:' → logprob: -19.625059127807617
    8. '   ' → logprob: -19.875059127807617
    9. '[:]' → logprob: -20.125059127807617
    10. '[n' → logprob: -20.250059127807617

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 're' → logprob: -17.625
    3. 'rev' → logprob: -17.875
    4. 'reverse' → logprob: -19.375
    5. ']' → logprob: -19.75
    6. 's' → logprob: -20.25
    7. '１' → logprob: -20.5
    8. ' ' → logprob: -20.75
    9. '```' → logprob: -20.875
    10. 'r' → logprob: -21.5

Token 115: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005318254698067904
    2. ']' → logprob: -7.6255316734313965
    3. '])' → logprob: -10.125532150268555
    4. '）' → logprob: -13.125532150268555
    5. ' )' → logprob: -14.250532150268555
    6. ')]' → logprob: -14.625532150268555
    7. '}' → logprob: -15.375532150268555
    8. ')
' → logprob: -15.875532150268555
    9. '')' → logprob: -16.375532150268555
    10. '))' → logprob: -16.500532150268555

Token 116: ' ' (ID: 220)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5247049331665039
    2. '
' → logprob: -0.8997049331665039
    3. '


' → logprob: -7.274704933166504
    4. 'def' → logprob: -8.399704933166504
    5. '\n' → logprob: -8.399704933166504
    6. '
' → logprob: -8.899704933166504
    7. '



' → logprob: -9.649704933166504
    8. '' → logprob: -9.899704933166504
    9. '
    
' → logprob: -10.274704933166504
    10. ' 

' → logprob: -10.399704933166504

Token 117: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02444733865559101
    2. '

' → logprob: -4.024447441101074
    3. '\n' → logprob: -5.399447441101074
    4. '<|end|>' → logprob: -6.774447441101074
    5. ' 
' → logprob: -9.024447441101074
    6. '
' → logprob: -9.149447441101074
    7. 'newline' → logprob: -9.149447441101074
    8. '  
' → logprob: -9.649447441101074
    9. '```' → logprob: -9.899447441101074
    10. '    
' → logprob: -10.149447441101074

Token 118: ' La' (ID: 3038)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5214807391166687
    2. ' return' → logprob: -1.8964807987213135
    3. ' s' → logprob: -2.6464807987213135
    4. 's' → logprob: -3.0214807987213135
    5. ' Retour' → logprob: -3.3964807987213135
    6. 'return' → logprob: -3.8964807987213135
    7. ' True' → logprob: -4.021480560302734
    8. '[::-' → logprob: -4.646480560302734
    9. ' "' → logprob: -5.146480560302734
    10. '"' → logprob: -5.146480560302734

Token 119: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.7870951294898987
    2. 'chaine' → logprob: -2.412095069885254
    3. 's' → logprob: -2.537095069885254
    4. ' meilleure' → logprob: -2.912095069885254
    5. ' s' → logprob: -2.912095069885254
    6. 're' → logprob: -3.162095069885254
    7. ' même' → logprob: -3.287095069885254
    8. ' copie' → logprob: -3.412095069885254
    9. '[::-' → logprob: -3.662095069885254
    10. ' chaine' → logprob: -3.662095069885254

Token 120: ' invers' (ID: 38721)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 121: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.070578932762146
    2. 'e' → logprob: -2.6955790519714355
    3. 'ee' → logprob: -8.070578575134277
    4. 'é' → logprob: -8.445578575134277
    5. 't' → logprob: -10.195578575134277
    6. 'er' → logprob: -10.570578575134277
    7. '#' → logprob: -12.070578575134277
    8. 'es' → logprob: -12.195578575134277
    9. 'et' → logprob: -12.195578575134277
    10. 'se' → logprob: -12.695578575134277

Token 122: ' doit' (ID: 21822)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2521311640739441
    2. '\n' → logprob: -2.002131223678589
    3. '<|end|>' → logprob: -2.627131223678589
    4. '

' → logprob: -5.12713098526001
    5. '<|end|>' → logprob: -6.00213098526001
    6. '.' → logprob: -6.25213098526001
    7. ' 
' → logprob: -6.62713098526001
    8. '```' → logprob: -7.25213098526001
    9. '  
' → logprob: -7.62713098526001
    10. '' → logprob: -7.87713098526001

Token 123: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.2111920565366745
    2. ' être' → logprob: -1.711192011833191
    3. '<|end|>' → logprob: -5.7111921310424805
    4. ''être' → logprob: -6.2111921310424805
    5. 'égal' → logprob: -7.0861921310424805
    6. 's' → logprob: -7.0861921310424805
    7. 'êtres' → logprob: -7.2111921310424805
    8. ' be' → logprob: -7.5861921310424805
    9. '’être' → logprob: -7.8361921310424805
    10. ' etre' → logprob: -7.9611921310424805

Token 124: ' ident' (ID: 3951)
  Prédit: 'ident'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ident' → logprob: -0.7388693690299988
    2. ' ident' → logprob: -1.1138694286346436
    3. 'ég' → logprob: -2.2388694286346436
    4. ' ég' → logprob: -2.4888694286346436
    5. 'égal' → logprob: -5.9888691902160645
    6. 'la' → logprob: -7.1138691902160645
    7. 's' → logprob: -8.113869667053223
    8. ' identical' → logprob: -8.738869667053223
    9. 'exact' → logprob: -8.863869667053223
    10. ' la' → logprob: -8.988869667053223

Token 125: 'ique' (ID: 2222)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.011962071992456913
    2. 'ique' → logprob: -5.886961936950684
    3. 'cale' → logprob: -5.886961936950684
    4. 'cal' → logprob: -6.261961936950684
    5. '#' → logprob: -6.386961936950684
    6. 'q' → logprob: -6.761961936950684
    7. 'ques' → logprob: -8.011961936950684
    8. 'quement' → logprob: -9.011961936950684
    9. 't' → logprob: -9.136961936950684
    10. '```' → logprob: -9.136961936950684

Token 126: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48778772354125977
    2. '\n' → logprob: -1.4877877235412598
    3. '

' → logprob: -1.9877877235412598
    4. '<|end|>' → logprob: -5.36278772354126
    5. 'def' → logprob: -5.48778772354126
    6. '\' → logprob: -5.98778772354126
    7. '```' → logprob: -5.98778772354126
    8. '.' → logprob: -6.61278772354126
    9. 'newline' → logprob: -6.61278772354126
    10. '
    
' → logprob: -6.98778772354126

Token 127: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030579231679439545
    2. ' s' → logprob: -3.6555793285369873
    3. 'la' → logprob: -5.780579090118408
    4. ' la' → logprob: -6.780579090118408
    5. 'l' → logprob: -10.280579566955566
    6. ' ' → logprob: -12.030579566955566
    7. ' ' → logprob: -13.030579566955566
    8. 'original' → logprob: -13.655579566955566
    9. ' l' → logprob: -13.780579566955566
    10. '	s' → logprob: -14.405579566955566

Token 128: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14739929139614105
    2. 'chaine' → logprob: -2.6473991870880127
    3. 'original' → logprob: -3.0223991870880127
    4. ' s' → logprob: -4.647399425506592
    5. ' chaîne' → logprob: -5.522399425506592
    6. 'string' → logprob: -6.397399425506592
    7. ' originale' → logprob: -7.272399425506592
    8. 'cha' → logprob: -7.647399425506592
    9. ' original' → logprob: -8.022398948669434
    10. 'source' → logprob: -8.272398948669434

Token 129: ' originale' (ID: 90997)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8182724714279175
    2. 'def' → logprob: -1.6932724714279175
    3. '<|end|>' → logprob: -1.6932724714279175
    4. '\' → logprob: -3.068272590637207
    5. '
' → logprob: -3.068272590637207
    6. '

' → logprob: -3.943272590637207
    7. '  
' → logprob: -4.068272590637207
    8. 's' → logprob: -4.443272590637207
    9. '.' → logprob: -4.943272590637207
    10. '<|end|>' → logprob: -5.193272590637207

Token 130: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38951775431632996
    2. '

' → logprob: -1.1395177841186523
    3. 'def' → logprob: -6.139517784118652
    4. '\n' → logprob: -8.514517784118652
    5. '


' → logprob: -9.264517784118652
    6. '
' → logprob: -9.389517784118652
    7. '
    
' → logprob: -10.389517784118652
    8. '



' → logprob: -11.389517784118652
    9. '```' → logprob: -11.514517784118652
    10. '' → logprob: -11.639517784118652

Token 131: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5831484794616699
    2. '

' → logprob: -0.8331484794616699
    3. 'def' → logprob: -4.95814847946167
    4. '\n' → logprob: -9.958148956298828
    5. '
' → logprob: -10.458148956298828
    6. '


' → logprob: -10.583148956298828
    7. 'n' → logprob: -11.583148956298828
    8. '#' → logprob: -11.708148956298828
    9. '



' → logprob: -11.958148956298828
    10. '```' → logprob: -12.208148956298828

Token 132: ' main' (ID: 2758)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.17751631140708923
    2. ' compter' → logprob: -2.552516222000122
    3. ' main' → logprob: -2.677516222000122
    4. 'count' → logprob: -4.177516460418701
    5. ' compte' → logprob: -8.177515983581543
    6. 'main' → logprob: -8.427515983581543
    7. ' compteur' → logprob: -9.552515983581543
    8. ' contar' → logprob: -10.427515983581543
    9. ' counting' → logprob: -10.677515983581543
    10. '_count' → logprob: -11.302515983581543

Token 133: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.868328920158092e-05
    2. '():
' → logprob: -10.875028610229492
    3. ' ():' → logprob: -12.000028610229492
    4. '()' → logprob: -13.000028610229492
    5. '(' → logprob: -13.875028610229492
    6. ':' → logprob: -15.625028610229492
    7. '():
' → logprob: -16.250028610229492
    8. '()>' → logprob: -16.750028610229492
    9. '(":' → logprob: -18.250028610229492
    10. '):' → logprob: -18.500028610229492

Token 134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004005742259323597
    2. '    
' → logprob: -6.5040059089660645
    3. 'n' → logprob: -7.0040059089660645
    4. ' 
' → logprob: -8.129005432128906
    5. ' n' → logprob: -8.254005432128906
    6. '
' → logprob: -8.629005432128906
    7. ' input' → logprob: -9.004005432128906
    8. 'import' → logprob: -9.254005432128906
    9. 'input' → logprob: -9.379005432128906
    10. ' import' → logprob: -9.504005432128906

Token 135: ' count' (ID: 3605)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8008347749710083
    2. ' count' → logprob: -1.3008347749710083
    3. 'n' → logprob: -2.1758346557617188
    4. 'count' (adapté à ' count') → logprob: -2.3008346557617188
    5. ' import' → logprob: -3.5508346557617188
    6. 'import' → logprob: -4.050834655761719
    7. '   ' → logprob: -4.800834655761719
    8. ' pal' → logprob: -6.175834655761719
    9. ' lines' → logprob: -6.425834655761719
    10. ' nb' → logprob: -6.675834655761719

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10405855625867844
    2. '_' → logprob: -2.9790585041046143
    3. '=' → logprob: -3.1040585041046143
    4. '_pal' → logprob: -6.104058742523193
    5. '_lines' → logprob: -8.354058265686035
    6. '_strings' → logprob: -8.479058265686035
    7. 's' → logprob: -8.854058265686035
    8. ' ' → logprob: -9.729058265686035
    9. '_input' → logprob: -10.354058265686035
    10. '_p' → logprob: -10.979058265686035

Token 137: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04300159960985184
    2. '0' → logprob: -3.168001651763916
    3. ' ' → logprob: -13.293001174926758
    4. 'int' → logprob: -14.668001174926758
    5. ' int' → logprob: -15.543001174926758
    6. '  ' → logprob: -18.043001174926758
    7. 's' → logprob: -18.168001174926758
    8. '   ' → logprob: -18.230501174926758
    9. '```' → logprob: -18.918001174926758
    10. '1' → logprob: -19.230501174926758

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'int' → logprob: -14.500015258789062
    4. '   ' → logprob: -19.000015258789062
    5. '{}' → logprob: -19.687515258789062
    6. '۰' → logprob: -19.875015258789062
    7. '```' → logprob: -20.187515258789062
    8. ' int' → logprob: -20.312515258789062
    9. '  ' → logprob: -20.312515258789062
    10. '{' → logprob: -20.312515258789062

Token 139: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010468624532222748
    2. '   ' → logprob: -7.501046657562256
    3. '    
' → logprob: -8.126047134399414
    4. '
' → logprob: -9.751047134399414
    5. '  
' → logprob: -9.876047134399414
    6. '\n' → logprob: -10.626047134399414
    7. ' 
' → logprob: -11.001047134399414
    8. '' → logprob: -11.376047134399414
    9. '   
' → logprob: -11.376047134399414
    10. '<|end|>' → logprob: -12.376047134399414

Token 140: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046317342668771744
    2. 'while' → logprob: -3.1713173389434814
    3. 'try' → logprob: -6.0463175773620605
    4. 'import' → logprob: -8.046317100524902
    5. '   ' → logprob: -8.171317100524902
    6. '    
' → logprob: -8.921317100524902
    7. ' while' → logprob: -9.421317100524902
    8. 'for' → logprob: -9.921317100524902
    9. '
' → logprob: -10.046317100524902
    10. ' 
' → logprob: -11.421317100524902

Token 141: ' Comp' (ID: 5211)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.343058466911316
    2. ' for' → logprob: -1.718058466911316
    3. ' int' → logprob: -1.843058466911316
    4. ' while' → logprob: -2.2180585861206055
    5. ' ' → logprob: -2.3430585861206055
    6. 'for' → logprob: -3.3430585861206055
    7. 'int' → logprob: -3.4680585861206055
    8. ' len' → logprob: -3.8430585861206055
    9. 'input' → logprob: -3.8430585861206055
    10. ' True' → logprob: -3.9680585861206055

Token 142: 'teur' (ID: 45262)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.8661094903945923
    2. 'teur' → logprob: -1.3661094903945923
    3. 'te' → logprob: -1.6161094903945923
    4. 't' → logprob: -2.2411093711853027
    5. 'té' → logprob: -4.116109371185303
    6. '#' → logprob: -6.616109371185303
    7. 'teurs' → logprob: -8.616109848022461
    8. 'tage' → logprob: -9.053609848022461
    9. 'tez' → logprob: -9.116109848022461
    10. 'ted' → logprob: -9.303609848022461

Token 143: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3811851739883423
    2. '
' → logprob: -1.6311851739883423
    3. 'for' → logprob: -1.7561851739883423
    4. '<|end|>' → logprob: -2.5061850547790527
    5. 'import' → logprob: -3.0061850547790527
    6. ' for' → logprob: -3.2561850547790527
    7. 'while' → logprob: -3.2561850547790527
    8. '    
' → logprob: -3.3811850547790527
    9. ' des' → logprob: -3.8811850547790527
    10. '  
' → logprob: -4.006185054779053

Token 144: ' le' (ID: 505)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.061082933098077774
    2. ' ' → logprob: -3.6860828399658203
    3. ' le' → logprob: -4.18608283996582
    4. ' pal' → logprob: -4.81108283996582
    5. 'pal' → logprob: -5.31108283996582
    6. '_pal' → logprob: -5.56108283996582
    7. 'les' → logprob: -7.18608283996582
    8. '<|end|>' → logprob: -7.81108283996582
    9. 'Pal' → logprob: -8.93608283996582
    10. 's' → logprob: -9.18608283996582

Token 145: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5683279037475586
    2. 'nombre' → logprob: -1.1933279037475586
    3. 'pal' → logprob: -2.4433279037475586
    4. ' nombres' → logprob: -3.8183279037475586
    5. 's' → logprob: -4.818327903747559
    6. ' pal' → logprob: -4.943327903747559
    7. ' palindrome' → logprob: -6.068327903747559
    8. 'n' → logprob: -7.068327903747559
    9. ' number' → logprob: -7.318327903747559
    10. '_pal' → logprob: -7.943327903747559

Token 146: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.012317501939833164
    2. ' des' → logprob: -5.387317657470703
    3. '   ' → logprob: -5.762317657470703
    4. 'de' → logprob: -6.137317657470703
    5. ' ' → logprob: -7.262317657470703
    6. ' d' → logprob: -7.387317657470703
    7. '    ' → logprob: -7.512317657470703
    8. '_' → logprob: -8.762317657470703
    9. '_de' → logprob: -9.137317657470703
    10. '  ' → logprob: -9.637317657470703

Token 147: ' pal' (ID: 5337)
  Prédit: ' pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pal' → logprob: -0.5709215998649597
    2. 'pal' → logprob: -0.9459215998649597
    3. '_pal' → logprob: -4.320921421051025
    4. 's' → logprob: -4.445921421051025
    5. ' chaînes' → logprob: -4.820921421051025
    6. ' palindrome' → logprob: -5.695921421051025
    7. ' lignes' → logprob: -5.945921421051025
    8. ' ' → logprob: -6.195921421051025
    9. ' s' → logprob: -6.820921421051025
    10. '_' → logprob: -7.070921421051025

Token 148: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.010495543479919434
    2. 'indrome' → logprob: -4.635495662689209
    3. 'i' → logprob: -7.760495662689209
    4. '```' → logprob: -9.51049518585205
    5. '   ' → logprob: -10.13549518585205
    6. 'in' → logprob: -10.13549518585205
    7. '``' → logprob: -10.51049518585205
    8. 'a' → logprob: -11.51049518585205
    9. 'e' → logprob: -11.63549518585205
    10. 'ynd' → logprob: -12.13549518585205

Token 149: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.00937647931277752
    2. 'r' → logprob: -4.759376525878906
    3. 'ro' → logprob: -8.259376525878906
    4. 'rom' → logprob: -8.384376525878906
    5. 'rome' → logprob: -9.384376525878906
    6. '```' → logprob: -10.384376525878906
    7. 'omes' → logprob: -10.634376525878906
    8. 'rones' → logprob: -10.634376525878906
    9. 'es' → logprob: -11.634376525878906
    10. '`' → logprob: -11.759376525878906

Token 150: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017633793875575066
    2. '   ' → logprob: -4.14263391494751
    3. '    
' → logprob: -6.51763391494751
    4. 'while' → logprob: -10.392633438110352
    5. 'n' → logprob: -10.892633438110352
    6. ' while' → logprob: -11.267633438110352
    7. '  
' → logprob: -11.392633438110352
    8. '   
' → logprob: -11.517633438110352
    9. '
' → logprob: -11.642633438110352
    10. ' 
' → logprob: -11.642633438110352

Token 151: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6862940192222595
    2. '   ' → logprob: -0.9362940192222595
    3. 'import' → logprob: -2.9362940788269043
    4. ' while' → logprob: -3.6862940788269043
    5. 'try' → logprob: -3.8112940788269043
    6. 'for' → logprob: -6.061294078826904
    7. 'n' → logprob: -6.936294078826904
    8. ' import' → logprob: -7.936294078826904
    9. ' try' → logprob: -8.061293601989746
    10. ' for' → logprob: -9.061293601989746

Token 152: ' try' (ID: 2075)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6740989089012146
    2. 'import' → logprob: -1.1740989685058594
    3. 'for' → logprob: -2.5490989685058594
    4. 'n' → logprob: -2.7990989685058594
    5. 'try' (adapté à ' try') → logprob: -3.4240989685058594
    6. 'lines' → logprob: -4.674098968505859
    7. 'strings' → logprob: -9.54909896850586
    8. ' while' → logprob: -9.79909896850586
    9. 'N' → logprob: -9.92409896850586
    10. 'num' → logprob: -9.92409896850586

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005293169524520636
    2. ':
' → logprob: -5.255293369293213
    3. ' :' → logprob: -9.755292892456055
    4. ' :
' → logprob: -13.880292892456055
    5. ':

' → logprob: -15.880292892456055
    6. '   ' → logprob: -15.880292892456055
    7. ':
' → logprob: -16.630292892456055
    8. '=' → logprob: -17.505292892456055
    9. '：' → logprob: -17.880292892456055
    10. ':#' → logprob: -18.380292892456055

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0040578595362603664
    2. ' while' → logprob: -5.629057884216309
    3. '    ' → logprob: -9.004057884216309
    4. '   ' → logprob: -9.129057884216309
    5. ':' → logprob: -9.379057884216309
    6. ' input' → logprob: -10.254057884216309
    7. ' lines' → logprob: -10.379057884216309
    8. ' for' → logprob: -11.504057884216309
    9. 'while' → logprob: -11.504057884216309
    10. '      ' → logprob: -12.129057884216309

Token 155: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.001962297596037388
    2. 'while' (adapté à ' while') → logprob: -6.876962184906006
    3. '   ' → logprob: -7.001962184906006
    4. '	while' → logprob: -11.751962661743164
    5. '    ' → logprob: -11.876962661743164
    6. '       ' → logprob: -13.376962661743164
    7. '    
' → logprob: -14.626962661743164
    8. ' lines' → logprob: -14.626962661743164
    9. '   ' → logprob: -14.876962661743164
    10. ' 
' → logprob: -15.126962661743164

Token 156: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.004088966641575098
    2. 'True' → logprob: -5.504088878631592
    3. '(True' → logprob: -11.87908935546875
    4. '   ' → logprob: -13.12908935546875
    5. ' ' → logprob: -13.50408935546875
    6. '=True' → logprob: -15.75408935546875
    7. '  ' → logprob: -17.12908935546875
    8. ':' → logprob: -17.50408935546875
    9. '1' → logprob: -17.62908935546875
    10. '    ' → logprob: -17.62908935546875

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036770363803952932
    2. ':
' → logprob: -5.628676891326904
    3. ' :' → logprob: -10.003677368164062
    4. '           ' → logprob: -10.753677368164062
    5. '       ' → logprob: -12.253677368164062
    6. '):' → logprob: -13.378677368164062
    7. ',' → logprob: -13.503677368164062
    8. '   ' → logprob: -14.378677368164062
    9. '():' → logprob: -14.503677368164062
    10. ' :
' → logprob: -14.628677368164062

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020077454391866922
    2. '       ' → logprob: -6.502007961273193
    3. ' line' → logprob: -7.752007961273193
    4. '          ' → logprob: -11.127007484436035
    5. '   ' → logprob: -11.627007484436035
    6. ' ligne' → logprob: -11.752007484436035
    7. 's' → logprob: -11.877007484436035
    8. 'input' → logprob: -12.002007484436035
    9. ' s' → logprob: -12.252007484436035
    10. 'line' → logprob: -12.502007484436035

Token 159: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08129053562879562
    2. ' s' → logprob: -3.0812904834747314
    3. '           ' → logprob: -4.4562907218933105
    4. ' ligne' → logprob: -4.7062907218933105
    5. 'line' (adapté à ' line') → logprob: -5.0812907218933105
    6. 's' → logprob: -6.0812907218933105
    7. ' input' → logprob: -6.3312907218933105
    8. 'ligne' → logprob: -7.8312907218933105
    9. '   ' → logprob: -8.081290245056152
    10. 'input' → logprob: -8.706290245056152

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013263145228847861
    2. '=' → logprob: -6.626326084136963
    3. '=input' → logprob: -15.626326560974121
    4. 's' → logprob: -16.501325607299805
    5. '   ' → logprob: -16.876325607299805
    6. ' =
' → logprob: -17.251325607299805
    7. '=line' → logprob: -17.376325607299805
    8. ' ' → logprob: -18.751325607299805
    9. '_input' → logprob: -18.876325607299805
    10. '_' → logprob: -19.001325607299805

Token 161: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1602245420217514
    2. 'input' → logprob: -1.9102245569229126
    3. '	input' → logprob: -15.910224914550781
    4. '   ' → logprob: -16.16022491455078
    5. '=input' → logprob: -16.53522491455078
    6. '(input' → logprob: -16.53522491455078
    7. ' ' → logprob: -17.78522491455078
    8. '<input' → logprob: -19.41022491455078
    9. '_input' → logprob: -19.66022491455078
    10. '```' → logprob: -19.66022491455078

Token 162: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029781268909573555
    2. '().' → logprob: -3.5297813415527344
    3. '()
' → logprob: -10.529781341552734
    4. ' ()' → logprob: -13.154781341552734
    5. '(' → logprob: -14.404781341552734
    6. '()

' → logprob: -14.654781341552734
    7. '("")' → logprob: -14.904781341552734
    8. '())' → logprob: -15.029781341552734
    9. '()>' → logprob: -16.154781341552734
    10. '()`' → logprob: -16.279781341552734

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07374724745750427
    2. '.strip' → logprob: -2.823747158050537
    3. '            
' → logprob: -4.573747158050537
    4. '.rstrip' → logprob: -7.198747158050537
    5. '
' → logprob: -8.573747634887695
    6. '       ' → logprob: -9.073747634887695
    7. '            ' → logprob: -9.823747634887695
    8. '.' → logprob: -9.948747634887695
    9. '               ' → logprob: -10.448747634887695
    10. '.trim' → logprob: -10.948747634887695

Token 164: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023163489997386932
    2. 'if' (adapté à ' if') → logprob: -4.398163318634033
    3. '           ' → logprob: -4.648163318634033
    4. ' line' → logprob: -7.273163318634033
    5. '            
' → logprob: -8.523163795471191
    6. '            ' → logprob: -10.523163795471191
    7. 'line' → logprob: -10.773163795471191
    8. ' strip' → logprob: -10.898163795471191
    9. '   ' → logprob: -11.523163795471191
    10. '.strip' → logprob: -11.523163795471191

Token 165: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2521652579307556
    2. ' line' → logprob: -1.5021653175354004
    3. 'line' → logprob: -9.377164840698242
    4. 'not' → logprob: -9.502164840698242
    5. ' ' → logprob: -9.752164840698242
    6. '	line' → logprob: -11.752164840698242
    7. ' ligne' → logprob: -12.877164840698242
    8. '#line' → logprob: -13.627164840698242
    9. ' ' → logprob: -13.752164840698242
    10. '	not' → logprob: -13.877164840698242

Token 166: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35102126002311707
    2. '==' → logprob: -1.2260212898254395
    3. '.strip' → logprob: -5.9760212898254395
    4. '.' → logprob: -11.851020812988281
    5. '=="' → logprob: -11.851020812988281
    6. '===' → logprob: -12.851020812988281
    7. '=' → logprob: -12.976020812988281
    8. ':' → logprob: -13.476020812988281
    9. ' =' → logprob: -13.476020812988281
    10. '()==' → logprob: -13.601020812988281

Token 167: ' '':
' (ID: 125614)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.13688212633132935
    2. '''' → logprob: -2.6368820667266846
    3. '"":' → logprob: -3.1368820667266846
    4. '"' → logprob: -4.386882305145264
    5. ''' → logprob: -7.636882305145264
    6. ' ""' → logprob: -14.136881828308105
    7. '"""' → logprob: -14.386881828308105
    8. '""""' → logprob: -14.761881828308105
    9. '"",' → logprob: -15.261881828308105
    10. ''ex' → logprob: -15.511881828308105

Token 168: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.036524842376821e-05
    2. ':' → logprob: -11.125040054321289
    3. '           ' → logprob: -11.500040054321289
    4. '   ' → logprob: -12.625040054321289
    5. ' break' → logprob: -12.625040054321289
    6. 'break' → logprob: -13.125040054321289
    7. ':
' → logprob: -13.375040054321289
    8. '                   ' → logprob: -13.500040054321289
    9. '	           ' → logprob: -13.500040054321289
    10. '       ' → logprob: -14.875040054321289

Token 169: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.610933244228363
    2. ' break' → logprob: -1.3609333038330078
    3. '               ' → logprob: -1.6109333038330078
    4. '           ' → logprob: -7.235933303833008
    5. '	break' → logprob: -8.735933303833008
    6. '                   ' → logprob: -9.485933303833008
    7. '   ' → logprob: -9.860933303833008
    8. '_break' → logprob: -11.610933303833008
    9. ' ' → logprob: -11.985933303833008
    10. '```' → logprob: -12.985933303833008

Token 170: ' Ligne' (ID: 127787)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6946188807487488
    2. 'break' → logprob: -0.6946188807487488
    3. '           ' → logprob: -6.5696187019348145
    4. '               ' → logprob: -10.444619178771973
    5. 'Break' → logprob: -10.819619178771973
    6. '       ' → logprob: -12.319619178771973
    7. '_break' → logprob: -12.569619178771973
    8. '#' → logprob: -13.194619178771973
    9. '   ' → logprob: -13.319619178771973
    10. '	break' → logprob: -13.444619178771973

Token 171: ' vide' (ID: 21835)
  Prédit: 'vide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vide' → logprob: -0.1853151172399521
    2. ' vide' → logprob: -2.8103151321411133
    3. '               ' → logprob: -3.0603151321411133
    4. '           ' → logprob: -3.0603151321411133
    5. 'break' → logprob: -4.560315132141113
    6. ' break' → logprob: -5.935315132141113
    7. 'br' → logprob: -7.810315132141113
    8. ':' → logprob: -8.560315132141113
    9. ' interrom' → logprob: -8.810315132141113
    10. 'vider' → logprob: -8.935315132141113

Token 172: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006120019243098795
    2. '           ' → logprob: -8.500612258911133
    3. 'break' → logprob: -9.000612258911133
    4. '                   ' → logprob: -9.375612258911133
    5. ' break' → logprob: -9.375612258911133
    6. ',' → logprob: -9.875612258911133
    7. ':' → logprob: -10.250612258911133
    8. '
' → logprob: -11.875612258911133
    9. ':
' → logprob: -12.375612258911133
    10. '                
' → logprob: -12.375612258911133

Token 173: ' on' (ID: 402)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5716686248779297
    2. 'break' → logprob: -1.0716686248779297
    3. '               ' → logprob: -2.4466686248779297
    4. '           ' → logprob: -5.07166862487793
    5. '	break' → logprob: -9.94666862487793
    6. '                   ' → logprob: -10.44666862487793
    7. '   ' → logprob: -10.82166862487793
    8. ' ' → logprob: -11.82166862487793
    9. '_break' → logprob: -12.44666862487793
    10. '#' → logprob: -12.57166862487793

Token 174: ' arr' (ID: 1724)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7335846424102783
    2. '           ' → logprob: -1.3585846424102783
    3. ' break' → logprob: -1.3585846424102783
    4. '       ' → logprob: -6.233584403991699
    5. ' continue' → logprob: -7.233584403991699
    6. '   ' → logprob: -7.358584403991699
    7. 'continue' → logprob: -7.358584403991699
    8. '               ' → logprob: -7.608584403991699
    9. '_break' → logprob: -7.858584403991699
    10. '	break' → logprob: -8.8585844039917

Token 175: 'ête' (ID: 16808)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.06305325776338577
    2. 'ête' → logprob: -2.8130533695220947
    3. 'êter' → logprob: -7.313053131103516
    4. 'ê' → logprob: -8.313053131103516
    5. 'et' → logprob: -8.938053131103516
    6. 'êts' → logprob: -10.688053131103516
    7. 'êtes' → logprob: -11.813053131103516
    8. 'ive' → logprob: -12.438053131103516
    9. '   ' → logprob: -13.313053131103516
    10. 'ète' → logprob: -13.438053131103516

Token 176: ' la' (ID: 557)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04511423408985138
    2. '           ' → logprob: -3.420114278793335
    3. 'break' → logprob: -4.545114040374756
    4. ' break' → logprob: -7.545114040374756
    5. '                   ' → logprob: -9.420114517211914
    6. '   ' → logprob: -10.420114517211914
    7. '	break' → logprob: -10.670114517211914
    8. '              ' → logprob: -10.795114517211914
    9. '       ' → logprob: -11.170114517211914
    10. '_break' → logprob: -11.295114517211914

Token 177: ' lecture' (ID: 31993)
  Prédit: ' boucle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.6376745104789734
    2. 'lecture' → logprob: -1.3876745700836182
    3. ' lecture' → logprob: -2.012674570083618
    4. 'bou' → logprob: -3.012674570083618
    5. 's' → logprob: -4.512674331665039
    6. 'loop' → logprob: -5.137674331665039
    7. 'lect' → logprob: -5.262674331665039
    8. '   ' → logprob: -5.512674331665039
    9. ' loop' → logprob: -6.012674331665039
    10. 'while' → logprob: -6.762674331665039

Token 178: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00045045334263704717
    2. '           ' → logprob: -7.875450611114502
    3. '                   ' → logprob: -10.250450134277344
    4. 'break' → logprob: -10.875450134277344
    5. ' break' → logprob: -12.625450134277344
    6. '              ' → logprob: -13.000450134277344
    7. '
' → logprob: -13.125450134277344
    8. '       ' → logprob: -13.375450134277344
    9. ',' → logprob: -13.750450134277344
    10. '   ' → logprob: -13.875450134277344

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.47626737493556e-05
    2. '           ' → logprob: -11.25003433227539
    3. '                   ' → logprob: -11.37503433227539
    4. 'break' → logprob: -12.50003433227539
    5. ' break' → logprob: -12.87503433227539
    6. '       ' → logprob: -13.37503433227539
    7. '              ' → logprob: -14.25003433227539
    8. '                
' → logprob: -14.75003433227539
    9. '   ' → logprob: -15.25003433227539
    10. ',' → logprob: -15.37503433227539

Token 180: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.011210862547159195
    2. ' break' → logprob: -4.511210918426514
    3. '               ' → logprob: -9.011210441589355
    4. '           ' → logprob: -10.136210441589355
    5. '	break' → logprob: -13.761210441589355
    6. '_break' → logprob: -16.261211395263672
    7. 'return' → logprob: -16.511211395263672
    8. '       ' → logprob: -16.636211395263672
    9. '   ' → logprob: -17.386211395263672
    10. '                   ' → logprob: -18.011211395263672

Token 181: '
            
' (ID: 45334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28371018171310425
    2. '           ' → logprob: -1.408710241317749
    3. '            
' → logprob: -6.15871000289917
    4. '<|end|>' → logprob: -8.658710479736328
    5. '    
' → logprob: -9.283710479736328
    6. '       ' → logprob: -10.033710479736328
    7. '
' → logprob: -10.658710479736328
    8. '<|end|>' → logprob: -10.783710479736328
    9. '        
' → logprob: -11.533710479736328
    10. '\n' → logprob: -11.533710479736328

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.771655115589965e-05
    2. '            
' → logprob: -11.125018119812012
    3. ' if' → logprob: -14.250018119812012
    4. 'if' → logprob: -14.375018119812012
    5. '       ' → logprob: -14.500018119812012
    6. '          ' → logprob: -14.500018119812012
    7. '
' → logprob: -16.250017166137695
    8. '   ' → logprob: -16.375017166137695
    9. '            

' → logprob: -16.500017166137695
    10. '            ' → logprob: -16.750017166137695

Token 183: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0072883316315710545
    2. '           ' → logprob: -5.507288455963135
    3. ' if' → logprob: -5.757288455963135
    4. '   ' → logprob: -11.007287979125977
    5. '       ' → logprob: -11.382287979125977
    6. 'line' → logprob: -11.507287979125977
    7. '            
' → logprob: -12.882287979125977
    8. 'count' → logprob: -13.007287979125977
    9. 'print' → logprob: -14.007287979125977
    10. '#' (adapté à ' #') → logprob: -15.132287979125977

Token 184: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003219422185793519
    2. ' if' → logprob: -6.3782196044921875
    3. 'line' → logprob: -6.7532196044921875
    4. '           ' → logprob: -8.253219604492188
    5. '            
' → logprob: -10.378219604492188
    6. 's' → logprob: -11.378219604492188
    7. ' line' → logprob: -11.628219604492188
    8. '#' → logprob: -11.628219604492188
    9. 'strip' → logprob: -12.378219604492188
    10. '       ' → logprob: -12.503219604492188

Token 185: 'ification' (ID: 3166)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.030709633603692055
    2. 'ifier' → logprob: -3.530709743499756
    3. 'ifiez' → logprob: -7.905709743499756
    4. 'ification' → logprob: -8.030709266662598
    5. 'if' → logprob: -8.405709266662598
    6. 'ifi' → logprob: -11.030709266662598
    7. 'ifié' → logprob: -11.155709266662598
    8. '   ' → logprob: -12.030709266662598
    9. 'ify' → logprob: -13.280709266662598
    10. 'i' → logprob: -14.030709266662598

Token 186: ' que' (ID: 661)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11460253596305847
    2. ' if' → logprob: -2.239602565765381
    3. ' si' → logprob: -6.989602565765381
    4. '   ' → logprob: -7.489602565765381
    5. 'if' → logprob: -8.989602088928223
    6. ' ' → logprob: -10.239602088928223
    7. ' ' → logprob: -10.614602088928223
    8. '    ' → logprob: -10.864602088928223
    9. '            ' → logprob: -11.114602088928223
    10. ' de' → logprob: -11.114602088928223

Token 187: ' la' (ID: 557)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8056591153144836
    2. ' all' → logprob: -1.3056590557098389
    3. 'line' → logprob: -2.055659055709839
    4. ' len' → logprob: -2.430659055709839
    5. 'all' → logprob: -3.180659055709839
    6. 'len' → logprob: -3.930659055709839
    7. ' is' → logprob: -6.180659294128418
    8. 'is' → logprob: -6.680659294128418
    9. ' ' → logprob: -7.305659294128418
    10. ' not' → logprob: -7.305659294128418

Token 188: ' ligne' (ID: 19583)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.13123923540115356
    2. 'all' → logprob: -2.631239175796509
    3. ' line' → logprob: -3.506239175796509
    4. 'ligne' → logprob: -4.506239414215088
    5. ' all' → logprob: -5.256239414215088
    6. ' ligne' → logprob: -5.881239414215088
    7. 'len' → logprob: -6.756239414215088
    8. 'chaine' → logprob: -8.25623893737793
    9. 'set' → logprob: -8.88123893737793
    10. 'not' → logprob: -9.38123893737793

Token 189: ' est' (ID: 893)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.9052788019180298
    2. '.strip' → logprob: -1.1552788019180298
    3. '.' → logprob: -1.4052788019180298
    4. ' .' → logprob: -3.7802786827087402
    5. ' est' → logprob: -6.15527868270874
    6. ' is' → logprob: -6.28027868270874
    7. 'compr' → logprob: -6.65527868270874
    8. ' contient' → logprob: -6.90527868270874
    9. ' only' → logprob: -7.15527868270874
    10. 'isal' → logprob: -7.65527868270874

Token 190: ' composée' (ID: 146865)
  Prédit: ' composée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' composée' → logprob: -0.9276846647262573
    2. ' alph' → logprob: -1.0526846647262573
    3. ' form' → logprob: -3.052684783935547
    4. ' composed' → logprob: -3.427684783935547
    5. 'form' → logprob: -3.427684783935547
    6. 'alph' → logprob: -3.552684783935547
    7. ' constitu' → logprob: -4.052684783935547
    8. ' alphabet' → logprob: -4.302684783935547
    9. 'alpha' → logprob: -4.427684783935547
    10. 'com' → logprob: -4.552684783935547

Token 191: ' uniquement' (ID: 65527)
  Prédit: ' uniquement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniquement' → logprob: -0.06352893263101578
    2. ' de' → logprob: -3.1885290145874023
    3. '           ' → logprob: -4.813529014587402
    4. ' only' → logprob: -5.313529014587402
    5. ' seulement' → logprob: -6.063529014587402
    6. 'de' → logprob: -6.063529014587402
    7. 'only' → logprob: -6.938529014587402
    8. ' exclusivement' → logprob: -7.188529014587402
    9. '   ' → logprob: -8.438529014587402
    10. 'uni' → logprob: -8.688529014587402

Token 192: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.01800641231238842
    2. ' d' → logprob: -4.768006324768066
    3. 'de' → logprob: -4.893006324768066
    4. ' of' → logprob: -6.768006324768066
    5. '           ' → logprob: -7.643006324768066
    6. 'd' → logprob: -8.768006324768066
    7. ' des' → logprob: -10.768006324768066
    8. ' ' → logprob: -11.268006324768066
    9. '   ' → logprob: -12.268006324768066
    10. 'of' → logprob: -12.393006324768066

Token 193: ' demi' (ID: 61771)
  Prédit: ' lettres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -1.093700647354126
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -1.593700647354126
    3. 's' → logprob: -1.718700647354126
    4. ' alphabet' → logprob: -2.968700647354126
    5. ' letters' → logprob: -2.968700647354126
    6. 'letters' → logprob: -3.093700647354126
    7. 'alphabet' → logprob: -3.218700647354126
    8. ' s' → logprob: -3.843700647354126
    9. ' line' → logprob: -4.093700408935547
    10. 'line' → logprob: -4.468700408935547

Token 194: '-large' (ID: 87117)
  Prédit: '-large'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-large' → logprob: -0.0010619866661727428
    2. '-width' → logprob: -7.501061916351318
    3. 'large' → logprob: -8.001062393188477
    4. '-wide' → logprob: -10.001062393188477
    5. '-car' → logprob: -10.126062393188477
    6. '-l' → logprob: -10.501062393188477
    7. 'car' → logprob: -11.126062393188477
    8. 'width' → logprob: -11.251062393188477
    9. '_large' → logprob: -11.501062393188477
    10. 'alphabet' → logprob: -12.126062393188477

Token 195: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0778694599866867
    2. 'urs' → logprob: -2.827869415283203
    3. 'r' → logprob: -4.702869415283203
    4. 'car' → logprob: -5.452869415283203
    5. 'ure' → logprob: -7.202869415283203
    6. 'width' → logprob: -8.327869415283203
    7. 'ures' → logprob: -8.452869415283203
    8. 'rs' → logprob: -8.452869415283203
    9. 'u' → logprob: -9.077869415283203
    10. 's' → logprob: -9.077869415283203

Token 196: ' alph' (ID: 133679)
  Prédit: ' alph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alph' → logprob: -1.3364973068237305
    2. ' caractères' → logprob: -1.3364973068237305
    3. ' lettres' → logprob: -2.0864973068237305
    4. ' alphabet' → logprob: -2.8364973068237305
    5. 'alphabet' → logprob: -2.9614973068237305
    6. 'car' → logprob: -3.0864973068237305
    7. ' caracteres' → logprob: -3.2114973068237305
    8. ' letters' → logprob: -3.2114973068237305
    9. 'alph' → logprob: -3.8364973068237305
    10. 's' → logprob: -4.0864973068237305

Token 197: 'abets' (ID: 164013)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.29697003960609436
    2. 'abet' → logprob: -1.921970009803772
    3. 'ph' → logprob: -3.1719701290130615
    4. 'a' → logprob: -3.4219701290130615
    5. '```' → logprob: -4.546969890594482
    6. 'u' → logprob: -5.296969890594482
    7. '   ' → logprob: -5.421969890594482
    8. 'abets' → logprob: -5.796969890594482
    9. 'aph' → logprob: -6.046969890594482
    10. 'p' → logprob: -6.671969890594482

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10133900493383408
    2. ' if' → logprob: -3.351339101791382
    3. ' and' → logprob: -3.476339101791382
    4. 'if' → logprob: -4.351338863372803
    5. '   ' → logprob: -4.726338863372803
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -5.851338863372803
    7. ' (' → logprob: -6.601338863372803
    8. 'and' → logprob: -6.726338863372803
    9. 'a' → logprob: -7.226338863372803
    10. 'is' → logprob: -7.851338863372803

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001729444949887693
    2. '            
' → logprob: -7.126729488372803
    3. ' if' → logprob: -7.376729488372803
    4. 'if' → logprob: -9.376729011535645
    5. ' (' → logprob: -9.626729011535645
    6. ' and' → logprob: -10.626729011535645
    7. '       ' → logprob: -10.751729011535645
    8. '   ' → logprob: -11.001729011535645
    9. ',' → logprob: -11.126729011535645
    10. ' et' → logprob: -11.626729011535645

Token 200: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3134114146232605
    2. ' if' → logprob: -1.3134114742279053
    3. 'import' → logprob: -9.563411712646484
    4. '           ' → logprob: -9.688411712646484
    5. '   ' → logprob: -11.688411712646484
    6. 'assert' → logprob: -12.813411712646484
    7. ' ' → logprob: -13.313411712646484
    8. 'elif' → logprob: -13.438411712646484
    9. '            
' → logprob: -13.813411712646484
    10. 'for' → logprob: -14.688411712646484

Token 201: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25534966588020325
    2. ' if' → logprob: -1.5053496360778809
    3. '           ' → logprob: -5.880349636077881
    4. '   ' → logprob: -7.880349636077881
    5. 'import' → logprob: -8.505350112915039
    6. 'elif' → logprob: -10.880350112915039
    7. ' ' → logprob: -12.130350112915039
    8. 'assert' → logprob: -12.505350112915039
    9. '            
' → logprob: -12.505350112915039
    10. '  ' → logprob: -12.630350112915039

Token 202: ' que' (ID: 661)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7273884415626526
    2. 'len' → logprob: -1.4773883819580078
    3. ' len' → logprob: -1.8523883819580078
    4. 'line' → logprob: -2.102388381958008
    5. '           ' → logprob: -5.727388381958008
    6. ' all' → logprob: -6.102388381958008
    7. ' que' → logprob: -6.602388381958008
    8. 'all' → logprob: -7.102388381958008
    9. ' ' → logprob: -7.352388381958008
    10. '   ' → logprob: -7.852388381958008

Token 203: ' sa' (ID: 880)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5328378677368164
    2. ' len' → logprob: -1.1578378677368164
    3. '1' → logprob: -2.6578378677368164
    4. ' ' → logprob: -3.6578378677368164
    5. ' all' → logprob: -6.532837867736816
    6. 'all' → logprob: -7.157837867736816
    7. '0' → logprob: -8.282837867736816
    8. 'line' → logprob: -8.657837867736816
    9. ' line' → logprob: -8.907837867736816
    10. '100' → logprob: -9.407837867736816

Token 204: ' longueur' (ID: 104613)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.40610936284065247
    2. ' longueur' → logprob: -1.53110933303833
    3. 'ength' → logprob: -3.03110933303833
    4. 'long' → logprob: -3.78110933303833
    5. ' len' → logprob: -4.15610933303833
    6. 'n' → logprob: -4.53110933303833
    7. 'length' → logprob: -4.65610933303833
    8. ' length' → logprob: -5.78110933303833
    9. '   ' → logprob: -6.03110933303833
    10. ' long' → logprob: -6.53110933303833

Token 205: ' est' (ID: 893)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02102317102253437
    2. '<=' → logprob: -3.8960232734680176
    3. '()' → logprob: -8.64602279663086
    4. ' >=' → logprob: -9.27102279663086
    5. ' >' → logprob: -9.27102279663086
    6. '>' → logprob: -10.02102279663086
    7. '   ' → logprob: -10.14602279663086
    8. ' ' → logprob: -11.27102279663086
    9. '>=' → logprob: -12.02102279663086
    10. '```' → logprob: -13.02102279663086

Token 206: ' au' (ID: 2791)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.179445281624794
    2. ' <=' → logprob: -2.429445266723633
    3. '1' → logprob: -3.429445266723633
    4. '0' → logprob: -3.679445266723633
    5. '100' → logprob: -5.554445266723633
    6. 'au' → logprob: -5.804445266723633
    7. 'inf' → logprob: -5.929445266723633
    8. '```' → logprob: -6.054445266723633
    9. '>' → logprob: -6.429445266723633
    10. ' ' → logprob: -6.804445266723633

Token 207: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0005128794582560658
    2. 'moins' → logprob: -8.000513076782227
    3. 'most' → logprob: -9.125513076782227
    4. 'max' → logprob: -10.250513076782227
    5. 'maximum' → logprob: -10.500513076782227
    6. ' plus' → logprob: -12.625513076782227
    7. 'Plus' → logprob: -14.125513076782227
    8. 'pl' → logprob: -14.375513076782227
    9. 'm' → logprob: -15.000513076782227
    10. 'mo' → logprob: -15.125513076782227

Token 208: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0336492694914341
    2. ' ' → logprob: -3.408649206161499
    3. '1' → logprob: -14.533649444580078
    4. '=' → logprob: -14.658649444580078
    5. ' ' → logprob: -14.658649444580078
    6. '10' → logprob: -14.783649444580078
    7. '```' → logprob: -14.783649444580078
    8. 's' → logprob: -14.908649444580078
    9. ' de' → logprob: -15.908649444580078
    10. 'c' → logprob: -16.033649444580078

Token 209: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -14.87501335144043
    4. '10' → logprob: -15.37501335144043
    5. '50' → logprob: -16.50001335144043
    6. '```' → logprob: -18.43751335144043
    7. '１００' → logprob: -18.81251335144043
    8. 's' → logprob: -18.81251335144043
    9. 'l' → logprob: -19.25001335144043
    10. '0' → logprob: -19.25001335144043

Token 210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01242453046143055
    2. ' if' → logprob: -4.887424468994141
    3. '            
' → logprob: -5.887424468994141
    4. ' and' → logprob: -6.512424468994141
    5. '       ' → logprob: -9.13742446899414
    6. '   ' → logprob: -9.26242446899414
    7. ',' → logprob: -9.26242446899414
    8. 'if' → logprob: -9.51242446899414
    9. 'and' → logprob: -9.76242446899414
    10. '          ' → logprob: -10.76242446899414

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028958094771951437
    2. ' if' → logprob: -6.377895832061768
    3. '            
' → logprob: -7.252895832061768
    4. '       ' → logprob: -7.877895832061768
    5. '   ' → logprob: -10.12789535522461
    6. 'if' → logprob: -11.00289535522461
    7. '          ' → logprob: -11.25289535522461
    8. '    ' → logprob: -11.87789535522461
    9. ' ' → logprob: -12.25289535522461
    10. '            ' → logprob: -12.75289535522461

Token 212: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6939643621444702
    2. ' if' → logprob: -0.6939643621444702
    3. '           ' → logprob: -7.19396448135376
    4. '   ' → logprob: -9.693964004516602
    5. 'import' → logprob: -13.193964004516602
    6. ' ' → logprob: -14.443964004516602
    7. '       ' → logprob: -14.443964004516602
    8. '            
' → logprob: -14.818964004516602
    9. 'elif' → logprob: -15.193964004516602
    10. '	if' → logprob: -15.568964004516602

Token 213: ' len' (ID: 4631)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4152339696884155
    2. ' len' → logprob: -1.5402339696884155
    3. ' all' → logprob: -2.415234088897705
    4. 'line' → logprob: -3.915234088897705
    5. 'len' → logprob: -4.415234088897705
    6. ' not' → logprob: -6.290234088897705
    7. 'all' → logprob: -6.540234088897705
    8. '(line' → logprob: -7.540234088897705
    9. '(len' → logprob: -9.290233612060547
    10. ' ' → logprob: -9.415233612060547

Token 214: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -16.1250057220459
    4. '[line' → logprob: -16.6250057220459
    5. '=line' → logprob: -17.1250057220459
    6. '(
' → logprob: -17.2500057220459
    7. ' line' → logprob: -18.2500057220459
    8. '(Line' → logprob: -19.1250057220459
    9. '(lines' → logprob: -19.3750057220459
    10. 'line' → logprob: -19.5000057220459

Token 215: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.054230280220508575
    2. ')' → logprob: -3.054230213165283
    3. '<=' → logprob: -5.429230213165283
    4. ' )' → logprob: -7.429230213165283
    5. ' >' → logprob: -8.054230690002441
    6. ')<=' → logprob: -8.304230690002441
    7. '()' → logprob: -10.054230690002441
    8. '>' → logprob: -10.304230690002441
    9. ')>' → logprob: -13.679230690002441
    10. ' ' → logprob: -13.804230690002441

Token 216: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.012114603072404861
    2. '<=' → logprob: -4.887114524841309
    3. ' >' → logprob: -5.762114524841309
    4. '()' → logprob: -6.887114524841309
    5. '>' → logprob: -8.137114524841309
    6. ')' → logprob: -10.512114524841309
    7. ' ' → logprob: -12.387114524841309
    8. '()>' → logprob: -13.012114524841309
    9. ')<=' → logprob: -13.012114524841309
    10. '```' → logprob: -13.887114524841309

Token 217: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0002036595979006961
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. '```' → logprob: -18.12520408630371
    5. '１００' → logprob: -18.37520408630371
    6. '  ' → logprob: -19.62520408630371
    7. '[' → logprob: -20.37520408630371
    8. '1' → logprob: -20.62520408630371
    9. '0' → logprob: -20.93770408630371
    10. '(' → logprob: -21.18770408630371

Token 218: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -17.75
    4. '１００' → logprob: -17.875
    5. '1' → logprob: -18.25
    6. '   ' → logprob: -18.875
    7. '10' → logprob: -19.5
    8. '[' → logprob: -19.5
    9. '0' → logprob: -19.75
    10. 's' → logprob: -21.0

Token 219: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018151231110095978
    2. 'and' → logprob: -4.01815128326416
    3. ' ' → logprob: -14.14315128326416
    4. '   ' → logprob: -14.76815128326416
    5. '           ' → logprob: -15.89315128326416
    6. '    ' → logprob: -16.643150329589844
    7. '       ' → logprob: -16.768150329589844
    8. '	and' → logprob: -17.518150329589844
    9. '  ' → logprob: -18.018150329589844
    10. ' и' → logprob: -18.268150329589844

Token 220: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06774500757455826
    2. 'all' → logprob: -2.8177449703216553
    3. ' line' → logprob: -5.317745208740234
    4. ' all' → logprob: -7.067745208740234
    5. '(line' → logprob: -12.692745208740234
    6. '   ' → logprob: -14.942745208740234
    7. '	line' → logprob: -15.067745208740234
    8. '[line' → logprob: -15.192745208740234
    9. '#line' → logprob: -15.692745208740234
    10. ' ' → logprob: -15.692745208740234

Token 221: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -5.860340752406046e-05
    2. '.' → logprob: -9.8750581741333
    3. ' .' → logprob: -12.0000581741333
    4. '.replace' → logprob: -14.3750581741333
    5. 'is' → logprob: -16.000059127807617
    6. '   ' → logprob: -16.125059127807617
    7. '.encode' → logprob: -16.500059127807617
    8. ').' → logprob: -17.500059127807617
    9. '.strip' → logprob: -18.000059127807617
    10. '.alpha' → logprob: -19.375059127807617

Token 222: 'ascii' (ID: 91813)
  Prédit: 'alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -0.0005610156804323196
    2. 'ascii' → logprob: -7.500561237335205
    3. 'al' → logprob: -11.750560760498047
    4. 'alphabet' → logprob: -16.625560760498047
    5. '_alpha' → logprob: -18.500560760498047
    6. ' alpha' → logprob: -18.625560760498047
    7. '(alpha' → logprob: -19.375560760498047
    8. '-alpha' → logprob: -19.750560760498047
    9. 'alp' → logprob: -19.750560760498047
    10. 'lower' → logprob: -19.875560760498047

Token 223: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.1756367712223437e-05
    2. 'and' → logprob: -11.500011444091797
    3. '()
' → logprob: -14.000011444091797
    4. ' and' → logprob: -15.250011444091797
    5. ' ()' → logprob: -15.750011444091797
    6. ')' → logprob: -15.750011444091797
    7. '(' → logprob: -16.000011444091797
    8. '())' → logprob: -17.250011444091797
    9. '()==' → logprob: -17.750011444091797
    10. '():
' → logprob: -17.750011444091797

Token 224: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16032972931861877
    2. 'and' → logprob: -1.9103296995162964
    3. '()' → logprob: -9.285329818725586
    4. '           ' → logprob: -11.785329818725586
    5. '   ' → logprob: -12.785329818725586
    6. '       ' → logprob: -14.410329818725586
    7. '	and' → logprob: -15.160329818725586
    8. ')' → logprob: -15.410329818725586
    9. ' ' → logprob: -15.535329818725586
    10. 'andr' → logprob: -15.660329818725586

Token 225: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.014181718230247498
    2. ' line' → logprob: -4.264181613922119
    3. '(line' → logprob: -11.264182090759277
    4. 'all' → logprob: -12.389182090759277
    5. ' all' → logprob: -14.389182090759277
    6. '#line' → logprob: -15.264182090759277
    7. '   ' → logprob: -15.639182090759277
    8. '	line' → logprob: -16.26418113708496
    9. ' ' → logprob: -17.01418113708496
    10. '           ' → logprob: -17.26418113708496

Token 226: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -6.635164754698053e-05
    2. '.' → logprob: -10.125066757202148
    3. 'is' → logprob: -10.750066757202148
    4. ' .' → logprob: -13.250066757202148
    5. '.replace' → logprob: -13.875066757202148
    6. '.alpha' → logprob: -14.375066757202148
    7. ').' → logprob: -14.500066757202148
    8. '.encode' → logprob: -15.750066757202148
    9. '   ' → logprob: -15.875066757202148
    10. '.strip' → logprob: -16.12506675720215

Token 227: 'alpha' (ID: 15453)
  Prédit: 'alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alpha' → logprob: -9.088346359931165e-07
    2. 'al' → logprob: -14.000000953674316
    3. '_alpha' → logprob: -18.5
    4. ' alpha' → logprob: -18.625
    5. 'lower' → logprob: -19.375
    6. 'alphabet' → logprob: -19.5
    7. '(alpha' → logprob: -20.375
    8. '-alpha' → logprob: -20.625
    9. 'ascii' → logprob: -21.25
    10. '.alpha' → logprob: -21.375

Token 228: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0016004408244043589
    2. '()' → logprob: -6.50160026550293
    3. '():
' → logprob: -9.25160026550293
    4. ' ():' → logprob: -13.62660026550293
    5. '()==' → logprob: -15.25160026550293
    6. '(' → logprob: -15.50160026550293
    7. ':' → logprob: -16.00160026550293
    8. '()>' → logprob: -16.25160026550293
    9. '():
' → logprob: -16.37660026550293
    10. '():

' → logprob: -17.37660026550293

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019212214276194572
    2. ':' → logprob: -4.769212245941162
    3. ':
' → logprob: -5.144212245941162
    4. ' and' → logprob: -5.644212245941162
    5. '           ' → logprob: -7.144212245941162
    6. '       ' → logprob: -9.144211769104004
    7. '                
' → logprob: -9.144211769104004
    8. 'and' → logprob: -10.019211769104004
    9. ' :' → logprob: -10.894211769104004
    10. '):
' → logprob: -11.019211769104004

Token 230: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6676636338233948
    2. 'if' → logprob: -1.41766357421875
    3. '               ' → logprob: -1.41766357421875
    4. '       ' → logprob: -6.29266357421875
    5. '           ' → logprob: -7.66766357421875
    6. '   ' → logprob: -8.54266357421875
    7. '                   ' → logprob: -10.91766357421875
    8. '                
' → logprob: -13.79266357421875
    9. ' ' → logprob: -14.04266357421875
    10. '	if' → logprob: -14.16766357421875

Token 231: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016816407442092896
    2. ' if' → logprob: -4.26681661605835
    3. '               ' → logprob: -6.64181661605835
    4. '           ' → logprob: -6.64181661605835
    5. '   ' → logprob: -10.766816139221191
    6. '       ' → logprob: -11.016816139221191
    7. 'count' → logprob: -13.891816139221191
    8. '            
' → logprob: -15.141816139221191
    9. '              ' → logprob: -15.391816139221191
    10. '                
' → logprob: -15.641816139221191

Token 232: ' la' (ID: 557)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.002834826707839966
    2. 'is' → logprob: -5.877834796905518
    3. '   ' → logprob: -10.877835273742676
    4. '               ' → logprob: -12.252835273742676
    5. '           ' → logprob: -12.627835273742676
    6. '                   ' → logprob: -13.752835273742676
    7. '    ' → logprob: -13.877835273742676
    8. ' ' → logprob: -14.877835273742676
    9. '	is' → logprob: -16.00283432006836
    10. '  ' → logprob: -16.25283432006836

Token 233: ' chaîne' (ID: 89288)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.023250950500369072
    2. ' is' → logprob: -3.7732510566711426
    3. 's' → logprob: -13.648250579833984
    4. '
' → logprob: -13.898250579833984
    5. ' ' → logprob: -14.273250579833984
    6. '_is' → logprob: -14.273250579833984
    7. '   ' → logprob: -14.898250579833984
    8. '           ' → logprob: -15.148250579833984
    9. '    ' → logprob: -15.273250579833984
    10. '.is' → logprob: -15.398250579833984

Token 234: ' est' (ID: 893)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11720222234725952
    2. ' est' → logprob: -2.6172022819519043
    3. ' is' → logprob: -3.6172022819519043
    4. '           ' → logprob: -5.492202281951904
    5. 'est' → logprob: -6.742202281951904
    6. '   ' → logprob: -6.867202281951904
    7. 'is' → logprob: -6.867202281951904
    8. '                
' → logprob: -7.492202281951904
    9. ' and' → logprob: -7.617202281951904
    10. '                   ' → logprob: -7.617202281951904

Token 235: ' palindrome' (ID: 160469)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02677788957953453
    2. 'is' → logprob: -3.651777982711792
    3. ' palindrome' → logprob: -8.401778221130371
    4. 'pal' → logprob: -9.151778221130371
    5. '_pal' → logprob: -10.151778221130371
    6. '   ' → logprob: -10.151778221130371
    7. ' pal' → logprob: -10.776778221130371
    8. 'Palindrome' → logprob: -11.151778221130371
    9. ' est' → logprob: -11.526778221130371
    10. ' un' → logprob: -12.276778221130371

Token 236: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08952886611223221
    2. ' and' → logprob: -3.464528799057007
    3. ',' → logprob: -3.589528799057007
    4. ':' → logprob: -3.839528799057007
    5. '                   ' → logprob: -5.964529037475586
    6. ':
' → logprob: -6.214529037475586
    7. '           ' → logprob: -8.589529037475586
    8. ' if' → logprob: -8.964529037475586
    9. ' :' → logprob: -9.464529037475586
    10. 'and' → logprob: -9.589529037475586

Token 237: ' incr' (ID: 52395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0284297876060009
    2. '               ' → logprob: -4.153429985046387
    3. ' count' → logprob: -4.528429985046387
    4. 'count' → logprob: -6.778429985046387
    5. '   ' → logprob: -9.278429985046387
    6. '           ' → logprob: -9.403429985046387
    7. '                ' → logprob: -9.653429985046387
    8. '                    
' → logprob: -9.653429985046387
    9. '                  ' → logprob: -10.903429985046387
    10. '                       ' → logprob: -11.653429985046387

Token 238: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.026435798034071922
    2. 'é' → logprob: -3.6514358520507812
    3. '               ' → logprob: -10.026435852050781
    4. 'ement' → logprob: -10.401435852050781
    5. 'ém' → logprob: -11.026435852050781
    6. '   ' → logprob: -11.401435852050781
    7. 'éments' → logprob: -11.401435852050781
    8. 'ment' → logprob: -11.651435852050781
    9. 'è' → logprob: -12.401435852050781
    10. '           ' → logprob: -12.401435852050781

Token 239: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0036656332667917013
    2. 'count' → logprob: -6.753665447235107
    3. 'e' → logprob: -7.378665447235107
    4. 'é' → logprob: -7.628665447235107
    5. '               ' → logprob: -7.628665447235107
    6. '   ' → logprob: -7.878665447235107
    7. '                   ' → logprob: -8.753665924072266
    8. ' count' → logprob: -8.878665924072266
    9. 'ent' → logprob: -9.253665924072266
    10. '(count' → logprob: -10.128665924072266

Token 240: ' le' (ID: 505)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5759981274604797
    2. 'count' → logprob: -0.8259981274604797
    3. '               ' → logprob: -10.700998306274414
    4. '	count' → logprob: -11.700998306274414
    5. '(count' → logprob: -11.950998306274414
    6. 'counter' → logprob: -12.450998306274414
    7. ' counter' → logprob: -12.700998306274414
    8. '                   ' → logprob: -12.700998306274414
    9. '=count' → logprob: -13.200998306274414
    10. '   ' → logprob: -13.325998306274414

Token 241: ' compteur' (ID: 163344)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0011779663618654013
    2. ' count' → logprob: -6.751177787780762
    3. 'counter' → logprob: -11.876177787780762
    4. '   ' → logprob: -14.501177787780762
    5. 'c' → logprob: -17.001178741455078
    6. 'counts' → logprob: -17.251178741455078
    7. '_count' → logprob: -17.376178741455078
    8. '	count' → logprob: -17.501178741455078
    9. 'cou' → logprob: -17.876178741455078
    10. ' ' → logprob: -18.126178741455078

Token 242: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001227276516146958
    2. '                   ' → logprob: -10.125123023986816
    3. ',' → logprob: -10.625123023986816
    4. '                
' → logprob: -10.750123023986816
    5. 'count' → logprob: -11.125123023986816
    6. '           ' → logprob: -11.500123023986816
    7. '   ' → logprob: -13.500123023986816
    8. '
' → logprob: -13.750123023986816
    9. ' count' → logprob: -13.875123023986816
    10. '       ' → logprob: -14.000123023986816

Token 243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008819266804493964
    2. ' if' → logprob: -7.500882148742676
    3. 'if' → logprob: -8.250882148742676
    4. '           ' → logprob: -10.375882148742676
    5. '       ' → logprob: -11.125882148742676
    6. 'count' → logprob: -11.875882148742676
    7. '                   ' → logprob: -11.875882148742676
    8. '   ' → logprob: -12.750882148742676
    9. '                
' → logprob: -13.125882148742676
    10. '
' → logprob: -14.500882148742676

Token 244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6854752898216248
    2. ' if' → logprob: -1.1854753494262695
    3. '               ' → logprob: -1.8104753494262695
    4. 'count' → logprob: -3.6854753494262695
    5. ' count' → logprob: -6.4354753494262695
    6. '           ' → logprob: -8.81047534942627
    7. '       ' → logprob: -9.43547534942627
    8. '   ' → logprob: -10.06047534942627
    9. '                   ' → logprob: -11.68547534942627
    10. '                
' → logprob: -14.68547534942627

Token 245: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1269291490316391
    2. 'is' → logprob: -2.1269290447235107
    3. '               ' → logprob: -14.75192928314209
    4. '           ' → logprob: -15.12692928314209
    5. '   ' → logprob: -15.75192928314209
    6. '(is' → logprob: -16.626928329467773
    7. '	is' → logprob: -17.001928329467773
    8. ' ' → logprob: -17.126928329467773
    9. '                   ' → logprob: -17.126928329467773
    10. ')is' → logprob: -18.001928329467773

Token 246: '_pal' (ID: 166486)
  Prédit: '_pal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -1.1472419600977446e-06
    2. 'pal' → logprob: -13.750000953674316
    3. ' palindrome' → logprob: -17.750001907348633
    4. '_pat' → logprob: -17.875001907348633
    5. 'Palindrome' → logprob: -18.375001907348633
    6. '_' → logprob: -18.375001907348633
    7. '_pol' → logprob: -19.500001907348633
    8. '_par' → logprob: -19.625001907348633
    9. '-pal' → logprob: -19.625001907348633
    10. 'is' → logprob: -19.750001907348633

Token 247: 'indrome' (ID: 66540)
  Prédit: 'indrome'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indrome' → logprob: -0.003331352723762393
    2. 'ind' → logprob: -5.753331184387207
    3. 'ndrome' → logprob: -9.128331184387207
    4. 'indre' → logprob: -11.378331184387207
    5. 'o' → logprob: -12.628331184387207
    6. 'd' → logprob: -12.753331184387207
    7. 'ot' → logprob: -12.753331184387207
    8. 'rome' → logprob: -12.878331184387207
    9. 'inder' → logprob: -13.128331184387207
    10. 't' → logprob: -13.253331184387207

Token 248: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -14.375028610229492
    4. '(
' → logprob: -16.625028610229492
    5. '(Line' → logprob: -17.125028610229492
    6. '[line' → logprob: -18.250028610229492
    7. '(s' → logprob: -18.500028610229492
    8. '#line' → logprob: -18.625028610229492
    9. '=line' → logprob: -18.875028610229492
    10. ')' → logprob: -19.625028610229492

Token 249: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16024371981620789
    2. '):
' → logprob: -1.9102437496185303
    3. ')' → logprob: -11.53524398803711
    4. ' ):' → logprob: -12.28524398803711
    5. '):
' → logprob: -13.16024398803711
    6. '   ' → logprob: -13.78524398803711
    7. '):

' → logprob: -14.53524398803711
    8. ':' → logprob: -14.78524398803711
    9. ' ):
' → logprob: -14.78524398803711
    10. '       ' → logprob: -15.16024398803711

Token 250: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00011737081513274461
    2. 'count' → logprob: -9.250117301940918
    3. '               ' → logprob: -11.750117301940918
    4. '
' → logprob: -12.375117301940918
    5. ' count' → logprob: -12.875117301940918
    6. '                  ' → logprob: -13.250117301940918
    7. '           ' → logprob: -13.250117301940918
    8. '                       ' → logprob: -14.250117301940918
    9. '		           ' → logprob: -14.625117301940918
    10. '[count' → logprob: -15.125117301940918

Token 251: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.88716059923172
    2. ' count' → logprob: -1.1371605396270752
    3. '                   ' → logprob: -1.3871605396270752
    4. '                       ' → logprob: -4.137160778045654
    5. '       ' → logprob: -6.887160778045654
    6. '   ' → logprob: -7.762160778045654
    7. '               ' → logprob: -8.387160301208496
    8. '           ' → logprob: -11.512160301208496
    9. '	count' → logprob: -12.637160301208496
    10. ' ' → logprob: -13.262160301208496

Token 252: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20147804915905
    2. '+=' → logprob: -1.7014780044555664
    3. '+' → logprob: -9.701478004455566
    4. '=' → logprob: -13.701478004455566
    5. ']+=' → logprob: -13.951478004455566
    6. ')' → logprob: -14.951478004455566
    7. '   ' → logprob: -14.951478004455566
    8. ' +' → logprob: -15.326478004455566
    9. '    ' → logprob: -15.576478004455566
    10. '+="' → logprob: -15.576478004455566

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.000003814697266
    4. '```' → logprob: -20.625003814697266
    5. '１' → logprob: -21.875003814697266
    6. '۱' → logprob: -23.250003814697266
    7. ' ' → logprob: -23.750003814697266
    8. '  ' → logprob: -23.875003814697266
    9. '
' → logprob: -24.000003814697266
    10. '0' → logprob: -24.562503814697266

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -21.625
    4. '１' → logprob: -22.25
    5. '   ' → logprob: -22.875
    6. '۱' → logprob: -23.625
    7. '
' → logprob: -23.625
    8. '2' → logprob: -24.5
    9. '१' → logprob: -24.75
    10. '١' → logprob: -25.25

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5062639117240906
    2. '           ' → logprob: -1.2562639713287354
    3. '
' → logprob: -2.3812639713287354
    4. '       ' → logprob: -4.256263732910156
    5. '    
' → logprob: -5.381263732910156
    6. '            
' → logprob: -7.381263732910156
    7. 'except' → logprob: -7.881263732910156
    8. '        
' → logprob: -8.881263732910156
    9. ' except' → logprob: -10.506263732910156
    10. '```' → logprob: -10.506263732910156

Token 256: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5156242251396179
    2. '           ' → logprob: -1.1406242847442627
    3. '       ' → logprob: -2.5156242847442627
    4. '
' → logprob: -6.265624046325684
    5. 'except' → logprob: -8.140624046325684
    6. '    
' → logprob: -8.390624046325684
    7. '        
' → logprob: -12.015624046325684
    8. '            
' → logprob: -12.265624046325684
    9. '```' → logprob: -13.265624046325684
    10. 'print' → logprob: -13.390624046325684

Token 257: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01563379354774952
    2. 'except' → logprob: -4.265633583068848
    3. '       ' → logprob: -6.640633583068848
    4. '
' → logprob: -9.015633583068848
    5. ' except' → logprob: -10.765633583068848
    6. '    
' → logprob: -11.390633583068848
    7. '           ' → logprob: -12.140633583068848
    8. '	except' → logprob: -14.140633583068848
    9. 'else' (adapté à ' else') → logprob: -14.390633583068848
    10. '        
' → logprob: -14.765633583068848

Token 258: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4083481729030609
    2. ':' → logprob: -1.4083482027053833
    3. '               ' → logprob: -2.4083480834960938
    4. '           ' → logprob: -7.283348083496094
    5. '       ' → logprob: -11.158348083496094
    6. ' :
' → logprob: -11.533348083496094
    7. '   ' → logprob: -12.158348083496094
    8. ':return' → logprob: -12.283348083496094
    9. ' :' → logprob: -12.408348083496094
    10. '):
' → logprob: -12.658348083496094

Token 259: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08461198210716248
    2. 'break' → logprob: -2.9596118927001953
    3. '       ' → logprob: -3.9596118927001953
    4. '           ' → logprob: -5.084611892700195
    5. 'print' → logprob: -5.834611892700195
    6. ' break' → logprob: -6.959611892700195
    7. '   ' → logprob: -9.209611892700195
    8. 'continue' → logprob: -10.584611892700195
    9. ' print' → logprob: -11.209611892700195
    10. '```' → logprob: -12.209611892700195

Token 260: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.706673800945282
    2. 'print' → logprob: -1.0816738605499268
    3. ' break' → logprob: -2.7066738605499268
    4. '           ' → logprob: -2.8316738605499268
    5. ' print' → logprob: -4.581673622131348
    6. 'continue' → logprob: -4.706673622131348
    7. '               ' → logprob: -4.956673622131348
    8. '       ' → logprob: -5.206673622131348
    9. 'pass' → logprob: -5.331673622131348
    10. '#' (adapté à ' #') → logprob: -6.456673622131348

Token 261: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8141627311706543
    2. 'break' → logprob: -1.3141627311706543
    3. ' break' → logprob: -2.5641627311706543
    4. '#' → logprob: -2.6891627311706543
    5. 'pass' → logprob: -2.6891627311706543
    6. 'continue' → logprob: -3.5641627311706543
    7. ' pass' → logprob: -4.189162731170654
    8. ' print' → logprob: -4.189162731170654
    9. ' continue' → logprob: -4.939162731170654
    10. 'import' → logprob: -5.689162731170654

Token 262: ' la' (ID: 557)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.14035367965698242
    2. 'not' → logprob: -2.6403536796569824
    3. ' True' → logprob: -3.0153536796569824
    4. 'True' → logprob: -4.890353679656982
    5. ' len' → logprob: -6.015353679656982
    6. 'len' → logprob: -8.39035415649414
    7. '#' → logprob: -9.14035415649414
    8. '   ' → logprob: -9.89035415649414
    9. ' break' → logprob: -10.01535415649414
    10. 'break' → logprob: -10.64035415649414

Token 263: ' ligne' (ID: 19583)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.34906005859375
    2. 'len' → logprob: -1.47406005859375
    3. ' ligne' → logprob: -1.97406005859375
    4. 'not' → logprob: -2.72406005859375
    5. '#' → logprob: -2.72406005859375
    6. ' line' → logprob: -2.84906005859375
    7. 'ligne' → logprob: -2.84906005859375
    8. ' len' → logprob: -3.22406005859375
    9. 'line' → logprob: -4.09906005859375
    10. 'chaine' → logprob: -4.22406005859375

Token 264: ' ne' (ID: 453)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12279698252677917
    2. 'break' → logprob: -3.8727970123291016
    3. ' continue' → logprob: -3.9977970123291016
    4. 'continue' → logprob: -3.9977970123291016
    5. 'n' → logprob: -4.372797012329102
    6. ' est' → logprob: -4.622797012329102
    7. ' !=' → logprob: -4.622797012329102
    8. ' break' → logprob: -4.622797012329102
    9. ' is' → logprob: -5.622797012329102
    10. ' not' → logprob: -6.247797012329102

Token 265: ' respecte' (ID: 140483)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.5821073651313782
    2. ' pas' → logprob: -1.2071073055267334
    3. ' respecte' → logprob: -2.2071073055267334
    4. ' respect' → logprob: -3.7071073055267334
    5. 'respect' → logprob: -5.8321075439453125
    6. 'pass' → logprob: -7.4571075439453125
    7. ' est' → logprob: -7.5821075439453125
    8. ' répond' → logprob: -7.7071075439453125
    9. ' correspond' → logprob: -7.7071075439453125
    10. ' pass' → logprob: -7.7071075439453125

Token 266: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.02820126712322235
    2. 'pas' → logprob: -3.6532013416290283
    3. ' la' → logprob: -7.403201103210449
    4. '_pas' → logprob: -7.778201103210449
    5. ' not' → logprob: -8.65320110321045
    6. ' les' → logprob: -8.65320110321045
    7. '   ' → logprob: -9.02820110321045
    8. ' aucune' → logprob: -9.65320110321045
    9. ' the' → logprob: -9.77820110321045
    10. ' le' → logprob: -10.15320110321045

Token 267: ' les' (ID: 1341)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26666632294654846
    2. ' la' → logprob: -2.5166664123535156
    3. '           ' → logprob: -3.0166664123535156
    4. '   ' → logprob: -3.7666664123535156
    5. ' le' → logprob: -3.7666664123535156
    6. ' les' → logprob: -3.8916664123535156
    7. 'break' → logprob: -4.766666412353516
    8. ' the' → logprob: -5.391666412353516
    9. ' pas' → logprob: -5.516666412353516
    10. 'le' → logprob: -5.641666412353516

Token 268: ' contraintes' (ID: 167366)
  Prédit: ' critères'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' critères' → logprob: -0.42205625772476196
    2. ' contraintes' → logprob: -1.7970561981201172
    3. ' conditions' → logprob: -2.547056198120117
    4. 'conditions' → logprob: -2.672056198120117
    5. 'cons' → logprob: -5.047056198120117
    6. ' cons' → logprob: -5.547056198120117
    7. ' spéc' → logprob: -5.547056198120117
    8. 'crit' → logprob: -5.922056198120117
    9. 'con' → logprob: -6.047056198120117
    10. ' crit' → logprob: -6.172056198120117

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5848745703697205
    2. '               ' → logprob: -0.8348745703697205
    3. ':' → logprob: -5.584874629974365
    4. '                   ' → logprob: -5.584874629974365
    5. ':
' → logprob: -7.334874629974365
    6. ' ,' → logprob: -8.084874153137207
    7. '           ' → logprob: -8.334874153137207
    8. '   ' → logprob: -9.959874153137207
    9. ',
' → logprob: -10.709874153137207
    10. 'continue' → logprob: -10.709874153137207

Token 270: ' on' (ID: 402)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3264239430427551
    2. 'break' → logprob: -1.3264238834381104
    3. '               ' → logprob: -4.4514241218566895
    4. ' continue' → logprob: -7.7014241218566895
    5. '           ' → logprob: -7.9514241218566895
    6. 'continue' → logprob: -8.326423645019531
    7. '   ' → logprob: -8.826423645019531
    8. '	break' → logprob: -9.576423645019531
    9. 'print' → logprob: -10.201423645019531
    10. 'pass' → logprob: -10.826423645019531

Token 271: ' peut' (ID: 9216)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.35944828391075134
    2. ' break' → logprob: -2.109448194503784
    3. 'continue' → logprob: -2.234448194503784
    4. ' continue' → logprob: -2.984448194503784
    5. '               ' → logprob: -4.109448432922363
    6. '           ' → logprob: -6.234448432922363
    7. 'ignore' → logprob: -6.234448432922363
    8. ' ignore' → logprob: -6.984448432922363
    9. 'raise' → logprob: -7.984448432922363
    10. '   ' → logprob: -8.234448432922363

Token 272: ' choisir' (ID: 47004)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -1.1274610757827759
    2. 'contin' → logprob: -1.2524610757827759
    3. 'continue' → logprob: -1.7524610757827759
    4. ' continue' → logprob: -2.3774609565734863
    5. 'pass' → logprob: -2.3774609565734863
    6. '   ' → logprob: -4.877460956573486
    7. ' pass' → logprob: -5.877460956573486
    8. 'import' → logprob: -5.877460956573486
    9. '           ' → logprob: -6.002460956573486
    10. 'print' → logprob: -6.127460956573486

Token 273: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3221043050289154
    2. '           ' → logprob: -2.0721042156219482
    3. '   ' → logprob: -2.8221042156219482
    4. 'de' → logprob: -3.0721042156219482
    5. '               ' → logprob: -3.5721042156219482
    6. 'd' → logprob: -5.572104454040527
    7. '    ' → logprob: -5.572104454040527
    8. 'continue' → logprob: -6.197104454040527
    9. 'pass' → logprob: -6.572104454040527
    10. '       ' → logprob: -6.822104454040527

Token 274: ''' (ID: 6)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.5020713210105896
    2. 'contin' → logprob: -1.8770713806152344
    3. ' continuer' → logprob: -2.5020713806152344
    4. 'continue' → logprob: -3.2520713806152344
    5. '   ' → logprob: -3.5020713806152344
    6. ' pass' → logprob: -3.5020713806152344
    7. 'ign' → logprob: -4.002071380615234
    8. 'ignore' → logprob: -4.377071380615234
    9. ' continue' → logprob: -4.752071380615234
    10. 'print' → logprob: -5.377071380615234

Token 275: 'ign' (ID: 733)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7633054256439209
    2. 'ign' → logprob: -1.888305425643921
    3. 'ignore' → logprob: -2.263305425643921
    4. 'contin' → logprob: -2.513305425643921
    5. ' pass' → logprob: -2.638305425643921
    6. ' continuer' → logprob: -3.013305425643921
    7. 'continue' → logprob: -3.638305425643921
    8. ' ignore' → logprob: -4.1383056640625
    9. ' continue' → logprob: -4.3883056640625
    10. '   ' → logprob: -4.8883056640625

Token 276: 'orer' (ID: 13634)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.5763810873031616
    2. 'orer' → logprob: -0.8263810873031616
    3. 'erer' → logprob: -7.826381206512451
    4. 'érer' → logprob: -10.951380729675293
    5. '```' → logprob: -11.701380729675293
    6. 'or' → logprob: -12.701380729675293
    7. 'errer' → logprob: -12.826380729675293
    8. 'oner' → logprob: -13.201380729675293
    9. 'rer' → logprob: -13.326380729675293
    10. 'urer' → logprob: -13.701380729675293

Token 277: '
' (ID: 198)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.15401335060596466
    2. 'le' → logprob: -2.9040133953094482
    3. ' or' → logprob: -3.6540133953094482
    4. ' la' → logprob: -4.029013156890869
    5. 'pass' → logprob: -4.279013156890869
    6. '   ' → logprob: -4.654013156890869
    7. ' ou' → logprob: -5.904013156890869
    8. 'continue' → logprob: -6.279013156890869
    9. ' le' → logprob: -6.279013156890869
    10. 'or' → logprob: -6.404013156890869

Token 278: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16589945554733276
    2. '               ' → logprob: -2.4158995151519775
    3. ' continue' → logprob: -3.6658995151519775
    4. 'continue' → logprob: -4.040899276733398
    5. '       ' → logprob: -4.415899276733398
    6. ' or' → logprob: -5.415899276733398
    7. '   ' → logprob: -5.915899276733398
    8. 'pass' → logprob: -7.665899276733398
    9. ' pass' → logprob: -9.165899276733398
    10. ' ' → logprob: -9.540899276733398

Token 279: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.16084405779838562
    2. ' continue' → logprob: -2.160844087600708
    3. 'pass' → logprob: -3.785844087600708
    4. ' pass' → logprob: -5.035843849182129
    5. '               ' → logprob: -5.910843849182129
    6. '           ' → logprob: -6.910843849182129
    7. '   ' → logprob: -8.535843849182129
    8. 'break' → logprob: -9.035843849182129
    9. '       ' → logprob: -9.160843849182129
    10. '                   ' → logprob: -11.410843849182129

Token 280: ' ou' (ID: 2031)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3978867828845978
    2. 'pass' → logprob: -1.2728867530822754
    3. ' continue' → logprob: -3.2728867530822754
    4. ' pass' → logprob: -4.897886753082275
    5. '   ' → logprob: -6.147886753082275
    6. '           ' → logprob: -8.022887229919434
    7. '               ' → logprob: -8.397887229919434
    8. 'contin' → logprob: -9.522887229919434
    9. '       ' → logprob: -10.647887229919434
    10. 'continu' → logprob: -10.647887229919434

Token 281: ' sortir' (ID: 55515)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2151535302400589
    2. 'break' → logprob: -2.090153455734253
    3. ' continuer' → logprob: -3.840153455734253
    4. ' continue' → logprob: -3.965153455734253
    5. '   ' → logprob: -4.590153694152832
    6. '               ' → logprob: -5.465153694152832
    7. ' pass' → logprob: -5.840153694152832
    8. '    ' → logprob: -6.090153694152832
    9. ' raise' → logprob: -6.090153694152832
    10. 'pass' → logprob: -6.215153694152832

Token 282: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6880927085876465
    2. '               ' → logprob: -0.9380927085876465
    3. 'break' → logprob: -2.9380927085876465
    4. '           ' → logprob: -4.1880927085876465
    5. ' break' → logprob: -4.4380927085876465
    6. '()
' → logprob: -4.9380927085876465
    7. ')' → logprob: -5.5630927085876465
    8. '   ' → logprob: -5.8130927085876465
    9. '                   ' → logprob: -6.1880927085876465
    10. '(' → logprob: -6.3130927085876465

Token 283: ' ici' (ID: 27994)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006702585145831108
    2. 'break' → logprob: -6.006702423095703
    3. '       ' → logprob: -6.256702423095703
    4. '           ' → logprob: -6.506702423095703
    5. '   ' → logprob: -8.256702423095703
    6. ' break' → logprob: -8.631702423095703
    7. 'continue' → logprob: -8.756702423095703
    8. '#' → logprob: -8.881702423095703
    9. ' continue' → logprob: -10.881702423095703
    10. 'print' → logprob: -10.881702423095703

Token 284: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3044613301753998
    2. '   ' → logprob: -2.3044612407684326
    3. ' continue' → logprob: -2.3044612407684326
    4. ' break' → logprob: -3.6794612407684326
    5. 'continue' → logprob: -4.179461479187012
    6. '           ' → logprob: -4.429461479187012
    7. 'break' → logprob: -5.304461479187012
    8. '                   ' → logprob: -5.929461479187012
    9. '       ' → logprob: -7.429461479187012
    10. ' on' → logprob: -7.929461479187012

Token 285: ' ignore' (ID: 17887)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17643578350543976
    2. '               ' → logprob: -2.676435708999634
    3. ' continue' → logprob: -2.926435708999634
    4. 'ignore' → logprob: -3.551435708999634
    5. 'contin' → logprob: -5.301435947418213
    6. ' continuer' → logprob: -6.301435947418213
    7. ' ignore' → logprob: -6.676435947418213
    8. '   ' → logprob: -7.426435947418213
    9. '                   ' → logprob: -7.801435947418213
    10. 'break' → logprob: -7.801435947418213

Token 286: ' simplement' (ID: 45065)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06731222569942474
    2. '           ' → logprob: -2.942312240600586
    3. 'continue' → logprob: -4.567312240600586
    4. ' continue' → logprob: -6.567312240600586
    5. '       ' → logprob: -8.067312240600586
    6. '   ' → logprob: -8.942312240600586
    7. '.' → logprob: -10.317312240600586
    8. '<|end|>' → logprob: -10.692312240600586
    9. 'pass' → logprob: -11.442312240600586
    10. '	continue' → logprob: -11.567312240600586

Token 287: '
' (ID: 198)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4887281656265259
    2. '               ' → logprob: -1.4887281656265259
    3. '           ' → logprob: -1.9887281656265259
    4. ' continue' → logprob: -3.8637280464172363
    5. 'pass' → logprob: -5.988728046417236
    6. '       ' → logprob: -7.738728046417236
    7. '   ' → logprob: -9.863728523254395
    8. ' pass' → logprob: -10.738728523254395
    9. '	continue' → logprob: -11.238728523254395
    10. '                   ' → logprob: -11.488728523254395

Token 288: '               ' (ID: 506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0693086385726929
    2. '               ' → logprob: -1.0693086385726929
    3. '           ' → logprob: -1.4443086385726929
    4. 'continue' → logprob: -2.9443087577819824
    5. ' continue' → logprob: -4.319308757781982
    6. '       ' → logprob: -5.069308757781982
    7. 'except' → logprob: -5.319308757781982
    8. ' except' → logprob: -7.819308757781982
    9. 'pass' → logprob: -10.569308280944824
    10. '            
' → logprob: -11.569308280944824

Token 289: ' pass' (ID: 1853)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.038149017840623856
    2. ' continue' → logprob: -3.538149118423462
    3. '           ' → logprob: -5.538148880004883
    4. 'pass' (adapté à ' pass') → logprob: -5.538148880004883
    5. '               ' → logprob: -8.163148880004883
    6. ' pass' → logprob: -8.913148880004883
    7. '   ' → logprob: -10.163148880004883
    8. '       ' → logprob: -10.288148880004883
    9. 'continu' → logprob: -13.163148880004883
    10. '	continue' → logprob: -14.163148880004883

Token 290: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07980067282915115
    2. '
' → logprob: -2.829800605773926
    3. '    
' → logprob: -4.329800605773926
    4. 'except' → logprob: -5.579800605773926
    5. '       ' → logprob: -7.704800605773926
    6. '        
' → logprob: -9.079800605773926
    7. ' except' → logprob: -9.329800605773926
    8. '

' → logprob: -11.079800605773926
    9. '            
' → logprob: -11.454800605773926
    10. '  
' → logprob: -11.579800605773926

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02986098825931549
    2. '
' → logprob: -3.9048609733581543
    3. '    
' → logprob: -4.779860973358154
    4. 'except' → logprob: -7.279860973358154
    5. '       ' → logprob: -10.029861450195312
    6. 'print' → logprob: -10.154861450195312
    7. '        
' → logprob: -10.404861450195312
    8. 'if' → logprob: -10.529861450195312
    9. '  
' → logprob: -10.779861450195312
    10. '\n' → logprob: -11.529861450195312

Token 292: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5078688263893127
    2. 'except' (adapté à ' except') → logprob: -1.007868766784668
    3. ' except' → logprob: -3.882868766784668
    4. '
' → logprob: -4.757868766784668
    5. '    
' → logprob: -5.632868766784668
    6. '       ' → logprob: -8.882868766784668
    7. '        
' → logprob: -9.257868766784668
    8. 'finally' → logprob: -9.882868766784668
    9. '	except' → logprob: -10.007868766784668
    10. '\n' → logprob: -10.257868766784668

Token 293: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.03804149478673935
    2. 'EOF' → logprob: -3.288041591644287
    3. '(' → logprob: -20.788042068481445
    4. ' ' → logprob: -20.913042068481445
    5. ' Keyboard' → logprob: -21.538042068481445
    6. 'EO' → logprob: -22.538042068481445
    7. '   ' → logprob: -22.913042068481445
    8. ' (' → logprob: -23.038042068481445
    9. ' ' → logprob: -23.163042068481445
    10. ' eof' → logprob: -23.288042068481445

Token 294: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: 0.0
    2. 'rror' → logprob: -17.875
    3. 'EOF' → logprob: -18.375
    4. '
' → logprob: -18.625
    5. 'error' → logprob: -21.25
    6. ' Error' → logprob: -21.375
    7. '   ' → logprob: -21.5
    8. '    
' → logprob: -21.5
    9. 'Erro' → logprob: -22.5
    10. '```' → logprob: -22.5

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01293149869889021
    2. ':
' → logprob: -4.3879313468933105
    3. '       ' → logprob: -8.137931823730469
    4. '   ' → logprob: -9.137931823730469
    5. '():' → logprob: -11.012931823730469
    6. '():
' → logprob: -12.637931823730469
    7. '):' → logprob: -14.012931823730469
    8. ' :' → logprob: -14.262931823730469
    9. '):
' → logprob: -15.762931823730469
    10. '           ' → logprob: -15.887931823730469

Token 296: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16047362983226776
    2. '       ' → logprob: -1.9104735851287842
    3. ' pass' → logprob: -8.410473823547363
    4. 'pass' → logprob: -11.535473823547363
    5. '    ' → logprob: -12.285473823547363
    6. '    
' → logprob: -12.410473823547363
    7. ' return' → logprob: -12.910473823547363
    8. '   ' → logprob: -13.910473823547363
    9. '```' → logprob: -14.035473823547363
    10. '	pass' → logprob: -14.160473823547363

Token 297: ' #' (ID: 1069)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.20360396802425385
    2. '   ' → logprob: -1.703603982925415
    3. ' pass' → logprob: -6.453603744506836
    4. 'print' → logprob: -7.578603744506836
    5. 'return' → logprob: -9.578603744506836
    6. '#' (adapté à ' #') → logprob: -10.578603744506836
    7. '       ' → logprob: -12.953603744506836
    8. '	pass' → logprob: -12.953603744506836
    9. '    
' → logprob: -14.328603744506836
    10. ' ' → logprob: -14.578603744506836

Token 298: ' Fin' (ID: 7772)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.00947083905339241
    2. ' pass' → logprob: -5.5094709396362305
    3. '#' → logprob: -6.0094709396362305
    4. '   ' → logprob: -6.1344709396362305
    5. 'print' → logprob: -7.7594709396362305
    6. 'Pass' → logprob: -8.25947093963623
    7. 'return' → logprob: -9.63447093963623
    8. ' #' → logprob: -13.25947093963623
    9. '       ' → logprob: -14.13447093963623
    10. '	pass' → logprob: -14.50947093963623

Token 299: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23231787979602814
    2. 'de' → logprob: -1.7323179244995117
    3. 'd' → logprob: -4.232317924499512
    4. '   ' → logprob: -5.357317924499512
    5. ' des' → logprob: -5.857317924499512
    6. ' of' → logprob: -5.982317924499512
    7. 'du' → logprob: -6.482317924499512
    8. ' d' → logprob: -7.107317924499512
    9. '#' → logprob: -7.232317924499512
    10. ' du' → logprob: -7.607317924499512

Token 300: ' entr' (ID: 7072)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8167845606803894
    2. 'entr' → logprob: -1.3167846202850342
    3. ' entr' → logprob: -1.6917846202850342
    4. 'entrée' → logprob: -2.816784620285034
    5. ' données' → logprob: -3.441784620285034
    6. 'input' → logprob: -5.191784381866455
    7. ' input' → logprob: -5.816784381866455
    8. 'inputs' → logprob: -6.066784381866455
    9. 'entrant' → logprob: -7.191784381866455
    10. ' inputs' → logprob: -7.941784381866455

Token 301: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0014452338218688965
    2. 'ées' → logprob: -6.751445293426514
    3. 'ee' → logprob: -8.251444816589355
    4. 'é' → logprob: -12.501444816589355
    5. 'e' → logprob: -12.626444816589355
    6. 'rée' → logprob: -12.751444816589355
    7. 'er' → logprob: -13.126444816589355
    8. 'ees' → logprob: -13.751444816589355
    9. '```' → logprob: -15.626444816589355
    10. 'es' → logprob: -15.751444816589355

Token 302: ' standard' (ID: 7024)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00379639258608222
    2. ' pass' → logprob: -6.503796577453613
    3. '    
' → logprob: -6.628796577453613
    4. 'pass' → logprob: -7.378796577453613
    5. '       ' → logprob: -8.878796577453613
    6. '
' → logprob: -9.003796577453613
    7. '        
' → logprob: -10.628796577453613
    8. '	pass' → logprob: -11.003796577453613
    9. 'print' → logprob: -11.128796577453613
    10. ',' → logprob: -12.253796577453613

Token 303: ' atte' (ID: 43312)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027341435197740793
    2. ' pass' → logprob: -6.877734184265137
    3. '    
' → logprob: -7.252734184265137
    4. '       ' → logprob: -7.252734184265137
    5. 'pass' → logprob: -8.752734184265137
    6. '
' → logprob: -9.627734184265137
    7. '        
' → logprob: -10.877734184265137
    8. ',' → logprob: -11.252734184265137
    9. '	pass' → logprob: -11.627734184265137
    10. '<|end|>' → logprob: -12.252734184265137

Token 304: 'inte' (ID: 18750)
  Prédit: 'inte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.00015312091272789985
    2. 'int' → logprob: -9.000153541564941
    3. 'nte' → logprob: -10.625153541564941
    4. 'e' → logprob: -13.625153541564941
    5. '
' → logprob: -14.000153541564941
    6. 'intes' → logprob: -14.000153541564941
    7. '#' → logprob: -14.375153541564941
    8. 'Inte' → logprob: -15.000153541564941
    9. 'in' → logprob: -15.250153541564941
    10. 'ints' → logprob: -15.250153541564941

Token 305: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012452318333089352
    2. '       ' → logprob: -4.887452125549316
    3. '
' → logprob: -6.012452125549316
    4. '    
' → logprob: -6.262452125549316
    5. ' pass' → logprob: -8.512452125549316
    6. 'pass' → logprob: -9.137452125549316
    7. '        
' → logprob: -9.387452125549316
    8. ',' → logprob: -10.012452125549316
    9. ')' → logprob: -11.387452125549316
    10. '  
' → logprob: -11.887452125549316

Token 306: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031604915857315063
    2. '    
' → logprob: -6.25316047668457
    3. '
' → logprob: -6.75316047668457
    4. 'print' → logprob: -9.75316047668457
    5. ' print' → logprob: -13.50316047668457
    6. '        
' → logprob: -13.50316047668457
    7. '  
' → logprob: -14.50316047668457
    8. '    
    
' → logprob: -14.50316047668457
    9. '
    
' → logprob: -14.62816047668457
    10. '```' → logprob: -15.12816047668457

Token 307: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.4324474036693573
    2. 'print' → logprob: -1.1824474334716797
    3. '   ' → logprob: -3.1824474334716797
    4. ' pass' → logprob: -5.80744743347168
    5. ' print' → logprob: -10.18244743347168
    6. 'return' → logprob: -11.43244743347168
    7. '	pass' → logprob: -12.43244743347168
    8. '       ' → logprob: -12.80744743347168
    9. '#' → logprob: -13.30744743347168
    10. '```' → logprob: -13.43244743347168

Token 308: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37163296341896057
    2. '   ' → logprob: -1.3716329336166382
    3. '    
' → logprob: -2.8716330528259277
    4. 'print' → logprob: -10.37163257598877
    5. '

' → logprob: -10.49663257598877
    6. '        
' → logprob: -11.49663257598877
    7. '  
' → logprob: -11.62163257598877
    8. '
    
' → logprob: -11.87163257598877
    9. '
' → logprob: -13.12163257598877
    10. '    
    
' → logprob: -13.12163257598877

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020532844064291567
    2. 'print' → logprob: -8.500205039978027
    3. '    
' → logprob: -13.625205039978027
    4. ' print' → logprob: -14.250205039978027
    5. '
' → logprob: -17.625205993652344
    6. '```' → logprob: -18.125205993652344
    7. '   ' → logprob: -20.250205993652344
    8. '       ' → logprob: -20.875205993652344
    9. '  
' → logprob: -21.375205993652344
    10. '        
' → logprob: -21.500205993652344

Token 310: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00046606172691099346
    2. '   ' → logprob: -7.7504658699035645
    3. ' print' → logprob: -10.250466346740723
    4. '```' → logprob: -19.875465393066406
    5. '	print' → logprob: -20.875465393066406
    6. '  ' → logprob: -23.875465393066406
    7. '#print' → logprob: -24.000465393066406
    8. ' ' → logprob: -24.250465393066406
    9. '    
' → logprob: -25.000465393066406
    10. 'Print' → logprob: -25.750465393066406

Token 311: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009698220528662205
    2. ' print' → logprob: -7.000969886779785
    3. '   ' → logprob: -9.750969886779785
    4. 'Print' → logprob: -17.00096893310547
    5. 'pr' → logprob: -17.87596893310547
    6. '```' → logprob: -18.50096893310547
    7. 'prin' → logprob: -18.62596893310547
    8. '#' → logprob: -19.00096893310547
    9. '#print' → logprob: -19.37596893310547
    10. '	print' → logprob: -20.12596893310547

Token 312: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0053387051448225975
    2. 'iche' → logprob: -5.255338668823242
    3. '   ' → logprob: -9.880338668823242
    4. 'ichage' → logprob: -10.130338668823242
    5. '#' → logprob: -12.130338668823242
    6. 'ic' → logprob: -12.380338668823242
    7. 'cher' → logprob: -13.755338668823242
    8. 'ich' → logprob: -14.505338668823242
    9. '

' → logprob: -15.005338668823242
    10. '
' → logprob: -15.005338668823242

Token 313: ' du' (ID: 1462)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5658019185066223
    2. '(count' → logprob: -1.3158018589019775
    3. '   ' → logprob: -1.8158018589019775
    4. '(print' → logprob: -7.565802097320557
    5. '(f' → logprob: -8.065801620483398
    6. '()' → logprob: -8.940801620483398
    7. 'count' → logprob: -9.940801620483398
    8. 'print' → logprob: -10.065801620483398
    9. '(
' → logprob: -10.065801620483398
    10. ' (' → logprob: -11.940801620483398

Token 314: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0005330175044946373
    2. 'result' → logprob: -8.000533103942871
    3. 'nombre' → logprob: -8.750533103942871
    4. ' count' → logprob: -10.250533103942871
    5. 'rés' → logprob: -13.750533103942871
    6. '(count' → logprob: -14.125533103942871
    7. 'print' → logprob: -14.375533103942871
    8. 'comp' → logprob: -14.500533103942871
    9. ' résultat' → logprob: -15.250533103942871
    10. ' nombre' → logprob: -15.375533103942871

Token 315: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0188100878149271
    2. ' de' → logprob: -4.893810272216797
    3. ' print' → logprob: -5.143810272216797
    4. 'print' → logprob: -5.643810272216797
    5. ' des' → logprob: -7.768810272216797
    6. '    ' → logprob: -8.393810272216797
    7. '  ' → logprob: -8.518810272216797
    8. ' ' → logprob: -8.518810272216797
    9. '    
' → logprob: -8.893810272216797
    10. 'de' → logprob: -9.268810272216797

Token 316: ' chaînes' (ID: 179904)
  Prédit: 'pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pal' → logprob: -0.3883056640625
    2. ' pal' → logprob: -1.1383056640625
    3. ' chaînes' → logprob: -6.6383056640625
    4. ' palindrome' → logprob: -9.5133056640625
    5. '_pal' → logprob: -10.7633056640625
    6. ' chain' → logprob: -11.8883056640625
    7. 'chain' → logprob: -12.1383056640625
    8. ' cadenas' → logprob: -12.6383056640625
    9. ' ' → logprob: -13.1383056640625
    10. 'chains' → logprob: -13.1383056640625

Token 317: ' pal' (ID: 5337)
  Prédit: 'pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pal' → logprob: -0.5388903617858887
    2. 'print' → logprob: -1.1638903617858887
    3. '   ' → logprob: -2.5388903617858887
    4. ' print' → logprob: -4.788890361785889
    5. ' pal' → logprob: -4.913890361785889
    6. ' palindrome' → logprob: -4.913890361785889
    7. '_pal' → logprob: -6.538890361785889
    8. 'p' → logprob: -7.788890361785889
    9. ' ' → logprob: -9.163890838623047
    10. '    
' → logprob: -9.413890838623047

Token 318: 'ind' (ID: 521)
  Prédit: 'ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ind' → logprob: -1.0325924449716695e-05
    2. 'indrome' → logprob: -11.62501049041748
    3. 'ynd' → logprob: -14.37501049041748
    4. 'in' → logprob: -15.37501049041748
    5. 'imd' → logprob: -15.62501049041748
    6. '
' → logprob: -16.500009536743164
    7. 'ınd' → logprob: -17.125009536743164
    8. 'id' → logprob: -17.500009536743164
    9. 'ines' → logprob: -17.625009536743164
    10. 'инд' → logprob: -17.750009536743164

Token 319: 'romes' (ID: 159600)
  Prédit: 'romes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'romes' → logprob: -0.003531774738803506
    2. 'rom' → logprob: -6.7535319328308105
    3. 'd' → logprob: -7.0035319328308105
    4. 'ro' → logprob: -7.1285319328308105
    5. 'r' → logprob: -8.128531455993652
    6. 'rones' → logprob: -9.003531455993652
    7. 'omes' → logprob: -9.503531455993652
    8. 'nd' → logprob: -10.128531455993652
    9. 'rome' → logprob: -10.628531455993652
    10. 'ind' → logprob: -10.753531455993652

Token 320: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00014287306112237275
    2. 'print' → logprob: -9.000143051147461
    3. '
' → logprob: -11.375143051147461
    4. ' print' → logprob: -11.875143051147461
    5. '    
' → logprob: -13.875143051147461
    6. '	print' → logprob: -18.25014305114746
    7. '```' → logprob: -18.62514305114746
    8. '   ' → logprob: -18.75014305114746
    9. '       ' → logprob: -19.25014305114746
    10. '  
' → logprob: -20.25014305114746

Token 321: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.31929272413253784
    2. 'é' → logprob: -2.1942927837371826
    3. 'ues' → logprob: -2.3192927837371826
    4. 'u' → logprob: -2.8192927837371826
    5. 'es' → logprob: -6.5692925453186035
    6. 'ue' → logprob: -7.0692925453186035
    7. 'ée' → logprob: -7.1942925453186035
    8. 'print' → logprob: -8.194293022155762
    9. 'e' → logprob: -8.319293022155762
    10. '   ' → logprob: -9.069293022155762

Token 322: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009162207134068012
    2. 'print' → logprob: -7.000916004180908
    3. ' print' → logprob: -12.750916481018066
    4. '
' → logprob: -13.500916481018066
    5. '    
' → logprob: -14.875916481018066
    6. '```' → logprob: -16.25091552734375
    7. '	print' → logprob: -18.62591552734375
    8. '   ' → logprob: -18.87591552734375
    9. '       ' → logprob: -19.12591552734375
    10. '  
' → logprob: -21.25091552734375

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006839334033429623
    2. 'print' → logprob: -5.006839275360107
    3. ' print' → logprob: -9.006839752197266
    4. '
' → logprob: -14.131839752197266
    5. '```' → logprob: -14.631839752197266
    6. '    
' → logprob: -15.256839752197266
    7. '	print' → logprob: -17.256839752197266
    8. '   ' → logprob: -18.381839752197266
    9. '       ' → logprob: -18.881839752197266
    10. '    ' → logprob: -20.756839752197266

Token 324: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00011760921915993094
    2. '   ' → logprob: -9.250117301940918
    3. ' print' → logprob: -10.750117301940918
    4. '```' → logprob: -18.500118255615234
    5. '	print' → logprob: -20.250118255615234
    6. 'pr' → logprob: -20.625118255615234
    7. '
' → logprob: -21.750118255615234
    8. 'prin' → logprob: -22.250118255615234
    9. '    
' → logprob: -22.750118255615234
    10. 'printf' → logprob: -23.500118255615234

Token 325: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.4741651117801666
    2. '(' → logprob: -0.9741650819778442
    3. '(f' → logprob: -9.974164962768555
    4. '('' → logprob: -10.974164962768555
    5. '("("' → logprob: -11.099164962768555
    6. ' (' → logprob: -12.724164962768555
    7. '(
' → logprob: -13.099164962768555
    8. '(cnt' → logprob: -13.974164962768555
    9. '(c' → logprob: -14.099164962768555
    10. '("' → logprob: -14.349164962768555

Token 326: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.0
    3. '())' → logprob: -17.5
    4. '()' → logprob: -18.0
    5. ')
' → logprob: -18.25
    6. ')`' → logprob: -19.5
    7. '))' → logprob: -20.0
    8. ')#' → logprob: -21.0
    9. '）' → logprob: -21.25
    10. '')' → logprob: -21.5

Token 327: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002575536724179983
    2. '
' → logprob: -6.127575397491455
    3. 'main' → logprob: -8.127575874328613
    4. '\n' → logprob: -9.627575874328613
    5. ' if' → logprob: -11.252575874328613
    6. '```' → logprob: -11.377575874328613
    7. '<|end|>' → logprob: -13.627575874328613
    8. '#' → logprob: -13.752575874328613
    9. '  
' → logprob: -14.377575874328613
    10. '\' → logprob: -14.752575874328613

Token 328: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.30793553590774536
    2. '__' → logprob: -1.4329354763031006
    3. '_' → logprob: -4.30793571472168
    4. ' ' → logprob: -4.93293571472168
    5. '_name' → logprob: -5.43293571472168
    6. ' _' → logprob: -7.80793571472168
    7. 'name' → logprob: -8.43293571472168
    8. ' ' → logprob: -8.43293571472168
    9. ' ' → logprob: -9.30793571472168
    10. '_main' → logprob: -9.30793571472168

Token 329: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10841897130012512
    2. ' __' → logprob: -2.3584189414978027
    3. ' ==' → logprob: -4.858418941497803
    4. '==' → logprob: -8.358419418334961
    5. '_' → logprob: -10.108419418334961
    6. '_name' → logprob: -10.358419418334961
    7. '.__' → logprob: -10.358419418334961
    8. ' _' → logprob: -11.483419418334961
    9. '__.__' → logprob: -11.483419418334961
    10. '___' → logprob: -11.608419418334961

Token 330: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '==' → logprob: -14.875000953674316
    3. '__.__' → logprob: -15.750000953674316
    4. ' ==' → logprob: -17.25
    5. '_' → logprob: -18.0
    6. '___' → logprob: -18.25
    7. '____' → logprob: -18.625
    8. '__('' → logprob: -19.125
    9. '__["' → logprob: -19.625
    10. ' __' → logprob: -19.75

Token 331: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015278126113116741
    2. '==' → logprob: -4.890278339385986
    3. ' ==' → logprob: -4.890278339385986
    4. '=="' → logprob: -9.140277862548828
    5. '=='' → logprob: -11.765277862548828
    6. '_' → logprob: -12.890277862548828
    7. ' __' → logprob: -13.015277862548828
    8. '__('' → logprob: -14.515277862548828
    9. '__.__' → logprob: -14.515277862548828
    10. '___' → logprob: -14.640277862548828

Token 332: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029818879440426826
    2. ''' → logprob: -3.5298187732696533
    3. ' "__' → logprob: -9.654818534851074
    4. '__' → logprob: -12.779818534851074
    5. ' '__' → logprob: -13.529818534851074
    6. '"user' → logprob: -17.15481948852539
    7. '"name' → logprob: -17.52981948852539
    8. '("__' → logprob: -17.52981948852539
    9. '"_' → logprob: -17.65481948852539
    10. ''"' → logprob: -18.15481948852539

Token 333: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.005258660763502121
    2. '__' → logprob: -5.255258560180664
    3. '"' → logprob: -10.880258560180664
    4. 'name' → logprob: -13.005258560180664
    5. '_main' → logprob: -13.755258560180664
    6. ' main' → logprob: -13.880258560180664
    7. 'built' → logprob: -13.880258560180664
    8. ' "__' → logprob: -15.630258560180664
    9. ''' → logprob: -15.880258560180664
    10. '__":
' → logprob: -16.380258560180664

Token 334: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3868843913078308
    2. '__":
' → logprob: -1.1368844509124756
    3. '__':
' → logprob: -11.636884689331055
    4. '__["' → logprob: -13.261884689331055
    5. '__.' → logprob: -13.636884689331055
    6. '"' → logprob: -14.886884689331055
    7. '__",' → logprob: -14.886884689331055
    8. '__.__' → logprob: -15.011884689331055
    9. '__("' → logprob: -15.261884689331055
    10. '__:' → logprob: -15.886884689331055

Token 335: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2520705759525299
    2. ' main' → logprob: -1.5020705461502075
    3. '	main' → logprob: -9.252070426940918
    4. '_main' → logprob: -10.502070426940918
    5. '   ' → logprob: -11.002070426940918
    6. '__' → logprob: -14.377070426940918
    7. ' __' → logprob: -15.502070426940918
    8. '(main' → logprob: -15.752070426940918
    9. 'Main' → logprob: -16.127071380615234
    10. ' ' → logprob: -16.877071380615234

Token 336: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.306760805164231e-05
    2. ' main' → logprob: -11.25001335144043
    3. '	main' → logprob: -20.00001335144043
    4. '   ' → logprob: -20.50001335144043
    5. '_main' → logprob: -23.00001335144043
    6. 'Main' → logprob: -24.50001335144043
    7. '.main' → logprob: -24.50001335144043
    8. 'ma' → logprob: -25.12501335144043
    9. '(main' → logprob: -26.00001335144043
    10. 'maine' → logprob: -26.37501335144043

Token 337: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 335
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 119
Tokens correctement prédits (top 10): 243
Précision stricte (1ère position): 33.13%
Précision adaptée (1ère position): 35.52%
Précision (top 10): 72.54%
================================================================================
