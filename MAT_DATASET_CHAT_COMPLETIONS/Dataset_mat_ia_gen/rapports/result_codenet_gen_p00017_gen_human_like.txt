================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def decrypt(text, shift):
    result = []
    for ch in text:
        if 'a' <= ch <= 'z':
            new_char = chr((ord(ch) - ord('a') - shift) % 26 + ord('a'))
            result.append(new_char)
        else:
            result.append(ch)
    return ''.join(result)

def contains_keyword(text):
    keywords = ["the", "this", "that"]
    return any(k in text for k in keywords)

for line in sys.stdin:
    line = line.rstrip('\n')
    for shift in range(26):
        decoded = decrypt(line, shift)
        if contains_keyword(decoded):
            print(decoded)
            break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' decrypt' (ID: 81444)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '(text' (ID: 13414)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06364472210407257
    2. '_' → logprob: -2.8136446475982666
    3. '_token' → logprob: -7.188644886016846
    4. '_password' → logprob: -8.688644409179688
    5. '_text' → logprob: -8.938644409179688
    6. ' (' → logprob: -9.438644409179688
    7. '_:' → logprob: -9.563644409179688
    8. '_data' → logprob: -9.813644409179688
    9. '_message' → logprob: -9.813644409179688
    10. '_cipher' → logprob: -9.938644409179688

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0022881142795085907
    2. ',' → logprob: -6.502288341522217
    3. ')' → logprob: -7.627288341522217
    4. ':' → logprob: -8.377287864685059
    5. '):
' → logprob: -9.877287864685059
    6. '[' → logprob: -12.627287864685059
    7. '=' → logprob: -13.127287864685059
    8. 's' → logprob: -13.377287864685059
    9. ' ):' → logprob: -13.377287864685059
    10. '(' → logprob: -13.752287864685059

Token 7: ' shift' (ID: 12847)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.0007360121817328036
    2. 'key' → logprob: -7.250736236572266
    3. ' password' → logprob: -11.125736236572266
    4. ' shift' → logprob: -12.500736236572266
    5. ' salt' → logprob: -13.000736236572266
    6. ')' → logprob: -13.750736236572266
    7. ' secret' → logprob: -14.000736236572266
    8. '	key' → logprob: -14.125736236572266
    9. ' ' → logprob: -14.750736236572266
    10. 'password' → logprob: -15.250736236572266

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017559797270223498
    2. ')' → logprob: -6.376756191253662
    3. '):
' → logprob: -10.376755714416504
    4. ':' → logprob: -11.376755714416504
    5. '=' → logprob: -12.626755714416504
    6. ' ):' → logprob: -12.626755714416504
    7. ',' → logprob: -13.126755714416504
    8. '*' → logprob: -14.501755714416504
    9. '):

' → logprob: -14.751755714416504
    10. '_' → logprob: -15.376755714416504

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02406429313123226
    2. ':' → logprob: -3.774064302444458
    3. ' return' → logprob: -8.649064064025879
    4. ' ' → logprob: -8.899064064025879
    5. '    ' → logprob: -9.149064064025879
    6. '```' → logprob: -9.399064064025879
    7. 'return' → logprob: -9.524064064025879
    8. ':return' → logprob: -10.149064064025879
    9. ':
' → logprob: -10.399064064025879
    10. '    
' → logprob: -10.524064064025879

Token 10: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015031080693006516
    2. '```' → logprob: -5.640030860900879
    3. 'result' (adapté à ' result') → logprob: -5.765030860900879
    4. 'return' → logprob: -6.015030860900879
    5. ' return' → logprob: -6.140030860900879
    6. '    ' → logprob: -6.265030860900879
    7. ' ' → logprob: -7.265030860900879
    8. 'text' → logprob: -8.765030860900879
    9. ' result' → logprob: -8.890030860900879
    10. 'decoded' → logprob: -9.140030860900879

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8071333765983582
    2. '=' → logprob: -1.057133436203003
    3. ' ' → logprob: -1.682133436203003
    4. ' +=' → logprob: -4.557133197784424
    5. '[' → logprob: -4.932133197784424
    6. '+=' → logprob: -7.557133197784424
    7. ')' → logprob: -7.807133197784424
    8. '[:]' → logprob: -8.182133674621582
    9. '<|end|>' → logprob: -8.307133674621582
    10. '+' → logprob: -8.307133674621582

Token 12: ' []
' (ID: 8911)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.08938434720039368
    2. ' ""' → logprob: -2.9643843173980713
    3. '"' → logprob: -4.08938455581665
    4. '''' → logprob: -4.21438455581665
    5. ' ' → logprob: -6.83938455581665
    6. ''' → logprob: -7.46438455581665
    7. ' ''' → logprob: -7.58938455581665
    8. ' []' → logprob: -9.089384078979492
    9. '[]' → logprob: -9.589384078979492
    10. ' "' → logprob: -10.339384078979492

Token 13: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2321072220802307
    2. 'for' → logprob: -2.232107162475586
    3. '   ' → logprob: -3.607107162475586
    4. ' ' → logprob: -3.732107162475586
    5. ' 
' → logprob: -3.732107162475586
    6. '    
' → logprob: -4.857107162475586
    7. '    ' → logprob: -5.232107162475586
    8. '     
' → logprob: -5.357107162475586
    9. '
' → logprob: -6.357107162475586
    10. '   
' → logprob: -6.607107162475586

Token 14: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5771045088768005
    2. 'for' (adapté à ' for') → logprob: -0.8271045088768005
    3. '   ' → logprob: -6.952104568481445
    4. ' ' → logprob: -9.202104568481445
    5. '    ' → logprob: -9.577104568481445
    6. 'space' → logprob: -11.327104568481445
    7. ' 
' → logprob: -12.202104568481445
    8. '```' → logprob: -12.577104568481445
    9. ' space' → logprob: -12.952104568481445
    10. '	for' → logprob: -13.077104568481445

Token 15: ' ch' (ID: 549)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31619545817375183
    2. ' char' → logprob: -1.6911954879760742
    3. ' c' → logprob: -2.566195487976074
    4. ' i' → logprob: -4.816195487976074
    5. 'char' → logprob: -7.441195487976074
    6. 'c' → logprob: -7.566195487976074
    7. ' ch' → logprob: -7.941195487976074
    8. '  ' → logprob: -8.691195487976074
    9. '```' → logprob: -10.191195487976074
    10. ' token' → logprob: -10.566195487976074

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018770545721054077
    2. 'in' → logprob: -4.018770694732666
    3. ' ' → logprob: -7.893770694732666
    4. 'ar' → logprob: -8.643770217895508
    5. '   ' → logprob: -10.518770217895508
    6. '  ' → logprob: -11.143770217895508
    7. 'a' → logprob: -11.268770217895508
    8. '	in' → logprob: -12.268770217895508
    9. 'i' → logprob: -12.393770217895508
    10. 's' → logprob: -13.393770217895508

Token 17: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.5231343507766724
    2. 'text' → logprob: -0.8981343507766724
    3. '	text' → logprob: -12.898134231567383
    4. ' ' → logprob: -13.273134231567383
    5. ' range' → logprob: -13.273134231567383
    6. 'range' → logprob: -13.523134231567383
    7. '(text' → logprob: -14.398134231567383
    8. '"text' → logprob: -14.398134231567383
    9. '{text' → logprob: -14.773134231567383
    10. '```' → logprob: -15.023134231567383

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004342529457062483
    2. ' :' → logprob: -5.629342555999756
    3. '       ' → logprob: -8.504342079162598
    4. '):' → logprob: -8.629342079162598
    5. ':
' → logprob: -9.504342079162598
    6. ',' → logprob: -9.754342079162598
    7. '=' → logprob: -9.879342079162598
    8. '    ' → logprob: -9.879342079162598
    9. '<|end|>' → logprob: -10.254342079162598
    10. '   ' → logprob: -10.879342079162598

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11743077635765076
    2. '    ' → logprob: -2.9924306869506836
    3. ' ' → logprob: -3.8674306869506836
    4. '        ' → logprob: -3.9924306869506836
    5. ' if' → logprob: -4.742430686950684
    6. 'if' → logprob: -4.867430686950684
    7. '   ' → logprob: -6.742430686950684
    8. 'i' → logprob: -7.742430686950684
    9. '      ' → logprob: -7.742430686950684
    10. '     ' → logprob: -8.242430686950684

Token 20: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8642997145652771
    2. ' if' → logprob: -1.2392997741699219
    3. '        ' → logprob: -1.8642997741699219
    4. ' ' → logprob: -2.239299774169922
    5. '       ' → logprob: -3.739299774169922
    6. '    ' → logprob: -7.239299774169922
    7. 'space' → logprob: -7.489299774169922
    8. 'i' → logprob: -7.614299774169922
    9. '           ' → logprob: -7.989299774169922
    10. '            ' → logprob: -8.239299774169922

Token 21: ' '' (ID: 461)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.0013697614194825292
    2. 'ch' → logprob: -6.751369953155518
    3. ' ' → logprob: -9.37636947631836
    4. ' ord' → logprob: -9.62636947631836
    5. ' '' → logprob: -10.62636947631836
    6. ' not' → logprob: -12.00136947631836
    7. ''' → logprob: -12.12636947631836
    8. ' isinstance' → logprob: -12.25136947631836
    9. '	ch' → logprob: -13.87636947631836
    10. ' ' → logprob: -13.87636947631836

Token 22: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25252553820610046
    2. 'A' → logprob: -1.5025255680084229
    3. ' '' → logprob: -8.002525329589844
    4. ''A' → logprob: -8.752525329589844
    5. ''a' → logprob: -9.377525329589844
    6. ''' → logprob: -12.127525329589844
    7. ' a' → logprob: -12.377525329589844
    8. ' A' → logprob: -12.627525329589844
    9. ' '`' → logprob: -13.002525329589844
    10. ' ')' → logprob: -14.627525329589844

Token 23: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -6.704273118884885e-07
    2. ''''' → logprob: -15.000000953674316
    3. ''z' → logprob: -16.75
    4. '<=' → logprob: -17.0
    5. ''a' → logprob: -17.0
    6. ''in' → logprob: -17.125
    7. 'a' → logprob: -17.375
    8. ''m' → logprob: -17.5
    9. ''<' → logprob: -17.5
    10. ''>' → logprob: -17.875

Token 24: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.004109507892280817
    2. '<=' → logprob: -5.5041093826293945
    3. '[' → logprob: -11.629109382629395
    4. ' ' → logprob: -11.754109382629395
    5. '+' → logprob: -12.879109382629395
    6. ''' → logprob: -13.004109382629395
    7. ' ≤' → logprob: -13.379109382629395
    8. 'ord' → logprob: -13.754109382629395
    9. ' ord' → logprob: -13.754109382629395
    10. '...' → logprob: -14.129109382629395

Token 25: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.20141440629959106
    2. ' ch' → logprob: -1.7014143466949463
    3. 'c' → logprob: -14.451414108276367
    4. '	ch' → logprob: -14.826414108276367
    5. ' ' → logprob: -16.201414108276367
    6. 'chr' → logprob: -16.701414108276367
    7. '```' → logprob: -16.951414108276367
    8. '(ch' → logprob: -16.951414108276367
    9. '[ch' → logprob: -17.201414108276367
    10. ''ch' → logprob: -18.076414108276367

Token 26: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02179574780166149
    2. ' and' → logprob: -4.396795749664307
    3. '<=' → logprob: -4.771795749664307
    4. 'and' → logprob: -7.271795749664307
    5. '        ' → logprob: -10.396795272827148
    6. '```' → logprob: -11.146795272827148
    7. ' ' → logprob: -11.646795272827148
    8. '       ' → logprob: -12.646795272827148
    9. ' ≤' → logprob: -13.021795272827148
    10. '<|end|>' → logprob: -13.146795272827148

Token 27: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.0011124740121886134
    2. ' '' → logprob: -7.001112461090088
    3. ''' → logprob: -9.501112937927246
    4. ''y' → logprob: -10.126112937927246
    5. 'z' → logprob: -10.376112937927246
    6. '‘z' → logprob: -10.626112937927246
    7. ''s' → logprob: -11.501112937927246
    8. ' ' → logprob: -11.876112937927246
    9. ''q' → logprob: -12.501112937927246
    10. '’z' → logprob: -13.501112937927246

Token 28: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.4741190969944
    2. ''z' → logprob: -0.9741190671920776
    3. ''' → logprob: -10.224119186401367
    4. '‘z' → logprob: -12.974119186401367
    5. ''s' → logprob: -13.474119186401367
    6. ''y' → logprob: -13.849119186401367
    7. '	z' → logprob: -14.849119186401367
    8. '`' → logprob: -15.974119186401367
    9. '’z' → logprob: -16.099119186401367
    10. '```' → logprob: -16.099119186401367

Token 29: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5967705249786377
    2. '':' → logprob: -0.8467705249786377
    3. '':
' → logprob: -4.221770286560059
    4. ':
' → logprob: -6.596770286560059
    5. ' ':' → logprob: -6.596770286560059
    6. ' :' → logprob: -6.846770286560059
    7. ''' → logprob: -6.971770286560059
    8. '       ' → logprob: -7.846770286560059
    9. '):' → logprob: -8.221770286560059
    10. '):
' → logprob: -9.221770286560059

Token 30: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15377449989318848
    2. ':' → logprob: -2.7787744998931885
    3. ' :' → logprob: -3.1537744998931885
    4. '            ' → logprob: -4.778774261474609
    5. ' ' → logprob: -5.153774261474609
    6. '<|end|>' → logprob: -5.153774261474609
    7. '        ' → logprob: -5.403774261474609
    8. '       ' → logprob: -6.278774261474609
    9. ' :
' → logprob: -6.403774261474609
    10. ':
' → logprob: -6.653774261474609

Token 31: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8521232008934021
    2. 'result' → logprob: -1.8521232604980469
    3. ' shifted' → logprob: -1.8521232604980469
    4. ' result' → logprob: -2.727123260498047
    5. 'shift' → logprob: -2.852123260498047
    6. '            ' → logprob: -3.727123260498047
    7. '```' → logprob: -3.727123260498047
    8. 'offset' → logprob: -4.227123260498047
    9. ' ' → logprob: -4.727123260498047
    10. ' new' → logprob: -4.727123260498047

Token 32: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.04657270386815071
    2. '_pos' → logprob: -4.546572685241699
    3. '_ch' → logprob: -4.796572685241699
    4. '_ord' → logprob: -4.796572685241699
    5. '_' → logprob: -5.046572685241699
    6. '_code' → logprob: -5.671572685241699
    7. '_c' → logprob: -6.296572685241699
    8. '_chr' → logprob: -6.671572685241699
    9. '_idx' → logprob: -6.796572685241699
    10. 'char' → logprob: -6.921572685241699

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18398796021938324
    2. '=' → logprob: -1.8089879751205444
    3. ' ' → logprob: -6.433988094329834
    4. '_ord' → logprob: -6.558988094329834
    5. '_code' → logprob: -6.933988094329834
    6. '_' → logprob: -8.933987617492676
    7. '```' → logprob: -10.808987617492676
    8. 'ord' → logprob: -11.433987617492676
    9. '   ' → logprob: -11.433987617492676
    10. 'code' → logprob: -11.558987617492676

Token 34: ' chr' (ID: 42767)
  Prédit: ' chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chr' → logprob: -0.006868582684546709
    2. 'chr' → logprob: -5.006868362426758
    3. '(chr' → logprob: -9.131868362426758
    4. ' ord' → logprob: -10.381868362426758
    5. ' ' → logprob: -11.506868362426758
    6. ' (' → logprob: -13.256868362426758
    7. '   ' → logprob: -14.506868362426758
    8. ' ' → logprob: -14.631868362426758
    9. ''' → logprob: -14.881868362426758
    10. ' '' → logprob: -15.131868362426758

Token 35: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.6412741541862488
    2. '(ord' → logprob: -0.8912741541862488
    3. '(' → logprob: -2.8912742137908936
    4. '(((' → logprob: -5.1412739753723145
    5. ' (' → logprob: -6.6412739753723145
    6. ' ((' → logprob: -7.7662739753723145
    7. '((((' → logprob: -9.391274452209473
    8. '(
' → logprob: -10.391274452209473
    9. ' ord' → logprob: -10.641274452209473
    10. ' ' → logprob: -11.641274452209473

Token 36: 'ord' (ID: 604)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.03807396814227104
    2. 'ord' → logprob: -3.288074016571045
    3. ' ord' → logprob: -10.663073539733887
    4. ' (' → logprob: -12.538073539733887
    5. '   ' → logprob: -12.663073539733887
    6. '(' → logprob: -13.538073539733887
    7. '((' → logprob: -13.913073539733887
    8. ' ' → logprob: -17.038074493408203
    9. '_ord' → logprob: -18.163074493408203
    10. '(chr' → logprob: -18.288074493408203

Token 37: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0061832028441131115
    2. 'ch' → logprob: -5.13118314743042
    3. '(' → logprob: -8.506183624267578
    4. ' ' → logprob: -11.256183624267578
    5. ' (' → logprob: -11.506183624267578
    6. '	ch' → logprob: -11.631183624267578
    7. '[ch' → logprob: -12.256183624267578
    8. ')' → logprob: -12.631183624267578
    9. '```' → logprob: -12.631183624267578
    10. ' ch' → logprob: -13.006183624267578

Token 38: ')' (ID: 8)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.23731432855129242
    2. ')' → logprob: -1.9873143434524536
    3. '-' → logprob: -2.612314224243164
    4. ' ' → logprob: -7.737314224243164
    5. ' )' → logprob: -8.362314224243164
    6. '+' → logprob: -9.237314224243164
    7. ')-' → logprob: -10.737314224243164
    8. '```' → logprob: -11.487314224243164
    9. ' +' → logprob: -12.112314224243164
    10. '-)' → logprob: -12.362314224243164

Token 39: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026918308809399605
    2. '-' → logprob: -3.651918411254883
    3. ' ' → logprob: -7.651918411254883
    4. ')' → logprob: -9.151918411254883
    5. '+' → logprob: -10.901918411254883
    6. ' +' → logprob: -11.401918411254883
    7. ' )' → logprob: -12.776918411254883
    8. '```' → logprob: -13.276918411254883
    9. '<|end|>' → logprob: -14.151918411254883
    10. '  ' → logprob: -14.776918411254883

Token 40: ' ord' (ID: 6608)
  Prédit: '97'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '97' → logprob: -0.02154446765780449
    2. ' ord' → logprob: -4.521544456481934
    3. 'ord' → logprob: -5.396544456481934
    4. ' ' → logprob: -5.896544456481934
    5. 'shift' → logprob: -6.021544456481934
    6. '96' → logprob: -8.771544456481934
    7. ' shift' → logprob: -9.021544456481934
    8. '   ' → logprob: -9.271544456481934
    9. 'a' → logprob: -9.396544456481934
    10. '32' → logprob: -9.521544456481934

Token 41: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0003693013568408787
    2. '(' → logprob: -8.12536907196045
    3. 'a' → logprob: -10.75036907196045
    4. ''a' → logprob: -10.87536907196045
    5. ''s' → logprob: -11.25036907196045
    6. ''' → logprob: -11.75036907196045
    7. ' ('' → logprob: -11.87536907196045
    8. ')' → logprob: -13.62536907196045
    9. '>('' → logprob: -13.75036907196045
    10. '("' → logprob: -15.25036907196045

Token 42: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.5776860184123507e-06
    2. ''a' → logprob: -13.12500286102295
    3. 'а' → logprob: -15.12500286102295
    4. '```' → logprob: -16.375001907348633
    5. '`' → logprob: -16.875001907348633
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -17.750001907348633
    7. ''' → logprob: -17.875001907348633
    8. ' a' → logprob: -18.000001907348633
    9. 'z' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.500001907348633

Token 43: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18002226948738098
    2. '')' → logprob: -1.8050222396850586
    3. ' )' → logprob: -8.930022239685059
    4. '+' → logprob: -9.930022239685059
    5. ')+' → logprob: -10.055022239685059
    6. '")' → logprob: -10.555022239685059
    7. ' +' → logprob: -11.555022239685059
    8. ''' → logprob: -12.305022239685059
    9. ' ')' → logprob: -12.930022239685059
    10. ' ' → logprob: -13.180022239685059

Token 44: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4465489089488983
    2. '+' → logprob: -1.1965489387512207
    3. ' -' → logprob: -2.9465489387512207
    4. '-' → logprob: -5.571548938751221
    5. ' ' → logprob: -6.571548938751221
    6. ')' → logprob: -8.571548461914062
    7. ' plus' → logprob: -12.696548461914062
    8. ' )' → logprob: -12.821548461914062
    9. ')+' → logprob: -13.071548461914062
    10. '<|end|>' → logprob: -13.071548461914062

Token 45: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.5759937763214111
    2. ' shift' → logprob: -0.8259937763214111
    3. ' ' → logprob: -10.075993537902832
    4. ')' → logprob: -12.200993537902832
    5. 'hift' → logprob: -13.575993537902832
    6. '1' → logprob: -13.700993537902832
    7. '.shift' → logprob: -13.950993537902832
    8. 'space' → logprob: -13.950993537902832
    9. ' (' → logprob: -14.200993537902832
    10. '<|end|>' → logprob: -15.075993537902832

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005569627974182367
    2. ' )' → logprob: -7.750556945800781
    3. ')%' → logprob: -9.750556945800781
    4. '+' → logprob: -9.875556945800781
    5. ' +' → logprob: -11.250556945800781
    6. ' ' → logprob: -13.625556945800781
    7. '')' → logprob: -14.500556945800781
    8. '```' → logprob: -14.750556945800781
    9. '%' → logprob: -14.875556945800781
    10. '))' → logprob: -15.500556945800781

Token 47: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40372979640960693
    2. ' %' → logprob: -1.403729796409607
    3. '%' → logprob: -2.5287299156188965
    4. ')%' → logprob: -5.4037299156188965
    5. ' )' → logprob: -6.2787299156188965
    6. ' ' → logprob: -8.278729438781738
    7. ' +' → logprob: -10.528729438781738
    8. '```' → logprob: -10.653729438781738
    9. '+' → logprob: -10.903729438781738
    10. ' ' → logprob: -12.028729438781738

Token 48: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.20141403377056122
    2. ' ' → logprob: -1.7014139890670776
    3. '   ' → logprob: -15.888914108276367
    4. '```' → logprob: -16.076414108276367
    5. '  ' → logprob: -16.388914108276367
    6. '27' → logprob: -16.826414108276367
    7. ' ' → logprob: -17.326414108276367
    8. '<|end|>' → logprob: -17.326414108276367
    9. ')' → logprob: -17.388914108276367
    10. '262' → logprob: -17.951414108276367

Token 49: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -21.375
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -22.625
    5. '   ' → logprob: -23.125
    6. 'z' → logprob: -23.25
    7. '2' → logprob: -24.0
    8. '27' → logprob: -24.25
    9. '262' → logprob: -24.375
    10. '{' → logprob: -25.0

Token 50: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1621263474225998
    2. '+' → logprob: -1.9121263027191162
    3. ')' → logprob: -6.287126541137695
    4. ' ' → logprob: -10.662126541137695
    5. ')+' → logprob: -11.537126541137695
    6. ' )' → logprob: -12.537126541137695
    7. '```' → logprob: -13.912126541137695
    8. '   ' → logprob: -14.662126541137695
    9. '+a' → logprob: -14.787126541137695
    10. '           ' → logprob: -14.787126541137695

Token 51: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.002019047737121582
    2. 'ord' → logprob: -6.252018928527832
    3. '97' → logprob: -9.377018928527832
    4. '32' → logprob: -12.627018928527832
    5. '(ord' → logprob: -13.377018928527832
    6. '```' → logprob: -14.877018928527832
    7. ' ' → logprob: -15.502018928527832
    8. ' ' → logprob: -15.877018928527832
    9. '95' → logprob: -17.00201988220215
    10. '98' → logprob: -17.12701988220215

Token 52: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.024604277219623e-05
    2. '(' → logprob: -10.125040054321289
    3. 'a' → logprob: -17.00004005432129
    4. ' ('' → logprob: -17.37504005432129
    5. ''a' → logprob: -17.87504005432129
    6. '(a' → logprob: -18.87504005432129
    7. '("' → logprob: -18.87504005432129
    8. '(('' → logprob: -18.87504005432129
    9. ''' → logprob: -19.00004005432129
    10. '(
' → logprob: -19.37504005432129

Token 53: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.493430894101039e-05
    2. ''a' → logprob: -9.500075340270996
    3. ''' → logprob: -17.62507438659668
    4. ''z' → logprob: -18.25007438659668
    5. '`' → logprob: -18.75007438659668
    6. '```' → logprob: -18.75007438659668
    7. 'а' → logprob: -19.37507438659668
    8. 'z' → logprob: -19.62507438659668
    9. '')' → logprob: -19.75007438659668
    10. '97' → logprob: -20.12507438659668

Token 54: ''))
' (ID: 15277)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3895666003227234
    2. ')' → logprob: -1.1395666599273682
    3. ''))' → logprob: -6.014566421508789
    4. ' ))' → logprob: -9.014566421508789
    5. ' )' → logprob: -9.889566421508789
    6. ')))' → logprob: -10.139566421508789
    7. '')' → logprob: -10.764566421508789
    8. '))
' → logprob: -12.514566421508789
    9. '"))' → logprob: -12.639566421508789
    10. '       ' → logprob: -12.764566421508789

Token 55: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5309262871742249
    2. '       ' → logprob: -1.03092622756958
    3. '           ' → logprob: -2.90592622756958
    4. ' )' → logprob: -8.405926704406738
    5. 'result' → logprob: -9.155926704406738
    6. ')
' → logprob: -9.905926704406738
    7. '```' → logprob: -9.905926704406738
    8. '               ' → logprob: -10.155926704406738
    9. '')' → logprob: -10.655926704406738
    10. '   ' → logprob: -11.280926704406738

Token 56: ' result' (ID: 1534)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2041356861591339
    2. 'result' (adapté à ' result') → logprob: -1.9541356563568115
    3. '       ' → logprob: -3.8291356563568115
    4. ' result' → logprob: -4.079135894775391
    5. ')' → logprob: -5.579135894775391
    6. '            
' → logprob: -9.32913589477539
    7. ' )' → logprob: -9.57913589477539
    8. '               ' → logprob: -9.70413589477539
    9. ' ' → logprob: -9.95413589477539
    10. '```' → logprob: -10.20413589477539

Token 57: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07894135266542435
    2. '.' → logprob: -2.5789413452148438
    3. '.app' → logprob: -11.453941345214844
    4. '.Append' → logprob: -11.578941345214844
    5. '.extend' → logprob: -11.703941345214844
    6. 'append' → logprob: -11.828941345214844
    7. ' .' → logprob: -11.828941345214844
    8. '.push' → logprob: -12.828941345214844
    9. '_append' → logprob: -13.703941345214844
    10. '.ap' → logprob: -13.828941345214844

Token 58: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.008620485663414001
    2. '(' → logprob: -4.758620262145996
    3. '('' → logprob: -12.133620262145996
    4. '("("' → logprob: -14.883620262145996
    5. ' (' → logprob: -16.633621215820312
    6. '((' → logprob: -16.758621215820312
    7. 'new' → logprob: -16.883621215820312
    8. '(New' → logprob: -17.508621215820312
    9. '(
' → logprob: -17.508621215820312
    10. '(

' → logprob: -17.758621215820312

Token 59: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0015859126579016447
    2. 'char' → logprob: -6.501585960388184
    3. 'Char' → logprob: -10.251585960388184
    4. '_' → logprob: -11.251585960388184
    5. 'w' → logprob: -11.876585960388184
    6. '_ch' → logprob: -12.376585960388184
    7. '_CHAR' → logprob: -12.501585960388184
    8. '_chars' → logprob: -12.626585960388184
    9. '_token' → logprob: -12.751585960388184
    10. '-char' → logprob: -12.876585960388184

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000596043246332556
    2. '       ' → logprob: -7.500596046447754
    3. ')
' → logprob: -10.250596046447754
    4. '   ' → logprob: -12.250596046447754
    5. ' )' → logprob: -13.625596046447754
    6. '`)' → logprob: -15.125596046447754
    7. '')' → logprob: -15.250596046447754
    8. '))' → logprob: -15.375596046447754
    9. '```' → logprob: -16.250595092773438
    10. ')

' → logprob: -16.500595092773438

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007181333843618631
    2. '\n' → logprob: -5.507181167602539
    3. '```' → logprob: -6.882181167602539
    4. '   ' → logprob: -7.507181167602539
    5. '
' → logprob: -8.007181167602539
    6. '<|end|>' → logprob: -8.632181167602539
    7. 'elif' → logprob: -9.007181167602539
    8. '        
' → logprob: -9.132181167602539
    9. 'else' → logprob: -9.257181167602539
    10. '    
' → logprob: -9.632181167602539

Token 62: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0028043985366821
    2. ' elif' → logprob: -1.1278043985366821
    3. 'elif' → logprob: -1.5028043985366821
    4. ' else' → logprob: -2.7528042793273926
    5. 'else' (adapté à ' else') → logprob: -4.252804279327393
    6. '   ' → logprob: -5.627804279327393
    7. 'e' → logprob: -6.252804279327393
    8. ' ' → logprob: -6.377804279327393
    9. '	elif' → logprob: -7.127804279327393
    10. '    ' → logprob: -8.25280475616455

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003234155708923936
    2. '           ' → logprob: -6.253234386444092
    3. ':
' → logprob: -7.878234386444092
    4. ' :' → logprob: -8.003233909606934
    5. '       ' → logprob: -8.503233909606934
    6. '    ' → logprob: -9.503233909606934
    7. ' if' → logprob: -9.503233909606934
    8. '        ' → logprob: -9.753233909606934
    9. '            ' → logprob: -9.878233909606934
    10. 'if' → logprob: -10.128233909606934

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09768299013376236
    2. '            ' → logprob: -3.5976829528808594
    3. 'result' → logprob: -3.5976829528808594
    4. '        ' → logprob: -3.8476829528808594
    5. ' result' → logprob: -4.722682952880859
    6. '       ' → logprob: -5.472682952880859
    7. ' ' → logprob: -7.097682952880859
    8. '            
' → logprob: -7.222682952880859
    9. ' ' → logprob: -7.597682952880859
    10. '    ' → logprob: -7.972682952880859

Token 65: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.47412917017936707
    2. 'result' (adapté à ' result') → logprob: -0.9741291999816895
    3. '           ' → logprob: -10.599128723144531
    4. '            ' → logprob: -11.349128723144531
    5. ' ' → logprob: -12.599128723144531
    6. ' ' → logprob: -13.224128723144531
    7. 'r' → logprob: -13.474128723144531
    8. '    ' → logprob: -13.599128723144531
    9. '	result' → logprob: -13.599128723144531
    10. '   ' → logprob: -13.849128723144531

Token 66: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03831711411476135
    2. '.' → logprob: -3.2883172035217285
    3. '.extend' → logprob: -8.41331672668457
    4. '.app' → logprob: -10.03831672668457
    5. '.setdefault' → logprob: -12.66331672668457
    6. 'append' → logprob: -13.28831672668457
    7. '.Append' → logprob: -13.53831672668457
    8. '.push' → logprob: -14.16331672668457
    9. '.ap' → logprob: -14.41331672668457
    10. '.put' → logprob: -14.66331672668457

Token 67: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0007139815716072917
    2. '(' → logprob: -7.25071382522583
    3. 'ch' → logprob: -12.500714302062988
    4. '(chr' → logprob: -16.375713348388672
    5. '(c' → logprob: -17.000713348388672
    6. '(
' → logprob: -17.375713348388672
    7. '('' → logprob: -17.750713348388672
    8. ' (' → logprob: -17.875713348388672
    9. '	ch' → logprob: -18.000713348388672
    10. '[ch' → logprob: -18.125713348388672

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.727905979962088e-05
    2. ')
' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.87504768371582
    4. ')return' → logprob: -15.00004768371582
    5. ' )' → logprob: -15.25004768371582
    6. '       ' → logprob: -15.25004768371582
    7. ')

' → logprob: -17.25004768371582
    8. '))' → logprob: -17.62504768371582
    9. '`)' → logprob: -17.75004768371582
    10. ')
' → logprob: -18.37504768371582

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19359822571277618
    2. '
' → logprob: -1.9435982704162598
    3. '    
' → logprob: -4.06859827041626
    4. '  
' → logprob: -5.69359827041626
    5. 'return' → logprob: -5.69359827041626
    6. ' 
' → logprob: -6.06859827041626
    7. ' return' → logprob: -6.31859827041626
    8. '\n' → logprob: -6.31859827041626
    9. ' ' → logprob: -7.06859827041626
    10. '' → logprob: -7.56859827041626

Token 70: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07978922128677368
    2. ' return' → logprob: -3.079789161682129
    3. '   ' → logprob: -3.579789161682129
    4. '
' → logprob: -6.704789161682129
    5. '    
' → logprob: -7.079789161682129
    6. '	return' → logprob: -8.329789161682129
    7. ' ' → logprob: -8.579789161682129
    8. '  
' → logprob: -9.204789161682129
    9. '```' → logprob: -9.329789161682129
    10. ' 
' → logprob: -9.579789161682129

Token 71: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2932348847389221
    2. ''' → logprob: -1.5432348251342773
    3. '''.' → logprob: -3.5432348251342773
    4. ' ''.' → logprob: -4.543234825134277
    5. '''' → logprob: -7.668234825134277
    6. ' '' → logprob: -8.418234825134277
    7. ' "".' → logprob: -9.043234825134277
    8. ' ' → logprob: -9.918234825134277
    9. ' "' → logprob: -10.293234825134277
    10. '""' → logprob: -12.043234825134277

Token 72: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.491498531133402e-06
    2. 'j' → logprob: -12.250009536743164
    3. 'jo' → logprob: -12.375009536743164
    4. ' join' → logprob: -15.125009536743164
    5. '''.' → logprob: -17.250009536743164
    6. '.join' → logprob: -18.875009536743164
    7. '```' → logprob: -19.000009536743164
    8. '(join' → logprob: -20.250009536743164
    9. '/j' → logprob: -20.375009536743164
    10. 'Join' → logprob: -20.625009536743164

Token 73: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.47413912415504456
    2. '(' → logprob: -0.9741390943527222
    3. '(results' → logprob: -10.724139213562012
    4. '(
' → logprob: -10.974139213562012
    5. '('' → logprob: -11.974139213562012
    6. '(

' → logprob: -12.849139213562012
    7. '(resultado' → logprob: -12.974139213562012
    8. ' (' → logprob: -12.974139213562012
    9. '(return' → logprob: -13.224139213562012
    10. '("("' → logprob: -13.224139213562012

Token 74: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -17.125
    4. ')

' → logprob: -18.625
    5. '<|end|>' → logprob: -18.625
    6. ')return' → logprob: -19.25
    7. '```' → logprob: -20.0
    8. '}' → logprob: -20.0
    9. ')`' → logprob: -20.125
    10. ')add' → logprob: -20.25

Token 75: 'def' (ID: 1314)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'text' → logprob: -1.2111326456069946
    2. 'plaintext' → logprob: -2.211132526397705
    3. '\n' → logprob: -2.336132526397705
    4. 'def' → logprob: -2.461132526397705
    5. '
' → logprob: -2.586132526397705
    6. 'print' → logprob: -2.836132526397705
    7. 'newline' → logprob: -2.961132526397705
    8. 'input' → logprob: -3.211132526397705
    9. 'n' → logprob: -3.211132526397705
    10. '#' → logprob: -3.461132526397705

Token 76: ' contains' (ID: 8895)
  Prédit: ' encrypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' encrypt' → logprob: -0.003682021051645279
    2. ' main' → logprob: -6.2536821365356445
    3. 'encrypt' → logprob: -6.3786821365356445
    4. '_encrypt' → logprob: -10.503682136535645
    5. ' encryption' → logprob: -11.753682136535645
    6. ' encrypted' → logprob: -12.253682136535645
    7. ' encode' → logprob: -12.378682136535645
    8. ' en' → logprob: -12.503682136535645
    9. '_' → logprob: -14.128682136535645
    10. 'main' → logprob: -14.378682136535645

Token 77: '_keyword' (ID: 117000)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.9861237406730652
    2. '_keyword' → logprob: -1.73612380027771
    3. '_upper' → logprob: -2.73612380027771
    4. '(' → logprob: -2.98612380027771
    5. '_' → logprob: -3.11112380027771
    6. '_word' → logprob: -3.11112380027771
    7. '_key' → logprob: -3.36112380027771
    8. '_ignore' → logprob: -3.61112380027771
    9. '_space' → logprob: -3.73612380027771
    10. '_lower' → logprob: -4.111123561859131

Token 78: '(text' (ID: 13414)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008540105074644089
    2. ' (' → logprob: -4.883540153503418
    3. '(text' → logprob: -7.258540153503418
    4. '("("' → logprob: -9.883540153503418
    5. '(user' → logprob: -10.133540153503418
    6. '('' → logprob: -10.633540153503418
    7. '(word' → logprob: -11.008540153503418
    8. ' ' → logprob: -11.508540153503418
    9. '(space' → logprob: -11.633540153503418
    10. '(token' → logprob: -11.758540153503418

Token 79: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.856408536899835e-05
    2. ' ,' → logprob: -10.500028610229492
    3. ',text' → logprob: -14.000028610229492
    4. '):' → logprob: -16.125028610229492
    5. '   ' → logprob: -17.875028610229492
    6. ' ' → logprob: -18.625028610229492
    7. ',
' → logprob: -18.750028610229492
    8. ',target' → logprob: -18.750028610229492
    9. ',key' → logprob: -18.875028610229492
    10. '‌,' → logprob: -19.000028610229492

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013994604349136353
    2. '(' → logprob: -5.3889946937561035
    3. ' return' → logprob: -5.6389946937561035
    4. '    ' → logprob: -6.0139946937561035
    5. ' ' → logprob: -6.8889946937561035
    6. ' (' → logprob: -7.5139946937561035
    7. '    
' → logprob: -7.8889946937561035
    8. '"' → logprob: -8.388994216918945
    9. '<|end|>' → logprob: -8.388994216918945
    10. '(keyword' → logprob: -8.763994216918945

Token 81: ' keywords' (ID: 29778)
  Prédit: ' keywords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' keywords' → logprob: -0.40841084718704224
    2. '   ' → logprob: -1.2834107875823975
    3. 'keywords' (adapté à ' keywords') → logprob: -3.6584107875823975
    4. ' return' → logprob: -4.033411026000977
    5. ' keyword' → logprob: -5.033411026000977
    6. ' for' → logprob: -5.533411026000977
    7. '_keywords' → logprob: -7.033411026000977
    8. ' keys' → logprob: -7.158411026000977
    9. 'keyword' → logprob: -7.658411026000977
    10. ' Keywords' → logprob: -7.658411026000977

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011735594598576427
    2. '=' → logprob: -6.751173496246338
    3. ' ' → logprob: -13.376173973083496
    4. ' =
' → logprob: -14.626173973083496
    5. '_' → logprob: -15.126173973083496
    6. ' =[' → logprob: -15.251173973083496
    7. ':' → logprob: -15.751173973083496
    8. ')' → logprob: -16.12617301940918
    9. ' =)' → logprob: -16.37617301940918
    10. 's' → logprob: -16.50117301940918

Token 83: ' ["' (ID: 9129)
  Prédit: ' ["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ["' → logprob: -1.10055673122406
    2. ' ['' → logprob: -1.22555673122406
    3. '["' → logprob: -1.47555673122406
    4. '['' → logprob: -1.97555673122406
    5. '{"' → logprob: -5.85055685043335
    6. ' {"' → logprob: -6.60055685043335
    7. ' {'' → logprob: -6.85055685043335
    8. '[' → logprob: -7.35055685043335
    9. ' [' → logprob: -8.225556373596191
    10. '{'' → logprob: -8.850556373596191

Token 84: 'the' (ID: 3086)
  Prédit: 'secret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'secret' → logprob: -0.7434957027435303
    2. '"' → logprob: -1.7434957027435303
    3. 'flag' → logprob: -2.2434957027435303
    4. ' secret' → logprob: -2.4934957027435303
    5. 'password' → logprob: -2.6184957027435303
    6. ''' → logprob: -3.8684957027435303
    7. 'def' → logprob: -4.493495941162109
    8. ' "' → logprob: -5.118495941162109
    9. 'import' → logprob: -5.118495941162109
    10. 'hello' → logprob: -5.243495941162109

Token 85: '",' (ID: 672)
  Prédit: ' ",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ",' → logprob: -0.1956523060798645
    2. '",' → logprob: -2.3206522464752197
    3. ' ","' → logprob: -3.0706522464752197
    4. ' "' → logprob: -3.6956522464752197
    5. '","' → logprob: -5.570652484893799
    6. ' "]' → logprob: -6.195652484893799
    7. '"' → logprob: -6.695652484893799
    8. '"]' → logprob: -8.07065200805664
    9. ' secret' → logprob: -8.19565200805664
    10. ',' → logprob: -9.44565200805664

Token 86: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2816179096698761
    2. ' "' → logprob: -1.4066178798675537
    3. ''' → logprob: -8.531618118286133
    4. '"user' → logprob: -9.781618118286133
    5. '"is' → logprob: -10.281618118286133
    6. ',' → logprob: -10.406618118286133
    7. '"class' → logprob: -11.281618118286133
    8. '"s' → logprob: -11.281618118286133
    9. ' '' → logprob: -11.406618118286133
    10. ''s' → logprob: -11.531618118286133

Token 87: 'this' (ID: 851)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.23762258887290955
    2. ' and' → logprob: -1.612622618675232
    3. 'be' → logprob: -5.3626227378845215
    4. 'secret' → logprob: -6.2376227378845215
    5. ' secret' → logprob: -6.7376227378845215
    6. ' be' → logprob: -7.1126227378845215
    7. 'is' → logprob: -7.4876227378845215
    8. ' of' → logprob: -7.7376227378845215
    9. ' a' → logprob: -7.9876227378845215
    10. 'a' → logprob: -7.9876227378845215

Token 88: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.16273660957813263
    2. ' ",' → logprob: -1.9127366542816162
    3. '"]' → logprob: -6.787736415863037
    4. '"' → logprob: -7.787736415863037
    5. ' "]' → logprob: -8.037736892700195
    6. ',' → logprob: -8.287736892700195
    7. ' "' → logprob: -8.412736892700195
    8. ' ","' → logprob: -10.287736892700195
    9. '","' → logprob: -10.287736892700195
    10. '',' → logprob: -10.537736892700195

Token 89: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2538256347179413
    2. ' "' → logprob: -1.5038256645202637
    3. '"is' → logprob: -7.628825664520264
    4. '"user' → logprob: -7.753825664520264
    5. '"text' → logprob: -8.128825187683105
    6. ''' → logprob: -8.253825187683105
    7. ',' → logprob: -9.378825187683105
    8. '"testing' → logprob: -10.003825187683105
    9. ' '' → logprob: -10.378825187683105
    10. ' and' → logprob: -10.503825187683105

Token 90: 'that' (ID: 14116)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1830112189054489
    2. 'and' → logprob: -2.183011293411255
    3. ' is' → logprob: -3.933011293411255
    4. ' that' → logprob: -4.433011054992676
    5. ' a' → logprob: -5.183011054992676
    6. 'a' → logprob: -5.183011054992676
    7. 'that' → logprob: -5.308011054992676
    8. 'is' → logprob: -5.808011054992676
    9. ' of' → logprob: -7.183011054992676
    10. ' secret' → logprob: -7.683011054992676

Token 91: '"]
' (ID: 14510)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '",' → logprob: -0.12743207812309265
    2. '"]' → logprob: -2.127432107925415
    3. ' ",' → logprob: -8.377431869506836
    4. '"' → logprob: -8.627431869506836
    5. ' "]' → logprob: -10.752431869506836
    6. ']' → logprob: -10.877431869506836
    7. '","' → logprob: -11.002431869506836
    8. ',' → logprob: -11.377431869506836
    9. '"]

' → logprob: -11.877431869506836
    10. '',' → logprob: -12.377431869506836

Token 92: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5330187678337097
    2. '<|end|>' → logprob: -1.1580188274383545
    3. '   ' → logprob: -2.4080188274383545
    4. '<|end|>' → logprob: -6.033018589019775
    5. ' for' → logprob: -6.283018589019775
    6. '    
' → logprob: -6.283018589019775
    7. '  
' → logprob: -6.783018589019775
    8. ' 
' → logprob: -7.033018589019775
    9. ' ' → logprob: -9.033019065856934
    10. ':' → logprob: -9.158019065856934

Token 93: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23529556393623352
    2. ' for' → logprob: -2.110295534133911
    3. '   ' → logprob: -3.610295534133911
    4. '<|end|>' → logprob: -3.735295534133911
    5. ' 
' → logprob: -4.36029577255249
    6. '  
' → logprob: -4.61029577255249
    7. '    
' → logprob: -5.11029577255249
    8. 'for' → logprob: -5.73529577255249
    9. ' ' → logprob: -5.86029577255249
    10. '<|end|>' → logprob: -6.86029577255249

Token 94: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.00045045334263704717
    2. 'any' → logprob: -7.750450611114502
    3. ''any' → logprob: -11.750450134277344
    4. ' an' → logprob: -11.875450134277344
    5. ' ' → logprob: -13.375450134277344
    6. ' anys' → logprob: -14.250450134277344
    7. ' all' → logprob: -14.375450134277344
    8. '"' → logprob: -14.500450134277344
    9. ' a' → logprob: -14.625450134277344
    10. '(any' → logprob: -15.250450134277344

Token 95: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14445824921131134
    2. '(keyword' → logprob: -2.144458293914795
    3. '(k' → logprob: -5.144458293914795
    4. '(key' → logprob: -5.769458293914795
    5. '(word' → logprob: -6.144458293914795
    6. ' keyword' → logprob: -6.269458293914795
    7. ' (' → logprob: -6.519458293914795
    8. 'keyword' → logprob: -6.519458293914795
    9. ' kw' → logprob: -7.894458293914795
    10. 'kw' → logprob: -7.894458293914795

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016558842733502388
    2. 'in' → logprob: -4.641558647155762
    3. 'ey' → logprob: -5.016558647155762
    4. 'word' → logprob: -9.141558647155762
    5. 'e' → logprob: -11.391558647155762
    6. ' ' → logprob: -12.016558647155762
    7. 'y' → logprob: -12.641558647155762
    8. '	in' → logprob: -12.891558647155762
    9. 'ernel' → logprob: -13.016558647155762
    10. ' i' → logprob: -13.141558647155762

Token 97: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.012515068985521793
    2. 'text' → logprob: -4.387515068054199
    3. ' ' → logprob: -13.2625150680542
    4. '	text' → logprob: -13.8875150680542
    5. ')' → logprob: -14.0125150680542
    6. '(text' → logprob: -14.3875150680542
    7. '"text' → logprob: -15.1375150680542
    8. '_text' → logprob: -15.3875150680542
    9. ' ' → logprob: -15.3875150680542
    10. '.text' → logprob: -15.8875150680542

Token 98: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11105691641569138
    2. ')' → logprob: -2.9860568046569824
    3. ' )' → logprob: -3.1110568046569824
    4. 'for' → logprob: -4.611056804656982
    5. ' ' → logprob: -9.73605728149414
    6. '   ' → logprob: -11.11105728149414
    7. ' in' → logprob: -11.11105728149414
    8. 'text' → logprob: -12.11105728149414
    9. '(text' → logprob: -12.23605728149414
    10. ' text' → logprob: -12.36105728149414

Token 99: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.06089663878083229
    2. ' keywords' → logprob: -2.935896635055542
    3. 'keywords' → logprob: -5.810896873474121
    4. 'k' → logprob: -5.935896873474121
    5. ' ' → logprob: -8.560896873474121
    6. ' keyword' → logprob: -9.435896873474121
    7. '_keywords' → logprob: -10.810896873474121
    8. 'Keywords' → logprob: -10.935896873474121
    9. '	k' → logprob: -11.185896873474121
    10. ' text' → logprob: -11.435896873474121

Token 100: ' in' (ID: 306)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.03371934965252876
    2. ' keywords' → logprob: -4.408719539642334
    3. ' in' → logprob: -5.033719539642334
    4. 'keywords' → logprob: -5.408719539642334
    5. '_keywords' → logprob: -5.408719539642334
    6. 'k' → logprob: -5.533719539642334
    7. 'ey' → logprob: -7.533719539642334
    8. ')' → logprob: -8.033719062805176
    9. 'w' → logprob: -9.158719062805176
    10. '_k' → logprob: -9.283719062805176

Token 101: ' keywords' (ID: 29778)
  Prédit: 'keywords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'keywords' → logprob: -0.313345730304718
    2. ' keywords' → logprob: -1.3133456707000732
    3. 'text' → logprob: -10.438345909118652
    4. 'k' → logprob: -10.813345909118652
    5. '_keywords' → logprob: -11.438345909118652
    6. 'keyword' → logprob: -12.188345909118652
    7. ' text' → logprob: -12.438345909118652
    8. ' ' → logprob: -12.563345909118652
    9. ' keyword' → logprob: -13.188345909118652
    10. ')' → logprob: -13.188345909118652

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.37500286102295
    3. ' )' → logprob: -14.25000286102295
    4. '))' → logprob: -15.75000286102295
    5. ')

' → logprob: -17.250001907348633
    6. ')return' → logprob: -17.250001907348633
    7. ')`' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.875001907348633
    9. ')}' → logprob: -18.500001907348633
    10. ')**' → logprob: -19.500001907348633

Token 103: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5064067244529724
    2. '
' → logprob: -1.0064067840576172
    3. '

' → logprob: -3.756406784057617
    4. '```' → logprob: -5.756406784057617
    5. '<|end|>' → logprob: -6.506406784057617
    6. 'for' → logprob: -7.381406784057617
    7. 'import' → logprob: -8.006406784057617
    8. 'text' → logprob: -8.006406784057617
    9. '  
' → logprob: -8.131406784057617
    10. '
' → logprob: -8.131406784057617

Token 104: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4853811264038086
    2. ' line' → logprob: -0.9853811264038086
    3. ' arg' → logprob: -5.360381126403809
    4. ' i' → logprob: -5.860381126403809
    5. ' text' → logprob: -6.610381126403809
    6. ' sys' → logprob: -7.485381126403809
    7. ' s' → logprob: -7.735381126403809
    8. ' argv' → logprob: -8.360381126403809
    9. ' message' → logprob: -8.735381126403809
    10. ' _' → logprob: -8.735381126403809

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02914918214082718
    2. ' ' → logprob: -4.029149055480957
    3. 'in' → logprob: -4.529149055480957
    4. ' i' → logprob: -10.404149055480957
    5. '  ' → logprob: -10.654149055480957
    6. ' ,' → logprob: -10.779149055480957
    7. ',' → logprob: -11.154149055480957
    8. '_' → logprob: -11.529149055480957
    9. '	in' → logprob: -11.904149055480957
    10. '<|end|>' → logprob: -11.904149055480957

Token 106: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3132711350917816
    2. ' sys' → logprob: -1.313271164894104
    3. '	sys' → logprob: -12.813271522521973
    4. '=sys' → logprob: -12.813271522521973
    5. '(sys' → logprob: -13.063271522521973
    6. '```' → logprob: -14.563271522521973
    7. 'stdin' → logprob: -15.063271522521973
    8. 'open' → logprob: -15.188271522521973
    9. 's' → logprob: -15.813271522521973
    10. 'iter' → logprob: -15.813271522521973

Token 107: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0033257647883147
    2. '.' → logprob: -6.378325939178467
    3. '.argv' → logprob: -7.128325939178467
    4. '.readline' → logprob: -7.753325939178467
    5. ' .' → logprob: -8.003325462341309
    6. '.stdout' → logprob: -10.753325462341309
    7. '.readlines' → logprob: -11.128325462341309
    8. 'stdin' → logprob: -12.128325462341309
    9. ' stdin' → logprob: -12.378325462341309
    10. '.std' → logprob: -12.878325462341309

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28450268507003784
    2. '.readline' → logprob: -1.4095027446746826
    3. '.' → logprob: -6.7845025062561035
    4. '.readlines' → logprob: -7.1595025062561035
    5. ':
' → logprob: -7.6595025062561035
    6. ' in' → logprob: -8.034502983093262
    7. ' :' → logprob: -8.034502983093262
    8. ' readline' → logprob: -9.284502983093262
    9. '.strip' → logprob: -10.409502983093262
    10. ' .' → logprob: -10.659502983093262

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008620307198725641
    2. '    
' → logprob: -7.750862121582031
    3. ' text' → logprob: -8.250862121582031
    4. ' line' → logprob: -9.500862121582031
    5. ' decrypted' → logprob: -11.000862121582031
    6. 'text' → logprob: -11.750862121582031
    7. '   ' → logprob: -11.750862121582031
    8. '    ' → logprob: -12.000862121582031
    9. ' readline' → logprob: -12.000862121582031
    10. '       ' → logprob: -12.250862121582031

Token 110: ' line' (ID: 2543)
  Prédit: ' decrypted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decrypted' → logprob: -0.5696011781692505
    2. '   ' → logprob: -1.4446011781692505
    3. ' line' → logprob: -2.444601058959961
    4. ' text' → logprob: -2.694601058959961
    5. ' plaintext' → logprob: -3.694601058959961
    6. 'text' → logprob: -4.819601058959961
    7. 'plaintext' → logprob: -5.694601058959961
    8. ' stripped' → logprob: -6.444601058959961
    9. '    ' → logprob: -6.819601058959961
    10. 'de' → logprob: -6.819601058959961

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5250629186630249
    2. '=' → logprob: -0.9000629186630249
    3. '.strip' → logprob: -6.5250630378723145
    4. '_strip' → logprob: -8.525062561035156
    5. '.rstrip' → logprob: -9.400062561035156
    6. '_' → logprob: -9.900062561035156
    7. 'rstrip' → logprob: -10.150062561035156
    8. 'strip' → logprob: -10.525062561035156
    9. '.' → logprob: -10.650062561035156
    10. '_str' → logprob: -11.650062561035156

Token 112: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.313315212726593
    2. 'line' → logprob: -1.3133151531219482
    3. 'decrypt' → logprob: -10.313315391540527
    4. ' decrypt' → logprob: -11.938315391540527
    5. '	line' → logprob: -12.563315391540527
    6. '   ' → logprob: -12.688315391540527
    7. '(line' → logprob: -13.688315391540527
    8. 'de' → logprob: -13.938315391540527
    9. '=line' → logprob: -14.188315391540527
    10. ' readline' → logprob: -14.563315391540527

Token 113: '.rstrip' (ID: 161629)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.101593516767025
    2. '.rstrip' → logprob: -2.351593494415283
    3. '.' → logprob: -6.601593494415283
    4. 'rstrip' → logprob: -10.976593971252441
    5. ' .' → logprob: -12.601593971252441
    6. 'strip' → logprob: -12.976593971252441
    7. '.chomp' → logprob: -13.101593971252441
    8. '.decode' → logprob: -13.976593971252441
    9. '.readline' → logprob: -14.476593971252441
    10. '.lower' → logprob: -14.601593971252441

Token 114: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0248726774007082
    2. '('\' → logprob: -3.7748727798461914
    3. '()
' → logprob: -7.149872779846191
    4. '()\' → logprob: -7.524872779846191
    5. '("\' → logprob: -8.774872779846191
    6. '(' → logprob: -9.024872779846191
    7. '('' → logprob: -11.399872779846191
    8. '()

' → logprob: -12.149872779846191
    9. '()
' → logprob: -13.399872779846191
    10. '()`' → logprob: -13.399872779846191

Token 115: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.65101717156358e-05
    2. '\n' → logprob: -9.250096321105957
    3. 'r' → logprob: -15.000096321105957
    4. 'newline' → logprob: -17.125097274780273
    5. ' n' → logprob: -18.375097274780273
    6. ')' → logprob: -18.500097274780273
    7. '\' → logprob: -19.375097274780273
    8. '012' → logprob: -19.500097274780273
    9. '')' → logprob: -19.500097274780273
    10. '
' → logprob: -20.000097274780273

Token 116: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06270880252122879
    2. '')' → logprob: -2.812708854675293
    3. ')
' → logprob: -7.562708854675293
    4. '')
' → logprob: -8.562708854675293
    5. ' )' → logprob: -11.187708854675293
    6. '")' → logprob: -11.312708854675293
    7. ')
' → logprob: -13.812708854675293
    8. ')')
' → logprob: -14.187708854675293
    9. '   ' → logprob: -14.312708854675293
    10. ')

' → logprob: -14.437708854675293

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038156937807798386
    2. ' for' → logprob: -3.6631569862365723
    3. 'for' → logprob: -5.163156986236572
    4. '    
' → logprob: -6.038156986236572
    5. 'shift' → logprob: -6.538156986236572
    6. '    ' → logprob: -7.663156986236572
    7. '
' → logprob: -7.788156986236572
    8. ' shift' → logprob: -8.038156509399414
    9. ' decrypted' → logprob: -8.788156509399414
    10. ' ' → logprob: -9.038156509399414

Token 118: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09862660616636276
    2. ' for' → logprob: -3.0986266136169434
    3. 'de' → logprob: -3.5986266136169434
    4. '   ' → logprob: -5.098626613616943
    5. 'if' → logprob: -5.223626613616943
    6. ' decrypted' → logprob: -5.598626613616943
    7. 'shift' → logprob: -5.848626613616943
    8. 'plaintext' → logprob: -7.223626613616943
    9. 'found' → logprob: -7.348626613616943
    10. 'print' → logprob: -7.723626613616943

Token 119: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.00013131031300872564
    2. 'shift' → logprob: -9.000131607055664
    3. ' ' → logprob: -13.125131607055664
    4. ' range' → logprob: -13.375131607055664
    5. ' s' → logprob: -14.125131607055664
    6. '_shift' → logprob: -14.250131607055664
    7. ' shifts' → logprob: -14.375131607055664
    8. '```' → logprob: -15.125131607055664
    9. ' i' → logprob: -15.250131607055664
    10. '.shift' → logprob: -15.250131607055664

Token 120: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001352379797026515
    2. ' ' → logprob: -7.001352310180664
    3. 'in' → logprob: -7.751352310180664
    4. ' i' → logprob: -12.376352310180664
    5. 's' → logprob: -13.626352310180664
    6. '	in' → logprob: -13.751352310180664
    7. 'range' → logprob: -14.126352310180664
    8. ' range' → logprob: -14.626352310180664
    9. '  ' → logprob: -14.751352310180664
    10. '<|end|>' → logprob: -14.876352310180664

Token 121: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002477200934663415
    2. 'range' → logprob: -6.002477169036865
    3. '	range' → logprob: -13.752477645874023
    4. ' ' → logprob: -14.877477645874023
    5. '(range' → logprob: -15.627477645874023
    6. ' xrange' → logprob: -18.252477645874023
    7. '   ' → logprob: -18.627477645874023
    8. ' ' → logprob: -19.002477645874023
    9. '```' → logprob: -19.377477645874023
    10. ' rang' → logprob: -20.002477645874023

Token 122: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1875571544806007e-05
    2. ' (' → logprob: -12.250011444091797
    3. '32' → logprob: -13.000011444091797
    4. '(
' → logprob: -13.375011444091797
    5. '16' → logprob: -14.000011444091797
    6. '1' → logprob: -14.125011444091797
    7. '26' → logprob: -14.750011444091797
    8. '18' → logprob: -15.750011444091797
    9. '24' → logprob: -15.875011444091797
    10. '36' → logprob: -16.375011444091797

Token 123: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.03350195661187172
    2. '1' → logprob: -3.5335018634796143
    3. '27' → logprob: -5.908502101898193
    4. ' ' → logprob: -6.908502101898193
    5. '   ' → logprob: -11.533501625061035
    6. '0' → logprob: -12.158501625061035
    7. ')' → logprob: -12.783501625061035
    8. '-' → logprob: -13.158501625061035
    9. '```' → logprob: -13.158501625061035
    10. '
' → logprob: -13.408501625061035

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009596837684512138
    2. '):
' → logprob: -5.384596824645996
    3. ' ):' → logprob: -5.509596824645996
    4. ':' → logprob: -7.759596824645996
    5. ')' → logprob: -7.884596824645996
    6. '   ' → logprob: -10.259596824645996
    7. ' ):
' → logprob: -10.509596824645996
    8. '):
' → logprob: -10.509596824645996
    9. ' :' → logprob: -12.134596824645996
    10. ' ' → logprob: -12.259596824645996

Token 125: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5322062969207764
    2. '       ' → logprob: -0.9072062969207764
    3. ' :' → logprob: -5.2822065353393555
    4. '   ' → logprob: -6.2822065353393555
    5. ':
' → logprob: -7.0322065353393555
    6. '    ' → logprob: -8.157206535339355
    7. '):' → logprob: -8.282206535339355
    8. '<|end|>' → logprob: -8.532206535339355
    9. '        
' → logprob: -9.782206535339355
    10. ' :
' → logprob: -9.782206535339355

Token 126: ' decoded' (ID: 58891)
  Prédit: ' decrypted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decrypted' → logprob: -0.21592988073825836
    2. '       ' → logprob: -2.4659299850463867
    3. 'de' → logprob: -2.4659299850463867
    4. 'decoded' (adapté à ' decoded') → logprob: -5.465929985046387
    5. ' plaintext' → logprob: -5.590929985046387
    6. ' de' → logprob: -5.715929985046387
    7. ' decoded' → logprob: -5.840929985046387
    8. ' text' → logprob: -5.840929985046387
    9. 'plaintext' → logprob: -5.840929985046387
    10. 'text' → logprob: -6.465929985046387

Token 127: ' =' (ID: 314)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.5246003270149231
    2. ' =' → logprob: -1.1496002674102783
    3. '=' → logprob: -3.2746002674102783
    4. '_' → logprob: -3.3996002674102783
    5. '_line' → logprob: -4.024600505828857
    6. 'text' → logprob: -6.274600505828857
    7. '=line' → logprob: -8.3996000289917
    8. ' ' → logprob: -9.6496000289917
    9. '_=' → logprob: -10.2746000289917
    10. '_txt' → logprob: -10.8996000289917

Token 128: ' decrypt' (ID: 81444)
  Prédit: ' decrypt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' decrypt' → logprob: -0.029753033071756363
    2. 'decrypt' → logprob: -3.5297529697418213
    3. '.decrypt' → logprob: -13.279752731323242
    4. 'de' → logprob: -15.029752731323242
    5. ' decrypted' → logprob: -15.029752731323242
    6. 'Decrypt' → logprob: -15.654752731323242
    7. '   ' → logprob: -17.654752731323242
    8. '(de' → logprob: -17.654752731323242
    9. ' ' → logprob: -17.779752731323242
    10. '	de' → logprob: -17.904752731323242

Token 129: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.005255695432424545
    2. '(' → logprob: -5.255255699157715
    3. '(text' → logprob: -11.005255699157715
    4. '(
' → logprob: -12.630255699157715
    5. '(decoded' → logprob: -13.630255699157715
    6. '(lines' → logprob: -15.880255699157715
    7. '(l' → logprob: -16.2552547454834
    8. '(

' → logprob: -16.3802547454834
    9. ' (' → logprob: -16.3802547454834
    10. '(Line' → logprob: -16.5052547454834

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',line' → logprob: -13.87501049041748
    4. ',
' → logprob: -15.62501049041748
    5. '',' → logprob: -15.75001049041748
    6. '   ' → logprob: -16.625009536743164
    7. '(' → logprob: -17.750009536743164
    8. '",' → logprob: -17.875009536743164
    9. ',",' → logprob: -18.000009536743164
    10. '```' → logprob: -18.125009536743164

Token 131: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.3485102951526642
    2. 'shift' → logprob: -1.2235102653503418
    3. ' ' → logprob: -9.9735107421875
    4. ')' → logprob: -11.7235107421875
    5. '26' → logprob: -12.9735107421875
    6. ' 
' → logprob: -13.4735107421875
    7. ' ' → logprob: -13.7235107421875
    8. '    ' → logprob: -13.8485107421875
    9. '.shift' → logprob: -14.2235107421875
    10. ' )' → logprob: -14.2235107421875

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011110189370810986
    2. ')
' → logprob: -4.511110305786133
    3. ')
' → logprob: -9.886110305786133
    4. ')

' → logprob: -12.261110305786133
    5. '       ' → logprob: -12.386110305786133
    6. ' )' → logprob: -13.511110305786133
    7. '   ' → logprob: -14.761110305786133
    8. ' )
' → logprob: -15.261110305786133
    9. ')`' → logprob: -15.636110305786133
    10. ')`
' → logprob: -16.386110305786133

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008765248581767082
    2. '
' → logprob: -5.63376522064209
    3. '        
' → logprob: -5.88376522064209
    4. '<|end|>' → logprob: -6.38376522064209
    5. ' if' → logprob: -8.50876522064209
    6. '  
' → logprob: -8.63376522064209
    7. ' 
' → logprob: -9.38376522064209
    8. 'if' → logprob: -10.13376522064209
    9. '    
' → logprob: -10.75876522064209
    10. '<|end|>' → logprob: -10.88376522064209

Token 134: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7264648079872131
    2. ' if' → logprob: -0.8514648079872131
    3. '       ' → logprob: -2.4764647483825684
    4. '   ' → logprob: -5.476464748382568
    5. ' ' → logprob: -7.851464748382568
    6. '
' → logprob: -7.976464748382568
    7. '	if' → logprob: -8.601465225219727
    8. '        
' → logprob: -9.226465225219727
    9. ' 
' → logprob: -9.476465225219727
    10. '        ' → logprob: -9.851465225219727

Token 135: ' contains' (ID: 8895)
  Prédit: ' contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.001332263695076108
    2. 'contains' → logprob: -6.6263322830200195
    3. ' ' → logprob: -13.00133228302002
    4. ' contain' → logprob: -13.37633228302002
    5. ' ' → logprob: -13.87633228302002
    6. '"' → logprob: -14.62633228302002
    7. ' contiene' → logprob: -15.50133228302002
    8. ' contained' → logprob: -16.001331329345703
    9. '_contains' → logprob: -16.001331329345703
    10. ' '' → logprob: -16.126331329345703

Token 136: '_keyword' (ID: 117000)
  Prédit: '_keyword'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keyword' → logprob: -0.012876295484602451
    2. '_' → logprob: -4.512876510620117
    3. '_key' → logprob: -6.387876510620117
    4. '_keywords' → logprob: -9.887876510620117
    5. '_k' → logprob: -10.887876510620117
    6. '(keyword' → logprob: -11.262876510620117
    7. '_kw' → logprob: -11.512876510620117
    8. '(' → logprob: -11.637876510620117
    9. '"_' → logprob: -11.762876510620117
    10. '_word' → logprob: -12.387876510620117

Token 137: '(decoded' (ID: 189285)
  Prédit: '(decoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decoded' → logprob: -0.0182020366191864
    2. '(' → logprob: -4.01820182800293
    3. ' (' → logprob: -10.14320182800293
    4. '(
' → logprob: -11.89320182800293
    5. '(encoded' → logprob: -13.39320182800293
    6. '(de' → logprob: -13.76820182800293
    7. '(

' → logprob: -14.01820182800293
    8. '(dec' → logprob: -14.64320182800293
    9. '("("' → logprob: -14.64320182800293
    10. 'decoded' → logprob: -15.01820182800293

Token 138: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005483825691044331
    2. '):
' → logprob: -5.880483627319336
    3. ')' → logprob: -6.255483627319336
    4. ' ):' → logprob: -7.505483627319336
    5. '(decoded' → logprob: -9.380483627319336
    6. '   ' → logprob: -10.255483627319336
    7. ''):' → logprob: -10.755483627319336
    8. ':' → logprob: -11.005483627319336
    9. '):
' → logprob: -11.880483627319336
    10. '):

' → logprob: -11.880483627319336

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031815171241760254
    2. '            
' → logprob: -6.253181457519531
    3. '
' → logprob: -7.378181457519531
    4. 'print' → logprob: -7.878181457519531
    5. ' print' → logprob: -9.253181457519531
    6. '        
' → logprob: -10.128181457519531
    7. '<|end|>' → logprob: -10.878181457519531
    8. '       ' → logprob: -11.378181457519531
    9. ':
' → logprob: -11.503181457519531
    10. '    
' → logprob: -11.628181457519531

Token 140: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1341780424118042
    2. 'print' (adapté à ' print') → logprob: -2.5091781616210938
    3. '           ' → logprob: -3.1341781616210938
    4. '               ' → logprob: -8.009178161621094
    5. '
' → logprob: -8.509178161621094
    6. '       ' → logprob: -9.009178161621094
    7. '```' → logprob: -11.759178161621094
    8. '   ' → logprob: -11.884178161621094
    9. '            
' → logprob: -12.134178161621094
    10. '	print' → logprob: -12.509178161621094

Token 141: '(decoded' (ID: 189285)
  Prédit: '(decoded'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(decoded' → logprob: -0.0015079588629305363
    2. '(' → logprob: -6.501507759094238
    3. '()' → logprob: -13.376507759094238
    4. '('' → logprob: -13.751507759094238
    5. 'decoded' → logprob: -13.751507759094238
    6. '(f' → logprob: -14.001507759094238
    7. '(line' → logprob: -14.251507759094238
    8. '(encoded' → logprob: -15.876507759094238
    9. '("' → logprob: -16.251508712768555
    10. '(dec' → logprob: -16.376508712768555

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ')
' → logprob: -11.125017166137695
    3. ' )' → logprob: -13.250017166137695
    4. '))' → logprob: -14.875017166137695
    5. '')' → logprob: -16.000017166137695
    6. ')`' → logprob: -16.125017166137695
    7. '`)' → logprob: -17.125017166137695
    8. '()' → logprob: -17.250017166137695
    9. '   ' → logprob: -17.250017166137695
    10. ')}' → logprob: -17.250017166137695

Token 143: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.018152983859181404
    2. ' break' → logprob: -4.018153190612793
    3. '	break' → logprob: -13.018153190612793
    4. 'exit' → logprob: -15.018153190612793
    5. '           ' → logprob: -15.643153190612793
    6. '   ' → logprob: -15.893153190612793
    7. '_break' → logprob: -16.143152236938477
    8. '       ' → logprob: -16.768152236938477
    9. '
' → logprob: -16.893152236938477
    10. '```' → logprob: -17.393152236938477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 142
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 130
Précision stricte (1ère position): 49.30%
Précision adaptée (1ère position): 52.82%
Précision (top 10): 91.55%
================================================================================
